var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<0,11,1>",(console.log)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (console) != "undefined") {_RecordType("<0,7,1>",(console)); Inst1++; } } catch(e) {}
console.log("Test that finally behaviour is correct.");
a = {
  f: function () {
    return true;
  }
};
try { if (Inst2 <= 1000 && typeof (a) != "undefined") {_RecordType("<56,57,2>",(a)); Inst2++; } } catch(e) {}

a.f.toString = function () {
  return "Fail";
};
try { if (Inst3 <= 1000 && typeof (a.f.toString) != "undefined") {_RecordType("<106,118,8>",(a.f.toString)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (a.f) != "undefined") {_RecordType("<106,109,8>",(a.f)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (a) != "undefined") {_RecordType("<106,107,8>",(a)); Inst5++; } } catch(e) {}

try { if (Inst6 <= 1000 && typeof (f) != "undefined") {_RecordType("<165,166,12>",(f)); Inst6++; } } catch(e) {}
function f() {
  try {
try { if (Inst7 <= 1000 && typeof (a.f) != "undefined") {_RecordType("<183,186,14>",(a.f)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (a) != "undefined") {_RecordType("<183,184,14>",(a)); Inst8++; } } catch(e) {}
    a.f();
try { if (Inst9 <= 1000 && typeof (a.f) != "undefined") {_RecordType("<194,197,15>",(a.f)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (a) != "undefined") {_RecordType("<194,195,15>",(a)); Inst10++; } } catch(e) {}
    a.f();
try { if (Inst11 <= 1000 && typeof (a.f) != "undefined") {_RecordType("<212,215,16>",(a.f)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (a) != "undefined") {_RecordType("<212,213,16>",(a)); Inst12++; } } catch(e) {}
    return a.f();
  } finally {
try { if (Inst13 <= 1000 && typeof (a.f) != "undefined") {_RecordType("<237,240,18>",(a.f)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (a) != "undefined") {_RecordType("<237,238,18>",(a)); Inst14++; } } catch(e) {}
    a.f();
  }
}

try { if (Inst15 <= 1000 && typeof (f) != "undefined") {_RecordType("<251,252,22>",(f)); Inst15++; } } catch(e) {}
f();

(function () {
  var a = true;
try { if (Inst16 <= 1000 && typeof (a) != "undefined") {_RecordType("<278,279,25>",(a)); Inst16++; } } catch(e) {}

  try {
try { if (Inst17 <= 1000 && typeof (a) != "undefined") {_RecordType("<308,309,28>",(a)); Inst17++; } } catch(e) {}
    return a;
  } finally {
    a = false;
try { if (Inst18 <= 1000 && typeof (a) != "undefined") {_RecordType("<329,330,30>",(a)); Inst18++; } } catch(e) {}
  }
})();

try { if (Inst22 <= 1000 && typeof (e) != "undefined") {_RecordType("<477,478,44>",(e)); Inst22++; } } catch(e) {}
try {
  (function () {
    var a = 'PASS';
try { if (Inst19 <= 1000 && typeof (a) != "undefined") {_RecordType("<382,383,36>",(a)); Inst19++; } } catch(e) {}

    try {
try { if (Inst20 <= 1000 && typeof (a) != "undefined") {_RecordType("<417,418,39>",(a)); Inst20++; } } catch(e) {}
      throw a;
    } finally {
      a = 'FAIL';
try { if (Inst21 <= 1000 && typeof (a) != "undefined") {_RecordType("<442,443,41>",(a)); Inst21++; } } catch(e) {}
    }
  })();
} catch (e) {
  ;
}

