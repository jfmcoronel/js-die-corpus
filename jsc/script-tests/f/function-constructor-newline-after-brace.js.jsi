var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<0,11,1>",(console.log)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (console) != "undefined") {_RecordType("<0,7,1>",(console)); Inst1++; } } catch(e) {}
console.log("This test checks that the Function constructor places a newline after the opening brace, for compatibility reasons. It passes if there are no syntax error exceptions.");

try { if (Inst2 <= 1000 && typeof (addToFunction) != "undefined") {_RecordType("<193,206,3>",(addToFunction)); Inst2++; } } catch(e) {}
function addToFunction(oldFunction, name) {
try { if (Inst3 <= 1000 && typeof (oldFunction) != "undefined") {_RecordType("<207,218,3>",(oldFunction)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (name) != "undefined") {_RecordType("<220,224,3>",(name)); Inst4++; } } catch(e) {}
  var tempString = "";
try { if (Inst5 <= 1000 && typeof (tempString) != "undefined") {_RecordType("<234,244,4>",(tempString)); Inst5++; } } catch(e) {}

try { if (Inst6 <= 1000 && typeof (oldFunction) != "undefined") {_RecordType("<258,269,6>",(oldFunction)); Inst6++; } } catch(e) {}
  if (oldFunction != null) {
try { if (Inst8 <= 1000 && typeof (oldFunction.toString) != "undefined") {_RecordType("<298,318,7>",(oldFunction.toString)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (oldFunction) != "undefined") {_RecordType("<298,309,7>",(oldFunction)); Inst9++; } } catch(e) {}
    tempString = oldFunction.toString();
try { if (Inst7 <= 1000 && typeof (tempString) != "undefined") {_RecordType("<285,295,7>",(tempString)); Inst7++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (tempString.indexOf) != "undefined") {_RecordType("<338,356,8>",(tempString.indexOf)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (tempString) != "undefined") {_RecordType("<338,348,8>",(tempString)); Inst12++; } } catch(e) {}
    var index = tempString.indexOf("{") + 2;
try { if (Inst10 <= 1000 && typeof (index) != "undefined") {_RecordType("<330,335,8>",(index)); Inst10++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (tempString.substr) != "undefined") {_RecordType("<384,401,9>",(tempString.substr)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (tempString) != "undefined") {_RecordType("<384,394,9>",(tempString)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (index) != "undefined") {_RecordType("<402,407,9>",(index)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (tempString.length) != "undefined") {_RecordType("<409,426,9>",(tempString.length)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (tempString) != "undefined") {_RecordType("<409,419,9>",(tempString)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (index) != "undefined") {_RecordType("<429,434,9>",(index)); Inst19++; } } catch(e) {}
    tempString = tempString.substr(index, tempString.length - index - 2);
try { if (Inst13 <= 1000 && typeof (tempString) != "undefined") {_RecordType("<371,381,9>",(tempString)); Inst13++; } } catch(e) {}
  }

try { if (Inst20 <= 1000 && typeof (Function) != "undefined") {_RecordType("<459,467,12>",(Function)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (name) != "undefined") {_RecordType("<468,472,12>",(name)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (tempString) != "undefined") {_RecordType("<498,508,12>",(tempString)); Inst22++; } } catch(e) {}
  return new Function(name + '_obj.initialize();' + tempString);
}

try { if (Inst24 <= 1000 && typeof (addToFunction) != "undefined") {_RecordType("<523,536,15>",(addToFunction)); Inst24++; } } catch(e) {}
var f1 = addToFunction(null, "f1");
try { if (Inst23 <= 1000 && typeof (f1) != "undefined") {_RecordType("<518,520,15>",(f1)); Inst23++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (addToFunction) != "undefined") {_RecordType("<550,563,16>",(addToFunction)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (f1) != "undefined") {_RecordType("<564,566,16>",(f1)); Inst26++; } } catch(e) {}
addToFunction(f1, "f2");

try { if (Inst27 <= 1000 && typeof (addToFunctionWithArgument) != "undefined") {_RecordType("<585,610,18>",(addToFunctionWithArgument)); Inst27++; } } catch(e) {}
function addToFunctionWithArgument(oldFunction, name) {
try { if (Inst28 <= 1000 && typeof (oldFunction) != "undefined") {_RecordType("<611,622,18>",(oldFunction)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (name) != "undefined") {_RecordType("<624,628,18>",(name)); Inst29++; } } catch(e) {}
  var tempString = "";
try { if (Inst30 <= 1000 && typeof (tempString) != "undefined") {_RecordType("<638,648,19>",(tempString)); Inst30++; } } catch(e) {}

try { if (Inst31 <= 1000 && typeof (oldFunction) != "undefined") {_RecordType("<662,673,21>",(oldFunction)); Inst31++; } } catch(e) {}
  if (oldFunction != null) {
try { if (Inst33 <= 1000 && typeof (oldFunction.toString) != "undefined") {_RecordType("<702,722,22>",(oldFunction.toString)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (oldFunction) != "undefined") {_RecordType("<702,713,22>",(oldFunction)); Inst34++; } } catch(e) {}
    tempString = oldFunction.toString();
try { if (Inst32 <= 1000 && typeof (tempString) != "undefined") {_RecordType("<689,699,22>",(tempString)); Inst32++; } } catch(e) {}
try { if (Inst36 <= 1000 && typeof (tempString.indexOf) != "undefined") {_RecordType("<742,760,23>",(tempString.indexOf)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (tempString) != "undefined") {_RecordType("<742,752,23>",(tempString)); Inst37++; } } catch(e) {}
    var index = tempString.indexOf("{") + 2;
try { if (Inst35 <= 1000 && typeof (index) != "undefined") {_RecordType("<734,739,23>",(index)); Inst35++; } } catch(e) {}
try { if (Inst39 <= 1000 && typeof (tempString.substr) != "undefined") {_RecordType("<788,805,24>",(tempString.substr)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (tempString) != "undefined") {_RecordType("<788,798,24>",(tempString)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (index) != "undefined") {_RecordType("<806,811,24>",(index)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (tempString.length) != "undefined") {_RecordType("<813,830,24>",(tempString.length)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (tempString) != "undefined") {_RecordType("<813,823,24>",(tempString)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (index) != "undefined") {_RecordType("<833,838,24>",(index)); Inst44++; } } catch(e) {}
    tempString = tempString.substr(index, tempString.length - index - 2);
try { if (Inst38 <= 1000 && typeof (tempString) != "undefined") {_RecordType("<775,785,24>",(tempString)); Inst38++; } } catch(e) {}
  }

try { if (Inst45 <= 1000 && typeof (Function) != "undefined") {_RecordType("<863,871,27>",(Function)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (name) != "undefined") {_RecordType("<879,883,27>",(name)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (tempString) != "undefined") {_RecordType("<909,919,27>",(tempString)); Inst47++; } } catch(e) {}
  return new Function("arg", name + '_obj.initialize();' + tempString);
}

try { if (Inst49 <= 1000 && typeof (addToFunctionWithArgument) != "undefined") {_RecordType("<934,959,30>",(addToFunctionWithArgument)); Inst49++; } } catch(e) {}
var g1 = addToFunctionWithArgument(null, "g1");
try { if (Inst48 <= 1000 && typeof (g1) != "undefined") {_RecordType("<929,931,30>",(g1)); Inst48++; } } catch(e) {}
try { if (Inst50 <= 1000 && typeof (addToFunctionWithArgument) != "undefined") {_RecordType("<973,998,31>",(addToFunctionWithArgument)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (g1) != "undefined") {_RecordType("<999,1001,31>",(g1)); Inst51++; } } catch(e) {}
addToFunctionWithArgument(g1, "g2");

