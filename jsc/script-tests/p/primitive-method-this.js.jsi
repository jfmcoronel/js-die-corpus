var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<0,11,1>",(console.log)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (console) != "undefined") {_RecordType("<0,7,1>",(console)); Inst1++; } } catch(e) {}
console.log("This test checks that methods called directly on primitive types get the wrapper, not the primitive, as the 'this' object.");

String.prototype.thisType = function () {
  return typeof this;
};
try { if (Inst2 <= 1000 && typeof (String.prototype.thisType) != "undefined") {_RecordType("<140,165,3>",(String.prototype.thisType)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (String.prototype) != "undefined") {_RecordType("<140,156,3>",(String.prototype)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (String) != "undefined") {_RecordType("<140,146,3>",(String)); Inst4++; } } catch(e) {}

Number.prototype.thisType = function () {
  return typeof this;
};
try { if (Inst5 <= 1000 && typeof (Number.prototype.thisType) != "undefined") {_RecordType("<208,233,7>",(Number.prototype.thisType)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Number.prototype) != "undefined") {_RecordType("<208,224,7>",(Number.prototype)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Number) != "undefined") {_RecordType("<208,214,7>",(Number)); Inst7++; } } catch(e) {}

Boolean.prototype.thisType = function () {
  return typeof this;
};
try { if (Inst8 <= 1000 && typeof (Boolean.prototype.thisType) != "undefined") {_RecordType("<276,302,11>",(Boolean.prototype.thisType)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Boolean.prototype) != "undefined") {_RecordType("<276,293,11>",(Boolean.prototype)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Boolean) != "undefined") {_RecordType("<276,283,11>",(Boolean)); Inst10++; } } catch(e) {}

try { if (Inst11 <= 1000 && typeof (2.1.thisType) != "undefined") {_RecordType("<345,357,15>",(2.1.thisType)); Inst11++; } } catch(e) {}
2.1.thisType();
try { if (Inst12 <= 1000 && typeof (2.3.thisType) != "undefined") {_RecordType("<361,373,16>",(2.3.thisType)); Inst12++; } } catch(e) {}
2.3.thisType();
try { if (Inst13 <= 1000 && typeof ('xxx'.thisType) != "undefined") {_RecordType("<377,391,17>",('xxx'.thisType)); Inst13++; } } catch(e) {}
'xxx'.thisType();
try { if (Inst14 <= 1000 && typeof (false.thisType) != "undefined") {_RecordType("<395,409,18>",(false.thisType)); Inst14++; } } catch(e) {}
false.thisType();

