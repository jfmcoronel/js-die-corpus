var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<0,11,1>",(console.log)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (console) != "undefined") {_RecordType("<0,7,1>",(console)); Inst1++; } } catch(e) {}
console.log('Test Promise nested microtasks.');
var globalObject = this;
try { if (Inst2 <= 1000 && typeof (globalObject) != "undefined") {_RecordType("<52,64,2>",(globalObject)); Inst2++; } } catch(e) {}
globalObject.jsTestIsAsync = true;
try { if (Inst3 <= 1000 && typeof (globalObject.jsTestIsAsync) != "undefined") {_RecordType("<73,99,3>",(globalObject.jsTestIsAsync)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (globalObject) != "undefined") {_RecordType("<73,85,3>",(globalObject)); Inst4++; } } catch(e) {}
var value1;
try { if (Inst5 <= 1000 && typeof (value1) != "undefined") {_RecordType("<112,118,4>",(value1)); Inst5++; } } catch(e) {}
var value2;
try { if (Inst6 <= 1000 && typeof (value2) != "undefined") {_RecordType("<124,130,5>",(value2)); Inst6++; } } catch(e) {}
var result;
try { if (Inst7 <= 1000 && typeof (result) != "undefined") {_RecordType("<136,142,6>",(result)); Inst7++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (Promise.resolve(42).then(function (v1) {
  value1 = v1;
  value1;

  try {
    value2;
  } catch (e) {
    ;
  }

  try {
    result;
  } catch (e) {
    ;
  }

  return Promise.resolve(84).then(function (v2) {
    value2 = v2;
    value2;

    try {
      result;
    } catch (e) {
      ;
    }

    return v2 * v1;
  });
}).then) != "undefined") {_RecordType("<144,475,7>",(Promise.resolve(42).then(function (v1) {
  value1 = v1;
  value1;

  try {
    value2;
  } catch (e) {
    ;
  }

  try {
    result;
  } catch (e) {
    ;
  }

  return Promise.resolve(84).then(function (v2) {
    value2 = v2;
    value2;

    try {
      result;
    } catch (e) {
      ;
    }

    return v2 * v1;
  });
}).then)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Promise.resolve(42).then) != "undefined") {_RecordType("<144,168,7>",(Promise.resolve(42).then)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Promise.resolve) != "undefined") {_RecordType("<144,159,7>",(Promise.resolve)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Promise) != "undefined") {_RecordType("<144,151,7>",(Promise)); Inst11++; } } catch(e) {}
Promise.resolve(42).then(function (v1) {
try { if (Inst12 <= 1000 && typeof (v1) != "undefined") {_RecordType("<179,181,7>",(v1)); Inst12++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (v1) != "undefined") {_RecordType("<196,198,8>",(v1)); Inst14++; } } catch(e) {}
  value1 = v1;
try { if (Inst13 <= 1000 && typeof (value1) != "undefined") {_RecordType("<187,193,8>",(value1)); Inst13++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (value1) != "undefined") {_RecordType("<202,208,9>",(value1)); Inst15++; } } catch(e) {}
  value1;

try { if (Inst17 <= 1000 && typeof (e) != "undefined") {_RecordType("<242,243,13>",(e)); Inst17++; } } catch(e) {}
  try {
try { if (Inst16 <= 1000 && typeof (value2) != "undefined") {_RecordType("<223,229,12>",(value2)); Inst16++; } } catch(e) {}
    value2;
  } catch (e) {
    ;
  }

try { if (Inst19 <= 1000 && typeof (e) != "undefined") {_RecordType("<289,290,19>",(e)); Inst19++; } } catch(e) {}
  try {
try { if (Inst18 <= 1000 && typeof (result) != "undefined") {_RecordType("<270,276,18>",(result)); Inst18++; } } catch(e) {}
    result;
  } catch (e) {
    ;
  }

try { if (Inst20 <= 1000 && typeof (Promise.resolve(84).then) != "undefined") {_RecordType("<314,338,23>",(Promise.resolve(84).then)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Promise.resolve) != "undefined") {_RecordType("<314,329,23>",(Promise.resolve)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Promise) != "undefined") {_RecordType("<314,321,23>",(Promise)); Inst22++; } } catch(e) {}
  return Promise.resolve(84).then(function (v2) {
try { if (Inst23 <= 1000 && typeof (v2) != "undefined") {_RecordType("<349,351,23>",(v2)); Inst23++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (v2) != "undefined") {_RecordType("<368,370,24>",(v2)); Inst25++; } } catch(e) {}
    value2 = v2;
try { if (Inst24 <= 1000 && typeof (value2) != "undefined") {_RecordType("<359,365,24>",(value2)); Inst24++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (value2) != "undefined") {_RecordType("<376,382,25>",(value2)); Inst26++; } } catch(e) {}
    value2;

try { if (Inst28 <= 1000 && typeof (e) != "undefined") {_RecordType("<422,423,29>",(e)); Inst28++; } } catch(e) {}
    try {
try { if (Inst27 <= 1000 && typeof (result) != "undefined") {_RecordType("<401,407,28>",(result)); Inst27++; } } catch(e) {}
      result;
    } catch (e) {
      ;
    }

try { if (Inst29 <= 1000 && typeof (v2) != "undefined") {_RecordType("<453,455,33>",(v2)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (v1) != "undefined") {_RecordType("<458,460,33>",(v1)); Inst30++; } } catch(e) {}
    return v2 * v1;
  });
}).then(function (r) {
try { if (Inst31 <= 1000 && typeof (r) != "undefined") {_RecordType("<486,487,35>",(r)); Inst31++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (r) != "undefined") {_RecordType("<502,503,36>",(r)); Inst33++; } } catch(e) {}
  result = r;
try { if (Inst32 <= 1000 && typeof (result) != "undefined") {_RecordType("<493,499,36>",(result)); Inst32++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof (result) != "undefined") {_RecordType("<507,513,37>",(result)); Inst34++; } } catch(e) {}
  result;
try { if (Inst35 <= 1000 && typeof (finishJSTest) != "undefined") {_RecordType("<517,529,38>",(finishJSTest)); Inst35++; } } catch(e) {}
  finishJSTest();
});
try { if (Inst36 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<537,548,40>",(console.log)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (console) != "undefined") {_RecordType("<537,544,40>",(console)); Inst37++; } } catch(e) {}
console.log('The promise is not fulfilled until after this function call executes.');

