var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<0,11,1>",(console.log)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (console) != "undefined") {_RecordType("<0,7,1>",(console)); Inst1++; } } catch(e) {}
console.log('Test Promise.resolve in non dom directory.');
var globalObject = this;
try { if (Inst2 <= 1000 && typeof (globalObject) != "undefined") {_RecordType("<63,75,2>",(globalObject)); Inst2++; } } catch(e) {}
globalObject.jsTestIsAsync = true;
try { if (Inst3 <= 1000 && typeof (globalObject.jsTestIsAsync) != "undefined") {_RecordType("<84,110,3>",(globalObject.jsTestIsAsync)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (globalObject) != "undefined") {_RecordType("<84,96,3>",(globalObject)); Inst4++; } } catch(e) {}
var value = {
  then: function (fulfillCallback, rejectCallback) {
try { if (Inst6 <= 1000 && typeof (fulfillCallback) != "undefined") {_RecordType("<151,166,5>",(fulfillCallback)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (rejectCallback) != "undefined") {_RecordType("<168,182,5>",(rejectCallback)); Inst7++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<190,201,6>",(console.log)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (console) != "undefined") {_RecordType("<190,197,6>",(console)); Inst9++; } } catch(e) {}
    console.log('value.then is called.');
    globalObject.thisValue = this;
try { if (Inst10 <= 1000 && typeof (globalObject.thisValue) != "undefined") {_RecordType("<232,254,7>",(globalObject.thisValue)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (globalObject) != "undefined") {_RecordType("<232,244,7>",(globalObject)); Inst11++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (thisValue) != "undefined") {_RecordType("<267,276,8>",(thisValue)); Inst12++; } } catch(e) {}
    thisValue;
try { if (Inst13 <= 1000 && typeof (fulfillCallback) != "undefined") {_RecordType("<282,297,9>",(fulfillCallback)); Inst13++; } } catch(e) {}
    fulfillCallback('hello');
  }
};
try { if (Inst5 <= 1000 && typeof (value) != "undefined") {_RecordType("<123,128,4>",(value)); Inst5++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (Promise) != "undefined") {_RecordType("<333,340,12>",(Promise)); Inst15++; } } catch(e) {}
var promise = new Promise(function (resolve) {
try { if (Inst16 <= 1000 && typeof (resolve) != "undefined") {_RecordType("<351,358,12>",(resolve)); Inst16++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (resolve) != "undefined") {_RecordType("<364,371,13>",(resolve)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (value) != "undefined") {_RecordType("<372,377,13>",(value)); Inst18++; } } catch(e) {}
  resolve(value);
});
try { if (Inst14 <= 1000 && typeof (promise) != "undefined") {_RecordType("<319,326,12>",(promise)); Inst14++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (promise.then) != "undefined") {_RecordType("<384,396,15>",(promise.then)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (promise) != "undefined") {_RecordType("<384,391,15>",(promise)); Inst20++; } } catch(e) {}
promise.then(function (result) {
try { if (Inst21 <= 1000 && typeof (result) != "undefined") {_RecordType("<407,413,15>",(result)); Inst21++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<419,430,16>",(console.log)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (console) != "undefined") {_RecordType("<419,426,16>",(console)); Inst23++; } } catch(e) {}
  console.log('fulfilled');
try { if (Inst26 <= 1000 && typeof (result) != "undefined") {_RecordType("<469,475,17>",(result)); Inst26++; } } catch(e) {}
  globalObject.result = result;
try { if (Inst24 <= 1000 && typeof (globalObject.result) != "undefined") {_RecordType("<447,466,17>",(globalObject.result)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (globalObject) != "undefined") {_RecordType("<447,459,17>",(globalObject)); Inst25++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (result) != "undefined") {_RecordType("<479,485,18>",(result)); Inst27++; } } catch(e) {}
  result;
try { if (Inst28 <= 1000 && typeof (finishJSTest) != "undefined") {_RecordType("<489,501,19>",(finishJSTest)); Inst28++; } } catch(e) {}
  finishJSTest();
}, function () {
try { if (Inst29 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<524,535,21>",(console.log)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (console) != "undefined") {_RecordType("<524,531,21>",(console)); Inst30++; } } catch(e) {}
  console.log('rejected');
try { if (Inst31 <= 1000 && typeof (finishJSTest) != "undefined") {_RecordType("<551,563,22>",(finishJSTest)); Inst31++; } } catch(e) {}
  finishJSTest();
});
try { if (Inst32 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<571,582,24>",(console.log)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (console) != "undefined") {_RecordType("<571,578,24>",(console)); Inst33++; } } catch(e) {}
console.log('The promise is not fulfilled until after this function call executes.');

