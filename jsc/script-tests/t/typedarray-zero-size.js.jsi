var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<0,11,1>",(console.log)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (console) != "undefined") {_RecordType("<0,7,1>",(console)); Inst1++; } } catch(e) {}
console.log("Tests that creating TypedArrays of length 0 doesn't cause us to crash.");
try { if (Inst3 <= 1000 && typeof (Uint8Array) != "undefined") {_RecordType("<103,113,2>",(Uint8Array)); Inst3++; } } catch(e) {}
var array = new Uint8Array(0);
try { if (Inst2 <= 1000 && typeof (array) != "undefined") {_RecordType("<91,96,2>",(array)); Inst2++; } } catch(e) {}

try { if (Inst4 <= 1000 && typeof (foo) != "undefined") {_RecordType("<128,131,4>",(foo)); Inst4++; } } catch(e) {}
function foo() {
try { if (Inst5 <= 1000 && typeof (Uint16Array) != "undefined") {_RecordType("<149,160,5>",(Uint16Array)); Inst5++; } } catch(e) {}
  return new Uint16Array(0);
}

var result = 0;
try { if (Inst6 <= 1000 && typeof (result) != "undefined") {_RecordType("<172,178,8>",(result)); Inst6++; } } catch(e) {}

for (var i = 4000; i > 0; i--) {
try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<194,195,10>",(i)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<204,205,10>",(i)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<211,212,10>",(i)); Inst9++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (foo) != "undefined") {_RecordType("<235,238,11>",(foo)); Inst11++; } } catch(e) {}
  var newArray = foo();
try { if (Inst10 <= 1000 && typeof (newArray) != "undefined") {_RecordType("<224,232,11>",(newArray)); Inst10++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (Array) != "undefined") {_RecordType("<265,270,12>",(Array)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<271,272,12>",(i)); Inst14++; } } catch(e) {}
  var otherArray = new Array(i);
try { if (Inst12 <= 1000 && typeof (otherArray) != "undefined") {_RecordType("<248,258,12>",(otherArray)); Inst12++; } } catch(e) {}

  for (var j = 0; j < i; ++j) {
try { if (Inst15 <= 1000 && typeof (j) != "undefined") {_RecordType("<287,288,14>",(j)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (j) != "undefined") {_RecordType("<294,295,14>",(j)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (i) != "undefined") {_RecordType("<298,299,14>",(i)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (j) != "undefined") {_RecordType("<303,304,14>",(j)); Inst18++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (j) != "undefined") {_RecordType("<328,329,15>",(j)); Inst21++; } } catch(e) {}
    otherArray[j] = j;
try { if (Inst19 <= 1000 && typeof (otherArray[j]) != "undefined") {_RecordType("<312,325,15>",(otherArray[j])); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (otherArray) != "undefined") {_RecordType("<312,322,15>",(otherArray)); Inst20++; } } catch(e) {}
  }

try { if (Inst23 <= 1000 && typeof (otherArray[i - 1]) != "undefined") {_RecordType("<348,365,18>",(otherArray[i - 1])); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (otherArray) != "undefined") {_RecordType("<348,358,18>",(otherArray)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<359,360,18>",(i)); Inst25++; } } catch(e) {}
  result += otherArray[i - 1];
try { if (Inst22 <= 1000 && typeof (result) != "undefined") {_RecordType("<338,344,18>",(result)); Inst22++; } } catch(e) {}
}

try { if (Inst26 <= 1000 && typeof (result) != "undefined") {_RecordType("<374,380,21>",(result)); Inst26++; } } catch(e) {}
if (result != 4000 * 3999 / 2) {
try { if (Inst27 <= 1000 && typeof (result) != "undefined") {_RecordType("<428,434,22>",(result)); Inst27++; } } catch(e) {}
  throw "Bad result: " + result;
}

