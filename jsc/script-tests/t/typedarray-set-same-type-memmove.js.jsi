var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<0,11,1>",(console.log)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (console) != "undefined") {_RecordType("<0,7,1>",(console)); Inst1++; } } catch(e) {}
console.log("Tests the code path of typedArray.set that bottoms out in memmove.");

try { if (Inst2 <= 1000 && typeof (foo) != "undefined") {_RecordType("<93,96,3>",(foo)); Inst2++; } } catch(e) {}
function foo(n) {
try { if (Inst3 <= 1000 && typeof (n) != "undefined") {_RecordType("<97,98,3>",(n)); Inst3++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (Int32Array) != "undefined") {_RecordType("<120,130,4>",(Int32Array)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (n) != "undefined") {_RecordType("<131,132,4>",(n)); Inst6++; } } catch(e) {}
  var array = new Int32Array(n + 1);
try { if (Inst4 <= 1000 && typeof (array) != "undefined") {_RecordType("<108,113,4>",(array)); Inst4++; } } catch(e) {}

  for (var i = 0; i < n; ++i) {
try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<151,152,6>",(i)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<158,159,6>",(i)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (n) != "undefined") {_RecordType("<162,163,6>",(n)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<167,168,6>",(i)); Inst10++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<192,193,7>",(i)); Inst13++; } } catch(e) {}
    array[i] = 42 + i;
try { if (Inst11 <= 1000 && typeof (array[i]) != "undefined") {_RecordType("<176,184,7>",(array[i])); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (array) != "undefined") {_RecordType("<176,181,7>",(array)); Inst12++; } } catch(e) {}
  }

try { if (Inst14 <= 1000 && typeof (array.set) != "undefined") {_RecordType("<202,211,10>",(array.set)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (array) != "undefined") {_RecordType("<202,207,10>",(array)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (array.subarray) != "undefined") {_RecordType("<212,226,10>",(array.subarray)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (array) != "undefined") {_RecordType("<212,217,10>",(array)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (n) != "undefined") {_RecordType("<230,231,10>",(n)); Inst18++; } } catch(e) {}
  array.set(array.subarray(0, n), 1);
try { if (Inst19 <= 1000 && typeof (array) != "undefined") {_RecordType("<247,252,11>",(array)); Inst19++; } } catch(e) {}
  return array;
}

try { if (Inst20 <= 1000 && typeof (bar) != "undefined") {_RecordType("<266,269,14>",(bar)); Inst20++; } } catch(e) {}
function bar(n) {
try { if (Inst21 <= 1000 && typeof (n) != "undefined") {_RecordType("<270,271,14>",(n)); Inst21++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (Int32Array) != "undefined") {_RecordType("<293,303,15>",(Int32Array)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (n) != "undefined") {_RecordType("<304,305,15>",(n)); Inst24++; } } catch(e) {}
  var array = new Int32Array(n + 1);
try { if (Inst22 <= 1000 && typeof (array) != "undefined") {_RecordType("<281,286,15>",(array)); Inst22++; } } catch(e) {}

  for (var i = 0; i < n; ++i) {
try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<324,325,17>",(i)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (i) != "undefined") {_RecordType("<331,332,17>",(i)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (n) != "undefined") {_RecordType("<335,336,17>",(n)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (i) != "undefined") {_RecordType("<340,341,17>",(i)); Inst28++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (i) != "undefined") {_RecordType("<369,370,18>",(i)); Inst32++; } } catch(e) {}
    array[i + 1] = 42 + i;
try { if (Inst29 <= 1000 && typeof (array[i + 1]) != "undefined") {_RecordType("<349,361,18>",(array[i + 1])); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (array) != "undefined") {_RecordType("<349,354,18>",(array)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (i) != "undefined") {_RecordType("<355,356,18>",(i)); Inst31++; } } catch(e) {}
  }

try { if (Inst33 <= 1000 && typeof (array.set) != "undefined") {_RecordType("<379,388,21>",(array.set)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (array) != "undefined") {_RecordType("<379,384,21>",(array)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (array.subarray) != "undefined") {_RecordType("<389,403,21>",(array.subarray)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (array) != "undefined") {_RecordType("<389,394,21>",(array)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (n) != "undefined") {_RecordType("<407,408,21>",(n)); Inst37++; } } catch(e) {}
  array.set(array.subarray(1, n + 1), 0);
try { if (Inst38 <= 1000 && typeof (array) != "undefined") {_RecordType("<428,433,22>",(array)); Inst38++; } } catch(e) {}
  return array;
}

try { if (Inst39 <= 1000 && typeof (arraysEqual) != "undefined") {_RecordType("<447,458,25>",(arraysEqual)); Inst39++; } } catch(e) {}
function arraysEqual(a, b) {
try { if (Inst40 <= 1000 && typeof (a) != "undefined") {_RecordType("<459,460,25>",(a)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (b) != "undefined") {_RecordType("<462,463,25>",(b)); Inst41++; } } catch(e) {}
try { if (Inst42 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<473,481,26>",(a.length)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (a) != "undefined") {_RecordType("<473,474,26>",(a)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (b.length) != "undefined") {_RecordType("<485,493,26>",(b.length)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (b) != "undefined") {_RecordType("<485,486,26>",(b)); Inst45++; } } catch(e) {}
  if (a.length != b.length) {
    return false;
  }
}

try { if (Inst46 <= 1000 && typeof (foo) != "undefined") {_RecordType("<522,525,31>",(foo)); Inst46++; } } catch(e) {}
foo(10);
try { if (Inst47 <= 1000 && typeof (bar) != "undefined") {_RecordType("<531,534,32>",(bar)); Inst47++; } } catch(e) {}
bar(10);

