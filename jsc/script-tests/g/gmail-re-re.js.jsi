var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<0,11,1>",(console.log)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (console) != "undefined") {_RecordType("<0,7,1>",(console)); Inst1++; } } catch(e) {}
console.log("Bug 7445, bug 7253: Handle Unicode escapes in regexps.");
var I3 = /^\s*(fwd|re|aw|antw|antwort|wg|sv|ang|odp|betreff|betr|transf|reenv\.|reenv|in|res|resp|resp\.|enc|\u8f6c\u53d1|\u56DE\u590D|\u041F\u0435\u0440\u0435\u0441\u043B|\u041E\u0442\u0432\u0435\u0442):\s*(.*)$/i; // Other RegExs from Gmail source
try { if (Inst2 <= 1000 && typeof (I3) != "undefined") {_RecordType("<75,77,2>",(I3)); Inst2++; } } catch(e) {}

var Ci = /\s+/g;
try { if (Inst3 <= 1000 && typeof (Ci) != "undefined") {_RecordType("<326,328,4>",(Ci)); Inst3++; } } catch(e) {}
var BC = /^ /;
try { if (Inst4 <= 1000 && typeof (BC) != "undefined") {_RecordType("<343,345,5>",(BC)); Inst4++; } } catch(e) {}
var BG = / $/; // Strips leading Re or similar (from Gmail source)
try { if (Inst5 <= 1000 && typeof (BG) != "undefined") {_RecordType("<358,360,6>",(BG)); Inst5++; } } catch(e) {}

try { if (Inst6 <= 1000 && typeof (cy) != "undefined") {_RecordType("<431,433,8>",(cy)); Inst6++; } } catch(e) {}
function cy(a) {
try { if (Inst7 <= 1000 && typeof (a) != "undefined") {_RecordType("<434,435,8>",(a)); Inst7++; } } catch(e) {}
  //var b = I3.exec(a);
try { if (Inst9 <= 1000 && typeof (I3.exec) != "undefined") {_RecordType("<473,480,10>",(I3.exec)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (I3) != "undefined") {_RecordType("<473,475,10>",(I3)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (a) != "undefined") {_RecordType("<481,482,10>",(a)); Inst11++; } } catch(e) {}
  var b = I3.exec(a);
try { if (Inst8 <= 1000 && typeof (b) != "undefined") {_RecordType("<469,470,10>",(b)); Inst8++; } } catch(e) {}

try { if (Inst12 <= 1000 && typeof (b) != "undefined") {_RecordType("<492,493,12>",(b)); Inst12++; } } catch(e) {}
  if (b) {
try { if (Inst14 <= 1000 && typeof (b[2]) != "undefined") {_RecordType("<505,509,13>",(b[2])); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (b) != "undefined") {_RecordType("<505,506,13>",(b)); Inst15++; } } catch(e) {}
    a = b[2];
try { if (Inst13 <= 1000 && typeof (a) != "undefined") {_RecordType("<501,502,13>",(a)); Inst13++; } } catch(e) {}
  }

try { if (Inst16 <= 1000 && typeof (Gn) != "undefined") {_RecordType("<525,527,16>",(Gn)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (a) != "undefined") {_RecordType("<528,529,16>",(a)); Inst17++; } } catch(e) {}
  return Gn(a);
} // This function replaces consecutive whitespace with a single space
// then removes a leading and trailing space if they exist. (From Gmail)


try { if (Inst18 <= 1000 && typeof (Gn) != "undefined") {_RecordType("<687,689,21>",(Gn)); Inst18++; } } catch(e) {}
function Gn(a) {
try { if (Inst19 <= 1000 && typeof (a) != "undefined") {_RecordType("<690,691,21>",(a)); Inst19++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (a.replace(Ci, " ").replace(BC, "").replace) != "undefined") {_RecordType("<704,746,22>",(a.replace(Ci, " ").replace(BC, "").replace)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (a.replace(Ci, " ").replace) != "undefined") {_RecordType("<704,730,22>",(a.replace(Ci, " ").replace)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (a.replace) != "undefined") {_RecordType("<704,713,22>",(a.replace)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (a) != "undefined") {_RecordType("<704,705,22>",(a)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (Ci) != "undefined") {_RecordType("<714,716,22>",(Ci)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (BC) != "undefined") {_RecordType("<731,733,22>",(BC)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (BG) != "undefined") {_RecordType("<747,749,22>",(BG)); Inst26++; } } catch(e) {}
  return a.replace(Ci, " ").replace(BC, "").replace(BG, "");
}

try { if (Inst27 <= 1000 && typeof (cy) != "undefined") {_RecordType("<759,761,25>",(cy)); Inst27++; } } catch(e) {}
cy("Re: Hello");
try { if (Inst28 <= 1000 && typeof (cy) != "undefined") {_RecordType("<776,778,26>",(cy)); Inst28++; } } catch(e) {}
cy("Ответ: Hello"); // ---------------------------------------------------------------

var regex = /^([^#<\u2264]+)([#<\u2264])(.*)$/;
try { if (Inst29 <= 1000 && typeof (regex) != "undefined") {_RecordType("<868,873,28>",(regex)); Inst29++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (regex.exec("24#Midnight").toString) != "undefined") {_RecordType("<912,946,29>",(regex.exec("24#Midnight").toString)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (regex.exec) != "undefined") {_RecordType("<912,922,29>",(regex.exec)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (regex) != "undefined") {_RecordType("<912,917,29>",(regex)); Inst32++; } } catch(e) {}
regex.exec("24#Midnight").toString();

