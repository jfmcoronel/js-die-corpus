var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<0,11,1>",(console.log)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (console) != "undefined") {_RecordType("<0,7,1>",(console)); Inst1++; } } catch(e) {}
console.log("Tests accessing arguments with an out-of-bounds index in an inlined function when the arguments have not been created but might be.");
var p = false;
try { if (Inst2 <= 1000 && typeof (p) != "undefined") {_RecordType("<152,153,2>",(p)); Inst2++; } } catch(e) {}

try { if (Inst3 <= 1000 && typeof (foo) != "undefined") {_RecordType("<173,176,4>",(foo)); Inst3++; } } catch(e) {}
function foo() {
try { if (Inst4 <= 1000 && typeof (p) != "undefined") {_RecordType("<187,188,5>",(p)); Inst4++; } } catch(e) {}
  if (p) {
try { if (Inst5 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<203,212,6>",(arguments)); Inst5++; } } catch(e) {}
    return arguments;
  }

try { if (Inst6 <= 1000 && typeof (arguments[0]) != "undefined") {_RecordType("<228,240,9>",(arguments[0])); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<228,237,9>",(arguments)); Inst7++; } } catch(e) {}
  return arguments[0];
}

try { if (Inst8 <= 1000 && typeof (bar) != "undefined") {_RecordType("<254,257,12>",(bar)); Inst8++; } } catch(e) {}
function bar() {
try { if (Inst9 <= 1000 && typeof (foo) != "undefined") {_RecordType("<271,274,13>",(foo)); Inst9++; } } catch(e) {}
  return foo();
}

var expected = "\"undefined\"";
try { if (Inst10 <= 1000 && typeof (expected) != "undefined") {_RecordType("<285,293,16>",(expected)); Inst10++; } } catch(e) {}

for (var i = 0; i < 3000; ++i) {
try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<323,324,18>",(i)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<330,331,18>",(i)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<342,343,18>",(i)); Inst13++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<353,354,19>",(i)); Inst14++; } } catch(e) {}
  if (i == 1000) {
    p = true;
try { if (Inst15 <= 1000 && typeof (p) != "undefined") {_RecordType("<370,371,20>",(p)); Inst15++; } } catch(e) {}
    expected = "\"[object Arguments]\"";
try { if (Inst16 <= 1000 && typeof (expected) != "undefined") {_RecordType("<384,392,21>",(expected)); Inst16++; } } catch(e) {}
  }

try { if (Inst17 <= 1000 && typeof (i) != "undefined") {_RecordType("<432,433,24>",(i)); Inst17++; } } catch(e) {}
  if (i == 2000) {
    p = false;
try { if (Inst18 <= 1000 && typeof (p) != "undefined") {_RecordType("<449,450,25>",(p)); Inst18++; } } catch(e) {}
    expected = "\"undefined\"";
try { if (Inst19 <= 1000 && typeof (expected) != "undefined") {_RecordType("<464,472,26>",(expected)); Inst19++; } } catch(e) {}
  }

try { if (Inst21 <= 1000 && typeof (bar) != "undefined") {_RecordType("<513,516,29>",(bar)); Inst21++; } } catch(e) {}
  result = "" + bar();
try { if (Inst20 <= 1000 && typeof (result) != "undefined") {_RecordType("<499,505,29>",(result)); Inst20++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (result) != "undefined") {_RecordType("<522,528,30>",(result)); Inst22++; } } catch(e) {}
  result;
}

