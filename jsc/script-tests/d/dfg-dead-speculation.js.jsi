var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<0,11,1>",(console.log)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (console) != "undefined") {_RecordType("<0,7,1>",(console)); Inst1++; } } catch(e) {}
console.log("Tests that the DFG will still perform speculations on dead things.");

try { if (Inst2 <= 1000 && typeof (foo) != "undefined") {_RecordType("<93,96,3>",(foo)); Inst2++; } } catch(e) {}
function foo(a, b) {
try { if (Inst3 <= 1000 && typeof (a) != "undefined") {_RecordType("<97,98,3>",(a)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (b) != "undefined") {_RecordType("<100,101,3>",(b)); Inst4++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (a.f) != "undefined") {_RecordType("<115,118,4>",(a.f)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (a) != "undefined") {_RecordType("<115,116,4>",(a)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (b) != "undefined") {_RecordType("<121,122,4>",(b)); Inst8++; } } catch(e) {}
  var x = a.f - b;
try { if (Inst5 <= 1000 && typeof (x) != "undefined") {_RecordType("<111,112,4>",(x)); Inst5++; } } catch(e) {}
  return 10;
}

var thingy = {
  f: 42
};
try { if (Inst9 <= 1000 && typeof (thingy) != "undefined") {_RecordType("<144,150,8>",(thingy)); Inst9++; } } catch(e) {}
var variable = 84;
try { if (Inst10 <= 1000 && typeof (variable) != "undefined") {_RecordType("<170,178,11>",(variable)); Inst10++; } } catch(e) {}
var expected = 84;
try { if (Inst11 <= 1000 && typeof (expected) != "undefined") {_RecordType("<189,197,12>",(expected)); Inst11++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<204,212,13>",(noInline)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (foo) != "undefined") {_RecordType("<213,216,13>",(foo)); Inst13++; } } catch(e) {}
noInline(foo);
silentTestPass = true;
try { if (Inst14 <= 1000 && typeof (silentTestPass) != "undefined") {_RecordType("<219,233,14>",(silentTestPass)); Inst14++; } } catch(e) {}

for (var i = 0; i < 200; i++) {
try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<252,253,16>",(i)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<259,260,16>",(i)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (i) != "undefined") {_RecordType("<268,269,16>",(i)); Inst17++; } } catch(e) {}
  // i = dfgIncrement({f:foo, i:i + 1, n:100})) {
try { if (Inst18 <= 1000 && typeof (i) != "undefined") {_RecordType("<331,332,18>",(i)); Inst18++; } } catch(e) {}
  if (i == 150) {
    thingy = {
      f: {
        valueOf: function () {
          variable = 24;
try { if (Inst20 <= 1000 && typeof (variable) != "undefined") {_RecordType("<410,418,22>",(variable)); Inst20++; } } catch(e) {}
          return 5;
        }
      }
    };
try { if (Inst19 <= 1000 && typeof (thingy) != "undefined") {_RecordType("<347,353,19>",(thingy)); Inst19++; } } catch(e) {}
    expected = 24;
try { if (Inst21 <= 1000 && typeof (expected) != "undefined") {_RecordType("<474,482,27>",(expected)); Inst21++; } } catch(e) {}
  }

try { if (Inst22 <= 1000 && typeof (foo) != "undefined") {_RecordType("<496,499,30>",(foo)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (thingy) != "undefined") {_RecordType("<500,506,30>",(thingy)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<508,509,30>",(i)); Inst24++; } } catch(e) {}
  foo(thingy, i);
try { if (Inst25 <= 1000 && typeof (variable) != "undefined") {_RecordType("<514,522,31>",(variable)); Inst25++; } } catch(e) {}
  variable;
}

