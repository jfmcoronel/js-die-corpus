var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<0,11,1>",(console.log)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (console) != "undefined") {_RecordType("<0,7,1>",(console)); Inst1++; } } catch(e) {}
console.log("This tests that Math.min and Math.max for doubles works correctly in the DFG JIT.");

try { if (Inst2 <= 1000 && typeof (doMin) != "undefined") {_RecordType("<108,113,3>",(doMin)); Inst2++; } } catch(e) {}
function doMin(a, b) {
try { if (Inst3 <= 1000 && typeof (a) != "undefined") {_RecordType("<114,115,3>",(a)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (b) != "undefined") {_RecordType("<117,118,3>",(b)); Inst4++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (Math.min) != "undefined") {_RecordType("<131,139,4>",(Math.min)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Math) != "undefined") {_RecordType("<131,135,4>",(Math)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (a) != "undefined") {_RecordType("<140,141,4>",(a)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (b) != "undefined") {_RecordType("<143,144,4>",(b)); Inst8++; } } catch(e) {}
  return Math.min(a, b);
}

try { if (Inst9 <= 1000 && typeof (doMax) != "undefined") {_RecordType("<159,164,7>",(doMax)); Inst9++; } } catch(e) {}
function doMax(a, b) {
try { if (Inst10 <= 1000 && typeof (a) != "undefined") {_RecordType("<165,166,7>",(a)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (b) != "undefined") {_RecordType("<168,169,7>",(b)); Inst11++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (Math.max) != "undefined") {_RecordType("<182,190,8>",(Math.max)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Math) != "undefined") {_RecordType("<182,186,8>",(Math)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (a) != "undefined") {_RecordType("<191,192,8>",(a)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (b) != "undefined") {_RecordType("<194,195,8>",(b)); Inst15++; } } catch(e) {}
  return Math.max(a, b);
}

try { if (Inst16 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<201,209,11>",(noInline)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (doMin) != "undefined") {_RecordType("<210,215,11>",(doMin)); Inst17++; } } catch(e) {}
noInline(doMin);
try { if (Inst18 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<218,226,12>",(noInline)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (doMax) != "undefined") {_RecordType("<227,232,12>",(doMax)); Inst19++; } } catch(e) {}
noInline(doMax);
var count = 0; // while (!testRunner.numberOfDFGCompiles(doMin) || !testRunner.numberOfDFGCompiles(doMax)) {
try { if (Inst20 <= 1000 && typeof (count) != "undefined") {_RecordType("<239,244,13>",(count)); Inst20++; } } catch(e) {}

for (var i = 0; i < 100; i++) {
try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<354,355,15>",(i)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<361,362,15>",(i)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<370,371,15>",(i)); Inst23++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (doMin) != "undefined") {_RecordType("<379,384,16>",(doMin)); Inst24++; } } catch(e) {}
  doMin(1.5, 2.5);
try { if (Inst25 <= 1000 && typeof (doMax) != "undefined") {_RecordType("<398,403,17>",(doMax)); Inst25++; } } catch(e) {}
  doMax(1.5, 2.5);
try { if (Inst26 <= 1000 && typeof (count) != "undefined") {_RecordType("<417,422,18>",(count)); Inst26++; } } catch(e) {}
  count++;
}

try { if (Inst27 <= 1000 && typeof (doMin) != "undefined") {_RecordType("<429,434,21>",(doMin)); Inst27++; } } catch(e) {}
doMin(1.5, 2.5);
try { if (Inst28 <= 1000 && typeof (doMin) != "undefined") {_RecordType("<446,451,22>",(doMin)); Inst28++; } } catch(e) {}
doMin(2.5, 1.5);
try { if (Inst29 <= 1000 && typeof (doMin) != "undefined") {_RecordType("<463,468,23>",(doMin)); Inst29++; } } catch(e) {}
doMin(1.5, 1.5);
try { if (Inst30 <= 1000 && typeof (doMin) != "undefined") {_RecordType("<480,485,24>",(doMin)); Inst30++; } } catch(e) {}
doMin(2.5, 2.5);
try { if (Inst31 <= 1000 && typeof (doMin) != "undefined") {_RecordType("<497,502,25>",(doMin)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<508,511,25>",(NaN)); Inst32++; } } catch(e) {}
doMin(1.5, NaN);
try { if (Inst33 <= 1000 && typeof (doMin) != "undefined") {_RecordType("<514,519,26>",(doMin)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<525,528,26>",(NaN)); Inst34++; } } catch(e) {}
doMin(2.5, NaN);
try { if (Inst35 <= 1000 && typeof (doMin) != "undefined") {_RecordType("<531,536,27>",(doMin)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<537,540,27>",(NaN)); Inst36++; } } catch(e) {}
doMin(NaN, 1.5);
try { if (Inst37 <= 1000 && typeof (doMin) != "undefined") {_RecordType("<548,553,28>",(doMin)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<554,557,28>",(NaN)); Inst38++; } } catch(e) {}
doMin(NaN, 2.5);
try { if (Inst39 <= 1000 && typeof (doMin) != "undefined") {_RecordType("<565,570,29>",(doMin)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<571,574,29>",(NaN)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<576,579,29>",(NaN)); Inst41++; } } catch(e) {}
doMin(NaN, NaN);
try { if (Inst42 <= 1000 && typeof (doMax) != "undefined") {_RecordType("<582,587,30>",(doMax)); Inst42++; } } catch(e) {}
doMax(1.5, 2.5);
try { if (Inst43 <= 1000 && typeof (doMax) != "undefined") {_RecordType("<599,604,31>",(doMax)); Inst43++; } } catch(e) {}
doMax(2.5, 1.5);
try { if (Inst44 <= 1000 && typeof (doMax) != "undefined") {_RecordType("<616,621,32>",(doMax)); Inst44++; } } catch(e) {}
doMax(1.5, 1.5);
try { if (Inst45 <= 1000 && typeof (doMax) != "undefined") {_RecordType("<633,638,33>",(doMax)); Inst45++; } } catch(e) {}
doMax(2.5, 2.5);
try { if (Inst46 <= 1000 && typeof (doMax) != "undefined") {_RecordType("<650,655,34>",(doMax)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<661,664,34>",(NaN)); Inst47++; } } catch(e) {}
doMax(1.5, NaN);
try { if (Inst48 <= 1000 && typeof (doMax) != "undefined") {_RecordType("<667,672,35>",(doMax)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<678,681,35>",(NaN)); Inst49++; } } catch(e) {}
doMax(2.5, NaN);
try { if (Inst50 <= 1000 && typeof (doMax) != "undefined") {_RecordType("<684,689,36>",(doMax)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<690,693,36>",(NaN)); Inst51++; } } catch(e) {}
doMax(NaN, 1.5);
try { if (Inst52 <= 1000 && typeof (doMax) != "undefined") {_RecordType("<701,706,37>",(doMax)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<707,710,37>",(NaN)); Inst53++; } } catch(e) {}
doMax(NaN, 2.5);
try { if (Inst54 <= 1000 && typeof (doMax) != "undefined") {_RecordType("<718,723,38>",(doMax)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<724,727,38>",(NaN)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<729,732,38>",(NaN)); Inst56++; } } catch(e) {}
doMax(NaN, NaN);
var successfullyParsed = true;
try { if (Inst57 <= 1000 && typeof (successfullyParsed) != "undefined") {_RecordType("<739,757,39>",(successfullyParsed)); Inst57++; } } catch(e) {}

