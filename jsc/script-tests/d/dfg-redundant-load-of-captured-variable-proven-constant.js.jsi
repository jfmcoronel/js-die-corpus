var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<0,11,1>",(console.log)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (console) != "undefined") {_RecordType("<0,7,1>",(console)); Inst1++; } } catch(e) {}
console.log("Tests that a redundant load of a captured variable that was proven to be a constant doesn't crash the compiler.");

try { if (Inst2 <= 1000 && typeof (foo) != "undefined") {_RecordType("<138,141,3>",(foo)); Inst2++; } } catch(e) {}
function foo(o, p) {
try { if (Inst3 <= 1000 && typeof (o) != "undefined") {_RecordType("<142,143,3>",(o)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (p) != "undefined") {_RecordType("<145,146,3>",(p)); Inst4++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (o.f) != "undefined") {_RecordType("<160,163,4>",(o.f)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (o) != "undefined") {_RecordType("<160,161,4>",(o)); Inst7++; } } catch(e) {}
  var x = o.f;
try { if (Inst5 <= 1000 && typeof (x) != "undefined") {_RecordType("<156,157,4>",(x)); Inst5++; } } catch(e) {}

try { if (Inst8 <= 1000 && typeof (p) != "undefined") {_RecordType("<172,173,6>",(p)); Inst8++; } } catch(e) {}
  if (p) {
    return function () {
try { if (Inst9 <= 1000 && typeof (x) != "undefined") {_RecordType("<215,216,8>",(x)); Inst9++; } } catch(e) {}
      return x;
    };
  } else {
try { if (Inst11 <= 1000 && typeof (x) != "undefined") {_RecordType("<248,249,11>",(x)); Inst11++; } } catch(e) {}
    var a = x;
try { if (Inst10 <= 1000 && typeof (a) != "undefined") {_RecordType("<244,245,11>",(a)); Inst10++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (x) != "undefined") {_RecordType("<263,264,12>",(x)); Inst13++; } } catch(e) {}
    var b = x;
try { if (Inst12 <= 1000 && typeof (b) != "undefined") {_RecordType("<259,260,12>",(b)); Inst12++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (a) != "undefined") {_RecordType("<278,279,13>",(a)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (b) != "undefined") {_RecordType("<281,282,13>",(b)); Inst15++; } } catch(e) {}
    return [a, b];
  }
}

var o = {
  f: function () {
    return 32;
  }
};
try { if (Inst16 <= 1000 && typeof (o) != "undefined") {_RecordType("<296,297,17>",(o)); Inst16++; } } catch(e) {}

for (var i = 0; i < 100; ++i) {
try { if (Inst17 <= 1000 && typeof (i) != "undefined") {_RecordType("<353,354,23>",(i)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (i) != "undefined") {_RecordType("<360,361,23>",(i)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (i) != "undefined") {_RecordType("<371,372,23>",(i)); Inst19++; } } catch(e) {}
  var expected;
try { if (Inst20 <= 1000 && typeof (expected) != "undefined") {_RecordType("<382,390,24>",(expected)); Inst20++; } } catch(e) {}

try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<399,400,26>",(i)); Inst21++; } } catch(e) {}
  if (i % 2) {
    expected = "\"function () { return x; }\"";
try { if (Inst22 <= 1000 && typeof (expected) != "undefined") {_RecordType("<412,420,27>",(expected)); Inst22++; } } catch(e) {}
  } else {
    expected = "\"function () { return 32; },function () { return 32; }\"";
try { if (Inst23 <= 1000 && typeof (expected) != "undefined") {_RecordType("<471,479,29>",(expected)); Inst23++; } } catch(e) {}
  }

try { if (Inst24 <= 1000 && typeof (foo) != "undefined") {_RecordType("<555,558,32>",(foo)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (o) != "undefined") {_RecordType("<559,560,32>",(o)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (i) != "undefined") {_RecordType("<562,563,32>",(i)); Inst26++; } } catch(e) {}
  "" + foo(o, i % 2);
}

