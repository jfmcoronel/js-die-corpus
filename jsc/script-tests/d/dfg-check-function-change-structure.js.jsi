var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (foo) != "undefined") {_RecordType("<9,12,1>",(foo)); Inst0++; } } catch(e) {}
function foo(o) {
try { if (Inst1 <= 1000 && typeof (o) != "undefined") {_RecordType("<13,14,1>",(o)); Inst1++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (o[0]) != "undefined") {_RecordType("<28,32,2>",(o[0])); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (o) != "undefined") {_RecordType("<28,29,2>",(o)); Inst4++; } } catch(e) {}
  var f = o[0];
try { if (Inst2 <= 1000 && typeof (f) != "undefined") {_RecordType("<24,25,2>",(f)); Inst2++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (f) != "undefined") {_RecordType("<44,45,3>",(f)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (f.f) != "undefined") {_RecordType("<49,52,3>",(f.f)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (f) != "undefined") {_RecordType("<49,50,3>",(f)); Inst7++; } } catch(e) {}
  return [f(), f.f];
}

try { if (Inst8 <= 1000 && typeof (bar) != "undefined") {_RecordType("<67,70,6>",(bar)); Inst8++; } } catch(e) {}
function bar() {
  return 42;
}

bar.f = 23;
try { if (Inst9 <= 1000 && typeof (bar.f) != "undefined") {_RecordType("<91,96,10>",(bar.f)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (bar) != "undefined") {_RecordType("<91,94,10>",(bar)); Inst10++; } } catch(e) {}
var expected = "[42, 23]";
try { if (Inst11 <= 1000 && typeof (expected) != "undefined") {_RecordType("<107,115,11>",(expected)); Inst11++; } } catch(e) {}
silentTestPass = true;
try { if (Inst12 <= 1000 && typeof (silentTestPass) != "undefined") {_RecordType("<130,144,12>",(silentTestPass)); Inst12++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<153,161,13>",(noInline)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (foo) != "undefined") {_RecordType("<162,165,13>",(foo)); Inst14++; } } catch(e) {}
noInline(foo);

for (var i = 0; i < 200; i++) {
try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<178,179,15>",(i)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<185,186,15>",(i)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (i) != "undefined") {_RecordType("<194,195,15>",(i)); Inst17++; } } catch(e) {}
  // i = dfgIncrement({f:foo, i:i + 1, n:50})) {
try { if (Inst18 <= 1000 && typeof (i) != "undefined") {_RecordType("<256,257,17>",(i)); Inst18++; } } catch(e) {}
  if (i == 95) {
try { if (Inst19 <= 1000 && typeof (bar.f) != "undefined") {_RecordType("<278,283,18>",(bar.f)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (bar) != "undefined") {_RecordType("<278,281,18>",(bar)); Inst20++; } } catch(e) {}
    delete bar.f;
    bar.g = 36;
try { if (Inst21 <= 1000 && typeof (bar.g) != "undefined") {_RecordType("<289,294,19>",(bar.g)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (bar) != "undefined") {_RecordType("<289,292,19>",(bar)); Inst22++; } } catch(e) {}
    expected = "[42, void 0]";
try { if (Inst23 <= 1000 && typeof (expected) != "undefined") {_RecordType("<305,313,20>",(expected)); Inst23++; } } catch(e) {}
  }

try { if (Inst24 <= 1000 && typeof (foo) != "undefined") {_RecordType("<339,342,23>",(foo)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (bar) != "undefined") {_RecordType("<344,347,23>",(bar)); Inst25++; } } catch(e) {}
  foo([bar]);
}

