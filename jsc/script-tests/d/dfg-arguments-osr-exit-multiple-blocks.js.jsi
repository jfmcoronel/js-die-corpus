var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<0,11,1>",(console.log)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (console) != "undefined") {_RecordType("<0,7,1>",(console)); Inst1++; } } catch(e) {}
console.log("Tests aliased uses of 'arguments' that require reification of the Arguments object on OSR exit, in the case that there is some interesting control flow.");
silentTestPass = true;
try { if (Inst2 <= 1000 && typeof (silentTestPass) != "undefined") {_RecordType("<169,183,2>",(silentTestPass)); Inst2++; } } catch(e) {}

try { if (Inst3 <= 1000 && typeof (baz) != "undefined") {_RecordType("<202,205,4>",(baz)); Inst3++; } } catch(e) {}
function baz() {
try { if (Inst4 <= 1000 && typeof (variable) != "undefined") {_RecordType("<220,228,5>",(variable)); Inst4++; } } catch(e) {}
  return [variable];
}

try { if (Inst5 <= 1000 && typeof (foo) != "undefined") {_RecordType("<243,246,8>",(foo)); Inst5++; } } catch(e) {}
function foo() {
  var result = 0;
try { if (Inst6 <= 1000 && typeof (result) != "undefined") {_RecordType("<257,263,9>",(result)); Inst6++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<279,288,10>",(arguments)); Inst8++; } } catch(e) {}
  var a = arguments;
try { if (Inst7 <= 1000 && typeof (a) != "undefined") {_RecordType("<275,276,10>",(a)); Inst7++; } } catch(e) {}

  for (var i = 0; i < a.length; ++i) {
try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<302,303,12>",(i)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<309,310,12>",(i)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<313,321,12>",(a.length)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (a) != "undefined") {_RecordType("<313,314,12>",(a)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<325,326,12>",(i)); Inst13++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (a[i]) != "undefined") {_RecordType("<344,348,13>",(a[i])); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (a) != "undefined") {_RecordType("<344,345,13>",(a)); Inst16++; } } catch(e) {}
    result += a[i];
try { if (Inst14 <= 1000 && typeof (result) != "undefined") {_RecordType("<334,340,13>",(result)); Inst14++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (baz()[0]) != "undefined") {_RecordType("<364,372,14>",(baz()[0])); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (baz) != "undefined") {_RecordType("<364,367,14>",(baz)); Inst19++; } } catch(e) {}
    result += baz()[0]; // Just some dummy control flow.
try { if (Inst17 <= 1000 && typeof (result) != "undefined") {_RecordType("<354,360,14>",(result)); Inst17++; } } catch(e) {}

try { if (Inst20 <= 1000 && typeof (result) != "undefined") {_RecordType("<416,422,16>",(result)); Inst20++; } } catch(e) {}
    if (result < 0) {
      throw "Error";
    }
  }

try { if (Inst21 <= 1000 && typeof (result) != "undefined") {_RecordType("<471,477,21>",(result)); Inst21++; } } catch(e) {}
  return result;
}

try { if (Inst22 <= 1000 && typeof (bar) != "undefined") {_RecordType("<491,494,24>",(bar)); Inst22++; } } catch(e) {}
function bar(x) {
try { if (Inst23 <= 1000 && typeof (x) != "undefined") {_RecordType("<495,496,24>",(x)); Inst23++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (foo) != "undefined") {_RecordType("<509,512,25>",(foo)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (x) != "undefined") {_RecordType("<513,514,25>",(x)); Inst25++; } } catch(e) {}
  return foo(x);
}

try { if (Inst26 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<520,528,28>",(noInline)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (bar) != "undefined") {_RecordType("<529,532,28>",(bar)); Inst27++; } } catch(e) {}
noInline(bar);
var variable = 32;
try { if (Inst28 <= 1000 && typeof (variable) != "undefined") {_RecordType("<539,547,29>",(variable)); Inst28++; } } catch(e) {}
var expected = "74";
try { if (Inst29 <= 1000 && typeof (expected) != "undefined") {_RecordType("<558,566,30>",(expected)); Inst29++; } } catch(e) {}

for (var i = 0; i < 200; i++) {
try { if (Inst30 <= 1000 && typeof (i) != "undefined") {_RecordType("<585,586,32>",(i)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (i) != "undefined") {_RecordType("<592,593,32>",(i)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (i) != "undefined") {_RecordType("<601,602,32>",(i)); Inst32++; } } catch(e) {}
  // i = dfgIncrement({f:bar, i:i + 1, n:100})) {
try { if (Inst33 <= 1000 && typeof (i) != "undefined") {_RecordType("<664,665,34>",(i)); Inst33++; } } catch(e) {}
  if (i == 150) {
    variable = "32";
try { if (Inst34 <= 1000 && typeof (variable) != "undefined") {_RecordType("<680,688,35>",(variable)); Inst34++; } } catch(e) {}
    expected = "\"4232\"";
try { if (Inst35 <= 1000 && typeof (expected) != "undefined") {_RecordType("<701,709,36>",(expected)); Inst35++; } } catch(e) {}
  }

try { if (Inst36 <= 1000 && typeof (bar) != "undefined") {_RecordType("<731,734,39>",(bar)); Inst36++; } } catch(e) {}
  bar(42);
}

