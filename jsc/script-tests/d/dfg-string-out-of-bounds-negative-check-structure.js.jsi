var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<0,11,1>",(console.log)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (console) != "undefined") {_RecordType("<0,7,1>",(console)); Inst1++; } } catch(e) {}
console.log("Tests what happens when you do a negative out-of-bounds access on a string and use that to install a getter that clobbers a structure.");

try { if (Inst2 <= 1000 && typeof (foo) != "undefined") {_RecordType("<161,164,3>",(foo)); Inst2++; } } catch(e) {}
function foo(s, o) {
try { if (Inst3 <= 1000 && typeof (s) != "undefined") {_RecordType("<165,166,3>",(s)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (o) != "undefined") {_RecordType("<168,169,3>",(o)); Inst4++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (o.f) != "undefined") {_RecordType("<183,186,4>",(o.f)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (o) != "undefined") {_RecordType("<183,184,4>",(o)); Inst7++; } } catch(e) {}
  var x = o.f;
try { if (Inst5 <= 1000 && typeof (x) != "undefined") {_RecordType("<179,180,4>",(x)); Inst5++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (s[-1]) != "undefined") {_RecordType("<190,195,5>",(s[-1])); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (s) != "undefined") {_RecordType("<190,191,5>",(s)); Inst9++; } } catch(e) {}
  s[-1];
try { if (Inst11 <= 1000 && typeof (o.g) != "undefined") {_RecordType("<207,210,6>",(o.g)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (o) != "undefined") {_RecordType("<207,208,6>",(o)); Inst12++; } } catch(e) {}
  var y = o.g;
try { if (Inst10 <= 1000 && typeof (y) != "undefined") {_RecordType("<203,204,6>",(y)); Inst10++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (x) != "undefined") {_RecordType("<221,222,7>",(x)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (y) != "undefined") {_RecordType("<225,226,7>",(y)); Inst14++; } } catch(e) {}
  return x + y;
}

try { if (Inst15 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<231,239,10>",(noInline)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (foo) != "undefined") {_RecordType("<240,243,10>",(foo)); Inst16++; } } catch(e) {}
noInline(foo);
silentTestPass = true;
try { if (Inst17 <= 1000 && typeof (silentTestPass) != "undefined") {_RecordType("<246,260,11>",(silentTestPass)); Inst17++; } } catch(e) {}
var theObject = {};
try { if (Inst18 <= 1000 && typeof (theObject) != "undefined") {_RecordType("<273,282,12>",(theObject)); Inst18++; } } catch(e) {}

try { if (Inst19 <= 1000 && typeof (String.prototype.__defineGetter__) != "undefined") {_RecordType("<290,323,14>",(String.prototype.__defineGetter__)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (String.prototype) != "undefined") {_RecordType("<290,306,14>",(String.prototype)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (String) != "undefined") {_RecordType("<290,296,14>",(String)); Inst21++; } } catch(e) {}
String.prototype.__defineGetter__("-1", function () {
try { if (Inst22 <= 1000 && typeof (theObject.g) != "undefined") {_RecordType("<353,364,15>",(theObject.g)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (theObject) != "undefined") {_RecordType("<353,362,15>",(theObject)); Inst23++; } } catch(e) {}
  delete theObject.g;
}); // while (testRunner.numberOfDFGCompiles(foo) < 1)


for (var i = 0; i < 100; i++) {
try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<432,433,19>",(i)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<439,440,19>",(i)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (i) != "undefined") {_RecordType("<448,449,19>",(i)); Inst26++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (foo) != "undefined") {_RecordType("<457,460,20>",(foo)); Inst27++; } } catch(e) {}
  foo("hello", {
    f: 1,
    g: 2
  });
}

theObject = {
  f: 1,
  g: 2
};
try { if (Inst28 <= 1000 && typeof (theObject) != "undefined") {_RecordType("<500,509,26>",(theObject)); Inst28++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (foo) != "undefined") {_RecordType("<532,535,30>",(foo)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (theObject) != "undefined") {_RecordType("<545,554,30>",(theObject)); Inst30++; } } catch(e) {}
foo("hello", theObject);

