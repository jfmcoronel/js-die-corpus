var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<0,11,1>",(console.log)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (console) != "undefined") {_RecordType("<0,7,1>",(console)); Inst1++; } } catch(e) {}
console.log("Tests that we do ToString conversions correctly when String.prototype.valueOf is initially fine but then gets clobbered, and was a dictionary all along.");
try { if (Inst2 <= 1000 && typeof (String.prototype.trim) != "undefined") {_RecordType("<176,197,2>",(String.prototype.trim)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (String.prototype) != "undefined") {_RecordType("<176,192,2>",(String.prototype)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (String) != "undefined") {_RecordType("<176,182,2>",(String)); Inst4++; } } catch(e) {}
delete String.prototype.trim;
try { if (Inst5 <= 1000 && typeof (String.prototype.toLowerCase) != "undefined") {_RecordType("<206,234,3>",(String.prototype.toLowerCase)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (String.prototype) != "undefined") {_RecordType("<206,222,3>",(String.prototype)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (String) != "undefined") {_RecordType("<206,212,3>",(String)); Inst7++; } } catch(e) {}
delete String.prototype.toLowerCase;
try { if (Inst8 <= 1000 && typeof (String.prototype.toLocaleUpperCase) != "undefined") {_RecordType("<243,277,4>",(String.prototype.toLocaleUpperCase)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (String.prototype) != "undefined") {_RecordType("<243,259,4>",(String.prototype)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (String) != "undefined") {_RecordType("<243,249,4>",(String)); Inst10++; } } catch(e) {}
delete String.prototype.toLocaleUpperCase;

for (var i = 0; i < 1000; ++i) {
try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<289,290,6>",(i)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<296,297,6>",(i)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<308,309,6>",(i)); Inst13++; } } catch(e) {}
  String.prototype["a" + i] = 42;
try { if (Inst14 <= 1000 && typeof (String.prototype["a" + i]) != "undefined") {_RecordType("<315,340,7>",(String.prototype["a" + i])); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (String.prototype) != "undefined") {_RecordType("<315,331,7>",(String.prototype)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (String) != "undefined") {_RecordType("<315,321,7>",(String)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (i) != "undefined") {_RecordType("<338,339,7>",(i)); Inst17++; } } catch(e) {}
}

try { if (Inst18 <= 1000 && typeof (foo) != "undefined") {_RecordType("<359,362,10>",(foo)); Inst18++; } } catch(e) {}
function foo(a) {
try { if (Inst19 <= 1000 && typeof (a) != "undefined") {_RecordType("<363,364,10>",(a)); Inst19++; } } catch(e) {}
  for (var i = 0; i < 100; ++i) {
try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<379,380,11>",(i)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<386,387,11>",(i)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<397,398,11>",(i)); Inst22++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (String) != "undefined") {_RecordType("<414,420,12>",(String)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (a) != "undefined") {_RecordType("<421,422,12>",(a)); Inst25++; } } catch(e) {}
    a = new String(a);
try { if (Inst23 <= 1000 && typeof (a) != "undefined") {_RecordType("<406,407,12>",(a)); Inst23++; } } catch(e) {}
  }

try { if (Inst26 <= 1000 && typeof (a) != "undefined") {_RecordType("<439,440,15>",(a)); Inst26++; } } catch(e) {}
  return a;
}

var expected = "\"hello\"";
try { if (Inst27 <= 1000 && typeof (expected) != "undefined") {_RecordType("<449,457,18>",(expected)); Inst27++; } } catch(e) {}

for (var i = 0; i < 150; ++i) {
try { if (Inst28 <= 1000 && typeof (i) != "undefined") {_RecordType("<483,484,20>",(i)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (i) != "undefined") {_RecordType("<490,491,20>",(i)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (i) != "undefined") {_RecordType("<501,502,20>",(i)); Inst30++; } } catch(e) {}
try { if (Inst31 <= 1000 && typeof (i) != "undefined") {_RecordType("<512,513,21>",(i)); Inst31++; } } catch(e) {}
  if (i == 100) {
    String.prototype.toString = function () {
      return 42;
    };
try { if (Inst32 <= 1000 && typeof (String.prototype.toString) != "undefined") {_RecordType("<528,553,22>",(String.prototype.toString)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (String.prototype) != "undefined") {_RecordType("<528,544,22>",(String.prototype)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (String) != "undefined") {_RecordType("<528,534,22>",(String)); Inst34++; } } catch(e) {}

    expected = "\"42\"";
try { if (Inst35 <= 1000 && typeof (expected) != "undefined") {_RecordType("<599,607,26>",(expected)); Inst35++; } } catch(e) {}
  }

try { if (Inst36 <= 1000 && typeof (foo) != "undefined") {_RecordType("<632,635,29>",(foo)); Inst36++; } } catch(e) {}
  "" + foo("hello");
}

