var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<0,11,1>",(console.log)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (console) != "undefined") {_RecordType("<0,7,1>",(console)); Inst1++; } } catch(e) {}
console.log("Tests what happens if we fail to constant fold a LogicalNot that leads into a branch, when the CFA proves that the LogicalNot has a constant value.");

try { if (Inst2 <= 1000 && typeof (foo1) != "undefined") {_RecordType("<174,178,3>",(foo1)); Inst2++; } } catch(e) {}
function foo1(o) {
try { if (Inst3 <= 1000 && typeof (o) != "undefined") {_RecordType("<179,180,3>",(o)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (o.thingy) != "undefined") {_RecordType("<192,200,4>",(o.thingy)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (o) != "undefined") {_RecordType("<192,193,4>",(o)); Inst5++; } } catch(e) {}
  if (!!o.thingy) {
try { if (Inst6 <= 1000 && typeof (o.thingy) != "undefined") {_RecordType("<215,223,5>",(o.thingy)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (o) != "undefined") {_RecordType("<215,216,5>",(o)); Inst7++; } } catch(e) {}
    return o.thingy(42);
  } else {
try { if (Inst8 <= 1000 && typeof (o.otherThingy) != "undefined") {_RecordType("<251,264,7>",(o.otherThingy)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (o) != "undefined") {_RecordType("<251,252,7>",(o)); Inst9++; } } catch(e) {}
    return o.otherThingy(57);
  }
}

try { if (Inst10 <= 1000 && typeof (foo2) != "undefined") {_RecordType("<286,290,11>",(foo2)); Inst10++; } } catch(e) {}
function foo2(o) {
try { if (Inst11 <= 1000 && typeof (o) != "undefined") {_RecordType("<291,292,11>",(o)); Inst11++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (o.thingy) != "undefined") {_RecordType("<303,311,12>",(o.thingy)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (o) != "undefined") {_RecordType("<303,304,12>",(o)); Inst13++; } } catch(e) {}
  if (!o.thingy) {
try { if (Inst14 <= 1000 && typeof (o.otherThingy) != "undefined") {_RecordType("<326,339,13>",(o.otherThingy)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (o) != "undefined") {_RecordType("<326,327,13>",(o)); Inst15++; } } catch(e) {}
    return o.otherThingy(42);
  } else {
try { if (Inst16 <= 1000 && typeof (o.thingy) != "undefined") {_RecordType("<367,375,15>",(o.thingy)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (o) != "undefined") {_RecordType("<367,368,15>",(o)); Inst17++; } } catch(e) {}
    return o.thingy(57);
  }
}

try { if (Inst18 <= 1000 && typeof (Stuff) != "undefined") {_RecordType("<397,402,19>",(Stuff)); Inst18++; } } catch(e) {}
function Stuff() {
  ;
}

Stuff.prototype = {
  thingy: function (x) {
try { if (Inst21 <= 1000 && typeof (x) != "undefined") {_RecordType("<454,455,24>",(x)); Inst21++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (x) != "undefined") {_RecordType("<470,471,25>",(x)); Inst22++; } } catch(e) {}
    return x + 1;
  },
  otherThingy: function (x) {
try { if (Inst23 <= 1000 && typeof (x) != "undefined") {_RecordType("<507,508,27>",(x)); Inst23++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (x) != "undefined") {_RecordType("<523,524,28>",(x)); Inst24++; } } catch(e) {}
    return x - 1;
  }
};
try { if (Inst19 <= 1000 && typeof (Stuff.prototype) != "undefined") {_RecordType("<414,429,23>",(Stuff.prototype)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (Stuff) != "undefined") {_RecordType("<414,419,23>",(Stuff)); Inst20++; } } catch(e) {}

for (var i = 0; i < 200; i++) {
try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<547,548,32>",(i)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (i) != "undefined") {_RecordType("<554,555,32>",(i)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (i) != "undefined") {_RecordType("<563,564,32>",(i)); Inst27++; } } catch(e) {}
try { if (Inst28 <= 1000 && typeof (foo1) != "undefined") {_RecordType("<572,576,33>",(foo1)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (Stuff) != "undefined") {_RecordType("<581,586,33>",(Stuff)); Inst29++; } } catch(e) {}
  foo1(new Stuff());
}

for (var i = 0; i < 200; i++) {
try { if (Inst30 <= 1000 && typeof (i) != "undefined") {_RecordType("<603,604,36>",(i)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (i) != "undefined") {_RecordType("<610,611,36>",(i)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (i) != "undefined") {_RecordType("<619,620,36>",(i)); Inst32++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (foo2) != "undefined") {_RecordType("<628,632,37>",(foo2)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (Stuff) != "undefined") {_RecordType("<637,642,37>",(Stuff)); Inst34++; } } catch(e) {}
  foo2(new Stuff());
}

