var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<0,11,1>",(console.log)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (console) != "undefined") {_RecordType("<0,7,1>",(console)); Inst1++; } } catch(e) {}
console.log("Tests that DFG NewArrayBuffer works when having a bad time.");

try { if (Inst2 <= 1000 && typeof (Array.prototype.__defineSetter__) != "undefined") {_RecordType("<77,109,3>",(Array.prototype.__defineSetter__)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<77,92,3>",(Array.prototype)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Array) != "undefined") {_RecordType("<77,82,3>",(Array)); Inst4++; } } catch(e) {}
Array.prototype.__defineSetter__("100", function () {
try { if (Inst5 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<133,144,4>",(console.log)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (console) != "undefined") {_RecordType("<133,140,4>",(console)); Inst6++; } } catch(e) {}
  console.log("Ouch!");
});

try { if (Inst7 <= 1000 && typeof (foo) != "undefined") {_RecordType("<169,172,7>",(foo)); Inst7++; } } catch(e) {}
function foo() {
  return ["foo", 42, 23.5];
}

for (var i = 0; i < 200; i++) {
try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<217,218,11>",(i)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<224,225,11>",(i)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<233,234,11>",(i)); Inst10++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (foo()[0]) != "undefined") {_RecordType("<242,250,12>",(foo()[0])); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (foo) != "undefined") {_RecordType("<242,245,12>",(foo)); Inst12++; } } catch(e) {}
  foo()[0];
}

try { if (Inst13 <= 1000 && typeof (foo()[0]) != "undefined") {_RecordType("<255,263,15>",(foo()[0])); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (foo) != "undefined") {_RecordType("<255,258,15>",(foo)); Inst14++; } } catch(e) {}
foo()[0] === "foo";

for (var i = 0; i < 200; i++) {
try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<285,286,17>",(i)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<292,293,17>",(i)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (i) != "undefined") {_RecordType("<301,302,17>",(i)); Inst17++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (foo()[1]) != "undefined") {_RecordType("<310,318,18>",(foo()[1])); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (foo) != "undefined") {_RecordType("<310,313,18>",(foo)); Inst19++; } } catch(e) {}
  foo()[1];
}

try { if (Inst20 <= 1000 && typeof (foo()[1]) != "undefined") {_RecordType("<323,331,21>",(foo()[1])); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (foo) != "undefined") {_RecordType("<323,326,21>",(foo)); Inst21++; } } catch(e) {}
foo()[1] === 42;

for (var i = 0; i < 200; i++) {
try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<350,351,23>",(i)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<357,358,23>",(i)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<366,367,23>",(i)); Inst24++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (foo()[2]) != "undefined") {_RecordType("<375,383,24>",(foo()[2])); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (foo) != "undefined") {_RecordType("<375,378,24>",(foo)); Inst26++; } } catch(e) {}
  foo()[2];
}

try { if (Inst27 <= 1000 && typeof (foo()[2]) != "undefined") {_RecordType("<388,396,27>",(foo()[2])); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (foo) != "undefined") {_RecordType("<388,391,27>",(foo)); Inst28++; } } catch(e) {}
foo()[2] === 23.5;

