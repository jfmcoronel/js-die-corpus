var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<0,11,1>",(console.log)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (console) != "undefined") {_RecordType("<0,7,1>",(console)); Inst1++; } } catch(e) {}
console.log("Tests that the DFG does the right thing on strict equality for known strings.");

try { if (Inst2 <= 1000 && typeof (foo) != "undefined") {_RecordType("<104,107,3>",(foo)); Inst2++; } } catch(e) {}
function foo(a, b) {
try { if (Inst3 <= 1000 && typeof (a) != "undefined") {_RecordType("<108,109,3>",(a)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (b) != "undefined") {_RecordType("<111,112,3>",(b)); Inst4++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (a.f) != "undefined") {_RecordType("<122,125,4>",(a.f)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (a) != "undefined") {_RecordType("<122,123,4>",(a)); Inst7++; } } catch(e) {}
  a = a.f;
try { if (Inst5 <= 1000 && typeof (a) != "undefined") {_RecordType("<118,119,4>",(a)); Inst5++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (b.f) != "undefined") {_RecordType("<133,136,5>",(b.f)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (b) != "undefined") {_RecordType("<133,134,5>",(b)); Inst10++; } } catch(e) {}
  b = b.f;
try { if (Inst8 <= 1000 && typeof (b) != "undefined") {_RecordType("<129,130,5>",(b)); Inst8++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<148,156,6>",(a.length)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (a) != "undefined") {_RecordType("<148,149,6>",(a)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (b.length) != "undefined") {_RecordType("<159,167,6>",(b.length)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (b) != "undefined") {_RecordType("<159,160,6>",(b)); Inst15++; } } catch(e) {}
  var c = a.length + b.length;
try { if (Inst11 <= 1000 && typeof (c) != "undefined") {_RecordType("<144,145,6>",(c)); Inst11++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (c) != "undefined") {_RecordType("<179,180,7>",(c)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (a) != "undefined") {_RecordType("<182,183,7>",(a)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (b) != "undefined") {_RecordType("<188,189,7>",(b)); Inst18++; } } catch(e) {}
  return [c, a === b];
}

try { if (Inst19 <= 1000 && typeof (bar) != "undefined") {_RecordType("<204,207,10>",(bar)); Inst19++; } } catch(e) {}
function bar(a, b) {
try { if (Inst20 <= 1000 && typeof (a) != "undefined") {_RecordType("<208,209,10>",(a)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (b) != "undefined") {_RecordType("<211,212,10>",(b)); Inst21++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (a.f) != "undefined") {_RecordType("<222,225,11>",(a.f)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (a) != "undefined") {_RecordType("<222,223,11>",(a)); Inst24++; } } catch(e) {}
  a = a.f;
try { if (Inst22 <= 1000 && typeof (a) != "undefined") {_RecordType("<218,219,11>",(a)); Inst22++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (b.f) != "undefined") {_RecordType("<233,236,12>",(b.f)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (b) != "undefined") {_RecordType("<233,234,12>",(b)); Inst27++; } } catch(e) {}
  b = b.f;
try { if (Inst25 <= 1000 && typeof (b) != "undefined") {_RecordType("<229,230,12>",(b)); Inst25++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<248,256,13>",(a.length)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (a) != "undefined") {_RecordType("<248,249,13>",(a)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (b.length) != "undefined") {_RecordType("<259,267,13>",(b.length)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (b) != "undefined") {_RecordType("<259,260,13>",(b)); Inst32++; } } catch(e) {}
  var c = a.length + b.length;
try { if (Inst28 <= 1000 && typeof (c) != "undefined") {_RecordType("<244,245,13>",(c)); Inst28++; } } catch(e) {}

try { if (Inst33 <= 1000 && typeof (a) != "undefined") {_RecordType("<276,277,15>",(a)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (b) != "undefined") {_RecordType("<282,283,15>",(b)); Inst34++; } } catch(e) {}
  if (a === b) {
try { if (Inst35 <= 1000 && typeof (c) != "undefined") {_RecordType("<298,299,16>",(c)); Inst35++; } } catch(e) {}
    return c + 1;
  } else {
try { if (Inst36 <= 1000 && typeof (c) != "undefined") {_RecordType("<327,328,18>",(c)); Inst36++; } } catch(e) {}
    return c - 1;
  }
}

for (var i = 0; i < 1000; ++i) {
try { if (Inst37 <= 1000 && typeof (i) != "undefined") {_RecordType("<350,351,22>",(i)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (i) != "undefined") {_RecordType("<357,358,22>",(i)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (i) != "undefined") {_RecordType("<369,370,22>",(i)); Inst39++; } } catch(e) {}
try { if (Inst41 <= 1000 && typeof (i) != "undefined") {_RecordType("<393,394,23>",(i)); Inst41++; } } catch(e) {}
  var a = "blah" + i;
try { if (Inst40 <= 1000 && typeof (a) != "undefined") {_RecordType("<380,381,23>",(a)); Inst40++; } } catch(e) {}
try { if (Inst43 <= 1000 && typeof (i) != "undefined") {_RecordType("<423,424,24>",(i)); Inst43++; } } catch(e) {}
  var b = "blah" + (1000 - i);
try { if (Inst42 <= 1000 && typeof (b) != "undefined") {_RecordType("<402,403,24>",(b)); Inst42++; } } catch(e) {}
try { if (Inst45 <= 1000 && typeof (i) != "undefined") {_RecordType("<444,445,25>",(i)); Inst45++; } } catch(e) {}
  var areEqual = i == 500;
try { if (Inst44 <= 1000 && typeof (areEqual) != "undefined") {_RecordType("<433,441,25>",(areEqual)); Inst44++; } } catch(e) {}
try { if (Inst46 <= 1000 && typeof (foo) != "undefined") {_RecordType("<456,459,26>",(foo)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (a) != "undefined") {_RecordType("<469,470,27>",(a)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (b) != "undefined") {_RecordType("<485,486,29>",(b)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<497,505,30>",(a.length)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (a) != "undefined") {_RecordType("<497,498,30>",(a)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (b.length) != "undefined") {_RecordType("<507,515,30>",(b.length)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (b) != "undefined") {_RecordType("<507,508,30>",(b)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (areEqual) != "undefined") {_RecordType("<517,525,30>",(areEqual)); Inst53++; } } catch(e) {}
  foo({
    f: a
  }, {
    f: b
  }) === [a.length, b.length, areEqual];
try { if (Inst54 <= 1000 && typeof (bar) != "undefined") {_RecordType("<530,533,31>",(bar)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (a) != "undefined") {_RecordType("<543,544,32>",(a)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (b) != "undefined") {_RecordType("<559,560,34>",(b)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (areEqual) != "undefined") {_RecordType("<570,578,35>",(areEqual)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<581,589,35>",(a.length)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (a) != "undefined") {_RecordType("<581,582,35>",(a)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (b.length) != "undefined") {_RecordType("<592,600,35>",(b.length)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (b) != "undefined") {_RecordType("<592,593,35>",(b)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<607,615,35>",(a.length)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (a) != "undefined") {_RecordType("<607,608,35>",(a)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (b.length) != "undefined") {_RecordType("<618,626,35>",(b.length)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (b) != "undefined") {_RecordType("<618,619,35>",(b)); Inst65++; } } catch(e) {}
  bar({
    f: a
  }, {
    f: b
  }) === areEqual ? a.length + b.length + 1 : a.length + b.length - 1;
}

