var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<0,11,1>",(console.log)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (console) != "undefined") {_RecordType("<0,7,1>",(console)); Inst1++; } } catch(e) {}
console.log("Tests what happens if we OSR exit on an assignment that was part of a side-effecting intrinsic.");

try { if (Inst2 <= 1000 && typeof (foo) != "undefined") {_RecordType("<122,125,3>",(foo)); Inst2++; } } catch(e) {}
function foo(array) {
try { if (Inst3 <= 1000 && typeof (array) != "undefined") {_RecordType("<126,131,3>",(array)); Inst3++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (array.pop) != "undefined") {_RecordType("<145,154,4>",(array.pop)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (array) != "undefined") {_RecordType("<145,150,4>",(array)); Inst6++; } } catch(e) {}
  var x = array.pop();
try { if (Inst4 <= 1000 && typeof (x) != "undefined") {_RecordType("<141,142,4>",(x)); Inst4++; } } catch(e) {}

try { if (Inst7 <= 1000 && typeof (x) != "undefined") {_RecordType("<165,166,6>",(x)); Inst7++; } } catch(e) {}
  if (x) {
try { if (Inst8 <= 1000 && typeof (x) != "undefined") {_RecordType("<181,182,7>",(x)); Inst8++; } } catch(e) {}
    return x;
  }
}

for (var i = 0; i < 500; ++i) {
try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<200,201,11>",(i)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<207,208,11>",(i)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<218,219,11>",(i)); Inst11++; } } catch(e) {}
  var array = [];
try { if (Inst12 <= 1000 && typeof (array) != "undefined") {_RecordType("<229,234,12>",(array)); Inst12++; } } catch(e) {}

try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<248,249,14>",(i)); Inst13++; } } catch(e) {}
  if (i == 50) {
    array.x = 42;
try { if (Inst14 <= 1000 && typeof (array.x) != "undefined") {_RecordType("<263,270,15>",(array.x)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (array) != "undefined") {_RecordType("<263,268,15>",(array)); Inst15++; } } catch(e) {}
  }

try { if (Inst16 <= 1000 && typeof (array.push) != "undefined") {_RecordType("<284,294,18>",(array.push)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (array) != "undefined") {_RecordType("<284,289,18>",(array)); Inst17++; } } catch(e) {}
  array.push("blah");
  var expected;
try { if (Inst18 <= 1000 && typeof (expected) != "undefined") {_RecordType("<310,318,19>",(expected)); Inst18++; } } catch(e) {}

try { if (Inst19 <= 1000 && typeof (i) != "undefined") {_RecordType("<327,328,21>",(i)); Inst19++; } } catch(e) {}
  if (i >= 450) {
try { if (Inst20 <= 1000 && typeof (array.push) != "undefined") {_RecordType("<343,353,22>",(array.push)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (array) != "undefined") {_RecordType("<343,348,22>",(array)); Inst21++; } } catch(e) {}
    array.push(2);
    expected = "2";
try { if (Inst22 <= 1000 && typeof (expected) != "undefined") {_RecordType("<362,370,23>",(expected)); Inst22++; } } catch(e) {}
  } else {
try { if (Inst23 <= 1000 && typeof (array.push) != "undefined") {_RecordType("<393,403,25>",(array.push)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (array) != "undefined") {_RecordType("<393,398,25>",(array)); Inst24++; } } catch(e) {}
    array.push("bleh");
    expected = "\"bleh\"";
try { if (Inst25 <= 1000 && typeof (expected) != "undefined") {_RecordType("<417,425,26>",(expected)); Inst25++; } } catch(e) {}
  }

try { if (Inst26 <= 1000 && typeof (foo) != "undefined") {_RecordType("<447,450,29>",(foo)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (array) != "undefined") {_RecordType("<451,456,29>",(array)); Inst27++; } } catch(e) {}
  foo(array);
}

