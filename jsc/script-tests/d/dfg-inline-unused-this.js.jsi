var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<0,11,1>",(console.log)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (console) != "undefined") {_RecordType("<0,7,1>",(console)); Inst1++; } } catch(e) {}
console.log("This tests that inlining a function that does not use this does not result in this being lost entirely.");

try { if (Inst2 <= 1000 && typeof (foo) != "undefined") {_RecordType("<130,133,3>",(foo)); Inst2++; } } catch(e) {}
function foo(a, b) {
try { if (Inst3 <= 1000 && typeof (a) != "undefined") {_RecordType("<134,135,3>",(a)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (b) != "undefined") {_RecordType("<137,138,3>",(b)); Inst4++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (a) != "undefined") {_RecordType("<151,152,4>",(a)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (b) != "undefined") {_RecordType("<155,156,4>",(b)); Inst6++; } } catch(e) {}
  return a + b;
}

try { if (Inst7 <= 1000 && typeof (bar) != "undefined") {_RecordType("<170,173,7>",(bar)); Inst7++; } } catch(e) {}
function bar(a, b) {
try { if (Inst8 <= 1000 && typeof (a) != "undefined") {_RecordType("<174,175,7>",(a)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (b) != "undefined") {_RecordType("<177,178,7>",(b)); Inst9++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (this.f) != "undefined") {_RecordType("<191,197,8>",(this.f)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (a) != "undefined") {_RecordType("<200,201,8>",(a)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (b) != "undefined") {_RecordType("<204,205,8>",(b)); Inst12++; } } catch(e) {}
  return this.f + a + b;
}

try { if (Inst13 <= 1000 && typeof (baz) != "undefined") {_RecordType("<219,222,11>",(baz)); Inst13++; } } catch(e) {}
function baz(o, a, b) {
try { if (Inst14 <= 1000 && typeof (o) != "undefined") {_RecordType("<223,224,11>",(o)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (a) != "undefined") {_RecordType("<226,227,11>",(a)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (b) != "undefined") {_RecordType("<229,230,11>",(b)); Inst16++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (o.stuff) != "undefined") {_RecordType("<243,250,12>",(o.stuff)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (o) != "undefined") {_RecordType("<243,244,12>",(o)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (a) != "undefined") {_RecordType("<251,252,12>",(a)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (b) != "undefined") {_RecordType("<254,255,12>",(b)); Inst20++; } } catch(e) {}
  return o.stuff(a, b);
}

try { if (Inst22 <= 1000 && typeof (foo) != "undefined") {_RecordType("<282,285,15>",(foo)); Inst22++; } } catch(e) {}
var functionToCall = foo;
try { if (Inst21 <= 1000 && typeof (functionToCall) != "undefined") {_RecordType("<265,279,15>",(functionToCall)); Inst21++; } } catch(e) {}
var offset = 0;
try { if (Inst23 <= 1000 && typeof (offset) != "undefined") {_RecordType("<291,297,16>",(offset)); Inst23++; } } catch(e) {}

for (var i = 0; i < 1000; ++i) {
try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<313,314,18>",(i)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<320,321,18>",(i)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (i) != "undefined") {_RecordType("<332,333,18>",(i)); Inst26++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (i) != "undefined") {_RecordType("<343,344,19>",(i)); Inst27++; } } catch(e) {}
  if (i == 600) {
try { if (Inst29 <= 1000 && typeof (bar) != "undefined") {_RecordType("<376,379,20>",(bar)); Inst29++; } } catch(e) {}
    functionToCall = bar;
try { if (Inst28 <= 1000 && typeof (functionToCall) != "undefined") {_RecordType("<359,373,20>",(functionToCall)); Inst28++; } } catch(e) {}
    offset = 42;
try { if (Inst30 <= 1000 && typeof (offset) != "undefined") {_RecordType("<385,391,21>",(offset)); Inst30++; } } catch(e) {}
  } // Create some bizzare object to prevent method_check optimizations, since those will result in
  // a failure while the function is still live.


  var object = {};
try { if (Inst31 <= 1000 && typeof (object) != "undefined") {_RecordType("<555,561,26>",(object)); Inst31++; } } catch(e) {}
try { if (Inst35 <= 1000 && typeof (i) != "undefined") {_RecordType("<588,589,27>",(i)); Inst35++; } } catch(e) {}
  object["a" + i] = i;
try { if (Inst32 <= 1000 && typeof (object["a" + i]) != "undefined") {_RecordType("<570,585,27>",(object["a" + i])); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (object) != "undefined") {_RecordType("<570,576,27>",(object)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (i) != "undefined") {_RecordType("<583,584,27>",(i)); Inst34++; } } catch(e) {}
try { if (Inst38 <= 1000 && typeof (functionToCall) != "undefined") {_RecordType("<608,622,28>",(functionToCall)); Inst38++; } } catch(e) {}
  object.stuff = functionToCall;
try { if (Inst36 <= 1000 && typeof (object.stuff) != "undefined") {_RecordType("<593,605,28>",(object.stuff)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (object) != "undefined") {_RecordType("<593,599,28>",(object)); Inst37++; } } catch(e) {}
  object.f = 42;
try { if (Inst39 <= 1000 && typeof (object.f) != "undefined") {_RecordType("<626,634,29>",(object.f)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (object) != "undefined") {_RecordType("<626,632,29>",(object)); Inst40++; } } catch(e) {}
try { if (Inst41 <= 1000 && typeof (baz) != "undefined") {_RecordType("<643,646,30>",(baz)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (object) != "undefined") {_RecordType("<647,653,30>",(object)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (i) != "undefined") {_RecordType("<655,656,30>",(i)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (i) != "undefined") {_RecordType("<658,659,30>",(i)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (offset) != "undefined") {_RecordType("<669,675,30>",(offset)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (i) != "undefined") {_RecordType("<678,679,30>",(i)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (i) != "undefined") {_RecordType("<682,683,30>",(i)); Inst47++; } } catch(e) {}
  baz(object, i, i * 2) === offset + i + i * 2;
}

