var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<0,11,1>",(console.log)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (console) != "undefined") {_RecordType("<0,7,1>",(console)); Inst1++; } } catch(e) {}
console.log("This tests to ensure that destructuring parameters behave like regular locals");
var value = "outer";
try { if (Inst2 <= 1000 && typeof (value) != "undefined") {_RecordType("<98,103,2>",(value)); Inst2++; } } catch(e) {}

try { if (Inst3 <= 1000 && typeof (readDestructuredParameter) != "undefined") {_RecordType("<125,150,4>",(readDestructuredParameter)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (value) != "undefined") {_RecordType("<152,157,4>",(value)); Inst4++; } } catch(e) {}
function readDestructuredParameter([value]) {
try { if (Inst5 <= 1000 && typeof (value) != "undefined") {_RecordType("<171,176,5>",(value)); Inst5++; } } catch(e) {}
  return value;
}

try { if (Inst6 <= 1000 && typeof (overwriteDestructuredParameter) != "undefined") {_RecordType("<190,220,8>",(overwriteDestructuredParameter)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (value) != "undefined") {_RecordType("<222,227,8>",(value)); Inst7++; } } catch(e) {}
function overwriteDestructuredParameter([value]) {
  value = "inner";
try { if (Inst8 <= 1000 && typeof (value) != "undefined") {_RecordType("<234,239,9>",(value)); Inst8++; } } catch(e) {}
}

try { if (Inst9 <= 1000 && typeof (readCapturedDestructuredParameter) != "undefined") {_RecordType("<263,296,12>",(readCapturedDestructuredParameter)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (value) != "undefined") {_RecordType("<298,303,12>",(value)); Inst10++; } } catch(e) {}
function readCapturedDestructuredParameter([value]) {
  return function () {
try { if (Inst11 <= 1000 && typeof (value) != "undefined") {_RecordType("<342,347,14>",(value)); Inst11++; } } catch(e) {}
    return value;
  }();
}

try { if (Inst12 <= 1000 && typeof (overwriteCapturedDestructuredParameter) != "undefined") {_RecordType("<368,406,18>",(overwriteCapturedDestructuredParameter)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (value) != "undefined") {_RecordType("<408,413,18>",(value)); Inst13++; } } catch(e) {}
function overwriteCapturedDestructuredParameter([value]) {
  (function () {
    value = "innermost";
try { if (Inst14 <= 1000 && typeof (value) != "undefined") {_RecordType("<439,444,20>",(value)); Inst14++; } } catch(e) {}
  })();

try { if (Inst15 <= 1000 && typeof (value) != "undefined") {_RecordType("<478,483,23>",(value)); Inst15++; } } catch(e) {}
  return value;
}

try { if (Inst16 <= 1000 && typeof (readDestructuredParameter) != "undefined") {_RecordType("<488,513,26>",(readDestructuredParameter)); Inst16++; } } catch(e) {}
readDestructuredParameter(['inner']);
try { if (Inst17 <= 1000 && typeof (overwriteDestructuredParameter) != "undefined") {_RecordType("<526,556,27>",(overwriteDestructuredParameter)); Inst17++; } } catch(e) {}
overwriteDestructuredParameter(['inner']);
try { if (Inst18 <= 1000 && typeof (overwriteDestructuredParameter) != "undefined") {_RecordType("<569,599,28>",(overwriteDestructuredParameter)); Inst18++; } } catch(e) {}
overwriteDestructuredParameter(['unused']);
try { if (Inst19 <= 1000 && typeof (value) != "undefined") {_RecordType("<613,618,29>",(value)); Inst19++; } } catch(e) {}
value;
;
try { if (Inst20 <= 1000 && typeof (readCapturedDestructuredParameter) != "undefined") {_RecordType("<622,655,31>",(readCapturedDestructuredParameter)); Inst20++; } } catch(e) {}
readCapturedDestructuredParameter(['inner']);
try { if (Inst21 <= 1000 && typeof (overwriteDestructuredParameter) != "undefined") {_RecordType("<668,698,32>",(overwriteDestructuredParameter)); Inst21++; } } catch(e) {}
overwriteDestructuredParameter(['inner']);
try { if (Inst22 <= 1000 && typeof (overwriteCapturedDestructuredParameter) != "undefined") {_RecordType("<711,749,33>",(overwriteCapturedDestructuredParameter)); Inst22++; } } catch(e) {}
overwriteCapturedDestructuredParameter(['unused']);
;
try { if (Inst23 <= 1000 && typeof (value) != "undefined") {_RecordType("<765,770,35>",(value)); Inst23++; } } catch(e) {}
value;

