var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<0,11,1>",(console.log)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (console) != "undefined") {_RecordType("<0,7,1>",(console)); Inst1++; } } catch(e) {}
console.log("Tests that CheckArray(NonArray) actually proves that the input isn't an array.");

try { if (Inst2 <= 1000 && typeof (foo) != "undefined") {_RecordType("<105,108,3>",(foo)); Inst2++; } } catch(e) {}
function foo(a, i) {
try { if (Inst3 <= 1000 && typeof (a) != "undefined") {_RecordType("<109,110,3>",(a)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (i) != "undefined") {_RecordType("<112,113,3>",(i)); Inst4++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (a[i]) != "undefined") {_RecordType("<126,130,4>",(a[i])); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (a) != "undefined") {_RecordType("<126,127,4>",(a)); Inst6++; } } catch(e) {}
  return a[i];
}

try { if (Inst7 <= 1000 && typeof (bar) != "undefined") {_RecordType("<144,147,7>",(bar)); Inst7++; } } catch(e) {}
function bar(o, p, q) {
try { if (Inst8 <= 1000 && typeof (o) != "undefined") {_RecordType("<148,149,7>",(o)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (p) != "undefined") {_RecordType("<151,152,7>",(p)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (q) != "undefined") {_RecordType("<154,155,7>",(q)); Inst10++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (q) != "undefined") {_RecordType("<165,166,8>",(q)); Inst11++; } } catch(e) {}
  if (q) {
    o = 42;
try { if (Inst12 <= 1000 && typeof (o) != "undefined") {_RecordType("<174,175,9>",(o)); Inst12++; } } catch(e) {}
  }

try { if (Inst13 <= 1000 && typeof (p) != "undefined") {_RecordType("<193,194,12>",(p)); Inst13++; } } catch(e) {}
  if (p) {
try { if (Inst14 <= 1000 && typeof (o[0]) != "undefined") {_RecordType("<209,213,13>",(o[0])); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (o) != "undefined") {_RecordType("<209,210,13>",(o)); Inst15++; } } catch(e) {}
    return o[0];
  } else {
    return 42;
  }
}

try { if (Inst16 <= 1000 && typeof (baz) != "undefined") {_RecordType("<257,260,19>",(baz)); Inst16++; } } catch(e) {}
function baz(o, p) {
try { if (Inst17 <= 1000 && typeof (o) != "undefined") {_RecordType("<261,262,19>",(o)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (p) != "undefined") {_RecordType("<264,265,19>",(p)); Inst18++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (foo) != "undefined") {_RecordType("<284,287,20>",(foo)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (o) != "undefined") {_RecordType("<288,289,20>",(o)); Inst21++; } } catch(e) {}
  var result = foo(o, 0);
try { if (Inst19 <= 1000 && typeof (result) != "undefined") {_RecordType("<275,281,20>",(result)); Inst19++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (bar) != "undefined") {_RecordType("<307,310,21>",(bar)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (o) != "undefined") {_RecordType("<311,312,21>",(o)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (p) != "undefined") {_RecordType("<314,315,21>",(p)); Inst25++; } } catch(e) {}
  result += bar(o, p, false);
try { if (Inst22 <= 1000 && typeof (result) != "undefined") {_RecordType("<297,303,21>",(result)); Inst22++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (result) != "undefined") {_RecordType("<334,340,22>",(result)); Inst26++; } } catch(e) {}
  return result;
}

try { if (Inst27 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<345,353,25>",(noInline)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (baz) != "undefined") {_RecordType("<354,357,25>",(baz)); Inst28++; } } catch(e) {}
noInline(baz); // Get bar's profiling to claim that it sees a particular original array.

for (var i = 0; i < 100; ++i) {
try { if (Inst29 <= 1000 && typeof (i) != "undefined") {_RecordType("<444,445,27>",(i)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (i) != "undefined") {_RecordType("<451,452,27>",(i)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (i) != "undefined") {_RecordType("<462,463,27>",(i)); Inst31++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (bar) != "undefined") {_RecordType("<469,472,28>",(bar)); Inst32++; } } catch(e) {}
  bar(["fizz"], true, false);
} // while (!dfgCompiled({f:baz})) {


for (var i = 0; i < 200; i++) {
try { if (Inst33 <= 1000 && typeof (i) != "undefined") {_RecordType("<545,546,32>",(i)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (i) != "undefined") {_RecordType("<552,553,32>",(i)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (i) != "undefined") {_RecordType("<561,562,32>",(i)); Inst35++; } } catch(e) {}
  var o = {};
try { if (Inst36 <= 1000 && typeof (o) != "undefined") {_RecordType("<574,575,33>",(o)); Inst36++; } } catch(e) {}
  o[0] = "buzz";
try { if (Inst37 <= 1000 && typeof (o[0]) != "undefined") {_RecordType("<584,588,34>",(o[0])); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (o) != "undefined") {_RecordType("<584,585,34>",(o)); Inst38++; } } catch(e) {}
try { if (Inst39 <= 1000 && typeof (baz) != "undefined") {_RecordType("<601,604,35>",(baz)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (o) != "undefined") {_RecordType("<605,606,35>",(o)); Inst40++; } } catch(e) {}
  baz(o, false);
}

try { if (Inst41 <= 1000 && typeof (baz) != "undefined") {_RecordType("<619,622,38>",(baz)); Inst41++; } } catch(e) {}
baz(["blah"], true);

