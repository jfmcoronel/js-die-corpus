var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<0,11,1>",(console.log)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (console) != "undefined") {_RecordType("<0,7,1>",(console)); Inst1++; } } catch(e) {}
console.log("Tests that our optimization to elide overflow checks understands that if we keep adding huge numbers, we could end up creating a number that is not precisely representable using doubles.");

try { if (Inst2 <= 1000 && typeof (foo) != "undefined") {_RecordType("<213,216,3>",(foo)); Inst2++; } } catch(e) {}
function foo(a) {
try { if (Inst3 <= 1000 && typeof (a) != "undefined") {_RecordType("<217,218,3>",(a)); Inst3++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (a) != "undefined") {_RecordType("<232,233,4>",(a)); Inst5++; } } catch(e) {}
  var x = a;
try { if (Inst4 <= 1000 && typeof (x) != "undefined") {_RecordType("<228,229,4>",(x)); Inst4++; } } catch(e) {}
  x += 281474976710655;
try { if (Inst6 <= 1000 && typeof (x) != "undefined") {_RecordType("<237,238,5>",(x)); Inst6++; } } catch(e) {}
  x += 281474976710654;
try { if (Inst7 <= 1000 && typeof (x) != "undefined") {_RecordType("<261,262,6>",(x)); Inst7++; } } catch(e) {}
  x += 281474976710653;
try { if (Inst8 <= 1000 && typeof (x) != "undefined") {_RecordType("<285,286,7>",(x)); Inst8++; } } catch(e) {}
  x += 281474976710652;
try { if (Inst9 <= 1000 && typeof (x) != "undefined") {_RecordType("<309,310,8>",(x)); Inst9++; } } catch(e) {}
  x += 281474976710655;
try { if (Inst10 <= 1000 && typeof (x) != "undefined") {_RecordType("<333,334,9>",(x)); Inst10++; } } catch(e) {}
  x += 281474976710654;
try { if (Inst11 <= 1000 && typeof (x) != "undefined") {_RecordType("<357,358,10>",(x)); Inst11++; } } catch(e) {}
  x += 281474976710653;
try { if (Inst12 <= 1000 && typeof (x) != "undefined") {_RecordType("<381,382,11>",(x)); Inst12++; } } catch(e) {}
  x += 281474976710652;
try { if (Inst13 <= 1000 && typeof (x) != "undefined") {_RecordType("<405,406,12>",(x)); Inst13++; } } catch(e) {}
  x += 281474976710655;
try { if (Inst14 <= 1000 && typeof (x) != "undefined") {_RecordType("<429,430,13>",(x)); Inst14++; } } catch(e) {}
  x += 281474976710654;
try { if (Inst15 <= 1000 && typeof (x) != "undefined") {_RecordType("<453,454,14>",(x)); Inst15++; } } catch(e) {}
  x += 281474976710653;
try { if (Inst16 <= 1000 && typeof (x) != "undefined") {_RecordType("<477,478,15>",(x)); Inst16++; } } catch(e) {}
  x += 281474976710652;
try { if (Inst17 <= 1000 && typeof (x) != "undefined") {_RecordType("<501,502,16>",(x)); Inst17++; } } catch(e) {}
  x += 281474976710655;
try { if (Inst18 <= 1000 && typeof (x) != "undefined") {_RecordType("<525,526,17>",(x)); Inst18++; } } catch(e) {}
  x += 281474976710654;
try { if (Inst19 <= 1000 && typeof (x) != "undefined") {_RecordType("<549,550,18>",(x)); Inst19++; } } catch(e) {}
  x += 281474976710653;
try { if (Inst20 <= 1000 && typeof (x) != "undefined") {_RecordType("<573,574,19>",(x)); Inst20++; } } catch(e) {}
  x += 281474976710652;
try { if (Inst21 <= 1000 && typeof (x) != "undefined") {_RecordType("<597,598,20>",(x)); Inst21++; } } catch(e) {}
  x += 281474976710655;
try { if (Inst22 <= 1000 && typeof (x) != "undefined") {_RecordType("<621,622,21>",(x)); Inst22++; } } catch(e) {}
  x += 281474976710654;
try { if (Inst23 <= 1000 && typeof (x) != "undefined") {_RecordType("<645,646,22>",(x)); Inst23++; } } catch(e) {}
  x += 281474976710653;
try { if (Inst24 <= 1000 && typeof (x) != "undefined") {_RecordType("<669,670,23>",(x)); Inst24++; } } catch(e) {}
  x += 281474976710652;
try { if (Inst25 <= 1000 && typeof (x) != "undefined") {_RecordType("<693,694,24>",(x)); Inst25++; } } catch(e) {}
  x += 281474976710655;
try { if (Inst26 <= 1000 && typeof (x) != "undefined") {_RecordType("<717,718,25>",(x)); Inst26++; } } catch(e) {}
  x += 281474976710654;
try { if (Inst27 <= 1000 && typeof (x) != "undefined") {_RecordType("<741,742,26>",(x)); Inst27++; } } catch(e) {}
  x += 281474976710653;
try { if (Inst28 <= 1000 && typeof (x) != "undefined") {_RecordType("<765,766,27>",(x)); Inst28++; } } catch(e) {}
  x += 281474976710652;
try { if (Inst29 <= 1000 && typeof (x) != "undefined") {_RecordType("<789,790,28>",(x)); Inst29++; } } catch(e) {}
  x += 281474976710655;
try { if (Inst30 <= 1000 && typeof (x) != "undefined") {_RecordType("<813,814,29>",(x)); Inst30++; } } catch(e) {}
  x += 281474976710654;
try { if (Inst31 <= 1000 && typeof (x) != "undefined") {_RecordType("<837,838,30>",(x)); Inst31++; } } catch(e) {}
  x += 281474976710653;
try { if (Inst32 <= 1000 && typeof (x) != "undefined") {_RecordType("<861,862,31>",(x)); Inst32++; } } catch(e) {}
  x += 281474976710652;
try { if (Inst33 <= 1000 && typeof (x) != "undefined") {_RecordType("<885,886,32>",(x)); Inst33++; } } catch(e) {}
  x += 281474976710655;
try { if (Inst34 <= 1000 && typeof (x) != "undefined") {_RecordType("<909,910,33>",(x)); Inst34++; } } catch(e) {}
  x += 281474976710654;
try { if (Inst35 <= 1000 && typeof (x) != "undefined") {_RecordType("<933,934,34>",(x)); Inst35++; } } catch(e) {}
  x += 281474976710653;
try { if (Inst36 <= 1000 && typeof (x) != "undefined") {_RecordType("<957,958,35>",(x)); Inst36++; } } catch(e) {}
  x += 281474976710652;
try { if (Inst37 <= 1000 && typeof (x) != "undefined") {_RecordType("<981,982,36>",(x)); Inst37++; } } catch(e) {}
  x += 281474976710655;
try { if (Inst38 <= 1000 && typeof (x) != "undefined") {_RecordType("<1005,1006,37>",(x)); Inst38++; } } catch(e) {}
  x += 281474976710654;
try { if (Inst39 <= 1000 && typeof (x) != "undefined") {_RecordType("<1029,1030,38>",(x)); Inst39++; } } catch(e) {}
  x += 281474976710653;
try { if (Inst40 <= 1000 && typeof (x) != "undefined") {_RecordType("<1053,1054,39>",(x)); Inst40++; } } catch(e) {}
  x += 281474976710652;
try { if (Inst41 <= 1000 && typeof (x) != "undefined") {_RecordType("<1077,1078,40>",(x)); Inst41++; } } catch(e) {}
  x += 281474976710655;
try { if (Inst42 <= 1000 && typeof (x) != "undefined") {_RecordType("<1101,1102,41>",(x)); Inst42++; } } catch(e) {}
  x += 281474976710654;
try { if (Inst43 <= 1000 && typeof (x) != "undefined") {_RecordType("<1125,1126,42>",(x)); Inst43++; } } catch(e) {}
  x += 281474976710653;
try { if (Inst44 <= 1000 && typeof (x) != "undefined") {_RecordType("<1149,1150,43>",(x)); Inst44++; } } catch(e) {}
  x += 281474976710652;
try { if (Inst45 <= 1000 && typeof (x) != "undefined") {_RecordType("<1173,1174,44>",(x)); Inst45++; } } catch(e) {}
try { if (Inst46 <= 1000 && typeof (x) != "undefined") {_RecordType("<1204,1205,45>",(x)); Inst46++; } } catch(e) {}
  return x | 0;
}

for (var i = 0; i < 200; i++) {
try { if (Inst47 <= 1000 && typeof (i) != "undefined") {_RecordType("<1223,1224,48>",(i)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (i) != "undefined") {_RecordType("<1230,1231,48>",(i)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (i) != "undefined") {_RecordType("<1239,1240,48>",(i)); Inst49++; } } catch(e) {}
try { if (Inst50 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1248,1251,49>",(foo)); Inst50++; } } catch(e) {}
  foo(2147483647);
}

try { if (Inst51 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1268,1271,52>",(foo)); Inst51++; } } catch(e) {}
foo(2147483647);

