var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<0,11,1>",(console.log)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (console) != "undefined") {_RecordType("<0,7,1>",(console)); Inst1++; } } catch(e) {}
console.log("Check that short-circuiting Branch(LogicalNot(@a)) and then failing speculation does not result in the branch being taken the wrong way.");

try { if (Inst2 <= 1000 && typeof (foo) != "undefined") {_RecordType("<163,166,3>",(foo)); Inst2++; } } catch(e) {}
function foo(a) {
try { if (Inst3 <= 1000 && typeof (a) != "undefined") {_RecordType("<167,168,3>",(a)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (a.f) != "undefined") {_RecordType("<178,181,4>",(a.f)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (a) != "undefined") {_RecordType("<178,179,4>",(a)); Inst5++; } } catch(e) {}
  if (a.f) {
    return 1;
  }

  return 0;
}

try { if (Inst6 <= 1000 && typeof (bar) != "undefined") {_RecordType("<228,231,11>",(bar)); Inst6++; } } catch(e) {}
function bar(a) {
try { if (Inst7 <= 1000 && typeof (a) != "undefined") {_RecordType("<232,233,11>",(a)); Inst7++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (a.f) != "undefined") {_RecordType("<248,251,12>",(a.f)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (a) != "undefined") {_RecordType("<248,249,12>",(a)); Inst10++; } } catch(e) {}
  var b = !a.f;
try { if (Inst8 <= 1000 && typeof (b) != "undefined") {_RecordType("<243,244,12>",(b)); Inst8++; } } catch(e) {}

try { if (Inst11 <= 1000 && typeof (b) != "undefined") {_RecordType("<260,261,14>",(b)); Inst11++; } } catch(e) {}
  if (b) {
    return 1;
  }

  return 0;
}

silentTestPass = true;
try { if (Inst12 <= 1000 && typeof (silentTestPass) != "undefined") {_RecordType("<299,313,21>",(silentTestPass)); Inst12++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<322,330,22>",(noInline)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (foo) != "undefined") {_RecordType("<331,334,22>",(foo)); Inst14++; } } catch(e) {}
noInline(foo);
try { if (Inst15 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<337,345,23>",(noInline)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (bar) != "undefined") {_RecordType("<346,349,23>",(bar)); Inst16++; } } catch(e) {}
noInline(bar);
var True = true;
try { if (Inst17 <= 1000 && typeof (True) != "undefined") {_RecordType("<356,360,24>",(True)); Inst17++; } } catch(e) {}
var False = false;
try { if (Inst18 <= 1000 && typeof (False) != "undefined") {_RecordType("<373,378,25>",(False)); Inst18++; } } catch(e) {}

for (var i = 0; i < 200; i++) {
try { if (Inst19 <= 1000 && typeof (i) != "undefined") {_RecordType("<398,399,27>",(i)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<405,406,27>",(i)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<414,415,27>",(i)); Inst21++; } } catch(e) {}
  // dfgIncrement({f:[foo, bar], i:i + 1, n:50})) {
  var x;
try { if (Inst22 <= 1000 && typeof (x) != "undefined") {_RecordType("<479,480,29>",(x)); Inst22++; } } catch(e) {}

try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<489,490,31>",(i)); Inst23++; } } catch(e) {}
  if (i == 100) {
    True = "string";
try { if (Inst24 <= 1000 && typeof (True) != "undefined") {_RecordType("<505,509,32>",(True)); Inst24++; } } catch(e) {}
    False = void 0;
try { if (Inst25 <= 1000 && typeof (False) != "undefined") {_RecordType("<526,531,33>",(False)); Inst25++; } } catch(e) {}
  }

try { if (Inst26 <= 1000 && typeof (foo) != "undefined") {_RecordType("<549,552,36>",(foo)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (True) != "undefined") {_RecordType("<562,566,37>",(True)); Inst27++; } } catch(e) {}
  foo({
    f: True
  });
try { if (Inst28 <= 1000 && typeof (foo) != "undefined") {_RecordType("<575,578,39>",(foo)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (False) != "undefined") {_RecordType("<588,593,40>",(False)); Inst29++; } } catch(e) {}
  foo({
    f: False
  });
try { if (Inst30 <= 1000 && typeof (bar) != "undefined") {_RecordType("<602,605,42>",(bar)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (True) != "undefined") {_RecordType("<615,619,43>",(True)); Inst31++; } } catch(e) {}
  bar({
    f: True
  });
try { if (Inst32 <= 1000 && typeof (bar) != "undefined") {_RecordType("<628,631,45>",(bar)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (False) != "undefined") {_RecordType("<641,646,46>",(False)); Inst33++; } } catch(e) {}
  bar({
    f: False
  });
}

