var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<0,11,1>",(console.log)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (console) != "undefined") {_RecordType("<0,7,1>",(console)); Inst1++; } } catch(e) {}
console.log("This tests that inlining preserves basic function.arguments functionality.");

try { if (Inst2 <= 1000 && typeof (foo) != "undefined") {_RecordType("<101,104,3>",(foo)); Inst2++; } } catch(e) {}
function foo() {
try { if (Inst3 <= 1000 && typeof (bar.arguments) != "undefined") {_RecordType("<118,131,4>",(bar.arguments)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (bar) != "undefined") {_RecordType("<118,121,4>",(bar)); Inst4++; } } catch(e) {}
  return bar.arguments;
}

try { if (Inst5 <= 1000 && typeof (bar) != "undefined") {_RecordType("<145,148,7>",(bar)); Inst5++; } } catch(e) {}
function bar(a, b, c) {
try { if (Inst6 <= 1000 && typeof (a) != "undefined") {_RecordType("<149,150,7>",(a)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (b) != "undefined") {_RecordType("<152,153,7>",(b)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (c) != "undefined") {_RecordType("<155,156,7>",(c)); Inst8++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (foo) != "undefined") {_RecordType("<169,172,8>",(foo)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (a) != "undefined") {_RecordType("<173,174,8>",(a)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (b) != "undefined") {_RecordType("<176,177,8>",(b)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (c) != "undefined") {_RecordType("<179,180,8>",(c)); Inst12++; } } catch(e) {}
  return foo(a, b, c);
}

try { if (Inst13 <= 1000 && typeof (baz) != "undefined") {_RecordType("<195,198,11>",(baz)); Inst13++; } } catch(e) {}
function baz(a, b, c) {
try { if (Inst14 <= 1000 && typeof (a) != "undefined") {_RecordType("<199,200,11>",(a)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (b) != "undefined") {_RecordType("<202,203,11>",(b)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (c) != "undefined") {_RecordType("<205,206,11>",(c)); Inst16++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (bar) != "undefined") {_RecordType("<219,222,12>",(bar)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (a) != "undefined") {_RecordType("<223,224,12>",(a)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (b) != "undefined") {_RecordType("<226,227,12>",(b)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (c) != "undefined") {_RecordType("<229,230,12>",(c)); Inst20++; } } catch(e) {}
  return bar(a, b, c);
}

try { if (Inst21 <= 1000 && typeof (argsToStr) != "undefined") {_RecordType("<245,254,15>",(argsToStr)); Inst21++; } } catch(e) {}
function argsToStr(args) {
try { if (Inst22 <= 1000 && typeof (args) != "undefined") {_RecordType("<255,259,15>",(args)); Inst22++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (args) != "undefined") {_RecordType("<275,279,16>",(args)); Inst24++; } } catch(e) {}
  var str = args + ": ";
try { if (Inst23 <= 1000 && typeof (str) != "undefined") {_RecordType("<269,272,16>",(str)); Inst23++; } } catch(e) {}

  for (var i = 0; i < args.length; ++i) {
try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<300,301,18>",(i)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (i) != "undefined") {_RecordType("<307,308,18>",(i)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (args.length) != "undefined") {_RecordType("<311,322,18>",(args.length)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (args) != "undefined") {_RecordType("<311,315,18>",(args)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (i) != "undefined") {_RecordType("<326,327,18>",(i)); Inst29++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (i) != "undefined") {_RecordType("<339,340,19>",(i)); Inst30++; } } catch(e) {}
    if (i) {
      str += ", ";
try { if (Inst31 <= 1000 && typeof (str) != "undefined") {_RecordType("<350,353,20>",(str)); Inst31++; } } catch(e) {}
    }

try { if (Inst33 <= 1000 && typeof (args[i]) != "undefined") {_RecordType("<381,388,23>",(args[i])); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (args) != "undefined") {_RecordType("<381,385,23>",(args)); Inst34++; } } catch(e) {}
    str += args[i];
try { if (Inst32 <= 1000 && typeof (str) != "undefined") {_RecordType("<374,377,23>",(str)); Inst32++; } } catch(e) {}
  }

try { if (Inst35 <= 1000 && typeof (str) != "undefined") {_RecordType("<404,407,26>",(str)); Inst35++; } } catch(e) {}
  return str;
}

for (var __i = 0; __i < 200; ++__i) {
try { if (Inst36 <= 1000 && typeof (__i) != "undefined") {_RecordType("<421,424,29>",(__i)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (__i) != "undefined") {_RecordType("<430,433,29>",(__i)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (__i) != "undefined") {_RecordType("<443,446,29>",(__i)); Inst38++; } } catch(e) {}
try { if (Inst39 <= 1000 && typeof (argsToStr) != "undefined") {_RecordType("<452,461,30>",(argsToStr)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (baz) != "undefined") {_RecordType("<462,465,30>",(baz)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (__i) != "undefined") {_RecordType("<472,475,30>",(__i)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (__i) != "undefined") {_RecordType("<483,486,30>",(__i)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (__i) != "undefined") {_RecordType("<494,497,30>",(__i)); Inst43++; } } catch(e) {}
  argsToStr(baz("a" + __i, "b" + __i, "c" + __i));
}

var successfullyParsed = true;
try { if (Inst44 <= 1000 && typeof (successfullyParsed) != "undefined") {_RecordType("<508,526,33>",(successfullyParsed)); Inst44++; } } catch(e) {}

