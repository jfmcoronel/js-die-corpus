var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<0,11,1>",(console.log)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (console) != "undefined") {_RecordType("<0,7,1>",(console)); Inst1++; } } catch(e) {}
console.log("Checks that increased aggressiveness in sparse conditional constant propagation resultin from a node being proven to be force exit does not lead to a cascade of unsound decisions.");

try { if (Inst2 <= 1000 && typeof (foo) != "undefined") {_RecordType("<206,209,3>",(foo)); Inst2++; } } catch(e) {}
function foo(a) {
try { if (Inst3 <= 1000 && typeof (a) != "undefined") {_RecordType("<210,211,3>",(a)); Inst3++; } } catch(e) {}
  var i;
try { if (Inst4 <= 1000 && typeof (i) != "undefined") {_RecordType("<221,222,4>",(i)); Inst4++; } } catch(e) {}

try { if (Inst5 <= 1000 && typeof (a.push) != "undefined") {_RecordType("<231,237,6>",(a.push)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (a) != "undefined") {_RecordType("<231,232,6>",(a)); Inst6++; } } catch(e) {}
  if (a.push) {
    i = 0;
try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<245,246,7>",(i)); Inst7++; } } catch(e) {}
  } else {
try { if (Inst9 <= 1000 && typeof (a) != "undefined") {_RecordType("<271,272,9>",(a)); Inst9++; } } catch(e) {}
    i = a;
try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<267,268,9>",(i)); Inst8++; } } catch(e) {}
  }

  var result = 0;
try { if (Inst10 <= 1000 && typeof (result) != "undefined") {_RecordType("<285,291,12>",(result)); Inst10++; } } catch(e) {}

try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<307,308,14>",(i)); Inst11++; } } catch(e) {}
  while (i < 10) {
try { if (Inst13 <= 1000 && typeof (a[i]) != "undefined") {_RecordType("<331,335,15>",(a[i])); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (a) != "undefined") {_RecordType("<331,332,15>",(a)); Inst14++; } } catch(e) {}
    result += a[i];
try { if (Inst12 <= 1000 && typeof (result) != "undefined") {_RecordType("<321,327,15>",(result)); Inst12++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<341,342,16>",(i)); Inst15++; } } catch(e) {}
    i++;
  }

try { if (Inst16 <= 1000 && typeof (result) != "undefined") {_RecordType("<360,366,19>",(result)); Inst16++; } } catch(e) {}
  return result;
}

var array = [54, 5432, 1234, 54, 1235, 64, 75, 532, 64, 2];
try { if (Inst17 <= 1000 && typeof (array) != "undefined") {_RecordType("<375,380,22>",(array)); Inst17++; } } catch(e) {}
silentTestPass = true;
try { if (Inst18 <= 1000 && typeof (silentTestPass) != "undefined") {_RecordType("<431,445,23>",(silentTestPass)); Inst18++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<454,462,24>",(noInline)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (foo) != "undefined") {_RecordType("<463,466,24>",(foo)); Inst20++; } } catch(e) {}
noInline(foo);

for (var i = 0; i < 200; i++) {
try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<479,480,26>",(i)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<486,487,26>",(i)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<495,496,26>",(i)); Inst23++; } } catch(e) {}
  // i = dfgIncrement({f:foo, i:i + 1, n:1}))
try { if (Inst24 <= 1000 && typeof (foo) != "undefined") {_RecordType("<550,553,28>",(foo)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (array) != "undefined") {_RecordType("<554,559,28>",(array)); Inst25++; } } catch(e) {}
  foo(array);
}

