var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<0,11,1>",(console.log)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (console) != "undefined") {_RecordType("<0,7,1>",(console)); Inst1++; } } catch(e) {}
console.log("This test checks that uninitialized parameters for cached call functions correctly defaults to undefined.");

try { if (Inst2 <= 1000 && typeof (doForEach) != "undefined") {_RecordType("<132,141,3>",(doForEach)); Inst2++; } } catch(e) {}
function doForEach(arr) {
try { if (Inst3 <= 1000 && typeof (arr) != "undefined") {_RecordType("<142,145,3>",(arr)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (callback) != "undefined") {_RecordType("<160,168,4>",(callback)); Inst4++; } } catch(e) {}
  function callback(element, index, array, arg4, arg5, arg6) {
try { if (Inst5 <= 1000 && typeof (element) != "undefined") {_RecordType("<169,176,4>",(element)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (index) != "undefined") {_RecordType("<178,183,4>",(index)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (array) != "undefined") {_RecordType("<185,190,4>",(array)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (arg4) != "undefined") {_RecordType("<192,196,4>",(arg4)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (arg5) != "undefined") {_RecordType("<198,202,4>",(arg5)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (arg6) != "undefined") {_RecordType("<204,208,4>",(arg6)); Inst10++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (e) != "undefined") {_RecordType("<247,248,7>",(e)); Inst12++; } } catch(e) {}
    try {
try { if (Inst11 <= 1000 && typeof (arg4) != "undefined") {_RecordType("<228,232,6>",(arg4)); Inst11++; } } catch(e) {}
      arg4;
    } catch (e) {
      ;
    }

try { if (Inst14 <= 1000 && typeof (e) != "undefined") {_RecordType("<302,303,13>",(e)); Inst14++; } } catch(e) {}
    try {
try { if (Inst13 <= 1000 && typeof (arg5) != "undefined") {_RecordType("<283,287,12>",(arg5)); Inst13++; } } catch(e) {}
      arg5;
    } catch (e) {
      ;
    }

try { if (Inst16 <= 1000 && typeof (e) != "undefined") {_RecordType("<357,358,19>",(e)); Inst16++; } } catch(e) {}
    try {
try { if (Inst15 <= 1000 && typeof (arg6) != "undefined") {_RecordType("<338,342,18>",(arg6)); Inst15++; } } catch(e) {}
      arg6;
    } catch (e) {
      ;
    }
  }

try { if (Inst17 <= 1000 && typeof (arr.forEach) != "undefined") {_RecordType("<383,394,24>",(arr.forEach)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (arr) != "undefined") {_RecordType("<383,386,24>",(arr)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (callback) != "undefined") {_RecordType("<395,403,24>",(callback)); Inst19++; } } catch(e) {}
  arr.forEach(callback);
}

try { if (Inst20 <= 1000 && typeof (callAfterRecursingForDepth) != "undefined") {_RecordType("<418,444,27>",(callAfterRecursingForDepth)); Inst20++; } } catch(e) {}
function callAfterRecursingForDepth(depth, func, arr) {
try { if (Inst21 <= 1000 && typeof (depth) != "undefined") {_RecordType("<445,450,27>",(depth)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (func) != "undefined") {_RecordType("<452,456,27>",(func)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (arr) != "undefined") {_RecordType("<458,461,27>",(arr)); Inst23++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (depth) != "undefined") {_RecordType("<471,476,28>",(depth)); Inst24++; } } catch(e) {}
  if (depth > 0) {
try { if (Inst25 <= 1000 && typeof (callAfterRecursingForDepth) != "undefined") {_RecordType("<488,514,29>",(callAfterRecursingForDepth)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (depth) != "undefined") {_RecordType("<515,520,29>",(depth)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (func) != "undefined") {_RecordType("<526,530,29>",(func)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (arr) != "undefined") {_RecordType("<532,535,29>",(arr)); Inst28++; } } catch(e) {}
    callAfterRecursingForDepth(depth - 1, func, arr);
  } else {
try { if (Inst29 <= 1000 && typeof (func) != "undefined") {_RecordType("<553,557,31>",(func)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (arr) != "undefined") {_RecordType("<558,561,31>",(arr)); Inst30++; } } catch(e) {}
    func(arr);
  }
}

var arr = [1];
try { if (Inst31 <= 1000 && typeof (arr) != "undefined") {_RecordType("<575,578,35>",(arr)); Inst31++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (callAfterRecursingForDepth) != "undefined") {_RecordType("<586,612,36>",(callAfterRecursingForDepth)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (doForEach) != "undefined") {_RecordType("<617,626,36>",(doForEach)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (arr) != "undefined") {_RecordType("<628,631,36>",(arr)); Inst34++; } } catch(e) {}
callAfterRecursingForDepth(20, doForEach, arr);

