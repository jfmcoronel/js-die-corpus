var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<0,11,1>",(console.log)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (console) != "undefined") {_RecordType("<0,7,1>",(console)); Inst1++; } } catch(e) {}
console.log('This is a test of the charAt and charCodeAt string functions.');
var undefined;
try { if (Inst2 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<82,91,2>",(undefined)); Inst2++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<128,137,3>",(undefined)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<293,302,3>",(undefined)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<471,480,3>",(undefined)); Inst6++; } } catch(e) {}
var cases = [["", "omitted"], ["", undefined], ["", 0], ["", null], ["", false], ["", true], ["", 0.0], ["", 0.1], ["", 999], ["", 1 / 0], ["", -1], ["", -1 / 0], ["", 0 / 0], ["x", "omitted"], ["x", undefined], ["x", 0], ["x", null], ["x", false], ["x", true], ["x", 0.0], ["x", 0.1], ["x", 999], ["x", 1 / 0], ["x", -1], ["x", -1 / 0], ["x", 0 / 0], ["xy", "omitted"], ["xy", undefined], ["xy", 0], ["xy", null], ["xy", false], ["xy", true], ["xy", 0.0], ["xy", 0.1], ["xy", 999], ["xy", 1 / 0], ["xy", -1], ["xy", -1 / 0], ["xy", 0 / 0]];
try { if (Inst3 <= 1000 && typeof (cases) != "undefined") {_RecordType("<97,102,3>",(cases)); Inst3++; } } catch(e) {}
var answers = [['""', 'NaN'], ['""', 'NaN'], ['""', 'NaN'], ['""', 'NaN'], ['""', 'NaN'], ['""', 'NaN'], ['""', 'NaN'], ['""', 'NaN'], ['""', 'NaN'], ['""', 'NaN'], ['""', 'NaN'], ['""', 'NaN'], ['""', 'NaN'], ['"x"', '120'], ['"x"', '120'], ['"x"', '120'], ['"x"', '120'], ['"x"', '120'], ['""', 'NaN'], ['"x"', '120'], ['"x"', '120'], ['""', 'NaN'], ['""', 'NaN'], ['""', 'NaN'], ['""', 'NaN'], ['"x"', '120'], ['"x"', '120'], ['"x"', '120'], ['"x"', '120'], ['"x"', '120'], ['"x"', '120'], ['"y"', '121'], ['"x"', '120'], ['"x"', '120'], ['""', 'NaN'], ['""', 'NaN'], ['""', 'NaN'], ['""', 'NaN'], ['"x"', '120']];
try { if (Inst7 <= 1000 && typeof (answers) != "undefined") {_RecordType("<639,646,4>",(answers)); Inst7++; } } catch(e) {}

for (var i = 0; i < cases.length; ++i) {
try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<1263,1264,6>",(i)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<1270,1271,6>",(i)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (cases.length) != "undefined") {_RecordType("<1274,1286,6>",(cases.length)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (cases) != "undefined") {_RecordType("<1274,1279,6>",(cases)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<1290,1291,6>",(i)); Inst12++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (cases[i]) != "undefined") {_RecordType("<1308,1316,7>",(cases[i])); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (cases) != "undefined") {_RecordType("<1308,1313,7>",(cases)); Inst15++; } } catch(e) {}
  var item = cases[i];
try { if (Inst13 <= 1000 && typeof (item) != "undefined") {_RecordType("<1301,1305,7>",(item)); Inst13++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (answers[i]) != "undefined") {_RecordType("<1333,1343,8>",(answers[i])); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (answers) != "undefined") {_RecordType("<1333,1340,8>",(answers)); Inst18++; } } catch(e) {}
  var result = answers[i];
try { if (Inst16 <= 1000 && typeof (result) != "undefined") {_RecordType("<1324,1330,8>",(result)); Inst16++; } } catch(e) {}

try { if (Inst19 <= 1000 && typeof (item[1]) != "undefined") {_RecordType("<1352,1359,10>",(item[1])); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (item) != "undefined") {_RecordType("<1352,1356,10>",(item)); Inst20++; } } catch(e) {}
  if (item[1] == "omitted") {
try { if (Inst21 <= 1000 && typeof (item[0].charAt) != "undefined") {_RecordType("<1380,1394,11>",(item[0].charAt)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (item[0]) != "undefined") {_RecordType("<1380,1387,11>",(item[0])); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (item) != "undefined") {_RecordType("<1380,1384,11>",(item)); Inst23++; } } catch(e) {}
    item[0].charAt();

try { if (Inst24 <= 1000 && typeof (result[1]) != "undefined") {_RecordType("<1407,1416,13>",(result[1])); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (result) != "undefined") {_RecordType("<1407,1413,13>",(result)); Inst25++; } } catch(e) {}
    if (result[1] == 'NaN') {
try { if (Inst26 <= 1000 && typeof (item[0].charCodeAt) != "undefined") {_RecordType("<1435,1453,14>",(item[0].charCodeAt)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (item[0]) != "undefined") {_RecordType("<1435,1442,14>",(item[0])); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (item) != "undefined") {_RecordType("<1435,1439,14>",(item)); Inst28++; } } catch(e) {}
      item[0].charCodeAt();
    } else {
try { if (Inst29 <= 1000 && typeof (item[0].charCodeAt) != "undefined") {_RecordType("<1476,1494,16>",(item[0].charCodeAt)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (item[0]) != "undefined") {_RecordType("<1476,1483,16>",(item[0])); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (item) != "undefined") {_RecordType("<1476,1480,16>",(item)); Inst31++; } } catch(e) {}
      item[0].charCodeAt();
    }
  } else {
try { if (Inst32 <= 1000 && typeof (item[0].charAt) != "undefined") {_RecordType("<1519,1533,19>",(item[0].charAt)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (item[0]) != "undefined") {_RecordType("<1519,1526,19>",(item[0])); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (item) != "undefined") {_RecordType("<1519,1523,19>",(item)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (item[1]) != "undefined") {_RecordType("<1534,1541,19>",(item[1])); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (item) != "undefined") {_RecordType("<1534,1538,19>",(item)); Inst36++; } } catch(e) {}
    item[0].charAt(item[1]);

try { if (Inst37 <= 1000 && typeof (result[1]) != "undefined") {_RecordType("<1553,1562,21>",(result[1])); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (result) != "undefined") {_RecordType("<1553,1559,21>",(result)); Inst38++; } } catch(e) {}
    if (result[1] == 'NaN') {
try { if (Inst39 <= 1000 && typeof (item[0].charCodeAt) != "undefined") {_RecordType("<1581,1599,22>",(item[0].charCodeAt)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (item[0]) != "undefined") {_RecordType("<1581,1588,22>",(item[0])); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (item) != "undefined") {_RecordType("<1581,1585,22>",(item)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (item[1]) != "undefined") {_RecordType("<1600,1607,22>",(item[1])); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (item) != "undefined") {_RecordType("<1600,1604,22>",(item)); Inst43++; } } catch(e) {}
      item[0].charCodeAt(item[1]);
    } else {
try { if (Inst44 <= 1000 && typeof (item[0].charCodeAt) != "undefined") {_RecordType("<1629,1647,24>",(item[0].charCodeAt)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (item[0]) != "undefined") {_RecordType("<1629,1636,24>",(item[0])); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (item) != "undefined") {_RecordType("<1629,1633,24>",(item)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (item[1]) != "undefined") {_RecordType("<1648,1655,24>",(item[1])); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (item) != "undefined") {_RecordType("<1648,1652,24>",(item)); Inst48++; } } catch(e) {}
      item[0].charCodeAt(item[1]);
    }
  }
}

