var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<0,11,1>",(console.log)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (console) != "undefined") {_RecordType("<0,7,1>",(console)); Inst1++; } } catch(e) {}
console.log('This test checks break and continue behaviour in the presence of multiple labels.');

try { if (Inst2 <= 1000 && typeof (test1) != "undefined") {_RecordType("<108,113,3>",(test1)); Inst2++; } } catch(e) {}
function test1() {
  var s = "";
try { if (Inst3 <= 1000 && typeof (s) != "undefined") {_RecordType("<124,125,4>",(s)); Inst3++; } } catch(e) {}

try { if (Inst4 <= 1000 && typeof (a) != "undefined") {_RecordType("<135,136,6>",(a)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (b) != "undefined") {_RecordType("<138,139,6>",(b)); Inst5++; } } catch(e) {}
  a: b: for (var i = 1; i < 10; i++) {
try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<150,151,6>",(i)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<157,158,6>",(i)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<165,166,6>",(i)); Inst8++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<180,181,7>",(i)); Inst9++; } } catch(e) {}
    if (i == 4) {
try { if (Inst10 <= 1000 && typeof (a) != "undefined") {_RecordType("<205,206,8>",(a)); Inst10++; } } catch(e) {}
      continue a;
    }

try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<224,225,11>",(i)); Inst12++; } } catch(e) {}
    s += i;
try { if (Inst11 <= 1000 && typeof (s) != "undefined") {_RecordType("<219,220,11>",(s)); Inst11++; } } catch(e) {}
  }

try { if (Inst13 <= 1000 && typeof (s) != "undefined") {_RecordType("<241,242,14>",(s)); Inst13++; } } catch(e) {}
  return s;
}

try { if (Inst14 <= 1000 && typeof (test1) != "undefined") {_RecordType("<247,252,17>",(test1)); Inst14++; } } catch(e) {}
test1();

try { if (Inst15 <= 1000 && typeof (test2) != "undefined") {_RecordType("<266,271,19>",(test2)); Inst15++; } } catch(e) {}
function test2() {
  var s = "";
try { if (Inst16 <= 1000 && typeof (s) != "undefined") {_RecordType("<282,283,20>",(s)); Inst16++; } } catch(e) {}

try { if (Inst17 <= 1000 && typeof (a) != "undefined") {_RecordType("<293,294,22>",(a)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (b) != "undefined") {_RecordType("<296,297,22>",(b)); Inst18++; } } catch(e) {}
  a: b: for (var i = 1; i < 10; i++) {
try { if (Inst19 <= 1000 && typeof (i) != "undefined") {_RecordType("<308,309,22>",(i)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<315,316,22>",(i)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<323,324,22>",(i)); Inst21++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<338,339,23>",(i)); Inst22++; } } catch(e) {}
    if (i == 4) {
try { if (Inst23 <= 1000 && typeof (a) != "undefined") {_RecordType("<360,361,24>",(a)); Inst23++; } } catch(e) {}
      break a;
    }

try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<379,380,27>",(i)); Inst25++; } } catch(e) {}
    s += i;
try { if (Inst24 <= 1000 && typeof (s) != "undefined") {_RecordType("<374,375,27>",(s)); Inst24++; } } catch(e) {}
  }

try { if (Inst26 <= 1000 && typeof (s) != "undefined") {_RecordType("<396,397,30>",(s)); Inst26++; } } catch(e) {}
  return s;
}

try { if (Inst27 <= 1000 && typeof (test2) != "undefined") {_RecordType("<402,407,33>",(test2)); Inst27++; } } catch(e) {}
test2();

try { if (Inst28 <= 1000 && typeof (test3) != "undefined") {_RecordType("<421,426,35>",(test3)); Inst28++; } } catch(e) {}
function test3() {
  var i;
try { if (Inst29 <= 1000 && typeof (i) != "undefined") {_RecordType("<437,438,36>",(i)); Inst29++; } } catch(e) {}

  for (i = 1; i < 10; i++) {
try { if (Inst30 <= 1000 && typeof (i) != "undefined") {_RecordType("<448,449,38>",(i)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (i) != "undefined") {_RecordType("<455,456,38>",(i)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (i) != "undefined") {_RecordType("<463,464,38>",(i)); Inst32++; } } catch(e) {}
    try {
      continue;
    } finally {
try { if (Inst33 <= 1000 && typeof (innerLoop) != "undefined") {_RecordType("<518,527,42>",(innerLoop)); Inst33++; } } catch(e) {}
      innerLoop: while (1) {
try { if (Inst34 <= 1000 && typeof (innerLoop) != "undefined") {_RecordType("<555,564,43>",(innerLoop)); Inst34++; } } catch(e) {}
        break innerLoop;
      }
    }
  }

try { if (Inst35 <= 1000 && typeof (i) != "undefined") {_RecordType("<594,595,48>",(i)); Inst35++; } } catch(e) {}
  return i;
}

try { if (Inst36 <= 1000 && typeof (test3) != "undefined") {_RecordType("<600,605,51>",(test3)); Inst36++; } } catch(e) {}
test3();

try { if (Inst37 <= 1000 && typeof (test4) != "undefined") {_RecordType("<619,624,53>",(test4)); Inst37++; } } catch(e) {}
function test4() {
  var i = 0;
try { if (Inst38 <= 1000 && typeof (i) != "undefined") {_RecordType("<635,636,54>",(i)); Inst38++; } } catch(e) {}

try { if (Inst39 <= 1000 && typeof (a) != "undefined") {_RecordType("<645,646,56>",(a)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (i) != "undefined") {_RecordType("<648,649,56>",(i)); Inst40++; } } catch(e) {}
  a: i++;

  while (1) {
    break;
  }

try { if (Inst41 <= 1000 && typeof (i) != "undefined") {_RecordType("<693,694,62>",(i)); Inst41++; } } catch(e) {}
  return i;
}

try { if (Inst42 <= 1000 && typeof (test4) != "undefined") {_RecordType("<699,704,65>",(test4)); Inst42++; } } catch(e) {}
test4();

try { if (Inst43 <= 1000 && typeof (test5) != "undefined") {_RecordType("<718,723,67>",(test5)); Inst43++; } } catch(e) {}
function test5() {
  var i = 0;
try { if (Inst44 <= 1000 && typeof (i) != "undefined") {_RecordType("<734,735,68>",(i)); Inst44++; } } catch(e) {}

  switch (1) {
    default:
      while (1) {
        break;
      }

try { if (Inst45 <= 1000 && typeof (i) != "undefined") {_RecordType("<818,819,76>",(i)); Inst45++; } } catch(e) {}
      i++;
  }

try { if (Inst46 <= 1000 && typeof (i) != "undefined") {_RecordType("<837,838,79>",(i)); Inst46++; } } catch(e) {}
  return i;
}

try { if (Inst47 <= 1000 && typeof (test5) != "undefined") {_RecordType("<843,848,82>",(test5)); Inst47++; } } catch(e) {}
test5();

