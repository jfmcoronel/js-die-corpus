var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<0,11,1>",(console.log)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (console) != "undefined") {_RecordType("<0,7,1>",(console)); Inst1++; } } catch(e) {}
console.log('Tests for ES6 class syntax default constructor');

try { if (Inst2 <= 1000 && typeof (assert) != "undefined") {_RecordType("<73,79,3>",(assert)); Inst2++; } } catch(e) {}
function assert(b) {
try { if (Inst3 <= 1000 && typeof (b) != "undefined") {_RecordType("<80,81,3>",(b)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (b) != "undefined") {_RecordType("<92,93,4>",(b)); Inst4++; } } catch(e) {}
  if (!b) {
try { if (Inst5 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<101,112,5>",(console.log)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (console) != "undefined") {_RecordType("<101,108,5>",(console)); Inst6++; } } catch(e) {}
    console.log("Failed assert");
  } else {
try { if (Inst7 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<146,157,7>",(console.log)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (console) != "undefined") {_RecordType("<146,153,7>",(console)); Inst8++; } } catch(e) {}
    console.log("Passed assert");
  }
}

class A {}
try { if (Inst9 <= 1000 && typeof (A) != "undefined") {_RecordType("<189,190,11>",(A)); Inst9++; } } catch(e) {}

;

try { if (Inst11 <= 1000 && typeof (A) != "undefined") {_RecordType("<214,215,15>",(A)); Inst11++; } } catch(e) {}
class B extends A {}
try { if (Inst10 <= 1000 && typeof (B) != "undefined") {_RecordType("<204,205,15>",(B)); Inst10++; } } catch(e) {}

;
try { if (Inst12 <= 1000 && typeof (A) != "undefined") {_RecordType("<226,227,18>",(A)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (A) != "undefined") {_RecordType("<241,242,18>",(A)); Inst13++; } } catch(e) {}
new A() instanceof A;

try { if (Inst15 <= 1000 && typeof (e) != "undefined") {_RecordType("<267,268,22>",(e)); Inst15++; } } catch(e) {}
try {
try { if (Inst14 <= 1000 && typeof (A) != "undefined") {_RecordType("<253,254,21>",(A)); Inst14++; } } catch(e) {}
  A();
} catch (e) {
  ;
}

try { if (Inst16 <= 1000 && typeof (A.prototype.constructor) != "undefined") {_RecordType("<279,302,26>",(A.prototype.constructor)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (A.prototype) != "undefined") {_RecordType("<279,290,26>",(A.prototype)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (A) != "undefined") {_RecordType("<279,280,26>",(A)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Function) != "undefined") {_RecordType("<314,322,26>",(Function)); Inst19++; } } catch(e) {}
A.prototype.constructor instanceof Function;
try { if (Inst20 <= 1000 && typeof (A.prototype.constructor.name) != "undefined") {_RecordType("<324,352,27>",(A.prototype.constructor.name)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (A.prototype.constructor) != "undefined") {_RecordType("<324,347,27>",(A.prototype.constructor)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (A.prototype) != "undefined") {_RecordType("<324,335,27>",(A.prototype)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (A) != "undefined") {_RecordType("<324,325,27>",(A)); Inst23++; } } catch(e) {}
A.prototype.constructor.name;
try { if (Inst24 <= 1000 && typeof (B) != "undefined") {_RecordType("<358,359,28>",(B)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (A) != "undefined") {_RecordType("<373,374,28>",(A)); Inst25++; } } catch(e) {}
new B() instanceof A;
try { if (Inst26 <= 1000 && typeof (B) != "undefined") {_RecordType("<380,381,29>",(B)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (A) != "undefined") {_RecordType("<395,396,29>",(A)); Inst27++; } } catch(e) {}
new B() instanceof A;

try { if (Inst29 <= 1000 && typeof (e) != "undefined") {_RecordType("<421,422,33>",(e)); Inst29++; } } catch(e) {}
try {
try { if (Inst28 <= 1000 && typeof (B) != "undefined") {_RecordType("<407,408,32>",(B)); Inst28++; } } catch(e) {}
  B();
} catch (e) {
  ;
}

try { if (Inst30 <= 1000 && typeof (B.prototype.constructor.name) != "undefined") {_RecordType("<433,461,37>",(B.prototype.constructor.name)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (B.prototype.constructor) != "undefined") {_RecordType("<433,456,37>",(B.prototype.constructor)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (B.prototype) != "undefined") {_RecordType("<433,444,37>",(B.prototype)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (B) != "undefined") {_RecordType("<433,434,37>",(B)); Inst33++; } } catch(e) {}
B.prototype.constructor.name;
try { if (Inst34 <= 1000 && typeof (A) != "undefined") {_RecordType("<463,464,38>",(A)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (B) != "undefined") {_RecordType("<469,470,38>",(B)); Inst35++; } } catch(e) {}
A !== B;
try { if (Inst36 <= 1000 && typeof (A.prototype.constructor) != "undefined") {_RecordType("<472,495,39>",(A.prototype.constructor)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (A.prototype) != "undefined") {_RecordType("<472,483,39>",(A.prototype)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (A) != "undefined") {_RecordType("<472,473,39>",(A)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (B.prototype.constructor) != "undefined") {_RecordType("<500,523,39>",(B.prototype.constructor)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (B.prototype) != "undefined") {_RecordType("<500,511,39>",(B.prototype)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (B) != "undefined") {_RecordType("<500,501,39>",(B)); Inst41++; } } catch(e) {}
A.prototype.constructor !== B.prototype.constructor;
var result = new class extends class {
  constructor(a, b) {
try { if (Inst43 <= 1000 && typeof (a) != "undefined") {_RecordType("<578,579,41>",(a)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (b) != "undefined") {_RecordType("<581,582,41>",(b)); Inst44++; } } catch(e) {}
try { if (Inst45 <= 1000 && typeof (a) != "undefined") {_RecordType("<598,599,42>",(a)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (b) != "undefined") {_RecordType("<601,602,42>",(b)); Inst46++; } } catch(e) {}
    return [a, b];
  }

} {}(1, 2);
try { if (Inst42 <= 1000 && typeof (result) != "undefined") {_RecordType("<529,535,40>",(result)); Inst42++; } } catch(e) {}
try { if (Inst47 <= 1000 && typeof (result[0]) != "undefined") {_RecordType("<622,631,46>",(result[0])); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (result) != "undefined") {_RecordType("<622,628,46>",(result)); Inst48++; } } catch(e) {}
result[0] === 1;
try { if (Inst49 <= 1000 && typeof (result[1]) != "undefined") {_RecordType("<639,648,47>",(result[1])); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (result) != "undefined") {_RecordType("<639,645,47>",(result)); Inst50++; } } catch(e) {}
result[1] === 2;
var successfullyParsed = true;
try { if (Inst51 <= 1000 && typeof (successfullyParsed) != "undefined") {_RecordType("<660,678,48>",(successfullyParsed)); Inst51++; } } catch(e) {}

