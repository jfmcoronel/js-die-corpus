var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<0,11,1>",(console.log)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (console) != "undefined") {_RecordType("<0,7,1>",(console)); Inst1++; } } catch(e) {}
console.log("Test for correct properties on Error objects.");

try { if (Inst2 <= 1000 && typeof (enumerableProperties) != "undefined") {_RecordType("<72,92,3>",(enumerableProperties)); Inst2++; } } catch(e) {}
function enumerableProperties(object) {
try { if (Inst3 <= 1000 && typeof (object) != "undefined") {_RecordType("<93,99,3>",(object)); Inst3++; } } catch(e) {}
  var result = [];
try { if (Inst4 <= 1000 && typeof (result) != "undefined") {_RecordType("<109,115,4>",(result)); Inst4++; } } catch(e) {}

  for (var i in object) {
try { if (Inst5 <= 1000 && typeof (i) != "undefined") {_RecordType("<134,135,6>",(i)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (object) != "undefined") {_RecordType("<139,145,6>",(object)); Inst6++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (result.push) != "undefined") {_RecordType("<153,164,7>",(result.push)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (result) != "undefined") {_RecordType("<153,159,7>",(result)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<165,166,7>",(i)); Inst9++; } } catch(e) {}
    result.push(i);
  }

try { if (Inst10 <= 1000 && typeof (result) != "undefined") {_RecordType("<183,189,10>",(result)); Inst10++; } } catch(e) {}
  return result;
}

try { if (Inst12 <= 1000 && typeof (rangeError) != "undefined") {_RecordType("<255,265,16>",(rangeError)); Inst12++; } } catch(e) {}
try {
  // generate a RangeError.
  [].length = -1;
try { if (Inst11 <= 1000 && typeof ([].length) != "undefined") {_RecordType("<230,239,15>",([].length)); Inst11++; } } catch(e) {}
} catch (rangeError) {
try { if (Inst14 <= 1000 && typeof (rangeError) != "undefined") {_RecordType("<289,299,17>",(rangeError)); Inst14++; } } catch(e) {}
  var nativeError = rangeError;
try { if (Inst13 <= 1000 && typeof (nativeError) != "undefined") {_RecordType("<275,286,17>",(nativeError)); Inst13++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (Error) != "undefined") {_RecordType("<319,324,18>",(Error)); Inst16++; } } catch(e) {}
  var error = new Error("message");
try { if (Inst15 <= 1000 && typeof (error) != "undefined") {_RecordType("<307,312,18>",(error)); Inst15++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (enumerableProperties(error).sort) != "undefined") {_RecordType("<339,371,19>",(enumerableProperties(error).sort)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (enumerableProperties) != "undefined") {_RecordType("<339,359,19>",(enumerableProperties)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (error) != "undefined") {_RecordType("<360,365,19>",(error)); Inst19++; } } catch(e) {}
  enumerableProperties(error).sort();
try { if (Inst20 <= 1000 && typeof (enumerableProperties(nativeError).sort) != "undefined") {_RecordType("<377,415,20>",(enumerableProperties(nativeError).sort)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (enumerableProperties) != "undefined") {_RecordType("<377,397,20>",(enumerableProperties)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (nativeError) != "undefined") {_RecordType("<398,409,20>",(nativeError)); Inst22++; } } catch(e) {}
  enumerableProperties(nativeError).sort();
try { if (Inst23 <= 1000 && typeof (Object.getPrototypeOf(nativeError).name) != "undefined") {_RecordType("<421,460,21>",(Object.getPrototypeOf(nativeError).name)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (Object.getPrototypeOf) != "undefined") {_RecordType("<421,442,21>",(Object.getPrototypeOf)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Object) != "undefined") {_RecordType("<421,427,21>",(Object)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (nativeError) != "undefined") {_RecordType("<443,454,21>",(nativeError)); Inst26++; } } catch(e) {}
  Object.getPrototypeOf(nativeError).name;
try { if (Inst27 <= 1000 && typeof (Object.getPrototypeOf(nativeError).message) != "undefined") {_RecordType("<464,506,22>",(Object.getPrototypeOf(nativeError).message)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (Object.getPrototypeOf) != "undefined") {_RecordType("<464,485,22>",(Object.getPrototypeOf)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (Object) != "undefined") {_RecordType("<464,470,22>",(Object)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (nativeError) != "undefined") {_RecordType("<486,497,22>",(nativeError)); Inst30++; } } catch(e) {}
  Object.getPrototypeOf(nativeError).message;
}

