var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<0,11,1>",(console.log)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (console) != "undefined") {_RecordType("<0,7,1>",(console)); Inst1++; } } catch(e) {}
console.log("Test to ensure correct behaviour of Object.defineProperties");

try { if (Inst4 <= 1000 && typeof (e) != "undefined") {_RecordType("<121,122,5>",(e)); Inst4++; } } catch(e) {}
try {
try { if (Inst2 <= 1000 && typeof (Object.defineProperties) != "undefined") {_RecordType("<85,108,4>",(Object.defineProperties)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Object) != "undefined") {_RecordType("<85,91,4>",(Object)); Inst3++; } } catch(e) {}
  Object.defineProperties();
} catch (e) {
  ;
}

try { if (Inst7 <= 1000 && typeof (e) != "undefined") {_RecordType("<187,188,11>",(e)); Inst7++; } } catch(e) {}
try {
try { if (Inst5 <= 1000 && typeof (Object.defineProperties) != "undefined") {_RecordType("<141,164,10>",(Object.defineProperties)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Object) != "undefined") {_RecordType("<141,147,10>",(Object)); Inst6++; } } catch(e) {}
  Object.defineProperties('a string');
} catch (e) {
  ;
}

try { if (Inst10 <= 1000 && typeof (e) != "undefined") {_RecordType("<257,258,17>",(e)); Inst10++; } } catch(e) {}
try {
try { if (Inst8 <= 1000 && typeof (Object.defineProperties) != "undefined") {_RecordType("<207,230,16>",(Object.defineProperties)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Object) != "undefined") {_RecordType("<207,213,16>",(Object)); Inst9++; } } catch(e) {}
  Object.defineProperties({}, 'a string');
} catch (e) {
  ;
}

try { if (Inst11 <= 1000 && typeof (JSON.stringify) != "undefined") {_RecordType("<269,283,21>",(JSON.stringify)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<269,273,21>",(JSON)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Object.defineProperties) != "undefined") {_RecordType("<284,307,21>",(Object.defineProperties)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Object) != "undefined") {_RecordType("<284,290,21>",(Object)); Inst14++; } } catch(e) {}
JSON.stringify(Object.defineProperties({}, {
  property: {
    value: 'foo',
    enumerable: true
  },
  property2: {
    value: 'foo',
    enumerable: true
  }
}));
try { if (Inst15 <= 1000 && typeof (JSON.stringify) != "undefined") {_RecordType("<435,449,31>",(JSON.stringify)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<435,439,31>",(JSON)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Object.defineProperties) != "undefined") {_RecordType("<450,473,31>",(Object.defineProperties)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Object) != "undefined") {_RecordType("<450,456,31>",(Object)); Inst18++; } } catch(e) {}
JSON.stringify(Object.defineProperties({}, {
  property: {
    value: 'foo'
  },
  property2: {
    value: 'foo',
    enumerable: true
  }
}));
try { if (Inst19 <= 1000 && typeof (JSON.stringify) != "undefined") {_RecordType("<579,593,40>",(JSON.stringify)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<579,583,40>",(JSON)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Object.defineProperties) != "undefined") {_RecordType("<594,617,40>",(Object.defineProperties)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Object) != "undefined") {_RecordType("<594,600,40>",(Object)); Inst22++; } } catch(e) {}
JSON.stringify(Object.defineProperties({
  property: 'foo'
}, {
  property: {
    value: 'foo',
    enumerable: true
  },
  property2: {
    value: 'foo',
    enumerable: true
  }
}));
try { if (Inst23 <= 1000 && typeof (JSON.stringify) != "undefined") {_RecordType("<764,778,52>",(JSON.stringify)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<764,768,52>",(JSON)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Object.defineProperties) != "undefined") {_RecordType("<779,802,52>",(Object.defineProperties)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Object) != "undefined") {_RecordType("<779,785,52>",(Object)); Inst26++; } } catch(e) {}
JSON.stringify(Object.defineProperties({
  property: 'foo'
}, {
  property: {
    value: 'foo',
    enumerable: false
  },
  property2: {
    value: 'foo',
    enumerable: true
  }
}));
try { if (Inst27 <= 1000 && typeof (JSON.stringify) != "undefined") {_RecordType("<950,964,64>",(JSON.stringify)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<950,954,64>",(JSON)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (Object.defineProperties) != "undefined") {_RecordType("<965,988,64>",(Object.defineProperties)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (Object) != "undefined") {_RecordType("<965,971,64>",(Object)); Inst30++; } } catch(e) {}
JSON.stringify(Object.defineProperties({
  property: 'foo'
}, {
  property: {
    value: 'foo'
  },
  property2: {
    value: 'foo',
    enumerable: true
  }
}));
emptyObject = {};
try { if (Inst31 <= 1000 && typeof (emptyObject) != "undefined") {_RecordType("<1113,1124,75>",(emptyObject)); Inst31++; } } catch(e) {}

try { if (Inst35 <= 1000 && typeof (e) != "undefined") {_RecordType("<1312,1313,89>",(e)); Inst35++; } } catch(e) {}
try {
try { if (Inst32 <= 1000 && typeof (Object.defineProperties) != "undefined") {_RecordType("<1140,1163,78>",(Object.defineProperties)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1140,1146,78>",(Object)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (emptyObject) != "undefined") {_RecordType("<1164,1175,78>",(emptyObject)); Inst34++; } } catch(e) {}
  Object.defineProperties(emptyObject, {
    foo: {
      value: true
    },
    bar: {
      get: function () {
        ;
      },
      writable: true
    }
  });
} catch (e) {
  ;
}

try { if (Inst36 <= 1000 && typeof (emptyObject) != "undefined") {_RecordType("<1333,1344,93>",(emptyObject)); Inst36++; } } catch(e) {}
'foo' in emptyObject;

