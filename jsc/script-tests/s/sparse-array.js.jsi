var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<0,11,1>",(console.log)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (console) != "undefined") {_RecordType("<0,7,1>",(console)); Inst1++; } } catch(e) {}
console.log('This tests some sparse array operations.');
var array = [];
try { if (Inst2 <= 1000 && typeof (array) != "undefined") {_RecordType("<61,66,2>",(array)); Inst2++; } } catch(e) {}
array[50000] = 100;
try { if (Inst3 <= 1000 && typeof (array[50000]) != "undefined") {_RecordType("<73,85,3>",(array[50000])); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (array) != "undefined") {_RecordType("<73,78,3>",(array)); Inst4++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (array[0]) != "undefined") {_RecordType("<93,101,4>",(array[0])); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (array) != "undefined") {_RecordType("<93,98,4>",(array)); Inst6++; } } catch(e) {}
array[0];
try { if (Inst7 <= 1000 && typeof (array[49999]) != "undefined") {_RecordType("<103,115,5>",(array[49999])); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (array) != "undefined") {_RecordType("<103,108,5>",(array)); Inst8++; } } catch(e) {}
array[49999];
try { if (Inst9 <= 1000 && typeof (array[50000]) != "undefined") {_RecordType("<117,129,6>",(array[50000])); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (array) != "undefined") {_RecordType("<117,122,6>",(array)); Inst10++; } } catch(e) {}
array[50000];
try { if (Inst11 <= 1000 && typeof (array[50001]) != "undefined") {_RecordType("<131,143,7>",(array[50001])); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (array) != "undefined") {_RecordType("<131,136,7>",(array)); Inst12++; } } catch(e) {}
array[50001];
try { if (Inst13 <= 1000 && typeof (array[0]) != "undefined") {_RecordType("<145,153,8>",(array[0])); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (array) != "undefined") {_RecordType("<145,150,8>",(array)); Inst14++; } } catch(e) {}
array[0]++;
try { if (Inst15 <= 1000 && typeof (array[0]) != "undefined") {_RecordType("<157,165,9>",(array[0])); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (array) != "undefined") {_RecordType("<157,162,9>",(array)); Inst16++; } } catch(e) {}
array[0];
try { if (Inst17 <= 1000 && typeof (array[49999]) != "undefined") {_RecordType("<167,179,10>",(array[49999])); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (array) != "undefined") {_RecordType("<167,172,10>",(array)); Inst18++; } } catch(e) {}
array[49999];
try { if (Inst19 <= 1000 && typeof (array[50000]) != "undefined") {_RecordType("<181,193,11>",(array[50000])); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (array) != "undefined") {_RecordType("<181,186,11>",(array)); Inst20++; } } catch(e) {}
array[50000];
try { if (Inst21 <= 1000 && typeof (array[50001]) != "undefined") {_RecordType("<195,207,12>",(array[50001])); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (array) != "undefined") {_RecordType("<195,200,12>",(array)); Inst22++; } } catch(e) {}
array[50001]; // This tests oscillation between being sparse and dense.

try { if (Inst23 <= 1000 && typeof (array[50000]) != "undefined") {_RecordType("<275,287,14>",(array[50000])); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (array) != "undefined") {_RecordType("<275,280,14>",(array)); Inst24++; } } catch(e) {}
delete array[50000];
array.length = 5;
try { if (Inst25 <= 1000 && typeof (array.length) != "undefined") {_RecordType("<289,301,15>",(array.length)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (array) != "undefined") {_RecordType("<289,294,15>",(array)); Inst26++; } } catch(e) {}
array[50000] = 100;
try { if (Inst27 <= 1000 && typeof (array[50000]) != "undefined") {_RecordType("<307,319,16>",(array[50000])); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (array) != "undefined") {_RecordType("<307,312,16>",(array)); Inst28++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (array[0]) != "undefined") {_RecordType("<327,335,17>",(array[0])); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (array) != "undefined") {_RecordType("<327,332,17>",(array)); Inst30++; } } catch(e) {}
array[0];
try { if (Inst31 <= 1000 && typeof (array[49999]) != "undefined") {_RecordType("<337,349,18>",(array[49999])); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (array) != "undefined") {_RecordType("<337,342,18>",(array)); Inst32++; } } catch(e) {}
array[49999];
try { if (Inst33 <= 1000 && typeof (array[50000]) != "undefined") {_RecordType("<351,363,19>",(array[50000])); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (array) != "undefined") {_RecordType("<351,356,19>",(array)); Inst34++; } } catch(e) {}
array[50000];
try { if (Inst35 <= 1000 && typeof (array[50001]) != "undefined") {_RecordType("<365,377,20>",(array[50001])); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (array) != "undefined") {_RecordType("<365,370,20>",(array)); Inst36++; } } catch(e) {}
array[50001];
try { if (Inst37 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<379,390,21>",(console.log)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (console) != "undefined") {_RecordType("<379,386,21>",(console)); Inst38++; } } catch(e) {}
console.log('');

