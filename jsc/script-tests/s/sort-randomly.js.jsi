var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<0,11,1>",(console.log)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (console) != "undefined") {_RecordType("<0,7,1>",(console)); Inst1++; } } catch(e) {}
console.log("This tests that passing an inconsistent compareFn to sort() doesn't cause a crash.");

for (var attempt = 0; attempt < 100; ++attempt) {
try { if (Inst2 <= 1000 && typeof (attempt) != "undefined") {_RecordType("<109,116,3>",(attempt)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (attempt) != "undefined") {_RecordType("<122,129,3>",(attempt)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (attempt) != "undefined") {_RecordType("<139,146,3>",(attempt)); Inst4++; } } catch(e) {}
  var arr = [];
try { if (Inst5 <= 1000 && typeof (arr) != "undefined") {_RecordType("<156,159,4>",(arr)); Inst5++; } } catch(e) {}

  for (var i = 0; i < 64; ++i) {
try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<178,179,6>",(i)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<185,186,6>",(i)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<195,196,6>",(i)); Inst8++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<213,214,7>",(i)); Inst11++; } } catch(e) {}
    arr[i] = i;
try { if (Inst9 <= 1000 && typeof (arr[i]) != "undefined") {_RecordType("<204,210,7>",(arr[i])); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (arr) != "undefined") {_RecordType("<204,207,7>",(arr)); Inst10++; } } catch(e) {}
  }

try { if (Inst12 <= 1000 && typeof (arr.sort) != "undefined") {_RecordType("<223,231,10>",(arr.sort)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (arr) != "undefined") {_RecordType("<223,226,10>",(arr)); Inst13++; } } catch(e) {}
  arr.sort(function () {
try { if (Inst14 <= 1000 && typeof (Math.random) != "undefined") {_RecordType("<263,274,11>",(Math.random)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Math) != "undefined") {_RecordType("<263,267,11>",(Math)); Inst15++; } } catch(e) {}
    return 0.5 - Math.random();
  });
} // Sorting objects that change each time sort() looks at them is the same as using a random compareFn.


try { if (Inst16 <= 1000 && typeof (RandomObject) != "undefined") {_RecordType("<400,412,16>",(RandomObject)); Inst16++; } } catch(e) {}
function RandomObject() {
  this.toString = function () {
try { if (Inst18 <= 1000 && typeof ((Math.random() * 100).toString) != "undefined") {_RecordType("<460,490,18>",((Math.random() * 100).toString)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Math.random) != "undefined") {_RecordType("<461,472,18>",(Math.random)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (Math) != "undefined") {_RecordType("<461,465,18>",(Math)); Inst20++; } } catch(e) {}
    return (Math.random() * 100).toString();
  };
try { if (Inst17 <= 1000 && typeof (this.toString) != "undefined") {_RecordType("<419,432,17>",(this.toString)); Inst17++; } } catch(e) {}
}

for (var attempt = 0; attempt < 100; ++attempt) {
try { if (Inst21 <= 1000 && typeof (attempt) != "undefined") {_RecordType("<511,518,22>",(attempt)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (attempt) != "undefined") {_RecordType("<524,531,22>",(attempt)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (attempt) != "undefined") {_RecordType("<541,548,22>",(attempt)); Inst23++; } } catch(e) {}
  var arr = [];
try { if (Inst24 <= 1000 && typeof (arr) != "undefined") {_RecordType("<558,561,23>",(arr)); Inst24++; } } catch(e) {}

  for (var i = 0; i < 64; ++i) {
try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<580,581,25>",(i)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (i) != "undefined") {_RecordType("<587,588,25>",(i)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (i) != "undefined") {_RecordType("<597,598,25>",(i)); Inst27++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (RandomObject) != "undefined") {_RecordType("<619,631,26>",(RandomObject)); Inst30++; } } catch(e) {}
    arr[i] = new RandomObject();
try { if (Inst28 <= 1000 && typeof (arr[i]) != "undefined") {_RecordType("<606,612,26>",(arr[i])); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (arr) != "undefined") {_RecordType("<606,609,26>",(arr)); Inst29++; } } catch(e) {}
  }

try { if (Inst31 <= 1000 && typeof (arr.sort) != "undefined") {_RecordType("<642,650,29>",(arr.sort)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (arr) != "undefined") {_RecordType("<642,645,29>",(arr)); Inst32++; } } catch(e) {}
  arr.sort();
}

