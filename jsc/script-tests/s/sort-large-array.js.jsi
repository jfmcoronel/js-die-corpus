var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<0,11,1>",(console.log)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (console) != "undefined") {_RecordType("<0,7,1>",(console)); Inst1++; } } catch(e) {}
console.log("This tests sorting an array with more than 10,000 values.");
var test = [];
try { if (Inst2 <= 1000 && typeof (test) != "undefined") {_RecordType("<78,82,2>",(test)); Inst2++; } } catch(e) {}

for (var i = 0; i < 10010; i++) {
try { if (Inst3 <= 1000 && typeof (i) != "undefined") {_RecordType("<99,100,4>",(i)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (i) != "undefined") {_RecordType("<106,107,4>",(i)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (i) != "undefined") {_RecordType("<117,118,4>",(i)); Inst5++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (test.push) != "undefined") {_RecordType("<126,135,5>",(test.push)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (test) != "undefined") {_RecordType("<126,130,5>",(test)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<144,145,5>",(i)); Inst8++; } } catch(e) {}
  test.push(10009 - i);
}

try { if (Inst9 <= 1000 && typeof (test.sort) != "undefined") {_RecordType("<151,160,8>",(test.sort)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (test) != "undefined") {_RecordType("<151,155,8>",(test)); Inst10++; } } catch(e) {}
test.sort(function (a, b) {
try { if (Inst11 <= 1000 && typeof (a) != "undefined") {_RecordType("<171,172,8>",(a)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (b) != "undefined") {_RecordType("<174,175,8>",(b)); Inst12++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (a) != "undefined") {_RecordType("<188,189,9>",(a)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (b) != "undefined") {_RecordType("<192,193,9>",(b)); Inst14++; } } catch(e) {}
  return a - b;
});
try { if (Inst15 <= 1000 && typeof (test.length) != "undefined") {_RecordType("<199,210,11>",(test.length)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (test) != "undefined") {_RecordType("<199,203,11>",(test)); Inst16++; } } catch(e) {}
test.length;
try { if (Inst17 <= 1000 && typeof (test[9999]) != "undefined") {_RecordType("<212,222,12>",(test[9999])); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (test) != "undefined") {_RecordType("<212,216,12>",(test)); Inst18++; } } catch(e) {}
test[9999];
try { if (Inst19 <= 1000 && typeof (test[10000]) != "undefined") {_RecordType("<224,235,13>",(test[10000])); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (test) != "undefined") {_RecordType("<224,228,13>",(test)); Inst20++; } } catch(e) {}
test[10000];
try { if (Inst21 <= 1000 && typeof (test.slice(0, 20).join) != "undefined") {_RecordType("<237,259,14>",(test.slice(0, 20).join)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (test.slice) != "undefined") {_RecordType("<237,247,14>",(test.slice)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (test) != "undefined") {_RecordType("<237,241,14>",(test)); Inst23++; } } catch(e) {}
test.slice(0, 20).join(', ');
try { if (Inst24 <= 1000 && typeof (test.slice(9990, 10010).join) != "undefined") {_RecordType("<267,295,15>",(test.slice(9990, 10010).join)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (test.slice) != "undefined") {_RecordType("<267,277,15>",(test.slice)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (test) != "undefined") {_RecordType("<267,271,15>",(test)); Inst26++; } } catch(e) {}
test.slice(9990, 10010).join(', ');
var testNoValues = [];
try { if (Inst27 <= 1000 && typeof (testNoValues) != "undefined") {_RecordType("<307,319,16>",(testNoValues)); Inst27++; } } catch(e) {}
testNoValues.length = 10110;
try { if (Inst28 <= 1000 && typeof (testNoValues.length) != "undefined") {_RecordType("<326,345,17>",(testNoValues.length)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (testNoValues) != "undefined") {_RecordType("<326,338,17>",(testNoValues)); Inst29++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (testNoValues.sort) != "undefined") {_RecordType("<355,372,18>",(testNoValues.sort)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (testNoValues) != "undefined") {_RecordType("<355,367,18>",(testNoValues)); Inst31++; } } catch(e) {}
testNoValues.sort(function (a, b) {
try { if (Inst32 <= 1000 && typeof (a) != "undefined") {_RecordType("<383,384,18>",(a)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (b) != "undefined") {_RecordType("<386,387,18>",(b)); Inst33++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof (a) != "undefined") {_RecordType("<400,401,19>",(a)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (b) != "undefined") {_RecordType("<404,405,19>",(b)); Inst35++; } } catch(e) {}
  return a < b;
});
try { if (Inst36 <= 1000 && typeof (testNoValues.length) != "undefined") {_RecordType("<411,430,21>",(testNoValues.length)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (testNoValues) != "undefined") {_RecordType("<411,423,21>",(testNoValues)); Inst37++; } } catch(e) {}
testNoValues.length;
try { if (Inst38 <= 1000 && typeof (testNoValues[9999]) != "undefined") {_RecordType("<432,450,22>",(testNoValues[9999])); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (testNoValues) != "undefined") {_RecordType("<432,444,22>",(testNoValues)); Inst39++; } } catch(e) {}
testNoValues[9999];
try { if (Inst40 <= 1000 && typeof (testNoValues[10000]) != "undefined") {_RecordType("<452,471,23>",(testNoValues[10000])); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (testNoValues) != "undefined") {_RecordType("<452,464,23>",(testNoValues)); Inst41++; } } catch(e) {}
testNoValues[10000];

