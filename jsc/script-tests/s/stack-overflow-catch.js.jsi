var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<0,11,1>",(console.log)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (console) != "undefined") {_RecordType("<0,7,1>",(console)); Inst1++; } } catch(e) {}
console.log('Test that when the stack overflows, the exception goes to the last frame before the overflow');
var level = 0;
try { if (Inst2 <= 1000 && typeof (level) != "undefined") {_RecordType("<113,118,2>",(level)); Inst2++; } } catch(e) {}
var stackLevel = 0;
try { if (Inst3 <= 1000 && typeof (stackLevel) != "undefined") {_RecordType("<128,138,3>",(stackLevel)); Inst3++; } } catch(e) {}
var gotWrongCatch = false;
try { if (Inst4 <= 1000 && typeof (gotWrongCatch) != "undefined") {_RecordType("<148,161,4>",(gotWrongCatch)); Inst4++; } } catch(e) {}

try { if (Inst5 <= 1000 && typeof (test1) != "undefined") {_RecordType("<181,186,6>",(test1)); Inst5++; } } catch(e) {}
function test1() {
try { if (Inst7 <= 1000 && typeof (level) != "undefined") {_RecordType("<207,212,7>",(level)); Inst7++; } } catch(e) {}
  var myLevel = level;
try { if (Inst6 <= 1000 && typeof (myLevel) != "undefined") {_RecordType("<197,204,7>",(myLevel)); Inst6++; } } catch(e) {}
  var dummy;
try { if (Inst8 <= 1000 && typeof (dummy) != "undefined") {_RecordType("<220,225,8>",(dummy)); Inst8++; } } catch(e) {}

try { if (Inst17 <= 1000 && typeof (err) != "undefined") {_RecordType("<438,441,18>",(err)); Inst17++; } } catch(e) {}
  try {
try { if (Inst10 <= 1000 && typeof (level) != "undefined") {_RecordType("<248,253,11>",(level)); Inst10++; } } catch(e) {}
    level = level + 1; // Dummy code to make this funciton different from test2()
try { if (Inst9 <= 1000 && typeof (level) != "undefined") {_RecordType("<240,245,11>",(level)); Inst9++; } } catch(e) {}

try { if (Inst12 <= 1000 && typeof (level) != "undefined") {_RecordType("<331,336,13>",(level)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (level) != "undefined") {_RecordType("<339,344,13>",(level)); Inst13++; } } catch(e) {}
    dummy = level * level + 1;
try { if (Inst11 <= 1000 && typeof (dummy) != "undefined") {_RecordType("<323,328,13>",(dummy)); Inst11++; } } catch(e) {}

try { if (Inst14 <= 1000 && typeof (dummy) != "undefined") {_RecordType("<359,364,15>",(dummy)); Inst14++; } } catch(e) {}
    if (dummy == 0) {
try { if (Inst15 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<379,390,16>",(console.log)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (console) != "undefined") {_RecordType("<379,386,16>",(console)); Inst16++; } } catch(e) {}
      console.log('Should never get here!!!!');
    }
  } catch (err) {
    gotWrongCatch = true;
try { if (Inst18 <= 1000 && typeof (gotWrongCatch) != "undefined") {_RecordType("<449,462,19>",(gotWrongCatch)); Inst18++; } } catch(e) {}
  }

try { if (Inst20 <= 1000 && typeof (err) != "undefined") {_RecordType("<508,511,24>",(err)); Inst20++; } } catch(e) {}
  try {
try { if (Inst19 <= 1000 && typeof (test2) != "undefined") {_RecordType("<488,493,23>",(test2)); Inst19++; } } catch(e) {}
    test2();
  } catch (err) {
try { if (Inst22 <= 1000 && typeof (myLevel) != "undefined") {_RecordType("<532,539,25>",(myLevel)); Inst22++; } } catch(e) {}
    stackLevel = myLevel;
try { if (Inst21 <= 1000 && typeof (stackLevel) != "undefined") {_RecordType("<519,529,25>",(stackLevel)); Inst21++; } } catch(e) {}
  }
}

try { if (Inst23 <= 1000 && typeof (test2) != "undefined") {_RecordType("<557,562,29>",(test2)); Inst23++; } } catch(e) {}
function test2() {
try { if (Inst25 <= 1000 && typeof (level) != "undefined") {_RecordType("<583,588,30>",(level)); Inst25++; } } catch(e) {}
  var myLevel = level; // Dummy code to make this funciton different from test1()
try { if (Inst24 <= 1000 && typeof (myLevel) != "undefined") {_RecordType("<573,580,30>",(myLevel)); Inst24++; } } catch(e) {}

try { if (Inst26 <= 1000 && typeof (gotWrongCatch) != "undefined") {_RecordType("<656,669,32>",(gotWrongCatch)); Inst26++; } } catch(e) {}
  if (gotWrongCatch) {
try { if (Inst27 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<677,688,33>",(console.log)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (console) != "undefined") {_RecordType("<677,684,33>",(console)); Inst28++; } } catch(e) {}
    console.log('Should never get here!!!!');
  }

try { if (Inst31 <= 1000 && typeof (err) != "undefined") {_RecordType("<766,769,38>",(err)); Inst31++; } } catch(e) {}
  try {
try { if (Inst30 <= 1000 && typeof (level) != "undefined") {_RecordType("<744,749,37>",(level)); Inst30++; } } catch(e) {}
    level = level + 1;
try { if (Inst29 <= 1000 && typeof (level) != "undefined") {_RecordType("<736,741,37>",(level)); Inst29++; } } catch(e) {}
  } catch (err) {
    gotWrongCatch = true;
try { if (Inst32 <= 1000 && typeof (gotWrongCatch) != "undefined") {_RecordType("<777,790,39>",(gotWrongCatch)); Inst32++; } } catch(e) {}
  }

try { if (Inst34 <= 1000 && typeof (err) != "undefined") {_RecordType("<836,839,44>",(err)); Inst34++; } } catch(e) {}
  try {
try { if (Inst33 <= 1000 && typeof (test1) != "undefined") {_RecordType("<816,821,43>",(test1)); Inst33++; } } catch(e) {}
    test1();
  } catch (err) {
try { if (Inst36 <= 1000 && typeof (myLevel) != "undefined") {_RecordType("<860,867,45>",(myLevel)); Inst36++; } } catch(e) {}
    stackLevel = myLevel;
try { if (Inst35 <= 1000 && typeof (stackLevel) != "undefined") {_RecordType("<847,857,45>",(stackLevel)); Inst35++; } } catch(e) {}
  }
}

try { if (Inst37 <= 1000 && typeof (test1) != "undefined") {_RecordType("<876,881,49>",(test1)); Inst37++; } } catch(e) {}
test1();
try { if (Inst38 <= 1000 && typeof (gotWrongCatch) != "undefined") {_RecordType("<885,898,50>",(gotWrongCatch)); Inst38++; } } catch(e) {}
gotWrongCatch;
try { if (Inst39 <= 1000 && typeof (stackLevel) != "undefined") {_RecordType("<900,910,51>",(stackLevel)); Inst39++; } } catch(e) {}
stackLevel;

