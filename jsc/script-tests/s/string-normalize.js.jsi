var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<0,11,1>",(console.log)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (console) != "undefined") {_RecordType("<0,7,1>",(console)); Inst1++; } } catch(e) {}
console.log("Test String.prototype.normalize.");
try { if (Inst2 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<49,60,2>",(console.log)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (console) != "undefined") {_RecordType("<49,56,2>",(console)); Inst3++; } } catch(e) {}
console.log("Basic function properties");
try { if (Inst4 <= 1000 && typeof (String.prototype.normalize) != "undefined") {_RecordType("<98,124,3>",(String.prototype.normalize)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (String.prototype) != "undefined") {_RecordType("<98,114,3>",(String.prototype)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (String) != "undefined") {_RecordType("<98,104,3>",(String)); Inst6++; } } catch(e) {}
typeof String.prototype.normalize;
try { if (Inst7 <= 1000 && typeof (String.prototype.normalize.name) != "undefined") {_RecordType("<126,157,4>",(String.prototype.normalize.name)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (String.prototype.normalize) != "undefined") {_RecordType("<126,152,4>",(String.prototype.normalize)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (String.prototype) != "undefined") {_RecordType("<126,142,4>",(String.prototype)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (String) != "undefined") {_RecordType("<126,132,4>",(String)); Inst10++; } } catch(e) {}
String.prototype.normalize.name;
try { if (Inst11 <= 1000 && typeof (String.prototype.normalize.length) != "undefined") {_RecordType("<159,192,5>",(String.prototype.normalize.length)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (String.prototype.normalize) != "undefined") {_RecordType("<159,185,5>",(String.prototype.normalize)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (String.prototype) != "undefined") {_RecordType("<159,175,5>",(String.prototype)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (String) != "undefined") {_RecordType("<159,165,5>",(String)); Inst14++; } } catch(e) {}
String.prototype.normalize.length;
try { if (Inst15 <= 1000 && typeof (Object.getOwnPropertyDescriptor(String.prototype, 'normalize').configurable) != "undefined") {_RecordType("<194,269,6>",(Object.getOwnPropertyDescriptor(String.prototype, 'normalize').configurable)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<194,225,6>",(Object.getOwnPropertyDescriptor)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Object) != "undefined") {_RecordType("<194,200,6>",(Object)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (String.prototype) != "undefined") {_RecordType("<226,242,6>",(String.prototype)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (String) != "undefined") {_RecordType("<226,232,6>",(String)); Inst19++; } } catch(e) {}
Object.getOwnPropertyDescriptor(String.prototype, 'normalize').configurable;
try { if (Inst20 <= 1000 && typeof (Object.getOwnPropertyDescriptor(String.prototype, 'normalize').enumerable) != "undefined") {_RecordType("<271,344,7>",(Object.getOwnPropertyDescriptor(String.prototype, 'normalize').enumerable)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<271,302,7>",(Object.getOwnPropertyDescriptor)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Object) != "undefined") {_RecordType("<271,277,7>",(Object)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (String.prototype) != "undefined") {_RecordType("<303,319,7>",(String.prototype)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (String) != "undefined") {_RecordType("<303,309,7>",(String)); Inst24++; } } catch(e) {}
Object.getOwnPropertyDescriptor(String.prototype, 'normalize').enumerable;
try { if (Inst25 <= 1000 && typeof (Object.getOwnPropertyDescriptor(String.prototype, 'normalize').writable) != "undefined") {_RecordType("<346,417,8>",(Object.getOwnPropertyDescriptor(String.prototype, 'normalize').writable)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<346,377,8>",(Object.getOwnPropertyDescriptor)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (Object) != "undefined") {_RecordType("<346,352,8>",(Object)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (String.prototype) != "undefined") {_RecordType("<378,394,8>",(String.prototype)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (String) != "undefined") {_RecordType("<378,384,8>",(String)); Inst29++; } } catch(e) {}
Object.getOwnPropertyDescriptor(String.prototype, 'normalize').writable;
try { if (Inst30 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<419,430,9>",(console.log)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (console) != "undefined") {_RecordType("<419,426,9>",(console)); Inst31++; } } catch(e) {}
console.log("Invokes ToString on the argument.");
var listener = {
  callCount: 0,
  toString: function () {
try { if (Inst33 <= 1000 && typeof (this.callCount) != "undefined") {_RecordType("<532,546,13>",(this.callCount)); Inst33++; } } catch(e) {}
    this.callCount++;
    return "WebKit";
  }
};
try { if (Inst32 <= 1000 && typeof (listener) != "undefined") {_RecordType("<473,481,10>",(listener)); Inst32++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof (String.prototype.normalize.call) != "undefined") {_RecordType("<578,609,17>",(String.prototype.normalize.call)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (String.prototype.normalize) != "undefined") {_RecordType("<578,604,17>",(String.prototype.normalize)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (String.prototype) != "undefined") {_RecordType("<578,594,17>",(String.prototype)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (String) != "undefined") {_RecordType("<578,584,17>",(String)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (listener) != "undefined") {_RecordType("<610,618,17>",(listener)); Inst38++; } } catch(e) {}
String.prototype.normalize.call(listener);
try { if (Inst39 <= 1000 && typeof (listener.callCount) != "undefined") {_RecordType("<621,639,18>",(listener.callCount)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (listener) != "undefined") {_RecordType("<621,629,18>",(listener)); Inst40++; } } catch(e) {}
listener.callCount;

