var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<0,11,1>",(console.log)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (console) != "undefined") {_RecordType("<0,7,1>",(console)); Inst1++; } } catch(e) {}
console.log("This tests Symbol object behaviors."); // Symbol constructor cannot be called with `new` style.
// To create Symbol object, call `Object(symbol)`.

try { if (Inst3 <= 1000 && typeof (e) != "undefined") {_RecordType("<192,193,6>",(e)); Inst3++; } } catch(e) {}
try {
try { if (Inst2 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<173,179,5>",(Symbol)); Inst2++; } } catch(e) {}
  new Symbol();
} catch (e) {
  ;
}

try { if (Inst5 <= 1000 && typeof (e) != "undefined") {_RecordType("<247,248,12>",(e)); Inst5++; } } catch(e) {}
try {
try { if (Inst4 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<216,222,11>",(Symbol)); Inst4++; } } catch(e) {}
  new Symbol('Cappuccino');
} catch (e) {
  ;
}

try { if (Inst7 <= 1000 && typeof (Object) != "undefined") {_RecordType("<278,284,16>",(Object)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<285,300,16>",(Symbol.iterator)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<285,291,16>",(Symbol)); Inst9++; } } catch(e) {}
var symbolObject = Object(Symbol.iterator);
try { if (Inst6 <= 1000 && typeof (symbolObject) != "undefined") {_RecordType("<263,275,16>",(symbolObject)); Inst6++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (symbolObject) != "undefined") {_RecordType("<303,315,17>",(symbolObject)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<327,333,17>",(Symbol)); Inst11++; } } catch(e) {}
symbolObject instanceof Symbol; // Since Symbol object's @@toPrimitive returns Symbol value,
// ToString(symbol) will be called.

try { if (Inst14 <= 1000 && typeof (e) != "undefined") {_RecordType("<472,473,22>",(e)); Inst14++; } } catch(e) {}
try {
try { if (Inst12 <= 1000 && typeof (String) != "undefined") {_RecordType("<441,447,21>",(String)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (symbolObject) != "undefined") {_RecordType("<448,460,21>",(symbolObject)); Inst13++; } } catch(e) {}
  String(symbolObject);
} catch (e) {
  ;
}

try { if (Inst15 <= 1000 && typeof (symbolObject.toString) != "undefined") {_RecordType("<484,505,26>",(symbolObject.toString)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (symbolObject) != "undefined") {_RecordType("<484,496,26>",(symbolObject)); Inst16++; } } catch(e) {}
symbolObject.toString();
var object = {};
try { if (Inst17 <= 1000 && typeof (object) != "undefined") {_RecordType("<513,519,27>",(object)); Inst17++; } } catch(e) {}
object[symbolObject] = 42; // ToPropertyKey(symbolObject) will call toPrimitive(symbolObject), and toPrimitive(symbolObject) will return symbol primitive value. As a result, object[symbolObject] equals to object[symbol in the symbolObject].
try { if (Inst18 <= 1000 && typeof (object[symbolObject]) != "undefined") {_RecordType("<526,546,28>",(object[symbolObject])); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (object) != "undefined") {_RecordType("<526,532,28>",(object)); Inst19++; } } catch(e) {}

try { if (Inst20 <= 1000 && typeof (object[symbolObject]) != "undefined") {_RecordType("<768,788,30>",(object[symbolObject])); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (object) != "undefined") {_RecordType("<768,774,30>",(object)); Inst21++; } } catch(e) {}
object[symbolObject];
try { if (Inst22 <= 1000 && typeof (object['Symbol(Symbol.iterator)']) != "undefined") {_RecordType("<790,823,31>",(object['Symbol(Symbol.iterator)'])); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (object) != "undefined") {_RecordType("<790,796,31>",(object)); Inst23++; } } catch(e) {}
object['Symbol(Symbol.iterator)'];
try { if (Inst24 <= 1000 && typeof (object[Symbol.iterator]) != "undefined") {_RecordType("<825,848,32>",(object[Symbol.iterator])); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (object) != "undefined") {_RecordType("<825,831,32>",(object)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<832,847,32>",(Symbol.iterator)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<832,838,32>",(Symbol)); Inst27++; } } catch(e) {}
object[Symbol.iterator];
try { if (Inst29 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<863,869,33>",(Symbol)); Inst29++; } } catch(e) {}
var symbol = Symbol("Matcha");
try { if (Inst28 <= 1000 && typeof (symbol) != "undefined") {_RecordType("<854,860,33>",(symbol)); Inst28++; } } catch(e) {}
object[symbol] = 'Cocoa';
try { if (Inst30 <= 1000 && typeof (object[symbol]) != "undefined") {_RecordType("<881,895,34>",(object[symbol])); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (object) != "undefined") {_RecordType("<881,887,34>",(object)); Inst31++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (object[symbol]) != "undefined") {_RecordType("<907,921,35>",(object[symbol])); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (object) != "undefined") {_RecordType("<907,913,35>",(object)); Inst33++; } } catch(e) {}
object[symbol];
try { if (Inst34 <= 1000 && typeof (object[symbol.valueOf()]) != "undefined") {_RecordType("<923,947,36>",(object[symbol.valueOf()])); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (object) != "undefined") {_RecordType("<923,929,36>",(object)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (symbol.valueOf) != "undefined") {_RecordType("<930,944,36>",(symbol.valueOf)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (symbol) != "undefined") {_RecordType("<930,936,36>",(symbol)); Inst37++; } } catch(e) {}
object[symbol.valueOf()];
try { if (Inst38 <= 1000 && typeof (object[Object(symbol)]) != "undefined") {_RecordType("<949,971,37>",(object[Object(symbol)])); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (object) != "undefined") {_RecordType("<949,955,37>",(object)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (Object) != "undefined") {_RecordType("<956,962,37>",(Object)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (symbol) != "undefined") {_RecordType("<963,969,37>",(symbol)); Inst41++; } } catch(e) {}
object[Object(symbol)];
try { if (Inst42 <= 1000 && typeof (object['Matcha']) != "undefined") {_RecordType("<973,989,38>",(object['Matcha'])); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (object) != "undefined") {_RecordType("<973,979,38>",(object)); Inst43++; } } catch(e) {}
object['Matcha']; // ToObject will be called.

try { if (Inst44 <= 1000 && typeof (Symbol.iterator.hello) != "undefined") {_RecordType("<1020,1041,40>",(Symbol.iterator.hello)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<1020,1035,40>",(Symbol.iterator)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<1020,1026,40>",(Symbol)); Inst46++; } } catch(e) {}
Symbol.iterator.hello;
successfullyParsed = true;
try { if (Inst47 <= 1000 && typeof (successfullyParsed) != "undefined") {_RecordType("<1043,1061,41>",(successfullyParsed)); Inst47++; } } catch(e) {}

