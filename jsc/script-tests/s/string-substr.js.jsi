var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<0,11,1>",(console.log)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (console) != "undefined") {_RecordType("<0,7,1>",(console)); Inst1++; } } catch(e) {}
console.log("This test checks the boundary cases of substr().");
try { if (Inst2 <= 1000 && typeof ('bar'.substr) != "undefined") {_RecordType("<65,77,2>",('bar'.substr)); Inst2++; } } catch(e) {}
'bar'.substr(0);
try { if (Inst3 <= 1000 && typeof ('bar'.substr) != "undefined") {_RecordType("<82,94,3>",('bar'.substr)); Inst3++; } } catch(e) {}
'bar'.substr(3);
try { if (Inst4 <= 1000 && typeof ('bar'.substr) != "undefined") {_RecordType("<99,111,4>",('bar'.substr)); Inst4++; } } catch(e) {}
'bar'.substr(4);
try { if (Inst5 <= 1000 && typeof ('bar'.substr) != "undefined") {_RecordType("<116,128,5>",('bar'.substr)); Inst5++; } } catch(e) {}
'bar'.substr(-1);
try { if (Inst6 <= 1000 && typeof ('bar'.substr) != "undefined") {_RecordType("<134,146,6>",('bar'.substr)); Inst6++; } } catch(e) {}
'bar'.substr(-3);
try { if (Inst7 <= 1000 && typeof ('bar'.substr) != "undefined") {_RecordType("<152,164,7>",('bar'.substr)); Inst7++; } } catch(e) {}
'bar'.substr(-4);
try { if (Inst8 <= 1000 && typeof ('bar'.substr) != "undefined") {_RecordType("<170,182,8>",('bar'.substr)); Inst8++; } } catch(e) {}
'bar'.substr(0, 0);
try { if (Inst9 <= 1000 && typeof ('bar'.substr) != "undefined") {_RecordType("<190,202,9>",('bar'.substr)); Inst9++; } } catch(e) {}
'bar'.substr(0, 1);
try { if (Inst10 <= 1000 && typeof ('bar'.substr) != "undefined") {_RecordType("<210,222,10>",('bar'.substr)); Inst10++; } } catch(e) {}
'bar'.substr(0, 3);
try { if (Inst11 <= 1000 && typeof ('bar'.substr) != "undefined") {_RecordType("<230,242,11>",('bar'.substr)); Inst11++; } } catch(e) {}
'bar'.substr(0, 4);
try { if (Inst12 <= 1000 && typeof ('bar'.substr) != "undefined") {_RecordType("<250,262,12>",('bar'.substr)); Inst12++; } } catch(e) {}
'bar'.substr(1, 0);
try { if (Inst13 <= 1000 && typeof ('bar'.substr) != "undefined") {_RecordType("<270,282,13>",('bar'.substr)); Inst13++; } } catch(e) {}
'bar'.substr(1, 1);
try { if (Inst14 <= 1000 && typeof ('bar'.substr) != "undefined") {_RecordType("<290,302,14>",('bar'.substr)); Inst14++; } } catch(e) {}
'bar'.substr(1, 2);
try { if (Inst15 <= 1000 && typeof ('bar'.substr) != "undefined") {_RecordType("<310,322,15>",('bar'.substr)); Inst15++; } } catch(e) {}
'bar'.substr(1, 3);
try { if (Inst16 <= 1000 && typeof ('bar'.substr) != "undefined") {_RecordType("<330,342,16>",('bar'.substr)); Inst16++; } } catch(e) {}
'bar'.substr(3, 0);
try { if (Inst17 <= 1000 && typeof ('bar'.substr) != "undefined") {_RecordType("<350,362,17>",('bar'.substr)); Inst17++; } } catch(e) {}
'bar'.substr(3, 1);
try { if (Inst18 <= 1000 && typeof ('bar'.substr) != "undefined") {_RecordType("<370,382,18>",('bar'.substr)); Inst18++; } } catch(e) {}
'bar'.substr(3, 3);
try { if (Inst19 <= 1000 && typeof ('bar'.substr) != "undefined") {_RecordType("<390,402,19>",('bar'.substr)); Inst19++; } } catch(e) {}
'bar'.substr(4, 0);
try { if (Inst20 <= 1000 && typeof ('bar'.substr) != "undefined") {_RecordType("<410,422,20>",('bar'.substr)); Inst20++; } } catch(e) {}
'bar'.substr(4, 1);
try { if (Inst21 <= 1000 && typeof ('bar'.substr) != "undefined") {_RecordType("<430,442,21>",('bar'.substr)); Inst21++; } } catch(e) {}
'bar'.substr(4, 3);
try { if (Inst22 <= 1000 && typeof ('bar'.substr) != "undefined") {_RecordType("<450,462,22>",('bar'.substr)); Inst22++; } } catch(e) {}
'bar'.substr(-1, 0);
try { if (Inst23 <= 1000 && typeof ('bar'.substr) != "undefined") {_RecordType("<471,483,23>",('bar'.substr)); Inst23++; } } catch(e) {}
'bar'.substr(-1, 1);
try { if (Inst24 <= 1000 && typeof ('bar'.substr) != "undefined") {_RecordType("<492,504,24>",('bar'.substr)); Inst24++; } } catch(e) {}
'bar'.substr(-3, 1);
try { if (Inst25 <= 1000 && typeof ('bar'.substr) != "undefined") {_RecordType("<513,525,25>",('bar'.substr)); Inst25++; } } catch(e) {}
'bar'.substr(-3, 3);
try { if (Inst26 <= 1000 && typeof ('bar'.substr) != "undefined") {_RecordType("<534,546,26>",('bar'.substr)); Inst26++; } } catch(e) {}
'bar'.substr(-3, 4);
try { if (Inst27 <= 1000 && typeof ('bar'.substr) != "undefined") {_RecordType("<555,567,27>",('bar'.substr)); Inst27++; } } catch(e) {}
'bar'.substr(-4);
try { if (Inst28 <= 1000 && typeof ('bar'.substr) != "undefined") {_RecordType("<573,585,28>",('bar'.substr)); Inst28++; } } catch(e) {}
'bar'.substr(-4, 0);
try { if (Inst29 <= 1000 && typeof ('bar'.substr) != "undefined") {_RecordType("<594,606,29>",('bar'.substr)); Inst29++; } } catch(e) {}
'bar'.substr(-4, 1);
try { if (Inst30 <= 1000 && typeof ('bar'.substr) != "undefined") {_RecordType("<615,627,30>",('bar'.substr)); Inst30++; } } catch(e) {}
'bar'.substr(-4, 3);
try { if (Inst31 <= 1000 && typeof ('bar'.substr) != "undefined") {_RecordType("<636,648,31>",('bar'.substr)); Inst31++; } } catch(e) {}
'bar'.substr(-4, 4);
try { if (Inst32 <= 1000 && typeof ('GMAIL_IMP=bf-i%2Fd-0-0%2Ftl-v'.substr) != "undefined") {_RecordType("<657,695,32>",('GMAIL_IMP=bf-i%2Fd-0-0%2Ftl-v'.substr)); Inst32++; } } catch(e) {}
'GMAIL_IMP=bf-i%2Fd-0-0%2Ftl-v'.substr(10);

