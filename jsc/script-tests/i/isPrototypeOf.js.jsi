var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<0,11,1>",(console.log)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (console) != "undefined") {_RecordType("<0,7,1>",(console)); Inst1++; } } catch(e) {}
console.log("This tests that isPrototypeOf works according to the ECMA spec.");
try { if (Inst2 <= 1000 && typeof (Object.isPrototypeOf) != "undefined") {_RecordType("<80,100,2>",(Object.isPrototypeOf)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Object) != "undefined") {_RecordType("<80,86,2>",(Object)); Inst3++; } } catch(e) {}
Object.isPrototypeOf('string');
try { if (Inst4 <= 1000 && typeof (Array.prototype.isPrototypeOf) != "undefined") {_RecordType("<112,141,3>",(Array.prototype.isPrototypeOf)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<112,127,3>",(Array.prototype)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Array) != "undefined") {_RecordType("<112,117,3>",(Array)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Array) != "undefined") {_RecordType("<146,151,3>",(Array)); Inst7++; } } catch(e) {}
Array.prototype.isPrototypeOf(new Array());

try { if (Inst8 <= 1000 && typeof (ObjectA) != "undefined") {_RecordType("<166,173,5>",(ObjectA)); Inst8++; } } catch(e) {}
function ObjectA() {
  ;
}

try { if (Inst9 <= 1000 && typeof (ObjectB) != "undefined") {_RecordType("<194,201,9>",(ObjectB)); Inst9++; } } catch(e) {}
function ObjectB() {
  ;
}

try { if (Inst12 <= 1000 && typeof (ObjectA) != "undefined") {_RecordType("<237,244,13>",(ObjectA)); Inst12++; } } catch(e) {}
ObjectB.prototype = new ObjectA();
try { if (Inst10 <= 1000 && typeof (ObjectB.prototype) != "undefined") {_RecordType("<213,230,13>",(ObjectB.prototype)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (ObjectB) != "undefined") {_RecordType("<213,220,13>",(ObjectB)); Inst11++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (ObjectB) != "undefined") {_RecordType("<263,270,14>",(ObjectB)); Inst14++; } } catch(e) {}
var objb = new ObjectB();
try { if (Inst13 <= 1000 && typeof (objb) != "undefined") {_RecordType("<252,256,14>",(objb)); Inst13++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (ObjectA.prototype.isPrototypeOf) != "undefined") {_RecordType("<274,305,15>",(ObjectA.prototype.isPrototypeOf)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (ObjectA.prototype) != "undefined") {_RecordType("<274,291,15>",(ObjectA.prototype)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (ObjectA) != "undefined") {_RecordType("<274,281,15>",(ObjectA)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (objb) != "undefined") {_RecordType("<306,310,15>",(objb)); Inst18++; } } catch(e) {}
ObjectA.prototype.isPrototypeOf(objb);

try { if (Inst19 <= 1000 && typeof (ObjectC) != "undefined") {_RecordType("<323,330,17>",(ObjectC)); Inst19++; } } catch(e) {}
function ObjectC() {
  ;
}

try { if (Inst22 <= 1000 && typeof (ObjectB) != "undefined") {_RecordType("<366,373,21>",(ObjectB)); Inst22++; } } catch(e) {}
ObjectC.prototype = new ObjectB();
try { if (Inst20 <= 1000 && typeof (ObjectC.prototype) != "undefined") {_RecordType("<342,359,21>",(ObjectC.prototype)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (ObjectC) != "undefined") {_RecordType("<342,349,21>",(ObjectC)); Inst21++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (ObjectC) != "undefined") {_RecordType("<392,399,22>",(ObjectC)); Inst24++; } } catch(e) {}
var objc = new ObjectC();
try { if (Inst23 <= 1000 && typeof (objc) != "undefined") {_RecordType("<381,385,22>",(objc)); Inst23++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (ObjectA.prototype.isPrototypeOf) != "undefined") {_RecordType("<403,434,23>",(ObjectA.prototype.isPrototypeOf)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (ObjectA.prototype) != "undefined") {_RecordType("<403,420,23>",(ObjectA.prototype)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (ObjectA) != "undefined") {_RecordType("<403,410,23>",(ObjectA)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (objc) != "undefined") {_RecordType("<435,439,23>",(objc)); Inst28++; } } catch(e) {}
ObjectA.prototype.isPrototypeOf(objc);

