var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<0,11,1>",(console.log)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (console) != "undefined") {_RecordType("<0,7,1>",(console)); Inst1++; } } catch(e) {}
console.log("This test checks that iterating a large array backwards works correctly.");
try { if (Inst3 <= 1000 && typeof (Array) != "undefined") {_RecordType("<105,110,2>",(Array)); Inst3++; } } catch(e) {}
var bytes = new Array();
try { if (Inst2 <= 1000 && typeof (bytes) != "undefined") {_RecordType("<93,98,2>",(bytes)); Inst2++; } } catch(e) {}

try { if (Inst4 <= 1000 && typeof (prepare) != "undefined") {_RecordType("<124,131,4>",(prepare)); Inst4++; } } catch(e) {}
function prepare(nbytes) {
try { if (Inst5 <= 1000 && typeof (nbytes) != "undefined") {_RecordType("<132,138,4>",(nbytes)); Inst5++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (nbytes) != "undefined") {_RecordType("<152,158,5>",(nbytes)); Inst7++; } } catch(e) {}
  var i = nbytes - 1;
try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<148,149,5>",(i)); Inst6++; } } catch(e) {}

try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<174,175,7>",(i)); Inst8++; } } catch(e) {}
  while (i >= 0) {
try { if (Inst11 <= 1000 && typeof (Number) != "undefined") {_RecordType("<203,209,8>",(Number)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<210,211,8>",(i)); Inst12++; } } catch(e) {}
    bytes[i] = new Number(i);
try { if (Inst9 <= 1000 && typeof (bytes[i]) != "undefined") {_RecordType("<188,196,8>",(bytes[i])); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (bytes) != "undefined") {_RecordType("<188,193,8>",(bytes)); Inst10++; } } catch(e) {}
    i -= 1;
try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<218,219,9>",(i)); Inst13++; } } catch(e) {}
  }
}

try { if (Inst14 <= 1000 && typeof (verify) != "undefined") {_RecordType("<242,248,13>",(verify)); Inst14++; } } catch(e) {}
function verify(nbytes) {
try { if (Inst15 <= 1000 && typeof (nbytes) != "undefined") {_RecordType("<249,255,13>",(nbytes)); Inst15++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (nbytes) != "undefined") {_RecordType("<269,275,14>",(nbytes)); Inst17++; } } catch(e) {}
  var i = nbytes - 1;
try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<265,266,14>",(i)); Inst16++; } } catch(e) {}

try { if (Inst18 <= 1000 && typeof (i) != "undefined") {_RecordType("<291,292,16>",(i)); Inst18++; } } catch(e) {}
  while (i >= 0) {
try { if (Inst19 <= 1000 && typeof (bytes[i]) != "undefined") {_RecordType("<309,317,17>",(bytes[i])); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (bytes) != "undefined") {_RecordType("<309,314,17>",(bytes)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<321,322,17>",(i)); Inst21++; } } catch(e) {}
    if (bytes[i] != i) {
      return false;
    }

    i -= 1;
try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<357,358,21>",(i)); Inst22++; } } catch(e) {}
  }

  return true;
}

try { if (Inst23 <= 1000 && typeof (prepare) != "undefined") {_RecordType("<388,395,27>",(prepare)); Inst23++; } } catch(e) {}
prepare(32768);
try { if (Inst24 <= 1000 && typeof (verify) != "undefined") {_RecordType("<404,410,28>",(verify)); Inst24++; } } catch(e) {}
verify(32768);
try { if (Inst25 <= 1000 && typeof (prepare) != "undefined") {_RecordType("<419,426,29>",(prepare)); Inst25++; } } catch(e) {}
prepare(65536);
try { if (Inst26 <= 1000 && typeof (verify) != "undefined") {_RecordType("<435,441,30>",(verify)); Inst26++; } } catch(e) {}
verify(65536);
try { if (Inst27 <= 1000 && typeof (prepare) != "undefined") {_RecordType("<450,457,31>",(prepare)); Inst27++; } } catch(e) {}
prepare(120000);
try { if (Inst28 <= 1000 && typeof (verify) != "undefined") {_RecordType("<467,473,32>",(verify)); Inst28++; } } catch(e) {}
verify(120000);

