var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
var Inst102 = 0;
var Inst103 = 0;
var Inst104 = 0;
var Inst105 = 0;
var Inst106 = 0;
var Inst107 = 0;
var Inst108 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<0,11,1>",(console.log)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (console) != "undefined") {_RecordType("<0,7,1>",(console)); Inst1++; } } catch(e) {}
console.log("Tests for Array.of");
try { if (Inst2 <= 1000 && typeof (Array.of.length) != "undefined") {_RecordType("<35,50,2>",(Array.of.length)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Array.of) != "undefined") {_RecordType("<35,43,2>",(Array.of)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Array) != "undefined") {_RecordType("<35,40,2>",(Array)); Inst4++; } } catch(e) {}
Array.of.length;
try { if (Inst5 <= 1000 && typeof (Array.of.name) != "undefined") {_RecordType("<52,65,3>",(Array.of.name)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Array.of) != "undefined") {_RecordType("<52,60,3>",(Array.of)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Array) != "undefined") {_RecordType("<52,57,3>",(Array)); Inst7++; } } catch(e) {}
Array.of.name;
try { if (Inst8 <= 1000 && typeof (Array.of) != "undefined") {_RecordType("<67,75,4>",(Array.of)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Array) != "undefined") {_RecordType("<67,72,4>",(Array)); Inst9++; } } catch(e) {}
Array.of(1);
try { if (Inst10 <= 1000 && typeof (Array.of) != "undefined") {_RecordType("<80,88,5>",(Array.of)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Array) != "undefined") {_RecordType("<80,85,5>",(Array)); Inst11++; } } catch(e) {}
Array.of(1, 2);
try { if (Inst12 <= 1000 && typeof (Array.of) != "undefined") {_RecordType("<96,104,6>",(Array.of)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Array) != "undefined") {_RecordType("<96,101,6>",(Array)); Inst13++; } } catch(e) {}
Array.of(1, 2, 3);
try { if (Inst14 <= 1000 && typeof (Array.of) != "undefined") {_RecordType("<115,123,7>",(Array.of)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Array) != "undefined") {_RecordType("<115,120,7>",(Array)); Inst15++; } } catch(e) {}
Array.of();
try { if (Inst16 <= 1000 && typeof (Array.of) != "undefined") {_RecordType("<127,135,8>",(Array.of)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Array) != "undefined") {_RecordType("<127,132,8>",(Array)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<136,145,8>",(undefined)); Inst18++; } } catch(e) {}
Array.of(undefined);
try { if (Inst19 <= 1000 && typeof (Array.of) != "undefined") {_RecordType("<148,156,9>",(Array.of)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (Array) != "undefined") {_RecordType("<148,153,9>",(Array)); Inst20++; } } catch(e) {}
Array.of('hello');
try { if (Inst21 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<167,178,10>",(console.log)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (console) != "undefined") {_RecordType("<167,174,10>",(console)); Inst22++; } } catch(e) {}
console.log("Construct nested Array with Array.of(Array.of(1, 2, 3), Array.of(4, 5, 6, 7, 8)).");
try { if (Inst24 <= 1000 && typeof (Array.of) != "undefined") {_RecordType("<273,281,11>",(Array.of)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Array) != "undefined") {_RecordType("<273,278,11>",(Array)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Array.of) != "undefined") {_RecordType("<282,290,11>",(Array.of)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (Array) != "undefined") {_RecordType("<282,287,11>",(Array)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (Array.of) != "undefined") {_RecordType("<301,309,11>",(Array.of)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (Array) != "undefined") {_RecordType("<301,306,11>",(Array)); Inst29++; } } catch(e) {}
var x = Array.of(Array.of(1, 2, 3), Array.of(4, 5, 6, 7, 8));
try { if (Inst23 <= 1000 && typeof (x) != "undefined") {_RecordType("<269,270,11>",(x)); Inst23++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (x.length) != "undefined") {_RecordType("<327,335,12>",(x.length)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (x) != "undefined") {_RecordType("<327,328,12>",(x)); Inst31++; } } catch(e) {}
x.length;
try { if (Inst32 <= 1000 && typeof (x[0].length) != "undefined") {_RecordType("<337,348,13>",(x[0].length)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (x[0]) != "undefined") {_RecordType("<337,341,13>",(x[0])); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (x) != "undefined") {_RecordType("<337,338,13>",(x)); Inst34++; } } catch(e) {}
x[0].length;
try { if (Inst35 <= 1000 && typeof (x[1].length) != "undefined") {_RecordType("<350,361,14>",(x[1].length)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (x[1]) != "undefined") {_RecordType("<350,354,14>",(x[1])); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (x) != "undefined") {_RecordType("<350,351,14>",(x)); Inst37++; } } catch(e) {}
x[1].length;
try { if (Inst38 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<363,374,15>",(console.log)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (console) != "undefined") {_RecordType("<363,370,15>",(console)); Inst39++; } } catch(e) {}
console.log("Check that a setter isn't called.");

try { if (Inst40 <= 1000 && typeof (Array.prototype.__defineSetter__) != "undefined") {_RecordType("<414,446,17>",(Array.prototype.__defineSetter__)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<414,429,17>",(Array.prototype)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (Array) != "undefined") {_RecordType("<414,419,17>",(Array)); Inst42++; } } catch(e) {}
Array.prototype.__defineSetter__("0", function (value) {
try { if (Inst43 <= 1000 && typeof (value) != "undefined") {_RecordType("<462,467,17>",(value)); Inst43++; } } catch(e) {}
try { if (Inst44 <= 1000 && typeof (Error) != "undefined") {_RecordType("<483,488,18>",(Error)); Inst44++; } } catch(e) {}
  throw new Error("This should not be called.");
});

try { if (Inst47 <= 1000 && typeof (e) != "undefined") {_RecordType("<561,562,23>",(e)); Inst47++; } } catch(e) {}
try {
try { if (Inst45 <= 1000 && typeof (Array.of) != "undefined") {_RecordType("<533,541,22>",(Array.of)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (Array) != "undefined") {_RecordType("<533,538,22>",(Array)); Inst46++; } } catch(e) {}
  Array.of(1, 2, 3);
} catch (e) {
  ;
}

try { if (Inst48 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<573,584,27>",(console.log)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (console) != "undefined") {_RecordType("<573,580,27>",(console)); Inst49++; } } catch(e) {}
console.log("\"this\" is a constructor");

try { if (Inst51 <= 1000 && typeof (FooBar) != "undefined") {_RecordType("<635,641,29>",(FooBar)); Inst51++; } } catch(e) {}
var Foo = function FooBar(length) {
try { if (Inst52 <= 1000 && typeof (length) != "undefined") {_RecordType("<642,648,29>",(length)); Inst52++; } } catch(e) {}
try { if (Inst54 <= 1000 && typeof (length) != "undefined") {_RecordType("<673,679,30>",(length)); Inst54++; } } catch(e) {}
  this.givenLength = length;
try { if (Inst53 <= 1000 && typeof (this.givenLength) != "undefined") {_RecordType("<654,670,30>",(this.givenLength)); Inst53++; } } catch(e) {}
};
try { if (Inst50 <= 1000 && typeof (Foo) != "undefined") {_RecordType("<620,623,29>",(Foo)); Inst50++; } } catch(e) {}

try { if (Inst55 <= 1000 && typeof (Array.of.call) != "undefined") {_RecordType("<685,698,33>",(Array.of.call)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (Array.of) != "undefined") {_RecordType("<685,693,33>",(Array.of)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (Array) != "undefined") {_RecordType("<685,690,33>",(Array)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (Foo) != "undefined") {_RecordType("<699,702,33>",(Foo)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (Foo) != "undefined") {_RecordType("<730,733,33>",(Foo)); Inst59++; } } catch(e) {}
Array.of.call(Foo, 'a', 'b', 'c') instanceof Foo;
try { if (Inst60 <= 1000 && typeof (Array.of.call(Foo, 'a', 'b', 'c').givenLength) != "undefined") {_RecordType("<735,780,34>",(Array.of.call(Foo, 'a', 'b', 'c').givenLength)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (Array.of.call) != "undefined") {_RecordType("<735,748,34>",(Array.of.call)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (Array.of) != "undefined") {_RecordType("<735,743,34>",(Array.of)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (Array) != "undefined") {_RecordType("<735,740,34>",(Array)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (Foo) != "undefined") {_RecordType("<749,752,34>",(Foo)); Inst64++; } } catch(e) {}
Array.of.call(Foo, 'a', 'b', 'c').givenLength;
try { if (Inst66 <= 1000 && typeof (Array.of.call) != "undefined") {_RecordType("<792,805,35>",(Array.of.call)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (Array.of) != "undefined") {_RecordType("<792,800,35>",(Array.of)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (Array) != "undefined") {_RecordType("<792,797,35>",(Array)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (Foo) != "undefined") {_RecordType("<806,809,35>",(Foo)); Inst69++; } } catch(e) {}
var foo = Array.of.call(Foo, 'a', 'b', 'c');
try { if (Inst65 <= 1000 && typeof (foo) != "undefined") {_RecordType("<786,789,35>",(foo)); Inst65++; } } catch(e) {}
try { if (Inst70 <= 1000 && typeof (foo.length) != "undefined") {_RecordType("<828,838,36>",(foo.length)); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (foo) != "undefined") {_RecordType("<828,831,36>",(foo)); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (foo[0]) != "undefined") {_RecordType("<840,846,36>",(foo[0])); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (foo) != "undefined") {_RecordType("<840,843,36>",(foo)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (foo[1]) != "undefined") {_RecordType("<848,854,36>",(foo[1])); Inst74++; } } catch(e) {}try { if (Inst75 <= 1000 && typeof (foo) != "undefined") {_RecordType("<848,851,36>",(foo)); Inst75++; } } catch(e) {}try { if (Inst76 <= 1000 && typeof (foo[2]) != "undefined") {_RecordType("<856,862,36>",(foo[2])); Inst76++; } } catch(e) {}try { if (Inst77 <= 1000 && typeof (foo) != "undefined") {_RecordType("<856,859,36>",(foo)); Inst77++; } } catch(e) {}
[foo.length, foo[0], foo[1], foo[2]];
try { if (Inst78 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<865,876,37>",(console.log)); Inst78++; } } catch(e) {}try { if (Inst79 <= 1000 && typeof (console) != "undefined") {_RecordType("<865,872,37>",(console)); Inst79++; } } catch(e) {}
console.log("\"this\" is not a constructor");
var nonConstructorWasCalled = false;
try { if (Inst80 <= 1000 && typeof (nonConstructorWasCalled) != "undefined") {_RecordType("<915,938,38>",(nonConstructorWasCalled)); Inst80++; } } catch(e) {}

var nonConstructor = () => {
  nonConstructorWasCalled = true;
try { if (Inst82 <= 1000 && typeof (nonConstructorWasCalled) != "undefined") {_RecordType("<980,1003,41>",(nonConstructorWasCalled)); Inst82++; } } catch(e) {}
};
try { if (Inst81 <= 1000 && typeof (nonConstructor) != "undefined") {_RecordType("<953,967,40>",(nonConstructor)); Inst81++; } } catch(e) {}

try { if (Inst83 <= 1000 && typeof (Array.of.call(nonConstructor, Foo).constructor) != "undefined") {_RecordType("<1016,1062,44>",(Array.of.call(nonConstructor, Foo).constructor)); Inst83++; } } catch(e) {}try { if (Inst84 <= 1000 && typeof (Array.of.call) != "undefined") {_RecordType("<1016,1029,44>",(Array.of.call)); Inst84++; } } catch(e) {}try { if (Inst85 <= 1000 && typeof (Array.of) != "undefined") {_RecordType("<1016,1024,44>",(Array.of)); Inst85++; } } catch(e) {}try { if (Inst86 <= 1000 && typeof (Array) != "undefined") {_RecordType("<1016,1021,44>",(Array)); Inst86++; } } catch(e) {}try { if (Inst87 <= 1000 && typeof (nonConstructor) != "undefined") {_RecordType("<1030,1044,44>",(nonConstructor)); Inst87++; } } catch(e) {}try { if (Inst88 <= 1000 && typeof (Foo) != "undefined") {_RecordType("<1046,1049,44>",(Foo)); Inst88++; } } catch(e) {}
Array.of.call(nonConstructor, Foo).constructor;
try { if (Inst89 <= 1000 && typeof (Object.getPrototypeOf) != "undefined") {_RecordType("<1064,1085,45>",(Object.getPrototypeOf)); Inst89++; } } catch(e) {}try { if (Inst90 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1064,1070,45>",(Object)); Inst90++; } } catch(e) {}try { if (Inst91 <= 1000 && typeof (Array.of.call) != "undefined") {_RecordType("<1086,1099,45>",(Array.of.call)); Inst91++; } } catch(e) {}try { if (Inst92 <= 1000 && typeof (Array.of) != "undefined") {_RecordType("<1086,1094,45>",(Array.of)); Inst92++; } } catch(e) {}try { if (Inst93 <= 1000 && typeof (Array) != "undefined") {_RecordType("<1086,1091,45>",(Array)); Inst93++; } } catch(e) {}try { if (Inst94 <= 1000 && typeof (nonConstructor) != "undefined") {_RecordType("<1100,1114,45>",(nonConstructor)); Inst94++; } } catch(e) {}try { if (Inst95 <= 1000 && typeof (Foo) != "undefined") {_RecordType("<1116,1119,45>",(Foo)); Inst95++; } } catch(e) {}
Object.getPrototypeOf(Array.of.call(nonConstructor, Foo));
try { if (Inst96 <= 1000 && typeof (Array.of.call(nonConstructor, Foo).length) != "undefined") {_RecordType("<1123,1164,46>",(Array.of.call(nonConstructor, Foo).length)); Inst96++; } } catch(e) {}try { if (Inst97 <= 1000 && typeof (Array.of.call) != "undefined") {_RecordType("<1123,1136,46>",(Array.of.call)); Inst97++; } } catch(e) {}try { if (Inst98 <= 1000 && typeof (Array.of) != "undefined") {_RecordType("<1123,1131,46>",(Array.of)); Inst98++; } } catch(e) {}try { if (Inst99 <= 1000 && typeof (Array) != "undefined") {_RecordType("<1123,1128,46>",(Array)); Inst99++; } } catch(e) {}try { if (Inst100 <= 1000 && typeof (nonConstructor) != "undefined") {_RecordType("<1137,1151,46>",(nonConstructor)); Inst100++; } } catch(e) {}try { if (Inst101 <= 1000 && typeof (Foo) != "undefined") {_RecordType("<1153,1156,46>",(Foo)); Inst101++; } } catch(e) {}
Array.of.call(nonConstructor, Foo).length;
try { if (Inst102 <= 1000 && typeof (Array.of.call(nonConstructor, Foo)[0]) != "undefined") {_RecordType("<1166,1203,47>",(Array.of.call(nonConstructor, Foo)[0])); Inst102++; } } catch(e) {}try { if (Inst103 <= 1000 && typeof (Array.of.call) != "undefined") {_RecordType("<1166,1179,47>",(Array.of.call)); Inst103++; } } catch(e) {}try { if (Inst104 <= 1000 && typeof (Array.of) != "undefined") {_RecordType("<1166,1174,47>",(Array.of)); Inst104++; } } catch(e) {}try { if (Inst105 <= 1000 && typeof (Array) != "undefined") {_RecordType("<1166,1171,47>",(Array)); Inst105++; } } catch(e) {}try { if (Inst106 <= 1000 && typeof (nonConstructor) != "undefined") {_RecordType("<1180,1194,47>",(nonConstructor)); Inst106++; } } catch(e) {}try { if (Inst107 <= 1000 && typeof (Foo) != "undefined") {_RecordType("<1196,1199,47>",(Foo)); Inst107++; } } catch(e) {}
Array.of.call(nonConstructor, Foo)[0];
try { if (Inst108 <= 1000 && typeof (nonConstructorWasCalled) != "undefined") {_RecordType("<1205,1228,48>",(nonConstructorWasCalled)); Inst108++; } } catch(e) {}
nonConstructorWasCalled;

