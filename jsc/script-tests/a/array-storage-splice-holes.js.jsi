var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<0,11,1>",(console.log)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (console) != "undefined") {_RecordType("<0,7,1>",(console)); Inst1++; } } catch(e) {}
console.log("Tests for correct behavior of splice with array storage with holes."); // Array storage splice holes.

var holeIndex = 7;
try { if (Inst2 <= 1000 && typeof (holeIndex) != "undefined") {_RecordType("<120,129,3>",(holeIndex)); Inst2++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (Array) != "undefined") {_RecordType("<147,152,4>",(Array)); Inst4++; } } catch(e) {}
var a = new Array(10);
try { if (Inst3 <= 1000 && typeof (a) != "undefined") {_RecordType("<139,140,4>",(a)); Inst3++; } } catch(e) {}

for (var i = 0; i < a.length; ++i) {
try { if (Inst5 <= 1000 && typeof (i) != "undefined") {_RecordType("<168,169,6>",(i)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<175,176,6>",(i)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<179,187,6>",(a.length)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (a) != "undefined") {_RecordType("<179,180,6>",(a)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<191,192,6>",(i)); Inst9++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<202,203,7>",(i)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (holeIndex) != "undefined") {_RecordType("<208,217,7>",(holeIndex)); Inst11++; } } catch(e) {}
  if (i === holeIndex) {
    continue;
  }

try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<249,250,11>",(i)); Inst14++; } } catch(e) {}
  a[i] = i;
try { if (Inst12 <= 1000 && typeof (a[i]) != "undefined") {_RecordType("<242,246,11>",(a[i])); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (a) != "undefined") {_RecordType("<242,243,11>",(a)); Inst13++; } } catch(e) {}
}

try { if (Inst15 <= 1000 && typeof (a.shift) != "undefined") {_RecordType("<255,262,14>",(a.shift)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (a) != "undefined") {_RecordType("<255,256,14>",(a)); Inst16++; } } catch(e) {}
a.shift(); // Converts to array storage mode.

var startIndex = 4;
try { if (Inst17 <= 1000 && typeof (startIndex) != "undefined") {_RecordType("<306,316,16>",(startIndex)); Inst17++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (a.splice) != "undefined") {_RecordType("<322,330,17>",(a.splice)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (a) != "undefined") {_RecordType("<322,323,17>",(a)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (startIndex) != "undefined") {_RecordType("<331,341,17>",(startIndex)); Inst20++; } } catch(e) {}
a.splice(startIndex, 1);

for (var i = 0; i < startIndex; ++i) {
try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<357,358,19>",(i)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<364,365,19>",(i)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (startIndex) != "undefined") {_RecordType("<368,378,19>",(startIndex)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<382,383,19>",(i)); Inst24++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (a[i]) != "undefined") {_RecordType("<389,393,20>",(a[i])); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (a) != "undefined") {_RecordType("<389,390,20>",(a)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (i) != "undefined") {_RecordType("<397,398,20>",(i)); Inst27++; } } catch(e) {}
  a[i] == i + 1;
}

for (var i = startIndex; i < a.length; ++i) {
try { if (Inst28 <= 1000 && typeof (i) != "undefined") {_RecordType("<416,417,23>",(i)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (startIndex) != "undefined") {_RecordType("<420,430,23>",(startIndex)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (i) != "undefined") {_RecordType("<432,433,23>",(i)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<436,444,23>",(a.length)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (a) != "undefined") {_RecordType("<436,437,23>",(a)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (i) != "undefined") {_RecordType("<448,449,23>",(i)); Inst33++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof (i) != "undefined") {_RecordType("<459,460,24>",(i)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (holeIndex) != "undefined") {_RecordType("<465,474,24>",(holeIndex)); Inst35++; } } catch(e) {}
  if (i === holeIndex - 2) {
try { if (Inst36 <= 1000 && typeof (a.hasOwnProperty) != "undefined") {_RecordType("<486,502,25>",(a.hasOwnProperty)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (a) != "undefined") {_RecordType("<486,487,25>",(a)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (i) != "undefined") {_RecordType("<503,504,25>",(i)); Inst38++; } } catch(e) {}
    a.hasOwnProperty(i);
    continue;
  }

try { if (Inst39 <= 1000 && typeof (a[i]) != "undefined") {_RecordType("<528,532,29>",(a[i])); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (a) != "undefined") {_RecordType("<528,529,29>",(a)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (i) != "undefined") {_RecordType("<536,537,29>",(i)); Inst41++; } } catch(e) {}
  a[i] == i + 2;
}

