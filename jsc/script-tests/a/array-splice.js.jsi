var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<0,11,1>",(console.log)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (console) != "undefined") {_RecordType("<0,7,1>",(console)); Inst1++; } } catch(e) {}
console.log("This tests array.splice behavior.");
var arr = ['a', 'b', 'c', 'd'];
try { if (Inst2 <= 1000 && typeof (arr) != "undefined") {_RecordType("<54,57,2>",(arr)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (arr) != "undefined") {_RecordType("<82,85,3>",(arr)); Inst3++; } } catch(e) {}
arr;
try { if (Inst4 <= 1000 && typeof (arr.splice) != "undefined") {_RecordType("<87,97,4>",(arr.splice)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (arr) != "undefined") {_RecordType("<87,90,4>",(arr)); Inst5++; } } catch(e) {}
arr.splice(2);
try { if (Inst6 <= 1000 && typeof (arr) != "undefined") {_RecordType("<102,105,5>",(arr)); Inst6++; } } catch(e) {}
arr;
try { if (Inst7 <= 1000 && typeof (arr.splice) != "undefined") {_RecordType("<107,117,6>",(arr.splice)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (arr) != "undefined") {_RecordType("<107,110,6>",(arr)); Inst8++; } } catch(e) {}
arr.splice(0);
try { if (Inst9 <= 1000 && typeof (arr) != "undefined") {_RecordType("<122,125,7>",(arr)); Inst9++; } } catch(e) {}
arr;
arr = ['a', 'b', 'c', 'd'];
try { if (Inst10 <= 1000 && typeof (arr) != "undefined") {_RecordType("<127,130,8>",(arr)); Inst10++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (arr.splice) != "undefined") {_RecordType("<155,165,9>",(arr.splice)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (arr) != "undefined") {_RecordType("<155,158,9>",(arr)); Inst12++; } } catch(e) {}
arr.splice();
try { if (Inst13 <= 1000 && typeof (arr) != "undefined") {_RecordType("<169,172,10>",(arr)); Inst13++; } } catch(e) {}
arr;
try { if (Inst14 <= 1000 && typeof (arr.splice) != "undefined") {_RecordType("<174,184,11>",(arr.splice)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (arr) != "undefined") {_RecordType("<174,177,11>",(arr)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<185,194,11>",(undefined)); Inst16++; } } catch(e) {}
arr.splice(undefined);
try { if (Inst17 <= 1000 && typeof (arr) != "undefined") {_RecordType("<197,200,12>",(arr)); Inst17++; } } catch(e) {}
arr;
arr = ['a', 'b', 'c', 'd'];
try { if (Inst18 <= 1000 && typeof (arr) != "undefined") {_RecordType("<202,205,13>",(arr)); Inst18++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (arr.splice) != "undefined") {_RecordType("<230,240,14>",(arr.splice)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (arr) != "undefined") {_RecordType("<230,233,14>",(arr)); Inst20++; } } catch(e) {}
arr.splice(null);
try { if (Inst21 <= 1000 && typeof (arr) != "undefined") {_RecordType("<248,251,15>",(arr)); Inst21++; } } catch(e) {}
arr;
arr = ['a', 'b', 'c', 'd'];
try { if (Inst22 <= 1000 && typeof (arr) != "undefined") {_RecordType("<253,256,16>",(arr)); Inst22++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (arr.splice) != "undefined") {_RecordType("<281,291,17>",(arr.splice)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (arr) != "undefined") {_RecordType("<281,284,17>",(arr)); Inst24++; } } catch(e) {}
arr.splice(100);
try { if (Inst25 <= 1000 && typeof (arr) != "undefined") {_RecordType("<298,301,18>",(arr)); Inst25++; } } catch(e) {}
arr;
try { if (Inst26 <= 1000 && typeof (arr.splice) != "undefined") {_RecordType("<303,313,19>",(arr.splice)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (arr) != "undefined") {_RecordType("<303,306,19>",(arr)); Inst27++; } } catch(e) {}
arr.splice(-1);
try { if (Inst28 <= 1000 && typeof (arr) != "undefined") {_RecordType("<319,322,20>",(arr)); Inst28++; } } catch(e) {}
arr;
try { if (Inst29 <= 1000 && typeof (arr.splice) != "undefined") {_RecordType("<324,334,21>",(arr.splice)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (arr) != "undefined") {_RecordType("<324,327,21>",(arr)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<338,347,21>",(undefined)); Inst31++; } } catch(e) {}
arr.splice(2, undefined);
try { if (Inst32 <= 1000 && typeof (arr.splice) != "undefined") {_RecordType("<350,360,22>",(arr.splice)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (arr) != "undefined") {_RecordType("<350,353,22>",(arr)); Inst33++; } } catch(e) {}
arr.splice(2, null);
try { if (Inst34 <= 1000 && typeof (arr.splice) != "undefined") {_RecordType("<371,381,23>",(arr.splice)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (arr) != "undefined") {_RecordType("<371,374,23>",(arr)); Inst35++; } } catch(e) {}
arr.splice(2, -1);
try { if (Inst36 <= 1000 && typeof (arr) != "undefined") {_RecordType("<390,393,24>",(arr)); Inst36++; } } catch(e) {}
arr;
try { if (Inst37 <= 1000 && typeof (arr.splice) != "undefined") {_RecordType("<395,405,25>",(arr.splice)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (arr) != "undefined") {_RecordType("<395,398,25>",(arr)); Inst38++; } } catch(e) {}
arr.splice(2, 100);
try { if (Inst39 <= 1000 && typeof (arr) != "undefined") {_RecordType("<415,418,26>",(arr)); Inst39++; } } catch(e) {}
arr; // Check this doesn't crash.

try { if (Inst43 <= 1000 && typeof (e) != "undefined") {_RecordType("<504,505,30>",(e)); Inst43++; } } catch(e) {}
try {
try { if (Inst40 <= 1000 && typeof (String) != "undefined") {_RecordType("<458,464,29>",(String)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (Array(0xFFFFFFFD).splice) != "undefined") {_RecordType("<465,489,29>",(Array(0xFFFFFFFD).splice)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (Array) != "undefined") {_RecordType("<465,470,29>",(Array)); Inst42++; } } catch(e) {}
  String(Array(0xFFFFFFFD).splice(0));
} catch (e) {
  ;
}

