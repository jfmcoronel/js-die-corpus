var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//@ skip if $hostOS == "windows"
try { if (Inst0 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<33,44,2>",(console.log)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (console) != "undefined") {_RecordType("<33,40,2>",(console)); Inst1++; } } catch(e) {}
console.log("This test checks the behavior of Array.prototype.toLocaleString as described in the ECMAScript Internationalization API Specification (ECMA-402 2.0).");
try { if (Inst2 <= 1000 && typeof (Array.prototype.toLocaleString.length) != "undefined") {_RecordType("<199,236,3>",(Array.prototype.toLocaleString.length)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Array.prototype.toLocaleString) != "undefined") {_RecordType("<199,229,3>",(Array.prototype.toLocaleString)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<199,214,3>",(Array.prototype)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Array) != "undefined") {_RecordType("<199,204,3>",(Array)); Inst5++; } } catch(e) {}
Array.prototype.toLocaleString.length;
try { if (Inst6 <= 1000 && typeof (Object.getOwnPropertyDescriptor(Array.prototype, 'toLocaleString').enumerable) != "undefined") {_RecordType("<238,315,4>",(Object.getOwnPropertyDescriptor(Array.prototype, 'toLocaleString').enumerable)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<238,269,4>",(Object.getOwnPropertyDescriptor)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Object) != "undefined") {_RecordType("<238,244,4>",(Object)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<270,285,4>",(Array.prototype)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Array) != "undefined") {_RecordType("<270,275,4>",(Array)); Inst10++; } } catch(e) {}
Object.getOwnPropertyDescriptor(Array.prototype, 'toLocaleString').enumerable;
try { if (Inst11 <= 1000 && typeof (Object.getOwnPropertyDescriptor(Array.prototype, 'toLocaleString').configurable) != "undefined") {_RecordType("<317,396,5>",(Object.getOwnPropertyDescriptor(Array.prototype, 'toLocaleString').configurable)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<317,348,5>",(Object.getOwnPropertyDescriptor)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Object) != "undefined") {_RecordType("<317,323,5>",(Object)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<349,364,5>",(Array.prototype)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Array) != "undefined") {_RecordType("<349,354,5>",(Array)); Inst15++; } } catch(e) {}
Object.getOwnPropertyDescriptor(Array.prototype, 'toLocaleString').configurable;
try { if (Inst16 <= 1000 && typeof (Object.getOwnPropertyDescriptor(Array.prototype, 'toLocaleString').writable) != "undefined") {_RecordType("<398,473,6>",(Object.getOwnPropertyDescriptor(Array.prototype, 'toLocaleString').writable)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<398,429,6>",(Object.getOwnPropertyDescriptor)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Object) != "undefined") {_RecordType("<398,404,6>",(Object)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<430,445,6>",(Array.prototype)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (Array) != "undefined") {_RecordType("<430,435,6>",(Array)); Inst20++; } } catch(e) {}
Object.getOwnPropertyDescriptor(Array.prototype, 'toLocaleString').writable; // Test toObject abrupt completion.

try { if (Inst25 <= 1000 && typeof (e) != "undefined") {_RecordType("<568,569,10>",(e)); Inst25++; } } catch(e) {}
try {
try { if (Inst21 <= 1000 && typeof (Array.prototype.toLocaleString.call) != "undefined") {_RecordType("<520,555,9>",(Array.prototype.toLocaleString.call)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Array.prototype.toLocaleString) != "undefined") {_RecordType("<520,550,9>",(Array.prototype.toLocaleString)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<520,535,9>",(Array.prototype)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (Array) != "undefined") {_RecordType("<520,525,9>",(Array)); Inst24++; } } catch(e) {}
  Array.prototype.toLocaleString.call();
} catch (e) {
  ;
}

try { if (Inst31 <= 1000 && typeof (e) != "undefined") {_RecordType("<645,646,16>",(e)); Inst31++; } } catch(e) {}
try {
try { if (Inst26 <= 1000 && typeof (Array.prototype.toLocaleString.call) != "undefined") {_RecordType("<588,623,15>",(Array.prototype.toLocaleString.call)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (Array.prototype.toLocaleString) != "undefined") {_RecordType("<588,618,15>",(Array.prototype.toLocaleString)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<588,603,15>",(Array.prototype)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (Array) != "undefined") {_RecordType("<588,593,15>",(Array)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<624,633,15>",(undefined)); Inst30++; } } catch(e) {}
  Array.prototype.toLocaleString.call(undefined);
} catch (e) {
  ;
}

try { if (Inst36 <= 1000 && typeof (e) != "undefined") {_RecordType("<717,718,22>",(e)); Inst36++; } } catch(e) {}
try {
try { if (Inst32 <= 1000 && typeof (Array.prototype.toLocaleString.call) != "undefined") {_RecordType("<665,700,21>",(Array.prototype.toLocaleString.call)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (Array.prototype.toLocaleString) != "undefined") {_RecordType("<665,695,21>",(Array.prototype.toLocaleString)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<665,680,21>",(Array.prototype)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (Array) != "undefined") {_RecordType("<665,670,21>",(Array)); Inst35++; } } catch(e) {}
  Array.prototype.toLocaleString.call(null);
} catch (e) {
  ;
} // Test Generic invocation.


try { if (Inst37 <= 1000 && typeof (Array.prototype.toLocaleString.call) != "undefined") {_RecordType("<758,793,27>",(Array.prototype.toLocaleString.call)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (Array.prototype.toLocaleString) != "undefined") {_RecordType("<758,788,27>",(Array.prototype.toLocaleString)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<758,773,27>",(Array.prototype)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (Array) != "undefined") {_RecordType("<758,763,27>",(Array)); Inst40++; } } catch(e) {}
Array.prototype.toLocaleString.call({
  length: 5,
  0: 'zero',
  1: 1,
  3: 'three',
  5: 'five'
}); // Empty array is always an empty string.

try { if (Inst41 <= 1000 && typeof ([].toLocaleString) != "undefined") {_RecordType("<903,920,35>",([].toLocaleString)); Inst41++; } } catch(e) {}
[].toLocaleString(); // Missing still get a separator.

try { if (Inst42 <= 1000 && typeof (Array(5).toLocaleString) != "undefined") {_RecordType("<959,982,37>",(Array(5).toLocaleString)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (Array) != "undefined") {_RecordType("<959,964,37>",(Array)); Inst43++; } } catch(e) {}
Array(5).toLocaleString();
try { if (Inst44 <= 1000 && typeof ([null, null].toLocaleString) != "undefined") {_RecordType("<986,1013,38>",([null, null].toLocaleString)); Inst44++; } } catch(e) {}
[null, null].toLocaleString();
try { if (Inst45 <= 1000 && typeof ([undefined, undefined].toLocaleString) != "undefined") {_RecordType("<1017,1054,39>",([undefined, undefined].toLocaleString)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<1018,1027,39>",(undefined)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<1029,1038,39>",(undefined)); Inst47++; } } catch(e) {}
[undefined, undefined].toLocaleString(); // Test that parameters are passed through properly.

try { if (Inst50 <= 1000 && typeof (e) != "undefined") {_RecordType("<1163,1164,43>",(e)); Inst50++; } } catch(e) {}
try {
try { if (Inst48 <= 1000 && typeof ([new Date()].toLocaleString) != "undefined") {_RecordType("<1120,1147,42>",([new Date()].toLocaleString)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (Date) != "undefined") {_RecordType("<1125,1129,42>",(Date)); Inst49++; } } catch(e) {}
  [new Date()].toLocaleString('i');
} catch (e) {
  ;
}

try { if (Inst51 <= 1000 && typeof ([new Date(NaN), new Date(0)].toLocaleString) != "undefined") {_RecordType("<1175,1218,47>",([new Date(NaN), new Date(0)].toLocaleString)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (Date) != "undefined") {_RecordType("<1180,1184,47>",(Date)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<1185,1188,47>",(NaN)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (Date) != "undefined") {_RecordType("<1195,1199,47>",(Date)); Inst54++; } } catch(e) {}
[new Date(NaN), new Date(0)].toLocaleString('zh-Hans-CN-u-nu-hanidec', {
  timeZone: 'UTC'
});

