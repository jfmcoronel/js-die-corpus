var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<0,11,1>",(console.log)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (console) != "undefined") {_RecordType("<0,7,1>",(console)); Inst1++; } } catch(e) {}
console.log("This tests that a call to array.sort(compareFunction) does not crash from within a sort comparison function.");
var numbers1 = [1, 2, 3, 4, 5, 6, 7];
try { if (Inst2 <= 1000 && typeof (numbers1) != "undefined") {_RecordType("<129,137,2>",(numbers1)); Inst2++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (numbers1.slice) != "undefined") {_RecordType("<178,192,3>",(numbers1.slice)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (numbers1) != "undefined") {_RecordType("<178,186,3>",(numbers1)); Inst5++; } } catch(e) {}
var numbers2 = numbers1.slice();
try { if (Inst3 <= 1000 && typeof (numbers2) != "undefined") {_RecordType("<167,175,3>",(numbers2)); Inst3++; } } catch(e) {}

try { if (Inst6 <= 1000 && typeof (compareFn1) != "undefined") {_RecordType("<206,216,5>",(compareFn1)); Inst6++; } } catch(e) {}
function compareFn1(a, b) {
try { if (Inst7 <= 1000 && typeof (a) != "undefined") {_RecordType("<217,218,5>",(a)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (b) != "undefined") {_RecordType("<220,221,5>",(b)); Inst8++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (b) != "undefined") {_RecordType("<234,235,6>",(b)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (a) != "undefined") {_RecordType("<238,239,6>",(a)); Inst10++; } } catch(e) {}
  return b - a;
}

try { if (Inst11 <= 1000 && typeof (compareFn2) != "undefined") {_RecordType("<253,263,9>",(compareFn2)); Inst11++; } } catch(e) {}
function compareFn2(a, b) {
try { if (Inst12 <= 1000 && typeof (a) != "undefined") {_RecordType("<264,265,9>",(a)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (b) != "undefined") {_RecordType("<267,268,9>",(b)); Inst13++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (numbers1.sort) != "undefined") {_RecordType("<274,287,10>",(numbers1.sort)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (numbers1) != "undefined") {_RecordType("<274,282,10>",(numbers1)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (compareFn1) != "undefined") {_RecordType("<288,298,10>",(compareFn1)); Inst16++; } } catch(e) {}
  numbers1.sort(compareFn1);
try { if (Inst17 <= 1000 && typeof (b) != "undefined") {_RecordType("<310,311,11>",(b)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (a) != "undefined") {_RecordType("<314,315,11>",(a)); Inst18++; } } catch(e) {}
  return b - a;
}

try { if (Inst19 <= 1000 && typeof (numbers2.sort) != "undefined") {_RecordType("<320,333,14>",(numbers2.sort)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (numbers2) != "undefined") {_RecordType("<320,328,14>",(numbers2)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (compareFn2) != "undefined") {_RecordType("<334,344,14>",(compareFn2)); Inst21++; } } catch(e) {}
numbers2.sort(compareFn2);

