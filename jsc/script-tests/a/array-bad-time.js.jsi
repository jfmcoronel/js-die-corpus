var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<0,11,1>",(console.log)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (console) != "undefined") {_RecordType("<0,7,1>",(console)); Inst1++; } } catch(e) {}
console.log("Tests that defining a setter on the Array prototype works even if it is done after arrays are allocated.");
var ouches = 0;
try { if (Inst2 <= 1000 && typeof (ouches) != "undefined") {_RecordType("<125,131,2>",(ouches)); Inst2++; } } catch(e) {}

try { if (Inst3 <= 1000 && typeof (foo) != "undefined") {_RecordType("<147,150,4>",(foo)); Inst3++; } } catch(e) {}
function foo(haveABadTime) {
try { if (Inst4 <= 1000 && typeof (haveABadTime) != "undefined") {_RecordType("<151,163,4>",(haveABadTime)); Inst4++; } } catch(e) {}
  var result = [];
try { if (Inst5 <= 1000 && typeof (result) != "undefined") {_RecordType("<173,179,5>",(result)); Inst5++; } } catch(e) {}
  result.length = 5;
try { if (Inst6 <= 1000 && typeof (result.length) != "undefined") {_RecordType("<188,201,6>",(result.length)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (result) != "undefined") {_RecordType("<188,194,6>",(result)); Inst7++; } } catch(e) {}

  for (var i = 0; i < result.length; ++i) {
try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<219,220,8>",(i)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<226,227,8>",(i)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (result.length) != "undefined") {_RecordType("<230,243,8>",(result.length)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (result) != "undefined") {_RecordType("<230,236,8>",(result)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<247,248,8>",(i)); Inst12++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<260,261,9>",(i)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (haveABadTime) != "undefined") {_RecordType("<265,277,9>",(haveABadTime)); Inst14++; } } catch(e) {}
    if (i == haveABadTime) {
try { if (Inst15 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<287,298,10>",(console.log)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (console) != "undefined") {_RecordType("<287,294,10>",(console)); Inst16++; } } catch(e) {}
      console.log("Henceforth I will have a bad time.");

try { if (Inst17 <= 1000 && typeof (Array.prototype.__defineSetter__) != "undefined") {_RecordType("<345,377,12>",(Array.prototype.__defineSetter__)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<345,360,12>",(Array.prototype)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Array) != "undefined") {_RecordType("<345,350,12>",(Array)); Inst19++; } } catch(e) {}
      Array.prototype.__defineSetter__("3", function () {
try { if (Inst20 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<405,416,13>",(console.log)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (console) != "undefined") {_RecordType("<405,412,13>",(console)); Inst21++; } } catch(e) {}
        console.log("Ouch!");
try { if (Inst22 <= 1000 && typeof (ouches) != "undefined") {_RecordType("<435,441,14>",(ouches)); Inst22++; } } catch(e) {}
        ouches++;
      });
    }

try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<478,479,18>",(i)); Inst25++; } } catch(e) {}
    result[i] = i;
try { if (Inst23 <= 1000 && typeof (result[i]) != "undefined") {_RecordType("<466,475,18>",(result[i])); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (result) != "undefined") {_RecordType("<466,472,18>",(result)); Inst24++; } } catch(e) {}
  }

try { if (Inst26 <= 1000 && typeof (result) != "undefined") {_RecordType("<495,501,21>",(result)); Inst26++; } } catch(e) {}
  return result;
}

var expected = "\"0,1,2,3,4\"";
try { if (Inst27 <= 1000 && typeof (expected) != "undefined") {_RecordType("<510,518,24>",(expected)); Inst27++; } } catch(e) {}

for (var i = 0; i < 1000; ++i) {
try { if (Inst28 <= 1000 && typeof (i) != "undefined") {_RecordType("<548,549,26>",(i)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (i) != "undefined") {_RecordType("<555,556,26>",(i)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (i) != "undefined") {_RecordType("<567,568,26>",(i)); Inst30++; } } catch(e) {}
  var haveABadTime;
try { if (Inst31 <= 1000 && typeof (haveABadTime) != "undefined") {_RecordType("<578,590,27>",(haveABadTime)); Inst31++; } } catch(e) {}

try { if (Inst32 <= 1000 && typeof (i) != "undefined") {_RecordType("<599,600,29>",(i)); Inst32++; } } catch(e) {}
  if (i == 950) {
    haveABadTime = 2;
try { if (Inst33 <= 1000 && typeof (haveABadTime) != "undefined") {_RecordType("<615,627,30>",(haveABadTime)); Inst33++; } } catch(e) {}
    expected = "\"0,1,2,,4\"";
try { if (Inst34 <= 1000 && typeof (expected) != "undefined") {_RecordType("<637,645,31>",(expected)); Inst34++; } } catch(e) {}
  } else {
    haveABadTime = -1;
try { if (Inst35 <= 1000 && typeof (haveABadTime) != "undefined") {_RecordType("<679,691,33>",(haveABadTime)); Inst35++; } } catch(e) {}
  }

try { if (Inst36 <= 1000 && typeof (foo(haveABadTime).join) != "undefined") {_RecordType("<705,727,36>",(foo(haveABadTime).join)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (foo) != "undefined") {_RecordType("<705,708,36>",(foo)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (haveABadTime) != "undefined") {_RecordType("<709,721,36>",(haveABadTime)); Inst38++; } } catch(e) {}
  foo(haveABadTime).join(",");
}

try { if (Inst39 <= 1000 && typeof (ouches) != "undefined") {_RecordType("<737,743,39>",(ouches)); Inst39++; } } catch(e) {}
ouches;

