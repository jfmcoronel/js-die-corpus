var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<0,11,1>",(console.log)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (console) != "undefined") {_RecordType("<0,7,1>",(console)); Inst1++; } } catch(e) {}
console.log('Tests for ES6 arrow function, passing arrow function as the paramter');

var f = function (cl, paramter) {
try { if (Inst3 <= 1000 && typeof (cl) != "undefined") {_RecordType("<104,106,3>",(cl)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (paramter) != "undefined") {_RecordType("<108,116,3>",(paramter)); Inst4++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (cl) != "undefined") {_RecordType("<129,131,4>",(cl)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (paramter) != "undefined") {_RecordType("<132,140,4>",(paramter)); Inst6++; } } catch(e) {}
  return cl(paramter);
};
try { if (Inst2 <= 1000 && typeof (f) != "undefined") {_RecordType("<90,91,3>",(f)); Inst2++; } } catch(e) {}

var f2 = function (cl, paramter1, paramter2) {
try { if (Inst8 <= 1000 && typeof (cl) != "undefined") {_RecordType("<166,168,7>",(cl)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (paramter1) != "undefined") {_RecordType("<170,179,7>",(paramter1)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (paramter2) != "undefined") {_RecordType("<181,190,7>",(paramter2)); Inst10++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (cl) != "undefined") {_RecordType("<203,205,8>",(cl)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (paramter1) != "undefined") {_RecordType("<206,215,8>",(paramter1)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (paramter2) != "undefined") {_RecordType("<217,226,8>",(paramter2)); Inst13++; } } catch(e) {}
  return cl(paramter1, paramter2);
};
try { if (Inst7 <= 1000 && typeof (f2) != "undefined") {_RecordType("<151,153,7>",(f2)); Inst7++; } } catch(e) {}

try { if (Inst14 <= 1000 && typeof (f) != "undefined") {_RecordType("<233,234,11>",(f)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (x) != "undefined") {_RecordType("<235,236,11>",(x)); Inst15++; } } catch(e) {}
f(x => {
try { if (Inst16 <= 1000 && typeof (x) != "undefined") {_RecordType("<251,252,12>",(x)); Inst16++; } } catch(e) {}
  return x * 25;
}, 121);
try { if (Inst17 <= 1000 && typeof (f2) != "undefined") {_RecordType("<268,270,14>",(f2)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (x) != "undefined") {_RecordType("<272,273,14>",(x)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (y) != "undefined") {_RecordType("<275,276,14>",(y)); Inst19++; } } catch(e) {}
f2((x, y) => {
try { if (Inst20 <= 1000 && typeof (x) != "undefined") {_RecordType("<292,293,15>",(x)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (y) != "undefined") {_RecordType("<296,297,15>",(y)); Inst21++; } } catch(e) {}
  return x * y;
}, 14, 12);
var successfullyParsed = true;
try { if (Inst22 <= 1000 && typeof (successfullyParsed) != "undefined") {_RecordType("<315,333,17>",(successfullyParsed)); Inst22++; } } catch(e) {}

