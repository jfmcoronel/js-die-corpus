var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<0,11,1>",(console.log)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (console) != "undefined") {_RecordType("<0,7,1>",(console)); Inst1++; } } catch(e) {}
console.log("This test checks the behavior of computed property names in object literals.");
var a = "propertyName";
try { if (Inst2 <= 1000 && typeof (a) != "undefined") {_RecordType("<97,98,2>",(a)); Inst2++; } } catch(e) {}

try { if (Inst3 <= 1000 && typeof (runTest) != "undefined") {_RecordType("<127,134,4>",(runTest)); Inst3++; } } catch(e) {}
function runTest(test) {
try { if (Inst4 <= 1000 && typeof (test) != "undefined") {_RecordType("<135,139,4>",(test)); Inst4++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (test) != "undefined") {_RecordType("<158,162,5>",(test)); Inst6++; } } catch(e) {}
  test = "(" + test + ")";
try { if (Inst5 <= 1000 && typeof (test) != "undefined") {_RecordType("<145,149,5>",(test)); Inst5++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (test) != "undefined") {_RecordType("<172,176,6>",(test)); Inst7++; } } catch(e) {}
  test;
  {
    'use strict';

try { if (Inst8 <= 1000 && typeof (test) != "undefined") {_RecordType("<205,209,10>",(test)); Inst8++; } } catch(e) {}
    test;
  }

  (function () {
    'use strict';

try { if (Inst9 <= 1000 && typeof (test) != "undefined") {_RecordType("<263,267,16>",(test)); Inst9++; } } catch(e) {}
    return test;
  })();
}

try { if (Inst10 <= 1000 && typeof (runTest) != "undefined") {_RecordType("<280,287,20>",(runTest)); Inst10++; } } catch(e) {}
runTest("{[a]: true}.propertyName");
try { if (Inst11 <= 1000 && typeof (runTest) != "undefined") {_RecordType("<317,324,21>",(runTest)); Inst11++; } } catch(e) {}
runTest("{[(1,a)]: true}.propertyName");
try { if (Inst12 <= 1000 && typeof (runTest) != "undefined") {_RecordType("<358,365,22>",(runTest)); Inst12++; } } catch(e) {}
runTest("{[a+1]: true}.propertyName1");
try { if (Inst13 <= 1000 && typeof (runTest) != "undefined") {_RecordType("<398,405,23>",(runTest)); Inst13++; } } catch(e) {}
runTest("{propertyName: false, [a]: true}.propertyName");
try { if (Inst14 <= 1000 && typeof (runTest) != "undefined") {_RecordType("<456,463,24>",(runTest)); Inst14++; } } catch(e) {}
runTest("{[a]: false, propertyName: true}.propertyName");
try { if (Inst15 <= 1000 && typeof (runTest) != "undefined") {_RecordType("<514,521,25>",(runTest)); Inst15++; } } catch(e) {}
runTest("{get propertyName(){ return false; }, [a]: true}.propertyName");
try { if (Inst16 <= 1000 && typeof (runTest) != "undefined") {_RecordType("<588,595,26>",(runTest)); Inst16++; } } catch(e) {}
runTest("{[a]: false, get propertyName(){ return true; }}.propertyName");
try { if (Inst17 <= 1000 && typeof (runTest) != "undefined") {_RecordType("<662,669,27>",(runTest)); Inst17++; } } catch(e) {}
runTest("{__proto__: {get propertyName(){ return false; }}, [a]: true}.propertyName");
try { if (Inst18 <= 1000 && typeof (runTest) != "undefined") {_RecordType("<749,756,28>",(runTest)); Inst18++; } } catch(e) {}
runTest("{__proto__: {get propertyName(){ return false; }}, propertyName: true}.propertyName");
a = 0;
try { if (Inst19 <= 1000 && typeof (a) != "undefined") {_RecordType("<845,846,29>",(a)); Inst19++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (runTest) != "undefined") {_RecordType("<852,859,30>",(runTest)); Inst20++; } } catch(e) {}
runTest("{[a]: true}[0]");
try { if (Inst21 <= 1000 && typeof (runTest) != "undefined") {_RecordType("<879,886,31>",(runTest)); Inst21++; } } catch(e) {}
runTest("{[a+1]: true}[1]");
try { if (Inst22 <= 1000 && typeof (runTest) != "undefined") {_RecordType("<908,915,32>",(runTest)); Inst22++; } } catch(e) {}
runTest("{0: false, [a]: true}[0]");
try { if (Inst23 <= 1000 && typeof (runTest) != "undefined") {_RecordType("<945,952,33>",(runTest)); Inst23++; } } catch(e) {}
runTest("{[a]: false, 0: true}[0]");
try { if (Inst24 <= 1000 && typeof (runTest) != "undefined") {_RecordType("<982,989,34>",(runTest)); Inst24++; } } catch(e) {}
runTest("{get '0'(){ return false; }, [a]: true}[0]");
try { if (Inst25 <= 1000 && typeof (runTest) != "undefined") {_RecordType("<1037,1044,35>",(runTest)); Inst25++; } } catch(e) {}
runTest("{[a]: false, get '0'(){ return true; }}[0]");
try { if (Inst26 <= 1000 && typeof (runTest) != "undefined") {_RecordType("<1092,1099,36>",(runTest)); Inst26++; } } catch(e) {}
runTest("{__proto__: {get '0'(){ return false; }}, [a]: true}[0]");

try { if (Inst27 <= 1000 && typeof (runTestThrow) != "undefined") {_RecordType("<1170,1182,38>",(runTestThrow)); Inst27++; } } catch(e) {}
function runTestThrow(test) {
try { if (Inst28 <= 1000 && typeof (test) != "undefined") {_RecordType("<1183,1187,38>",(test)); Inst28++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (test) != "undefined") {_RecordType("<1206,1210,39>",(test)); Inst30++; } } catch(e) {}
  test = "(" + test + ")";
try { if (Inst29 <= 1000 && typeof (test) != "undefined") {_RecordType("<1193,1197,39>",(test)); Inst29++; } } catch(e) {}

try { if (Inst32 <= 1000 && typeof (e) != "undefined") {_RecordType("<1248,1249,43>",(e)); Inst32++; } } catch(e) {}
  try {
try { if (Inst31 <= 1000 && typeof (test) != "undefined") {_RecordType("<1231,1235,42>",(test)); Inst31++; } } catch(e) {}
    test;
  } catch (e) {
    ;
  }

try { if (Inst34 <= 1000 && typeof (e) != "undefined") {_RecordType("<1312,1313,51>",(e)); Inst34++; } } catch(e) {}
  try {
    'use strict';

try { if (Inst33 <= 1000 && typeof (test) != "undefined") {_RecordType("<1295,1299,50>",(test)); Inst33++; } } catch(e) {}
    test;
  } catch (e) {
    ;
  }

try { if (Inst36 <= 1000 && typeof (e) != "undefined") {_RecordType("<1416,1417,61>",(e)); Inst36++; } } catch(e) {}
  try {
    (function () {
      'use strict';

try { if (Inst35 <= 1000 && typeof (test) != "undefined") {_RecordType("<1389,1393,59>",(test)); Inst35++; } } catch(e) {}
      return test;
    })();
  } catch (e) {
    ;
  }
}

a = "propertyName";
try { if (Inst37 <= 1000 && typeof (a) != "undefined") {_RecordType("<1434,1435,66>",(a)); Inst37++; } } catch(e) {}
try { if (Inst38 <= 1000 && typeof (runTestThrow) != "undefined") {_RecordType("<1454,1466,67>",(runTestThrow)); Inst38++; } } catch(e) {}
runTestThrow("{[1,a]: true}.propertyName");
try { if (Inst39 <= 1000 && typeof (runTestThrow) != "undefined") {_RecordType("<1498,1510,68>",(runTestThrow)); Inst39++; } } catch(e) {}
runTestThrow("{propertyName: false, [1,a]: true}.propertyName");
try { if (Inst40 <= 1000 && typeof (runTestThrow) != "undefined") {_RecordType("<1563,1575,69>",(runTestThrow)); Inst40++; } } catch(e) {}
runTestThrow("{[1,a]: false, propertyName: true}.propertyName");
try { if (Inst41 <= 1000 && typeof (runTestThrow) != "undefined") {_RecordType("<1628,1640,70>",(runTestThrow)); Inst41++; } } catch(e) {}
runTestThrow("{get propertyName(){ return false; }, [1,a]: true}.propertyName");

