var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<0,11,1>",(console.log)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (console) != "undefined") {_RecordType("<0,7,1>",(console)); Inst1++; } } catch(e) {}
console.log("Bound Function Names");

try { if (Inst2 <= 1000 && typeof (assert) != "undefined") {_RecordType("<47,53,3>",(assert)); Inst2++; } } catch(e) {}
function assert(b, text) {
try { if (Inst3 <= 1000 && typeof (b) != "undefined") {_RecordType("<54,55,3>",(b)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (text) != "undefined") {_RecordType("<57,61,3>",(text)); Inst4++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (b) != "undefined") {_RecordType("<71,72,4>",(b)); Inst5++; } } catch(e) {}
  if (b) {
try { if (Inst6 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<80,91,5>",(console.log)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (console) != "undefined") {_RecordType("<80,87,5>",(console)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (text) != "undefined") {_RecordType("<92,96,5>",(text)); Inst8++; } } catch(e) {}
    console.log(text);
  } else {
try { if (Inst9 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<114,125,7>",(console.log)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (console) != "undefined") {_RecordType("<114,121,7>",(console)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (text) != "undefined") {_RecordType("<141,145,7>",(text)); Inst11++; } } catch(e) {}
    console.log(`Bad result: ${text}`);
  }
}

try { if (Inst12 <= 1000 && typeof ((function () {
  ;
}).bind().name) != "undefined") {_RecordType("<157,190,11>",((function () {
  ;
}).bind().name)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof ((function () {
  ;
}).bind) != "undefined") {_RecordType("<157,183,11>",((function () {
  ;
}).bind)); Inst13++; } } catch(e) {}
(function () {
  ;
}).bind().name === "bound ";
"Anonymous function bound name.";
try { if (Inst14 <= 1000 && typeof ((function foo() {
  ;
}).bind().name) != "undefined") {_RecordType("<239,275,15>",((function foo() {
  ;
}).bind().name)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof ((function foo() {
  ;
}).bind) != "undefined") {_RecordType("<239,268,15>",((function foo() {
  ;
}).bind)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (foo) != "undefined") {_RecordType("<249,252,15>",(foo)); Inst16++; } } catch(e) {}
(function foo() {
  ;
}).bind().name === "bound foo";
"Function bound name should be foo.";

try { if (Inst17 <= 1000 && typeof (bar) != "undefined") {_RecordType("<341,344,20>",(bar)); Inst17++; } } catch(e) {}
function bar() {
  ;
}

try { if (Inst18 <= 1000 && typeof (bar.bind().name) != "undefined") {_RecordType("<356,371,24>",(bar.bind().name)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (bar.bind) != "undefined") {_RecordType("<356,364,24>",(bar.bind)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (bar) != "undefined") {_RecordType("<356,359,24>",(bar)); Inst20++; } } catch(e) {}
bar.bind().name === "bound bar";
"Function bound name should be bar.";
try { if (Inst21 <= 1000 && typeof (bar.bind().bind().name) != "undefined") {_RecordType("<427,449,26>",(bar.bind().bind().name)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (bar.bind().bind) != "undefined") {_RecordType("<427,442,26>",(bar.bind().bind)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (bar.bind) != "undefined") {_RecordType("<427,435,26>",(bar.bind)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (bar) != "undefined") {_RecordType("<427,430,26>",(bar)); Inst24++; } } catch(e) {}
bar.bind().bind().name === "bound bound bar";
"Function double bound name should be bar.";
try { if (Inst25 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<518,529,28>",(console.log)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (console) != "undefined") {_RecordType("<518,525,28>",(console)); Inst26++; } } catch(e) {}
console.log("Test InternalFunction names.");
try { if (Inst27 <= 1000 && typeof (Error.bind().name) != "undefined") {_RecordType("<563,580,29>",(Error.bind().name)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (Error.bind) != "undefined") {_RecordType("<563,573,29>",(Error.bind)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (Error) != "undefined") {_RecordType("<563,568,29>",(Error)); Inst29++; } } catch(e) {}
Error.bind().name === "bound Error";
"Function bound name should be Error.";
try { if (Inst30 <= 1000 && typeof (Function.bind().name) != "undefined") {_RecordType("<640,660,31>",(Function.bind().name)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (Function.bind) != "undefined") {_RecordType("<640,653,31>",(Function.bind)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (Function) != "undefined") {_RecordType("<640,648,31>",(Function)); Inst32++; } } catch(e) {}
Function.bind().name === "bound Function";
"Function bound name should be Function.";

