var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<0,11,1>",(console.log)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (console) != "undefined") {_RecordType("<0,7,1>",(console)); Inst1++; } } catch(e) {}
console.log("This test ensures that properties of nested function code are not lost (due to cached function info).");
var passed1 = false;
try { if (Inst2 <= 1000 && typeof (passed1) != "undefined") {_RecordType("<122,129,2>",(passed1)); Inst2++; } } catch(e) {}
var passed2 = false;
try { if (Inst3 <= 1000 && typeof (passed2) != "undefined") {_RecordType("<143,150,3>",(passed2)); Inst3++; } } catch(e) {}
var passed3 = false;
try { if (Inst4 <= 1000 && typeof (passed3) != "undefined") {_RecordType("<164,171,4>",(passed3)); Inst4++; } } catch(e) {}
var passed4 = false; // Test cases deliberately nested!
try { if (Inst5 <= 1000 && typeof (passed4) != "undefined") {_RecordType("<185,192,5>",(passed4)); Inst5++; } } catch(e) {}

try { if (Inst6 <= 1000 && typeof (runTests) != "undefined") {_RecordType("<247,255,7>",(runTests)); Inst6++; } } catch(e) {}
function runTests() {
  // Formating of these functions is significant for regression
  // testing; functions with small bodies are not cached!
try { if (Inst7 <= 1000 && typeof (test1) != "undefined") {_RecordType("<393,398,10>",(test1)); Inst7++; } } catch(e) {}
  function test1() {
    return this;
  }

try { if (Inst8 <= 1000 && typeof (test2) != "undefined") {_RecordType("<436,441,14>",(test2)); Inst8++; } } catch(e) {}
  function test2() {
    "use strict";

    return this;
  }

try { if (Inst9 <= 1000 && typeof (test3) != "undefined") {_RecordType("<498,503,20>",(test3)); Inst9++; } } catch(e) {}
  function test3() {
    return this ? "OKAY" : "Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.";
  }

try { if (Inst10 <= 1000 && typeof (test4) != "undefined") {_RecordType("<1001,1006,24>",(test4)); Inst10++; } } catch(e) {}
  function test4() {
    "use strict";

    return !this ? "OKAY" : "Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.";
  }

try { if (Inst12 <= 1000 && typeof (test1) != "undefined") {_RecordType("<1525,1530,30>",(test1)); Inst12++; } } catch(e) {}
  passed1 = test1() === this;
try { if (Inst11 <= 1000 && typeof (passed1) != "undefined") {_RecordType("<1515,1522,30>",(passed1)); Inst11++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (test2) != "undefined") {_RecordType("<1555,1560,31>",(test2)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<1567,1576,31>",(undefined)); Inst15++; } } catch(e) {}
  passed2 = test2() === undefined;
try { if (Inst13 <= 1000 && typeof (passed2) != "undefined") {_RecordType("<1545,1552,31>",(passed2)); Inst13++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (test3) != "undefined") {_RecordType("<1590,1595,32>",(test3)); Inst17++; } } catch(e) {}
  passed3 = test3() === "OKAY";
try { if (Inst16 <= 1000 && typeof (passed3) != "undefined") {_RecordType("<1580,1587,32>",(passed3)); Inst16++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (test4) != "undefined") {_RecordType("<1622,1627,33>",(test4)); Inst19++; } } catch(e) {}
  passed4 = test4() === "OKAY";
try { if (Inst18 <= 1000 && typeof (passed4) != "undefined") {_RecordType("<1612,1619,33>",(passed4)); Inst18++; } } catch(e) {}
}

;
try { if (Inst20 <= 1000 && typeof (runTests) != "undefined") {_RecordType("<1647,1655,37>",(runTests)); Inst20++; } } catch(e) {}
runTests();
try { if (Inst21 <= 1000 && typeof (passed1) != "undefined") {_RecordType("<1659,1666,38>",(passed1)); Inst21++; } } catch(e) {}
passed1;
try { if (Inst22 <= 1000 && typeof (passed2) != "undefined") {_RecordType("<1668,1675,39>",(passed2)); Inst22++; } } catch(e) {}
passed2;
try { if (Inst23 <= 1000 && typeof (passed3) != "undefined") {_RecordType("<1677,1684,40>",(passed3)); Inst23++; } } catch(e) {}
passed3;
try { if (Inst24 <= 1000 && typeof (passed4) != "undefined") {_RecordType("<1686,1693,41>",(passed4)); Inst24++; } } catch(e) {}
passed4;

