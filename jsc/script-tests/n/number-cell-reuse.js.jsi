var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<0,11,1>",(console.log)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (console) != "undefined") {_RecordType("<0,7,1>",(console)); Inst1++; } } catch(e) {}
console.log("This test checks corner cases of the number cell reuse code. In particular, it checks for known cases where code generation for number cell reuse caused assertions to fail.");

try { if (Inst2 <= 1000 && typeof (leftConstantRightSimple) != "undefined") {_RecordType("<199,222,3>",(leftConstantRightSimple)); Inst2++; } } catch(e) {}
function leftConstantRightSimple(a) {
try { if (Inst3 <= 1000 && typeof (a) != "undefined") {_RecordType("<223,224,3>",(a)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (a) != "undefined") {_RecordType("<244,245,4>",(a)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (a) != "undefined") {_RecordType("<248,249,4>",(a)); Inst5++; } } catch(e) {}
  return 0.1 * (a * a);
}

try { if (Inst6 <= 1000 && typeof (leftConstantRightSimple) != "undefined") {_RecordType("<255,278,7>",(leftConstantRightSimple)); Inst6++; } } catch(e) {}
leftConstantRightSimple(2);

try { if (Inst7 <= 1000 && typeof (leftConstantRightComplex) != "undefined") {_RecordType("<293,317,9>",(leftConstantRightComplex)); Inst7++; } } catch(e) {}
function leftConstantRightComplex(a) {
try { if (Inst8 <= 1000 && typeof (a) != "undefined") {_RecordType("<318,319,9>",(a)); Inst8++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (a) != "undefined") {_RecordType("<339,340,10>",(a)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (a) != "undefined") {_RecordType("<343,344,10>",(a)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (a) != "undefined") {_RecordType("<347,348,10>",(a)); Inst11++; } } catch(e) {}
  return 0.1 * (a * a + a);
}

try { if (Inst12 <= 1000 && typeof (leftConstantRightComplex) != "undefined") {_RecordType("<354,378,13>",(leftConstantRightComplex)); Inst12++; } } catch(e) {}
leftConstantRightComplex(1);

try { if (Inst13 <= 1000 && typeof (leftSimpleRightConstant) != "undefined") {_RecordType("<393,416,15>",(leftSimpleRightConstant)); Inst13++; } } catch(e) {}
function leftSimpleRightConstant(a) {
try { if (Inst14 <= 1000 && typeof (a) != "undefined") {_RecordType("<417,418,15>",(a)); Inst14++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (a) != "undefined") {_RecordType("<431,432,16>",(a)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (a) != "undefined") {_RecordType("<435,436,16>",(a)); Inst16++; } } catch(e) {}
  return a * a * 0.1;
}

try { if (Inst17 <= 1000 && typeof (leftSimpleRightConstant) != "undefined") {_RecordType("<447,470,19>",(leftSimpleRightConstant)); Inst17++; } } catch(e) {}
leftSimpleRightConstant(2);

try { if (Inst18 <= 1000 && typeof (leftComplexRightConstant) != "undefined") {_RecordType("<485,509,21>",(leftComplexRightConstant)); Inst18++; } } catch(e) {}
function leftComplexRightConstant(a) {
try { if (Inst19 <= 1000 && typeof (a) != "undefined") {_RecordType("<510,511,21>",(a)); Inst19++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (a) != "undefined") {_RecordType("<525,526,22>",(a)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (a) != "undefined") {_RecordType("<529,530,22>",(a)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (a) != "undefined") {_RecordType("<533,534,22>",(a)); Inst22++; } } catch(e) {}
  return (a * a + a) * 0.1;
}

try { if (Inst23 <= 1000 && typeof (leftComplexRightConstant) != "undefined") {_RecordType("<546,570,25>",(leftComplexRightConstant)); Inst23++; } } catch(e) {}
leftComplexRightConstant(1);

try { if (Inst24 <= 1000 && typeof (leftThisRightSimple) != "undefined") {_RecordType("<585,604,27>",(leftThisRightSimple)); Inst24++; } } catch(e) {}
function leftThisRightSimple(a) {
try { if (Inst25 <= 1000 && typeof (a) != "undefined") {_RecordType("<605,606,27>",(a)); Inst25++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (a) != "undefined") {_RecordType("<627,628,28>",(a)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (a) != "undefined") {_RecordType("<631,632,28>",(a)); Inst27++; } } catch(e) {}
  return this * (a * a);
}

try { if (Inst28 <= 1000 && typeof (leftThisRightSimple) != "undefined") {_RecordType("<638,657,31>",(leftThisRightSimple)); Inst28++; } } catch(e) {}
leftThisRightSimple(2);
try { if (Inst29 <= 1000 && typeof (leftThisRightSimple.call) != "undefined") {_RecordType("<662,686,32>",(leftThisRightSimple.call)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (leftThisRightSimple) != "undefined") {_RecordType("<662,681,32>",(leftThisRightSimple)); Inst30++; } } catch(e) {}
leftThisRightSimple.call(2, 2);

try { if (Inst31 <= 1000 && typeof (leftThisRightComplex) != "undefined") {_RecordType("<704,724,34>",(leftThisRightComplex)); Inst31++; } } catch(e) {}
function leftThisRightComplex(a) {
try { if (Inst32 <= 1000 && typeof (a) != "undefined") {_RecordType("<725,726,34>",(a)); Inst32++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (a) != "undefined") {_RecordType("<747,748,35>",(a)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (a) != "undefined") {_RecordType("<751,752,35>",(a)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (a) != "undefined") {_RecordType("<755,756,35>",(a)); Inst35++; } } catch(e) {}
  return this * (a * a + a);
}

try { if (Inst36 <= 1000 && typeof (leftThisRightComplex) != "undefined") {_RecordType("<762,782,38>",(leftThisRightComplex)); Inst36++; } } catch(e) {}
leftThisRightComplex(2);
try { if (Inst37 <= 1000 && typeof (leftThisRightComplex.call) != "undefined") {_RecordType("<787,812,39>",(leftThisRightComplex.call)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (leftThisRightComplex) != "undefined") {_RecordType("<787,807,39>",(leftThisRightComplex)); Inst38++; } } catch(e) {}
leftThisRightComplex.call(2, 2);

try { if (Inst39 <= 1000 && typeof (leftSimpleRightThis) != "undefined") {_RecordType("<830,849,41>",(leftSimpleRightThis)); Inst39++; } } catch(e) {}
function leftSimpleRightThis(a) {
try { if (Inst40 <= 1000 && typeof (a) != "undefined") {_RecordType("<850,851,41>",(a)); Inst40++; } } catch(e) {}
try { if (Inst41 <= 1000 && typeof (a) != "undefined") {_RecordType("<864,865,42>",(a)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (a) != "undefined") {_RecordType("<868,869,42>",(a)); Inst42++; } } catch(e) {}
  return a * a * this;
}

try { if (Inst43 <= 1000 && typeof (leftSimpleRightThis) != "undefined") {_RecordType("<881,900,45>",(leftSimpleRightThis)); Inst43++; } } catch(e) {}
leftSimpleRightThis(2);
try { if (Inst44 <= 1000 && typeof (leftSimpleRightThis.call) != "undefined") {_RecordType("<905,929,46>",(leftSimpleRightThis.call)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (leftSimpleRightThis) != "undefined") {_RecordType("<905,924,46>",(leftSimpleRightThis)); Inst45++; } } catch(e) {}
leftSimpleRightThis.call(2, 2);

try { if (Inst46 <= 1000 && typeof (leftComplexRightThis) != "undefined") {_RecordType("<947,967,48>",(leftComplexRightThis)); Inst46++; } } catch(e) {}
function leftComplexRightThis(a) {
try { if (Inst47 <= 1000 && typeof (a) != "undefined") {_RecordType("<968,969,48>",(a)); Inst47++; } } catch(e) {}
try { if (Inst48 <= 1000 && typeof (a) != "undefined") {_RecordType("<983,984,49>",(a)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (a) != "undefined") {_RecordType("<987,988,49>",(a)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (a) != "undefined") {_RecordType("<991,992,49>",(a)); Inst50++; } } catch(e) {}
  return (a * a + a) * this;
}

try { if (Inst51 <= 1000 && typeof (leftComplexRightThis) != "undefined") {_RecordType("<1005,1025,52>",(leftComplexRightThis)); Inst51++; } } catch(e) {}
leftComplexRightThis(2);
try { if (Inst52 <= 1000 && typeof (leftComplexRightThis.call) != "undefined") {_RecordType("<1030,1055,53>",(leftComplexRightThis.call)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (leftComplexRightThis) != "undefined") {_RecordType("<1030,1050,53>",(leftComplexRightThis)); Inst53++; } } catch(e) {}
leftComplexRightThis.call(2, 2);

