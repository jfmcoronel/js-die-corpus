var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<0,11,1>",(console.log)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (console) != "undefined") {_RecordType("<0,7,1>",(console)); Inst1++; } } catch(e) {}
console.log("Regression test for https://webkit.org/b/139418.");

try { if (Inst2 <= 1000 && typeof (InnerObjectNoSetter) != "undefined") {_RecordType("<75,94,3>",(InnerObjectNoSetter)); Inst2++; } } catch(e) {}
function InnerObjectNoSetter() {
  this._enabled = false;
try { if (Inst3 <= 1000 && typeof (this._enabled) != "undefined") {_RecordType("<101,114,4>",(this._enabled)); Inst3++; } } catch(e) {}
}

try { if (Inst6 <= 1000 && typeof (enabled) != "undefined") {_RecordType("<167,174,8>",(enabled)); Inst6++; } } catch(e) {}
InnerObjectNoSetter.prototype = {
  get enabled() {
try { if (Inst7 <= 1000 && typeof (this._enabled) != "undefined") {_RecordType("<190,203,9>",(this._enabled)); Inst7++; } } catch(e) {}
    return this._enabled;
  }

};
try { if (Inst4 <= 1000 && typeof (InnerObjectNoSetter.prototype) != "undefined") {_RecordType("<127,156,7>",(InnerObjectNoSetter.prototype)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (InnerObjectNoSetter) != "undefined") {_RecordType("<127,146,7>",(InnerObjectNoSetter)); Inst5++; } } catch(e) {}

try { if (Inst8 <= 1000 && typeof (StrictOuterObject) != "undefined") {_RecordType("<223,240,14>",(StrictOuterObject)); Inst8++; } } catch(e) {}
function StrictOuterObject(inner) {
try { if (Inst9 <= 1000 && typeof (inner) != "undefined") {_RecordType("<241,246,14>",(inner)); Inst9++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (inner) != "undefined") {_RecordType("<272,277,15>",(inner)); Inst11++; } } catch(e) {}
  this._innerObject = inner;
try { if (Inst10 <= 1000 && typeof (this._innerObject) != "undefined") {_RecordType("<252,269,15>",(this._innerObject)); Inst10++; } } catch(e) {}
}

try { if (Inst14 <= 1000 && typeof (enabled) != "undefined") {_RecordType("<320,327,19>",(enabled)); Inst14++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (enabled) != "undefined") {_RecordType("<401,408,25>",(enabled)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (x) != "undefined") {_RecordType("<409,410,25>",(x)); Inst18++; } } catch(e) {}
StrictOuterObject.prototype = {
  get enabled() {
    "use strict";

try { if (Inst15 <= 1000 && typeof (this._innerObject.enabled) != "undefined") {_RecordType("<362,387,22>",(this._innerObject.enabled)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (this._innerObject) != "undefined") {_RecordType("<362,379,22>",(this._innerObject)); Inst16++; } } catch(e) {}
    return this._innerObject.enabled;
  },

  set enabled(x) {
    "use strict";

try { if (Inst21 <= 1000 && typeof (x) != "undefined") {_RecordType("<465,466,28>",(x)); Inst21++; } } catch(e) {}
    this._innerObject.enabled = x;
try { if (Inst19 <= 1000 && typeof (this._innerObject.enabled) != "undefined") {_RecordType("<437,462,28>",(this._innerObject.enabled)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (this._innerObject) != "undefined") {_RecordType("<437,454,28>",(this._innerObject)); Inst20++; } } catch(e) {}
  }

};
try { if (Inst12 <= 1000 && typeof (StrictOuterObject.prototype) != "undefined") {_RecordType("<282,309,18>",(StrictOuterObject.prototype)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (StrictOuterObject) != "undefined") {_RecordType("<282,299,18>",(StrictOuterObject)); Inst13++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (InnerObjectNoSetter) != "undefined") {_RecordType("<500,519,32>",(InnerObjectNoSetter)); Inst23++; } } catch(e) {}
var innerNoSetter = new InnerObjectNoSetter();
try { if (Inst22 <= 1000 && typeof (innerNoSetter) != "undefined") {_RecordType("<480,493,32>",(innerNoSetter)); Inst22++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (StrictOuterObject) != "undefined") {_RecordType("<558,575,33>",(StrictOuterObject)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (innerNoSetter) != "undefined") {_RecordType("<576,589,33>",(innerNoSetter)); Inst26++; } } catch(e) {}
var strictOuterNoInnerSetter = new StrictOuterObject(innerNoSetter);
try { if (Inst24 <= 1000 && typeof (strictOuterNoInnerSetter) != "undefined") {_RecordType("<527,551,33>",(strictOuterNoInnerSetter)); Inst24++; } } catch(e) {}

for (var i = 0; i < 1000; ++i) {
try { if (Inst27 <= 1000 && typeof (i) != "undefined") {_RecordType("<602,603,35>",(i)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (i) != "undefined") {_RecordType("<609,610,35>",(i)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (i) != "undefined") {_RecordType("<621,622,35>",(i)); Inst29++; } } catch(e) {}
  var noExceptionWithMissingSetter = "Missing setter called with strict mode should throw exception and didn't!";
try { if (Inst30 <= 1000 && typeof (noExceptionWithMissingSetter) != "undefined") {_RecordType("<632,660,36>",(noExceptionWithMissingSetter)); Inst30++; } } catch(e) {}

try { if (Inst34 <= 1000 && typeof (e) != "undefined") {_RecordType("<845,846,41>",(e)); Inst34++; } } catch(e) {}
  try {
    strictOuterNoInnerSetter.enabled = true;
try { if (Inst31 <= 1000 && typeof (strictOuterNoInnerSetter.enabled) != "undefined") {_RecordType("<753,785,39>",(strictOuterNoInnerSetter.enabled)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (strictOuterNoInnerSetter) != "undefined") {_RecordType("<753,777,39>",(strictOuterNoInnerSetter)); Inst32++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (noExceptionWithMissingSetter) != "undefined") {_RecordType("<804,832,40>",(noExceptionWithMissingSetter)); Inst33++; } } catch(e) {}
    throw noExceptionWithMissingSetter;
  } catch (e) {
try { if (Inst35 <= 1000 && typeof (e) != "undefined") {_RecordType("<858,859,42>",(e)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<871,880,42>",(TypeError)); Inst36++; } } catch(e) {}
    if (e instanceof TypeError) {
      ; // This is the expected exception
    } else {
try { if (Inst37 <= 1000 && typeof (e) != "undefined") {_RecordType("<951,952,45>",(e)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (String) != "undefined") {_RecordType("<964,970,45>",(String)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (e) != "undefined") {_RecordType("<974,975,45>",(e)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (noExceptionWithMissingSetter) != "undefined") {_RecordType("<979,1007,45>",(noExceptionWithMissingSetter)); Inst40++; } } catch(e) {}
      if (!(e instanceof String && e == noExceptionWithMissingSetter)) {
try { if (Inst41 <= 1000 && typeof (e) != "undefined") {_RecordType("<1026,1027,46>",(e)); Inst41++; } } catch(e) {}
        throw e; // rethrow "missing exception" exception
      } else {
try { if (Inst42 <= 1000 && typeof (e) != "undefined") {_RecordType("<1166,1167,48>",(e)); Inst42++; } } catch(e) {}
        throw "Missing setter called with strict mode threw wrong exception: " + e;
      }
    }
  }

try { if (Inst43 <= 1000 && typeof (strictOuterNoInnerSetter.enabled) != "undefined") {_RecordType("<1194,1226,53>",(strictOuterNoInnerSetter.enabled)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (strictOuterNoInnerSetter) != "undefined") {_RecordType("<1194,1218,53>",(strictOuterNoInnerSetter)); Inst44++; } } catch(e) {}
  if (strictOuterNoInnerSetter.enabled) {
    throw "Setter unexpectedly modified value";
  }
}

