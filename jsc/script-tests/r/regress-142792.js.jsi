var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<0,11,1>",(console.log)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (console) != "undefined") {_RecordType("<0,7,1>",(console)); Inst1++; } } catch(e) {}
console.log("Verify that objects with numeric named properties don't set length like an array.");
var numOfIterations = 10000;
try { if (Inst2 <= 1000 && typeof (numOfIterations) != "undefined") {_RecordType("<102,117,2>",(numOfIterations)); Inst2++; } } catch(e) {}
var count = 0;
try { if (Inst3 <= 1000 && typeof (count) != "undefined") {_RecordType("<131,136,3>",(count)); Inst3++; } } catch(e) {}
var obj = {
  1: 'foo',
  8: 'bar',
  50: 'baz'
};
try { if (Inst4 <= 1000 && typeof (obj) != "undefined") {_RecordType("<146,149,4>",(obj)); Inst4++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (Object.keys(obj).length) != "undefined") {_RecordType("<213,236,9>",(Object.keys(obj).length)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Object.keys) != "undefined") {_RecordType("<213,224,9>",(Object.keys)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Object) != "undefined") {_RecordType("<213,219,9>",(Object)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (obj) != "undefined") {_RecordType("<225,228,9>",(obj)); Inst9++; } } catch(e) {}
var expectedCount = Object.keys(obj).length;
try { if (Inst5 <= 1000 && typeof (expectedCount) != "undefined") {_RecordType("<197,210,9>",(expectedCount)); Inst5++; } } catch(e) {}

try { if (Inst10 <= 1000 && typeof (isArrayLike) != "undefined") {_RecordType("<248,259,11>",(isArrayLike)); Inst10++; } } catch(e) {}
function isArrayLike(collection) {
try { if (Inst11 <= 1000 && typeof (collection) != "undefined") {_RecordType("<260,270,11>",(collection)); Inst11++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (collection) != "undefined") {_RecordType("<289,299,12>",(collection)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (collection.length) != "undefined") {_RecordType("<303,320,12>",(collection.length)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (collection) != "undefined") {_RecordType("<303,313,12>",(collection)); Inst15++; } } catch(e) {}
  var length = collection && collection.length;
try { if (Inst12 <= 1000 && typeof (length) != "undefined") {_RecordType("<280,286,12>",(length)); Inst12++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (length) != "undefined") {_RecordType("<338,344,13>",(length)); Inst16++; } } catch(e) {}
  return typeof length == 'number';
}

try { if (Inst17 <= 1000 && typeof (filter) != "undefined") {_RecordType("<370,376,16>",(filter)); Inst17++; } } catch(e) {}
function filter(obj, callback, context) {
try { if (Inst18 <= 1000 && typeof (obj) != "undefined") {_RecordType("<377,380,16>",(obj)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (callback) != "undefined") {_RecordType("<382,390,16>",(callback)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (context) != "undefined") {_RecordType("<392,399,16>",(context)); Inst20++; } } catch(e) {}
  var results = [];
try { if (Inst21 <= 1000 && typeof (results) != "undefined") {_RecordType("<409,416,17>",(results)); Inst21++; } } catch(e) {}
  var i, length;
try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<429,430,18>",(i)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (length) != "undefined") {_RecordType("<432,438,18>",(length)); Inst23++; } } catch(e) {}

try { if (Inst24 <= 1000 && typeof (isArrayLike) != "undefined") {_RecordType("<447,458,20>",(isArrayLike)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (obj) != "undefined") {_RecordType("<459,462,20>",(obj)); Inst25++; } } catch(e) {}
  if (isArrayLike(obj)) {
    for (i = 0, length = obj.length; i < length; i++) {
try { if (Inst26 <= 1000 && typeof (i) != "undefined") {_RecordType("<476,477,21>",(i)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (length) != "undefined") {_RecordType("<483,489,21>",(length)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (obj.length) != "undefined") {_RecordType("<492,502,21>",(obj.length)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (obj) != "undefined") {_RecordType("<492,495,21>",(obj)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (i) != "undefined") {_RecordType("<504,505,21>",(i)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (length) != "undefined") {_RecordType("<508,514,21>",(length)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (i) != "undefined") {_RecordType("<516,517,21>",(i)); Inst32++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof (obj[i]) != "undefined") {_RecordType("<541,547,22>",(obj[i])); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (obj) != "undefined") {_RecordType("<541,544,22>",(obj)); Inst35++; } } catch(e) {}
      var value = obj[i];
try { if (Inst33 <= 1000 && typeof (value) != "undefined") {_RecordType("<533,538,22>",(value)); Inst33++; } } catch(e) {}

try { if (Inst36 <= 1000 && typeof (callback) != "undefined") {_RecordType("<560,568,24>",(callback)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (value) != "undefined") {_RecordType("<569,574,24>",(value)); Inst37++; } } catch(e) {}
      if (callback(value)) {
try { if (Inst38 <= 1000 && typeof (results.push) != "undefined") {_RecordType("<587,599,25>",(results.push)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (results) != "undefined") {_RecordType("<587,594,25>",(results)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (value) != "undefined") {_RecordType("<600,605,25>",(value)); Inst40++; } } catch(e) {}
        results.push(value);
      }
    }
  } else {
    for (var key in obj) {
try { if (Inst41 <= 1000 && typeof (key) != "undefined") {_RecordType("<646,649,29>",(key)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (obj) != "undefined") {_RecordType("<653,656,29>",(obj)); Inst42++; } } catch(e) {}
try { if (Inst44 <= 1000 && typeof (obj[key]) != "undefined") {_RecordType("<678,686,30>",(obj[key])); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (obj) != "undefined") {_RecordType("<678,681,30>",(obj)); Inst45++; } } catch(e) {}
      var value = obj[key];
try { if (Inst43 <= 1000 && typeof (value) != "undefined") {_RecordType("<670,675,30>",(value)); Inst43++; } } catch(e) {}

try { if (Inst46 <= 1000 && typeof (callback) != "undefined") {_RecordType("<699,707,32>",(callback)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (value) != "undefined") {_RecordType("<708,713,32>",(value)); Inst47++; } } catch(e) {}
      if (callback(value)) {
try { if (Inst48 <= 1000 && typeof (results.push) != "undefined") {_RecordType("<726,738,33>",(results.push)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (results) != "undefined") {_RecordType("<726,733,33>",(results)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (value) != "undefined") {_RecordType("<739,744,33>",(value)); Inst50++; } } catch(e) {}
        results.push(value);
      }
    }
  }

try { if (Inst51 <= 1000 && typeof (results) != "undefined") {_RecordType("<775,782,38>",(results)); Inst51++; } } catch(e) {}
  return results;
}

for (var i = 0; i < numOfIterations; i++) {
try { if (Inst52 <= 1000 && typeof (i) != "undefined") {_RecordType("<796,797,41>",(i)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (i) != "undefined") {_RecordType("<803,804,41>",(i)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (numOfIterations) != "undefined") {_RecordType("<807,822,41>",(numOfIterations)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (i) != "undefined") {_RecordType("<824,825,41>",(i)); Inst55++; } } catch(e) {}
try { if (Inst56 <= 1000 && typeof (filter) != "undefined") {_RecordType("<833,839,42>",(filter)); Inst56++; } } catch(e) {}
  filter([], function () {
    return true;
  });
}

try { if (Inst57 <= 1000 && typeof (filter) != "undefined") {_RecordType("<884,890,47>",(filter)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (obj) != "undefined") {_RecordType("<891,894,47>",(obj)); Inst58++; } } catch(e) {}
filter(obj, function () {
try { if (Inst59 <= 1000 && typeof (count) != "undefined") {_RecordType("<912,917,48>",(count)); Inst59++; } } catch(e) {}
  count++;
  return true;
});

try { if (Inst60 <= 1000 && typeof (count) != "undefined") {_RecordType("<945,950,52>",(count)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (expectedCount) != "undefined") {_RecordType("<955,968,52>",(expectedCount)); Inst61++; } } catch(e) {}
if (count !== expectedCount) {
try { if (Inst62 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<974,985,53>",(console.log)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (console) != "undefined") {_RecordType("<974,981,53>",(console)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (count) != "undefined") {_RecordType("<1026,1031,53>",(count)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (expectedCount) != "undefined") {_RecordType("<1051,1064,53>",(expectedCount)); Inst65++; } } catch(e) {}
  console.log("Incorrect number of iterated keys: " + count + ", expected: " + expectedCount);
} else {
try { if (Inst66 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<1078,1089,55>",(console.log)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (console) != "undefined") {_RecordType("<1078,1085,55>",(console)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (count) != "undefined") {_RecordType("<1128,1133,55>",(count)); Inst68++; } } catch(e) {}
  console.log("Correct number of iterated keys: " + count);
}

