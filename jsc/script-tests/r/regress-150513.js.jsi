var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<0,11,1>",(console.log)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (console) != "undefined") {_RecordType("<0,7,1>",(console)); Inst1++; } } catch(e) {}
console.log("Regression test for https://webkit.org/b/150513."); // This test verifies that we can properly handle calling a virtual JavaScript
// function that fails during CodeBlock generation.

var functions = [];
try { if (Inst2 <= 1000 && typeof (functions) != "undefined") {_RecordType("<201,210,4>",(functions)); Inst2++; } } catch(e) {}

try { if (Inst3 <= 1000 && typeof (init) != "undefined") {_RecordType("<227,231,6>",(init)); Inst3++; } } catch(e) {}
function init() {
try { if (Inst4 <= 1000 && typeof (functions.push) != "undefined") {_RecordType("<238,252,7>",(functions.push)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (functions) != "undefined") {_RecordType("<238,247,7>",(functions)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Function) != "undefined") {_RecordType("<257,265,7>",(Function)); Inst6++; } } catch(e) {}
  functions.push(new Function("a", "return a"));
try { if (Inst7 <= 1000 && typeof (functions.push) != "undefined") {_RecordType("<287,301,8>",(functions.push)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (functions) != "undefined") {_RecordType("<287,296,8>",(functions)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Function) != "undefined") {_RecordType("<306,314,8>",(Function)); Inst9++; } } catch(e) {}
  functions.push(new Function("a", "return a"));
try { if (Inst10 <= 1000 && typeof (functions.push) != "undefined") {_RecordType("<336,350,9>",(functions.push)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (functions) != "undefined") {_RecordType("<336,345,9>",(functions)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Function) != "undefined") {_RecordType("<355,363,9>",(Function)); Inst12++; } } catch(e) {}
  functions.push(new Function("a", "return a"));
}

try { if (Inst13 <= 1000 && typeof (test) != "undefined") {_RecordType("<395,399,12>",(test)); Inst13++; } } catch(e) {}
function test() {
  for (var i = 0; i < 100000; i++) {
try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<415,416,13>",(i)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<422,423,13>",(i)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<434,435,13>",(i)); Inst16++; } } catch(e) {}
    var f;
try { if (Inst17 <= 1000 && typeof (f) != "undefined") {_RecordType("<449,450,14>",(f)); Inst17++; } } catch(e) {}

try { if (Inst18 <= 1000 && typeof (i) != "undefined") {_RecordType("<461,462,16>",(i)); Inst18++; } } catch(e) {}
    if (i % 1000 == 999) {
      // testRunner.failNextNewCodeBlock();
try { if (Inst20 <= 1000 && typeof (functions[2]) != "undefined") {_RecordType("<534,546,18>",(functions[2])); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (functions) != "undefined") {_RecordType("<534,543,18>",(functions)); Inst21++; } } catch(e) {}
      f = functions[2];
try { if (Inst19 <= 1000 && typeof (f) != "undefined") {_RecordType("<530,531,18>",(f)); Inst19++; } } catch(e) {}
    } else {
try { if (Inst23 <= 1000 && typeof (functions[i % 2]) != "undefined") {_RecordType("<571,587,20>",(functions[i % 2])); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (functions) != "undefined") {_RecordType("<571,580,20>",(functions)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<581,582,20>",(i)); Inst25++; } } catch(e) {}
      f = functions[i % 2];
try { if (Inst22 <= 1000 && typeof (f) != "undefined") {_RecordType("<567,568,20>",(f)); Inst22++; } } catch(e) {}
    }

try { if (Inst32 <= 1000 && typeof (e) != "undefined") {_RecordType("<742,743,29>",(e)); Inst32++; } } catch(e) {}
    try {
try { if (Inst27 <= 1000 && typeof (f) != "undefined") {_RecordType("<625,626,24>",(f)); Inst27++; } } catch(e) {}
      var result = f(1);
try { if (Inst26 <= 1000 && typeof (result) != "undefined") {_RecordType("<616,622,24>",(result)); Inst26++; } } catch(e) {}

try { if (Inst28 <= 1000 && typeof (result) != "undefined") {_RecordType("<642,648,26>",(result)); Inst28++; } } catch(e) {}
      if (result != 1) {
try { if (Inst29 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<665,676,27>",(console.log)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (console) != "undefined") {_RecordType("<665,672,27>",(console)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (result) != "undefined") {_RecordType("<712,718,27>",(result)); Inst31++; } } catch(e) {}
        console.log("Wrong result, expected 1, got " + result);
      }
    } catch (e) {
      ;
    }
  }
}

try { if (Inst33 <= 1000 && typeof (init) != "undefined") {_RecordType("<768,772,35>",(init)); Inst33++; } } catch(e) {}
init();
try { if (Inst34 <= 1000 && typeof (test) != "undefined") {_RecordType("<776,780,36>",(test)); Inst34++; } } catch(e) {}
test();
try { if (Inst35 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<784,795,37>",(console.log)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (console) != "undefined") {_RecordType("<784,791,37>",(console)); Inst36++; } } catch(e) {}
console.log("Didn't crash when calling a virtual JavaScript function that doesn't have a CodeBlock.");

