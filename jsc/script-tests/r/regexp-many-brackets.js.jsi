var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<0,11,1>",(console.log)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (console) != "undefined") {_RecordType("<0,7,1>",(console)); Inst1++; } } catch(e) {}
console.log('Test regular expression processing with many capturing brackets (200).');
var count = 200;
try { if (Inst2 <= 1000 && typeof (count) != "undefined") {_RecordType("<91,96,2>",(count)); Inst2++; } } catch(e) {}
var regexp = "";
try { if (Inst3 <= 1000 && typeof (regexp) != "undefined") {_RecordType("<108,114,3>",(regexp)); Inst3++; } } catch(e) {}

for (var i = 0; i < count; ++i) {
try { if (Inst4 <= 1000 && typeof (i) != "undefined") {_RecordType("<131,132,5>",(i)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (i) != "undefined") {_RecordType("<138,139,5>",(i)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (count) != "undefined") {_RecordType("<142,147,5>",(count)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<151,152,5>",(i)); Inst7++; } } catch(e) {}
  regexp += "(";
try { if (Inst8 <= 1000 && typeof (regexp) != "undefined") {_RecordType("<158,164,6>",(regexp)); Inst8++; } } catch(e) {}
}

regexp += "hello";
try { if (Inst9 <= 1000 && typeof (regexp) != "undefined") {_RecordType("<176,182,9>",(regexp)); Inst9++; } } catch(e) {}

for (var i = 0; i < count; ++i) {
try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<205,206,11>",(i)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<212,213,11>",(i)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (count) != "undefined") {_RecordType("<216,221,11>",(count)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<225,226,11>",(i)); Inst13++; } } catch(e) {}
  regexp += ")";
try { if (Inst14 <= 1000 && typeof (regexp) != "undefined") {_RecordType("<232,238,12>",(regexp)); Inst14++; } } catch(e) {}
}

try { if (Inst16 <= 1000 && typeof (Array) != "undefined") {_RecordType("<276,281,15>",(Array)); Inst16++; } } catch(e) {}
var manyHellosArray = new Array();
try { if (Inst15 <= 1000 && typeof (manyHellosArray) != "undefined") {_RecordType("<254,269,15>",(manyHellosArray)); Inst15++; } } catch(e) {}

for (var i = 0; i <= count; ++i) {
try { if (Inst17 <= 1000 && typeof (i) != "undefined") {_RecordType("<295,296,17>",(i)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (i) != "undefined") {_RecordType("<302,303,17>",(i)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (count) != "undefined") {_RecordType("<307,312,17>",(count)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<316,317,17>",(i)); Inst20++; } } catch(e) {}
  manyHellosArray[i] = "hello";
try { if (Inst21 <= 1000 && typeof (manyHellosArray[i]) != "undefined") {_RecordType("<323,341,18>",(manyHellosArray[i])); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (manyHellosArray) != "undefined") {_RecordType("<323,338,18>",(manyHellosArray)); Inst22++; } } catch(e) {}
}

try { if (Inst24 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<385,391,21>",(RegExp)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (regexp) != "undefined") {_RecordType("<392,398,21>",(regexp)); Inst25++; } } catch(e) {}
var manyBracketsRegExp = new RegExp(regexp);
try { if (Inst23 <= 1000 && typeof (manyBracketsRegExp) != "undefined") {_RecordType("<360,378,21>",(manyBracketsRegExp)); Inst23++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof ('hello'.match) != "undefined") {_RecordType("<401,414,22>",('hello'.match)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (manyBracketsRegExp) != "undefined") {_RecordType("<415,433,22>",(manyBracketsRegExp)); Inst27++; } } catch(e) {}
'hello'.match(manyBracketsRegExp);
try { if (Inst28 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<436,447,23>",(console.log)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (console) != "undefined") {_RecordType("<436,443,23>",(console)); Inst29++; } } catch(e) {}
console.log('');

