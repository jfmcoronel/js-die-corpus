var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<0,11,1>",(console.log)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (console) != "undefined") {_RecordType("<0,7,1>",(console)); Inst1++; } } catch(e) {}
console.log('Tests a regular expression that hits the recursion limit.');
var complexPattern = "";
try { if (Inst2 <= 1000 && typeof (complexPattern) != "undefined") {_RecordType("<78,92,2>",(complexPattern)); Inst2++; } } catch(e) {}

for (var i = 0; i < 18; ++i) {
try { if (Inst3 <= 1000 && typeof (i) != "undefined") {_RecordType("<109,110,4>",(i)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (i) != "undefined") {_RecordType("<116,117,4>",(i)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (i) != "undefined") {_RecordType("<126,127,4>",(i)); Inst5++; } } catch(e) {}
  complexPattern += "a?";
try { if (Inst6 <= 1000 && typeof (complexPattern) != "undefined") {_RecordType("<133,147,5>",(complexPattern)); Inst6++; } } catch(e) {}
}

for (var i = 0; i < 18; ++i) {
try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<169,170,8>",(i)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<176,177,8>",(i)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<186,187,8>",(i)); Inst9++; } } catch(e) {}
  complexPattern += "a";
try { if (Inst10 <= 1000 && typeof (complexPattern) != "undefined") {_RecordType("<193,207,9>",(complexPattern)); Inst10++; } } catch(e) {}
}

try { if (Inst12 <= 1000 && typeof (complexPattern) != "undefined") {_RecordType("<244,258,12>",(complexPattern)); Inst12++; } } catch(e) {}
complexPattern = "\1(" + complexPattern + ")";
try { if (Inst11 <= 1000 && typeof (complexPattern) != "undefined") {_RecordType("<219,233,12>",(complexPattern)); Inst11++; } } catch(e) {}
var complexInput = "";
try { if (Inst13 <= 1000 && typeof (complexInput) != "undefined") {_RecordType("<270,282,13>",(complexInput)); Inst13++; } } catch(e) {}

for (var i = 0; i < 18; ++i) {
try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<299,300,15>",(i)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<306,307,15>",(i)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<316,317,15>",(i)); Inst16++; } } catch(e) {}
  complexInput += "a";
try { if (Inst17 <= 1000 && typeof (complexInput) != "undefined") {_RecordType("<323,335,16>",(complexInput)); Inst17++; } } catch(e) {}
}

try { if (Inst18 <= 1000 && typeof (new RegExp(complexPattern + complexPattern).exec) != "undefined") {_RecordType("<347,395,19>",(new RegExp(complexPattern + complexPattern).exec)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<351,357,19>",(RegExp)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (complexPattern) != "undefined") {_RecordType("<358,372,19>",(complexPattern)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (complexPattern) != "undefined") {_RecordType("<375,389,19>",(complexPattern)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (complexInput) != "undefined") {_RecordType("<396,408,19>",(complexInput)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (complexInput) != "undefined") {_RecordType("<411,423,19>",(complexInput)); Inst23++; } } catch(e) {}
new RegExp(complexPattern + complexPattern).exec(complexInput + complexInput);

