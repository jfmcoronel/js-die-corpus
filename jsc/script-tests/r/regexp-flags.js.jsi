var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<0,11,1>",(console.log)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (console) != "undefined") {_RecordType("<0,7,1>",(console)); Inst1++; } } catch(e) {}
console.log('Test RegExp#flags accessor');
try { if (Inst2 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<43,54,2>",(console.log)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (console) != "undefined") {_RecordType("<43,50,2>",(console)); Inst3++; } } catch(e) {}
console.log("property descriptor");
try { if (Inst5 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<96,127,3>",(Object.getOwnPropertyDescriptor)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Object) != "undefined") {_RecordType("<96,102,3>",(Object)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (RegExp.prototype) != "undefined") {_RecordType("<128,144,3>",(RegExp.prototype)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<128,134,3>",(RegExp)); Inst8++; } } catch(e) {}
var descriptor = Object.getOwnPropertyDescriptor(RegExp.prototype, 'flags');
try { if (Inst4 <= 1000 && typeof (descriptor) != "undefined") {_RecordType("<83,93,3>",(descriptor)); Inst4++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (descriptor.configurable) != "undefined") {_RecordType("<156,179,4>",(descriptor.configurable)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (descriptor) != "undefined") {_RecordType("<156,166,4>",(descriptor)); Inst10++; } } catch(e) {}
descriptor.configurable;
try { if (Inst11 <= 1000 && typeof (descriptor.enumerable) != "undefined") {_RecordType("<181,202,5>",(descriptor.enumerable)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (descriptor) != "undefined") {_RecordType("<181,191,5>",(descriptor)); Inst12++; } } catch(e) {}
descriptor.enumerable;
try { if (Inst13 <= 1000 && typeof (descriptor.get) != "undefined") {_RecordType("<211,225,6>",(descriptor.get)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (descriptor) != "undefined") {_RecordType("<211,221,6>",(descriptor)); Inst14++; } } catch(e) {}
typeof descriptor.get;
try { if (Inst15 <= 1000 && typeof (descriptor.set) != "undefined") {_RecordType("<227,241,7>",(descriptor.set)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (descriptor) != "undefined") {_RecordType("<227,237,7>",(descriptor)); Inst16++; } } catch(e) {}
descriptor.set;
try { if (Inst18 <= 1000 && typeof (descriptor.get) != "undefined") {_RecordType("<255,269,8>",(descriptor.get)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (descriptor) != "undefined") {_RecordType("<255,265,8>",(descriptor)); Inst19++; } } catch(e) {}
var flags = descriptor.get;
try { if (Inst17 <= 1000 && typeof (flags) != "undefined") {_RecordType("<247,252,8>",(flags)); Inst17++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (/a/g.flags) != "undefined") {_RecordType("<271,281,9>",(/a/g.flags)); Inst20++; } } catch(e) {}
/a/g.flags;
try { if (Inst21 <= 1000 && typeof (/a/.flags) != "undefined") {_RecordType("<283,292,10>",(/a/.flags)); Inst21++; } } catch(e) {}
/a/.flags;
try { if (Inst22 <= 1000 && typeof (/a/gmi.flags) != "undefined") {_RecordType("<294,306,11>",(/a/gmi.flags)); Inst22++; } } catch(e) {}
/a/gmi.flags;
try { if (Inst23 <= 1000 && typeof (new RegExp('a', 'gmi').flags) != "undefined") {_RecordType("<308,336,12>",(new RegExp('a', 'gmi').flags)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<312,318,12>",(RegExp)); Inst24++; } } catch(e) {}
new RegExp('a', 'gmi').flags;
try { if (Inst25 <= 1000 && typeof (flags.call) != "undefined") {_RecordType("<338,348,13>",(flags.call)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (flags) != "undefined") {_RecordType("<338,343,13>",(flags)); Inst26++; } } catch(e) {}
flags.call(/a/ig);
try { if (Inst27 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<357,368,14>",(console.log)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (console) != "undefined") {_RecordType("<357,364,14>",(console)); Inst28++; } } catch(e) {}
console.log("non-object receivers");

try { if (Inst32 <= 1000 && typeof (e) != "undefined") {_RecordType("<435,436,18>",(e)); Inst32++; } } catch(e) {}
try {
try { if (Inst29 <= 1000 && typeof (flags.call) != "undefined") {_RecordType("<403,413,17>",(flags.call)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (flags) != "undefined") {_RecordType("<403,408,17>",(flags)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<414,423,17>",(undefined)); Inst31++; } } catch(e) {}
  flags.call(undefined);
} catch (e) {
  ;
}

try { if (Inst35 <= 1000 && typeof (e) != "undefined") {_RecordType("<482,483,24>",(e)); Inst35++; } } catch(e) {}
try {
try { if (Inst33 <= 1000 && typeof (flags.call) != "undefined") {_RecordType("<455,465,23>",(flags.call)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (flags) != "undefined") {_RecordType("<455,460,23>",(flags)); Inst34++; } } catch(e) {}
  flags.call(null);
} catch (e) {
  ;
}

try { if (Inst38 <= 1000 && typeof (e) != "undefined") {_RecordType("<530,531,30>",(e)); Inst38++; } } catch(e) {}
try {
try { if (Inst36 <= 1000 && typeof (flags.call) != "undefined") {_RecordType("<502,512,29>",(flags.call)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (flags) != "undefined") {_RecordType("<502,507,29>",(flags)); Inst37++; } } catch(e) {}
  flags.call(false);
} catch (e) {
  ;
}

try { if (Inst41 <= 1000 && typeof (e) != "undefined") {_RecordType("<577,578,36>",(e)); Inst41++; } } catch(e) {}
try {
try { if (Inst39 <= 1000 && typeof (flags.call) != "undefined") {_RecordType("<550,560,35>",(flags.call)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (flags) != "undefined") {_RecordType("<550,555,35>",(flags)); Inst40++; } } catch(e) {}
  flags.call(true);
} catch (e) {
  ;
}

try { if (Inst42 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<589,600,40>",(console.log)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (console) != "undefined") {_RecordType("<589,596,40>",(console)); Inst43++; } } catch(e) {}
console.log("non-regex objects");
try { if (Inst44 <= 1000 && typeof (flags.call) != "undefined") {_RecordType("<623,633,41>",(flags.call)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (flags) != "undefined") {_RecordType("<623,628,41>",(flags)); Inst45++; } } catch(e) {}
flags.call({});
try { if (Inst46 <= 1000 && typeof (flags.call) != "undefined") {_RecordType("<639,649,42>",(flags.call)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (flags) != "undefined") {_RecordType("<639,644,42>",(flags)); Inst47++; } } catch(e) {}
flags.call({
  global: true,
  multiline: true,
  ignoreCase: true
});
try { if (Inst48 <= 1000 && typeof (flags.call) != "undefined") {_RecordType("<710,720,47>",(flags.call)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (flags) != "undefined") {_RecordType("<710,715,47>",(flags)); Inst49++; } } catch(e) {}
flags.call({
  global: 1,
  multiline: 0,
  ignoreCase: 2
}); // inherited properties count

try { if (Inst50 <= 1000 && typeof (flags.call) != "undefined") {_RecordType("<803,813,53>",(flags.call)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (flags) != "undefined") {_RecordType("<803,808,53>",(flags)); Inst51++; } } catch(e) {}
flags.call({
  __proto__: {
    multiline: true
  }
});
try { if (Inst52 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<859,870,58>",(console.log)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (console) != "undefined") {_RecordType("<859,866,58>",(console)); Inst53++; } } catch(e) {}
console.log("unicode flag");
try { if (Inst54 <= 1000 && typeof (/a/uimg.flags) != "undefined") {_RecordType("<888,901,59>",(/a/uimg.flags)); Inst54++; } } catch(e) {}
/a/uimg.flags;
try { if (Inst55 <= 1000 && typeof (new RegExp('a', 'uimg').flags) != "undefined") {_RecordType("<903,932,60>",(new RegExp('a', 'uimg').flags)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<907,913,60>",(RegExp)); Inst56++; } } catch(e) {}
new RegExp('a', 'uimg').flags;
try { if (Inst57 <= 1000 && typeof (flags.call) != "undefined") {_RecordType("<934,944,61>",(flags.call)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (flags) != "undefined") {_RecordType("<934,939,61>",(flags)); Inst58++; } } catch(e) {}
flags.call({
  global: true,
  multiline: true,
  ignoreCase: true,
  unicode: true
});
try { if (Inst59 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<1022,1033,67>",(console.log)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (console) != "undefined") {_RecordType("<1022,1029,67>",(console)); Inst60++; } } catch(e) {}
console.log("sticky flag");
try { if (Inst61 <= 1000 && typeof (/a/yimg.flags) != "undefined") {_RecordType("<1050,1063,68>",(/a/yimg.flags)); Inst61++; } } catch(e) {}
/a/yimg.flags;
try { if (Inst62 <= 1000 && typeof (new RegExp('a', 'yimg').flags) != "undefined") {_RecordType("<1065,1094,69>",(new RegExp('a', 'yimg').flags)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<1069,1075,69>",(RegExp)); Inst63++; } } catch(e) {}
new RegExp('a', 'yimg').flags;
try { if (Inst64 <= 1000 && typeof (flags.call) != "undefined") {_RecordType("<1096,1106,70>",(flags.call)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (flags) != "undefined") {_RecordType("<1096,1101,70>",(flags)); Inst65++; } } catch(e) {}
flags.call({
  global: true,
  multiline: true,
  ignoreCase: true,
  sticky: true
});

