console.log('Test for processing of RegExp dotAll flag'); // Check dotAll matching operation

"aaXcc".match(/.X./)[0].length;
"aaXcc".match(/.X./s)[0].length;
"aa\nXcc".match(/.X./);
"aa\nXcc".match(/.X./m);
"aa\nX\ncc".match(/.X./s)[0];
"aa\nX\ncc".match(/.X./ms)[0];
"aa\nXcc".match(/.*X/)[0];
"aa\nXcc".match(/.*X/m)[0];
"aa\nXcc".match(/.*X/s)[0];
"aa\nXcc".match(/.*X/sm)[0];
"aaX\ncc".match(/X.*/)[0];
"aaX\ncc".match(/X.*/m)[0];
"aaX\ncc".match(/X.*/s)[0];
"aaX\ncc".match(/X.*/sm)[0];
"aa\nX\ncc".match(/.*X.*/)[0];
"aa\nX\ncc".match(/.*X.*/m)[0];
"aa\nX\ncc".match(/.*X.*/s)[0];
"aa\nX\ncc".match(/.*X.*/sm)[0];
"aa\nXcc".match(/.*^X/);
"aa\nXcc".match(/.*^X/m)[0];
"aa\nXcc".match(/.*^X/s);
"aa\nXcc".match(/.*^X/sm)[0];
"aaX\ncc".match(/X$.*/);
"aaX\ncc".match(/X$.*/m)[0];
"aaX\ncc".match(/X$.*/s);
"aaX\ncc".match(/X$.*/sm)[0];
"aa\nX\ncc".match(/.*^X$.*/);
"aa\nX\ncc".match(/.*^X$.*/m)[0];
"aa\nX\ncc".match(/.*^X$.*/s);
"aa\nX\ncc".match(/.*^X$.*/sm)[0];
"aa\nXcc".match(/^.*X/);
"aa\nXcc".match(/^.*X/m)[0];
"aa\nXcc".match(/^.*X/s)[0];
"aa\nXcc".match(/^.*X/sm)[0];
"aaX\ncc".match(/X.*$/);
"aaX\ncc".match(/X.*$/m)[0];
"aaX\ncc".match(/X.*$/s)[0];
"aaX\ncc".match(/X.*$/sm)[0];
"aa\nX\ncc".match(/^.*X.*$/);
"aa\nX\ncc".match(/^.*X.*$/m)[0];
"aa\nX\ncc".match(/^.*X.*$/s)[0];
"aa\nX\ncc".match(/^.*X.*$/sm)[0];
"a\na\nX\nc\nc\n".match(/^.*X.*$/);
"a\na\nX\nc\nc\n".match(/^.*X.*$/m)[0];
"a\na\nX\nc\nc\n".match(/^.*X.*$/s)[0];
"a\na\nX\nc\nc\n".match(/^.*X.*$/sm)[0];
"a\na\nX\nc\nc\n".match(/^.*X.*$/);
"a\na\nX\nc\nc\n".match(/^.*X.*$/m)[0];
"a\na\nX\nc\nc\n".match(/^.*X.*$/s)[0];
"a\na\nX\nc\nc\n".match(/^.*X.*$/sm)[0];
"\n\n\nX".match(/.{1}X/sm)[0];
"\n\n\nX".match(/.{1,2}X/sm)[0];
"\n\n\nX".match(/.{1,3}X/sm)[0];
"\n\n\nX".match(/.{1,4}X/sm)[0];
"\n\n\nX".match(/.{1,2}?X/sm)[0];
"\n\n\nX".match(/.{1,3}?X/sm)[0];
"\n\n\nX".match(/.{1,4}?X/sm)[0];
"X\n\n\nY".match(/X.{1}/sm)[0];
"X\n\n\nY".match(/X.{1,2}/sm)[0];
"X\n\n\nY".match(/X.{1,3}/sm)[0];
"X\n\n\nY".match(/X.{1,4}/sm)[0];
"X\n\n\nY".match(/X.{1,2}?/sm)[0];
"X\n\n\nY".match(/X.{1,3}?/sm)[0];
"X\n\n\nY".match(/X.{1,4}?/sm)[0];
"The\nquick\nbrown\nfox\njumped.".match(/.*brown.*/)[0];
"The\nquick\nbrown\nfox\njumped.".match(/.*brown.*/s)[0];
"The\nquick\nbrown\nfox\njumped.".match(/The.quick.brown.fox.jumped./);
"The\nquick\nbrown\nfox\njumped.".match(/The.quick.brown.fox.jumped./s)[0]; // Check that the dotAll flag getter works as expected

/a/.dotAll;
/a/s.dotAll;
