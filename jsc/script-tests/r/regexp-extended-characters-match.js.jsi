var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<0,11,1>",(console.log)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (console) != "undefined") {_RecordType("<0,7,1>",(console)); Inst1++; } } catch(e) {}
console.log("This test checks regular expressions using extended (> 255) characters and character classes."); // shouldThrow('var r = new RegExp("[\u0101-\u0100]"); r.exec("a")', 'null');

try { if (Inst2 <= 1000 && typeof (new RegExp("[\u0100-\u0101]").exec) != "undefined") {_RecordType("<189,223,3>",(new RegExp("[\u0100-\u0101]").exec)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<193,199,3>",(RegExp)); Inst3++; } } catch(e) {}
new RegExp("[\u0100-\u0101]").exec("a");
try { if (Inst4 <= 1000 && typeof (new RegExp("[\u0100]").exec) != "undefined") {_RecordType("<230,257,4>",(new RegExp("[\u0100]").exec)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<234,240,4>",(RegExp)); Inst5++; } } catch(e) {}
new RegExp("[\u0100]").exec("a");
try { if (Inst6 <= 1000 && typeof (new RegExp("\u0100").exec) != "undefined") {_RecordType("<264,289,5>",(new RegExp("\u0100").exec)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<268,274,5>",(RegExp)); Inst7++; } } catch(e) {}
new RegExp("\u0100").exec("a");
try { if (Inst8 <= 1000 && typeof (new RegExp("[\u0061]").exec("a").toString) != "undefined") {_RecordType("<296,337,6>",(new RegExp("[\u0061]").exec("a").toString)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (new RegExp("[\u0061]").exec) != "undefined") {_RecordType("<296,323,6>",(new RegExp("[\u0061]").exec)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<300,306,6>",(RegExp)); Inst10++; } } catch(e) {}
new RegExp("[\u0061]").exec("a").toString();
try { if (Inst11 <= 1000 && typeof (new RegExp("[\u0100-\u0101a]").exec("a").toString) != "undefined") {_RecordType("<341,390,7>",(new RegExp("[\u0100-\u0101a]").exec("a").toString)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (new RegExp("[\u0100-\u0101a]").exec) != "undefined") {_RecordType("<341,376,7>",(new RegExp("[\u0100-\u0101a]").exec)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<345,351,7>",(RegExp)); Inst13++; } } catch(e) {}
new RegExp("[\u0100-\u0101a]").exec("a").toString();
try { if (Inst14 <= 1000 && typeof (new RegExp("[\u0100a]").exec("a").toString) != "undefined") {_RecordType("<394,436,8>",(new RegExp("[\u0100a]").exec("a").toString)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (new RegExp("[\u0100a]").exec) != "undefined") {_RecordType("<394,422,8>",(new RegExp("[\u0100a]").exec)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<398,404,8>",(RegExp)); Inst16++; } } catch(e) {}
new RegExp("[\u0100a]").exec("a").toString();
try { if (Inst17 <= 1000 && typeof (new RegExp("\u0061").exec("a").toString) != "undefined") {_RecordType("<440,479,9>",(new RegExp("\u0061").exec("a").toString)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (new RegExp("\u0061").exec) != "undefined") {_RecordType("<440,465,9>",(new RegExp("\u0061").exec)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<444,450,9>",(RegExp)); Inst19++; } } catch(e) {}
new RegExp("\u0061").exec("a").toString();
try { if (Inst20 <= 1000 && typeof (new RegExp("[a-\u0100]").exec("a").toString) != "undefined") {_RecordType("<483,526,10>",(new RegExp("[a-\u0100]").exec("a").toString)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (new RegExp("[a-\u0100]").exec) != "undefined") {_RecordType("<483,512,10>",(new RegExp("[a-\u0100]").exec)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<487,493,10>",(RegExp)); Inst22++; } } catch(e) {}
new RegExp("[a-\u0100]").exec("a").toString();
try { if (Inst23 <= 1000 && typeof (new RegExp("[\u0100]").exec("\u0100").toString) != "undefined") {_RecordType("<530,576,11>",(new RegExp("[\u0100]").exec("\u0100").toString)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (new RegExp("[\u0100]").exec) != "undefined") {_RecordType("<530,557,11>",(new RegExp("[\u0100]").exec)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<534,540,11>",(RegExp)); Inst25++; } } catch(e) {}
new RegExp("[\u0100]").exec("\u0100").toString();
try { if (Inst26 <= 1000 && typeof (new RegExp("[\u0100-\u0101]").exec("\u0100").toString) != "undefined") {_RecordType("<580,633,12>",(new RegExp("[\u0100-\u0101]").exec("\u0100").toString)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (new RegExp("[\u0100-\u0101]").exec) != "undefined") {_RecordType("<580,614,12>",(new RegExp("[\u0100-\u0101]").exec)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<584,590,12>",(RegExp)); Inst28++; } } catch(e) {}
new RegExp("[\u0100-\u0101]").exec("\u0100").toString();
try { if (Inst29 <= 1000 && typeof (new RegExp("\u0100").exec("\u0100").toString) != "undefined") {_RecordType("<637,681,13>",(new RegExp("\u0100").exec("\u0100").toString)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (new RegExp("\u0100").exec) != "undefined") {_RecordType("<637,662,13>",(new RegExp("\u0100").exec)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<641,647,13>",(RegExp)); Inst31++; } } catch(e) {}
new RegExp("\u0100").exec("\u0100").toString();

