var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<0,11,1>",(console.log)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (console) != "undefined") {_RecordType("<0,7,1>",(console)); Inst1++; } } catch(e) {}
console.log('Test regular expression processing with alternatives.');
var s1 = "<p>content</p>";
try { if (Inst2 <= 1000 && typeof (s1) != "undefined") {_RecordType("<74,76,2>",(s1)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (s1.match) != "undefined") {_RecordType("<97,105,3>",(s1.match)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (s1) != "undefined") {_RecordType("<97,99,3>",(s1)); Inst4++; } } catch(e) {}
s1.match(/<((\/([^>]+)>)|(([^>]+)>))/);
try { if (Inst5 <= 1000 && typeof (s1.match) != "undefined") {_RecordType("<137,145,4>",(s1.match)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (s1) != "undefined") {_RecordType("<137,139,4>",(s1)); Inst6++; } } catch(e) {}
s1.match(/<((ABC>)|(\/([^>]+)>)|(([^>]+)>))/);
try { if (Inst7 <= 1000 && typeof (s1.match) != "undefined") {_RecordType("<184,192,5>",(s1.match)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (s1) != "undefined") {_RecordType("<184,186,5>",(s1)); Inst8++; } } catch(e) {}
s1.match(/<(a|\/p|.+?)>/); // Force YARR to use Interpreter by using iterative parentheses

try { if (Inst9 <= 1000 && typeof (s1.match) != "undefined") {_RecordType("<276,284,7>",(s1.match)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (s1) != "undefined") {_RecordType("<276,278,7>",(s1)); Inst10++; } } catch(e) {}
s1.match(/<((\/([^>]+)>)|((([^>])+)>))/);
try { if (Inst11 <= 1000 && typeof (s1.match) != "undefined") {_RecordType("<318,326,8>",(s1.match)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (s1) != "undefined") {_RecordType("<318,320,8>",(s1)); Inst12++; } } catch(e) {}
s1.match(/<((ABC>)|(\/([^>]+)>)|((([^>])+)>))/);
try { if (Inst13 <= 1000 && typeof (s1.match) != "undefined") {_RecordType("<367,375,9>",(s1.match)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (s1) != "undefined") {_RecordType("<367,369,9>",(s1)); Inst14++; } } catch(e) {}
s1.match(/<(a|\/p|(.)+?)>/); // Force YARR to use Interpreter by using backreference

var s2 = "<p>p</p>";
try { if (Inst15 <= 1000 && typeof (s2) != "undefined") {_RecordType("<457,459,11>",(s2)); Inst15++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (s2.match) != "undefined") {_RecordType("<474,482,12>",(s2.match)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (s2) != "undefined") {_RecordType("<474,476,12>",(s2)); Inst17++; } } catch(e) {}
s2.match(/<((\/([^>]+)>)|(([^>]+)>))\5/);
try { if (Inst18 <= 1000 && typeof (s2.match) != "undefined") {_RecordType("<516,524,13>",(s2.match)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (s2) != "undefined") {_RecordType("<516,518,13>",(s2)); Inst19++; } } catch(e) {}
s2.match(/<((ABC>)|(\/([^>]+)>)|(([^>]+)>))\6/);
try { if (Inst20 <= 1000 && typeof (s2.match) != "undefined") {_RecordType("<565,573,14>",(s2.match)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (s2) != "undefined") {_RecordType("<565,567,14>",(s2)); Inst21++; } } catch(e) {}
s2.match(/<(a|\/p|.+?)>\1/);

