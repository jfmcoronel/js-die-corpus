var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<0,11,1>",(console.log)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (console) != "undefined") {_RecordType("<0,7,1>",(console)); Inst1++; } } catch(e) {}
console.log("Regression test for https://webkit.org/b/140306. This test should run without any exceptions.");
try { if (Inst3 <= 1000 && typeof (Number) != "undefined") {_RecordType("<139,145,2>",(Number)); Inst3++; } } catch(e) {}
testArgs = [1, "Second", new Number(3)];
try { if (Inst2 <= 1000 && typeof (testArgs) != "undefined") {_RecordType("<110,118,2>",(testArgs)); Inst2++; } } catch(e) {}

try { if (Inst4 <= 1000 && typeof (checkArgs) != "undefined") {_RecordType("<161,170,4>",(checkArgs)); Inst4++; } } catch(e) {}
function checkArgs(a0, a1, a2) {
try { if (Inst5 <= 1000 && typeof (a0) != "undefined") {_RecordType("<171,173,4>",(a0)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (a1) != "undefined") {_RecordType("<175,177,4>",(a1)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (a2) != "undefined") {_RecordType("<179,181,4>",(a2)); Inst7++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (a0) != "undefined") {_RecordType("<191,193,5>",(a0)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (testArgs[0]) != "undefined") {_RecordType("<198,209,5>",(testArgs[0])); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (testArgs) != "undefined") {_RecordType("<198,206,5>",(testArgs)); Inst10++; } } catch(e) {}
  if (a0 !== testArgs[0]) {
try { if (Inst11 <= 1000 && typeof (testArgs[0]) != "undefined") {_RecordType("<275,286,6>",(testArgs[0])); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (testArgs) != "undefined") {_RecordType("<275,283,6>",(testArgs)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (a0) != "undefined") {_RecordType("<301,303,6>",(a0)); Inst13++; } } catch(e) {}
    throw "Value of declared arg a0 is wrong.  Should be: " + testArgs[0] + ", was: " + a0;
  }

try { if (Inst14 <= 1000 && typeof (a1) != "undefined") {_RecordType("<316,318,9>",(a1)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (testArgs[1]) != "undefined") {_RecordType("<323,334,9>",(testArgs[1])); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (testArgs) != "undefined") {_RecordType("<323,331,9>",(testArgs)); Inst16++; } } catch(e) {}
  if (a1 !== testArgs[1]) {
try { if (Inst17 <= 1000 && typeof (testArgs[1]) != "undefined") {_RecordType("<400,411,10>",(testArgs[1])); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (testArgs) != "undefined") {_RecordType("<400,408,10>",(testArgs)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (a1) != "undefined") {_RecordType("<426,428,10>",(a1)); Inst19++; } } catch(e) {}
    throw "Value of declared arg a1 is wrong.  Should be: " + testArgs[1] + ", was: " + a1;
  }

try { if (Inst20 <= 1000 && typeof (a2) != "undefined") {_RecordType("<441,443,13>",(a2)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (testArgs[2]) != "undefined") {_RecordType("<448,459,13>",(testArgs[2])); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (testArgs) != "undefined") {_RecordType("<448,456,13>",(testArgs)); Inst22++; } } catch(e) {}
  if (a2 !== testArgs[2]) {
try { if (Inst23 <= 1000 && typeof (testArgs[2]) != "undefined") {_RecordType("<525,536,14>",(testArgs[2])); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (testArgs) != "undefined") {_RecordType("<525,533,14>",(testArgs)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (a2) != "undefined") {_RecordType("<551,553,14>",(a2)); Inst25++; } } catch(e) {}
    throw "Value of declared arg a2 is wrong.  Should be: " + testArgs[2] + ", was: " + a2;
  }

try { if (Inst26 <= 1000 && typeof (arguments.length) != "undefined") {_RecordType("<566,582,17>",(arguments.length)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<566,575,17>",(arguments)); Inst27++; } } catch(e) {}
  if (arguments.length != 3) {
try { if (Inst28 <= 1000 && typeof (arguments.length) != "undefined") {_RecordType("<656,672,18>",(arguments.length)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<656,665,18>",(arguments)); Inst29++; } } catch(e) {}
    throw "Length of arguments is wrong.  Should be: 3, was: " + arguments.length;
  }

  for (var i = 0; i < arguments.length; i++) {
try { if (Inst30 <= 1000 && typeof (i) != "undefined") {_RecordType("<690,691,21>",(i)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (i) != "undefined") {_RecordType("<697,698,21>",(i)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (arguments.length) != "undefined") {_RecordType("<701,717,21>",(arguments.length)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<701,710,21>",(arguments)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (i) != "undefined") {_RecordType("<719,720,21>",(i)); Inst34++; } } catch(e) {}
try { if (Inst35 <= 1000 && typeof (arguments[i]) != "undefined") {_RecordType("<734,746,22>",(arguments[i])); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<734,743,22>",(arguments)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (testArgs[i]) != "undefined") {_RecordType("<751,762,22>",(testArgs[i])); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (testArgs) != "undefined") {_RecordType("<751,759,22>",(testArgs)); Inst38++; } } catch(e) {}
    if (arguments[i] !== testArgs[i]) {
try { if (Inst39 <= 1000 && typeof (i) != "undefined") {_RecordType("<802,803,23>",(i)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (testArgs[i]) != "undefined") {_RecordType("<835,846,23>",(testArgs[i])); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (testArgs) != "undefined") {_RecordType("<835,843,23>",(testArgs)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (arguments[i]) != "undefined") {_RecordType("<861,873,23>",(arguments[i])); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<861,870,23>",(arguments)); Inst43++; } } catch(e) {}
      throw "Value of arguments[" + i + "] is wrong.  Should be: " + testArgs[i] + ", was: " + arguments[i];
    }
  }
}

try { if (Inst44 <= 1000 && typeof (applyToArgs) != "undefined") {_RecordType("<897,908,28>",(applyToArgs)); Inst44++; } } catch(e) {}
function applyToArgs() {
try { if (Inst46 <= 1000 && typeof (testArgs) != "undefined") {_RecordType("<927,935,29>",(testArgs)); Inst46++; } } catch(e) {}
  arguments = testArgs;
try { if (Inst45 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<915,924,29>",(arguments)); Inst45++; } } catch(e) {}
try { if (Inst47 <= 1000 && typeof (checkArgs.apply) != "undefined") {_RecordType("<939,954,30>",(checkArgs.apply)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (checkArgs) != "undefined") {_RecordType("<939,948,30>",(checkArgs)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<961,970,30>",(arguments)); Inst49++; } } catch(e) {}
  checkArgs.apply(this, arguments);

try { if (Inst50 <= 1000 && typeof (e) != "undefined") {_RecordType("<999,1000,34>",(e)); Inst50++; } } catch(e) {}
  try {
    ;
  } catch (e) {
try { if (Inst51 <= 1000 && typeof (e) != "undefined") {_RecordType("<1014,1015,35>",(e)); Inst51++; } } catch(e) {}
    throw e;
  } // To force the creation of an activation object

}

try { if (Inst52 <= 1000 && typeof (applyToArgs) != "undefined") {_RecordType("<1074,1085,40>",(applyToArgs)); Inst52++; } } catch(e) {}
applyToArgs(42);

