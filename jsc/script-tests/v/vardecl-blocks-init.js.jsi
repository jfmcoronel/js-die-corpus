var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<0,11,1>",(console.log)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (console) != "undefined") {_RecordType("<0,7,1>",(console)); Inst1++; } } catch(e) {}
console.log("This test checks that variable declarations with initializers inside of catch and with blocks do not set values in a deeper scope.");

try { if (Inst2 <= 1000 && typeof (catchTest) != "undefined") {_RecordType("<157,166,3>",(catchTest)); Inst2++; } } catch(e) {}
function catchTest() {
  var e = "foo";
try { if (Inst3 <= 1000 && typeof (e) != "undefined") {_RecordType("<177,178,4>",(e)); Inst3++; } } catch(e) {}

try { if (Inst4 <= 1000 && typeof (e) != "undefined") {_RecordType("<225,226,8>",(e)); Inst4++; } } catch(e) {}
  try {
    throw "bar";
  } catch (e) {
    var e = "baz";
try { if (Inst5 <= 1000 && typeof (e) != "undefined") {_RecordType("<238,239,9>",(e)); Inst5++; } } catch(e) {}
  }

try { if (Inst6 <= 1000 && typeof (e) != "undefined") {_RecordType("<263,264,12>",(e)); Inst6++; } } catch(e) {}
  return e;
}

try { if (Inst7 <= 1000 && typeof (catchTest2) != "undefined") {_RecordType("<278,288,15>",(catchTest2)); Inst7++; } } catch(e) {}
function catchTest2() {
  var e = "foo";
try { if (Inst8 <= 1000 && typeof (e) != "undefined") {_RecordType("<299,300,16>",(e)); Inst8++; } } catch(e) {}

try { if (Inst9 <= 1000 && typeof (e) != "undefined") {_RecordType("<347,348,20>",(e)); Inst9++; } } catch(e) {}
  try {
    throw "bar";
  } catch (e) {
    var e = "baz";
try { if (Inst10 <= 1000 && typeof (e) != "undefined") {_RecordType("<360,361,21>",(e)); Inst10++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (e) != "undefined") {_RecordType("<382,383,22>",(e)); Inst11++; } } catch(e) {}
    return e;
  }
}

try { if (Inst12 <= 1000 && typeof (withTest) != "undefined") {_RecordType("<401,409,26>",(withTest)); Inst12++; } } catch(e) {}
function withTest() {
  var e = "foo";
try { if (Inst13 <= 1000 && typeof (e) != "undefined") {_RecordType("<420,421,27>",(e)); Inst13++; } } catch(e) {}
  var object = {
    'e': "bar"
  };
try { if (Inst14 <= 1000 && typeof (object) != "undefined") {_RecordType("<437,443,28>",(object)); Inst14++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (object) != "undefined") {_RecordType("<476,482,31>",(object)); Inst15++; } } catch(e) {}
  with (object) {
    var e = "baz";
try { if (Inst16 <= 1000 && typeof (e) != "undefined") {_RecordType("<494,495,32>",(e)); Inst16++; } } catch(e) {}
  }
try { if (Inst17 <= 1000 && typeof (e) != "undefined") {_RecordType("<518,519,34>",(e)); Inst17++; } } catch(e) {}
  return e;
}

try { if (Inst18 <= 1000 && typeof (withTest2) != "undefined") {_RecordType("<533,542,37>",(withTest2)); Inst18++; } } catch(e) {}
function withTest2() {
  var e = "foo";
try { if (Inst19 <= 1000 && typeof (e) != "undefined") {_RecordType("<553,554,38>",(e)); Inst19++; } } catch(e) {}
  var object = {
    'e': "bar"
  };
try { if (Inst20 <= 1000 && typeof (object) != "undefined") {_RecordType("<570,576,39>",(object)); Inst20++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (object) != "undefined") {_RecordType("<609,615,42>",(object)); Inst21++; } } catch(e) {}
  with (object) {
    var e = "baz";
try { if (Inst22 <= 1000 && typeof (e) != "undefined") {_RecordType("<627,628,43>",(e)); Inst22++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (e) != "undefined") {_RecordType("<649,650,44>",(e)); Inst23++; } } catch(e) {}
    return e;
  }
}

try { if (Inst24 <= 1000 && typeof (catchTest) != "undefined") {_RecordType("<659,668,48>",(catchTest)); Inst24++; } } catch(e) {}
catchTest();
try { if (Inst25 <= 1000 && typeof (catchTest2) != "undefined") {_RecordType("<672,682,49>",(catchTest2)); Inst25++; } } catch(e) {}
catchTest2();
try { if (Inst26 <= 1000 && typeof (withTest) != "undefined") {_RecordType("<686,694,50>",(withTest)); Inst26++; } } catch(e) {}
withTest();
try { if (Inst27 <= 1000 && typeof (withTest2) != "undefined") {_RecordType("<698,707,51>",(withTest2)); Inst27++; } } catch(e) {}
withTest2();

