var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<0,11,1>",(console.log)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (console) != "undefined") {_RecordType("<0,7,1>",(console)); Inst1++; } } catch(e) {}
console.log("This test ensures that properties on an object literal are put directly onto the created object, and don't call setters in the prototype chain.");
try { if (Inst2 <= 1000 && typeof (({
  a: true
}).a) != "undefined") {_RecordType("<160,177,2>",(({
  a: true
}).a)); Inst2++; } } catch(e) {}
({
  a: true
}).a;
try { if (Inst3 <= 1000 && typeof (({
  __proto__: {
    a: false
  },
  a: true
}).a) != "undefined") {_RecordType("<179,229,5>",(({
  __proto__: {
    a: false
  },
  a: true
}).a)); Inst3++; } } catch(e) {}
({
  __proto__: {
    a: false
  },
  a: true
}).a;
try { if (Inst4 <= 1000 && typeof (({
  __proto__: {
    set a(x) {
      throw 'Should not call setter';
    }

  },
  a: true
}).a) != "undefined") {_RecordType("<231,328,11>",(({
  __proto__: {
    set a(x) {
      throw 'Should not call setter';
    }

  },
  a: true
}).a)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (a) != "undefined") {_RecordType("<257,258,13>",(a)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (x) != "undefined") {_RecordType("<259,260,13>",(x)); Inst6++; } } catch(e) {}
({
  __proto__: {
    set a(x) {
      throw 'Should not call setter';
    }

  },
  a: true
}).a;
try { if (Inst7 <= 1000 && typeof (({
  __proto__: {
    get a() {
      throw 'Should not reach getter';
    }

  },
  a: true
}).a) != "undefined") {_RecordType("<330,427,20>",(({
  __proto__: {
    get a() {
      throw 'Should not reach getter';
    }

  },
  a: true
}).a)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (a) != "undefined") {_RecordType("<356,357,22>",(a)); Inst8++; } } catch(e) {}
({
  __proto__: {
    get a() {
      throw 'Should not reach getter';
    }

  },
  a: true
}).a;
try { if (Inst9 <= 1000 && typeof (({
  __proto__: {
    get a() {
      throw 'Should not reach getter';
    },

    b: true
  },
  a: true
}).b) != "undefined") {_RecordType("<429,539,29>",(({
  __proto__: {
    get a() {
      throw 'Should not reach getter';
    },

    b: true
  },
  a: true
}).b)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (a) != "undefined") {_RecordType("<455,456,31>",(a)); Inst10++; } } catch(e) {}
({
  __proto__: {
    get a() {
      throw 'Should not reach getter';
    },

    b: true
  },
  a: true
}).b;
try { if (Inst11 <= 1000 && typeof (({
  __proto__: {
    __proto__: {
      a: false
    }
  },
  a: true
}).a) != "undefined") {_RecordType("<541,616,39>",(({
  __proto__: {
    __proto__: {
      a: false
    }
  },
  a: true
}).a)); Inst11++; } } catch(e) {}
({
  __proto__: {
    __proto__: {
      a: false
    }
  },
  a: true
}).a;
try { if (Inst12 <= 1000 && typeof (({
  __proto__: {
    __proto__: {
      set a(x) {
        throw 'Should not call setter';
      }

    }
  },
  a: true
}).a) != "undefined") {_RecordType("<618,744,47>",(({
  __proto__: {
    __proto__: {
      set a(x) {
        throw 'Should not call setter';
      }

    }
  },
  a: true
}).a)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (a) != "undefined") {_RecordType("<663,664,50>",(a)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (x) != "undefined") {_RecordType("<665,666,50>",(x)); Inst14++; } } catch(e) {}
({
  __proto__: {
    __proto__: {
      set a(x) {
        throw 'Should not call setter';
      }

    }
  },
  a: true
}).a;
try { if (Inst15 <= 1000 && typeof (({
  __proto__: {
    __proto__: {
      get a() {
        throw 'Should not reach getter';
      }

    }
  },
  a: true
}).a) != "undefined") {_RecordType("<746,872,58>",(({
  __proto__: {
    __proto__: {
      get a() {
        throw 'Should not reach getter';
      }

    }
  },
  a: true
}).a)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (a) != "undefined") {_RecordType("<791,792,61>",(a)); Inst16++; } } catch(e) {}
({
  __proto__: {
    __proto__: {
      get a() {
        throw 'Should not reach getter';
      }

    }
  },
  a: true
}).a;
try { if (Inst17 <= 1000 && typeof (({
  __proto__: {
    __proto__: {
      get a() {
        throw 'Should not reach getter';
      },

      b: true
    }
  },
  a: true
}).b) != "undefined") {_RecordType("<874,1015,69>",(({
  __proto__: {
    __proto__: {
      get a() {
        throw 'Should not reach getter';
      },

      b: true
    }
  },
  a: true
}).b)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (a) != "undefined") {_RecordType("<919,920,72>",(a)); Inst18++; } } catch(e) {}
({
  __proto__: {
    __proto__: {
      get a() {
        throw 'Should not reach getter';
      },

      b: true
    }
  },
  a: true
}).b;

