var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (foo) != "undefined") {_RecordType("<9,12,1>",(foo)); Inst0++; } } catch(e) {}
function foo(a, b) {
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<13,14,1>",(a)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (b) != "undefined") {_RecordType("<16,17,1>",(b)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (a) != "undefined") {_RecordType("<30,31,2>",(a)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (b) != "undefined") {_RecordType("<34,35,2>",(b)); Inst4++; } } catch(e) {}
  return a + b;
}

try { if (Inst5 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<40,48,5>",(noInline)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (foo) != "undefined") {_RecordType("<49,52,5>",(foo)); Inst6++; } } catch(e) {}
noInline(foo);
var things = [1, 2.5, "3", {
  valueOf: function () {
    return 4;
  }
}];
try { if (Inst7 <= 1000 && typeof (things) != "undefined") {_RecordType("<59,65,6>",(things)); Inst7++; } } catch(e) {}
var results = [2, 3.5, "31", 5];
try { if (Inst8 <= 1000 && typeof (results) != "undefined") {_RecordType("<135,142,11>",(results)); Inst8++; } } catch(e) {}

for (var i = 0; i < 100000; ++i) {
try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<174,175,13>",(i)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<181,182,13>",(i)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<195,196,13>",(i)); Inst11++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (foo) != "undefined") {_RecordType("<215,218,14>",(foo)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (things[i % things.length]) != "undefined") {_RecordType("<219,244,14>",(things[i % things.length])); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (things) != "undefined") {_RecordType("<219,225,14>",(things)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<226,227,14>",(i)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (things.length) != "undefined") {_RecordType("<230,243,14>",(things.length)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (things) != "undefined") {_RecordType("<230,236,14>",(things)); Inst18++; } } catch(e) {}
  var result = foo(things[i % things.length], 1);
try { if (Inst12 <= 1000 && typeof (result) != "undefined") {_RecordType("<206,212,14>",(result)); Inst12++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (results[i % results.length]) != "undefined") {_RecordType("<267,294,15>",(results[i % results.length])); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (results) != "undefined") {_RecordType("<267,274,15>",(results)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<275,276,15>",(i)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (results.length) != "undefined") {_RecordType("<279,293,15>",(results.length)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (results) != "undefined") {_RecordType("<279,286,15>",(results)); Inst24++; } } catch(e) {}
  var expected = results[i % results.length];
try { if (Inst19 <= 1000 && typeof (expected) != "undefined") {_RecordType("<256,264,15>",(expected)); Inst19++; } } catch(e) {}

try { if (Inst25 <= 1000 && typeof (result) != "undefined") {_RecordType("<303,309,17>",(result)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (expected) != "undefined") {_RecordType("<313,321,17>",(expected)); Inst26++; } } catch(e) {}
  if (result != expected) {
try { if (Inst27 <= 1000 && typeof (i) != "undefined") {_RecordType("<366,367,18>",(i)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (result) != "undefined") {_RecordType("<377,383,18>",(result)); Inst28++; } } catch(e) {}
    throw "Error: bad result for i = " + i + ": " + result;
  }
}

