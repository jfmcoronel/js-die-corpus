var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<9,17,1>",(shouldBe)); Inst0++; } } catch(e) {}
function shouldBe(actual, expected) {
try { if (Inst1 <= 1000 && typeof (actual) != "undefined") {_RecordType("<18,24,1>",(actual)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (expected) != "undefined") {_RecordType("<26,34,1>",(expected)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (actual) != "undefined") {_RecordType("<44,50,2>",(actual)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (expected) != "undefined") {_RecordType("<55,63,2>",(expected)); Inst4++; } } catch(e) {}
  if (actual !== expected) {
try { if (Inst5 <= 1000 && typeof (Error) != "undefined") {_RecordType("<81,86,3>",(Error)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (actual) != "undefined") {_RecordType("<103,109,3>",(actual)); Inst6++; } } catch(e) {}
    throw new Error('bad value: ' + actual);
  }
}

try { if (Inst7 <= 1000 && typeof (gen1) != "undefined") {_RecordType("<128,132,7>",(gen1)); Inst7++; } } catch(e) {}
function gen1(value) {
try { if (Inst8 <= 1000 && typeof (value) != "undefined") {_RecordType("<133,138,7>",(value)); Inst8++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (value) != "undefined") {_RecordType("<158,163,8>",(value)); Inst9++; } } catch(e) {}
  return 'he' + value;
}

try { if (Inst10 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<168,176,11>",(noInline)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (gen1) != "undefined") {_RecordType("<177,181,11>",(gen1)); Inst11++; } } catch(e) {}
noInline(gen1);

try { if (Inst12 <= 1000 && typeof (gen2) != "undefined") {_RecordType("<194,198,13>",(gen2)); Inst12++; } } catch(e) {}
function gen2(value) {
try { if (Inst13 <= 1000 && typeof (value) != "undefined") {_RecordType("<199,204,13>",(value)); Inst13++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (value) != "undefined") {_RecordType("<217,222,14>",(value)); Inst14++; } } catch(e) {}
  return value + 'ld';
}

try { if (Inst15 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<234,242,17>",(noInline)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (gen2) != "undefined") {_RecordType("<243,247,17>",(gen2)); Inst16++; } } catch(e) {}
noInline(gen2);

try { if (Inst17 <= 1000 && typeof (assign) != "undefined") {_RecordType("<260,266,19>",(assign)); Inst17++; } } catch(e) {}
function assign(object, name, value) {
try { if (Inst18 <= 1000 && typeof (object) != "undefined") {_RecordType("<267,273,19>",(object)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (name) != "undefined") {_RecordType("<275,279,19>",(name)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (value) != "undefined") {_RecordType("<281,286,19>",(value)); Inst20++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (value) != "undefined") {_RecordType("<307,312,20>",(value)); Inst23++; } } catch(e) {}
  object[name] = value;
try { if (Inst21 <= 1000 && typeof (object[name]) != "undefined") {_RecordType("<292,304,20>",(object[name])); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (object) != "undefined") {_RecordType("<292,298,20>",(object)); Inst22++; } } catch(e) {}
}

try { if (Inst24 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<317,325,23>",(noInline)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (assign) != "undefined") {_RecordType("<326,332,23>",(assign)); Inst25++; } } catch(e) {}
noInline(assign);

for (var i = 0; i < 10000; ++i) {
try { if (Inst26 <= 1000 && typeof (i) != "undefined") {_RecordType("<345,346,25>",(i)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (i) != "undefined") {_RecordType("<352,353,25>",(i)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (i) != "undefined") {_RecordType("<365,366,25>",(i)); Inst28++; } } catch(e) {}
  var object = {};
try { if (Inst29 <= 1000 && typeof (object) != "undefined") {_RecordType("<376,382,26>",(object)); Inst29++; } } catch(e) {}

try { if (Inst30 <= 1000 && typeof (i) != "undefined") {_RecordType("<396,397,28>",(i)); Inst30++; } } catch(e) {}
  if (i % 2 === 0) {
try { if (Inst31 <= 1000 && typeof (assign) != "undefined") {_RecordType("<415,421,29>",(assign)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (object) != "undefined") {_RecordType("<422,428,29>",(object)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (gen1) != "undefined") {_RecordType("<430,434,29>",(gen1)); Inst33++; } } catch(e) {}
    assign(object, gen1('llo'), 42);
try { if (Inst34 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<452,460,30>",(shouldBe)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (object.hello) != "undefined") {_RecordType("<461,473,30>",(object.hello)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (object) != "undefined") {_RecordType("<461,467,30>",(object)); Inst36++; } } catch(e) {}
    shouldBe(object.hello, 42);
  } else {
try { if (Inst37 <= 1000 && typeof (assign) != "undefined") {_RecordType("<495,501,32>",(assign)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (object) != "undefined") {_RecordType("<502,508,32>",(object)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (gen2) != "undefined") {_RecordType("<510,514,32>",(gen2)); Inst39++; } } catch(e) {}
    assign(object, gen2('wor'), 42);
try { if (Inst40 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<532,540,33>",(shouldBe)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (object.world) != "undefined") {_RecordType("<541,553,33>",(object.world)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (object) != "undefined") {_RecordType("<541,547,33>",(object)); Inst42++; } } catch(e) {}
    shouldBe(object.world, 42);
  }
}

