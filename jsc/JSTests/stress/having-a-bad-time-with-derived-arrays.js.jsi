var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (assert) != "undefined") {_RecordType("<9,15,1>",(assert)); Inst0++; } } catch(e) {}
function assert(b) {
try { if (Inst1 <= 1000 && typeof (b) != "undefined") {_RecordType("<16,17,1>",(b)); Inst1++; } } catch(e) {}
  ;
}

let called = false;
try { if (Inst2 <= 1000 && typeof (called) != "undefined") {_RecordType("<32,38,5>",(called)); Inst2++; } } catch(e) {}

try { if (Inst3 <= 1000 && typeof (defineSetter) != "undefined") {_RecordType("<58,70,7>",(defineSetter)); Inst3++; } } catch(e) {}
function defineSetter() {
try { if (Inst4 <= 1000 && typeof (Array.prototype.__defineSetter__) != "undefined") {_RecordType("<77,109,8>",(Array.prototype.__defineSetter__)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<77,92,8>",(Array.prototype)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Array) != "undefined") {_RecordType("<77,82,8>",(Array)); Inst6++; } } catch(e) {}
  Array.prototype.__defineSetter__(0, function (x) {
try { if (Inst7 <= 1000 && typeof (x) != "undefined") {_RecordType("<123,124,8>",(x)); Inst7++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (x) != "undefined") {_RecordType("<132,133,9>",(x)); Inst8++; } } catch(e) {}
    x === 42;
    called = true;
try { if (Inst9 <= 1000 && typeof (called) != "undefined") {_RecordType("<146,152,10>",(called)); Inst9++; } } catch(e) {}
  });
}

try { if (Inst12 <= 1000 && typeof (Array) != "undefined") {_RecordType("<197,202,14>",(Array)); Inst12++; } } catch(e) {}
class DerivedArray extends Array {
  constructor(...args) {
try { if (Inst11 <= 1000 && typeof (args) != "undefined") {_RecordType("<222,226,15>",(args)); Inst11++; } } catch(e) {}
    super();
  }

}
try { if (Inst10 <= 1000 && typeof (DerivedArray) != "undefined") {_RecordType("<176,188,14>",(DerivedArray)); Inst10++; } } catch(e) {}

try { if (Inst13 <= 1000 && typeof (iterate) != "undefined") {_RecordType("<260,267,21>",(iterate)); Inst13++; } } catch(e) {}
function iterate(a) {
try { if (Inst14 <= 1000 && typeof (a) != "undefined") {_RecordType("<268,269,21>",(a)); Inst14++; } } catch(e) {}
  for (let i = 0; i < a.length; i++) {
try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<284,285,22>",(i)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<291,292,22>",(i)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<295,303,22>",(a.length)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (a) != "undefined") {_RecordType("<295,296,22>",(a)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (i) != "undefined") {_RecordType("<305,306,22>",(i)); Inst19++; } } catch(e) {}
    ;
  }
}

let arr = [[[1, 2, 3, 4, 5], [2], 5], [[1, 2, 3], [-4]]];
try { if (Inst20 <= 1000 && typeof (arr) != "undefined") {_RecordType("<329,332,27>",(arr)); Inst20++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (DerivedArray) != "undefined") {_RecordType("<395,407,28>",(DerivedArray)); Inst22++; } } catch(e) {}
let d = new DerivedArray();
try { if (Inst21 <= 1000 && typeof (d) != "undefined") {_RecordType("<387,388,28>",(d)); Inst21++; } } catch(e) {}
d[1] = 20;
try { if (Inst23 <= 1000 && typeof (d[1]) != "undefined") {_RecordType("<411,415,29>",(d[1])); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (d) != "undefined") {_RecordType("<411,412,29>",(d)); Inst24++; } } catch(e) {}
d[2] = 40;
try { if (Inst25 <= 1000 && typeof (d[2]) != "undefined") {_RecordType("<422,426,30>",(d[2])); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (d) != "undefined") {_RecordType("<422,423,30>",(d)); Inst26++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (arr.push) != "undefined") {_RecordType("<433,441,31>",(arr.push)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (arr) != "undefined") {_RecordType("<433,436,31>",(arr)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (d) != "undefined") {_RecordType("<443,444,31>",(d)); Inst29++; } } catch(e) {}
arr.push([d, [2] - 9]);

try { if (Inst30 <= 1000 && typeof (doSlice) != "undefined") {_RecordType("<467,474,33>",(doSlice)); Inst30++; } } catch(e) {}
function doSlice(a) {
try { if (Inst31 <= 1000 && typeof (a) != "undefined") {_RecordType("<475,476,33>",(a)); Inst31++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (a.slice) != "undefined") {_RecordType("<490,497,34>",(a.slice)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (a) != "undefined") {_RecordType("<490,491,34>",(a)); Inst34++; } } catch(e) {}
  let r = a.slice();
try { if (Inst32 <= 1000 && typeof (r) != "undefined") {_RecordType("<486,487,34>",(r)); Inst32++; } } catch(e) {}
try { if (Inst35 <= 1000 && typeof (defineSetter) != "undefined") {_RecordType("<503,515,35>",(defineSetter)); Inst35++; } } catch(e) {}
  defineSetter();
try { if (Inst36 <= 1000 && typeof (r) != "undefined") {_RecordType("<528,529,36>",(r)); Inst36++; } } catch(e) {}
  return r;
}

for (let i = 0; i < 10000; i++) {
try { if (Inst37 <= 1000 && typeof (i) != "undefined") {_RecordType("<543,544,39>",(i)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (i) != "undefined") {_RecordType("<550,551,39>",(i)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (i) != "undefined") {_RecordType("<561,562,39>",(i)); Inst39++; } } catch(e) {}
  for (let [a, b, ...c] of arr) {
try { if (Inst40 <= 1000 && typeof (a) != "undefined") {_RecordType("<580,581,40>",(a)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (b) != "undefined") {_RecordType("<583,584,40>",(b)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (c) != "undefined") {_RecordType("<589,590,40>",(c)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (arr) != "undefined") {_RecordType("<595,598,40>",(arr)); Inst43++; } } catch(e) {}
try { if (Inst45 <= 1000 && typeof (doSlice) != "undefined") {_RecordType("<614,621,41>",(doSlice)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (a) != "undefined") {_RecordType("<622,623,41>",(a)); Inst46++; } } catch(e) {}
    let s = doSlice(a);
try { if (Inst44 <= 1000 && typeof (s) != "undefined") {_RecordType("<610,611,41>",(s)); Inst44++; } } catch(e) {}
try { if (Inst47 <= 1000 && typeof (iterate) != "undefined") {_RecordType("<630,637,42>",(iterate)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (s) != "undefined") {_RecordType("<638,639,42>",(s)); Inst48++; } } catch(e) {}
    iterate(s);
try { if (Inst49 <= 1000 && typeof (s[0]) != "undefined") {_RecordType("<653,657,43>",(s[0])); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (s) != "undefined") {_RecordType("<653,654,43>",(s)); Inst50++; } } catch(e) {}
    delete s[0];
    called = false;
try { if (Inst51 <= 1000 && typeof (called) != "undefined") {_RecordType("<663,669,44>",(called)); Inst51++; } } catch(e) {}
    s[0] = 42;
try { if (Inst52 <= 1000 && typeof (s[0]) != "undefined") {_RecordType("<683,687,45>",(s[0])); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (s) != "undefined") {_RecordType("<683,684,45>",(s)); Inst53++; } } catch(e) {}

try { if (Inst54 <= 1000 && typeof (a) != "undefined") {_RecordType("<703,704,47>",(a)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (d) != "undefined") {_RecordType("<709,710,47>",(d)); Inst55++; } } catch(e) {}
    if (a === d) {
try { if (Inst56 <= 1000 && typeof (called) != "undefined") {_RecordType("<720,726,48>",(called)); Inst56++; } } catch(e) {}
      called;
      called = false;
try { if (Inst57 <= 1000 && typeof (called) != "undefined") {_RecordType("<734,740,49>",(called)); Inst57++; } } catch(e) {}
    }
  }
}

