var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
(function () {
try { if (Inst0 <= 1000 && typeof (foo) != "undefined") {_RecordType("<26,29,2>",(foo)); Inst0++; } } catch(e) {}
  function foo(x) {
try { if (Inst1 <= 1000 && typeof (x) != "undefined") {_RecordType("<30,31,2>",(x)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (this.f) != "undefined") {_RecordType("<50,56,3>",(this.f)); Inst2++; } } catch(e) {}
    return 1 + this.f;
  }

try { if (Inst3 <= 1000 && typeof (bar) != "undefined") {_RecordType("<74,77,6>",(bar)); Inst3++; } } catch(e) {}
  function bar(x) {
try { if (Inst4 <= 1000 && typeof (x) != "undefined") {_RecordType("<78,79,6>",(x)); Inst4++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (x) != "undefined") {_RecordType("<94,95,7>",(x)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (this.f) != "undefined") {_RecordType("<98,104,7>",(this.f)); Inst6++; } } catch(e) {}
    return x + this.f;
  }

try { if (Inst7 <= 1000 && typeof (baz) != "undefined") {_RecordType("<122,125,10>",(baz)); Inst7++; } } catch(e) {}
  function baz(x) {
try { if (Inst8 <= 1000 && typeof (x) != "undefined") {_RecordType("<126,127,10>",(x)); Inst8++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (x) != "undefined") {_RecordType("<142,143,11>",(x)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (this.f) != "undefined") {_RecordType("<150,156,11>",(this.f)); Inst10++; } } catch(e) {}
    return x + 1 + this.f;
  }

  var n = 1000000;
try { if (Inst11 <= 1000 && typeof (n) != "undefined") {_RecordType("<169,170,14>",(n)); Inst11++; } } catch(e) {}

  var result = function (o) {
try { if (Inst13 <= 1000 && typeof (o) != "undefined") {_RecordType("<208,209,16>",(o)); Inst13++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (foo) != "undefined") {_RecordType("<238,241,18>",(foo)); Inst15++; } } catch(e) {}
    var f = {
      fun: foo,
      f: 1
    };
try { if (Inst14 <= 1000 && typeof (f) != "undefined") {_RecordType("<221,222,17>",(f)); Inst14++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (bar) != "undefined") {_RecordType("<286,289,22>",(bar)); Inst17++; } } catch(e) {}
    var g = {
      fun: bar,
      f: 2
    };
try { if (Inst16 <= 1000 && typeof (g) != "undefined") {_RecordType("<269,270,21>",(g)); Inst16++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (baz) != "undefined") {_RecordType("<334,337,26>",(baz)); Inst19++; } } catch(e) {}
    var h = {
      fun: baz,
      f: 3
    };
try { if (Inst18 <= 1000 && typeof (h) != "undefined") {_RecordType("<317,318,25>",(h)); Inst18++; } } catch(e) {}
    var result = 0;
try { if (Inst20 <= 1000 && typeof (result) != "undefined") {_RecordType("<365,371,29>",(result)); Inst20++; } } catch(e) {}

    for (var i = 0; i < n; ++i) {
try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<391,392,31>",(i)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<398,399,31>",(i)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (n) != "undefined") {_RecordType("<402,403,31>",(n)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<407,408,31>",(i)); Inst24++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<422,423,32>",(i)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (n) != "undefined") {_RecordType("<427,428,32>",(n)); Inst26++; } } catch(e) {}
      if (i == n - 1) {
try { if (Inst28 <= 1000 && typeof (h) != "undefined") {_RecordType("<448,449,33>",(h)); Inst28++; } } catch(e) {}
        f = h;
try { if (Inst27 <= 1000 && typeof (f) != "undefined") {_RecordType("<444,445,33>",(f)); Inst27++; } } catch(e) {}
      }

try { if (Inst30 <= 1000 && typeof (f.fun) != "undefined") {_RecordType("<476,481,36>",(f.fun)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (f) != "undefined") {_RecordType("<476,477,36>",(f)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (o.f) != "undefined") {_RecordType("<482,485,36>",(o.f)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (o) != "undefined") {_RecordType("<482,483,36>",(o)); Inst33++; } } catch(e) {}
      result += f.fun(o.f);
try { if (Inst29 <= 1000 && typeof (result) != "undefined") {_RecordType("<466,472,36>",(result)); Inst29++; } } catch(e) {}
try { if (Inst35 <= 1000 && typeof (f) != "undefined") {_RecordType("<504,505,37>",(f)); Inst35++; } } catch(e) {}
      var tmp = f;
try { if (Inst34 <= 1000 && typeof (tmp) != "undefined") {_RecordType("<498,501,37>",(tmp)); Inst34++; } } catch(e) {}
try { if (Inst37 <= 1000 && typeof (g) != "undefined") {_RecordType("<517,518,38>",(g)); Inst37++; } } catch(e) {}
      f = g;
try { if (Inst36 <= 1000 && typeof (f) != "undefined") {_RecordType("<513,514,38>",(f)); Inst36++; } } catch(e) {}
try { if (Inst39 <= 1000 && typeof (tmp) != "undefined") {_RecordType("<530,533,39>",(tmp)); Inst39++; } } catch(e) {}
      g = tmp;
try { if (Inst38 <= 1000 && typeof (g) != "undefined") {_RecordType("<526,527,39>",(g)); Inst38++; } } catch(e) {}
    }

try { if (Inst40 <= 1000 && typeof (result) != "undefined") {_RecordType("<553,559,42>",(result)); Inst40++; } } catch(e) {}
    return result;
  }({
    f: 42
  });
try { if (Inst12 <= 1000 && typeof (result) != "undefined") {_RecordType("<189,195,16>",(result)); Inst12++; } } catch(e) {}

try { if (Inst41 <= 1000 && typeof (result) != "undefined") {_RecordType("<590,596,47>",(result)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (n) != "undefined") {_RecordType("<601,602,47>",(n)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (n) != "undefined") {_RecordType("<626,627,47>",(n)); Inst43++; } } catch(e) {}
  if (result != (n / 2 - 1) * (42 + 2) + (n / 2 * (1 + 1) + (42 + 1 + 3))) {
try { if (Inst44 <= 1000 && typeof (result) != "undefined") {_RecordType("<695,701,48>",(result)); Inst44++; } } catch(e) {}
    throw "Error: bad result: " + result;
  }
})();

