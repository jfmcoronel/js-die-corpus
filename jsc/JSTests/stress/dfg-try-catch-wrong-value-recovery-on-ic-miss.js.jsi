var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (assert) != "undefined") {_RecordType("<9,15,1>",(assert)); Inst0++; } } catch(e) {}
function assert(b) {
try { if (Inst1 <= 1000 && typeof (b) != "undefined") {_RecordType("<16,17,1>",(b)); Inst1++; } } catch(e) {}
  ;
}

try { if (Inst2 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<28,36,5>",(noInline)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (assert) != "undefined") {_RecordType("<37,43,5>",(assert)); Inst3++; } } catch(e) {}
noInline(assert);
try { if (Inst5 <= 1000 && typeof (f) != "undefined") {_RecordType("<95,96,11>",(f)); Inst5++; } } catch(e) {}
let oThrow = {
  x: 20,
  y: 40,
  z: 50,

  get f() {
    ;
  }

};
try { if (Inst4 <= 1000 && typeof (oThrow) != "undefined") {_RecordType("<50,56,6>",(oThrow)); Inst4++; } } catch(e) {}
let o1 = {
  x: 20,
  f: 40
};
try { if (Inst6 <= 1000 && typeof (o1) != "undefined") {_RecordType("<119,121,16>",(o1)); Inst6++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (f) != "undefined") {_RecordType("<192,193,25>",(f)); Inst8++; } } catch(e) {}
let o2 = {
  x: 20,
  y: 50,
  f: 500,

  get f() {
    return 20;
  }

};
try { if (Inst7 <= 1000 && typeof (o2) != "undefined") {_RecordType("<150,152,20>",(o2)); Inst7++; } } catch(e) {}

try { if (Inst9 <= 1000 && typeof (foo) != "undefined") {_RecordType("<231,234,31>",(foo)); Inst9++; } } catch(e) {}
function foo(f) {
try { if (Inst10 <= 1000 && typeof (f) != "undefined") {_RecordType("<235,236,31>",(f)); Inst10++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (f) != "undefined") {_RecordType("<250,251,32>",(f)); Inst12++; } } catch(e) {}
  let o = f();
try { if (Inst11 <= 1000 && typeof (o) != "undefined") {_RecordType("<246,247,32>",(o)); Inst11++; } } catch(e) {}

try { if (Inst16 <= 1000 && typeof (e) != "undefined") {_RecordType("<288,289,36>",(e)); Inst16++; } } catch(e) {}
  try {
try { if (Inst14 <= 1000 && typeof (o.f) != "undefined") {_RecordType("<272,275,35>",(o.f)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (o) != "undefined") {_RecordType("<272,273,35>",(o)); Inst15++; } } catch(e) {}
    o = o.f;
try { if (Inst13 <= 1000 && typeof (o) != "undefined") {_RecordType("<268,269,35>",(o)); Inst13++; } } catch(e) {}
  } catch (e) {
try { if (Inst17 <= 1000 && typeof (o) != "undefined") {_RecordType("<297,298,37>",(o)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (oThrow) != "undefined") {_RecordType("<303,309,37>",(oThrow)); Inst18++; } } catch(e) {}
    o === oThrow;
  }
}

try { if (Inst19 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<318,326,41>",(noInline)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (foo) != "undefined") {_RecordType("<327,330,41>",(foo)); Inst20++; } } catch(e) {}
noInline(foo);
let i;
try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<337,338,42>",(i)); Inst21++; } } catch(e) {}
let flag = false;
try { if (Inst22 <= 1000 && typeof (flag) != "undefined") {_RecordType("<344,348,43>",(flag)); Inst22++; } } catch(e) {}

try { if (Inst23 <= 1000 && typeof (f) != "undefined") {_RecordType("<368,369,45>",(f)); Inst23++; } } catch(e) {}
function f() {
try { if (Inst24 <= 1000 && typeof (flag) != "undefined") {_RecordType("<380,384,46>",(flag)); Inst24++; } } catch(e) {}
  if (flag) {
try { if (Inst25 <= 1000 && typeof (oThrow) != "undefined") {_RecordType("<399,405,47>",(oThrow)); Inst25++; } } catch(e) {}
    return oThrow;
  }

try { if (Inst26 <= 1000 && typeof (i) != "undefined") {_RecordType("<418,419,50>",(i)); Inst26++; } } catch(e) {}
  if (i % 2) {
try { if (Inst27 <= 1000 && typeof (o1) != "undefined") {_RecordType("<438,440,51>",(o1)); Inst27++; } } catch(e) {}
    return o1;
  }

try { if (Inst28 <= 1000 && typeof (o2) != "undefined") {_RecordType("<456,458,54>",(o2)); Inst28++; } } catch(e) {}
  return o2;
}

try { if (Inst29 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<463,471,57>",(noInline)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (f) != "undefined") {_RecordType("<472,473,57>",(f)); Inst30++; } } catch(e) {}
noInline(f);

for (i = 0; i < 10000; i++) {
try { if (Inst31 <= 1000 && typeof (i) != "undefined") {_RecordType("<482,483,59>",(i)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (i) != "undefined") {_RecordType("<489,490,59>",(i)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (i) != "undefined") {_RecordType("<500,501,59>",(i)); Inst33++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof (foo) != "undefined") {_RecordType("<509,512,60>",(foo)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (f) != "undefined") {_RecordType("<513,514,60>",(f)); Inst35++; } } catch(e) {}
  foo(f);
}

flag = true;
try { if (Inst36 <= 1000 && typeof (flag) != "undefined") {_RecordType("<520,524,63>",(flag)); Inst36++; } } catch(e) {}
try { if (Inst37 <= 1000 && typeof (foo) != "undefined") {_RecordType("<533,536,64>",(foo)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (f) != "undefined") {_RecordType("<537,538,64>",(f)); Inst38++; } } catch(e) {}
foo(f);

