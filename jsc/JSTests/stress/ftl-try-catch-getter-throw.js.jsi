var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (assert) != "undefined") {_RecordType("<9,15,1>",(assert)); Inst0++; } } catch(e) {}
function assert(b) {
try { if (Inst1 <= 1000 && typeof (b) != "undefined") {_RecordType("<16,17,1>",(b)); Inst1++; } } catch(e) {}
  ;
}

try { if (Inst2 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<28,36,5>",(noInline)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (assert) != "undefined") {_RecordType("<37,43,5>",(assert)); Inst3++; } } catch(e) {}
noInline(assert);

try { if (Inst4 <= 1000 && typeof (random) != "undefined") {_RecordType("<56,62,7>",(random)); Inst4++; } } catch(e) {}
function random() {
  return "blah";
}

try { if (Inst5 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<87,95,11>",(noInline)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (random) != "undefined") {_RecordType("<96,102,11>",(random)); Inst6++; } } catch(e) {}
noInline(random);

try { if (Inst7 <= 1000 && typeof (foo) != "undefined") {_RecordType("<115,118,13>",(foo)); Inst7++; } } catch(e) {}
function foo(o, a) {
try { if (Inst8 <= 1000 && typeof (o) != "undefined") {_RecordType("<119,120,13>",(o)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (a) != "undefined") {_RecordType("<122,123,13>",(a)); Inst9++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (o.g) != "undefined") {_RecordType("<137,140,14>",(o.g)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (o) != "undefined") {_RecordType("<137,138,14>",(o)); Inst12++; } } catch(e) {}
  let x = o.g;
try { if (Inst10 <= 1000 && typeof (x) != "undefined") {_RecordType("<133,134,14>",(x)); Inst10++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (o.y) != "undefined") {_RecordType("<152,155,15>",(o.y)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (o) != "undefined") {_RecordType("<152,153,15>",(o)); Inst15++; } } catch(e) {}
  let y = o.y;
try { if (Inst13 <= 1000 && typeof (y) != "undefined") {_RecordType("<148,149,15>",(y)); Inst13++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (random) != "undefined") {_RecordType("<167,173,16>",(random)); Inst17++; } } catch(e) {}
  let j = random();
try { if (Inst16 <= 1000 && typeof (j) != "undefined") {_RecordType("<163,164,16>",(j)); Inst16++; } } catch(e) {}

try { if (Inst21 <= 1000 && typeof (e) != "undefined") {_RecordType("<210,211,20>",(e)); Inst21++; } } catch(e) {}
  try {
try { if (Inst19 <= 1000 && typeof (o.f) != "undefined") {_RecordType("<194,197,19>",(o.f)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (o) != "undefined") {_RecordType("<194,195,19>",(o)); Inst20++; } } catch(e) {}
    j = o.f;
try { if (Inst18 <= 1000 && typeof (j) != "undefined") {_RecordType("<190,191,19>",(j)); Inst18++; } } catch(e) {}
  } catch (e) {
try { if (Inst22 <= 1000 && typeof (j) != "undefined") {_RecordType("<219,220,21>",(j)); Inst22++; } } catch(e) {}
    j === "blah";
try { if (Inst23 <= 1000 && typeof (x) != "undefined") {_RecordType("<244,245,22>",(x)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (y) != "undefined") {_RecordType("<248,249,22>",(y)); Inst24++; } } catch(e) {}
    return x + y + 1;
  }

try { if (Inst25 <= 1000 && typeof (x) != "undefined") {_RecordType("<269,270,25>",(x)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (y) != "undefined") {_RecordType("<273,274,25>",(y)); Inst26++; } } catch(e) {}
  return x + y;
}

try { if (Inst27 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<279,287,28>",(noInline)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (foo) != "undefined") {_RecordType("<288,291,28>",(foo)); Inst28++; } } catch(e) {}
noInline(foo);
var flag = false;
try { if (Inst29 <= 1000 && typeof (flag) != "undefined") {_RecordType("<298,302,29>",(flag)); Inst29++; } } catch(e) {}

try { if (Inst30 <= 1000 && typeof (f) != "undefined") {_RecordType("<322,323,31>",(f)); Inst30++; } } catch(e) {}
function f(arg1, arg2, arg3) {
try { if (Inst31 <= 1000 && typeof (arg1) != "undefined") {_RecordType("<324,328,31>",(arg1)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (arg2) != "undefined") {_RecordType("<330,334,31>",(arg2)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (arg3) != "undefined") {_RecordType("<336,340,31>",(arg3)); Inst33++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof (flag) != "undefined") {_RecordType("<350,354,32>",(flag)); Inst34++; } } catch(e) {}
  if (flag) {
    ;
  }

try { if (Inst35 <= 1000 && typeof (arg1) != "undefined") {_RecordType("<378,382,36>",(arg1)); Inst35++; } } catch(e) {}
  return arg1;
}

try { if (Inst36 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<387,395,39>",(noInline)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (f) != "undefined") {_RecordType("<396,397,39>",(f)); Inst37++; } } catch(e) {}
noInline(f);
let o1 = {
  g: 20,
  y: 40,
  f: "get f"
};
try { if (Inst38 <= 1000 && typeof (o1) != "undefined") {_RecordType("<404,406,40>",(o1)); Inst38++; } } catch(e) {}
try { if (Inst40 <= 1000 && typeof (f) != "undefined") {_RecordType("<483,484,49>",(f)); Inst40++; } } catch(e) {}
let o2 = {
  g: "g",
  y: "y",

  get f() {
try { if (Inst41 <= 1000 && typeof (flag) != "undefined") {_RecordType("<497,501,50>",(flag)); Inst41++; } } catch(e) {}
    if (flag) {
      ;
    }

    return "get f";
  }

};
try { if (Inst39 <= 1000 && typeof (o2) != "undefined") {_RecordType("<449,451,45>",(o2)); Inst39++; } } catch(e) {}

for (let i = 0; i < 100000; i++) {
try { if (Inst42 <= 1000 && typeof (i) != "undefined") {_RecordType("<558,559,59>",(i)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (i) != "undefined") {_RecordType("<565,566,59>",(i)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (i) != "undefined") {_RecordType("<577,578,59>",(i)); Inst44++; } } catch(e) {}
try { if (Inst45 <= 1000 && typeof (i) != "undefined") {_RecordType("<590,591,60>",(i)); Inst45++; } } catch(e) {}
  if (i % 2) {
try { if (Inst46 <= 1000 && typeof (foo) != "undefined") {_RecordType("<603,606,61>",(foo)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (o1) != "undefined") {_RecordType("<607,609,61>",(o1)); Inst47++; } } catch(e) {}
    foo(o1) === 60;
  } else {
try { if (Inst48 <= 1000 && typeof (foo) != "undefined") {_RecordType("<634,637,63>",(foo)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (o2) != "undefined") {_RecordType("<638,640,63>",(o2)); Inst49++; } } catch(e) {}
    foo(o2) === "gy";
  }
}

flag = true;
try { if (Inst50 <= 1000 && typeof (flag) != "undefined") {_RecordType("<659,663,67>",(flag)); Inst50++; } } catch(e) {}
try { if (Inst51 <= 1000 && typeof (foo) != "undefined") {_RecordType("<672,675,68>",(foo)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (o2) != "undefined") {_RecordType("<676,678,68>",(o2)); Inst52++; } } catch(e) {}
foo(o2) === "gy1";

