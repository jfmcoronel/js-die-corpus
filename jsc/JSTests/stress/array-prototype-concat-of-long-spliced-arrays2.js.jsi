var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (shouldEqual) != "undefined") {_RecordType("<9,20,1>",(shouldEqual)); Inst0++; } } catch(e) {}
function shouldEqual(actual, expected) {
try { if (Inst1 <= 1000 && typeof (actual) != "undefined") {_RecordType("<21,27,1>",(actual)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (expected) != "undefined") {_RecordType("<29,37,1>",(expected)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (actual) != "undefined") {_RecordType("<47,53,2>",(actual)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (expected) != "undefined") {_RecordType("<57,65,2>",(expected)); Inst4++; } } catch(e) {}
  if (actual != expected) {
try { if (Inst5 <= 1000 && typeof (expected) != "undefined") {_RecordType("<98,106,3>",(expected)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (actual) != "undefined") {_RecordType("<123,129,3>",(actual)); Inst6++; } } catch(e) {}
    throw "ERROR: expect " + expected + ", actual " + actual;
  }
}

try { if (Inst7 <= 1000 && typeof (test) != "undefined") {_RecordType("<147,151,7>",(test)); Inst7++; } } catch(e) {}
function test() {
  var exception;
try { if (Inst8 <= 1000 && typeof (exception) != "undefined") {_RecordType("<162,171,8>",(exception)); Inst8++; } } catch(e) {}

try { if (Inst26 <= 1000 && typeof (e) != "undefined") {_RecordType("<381,382,19>",(e)); Inst26++; } } catch(e) {}
  try {
    var a = [];
try { if (Inst9 <= 1000 && typeof (a) != "undefined") {_RecordType("<190,191,11>",(a)); Inst9++; } } catch(e) {}
    a.length = 0xffffff00;
try { if (Inst10 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<202,210,12>",(a.length)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (a) != "undefined") {_RecordType("<202,203,12>",(a)); Inst11++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (a.splice) != "undefined") {_RecordType("<237,245,13>",(a.splice)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (a) != "undefined") {_RecordType("<237,238,13>",(a)); Inst14++; } } catch(e) {}
    var b = a.splice(0, 0x100000); // Undecided array
try { if (Inst12 <= 1000 && typeof (b) != "undefined") {_RecordType("<233,234,13>",(b)); Inst12++; } } catch(e) {}

    var args = [];
try { if (Inst15 <= 1000 && typeof (args) != "undefined") {_RecordType("<288,292,15>",(args)); Inst15++; } } catch(e) {}
    args.length = 4096;
try { if (Inst16 <= 1000 && typeof (args.length) != "undefined") {_RecordType("<303,314,16>",(args.length)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (args) != "undefined") {_RecordType("<303,307,16>",(args)); Inst17++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (args.fill) != "undefined") {_RecordType("<327,336,17>",(args.fill)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (args) != "undefined") {_RecordType("<327,331,17>",(args)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (b) != "undefined") {_RecordType("<337,338,17>",(b)); Inst20++; } } catch(e) {}
    args.fill(b);
try { if (Inst21 <= 1000 && typeof (b.concat.apply) != "undefined") {_RecordType("<345,359,18>",(b.concat.apply)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (b.concat) != "undefined") {_RecordType("<345,353,18>",(b.concat)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (b) != "undefined") {_RecordType("<345,346,18>",(b)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (b) != "undefined") {_RecordType("<360,361,18>",(b)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (args) != "undefined") {_RecordType("<363,367,18>",(args)); Inst25++; } } catch(e) {}
    b.concat.apply(b, args);
  } catch (e) {
try { if (Inst28 <= 1000 && typeof (e) != "undefined") {_RecordType("<402,403,20>",(e)); Inst28++; } } catch(e) {}
    exception = e;
try { if (Inst27 <= 1000 && typeof (exception) != "undefined") {_RecordType("<390,399,20>",(exception)); Inst27++; } } catch(e) {}
  }

try { if (Inst29 <= 1000 && typeof (shouldEqual) != "undefined") {_RecordType("<412,423,23>",(shouldEqual)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (exception) != "undefined") {_RecordType("<424,433,23>",(exception)); Inst30++; } } catch(e) {}
  shouldEqual(exception, "RangeError: Length exceeded the maximum array length");
}

try { if (Inst31 <= 1000 && typeof (test) != "undefined") {_RecordType("<495,499,26>",(test)); Inst31++; } } catch(e) {}
test();

