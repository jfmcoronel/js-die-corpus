var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (assert) != "undefined") {_RecordType("<9,15,1>",(assert)); Inst0++; } } catch(e) {}
function assert(b) {
try { if (Inst1 <= 1000 && typeof (b) != "undefined") {_RecordType("<16,17,1>",(b)); Inst1++; } } catch(e) {}
  ;
}

try { if (Inst2 <= 1000 && typeof (makePolyProtoObject) != "undefined") {_RecordType("<37,56,5>",(makePolyProtoObject)); Inst2++; } } catch(e) {}
function makePolyProtoObject() {
try { if (Inst3 <= 1000 && typeof (foo) != "undefined") {_RecordType("<72,75,6>",(foo)); Inst3++; } } catch(e) {}
  function foo() {
    class C {
      constructor() {
        this._field = 42;
try { if (Inst5 <= 1000 && typeof (this._field) != "undefined") {_RecordType("<124,135,9>",(this._field)); Inst5++; } } catch(e) {}
      }

    }
try { if (Inst4 <= 1000 && typeof (C) != "undefined") {_RecordType("<90,91,7>",(C)); Inst4++; } } catch(e) {}

    ;
try { if (Inst6 <= 1000 && typeof (C) != "undefined") {_RecordType("<179,180,15>",(C)); Inst6++; } } catch(e) {}
    return new C();
  }

  for (let i = 0; i < 15; ++i) {
try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<200,201,18>",(i)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<207,208,18>",(i)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<217,218,18>",(i)); Inst9++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (foo) != "undefined") {_RecordType("<226,229,19>",(foo)); Inst10++; } } catch(e) {}
    foo();
  }

try { if (Inst11 <= 1000 && typeof (foo) != "undefined") {_RecordType("<247,250,22>",(foo)); Inst11++; } } catch(e) {}
  return foo();
}

try { if (Inst13 <= 1000 && typeof (Uint32Array) != "undefined") {_RecordType("<269,280,25>",(Uint32Array)); Inst13++; } } catch(e) {}
let x = new Uint32Array(10);
try { if (Inst12 <= 1000 && typeof (x) != "undefined") {_RecordType("<261,262,25>",(x)); Inst12++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (x.__proto__.__proto__) != "undefined") {_RecordType("<294,315,26>",(x.__proto__.__proto__)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (x.__proto__) != "undefined") {_RecordType("<294,305,26>",(x.__proto__)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (x) != "undefined") {_RecordType("<294,295,26>",(x)); Inst17++; } } catch(e) {}
let p = x.__proto__.__proto__;
try { if (Inst14 <= 1000 && typeof (p) != "undefined") {_RecordType("<290,291,26>",(p)); Inst14++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (makePolyProtoObject) != "undefined") {_RecordType("<327,346,27>",(makePolyProtoObject)); Inst19++; } } catch(e) {}
let obj = makePolyProtoObject();
try { if (Inst18 <= 1000 && typeof (obj) != "undefined") {_RecordType("<321,324,27>",(obj)); Inst18++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (p) != "undefined") {_RecordType("<366,367,28>",(p)); Inst22++; } } catch(e) {}
obj.__proto__ = p;
try { if (Inst20 <= 1000 && typeof (obj.__proto__) != "undefined") {_RecordType("<350,363,28>",(obj.__proto__)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (obj) != "undefined") {_RecordType("<350,353,28>",(obj)); Inst21++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (obj) != "undefined") {_RecordType("<383,386,29>",(obj)); Inst25++; } } catch(e) {}
x.__proto__ = obj;
try { if (Inst23 <= 1000 && typeof (x.__proto__) != "undefined") {_RecordType("<369,380,29>",(x.__proto__)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (x) != "undefined") {_RecordType("<369,370,29>",(x)); Inst24++; } } catch(e) {}

try { if (Inst26 <= 1000 && typeof (foo) != "undefined") {_RecordType("<398,401,31>",(foo)); Inst26++; } } catch(e) {}
function foo(x) {
try { if (Inst27 <= 1000 && typeof (x) != "undefined") {_RecordType("<402,403,31>",(x)); Inst27++; } } catch(e) {}
try { if (Inst28 <= 1000 && typeof (x.byteLength) != "undefined") {_RecordType("<416,428,32>",(x.byteLength)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (x) != "undefined") {_RecordType("<416,417,32>",(x)); Inst29++; } } catch(e) {}
  return x.byteLength;
}

try { if (Inst30 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<433,441,35>",(noInline)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (foo) != "undefined") {_RecordType("<442,445,35>",(foo)); Inst31++; } } catch(e) {}
noInline(foo);

for (let i = 0; i < 1000; ++i) {
try { if (Inst32 <= 1000 && typeof (i) != "undefined") {_RecordType("<458,459,37>",(i)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (i) != "undefined") {_RecordType("<465,466,37>",(i)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (i) != "undefined") {_RecordType("<477,478,37>",(i)); Inst34++; } } catch(e) {}
try { if (Inst35 <= 1000 && typeof (foo) != "undefined") {_RecordType("<484,487,38>",(foo)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (x) != "undefined") {_RecordType("<488,489,38>",(x)); Inst36++; } } catch(e) {}
  foo(x) === 10 * 4;
}

;
obj.__proto__ = {};
try { if (Inst37 <= 1000 && typeof (obj.__proto__) != "undefined") {_RecordType("<508,521,42>",(obj.__proto__)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (obj) != "undefined") {_RecordType("<508,511,42>",(obj)); Inst38++; } } catch(e) {}
try { if (Inst39 <= 1000 && typeof (foo) != "undefined") {_RecordType("<528,531,43>",(foo)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (x) != "undefined") {_RecordType("<532,533,43>",(x)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<539,548,43>",(undefined)); Inst41++; } } catch(e) {}
foo(x) === undefined;

