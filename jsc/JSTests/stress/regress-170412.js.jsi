var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// This test passes if it does not crash.
try { if (Inst1 <= 1000 && typeof (Array) != "undefined") {_RecordType("<52,57,2>",(Array)); Inst1++; } } catch(e) {}
arr = new Array();
try { if (Inst0 <= 1000 && typeof (arr) != "undefined") {_RecordType("<42,45,2>",(arr)); Inst0++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<61,82,3>",(Object.defineProperty)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Object) != "undefined") {_RecordType("<61,67,3>",(Object)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (arr) != "undefined") {_RecordType("<83,86,3>",(arr)); Inst4++; } } catch(e) {}
Object.defineProperty(arr, 18, {
  writable: true,
  configurable: true
});

for (var i = 0; i < 3; ++i) {
try { if (Inst5 <= 1000 && typeof (i) != "undefined") {_RecordType("<147,148,8>",(i)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<154,155,8>",(i)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<163,164,8>",(i)); Inst7++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (Array.prototype.push.apply) != "undefined") {_RecordType("<170,196,9>",(Array.prototype.push.apply)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Array.prototype.push) != "undefined") {_RecordType("<170,190,9>",(Array.prototype.push)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<170,185,9>",(Array.prototype)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Array) != "undefined") {_RecordType("<170,175,9>",(Array)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (arr) != "undefined") {_RecordType("<197,200,9>",(arr)); Inst12++; } } catch(e) {}
  Array.prototype.push.apply(arr, ["", () => {
    ;
  }, {}]);
try { if (Inst13 <= 1000 && typeof (Array.prototype.sort.apply) != "undefined") {_RecordType("<234,260,12>",(Array.prototype.sort.apply)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Array.prototype.sort) != "undefined") {_RecordType("<234,254,12>",(Array.prototype.sort)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<234,249,12>",(Array.prototype)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Array) != "undefined") {_RecordType("<234,239,12>",(Array)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (arr) != "undefined") {_RecordType("<261,264,12>",(arr)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (edenGC) != "undefined") {_RecordType("<267,273,12>",(edenGC)); Inst18++; } } catch(e) {}
  Array.prototype.sort.apply(arr, [edenGC, []]);
}

