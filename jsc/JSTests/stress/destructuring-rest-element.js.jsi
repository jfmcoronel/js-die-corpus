var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
var Inst102 = 0;
var Inst103 = 0;
var Inst104 = 0;
var Inst105 = 0;
var Inst106 = 0;
var Inst107 = 0;
var Inst108 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (assert) != "undefined") {_RecordType("<9,15,1>",(assert)); Inst0++; } } catch(e) {}
function assert(b) {
try { if (Inst1 <= 1000 && typeof (b) != "undefined") {_RecordType("<16,17,1>",(b)); Inst1++; } } catch(e) {}
  ;
}

try { if (Inst2 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<28,36,5>",(noInline)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (assert) != "undefined") {_RecordType("<37,43,5>",(assert)); Inst3++; } } catch(e) {}
noInline(assert);

try { if (Inst4 <= 1000 && typeof (test) != "undefined") {_RecordType("<56,60,7>",(test)); Inst4++; } } catch(e) {}
function test(f, count = 1000) {
try { if (Inst5 <= 1000 && typeof (f) != "undefined") {_RecordType("<61,62,7>",(f)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (count) != "undefined") {_RecordType("<64,69,7>",(count)); Inst6++; } } catch(e) {}
  for (let i = 0; i < count; i++) {
try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<91,92,8>",(i)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<98,99,8>",(i)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (count) != "undefined") {_RecordType("<102,107,8>",(count)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<109,110,8>",(i)); Inst10++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (f) != "undefined") {_RecordType("<120,121,9>",(f)); Inst11++; } } catch(e) {}
    f();
  }
}

try { if (Inst12 <= 1000 && typeof (arr) != "undefined") {_RecordType("<141,144,13>",(arr)); Inst12++; } } catch(e) {}
function arr() {
  return [10, 20, 30, 40];
}

try { if (Inst13 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<179,187,17>",(noInline)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (arr) != "undefined") {_RecordType("<188,191,17>",(arr)); Inst14++; } } catch(e) {}
noInline(arr);
let o = {};
try { if (Inst15 <= 1000 && typeof (o) != "undefined") {_RecordType("<198,199,18>",(o)); Inst15++; } } catch(e) {}

try { if (Inst16 <= 1000 && typeof (arr2) != "undefined") {_RecordType("<216,220,20>",(arr2)); Inst16++; } } catch(e) {}
function arr2() {
try { if (Inst17 <= 1000 && typeof (o) != "undefined") {_RecordType("<256,257,21>",(o)); Inst17++; } } catch(e) {}
  return [10, 20, 30, [40, 50, o]];
}

try { if (Inst18 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<264,272,24>",(noInline)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (arr) != "undefined") {_RecordType("<273,276,24>",(arr)); Inst19++; } } catch(e) {}
noInline(arr);

try { if (Inst20 <= 1000 && typeof (eq) != "undefined") {_RecordType("<289,291,26>",(eq)); Inst20++; } } catch(e) {}
function eq(a, b) {
try { if (Inst21 <= 1000 && typeof (a) != "undefined") {_RecordType("<292,293,26>",(a)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (b) != "undefined") {_RecordType("<295,296,26>",(b)); Inst22++; } } catch(e) {}
  // This only works for arrays with nested arrays in them, and numbers or anything else strict equal to each other. 
try { if (Inst23 <= 1000 && typeof (a) != "undefined") {_RecordType("<426,427,28>",(a)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (Array) != "undefined") {_RecordType("<439,444,28>",(Array)); Inst24++; } } catch(e) {}
  if (!(a instanceof Array)) {
try { if (Inst25 <= 1000 && typeof (a) != "undefined") {_RecordType("<460,461,29>",(a)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (b) != "undefined") {_RecordType("<466,467,29>",(b)); Inst26++; } } catch(e) {}
    return a === b;
  }

try { if (Inst27 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<480,488,32>",(a.length)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (a) != "undefined") {_RecordType("<480,481,32>",(a)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (b.length) != "undefined") {_RecordType("<493,501,32>",(b.length)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (b) != "undefined") {_RecordType("<493,494,32>",(b)); Inst30++; } } catch(e) {}
  if (a.length !== b.length) {
    return false;
  }

  for (let i = 0; i < a.length; i++) {
try { if (Inst31 <= 1000 && typeof (i) != "undefined") {_RecordType("<539,540,36>",(i)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (i) != "undefined") {_RecordType("<546,547,36>",(i)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<550,558,36>",(a.length)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (a) != "undefined") {_RecordType("<550,551,36>",(a)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (i) != "undefined") {_RecordType("<560,561,36>",(i)); Inst35++; } } catch(e) {}
try { if (Inst37 <= 1000 && typeof (a[i]) != "undefined") {_RecordType("<580,584,37>",(a[i])); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (a) != "undefined") {_RecordType("<580,581,37>",(a)); Inst38++; } } catch(e) {}
    let e1 = a[i];
try { if (Inst36 <= 1000 && typeof (e1) != "undefined") {_RecordType("<575,577,37>",(e1)); Inst36++; } } catch(e) {}
try { if (Inst40 <= 1000 && typeof (b[i]) != "undefined") {_RecordType("<599,603,38>",(b[i])); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (b) != "undefined") {_RecordType("<599,600,38>",(b)); Inst41++; } } catch(e) {}
    let e2 = b[i];
try { if (Inst39 <= 1000 && typeof (e2) != "undefined") {_RecordType("<594,596,38>",(e2)); Inst39++; } } catch(e) {}

try { if (Inst42 <= 1000 && typeof (eq) != "undefined") {_RecordType("<615,617,40>",(eq)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (e1) != "undefined") {_RecordType("<618,620,40>",(e1)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (e2) != "undefined") {_RecordType("<622,624,40>",(e2)); Inst44++; } } catch(e) {}
    if (!eq(e1, e2)) {
      return false;
    }
  }

  return true;
}

try { if (Inst45 <= 1000 && typeof (test) != "undefined") {_RecordType("<678,682,48>",(test)); Inst45++; } } catch(e) {}
test(function () {
try { if (Inst47 <= 1000 && typeof (arr) != "undefined") {_RecordType("<717,720,49>",(arr)); Inst47++; } } catch(e) {}
  let [...[...x]] = arr();
try { if (Inst46 <= 1000 && typeof (x) != "undefined") {_RecordType("<711,712,49>",(x)); Inst46++; } } catch(e) {}
try { if (Inst48 <= 1000 && typeof (eq) != "undefined") {_RecordType("<726,728,50>",(eq)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (x) != "undefined") {_RecordType("<729,730,50>",(x)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (arr) != "undefined") {_RecordType("<732,735,50>",(arr)); Inst50++; } } catch(e) {}
  eq(x, arr());
});
try { if (Inst51 <= 1000 && typeof (test) != "undefined") {_RecordType("<744,748,52>",(test)); Inst51++; } } catch(e) {}
test(function () {
try { if (Inst53 <= 1000 && typeof (arr2) != "undefined") {_RecordType("<784,788,53>",(arr2)); Inst53++; } } catch(e) {}
  let [,,, [...e]] = arr2();
try { if (Inst52 <= 1000 && typeof (e) != "undefined") {_RecordType("<778,779,53>",(e)); Inst52++; } } catch(e) {}
try { if (Inst54 <= 1000 && typeof (eq) != "undefined") {_RecordType("<794,796,54>",(eq)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (e) != "undefined") {_RecordType("<797,798,54>",(e)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (o) != "undefined") {_RecordType("<809,810,54>",(o)); Inst56++; } } catch(e) {}
  eq(e, [40, 50, o]);
});
try { if (Inst57 <= 1000 && typeof (test) != "undefined") {_RecordType("<818,822,56>",(test)); Inst57++; } } catch(e) {}
test(function () {
try { if (Inst59 <= 1000 && typeof (arr2) != "undefined") {_RecordType("<856,860,57>",(arr2)); Inst59++; } } catch(e) {}
  let [,,, ...e] = arr2();
try { if (Inst58 <= 1000 && typeof (e) != "undefined") {_RecordType("<851,852,57>",(e)); Inst58++; } } catch(e) {}
try { if (Inst60 <= 1000 && typeof (eq) != "undefined") {_RecordType("<866,868,58>",(eq)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (e[0]) != "undefined") {_RecordType("<869,873,58>",(e[0])); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (e) != "undefined") {_RecordType("<869,870,58>",(e)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (o) != "undefined") {_RecordType("<884,885,58>",(o)); Inst63++; } } catch(e) {}
  eq(e[0], [40, 50, o]);
});
try { if (Inst64 <= 1000 && typeof (test) != "undefined") {_RecordType("<893,897,60>",(test)); Inst64++; } } catch(e) {}
test(function () {
try { if (Inst66 <= 1000 && typeof (arr2) != "undefined") {_RecordType("<931,935,61>",(arr2)); Inst66++; } } catch(e) {}
  let [,,, ...e] = arr2();
try { if (Inst65 <= 1000 && typeof (e) != "undefined") {_RecordType("<926,927,61>",(e)); Inst65++; } } catch(e) {}
try { if (Inst67 <= 1000 && typeof (eq) != "undefined") {_RecordType("<941,943,62>",(eq)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (e[0]) != "undefined") {_RecordType("<944,948,62>",(e[0])); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (e) != "undefined") {_RecordType("<944,945,62>",(e)); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (o) != "undefined") {_RecordType("<959,960,62>",(o)); Inst70++; } } catch(e) {}
  eq(e[0], [40, 50, o]);
});

try { if (Inst71 <= 1000 && typeof (genn) != "undefined") {_RecordType("<979,983,65>",(genn)); Inst71++; } } catch(e) {}
function* genn() {
  yield [1, 2, 3];
  yield 20;
  yield 30;
  yield 40;
}

try { if (Inst72 <= 1000 && typeof (test) != "undefined") {_RecordType("<1046,1050,72>",(test)); Inst72++; } } catch(e) {}
test(function () {
try { if (Inst76 <= 1000 && typeof (genn) != "undefined") {_RecordType("<1091,1095,73>",(genn)); Inst76++; } } catch(e) {}
  let [a, b, ...[...c]] = genn();
try { if (Inst73 <= 1000 && typeof (a) != "undefined") {_RecordType("<1072,1073,73>",(a)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (b) != "undefined") {_RecordType("<1075,1076,73>",(b)); Inst74++; } } catch(e) {}try { if (Inst75 <= 1000 && typeof (c) != "undefined") {_RecordType("<1085,1086,73>",(c)); Inst75++; } } catch(e) {}
try { if (Inst77 <= 1000 && typeof (eq) != "undefined") {_RecordType("<1101,1103,74>",(eq)); Inst77++; } } catch(e) {}try { if (Inst78 <= 1000 && typeof (a) != "undefined") {_RecordType("<1104,1105,74>",(a)); Inst78++; } } catch(e) {}
  eq(a, [1, 2, 3]);
try { if (Inst79 <= 1000 && typeof (b) != "undefined") {_RecordType("<1121,1122,75>",(b)); Inst79++; } } catch(e) {}
  b === 20;
try { if (Inst80 <= 1000 && typeof (eq) != "undefined") {_RecordType("<1133,1135,76>",(eq)); Inst80++; } } catch(e) {}try { if (Inst81 <= 1000 && typeof (c) != "undefined") {_RecordType("<1136,1137,76>",(c)); Inst81++; } } catch(e) {}
  eq(c, [30, 40]);
});
try { if (Inst82 <= 1000 && typeof (test) != "undefined") {_RecordType("<1154,1158,78>",(test)); Inst82++; } } catch(e) {}
test(function () {
try { if (Inst87 <= 1000 && typeof (genn) != "undefined") {_RecordType("<1207,1211,79>",(genn)); Inst87++; } } catch(e) {}
  let [[a, ...d], b, ...[...c]] = genn();
try { if (Inst83 <= 1000 && typeof (a) != "undefined") {_RecordType("<1181,1182,79>",(a)); Inst83++; } } catch(e) {}try { if (Inst84 <= 1000 && typeof (d) != "undefined") {_RecordType("<1187,1188,79>",(d)); Inst84++; } } catch(e) {}try { if (Inst85 <= 1000 && typeof (b) != "undefined") {_RecordType("<1191,1192,79>",(b)); Inst85++; } } catch(e) {}try { if (Inst86 <= 1000 && typeof (c) != "undefined") {_RecordType("<1201,1202,79>",(c)); Inst86++; } } catch(e) {}
try { if (Inst88 <= 1000 && typeof (a) != "undefined") {_RecordType("<1217,1218,80>",(a)); Inst88++; } } catch(e) {}
  a === 1;
try { if (Inst89 <= 1000 && typeof (eq) != "undefined") {_RecordType("<1228,1230,81>",(eq)); Inst89++; } } catch(e) {}try { if (Inst90 <= 1000 && typeof (d) != "undefined") {_RecordType("<1231,1232,81>",(d)); Inst90++; } } catch(e) {}
  eq(d, [2, 3]);
try { if (Inst91 <= 1000 && typeof (b) != "undefined") {_RecordType("<1245,1246,82>",(b)); Inst91++; } } catch(e) {}
  b === 20;
try { if (Inst92 <= 1000 && typeof (eq) != "undefined") {_RecordType("<1257,1259,83>",(eq)); Inst92++; } } catch(e) {}try { if (Inst93 <= 1000 && typeof (c) != "undefined") {_RecordType("<1260,1261,83>",(c)); Inst93++; } } catch(e) {}
  eq(c, [30, 40]);
});
let called = false;
try { if (Inst94 <= 1000 && typeof (called) != "undefined") {_RecordType("<1282,1288,85>",(called)); Inst94++; } } catch(e) {}

try { if (Inst95 <= 1000 && typeof (fakeGen) != "undefined") {_RecordType("<1308,1315,87>",(fakeGen)); Inst95++; } } catch(e) {}
function fakeGen() {
  return {
    [Symbol.iterator]: function () {
      let count = 0;
try { if (Inst96 <= 1000 && typeof (count) != "undefined") {_RecordType("<1378,1383,90>",(count)); Inst96++; } } catch(e) {}
try { if (Inst97 <= 1000 && typeof (next) != "undefined") {_RecordType("<1412,1416,92>",(next)); Inst97++; } } catch(e) {}
      return {
        next() {
          called = true;
try { if (Inst98 <= 1000 && typeof (called) != "undefined") {_RecordType("<1431,1437,93>",(called)); Inst98++; } } catch(e) {}
try { if (Inst99 <= 1000 && typeof (count) != "undefined") {_RecordType("<1456,1461,94>",(count)); Inst99++; } } catch(e) {}
          count++;

try { if (Inst100 <= 1000 && typeof (count) != "undefined") {_RecordType("<1480,1485,96>",(count)); Inst100++; } } catch(e) {}
          if (count === 1) {
            return {
              done: false,
              value: 50
            };
          }

          return {
            done: true
          };
        }

      };
    }
  };
}

try { if (Inst101 <= 1000 && typeof (test) != "undefined") {_RecordType("<1684,1688,113>",(test)); Inst101++; } } catch(e) {}
test(function () {
  called = false;
try { if (Inst102 <= 1000 && typeof (called) != "undefined") {_RecordType("<1705,1711,114>",(called)); Inst102++; } } catch(e) {}
try { if (Inst104 <= 1000 && typeof (fakeGen) != "undefined") {_RecordType("<1736,1743,115>",(fakeGen)); Inst104++; } } catch(e) {}
  let [...x] = fakeGen();
try { if (Inst103 <= 1000 && typeof (x) != "undefined") {_RecordType("<1731,1732,115>",(x)); Inst103++; } } catch(e) {}
try { if (Inst105 <= 1000 && typeof (eq) != "undefined") {_RecordType("<1749,1751,116>",(eq)); Inst105++; } } catch(e) {}try { if (Inst106 <= 1000 && typeof (x) != "undefined") {_RecordType("<1752,1753,116>",(x)); Inst106++; } } catch(e) {}
  eq(x, [50]);
try { if (Inst107 <= 1000 && typeof (called) != "undefined") {_RecordType("<1764,1770,117>",(called)); Inst107++; } } catch(e) {}
  called;
  called = false;
try { if (Inst108 <= 1000 && typeof (called) != "undefined") {_RecordType("<1774,1780,118>",(called)); Inst108++; } } catch(e) {}
});

