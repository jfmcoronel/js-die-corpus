var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (sumOfArithSeries) != "undefined") {_RecordType("<9,25,1>",(sumOfArithSeries)); Inst0++; } } catch(e) {}
function sumOfArithSeries(limit) {
try { if (Inst1 <= 1000 && typeof (limit) != "undefined") {_RecordType("<26,31,1>",(limit)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (limit) != "undefined") {_RecordType("<44,49,2>",(limit)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (limit) != "undefined") {_RecordType("<53,58,2>",(limit)); Inst3++; } } catch(e) {}
  return limit * (limit + 1) / 2;
}

var n = 10000000;
try { if (Inst4 <= 1000 && typeof (n) != "undefined") {_RecordType("<76,77,5>",(n)); Inst4++; } } catch(e) {}

try { if (Inst5 <= 1000 && typeof (bar) != "undefined") {_RecordType("<100,103,7>",(bar)); Inst5++; } } catch(e) {}
function bar() {
  ;
}

try { if (Inst6 <= 1000 && typeof (verify) != "undefined") {_RecordType("<124,130,11>",(verify)); Inst6++; } } catch(e) {}
function verify(q, i) {
try { if (Inst7 <= 1000 && typeof (q) != "undefined") {_RecordType("<131,132,11>",(q)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<134,135,11>",(i)); Inst8++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (q.f) != "undefined") {_RecordType("<145,148,12>",(q.f)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (q) != "undefined") {_RecordType("<145,146,12>",(q)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (q.g) != "undefined") {_RecordType("<152,155,12>",(q.g)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (q) != "undefined") {_RecordType("<152,153,12>",(q)); Inst12++; } } catch(e) {}
  if (q.f == q.g) {
    throw "Error: q.f == q.g";
  }

try { if (Inst13 <= 1000 && typeof (q.f.f) != "undefined") {_RecordType("<201,206,16>",(q.f.f)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (q.f) != "undefined") {_RecordType("<201,204,16>",(q.f)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (q) != "undefined") {_RecordType("<201,202,16>",(q)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (q.g.f) != "undefined") {_RecordType("<210,215,16>",(q.g.f)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (q.g) != "undefined") {_RecordType("<210,213,16>",(q.g)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (q) != "undefined") {_RecordType("<210,211,16>",(q)); Inst18++; } } catch(e) {}
  if (q.f.f != q.g.f) {
    throw "Error: q.f.f != q.g.f";
  }

try { if (Inst19 <= 1000 && typeof (q.f.f.f) != "undefined") {_RecordType("<265,272,20>",(q.f.f.f)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (q.f.f) != "undefined") {_RecordType("<265,270,20>",(q.f.f)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (q.f) != "undefined") {_RecordType("<265,268,20>",(q.f)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (q) != "undefined") {_RecordType("<265,266,20>",(q)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<276,277,20>",(i)); Inst23++; } } catch(e) {}
  if (q.f.f.f != i) {
    throw "Error: q.f.f.f != i";
  }
}

try { if (Inst24 <= 1000 && typeof (foo) != "undefined") {_RecordType("<330,333,25>",(foo)); Inst24++; } } catch(e) {}
function foo() {
  var result = 0;
try { if (Inst25 <= 1000 && typeof (result) != "undefined") {_RecordType("<344,350,26>",(result)); Inst25++; } } catch(e) {}

  for (var i = 0; i < n; ++i) {
try { if (Inst26 <= 1000 && typeof (i) != "undefined") {_RecordType("<368,369,28>",(i)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (i) != "undefined") {_RecordType("<375,376,28>",(i)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (n) != "undefined") {_RecordType("<379,380,28>",(n)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (i) != "undefined") {_RecordType("<384,385,28>",(i)); Inst29++; } } catch(e) {}
try { if (Inst31 <= 1000 && typeof (i) != "undefined") {_RecordType("<415,416,30>",(i)); Inst31++; } } catch(e) {}
    var leaf = {
      f: i
    };
try { if (Inst30 <= 1000 && typeof (leaf) != "undefined") {_RecordType("<397,401,29>",(leaf)); Inst30++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (leaf) != "undefined") {_RecordType("<447,451,33>",(leaf)); Inst33++; } } catch(e) {}
    var o = {
      f: leaf
    };
try { if (Inst32 <= 1000 && typeof (o) != "undefined") {_RecordType("<432,433,32>",(o)); Inst32++; } } catch(e) {}
try { if (Inst35 <= 1000 && typeof (leaf) != "undefined") {_RecordType("<482,486,36>",(leaf)); Inst35++; } } catch(e) {}
    var p = {
      f: leaf
    };
try { if (Inst34 <= 1000 && typeof (p) != "undefined") {_RecordType("<467,468,35>",(p)); Inst34++; } } catch(e) {}
try { if (Inst37 <= 1000 && typeof (o) != "undefined") {_RecordType("<517,518,39>",(o)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (p) != "undefined") {_RecordType("<529,530,40>",(p)); Inst38++; } } catch(e) {}
    var q = {
      f: o,
      g: p
    };
try { if (Inst36 <= 1000 && typeof (q) != "undefined") {_RecordType("<502,503,38>",(q)); Inst36++; } } catch(e) {}
try { if (Inst40 <= 1000 && typeof (q.f.f.f) != "undefined") {_RecordType("<552,559,42>",(q.f.f.f)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (q.f.f) != "undefined") {_RecordType("<552,557,42>",(q.f.f)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (q.f) != "undefined") {_RecordType("<552,555,42>",(q.f)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (q) != "undefined") {_RecordType("<552,553,42>",(q)); Inst43++; } } catch(e) {}
    result += q.f.f.f;
try { if (Inst39 <= 1000 && typeof (result) != "undefined") {_RecordType("<542,548,42>",(result)); Inst39++; } } catch(e) {}

try { if (Inst44 <= 1000 && typeof (i) != "undefined") {_RecordType("<570,571,44>",(i)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (n) != "undefined") {_RecordType("<575,576,44>",(n)); Inst45++; } } catch(e) {}
    if (i >= n - 100) {
      // We want the materialization to happen in the exit. So, before calling the thing that
      // causes the materialization, we call bar(). We've never profiled this call at the time
      // of FTL compilation, so this should be an exit.
try { if (Inst46 <= 1000 && typeof (bar) != "undefined") {_RecordType("<837,840,48>",(bar)); Inst46++; } } catch(e) {}
      bar();
try { if (Inst47 <= 1000 && typeof (verify) != "undefined") {_RecordType("<850,856,49>",(verify)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (q) != "undefined") {_RecordType("<857,858,49>",(q)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (i) != "undefined") {_RecordType("<860,861,49>",(i)); Inst49++; } } catch(e) {}
      verify(q, i);
    }
  }

try { if (Inst50 <= 1000 && typeof (result) != "undefined") {_RecordType("<884,890,53>",(result)); Inst50++; } } catch(e) {}
  return result;
}

try { if (Inst51 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<895,903,56>",(noInline)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (foo) != "undefined") {_RecordType("<904,907,56>",(foo)); Inst52++; } } catch(e) {}
noInline(foo);
try { if (Inst53 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<910,918,57>",(noInline)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (verify) != "undefined") {_RecordType("<919,925,57>",(verify)); Inst54++; } } catch(e) {}
noInline(verify);
try { if (Inst55 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<928,936,58>",(noInline)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (bar) != "undefined") {_RecordType("<937,940,58>",(bar)); Inst56++; } } catch(e) {}
noInline(bar);
try { if (Inst58 <= 1000 && typeof (foo) != "undefined") {_RecordType("<956,959,59>",(foo)); Inst58++; } } catch(e) {}
var result = foo();
try { if (Inst57 <= 1000 && typeof (result) != "undefined") {_RecordType("<947,953,59>",(result)); Inst57++; } } catch(e) {}

try { if (Inst59 <= 1000 && typeof (result) != "undefined") {_RecordType("<968,974,61>",(result)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (sumOfArithSeries) != "undefined") {_RecordType("<978,994,61>",(sumOfArithSeries)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (n) != "undefined") {_RecordType("<995,996,61>",(n)); Inst61++; } } catch(e) {}
if (result != sumOfArithSeries(n - 1)) {
try { if (Inst62 <= 1000 && typeof (result) != "undefined") {_RecordType("<1037,1043,62>",(result)); Inst62++; } } catch(e) {}
  throw "Error: bad result: " + result;
}

