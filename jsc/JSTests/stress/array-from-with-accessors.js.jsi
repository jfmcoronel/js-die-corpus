var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<9,17,1>",(shouldBe)); Inst0++; } } catch(e) {}
function shouldBe(actual, expected) {
try { if (Inst1 <= 1000 && typeof (actual) != "undefined") {_RecordType("<18,24,1>",(actual)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (expected) != "undefined") {_RecordType("<26,34,1>",(expected)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (actual) != "undefined") {_RecordType("<44,50,2>",(actual)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (expected) != "undefined") {_RecordType("<55,63,2>",(expected)); Inst4++; } } catch(e) {}
  if (actual !== expected) {
try { if (Inst5 <= 1000 && typeof (Error) != "undefined") {_RecordType("<81,86,3>",(Error)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (actual) != "undefined") {_RecordType("<103,109,3>",(actual)); Inst6++; } } catch(e) {}
    throw new Error('bad value: ' + actual);
  }
}

var array = [0, 1, 2, 3, 4, 5];
try { if (Inst7 <= 1000 && typeof (array) != "undefined") {_RecordType("<123,128,7>",(array)); Inst7++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<151,172,8>",(Object.defineProperty)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Object) != "undefined") {_RecordType("<151,157,8>",(Object)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<173,188,8>",(Array.prototype)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Array) != "undefined") {_RecordType("<173,178,8>",(Array)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (get) != "undefined") {_RecordType("<199,202,9>",(get)); Inst12++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (set) != "undefined") {_RecordType("<262,265,13>",(set)); Inst14++; } } catch(e) {}
Object.defineProperty(Array.prototype, '0', {
  get() {
try { if (Inst13 <= 1000 && typeof (Error) != "undefined") {_RecordType("<221,226,10>",(Error)); Inst13++; } } catch(e) {}
    throw new Error('cannot get to 0 getter');
  },

  set() {
try { if (Inst15 <= 1000 && typeof (Error) != "undefined") {_RecordType("<284,289,14>",(Error)); Inst15++; } } catch(e) {}
    throw new Error('cannot put to 0 setter');
  }

});
try { if (Inst17 <= 1000 && typeof (Array.from) != "undefined") {_RecordType("<339,349,18>",(Array.from)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Array) != "undefined") {_RecordType("<339,344,18>",(Array)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (array) != "undefined") {_RecordType("<350,355,18>",(array)); Inst19++; } } catch(e) {}
var result = Array.from(array);
try { if (Inst16 <= 1000 && typeof (result) != "undefined") {_RecordType("<330,336,18>",(result)); Inst16++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<358,366,19>",(shouldBe)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (result.length) != "undefined") {_RecordType("<367,380,19>",(result.length)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (result) != "undefined") {_RecordType("<367,373,19>",(result)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (array.length) != "undefined") {_RecordType("<382,394,19>",(array.length)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (array) != "undefined") {_RecordType("<382,387,19>",(array)); Inst24++; } } catch(e) {}
shouldBe(result.length, array.length);
try { if (Inst25 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<397,405,20>",(shouldBe)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (result) != "undefined") {_RecordType("<406,412,20>",(result)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (Array) != "undefined") {_RecordType("<424,429,20>",(Array)); Inst27++; } } catch(e) {}
shouldBe(result instanceof Array, true);

for (var i = 0; i < array.length; ++i) {
try { if (Inst28 <= 1000 && typeof (i) != "undefined") {_RecordType("<448,449,22>",(i)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (i) != "undefined") {_RecordType("<455,456,22>",(i)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (array.length) != "undefined") {_RecordType("<459,471,22>",(array.length)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (array) != "undefined") {_RecordType("<459,464,22>",(array)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (i) != "undefined") {_RecordType("<475,476,22>",(i)); Inst32++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<482,490,23>",(shouldBe)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (result[i]) != "undefined") {_RecordType("<491,500,23>",(result[i])); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (result) != "undefined") {_RecordType("<491,497,23>",(result)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (array[i]) != "undefined") {_RecordType("<502,510,23>",(array[i])); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (array) != "undefined") {_RecordType("<502,507,23>",(array)); Inst37++; } } catch(e) {}
  shouldBe(result[i], array[i]);
}

