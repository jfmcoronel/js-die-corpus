var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
(function () {
  "use strict";

try { if (Inst0 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<43,51,4>",(shouldBe)); Inst0++; } } catch(e) {}
  function shouldBe(actual, expected) {
try { if (Inst1 <= 1000 && typeof (actual) != "undefined") {_RecordType("<52,58,4>",(actual)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (expected) != "undefined") {_RecordType("<60,68,4>",(expected)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (actual) != "undefined") {_RecordType("<80,86,5>",(actual)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (expected) != "undefined") {_RecordType("<91,99,5>",(expected)); Inst4++; } } catch(e) {}
    if (actual !== expected) {
try { if (Inst5 <= 1000 && typeof (Error) != "undefined") {_RecordType("<119,124,6>",(Error)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (actual) != "undefined") {_RecordType("<141,147,6>",(actual)); Inst6++; } } catch(e) {}
      throw new Error('bad value: ' + actual);
    }
  }

try { if (Inst7 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<163,171,10>",(noInline)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<172,180,10>",(shouldBe)); Inst8++; } } catch(e) {}
  noInline(shouldBe);
  var flag = false;
try { if (Inst9 <= 1000 && typeof (flag) != "undefined") {_RecordType("<189,193,11>",(flag)); Inst9++; } } catch(e) {}

try { if (Inst10 <= 1000 && typeof (a) != "undefined") {_RecordType("<215,216,13>",(a)); Inst10++; } } catch(e) {}
  function a(...args) {
try { if (Inst11 <= 1000 && typeof (args) != "undefined") {_RecordType("<220,224,13>",(args)); Inst11++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (b) != "undefined") {_RecordType("<239,240,14>",(b)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (args) != "undefined") {_RecordType("<244,248,14>",(args)); Inst13++; } } catch(e) {}
    return b(...args);
  }

try { if (Inst14 <= 1000 && typeof (b) != "undefined") {_RecordType("<267,268,17>",(b)); Inst14++; } } catch(e) {}
  function b(...args) {
try { if (Inst15 <= 1000 && typeof (args) != "undefined") {_RecordType("<272,276,17>",(args)); Inst15++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (flag) != "undefined") {_RecordType("<288,292,18>",(flag)); Inst16++; } } catch(e) {}
    if (flag) {
try { if (Inst17 <= 1000 && typeof (OSRExit) != "undefined") {_RecordType("<302,309,19>",(OSRExit)); Inst17++; } } catch(e) {}
      OSRExit();
try { if (Inst18 <= 1000 && typeof (args[0]) != "undefined") {_RecordType("<326,333,20>",(args[0])); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (args) != "undefined") {_RecordType("<326,330,20>",(args)); Inst19++; } } catch(e) {}
      return args[0];
    }

try { if (Inst20 <= 1000 && typeof (c) != "undefined") {_RecordType("<353,354,23>",(c)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (args) != "undefined") {_RecordType("<358,362,23>",(args)); Inst21++; } } catch(e) {}
    return c(...args);
  }

try { if (Inst22 <= 1000 && typeof (c) != "undefined") {_RecordType("<381,382,26>",(c)); Inst22++; } } catch(e) {}
  function c(...args) {
try { if (Inst23 <= 1000 && typeof (args) != "undefined") {_RecordType("<386,390,26>",(args)); Inst23++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (d) != "undefined") {_RecordType("<405,406,27>",(d)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (args) != "undefined") {_RecordType("<410,414,27>",(args)); Inst25++; } } catch(e) {}
    return d(...args);
  }

try { if (Inst26 <= 1000 && typeof (d) != "undefined") {_RecordType("<433,434,30>",(d)); Inst26++; } } catch(e) {}
  function d(...args) {
try { if (Inst27 <= 1000 && typeof (args) != "undefined") {_RecordType("<438,442,30>",(args)); Inst27++; } } catch(e) {}
try { if (Inst28 <= 1000 && typeof (Math.max) != "undefined") {_RecordType("<457,465,31>",(Math.max)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (Math) != "undefined") {_RecordType("<457,461,31>",(Math)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (args) != "undefined") {_RecordType("<469,473,31>",(args)); Inst30++; } } catch(e) {}
    return Math.max(...args);
  }

try { if (Inst31 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<483,491,34>",(noInline)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (d) != "undefined") {_RecordType("<492,493,34>",(d)); Inst32++; } } catch(e) {}
  noInline(d);
  var array = [0, 1, 2, 3, 4, 5];
try { if (Inst33 <= 1000 && typeof (array) != "undefined") {_RecordType("<502,507,35>",(array)); Inst33++; } } catch(e) {}

  for (var i = 0; i < 1e6; ++i) {
try { if (Inst34 <= 1000 && typeof (i) != "undefined") {_RecordType("<542,543,37>",(i)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (i) != "undefined") {_RecordType("<549,550,37>",(i)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (i) != "undefined") {_RecordType("<560,561,37>",(i)); Inst36++; } } catch(e) {}
try { if (Inst38 <= 1000 && typeof (i) != "undefined") {_RecordType("<576,577,38>",(i)); Inst38++; } } catch(e) {}
    flag = i > 1e6 - 100;
try { if (Inst37 <= 1000 && typeof (flag) != "undefined") {_RecordType("<569,573,38>",(flag)); Inst37++; } } catch(e) {}
try { if (Inst40 <= 1000 && typeof (a) != "undefined") {_RecordType("<605,606,39>",(a)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (array) != "undefined") {_RecordType("<610,615,39>",(array)); Inst41++; } } catch(e) {}
    var ret = a(...array);
try { if (Inst39 <= 1000 && typeof (ret) != "undefined") {_RecordType("<599,602,39>",(ret)); Inst39++; } } catch(e) {}

try { if (Inst42 <= 1000 && typeof (flag) != "undefined") {_RecordType("<628,632,41>",(flag)); Inst42++; } } catch(e) {}
    if (!flag) {
try { if (Inst43 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<642,650,42>",(shouldBe)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (ret) != "undefined") {_RecordType("<651,654,42>",(ret)); Inst44++; } } catch(e) {}
      shouldBe(ret, 5);
    } else {
try { if (Inst45 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<679,687,44>",(shouldBe)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (ret) != "undefined") {_RecordType("<688,691,44>",(ret)); Inst46++; } } catch(e) {}
      shouldBe(ret, 0);
    }
  }
})();

