var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (arrayEq) != "undefined") {_RecordType("<9,16,1>",(arrayEq)); Inst0++; } } catch(e) {}
function arrayEq(a, b) {
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<17,18,1>",(a)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (b) != "undefined") {_RecordType("<20,21,1>",(b)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<31,39,2>",(a.length)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (a) != "undefined") {_RecordType("<31,32,2>",(a)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (b.length) != "undefined") {_RecordType("<44,52,2>",(b.length)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (b) != "undefined") {_RecordType("<44,45,2>",(b)); Inst6++; } } catch(e) {}
  if (a.length !== b.length) {
    return false;
  }

  for (let i = 0; i < a.length; i++) {
try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<90,91,6>",(i)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<97,98,6>",(i)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<101,109,6>",(a.length)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (a) != "undefined") {_RecordType("<101,102,6>",(a)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<111,112,6>",(i)); Inst11++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (a[i]) != "undefined") {_RecordType("<126,130,7>",(a[i])); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (a) != "undefined") {_RecordType("<126,127,7>",(a)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (b[i]) != "undefined") {_RecordType("<135,139,7>",(b[i])); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (b) != "undefined") {_RecordType("<135,136,7>",(b)); Inst15++; } } catch(e) {}
    if (a[i] !== b[i]) {
      return false;
    }
  }

  return true;
}

{
try { if (Inst17 <= 1000 && typeof (Array.prototype.concat) != "undefined") {_RecordType("<209,231,16>",(Array.prototype.concat)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<209,224,16>",(Array.prototype)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Array) != "undefined") {_RecordType("<209,214,16>",(Array)); Inst19++; } } catch(e) {}
  let concat = Array.prototype.concat;
try { if (Inst16 <= 1000 && typeof (concat) != "undefined") {_RecordType("<200,206,16>",(concat)); Inst16++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<235,243,17>",(noInline)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (concat) != "undefined") {_RecordType("<244,250,17>",(concat)); Inst21++; } } catch(e) {}
  noInline(concat);
  let array = [1, 2, 3];
try { if (Inst22 <= 1000 && typeof (array) != "undefined") {_RecordType("<259,264,18>",(array)); Inst22++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (Proxy.revocable) != "undefined") {_RecordType("<317,332,22>",(Proxy.revocable)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<317,322,22>",(Proxy)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (array) != "undefined") {_RecordType("<333,338,22>",(array)); Inst27++; } } catch(e) {}
  let {
    proxy: p,
    revoke
  } = Proxy.revocable(array, {
    get: function (o, k) {
try { if (Inst28 <= 1000 && typeof (o) != "undefined") {_RecordType("<361,362,23>",(o)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (k) != "undefined") {_RecordType("<364,365,23>",(k)); Inst29++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (o[k]) != "undefined") {_RecordType("<382,386,24>",(o[k])); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (o) != "undefined") {_RecordType("<382,383,24>",(o)); Inst31++; } } catch(e) {}
      return o[k];
    }
  });
try { if (Inst23 <= 1000 && typeof (p) != "undefined") {_RecordType("<297,298,20>",(p)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (revoke) != "undefined") {_RecordType("<304,310,21>",(revoke)); Inst24++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (concat.call) != "undefined") {_RecordType("<402,413,27>",(concat.call)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (concat) != "undefined") {_RecordType("<402,408,27>",(concat)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (p) != "undefined") {_RecordType("<414,415,27>",(p)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (p) != "undefined") {_RecordType("<417,418,27>",(p)); Inst35++; } } catch(e) {}
  concat.call(p, p);

  for (let i = 0; i < 100000; i++) {
try { if (Inst36 <= 1000 && typeof (i) != "undefined") {_RecordType("<433,434,29>",(i)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (i) != "undefined") {_RecordType("<440,441,29>",(i)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (i) != "undefined") {_RecordType("<452,453,29>",(i)); Inst38++; } } catch(e) {}
try { if (Inst39 <= 1000 && typeof (arrayEq) != "undefined") {_RecordType("<468,475,30>",(arrayEq)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (concat.call) != "undefined") {_RecordType("<476,487,30>",(concat.call)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (concat) != "undefined") {_RecordType("<476,482,30>",(concat)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (p) != "undefined") {_RecordType("<488,489,30>",(p)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (p) != "undefined") {_RecordType("<491,492,30>",(p)); Inst43++; } } catch(e) {}
    if (!arrayEq(concat.call(p, p), [1, 2, 3, 1, 2, 3])) {
      throw "bad";
    }
  }

try { if (Inst44 <= 1000 && typeof (revoke) != "undefined") {_RecordType("<550,556,35>",(revoke)); Inst44++; } } catch(e) {}
  revoke();
  failed = true;
try { if (Inst45 <= 1000 && typeof (failed) != "undefined") {_RecordType("<562,568,36>",(failed)); Inst45++; } } catch(e) {}

try { if (Inst50 <= 1000 && typeof (e) != "undefined") {_RecordType("<620,621,40>",(e)); Inst50++; } } catch(e) {}
  try {
try { if (Inst46 <= 1000 && typeof (concat.call) != "undefined") {_RecordType("<590,601,39>",(concat.call)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (concat) != "undefined") {_RecordType("<590,596,39>",(concat)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (p) != "undefined") {_RecordType("<602,603,39>",(p)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (p) != "undefined") {_RecordType("<605,606,39>",(p)); Inst49++; } } catch(e) {}
    concat.call(p, p);
  } catch (e) {
    failed = false;
try { if (Inst51 <= 1000 && typeof (failed) != "undefined") {_RecordType("<629,635,41>",(failed)); Inst51++; } } catch(e) {}
  }

try { if (Inst52 <= 1000 && typeof (failed) != "undefined") {_RecordType("<656,662,44>",(failed)); Inst52++; } } catch(e) {}
  if (failed) {
    throw "bad";
  }
}

