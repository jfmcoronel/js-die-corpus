var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
var result = 0;
try { if (Inst0 <= 1000 && typeof (result) != "undefined") {_RecordType("<4,10,1>",(result)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (test1) != "undefined") {_RecordType("<26,31,3>",(test1)); Inst1++; } } catch(e) {}
function test1(arr) {
try { if (Inst2 <= 1000 && typeof (arr) != "undefined") {_RecordType("<32,35,3>",(arr)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (Array.of) != "undefined") {_RecordType("<48,56,4>",(Array.of)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Array) != "undefined") {_RecordType("<48,53,4>",(Array)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (arr) != "undefined") {_RecordType("<60,63,4>",(arr)); Inst5++; } } catch(e) {}
  return Array.of(...arr);
}

try { if (Inst6 <= 1000 && typeof (test2) != "undefined") {_RecordType("<78,83,7>",(test2)); Inst6++; } } catch(e) {}
function test2() {
try { if (Inst7 <= 1000 && typeof (Array) != "undefined") {_RecordType("<97,102,8>",(Array)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<106,115,8>",(arguments)); Inst8++; } } catch(e) {}
  return Array(...arguments);
}

var result = 0;
try { if (Inst9 <= 1000 && typeof (result) != "undefined") {_RecordType("<125,131,11>",(result)); Inst9++; } } catch(e) {}

try { if (Inst10 <= 1000 && typeof (this.noInline) != "undefined") {_RecordType("<142,155,13>",(this.noInline)); Inst10++; } } catch(e) {}
if (this.noInline) {
try { if (Inst11 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<161,169,14>",(noInline)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (test1) != "undefined") {_RecordType("<170,175,14>",(test1)); Inst12++; } } catch(e) {}
  noInline(test1);
try { if (Inst13 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<180,188,15>",(noInline)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (test2) != "undefined") {_RecordType("<189,194,15>",(test2)); Inst14++; } } catch(e) {}
  noInline(test2);
}

var array = [1, 2, 3, 4, 5];
try { if (Inst15 <= 1000 && typeof (array) != "undefined") {_RecordType("<204,209,18>",(array)); Inst15++; } } catch(e) {}

for (var i = 0; i < 10000; i++) {
try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<239,240,20>",(i)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (i) != "undefined") {_RecordType("<246,247,20>",(i)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (i) != "undefined") {_RecordType("<257,258,20>",(i)); Inst18++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (test2(1, 2, 3, 4, 5, 6, 7).length) != "undefined") {_RecordType("<276,309,21>",(test2(1, 2, 3, 4, 5, 6, 7).length)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (test2) != "undefined") {_RecordType("<276,281,21>",(test2)); Inst21++; } } catch(e) {}
  result ^= test2(1, 2, 3, 4, 5, 6, 7).length;
try { if (Inst19 <= 1000 && typeof (result) != "undefined") {_RecordType("<266,272,21>",(result)); Inst19++; } } catch(e) {}
}

try { if (Inst22 <= 1000 && typeof (result) != "undefined") {_RecordType("<318,324,24>",(result)); Inst22++; } } catch(e) {}
if (result != 0) {
try { if (Inst23 <= 1000 && typeof (result) != "undefined") {_RecordType("<365,371,25>",(result)); Inst23++; } } catch(e) {}
  throw "Error: bad result: " + result;
}

