var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
"use strict";

try { if (Inst1 <= 1000 && typeof (Int8Array) != "undefined") {_RecordType("<34,43,3>",(Int8Array)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Uint8Array) != "undefined") {_RecordType("<45,55,3>",(Uint8Array)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Uint8ClampedArray) != "undefined") {_RecordType("<57,74,3>",(Uint8ClampedArray)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Int16Array) != "undefined") {_RecordType("<76,86,3>",(Int16Array)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Uint16Array) != "undefined") {_RecordType("<88,99,3>",(Uint16Array)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Int32Array) != "undefined") {_RecordType("<101,111,3>",(Int32Array)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Uint32Array) != "undefined") {_RecordType("<113,124,3>",(Uint32Array)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Float32Array) != "undefined") {_RecordType("<126,138,3>",(Float32Array)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Float64Array) != "undefined") {_RecordType("<140,152,3>",(Float64Array)); Inst9++; } } catch(e) {}
let typedArrays = [Int8Array, Uint8Array, Uint8ClampedArray, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array];
try { if (Inst0 <= 1000 && typeof (typedArrays) != "undefined") {_RecordType("<19,30,3>",(typedArrays)); Inst0++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (typedArrays.map) != "undefined") {_RecordType("<172,187,4>",(typedArrays.map)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (typedArrays) != "undefined") {_RecordType("<172,183,4>",(typedArrays)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<188,199,4>",(constructor)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<217,228,4>",(constructor)); Inst14++; } } catch(e) {}
let subclasses = typedArrays.map(constructor => class extends constructor {});
try { if (Inst10 <= 1000 && typeof (subclasses) != "undefined") {_RecordType("<159,169,4>",(subclasses)); Inst10++; } } catch(e) {}

try { if (Inst15 <= 1000 && typeof (checkSubclass) != "undefined") {_RecordType("<244,257,6>",(checkSubclass)); Inst15++; } } catch(e) {}
function checkSubclass(constructor) {
try { if (Inst16 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<258,269,6>",(constructor)); Inst16++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<290,301,7>",(constructor)); Inst18++; } } catch(e) {}
  let inst = new constructor(10);
try { if (Inst17 <= 1000 && typeof (inst) != "undefined") {_RecordType("<279,283,7>",(inst)); Inst17++; } } catch(e) {}
  inst[11] = 10;
try { if (Inst19 <= 1000 && typeof (inst[11]) != "undefined") {_RecordType("<309,317,8>",(inst[11])); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (inst) != "undefined") {_RecordType("<309,313,8>",(inst)); Inst20++; } } catch(e) {}

try { if (Inst21 <= 1000 && typeof (inst) != "undefined") {_RecordType("<333,337,10>",(inst)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<349,360,10>",(constructor)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (inst) != "undefined") {_RecordType("<364,368,10>",(inst)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (constructor.__proto__) != "undefined") {_RecordType("<380,401,10>",(constructor.__proto__)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<380,391,10>",(constructor)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (inst[11]) != "undefined") {_RecordType("<405,413,10>",(inst[11])); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (inst) != "undefined") {_RecordType("<405,409,10>",(inst)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<418,427,10>",(undefined)); Inst28++; } } catch(e) {}
  if (!(inst instanceof constructor && inst instanceof constructor.__proto__ && inst[11] === undefined)) {
try { if (Inst29 <= 1000 && typeof (constructor.__proto__) != "undefined") {_RecordType("<459,480,11>",(constructor.__proto__)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<459,470,11>",(constructor)); Inst30++; } } catch(e) {}
    throw "subclass of " + constructor.__proto__ + " was incorrect";
  }
}

try { if (Inst31 <= 1000 && typeof (test) != "undefined") {_RecordType("<517,521,15>",(test)); Inst31++; } } catch(e) {}
function test() {
try { if (Inst32 <= 1000 && typeof (subclasses.forEach) != "undefined") {_RecordType("<528,546,16>",(subclasses.forEach)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (subclasses) != "undefined") {_RecordType("<528,538,16>",(subclasses)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (checkSubclass) != "undefined") {_RecordType("<547,560,16>",(checkSubclass)); Inst34++; } } catch(e) {}
  subclasses.forEach(checkSubclass);
}

for (var i = 0; i < 10000; i++) {
try { if (Inst35 <= 1000 && typeof (i) != "undefined") {_RecordType("<575,576,19>",(i)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (i) != "undefined") {_RecordType("<582,583,19>",(i)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (i) != "undefined") {_RecordType("<593,594,19>",(i)); Inst37++; } } catch(e) {}
try { if (Inst38 <= 1000 && typeof (test) != "undefined") {_RecordType("<602,606,20>",(test)); Inst38++; } } catch(e) {}
  test();
}

