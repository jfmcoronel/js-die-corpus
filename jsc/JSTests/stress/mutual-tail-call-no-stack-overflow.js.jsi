var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//@ defaultNoSamplingProfilerRun
try { if (Inst0 <= 1000 && typeof (shouldThrow) != "undefined") {_RecordType("<42,53,2>",(shouldThrow)); Inst0++; } } catch(e) {}
function shouldThrow(func, errorMessage) {
try { if (Inst1 <= 1000 && typeof (func) != "undefined") {_RecordType("<54,58,2>",(func)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (errorMessage) != "undefined") {_RecordType("<60,72,2>",(errorMessage)); Inst2++; } } catch(e) {}
  var errorThrown = false;
try { if (Inst3 <= 1000 && typeof (errorThrown) != "undefined") {_RecordType("<82,93,3>",(errorThrown)); Inst3++; } } catch(e) {}
  var error = null;
try { if (Inst4 <= 1000 && typeof (error) != "undefined") {_RecordType("<109,114,4>",(error)); Inst4++; } } catch(e) {}

try { if (Inst6 <= 1000 && typeof (e) != "undefined") {_RecordType("<155,156,8>",(e)); Inst6++; } } catch(e) {}
  try {
try { if (Inst5 <= 1000 && typeof (func) != "undefined") {_RecordType("<136,140,7>",(func)); Inst5++; } } catch(e) {}
    func();
  } catch (e) {
    errorThrown = true;
try { if (Inst7 <= 1000 && typeof (errorThrown) != "undefined") {_RecordType("<164,175,9>",(errorThrown)); Inst7++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (e) != "undefined") {_RecordType("<196,197,10>",(e)); Inst9++; } } catch(e) {}
    error = e;
try { if (Inst8 <= 1000 && typeof (error) != "undefined") {_RecordType("<188,193,10>",(error)); Inst8++; } } catch(e) {}
  }
}

try { if (Inst10 <= 1000 && typeof (sloppyCountdown) != "undefined") {_RecordType("<215,230,14>",(sloppyCountdown)); Inst10++; } } catch(e) {}
function sloppyCountdown(n) {
try { if (Inst11 <= 1000 && typeof (n) != "undefined") {_RecordType("<231,232,14>",(n)); Inst11++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (even) != "undefined") {_RecordType("<247,251,15>",(even)); Inst12++; } } catch(e) {}
  function even(n) {
try { if (Inst13 <= 1000 && typeof (n) != "undefined") {_RecordType("<252,253,15>",(n)); Inst13++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (n) != "undefined") {_RecordType("<265,266,16>",(n)); Inst14++; } } catch(e) {}
    if (n == 0) {
try { if (Inst15 <= 1000 && typeof (n) != "undefined") {_RecordType("<288,289,17>",(n)); Inst15++; } } catch(e) {}
      return n;
    }

try { if (Inst16 <= 1000 && typeof (odd) != "undefined") {_RecordType("<309,312,20>",(odd)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (n) != "undefined") {_RecordType("<313,314,20>",(n)); Inst17++; } } catch(e) {}
    return odd(n - 1);
  }

try { if (Inst18 <= 1000 && typeof (odd) != "undefined") {_RecordType("<337,340,23>",(odd)); Inst18++; } } catch(e) {}
  function odd(n) {
try { if (Inst19 <= 1000 && typeof (n) != "undefined") {_RecordType("<341,342,23>",(n)); Inst19++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (n) != "undefined") {_RecordType("<354,355,24>",(n)); Inst20++; } } catch(e) {}
    if (n == 1) {
try { if (Inst21 <= 1000 && typeof (n) != "undefined") {_RecordType("<377,378,25>",(n)); Inst21++; } } catch(e) {}
      return n;
    }

try { if (Inst22 <= 1000 && typeof (even) != "undefined") {_RecordType("<398,402,28>",(even)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (n) != "undefined") {_RecordType("<403,404,28>",(n)); Inst23++; } } catch(e) {}
    return even(n - 1);
  }

try { if (Inst24 <= 1000 && typeof (n) != "undefined") {_RecordType("<422,423,31>",(n)); Inst24++; } } catch(e) {}
  if (n % 2 === 0) {
try { if (Inst25 <= 1000 && typeof (even) != "undefined") {_RecordType("<448,452,32>",(even)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (n) != "undefined") {_RecordType("<453,454,32>",(n)); Inst26++; } } catch(e) {}
    return even(n);
  } else {
try { if (Inst27 <= 1000 && typeof (odd) != "undefined") {_RecordType("<479,482,34>",(odd)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (n) != "undefined") {_RecordType("<483,484,34>",(n)); Inst28++; } } catch(e) {}
    return odd(n);
  }
}

try { if (Inst29 <= 1000 && typeof (strictCountdown) != "undefined") {_RecordType("<503,518,38>",(strictCountdown)); Inst29++; } } catch(e) {}
function strictCountdown(n) {
try { if (Inst30 <= 1000 && typeof (n) != "undefined") {_RecordType("<519,520,38>",(n)); Inst30++; } } catch(e) {}
  "use strict";

try { if (Inst31 <= 1000 && typeof (even) != "undefined") {_RecordType("<552,556,41>",(even)); Inst31++; } } catch(e) {}
  function even(n) {
try { if (Inst32 <= 1000 && typeof (n) != "undefined") {_RecordType("<557,558,41>",(n)); Inst32++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (n) != "undefined") {_RecordType("<570,571,42>",(n)); Inst33++; } } catch(e) {}
    if (n == 0) {
try { if (Inst34 <= 1000 && typeof (n) != "undefined") {_RecordType("<593,594,43>",(n)); Inst34++; } } catch(e) {}
      return n;
    }

try { if (Inst35 <= 1000 && typeof (odd) != "undefined") {_RecordType("<614,617,46>",(odd)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (n) != "undefined") {_RecordType("<618,619,46>",(n)); Inst36++; } } catch(e) {}
    return odd(n - 1);
  }

try { if (Inst37 <= 1000 && typeof (odd) != "undefined") {_RecordType("<642,645,49>",(odd)); Inst37++; } } catch(e) {}
  function odd(n) {
try { if (Inst38 <= 1000 && typeof (n) != "undefined") {_RecordType("<646,647,49>",(n)); Inst38++; } } catch(e) {}
try { if (Inst39 <= 1000 && typeof (n) != "undefined") {_RecordType("<659,660,50>",(n)); Inst39++; } } catch(e) {}
    if (n == 1) {
try { if (Inst40 <= 1000 && typeof (n) != "undefined") {_RecordType("<682,683,51>",(n)); Inst40++; } } catch(e) {}
      return n;
    }

try { if (Inst41 <= 1000 && typeof (even) != "undefined") {_RecordType("<703,707,54>",(even)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (n) != "undefined") {_RecordType("<708,709,54>",(n)); Inst42++; } } catch(e) {}
    return even(n - 1);
  }

try { if (Inst43 <= 1000 && typeof (n) != "undefined") {_RecordType("<727,728,57>",(n)); Inst43++; } } catch(e) {}
  if (n % 2 === 0) {
try { if (Inst44 <= 1000 && typeof (even) != "undefined") {_RecordType("<753,757,58>",(even)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (n) != "undefined") {_RecordType("<758,759,58>",(n)); Inst45++; } } catch(e) {}
    return even(n);
  } else {
try { if (Inst46 <= 1000 && typeof (odd) != "undefined") {_RecordType("<784,787,60>",(odd)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (n) != "undefined") {_RecordType("<788,789,60>",(n)); Inst47++; } } catch(e) {}
    return odd(n);
  }
}

try { if (Inst48 <= 1000 && typeof (shouldThrow) != "undefined") {_RecordType("<799,810,64>",(shouldThrow)); Inst48++; } } catch(e) {}
shouldThrow(function () {
try { if (Inst49 <= 1000 && typeof (sloppyCountdown) != "undefined") {_RecordType("<827,842,65>",(sloppyCountdown)); Inst49++; } } catch(e) {}
  sloppyCountdown(100000);
}, "RangeError: Maximum call stack size exceeded.");
try { if (Inst50 <= 1000 && typeof (strictCountdown) != "undefined") {_RecordType("<905,920,67>",(strictCountdown)); Inst50++; } } catch(e) {}
strictCountdown(100000); // Parity alterning

try { if (Inst51 <= 1000 && typeof (odd) != "undefined") {_RecordType("<960,963,69>",(odd)); Inst51++; } } catch(e) {}
function odd(n) {
try { if (Inst52 <= 1000 && typeof (n) != "undefined") {_RecordType("<964,965,69>",(n)); Inst52++; } } catch(e) {}
  "use strict";

try { if (Inst53 <= 1000 && typeof (n) != "undefined") {_RecordType("<992,993,72>",(n)); Inst53++; } } catch(e) {}
  if (n > 0) {
try { if (Inst54 <= 1000 && typeof (even) != "undefined") {_RecordType("<1012,1016,73>",(even)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (n) != "undefined") {_RecordType("<1017,1018,73>",(n)); Inst55++; } } catch(e) {}
    return even(n, 0);
  }
}

try { if (Inst56 <= 1000 && typeof (even) != "undefined") {_RecordType("<1040,1044,77>",(even)); Inst56++; } } catch(e) {}
function even(n) {
try { if (Inst57 <= 1000 && typeof (n) != "undefined") {_RecordType("<1045,1046,77>",(n)); Inst57++; } } catch(e) {}
  "use strict";

try { if (Inst58 <= 1000 && typeof (odd) != "undefined") {_RecordType("<1076,1079,80>",(odd)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (n) != "undefined") {_RecordType("<1080,1081,80>",(n)); Inst59++; } } catch(e) {}
  return odd(n - 1);
}

try { if (Inst60 <= 1000 && typeof (odd) != "undefined") {_RecordType("<1091,1094,83>",(odd)); Inst60++; } } catch(e) {}
odd(100000);

