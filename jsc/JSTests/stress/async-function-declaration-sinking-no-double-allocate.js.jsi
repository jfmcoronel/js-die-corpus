var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<9,17,1>",(shouldBe)); Inst0++; } } catch(e) {}
function shouldBe(expected, actual, msg = "") {
try { if (Inst1 <= 1000 && typeof (expected) != "undefined") {_RecordType("<18,26,1>",(expected)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (actual) != "undefined") {_RecordType("<28,34,1>",(actual)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (msg) != "undefined") {_RecordType("<36,39,1>",(msg)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (msg) != "undefined") {_RecordType("<54,57,2>",(msg)); Inst4++; } } catch(e) {}
  if (msg) {
try { if (Inst6 <= 1000 && typeof (msg) != "undefined") {_RecordType("<81,84,3>",(msg)); Inst6++; } } catch(e) {}
    msg = " for " + msg;
try { if (Inst5 <= 1000 && typeof (msg) != "undefined") {_RecordType("<65,68,3>",(msg)); Inst5++; } } catch(e) {}
  }

try { if (Inst7 <= 1000 && typeof (actual) != "undefined") {_RecordType("<97,103,6>",(actual)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (expected) != "undefined") {_RecordType("<108,116,6>",(expected)); Inst8++; } } catch(e) {}
  if (actual !== expected) {
try { if (Inst9 <= 1000 && typeof (Error) != "undefined") {_RecordType("<134,139,7>",(Error)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (msg) != "undefined") {_RecordType("<154,157,7>",(msg)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (actual) != "undefined") {_RecordType("<167,173,7>",(actual)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (expected) != "undefined") {_RecordType("<192,200,7>",(expected)); Inst12++; } } catch(e) {}
    throw new Error("bad value" + msg + ": " + actual + ". Expected " + expected);
  }
}

try { if (Inst14 <= 1000 && typeof (async function () {
  ;
}.__proto__) != "undefined") {_RecordType("<239,274,11>",(async function () {
  ;
}.__proto__)); Inst14++; } } catch(e) {}
var AsyncFunctionPrototype = async function () {
  ;
}.__proto__;
try { if (Inst13 <= 1000 && typeof (AsyncFunctionPrototype) != "undefined") {_RecordType("<214,236,11>",(AsyncFunctionPrototype)); Inst13++; } } catch(e) {}

try { if (Inst15 <= 1000 && typeof (call) != "undefined") {_RecordType("<286,290,15>",(call)); Inst15++; } } catch(e) {}
function call(o) {
try { if (Inst16 <= 1000 && typeof (o) != "undefined") {_RecordType("<291,292,15>",(o)); Inst16++; } } catch(e) {}
  o.x = 3;
try { if (Inst17 <= 1000 && typeof (o.x) != "undefined") {_RecordType("<298,301,16>",(o.x)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (o) != "undefined") {_RecordType("<298,299,16>",(o)); Inst18++; } } catch(e) {}
}

try { if (Inst19 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<310,318,19>",(noInline)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (call) != "undefined") {_RecordType("<319,323,19>",(call)); Inst20++; } } catch(e) {}
noInline(call);

try { if (Inst21 <= 1000 && typeof (sink) != "undefined") {_RecordType("<336,340,21>",(sink)); Inst21++; } } catch(e) {}
function sink(p, q) {
try { if (Inst22 <= 1000 && typeof (p) != "undefined") {_RecordType("<341,342,21>",(p)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (q) != "undefined") {_RecordType("<344,345,21>",(q)); Inst23++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (f) != "undefined") {_RecordType("<366,367,22>",(f)); Inst24++; } } catch(e) {}
  async function f() {
    ;
  }

  ;

try { if (Inst25 <= 1000 && typeof (p) != "undefined") {_RecordType("<394,395,28>",(p)); Inst25++; } } catch(e) {}
  if (p) {
try { if (Inst26 <= 1000 && typeof (call) != "undefined") {_RecordType("<403,407,29>",(call)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (f) != "undefined") {_RecordType("<408,409,29>",(f)); Inst27++; } } catch(e) {}
    call(f); // Force allocation of f

try { if (Inst28 <= 1000 && typeof (q) != "undefined") {_RecordType("<446,447,31>",(q)); Inst28++; } } catch(e) {}
    if (q) {
try { if (Inst29 <= 1000 && typeof (OSRExit) != "undefined") {_RecordType("<457,464,32>",(OSRExit)); Inst29++; } } catch(e) {}
      OSRExit();
    }

try { if (Inst30 <= 1000 && typeof (f) != "undefined") {_RecordType("<486,487,35>",(f)); Inst30++; } } catch(e) {}
    return f;
  }

  return {
    'x': 2
  };
}

try { if (Inst31 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<524,532,43>",(noInline)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (sink) != "undefined") {_RecordType("<533,537,43>",(sink)); Inst32++; } } catch(e) {}
noInline(sink);

for (var i = 0; i < 100000; ++i) {
try { if (Inst33 <= 1000 && typeof (i) != "undefined") {_RecordType("<550,551,45>",(i)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (i) != "undefined") {_RecordType("<557,558,45>",(i)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (i) != "undefined") {_RecordType("<571,572,45>",(i)); Inst35++; } } catch(e) {}
try { if (Inst37 <= 1000 && typeof (sink) != "undefined") {_RecordType("<586,590,46>",(sink)); Inst37++; } } catch(e) {}
  var o = sink(true, false);
try { if (Inst36 <= 1000 && typeof (o) != "undefined") {_RecordType("<582,583,46>",(o)); Inst36++; } } catch(e) {}
try { if (Inst38 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<607,615,47>",(shouldBe)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (o.__proto__) != "undefined") {_RecordType("<616,627,47>",(o.__proto__)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (o) != "undefined") {_RecordType("<616,617,47>",(o)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (AsyncFunctionPrototype) != "undefined") {_RecordType("<629,651,47>",(AsyncFunctionPrototype)); Inst41++; } } catch(e) {}
  shouldBe(o.__proto__, AsyncFunctionPrototype);

try { if (Inst42 <= 1000 && typeof (o.x) != "undefined") {_RecordType("<661,664,49>",(o.x)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (o) != "undefined") {_RecordType("<661,662,49>",(o)); Inst43++; } } catch(e) {}
  if (o.x != 3) {
try { if (Inst44 <= 1000 && typeof (result) != "undefined") {_RecordType("<723,729,50>",(result)); Inst44++; } } catch(e) {}
    throw "Error: expected o.x to be 2 but is " + result;
  }
} // At this point, the function should be compiled down to the FTL
// Check that the function is properly allocated on OSR exit


try { if (Inst46 <= 1000 && typeof (sink) != "undefined") {_RecordType("<874,878,56>",(sink)); Inst46++; } } catch(e) {}
var f = sink(true, true);
try { if (Inst45 <= 1000 && typeof (f) != "undefined") {_RecordType("<870,871,56>",(f)); Inst45++; } } catch(e) {}
try { if (Inst47 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<892,900,57>",(shouldBe)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (f.__proto__) != "undefined") {_RecordType("<901,912,57>",(f.__proto__)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (f) != "undefined") {_RecordType("<901,902,57>",(f)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (AsyncFunctionPrototype) != "undefined") {_RecordType("<914,936,57>",(AsyncFunctionPrototype)); Inst50++; } } catch(e) {}
shouldBe(f.__proto__, AsyncFunctionPrototype);

try { if (Inst51 <= 1000 && typeof (f.x) != "undefined") {_RecordType("<944,947,59>",(f.x)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (f) != "undefined") {_RecordType("<944,945,59>",(f)); Inst52++; } } catch(e) {}
if (f.x != 3) {
try { if (Inst53 <= 1000 && typeof (result) != "undefined") {_RecordType("<1004,1010,60>",(result)); Inst53++; } } catch(e) {}
  throw "Error: expected o.x to be 3 but is " + result;
}

