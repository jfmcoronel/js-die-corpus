var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (foo) != "undefined") {_RecordType("<9,12,1>",(foo)); Inst0++; } } catch(e) {}
function foo(o) {
try { if (Inst1 <= 1000 && typeof (o) != "undefined") {_RecordType("<13,14,1>",(o)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (o.f) != "undefined") {_RecordType("<27,30,2>",(o.f)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (o) != "undefined") {_RecordType("<27,28,2>",(o)); Inst3++; } } catch(e) {}
  return o.f + 1;
}

try { if (Inst4 <= 1000 && typeof (bar) != "undefined") {_RecordType("<48,51,5>",(bar)); Inst4++; } } catch(e) {}
function bar(o, v) {
try { if (Inst5 <= 1000 && typeof (o) != "undefined") {_RecordType("<52,53,5>",(o)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (v) != "undefined") {_RecordType("<55,56,5>",(v)); Inst6++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (v) != "undefined") {_RecordType("<68,69,6>",(v)); Inst9++; } } catch(e) {}
  o.f = v;
try { if (Inst7 <= 1000 && typeof (o.f) != "undefined") {_RecordType("<62,65,6>",(o.f)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (o) != "undefined") {_RecordType("<62,63,6>",(o)); Inst8++; } } catch(e) {}
}

try { if (Inst10 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<74,82,9>",(noInline)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (foo) != "undefined") {_RecordType("<83,86,9>",(foo)); Inst11++; } } catch(e) {}
noInline(foo);
try { if (Inst12 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<89,97,10>",(noInline)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (bar) != "undefined") {_RecordType("<98,101,10>",(bar)); Inst13++; } } catch(e) {}
noInline(bar);
var o = {};
try { if (Inst14 <= 1000 && typeof (o) != "undefined") {_RecordType("<108,109,11>",(o)); Inst14++; } } catch(e) {}

for (var i = 0; i < 5; ++i) {
try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<126,127,13>",(i)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<133,134,13>",(i)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (i) != "undefined") {_RecordType("<142,143,13>",(i)); Inst17++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (bar) != "undefined") {_RecordType("<149,152,14>",(bar)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (o) != "undefined") {_RecordType("<153,154,14>",(o)); Inst19++; } } catch(e) {}
  bar(o, 4.2);
}

for (var i = 0; i < 10000; ++i) {
try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<174,175,17>",(i)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<181,182,17>",(i)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<194,195,17>",(i)); Inst22++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (foo) != "undefined") {_RecordType("<214,217,18>",(foo)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (o) != "undefined") {_RecordType("<218,219,18>",(o)); Inst25++; } } catch(e) {}
  var result = foo(o);
try { if (Inst23 <= 1000 && typeof (result) != "undefined") {_RecordType("<205,211,18>",(result)); Inst23++; } } catch(e) {}

try { if (Inst26 <= 1000 && typeof (result) != "undefined") {_RecordType("<229,235,20>",(result)); Inst26++; } } catch(e) {}
  if (result !== 5.2) {
try { if (Inst27 <= 1000 && typeof (result) != "undefined") {_RecordType("<281,287,21>",(result)); Inst27++; } } catch(e) {}
    throw "Error: bad result: " + result;
  }
}

try { if (Inst28 <= 1000 && typeof (bar) != "undefined") {_RecordType("<296,299,25>",(bar)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (o) != "undefined") {_RecordType("<300,301,25>",(o)); Inst29++; } } catch(e) {}
bar(o, "hello");
try { if (Inst31 <= 1000 && typeof (foo) != "undefined") {_RecordType("<326,329,26>",(foo)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (o) != "undefined") {_RecordType("<330,331,26>",(o)); Inst32++; } } catch(e) {}
var result = foo(o);
try { if (Inst30 <= 1000 && typeof (result) != "undefined") {_RecordType("<317,323,26>",(result)); Inst30++; } } catch(e) {}

try { if (Inst33 <= 1000 && typeof (result) != "undefined") {_RecordType("<339,345,28>",(result)); Inst33++; } } catch(e) {}
if (result !== "hello1") {
try { if (Inst34 <= 1000 && typeof (result) != "undefined") {_RecordType("<401,407,29>",(result)); Inst34++; } } catch(e) {}
  throw "Error: bad result at end: " + result;
}

