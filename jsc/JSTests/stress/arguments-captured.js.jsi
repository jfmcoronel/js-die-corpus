var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (foo) != "undefined") {_RecordType("<9,12,1>",(foo)); Inst0++; } } catch(e) {}
function foo(o) {
try { if (Inst1 <= 1000 && typeof (o) != "undefined") {_RecordType("<13,14,1>",(o)); Inst1++; } } catch(e) {}
  o[0] = 42;
try { if (Inst2 <= 1000 && typeof (o[0]) != "undefined") {_RecordType("<20,24,2>",(o[0])); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (o) != "undefined") {_RecordType("<20,21,2>",(o)); Inst3++; } } catch(e) {}
}

try { if (Inst4 <= 1000 && typeof (bar) != "undefined") {_RecordType("<43,46,5>",(bar)); Inst4++; } } catch(e) {}
function bar(a) {
try { if (Inst5 <= 1000 && typeof (a) != "undefined") {_RecordType("<47,48,5>",(a)); Inst5++; } } catch(e) {}
  var o = {};
try { if (Inst6 <= 1000 && typeof (o) != "undefined") {_RecordType("<58,59,6>",(o)); Inst6++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (a) != "undefined") {_RecordType("<74,75,7>",(a)); Inst9++; } } catch(e) {}
  o.f = a;
try { if (Inst7 <= 1000 && typeof (o.f) != "undefined") {_RecordType("<68,71,7>",(o.f)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (o) != "undefined") {_RecordType("<68,69,7>",(o)); Inst8++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (foo) != "undefined") {_RecordType("<79,82,8>",(foo)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<83,92,8>",(arguments)); Inst11++; } } catch(e) {}
  foo(arguments);
try { if (Inst14 <= 1000 && typeof (a) != "undefined") {_RecordType("<103,104,9>",(a)); Inst14++; } } catch(e) {}
  o.g = a;
try { if (Inst12 <= 1000 && typeof (o.g) != "undefined") {_RecordType("<97,100,9>",(o.g)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (o) != "undefined") {_RecordType("<97,98,9>",(o)); Inst13++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (o) != "undefined") {_RecordType("<115,116,10>",(o)); Inst15++; } } catch(e) {}
  return o;
}

try { if (Inst16 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<121,129,13>",(noInline)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (foo) != "undefined") {_RecordType("<130,133,13>",(foo)); Inst17++; } } catch(e) {}
noInline(foo);
try { if (Inst18 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<136,144,14>",(noInline)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (bar) != "undefined") {_RecordType("<145,148,14>",(bar)); Inst19++; } } catch(e) {}
noInline(bar);

for (var i = 0; i < 1000; ++i) {
try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<161,162,16>",(i)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<168,169,16>",(i)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<180,181,16>",(i)); Inst22++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (bar) != "undefined") {_RecordType("<200,203,17>",(bar)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<204,205,17>",(i)); Inst25++; } } catch(e) {}
  var result = bar(i);
try { if (Inst23 <= 1000 && typeof (result) != "undefined") {_RecordType("<191,197,17>",(result)); Inst23++; } } catch(e) {}

try { if (Inst26 <= 1000 && typeof (result.f) != "undefined") {_RecordType("<215,223,19>",(result.f)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (result) != "undefined") {_RecordType("<215,221,19>",(result)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (i) != "undefined") {_RecordType("<227,228,19>",(i)); Inst28++; } } catch(e) {}
  if (result.f != i) {
try { if (Inst29 <= 1000 && typeof (result.f) != "undefined") {_RecordType("<270,278,20>",(result.f)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (result) != "undefined") {_RecordType("<270,276,20>",(result)); Inst30++; } } catch(e) {}
    throw "Error: bad value of f: " + result.f;
  }

try { if (Inst31 <= 1000 && typeof (result.g) != "undefined") {_RecordType("<291,299,23>",(result.g)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (result) != "undefined") {_RecordType("<291,297,23>",(result)); Inst32++; } } catch(e) {}
  if (result.g != 42) {
try { if (Inst33 <= 1000 && typeof (result.g) != "undefined") {_RecordType("<347,355,24>",(result.g)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (result) != "undefined") {_RecordType("<347,353,24>",(result)); Inst34++; } } catch(e) {}
    throw "Error: bad value of g: " + result.g;
  }
}

