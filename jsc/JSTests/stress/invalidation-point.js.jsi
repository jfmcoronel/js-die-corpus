var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (foo) != "undefined") {_RecordType("<9,12,1>",(foo)); Inst0++; } } catch(e) {}
function foo(o, p) {
try { if (Inst1 <= 1000 && typeof (o) != "undefined") {_RecordType("<13,14,1>",(o)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (p) != "undefined") {_RecordType("<16,17,1>",(p)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (possiblyDoBadThings) != "undefined") {_RecordType("<23,42,2>",(possiblyDoBadThings)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (p) != "undefined") {_RecordType("<43,44,2>",(p)); Inst4++; } } catch(e) {}
  possiblyDoBadThings(p);
try { if (Inst5 <= 1000 && typeof (o.f) != "undefined") {_RecordType("<56,59,3>",(o.f)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (o) != "undefined") {_RecordType("<56,57,3>",(o)); Inst6++; } } catch(e) {}
  return o.f();
}

try { if (Inst7 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<66,74,6>",(noInline)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (foo) != "undefined") {_RecordType("<75,78,6>",(foo)); Inst8++; } } catch(e) {}
noInline(foo);

try { if (Inst9 <= 1000 && typeof (Thingy) != "undefined") {_RecordType("<91,97,8>",(Thingy)); Inst9++; } } catch(e) {}
function Thingy() {
  ;
}

Thingy.prototype.f = function () {
  return 42;
};
try { if (Inst10 <= 1000 && typeof (Thingy.prototype.f) != "undefined") {_RecordType("<109,127,12>",(Thingy.prototype.f)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Thingy.prototype) != "undefined") {_RecordType("<109,125,12>",(Thingy.prototype)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Thingy) != "undefined") {_RecordType("<109,115,12>",(Thingy)); Inst12++; } } catch(e) {}

try { if (Inst13 <= 1000 && typeof (possiblyDoBadThings) != "undefined") {_RecordType("<170,189,16>",(possiblyDoBadThings)); Inst13++; } } catch(e) {}
function possiblyDoBadThings(p) {
try { if (Inst14 <= 1000 && typeof (p) != "undefined") {_RecordType("<190,191,16>",(p)); Inst14++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (p) != "undefined") {_RecordType("<201,202,17>",(p)); Inst15++; } } catch(e) {}
  if (p) {
    Thingy.prototype.f = function () {
      return 24;
    };
try { if (Inst16 <= 1000 && typeof (Thingy.prototype.f) != "undefined") {_RecordType("<210,228,18>",(Thingy.prototype.f)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Thingy.prototype) != "undefined") {_RecordType("<210,226,18>",(Thingy.prototype)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Thingy) != "undefined") {_RecordType("<210,216,18>",(Thingy)); Inst18++; } } catch(e) {}
  }
}

try { if (Inst19 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<276,284,24>",(noInline)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (possiblyDoBadThings) != "undefined") {_RecordType("<285,304,24>",(possiblyDoBadThings)); Inst20++; } } catch(e) {}
noInline(possiblyDoBadThings);

for (var i = 0; i < 100000; ++i) {
try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<317,318,26>",(i)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<324,325,26>",(i)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<338,339,26>",(i)); Inst23++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (foo) != "undefined") {_RecordType("<358,361,27>",(foo)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Thingy) != "undefined") {_RecordType("<366,372,27>",(Thingy)); Inst26++; } } catch(e) {}
  var result = foo(new Thingy(), false);
try { if (Inst24 <= 1000 && typeof (result) != "undefined") {_RecordType("<349,355,27>",(result)); Inst24++; } } catch(e) {}

try { if (Inst27 <= 1000 && typeof (result) != "undefined") {_RecordType("<391,397,29>",(result)); Inst27++; } } catch(e) {}
  if (result != 42) {
try { if (Inst28 <= 1000 && typeof (result) != "undefined") {_RecordType("<441,447,30>",(result)); Inst28++; } } catch(e) {}
    throw "Error: bad result: " + result;
  }
}

try { if (Inst30 <= 1000 && typeof (foo) != "undefined") {_RecordType("<469,472,34>",(foo)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (Thingy) != "undefined") {_RecordType("<477,483,34>",(Thingy)); Inst31++; } } catch(e) {}
var result = foo(new Thingy(), true);
try { if (Inst29 <= 1000 && typeof (result) != "undefined") {_RecordType("<460,466,34>",(result)); Inst29++; } } catch(e) {}

try { if (Inst32 <= 1000 && typeof (result) != "undefined") {_RecordType("<499,505,36>",(result)); Inst32++; } } catch(e) {}
if (result != 24) {
try { if (Inst33 <= 1000 && typeof (result) != "undefined") {_RecordType("<547,553,37>",(result)); Inst33++; } } catch(e) {}
  throw "Error: bad result: " + result;
}

