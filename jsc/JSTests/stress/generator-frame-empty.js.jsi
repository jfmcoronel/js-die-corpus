var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (shouldThrow) != "undefined") {_RecordType("<9,20,1>",(shouldThrow)); Inst0++; } } catch(e) {}
function shouldThrow(func, errorMessage) {
try { if (Inst1 <= 1000 && typeof (func) != "undefined") {_RecordType("<21,25,1>",(func)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (errorMessage) != "undefined") {_RecordType("<27,39,1>",(errorMessage)); Inst2++; } } catch(e) {}
  var errorThrown = false;
try { if (Inst3 <= 1000 && typeof (errorThrown) != "undefined") {_RecordType("<49,60,2>",(errorThrown)); Inst3++; } } catch(e) {}
  var error = null;
try { if (Inst4 <= 1000 && typeof (error) != "undefined") {_RecordType("<76,81,3>",(error)); Inst4++; } } catch(e) {}

try { if (Inst6 <= 1000 && typeof (e) != "undefined") {_RecordType("<122,123,7>",(e)); Inst6++; } } catch(e) {}
  try {
try { if (Inst5 <= 1000 && typeof (func) != "undefined") {_RecordType("<103,107,6>",(func)); Inst5++; } } catch(e) {}
    func();
  } catch (e) {
    errorThrown = true;
try { if (Inst7 <= 1000 && typeof (errorThrown) != "undefined") {_RecordType("<131,142,8>",(errorThrown)); Inst7++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (e) != "undefined") {_RecordType("<163,164,9>",(e)); Inst9++; } } catch(e) {}
    error = e;
try { if (Inst8 <= 1000 && typeof (error) != "undefined") {_RecordType("<155,160,9>",(error)); Inst8++; } } catch(e) {}
  }
}

try { if (Inst10 <= 1000 && typeof (shouldThrow) != "undefined") {_RecordType("<173,184,13>",(shouldThrow)); Inst10++; } } catch(e) {}
shouldThrow(function () {
try { if (Inst11 <= 1000 && typeof (fib) != "undefined") {_RecordType("<211,214,14>",(fib)); Inst11++; } } catch(e) {}
  function* fib(flag) {
try { if (Inst12 <= 1000 && typeof (flag) != "undefined") {_RecordType("<215,219,14>",(flag)); Inst12++; } } catch(e) {}
    let a = 1;
try { if (Inst13 <= 1000 && typeof (a) != "undefined") {_RecordType("<231,232,15>",(a)); Inst13++; } } catch(e) {}
    let b = 1;
try { if (Inst14 <= 1000 && typeof (b) != "undefined") {_RecordType("<246,247,16>",(b)); Inst14++; } } catch(e) {}
    yield 42;

try { if (Inst15 <= 1000 && typeof (flag) != "undefined") {_RecordType("<276,280,19>",(flag)); Inst15++; } } catch(e) {}
    if (flag) {
try { if (Inst16 <= 1000 && typeof (c) != "undefined") {_RecordType("<297,298,20>",(c)); Inst16++; } } catch(e) {}
      return c;
    }

    let c = 500;
try { if (Inst17 <= 1000 && typeof (c) != "undefined") {_RecordType("<315,316,23>",(c)); Inst17++; } } catch(e) {}
  }

  let value = 0;
try { if (Inst18 <= 1000 && typeof (value) != "undefined") {_RecordType("<335,340,26>",(value)); Inst18++; } } catch(e) {}

  for (let i = 0; i < 1e4; ++i) {
try { if (Inst19 <= 1000 && typeof (i) != "undefined") {_RecordType("<358,359,28>",(i)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<365,366,28>",(i)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<376,377,28>",(i)); Inst21++; } } catch(e) {}
    for (let v of fib(false)) {
try { if (Inst22 <= 1000 && typeof (v) != "undefined") {_RecordType("<394,395,29>",(v)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (fib) != "undefined") {_RecordType("<399,402,29>",(fib)); Inst23++; } } catch(e) {}
      ;
    }
  }

  for (let v of fib(true)) {
try { if (Inst24 <= 1000 && typeof (v) != "undefined") {_RecordType("<443,444,34>",(v)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (fib) != "undefined") {_RecordType("<448,451,34>",(fib)); Inst25++; } } catch(e) {}
    ;
  }
}, `ReferenceError: Cannot access uninitialized variable.`);

