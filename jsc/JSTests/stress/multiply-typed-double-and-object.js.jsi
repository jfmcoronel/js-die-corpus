var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
var otherObject = {
  valueOf: function () {
    return 5.1;
  }
}; // DFG.
try { if (Inst0 <= 1000 && typeof (otherObject) != "undefined") {_RecordType("<4,15,1>",(otherObject)); Inst0++; } } catch(e) {}

var targetDFG = {
  value: 5.5,
  multiply: function (arg) {
try { if (Inst2 <= 1000 && typeof (arg) != "undefined") {_RecordType("<131,134,9>",(arg)); Inst2++; } } catch(e) {}
    let returnValue = 1;
try { if (Inst3 <= 1000 && typeof (returnValue) != "undefined") {_RecordType("<146,157,10>",(returnValue)); Inst3++; } } catch(e) {}

try { if (Inst4 <= 1000 && typeof (arg) != "undefined") {_RecordType("<179,182,12>",(arg)); Inst4++; } } catch(e) {}
    if (typeof arg == "number") {
try { if (Inst6 <= 1000 && typeof (this.value) != "undefined") {_RecordType("<218,228,13>",(this.value)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (arg) != "undefined") {_RecordType("<231,234,13>",(arg)); Inst7++; } } catch(e) {}
      returnValue = this.value * arg;
try { if (Inst5 <= 1000 && typeof (returnValue) != "undefined") {_RecordType("<204,215,13>",(returnValue)); Inst5++; } } catch(e) {}
    }

try { if (Inst8 <= 1000 && typeof (returnValue) != "undefined") {_RecordType("<254,265,16>",(returnValue)); Inst8++; } } catch(e) {}
    return returnValue + 1;
  }
};
try { if (Inst1 <= 1000 && typeof (targetDFG) != "undefined") {_RecordType("<81,90,7>",(targetDFG)); Inst1++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<278,286,19>",(noInline)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (targetDFG.multiply) != "undefined") {_RecordType("<287,305,19>",(targetDFG.multiply)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (targetDFG) != "undefined") {_RecordType("<287,296,19>",(targetDFG)); Inst11++; } } catch(e) {}
noInline(targetDFG.multiply);

for (let i = 0; i < 400; ++i) {
try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<318,319,21>",(i)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<325,326,21>",(i)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<336,337,21>",(i)); Inst14++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (targetDFG.multiply) != "undefined") {_RecordType("<347,365,22>",(targetDFG.multiply)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (targetDFG) != "undefined") {_RecordType("<347,356,22>",(targetDFG)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (otherObject) != "undefined") {_RecordType("<366,377,22>",(otherObject)); Inst17++; } } catch(e) {}
  if (targetDFG.multiply(otherObject) !== 2) {
    throw "Failed targetDFG.multiply(otherObject)";
  }

try { if (Inst19 <= 1000 && typeof (targetDFG.multiply) != "undefined") {_RecordType("<460,478,26>",(targetDFG.multiply)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (targetDFG) != "undefined") {_RecordType("<460,469,26>",(targetDFG)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Math.PI) != "undefined") {_RecordType("<479,486,26>",(Math.PI)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Math) != "undefined") {_RecordType("<479,483,26>",(Math)); Inst22++; } } catch(e) {}
  let result = targetDFG.multiply(Math.PI);
try { if (Inst18 <= 1000 && typeof (result) != "undefined") {_RecordType("<451,457,26>",(result)); Inst18++; } } catch(e) {}

try { if (Inst23 <= 1000 && typeof (result) != "undefined") {_RecordType("<496,502,28>",(result)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (Math.PI) != "undefined") {_RecordType("<513,520,28>",(Math.PI)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Math) != "undefined") {_RecordType("<513,517,28>",(Math)); Inst25++; } } catch(e) {}
  if (result !== 5.5 * Math.PI + 1) {
try { if (Inst26 <= 1000 && typeof (Math.PI) != "undefined") {_RecordType("<595,602,29>",(Math.PI)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (Math) != "undefined") {_RecordType("<595,599,29>",(Math)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (result) != "undefined") {_RecordType("<620,626,29>",(result)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (i) != "undefined") {_RecordType("<648,649,29>",(i)); Inst29++; } } catch(e) {}
    throw "Failed targetDFG.multiply(Math.PI), expected " + (5.5 * Math.PI + 1) + " got " + result + " at iteration " + i;
  }
}

for (let i = 0; i < 1e3; ++i) {
try { if (Inst30 <= 1000 && typeof (i) != "undefined") {_RecordType("<667,668,33>",(i)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (i) != "undefined") {_RecordType("<674,675,33>",(i)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (i) != "undefined") {_RecordType("<685,686,33>",(i)); Inst32++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof (targetDFG.multiply) != "undefined") {_RecordType("<705,723,34>",(targetDFG.multiply)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (targetDFG) != "undefined") {_RecordType("<705,714,34>",(targetDFG)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (Math.PI) != "undefined") {_RecordType("<724,731,34>",(Math.PI)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (Math) != "undefined") {_RecordType("<724,728,34>",(Math)); Inst37++; } } catch(e) {}
  let result = targetDFG.multiply(Math.PI);
try { if (Inst33 <= 1000 && typeof (result) != "undefined") {_RecordType("<696,702,34>",(result)); Inst33++; } } catch(e) {}

try { if (Inst38 <= 1000 && typeof (result) != "undefined") {_RecordType("<741,747,36>",(result)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (Math.PI) != "undefined") {_RecordType("<758,765,36>",(Math.PI)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (Math) != "undefined") {_RecordType("<758,762,36>",(Math)); Inst40++; } } catch(e) {}
  if (result !== 5.5 * Math.PI + 1) {
try { if (Inst41 <= 1000 && typeof (Math.PI) != "undefined") {_RecordType("<840,847,37>",(Math.PI)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (Math) != "undefined") {_RecordType("<840,844,37>",(Math)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (result) != "undefined") {_RecordType("<865,871,37>",(result)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (i) != "undefined") {_RecordType("<893,894,37>",(i)); Inst44++; } } catch(e) {}
    throw "Failed targetDFG.multiply(Math.PI), expected " + (5.5 * Math.PI + 1) + " got " + result + " at iteration " + i;
  }
} // FTL.


var targetFTL = {
  value: 5.5,
  multiply: function (arg) {
try { if (Inst46 <= 1000 && typeof (arg) != "undefined") {_RecordType("<966,969,44>",(arg)); Inst46++; } } catch(e) {}
    let returnValue = 1;
try { if (Inst47 <= 1000 && typeof (returnValue) != "undefined") {_RecordType("<981,992,45>",(returnValue)); Inst47++; } } catch(e) {}

try { if (Inst48 <= 1000 && typeof (arg) != "undefined") {_RecordType("<1014,1017,47>",(arg)); Inst48++; } } catch(e) {}
    if (typeof arg == "number") {
try { if (Inst50 <= 1000 && typeof (this.value) != "undefined") {_RecordType("<1053,1063,48>",(this.value)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (arg) != "undefined") {_RecordType("<1066,1069,48>",(arg)); Inst51++; } } catch(e) {}
      returnValue = this.value * arg;
try { if (Inst49 <= 1000 && typeof (returnValue) != "undefined") {_RecordType("<1039,1050,48>",(returnValue)); Inst49++; } } catch(e) {}
    }

try { if (Inst52 <= 1000 && typeof (returnValue) != "undefined") {_RecordType("<1089,1100,51>",(returnValue)); Inst52++; } } catch(e) {}
    return returnValue + 1;
  }
};
try { if (Inst45 <= 1000 && typeof (targetFTL) != "undefined") {_RecordType("<916,925,42>",(targetFTL)); Inst45++; } } catch(e) {}
try { if (Inst53 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<1113,1121,54>",(noInline)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (targetFTL.multiply) != "undefined") {_RecordType("<1122,1140,54>",(targetFTL.multiply)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (targetFTL) != "undefined") {_RecordType("<1122,1131,54>",(targetFTL)); Inst55++; } } catch(e) {}
noInline(targetFTL.multiply); // Warmup to baseline.

for (let i = 0; i < 400; ++i) {
try { if (Inst56 <= 1000 && typeof (i) != "undefined") {_RecordType("<1176,1177,56>",(i)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (i) != "undefined") {_RecordType("<1183,1184,56>",(i)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (i) != "undefined") {_RecordType("<1194,1195,56>",(i)); Inst58++; } } catch(e) {}
try { if (Inst59 <= 1000 && typeof (targetFTL.multiply) != "undefined") {_RecordType("<1205,1223,57>",(targetFTL.multiply)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (targetFTL) != "undefined") {_RecordType("<1205,1214,57>",(targetFTL)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (otherObject) != "undefined") {_RecordType("<1224,1235,57>",(otherObject)); Inst61++; } } catch(e) {}
  if (targetFTL.multiply(otherObject) !== 2) {
    throw "Failed targetFTL.multiply(otherObject)";
  }

try { if (Inst63 <= 1000 && typeof (targetFTL.multiply) != "undefined") {_RecordType("<1318,1336,61>",(targetFTL.multiply)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (targetFTL) != "undefined") {_RecordType("<1318,1327,61>",(targetFTL)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (Math.PI) != "undefined") {_RecordType("<1337,1344,61>",(Math.PI)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1337,1341,61>",(Math)); Inst66++; } } catch(e) {}
  let result = targetFTL.multiply(Math.PI);
try { if (Inst62 <= 1000 && typeof (result) != "undefined") {_RecordType("<1309,1315,61>",(result)); Inst62++; } } catch(e) {}

try { if (Inst67 <= 1000 && typeof (result) != "undefined") {_RecordType("<1354,1360,63>",(result)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (Math.PI) != "undefined") {_RecordType("<1371,1378,63>",(Math.PI)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1371,1375,63>",(Math)); Inst69++; } } catch(e) {}
  if (result !== 5.5 * Math.PI + 1) {
try { if (Inst70 <= 1000 && typeof (Math.PI) != "undefined") {_RecordType("<1453,1460,64>",(Math.PI)); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1453,1457,64>",(Math)); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (result) != "undefined") {_RecordType("<1478,1484,64>",(result)); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (i) != "undefined") {_RecordType("<1506,1507,64>",(i)); Inst73++; } } catch(e) {}
    throw "Failed targetFTL.multiply(Math.PI), expected " + (5.5 * Math.PI + 1) + " got " + result + " at iteration " + i;
  }
} // Step over DFG *WITHOUT* OSR Exit.


for (let i = 0; i < 1e6; ++i) {
try { if (Inst74 <= 1000 && typeof (i) != "undefined") {_RecordType("<1563,1564,69>",(i)); Inst74++; } } catch(e) {}try { if (Inst75 <= 1000 && typeof (i) != "undefined") {_RecordType("<1570,1571,69>",(i)); Inst75++; } } catch(e) {}try { if (Inst76 <= 1000 && typeof (i) != "undefined") {_RecordType("<1581,1582,69>",(i)); Inst76++; } } catch(e) {}
try { if (Inst77 <= 1000 && typeof (targetFTL.multiply) != "undefined") {_RecordType("<1592,1610,70>",(targetFTL.multiply)); Inst77++; } } catch(e) {}try { if (Inst78 <= 1000 && typeof (targetFTL) != "undefined") {_RecordType("<1592,1601,70>",(targetFTL)); Inst78++; } } catch(e) {}try { if (Inst79 <= 1000 && typeof (otherObject) != "undefined") {_RecordType("<1611,1622,70>",(otherObject)); Inst79++; } } catch(e) {}
  if (targetFTL.multiply(otherObject) !== 2) {
    throw "Failed targetFTL.multiply(otherObject)";
  }
} // Now OSR Exit in FTL.


for (let i = 0; i < 1e2; ++i) {
try { if (Inst80 <= 1000 && typeof (i) != "undefined") {_RecordType("<1726,1727,76>",(i)); Inst80++; } } catch(e) {}try { if (Inst81 <= 1000 && typeof (i) != "undefined") {_RecordType("<1733,1734,76>",(i)); Inst81++; } } catch(e) {}try { if (Inst82 <= 1000 && typeof (i) != "undefined") {_RecordType("<1744,1745,76>",(i)); Inst82++; } } catch(e) {}
try { if (Inst84 <= 1000 && typeof (targetFTL.multiply) != "undefined") {_RecordType("<1764,1782,77>",(targetFTL.multiply)); Inst84++; } } catch(e) {}try { if (Inst85 <= 1000 && typeof (targetFTL) != "undefined") {_RecordType("<1764,1773,77>",(targetFTL)); Inst85++; } } catch(e) {}try { if (Inst86 <= 1000 && typeof (Math.PI) != "undefined") {_RecordType("<1783,1790,77>",(Math.PI)); Inst86++; } } catch(e) {}try { if (Inst87 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1783,1787,77>",(Math)); Inst87++; } } catch(e) {}
  let result = targetFTL.multiply(Math.PI);
try { if (Inst83 <= 1000 && typeof (result) != "undefined") {_RecordType("<1755,1761,77>",(result)); Inst83++; } } catch(e) {}

try { if (Inst88 <= 1000 && typeof (result) != "undefined") {_RecordType("<1800,1806,79>",(result)); Inst88++; } } catch(e) {}try { if (Inst89 <= 1000 && typeof (Math.PI) != "undefined") {_RecordType("<1817,1824,79>",(Math.PI)); Inst89++; } } catch(e) {}try { if (Inst90 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1817,1821,79>",(Math)); Inst90++; } } catch(e) {}
  if (result !== 5.5 * Math.PI + 1) {
try { if (Inst91 <= 1000 && typeof (Math.PI) != "undefined") {_RecordType("<1899,1906,80>",(Math.PI)); Inst91++; } } catch(e) {}try { if (Inst92 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1899,1903,80>",(Math)); Inst92++; } } catch(e) {}try { if (Inst93 <= 1000 && typeof (result) != "undefined") {_RecordType("<1924,1930,80>",(result)); Inst93++; } } catch(e) {}try { if (Inst94 <= 1000 && typeof (i) != "undefined") {_RecordType("<1952,1953,80>",(i)); Inst94++; } } catch(e) {}
    throw "Failed targetFTL.multiply(Math.PI), expected " + (5.5 * Math.PI + 1) + " got " + result + " at iteration " + i;
  }
}

