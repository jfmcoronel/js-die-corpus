var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Note that this only fails in eager compilation.
try { if (Inst0 <= 1000 && typeof (each) != "undefined") {_RecordType("<60,64,2>",(each)); Inst0++; } } catch(e) {}
function each(ary, func) {
try { if (Inst1 <= 1000 && typeof (ary) != "undefined") {_RecordType("<65,68,2>",(ary)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (func) != "undefined") {_RecordType("<70,74,2>",(func)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (ary) != "undefined") {_RecordType("<84,87,3>",(ary)); Inst3++; } } catch(e) {}
  if (ary) {
    for (var i = 0; i < ary.length && (!ary[i] || !func(ary[i], i, ary)); i += 1) {
try { if (Inst4 <= 1000 && typeof (i) != "undefined") {_RecordType("<104,105,4>",(i)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (i) != "undefined") {_RecordType("<111,112,4>",(i)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (ary.length) != "undefined") {_RecordType("<115,125,4>",(ary.length)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (ary) != "undefined") {_RecordType("<115,118,4>",(ary)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (ary[i]) != "undefined") {_RecordType("<131,137,4>",(ary[i])); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (ary) != "undefined") {_RecordType("<131,134,4>",(ary)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (func) != "undefined") {_RecordType("<142,146,4>",(func)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (ary[i]) != "undefined") {_RecordType("<147,153,4>",(ary[i])); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (ary) != "undefined") {_RecordType("<147,150,4>",(ary)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<155,156,4>",(i)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (ary) != "undefined") {_RecordType("<158,161,4>",(ary)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<165,166,4>",(i)); Inst15++; } } catch(e) {}
      ;
    }
  }
}

var blah = function () {
  var func = function () {
try { if (Inst18 <= 1000 && typeof (function () {
      ;
    }.apply) != "undefined") {_RecordType("<259,292,12>",(function () {
      ;
    }.apply)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Object) != "undefined") {_RecordType("<293,299,14>",(Object)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<301,310,14>",(arguments)); Inst20++; } } catch(e) {}
    return function () {
      ;
    }.apply(Object, arguments);
  };
try { if (Inst17 <= 1000 && typeof (func) != "undefined") {_RecordType("<227,231,11>",(func)); Inst17++; } } catch(e) {}

try { if (Inst21 <= 1000 && typeof (each) != "undefined") {_RecordType("<321,325,17>",(each)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (func) != "undefined") {_RecordType("<336,340,17>",(func)); Inst22++; } } catch(e) {}
  each([{}, {}], func);
};
try { if (Inst16 <= 1000 && typeof (blah) != "undefined") {_RecordType("<200,204,10>",(blah)); Inst16++; } } catch(e) {}

for (var i = 0; i < 1000; i++) {
try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<356,357,20>",(i)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<363,364,20>",(i)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<373,374,20>",(i)); Inst25++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (blah) != "undefined") {_RecordType("<382,386,21>",(blah)); Inst26++; } } catch(e) {}
  blah();
}

