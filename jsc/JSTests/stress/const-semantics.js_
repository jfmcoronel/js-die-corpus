"use strict";

function truth() {
  return true;
}

noInline(truth);

function assert(cond) {
  ;
}

noInline(assert);

function shouldThrowInvalidConstAssignment(f) {
  try {
    f();
  } catch (e) {
    ;
  }
}

noInline(shouldThrowInvalidConstAssignment); // ========== tests below ===========

const NUM_LOOPS = 1000;
;

(function () {
  function foo() {
    const x = 40;
    const {
      y
    } = {
      y: 50
    },
          [z] = [60];
    x === 40;
    y === 50;
    z === 60;
  }

  function bar() {
    const x = 40;
    const {
      y
    } = {
      y: 50
    },
          [z] = [60];

    function capture() {
      return x + y + z;
    }

    x === 40;
    y === 50;
    z === 60;
    capture() === 150;

    if (truth()) {
      const x = "x";
      x === "x";

      if (truth()) {
        let x = 100;
        const y = 200;
        x === 100;
        y === 200;
        x = 10;
        x === 10;
      }

      x === "x";
    }

    x === 40;
  }

  function baz() {
    let y = 10;

    function sideEffects() {
      y = 20;
    }

    const x = 10;

    try {
      x = sideEffects();
    } catch (e) {
      ;
    }

    y === 20;
    x === 10;

    try {
      x = y = 30;
    } catch (e) {
      ;
    }

    y === 30;
    x === 10;
  }

  function taz() {
    let y = 10;
    let z;

    function sideEffects() {
      y = 20;
      return ["hello", "world"];
    }

    const x = 10;

    try {
      [z, x] = sideEffects();
    } catch (e) {
      ;
    }

    y === 20;
    x === 10;
    z === "hello";
  }

  function jaz() {
    const x = "x";

    function capX() {
      return x;
    }

    x === "x";
    capX() === "x";

    if (truth()) {
      let y = 40;

      let capY = function () {
        return y;
      };

      x === "x";
      capX() === "x";
    }

    x === "x";
    capX() === "x";
  }

  for (var i = 0; i < NUM_LOOPS; i++) {
    foo();
    bar();
    baz();
    jaz();
  }
})();

;

(function () {
  function foo() {
    const x = 40;
    x = 30;
  }

  function bar() {
    const x = 40;

    function capX() {
      return x;
    }

    x = 30;
  }

  function baz() {
    const x = 40;
    x === 40;

    function bad() {
      x = 10;
    }

    bad();
  }

  function jaz() {
    const x = 40;
    x === 40;

    function bad() {
      eval("x = 10");
    }

    bad();
  }

  function faz() {
    const x = 40;
    x === 40;
    eval("x = 10");
  }

  function raz() {
    const x = 40;
    x === 40;
    ;
    ({
      x
    } = {
      x: 20
    });
  }

  function taz() {
    const x = 40;

    function capX() {
      return x;
    }

    capX() === 40;
    ;
    ({
      x
    } = {
      x: 20
    });
  }

  function paz() {
    const x = 20;
    const y = x = 20;
  }

  for (var i = 0; i < NUM_LOOPS; i++) {
    shouldThrowInvalidConstAssignment(foo);
    shouldThrowInvalidConstAssignment(bar);
    shouldThrowInvalidConstAssignment(baz);
    shouldThrowInvalidConstAssignment(jaz);
    shouldThrowInvalidConstAssignment(faz);
    shouldThrowInvalidConstAssignment(raz);
    shouldThrowInvalidConstAssignment(taz);
    shouldThrowInvalidConstAssignment(paz);
  }
})();

;

(function () {
  function foo() {
    const x = 40;
    eval("x = 30;");
  }

  function bar() {
    const x = 20;
    x += 20;
  }

  function baz() {
    const x = 20;
    x -= 20;
  }

  function taz() {
    const x = 20;
    shouldThrowInvalidConstAssignment(function () {
      x = 20;
    });
    x === 20;
    shouldThrowInvalidConstAssignment(function () {
      x += 20;
    });
    x === 20;
    shouldThrowInvalidConstAssignment(function () {
      x -= 20;
    });
    x === 20;
    shouldThrowInvalidConstAssignment(function () {
      x *= 20;
    });
    x === 20;
    shouldThrowInvalidConstAssignment(function () {
      x /= 20;
    });
    x === 20;
    shouldThrowInvalidConstAssignment(function () {
      x >>= 20;
    });
    x === 20;
    shouldThrowInvalidConstAssignment(function () {
      x <<= 20;
    });
    x === 20;
    shouldThrowInvalidConstAssignment(function () {
      x ^= 20;
    });
    x === 20;
    shouldThrowInvalidConstAssignment(function () {
      x++;
    });
    x === 20;
    shouldThrowInvalidConstAssignment(function () {
      x--;
    });
    x === 20;
    shouldThrowInvalidConstAssignment(function () {
      ++x;
    });
    x === 20;
    shouldThrowInvalidConstAssignment(function () {
      --x;
    });
    x === 20;
  }

  function jaz() {
    const x = 20;
    let threw = false;

    try {
      x = 20;
    } catch (e) {
      threw = true;
    }

    threw;
    threw = false;

    try {
      x += 20;
    } catch (e) {
      threw = true;
    }

    threw;
    threw = false;

    try {
      x -= 20;
    } catch (e) {
      threw = true;
    }

    threw;
    threw = false;

    try {
      x *= 20;
    } catch (e) {
      threw = true;
    }

    threw;
    threw = false;

    try {
      x /= 20;
    } catch (e) {
      threw = true;
    }

    threw;
    threw = false;

    try {
      x >>= 20;
    } catch (e) {
      threw = true;
    }

    threw;
    threw = false;

    try {
      x <<= 20;
    } catch (e) {
      threw = true;
    }

    threw;
    threw = false;

    try {
      x ^= 20;
    } catch (e) {
      threw = true;
    }

    threw;
    threw = false;

    try {
      x++;
    } catch (e) {
      threw = true;
    }

    threw;
    threw = false;

    try {
      x--;
    } catch (e) {
      threw = true;
    }

    threw;
    threw = false;

    try {
      ++x;
    } catch (e) {
      threw = true;
    }

    threw;
    threw = false;

    try {
      --x;
    } catch (e) {
      threw = true;
    }

    ;
    threw;
  }

  for (var i = 0; i < NUM_LOOPS; i++) {
    shouldThrowInvalidConstAssignment(foo);
    shouldThrowInvalidConstAssignment(bar);
    shouldThrowInvalidConstAssignment(baz);
    taz();
    jaz();
  }
})();
