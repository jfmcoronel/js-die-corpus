var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (Cons1) != "undefined") {_RecordType("<9,14,1>",(Cons1)); Inst0++; } } catch(e) {}
function Cons1() {
  ;
}

Cons1.prototype.f = 42;
try { if (Inst1 <= 1000 && typeof (Cons1.prototype.f) != "undefined") {_RecordType("<26,43,5>",(Cons1.prototype.f)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Cons1.prototype) != "undefined") {_RecordType("<26,41,5>",(Cons1.prototype)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Cons1) != "undefined") {_RecordType("<26,31,5>",(Cons1)); Inst3++; } } catch(e) {}

try { if (Inst4 <= 1000 && typeof (Cons2) != "undefined") {_RecordType("<60,65,7>",(Cons2)); Inst4++; } } catch(e) {}
function Cons2() {
  ;
}

try { if (Inst5 <= 1000 && typeof (Cons2.prototype.__defineGetter__) != "undefined") {_RecordType("<77,109,11>",(Cons2.prototype.__defineGetter__)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Cons2.prototype) != "undefined") {_RecordType("<77,92,11>",(Cons2.prototype)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Cons2) != "undefined") {_RecordType("<77,82,11>",(Cons2)); Inst7++; } } catch(e) {}
Cons2.prototype.__defineGetter__("f", function () {
try { if (Inst8 <= 1000 && typeof (counter) != "undefined") {_RecordType("<131,138,12>",(counter)); Inst8++; } } catch(e) {}
  counter++;
  return 84;
});

try { if (Inst9 <= 1000 && typeof (foo) != "undefined") {_RecordType("<169,172,16>",(foo)); Inst9++; } } catch(e) {}
function foo(o) {
try { if (Inst10 <= 1000 && typeof (o) != "undefined") {_RecordType("<173,174,16>",(o)); Inst10++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (o.f) != "undefined") {_RecordType("<187,190,17>",(o.f)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (o) != "undefined") {_RecordType("<187,188,17>",(o)); Inst12++; } } catch(e) {}
  return o.f;
}

try { if (Inst13 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<195,203,20>",(noInline)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (foo) != "undefined") {_RecordType("<204,207,20>",(foo)); Inst14++; } } catch(e) {}
noInline(foo);
var counter = 0;
try { if (Inst15 <= 1000 && typeof (counter) != "undefined") {_RecordType("<214,221,21>",(counter)); Inst15++; } } catch(e) {}

try { if (Inst16 <= 1000 && typeof (test) != "undefined") {_RecordType("<237,241,23>",(test)); Inst16++; } } catch(e) {}
function test(o, expected, expectedCount) {
try { if (Inst17 <= 1000 && typeof (o) != "undefined") {_RecordType("<242,243,23>",(o)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (expected) != "undefined") {_RecordType("<245,253,23>",(expected)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (expectedCount) != "undefined") {_RecordType("<255,268,23>",(expectedCount)); Inst19++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (foo) != "undefined") {_RecordType("<287,290,24>",(foo)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (o) != "undefined") {_RecordType("<291,292,24>",(o)); Inst22++; } } catch(e) {}
  var result = foo(o);
try { if (Inst20 <= 1000 && typeof (result) != "undefined") {_RecordType("<278,284,24>",(result)); Inst20++; } } catch(e) {}

try { if (Inst23 <= 1000 && typeof (result) != "undefined") {_RecordType("<302,308,26>",(result)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (expected) != "undefined") {_RecordType("<312,320,26>",(expected)); Inst24++; } } catch(e) {}
  if (result != expected) {
try { if (Inst25 <= 1000 && typeof (Error) != "undefined") {_RecordType("<338,343,27>",(Error)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (result) != "undefined") {_RecordType("<361,367,27>",(result)); Inst26++; } } catch(e) {}
    throw new Error("Bad result: " + result);
  }

try { if (Inst27 <= 1000 && typeof (counter) != "undefined") {_RecordType("<381,388,30>",(counter)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (expectedCount) != "undefined") {_RecordType("<392,405,30>",(expectedCount)); Inst28++; } } catch(e) {}
  if (counter != expectedCount) {
try { if (Inst29 <= 1000 && typeof (Error) != "undefined") {_RecordType("<423,428,31>",(Error)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (counter) != "undefined") {_RecordType("<453,460,31>",(counter)); Inst30++; } } catch(e) {}
    throw new Error("Bad counter value: " + counter);
  }
}

for (var i = 0; i < 100000; ++i) {
try { if (Inst31 <= 1000 && typeof (i) != "undefined") {_RecordType("<479,480,35>",(i)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (i) != "undefined") {_RecordType("<486,487,35>",(i)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (i) != "undefined") {_RecordType("<500,501,35>",(i)); Inst33++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof (test) != "undefined") {_RecordType("<507,511,36>",(test)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (Cons1) != "undefined") {_RecordType("<516,521,36>",(Cons1)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (counter) != "undefined") {_RecordType("<529,536,36>",(counter)); Inst36++; } } catch(e) {}
  test(new Cons1(), 42, counter);
try { if (Inst37 <= 1000 && typeof (test) != "undefined") {_RecordType("<541,545,37>",(test)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (Cons2) != "undefined") {_RecordType("<550,555,37>",(Cons2)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (counter) != "undefined") {_RecordType("<563,570,37>",(counter)); Inst39++; } } catch(e) {}
  test(new Cons2(), 84, counter + 1);
}

