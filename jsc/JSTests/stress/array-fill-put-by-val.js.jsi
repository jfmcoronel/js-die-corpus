var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (shouldThrow) != "undefined") {_RecordType("<9,20,1>",(shouldThrow)); Inst0++; } } catch(e) {}
function shouldThrow(func, message) {
try { if (Inst1 <= 1000 && typeof (func) != "undefined") {_RecordType("<21,25,1>",(func)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (message) != "undefined") {_RecordType("<27,34,1>",(message)); Inst2++; } } catch(e) {}
  var error = null;
try { if (Inst3 <= 1000 && typeof (error) != "undefined") {_RecordType("<44,49,2>",(error)); Inst3++; } } catch(e) {}

try { if (Inst5 <= 1000 && typeof (e) != "undefined") {_RecordType("<90,91,6>",(e)); Inst5++; } } catch(e) {}
  try {
try { if (Inst4 <= 1000 && typeof (func) != "undefined") {_RecordType("<71,75,5>",(func)); Inst4++; } } catch(e) {}
    func();
  } catch (e) {
try { if (Inst7 <= 1000 && typeof (e) != "undefined") {_RecordType("<107,108,7>",(e)); Inst7++; } } catch(e) {}
    error = e;
try { if (Inst6 <= 1000 && typeof (error) != "undefined") {_RecordType("<99,104,7>",(error)); Inst6++; } } catch(e) {}
  }

try { if (Inst8 <= 1000 && typeof (error) != "undefined") {_RecordType("<122,127,10>",(error)); Inst8++; } } catch(e) {}
  if (!error) {
try { if (Inst9 <= 1000 && typeof (Error) != "undefined") {_RecordType("<145,150,11>",(Error)); Inst9++; } } catch(e) {}
    throw new Error("not thrown.");
  }

try { if (Inst10 <= 1000 && typeof (String) != "undefined") {_RecordType("<178,184,14>",(String)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (error) != "undefined") {_RecordType("<185,190,14>",(error)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (message) != "undefined") {_RecordType("<196,203,14>",(message)); Inst12++; } } catch(e) {}
  if (String(error) !== message) {
try { if (Inst13 <= 1000 && typeof (Error) != "undefined") {_RecordType("<221,226,15>",(Error)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (String) != "undefined") {_RecordType("<243,249,15>",(String)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (error) != "undefined") {_RecordType("<250,255,15>",(error)); Inst15++; } } catch(e) {}
    throw new Error("bad error: " + String(error));
  }
}

try { if (Inst17 <= 1000 && typeof (Array) != "undefined") {_RecordType("<282,287,19>",(Array)); Inst17++; } } catch(e) {}
var array = new Array(10);
try { if (Inst16 <= 1000 && typeof (array) != "undefined") {_RecordType("<270,275,19>",(array)); Inst16++; } } catch(e) {}

for (var i = 0; i < 10; ++i) {
try { if (Inst18 <= 1000 && typeof (i) != "undefined") {_RecordType("<303,304,21>",(i)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (i) != "undefined") {_RecordType("<310,311,21>",(i)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<320,321,21>",(i)); Inst20++; } } catch(e) {}
try { if (Inst42 <= 1000 && typeof (i) != "undefined") {_RecordType("<751,752,42>",(i)); Inst42++; } } catch(e) {}
  (function (index) {
try { if (Inst21 <= 1000 && typeof (index) != "undefined") {_RecordType("<338,343,22>",(index)); Inst21++; } } catch(e) {}
    var seenOnce = false;
try { if (Inst22 <= 1000 && typeof (seenOnce) != "undefined") {_RecordType("<355,363,23>",(seenOnce)); Inst22++; } } catch(e) {}
    var storage = null;
try { if (Inst23 <= 1000 && typeof (storage) != "undefined") {_RecordType("<381,388,24>",(storage)); Inst23++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<401,422,25>",(Object.defineProperty)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Object) != "undefined") {_RecordType("<401,407,25>",(Object)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<423,438,25>",(Array.prototype)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (Array) != "undefined") {_RecordType("<423,428,25>",(Array)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (index) != "undefined") {_RecordType("<440,445,25>",(index)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (get) != "undefined") {_RecordType("<455,458,26>",(get)); Inst29++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (set) != "undefined") {_RecordType("<554,557,31>",(set)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (value) != "undefined") {_RecordType("<558,563,31>",(value)); Inst34++; } } catch(e) {}
    Object.defineProperty(Array.prototype, index, {
      get() {
try { if (Inst30 <= 1000 && typeof (Error) != "undefined") {_RecordType("<481,486,27>",(Error)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (index) != "undefined") {_RecordType("<506,511,27>",(index)); Inst31++; } } catch(e) {}
        throw new Error('get is called.' + index);
try { if (Inst32 <= 1000 && typeof (storage) != "undefined") {_RecordType("<529,536,28>",(storage)); Inst32++; } } catch(e) {}
        return storage;
      },

      set(value) {
try { if (Inst35 <= 1000 && typeof (seenOnce) != "undefined") {_RecordType("<579,587,32>",(seenOnce)); Inst35++; } } catch(e) {}
        if (seenOnce) {
try { if (Inst36 <= 1000 && typeof (Error) != "undefined") {_RecordType("<611,616,33>",(Error)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (index) != "undefined") {_RecordType("<636,641,33>",(index)); Inst37++; } } catch(e) {}
          throw new Error('set is called.' + index);
        }

        seenOnce = true;
try { if (Inst38 <= 1000 && typeof (seenOnce) != "undefined") {_RecordType("<663,671,36>",(seenOnce)); Inst38++; } } catch(e) {}
try { if (Inst40 <= 1000 && typeof (value) != "undefined") {_RecordType("<698,703,37>",(value)); Inst40++; } } catch(e) {}
        storage = value;
try { if (Inst39 <= 1000 && typeof (storage) != "undefined") {_RecordType("<688,695,37>",(storage)); Inst39++; } } catch(e) {}
try { if (Inst41 <= 1000 && typeof (storage) != "undefined") {_RecordType("<720,727,38>",(storage)); Inst41++; } } catch(e) {}
        return storage;
      }

    });
  })(i);
} // No error, but all seenOnce becomes true.


try { if (Inst43 <= 1000 && typeof (array.fill) != "undefined") {_RecordType("<803,813,46>",(array.fill)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (array) != "undefined") {_RecordType("<803,808,46>",(array)); Inst44++; } } catch(e) {}
array.fill(42); // Ensures that all setter is called once.

for (var i = 0; i < 10; ++i) {
try { if (Inst45 <= 1000 && typeof (i) != "undefined") {_RecordType("<872,873,48>",(i)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (i) != "undefined") {_RecordType("<879,880,48>",(i)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (i) != "undefined") {_RecordType("<889,890,48>",(i)); Inst47++; } } catch(e) {}
try { if (Inst48 <= 1000 && typeof (shouldThrow) != "undefined") {_RecordType("<896,907,49>",(shouldThrow)); Inst48++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (i) != "undefined") {_RecordType("<971,972,51>",(i)); Inst52++; } } catch(e) {}
  shouldThrow(function () {
try { if (Inst51 <= 1000 && typeof (i) != "undefined") {_RecordType("<937,938,50>",(i)); Inst51++; } } catch(e) {}
    array[i] = i;
try { if (Inst49 <= 1000 && typeof (array[i]) != "undefined") {_RecordType("<926,934,50>",(array[i])); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (array) != "undefined") {_RecordType("<926,931,50>",(array)); Inst50++; } } catch(e) {}
  }, "Error: set is called." + i);
}

