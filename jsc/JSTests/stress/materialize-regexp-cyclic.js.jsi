var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<9,17,1>",(shouldBe)); Inst0++; } } catch(e) {}
function shouldBe(actual, expected) {
try { if (Inst1 <= 1000 && typeof (actual) != "undefined") {_RecordType("<18,24,1>",(actual)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (expected) != "undefined") {_RecordType("<26,34,1>",(expected)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (actual) != "undefined") {_RecordType("<44,50,2>",(actual)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (expected) != "undefined") {_RecordType("<55,63,2>",(expected)); Inst4++; } } catch(e) {}
  if (actual !== expected) {
try { if (Inst5 <= 1000 && typeof (Error) != "undefined") {_RecordType("<81,86,3>",(Error)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (actual) != "undefined") {_RecordType("<103,109,3>",(actual)); Inst6++; } } catch(e) {}
    throw new Error('bad value: ' + actual);
  }
}

try { if (Inst7 <= 1000 && typeof (test) != "undefined") {_RecordType("<128,132,7>",(test)); Inst7++; } } catch(e) {}
function test(num) {
try { if (Inst8 <= 1000 && typeof (num) != "undefined") {_RecordType("<133,136,7>",(num)); Inst8++; } } catch(e) {}
  var regexp = /hello world/;
try { if (Inst9 <= 1000 && typeof (regexp) != "undefined") {_RecordType("<146,152,8>",(regexp)); Inst9++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (regexp) != "undefined") {_RecordType("<201,207,10>",(regexp)); Inst12++; } } catch(e) {}
  regexp.lastIndex = {
    ok: regexp,
    value: 42
  };
try { if (Inst10 <= 1000 && typeof (regexp.lastIndex) != "undefined") {_RecordType("<172,188,9>",(regexp.lastIndex)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (regexp) != "undefined") {_RecordType("<172,178,9>",(regexp)); Inst11++; } } catch(e) {}

try { if (Inst13 <= 1000 && typeof (num) != "undefined") {_RecordType("<235,238,14>",(num)); Inst13++; } } catch(e) {}
  if (num === 0) {
try { if (Inst14 <= 1000 && typeof (regexp) != "undefined") {_RecordType("<259,265,15>",(regexp)); Inst14++; } } catch(e) {}
    return regexp;
  }

try { if (Inst15 <= 1000 && typeof (num) != "undefined") {_RecordType("<278,281,18>",(num)); Inst15++; } } catch(e) {}
  if (num === 1) {
try { if (Inst16 <= 1000 && typeof (regexp.lastIndex) != "undefined") {_RecordType("<302,318,19>",(regexp.lastIndex)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (regexp) != "undefined") {_RecordType("<302,308,19>",(regexp)); Inst17++; } } catch(e) {}
    return regexp.lastIndex;
  }

try { if (Inst18 <= 1000 && typeof (regexp.lastIndex.value) != "undefined") {_RecordType("<334,356,22>",(regexp.lastIndex.value)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (regexp.lastIndex) != "undefined") {_RecordType("<334,350,22>",(regexp.lastIndex)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (regexp) != "undefined") {_RecordType("<334,340,22>",(regexp)); Inst20++; } } catch(e) {}
  return regexp.lastIndex.value;
}

try { if (Inst21 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<361,369,25>",(noInline)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (test) != "undefined") {_RecordType("<370,374,25>",(test)); Inst22++; } } catch(e) {}
noInline(test);

for (var i = 0; i < 1e6; ++i) {
try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<387,388,27>",(i)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<394,395,27>",(i)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<405,406,27>",(i)); Inst25++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (i) != "undefined") {_RecordType("<422,423,28>",(i)); Inst27++; } } catch(e) {}
  var num = i % 3;
try { if (Inst26 <= 1000 && typeof (num) != "undefined") {_RecordType("<416,419,28>",(num)); Inst26++; } } catch(e) {}

try { if (Inst28 <= 1000 && typeof (num) != "undefined") {_RecordType("<440,443,30>",(num)); Inst28++; } } catch(e) {}
  switch (num) {
    case 0:
try { if (Inst30 <= 1000 && typeof (test) != "undefined") {_RecordType("<478,482,32>",(test)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (num) != "undefined") {_RecordType("<483,486,32>",(num)); Inst31++; } } catch(e) {}
      var regexp = test(num);
try { if (Inst29 <= 1000 && typeof (regexp) != "undefined") {_RecordType("<469,475,32>",(regexp)); Inst29++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<495,503,33>",(shouldBe)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (regexp) != "undefined") {_RecordType("<504,510,33>",(regexp)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<522,528,33>",(RegExp)); Inst34++; } } catch(e) {}
      shouldBe(regexp instanceof RegExp, true);
try { if (Inst35 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<543,551,34>",(shouldBe)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (regexp.lastIndex) != "undefined") {_RecordType("<559,575,34>",(regexp.lastIndex)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (regexp) != "undefined") {_RecordType("<559,565,34>",(regexp)); Inst37++; } } catch(e) {}
      shouldBe(typeof regexp.lastIndex, "object");
try { if (Inst38 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<594,602,35>",(shouldBe)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (regexp.lastIndex.ok) != "undefined") {_RecordType("<603,622,35>",(regexp.lastIndex.ok)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (regexp.lastIndex) != "undefined") {_RecordType("<603,619,35>",(regexp.lastIndex)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (regexp) != "undefined") {_RecordType("<603,609,35>",(regexp)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (regexp) != "undefined") {_RecordType("<624,630,35>",(regexp)); Inst42++; } } catch(e) {}
      shouldBe(regexp.lastIndex.ok, regexp);
      break;

    case 1:
try { if (Inst44 <= 1000 && typeof (test) != "undefined") {_RecordType("<678,682,39>",(test)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (num) != "undefined") {_RecordType("<683,686,39>",(num)); Inst45++; } } catch(e) {}
      var object = test(num);
try { if (Inst43 <= 1000 && typeof (object) != "undefined") {_RecordType("<669,675,39>",(object)); Inst43++; } } catch(e) {}
try { if (Inst46 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<695,703,40>",(shouldBe)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (object.value) != "undefined") {_RecordType("<704,716,40>",(object.value)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (object) != "undefined") {_RecordType("<704,710,40>",(object)); Inst48++; } } catch(e) {}
      shouldBe(object.value, 42);
try { if (Inst49 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<729,737,41>",(shouldBe)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (object.ok) != "undefined") {_RecordType("<738,747,41>",(object.ok)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (object) != "undefined") {_RecordType("<738,744,41>",(object)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<759,765,41>",(RegExp)); Inst52++; } } catch(e) {}
      shouldBe(object.ok instanceof RegExp, true);
try { if (Inst53 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<780,788,42>",(shouldBe)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (object.ok.lastIndex) != "undefined") {_RecordType("<789,808,42>",(object.ok.lastIndex)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (object.ok) != "undefined") {_RecordType("<789,798,42>",(object.ok)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (object) != "undefined") {_RecordType("<789,795,42>",(object)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (object) != "undefined") {_RecordType("<810,816,42>",(object)); Inst57++; } } catch(e) {}
      shouldBe(object.ok.lastIndex, object);
      break;

    case 2:
try { if (Inst59 <= 1000 && typeof (test) != "undefined") {_RecordType("<863,867,46>",(test)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (num) != "undefined") {_RecordType("<868,871,46>",(num)); Inst60++; } } catch(e) {}
      var value = test(num);
try { if (Inst58 <= 1000 && typeof (value) != "undefined") {_RecordType("<855,860,46>",(value)); Inst58++; } } catch(e) {}
try { if (Inst61 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<880,888,47>",(shouldBe)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (value) != "undefined") {_RecordType("<889,894,47>",(value)); Inst62++; } } catch(e) {}
      shouldBe(value, 42);
      break;
  }
}

