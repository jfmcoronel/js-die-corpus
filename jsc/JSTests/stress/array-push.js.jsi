var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (foo) != "undefined") {_RecordType("<9,12,1>",(foo)); Inst0++; } } catch(e) {}
function foo() {
  var array = [];
try { if (Inst1 <= 1000 && typeof (array) != "undefined") {_RecordType("<23,28,2>",(array)); Inst1++; } } catch(e) {}
  var result = [];
try { if (Inst2 <= 1000 && typeof (result) != "undefined") {_RecordType("<41,47,3>",(result)); Inst2++; } } catch(e) {}

  for (var i = 0; i < 42; ++i) {
try { if (Inst3 <= 1000 && typeof (i) != "undefined") {_RecordType("<66,67,5>",(i)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (i) != "undefined") {_RecordType("<73,74,5>",(i)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (i) != "undefined") {_RecordType("<83,84,5>",(i)); Inst5++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (result.push) != "undefined") {_RecordType("<92,103,6>",(result.push)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (result) != "undefined") {_RecordType("<92,98,6>",(result)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (array.push) != "undefined") {_RecordType("<104,114,6>",(array.push)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (array) != "undefined") {_RecordType("<104,109,6>",(array)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<119,120,6>",(i)); Inst10++; } } catch(e) {}
    result.push(array.push(7 - i));
  }

try { if (Inst11 <= 1000 && typeof (array) != "undefined") {_RecordType("<139,144,9>",(array)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (result) != "undefined") {_RecordType("<146,152,9>",(result)); Inst12++; } } catch(e) {}
  return [array, result];
}

try { if (Inst13 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<158,166,12>",(noInline)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (foo) != "undefined") {_RecordType("<167,170,12>",(foo)); Inst14++; } } catch(e) {}
noInline(foo);

for (var i = 0; i < 100000; ++i) {
try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<183,184,14>",(i)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<190,191,14>",(i)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (i) != "undefined") {_RecordType("<204,205,14>",(i)); Inst17++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (foo) != "undefined") {_RecordType("<224,227,15>",(foo)); Inst19++; } } catch(e) {}
  var result = foo();
try { if (Inst18 <= 1000 && typeof (result) != "undefined") {_RecordType("<215,221,15>",(result)); Inst18++; } } catch(e) {}

try { if (Inst20 <= 1000 && typeof (result[0].toString) != "undefined") {_RecordType("<238,256,17>",(result[0].toString)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (result[0]) != "undefined") {_RecordType("<238,247,17>",(result[0])); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (result) != "undefined") {_RecordType("<238,244,17>",(result)); Inst22++; } } catch(e) {}
  if (result[0].toString() != "7,6,5,4,3,2,1,0,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34") {
try { if (Inst23 <= 1000 && typeof (result[0]) != "undefined") {_RecordType("<443,452,18>",(result[0])); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (result) != "undefined") {_RecordType("<443,449,18>",(result)); Inst24++; } } catch(e) {}
    throw "Error: bad array: " + result[0];
  }

try { if (Inst25 <= 1000 && typeof (result[1].toString) != "undefined") {_RecordType("<465,483,21>",(result[1].toString)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (result[1]) != "undefined") {_RecordType("<465,474,21>",(result[1])); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (result) != "undefined") {_RecordType("<465,471,21>",(result)); Inst27++; } } catch(e) {}
  if (result[1].toString() != "1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42") {
try { if (Inst28 <= 1000 && typeof (result[1]) != "undefined") {_RecordType("<644,653,22>",(result[1])); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (result) != "undefined") {_RecordType("<644,650,22>",(result)); Inst29++; } } catch(e) {}
    throw "Error: bad array: " + result[1];
  }
}

