var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (Inner) != "undefined") {_RecordType("<9,14,1>",(Inner)); Inst0++; } } catch(e) {}
function Inner() {
  this.i = 0;
try { if (Inst1 <= 1000 && typeof (this.i) != "undefined") {_RecordType("<21,27,2>",(this.i)); Inst1++; } } catch(e) {}

  this.doStuff = function () {
try { if (Inst3 <= 1000 && typeof (this.i) != "undefined") {_RecordType("<69,75,5>",(this.i)); Inst3++; } } catch(e) {}
    this.i++;

try { if (Inst4 <= 1000 && typeof (this.i) != "undefined") {_RecordType("<88,94,7>",(this.i)); Inst4++; } } catch(e) {}
    if (this.i > 10000) {
try { if (Inst5 <= 1000 && typeof (this.isDone) != "undefined") {_RecordType("<112,123,8>",(this.isDone)); Inst5++; } } catch(e) {}
      this.isDone();
    }
  };
try { if (Inst2 <= 1000 && typeof (this.doStuff) != "undefined") {_RecordType("<36,48,4>",(this.doStuff)); Inst2++; } } catch(e) {}
}

var foo = function () {
try { if (Inst8 <= 1000 && typeof (Inner) != "undefined") {_RecordType("<183,188,14>",(Inner)); Inst8++; } } catch(e) {}
  var inner = new Inner();
try { if (Inst7 <= 1000 && typeof (inner) != "undefined") {_RecordType("<171,176,14>",(inner)); Inst7++; } } catch(e) {}
  var done = false;
try { if (Inst9 <= 1000 && typeof (done) != "undefined") {_RecordType("<198,202,15>",(done)); Inst9++; } } catch(e) {}

  inner.isDone = function () {
    done = true;
try { if (Inst12 <= 1000 && typeof (done) != "undefined") {_RecordType("<248,252,18>",(done)); Inst12++; } } catch(e) {}
  };
try { if (Inst10 <= 1000 && typeof (inner.isDone) != "undefined") {_RecordType("<215,227,17>",(inner.isDone)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (inner) != "undefined") {_RecordType("<215,220,17>",(inner)); Inst11++; } } catch(e) {}

  while (true) {
try { if (Inst14 <= 1000 && typeof (inner.doStuff) != "undefined") {_RecordType("<298,311,22>",(inner.doStuff)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (inner) != "undefined") {_RecordType("<298,303,22>",(inner)); Inst15++; } } catch(e) {}
    var val = inner.doStuff();
try { if (Inst13 <= 1000 && typeof (val) != "undefined") {_RecordType("<292,295,22>",(val)); Inst13++; } } catch(e) {}

try { if (Inst16 <= 1000 && typeof (done) != "undefined") {_RecordType("<324,328,24>",(done)); Inst16++; } } catch(e) {}
    if (done) {
      break;
    }
  }
};
try { if (Inst6 <= 1000 && typeof (foo) != "undefined") {_RecordType("<145,148,13>",(foo)); Inst6++; } } catch(e) {}

try { if (Inst17 <= 1000 && typeof (foo) != "undefined") {_RecordType("<359,362,30>",(foo)); Inst17++; } } catch(e) {}
foo();

