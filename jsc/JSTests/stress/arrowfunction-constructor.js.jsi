var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
var testCase = function (actual, expected, message) {
try { if (Inst1 <= 1000 && typeof (actual) != "undefined") {_RecordType("<25,31,1>",(actual)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (expected) != "undefined") {_RecordType("<33,41,1>",(expected)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (message) != "undefined") {_RecordType("<43,50,1>",(message)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (actual) != "undefined") {_RecordType("<60,66,2>",(actual)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (expected) != "undefined") {_RecordType("<71,79,2>",(expected)); Inst5++; } } catch(e) {}
  if (actual !== expected) {
try { if (Inst6 <= 1000 && typeof (message) != "undefined") {_RecordType("<93,100,3>",(message)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (expected) != "undefined") {_RecordType("<120,128,3>",(expected)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (actual) != "undefined") {_RecordType("<148,154,3>",(actual)); Inst8++; } } catch(e) {}
    throw message + ". Expected '" + expected + "', but was '" + actual + "'";
  }
};
try { if (Inst0 <= 1000 && typeof (testCase) != "undefined") {_RecordType("<4,12,1>",(testCase)); Inst0++; } } catch(e) {}

var simpleArrowFunction = () => {
  ;
};
try { if (Inst9 <= 1000 && typeof (simpleArrowFunction) != "undefined") {_RecordType("<174,193,7>",(simpleArrowFunction)); Inst9++; } } catch(e) {}

try { if (Inst10 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<212,220,11>",(noInline)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (simpleArrowFunction) != "undefined") {_RecordType("<221,240,11>",(simpleArrowFunction)); Inst11++; } } catch(e) {}
noInline(simpleArrowFunction);
var errorOnCreate = false;
try { if (Inst12 <= 1000 && typeof (errorOnCreate) != "undefined") {_RecordType("<247,260,12>",(errorOnCreate)); Inst12++; } } catch(e) {}

for (i = 0; i < 10000; i++) {
try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<276,277,14>",(i)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<283,284,14>",(i)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<294,295,14>",(i)); Inst15++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (e) != "undefined") {_RecordType("<360,361,17>",(e)); Inst18++; } } catch(e) {}
  try {
try { if (Inst17 <= 1000 && typeof (simpleArrowFunction) != "undefined") {_RecordType("<326,345,16>",(simpleArrowFunction)); Inst17++; } } catch(e) {}
    var fc = new simpleArrowFunction();
try { if (Inst16 <= 1000 && typeof (fc) != "undefined") {_RecordType("<317,319,16>",(fc)); Inst16++; } } catch(e) {}
  } catch (e) {
    errorOnCreate = true;
try { if (Inst19 <= 1000 && typeof (errorOnCreate) != "undefined") {_RecordType("<369,382,18>",(errorOnCreate)); Inst19++; } } catch(e) {}
  }

try { if (Inst20 <= 1000 && typeof (testCase) != "undefined") {_RecordType("<398,406,21>",(testCase)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (errorOnCreate) != "undefined") {_RecordType("<407,420,21>",(errorOnCreate)); Inst21++; } } catch(e) {}
  testCase(errorOnCreate, true, "Error: No exception during run new ArrowFunction");
}

