var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<9,17,1>",(shouldBe)); Inst0++; } } catch(e) {}
function shouldBe(actual, expected) {
try { if (Inst1 <= 1000 && typeof (actual) != "undefined") {_RecordType("<18,24,1>",(actual)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (expected) != "undefined") {_RecordType("<26,34,1>",(expected)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (actual) != "undefined") {_RecordType("<44,50,2>",(actual)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (expected) != "undefined") {_RecordType("<55,63,2>",(expected)); Inst4++; } } catch(e) {}
  if (actual !== expected) {
try { if (Inst5 <= 1000 && typeof (Error) != "undefined") {_RecordType("<81,86,3>",(Error)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (String) != "undefined") {_RecordType("<101,107,3>",(String)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (actual) != "undefined") {_RecordType("<108,114,3>",(actual)); Inst7++; } } catch(e) {}
    throw new Error(`bad value: ${String(actual)}`);
  }
}

try { if (Inst8 <= 1000 && typeof (test1) != "undefined") {_RecordType("<136,141,7>",(test1)); Inst8++; } } catch(e) {}
function test1(object) {
try { if (Inst9 <= 1000 && typeof (object) != "undefined") {_RecordType("<142,148,7>",(object)); Inst9++; } } catch(e) {}
  // The prediction should be Int32.
try { if (Inst10 <= 1000 && typeof (Number) != "undefined") {_RecordType("<198,204,9>",(Number)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (object) != "undefined") {_RecordType("<205,211,9>",(object)); Inst11++; } } catch(e) {}
  return Number(object);
}

try { if (Inst12 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<217,225,12>",(noInline)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (test1) != "undefined") {_RecordType("<226,231,12>",(test1)); Inst13++; } } catch(e) {}
noInline(test1);

try { if (Inst14 <= 1000 && typeof (test12) != "undefined") {_RecordType("<244,250,14>",(test12)); Inst14++; } } catch(e) {}
function test12(object) {
try { if (Inst15 <= 1000 && typeof (object) != "undefined") {_RecordType("<251,257,14>",(object)); Inst15++; } } catch(e) {}
  // Should be Int32 comparison.
try { if (Inst16 <= 1000 && typeof (Number) != "undefined") {_RecordType("<303,309,16>",(Number)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (object) != "undefined") {_RecordType("<310,316,16>",(object)); Inst17++; } } catch(e) {}
  return Number(object) <= 42;
}

try { if (Inst18 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<328,336,19>",(noInline)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (test12) != "undefined") {_RecordType("<337,343,19>",(test12)); Inst19++; } } catch(e) {}
noInline(test12);
try { if (Inst21 <= 1000 && typeof (valueOf) != "undefined") {_RecordType("<364,371,21>",(valueOf)); Inst21++; } } catch(e) {}
var object1 = {
  valueOf() {
    return 42;
  }

};
try { if (Inst20 <= 1000 && typeof (object1) != "undefined") {_RecordType("<350,357,20>",(object1)); Inst20++; } } catch(e) {}

for (var i = 0; i < 1e4; ++i) {
try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<409,410,27>",(i)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<416,417,27>",(i)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<427,428,27>",(i)); Inst24++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<434,442,28>",(shouldBe)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (test1) != "undefined") {_RecordType("<443,448,28>",(test1)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (object1) != "undefined") {_RecordType("<449,456,28>",(object1)); Inst27++; } } catch(e) {}
  shouldBe(test1(object1), 42);
try { if (Inst28 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<466,474,29>",(shouldBe)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (test12) != "undefined") {_RecordType("<475,481,29>",(test12)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (object1) != "undefined") {_RecordType("<482,489,29>",(object1)); Inst30++; } } catch(e) {}
  shouldBe(test12(object1), true);
}

try { if (Inst31 <= 1000 && typeof (test2) != "undefined") {_RecordType("<511,516,32>",(test2)); Inst31++; } } catch(e) {}
function test2(object) {
try { if (Inst32 <= 1000 && typeof (object) != "undefined") {_RecordType("<517,523,32>",(object)); Inst32++; } } catch(e) {}
  // The prediction should be Doubles.
try { if (Inst33 <= 1000 && typeof (Number) != "undefined") {_RecordType("<575,581,34>",(Number)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (object) != "undefined") {_RecordType("<582,588,34>",(object)); Inst34++; } } catch(e) {}
  return Number(object);
}

try { if (Inst35 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<594,602,37>",(noInline)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (test2) != "undefined") {_RecordType("<603,608,37>",(test2)); Inst36++; } } catch(e) {}
noInline(test2);

try { if (Inst37 <= 1000 && typeof (test22) != "undefined") {_RecordType("<621,627,39>",(test22)); Inst37++; } } catch(e) {}
function test22(object) {
try { if (Inst38 <= 1000 && typeof (object) != "undefined") {_RecordType("<628,634,39>",(object)); Inst38++; } } catch(e) {}
  // Should be Double comparison.
try { if (Inst39 <= 1000 && typeof (Number) != "undefined") {_RecordType("<681,687,41>",(Number)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (object) != "undefined") {_RecordType("<688,694,41>",(object)); Inst40++; } } catch(e) {}
  return Number(object) <= 42;
}

try { if (Inst41 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<706,714,44>",(noInline)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (test22) != "undefined") {_RecordType("<715,721,44>",(test22)); Inst42++; } } catch(e) {}
noInline(test22);
try { if (Inst44 <= 1000 && typeof (valueOf) != "undefined") {_RecordType("<742,749,46>",(valueOf)); Inst44++; } } catch(e) {}
var object2 = {
  valueOf() {
    return 42.195;
  }

};
try { if (Inst43 <= 1000 && typeof (object2) != "undefined") {_RecordType("<728,735,45>",(object2)); Inst43++; } } catch(e) {}

for (var i = 0; i < 1e4; ++i) {
try { if (Inst45 <= 1000 && typeof (i) != "undefined") {_RecordType("<791,792,52>",(i)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (i) != "undefined") {_RecordType("<798,799,52>",(i)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (i) != "undefined") {_RecordType("<809,810,52>",(i)); Inst47++; } } catch(e) {}
try { if (Inst48 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<816,824,53>",(shouldBe)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (test2) != "undefined") {_RecordType("<825,830,53>",(test2)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (object2) != "undefined") {_RecordType("<831,838,53>",(object2)); Inst50++; } } catch(e) {}
  shouldBe(test2(object2), 42.195);
try { if (Inst51 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<852,860,54>",(shouldBe)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (test22) != "undefined") {_RecordType("<861,867,54>",(test22)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (object2) != "undefined") {_RecordType("<868,875,54>",(object2)); Inst53++; } } catch(e) {}
  shouldBe(test22(object2), false);
}

try { if (Inst54 <= 1000 && typeof (test3) != "undefined") {_RecordType("<898,903,57>",(test3)); Inst54++; } } catch(e) {}
function test3(object) {
try { if (Inst55 <= 1000 && typeof (object) != "undefined") {_RecordType("<904,910,57>",(object)); Inst55++; } } catch(e) {}
  // The prediction should be Int32, and later it should be Doubles.
try { if (Inst56 <= 1000 && typeof (Number) != "undefined") {_RecordType("<992,998,59>",(Number)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (object) != "undefined") {_RecordType("<999,1005,59>",(object)); Inst57++; } } catch(e) {}
  return Number(object);
}

try { if (Inst58 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<1011,1019,62>",(noInline)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (test3) != "undefined") {_RecordType("<1020,1025,62>",(test3)); Inst59++; } } catch(e) {}
noInline(test3);

try { if (Inst60 <= 1000 && typeof (test32) != "undefined") {_RecordType("<1038,1044,64>",(test32)); Inst60++; } } catch(e) {}
function test32(object) {
try { if (Inst61 <= 1000 && typeof (object) != "undefined") {_RecordType("<1045,1051,64>",(object)); Inst61++; } } catch(e) {}
  // Should be Int32 comparison. And later, OSR exit occurs with 42.195. And it should be recompiled as Double comparison.
try { if (Inst62 <= 1000 && typeof (Number) != "undefined") {_RecordType("<1187,1193,66>",(Number)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (object) != "undefined") {_RecordType("<1194,1200,66>",(object)); Inst63++; } } catch(e) {}
  return Number(object) <= 42;
}

try { if (Inst64 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<1212,1220,69>",(noInline)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (test32) != "undefined") {_RecordType("<1221,1227,69>",(test32)); Inst65++; } } catch(e) {}
noInline(test32);
var value = 42;
try { if (Inst66 <= 1000 && typeof (value) != "undefined") {_RecordType("<1234,1239,70>",(value)); Inst66++; } } catch(e) {}
try { if (Inst68 <= 1000 && typeof (valueOf) != "undefined") {_RecordType("<1264,1271,72>",(valueOf)); Inst68++; } } catch(e) {}
var object3 = {
  valueOf() {
try { if (Inst69 <= 1000 && typeof (value) != "undefined") {_RecordType("<1287,1292,73>",(value)); Inst69++; } } catch(e) {}
    return value;
  }

};
try { if (Inst67 <= 1000 && typeof (object3) != "undefined") {_RecordType("<1250,1257,71>",(object3)); Inst67++; } } catch(e) {}

for (var i = 0; i < 1e4; ++i) {
try { if (Inst70 <= 1000 && typeof (i) != "undefined") {_RecordType("<1312,1313,78>",(i)); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (i) != "undefined") {_RecordType("<1319,1320,78>",(i)); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (i) != "undefined") {_RecordType("<1330,1331,78>",(i)); Inst72++; } } catch(e) {}
try { if (Inst73 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<1337,1345,79>",(shouldBe)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (test3) != "undefined") {_RecordType("<1346,1351,79>",(test3)); Inst74++; } } catch(e) {}try { if (Inst75 <= 1000 && typeof (object3) != "undefined") {_RecordType("<1352,1359,79>",(object3)); Inst75++; } } catch(e) {}try { if (Inst76 <= 1000 && typeof (value) != "undefined") {_RecordType("<1362,1367,79>",(value)); Inst76++; } } catch(e) {}
  shouldBe(test3(object3), value);
try { if (Inst77 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<1372,1380,80>",(shouldBe)); Inst77++; } } catch(e) {}try { if (Inst78 <= 1000 && typeof (test32) != "undefined") {_RecordType("<1381,1387,80>",(test32)); Inst78++; } } catch(e) {}try { if (Inst79 <= 1000 && typeof (object3) != "undefined") {_RecordType("<1388,1395,80>",(object3)); Inst79++; } } catch(e) {}
  shouldBe(test32(object3), true);
}

value = 42.195;
try { if (Inst80 <= 1000 && typeof (value) != "undefined") {_RecordType("<1408,1413,83>",(value)); Inst80++; } } catch(e) {}

for (var i = 0; i < 1e4; ++i) {
try { if (Inst81 <= 1000 && typeof (i) != "undefined") {_RecordType("<1434,1435,85>",(i)); Inst81++; } } catch(e) {}try { if (Inst82 <= 1000 && typeof (i) != "undefined") {_RecordType("<1441,1442,85>",(i)); Inst82++; } } catch(e) {}try { if (Inst83 <= 1000 && typeof (i) != "undefined") {_RecordType("<1452,1453,85>",(i)); Inst83++; } } catch(e) {}
try { if (Inst84 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<1459,1467,86>",(shouldBe)); Inst84++; } } catch(e) {}try { if (Inst85 <= 1000 && typeof (test3) != "undefined") {_RecordType("<1468,1473,86>",(test3)); Inst85++; } } catch(e) {}try { if (Inst86 <= 1000 && typeof (object3) != "undefined") {_RecordType("<1474,1481,86>",(object3)); Inst86++; } } catch(e) {}try { if (Inst87 <= 1000 && typeof (value) != "undefined") {_RecordType("<1484,1489,86>",(value)); Inst87++; } } catch(e) {}
  shouldBe(test3(object3), value);
try { if (Inst88 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<1494,1502,87>",(shouldBe)); Inst88++; } } catch(e) {}try { if (Inst89 <= 1000 && typeof (test32) != "undefined") {_RecordType("<1503,1509,87>",(test32)); Inst89++; } } catch(e) {}try { if (Inst90 <= 1000 && typeof (object3) != "undefined") {_RecordType("<1510,1517,87>",(object3)); Inst90++; } } catch(e) {}
  shouldBe(test32(object3), false);
}

