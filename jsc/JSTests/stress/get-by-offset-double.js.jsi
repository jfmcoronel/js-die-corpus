var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (foo) != "undefined") {_RecordType("<9,12,1>",(foo)); Inst0++; } } catch(e) {}
function foo(o, p) {
try { if (Inst1 <= 1000 && typeof (o) != "undefined") {_RecordType("<13,14,1>",(o)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (p) != "undefined") {_RecordType("<16,17,1>",(p)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (p) != "undefined") {_RecordType("<27,28,2>",(p)); Inst3++; } } catch(e) {}
  if (p) {
try { if (Inst4 <= 1000 && typeof (o.f) != "undefined") {_RecordType("<43,46,3>",(o.f)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (o) != "undefined") {_RecordType("<43,44,3>",(o)); Inst5++; } } catch(e) {}
    return o.f;
  } else {
try { if (Inst6 <= 1000 && typeof (o) != "undefined") {_RecordType("<71,72,5>",(o)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (o) != "undefined") {_RecordType("<80,81,5>",(o)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (o) != "undefined") {_RecordType("<89,90,5>",(o)); Inst8++; } } catch(e) {}
    return [o * 1.1, o * 1.2, o * 1.3];
  }
}

for (var i = 0; i < 100; ++i) {
try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<115,116,9>",(i)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<122,123,9>",(i)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<133,134,9>",(i)); Inst11++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (foo) != "undefined") {_RecordType("<140,143,10>",(foo)); Inst12++; } } catch(e) {}
  foo({
    f: 42
  }, true);
}

try { if (Inst13 <= 1000 && typeof (bar) != "undefined") {_RecordType("<180,183,15>",(bar)); Inst13++; } } catch(e) {}
function bar() {
  var x = 4.5;
try { if (Inst14 <= 1000 && typeof (x) != "undefined") {_RecordType("<194,195,16>",(x)); Inst14++; } } catch(e) {}

  for (var i = 0; i < 10; ++i) {
try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<215,216,18>",(i)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<222,223,18>",(i)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (i) != "undefined") {_RecordType("<232,233,18>",(i)); Inst17++; } } catch(e) {}
    x *= 1.1;
try { if (Inst18 <= 1000 && typeof (x) != "undefined") {_RecordType("<241,242,19>",(x)); Inst18++; } } catch(e) {}
    x += 0.05;
try { if (Inst19 <= 1000 && typeof (x) != "undefined") {_RecordType("<255,256,20>",(x)); Inst19++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (foo) != "undefined") {_RecordType("<270,273,21>",(foo)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (x) != "undefined") {_RecordType("<274,275,21>",(x)); Inst21++; } } catch(e) {}
    foo(x, false);
  }

try { if (Inst22 <= 1000 && typeof (x) != "undefined") {_RecordType("<299,300,24>",(x)); Inst22++; } } catch(e) {}
  return x * 1.03;
}

try { if (Inst23 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<312,320,27>",(noInline)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (bar) != "undefined") {_RecordType("<321,324,27>",(bar)); Inst24++; } } catch(e) {}
noInline(bar);

for (var i = 0; i < 10000; ++i) {
try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<337,338,29>",(i)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (i) != "undefined") {_RecordType("<344,345,29>",(i)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (i) != "undefined") {_RecordType("<357,358,29>",(i)); Inst27++; } } catch(e) {}
try { if (Inst28 <= 1000 && typeof (bar) != "undefined") {_RecordType("<364,367,30>",(bar)); Inst28++; } } catch(e) {}
  bar();
}

