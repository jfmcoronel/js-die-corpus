var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (foo) != "undefined") {_RecordType("<9,12,1>",(foo)); Inst0++; } } catch(e) {}
function foo() {
try { if (Inst1 <= 1000 && typeof (bar) != "undefined") {_RecordType("<28,31,2>",(bar)); Inst1++; } } catch(e) {}
  function bar() {
    this.x = 42;
try { if (Inst2 <= 1000 && typeof (this.x) != "undefined") {_RecordType("<40,46,3>",(this.x)); Inst2++; } } catch(e) {}
  }

  bar.prototype = 50;
try { if (Inst3 <= 1000 && typeof (bar.prototype) != "undefined") {_RecordType("<60,73,6>",(bar.prototype)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (bar) != "undefined") {_RecordType("<60,63,6>",(bar)); Inst4++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (bar) != "undefined") {_RecordType("<93,96,7>",(bar)); Inst5++; } } catch(e) {}
  return new bar();
}

try { if (Inst6 <= 1000 && typeof (assert) != "undefined") {_RecordType("<112,118,10>",(assert)); Inst6++; } } catch(e) {}
function assert(b) {
try { if (Inst7 <= 1000 && typeof (b) != "undefined") {_RecordType("<119,120,10>",(b)); Inst7++; } } catch(e) {}
  ;
}

try { if (Inst9 <= 1000 && typeof (foo) != "undefined") {_RecordType("<144,147,14>",(foo)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (foo) != "undefined") {_RecordType("<151,154,14>",(foo)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (foo) != "undefined") {_RecordType("<158,161,14>",(foo)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (foo) != "undefined") {_RecordType("<165,168,14>",(foo)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (foo) != "undefined") {_RecordType("<172,175,14>",(foo)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (foo) != "undefined") {_RecordType("<179,182,14>",(foo)); Inst14++; } } catch(e) {}
let items = [foo(), foo(), foo(), foo(), foo(), foo()];
try { if (Inst8 <= 1000 && typeof (items) != "undefined") {_RecordType("<135,140,14>",(items)); Inst8++; } } catch(e) {}

try { if (Inst15 <= 1000 && typeof (validate) != "undefined") {_RecordType("<197,205,16>",(validate)); Inst15++; } } catch(e) {}
function validate(item) {
try { if (Inst16 <= 1000 && typeof (item) != "undefined") {_RecordType("<206,210,16>",(item)); Inst16++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (item.notThere) != "undefined") {_RecordType("<216,229,17>",(item.notThere)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (item) != "undefined") {_RecordType("<216,220,17>",(item)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<234,243,17>",(undefined)); Inst19++; } } catch(e) {}
  item.notThere === undefined;
try { if (Inst20 <= 1000 && typeof (item.x) != "undefined") {_RecordType("<247,253,18>",(item.x)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (item) != "undefined") {_RecordType("<247,251,18>",(item)); Inst21++; } } catch(e) {}
  item.x === 42;
try { if (Inst22 <= 1000 && typeof (item.__proto__) != "undefined") {_RecordType("<264,278,19>",(item.__proto__)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (item) != "undefined") {_RecordType("<264,268,19>",(item)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<283,299,19>",(Object.prototype)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Object) != "undefined") {_RecordType("<283,289,19>",(Object)); Inst25++; } } catch(e) {}
  item.__proto__ === Object.prototype;
}

for (let i = 0; i < 10000; ++i) {
try { if (Inst26 <= 1000 && typeof (i) != "undefined") {_RecordType("<313,314,22>",(i)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (i) != "undefined") {_RecordType("<320,321,22>",(i)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (i) != "undefined") {_RecordType("<333,334,22>",(i)); Inst28++; } } catch(e) {}
  for (let item of items) {
try { if (Inst29 <= 1000 && typeof (item) != "undefined") {_RecordType("<349,353,23>",(item)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (items) != "undefined") {_RecordType("<357,362,23>",(items)); Inst30++; } } catch(e) {}
try { if (Inst31 <= 1000 && typeof (validate) != "undefined") {_RecordType("<370,378,24>",(validate)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (item) != "undefined") {_RecordType("<379,383,24>",(item)); Inst32++; } } catch(e) {}
    validate(item);
  }
}

