var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Test changing the value of toStringTag
// Test adding toStringTag to the base with miss.
// SuperPrototype can't be an empty object since its transition
// watchpoint will be clobbered when assigning it to the prototype.
var SuperPrototype = {
  bar: 1
};
try { if (Inst0 <= 1000 && typeof (SuperPrototype) != "undefined") {_RecordType("<228,242,5>",(SuperPrototype)); Inst0++; } } catch(e) {}
var BasePrototype = {};
try { if (Inst1 <= 1000 && typeof (BasePrototype) != "undefined") {_RecordType("<263,276,8>",(BasePrototype)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (Object.setPrototypeOf) != "undefined") {_RecordType("<283,304,9>",(Object.setPrototypeOf)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Object) != "undefined") {_RecordType("<283,289,9>",(Object)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (BasePrototype) != "undefined") {_RecordType("<305,318,9>",(BasePrototype)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (SuperPrototype) != "undefined") {_RecordType("<320,334,9>",(SuperPrototype)); Inst5++; } } catch(e) {}
Object.setPrototypeOf(BasePrototype, SuperPrototype);

try { if (Inst6 <= 1000 && typeof (Base) != "undefined") {_RecordType("<347,351,11>",(Base)); Inst6++; } } catch(e) {}
function Base() {
  ;
}

try { if (Inst9 <= 1000 && typeof (BasePrototype) != "undefined") {_RecordType("<380,393,15>",(BasePrototype)); Inst9++; } } catch(e) {}
Base.prototype = BasePrototype;
try { if (Inst7 <= 1000 && typeof (Base.prototype) != "undefined") {_RecordType("<363,377,15>",(Base.prototype)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Base) != "undefined") {_RecordType("<363,367,15>",(Base)); Inst8++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (Base) != "undefined") {_RecordType("<411,415,16>",(Base)); Inst11++; } } catch(e) {}
var value = new Base();
try { if (Inst10 <= 1000 && typeof (value) != "undefined") {_RecordType("<399,404,16>",(value)); Inst10++; } } catch(e) {}

try { if (Inst12 <= 1000 && typeof (value.toString) != "undefined") {_RecordType("<424,438,18>",(value.toString)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (value) != "undefined") {_RecordType("<424,429,18>",(value)); Inst13++; } } catch(e) {}
if (value.toString() !== "[object Object]") {
  throw "bad miss toStringTag";
}

value[Symbol.toStringTag] = "hello";
try { if (Inst14 <= 1000 && typeof (value[Symbol.toStringTag]) != "undefined") {_RecordType("<501,526,22>",(value[Symbol.toStringTag])); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (value) != "undefined") {_RecordType("<501,506,22>",(value)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Symbol.toStringTag) != "undefined") {_RecordType("<507,525,22>",(Symbol.toStringTag)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<507,513,22>",(Symbol)); Inst17++; } } catch(e) {}

try { if (Inst18 <= 1000 && typeof (value.toString) != "undefined") {_RecordType("<543,557,24>",(value.toString)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (value) != "undefined") {_RecordType("<543,548,24>",(value)); Inst19++; } } catch(e) {}
if (value.toString() !== "[object hello]") {
  throw "bad swap on base value with miss";
} // Test adding toStringTag to the prototype with miss.


try { if (Inst21 <= 1000 && typeof (Base) != "undefined") {_RecordType("<699,703,29>",(Base)); Inst21++; } } catch(e) {}
value = new Base();
try { if (Inst20 <= 1000 && typeof (value) != "undefined") {_RecordType("<687,692,29>",(value)); Inst20++; } } catch(e) {}

try { if (Inst22 <= 1000 && typeof (value.toString) != "undefined") {_RecordType("<712,726,31>",(value.toString)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (value) != "undefined") {_RecordType("<712,717,31>",(value)); Inst23++; } } catch(e) {}
if (value.toString() !== "[object Object]") {
  throw "bad miss toStringTag";
}

SuperPrototype[Symbol.toStringTag] = "superprototype";
try { if (Inst24 <= 1000 && typeof (SuperPrototype[Symbol.toStringTag]) != "undefined") {_RecordType("<789,823,35>",(SuperPrototype[Symbol.toStringTag])); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (SuperPrototype) != "undefined") {_RecordType("<789,803,35>",(SuperPrototype)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Symbol.toStringTag) != "undefined") {_RecordType("<804,822,35>",(Symbol.toStringTag)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<804,810,35>",(Symbol)); Inst27++; } } catch(e) {}

try { if (Inst28 <= 1000 && typeof (value.toString) != "undefined") {_RecordType("<849,863,37>",(value.toString)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (value) != "undefined") {_RecordType("<849,854,37>",(value)); Inst29++; } } catch(e) {}
if (value.toString() !== "[object superprototype]") {
  throw "bad prototype toStringTag change with miss";
} // Test adding toStringTag to the base with a hit.


value[Symbol.toStringTag] = "hello2";
try { if (Inst30 <= 1000 && typeof (value[Symbol.toStringTag]) != "undefined") {_RecordType("<1008,1033,42>",(value[Symbol.toStringTag])); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (value) != "undefined") {_RecordType("<1008,1013,42>",(value)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (Symbol.toStringTag) != "undefined") {_RecordType("<1014,1032,42>",(Symbol.toStringTag)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<1014,1020,42>",(Symbol)); Inst33++; } } catch(e) {}

try { if (Inst34 <= 1000 && typeof (value.toString) != "undefined") {_RecordType("<1051,1065,44>",(value.toString)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (value) != "undefined") {_RecordType("<1051,1056,44>",(value)); Inst35++; } } catch(e) {}
if (value.toString() !== "[object hello2]") {
  throw "bad swap on base value with hit";
} // Test toStringTag on the prototype.


try { if (Inst36 <= 1000 && typeof (Object.getPrototypeOf(value).toString) != "undefined") {_RecordType("<1182,1219,49>",(Object.getPrototypeOf(value).toString)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (Object.getPrototypeOf) != "undefined") {_RecordType("<1182,1203,49>",(Object.getPrototypeOf)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1182,1188,49>",(Object)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (value) != "undefined") {_RecordType("<1204,1209,49>",(value)); Inst39++; } } catch(e) {}
if (Object.getPrototypeOf(value).toString() !== "[object superprototype]") {
  throw "bad prototype toStringTag access";
} // Test adding to string to the prototype with hit.


try { if (Inst41 <= 1000 && typeof (Base) != "undefined") {_RecordType("<1367,1371,54>",(Base)); Inst41++; } } catch(e) {}
value = new Base();
try { if (Inst40 <= 1000 && typeof (value) != "undefined") {_RecordType("<1355,1360,54>",(value)); Inst40++; } } catch(e) {}
BasePrototype[Symbol.toStringTag] = "baseprototype";
try { if (Inst42 <= 1000 && typeof (BasePrototype[Symbol.toStringTag]) != "undefined") {_RecordType("<1375,1408,55>",(BasePrototype[Symbol.toStringTag])); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (BasePrototype) != "undefined") {_RecordType("<1375,1388,55>",(BasePrototype)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (Symbol.toStringTag) != "undefined") {_RecordType("<1389,1407,55>",(Symbol.toStringTag)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<1389,1395,55>",(Symbol)); Inst45++; } } catch(e) {}

try { if (Inst46 <= 1000 && typeof (value.toString) != "undefined") {_RecordType("<1433,1447,57>",(value.toString)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (value) != "undefined") {_RecordType("<1433,1438,57>",(value)); Inst47++; } } catch(e) {}
if (value.toString() !== "[object baseprototype]") {
  throw "bad prototype toStringTag interception with hit";
} // Test replacing the string on prototype.


BasePrototype[Symbol.toStringTag] = "not-baseprototype!";
try { if (Inst48 <= 1000 && typeof (BasePrototype[Symbol.toStringTag]) != "undefined") {_RecordType("<1588,1621,62>",(BasePrototype[Symbol.toStringTag])); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (BasePrototype) != "undefined") {_RecordType("<1588,1601,62>",(BasePrototype)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (Symbol.toStringTag) != "undefined") {_RecordType("<1602,1620,62>",(Symbol.toStringTag)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<1602,1608,62>",(Symbol)); Inst51++; } } catch(e) {}

try { if (Inst52 <= 1000 && typeof (value.toString) != "undefined") {_RecordType("<1651,1665,64>",(value.toString)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (value) != "undefined") {_RecordType("<1651,1656,64>",(value)); Inst53++; } } catch(e) {}
if (value.toString() !== "[object not-baseprototype!]") {
  throw "bad prototype toStringTag interception with hit";
}

