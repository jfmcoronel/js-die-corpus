var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//@ skip if $memoryLimited
//@ runFTLNoCJIT if !$memoryLimited
// This test should not crash or fail any assertions.
try { if (Inst0 <= 1000 && typeof (shouldEqual) != "undefined") {_RecordType("<126,137,4>",(shouldEqual)); Inst0++; } } catch(e) {}
function shouldEqual(stepId, actual, expected) {
try { if (Inst1 <= 1000 && typeof (stepId) != "undefined") {_RecordType("<138,144,4>",(stepId)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (actual) != "undefined") {_RecordType("<146,152,4>",(actual)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (expected) != "undefined") {_RecordType("<154,162,4>",(expected)); Inst3++; } } catch(e) {}
  ;
}

try { if (Inst5 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<189,198,8>",(undefined)); Inst5++; } } catch(e) {}
var exception = undefined;
try { if (Inst4 <= 1000 && typeof (exception) != "undefined") {_RecordType("<177,186,8>",(exception)); Inst4++; } } catch(e) {}
arr = [null, null, null, null];
try { if (Inst6 <= 1000 && typeof (arr) != "undefined") {_RecordType("<200,203,9>",(arr)); Inst6++; } } catch(e) {}
str = "xx";
try { if (Inst7 <= 1000 && typeof (str) != "undefined") {_RecordType("<232,235,10>",(str)); Inst7++; } } catch(e) {}

try { if (Inst15 <= 1000 && typeof (e) != "undefined") {_RecordType("<323,324,16>",(e)); Inst15++; } } catch(e) {}
try {
  for (var i = 0; i < 100; ++i) {
try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<262,263,13>",(i)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<269,270,13>",(i)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<280,281,13>",(i)); Inst10++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (arr.join) != "undefined") {_RecordType("<295,303,14>",(arr.join)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (arr) != "undefined") {_RecordType("<295,298,14>",(arr)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (str) != "undefined") {_RecordType("<304,307,14>",(str)); Inst14++; } } catch(e) {}
    str = arr.join(str);
try { if (Inst11 <= 1000 && typeof (str) != "undefined") {_RecordType("<289,292,14>",(str)); Inst11++; } } catch(e) {}
  }
} catch (e) {
try { if (Inst17 <= 1000 && typeof (e) != "undefined") {_RecordType("<342,343,17>",(e)); Inst17++; } } catch(e) {}
  exception = e;
try { if (Inst16 <= 1000 && typeof (exception) != "undefined") {_RecordType("<330,339,17>",(exception)); Inst16++; } } catch(e) {}
}

try { if (Inst18 <= 1000 && typeof (shouldEqual) != "undefined") {_RecordType("<348,359,20>",(shouldEqual)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (exception) != "undefined") {_RecordType("<367,376,20>",(exception)); Inst19++; } } catch(e) {}
shouldEqual(10000, exception, "Error: Out of memory");
try { if (Inst21 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<415,424,21>",(undefined)); Inst21++; } } catch(e) {}
exception = undefined;
try { if (Inst20 <= 1000 && typeof (exception) != "undefined") {_RecordType("<403,412,21>",(exception)); Inst20++; } } catch(e) {}

try { if (Inst23 <= 1000 && typeof (e) != "undefined") {_RecordType("<456,457,25>",(e)); Inst23++; } } catch(e) {}
try {
  str += 'x';
try { if (Inst22 <= 1000 && typeof (str) != "undefined") {_RecordType("<435,438,24>",(str)); Inst22++; } } catch(e) {}
} catch (e) {
try { if (Inst25 <= 1000 && typeof (e) != "undefined") {_RecordType("<475,476,26>",(e)); Inst25++; } } catch(e) {}
  exception = e;
try { if (Inst24 <= 1000 && typeof (exception) != "undefined") {_RecordType("<463,472,26>",(exception)); Inst24++; } } catch(e) {}
}

try { if (Inst26 <= 1000 && typeof (shouldEqual) != "undefined") {_RecordType("<481,492,29>",(shouldEqual)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (exception) != "undefined") {_RecordType("<500,509,29>",(exception)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<511,520,29>",(undefined)); Inst28++; } } catch(e) {}
shouldEqual(10100, exception, undefined);

