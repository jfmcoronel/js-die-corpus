//@ runBigIntEnabled

assert = {
    sameValue: function(input, expected, message) {
        if (input !== expected)
            throw new Error(message);
    }
};

function testAdd(x, y, z) {
    assert.sameValue(x + y, z, x + " + " + y + " = " + z);
    assert.sameValue(y + x, z, y + " + " + x + " = " + z);
}

testAdd(10n, 239n, 249n);
testAdd(0xFEDCBA9876543210 n, 0xFEDCBA9876543210 n, 0x1FDB97530ECA86420 n);
testAdd(0xFEDCBA9876543210 n, 0xFEDCBA987654320F n, 0x1FDB97530ECA8641F n);
testAdd(0xFEDCBA9876543210 n, 0xFEDCBA98 n, 0xFEDCBA997530ECA8 n);
testAdd(0xFEDCBA9876543210 n, 0xFEDCBA97 n, 0xFEDCBA997530ECA7 n);
testAdd(0xFEDCBA9876543210 n, 0x1234 n, 0xFEDCBA9876544444 n);
testAdd(0xFEDCBA9876543210 n, 0x3 n, 0xFEDCBA9876543213 n);
testAdd(0xFEDCBA9876543210 n, 0x2 n, 0xFEDCBA9876543212 n);
testAdd(0xFEDCBA9876543210 n, 0x1 n, 0xFEDCBA9876543211 n);
testAdd(0xFEDCBA9876543210 n, 0x0 n, 0xFEDCBA9876543210 n);
testAdd(0xFEDCBA9876543210 n, -0x1 n, 0xFEDCBA987654320F n);
testAdd(0xFEDCBA9876543210 n, -0x2 n, 0xFEDCBA987654320E n);
testAdd(0xFEDCBA9876543210 n, -0x3 n, 0xFEDCBA987654320D n);
testAdd(0xFEDCBA9876543210 n, -0x1234 n, 0xFEDCBA9876541FDC n);
testAdd(0xFEDCBA9876543210 n, -0xFEDCBA97 n, 0xFEDCBA9777777779 n);
testAdd(0xFEDCBA9876543210 n, -0xFEDCBA98 n, 0xFEDCBA9777777778 n);
testAdd(0xFEDCBA9876543210 n, -0xFEDCBA987654320F n, 0x1 n);
testAdd(0xFEDCBA9876543210 n, -0xFEDCBA9876543210 n, 0x0 n);
testAdd(0xFEDCBA987654320F n, 0xFEDCBA987654320F n, 0x1FDB97530ECA8641E n);
testAdd(0xFEDCBA987654320F n, 0xFEDCBA98 n, 0xFEDCBA997530ECA7 n);
testAdd(0xFEDCBA987654320F n, 0xFEDCBA97 n, 0xFEDCBA997530ECA6 n);
testAdd(0xFEDCBA987654320F n, 0x1234 n, 0xFEDCBA9876544443 n);
testAdd(0xFEDCBA987654320F n, 0x3 n, 0xFEDCBA9876543212 n);
testAdd(0xFEDCBA987654320F n, 0x2 n, 0xFEDCBA9876543211 n);
testAdd(0xFEDCBA987654320F n, 0x1 n, 0xFEDCBA9876543210 n);
testAdd(0xFEDCBA987654320F n, 0x0 n, 0xFEDCBA987654320F n);
testAdd(0xFEDCBA987654320F n, -0x1 n, 0xFEDCBA987654320E n);
testAdd(0xFEDCBA987654320F n, -0x2 n, 0xFEDCBA987654320D n);
testAdd(0xFEDCBA987654320F n, -0x3 n, 0xFEDCBA987654320C n);
testAdd(0xFEDCBA987654320F n, -0x1234 n, 0xFEDCBA9876541FDB n);
testAdd(0xFEDCBA987654320F n, -0xFEDCBA97 n, 0xFEDCBA9777777778 n);
testAdd(0xFEDCBA987654320F n, -0xFEDCBA98 n, 0xFEDCBA9777777777 n);
testAdd(0xFEDCBA987654320F n, -0xFEDCBA987654320F n, 0x0 n);
testAdd(0xFEDCBA987654320F n, -0xFEDCBA9876543210 n, -0x1 n);
testAdd(0xFEDCBA98 n, 0xFEDCBA98 n, 0x1FDB97530 n);
testAdd(0xFEDCBA98 n, 0xFEDCBA97 n, 0x1FDB9752F n);
testAdd(0xFEDCBA98 n, 0x1234 n, 0xFEDCCCCC n);
testAdd(0xFEDCBA98 n, 0x3 n, 0xFEDCBA9B n);
testAdd(0xFEDCBA98 n, 0x2 n, 0xFEDCBA9A n);
testAdd(0xFEDCBA98 n, 0x1 n, 0xFEDCBA99 n);
testAdd(0xFEDCBA98 n, 0x0 n, 0xFEDCBA98 n);
testAdd(0xFEDCBA98 n, -0x1 n, 0xFEDCBA97 n);
testAdd(0xFEDCBA98 n, -0x2 n, 0xFEDCBA96 n);
testAdd(0xFEDCBA98 n, -0x3 n, 0xFEDCBA95 n);
testAdd(0xFEDCBA98 n, -0x1234 n, 0xFEDCA864 n);
testAdd(0xFEDCBA98 n, -0xFEDCBA97 n, 0x1 n);
testAdd(0xFEDCBA98 n, -0xFEDCBA98 n, 0x0 n);
testAdd(0xFEDCBA98 n, -0xFEDCBA987654320F n, -0xFEDCBA9777777777 n);
testAdd(0xFEDCBA98 n, -0xFEDCBA9876543210 n, -0xFEDCBA9777777778 n);
testAdd(0xFEDCBA97 n, 0xFEDCBA97 n, 0x1FDB9752E n);
testAdd(0xFEDCBA97 n, 0x1234 n, 0xFEDCCCCB n);
testAdd(0xFEDCBA97 n, 0x3 n, 0xFEDCBA9A n);
testAdd(0xFEDCBA97 n, 0x2 n, 0xFEDCBA99 n);
testAdd(0xFEDCBA97 n, 0x1 n, 0xFEDCBA98 n);
testAdd(0xFEDCBA97 n, 0x0 n, 0xFEDCBA97 n);
testAdd(0xFEDCBA97 n, -0x1 n, 0xFEDCBA96 n);
testAdd(0xFEDCBA97 n, -0x2 n, 0xFEDCBA95 n);
testAdd(0xFEDCBA97 n, -0x3 n, 0xFEDCBA94 n);
testAdd(0xFEDCBA97 n, -0x1234 n, 0xFEDCA863 n);
testAdd(0xFEDCBA97 n, -0xFEDCBA97 n, 0x0 n);
testAdd(0xFEDCBA97 n, -0xFEDCBA98 n, -0x1 n);
testAdd(0xFEDCBA97 n, -0xFEDCBA987654320F n, -0xFEDCBA9777777778 n);
testAdd(0xFEDCBA97 n, -0xFEDCBA9876543210 n, -0xFEDCBA9777777779 n);
testAdd(0x1234 n, 0x1234 n, 0x2468 n);
testAdd(0x1234 n, 0x3 n, 0x1237 n);
testAdd(0x1234 n, 0x2 n, 0x1236 n);
testAdd(0x1234 n, 0x1 n, 0x1235 n);
testAdd(0x1234 n, 0x0 n, 0x1234 n);
testAdd(0x1234 n, -0x1 n, 0x1233 n);
testAdd(0x1234 n, -0x2 n, 0x1232 n);
testAdd(0x1234 n, -0x3 n, 0x1231 n);
testAdd(0x1234 n, -0x1234 n, 0x0 n);
testAdd(0x1234 n, -0xFEDCBA97 n, -0xFEDCA863 n);
testAdd(0x1234 n, -0xFEDCBA98 n, -0xFEDCA864 n);
testAdd(0x1234 n, -0xFEDCBA987654320F n, -0xFEDCBA9876541FDB n);
testAdd(0x1234 n, -0xFEDCBA9876543210 n, -0xFEDCBA9876541FDC n);
testAdd(0x3 n, 0x3 n, 0x6 n);
testAdd(0x3 n, 0x2 n, 0x5 n);
testAdd(0x3 n, 0x1 n, 0x4 n);
testAdd(0x3 n, 0x0 n, 0x3 n);
testAdd(0x3 n, -0x1 n, 0x2 n);
testAdd(0x3 n, -0x2 n, 0x1 n);
testAdd(0x3 n, -0x3 n, 0x0 n);
testAdd(0x3 n, -0x1234 n, -0x1231 n);
testAdd(0x3 n, -0xFEDCBA97 n, -0xFEDCBA94 n);
testAdd(0x3 n, -0xFEDCBA98 n, -0xFEDCBA95 n);
testAdd(0x3 n, -0xFEDCBA987654320F n, -0xFEDCBA987654320C n);
testAdd(0x3 n, -0xFEDCBA9876543210 n, -0xFEDCBA987654320D n);
testAdd(0x2 n, 0x2 n, 0x4 n);
testAdd(0x2 n, 0x1 n, 0x3 n);
testAdd(0x2 n, 0x0 n, 0x2 n);
testAdd(0x2 n, -0x1 n, 0x1 n);
testAdd(0x2 n, -0x2 n, 0x0 n);
testAdd(0x2 n, -0x3 n, -0x1 n);
testAdd(0x2 n, -0x1234 n, -0x1232 n);
testAdd(0x2 n, -0xFEDCBA97 n, -0xFEDCBA95 n);
testAdd(0x2 n, -0xFEDCBA98 n, -0xFEDCBA96 n);
testAdd(0x2 n, -0xFEDCBA987654320F n, -0xFEDCBA987654320D n);
testAdd(0x2 n, -0xFEDCBA9876543210 n, -0xFEDCBA987654320E n);
testAdd(0x1 n, 0x1 n, 0x2 n);
testAdd(0x1 n, 0x0 n, 0x1 n);
testAdd(0x1 n, -0x1 n, 0x0 n);
testAdd(0x1 n, -0x2 n, -0x1 n);
testAdd(0x1 n, -0x3 n, -0x2 n);
testAdd(0x1 n, -0x1234 n, -0x1233 n);
testAdd(0x1 n, -0xFEDCBA97 n, -0xFEDCBA96 n);
testAdd(0x1 n, -0xFEDCBA98 n, -0xFEDCBA97 n);
testAdd(0x1 n, -0xFEDCBA987654320F n, -0xFEDCBA987654320E n);
testAdd(0x1 n, -0xFEDCBA9876543210 n, -0xFEDCBA987654320F n);
testAdd(0x0 n, 0x0 n, 0x0 n);
testAdd(0x0 n, -0x1 n, -0x1 n);
testAdd(0x0 n, -0x2 n, -0x2 n);
testAdd(0x0 n, -0x3 n, -0x3 n);
testAdd(0x0 n, -0x1234 n, -0x1234 n);
testAdd(0x0 n, -0xFEDCBA97 n, -0xFEDCBA97 n);
testAdd(0x0 n, -0xFEDCBA98 n, -0xFEDCBA98 n);
testAdd(0x0 n, -0xFEDCBA987654320F n, -0xFEDCBA987654320F n);
testAdd(0x0 n, -0xFEDCBA9876543210 n, -0xFEDCBA9876543210 n);
testAdd(-0x1 n, -0x1 n, -0x2 n);
testAdd(-0x1 n, -0x2 n, -0x3 n);
testAdd(-0x1 n, -0x3 n, -0x4 n);
testAdd(-0x1 n, -0x1234 n, -0x1235 n);
testAdd(-0x1 n, -0xFEDCBA97 n, -0xFEDCBA98 n);
testAdd(-0x1 n, -0xFEDCBA98 n, -0xFEDCBA99 n);
testAdd(-0x1 n, -0xFEDCBA987654320F n, -0xFEDCBA9876543210 n);
testAdd(-0x1 n, -0xFEDCBA9876543210 n, -0xFEDCBA9876543211 n);
testAdd(-0x2 n, -0x2 n, -0x4 n);
testAdd(-0x2 n, -0x3 n, -0x5 n);
testAdd(-0x2 n, -0x1234 n, -0x1236 n);
testAdd(-0x2 n, -0xFEDCBA97 n, -0xFEDCBA99 n);
testAdd(-0x2 n, -0xFEDCBA98 n, -0xFEDCBA9A n);
testAdd(-0x2 n, -0xFEDCBA987654320F n, -0xFEDCBA9876543211 n);
testAdd(-0x2 n, -0xFEDCBA9876543210 n, -0xFEDCBA9876543212 n);
testAdd(-0x3 n, -0x3 n, -0x6 n);
testAdd(-0x3 n, -0x1234 n, -0x1237 n);
testAdd(-0x3 n, -0xFEDCBA97 n, -0xFEDCBA9A n);
testAdd(-0x3 n, -0xFEDCBA98 n, -0xFEDCBA9B n);
testAdd(-0x3 n, -0xFEDCBA987654320F n, -0xFEDCBA9876543212 n);
testAdd(-0x3 n, -0xFEDCBA9876543210 n, -0xFEDCBA9876543213 n);
testAdd(-0x1234 n, -0x1234 n, -0x2468 n);
testAdd(-0x1234 n, -0xFEDCBA97 n, -0xFEDCCCCB n);
testAdd(-0x1234 n, -0xFEDCBA98 n, -0xFEDCCCCC n);
testAdd(-0x1234 n, -0xFEDCBA987654320F n, -0xFEDCBA9876544443 n);
testAdd(-0x1234 n, -0xFEDCBA9876543210 n, -0xFEDCBA9876544444 n);
testAdd(-0xFEDCBA97 n, -0xFEDCBA97 n, -0x1FDB9752E n);
testAdd(-0xFEDCBA97 n, -0xFEDCBA98 n, -0x1FDB9752F n);
testAdd(-0xFEDCBA97 n, -0xFEDCBA987654320F n, -0xFEDCBA997530ECA6 n);
testAdd(-0xFEDCBA97 n, -0xFEDCBA9876543210 n, -0xFEDCBA997530ECA7 n);
testAdd(-0xFEDCBA98 n, -0xFEDCBA98 n, -0x1FDB97530 n);
testAdd(-0xFEDCBA98 n, -0xFEDCBA987654320F n, -0xFEDCBA997530ECA7 n);
testAdd(-0xFEDCBA98 n, -0xFEDCBA9876543210 n, -0xFEDCBA997530ECA8 n);
testAdd(-0xFEDCBA987654320F n, -0xFEDCBA987654320F n, -0x1FDB97530ECA8641E n);
testAdd(-0xFEDCBA987654320F n, -0xFEDCBA9876543210 n, -0x1FDB97530ECA8641F n);
testAdd(-0xFEDCBA9876543210 n, -0xFEDCBA9876543210 n, -0x1FDB97530ECA86420 n);
testAdd(18446744073709551617n, -18446744073709551616n, 1n);