var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (foo) != "undefined") {_RecordType("<9,12,1>",(foo)); Inst0++; } } catch(e) {}
function foo(x, y, z, newX, checkZ, errorMessage) {
try { if (Inst1 <= 1000 && typeof (x) != "undefined") {_RecordType("<13,14,1>",(x)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (y) != "undefined") {_RecordType("<16,17,1>",(y)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (z) != "undefined") {_RecordType("<19,20,1>",(z)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (newX) != "undefined") {_RecordType("<22,26,1>",(newX)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (checkZ) != "undefined") {_RecordType("<28,34,1>",(checkZ)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (errorMessage) != "undefined") {_RecordType("<36,48,1>",(errorMessage)); Inst6++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (z) != "undefined") {_RecordType("<60,61,2>",(z)); Inst7++; } } catch(e) {}
  with (z) {
try { if (Inst9 <= 1000 && typeof (y) != "undefined") {_RecordType("<73,74,3>",(y)); Inst9++; } } catch(e) {}
    x = y;
try { if (Inst8 <= 1000 && typeof (x) != "undefined") {_RecordType("<69,70,3>",(x)); Inst8++; } } catch(e) {}
  }

try { if (Inst10 <= 1000 && typeof (x) != "undefined") {_RecordType("<87,88,6>",(x)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (newX) != "undefined") {_RecordType("<93,97,6>",(newX)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (checkZ) != "undefined") {_RecordType("<102,108,6>",(checkZ)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (z) != "undefined") {_RecordType("<109,110,6>",(z)); Inst13++; } } catch(e) {}
  if (x !== newX || !checkZ(z)) {
try { if (Inst14 <= 1000 && typeof (errorMessage) != "undefined") {_RecordType("<125,137,7>",(errorMessage)); Inst14++; } } catch(e) {}
    throw errorMessage;
  }
}

for (var i = 0; i < 10000; ++i) {
try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<155,156,11>",(i)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<162,163,11>",(i)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (i) != "undefined") {_RecordType("<175,176,11>",(i)); Inst17++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (foo) != "undefined") {_RecordType("<182,185,12>",(foo)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (z) != "undefined") {_RecordType("<212,213,14>",(z)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (z.a) != "undefined") {_RecordType("<217,220,14>",(z.a)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (z) != "undefined") {_RecordType("<217,218,14>",(z)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<282,283,14>",(i)); Inst22++; } } catch(e) {}
  foo(1, 2, {
    a: 42
  }, 2, z => z.a === 42, "Error: bad result for non-overlapping case, i = " + i);
try { if (Inst23 <= 1000 && typeof (foo) != "undefined") {_RecordType("<288,291,15>",(foo)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (z) != "undefined") {_RecordType("<318,319,17>",(z)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (z.x) != "undefined") {_RecordType("<323,326,17>",(z.x)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (z) != "undefined") {_RecordType("<323,324,17>",(z)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (i) != "undefined") {_RecordType("<378,379,17>",(i)); Inst27++; } } catch(e) {}
  foo(1, 2, {
    x: 42
  }, 1, z => z.x === 2, "Error: bad result for setter case, i = " + i);
try { if (Inst28 <= 1000 && typeof (foo) != "undefined") {_RecordType("<384,387,18>",(foo)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (z) != "undefined") {_RecordType("<415,416,20>",(z)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (z.y) != "undefined") {_RecordType("<420,423,20>",(z.y)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (z) != "undefined") {_RecordType("<420,421,20>",(z)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (i) != "undefined") {_RecordType("<476,477,20>",(i)); Inst32++; } } catch(e) {}
  foo(1, 2, {
    y: 42
  }, 42, z => z.y === 42, "Error: bad result for getter case, i = " + i);
try { if (Inst33 <= 1000 && typeof (foo) != "undefined") {_RecordType("<482,485,21>",(foo)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (z) != "undefined") {_RecordType("<523,524,24>",(z)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (z.x) != "undefined") {_RecordType("<528,531,24>",(z.x)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (z) != "undefined") {_RecordType("<528,529,24>",(z)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (z.y) != "undefined") {_RecordType("<542,545,24>",(z.y)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (z) != "undefined") {_RecordType("<542,543,24>",(z)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (i) != "undefined") {_RecordType("<605,606,24>",(i)); Inst39++; } } catch(e) {}
  foo(1, 2, {
    x: 42,
    y: 13
  }, 1, z => z.x === 13 && z.y === 13, "Error: bad result for setter/getter case, i = " + i);
try { if (Inst40 <= 1000 && typeof (foo) != "undefined") {_RecordType("<611,614,25>",(foo)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (z) != "undefined") {_RecordType("<632,633,25>",(z)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (z) != "undefined") {_RecordType("<637,638,25>",(z)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (i) != "undefined") {_RecordType("<695,696,25>",(i)); Inst43++; } } catch(e) {}
  foo(1, 2, "toto", 2, z => z === "toto", "Error: bad result for string case, i = " + i);

try { if (Inst47 <= 1000 && typeof (e) != "undefined") {_RecordType("<823,824,31>",(e)); Inst47++; } } catch(e) {}
  try {
try { if (Inst44 <= 1000 && typeof (foo) != "undefined") {_RecordType("<712,715,28>",(foo)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (z) != "undefined") {_RecordType("<731,732,28>",(z)); Inst45++; } } catch(e) {}
    foo(1, 2, null, 2, z => {
try { if (Inst46 <= 1000 && typeof (i) != "undefined") {_RecordType("<786,787,29>",(i)); Inst46++; } } catch(e) {}
      throw "Error: missing type error, i = " + i;
    }, "Unreachable");
  } catch (e) {
try { if (Inst48 <= 1000 && typeof (e) != "undefined") {_RecordType("<838,839,32>",(e)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<851,860,32>",(TypeError)); Inst49++; } } catch(e) {}
    if (!(e instanceof TypeError)) {
try { if (Inst50 <= 1000 && typeof (e) != "undefined") {_RecordType("<877,878,33>",(e)); Inst50++; } } catch(e) {}
      throw e;
    }
  }
}

