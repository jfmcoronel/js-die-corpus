var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//@ skip
try { if (Inst1 <= 1000 && typeof (SharedArrayBuffer) != "undefined") {_RecordType("<23,40,2>",(SharedArrayBuffer)); Inst1++; } } catch(e) {}
var sab = new SharedArrayBuffer(4);
try { if (Inst0 <= 1000 && typeof (sab) != "undefined") {_RecordType("<13,16,2>",(sab)); Inst0++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (Uint32Array) != "undefined") {_RecordType("<57,68,3>",(Uint32Array)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (sab) != "undefined") {_RecordType("<69,72,3>",(sab)); Inst4++; } } catch(e) {}
var a = new Uint32Array(sab);
try { if (Inst2 <= 1000 && typeof (a) != "undefined") {_RecordType("<49,50,3>",(a)); Inst2++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (Atomics.add) != "undefined") {_RecordType("<88,99,4>",(Atomics.add)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Atomics) != "undefined") {_RecordType("<88,95,4>",(Atomics)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (a) != "undefined") {_RecordType("<100,101,4>",(a)); Inst8++; } } catch(e) {}
var result = Atomics.add(a, 0, 4000000000);
try { if (Inst5 <= 1000 && typeof (result) != "undefined") {_RecordType("<79,85,4>",(result)); Inst5++; } } catch(e) {}

try { if (Inst9 <= 1000 && typeof (result) != "undefined") {_RecordType("<124,130,6>",(result)); Inst9++; } } catch(e) {}
if (result != 0) {
try { if (Inst10 <= 1000 && typeof (Error) != "undefined") {_RecordType("<151,156,7>",(Error)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (result) != "undefined") {_RecordType("<174,180,7>",(result)); Inst11++; } } catch(e) {}
  throw new Error("bad result: " + result);
}

try { if (Inst12 <= 1000 && typeof (a[0]) != "undefined") {_RecordType("<190,194,10>",(a[0])); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (a) != "undefined") {_RecordType("<190,191,10>",(a)); Inst13++; } } catch(e) {}
if (a[0] != 4000000000) {
try { if (Inst14 <= 1000 && typeof (Error) != "undefined") {_RecordType("<224,229,11>",(Error)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (a[0]) != "undefined") {_RecordType("<256,260,11>",(a[0])); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (a) != "undefined") {_RecordType("<256,257,11>",(a)); Inst16++; } } catch(e) {}
  throw new Error("bad value read back: " + a[0]);
}

try { if (Inst18 <= 1000 && typeof (Atomics.sub) != "undefined") {_RecordType("<275,286,14>",(Atomics.sub)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Atomics) != "undefined") {_RecordType("<275,282,14>",(Atomics)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (a) != "undefined") {_RecordType("<287,288,14>",(a)); Inst20++; } } catch(e) {}
result = Atomics.sub(a, 0, 4000000000);
try { if (Inst17 <= 1000 && typeof (result) != "undefined") {_RecordType("<266,272,14>",(result)); Inst17++; } } catch(e) {}

try { if (Inst21 <= 1000 && typeof (result) != "undefined") {_RecordType("<311,317,16>",(result)); Inst21++; } } catch(e) {}
if (result != 4000000000) {
try { if (Inst22 <= 1000 && typeof (Error) != "undefined") {_RecordType("<347,352,17>",(Error)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (result) != "undefined") {_RecordType("<370,376,17>",(result)); Inst23++; } } catch(e) {}
  throw new Error("bad result: " + result);
}

try { if (Inst24 <= 1000 && typeof (a[0]) != "undefined") {_RecordType("<386,390,20>",(a[0])); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (a) != "undefined") {_RecordType("<386,387,20>",(a)); Inst25++; } } catch(e) {}
if (a[0] != 0) {
try { if (Inst26 <= 1000 && typeof (Error) != "undefined") {_RecordType("<411,416,21>",(Error)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (a[0]) != "undefined") {_RecordType("<443,447,21>",(a[0])); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (a) != "undefined") {_RecordType("<443,444,21>",(a)); Inst28++; } } catch(e) {}
  throw new Error("bad value read back: " + a[0]);
}

