var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// This file tests is concat spreadable when taking the fast path
// (single argument, JSArray receiver)
try { if (Inst0 <= 1000 && typeof (arrayEq) != "undefined") {_RecordType("<114,121,3>",(arrayEq)); Inst0++; } } catch(e) {}
function arrayEq(a, b) {
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<122,123,3>",(a)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (b) != "undefined") {_RecordType("<125,126,3>",(b)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<136,144,4>",(a.length)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (a) != "undefined") {_RecordType("<136,137,4>",(a)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (b.length) != "undefined") {_RecordType("<149,157,4>",(b.length)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (b) != "undefined") {_RecordType("<149,150,4>",(b)); Inst6++; } } catch(e) {}
  if (a.length !== b.length) {
    return false;
  }

  for (let i = 0; i < a.length; i++) {
try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<195,196,8>",(i)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<202,203,8>",(i)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<206,214,8>",(a.length)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (a) != "undefined") {_RecordType("<206,207,8>",(a)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<216,217,8>",(i)); Inst11++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (a[i]) != "undefined") {_RecordType("<231,235,9>",(a[i])); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (a) != "undefined") {_RecordType("<231,232,9>",(a)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (b[i]) != "undefined") {_RecordType("<240,244,9>",(b[i])); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (b) != "undefined") {_RecordType("<240,241,9>",(b)); Inst15++; } } catch(e) {}
    if (a[i] !== b[i]) {
      return false;
    }
  }

  return true;
}

{
  let array = [1, 2, 3];
try { if (Inst16 <= 1000 && typeof (array) != "undefined") {_RecordType("<305,310,18>",(array)); Inst16++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (Proxy.revocable) != "undefined") {_RecordType("<363,378,22>",(Proxy.revocable)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<363,368,22>",(Proxy)); Inst20++; } } catch(e) {}
  let {
    proxy: p,
    revoke
  } = Proxy.revocable([4, 5], {}); // Test it works with proxies by default
try { if (Inst17 <= 1000 && typeof (p) != "undefined") {_RecordType("<343,344,20>",(p)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (revoke) != "undefined") {_RecordType("<350,356,21>",(revoke)); Inst18++; } } catch(e) {}

  for (let i = 0; i < 10000; i++) {
try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<445,446,24>",(i)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<452,453,24>",(i)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<463,464,24>",(i)); Inst23++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (arrayEq) != "undefined") {_RecordType("<479,486,25>",(arrayEq)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Array.prototype.concat.call) != "undefined") {_RecordType("<487,514,25>",(Array.prototype.concat.call)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Array.prototype.concat) != "undefined") {_RecordType("<487,509,25>",(Array.prototype.concat)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<487,502,25>",(Array.prototype)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (Array) != "undefined") {_RecordType("<487,492,25>",(Array)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (array) != "undefined") {_RecordType("<515,520,25>",(array)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (p) != "undefined") {_RecordType("<522,523,25>",(p)); Inst30++; } } catch(e) {}
    if (!arrayEq(Array.prototype.concat.call(array, p), [1, 2, 3, 4, 5])) {
      throw "failed normally with a proxy";
    }
  } // Test it works with spreadable false.


  p[Symbol.isConcatSpreadable] = false;
try { if (Inst31 <= 1000 && typeof (p[Symbol.isConcatSpreadable]) != "undefined") {_RecordType("<644,672,31>",(p[Symbol.isConcatSpreadable])); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (p) != "undefined") {_RecordType("<644,645,31>",(p)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (Symbol.isConcatSpreadable) != "undefined") {_RecordType("<646,671,31>",(Symbol.isConcatSpreadable)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<646,652,31>",(Symbol)); Inst34++; } } catch(e) {}

  for (let i = 0; i < 10000; i++) {
try { if (Inst35 <= 1000 && typeof (i) != "undefined") {_RecordType("<694,695,33>",(i)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (i) != "undefined") {_RecordType("<701,702,33>",(i)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (i) != "undefined") {_RecordType("<712,713,33>",(i)); Inst37++; } } catch(e) {}
try { if (Inst38 <= 1000 && typeof (arrayEq) != "undefined") {_RecordType("<728,735,34>",(arrayEq)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (Array.prototype.concat.call) != "undefined") {_RecordType("<736,763,34>",(Array.prototype.concat.call)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (Array.prototype.concat) != "undefined") {_RecordType("<736,758,34>",(Array.prototype.concat)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<736,751,34>",(Array.prototype)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (Array) != "undefined") {_RecordType("<736,741,34>",(Array)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (array) != "undefined") {_RecordType("<764,769,34>",(array)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (p) != "undefined") {_RecordType("<771,772,34>",(p)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (p) != "undefined") {_RecordType("<785,786,34>",(p)); Inst45++; } } catch(e) {}
    if (!arrayEq(Array.prototype.concat.call(array, p), [1, 2, 3, p])) {
      throw "failed with no spread";
    }
  }

try { if (Inst50 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<873,882,39>",(undefined)); Inst50++; } } catch(e) {}
  p[Symbol.isConcatSpreadable] = undefined;
try { if (Inst46 <= 1000 && typeof (p[Symbol.isConcatSpreadable]) != "undefined") {_RecordType("<842,870,39>",(p[Symbol.isConcatSpreadable])); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (p) != "undefined") {_RecordType("<842,843,39>",(p)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (Symbol.isConcatSpreadable) != "undefined") {_RecordType("<844,869,39>",(Symbol.isConcatSpreadable)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<844,850,39>",(Symbol)); Inst49++; } } catch(e) {}
try { if (Inst51 <= 1000 && typeof (revoke) != "undefined") {_RecordType("<886,892,40>",(revoke)); Inst51++; } } catch(e) {}
  revoke();
  passed = true;
try { if (Inst52 <= 1000 && typeof (passed) != "undefined") {_RecordType("<898,904,41>",(passed)); Inst52++; } } catch(e) {}

try { if (Inst60 <= 1000 && typeof (e) != "undefined") {_RecordType("<996,997,46>",(e)); Inst60++; } } catch(e) {}
  try {
try { if (Inst53 <= 1000 && typeof (Array.prototype.concat.call) != "undefined") {_RecordType("<926,953,44>",(Array.prototype.concat.call)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (Array.prototype.concat) != "undefined") {_RecordType("<926,948,44>",(Array.prototype.concat)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<926,941,44>",(Array.prototype)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (Array) != "undefined") {_RecordType("<926,931,44>",(Array)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (array) != "undefined") {_RecordType("<954,959,44>",(array)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (p) != "undefined") {_RecordType("<961,962,44>",(p)); Inst58++; } } catch(e) {}
    Array.prototype.concat.call(array, p);
    passed = false;
try { if (Inst59 <= 1000 && typeof (passed) != "undefined") {_RecordType("<969,975,45>",(passed)); Inst59++; } } catch(e) {}
  } catch (e) {
    ;
  }

try { if (Inst61 <= 1000 && typeof (passed) != "undefined") {_RecordType("<1019,1025,50>",(passed)); Inst61++; } } catch(e) {}
  if (!passed) {
    throw "failed to throw spreading revoked proxy";
  }
}

