var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (test1) != "undefined") {_RecordType("<9,14,1>",(test1)); Inst0++; } } catch(e) {}
function test1(item) {
try { if (Inst1 <= 1000 && typeof (item) != "undefined") {_RecordType("<15,19,1>",(item)); Inst1++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (item) != "undefined") {_RecordType("<46,50,3>",(item)); Inst3++; } } catch(e) {}
  var o = {
    10000: item,

    get 10005() {
      ;
    }

  };
try { if (Inst2 <= 1000 && typeof (o) != "undefined") {_RecordType("<29,30,2>",(o)); Inst2++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (Array) != "undefined") {_RecordType("<107,112,10>",(Array)); Inst5++; } } catch(e) {}
  let arr = new Array(10008);
try { if (Inst4 <= 1000 && typeof (arr) != "undefined") {_RecordType("<97,100,10>",(arr)); Inst4++; } } catch(e) {}

  for (let key of arr.keys()) {
try { if (Inst6 <= 1000 && typeof (key) != "undefined") {_RecordType("<133,136,12>",(key)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (arr.keys) != "undefined") {_RecordType("<140,148,12>",(arr.keys)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (arr) != "undefined") {_RecordType("<140,143,12>",(arr)); Inst8++; } } catch(e) {}
    let o2 = {};
try { if (Inst9 <= 1000 && typeof (o2) != "undefined") {_RecordType("<162,164,13>",(o2)); Inst9++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (o2) != "undefined") {_RecordType("<184,186,14>",(o2)); Inst12++; } } catch(e) {}
    o[key] = o2;
try { if (Inst10 <= 1000 && typeof (o[key]) != "undefined") {_RecordType("<175,181,14>",(o[key])); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (o) != "undefined") {_RecordType("<175,176,14>",(o)); Inst11++; } } catch(e) {}
  }
}

try { if (Inst13 <= 1000 && typeof (test1) != "undefined") {_RecordType("<195,200,18>",(test1)); Inst13++; } } catch(e) {}
test1({});
try { if (Inst14 <= 1000 && typeof (test1) != "undefined") {_RecordType("<206,211,19>",(test1)); Inst14++; } } catch(e) {}
test1(10);
try { if (Inst15 <= 1000 && typeof (test1) != "undefined") {_RecordType("<217,222,20>",(test1)); Inst15++; } } catch(e) {}
test1(10.5);

try { if (Inst16 <= 1000 && typeof (test2) != "undefined") {_RecordType("<240,245,22>",(test2)); Inst16++; } } catch(e) {}
function test2(item) {
try { if (Inst17 <= 1000 && typeof (item) != "undefined") {_RecordType("<246,250,22>",(item)); Inst17++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (item) != "undefined") {_RecordType("<273,277,24>",(item)); Inst19++; } } catch(e) {}
  var o = {
    0: item,

    get 1000() {
      ;
    }

  };
try { if (Inst18 <= 1000 && typeof (o) != "undefined") {_RecordType("<260,261,23>",(o)); Inst18++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (Array) != "undefined") {_RecordType("<333,338,31>",(Array)); Inst21++; } } catch(e) {}
  let arr = new Array(1000);
try { if (Inst20 <= 1000 && typeof (arr) != "undefined") {_RecordType("<323,326,31>",(arr)); Inst20++; } } catch(e) {}

  for (let key of arr.keys()) {
try { if (Inst22 <= 1000 && typeof (key) != "undefined") {_RecordType("<358,361,33>",(key)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (arr.keys) != "undefined") {_RecordType("<365,373,33>",(arr.keys)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (arr) != "undefined") {_RecordType("<365,368,33>",(arr)); Inst24++; } } catch(e) {}
    let o2 = {};
try { if (Inst25 <= 1000 && typeof (o2) != "undefined") {_RecordType("<387,389,34>",(o2)); Inst25++; } } catch(e) {}
try { if (Inst28 <= 1000 && typeof (o2) != "undefined") {_RecordType("<409,411,35>",(o2)); Inst28++; } } catch(e) {}
    o[key] = o2;
try { if (Inst26 <= 1000 && typeof (o[key]) != "undefined") {_RecordType("<400,406,35>",(o[key])); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (o) != "undefined") {_RecordType("<400,401,35>",(o)); Inst27++; } } catch(e) {}
  }
}

try { if (Inst29 <= 1000 && typeof (test2) != "undefined") {_RecordType("<420,425,39>",(test2)); Inst29++; } } catch(e) {}
test2({});
try { if (Inst30 <= 1000 && typeof (test2) != "undefined") {_RecordType("<431,436,40>",(test2)); Inst30++; } } catch(e) {}
test2(10);
try { if (Inst31 <= 1000 && typeof (test2) != "undefined") {_RecordType("<442,447,41>",(test2)); Inst31++; } } catch(e) {}
test2(10.5);

