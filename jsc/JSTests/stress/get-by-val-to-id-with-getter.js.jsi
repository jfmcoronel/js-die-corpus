var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Test GetByVal => GetById conversion works correctly when inlining a getter in the DFG.
try { if (Inst0 <= 1000 && typeof (foo) != "undefined") {_RecordType("<99,102,2>",(foo)); Inst0++; } } catch(e) {}
function foo(obj, val) {
try { if (Inst1 <= 1000 && typeof (obj) != "undefined") {_RecordType("<103,106,2>",(obj)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (val) != "undefined") {_RecordType("<108,111,2>",(val)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (obj[val]) != "undefined") {_RecordType("<121,129,3>",(obj[val])); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (obj) != "undefined") {_RecordType("<121,124,3>",(obj)); Inst4++; } } catch(e) {}
  if (obj[val]) {
    return 1;
  }

  return 0;
}

try { if (Inst5 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<167,175,10>",(noInline)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (foo) != "undefined") {_RecordType("<176,179,10>",(foo)); Inst6++; } } catch(e) {}
noInline(foo);
try { if (Inst8 <= 1000 && typeof (hello) != "undefined") {_RecordType("<205,210,14>",(hello)); Inst8++; } } catch(e) {}
o = {
  num: 0,

  get hello() {
try { if (Inst9 <= 1000 && typeof (this.num) != "undefined") {_RecordType("<223,231,15>",(this.num)); Inst9++; } } catch(e) {}
    if (this.num === 1) {
      return true;
    }

    return false;
  }

};
try { if (Inst7 <= 1000 && typeof (o) != "undefined") {_RecordType("<182,183,11>",(o)); Inst7++; } } catch(e) {}

for (i = 0; i < 100000; ++i) {
try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<299,300,24>",(i)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<306,307,24>",(i)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<320,321,24>",(i)); Inst12++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<337,338,25>",(i)); Inst14++; } } catch(e) {}
  let num = i % 2;
try { if (Inst13 <= 1000 && typeof (num) != "undefined") {_RecordType("<331,334,25>",(num)); Inst13++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (num) != "undefined") {_RecordType("<354,357,26>",(num)); Inst17++; } } catch(e) {}
  o.num = num;
try { if (Inst15 <= 1000 && typeof (o.num) != "undefined") {_RecordType("<346,351,26>",(o.num)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (o) != "undefined") {_RecordType("<346,347,26>",(o)); Inst16++; } } catch(e) {}

try { if (Inst18 <= 1000 && typeof (foo) != "undefined") {_RecordType("<366,369,28>",(foo)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (o) != "undefined") {_RecordType("<370,371,28>",(o)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (num) != "undefined") {_RecordType("<386,389,28>",(num)); Inst20++; } } catch(e) {}
  if (foo(o, "hello") !== num) {
try { if (Inst21 <= 1000 && typeof (Error) != "undefined") {_RecordType("<407,412,29>",(Error)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<443,444,29>",(i)); Inst22++; } } catch(e) {}
    throw new Error("bad result on iteration: " + i);
  }
}

