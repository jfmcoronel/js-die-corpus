var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<9,17,1>",(shouldBe)); Inst0++; } } catch(e) {}
function shouldBe(actual, expected) {
try { if (Inst1 <= 1000 && typeof (actual) != "undefined") {_RecordType("<18,24,1>",(actual)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (expected) != "undefined") {_RecordType("<26,34,1>",(expected)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (actual) != "undefined") {_RecordType("<44,50,2>",(actual)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (expected) != "undefined") {_RecordType("<55,63,2>",(expected)); Inst4++; } } catch(e) {}
  if (actual !== expected) {
try { if (Inst5 <= 1000 && typeof (Error) != "undefined") {_RecordType("<81,86,3>",(Error)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (actual) != "undefined") {_RecordType("<103,109,3>",(actual)); Inst6++; } } catch(e) {}
    throw new Error('bad value: ' + actual);
  }
}

try { if (Inst7 <= 1000 && typeof (makePolyProtoObject) != "undefined") {_RecordType("<128,147,7>",(makePolyProtoObject)); Inst7++; } } catch(e) {}
function makePolyProtoObject() {
try { if (Inst8 <= 1000 && typeof (foo) != "undefined") {_RecordType("<163,166,8>",(foo)); Inst8++; } } catch(e) {}
  function foo() {
    class C {
      constructor() {
        this._field = 42;
try { if (Inst10 <= 1000 && typeof (this._field) != "undefined") {_RecordType("<215,226,11>",(this._field)); Inst10++; } } catch(e) {}
        this.hello = 33;
try { if (Inst11 <= 1000 && typeof (this.hello) != "undefined") {_RecordType("<241,251,12>",(this.hello)); Inst11++; } } catch(e) {}
      }

    }
try { if (Inst9 <= 1000 && typeof (C) != "undefined") {_RecordType("<181,182,9>",(C)); Inst9++; } } catch(e) {}

    ;
try { if (Inst12 <= 1000 && typeof (C) != "undefined") {_RecordType("<295,296,18>",(C)); Inst12++; } } catch(e) {}
    return new C();
  }

  for (let i = 0; i < 15; ++i) {
try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<316,317,21>",(i)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<323,324,21>",(i)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<333,334,21>",(i)); Inst15++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (foo) != "undefined") {_RecordType("<342,345,22>",(foo)); Inst16++; } } catch(e) {}
    foo();
  }

try { if (Inst17 <= 1000 && typeof (foo) != "undefined") {_RecordType("<363,366,25>",(foo)); Inst17++; } } catch(e) {}
  return foo();
}

try { if (Inst18 <= 1000 && typeof (target) != "undefined") {_RecordType("<382,388,28>",(target)); Inst18++; } } catch(e) {}
function target(object) {
try { if (Inst19 <= 1000 && typeof (object) != "undefined") {_RecordType("<389,395,28>",(object)); Inst19++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (object.hello) != "undefined") {_RecordType("<409,421,29>",(object.hello)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (object) != "undefined") {_RecordType("<409,415,29>",(object)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Object.getPrototypeOf) != "undefined") {_RecordType("<423,444,29>",(Object.getPrototypeOf)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Object) != "undefined") {_RecordType("<423,429,29>",(Object)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (object) != "undefined") {_RecordType("<445,451,29>",(object)); Inst24++; } } catch(e) {}
  return [object.hello, Object.getPrototypeOf(object)];
}

try { if (Inst25 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<458,466,32>",(noInline)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (target) != "undefined") {_RecordType("<467,473,32>",(target)); Inst26++; } } catch(e) {}
noInline(target);
try { if (Inst28 <= 1000 && typeof (makePolyProtoObject) != "undefined") {_RecordType("<498,517,33>",(makePolyProtoObject)); Inst28++; } } catch(e) {}
var polyProtoObject = makePolyProtoObject();
try { if (Inst27 <= 1000 && typeof (polyProtoObject) != "undefined") {_RecordType("<480,495,33>",(polyProtoObject)); Inst27++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (Reflect.getPrototypeOf) != "undefined") {_RecordType("<537,559,34>",(Reflect.getPrototypeOf)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<537,544,34>",(Reflect)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (polyProtoObject) != "undefined") {_RecordType("<560,575,34>",(polyProtoObject)); Inst32++; } } catch(e) {}
var prototype = Reflect.getPrototypeOf(polyProtoObject);
try { if (Inst29 <= 1000 && typeof (prototype) != "undefined") {_RecordType("<525,534,34>",(prototype)); Inst29++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof (prototype) != "undefined") {_RecordType("<607,616,36>",(prototype)); Inst34++; } } catch(e) {}
var object1 = {
  __proto__: prototype,
  hello: 44
};
try { if (Inst33 <= 1000 && typeof (object1) != "undefined") {_RecordType("<582,589,35>",(object1)); Inst33++; } } catch(e) {}
var object2 = {
  hello: 45
};
try { if (Inst35 <= 1000 && typeof (object2) != "undefined") {_RecordType("<637,644,39>",(object2)); Inst35++; } } catch(e) {}

for (var i = 0; i < 1e5; ++i) {
try { if (Inst36 <= 1000 && typeof (i) != "undefined") {_RecordType("<674,675,43>",(i)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (i) != "undefined") {_RecordType("<681,682,43>",(i)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (i) != "undefined") {_RecordType("<692,693,43>",(i)); Inst38++; } } catch(e) {}
try { if (Inst39 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<699,707,44>",(shouldBe)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (target(object1)[1]) != "undefined") {_RecordType("<708,726,44>",(target(object1)[1])); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (target) != "undefined") {_RecordType("<708,714,44>",(target)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (object1) != "undefined") {_RecordType("<715,722,44>",(object1)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (prototype) != "undefined") {_RecordType("<728,737,44>",(prototype)); Inst43++; } } catch(e) {}
  shouldBe(target(object1)[1], prototype);
try { if (Inst44 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<742,750,45>",(shouldBe)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (target(object2)[1]) != "undefined") {_RecordType("<751,769,45>",(target(object2)[1])); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (target) != "undefined") {_RecordType("<751,757,45>",(target)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (object2) != "undefined") {_RecordType("<758,765,45>",(object2)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<771,787,45>",(Object.prototype)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (Object) != "undefined") {_RecordType("<771,777,45>",(Object)); Inst49++; } } catch(e) {}
  shouldBe(target(object2)[1], Object.prototype);
}

