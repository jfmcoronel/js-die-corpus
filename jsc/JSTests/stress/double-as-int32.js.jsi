var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//@ defaultRun; runNoCJITNoASO
try { if (Inst0 <= 1000 && typeof (foo) != "undefined") {_RecordType("<40,43,2>",(foo)); Inst0++; } } catch(e) {}
function foo(a, b) {
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<44,45,2>",(a)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (b) != "undefined") {_RecordType("<47,48,2>",(b)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (a.f) != "undefined") {_RecordType("<61,64,3>",(a.f)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (a) != "undefined") {_RecordType("<61,62,3>",(a)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (b.f) != "undefined") {_RecordType("<67,70,3>",(b.f)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (b) != "undefined") {_RecordType("<67,68,3>",(b)); Inst6++; } } catch(e) {}
  return a.f / b.f;
}

try { if (Inst7 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<75,83,6>",(noInline)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (foo) != "undefined") {_RecordType("<84,87,6>",(foo)); Inst8++; } } catch(e) {}
noInline(foo);

try { if (Inst9 <= 1000 && typeof (test) != "undefined") {_RecordType("<100,104,8>",(test)); Inst9++; } } catch(e) {}
function test(a, b, e) {
try { if (Inst10 <= 1000 && typeof (a) != "undefined") {_RecordType("<105,106,8>",(a)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (b) != "undefined") {_RecordType("<108,109,8>",(b)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (e) != "undefined") {_RecordType("<111,112,8>",(e)); Inst12++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (foo) != "undefined") {_RecordType("<131,134,9>",(foo)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (a) != "undefined") {_RecordType("<144,145,10>",(a)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (b) != "undefined") {_RecordType("<160,161,12>",(b)); Inst16++; } } catch(e) {}
  var result = foo({
    f: a
  }, {
    f: b
  });
try { if (Inst13 <= 1000 && typeof (result) != "undefined") {_RecordType("<122,128,9>",(result)); Inst13++; } } catch(e) {}

try { if (Inst17 <= 1000 && typeof (result) != "undefined") {_RecordType("<175,181,15>",(result)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (e) != "undefined") {_RecordType("<185,186,15>",(e)); Inst18++; } } catch(e) {}
  if (result != e) {
try { if (Inst19 <= 1000 && typeof (a) != "undefined") {_RecordType("<212,213,16>",(a)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (b) != "undefined") {_RecordType("<224,225,16>",(b)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (e) != "undefined") {_RecordType("<244,245,16>",(e)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (result) != "undefined") {_RecordType("<262,268,16>",(result)); Inst22++; } } catch(e) {}
    throw "Error: " + a + " / " + b + " should be " + e + " but was " + result;
  }
}

for (var i = 1; i < 101; ++i) {
try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<286,287,20>",(i)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<293,294,20>",(i)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<304,305,20>",(i)); Inst25++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (test) != "undefined") {_RecordType("<311,315,21>",(test)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (i) != "undefined") {_RecordType("<316,317,21>",(i)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (i) != "undefined") {_RecordType("<323,324,21>",(i)); Inst28++; } } catch(e) {}
  test(i * 2, i, 2);
}

try { if (Inst29 <= 1000 && typeof (test) != "undefined") {_RecordType("<333,337,24>",(test)); Inst29++; } } catch(e) {}
test(9, 3, 3);
try { if (Inst30 <= 1000 && typeof (test) != "undefined") {_RecordType("<348,352,25>",(test)); Inst30++; } } catch(e) {}
test(12, 4, 3);
try { if (Inst31 <= 1000 && typeof (test) != "undefined") {_RecordType("<364,368,26>",(test)); Inst31++; } } catch(e) {}
test(-32, 8, -4);
try { if (Inst32 <= 1000 && typeof (test) != "undefined") {_RecordType("<382,386,27>",(test)); Inst32++; } } catch(e) {}
test(-21, 7, -3);
try { if (Inst33 <= 1000 && typeof (test) != "undefined") {_RecordType("<400,404,28>",(test)); Inst33++; } } catch(e) {}
test(7, 2, 3.5);

