var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//@ runDefault("--useFTLJIT=0", "--useConcurrentJIT=false")
let num = 150;
try { if (Inst0 <= 1000 && typeof (num) != "undefined") {_RecordType("<64,67,2>",(num)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (foo) != "undefined") {_RecordType("<85,88,4>",(foo)); Inst1++; } } catch(e) {}
function foo(comp, o, b) {
try { if (Inst2 <= 1000 && typeof (comp) != "undefined") {_RecordType("<89,93,4>",(comp)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (o) != "undefined") {_RecordType("<95,96,4>",(o)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (b) != "undefined") {_RecordType("<98,99,4>",(b)); Inst4++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (o.f) != "undefined") {_RecordType("<115,118,5>",(o.f)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (o) != "undefined") {_RecordType("<115,116,5>",(o)); Inst7++; } } catch(e) {}
  let sum = o.f;
try { if (Inst5 <= 1000 && typeof (sum) != "undefined") {_RecordType("<109,112,5>",(sum)); Inst5++; } } catch(e) {}

try { if (Inst8 <= 1000 && typeof (b) != "undefined") {_RecordType("<127,128,7>",(b)); Inst8++; } } catch(e) {}
  if (b) {
try { if (Inst9 <= 1000 && typeof (OSRExit) != "undefined") {_RecordType("<136,143,8>",(OSRExit)); Inst9++; } } catch(e) {}
    OSRExit();
  }

  for (let i = 0; i < comp; ++i) {
try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<163,164,11>",(i)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<170,171,11>",(i)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (comp) != "undefined") {_RecordType("<174,178,11>",(comp)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<182,183,11>",(i)); Inst13++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (o.f) != "undefined") {_RecordType("<198,201,12>",(o.f)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (o) != "undefined") {_RecordType("<198,199,12>",(o)); Inst16++; } } catch(e) {}
    sum += o.f;
try { if (Inst14 <= 1000 && typeof (sum) != "undefined") {_RecordType("<191,194,12>",(sum)); Inst14++; } } catch(e) {}
  }

try { if (Inst17 <= 1000 && typeof (sum) != "undefined") {_RecordType("<217,220,15>",(sum)); Inst17++; } } catch(e) {}
  return sum;
}

try { if (Inst18 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<225,233,18>",(noInline)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (foo) != "undefined") {_RecordType("<234,237,18>",(foo)); Inst19++; } } catch(e) {}
noInline(foo);
let o = {
  f: 25
};
try { if (Inst20 <= 1000 && typeof (o) != "undefined") {_RecordType("<244,245,19>",(o)); Inst20++; } } catch(e) {}
let o2 = {
  f: 25,
  g: 44
};
try { if (Inst21 <= 1000 && typeof (o2) != "undefined") {_RecordType("<265,267,22>",(o2)); Inst21++; } } catch(e) {}
o2.f = 45;
try { if (Inst22 <= 1000 && typeof (o2.f) != "undefined") {_RecordType("<292,296,26>",(o2.f)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (o2) != "undefined") {_RecordType("<292,294,26>",(o2)); Inst23++; } } catch(e) {}
o2.f = 45;
try { if (Inst24 <= 1000 && typeof (o2.f) != "undefined") {_RecordType("<303,307,27>",(o2.f)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (o2) != "undefined") {_RecordType("<303,305,27>",(o2)); Inst25++; } } catch(e) {}
o2.f = 45;
try { if (Inst26 <= 1000 && typeof (o2.f) != "undefined") {_RecordType("<314,318,28>",(o2.f)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (o2) != "undefined") {_RecordType("<314,316,28>",(o2)); Inst27++; } } catch(e) {}
o2.f = 45;
try { if (Inst28 <= 1000 && typeof (o2.f) != "undefined") {_RecordType("<325,329,29>",(o2.f)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (o2) != "undefined") {_RecordType("<325,327,29>",(o2)); Inst29++; } } catch(e) {}
try { if (Inst31 <= 1000 && typeof (valueOf) != "undefined") {_RecordType("<351,358,31>",(valueOf)); Inst31++; } } catch(e) {}
let comp = {
  valueOf() {
try { if (Inst32 <= 1000 && typeof (num) != "undefined") {_RecordType("<374,377,32>",(num)); Inst32++; } } catch(e) {}
    return num;
  }

};
try { if (Inst30 <= 1000 && typeof (comp) != "undefined") {_RecordType("<340,344,30>",(comp)); Inst30++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (foo) != "undefined") {_RecordType("<387,390,36>",(foo)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (comp) != "undefined") {_RecordType("<391,395,36>",(comp)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (o2) != "undefined") {_RecordType("<397,399,36>",(o2)); Inst35++; } } catch(e) {}
foo(comp, o2, true);
try { if (Inst36 <= 1000 && typeof (foo) != "undefined") {_RecordType("<408,411,37>",(foo)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (comp) != "undefined") {_RecordType("<412,416,37>",(comp)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (o2) != "undefined") {_RecordType("<418,420,37>",(o2)); Inst38++; } } catch(e) {}
foo(comp, o2, true);

for (let i = 0; i < 500; ++i) {
try { if (Inst39 <= 1000 && typeof (i) != "undefined") {_RecordType("<439,440,39>",(i)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (i) != "undefined") {_RecordType("<446,447,39>",(i)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (i) != "undefined") {_RecordType("<457,458,39>",(i)); Inst41++; } } catch(e) {}
try { if (Inst42 <= 1000 && typeof (foo) != "undefined") {_RecordType("<464,467,40>",(foo)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (comp) != "undefined") {_RecordType("<468,472,40>",(comp)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (o2) != "undefined") {_RecordType("<474,476,40>",(o2)); Inst44++; } } catch(e) {}
  foo(comp, o2, false);
}

let o3 = {
  g: 24,
  f: 73
};
try { if (Inst45 <= 1000 && typeof (o3) != "undefined") {_RecordType("<493,495,43>",(o3)); Inst45++; } } catch(e) {}
num = 10000000;
try { if (Inst46 <= 1000 && typeof (num) != "undefined") {_RecordType("<520,523,47>",(num)); Inst46++; } } catch(e) {}
try { if (Inst48 <= 1000 && typeof (foo) != "undefined") {_RecordType("<549,552,48>",(foo)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (comp) != "undefined") {_RecordType("<553,557,48>",(comp)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (o3) != "undefined") {_RecordType("<559,561,48>",(o3)); Inst50++; } } catch(e) {}
let result = foo(comp, o3, false);
try { if (Inst47 <= 1000 && typeof (result) != "undefined") {_RecordType("<540,546,48>",(result)); Inst47++; } } catch(e) {}

try { if (Inst51 <= 1000 && typeof (result) != "undefined") {_RecordType("<576,582,50>",(result)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (num) != "undefined") {_RecordType("<588,591,50>",(num)); Inst52++; } } catch(e) {}
if (result !== (num + 1) * 73) {
try { if (Inst53 <= 1000 && typeof (Error) != "undefined") {_RecordType("<617,622,51>",(Error)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (result) != "undefined") {_RecordType("<633,639,51>",(result)); Inst54++; } } catch(e) {}
  throw new Error("Bad: " + result);
}

