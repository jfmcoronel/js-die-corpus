var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (assert) != "undefined") {_RecordType("<9,15,1>",(assert)); Inst0++; } } catch(e) {}
function assert(b) {
try { if (Inst1 <= 1000 && typeof (b) != "undefined") {_RecordType("<16,17,1>",(b)); Inst1++; } } catch(e) {}
  ;
}

try { if (Inst2 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<28,36,5>",(noInline)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (assert) != "undefined") {_RecordType("<37,43,5>",(assert)); Inst3++; } } catch(e) {}
noInline(assert);

try { if (Inst4 <= 1000 && typeof (random) != "undefined") {_RecordType("<56,62,7>",(random)); Inst4++; } } catch(e) {}
function random() {
  return "blah";
}

try { if (Inst5 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<87,95,11>",(noInline)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (random) != "undefined") {_RecordType("<96,102,11>",(random)); Inst6++; } } catch(e) {}
noInline(random);

try { if (Inst7 <= 1000 && typeof (identity) != "undefined") {_RecordType("<115,123,13>",(identity)); Inst7++; } } catch(e) {}
function identity(x) {
try { if (Inst8 <= 1000 && typeof (x) != "undefined") {_RecordType("<124,125,13>",(x)); Inst8++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (x) != "undefined") {_RecordType("<138,139,14>",(x)); Inst9++; } } catch(e) {}
  return x;
}

try { if (Inst10 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<144,152,17>",(noInline)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (identity) != "undefined") {_RecordType("<153,161,17>",(identity)); Inst11++; } } catch(e) {}
noInline(identity);
let o1 = {
  g: 20,
  y: 40,
  f: "get f"
};
try { if (Inst12 <= 1000 && typeof (o1) != "undefined") {_RecordType("<168,170,18>",(o1)); Inst12++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (f) != "undefined") {_RecordType("<247,248,27>",(f)); Inst14++; } } catch(e) {}
let o2 = {
  g: "g",
  y: "y",

  get f() {
    return "get f";
  }

};
try { if (Inst13 <= 1000 && typeof (o2) != "undefined") {_RecordType("<213,215,23>",(o2)); Inst13++; } } catch(e) {}
let o4 = {};
try { if (Inst15 <= 1000 && typeof (o4) != "undefined") {_RecordType("<285,287,32>",(o4)); Inst15++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (f) != "undefined") {_RecordType("<311,312,34>",(f)); Inst17++; } } catch(e) {}
let o3 = {
  get f() {
try { if (Inst18 <= 1000 && typeof (Error) != "undefined") {_RecordType("<331,336,35>",(Error)); Inst18++; } } catch(e) {}
    throw new Error("blah");
  }

};
try { if (Inst16 <= 1000 && typeof (o3) != "undefined") {_RecordType("<298,300,33>",(o3)); Inst16++; } } catch(e) {}

try { if (Inst19 <= 1000 && typeof (foo) != "undefined") {_RecordType("<364,367,40>",(foo)); Inst19++; } } catch(e) {}
function foo(o, a) {
try { if (Inst20 <= 1000 && typeof (o) != "undefined") {_RecordType("<368,369,40>",(o)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (a) != "undefined") {_RecordType("<371,372,40>",(a)); Inst21++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (o.g) != "undefined") {_RecordType("<386,389,41>",(o.g)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (o) != "undefined") {_RecordType("<386,387,41>",(o)); Inst24++; } } catch(e) {}
  let x = o.g;
try { if (Inst22 <= 1000 && typeof (x) != "undefined") {_RecordType("<382,383,41>",(x)); Inst22++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (o.y) != "undefined") {_RecordType("<401,404,42>",(o.y)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (o) != "undefined") {_RecordType("<401,402,42>",(o)); Inst27++; } } catch(e) {}
  let y = o.y;
try { if (Inst25 <= 1000 && typeof (y) != "undefined") {_RecordType("<397,398,42>",(y)); Inst25++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (identity) != "undefined") {_RecordType("<417,425,43>",(identity)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (o) != "undefined") {_RecordType("<426,427,43>",(o)); Inst30++; } } catch(e) {}
  let oo = identity(o);
try { if (Inst28 <= 1000 && typeof (oo) != "undefined") {_RecordType("<412,414,43>",(oo)); Inst28++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (random) != "undefined") {_RecordType("<440,446,44>",(random)); Inst32++; } } catch(e) {}
  let j = random();
try { if (Inst31 <= 1000 && typeof (j) != "undefined") {_RecordType("<436,437,44>",(j)); Inst31++; } } catch(e) {}

try { if (Inst36 <= 1000 && typeof (e) != "undefined") {_RecordType("<483,484,48>",(e)); Inst36++; } } catch(e) {}
  try {
try { if (Inst34 <= 1000 && typeof (o.f) != "undefined") {_RecordType("<467,470,47>",(o.f)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (o) != "undefined") {_RecordType("<467,468,47>",(o)); Inst35++; } } catch(e) {}
    j = o.f;
try { if (Inst33 <= 1000 && typeof (j) != "undefined") {_RecordType("<463,464,47>",(j)); Inst33++; } } catch(e) {}
  } catch (e) {
try { if (Inst37 <= 1000 && typeof (j) != "undefined") {_RecordType("<492,493,49>",(j)); Inst37++; } } catch(e) {}
    j === "blah";
try { if (Inst38 <= 1000 && typeof (oo) != "undefined") {_RecordType("<510,512,50>",(oo)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (o3) != "undefined") {_RecordType("<517,519,50>",(o3)); Inst39++; } } catch(e) {}
    oo === o3;
try { if (Inst40 <= 1000 && typeof (x) != "undefined") {_RecordType("<532,533,51>",(x)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (y) != "undefined") {_RecordType("<536,537,51>",(y)); Inst41++; } } catch(e) {}
    return x + y + 1;
  }

try { if (Inst42 <= 1000 && typeof (x) != "undefined") {_RecordType("<557,558,54>",(x)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (y) != "undefined") {_RecordType("<561,562,54>",(y)); Inst43++; } } catch(e) {}
  return x + y;
}

try { if (Inst44 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<567,575,57>",(noInline)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (foo) != "undefined") {_RecordType("<576,579,57>",(foo)); Inst45++; } } catch(e) {}
noInline(foo);

for (let i = 0; i < 100000; i++) {
try { if (Inst46 <= 1000 && typeof (i) != "undefined") {_RecordType("<592,593,59>",(i)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (i) != "undefined") {_RecordType("<599,600,59>",(i)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (i) != "undefined") {_RecordType("<611,612,59>",(i)); Inst48++; } } catch(e) {}
try { if (Inst49 <= 1000 && typeof (i) != "undefined") {_RecordType("<624,625,60>",(i)); Inst49++; } } catch(e) {}
  if (i % 3 == 0) {
try { if (Inst50 <= 1000 && typeof (foo) != "undefined") {_RecordType("<642,645,61>",(foo)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (o1) != "undefined") {_RecordType("<646,648,61>",(o1)); Inst51++; } } catch(e) {}
    foo(o1) === 60;
  } else {
try { if (Inst52 <= 1000 && typeof (i) != "undefined") {_RecordType("<677,678,63>",(i)); Inst52++; } } catch(e) {}
    if (i % 3 === 1) {
try { if (Inst53 <= 1000 && typeof (foo) != "undefined") {_RecordType("<698,701,64>",(foo)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (o2) != "undefined") {_RecordType("<702,704,64>",(o2)); Inst54++; } } catch(e) {}
      foo(o2) === "gy";
    } else {
try { if (Inst55 <= 1000 && typeof (foo) != "undefined") {_RecordType("<735,738,66>",(foo)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (o4) != "undefined") {_RecordType("<739,741,66>",(o4)); Inst56++; } } catch(e) {}
      foo(o4);
    }
  }
}

try { if (Inst57 <= 1000 && typeof (foo) != "undefined") {_RecordType("<757,760,71>",(foo)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (o3) != "undefined") {_RecordType("<761,763,71>",(o3)); Inst58++; } } catch(e) {}
foo(o3);

