var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//@ skip if $memoryLimited
try { if (Inst0 <= 1000 && typeof (assert) != "undefined") {_RecordType("<36,42,2>",(assert)); Inst0++; } } catch(e) {}
function assert(b) {
try { if (Inst1 <= 1000 && typeof (b) != "undefined") {_RecordType("<43,44,2>",(b)); Inst1++; } } catch(e) {}
  ;
}

try { if (Inst2 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<55,63,6>",(noInline)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (assert) != "undefined") {_RecordType("<64,70,6>",(assert)); Inst3++; } } catch(e) {}
noInline(assert);
let objs = [];
try { if (Inst4 <= 1000 && typeof (objs) != "undefined") {_RecordType("<77,81,7>",(objs)); Inst4++; } } catch(e) {}
let symbolPool = [];
try { if (Inst5 <= 1000 && typeof (symbolPool) != "undefined") {_RecordType("<92,102,8>",(symbolPool)); Inst5++; } } catch(e) {}
const numSymbols = 800;
try { if (Inst6 <= 1000 && typeof (numSymbols) != "undefined") {_RecordType("<115,125,9>",(numSymbols)); Inst6++; } } catch(e) {}

for (let i = 0; i < numSymbols; ++i) {
try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<143,144,11>",(i)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<150,151,11>",(i)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (numSymbols) != "undefined") {_RecordType("<154,164,11>",(numSymbols)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<168,169,11>",(i)); Inst10++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (symbolPool.push) != "undefined") {_RecordType("<175,190,12>",(symbolPool.push)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (symbolPool) != "undefined") {_RecordType("<175,185,12>",(symbolPool)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<191,197,12>",(Symbol)); Inst13++; } } catch(e) {}
  symbolPool.push(Symbol());
}

for (let i = 0; i < 10000; i++) {
try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<214,215,15>",(i)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<221,222,15>",(i)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<232,233,15>",(i)); Inst16++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (Math.random) != "undefined") {_RecordType("<251,262,16>",(Math.random)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Math) != "undefined") {_RecordType("<251,255,16>",(Math)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (numSymbols) != "undefined") {_RecordType("<267,277,16>",(numSymbols)); Inst20++; } } catch(e) {}
  let num = Math.random() * numSymbols | 0;
try { if (Inst17 <= 1000 && typeof (num) != "undefined") {_RecordType("<245,248,16>",(num)); Inst17++; } } catch(e) {}
  let o = {};
try { if (Inst21 <= 1000 && typeof (o) != "undefined") {_RecordType("<289,290,17>",(o)); Inst21++; } } catch(e) {}

  for (let i = 0; i < num; ++i) {
try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<309,310,19>",(i)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<316,317,19>",(i)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (num) != "undefined") {_RecordType("<320,323,19>",(num)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<327,328,19>",(i)); Inst25++; } } catch(e) {}
    o[symbolPool[i]] = 25;
try { if (Inst26 <= 1000 && typeof (o[symbolPool[i]]) != "undefined") {_RecordType("<336,352,20>",(o[symbolPool[i]])); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (o) != "undefined") {_RecordType("<336,337,20>",(o)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (symbolPool[i]) != "undefined") {_RecordType("<338,351,20>",(symbolPool[i])); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (symbolPool) != "undefined") {_RecordType("<338,348,20>",(symbolPool)); Inst29++; } } catch(e) {}
  }

try { if (Inst30 <= 1000 && typeof (objs.push) != "undefined") {_RecordType("<366,375,23>",(objs.push)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (objs) != "undefined") {_RecordType("<366,370,23>",(objs)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (o) != "undefined") {_RecordType("<376,377,23>",(o)); Inst32++; } } catch(e) {}
  objs.push(o);
}

try { if (Inst33 <= 1000 && typeof (foo) != "undefined") {_RecordType("<392,395,26>",(foo)); Inst33++; } } catch(e) {}
function foo(o) {
try { if (Inst34 <= 1000 && typeof (o) != "undefined") {_RecordType("<396,397,26>",(o)); Inst34++; } } catch(e) {}
try { if (Inst36 <= 1000 && typeof (Object.getOwnPropertySymbols) != "undefined") {_RecordType("<415,443,27>",(Object.getOwnPropertySymbols)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (Object) != "undefined") {_RecordType("<415,421,27>",(Object)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (o) != "undefined") {_RecordType("<444,445,27>",(o)); Inst38++; } } catch(e) {}
  let props = Object.getOwnPropertySymbols(o);
try { if (Inst35 <= 1000 && typeof (props) != "undefined") {_RecordType("<407,412,27>",(props)); Inst35++; } } catch(e) {}

  for (let i = 0; i < props.length; ++i) {
try { if (Inst39 <= 1000 && typeof (i) != "undefined") {_RecordType("<460,461,29>",(i)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (i) != "undefined") {_RecordType("<467,468,29>",(i)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (props.length) != "undefined") {_RecordType("<471,483,29>",(props.length)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (props) != "undefined") {_RecordType("<471,476,29>",(props)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (i) != "undefined") {_RecordType("<487,488,29>",(i)); Inst43++; } } catch(e) {}
try { if (Inst45 <= 1000 && typeof (props[i]) != "undefined") {_RecordType("<504,512,30>",(props[i])); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (props) != "undefined") {_RecordType("<504,509,30>",(props)); Inst46++; } } catch(e) {}
    let s = props[i];
try { if (Inst44 <= 1000 && typeof (s) != "undefined") {_RecordType("<500,501,30>",(s)); Inst44++; } } catch(e) {}
try { if (Inst47 <= 1000 && typeof (o.hasOwnProperty) != "undefined") {_RecordType("<518,534,31>",(o.hasOwnProperty)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (o) != "undefined") {_RecordType("<518,519,31>",(o)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (s) != "undefined") {_RecordType("<535,536,31>",(s)); Inst49++; } } catch(e) {}
    o.hasOwnProperty(s);
  }
}

try { if (Inst50 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<546,554,35>",(noInline)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (foo) != "undefined") {_RecordType("<555,558,35>",(foo)); Inst51++; } } catch(e) {}
noInline(foo);
try { if (Inst53 <= 1000 && typeof (Date.now) != "undefined") {_RecordType("<573,581,36>",(Date.now)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (Date) != "undefined") {_RecordType("<573,577,36>",(Date)); Inst54++; } } catch(e) {}
let start = Date.now();
try { if (Inst52 <= 1000 && typeof (start) != "undefined") {_RecordType("<565,570,36>",(start)); Inst52++; } } catch(e) {}

for (let o of objs) {
try { if (Inst55 <= 1000 && typeof (o) != "undefined") {_RecordType("<595,596,38>",(o)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (objs) != "undefined") {_RecordType("<600,604,38>",(objs)); Inst56++; } } catch(e) {}
try { if (Inst57 <= 1000 && typeof (foo) != "undefined") {_RecordType("<610,613,39>",(foo)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (o) != "undefined") {_RecordType("<614,615,39>",(o)); Inst58++; } } catch(e) {}
  foo(o);
}

