var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
"use strict";

try { if (Inst0 <= 1000 && typeof (ThingA) != "undefined") {_RecordType("<24,30,3>",(ThingA)); Inst0++; } } catch(e) {}
function ThingA() {
  ;
}

ThingA.prototype = {
  bug: 42
};
try { if (Inst1 <= 1000 && typeof (ThingA.prototype) != "undefined") {_RecordType("<42,58,7>",(ThingA.prototype)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (ThingA) != "undefined") {_RecordType("<42,48,7>",(ThingA)); Inst2++; } } catch(e) {}

try { if (Inst3 <= 1000 && typeof (ThingB) != "undefined") {_RecordType("<86,92,11>",(ThingB)); Inst3++; } } catch(e) {}
function ThingB() {
  ;
}

ThingB.prototype = {
  bug: 43
};
try { if (Inst4 <= 1000 && typeof (ThingB.prototype) != "undefined") {_RecordType("<104,120,15>",(ThingB.prototype)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (ThingB) != "undefined") {_RecordType("<104,110,15>",(ThingB)); Inst5++; } } catch(e) {}

try { if (Inst6 <= 1000 && typeof (ThingC) != "undefined") {_RecordType("<148,154,19>",(ThingC)); Inst6++; } } catch(e) {}
function ThingC() {
  ;
}

ThingC.prototype = {
  bug: 44
};
try { if (Inst7 <= 1000 && typeof (ThingC.prototype) != "undefined") {_RecordType("<166,182,23>",(ThingC.prototype)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (ThingC) != "undefined") {_RecordType("<166,172,23>",(ThingC)); Inst8++; } } catch(e) {}

try { if (Inst9 <= 1000 && typeof (bar) != "undefined") {_RecordType("<210,213,27>",(bar)); Inst9++; } } catch(e) {}
function bar(o, p) {
try { if (Inst10 <= 1000 && typeof (o) != "undefined") {_RecordType("<214,215,27>",(o)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (p) != "undefined") {_RecordType("<217,218,27>",(p)); Inst11++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (p) != "undefined") {_RecordType("<228,229,28>",(p)); Inst12++; } } catch(e) {}
  if (p) {
try { if (Inst13 <= 1000 && typeof (o.bug) != "undefined") {_RecordType("<244,249,29>",(o.bug)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (o) != "undefined") {_RecordType("<244,245,29>",(o)); Inst14++; } } catch(e) {}
    return o.bug;
  }

  return null;
}

try { if (Inst15 <= 1000 && typeof (foo) != "undefined") {_RecordType("<283,286,35>",(foo)); Inst15++; } } catch(e) {}
function foo(p) {
try { if (Inst16 <= 1000 && typeof (p) != "undefined") {_RecordType("<287,288,35>",(p)); Inst16++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (ThingC) != "undefined") {_RecordType("<306,312,36>",(ThingC)); Inst18++; } } catch(e) {}
  var o = new ThingC();
try { if (Inst17 <= 1000 && typeof (o) != "undefined") {_RecordType("<298,299,36>",(o)); Inst17++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (bar) != "undefined") {_RecordType("<325,328,37>",(bar)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (o) != "undefined") {_RecordType("<329,330,37>",(o)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (p) != "undefined") {_RecordType("<332,333,37>",(p)); Inst21++; } } catch(e) {}
  return bar(o, p);
}

try { if (Inst22 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<339,347,40>",(noInline)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (foo) != "undefined") {_RecordType("<348,351,40>",(foo)); Inst23++; } } catch(e) {}
noInline(foo);

for (var i = 0; i < 10000; ++i) {
try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<364,365,42>",(i)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<371,372,42>",(i)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (i) != "undefined") {_RecordType("<384,385,42>",(i)); Inst26++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (bar) != "undefined") {_RecordType("<391,394,43>",(bar)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (ThingA) != "undefined") {_RecordType("<399,405,43>",(ThingA)); Inst28++; } } catch(e) {}
  bar(new ThingA(), true);
try { if (Inst29 <= 1000 && typeof (bar) != "undefined") {_RecordType("<418,421,44>",(bar)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (ThingB) != "undefined") {_RecordType("<426,432,44>",(ThingB)); Inst30++; } } catch(e) {}
  bar(new ThingB(), true);
}

for (var i = 0; i < 10000; ++i) {
try { if (Inst31 <= 1000 && typeof (i) != "undefined") {_RecordType("<455,456,47>",(i)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (i) != "undefined") {_RecordType("<462,463,47>",(i)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (i) != "undefined") {_RecordType("<475,476,47>",(i)); Inst33++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof (foo) != "undefined") {_RecordType("<482,485,48>",(foo)); Inst34++; } } catch(e) {}
  foo(false);
}

try { if (Inst36 <= 1000 && typeof (foo) != "undefined") {_RecordType("<510,513,51>",(foo)); Inst36++; } } catch(e) {}
var result = foo(true);
try { if (Inst35 <= 1000 && typeof (result) != "undefined") {_RecordType("<501,507,51>",(result)); Inst35++; } } catch(e) {}

try { if (Inst37 <= 1000 && typeof (result) != "undefined") {_RecordType("<526,532,53>",(result)); Inst37++; } } catch(e) {}
if (result != 44) {
try { if (Inst38 <= 1000 && typeof (Error) != "undefined") {_RecordType("<554,559,54>",(Error)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (result) != "undefined") {_RecordType("<577,583,54>",(result)); Inst39++; } } catch(e) {}
  throw new Error("Bad result: " + result);
}

