var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<9,17,1>",(shouldBe)); Inst0++; } } catch(e) {}
function shouldBe(actual, expected) {
try { if (Inst1 <= 1000 && typeof (actual) != "undefined") {_RecordType("<18,24,1>",(actual)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (expected) != "undefined") {_RecordType("<26,34,1>",(expected)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (actual) != "undefined") {_RecordType("<44,50,2>",(actual)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (expected) != "undefined") {_RecordType("<55,63,2>",(expected)); Inst4++; } } catch(e) {}
  if (actual !== expected) {
try { if (Inst5 <= 1000 && typeof (Error) != "undefined") {_RecordType("<81,86,3>",(Error)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (actual) != "undefined") {_RecordType("<103,109,3>",(actual)); Inst6++; } } catch(e) {}
    throw new Error('bad value: ' + actual);
  }
}

try { if (Inst7 <= 1000 && typeof (equal) != "undefined") {_RecordType("<128,133,7>",(equal)); Inst7++; } } catch(e) {}
function equal(a, b) {
try { if (Inst8 <= 1000 && typeof (a) != "undefined") {_RecordType("<134,135,7>",(a)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (b) != "undefined") {_RecordType("<137,138,7>",(b)); Inst9++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (a) != "undefined") {_RecordType("<151,152,8>",(a)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (b) != "undefined") {_RecordType("<156,157,8>",(b)); Inst11++; } } catch(e) {}
  return a == b;
}

try { if (Inst12 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<162,170,11>",(noInline)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (equal) != "undefined") {_RecordType("<171,176,11>",(equal)); Inst13++; } } catch(e) {}
noInline(equal);

try { if (Inst14 <= 1000 && typeof (strictEqual) != "undefined") {_RecordType("<189,200,13>",(strictEqual)); Inst14++; } } catch(e) {}
function strictEqual(a, b) {
try { if (Inst15 <= 1000 && typeof (a) != "undefined") {_RecordType("<201,202,13>",(a)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (b) != "undefined") {_RecordType("<204,205,13>",(b)); Inst16++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (a) != "undefined") {_RecordType("<218,219,14>",(a)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (b) != "undefined") {_RecordType("<224,225,14>",(b)); Inst18++; } } catch(e) {}
  return a === b;
}

try { if (Inst19 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<230,238,17>",(noInline)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (strictEqual) != "undefined") {_RecordType("<239,250,17>",(strictEqual)); Inst20++; } } catch(e) {}
noInline(strictEqual);
try { if (Inst22 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<262,268,18>",(Symbol)); Inst22++; } } catch(e) {}
var s1 = Symbol();
try { if (Inst21 <= 1000 && typeof (s1) != "undefined") {_RecordType("<257,259,18>",(s1)); Inst21++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<281,287,19>",(Symbol)); Inst24++; } } catch(e) {}
var s2 = Symbol();
try { if (Inst23 <= 1000 && typeof (s2) != "undefined") {_RecordType("<276,278,19>",(s2)); Inst23++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (s1) != "undefined") {_RecordType("<305,307,20>",(s1)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (s1) != "undefined") {_RecordType("<309,311,20>",(s1)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (s2) != "undefined") {_RecordType("<323,325,20>",(s2)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (s1) != "undefined") {_RecordType("<327,329,20>",(s1)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (s1) != "undefined") {_RecordType("<342,344,20>",(s1)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (s2) != "undefined") {_RecordType("<346,348,20>",(s2)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (s2) != "undefined") {_RecordType("<361,363,20>",(s2)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (s2) != "undefined") {_RecordType("<365,367,20>",(s2)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (s2) != "undefined") {_RecordType("<379,381,20>",(s2)); Inst34++; } } catch(e) {}
var list = [[[s1, s1], true], [[s2, s1], false], [[s1, s2], false], [[s2, s2], true], [[s2, 42], false]];
try { if (Inst25 <= 1000 && typeof (list) != "undefined") {_RecordType("<295,299,20>",(list)); Inst25++; } } catch(e) {}
try { if (Inst35 <= 1000 && typeof (list.forEach) != "undefined") {_RecordType("<397,409,21>",(list.forEach)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (list) != "undefined") {_RecordType("<397,401,21>",(list)); Inst36++; } } catch(e) {}
list.forEach(function (set) {
try { if (Inst37 <= 1000 && typeof (set) != "undefined") {_RecordType("<420,423,21>",(set)); Inst37++; } } catch(e) {}
try { if (Inst39 <= 1000 && typeof (set[0]) != "undefined") {_RecordType("<440,446,22>",(set[0])); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (set) != "undefined") {_RecordType("<440,443,22>",(set)); Inst40++; } } catch(e) {}
  var pair = set[0];
try { if (Inst38 <= 1000 && typeof (pair) != "undefined") {_RecordType("<433,437,22>",(pair)); Inst38++; } } catch(e) {}
try { if (Inst42 <= 1000 && typeof (set[1]) != "undefined") {_RecordType("<463,469,23>",(set[1])); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (set) != "undefined") {_RecordType("<463,466,23>",(set)); Inst43++; } } catch(e) {}
  var result = set[1];
try { if (Inst41 <= 1000 && typeof (result) != "undefined") {_RecordType("<454,460,23>",(result)); Inst41++; } } catch(e) {}

  for (var i = 0; i < 10000; ++i) {
try { if (Inst44 <= 1000 && typeof (i) != "undefined") {_RecordType("<483,484,25>",(i)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (i) != "undefined") {_RecordType("<490,491,25>",(i)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (i) != "undefined") {_RecordType("<503,504,25>",(i)); Inst46++; } } catch(e) {}
try { if (Inst47 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<512,520,26>",(shouldBe)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (equal) != "undefined") {_RecordType("<521,526,26>",(equal)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (pair[0]) != "undefined") {_RecordType("<527,534,26>",(pair[0])); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (pair) != "undefined") {_RecordType("<527,531,26>",(pair)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (pair[1]) != "undefined") {_RecordType("<536,543,26>",(pair[1])); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (pair) != "undefined") {_RecordType("<536,540,26>",(pair)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (result) != "undefined") {_RecordType("<546,552,26>",(result)); Inst53++; } } catch(e) {}
    shouldBe(equal(pair[0], pair[1]), result);
try { if (Inst54 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<559,567,27>",(shouldBe)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (strictEqual) != "undefined") {_RecordType("<568,579,27>",(strictEqual)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (pair[0]) != "undefined") {_RecordType("<580,587,27>",(pair[0])); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (pair) != "undefined") {_RecordType("<580,584,27>",(pair)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (pair[1]) != "undefined") {_RecordType("<589,596,27>",(pair[1])); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (pair) != "undefined") {_RecordType("<589,593,27>",(pair)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (result) != "undefined") {_RecordType("<599,605,27>",(result)); Inst60++; } } catch(e) {}
    shouldBe(strictEqual(pair[0], pair[1]), result);
  }
});

