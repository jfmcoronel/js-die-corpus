var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (foo) != "undefined") {_RecordType("<9,12,1>",(foo)); Inst0++; } } catch(e) {}
function foo(a, b) {
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<13,14,1>",(a)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (b) != "undefined") {_RecordType("<16,17,1>",(b)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (a) != "undefined") {_RecordType("<30,31,2>",(a)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (b) != "undefined") {_RecordType("<34,35,2>",(b)); Inst4++; } } catch(e) {}
  return a + b;
}

try { if (Inst5 <= 1000 && typeof (verify) != "undefined") {_RecordType("<49,55,5>",(verify)); Inst5++; } } catch(e) {}
function verify(a, b) {
try { if (Inst6 <= 1000 && typeof (a) != "undefined") {_RecordType("<56,57,5>",(a)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (b) != "undefined") {_RecordType("<59,60,5>",(b)); Inst7++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (a) != "undefined") {_RecordType("<70,71,6>",(a)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (b) != "undefined") {_RecordType("<76,77,6>",(b)); Inst9++; } } catch(e) {}
  if (a !== b) {
    throw "Error: the two arguments objects aren't identical.";
  }

try { if (Inst10 <= 1000 && typeof (a[0]) != "undefined") {_RecordType("<156,160,10>",(a[0])); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (a) != "undefined") {_RecordType("<156,157,10>",(a)); Inst11++; } } catch(e) {}
  if (a[0] !== 42) {
    throw "Error: the first argument isn't 42 (a).";
  }

try { if (Inst12 <= 1000 && typeof (b[0]) != "undefined") {_RecordType("<235,239,14>",(b[0])); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (b) != "undefined") {_RecordType("<235,236,14>",(b)); Inst13++; } } catch(e) {}
  if (b[0] !== 42) {
    throw "Error: the first argument isn't 42 (b).";
  }
}

try { if (Inst14 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<310,318,19>",(noInline)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (verify) != "undefined") {_RecordType("<319,325,19>",(verify)); Inst15++; } } catch(e) {}
noInline(verify);
var global = false;
try { if (Inst16 <= 1000 && typeof (global) != "undefined") {_RecordType("<332,338,20>",(global)); Inst16++; } } catch(e) {}

try { if (Inst17 <= 1000 && typeof (bar) != "undefined") {_RecordType("<358,361,22>",(bar)); Inst17++; } } catch(e) {}
function bar(x) {
try { if (Inst18 <= 1000 && typeof (x) != "undefined") {_RecordType("<362,363,22>",(x)); Inst18++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<377,386,23>",(arguments)); Inst20++; } } catch(e) {}
  var a = arguments;
try { if (Inst19 <= 1000 && typeof (a) != "undefined") {_RecordType("<373,374,23>",(a)); Inst19++; } } catch(e) {}

try { if (Inst21 <= 1000 && typeof (global) != "undefined") {_RecordType("<395,401,25>",(global)); Inst21++; } } catch(e) {}
  if (global) {
    x = 42;
try { if (Inst22 <= 1000 && typeof (x) != "undefined") {_RecordType("<409,410,26>",(x)); Inst22++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (verify) != "undefined") {_RecordType("<421,427,27>",(verify)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<428,437,27>",(arguments)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (a) != "undefined") {_RecordType("<439,440,27>",(a)); Inst25++; } } catch(e) {}
    verify(arguments, a);
  }

try { if (Inst26 <= 1000 && typeof (foo.apply) != "undefined") {_RecordType("<457,466,30>",(foo.apply)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (foo) != "undefined") {_RecordType("<457,460,30>",(foo)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (a) != "undefined") {_RecordType("<473,474,30>",(a)); Inst28++; } } catch(e) {}
  return foo.apply(null, a);
}

try { if (Inst29 <= 1000 && typeof (baz) != "undefined") {_RecordType("<489,492,33>",(baz)); Inst29++; } } catch(e) {}
function baz(a, b) {
try { if (Inst30 <= 1000 && typeof (a) != "undefined") {_RecordType("<493,494,33>",(a)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (b) != "undefined") {_RecordType("<496,497,33>",(b)); Inst31++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (bar) != "undefined") {_RecordType("<510,513,34>",(bar)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (a) != "undefined") {_RecordType("<514,515,34>",(a)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (b) != "undefined") {_RecordType("<517,518,34>",(b)); Inst34++; } } catch(e) {}
  return bar(a, b);
}

try { if (Inst35 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<524,532,37>",(noInline)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (baz) != "undefined") {_RecordType("<533,536,37>",(baz)); Inst36++; } } catch(e) {}
noInline(baz);

for (var i = 0; i < 10000; ++i) {
try { if (Inst37 <= 1000 && typeof (i) != "undefined") {_RecordType("<549,550,39>",(i)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (i) != "undefined") {_RecordType("<556,557,39>",(i)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (i) != "undefined") {_RecordType("<569,570,39>",(i)); Inst39++; } } catch(e) {}
try { if (Inst41 <= 1000 && typeof (baz) != "undefined") {_RecordType("<589,592,40>",(baz)); Inst41++; } } catch(e) {}
  var result = baz(1, 2);
try { if (Inst40 <= 1000 && typeof (result) != "undefined") {_RecordType("<580,586,40>",(result)); Inst40++; } } catch(e) {}

try { if (Inst42 <= 1000 && typeof (result) != "undefined") {_RecordType("<607,613,42>",(result)); Inst42++; } } catch(e) {}
  if (result != 1 + 2) {
try { if (Inst43 <= 1000 && typeof (result) != "undefined") {_RecordType("<660,666,43>",(result)); Inst43++; } } catch(e) {}
    throw "Error: bad result: " + result;
  }
}

global = true;
try { if (Inst44 <= 1000 && typeof (global) != "undefined") {_RecordType("<675,681,47>",(global)); Inst44++; } } catch(e) {}
try { if (Inst46 <= 1000 && typeof (baz) != "undefined") {_RecordType("<703,706,48>",(baz)); Inst46++; } } catch(e) {}
var result = baz(1, 2);
try { if (Inst45 <= 1000 && typeof (result) != "undefined") {_RecordType("<694,700,48>",(result)); Inst45++; } } catch(e) {}

try { if (Inst47 <= 1000 && typeof (result) != "undefined") {_RecordType("<719,725,50>",(result)); Inst47++; } } catch(e) {}
if (result != 42 + 2) {
try { if (Inst48 <= 1000 && typeof (result) != "undefined") {_RecordType("<778,784,51>",(result)); Inst48++; } } catch(e) {}
  throw "Error: bad result at end: " + result;
}

