var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (assert) != "undefined") {_RecordType("<9,15,1>",(assert)); Inst0++; } } catch(e) {}
function assert(b) {
try { if (Inst1 <= 1000 && typeof (b) != "undefined") {_RecordType("<16,17,1>",(b)); Inst1++; } } catch(e) {}
  ;
}

try { if (Inst2 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<28,36,5>",(noInline)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (assert) != "undefined") {_RecordType("<37,43,5>",(assert)); Inst3++; } } catch(e) {}
noInline(assert);
var o = {
  valueOf: function () {
    return {};
  },
  toString: function () {
    return {};
  }
};
try { if (Inst4 <= 1000 && typeof (o) != "undefined") {_RecordType("<50,51,6>",(o)); Inst4++; } } catch(e) {}

try { if (Inst5 <= 1000 && typeof (read) != "undefined") {_RecordType("<159,163,15>",(read)); Inst5++; } } catch(e) {}
function read() {
  return "read";
}

try { if (Inst6 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<188,196,19>",(noInline)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (read) != "undefined") {_RecordType("<197,201,19>",(read)); Inst7++; } } catch(e) {}
noInline(read);

try { if (Inst8 <= 1000 && typeof (foo) != "undefined") {_RecordType("<214,217,21>",(foo)); Inst8++; } } catch(e) {}
function foo(a, b) {
try { if (Inst9 <= 1000 && typeof (a) != "undefined") {_RecordType("<218,219,21>",(a)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (b) != "undefined") {_RecordType("<221,222,21>",(b)); Inst10++; } } catch(e) {}
  var result = null;
try { if (Inst11 <= 1000 && typeof (result) != "undefined") {_RecordType("<232,238,22>",(result)); Inst11++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (read) != "undefined") {_RecordType("<261,265,23>",(read)); Inst13++; } } catch(e) {}
  var value = read();
try { if (Inst12 <= 1000 && typeof (value) != "undefined") {_RecordType("<253,258,23>",(value)); Inst12++; } } catch(e) {}

try { if (Inst17 <= 1000 && typeof (e) != "undefined") {_RecordType("<310,311,27>",(e)); Inst17++; } } catch(e) {}
  try {
try { if (Inst15 <= 1000 && typeof (a) != "undefined") {_RecordType("<291,292,26>",(a)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (b) != "undefined") {_RecordType("<296,297,26>",(b)); Inst16++; } } catch(e) {}
    result = a == b;
try { if (Inst14 <= 1000 && typeof (result) != "undefined") {_RecordType("<282,288,26>",(result)); Inst14++; } } catch(e) {}
  } catch (e) {
try { if (Inst18 <= 1000 && typeof (value) != "undefined") {_RecordType("<324,329,28>",(value)); Inst18++; } } catch(e) {}
    "" + value === "read";
  }

try { if (Inst19 <= 1000 && typeof (value) != "undefined") {_RecordType("<356,361,31>",(value)); Inst19++; } } catch(e) {}
  return value;
}

try { if (Inst20 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<366,374,34>",(noInline)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (foo) != "undefined") {_RecordType("<375,378,34>",(foo)); Inst21++; } } catch(e) {}
noInline(foo);

for (var i = 0; i < 1000; i++) {
try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<391,392,36>",(i)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<398,399,36>",(i)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<408,409,36>",(i)); Inst24++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (foo) != "undefined") {_RecordType("<417,420,37>",(foo)); Inst25++; } } catch(e) {}
  foo(10, 20);
try { if (Inst26 <= 1000 && typeof (foo) != "undefined") {_RecordType("<432,435,38>",(foo)); Inst26++; } } catch(e) {}
  foo({}, {});
try { if (Inst27 <= 1000 && typeof (foo) != "undefined") {_RecordType("<447,450,39>",(foo)); Inst27++; } } catch(e) {}
  foo(10, 10.0);
try { if (Inst28 <= 1000 && typeof (foo) != "undefined") {_RecordType("<464,467,40>",(foo)); Inst28++; } } catch(e) {}
  foo("hello", "hello");
try { if (Inst29 <= 1000 && typeof (foo) != "undefined") {_RecordType("<489,492,41>",(foo)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<499,508,41>",(undefined)); Inst30++; } } catch(e) {}
  foo(null, undefined);
try { if (Inst31 <= 1000 && typeof (foo) != "undefined") {_RecordType("<513,516,42>",(foo)); Inst31++; } } catch(e) {}
  foo(false, 0);
}

try { if (Inst32 <= 1000 && typeof (foo) != "undefined") {_RecordType("<531,534,45>",(foo)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (o) != "undefined") {_RecordType("<535,536,45>",(o)); Inst33++; } } catch(e) {}
foo(o, "hello");

