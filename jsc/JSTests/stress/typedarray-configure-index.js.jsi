var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst1 <= 1000 && typeof (Int8Array) != "undefined") {_RecordType("<15,24,1>",(Int8Array)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Uint8Array) != "undefined") {_RecordType("<26,36,1>",(Uint8Array)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Uint8ClampedArray) != "undefined") {_RecordType("<38,55,1>",(Uint8ClampedArray)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Int16Array) != "undefined") {_RecordType("<57,67,1>",(Int16Array)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Uint16Array) != "undefined") {_RecordType("<69,80,1>",(Uint16Array)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Int32Array) != "undefined") {_RecordType("<82,92,1>",(Int32Array)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Uint32Array) != "undefined") {_RecordType("<94,105,1>",(Uint32Array)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Float32Array) != "undefined") {_RecordType("<107,119,1>",(Float32Array)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Float64Array) != "undefined") {_RecordType("<121,133,1>",(Float64Array)); Inst9++; } } catch(e) {}
typedArrays = [Int8Array, Uint8Array, Uint8ClampedArray, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array];
try { if (Inst0 <= 1000 && typeof (typedArrays) != "undefined") {_RecordType("<0,11,1>",(typedArrays)); Inst0++; } } catch(e) {}

try { if (Inst10 <= 1000 && typeof (assert) != "undefined") {_RecordType("<146,152,3>",(assert)); Inst10++; } } catch(e) {}
function assert(cond) {
try { if (Inst11 <= 1000 && typeof (cond) != "undefined") {_RecordType("<153,157,3>",(cond)); Inst11++; } } catch(e) {}
  ;
}

try { if (Inst12 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<177,189,7>",(assertThrows)); Inst12++; } } catch(e) {}
function assertThrows(thunk, error) {
try { if (Inst13 <= 1000 && typeof (thunk) != "undefined") {_RecordType("<190,195,7>",(thunk)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (error) != "undefined") {_RecordType("<197,202,7>",(error)); Inst14++; } } catch(e) {}
  let failed = true;
try { if (Inst15 <= 1000 && typeof (failed) != "undefined") {_RecordType("<212,218,8>",(failed)); Inst15++; } } catch(e) {}

try { if (Inst17 <= 1000 && typeof (e) != "undefined") {_RecordType("<260,261,12>",(e)); Inst17++; } } catch(e) {}
  try {
try { if (Inst16 <= 1000 && typeof (thunk) != "undefined") {_RecordType("<240,245,11>",(thunk)); Inst16++; } } catch(e) {}
    thunk();
  } catch (e) {
    ;
  }
}

try { if (Inst18 <= 1000 && typeof (makeDescriptor) != "undefined") {_RecordType("<287,301,17>",(makeDescriptor)); Inst18++; } } catch(e) {}
function makeDescriptor(accessor, configurable, writable, enumerable) {
try { if (Inst19 <= 1000 && typeof (accessor) != "undefined") {_RecordType("<302,310,17>",(accessor)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (configurable) != "undefined") {_RecordType("<312,324,17>",(configurable)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (writable) != "undefined") {_RecordType("<326,334,17>",(writable)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (enumerable) != "undefined") {_RecordType("<336,346,17>",(enumerable)); Inst22++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (writable) != "undefined") {_RecordType("<366,374,19>",(writable)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (configurable) != "undefined") {_RecordType("<380,392,20>",(configurable)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (enumerable) != "undefined") {_RecordType("<398,408,21>",(enumerable)); Inst26++; } } catch(e) {}
  let o = {
    writable,
    configurable,
    enumerable
  };
try { if (Inst23 <= 1000 && typeof (o) != "undefined") {_RecordType("<356,357,18>",(o)); Inst23++; } } catch(e) {}

try { if (Inst27 <= 1000 && typeof (accessor) != "undefined") {_RecordType("<421,429,24>",(accessor)); Inst27++; } } catch(e) {}
  if (accessor) {
    o.get = () => 1;
try { if (Inst28 <= 1000 && typeof (o.get) != "undefined") {_RecordType("<437,442,25>",(o.get)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (o) != "undefined") {_RecordType("<437,438,25>",(o)); Inst29++; } } catch(e) {}
  } else {
    o.value = 1;
try { if (Inst30 <= 1000 && typeof (o.value) != "undefined") {_RecordType("<469,476,27>",(o.value)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (o) != "undefined") {_RecordType("<469,470,27>",(o)); Inst31++; } } catch(e) {}
  }

try { if (Inst32 <= 1000 && typeof (o) != "undefined") {_RecordType("<496,497,30>",(o)); Inst32++; } } catch(e) {}
  return o;
}

let bools = [true, false];
try { if (Inst33 <= 1000 && typeof (bools) != "undefined") {_RecordType("<506,511,33>",(bools)); Inst33++; } } catch(e) {}

try { if (Inst34 <= 1000 && typeof (test) != "undefined") {_RecordType("<539,543,35>",(test)); Inst34++; } } catch(e) {}
function test(array, a, c, error) {
try { if (Inst35 <= 1000 && typeof (array) != "undefined") {_RecordType("<544,549,35>",(array)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (a) != "undefined") {_RecordType("<551,552,35>",(a)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (c) != "undefined") {_RecordType("<554,555,35>",(c)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (error) != "undefined") {_RecordType("<557,562,35>",(error)); Inst38++; } } catch(e) {}
  for (w of bools) {
try { if (Inst39 <= 1000 && typeof (w) != "undefined") {_RecordType("<573,574,36>",(w)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (bools) != "undefined") {_RecordType("<578,583,36>",(bools)); Inst40++; } } catch(e) {}
    for (e of bools) {
try { if (Inst41 <= 1000 && typeof (e) != "undefined") {_RecordType("<596,597,37>",(e)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (bools) != "undefined") {_RecordType("<601,606,37>",(bools)); Inst42++; } } catch(e) {}
try { if (Inst43 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<623,644,38>",(Object.defineProperty)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (Object) != "undefined") {_RecordType("<623,629,38>",(Object)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (a) != "undefined") {_RecordType("<645,646,38>",(a)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (makeDescriptor) != "undefined") {_RecordType("<651,665,38>",(makeDescriptor)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (a) != "undefined") {_RecordType("<666,667,38>",(a)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (c) != "undefined") {_RecordType("<669,670,38>",(c)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (w) != "undefined") {_RecordType("<672,673,38>",(w)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (e) != "undefined") {_RecordType("<675,676,38>",(e)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (error) != "undefined") {_RecordType("<679,684,38>",(error)); Inst51++; } } catch(e) {}
      (() => Object.defineProperty(a, 0, makeDescriptor(a, c, w, e), error))();
    }
  }
}

try { if (Inst52 <= 1000 && typeof (foo) != "undefined") {_RecordType("<712,715,43>",(foo)); Inst52++; } } catch(e) {}
function foo() {
  for (constructor of typedArrays) {
try { if (Inst53 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<727,738,44>",(constructor)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (typedArrays) != "undefined") {_RecordType("<742,753,44>",(typedArrays)); Inst54++; } } catch(e) {}
try { if (Inst56 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<773,784,45>",(constructor)); Inst56++; } } catch(e) {}
    let a = new constructor(10);
try { if (Inst55 <= 1000 && typeof (a) != "undefined") {_RecordType("<765,766,45>",(a)); Inst55++; } } catch(e) {}
try { if (Inst57 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<794,815,46>",(Object.defineProperty)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (Object) != "undefined") {_RecordType("<794,800,46>",(Object)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (a) != "undefined") {_RecordType("<816,817,46>",(a)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (makeDescriptor) != "undefined") {_RecordType("<822,836,46>",(makeDescriptor)); Inst60++; } } catch(e) {}
    Object.defineProperty(a, 0, makeDescriptor(false, false, true, true));
try { if (Inst61 <= 1000 && typeof (a[0]) != "undefined") {_RecordType("<869,873,47>",(a[0])); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (a) != "undefined") {_RecordType("<869,870,47>",(a)); Inst62++; } } catch(e) {}
    a[0] === 1;

try { if (Inst63 <= 1000 && typeof (test) != "undefined") {_RecordType("<886,890,49>",(test)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (a) != "undefined") {_RecordType("<891,892,49>",(a)); Inst64++; } } catch(e) {}
    test(a, false, true, "TypeError: Attempting to configure non-configurable property.");

    for (c of bools) {
try { if (Inst65 <= 1000 && typeof (c) != "undefined") {_RecordType("<983,984,51>",(c)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (bools) != "undefined") {_RecordType("<988,993,51>",(bools)); Inst66++; } } catch(e) {}
try { if (Inst67 <= 1000 && typeof (test) != "undefined") {_RecordType("<1003,1007,52>",(test)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (a) != "undefined") {_RecordType("<1008,1009,52>",(a)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (c) != "undefined") {_RecordType("<1017,1018,52>",(c)); Inst69++; } } catch(e) {}
      test(a, true, c, "TypeError: Attempting to store accessor indexed property on a typed array.");
    }
  }
}

for (let i = 0; i < 100; i++) {
try { if (Inst70 <= 1000 && typeof (i) != "undefined") {_RecordType("<1121,1122,57>",(i)); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (i) != "undefined") {_RecordType("<1128,1129,57>",(i)); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (i) != "undefined") {_RecordType("<1137,1138,57>",(i)); Inst72++; } } catch(e) {}
try { if (Inst73 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1146,1149,58>",(foo)); Inst73++; } } catch(e) {}
  foo();
}

