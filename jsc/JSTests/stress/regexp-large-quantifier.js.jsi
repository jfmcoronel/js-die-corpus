var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (testRegExp) != "undefined") {_RecordType("<9,19,1>",(testRegExp)); Inst0++; } } catch(e) {}
function testRegExp(pattern, string, expectedMatch) {
try { if (Inst1 <= 1000 && typeof (pattern) != "undefined") {_RecordType("<20,27,1>",(pattern)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (string) != "undefined") {_RecordType("<29,35,1>",(string)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (expectedMatch) != "undefined") {_RecordType("<37,50,1>",(expectedMatch)); Inst3++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<70,76,2>",(RegExp)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (pattern) != "undefined") {_RecordType("<77,84,2>",(pattern)); Inst6++; } } catch(e) {}
  const r = new RegExp(pattern);
try { if (Inst4 <= 1000 && typeof (r) != "undefined") {_RecordType("<62,63,2>",(r)); Inst4++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (r.exec) != "undefined") {_RecordType("<110,116,3>",(r.exec)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (r) != "undefined") {_RecordType("<110,111,3>",(r)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (string) != "undefined") {_RecordType("<117,123,3>",(string)); Inst10++; } } catch(e) {}
  const actualResult = r.exec(string);
try { if (Inst7 <= 1000 && typeof (actualResult) != "undefined") {_RecordType("<95,107,3>",(actualResult)); Inst7++; } } catch(e) {}

try { if (Inst11 <= 1000 && typeof (expectedMatch) != "undefined") {_RecordType("<133,146,5>",(expectedMatch)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<151,160,5>",(undefined)); Inst12++; } } catch(e) {}
  if (expectedMatch === undefined) {
try { if (Inst13 <= 1000 && typeof (actualResult) != "undefined") {_RecordType("<172,184,6>",(actualResult)); Inst13++; } } catch(e) {}
    if (actualResult !== null) {
try { if (Inst14 <= 1000 && typeof (r) != "undefined") {_RecordType("<223,224,7>",(r)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (string) != "undefined") {_RecordType("<240,246,7>",(string)); Inst15++; } } catch(e) {}
      throw "Expected " + r + ".exec(\"" + string + "\") to be null";
    }
  } else {
try { if (Inst16 <= 1000 && typeof (actualResult) != "undefined") {_RecordType("<292,304,10>",(actualResult)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (actualResult[0]) != "undefined") {_RecordType("<317,332,10>",(actualResult[0])); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (actualResult) != "undefined") {_RecordType("<317,329,10>",(actualResult)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (expectedMatch) != "undefined") {_RecordType("<337,350,10>",(expectedMatch)); Inst19++; } } catch(e) {}
    if (actualResult === null || actualResult[0] !== expectedMatch) {
try { if (Inst20 <= 1000 && typeof (r) != "undefined") {_RecordType("<380,381,11>",(r)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (string) != "undefined") {_RecordType("<397,403,11>",(string)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (expectedMatch) != "undefined") {_RecordType("<424,437,11>",(expectedMatch)); Inst22++; } } catch(e) {}
      throw "Expected " + r + ".exec(\"" + string + "\")[0] to be " + expectedMatch + ".";
    }
  }
}

try { if (Inst23 <= 1000 && typeof (testRegExp) != "undefined") {_RecordType("<458,468,16>",(testRegExp)); Inst23++; } } catch(e) {}
testRegExp("a{0,4294967295}", "a", "a");
try { if (Inst24 <= 1000 && typeof (testRegExp) != "undefined") {_RecordType("<499,509,17>",(testRegExp)); Inst24++; } } catch(e) {}
testRegExp("a{0,4294967296}", "a", "a");
try { if (Inst25 <= 1000 && typeof (testRegExp) != "undefined") {_RecordType("<540,550,18>",(testRegExp)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<591,600,18>",(undefined)); Inst26++; } } catch(e) {}
testRegExp("^a{0,4294967296}$", "a{0,4294967296}", undefined);
try { if (Inst27 <= 1000 && typeof (testRegExp) != "undefined") {_RecordType("<603,613,19>",(testRegExp)); Inst27++; } } catch(e) {}
testRegExp("(?:a{0,340282366920}?){0,1}a", "aa", "aa");

