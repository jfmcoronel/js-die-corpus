var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (assert) != "undefined") {_RecordType("<9,15,1>",(assert)); Inst0++; } } catch(e) {}
function assert(b) {
try { if (Inst1 <= 1000 && typeof (b) != "undefined") {_RecordType("<16,17,1>",(b)); Inst1++; } } catch(e) {}
  ;
}

try { if (Inst2 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<28,36,5>",(noInline)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (assert) != "undefined") {_RecordType("<37,43,5>",(assert)); Inst3++; } } catch(e) {}
noInline(assert);
let i;
try { if (Inst4 <= 1000 && typeof (i) != "undefined") {_RecordType("<50,51,6>",(i)); Inst4++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (f) != "undefined") {_RecordType("<70,71,8>",(f)); Inst6++; } } catch(e) {}
var o1 = {
  get f() {
try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<84,85,9>",(i)); Inst7++; } } catch(e) {}
    if (i === -1000) {
      ;
    }

    return 20;
  },

  x: "x"
};
try { if (Inst5 <= 1000 && typeof (o1) != "undefined") {_RecordType("<57,59,7>",(o1)); Inst5++; } } catch(e) {}
var o2 = {
  f: 40
};
try { if (Inst8 <= 1000 && typeof (o2) != "undefined") {_RecordType("<151,153,18>",(o2)); Inst8++; } } catch(e) {}
var o3 = {
  x: 100,
  f: "f"
};
try { if (Inst9 <= 1000 && typeof (o3) != "undefined") {_RecordType("<173,175,21>",(o3)); Inst9++; } } catch(e) {}

try { if (Inst10 <= 1000 && typeof (bar) != "undefined") {_RecordType("<212,215,26>",(bar)); Inst10++; } } catch(e) {}
function bar(i) {
try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<216,217,26>",(i)); Inst11++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<227,228,27>",(i)); Inst12++; } } catch(e) {}
  if (i === -1000) {
try { if (Inst13 <= 1000 && typeof (o1) != "undefined") {_RecordType("<253,255,28>",(o1)); Inst13++; } } catch(e) {}
    return o1;
  }

try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<268,269,31>",(i)); Inst14++; } } catch(e) {}
  if (i % 2) {
try { if (Inst15 <= 1000 && typeof (o3) != "undefined") {_RecordType("<288,290,32>",(o3)); Inst15++; } } catch(e) {}
    return o3;
  } else {
try { if (Inst16 <= 1000 && typeof (o2) != "undefined") {_RecordType("<314,316,34>",(o2)); Inst16++; } } catch(e) {}
    return o2;
  }
}

try { if (Inst17 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<325,333,38>",(noInline)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (bar) != "undefined") {_RecordType("<334,337,38>",(bar)); Inst18++; } } catch(e) {}
noInline(bar);

try { if (Inst19 <= 1000 && typeof (foo) != "undefined") {_RecordType("<350,353,40>",(foo)); Inst19++; } } catch(e) {}
function foo(i) {
try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<354,355,40>",(i)); Inst20++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (bar) != "undefined") {_RecordType("<369,372,41>",(bar)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<373,374,41>",(i)); Inst23++; } } catch(e) {}
  var o = bar(i);
try { if (Inst21 <= 1000 && typeof (o) != "undefined") {_RecordType("<365,366,41>",(o)); Inst21++; } } catch(e) {}
  let v;
try { if (Inst24 <= 1000 && typeof (v) != "undefined") {_RecordType("<383,384,42>",(v)); Inst24++; } } catch(e) {}
  let v2;
try { if (Inst25 <= 1000 && typeof (v2) != "undefined") {_RecordType("<392,394,43>",(v2)); Inst25++; } } catch(e) {}
  let v3;
try { if (Inst26 <= 1000 && typeof (v3) != "undefined") {_RecordType("<402,404,44>",(v3)); Inst26++; } } catch(e) {}

try { if (Inst33 <= 1000 && typeof (e) != "undefined") {_RecordType("<453,454,49>",(e)); Inst33++; } } catch(e) {}
  try {
try { if (Inst28 <= 1000 && typeof (o.x) != "undefined") {_RecordType("<424,427,47>",(o.x)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (o) != "undefined") {_RecordType("<424,425,47>",(o)); Inst29++; } } catch(e) {}
    v2 = o.x;
try { if (Inst27 <= 1000 && typeof (v2) != "undefined") {_RecordType("<419,421,47>",(v2)); Inst27++; } } catch(e) {}
try { if (Inst31 <= 1000 && typeof (o.f) != "undefined") {_RecordType("<437,440,48>",(o.f)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (o) != "undefined") {_RecordType("<437,438,48>",(o)); Inst32++; } } catch(e) {}
    v = o.f;
try { if (Inst30 <= 1000 && typeof (v) != "undefined") {_RecordType("<433,434,48>",(v)); Inst30++; } } catch(e) {}
  } catch (e) {
    ;
  }
}

try { if (Inst34 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<471,479,54>",(noInline)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (foo) != "undefined") {_RecordType("<480,483,54>",(foo)); Inst35++; } } catch(e) {}
noInline(foo);
try { if (Inst36 <= 1000 && typeof (foo) != "undefined") {_RecordType("<486,489,55>",(foo)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (i) != "undefined") {_RecordType("<490,491,55>",(i)); Inst37++; } } catch(e) {}
foo(i);

for (i = 0; i < 1000; i++) {
try { if (Inst38 <= 1000 && typeof (i) != "undefined") {_RecordType("<500,501,57>",(i)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (i) != "undefined") {_RecordType("<507,508,57>",(i)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (i) != "undefined") {_RecordType("<517,518,57>",(i)); Inst40++; } } catch(e) {}
try { if (Inst41 <= 1000 && typeof (foo) != "undefined") {_RecordType("<526,529,58>",(foo)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (i) != "undefined") {_RecordType("<530,531,58>",(i)); Inst42++; } } catch(e) {}
  foo(i);
}

i = -1000;
try { if (Inst43 <= 1000 && typeof (i) != "undefined") {_RecordType("<537,538,61>",(i)); Inst43++; } } catch(e) {}

for (let j = 0; j < 1000; j++) {
try { if (Inst44 <= 1000 && typeof (j) != "undefined") {_RecordType("<558,559,63>",(j)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (j) != "undefined") {_RecordType("<565,566,63>",(j)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (j) != "undefined") {_RecordType("<575,576,63>",(j)); Inst46++; } } catch(e) {}
try { if (Inst47 <= 1000 && typeof (foo) != "undefined") {_RecordType("<584,587,64>",(foo)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (i) != "undefined") {_RecordType("<588,589,64>",(i)); Inst48++; } } catch(e) {}
  foo(i);
}

