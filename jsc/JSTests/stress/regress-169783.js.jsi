var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//@ skip
try { if (Inst0 <= 1000 && typeof (test) != "undefined") {_RecordType("<18,22,2>",(test)); Inst0++; } } catch(e) {}
function test(a) {
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<23,24,2>",(a)); Inst1++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (a) != "undefined") {_RecordType("<48,49,3>",(a)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (a) != "undefined") {_RecordType("<54,55,3>",(a)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (a) != "undefined") {_RecordType("<60,61,3>",(a)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (a) != "undefined") {_RecordType("<66,67,3>",(a)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (a) != "undefined") {_RecordType("<72,73,3>",(a)); Inst7++; } } catch(e) {}
  var x = [1337, ...a, ...a, ...a, ...a, ...a];
try { if (Inst2 <= 1000 && typeof (x) != "undefined") {_RecordType("<34,35,3>",(x)); Inst2++; } } catch(e) {}
}

try { if (Inst8 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<79,87,6>",(noInline)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (test) != "undefined") {_RecordType("<88,92,6>",(test)); Inst9++; } } catch(e) {}
noInline(test);

try { if (Inst10 <= 1000 && typeof (doTest) != "undefined") {_RecordType("<105,111,8>",(doTest)); Inst10++; } } catch(e) {}
function doTest(a, shouldThrow) {
try { if (Inst11 <= 1000 && typeof (a) != "undefined") {_RecordType("<112,113,8>",(a)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (shouldThrow) != "undefined") {_RecordType("<115,126,8>",(shouldThrow)); Inst12++; } } catch(e) {}
  var exception;
try { if (Inst13 <= 1000 && typeof (exception) != "undefined") {_RecordType("<136,145,9>",(exception)); Inst13++; } } catch(e) {}

try { if (Inst16 <= 1000 && typeof (e) != "undefined") {_RecordType("<180,181,13>",(e)); Inst16++; } } catch(e) {}
  try {
try { if (Inst14 <= 1000 && typeof (test) != "undefined") {_RecordType("<160,164,12>",(test)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (a) != "undefined") {_RecordType("<165,166,12>",(a)); Inst15++; } } catch(e) {}
    test(a);
  } catch (e) {
    ;
  }
}

try { if (Inst18 <= 1000 && typeof (Array) != "undefined") {_RecordType("<210,215,18>",(Array)); Inst18++; } } catch(e) {}
var a = new Array(0x40000);
try { if (Inst17 <= 1000 && typeof (a) != "undefined") {_RecordType("<202,203,18>",(a)); Inst17++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (doTest) != "undefined") {_RecordType("<226,232,19>",(doTest)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (a) != "undefined") {_RecordType("<233,234,19>",(a)); Inst20++; } } catch(e) {}
doTest(a, true);

