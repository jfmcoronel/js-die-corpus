var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<9,17,1>",(shouldBe)); Inst0++; } } catch(e) {}
function shouldBe(actual, expected) {
try { if (Inst1 <= 1000 && typeof (actual) != "undefined") {_RecordType("<18,24,1>",(actual)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (expected) != "undefined") {_RecordType("<26,34,1>",(expected)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (actual) != "undefined") {_RecordType("<44,50,2>",(actual)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (expected) != "undefined") {_RecordType("<55,63,2>",(expected)); Inst4++; } } catch(e) {}
  if (actual !== expected) {
try { if (Inst5 <= 1000 && typeof (Error) != "undefined") {_RecordType("<81,86,3>",(Error)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (actual) != "undefined") {_RecordType("<103,109,3>",(actual)); Inst6++; } } catch(e) {}
    throw new Error('bad value: ' + actual);
  }
}

try { if (Inst7 <= 1000 && typeof (test) != "undefined") {_RecordType("<128,132,7>",(test)); Inst7++; } } catch(e) {}
function test() {
try { if (Inst9 <= 1000 && typeof (Map) != "undefined") {_RecordType("<153,156,8>",(Map)); Inst9++; } } catch(e) {}
  var map = new Map();
try { if (Inst8 <= 1000 && typeof (map) != "undefined") {_RecordType("<143,146,8>",(map)); Inst8++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (map.set) != "undefined") {_RecordType("<162,169,9>",(map.set)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (map) != "undefined") {_RecordType("<162,165,9>",(map)); Inst11++; } } catch(e) {}
  map.set(42, 20);
try { if (Inst13 <= 1000 && typeof (map.get) != "undefined") {_RecordType("<192,199,10>",(map.get)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (map) != "undefined") {_RecordType("<192,195,10>",(map)); Inst14++; } } catch(e) {}
  var res1 = map.get(42);
try { if (Inst12 <= 1000 && typeof (res1) != "undefined") {_RecordType("<185,189,10>",(res1)); Inst12++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (map.set) != "undefined") {_RecordType("<207,214,11>",(map.set)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (map) != "undefined") {_RecordType("<207,210,11>",(map)); Inst16++; } } catch(e) {}
  map.set(42, 400);
try { if (Inst18 <= 1000 && typeof (map.get) != "undefined") {_RecordType("<238,245,12>",(map.get)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (map) != "undefined") {_RecordType("<238,241,12>",(map)); Inst19++; } } catch(e) {}
  var res2 = map.get(42);
try { if (Inst17 <= 1000 && typeof (res2) != "undefined") {_RecordType("<231,235,12>",(res2)); Inst17++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (res1) != "undefined") {_RecordType("<261,265,13>",(res1)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (res2) != "undefined") {_RecordType("<267,271,13>",(res2)); Inst21++; } } catch(e) {}
  return [res1, res2];
}

try { if (Inst22 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<277,285,16>",(noInline)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (test) != "undefined") {_RecordType("<286,290,16>",(test)); Inst23++; } } catch(e) {}
noInline(test);

for (var i = 0; i < 1e6; ++i) {
try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<303,304,18>",(i)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<310,311,18>",(i)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (i) != "undefined") {_RecordType("<321,322,18>",(i)); Inst26++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (test) != "undefined") {_RecordType("<347,351,19>",(test)); Inst29++; } } catch(e) {}
  var [res1, res2] = test();
try { if (Inst27 <= 1000 && typeof (res1) != "undefined") {_RecordType("<333,337,19>",(res1)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (res2) != "undefined") {_RecordType("<339,343,19>",(res2)); Inst28++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<357,365,20>",(shouldBe)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (res1) != "undefined") {_RecordType("<366,370,20>",(res1)); Inst31++; } } catch(e) {}
  shouldBe(res1, 20);
try { if (Inst32 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<379,387,21>",(shouldBe)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (res2) != "undefined") {_RecordType("<388,392,21>",(res2)); Inst33++; } } catch(e) {}
  shouldBe(res2, 400);
}

