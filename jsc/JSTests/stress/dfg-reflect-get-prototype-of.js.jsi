var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<9,17,1>",(shouldBe)); Inst0++; } } catch(e) {}
function shouldBe(actual, expected) {
try { if (Inst1 <= 1000 && typeof (actual) != "undefined") {_RecordType("<18,24,1>",(actual)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (expected) != "undefined") {_RecordType("<26,34,1>",(expected)); Inst2++; } } catch(e) {}
  ;
}

try { if (Inst3 <= 1000 && typeof (shouldThrow) != "undefined") {_RecordType("<54,65,5>",(shouldThrow)); Inst3++; } } catch(e) {}
function shouldThrow(func, errorMessage) {
try { if (Inst4 <= 1000 && typeof (func) != "undefined") {_RecordType("<66,70,5>",(func)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (errorMessage) != "undefined") {_RecordType("<72,84,5>",(errorMessage)); Inst5++; } } catch(e) {}
  var errorThrown = false;
try { if (Inst6 <= 1000 && typeof (errorThrown) != "undefined") {_RecordType("<94,105,6>",(errorThrown)); Inst6++; } } catch(e) {}
  var error = null;
try { if (Inst7 <= 1000 && typeof (error) != "undefined") {_RecordType("<121,126,7>",(error)); Inst7++; } } catch(e) {}

try { if (Inst9 <= 1000 && typeof (e) != "undefined") {_RecordType("<167,168,11>",(e)); Inst9++; } } catch(e) {}
  try {
try { if (Inst8 <= 1000 && typeof (func) != "undefined") {_RecordType("<148,152,10>",(func)); Inst8++; } } catch(e) {}
    func();
  } catch (e) {
    errorThrown = true;
try { if (Inst10 <= 1000 && typeof (errorThrown) != "undefined") {_RecordType("<176,187,12>",(errorThrown)); Inst10++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (e) != "undefined") {_RecordType("<208,209,13>",(e)); Inst12++; } } catch(e) {}
    error = e;
try { if (Inst11 <= 1000 && typeof (error) != "undefined") {_RecordType("<200,205,13>",(error)); Inst11++; } } catch(e) {}
  }
}

(function () {
try { if (Inst13 <= 1000 && typeof (target) != "undefined") {_RecordType("<244,250,18>",(target)); Inst13++; } } catch(e) {}
  function target(object) {
try { if (Inst14 <= 1000 && typeof (object) != "undefined") {_RecordType("<251,257,18>",(object)); Inst14++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (Reflect.getPrototypeOf) != "undefined") {_RecordType("<272,294,19>",(Reflect.getPrototypeOf)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<272,279,19>",(Reflect)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (object) != "undefined") {_RecordType("<295,301,19>",(object)); Inst17++; } } catch(e) {}
    return Reflect.getPrototypeOf(object);
  }

try { if (Inst18 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<311,319,22>",(noInline)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (target) != "undefined") {_RecordType("<320,326,22>",(target)); Inst19++; } } catch(e) {}
  noInline(target);

  for (var i = 0; i < 1e3; ++i) {
try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<341,342,24>",(i)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<348,349,24>",(i)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<359,360,24>",(i)); Inst22++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<368,376,25>",(shouldBe)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (target) != "undefined") {_RecordType("<377,383,25>",(target)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<389,405,25>",(Object.prototype)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Object) != "undefined") {_RecordType("<389,395,25>",(Object)); Inst26++; } } catch(e) {}
    shouldBe(target({}), Object.prototype);
  }
})();

(function () {
try { if (Inst27 <= 1000 && typeof (target) != "undefined") {_RecordType("<445,451,30>",(target)); Inst27++; } } catch(e) {}
  function target(object) {
try { if (Inst28 <= 1000 && typeof (object) != "undefined") {_RecordType("<452,458,30>",(object)); Inst28++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (Reflect.getPrototypeOf) != "undefined") {_RecordType("<473,495,31>",(Reflect.getPrototypeOf)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<473,480,31>",(Reflect)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (object) != "undefined") {_RecordType("<496,502,31>",(object)); Inst31++; } } catch(e) {}
    return Reflect.getPrototypeOf(object);
  }

try { if (Inst32 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<512,520,34>",(noInline)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (target) != "undefined") {_RecordType("<521,527,34>",(target)); Inst33++; } } catch(e) {}
  noInline(target);

  for (var i = 0; i < 1e3; ++i) {
try { if (Inst34 <= 1000 && typeof (i) != "undefined") {_RecordType("<542,543,36>",(i)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (i) != "undefined") {_RecordType("<549,550,36>",(i)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (i) != "undefined") {_RecordType("<560,561,36>",(i)); Inst36++; } } catch(e) {}
try { if (Inst37 <= 1000 && typeof (shouldThrow) != "undefined") {_RecordType("<569,580,37>",(shouldThrow)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (target) != "undefined") {_RecordType("<587,593,37>",(target)); Inst38++; } } catch(e) {}
    shouldThrow(() => target(null), `TypeError: Reflect.getPrototypeOf requires the first argument be an object`);
try { if (Inst39 <= 1000 && typeof (shouldThrow) != "undefined") {_RecordType("<684,695,38>",(shouldThrow)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (target) != "undefined") {_RecordType("<702,708,38>",(target)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<709,718,38>",(undefined)); Inst41++; } } catch(e) {}
    shouldThrow(() => target(undefined), `TypeError: Reflect.getPrototypeOf requires the first argument be an object`);
  }
})();

(function () {
try { if (Inst42 <= 1000 && typeof (target) != "undefined") {_RecordType("<837,843,43>",(target)); Inst42++; } } catch(e) {}
  function target(object) {
try { if (Inst43 <= 1000 && typeof (object) != "undefined") {_RecordType("<844,850,43>",(object)); Inst43++; } } catch(e) {}
try { if (Inst44 <= 1000 && typeof (Reflect.getPrototypeOf) != "undefined") {_RecordType("<865,887,44>",(Reflect.getPrototypeOf)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<865,872,44>",(Reflect)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (object) != "undefined") {_RecordType("<888,894,44>",(object)); Inst46++; } } catch(e) {}
    return Reflect.getPrototypeOf(object);
  }

try { if (Inst47 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<904,912,47>",(noInline)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (target) != "undefined") {_RecordType("<913,919,47>",(target)); Inst48++; } } catch(e) {}
  noInline(target);

  for (var i = 0; i < 1e3; ++i) {
try { if (Inst49 <= 1000 && typeof (i) != "undefined") {_RecordType("<934,935,49>",(i)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (i) != "undefined") {_RecordType("<941,942,49>",(i)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (i) != "undefined") {_RecordType("<952,953,49>",(i)); Inst51++; } } catch(e) {}
try { if (Inst52 <= 1000 && typeof (shouldThrow) != "undefined") {_RecordType("<961,972,50>",(shouldThrow)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (target) != "undefined") {_RecordType("<979,985,50>",(target)); Inst53++; } } catch(e) {}
    shouldThrow(() => target("Cocoa"), `TypeError: Reflect.getPrototypeOf requires the first argument be an object`);
try { if (Inst54 <= 1000 && typeof (shouldThrow) != "undefined") {_RecordType("<1079,1090,51>",(shouldThrow)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (target) != "undefined") {_RecordType("<1097,1103,51>",(target)); Inst55++; } } catch(e) {}
    shouldThrow(() => target(42), `TypeError: Reflect.getPrototypeOf requires the first argument be an object`);
try { if (Inst56 <= 1000 && typeof (shouldThrow) != "undefined") {_RecordType("<1192,1203,52>",(shouldThrow)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (target) != "undefined") {_RecordType("<1210,1216,52>",(target)); Inst57++; } } catch(e) {}
    shouldThrow(() => target(true), `TypeError: Reflect.getPrototypeOf requires the first argument be an object`);
  }
})();

