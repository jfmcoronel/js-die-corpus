var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
let warm = 1000;
try { if (Inst0 <= 1000 && typeof (warm) != "undefined") {_RecordType("<4,8,1>",(warm)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (foo) != "undefined") {_RecordType("<27,30,3>",(foo)); Inst1++; } } catch(e) {}
function foo(f) {
try { if (Inst2 <= 1000 && typeof (f) != "undefined") {_RecordType("<31,32,3>",(f)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (f.arguments) != "undefined") {_RecordType("<45,56,4>",(f.arguments)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (f) != "undefined") {_RecordType("<45,46,4>",(f)); Inst4++; } } catch(e) {}
  return f.arguments;
}

try { if (Inst5 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<61,69,7>",(noInline)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (foo) != "undefined") {_RecordType("<70,73,7>",(foo)); Inst6++; } } catch(e) {}
noInline(foo);
let caught = 0;
try { if (Inst7 <= 1000 && typeof (caught) != "undefined") {_RecordType("<80,86,8>",(caught)); Inst7++; } } catch(e) {}

try { if (Inst8 <= 1000 && typeof (bar) != "undefined") {_RecordType("<102,105,10>",(bar)); Inst8++; } } catch(e) {}
function bar() {
  for (let i = 0; i < warm; ++i) {
try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<121,122,11>",(i)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<128,129,11>",(i)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (warm) != "undefined") {_RecordType("<132,136,11>",(warm)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<140,141,11>",(i)); Inst12++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (foo) != "undefined") {_RecordType("<149,152,12>",(foo)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (bar) != "undefined") {_RecordType("<153,156,12>",(bar)); Inst14++; } } catch(e) {}
    foo(bar);
  }

try { if (Inst16 <= 1000 && typeof (baz1) != "undefined") {_RecordType("<185,189,15>",(baz1)); Inst16++; } } catch(e) {}
  const x = function baz1() {
    "use strict";

    return 42;
  };
try { if (Inst15 <= 1000 && typeof (x) != "undefined") {_RecordType("<172,173,15>",(x)); Inst15++; } } catch(e) {}

try { if (Inst18 <= 1000 && typeof (baz2) != "undefined") {_RecordType("<255,259,21>",(baz2)); Inst18++; } } catch(e) {}
  const y = function baz2() {
    "use strict";

    return 0xc0defefe;
  };
try { if (Inst17 <= 1000 && typeof (y) != "undefined") {_RecordType("<242,243,21>",(y)); Inst17++; } } catch(e) {}

try { if (Inst19 <= 1000 && typeof (x) != "undefined") {_RecordType("<322,323,27>",(x)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (y) != "undefined") {_RecordType("<325,326,27>",(y)); Inst20++; } } catch(e) {}
  return [x, y];
}

try { if (Inst21 <= 1000 && typeof (bar) != "undefined") {_RecordType("<332,335,30>",(bar)); Inst21++; } } catch(e) {}
bar();
try { if (Inst22 <= 1000 && typeof (bar) != "undefined") {_RecordType("<339,342,31>",(bar)); Inst22++; } } catch(e) {}
bar();
try { if (Inst25 <= 1000 && typeof (bar) != "undefined") {_RecordType("<367,370,32>",(bar)); Inst25++; } } catch(e) {}
const [baz1, baz2] = bar();
try { if (Inst23 <= 1000 && typeof (baz1) != "undefined") {_RecordType("<353,357,32>",(baz1)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (baz2) != "undefined") {_RecordType("<359,363,32>",(baz2)); Inst24++; } } catch(e) {}

try { if (Inst26 <= 1000 && typeof (baz1) != "undefined") {_RecordType("<379,383,34>",(baz1)); Inst26++; } } catch(e) {}
if (baz1() !== 42) {
try { if (Inst27 <= 1000 && typeof (Error) != "undefined") {_RecordType("<408,413,35>",(Error)); Inst27++; } } catch(e) {}
  throw new Error(`bad!`);
}

try { if (Inst28 <= 1000 && typeof (baz2) != "undefined") {_RecordType("<430,434,38>",(baz2)); Inst28++; } } catch(e) {}
if (baz2() !== 0xc0defefe) {
try { if (Inst29 <= 1000 && typeof (Error) != "undefined") {_RecordType("<467,472,39>",(Error)); Inst29++; } } catch(e) {}
  throw new Error(`bad!`);
}

try { if (Inst32 <= 1000 && typeof (e) != "undefined") {_RecordType("<513,514,44>",(e)); Inst32++; } } catch(e) {}
try {
try { if (Inst30 <= 1000 && typeof (foo) != "undefined") {_RecordType("<493,496,43>",(foo)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (baz1) != "undefined") {_RecordType("<497,501,43>",(baz1)); Inst31++; } } catch(e) {}
  foo(baz1);
} catch (e) {
try { if (Inst33 <= 1000 && typeof (caught) != "undefined") {_RecordType("<522,528,45>",(caught)); Inst33++; } } catch(e) {}
  ++caught;
}

try { if (Inst36 <= 1000 && typeof (e) != "undefined") {_RecordType("<561,562,50>",(e)); Inst36++; } } catch(e) {}
try {
try { if (Inst34 <= 1000 && typeof (foo) != "undefined") {_RecordType("<541,544,49>",(foo)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (baz2) != "undefined") {_RecordType("<545,549,49>",(baz2)); Inst35++; } } catch(e) {}
  foo(baz2);
} catch (e) {
try { if (Inst37 <= 1000 && typeof (caught) != "undefined") {_RecordType("<570,576,51>",(caught)); Inst37++; } } catch(e) {}
  ++caught;
}

try { if (Inst38 <= 1000 && typeof (caught) != "undefined") {_RecordType("<585,591,54>",(caught)); Inst38++; } } catch(e) {}
if (caught !== 2) {
try { if (Inst39 <= 1000 && typeof (Error) != "undefined") {_RecordType("<613,618,55>",(Error)); Inst39++; } } catch(e) {}
  throw new Error(`bad!`);
}

