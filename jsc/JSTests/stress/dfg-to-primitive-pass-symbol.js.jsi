var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
var shouldThrow = false; // str concat generates op_to_primitive.
try { if (Inst0 <= 1000 && typeof (shouldThrow) != "undefined") {_RecordType("<4,15,1>",(shouldThrow)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (toPrimitiveTarget) != "undefined") {_RecordType("<76,93,3>",(toPrimitiveTarget)); Inst1++; } } catch(e) {}
function toPrimitiveTarget() {
try { if (Inst2 <= 1000 && typeof (shouldThrow) != "undefined") {_RecordType("<104,115,4>",(shouldThrow)); Inst2++; } } catch(e) {}
  if (shouldThrow) {
try { if (Inst3 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<130,136,5>",(Symbol)); Inst3++; } } catch(e) {}
    return Symbol('Cocoa');
  }

  return 'Cocoa';
}

try { if (Inst4 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<173,181,11>",(noInline)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (toPrimitiveTarget) != "undefined") {_RecordType("<182,199,11>",(toPrimitiveTarget)); Inst5++; } } catch(e) {}
noInline(toPrimitiveTarget);

try { if (Inst6 <= 1000 && typeof (doToPrimitive) != "undefined") {_RecordType("<212,225,13>",(doToPrimitive)); Inst6++; } } catch(e) {}
function doToPrimitive() {
try { if (Inst8 <= 1000 && typeof (toPrimitiveTarget) != "undefined") {_RecordType("<244,261,14>",(toPrimitiveTarget)); Inst8++; } } catch(e) {}
  var value = toPrimitiveTarget();
try { if (Inst7 <= 1000 && typeof (value) != "undefined") {_RecordType("<236,241,14>",(value)); Inst7++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (value) != "undefined") {_RecordType("<274,279,15>",(value)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (value) != "undefined") {_RecordType("<297,302,15>",(value)); Inst10++; } } catch(e) {}
  return value + "Cappuccino" + value;
}

try { if (Inst11 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<307,315,18>",(noInline)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (doToPrimitive) != "undefined") {_RecordType("<316,329,18>",(doToPrimitive)); Inst12++; } } catch(e) {}
noInline(doToPrimitive);

for (var i = 0; i < 10000; ++i) {
try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<342,343,20>",(i)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<349,350,20>",(i)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<362,363,20>",(i)); Inst15++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (doToPrimitive) != "undefined") {_RecordType("<382,395,21>",(doToPrimitive)); Inst17++; } } catch(e) {}
  var result = doToPrimitive();
try { if (Inst16 <= 1000 && typeof (result) != "undefined") {_RecordType("<373,379,21>",(result)); Inst16++; } } catch(e) {}

try { if (Inst18 <= 1000 && typeof (result) != "undefined") {_RecordType("<406,412,23>",(result)); Inst18++; } } catch(e) {}
  if (result !== "CocoaCappuccinoCocoa") {
try { if (Inst19 <= 1000 && typeof (result) != "undefined") {_RecordType("<477,483,24>",(result)); Inst19++; } } catch(e) {}
    throw "Error: bad result: " + result;
  }
}

shouldThrow = true;
try { if (Inst20 <= 1000 && typeof (shouldThrow) != "undefined") {_RecordType("<492,503,28>",(shouldThrow)); Inst20++; } } catch(e) {}
var didThrow;
try { if (Inst21 <= 1000 && typeof (didThrow) != "undefined") {_RecordType("<516,524,29>",(didThrow)); Inst21++; } } catch(e) {}

try { if (Inst24 <= 1000 && typeof (e) != "undefined") {_RecordType("<583,584,34>",(e)); Inst24++; } } catch(e) {}
try {
  shouldThrow = true;
try { if (Inst22 <= 1000 && typeof (shouldThrow) != "undefined") {_RecordType("<535,546,32>",(shouldThrow)); Inst22++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (doToPrimitive) != "undefined") {_RecordType("<557,570,33>",(doToPrimitive)); Inst23++; } } catch(e) {}
  doToPrimitive();
} catch (e) {
try { if (Inst26 <= 1000 && typeof (e) != "undefined") {_RecordType("<601,602,35>",(e)); Inst26++; } } catch(e) {}
  didThrow = e;
try { if (Inst25 <= 1000 && typeof (didThrow) != "undefined") {_RecordType("<590,598,35>",(didThrow)); Inst25++; } } catch(e) {}
}

