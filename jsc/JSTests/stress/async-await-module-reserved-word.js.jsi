var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (shouldThrow) != "undefined") {_RecordType("<9,20,1>",(shouldThrow)); Inst0++; } } catch(e) {}
function shouldThrow(func, errorMessage) {
try { if (Inst1 <= 1000 && typeof (func) != "undefined") {_RecordType("<21,25,1>",(func)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (errorMessage) != "undefined") {_RecordType("<27,39,1>",(errorMessage)); Inst2++; } } catch(e) {}
  var errorThrown = false;
try { if (Inst3 <= 1000 && typeof (errorThrown) != "undefined") {_RecordType("<49,60,2>",(errorThrown)); Inst3++; } } catch(e) {}
  var error = null;
try { if (Inst4 <= 1000 && typeof (error) != "undefined") {_RecordType("<76,81,3>",(error)); Inst4++; } } catch(e) {}

try { if (Inst6 <= 1000 && typeof (e) != "undefined") {_RecordType("<122,123,7>",(e)); Inst6++; } } catch(e) {}
  try {
try { if (Inst5 <= 1000 && typeof (func) != "undefined") {_RecordType("<103,107,6>",(func)); Inst5++; } } catch(e) {}
    func();
  } catch (e) {
    errorThrown = true;
try { if (Inst7 <= 1000 && typeof (errorThrown) != "undefined") {_RecordType("<131,142,8>",(errorThrown)); Inst7++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (e) != "undefined") {_RecordType("<163,164,9>",(e)); Inst9++; } } catch(e) {}
    error = e;
try { if (Inst8 <= 1000 && typeof (error) != "undefined") {_RecordType("<155,160,9>",(error)); Inst8++; } } catch(e) {}
  }
}

try { if (Inst10 <= 1000 && typeof (checkModuleSyntaxError) != "undefined") {_RecordType("<182,204,13>",(checkModuleSyntaxError)); Inst10++; } } catch(e) {}
function checkModuleSyntaxError(source, errorMessage) {
try { if (Inst11 <= 1000 && typeof (source) != "undefined") {_RecordType("<205,211,13>",(source)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (errorMessage) != "undefined") {_RecordType("<213,225,13>",(errorMessage)); Inst12++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (shouldThrow) != "undefined") {_RecordType("<231,242,14>",(shouldThrow)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (checkModuleSyntax) != "undefined") {_RecordType("<249,266,14>",(checkModuleSyntax)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (source) != "undefined") {_RecordType("<267,273,14>",(source)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (errorMessage) != "undefined") {_RecordType("<276,288,14>",(errorMessage)); Inst16++; } } catch(e) {}
  shouldThrow(() => checkModuleSyntax(source), errorMessage);
}

try { if (Inst17 <= 1000 && typeof (checkModuleSyntaxError) != "undefined") {_RecordType("<294,316,17>",(checkModuleSyntaxError)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (String.raw) != "undefined") {_RecordType("<317,327,17>",(String.raw)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (String) != "undefined") {_RecordType("<317,323,17>",(String)); Inst19++; } } catch(e) {}
checkModuleSyntaxError(String.raw`
var await;
`, `SyntaxError: Cannot use 'await' as a variable name in a module.:2`);
try { if (Inst20 <= 1000 && typeof (checkModuleSyntaxError) != "undefined") {_RecordType("<413,435,20>",(checkModuleSyntaxError)); Inst20++; } } catch(e) {}
checkModuleSyntaxError(`
export var await;
`, `SyntaxError: Cannot use 'await' as a variable name in a module.:2`);
try { if (Inst21 <= 1000 && typeof (checkModuleSyntaxError) != "undefined") {_RecordType("<529,551,23>",(checkModuleSyntaxError)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (String.raw) != "undefined") {_RecordType("<552,562,23>",(String.raw)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (String) != "undefined") {_RecordType("<552,558,23>",(String)); Inst23++; } } catch(e) {}
checkModuleSyntaxError(String.raw`
let await;
`, `SyntaxError: Cannot use 'await' as a lexical variable name in a module.:2`);
try { if (Inst24 <= 1000 && typeof (checkModuleSyntaxError) != "undefined") {_RecordType("<656,678,26>",(checkModuleSyntaxError)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (String.raw) != "undefined") {_RecordType("<679,689,26>",(String.raw)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (String) != "undefined") {_RecordType("<679,685,26>",(String)); Inst26++; } } catch(e) {}
checkModuleSyntaxError(String.raw`
export let await;
`, `SyntaxError: Cannot use 'await' as a lexical variable name in a module.:2`);
try { if (Inst27 <= 1000 && typeof (checkModuleSyntaxError) != "undefined") {_RecordType("<790,812,29>",(checkModuleSyntaxError)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (String.raw) != "undefined") {_RecordType("<813,823,29>",(String.raw)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (String) != "undefined") {_RecordType("<813,819,29>",(String)); Inst29++; } } catch(e) {}
checkModuleSyntaxError(String.raw`
const await = 1
`, `SyntaxError: Cannot use 'await' as a lexical variable name in a module.:2`);
try { if (Inst30 <= 1000 && typeof (checkModuleSyntaxError) != "undefined") {_RecordType("<922,944,32>",(checkModuleSyntaxError)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (String.raw) != "undefined") {_RecordType("<945,955,32>",(String.raw)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (String) != "undefined") {_RecordType("<945,951,32>",(String)); Inst32++; } } catch(e) {}
checkModuleSyntaxError(String.raw`
export const await = 1
`, `SyntaxError: Cannot use 'await' as a lexical variable name in a module.:2`);
try { if (Inst33 <= 1000 && typeof (checkModuleSyntaxError) != "undefined") {_RecordType("<1061,1083,35>",(checkModuleSyntaxError)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (String.raw) != "undefined") {_RecordType("<1084,1094,35>",(String.raw)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (String) != "undefined") {_RecordType("<1084,1090,35>",(String)); Inst35++; } } catch(e) {}
checkModuleSyntaxError(String.raw`
function await() {}
`, `SyntaxError: Cannot declare function named 'await' in a module.:2`);
try { if (Inst36 <= 1000 && typeof (checkModuleSyntaxError) != "undefined") {_RecordType("<1189,1211,38>",(checkModuleSyntaxError)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (String.raw) != "undefined") {_RecordType("<1212,1222,38>",(String.raw)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (String) != "undefined") {_RecordType("<1212,1218,38>",(String)); Inst38++; } } catch(e) {}
checkModuleSyntaxError(String.raw`
function* await() {}
`, `SyntaxError: Cannot declare function named 'await' in a module.:2`);
try { if (Inst39 <= 1000 && typeof (checkModuleSyntaxError) != "undefined") {_RecordType("<1318,1340,41>",(checkModuleSyntaxError)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (String.raw) != "undefined") {_RecordType("<1341,1351,41>",(String.raw)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (String) != "undefined") {_RecordType("<1341,1347,41>",(String)); Inst41++; } } catch(e) {}
checkModuleSyntaxError(String.raw`
async function await() {}
`, `SyntaxError: Cannot declare function named 'await' in a module.:2`);
try { if (Inst42 <= 1000 && typeof (checkModuleSyntaxError) != "undefined") {_RecordType("<1452,1474,44>",(checkModuleSyntaxError)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (String.raw) != "undefined") {_RecordType("<1475,1485,44>",(String.raw)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (String) != "undefined") {_RecordType("<1475,1481,44>",(String)); Inst44++; } } catch(e) {}
checkModuleSyntaxError(String.raw`
import {await} from 'foo';
`, `SyntaxError: Cannot use 'await' as an imported binding name.:2`);
try { if (Inst45 <= 1000 && typeof (checkModuleSyntaxError) != "undefined") {_RecordType("<1584,1606,47>",(checkModuleSyntaxError)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (String.raw) != "undefined") {_RecordType("<1607,1617,47>",(String.raw)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (String) != "undefined") {_RecordType("<1607,1613,47>",(String)); Inst47++; } } catch(e) {}
checkModuleSyntaxError(String.raw`
import {foo as await} from 'foo';
`, `SyntaxError: Cannot use 'await' as an imported binding name.:2`);
try { if (Inst48 <= 1000 && typeof (checkModuleSyntaxError) != "undefined") {_RecordType("<1723,1745,50>",(checkModuleSyntaxError)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (String.raw) != "undefined") {_RecordType("<1746,1756,50>",(String.raw)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (String) != "undefined") {_RecordType("<1746,1752,50>",(String)); Inst50++; } } catch(e) {}
checkModuleSyntaxError(String.raw`
import * as await from 'foo';
`, `SyntaxError: Cannot use 'await' as an imported binding name.:2`);
try { if (Inst51 <= 1000 && typeof (checkModuleSyntaxError) != "undefined") {_RecordType("<1858,1880,53>",(checkModuleSyntaxError)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (String.raw) != "undefined") {_RecordType("<1881,1891,53>",(String.raw)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (String) != "undefined") {_RecordType("<1881,1887,53>",(String)); Inst53++; } } catch(e) {}
checkModuleSyntaxError(String.raw`
import await, {x, y, z} from 'foo';
`, `SyntaxError: Cannot use 'await' as an imported binding name.:2`);
try { if (Inst54 <= 1000 && typeof (checkModuleSyntaxError) != "undefined") {_RecordType("<1999,2021,56>",(checkModuleSyntaxError)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (String.raw) != "undefined") {_RecordType("<2022,2032,56>",(String.raw)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (String) != "undefined") {_RecordType("<2022,2028,56>",(String)); Inst56++; } } catch(e) {}
checkModuleSyntaxError(String.raw`
import await, {x, y, z,} from 'foo';
`, `SyntaxError: Cannot use 'await' as an imported binding name.:2`);
try { if (Inst57 <= 1000 && typeof (checkModuleSyntaxError) != "undefined") {_RecordType("<2141,2163,59>",(checkModuleSyntaxError)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (String.raw) != "undefined") {_RecordType("<2164,2174,59>",(String.raw)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (String) != "undefined") {_RecordType("<2164,2170,59>",(String)); Inst59++; } } catch(e) {}
checkModuleSyntaxError(String.raw`
import await from 'foo';
`, `SyntaxError: Cannot use 'await' as an imported binding name.:2`);
try { if (Inst60 <= 1000 && typeof (checkModuleSyntaxError) != "undefined") {_RecordType("<2271,2293,62>",(checkModuleSyntaxError)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (String.raw) != "undefined") {_RecordType("<2294,2304,62>",(String.raw)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (String) != "undefined") {_RecordType("<2294,2300,62>",(String)); Inst62++; } } catch(e) {}
checkModuleSyntaxError(String.raw`
import await, * as foo from 'foo';
`, `SyntaxError: Cannot use 'await' as an imported binding name.:2`);

