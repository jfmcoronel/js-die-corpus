var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//@ if $buildType == "release" && !$memoryLimited then runDefault else skip end
try { if (Inst0 <= 1000 && typeof (temp) != "undefined") {_RecordType("<89,93,2>",(temp)); Inst0++; } } catch(e) {}
function temp(i) {
try { if (Inst1 <= 1000 && typeof (i) != "undefined") {_RecordType("<94,95,2>",(i)); Inst1++; } } catch(e) {}
  let a1 = [{}];
try { if (Inst2 <= 1000 && typeof (a1) != "undefined") {_RecordType("<105,107,3>",(a1)); Inst2++; } } catch(e) {}
  a1.foo = 20;
try { if (Inst3 <= 1000 && typeof (a1.foo) != "undefined") {_RecordType("<118,124,4>",(a1.foo)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (a1) != "undefined") {_RecordType("<118,120,4>",(a1)); Inst4++; } } catch(e) {}
  a1.foo1 = 20;
try { if (Inst5 <= 1000 && typeof (a1.foo1) != "undefined") {_RecordType("<133,140,5>",(a1.foo1)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (a1) != "undefined") {_RecordType("<133,135,5>",(a1)); Inst6++; } } catch(e) {}
  a1.foo2 = 20;
try { if (Inst7 <= 1000 && typeof (a1.foo2) != "undefined") {_RecordType("<149,156,6>",(a1.foo2)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (a1) != "undefined") {_RecordType("<149,151,6>",(a1)); Inst8++; } } catch(e) {}
  a1.foo3 = 20;
try { if (Inst9 <= 1000 && typeof (a1.foo3) != "undefined") {_RecordType("<165,172,7>",(a1.foo3)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (a1) != "undefined") {_RecordType("<165,167,7>",(a1)); Inst10++; } } catch(e) {}
  a1.foo4 = 20;
try { if (Inst11 <= 1000 && typeof (a1.foo4) != "undefined") {_RecordType("<181,188,8>",(a1.foo4)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (a1) != "undefined") {_RecordType("<181,183,8>",(a1)); Inst12++; } } catch(e) {}
  a1.foo5 = 20;
try { if (Inst13 <= 1000 && typeof (a1.foo5) != "undefined") {_RecordType("<197,204,9>",(a1.foo5)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (a1) != "undefined") {_RecordType("<197,199,9>",(a1)); Inst14++; } } catch(e) {}
  a1.foo6 = 20;
try { if (Inst15 <= 1000 && typeof (a1.foo6) != "undefined") {_RecordType("<213,220,10>",(a1.foo6)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (a1) != "undefined") {_RecordType("<213,215,10>",(a1)); Inst16++; } } catch(e) {}
  a1.foo8 = 20;
try { if (Inst17 <= 1000 && typeof (a1.foo8) != "undefined") {_RecordType("<229,236,11>",(a1.foo8)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (a1) != "undefined") {_RecordType("<229,231,11>",(a1)); Inst18++; } } catch(e) {}
  a1.foo10 = 20;
try { if (Inst19 <= 1000 && typeof (a1.foo10) != "undefined") {_RecordType("<245,253,12>",(a1.foo10)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (a1) != "undefined") {_RecordType("<245,247,12>",(a1)); Inst20++; } } catch(e) {}
  a1.foo11 = 20;
try { if (Inst21 <= 1000 && typeof (a1.foo11) != "undefined") {_RecordType("<262,270,13>",(a1.foo11)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (a1) != "undefined") {_RecordType("<262,264,13>",(a1)); Inst22++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (a1[0]) != "undefined") {_RecordType("<286,291,14>",(a1[0])); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (a1) != "undefined") {_RecordType("<286,288,14>",(a1)); Inst24++; } } catch(e) {}
  delete a1[0];

try { if (Inst42 <= 1000 && typeof (e) != "undefined") {_RecordType("<514,515,26>",(e)); Inst42++; } } catch(e) {}
  try {
    let args = [-15, 1, 'foo', 20, 'bar'];
try { if (Inst25 <= 1000 && typeof (args) != "undefined") {_RecordType("<310,314,17>",(args)); Inst25++; } } catch(e) {}

    for (let j = 0; j < i; ++j) {
try { if (Inst26 <= 1000 && typeof (j) != "undefined") {_RecordType("<359,360,19>",(j)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (j) != "undefined") {_RecordType("<366,367,19>",(j)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (i) != "undefined") {_RecordType("<370,371,19>",(i)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (j) != "undefined") {_RecordType("<375,376,19>",(j)); Inst29++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (args.push) != "undefined") {_RecordType("<386,395,20>",(args.push)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (args) != "undefined") {_RecordType("<386,390,20>",(args)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (j) != "undefined") {_RecordType("<396,397,20>",(j)); Inst32++; } } catch(e) {}
      args.push(j);
    }

    for (let i = 0; i < 2 ** 31 - 1; ++i) {
try { if (Inst33 <= 1000 && typeof (i) != "undefined") {_RecordType("<420,421,23>",(i)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (i) != "undefined") {_RecordType("<427,428,23>",(i)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (i) != "undefined") {_RecordType("<446,447,23>",(i)); Inst35++; } } catch(e) {}
try { if (Inst36 <= 1000 && typeof (Array.prototype.splice.apply) != "undefined") {_RecordType("<457,485,24>",(Array.prototype.splice.apply)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (Array.prototype.splice) != "undefined") {_RecordType("<457,479,24>",(Array.prototype.splice)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<457,472,24>",(Array.prototype)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (Array) != "undefined") {_RecordType("<457,462,24>",(Array)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (a1) != "undefined") {_RecordType("<486,488,24>",(a1)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (args) != "undefined") {_RecordType("<490,494,24>",(args)); Inst41++; } } catch(e) {}
      Array.prototype.splice.apply(a1, args);
    }
  } catch (e) {
    ;
  }
}

let i = 62;
try { if (Inst43 <= 1000 && typeof (i) != "undefined") {_RecordType("<536,537,31>",(i)); Inst43++; } } catch(e) {}
try { if (Inst44 <= 1000 && typeof (temp) != "undefined") {_RecordType("<544,548,32>",(temp)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (i) != "undefined") {_RecordType("<549,550,32>",(i)); Inst45++; } } catch(e) {}
temp(i);

