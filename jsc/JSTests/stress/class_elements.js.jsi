var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (test) != "undefined") {_RecordType("<9,13,1>",(test)); Inst0++; } } catch(e) {}
function test() {
  let log = [];
try { if (Inst1 <= 1000 && typeof (log) != "undefined") {_RecordType("<24,27,2>",(log)); Inst1++; } } catch(e) {}

try { if (Inst2 <= 1000 && typeof (effect) != "undefined") {_RecordType("<46,52,4>",(effect)); Inst2++; } } catch(e) {}
  function effect(desc) {
try { if (Inst3 <= 1000 && typeof (desc) != "undefined") {_RecordType("<53,57,4>",(desc)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (log.push) != "undefined") {_RecordType("<65,73,5>",(log.push)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (log) != "undefined") {_RecordType("<65,68,5>",(log)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (desc) != "undefined") {_RecordType("<74,78,5>",(desc)); Inst6++; } } catch(e) {}
    log.push(desc);
try { if (Inst7 <= 1000 && typeof (desc) != "undefined") {_RecordType("<92,96,6>",(desc)); Inst7++; } } catch(e) {}
    return desc;
  }

  class C {
    [effect("instance#1")]() {
      ;
    }

    static [effect("static#2")]() {
      ;
    }

    get [effect("instanceGetter#3")]() {
      ;
    }

    static get [effect("staticGetter#4")]() {
      ;
    }

    set [effect("instanceSetter#5")](v) {
try { if (Inst9 <= 1000 && typeof (v) != "undefined") {_RecordType("<366,367,26>",(v)); Inst9++; } } catch(e) {}
      ;
    }

    static [effect("staticSetter#6")](v) {
try { if (Inst10 <= 1000 && typeof (v) != "undefined") {_RecordType("<424,425,30>",(v)); Inst10++; } } catch(e) {}
      ;
    }

  }
try { if (Inst8 <= 1000 && typeof (C) != "undefined") {_RecordType("<111,112,9>",(C)); Inst8++; } } catch(e) {}

try { if (Inst11 <= 1000 && typeof (log[0]) != "undefined") {_RecordType("<458,464,36>",(log[0])); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (log) != "undefined") {_RecordType("<458,461,36>",(log)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (log[1]) != "undefined") {_RecordType("<485,491,36>",(log[1])); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (log) != "undefined") {_RecordType("<485,488,36>",(log)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (log[2]) != "undefined") {_RecordType("<510,516,36>",(log[2])); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (log) != "undefined") {_RecordType("<510,513,36>",(log)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (log[3]) != "undefined") {_RecordType("<543,549,36>",(log[3])); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (log) != "undefined") {_RecordType("<543,546,36>",(log)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (log[4]) != "undefined") {_RecordType("<574,580,36>",(log[4])); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (log) != "undefined") {_RecordType("<574,577,36>",(log)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (log[5]) != "undefined") {_RecordType("<607,613,36>",(log[5])); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (log) != "undefined") {_RecordType("<607,610,36>",(log)); Inst22++; } } catch(e) {}
  return log[0] === "instance#1" && log[1] === "static#2" && log[2] === "instanceGetter#3" && log[3] === "staticGetter#4" && log[4] === "instanceSetter#5" && log[5] === "staticSetter#6";
}

try { if (Inst23 <= 1000 && typeof (test) != "undefined") {_RecordType("<644,648,39>",(test)); Inst23++; } } catch(e) {}
if (!test()) {
try { if (Inst24 <= 1000 && typeof (Error) != "undefined") {_RecordType("<666,671,40>",(Error)); Inst24++; } } catch(e) {}
  throw new Error("Test failed");
}

