var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<9,17,1>",(shouldBe)); Inst0++; } } catch(e) {}
function shouldBe(actual, expected) {
try { if (Inst1 <= 1000 && typeof (actual) != "undefined") {_RecordType("<18,24,1>",(actual)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (expected) != "undefined") {_RecordType("<26,34,1>",(expected)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (actual) != "undefined") {_RecordType("<44,50,2>",(actual)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (expected) != "undefined") {_RecordType("<55,63,2>",(expected)); Inst4++; } } catch(e) {}
  if (actual !== expected) {
try { if (Inst5 <= 1000 && typeof (Error) != "undefined") {_RecordType("<81,86,3>",(Error)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (actual) != "undefined") {_RecordType("<103,109,3>",(actual)); Inst6++; } } catch(e) {}
    throw new Error('bad value: ' + actual);
  }
}

{
try { if (Inst8 <= 1000 && typeof (x) != "undefined") {_RecordType("<146,147,9>",(x)); Inst8++; } } catch(e) {}
  let source = {
    get x() {
try { if (Inst9 <= 1000 && typeof (this.y) != "undefined") {_RecordType("<165,171,10>",(this.y)); Inst9++; } } catch(e) {}
      delete this.y;
      return 42;
    },

    y: 42
  };
try { if (Inst7 <= 1000 && typeof (source) != "undefined") {_RecordType("<127,133,8>",(source)); Inst7++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (Object.assign) != "undefined") {_RecordType("<228,241,16>",(Object.assign)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Object) != "undefined") {_RecordType("<228,234,16>",(Object)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (source) != "undefined") {_RecordType("<246,252,16>",(source)); Inst13++; } } catch(e) {}
  let result = Object.assign({}, source);
try { if (Inst10 <= 1000 && typeof (result) != "undefined") {_RecordType("<219,225,16>",(result)); Inst10++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<257,265,17>",(shouldBe)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (result.x) != "undefined") {_RecordType("<266,274,17>",(result.x)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (result) != "undefined") {_RecordType("<266,272,17>",(result)); Inst16++; } } catch(e) {}
  shouldBe(result.x, 42);
try { if (Inst17 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<283,291,18>",(shouldBe)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (result.hasOwnProperty) != "undefined") {_RecordType("<292,313,18>",(result.hasOwnProperty)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (result) != "undefined") {_RecordType("<292,298,18>",(result)); Inst19++; } } catch(e) {}
  shouldBe(result.hasOwnProperty('y'), false);
}
{
try { if (Inst21 <= 1000 && typeof (x) != "undefined") {_RecordType("<357,358,22>",(x)); Inst21++; } } catch(e) {}
  let source = {
    get x() {
      return 42;
    },

    y: 42
  };
try { if (Inst20 <= 1000 && typeof (source) != "undefined") {_RecordType("<338,344,21>",(source)); Inst20++; } } catch(e) {}
  var store = 0;
try { if (Inst22 <= 1000 && typeof (store) != "undefined") {_RecordType("<409,414,28>",(store)); Inst22++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (x) != "undefined") {_RecordType("<445,446,30>",(x)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (value) != "undefined") {_RecordType("<447,452,30>",(value)); Inst25++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (x) != "undefined") {_RecordType("<516,517,35>",(x)); Inst30++; } } catch(e) {}
  let target = {
    set x(value) {
try { if (Inst27 <= 1000 && typeof (value) != "undefined") {_RecordType("<470,475,31>",(value)); Inst27++; } } catch(e) {}
      store = value;
try { if (Inst26 <= 1000 && typeof (store) != "undefined") {_RecordType("<462,467,31>",(store)); Inst26++; } } catch(e) {}
try { if (Inst28 <= 1000 && typeof (source.y) != "undefined") {_RecordType("<490,498,32>",(source.y)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (source) != "undefined") {_RecordType("<490,496,32>",(source)); Inst29++; } } catch(e) {}
      delete source.y;
    },

    get x() {
try { if (Inst31 <= 1000 && typeof (store) != "undefined") {_RecordType("<535,540,36>",(store)); Inst31++; } } catch(e) {}
      return store;
    }

  };
try { if (Inst23 <= 1000 && typeof (target) != "undefined") {_RecordType("<426,432,29>",(target)); Inst23++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (Object.assign) != "undefined") {_RecordType("<569,582,40>",(Object.assign)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (Object) != "undefined") {_RecordType("<569,575,40>",(Object)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (target) != "undefined") {_RecordType("<583,589,40>",(target)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (source) != "undefined") {_RecordType("<591,597,40>",(source)); Inst36++; } } catch(e) {}
  let result = Object.assign(target, source);
try { if (Inst32 <= 1000 && typeof (result) != "undefined") {_RecordType("<560,566,40>",(result)); Inst32++; } } catch(e) {}
try { if (Inst37 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<602,610,41>",(shouldBe)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (result.x) != "undefined") {_RecordType("<611,619,41>",(result.x)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (result) != "undefined") {_RecordType("<611,617,41>",(result)); Inst39++; } } catch(e) {}
  shouldBe(result.x, 42);
try { if (Inst40 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<628,636,42>",(shouldBe)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (result.hasOwnProperty) != "undefined") {_RecordType("<637,658,42>",(result.hasOwnProperty)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (result) != "undefined") {_RecordType("<637,643,42>",(result)); Inst42++; } } catch(e) {}
  shouldBe(result.hasOwnProperty('y'), false);
}
{
try { if (Inst44 <= 1000 && typeof (x) != "undefined") {_RecordType("<702,703,46>",(x)); Inst44++; } } catch(e) {}
  let source = {
    get x() {
try { if (Inst45 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<714,735,47>",(Object.defineProperty)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (Object) != "undefined") {_RecordType("<714,720,47>",(Object)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (source) != "undefined") {_RecordType("<736,742,47>",(source)); Inst47++; } } catch(e) {}
      Object.defineProperty(source, 'y', {
        enumerable: false
      });
      return 42;
    },

    y: 42
  };
try { if (Inst43 <= 1000 && typeof (source) != "undefined") {_RecordType("<683,689,45>",(source)); Inst43++; } } catch(e) {}
try { if (Inst49 <= 1000 && typeof (Object.assign) != "undefined") {_RecordType("<842,855,55>",(Object.assign)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (Object) != "undefined") {_RecordType("<842,848,55>",(Object)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (source) != "undefined") {_RecordType("<860,866,55>",(source)); Inst51++; } } catch(e) {}
  let result = Object.assign({}, source);
try { if (Inst48 <= 1000 && typeof (result) != "undefined") {_RecordType("<833,839,55>",(result)); Inst48++; } } catch(e) {}
try { if (Inst52 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<871,879,56>",(shouldBe)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (result.x) != "undefined") {_RecordType("<880,888,56>",(result.x)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (result) != "undefined") {_RecordType("<880,886,56>",(result)); Inst54++; } } catch(e) {}
  shouldBe(result.x, 42);
try { if (Inst55 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<897,905,57>",(shouldBe)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (result.hasOwnProperty) != "undefined") {_RecordType("<906,927,57>",(result.hasOwnProperty)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (result) != "undefined") {_RecordType("<906,912,57>",(result)); Inst57++; } } catch(e) {}
  shouldBe(result.hasOwnProperty('y'), false);
}
{
try { if (Inst59 <= 1000 && typeof (x) != "undefined") {_RecordType("<971,972,61>",(x)); Inst59++; } } catch(e) {}
  let source = {
    get x() {
      return 42;
    },

    y: 42
  };
try { if (Inst58 <= 1000 && typeof (source) != "undefined") {_RecordType("<952,958,60>",(source)); Inst58++; } } catch(e) {}
  var store = 0;
try { if (Inst60 <= 1000 && typeof (store) != "undefined") {_RecordType("<1023,1028,67>",(store)); Inst60++; } } catch(e) {}
try { if (Inst62 <= 1000 && typeof (x) != "undefined") {_RecordType("<1059,1060,69>",(x)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (value) != "undefined") {_RecordType("<1061,1066,69>",(value)); Inst63++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (x) != "undefined") {_RecordType("<1186,1187,76>",(x)); Inst69++; } } catch(e) {}
  let target = {
    set x(value) {
try { if (Inst65 <= 1000 && typeof (value) != "undefined") {_RecordType("<1084,1089,70>",(value)); Inst65++; } } catch(e) {}
      store = value;
try { if (Inst64 <= 1000 && typeof (store) != "undefined") {_RecordType("<1076,1081,70>",(store)); Inst64++; } } catch(e) {}
try { if (Inst66 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<1097,1118,71>",(Object.defineProperty)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1097,1103,71>",(Object)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (source) != "undefined") {_RecordType("<1119,1125,71>",(source)); Inst68++; } } catch(e) {}
      Object.defineProperty(source, 'y', {
        enumerable: false
      });
    },

    get x() {
try { if (Inst70 <= 1000 && typeof (store) != "undefined") {_RecordType("<1205,1210,77>",(store)); Inst70++; } } catch(e) {}
      return store;
    }

  };
try { if (Inst61 <= 1000 && typeof (target) != "undefined") {_RecordType("<1040,1046,68>",(target)); Inst61++; } } catch(e) {}
try { if (Inst72 <= 1000 && typeof (Object.assign) != "undefined") {_RecordType("<1239,1252,81>",(Object.assign)); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1239,1245,81>",(Object)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (target) != "undefined") {_RecordType("<1253,1259,81>",(target)); Inst74++; } } catch(e) {}try { if (Inst75 <= 1000 && typeof (source) != "undefined") {_RecordType("<1261,1267,81>",(source)); Inst75++; } } catch(e) {}
  let result = Object.assign(target, source);
try { if (Inst71 <= 1000 && typeof (result) != "undefined") {_RecordType("<1230,1236,81>",(result)); Inst71++; } } catch(e) {}
try { if (Inst76 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<1272,1280,82>",(shouldBe)); Inst76++; } } catch(e) {}try { if (Inst77 <= 1000 && typeof (result.x) != "undefined") {_RecordType("<1281,1289,82>",(result.x)); Inst77++; } } catch(e) {}try { if (Inst78 <= 1000 && typeof (result) != "undefined") {_RecordType("<1281,1287,82>",(result)); Inst78++; } } catch(e) {}
  shouldBe(result.x, 42);
try { if (Inst79 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<1298,1306,83>",(shouldBe)); Inst79++; } } catch(e) {}try { if (Inst80 <= 1000 && typeof (result.hasOwnProperty) != "undefined") {_RecordType("<1307,1328,83>",(result.hasOwnProperty)); Inst80++; } } catch(e) {}try { if (Inst81 <= 1000 && typeof (result) != "undefined") {_RecordType("<1307,1313,83>",(result)); Inst81++; } } catch(e) {}
  shouldBe(result.hasOwnProperty('y'), false);
}

