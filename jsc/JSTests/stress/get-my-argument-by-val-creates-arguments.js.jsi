var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (blah) != "undefined") {_RecordType("<9,13,1>",(blah)); Inst0++; } } catch(e) {}
function blah(args) {
try { if (Inst1 <= 1000 && typeof (args) != "undefined") {_RecordType("<14,18,1>",(args)); Inst1++; } } catch(e) {}
  var array = [];
try { if (Inst2 <= 1000 && typeof (array) != "undefined") {_RecordType("<28,33,2>",(array)); Inst2++; } } catch(e) {}

  for (var i = 0; i < args.length; ++i) {
try { if (Inst3 <= 1000 && typeof (i) != "undefined") {_RecordType("<52,53,4>",(i)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (i) != "undefined") {_RecordType("<59,60,4>",(i)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (args.length) != "undefined") {_RecordType("<63,74,4>",(args.length)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (args) != "undefined") {_RecordType("<63,67,4>",(args)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<78,79,4>",(i)); Inst7++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (array.push) != "undefined") {_RecordType("<87,97,5>",(array.push)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (array) != "undefined") {_RecordType("<87,92,5>",(array)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (args[i]) != "undefined") {_RecordType("<98,105,5>",(args[i])); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (args) != "undefined") {_RecordType("<98,102,5>",(args)); Inst11++; } } catch(e) {}
    array.push(args[i]);
  }

try { if (Inst12 <= 1000 && typeof (array) != "undefined") {_RecordType("<122,127,8>",(array)); Inst12++; } } catch(e) {}
  return array;
}

try { if (Inst13 <= 1000 && typeof (foo) != "undefined") {_RecordType("<141,144,11>",(foo)); Inst13++; } } catch(e) {}
function foo() {
  // Force creation of arguments by doing out-of-bounds access.
try { if (Inst15 <= 1000 && typeof (arguments[42]) != "undefined") {_RecordType("<225,238,13>",(arguments[42])); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<225,234,13>",(arguments)); Inst16++; } } catch(e) {}
  var tmp = arguments[42]; // Use the created arguments object.
try { if (Inst14 <= 1000 && typeof (tmp) != "undefined") {_RecordType("<219,222,13>",(tmp)); Inst14++; } } catch(e) {}

try { if (Inst17 <= 1000 && typeof (blah) != "undefined") {_RecordType("<287,291,15>",(blah)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<292,301,15>",(arguments)); Inst18++; } } catch(e) {}
  return blah(arguments);
}

try { if (Inst19 <= 1000 && typeof (bar) != "undefined") {_RecordType("<316,319,18>",(bar)); Inst19++; } } catch(e) {}
function bar(array) {
try { if (Inst20 <= 1000 && typeof (array) != "undefined") {_RecordType("<320,325,18>",(array)); Inst20++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (foo.apply) != "undefined") {_RecordType("<338,347,19>",(foo.apply)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (foo) != "undefined") {_RecordType("<338,341,19>",(foo)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (array) != "undefined") {_RecordType("<354,359,19>",(array)); Inst23++; } } catch(e) {}
  return foo.apply(this, array);
}

try { if (Inst24 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<365,373,22>",(noInline)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (blah) != "undefined") {_RecordType("<374,378,22>",(blah)); Inst25++; } } catch(e) {}
noInline(blah);
try { if (Inst26 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<381,389,23>",(noInline)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (bar) != "undefined") {_RecordType("<390,393,23>",(bar)); Inst27++; } } catch(e) {}
noInline(bar);

try { if (Inst28 <= 1000 && typeof (checkEqual) != "undefined") {_RecordType("<406,416,25>",(checkEqual)); Inst28++; } } catch(e) {}
function checkEqual(a, b) {
try { if (Inst29 <= 1000 && typeof (a) != "undefined") {_RecordType("<417,418,25>",(a)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (b) != "undefined") {_RecordType("<420,421,25>",(b)); Inst30++; } } catch(e) {}
try { if (Inst31 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<431,439,26>",(a.length)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (a) != "undefined") {_RecordType("<431,432,26>",(a)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (b.length) != "undefined") {_RecordType("<443,451,26>",(b.length)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (b) != "undefined") {_RecordType("<443,444,26>",(b)); Inst34++; } } catch(e) {}
  if (a.length != b.length) {
try { if (Inst35 <= 1000 && typeof (a) != "undefined") {_RecordType("<494,495,27>",(a)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (b) != "undefined") {_RecordType("<511,512,27>",(b)); Inst36++; } } catch(e) {}
    throw "Error: length mismatch: " + a + " versus " + b;
  }

  for (var i = a.length; i--;) {
try { if (Inst37 <= 1000 && typeof (i) != "undefined") {_RecordType("<530,531,30>",(i)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<534,542,30>",(a.length)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (a) != "undefined") {_RecordType("<534,535,30>",(a)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (i) != "undefined") {_RecordType("<544,545,30>",(i)); Inst40++; } } catch(e) {}
try { if (Inst41 <= 1000 && typeof (a[i]) != "undefined") {_RecordType("<560,564,31>",(a[i])); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (a) != "undefined") {_RecordType("<560,561,31>",(a)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (b[i]) != "undefined") {_RecordType("<568,572,31>",(b[i])); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (b) != "undefined") {_RecordType("<568,569,31>",(b)); Inst44++; } } catch(e) {}
    if (a[i] != b[i]) {
try { if (Inst45 <= 1000 && typeof (i) != "undefined") {_RecordType("<616,617,32>",(i)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (a) != "undefined") {_RecordType("<627,628,32>",(a)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (b) != "undefined") {_RecordType("<644,645,32>",(b)); Inst47++; } } catch(e) {}
      throw "Error: mismatch at i = " + i + ": " + a + " versus " + b;
    }
  }
}

try { if (Inst48 <= 1000 && typeof (test) != "undefined") {_RecordType("<669,673,37>",(test)); Inst48++; } } catch(e) {}
function test(array) {
try { if (Inst49 <= 1000 && typeof (array) != "undefined") {_RecordType("<674,679,37>",(array)); Inst49++; } } catch(e) {}
try { if (Inst51 <= 1000 && typeof (bar) != "undefined") {_RecordType("<698,701,38>",(bar)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (array) != "undefined") {_RecordType("<702,707,38>",(array)); Inst52++; } } catch(e) {}
  var actual = bar(array);
try { if (Inst50 <= 1000 && typeof (actual) != "undefined") {_RecordType("<689,695,38>",(actual)); Inst50++; } } catch(e) {}
try { if (Inst53 <= 1000 && typeof (checkEqual) != "undefined") {_RecordType("<712,722,39>",(checkEqual)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (actual) != "undefined") {_RecordType("<723,729,39>",(actual)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (array) != "undefined") {_RecordType("<731,736,39>",(array)); Inst55++; } } catch(e) {}
  checkEqual(actual, array);
}

for (var i = 0; i < 10000; ++i) {
try { if (Inst56 <= 1000 && typeof (i) != "undefined") {_RecordType("<751,752,42>",(i)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (i) != "undefined") {_RecordType("<758,759,42>",(i)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (i) != "undefined") {_RecordType("<771,772,42>",(i)); Inst58++; } } catch(e) {}
  var array = [];
try { if (Inst59 <= 1000 && typeof (array) != "undefined") {_RecordType("<782,787,43>",(array)); Inst59++; } } catch(e) {}

  for (var j = 0; j < i % 6; ++j) {
try { if (Inst60 <= 1000 && typeof (j) != "undefined") {_RecordType("<806,807,45>",(j)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (j) != "undefined") {_RecordType("<813,814,45>",(j)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (i) != "undefined") {_RecordType("<817,818,45>",(i)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (j) != "undefined") {_RecordType("<826,827,45>",(j)); Inst63++; } } catch(e) {}
try { if (Inst64 <= 1000 && typeof (array.push) != "undefined") {_RecordType("<835,845,46>",(array.push)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (array) != "undefined") {_RecordType("<835,840,46>",(array)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (j) != "undefined") {_RecordType("<846,847,46>",(j)); Inst66++; } } catch(e) {}
    array.push(j);
  }

try { if (Inst67 <= 1000 && typeof (test) != "undefined") {_RecordType("<857,861,49>",(test)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (array) != "undefined") {_RecordType("<862,867,49>",(array)); Inst68++; } } catch(e) {}
  test(array);
}

