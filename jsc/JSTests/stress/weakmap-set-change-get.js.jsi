var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<9,17,1>",(shouldBe)); Inst0++; } } catch(e) {}
function shouldBe(actual, expected) {
try { if (Inst1 <= 1000 && typeof (actual) != "undefined") {_RecordType("<18,24,1>",(actual)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (expected) != "undefined") {_RecordType("<26,34,1>",(expected)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (actual) != "undefined") {_RecordType("<44,50,2>",(actual)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (expected) != "undefined") {_RecordType("<55,63,2>",(expected)); Inst4++; } } catch(e) {}
  if (actual !== expected) {
try { if (Inst5 <= 1000 && typeof (Error) != "undefined") {_RecordType("<81,86,3>",(Error)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (actual) != "undefined") {_RecordType("<103,109,3>",(actual)); Inst6++; } } catch(e) {}
    throw new Error('bad value: ' + actual);
  }
}

try { if (Inst7 <= 1000 && typeof (test) != "undefined") {_RecordType("<128,132,7>",(test)); Inst7++; } } catch(e) {}
function test() {
  var key1 = {};
try { if (Inst8 <= 1000 && typeof (key1) != "undefined") {_RecordType("<143,147,8>",(key1)); Inst8++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (WeakMap) != "undefined") {_RecordType("<170,177,9>",(WeakMap)); Inst10++; } } catch(e) {}
  var map = new WeakMap();
try { if (Inst9 <= 1000 && typeof (map) != "undefined") {_RecordType("<160,163,9>",(map)); Inst9++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (map.get) != "undefined") {_RecordType("<194,201,10>",(map.get)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (map) != "undefined") {_RecordType("<194,197,10>",(map)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (key1) != "undefined") {_RecordType("<202,206,10>",(key1)); Inst14++; } } catch(e) {}
  var res1 = map.get(key1);
try { if (Inst11 <= 1000 && typeof (res1) != "undefined") {_RecordType("<187,191,10>",(res1)); Inst11++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (map.set) != "undefined") {_RecordType("<211,218,11>",(map.set)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (map) != "undefined") {_RecordType("<211,214,11>",(map)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (key1) != "undefined") {_RecordType("<219,223,11>",(key1)); Inst17++; } } catch(e) {}
  map.set(key1, 20);
try { if (Inst19 <= 1000 && typeof (map.get) != "undefined") {_RecordType("<243,250,12>",(map.get)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (map) != "undefined") {_RecordType("<243,246,12>",(map)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (key1) != "undefined") {_RecordType("<251,255,12>",(key1)); Inst21++; } } catch(e) {}
  var res2 = map.get(key1);
try { if (Inst18 <= 1000 && typeof (res2) != "undefined") {_RecordType("<236,240,12>",(res2)); Inst18++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (map.set) != "undefined") {_RecordType("<260,267,13>",(map.set)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (map) != "undefined") {_RecordType("<260,263,13>",(map)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (key1) != "undefined") {_RecordType("<268,272,13>",(key1)); Inst24++; } } catch(e) {}
  map.set(key1, 400);
try { if (Inst26 <= 1000 && typeof (map.get) != "undefined") {_RecordType("<293,300,14>",(map.get)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (map) != "undefined") {_RecordType("<293,296,14>",(map)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (key1) != "undefined") {_RecordType("<301,305,14>",(key1)); Inst28++; } } catch(e) {}
  var res3 = map.get(key1);
try { if (Inst25 <= 1000 && typeof (res3) != "undefined") {_RecordType("<286,290,14>",(res3)); Inst25++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (map.delete) != "undefined") {_RecordType("<310,320,15>",(map.delete)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (map) != "undefined") {_RecordType("<310,313,15>",(map)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (key1) != "undefined") {_RecordType("<321,325,15>",(key1)); Inst31++; } } catch(e) {}
  map.delete(key1);
try { if (Inst33 <= 1000 && typeof (map.get) != "undefined") {_RecordType("<341,348,16>",(map.get)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (map) != "undefined") {_RecordType("<341,344,16>",(map)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (key1) != "undefined") {_RecordType("<349,353,16>",(key1)); Inst35++; } } catch(e) {}
  var res4 = map.get(key1);
try { if (Inst32 <= 1000 && typeof (res4) != "undefined") {_RecordType("<334,338,16>",(res4)); Inst32++; } } catch(e) {}
try { if (Inst36 <= 1000 && typeof (res1) != "undefined") {_RecordType("<366,370,17>",(res1)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (res2) != "undefined") {_RecordType("<372,376,17>",(res2)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (res3) != "undefined") {_RecordType("<378,382,17>",(res3)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (res4) != "undefined") {_RecordType("<384,388,17>",(res4)); Inst39++; } } catch(e) {}
  return [res1, res2, res3, res4];
}

try { if (Inst40 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<394,402,20>",(noInline)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (test) != "undefined") {_RecordType("<403,407,20>",(test)); Inst41++; } } catch(e) {}
noInline(test);

for (var i = 0; i < 1e5; ++i) {
try { if (Inst42 <= 1000 && typeof (i) != "undefined") {_RecordType("<420,421,22>",(i)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (i) != "undefined") {_RecordType("<427,428,22>",(i)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (i) != "undefined") {_RecordType("<438,439,22>",(i)); Inst44++; } } catch(e) {}
try { if (Inst49 <= 1000 && typeof (test) != "undefined") {_RecordType("<476,480,23>",(test)); Inst49++; } } catch(e) {}
  var [res1, res2, res3, res4] = test();
try { if (Inst45 <= 1000 && typeof (res1) != "undefined") {_RecordType("<450,454,23>",(res1)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (res2) != "undefined") {_RecordType("<456,460,23>",(res2)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (res3) != "undefined") {_RecordType("<462,466,23>",(res3)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (res4) != "undefined") {_RecordType("<468,472,23>",(res4)); Inst48++; } } catch(e) {}
try { if (Inst50 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<486,494,24>",(shouldBe)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (res1) != "undefined") {_RecordType("<495,499,24>",(res1)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<501,510,24>",(undefined)); Inst52++; } } catch(e) {}
  shouldBe(res1, undefined);
try { if (Inst53 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<515,523,25>",(shouldBe)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (res2) != "undefined") {_RecordType("<524,528,25>",(res2)); Inst54++; } } catch(e) {}
  shouldBe(res2, 20);
try { if (Inst55 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<537,545,26>",(shouldBe)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (res3) != "undefined") {_RecordType("<546,550,26>",(res3)); Inst56++; } } catch(e) {}
  shouldBe(res3, 400);
try { if (Inst57 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<560,568,27>",(shouldBe)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (res4) != "undefined") {_RecordType("<569,573,27>",(res4)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<575,584,27>",(undefined)); Inst59++; } } catch(e) {}
  shouldBe(res4, undefined);
}

