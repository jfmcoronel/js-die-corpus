var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
var Inst102 = 0;
var Inst103 = 0;
var Inst104 = 0;
var Inst105 = 0;
var Inst106 = 0;
var Inst107 = 0;
var Inst108 = 0;
var Inst109 = 0;
var Inst110 = 0;
var Inst111 = 0;
var Inst112 = 0;
var Inst113 = 0;
var Inst114 = 0;
var Inst115 = 0;
var Inst116 = 0;
var Inst117 = 0;
var Inst118 = 0;
var Inst119 = 0;
var Inst120 = 0;
var Inst121 = 0;
var Inst122 = 0;
var Inst123 = 0;
var Inst124 = 0;
var Inst125 = 0;
var Inst126 = 0;
var Inst127 = 0;
var Inst128 = 0;
var Inst129 = 0;
var Inst130 = 0;
var Inst131 = 0;
var Inst132 = 0;
var Inst133 = 0;
var Inst134 = 0;
var Inst135 = 0;
var Inst136 = 0;
var Inst137 = 0;
var Inst138 = 0;
var Inst139 = 0;
var Inst140 = 0;
var Inst141 = 0;
var Inst142 = 0;
var Inst143 = 0;
var Inst144 = 0;
var Inst145 = 0;
var Inst146 = 0;
var Inst147 = 0;
var Inst148 = 0;
var Inst149 = 0;
var Inst150 = 0;
var Inst151 = 0;
var Inst152 = 0;
var Inst153 = 0;
var Inst154 = 0;
var Inst155 = 0;
var Inst156 = 0;
var Inst157 = 0;
var Inst158 = 0;
var Inst159 = 0;
var Inst160 = 0;
var Inst161 = 0;
var Inst162 = 0;
var Inst163 = 0;
var Inst164 = 0;
var Inst165 = 0;
var Inst166 = 0;
var Inst167 = 0;
var Inst168 = 0;
var Inst169 = 0;
var Inst170 = 0;
var Inst171 = 0;
var Inst172 = 0;
var Inst173 = 0;
var Inst174 = 0;
var Inst175 = 0;
var Inst176 = 0;
var Inst177 = 0;
var Inst178 = 0;
var Inst179 = 0;
var Inst180 = 0;
var Inst181 = 0;
var Inst182 = 0;
var Inst183 = 0;
var Inst184 = 0;
var Inst185 = 0;
var Inst186 = 0;
var Inst187 = 0;
var Inst188 = 0;
var Inst189 = 0;
var Inst190 = 0;
var Inst191 = 0;
var Inst192 = 0;
var Inst193 = 0;
var Inst194 = 0;
var Inst195 = 0;
var Inst196 = 0;
var Inst197 = 0;
var Inst198 = 0;
var Inst199 = 0;
var Inst200 = 0;
var Inst201 = 0;
var Inst202 = 0;
var Inst203 = 0;
var Inst204 = 0;
var Inst205 = 0;
var Inst206 = 0;
var Inst207 = 0;
var Inst208 = 0;
var Inst209 = 0;
var Inst210 = 0;
var Inst211 = 0;
var Inst212 = 0;
var Inst213 = 0;
var Inst214 = 0;
var Inst215 = 0;
var Inst216 = 0;
var Inst217 = 0;
var Inst218 = 0;
var Inst219 = 0;
var Inst220 = 0;
var Inst221 = 0;
var Inst222 = 0;
var Inst223 = 0;
var Inst224 = 0;
var Inst225 = 0;
var Inst226 = 0;
var Inst227 = 0;
var Inst228 = 0;
var Inst229 = 0;
var Inst230 = 0;
var Inst231 = 0;
var Inst232 = 0;
var Inst233 = 0;
var Inst234 = 0;
var Inst235 = 0;
var Inst236 = 0;
var Inst237 = 0;
var Inst238 = 0;
var Inst239 = 0;
var Inst240 = 0;
var Inst241 = 0;
var Inst242 = 0;
var Inst243 = 0;
var Inst244 = 0;
var Inst245 = 0;
var Inst246 = 0;
var Inst247 = 0;
var Inst248 = 0;
var Inst249 = 0;
var Inst250 = 0;
var Inst251 = 0;
var Inst252 = 0;
var Inst253 = 0;
var Inst254 = 0;
var Inst255 = 0;
var Inst256 = 0;
var Inst257 = 0;
var Inst258 = 0;
var Inst259 = 0;
var Inst260 = 0;
var Inst261 = 0;
var Inst262 = 0;
var Inst263 = 0;
var Inst264 = 0;
var Inst265 = 0;
var Inst266 = 0;
var Inst267 = 0;
var Inst268 = 0;
var Inst269 = 0;
var Inst270 = 0;
var Inst271 = 0;
var Inst272 = 0;
var Inst273 = 0;
var Inst274 = 0;
var Inst275 = 0;
var Inst276 = 0;
var Inst277 = 0;
var Inst278 = 0;
var Inst279 = 0;
var Inst280 = 0;
var Inst281 = 0;
var Inst282 = 0;
var Inst283 = 0;
var Inst284 = 0;
var Inst285 = 0;
var Inst286 = 0;
var Inst287 = 0;
var Inst288 = 0;
var Inst289 = 0;
var Inst290 = 0;
var Inst291 = 0;
var Inst292 = 0;
var Inst293 = 0;
var Inst294 = 0;
var Inst295 = 0;
var Inst296 = 0;
var Inst297 = 0;
var Inst298 = 0;
var Inst299 = 0;
var Inst300 = 0;
var Inst301 = 0;
var Inst302 = 0;
var Inst303 = 0;
var Inst304 = 0;
var Inst305 = 0;
var Inst306 = 0;
var Inst307 = 0;
var Inst308 = 0;
var Inst309 = 0;
var Inst310 = 0;
var Inst311 = 0;
var Inst312 = 0;
var Inst313 = 0;
var Inst314 = 0;
var Inst315 = 0;
var Inst316 = 0;
var Inst317 = 0;
var Inst318 = 0;
var Inst319 = 0;
var Inst320 = 0;
var Inst321 = 0;
var Inst322 = 0;
var Inst323 = 0;
var Inst324 = 0;
var Inst325 = 0;
var Inst326 = 0;
var Inst327 = 0;
var Inst328 = 0;
var Inst329 = 0;
var Inst330 = 0;
var Inst331 = 0;
var Inst332 = 0;
var Inst333 = 0;
var Inst334 = 0;
var Inst335 = 0;
var Inst336 = 0;
var Inst337 = 0;
var Inst338 = 0;
var Inst339 = 0;
var Inst340 = 0;
var Inst341 = 0;
var Inst342 = 0;
var Inst343 = 0;
var Inst344 = 0;
var Inst345 = 0;
var Inst346 = 0;
var Inst347 = 0;
var Inst348 = 0;
var Inst349 = 0;
var Inst350 = 0;
var Inst351 = 0;
var Inst352 = 0;
var Inst353 = 0;
var Inst354 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
"use strict"; // Copyright 2009 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// This benchmark is based on a JavaScript log processing module used
// by the V8 profiler to generate execution time profiles for runs of
// JavaScript applications, and it effectively measures how fast the
// JavaScript engine is at allocating nodes and reclaiming the memory
// used for old nodes. Because of the way splay trees work, the engine
// also has to deal with a lot of changes to the large tree object
// graph.
// Configuration.

var kSplayTreeSize = 8000;
try { if (Inst0 <= 1000 && typeof (kSplayTreeSize) != "undefined") {_RecordType("<2061,2075,36>",(kSplayTreeSize)); Inst0++; } } catch(e) {}
var kSplayTreeModifications = 80;
try { if (Inst1 <= 1000 && typeof (kSplayTreeModifications) != "undefined") {_RecordType("<2088,2111,37>",(kSplayTreeModifications)); Inst1++; } } catch(e) {}
var kSplayTreePayloadDepth = 5;
try { if (Inst2 <= 1000 && typeof (kSplayTreePayloadDepth) != "undefined") {_RecordType("<2122,2144,38>",(kSplayTreePayloadDepth)); Inst2++; } } catch(e) {}
var splayTree = null;
try { if (Inst3 <= 1000 && typeof (splayTree) != "undefined") {_RecordType("<2154,2163,39>",(splayTree)); Inst3++; } } catch(e) {}

try { if (Inst4 <= 1000 && typeof (GeneratePayloadTree) != "undefined") {_RecordType("<2182,2201,41>",(GeneratePayloadTree)); Inst4++; } } catch(e) {}
function GeneratePayloadTree(depth, tag) {
try { if (Inst5 <= 1000 && typeof (depth) != "undefined") {_RecordType("<2202,2207,41>",(depth)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (tag) != "undefined") {_RecordType("<2209,2212,41>",(tag)); Inst6++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (depth) != "undefined") {_RecordType("<2222,2227,42>",(depth)); Inst7++; } } catch(e) {}
  if (depth == 0) {
try { if (Inst8 <= 1000 && typeof (tag) != "undefined") {_RecordType("<2328,2331,45>",(tag)); Inst8++; } } catch(e) {}
    return {
      array: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9],
      string: 'String for key ' + tag + ' in leaf node'
    };
  } else {
try { if (Inst9 <= 1000 && typeof (GeneratePayloadTree) != "undefined") {_RecordType("<2393,2412,49>",(GeneratePayloadTree)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (depth) != "undefined") {_RecordType("<2413,2418,49>",(depth)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (tag) != "undefined") {_RecordType("<2424,2427,49>",(tag)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (GeneratePayloadTree) != "undefined") {_RecordType("<2443,2462,50>",(GeneratePayloadTree)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (depth) != "undefined") {_RecordType("<2463,2468,50>",(depth)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (tag) != "undefined") {_RecordType("<2474,2477,50>",(tag)); Inst14++; } } catch(e) {}
    return {
      left: GeneratePayloadTree(depth - 1, tag),
      right: GeneratePayloadTree(depth - 1, tag)
    };
  }
}

try { if (Inst15 <= 1000 && typeof (GenerateKey) != "undefined") {_RecordType("<2502,2513,55>",(GenerateKey)); Inst15++; } } catch(e) {}
function GenerateKey() {
  // The benchmark framework guarantees that Math.random is
  // deterministic; see base.js.
try { if (Inst16 <= 1000 && typeof (Math.random) != "undefined") {_RecordType("<2620,2631,58>",(Math.random)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Math) != "undefined") {_RecordType("<2620,2624,58>",(Math)); Inst17++; } } catch(e) {}
  return Math.random();
}

try { if (Inst18 <= 1000 && typeof (InsertNewNode) != "undefined") {_RecordType("<2647,2660,61>",(InsertNewNode)); Inst18++; } } catch(e) {}
function InsertNewNode() {
  // Insert new node with a unique key.
  var key;
try { if (Inst19 <= 1000 && typeof (key) != "undefined") {_RecordType("<2711,2714,63>",(key)); Inst19++; } } catch(e) {}

try { if (Inst20 <= 1000 && typeof (splayTree.find) != "undefined") {_RecordType("<2760,2774,67>",(splayTree.find)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (splayTree) != "undefined") {_RecordType("<2760,2769,67>",(splayTree)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (key) != "undefined") {_RecordType("<2775,2778,67>",(key)); Inst22++; } } catch(e) {}
  do {
try { if (Inst24 <= 1000 && typeof (GenerateKey) != "undefined") {_RecordType("<2734,2745,66>",(GenerateKey)); Inst24++; } } catch(e) {}
    key = GenerateKey();
try { if (Inst23 <= 1000 && typeof (key) != "undefined") {_RecordType("<2728,2731,66>",(key)); Inst23++; } } catch(e) {}
  } while (splayTree.find(key) != null);

try { if (Inst26 <= 1000 && typeof (GeneratePayloadTree) != "undefined") {_RecordType("<2807,2826,69>",(GeneratePayloadTree)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (kSplayTreePayloadDepth) != "undefined") {_RecordType("<2827,2849,69>",(kSplayTreePayloadDepth)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (String) != "undefined") {_RecordType("<2851,2857,69>",(String)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (key) != "undefined") {_RecordType("<2858,2861,69>",(key)); Inst29++; } } catch(e) {}
  var payload = GeneratePayloadTree(kSplayTreePayloadDepth, String(key));
try { if (Inst25 <= 1000 && typeof (payload) != "undefined") {_RecordType("<2797,2804,69>",(payload)); Inst25++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (splayTree.insert) != "undefined") {_RecordType("<2867,2883,70>",(splayTree.insert)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (splayTree) != "undefined") {_RecordType("<2867,2876,70>",(splayTree)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (key) != "undefined") {_RecordType("<2884,2887,70>",(key)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (payload) != "undefined") {_RecordType("<2889,2896,70>",(payload)); Inst33++; } } catch(e) {}
  splayTree.insert(key, payload);
try { if (Inst34 <= 1000 && typeof (key) != "undefined") {_RecordType("<2908,2911,71>",(key)); Inst34++; } } catch(e) {}
  return key;
}

try { if (Inst35 <= 1000 && typeof (SplaySetup) != "undefined") {_RecordType("<2925,2935,74>",(SplaySetup)); Inst35++; } } catch(e) {}
function SplaySetup() {
try { if (Inst37 <= 1000 && typeof (SplayTree) != "undefined") {_RecordType("<2958,2967,75>",(SplayTree)); Inst37++; } } catch(e) {}
  splayTree = new SplayTree();
try { if (Inst36 <= 1000 && typeof (splayTree) != "undefined") {_RecordType("<2942,2951,75>",(splayTree)); Inst36++; } } catch(e) {}

  for (var i = 0; i < kSplayTreeSize; i++) {
try { if (Inst38 <= 1000 && typeof (i) != "undefined") {_RecordType("<2983,2984,77>",(i)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (i) != "undefined") {_RecordType("<2990,2991,77>",(i)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (kSplayTreeSize) != "undefined") {_RecordType("<2994,3008,77>",(kSplayTreeSize)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (i) != "undefined") {_RecordType("<3010,3011,77>",(i)); Inst41++; } } catch(e) {}
try { if (Inst42 <= 1000 && typeof (InsertNewNode) != "undefined") {_RecordType("<3021,3034,78>",(InsertNewNode)); Inst42++; } } catch(e) {}
    InsertNewNode();
  }
}

try { if (Inst43 <= 1000 && typeof (SplayTearDown) != "undefined") {_RecordType("<3054,3067,82>",(SplayTearDown)); Inst43++; } } catch(e) {}
function SplayTearDown() {
  // Allow the garbage collector to reclaim the memory
  // used by the splay tree no matter how we exit the
  // tear down function.
try { if (Inst45 <= 1000 && typeof (splayTree.exportKeys) != "undefined") {_RecordType("<3219,3239,86>",(splayTree.exportKeys)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (splayTree) != "undefined") {_RecordType("<3219,3228,86>",(splayTree)); Inst46++; } } catch(e) {}
  var keys = splayTree.exportKeys();
try { if (Inst44 <= 1000 && typeof (keys) != "undefined") {_RecordType("<3212,3216,86>",(keys)); Inst44++; } } catch(e) {}
  splayTree = null; // Verify that the splay tree has the right size.
try { if (Inst47 <= 1000 && typeof (splayTree) != "undefined") {_RecordType("<3245,3254,87>",(splayTree)); Inst47++; } } catch(e) {}

try { if (Inst49 <= 1000 && typeof (keys.length) != "undefined") {_RecordType("<3329,3340,89>",(keys.length)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (keys) != "undefined") {_RecordType("<3329,3333,89>",(keys)); Inst50++; } } catch(e) {}
  var length = keys.length;
try { if (Inst48 <= 1000 && typeof (length) != "undefined") {_RecordType("<3320,3326,89>",(length)); Inst48++; } } catch(e) {}

try { if (Inst51 <= 1000 && typeof (length) != "undefined") {_RecordType("<3349,3355,91>",(length)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (kSplayTreeSize) != "undefined") {_RecordType("<3359,3373,91>",(kSplayTreeSize)); Inst52++; } } catch(e) {}
  if (length != kSplayTreeSize) {
try { if (Inst53 <= 1000 && typeof (Error) != "undefined") {_RecordType("<3391,3396,92>",(Error)); Inst53++; } } catch(e) {}
    throw new Error("Splay tree has wrong size");
  } // Verify that the splay tree has sorted, unique keys.


  for (var i = 0; i < length - 1; i++) {
try { if (Inst54 <= 1000 && typeof (i) != "undefined") {_RecordType("<3499,3500,96>",(i)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (i) != "undefined") {_RecordType("<3506,3507,96>",(i)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (length) != "undefined") {_RecordType("<3510,3516,96>",(length)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (i) != "undefined") {_RecordType("<3522,3523,96>",(i)); Inst57++; } } catch(e) {}
try { if (Inst58 <= 1000 && typeof (keys[i]) != "undefined") {_RecordType("<3537,3544,97>",(keys[i])); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (keys) != "undefined") {_RecordType("<3537,3541,97>",(keys)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (keys[i + 1]) != "undefined") {_RecordType("<3548,3559,97>",(keys[i + 1])); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (keys) != "undefined") {_RecordType("<3548,3552,97>",(keys)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (i) != "undefined") {_RecordType("<3553,3554,97>",(i)); Inst62++; } } catch(e) {}
    if (keys[i] >= keys[i + 1]) {
try { if (Inst63 <= 1000 && typeof (Error) != "undefined") {_RecordType("<3579,3584,98>",(Error)); Inst63++; } } catch(e) {}
      throw new Error("Splay tree not sorted");
    }
  }
}

try { if (Inst64 <= 1000 && typeof (SplayRun) != "undefined") {_RecordType("<3633,3641,103>",(SplayRun)); Inst64++; } } catch(e) {}
function SplayRun() {
  // Replace a few nodes in the splay tree.
  for (var i = 0; i < kSplayTreeModifications; i++) {
try { if (Inst65 <= 1000 && typeof (i) != "undefined") {_RecordType("<3701,3702,105>",(i)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (i) != "undefined") {_RecordType("<3708,3709,105>",(i)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (kSplayTreeModifications) != "undefined") {_RecordType("<3712,3735,105>",(kSplayTreeModifications)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (i) != "undefined") {_RecordType("<3737,3738,105>",(i)); Inst68++; } } catch(e) {}
try { if (Inst70 <= 1000 && typeof (InsertNewNode) != "undefined") {_RecordType("<3758,3771,106>",(InsertNewNode)); Inst70++; } } catch(e) {}
    var key = InsertNewNode();
try { if (Inst69 <= 1000 && typeof (key) != "undefined") {_RecordType("<3752,3755,106>",(key)); Inst69++; } } catch(e) {}
try { if (Inst72 <= 1000 && typeof (splayTree.findGreatestLessThan) != "undefined") {_RecordType("<3794,3824,107>",(splayTree.findGreatestLessThan)); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (splayTree) != "undefined") {_RecordType("<3794,3803,107>",(splayTree)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (key) != "undefined") {_RecordType("<3825,3828,107>",(key)); Inst74++; } } catch(e) {}
    var greatest = splayTree.findGreatestLessThan(key);
try { if (Inst71 <= 1000 && typeof (greatest) != "undefined") {_RecordType("<3783,3791,107>",(greatest)); Inst71++; } } catch(e) {}

try { if (Inst75 <= 1000 && typeof (greatest) != "undefined") {_RecordType("<3840,3848,109>",(greatest)); Inst75++; } } catch(e) {}
    if (greatest == null) {
try { if (Inst76 <= 1000 && typeof (splayTree.remove) != "undefined") {_RecordType("<3866,3882,110>",(splayTree.remove)); Inst76++; } } catch(e) {}try { if (Inst77 <= 1000 && typeof (splayTree) != "undefined") {_RecordType("<3866,3875,110>",(splayTree)); Inst77++; } } catch(e) {}try { if (Inst78 <= 1000 && typeof (key) != "undefined") {_RecordType("<3883,3886,110>",(key)); Inst78++; } } catch(e) {}
      splayTree.remove(key);
    } else {
try { if (Inst79 <= 1000 && typeof (splayTree.remove) != "undefined") {_RecordType("<3908,3924,112>",(splayTree.remove)); Inst79++; } } catch(e) {}try { if (Inst80 <= 1000 && typeof (splayTree) != "undefined") {_RecordType("<3908,3917,112>",(splayTree)); Inst80++; } } catch(e) {}try { if (Inst81 <= 1000 && typeof (greatest.key) != "undefined") {_RecordType("<3925,3937,112>",(greatest.key)); Inst81++; } } catch(e) {}try { if (Inst82 <= 1000 && typeof (greatest) != "undefined") {_RecordType("<3925,3933,112>",(greatest)); Inst82++; } } catch(e) {}
      splayTree.remove(greatest.key);
    }
  }
}
/**
 * Constructs a Splay tree.  A splay tree is a self-balancing binary
 * search tree with the additional property that recently accessed
 * elements are quick to access again. It performs basic operations
 * such as insertion, look-up and removal in O(log(n)) amortized time.
 *
 * @constructor
 */


try { if (Inst83 <= 1000 && typeof (SplayTree) != "undefined") {_RecordType("<4265,4274,126>",(SplayTree)); Inst83++; } } catch(e) {}
function SplayTree() {
  ;
}

;
/**
 * Pointer to the root node of the tree.
 *
 * @type {SplayTree.Node}
 * @private
 */

SplayTree.prototype.root_ = null;
try { if (Inst84 <= 1000 && typeof (SplayTree.prototype.root_) != "undefined") {_RecordType("<4379,4404,138>",(SplayTree.prototype.root_)); Inst84++; } } catch(e) {}try { if (Inst85 <= 1000 && typeof (SplayTree.prototype) != "undefined") {_RecordType("<4379,4398,138>",(SplayTree.prototype)); Inst85++; } } catch(e) {}try { if (Inst86 <= 1000 && typeof (SplayTree) != "undefined") {_RecordType("<4379,4388,138>",(SplayTree)); Inst86++; } } catch(e) {}
/**
 * @return {boolean} Whether the tree is empty.
 */

SplayTree.prototype.isEmpty = function () {
try { if (Inst90 <= 1000 && typeof (this.root_) != "undefined") {_RecordType("<4524,4534,144>",(this.root_)); Inst90++; } } catch(e) {}
  return !this.root_;
};
try { if (Inst87 <= 1000 && typeof (SplayTree.prototype.isEmpty) != "undefined") {_RecordType("<4470,4497,143>",(SplayTree.prototype.isEmpty)); Inst87++; } } catch(e) {}try { if (Inst88 <= 1000 && typeof (SplayTree.prototype) != "undefined") {_RecordType("<4470,4489,143>",(SplayTree.prototype)); Inst88++; } } catch(e) {}try { if (Inst89 <= 1000 && typeof (SplayTree) != "undefined") {_RecordType("<4470,4479,143>",(SplayTree)); Inst89++; } } catch(e) {}
/**
 * Inserts a node into the tree with the specified key and value if
 * the tree does not already contain a node with the specified key. If
 * the value is inserted, it becomes the root of the tree.
 *
 * @param {number} key Key to insert into the tree.
 * @param {*} value Value to insert into the tree.
 */


SplayTree.prototype.insert = function (key, value) {
try { if (Inst94 <= 1000 && typeof (key) != "undefined") {_RecordType("<4892,4895,156>",(key)); Inst94++; } } catch(e) {}try { if (Inst95 <= 1000 && typeof (value) != "undefined") {_RecordType("<4897,4902,156>",(value)); Inst95++; } } catch(e) {}
try { if (Inst96 <= 1000 && typeof (this.isEmpty) != "undefined") {_RecordType("<4912,4924,157>",(this.isEmpty)); Inst96++; } } catch(e) {}
  if (this.isEmpty()) {
try { if (Inst98 <= 1000 && typeof (SplayTree.Node) != "undefined") {_RecordType("<4951,4965,158>",(SplayTree.Node)); Inst98++; } } catch(e) {}try { if (Inst99 <= 1000 && typeof (SplayTree) != "undefined") {_RecordType("<4951,4960,158>",(SplayTree)); Inst99++; } } catch(e) {}try { if (Inst100 <= 1000 && typeof (key) != "undefined") {_RecordType("<4966,4969,158>",(key)); Inst100++; } } catch(e) {}try { if (Inst101 <= 1000 && typeof (value) != "undefined") {_RecordType("<4971,4976,158>",(value)); Inst101++; } } catch(e) {}
    this.root_ = new SplayTree.Node(key, value);
try { if (Inst97 <= 1000 && typeof (this.root_) != "undefined") {_RecordType("<4934,4944,158>",(this.root_)); Inst97++; } } catch(e) {}
    return;
  } // Splay on the key to move the last node on the search path for
  // the key to the root of the tree.


try { if (Inst102 <= 1000 && typeof (this.splay_) != "undefined") {_RecordType("<5102,5113,164>",(this.splay_)); Inst102++; } } catch(e) {}try { if (Inst103 <= 1000 && typeof (key) != "undefined") {_RecordType("<5114,5117,164>",(key)); Inst103++; } } catch(e) {}
  this.splay_(key);

try { if (Inst104 <= 1000 && typeof (this.root_.key) != "undefined") {_RecordType("<5127,5141,166>",(this.root_.key)); Inst104++; } } catch(e) {}try { if (Inst105 <= 1000 && typeof (this.root_) != "undefined") {_RecordType("<5127,5137,166>",(this.root_)); Inst105++; } } catch(e) {}try { if (Inst106 <= 1000 && typeof (key) != "undefined") {_RecordType("<5145,5148,166>",(key)); Inst106++; } } catch(e) {}
  if (this.root_.key == key) {
    return;
  }

try { if (Inst108 <= 1000 && typeof (SplayTree.Node) != "undefined") {_RecordType("<5186,5200,170>",(SplayTree.Node)); Inst108++; } } catch(e) {}try { if (Inst109 <= 1000 && typeof (SplayTree) != "undefined") {_RecordType("<5186,5195,170>",(SplayTree)); Inst109++; } } catch(e) {}try { if (Inst110 <= 1000 && typeof (key) != "undefined") {_RecordType("<5201,5204,170>",(key)); Inst110++; } } catch(e) {}try { if (Inst111 <= 1000 && typeof (value) != "undefined") {_RecordType("<5206,5211,170>",(value)); Inst111++; } } catch(e) {}
  var node = new SplayTree.Node(key, value);
try { if (Inst107 <= 1000 && typeof (node) != "undefined") {_RecordType("<5175,5179,170>",(node)); Inst107++; } } catch(e) {}

try { if (Inst112 <= 1000 && typeof (key) != "undefined") {_RecordType("<5221,5224,172>",(key)); Inst112++; } } catch(e) {}try { if (Inst113 <= 1000 && typeof (this.root_.key) != "undefined") {_RecordType("<5227,5241,172>",(this.root_.key)); Inst113++; } } catch(e) {}try { if (Inst114 <= 1000 && typeof (this.root_) != "undefined") {_RecordType("<5227,5237,172>",(this.root_)); Inst114++; } } catch(e) {}
  if (key > this.root_.key) {
try { if (Inst117 <= 1000 && typeof (this.root_) != "undefined") {_RecordType("<5261,5271,173>",(this.root_)); Inst117++; } } catch(e) {}
    node.left = this.root_;
try { if (Inst115 <= 1000 && typeof (node.left) != "undefined") {_RecordType("<5249,5258,173>",(node.left)); Inst115++; } } catch(e) {}try { if (Inst116 <= 1000 && typeof (node) != "undefined") {_RecordType("<5249,5253,173>",(node)); Inst116++; } } catch(e) {}
try { if (Inst120 <= 1000 && typeof (this.root_.right) != "undefined") {_RecordType("<5290,5306,174>",(this.root_.right)); Inst120++; } } catch(e) {}try { if (Inst121 <= 1000 && typeof (this.root_) != "undefined") {_RecordType("<5290,5300,174>",(this.root_)); Inst121++; } } catch(e) {}
    node.right = this.root_.right;
try { if (Inst118 <= 1000 && typeof (node.right) != "undefined") {_RecordType("<5277,5287,174>",(node.right)); Inst118++; } } catch(e) {}try { if (Inst119 <= 1000 && typeof (node) != "undefined") {_RecordType("<5277,5281,174>",(node)); Inst119++; } } catch(e) {}
    this.root_.right = null;
try { if (Inst122 <= 1000 && typeof (this.root_.right) != "undefined") {_RecordType("<5312,5328,175>",(this.root_.right)); Inst122++; } } catch(e) {}try { if (Inst123 <= 1000 && typeof (this.root_) != "undefined") {_RecordType("<5312,5322,175>",(this.root_)); Inst123++; } } catch(e) {}
  } else {
try { if (Inst126 <= 1000 && typeof (this.root_) != "undefined") {_RecordType("<5365,5375,177>",(this.root_)); Inst126++; } } catch(e) {}
    node.right = this.root_;
try { if (Inst124 <= 1000 && typeof (node.right) != "undefined") {_RecordType("<5352,5362,177>",(node.right)); Inst124++; } } catch(e) {}try { if (Inst125 <= 1000 && typeof (node) != "undefined") {_RecordType("<5352,5356,177>",(node)); Inst125++; } } catch(e) {}
try { if (Inst129 <= 1000 && typeof (this.root_.left) != "undefined") {_RecordType("<5393,5408,178>",(this.root_.left)); Inst129++; } } catch(e) {}try { if (Inst130 <= 1000 && typeof (this.root_) != "undefined") {_RecordType("<5393,5403,178>",(this.root_)); Inst130++; } } catch(e) {}
    node.left = this.root_.left;
try { if (Inst127 <= 1000 && typeof (node.left) != "undefined") {_RecordType("<5381,5390,178>",(node.left)); Inst127++; } } catch(e) {}try { if (Inst128 <= 1000 && typeof (node) != "undefined") {_RecordType("<5381,5385,178>",(node)); Inst128++; } } catch(e) {}
    this.root_.left = null;
try { if (Inst131 <= 1000 && typeof (this.root_.left) != "undefined") {_RecordType("<5414,5429,179>",(this.root_.left)); Inst131++; } } catch(e) {}try { if (Inst132 <= 1000 && typeof (this.root_) != "undefined") {_RecordType("<5414,5424,179>",(this.root_)); Inst132++; } } catch(e) {}
  }

try { if (Inst134 <= 1000 && typeof (node) != "undefined") {_RecordType("<5458,5462,182>",(node)); Inst134++; } } catch(e) {}
  this.root_ = node;
try { if (Inst133 <= 1000 && typeof (this.root_) != "undefined") {_RecordType("<5445,5455,182>",(this.root_)); Inst133++; } } catch(e) {}
};
try { if (Inst91 <= 1000 && typeof (SplayTree.prototype.insert) != "undefined") {_RecordType("<4853,4879,156>",(SplayTree.prototype.insert)); Inst91++; } } catch(e) {}try { if (Inst92 <= 1000 && typeof (SplayTree.prototype) != "undefined") {_RecordType("<4853,4872,156>",(SplayTree.prototype)); Inst92++; } } catch(e) {}try { if (Inst93 <= 1000 && typeof (SplayTree) != "undefined") {_RecordType("<4853,4862,156>",(SplayTree)); Inst93++; } } catch(e) {}
/**
 * Removes a node with the specified key from the tree if the tree
 * contains a node with this key. The removed node is returned. If the
 * key is not found, an exception is thrown.
 *
 * @param {number} key Key to find and remove from the tree.
 * @return {SplayTree.Node} The removed node.
 */


SplayTree.prototype.remove = function (key) {
try { if (Inst138 <= 1000 && typeof (key) != "undefined") {_RecordType("<5809,5812,194>",(key)); Inst138++; } } catch(e) {}
try { if (Inst139 <= 1000 && typeof (this.isEmpty) != "undefined") {_RecordType("<5822,5834,195>",(this.isEmpty)); Inst139++; } } catch(e) {}
  if (this.isEmpty()) {
try { if (Inst140 <= 1000 && typeof (Error) != "undefined") {_RecordType("<5850,5855,196>",(Error)); Inst140++; } } catch(e) {}try { if (Inst141 <= 1000 && typeof (key) != "undefined") {_RecordType("<5876,5879,196>",(key)); Inst141++; } } catch(e) {}
    throw Error('Key not found: ' + key);
  }

try { if (Inst142 <= 1000 && typeof (this.splay_) != "undefined") {_RecordType("<5889,5900,199>",(this.splay_)); Inst142++; } } catch(e) {}try { if (Inst143 <= 1000 && typeof (key) != "undefined") {_RecordType("<5901,5904,199>",(key)); Inst143++; } } catch(e) {}
  this.splay_(key);

try { if (Inst144 <= 1000 && typeof (this.root_.key) != "undefined") {_RecordType("<5914,5928,201>",(this.root_.key)); Inst144++; } } catch(e) {}try { if (Inst145 <= 1000 && typeof (this.root_) != "undefined") {_RecordType("<5914,5924,201>",(this.root_)); Inst145++; } } catch(e) {}try { if (Inst146 <= 1000 && typeof (key) != "undefined") {_RecordType("<5932,5935,201>",(key)); Inst146++; } } catch(e) {}
  if (this.root_.key != key) {
try { if (Inst147 <= 1000 && typeof (Error) != "undefined") {_RecordType("<5949,5954,202>",(Error)); Inst147++; } } catch(e) {}try { if (Inst148 <= 1000 && typeof (key) != "undefined") {_RecordType("<5975,5978,202>",(key)); Inst148++; } } catch(e) {}
    throw Error('Key not found: ' + key);
  }

try { if (Inst150 <= 1000 && typeof (this.root_) != "undefined") {_RecordType("<6002,6012,205>",(this.root_)); Inst150++; } } catch(e) {}
  var removed = this.root_;
try { if (Inst149 <= 1000 && typeof (removed) != "undefined") {_RecordType("<5992,5999,205>",(removed)); Inst149++; } } catch(e) {}

try { if (Inst151 <= 1000 && typeof (this.root_.left) != "undefined") {_RecordType("<6022,6037,207>",(this.root_.left)); Inst151++; } } catch(e) {}try { if (Inst152 <= 1000 && typeof (this.root_) != "undefined") {_RecordType("<6022,6032,207>",(this.root_)); Inst152++; } } catch(e) {}
  if (!this.root_.left) {
try { if (Inst154 <= 1000 && typeof (this.root_.right) != "undefined") {_RecordType("<6058,6074,208>",(this.root_.right)); Inst154++; } } catch(e) {}try { if (Inst155 <= 1000 && typeof (this.root_) != "undefined") {_RecordType("<6058,6068,208>",(this.root_)); Inst155++; } } catch(e) {}
    this.root_ = this.root_.right;
try { if (Inst153 <= 1000 && typeof (this.root_) != "undefined") {_RecordType("<6045,6055,208>",(this.root_)); Inst153++; } } catch(e) {}
  } else {
try { if (Inst157 <= 1000 && typeof (this.root_.right) != "undefined") {_RecordType("<6103,6119,210>",(this.root_.right)); Inst157++; } } catch(e) {}try { if (Inst158 <= 1000 && typeof (this.root_) != "undefined") {_RecordType("<6103,6113,210>",(this.root_)); Inst158++; } } catch(e) {}
    var right = this.root_.right;
try { if (Inst156 <= 1000 && typeof (right) != "undefined") {_RecordType("<6095,6100,210>",(right)); Inst156++; } } catch(e) {}
try { if (Inst160 <= 1000 && typeof (this.root_.left) != "undefined") {_RecordType("<6138,6153,211>",(this.root_.left)); Inst160++; } } catch(e) {}try { if (Inst161 <= 1000 && typeof (this.root_) != "undefined") {_RecordType("<6138,6148,211>",(this.root_)); Inst161++; } } catch(e) {}
    this.root_ = this.root_.left; // Splay to make sure that the new root has an empty right child.
try { if (Inst159 <= 1000 && typeof (this.root_) != "undefined") {_RecordType("<6125,6135,211>",(this.root_)); Inst159++; } } catch(e) {}

try { if (Inst162 <= 1000 && typeof (this.splay_) != "undefined") {_RecordType("<6226,6237,213>",(this.splay_)); Inst162++; } } catch(e) {}try { if (Inst163 <= 1000 && typeof (key) != "undefined") {_RecordType("<6238,6241,213>",(key)); Inst163++; } } catch(e) {}
    this.splay_(key); // Insert the original right child as the right child of the new
    // root.

try { if (Inst166 <= 1000 && typeof (right) != "undefined") {_RecordType("<6346,6351,216>",(right)); Inst166++; } } catch(e) {}
    this.root_.right = right;
try { if (Inst164 <= 1000 && typeof (this.root_.right) != "undefined") {_RecordType("<6327,6343,216>",(this.root_.right)); Inst164++; } } catch(e) {}try { if (Inst165 <= 1000 && typeof (this.root_) != "undefined") {_RecordType("<6327,6337,216>",(this.root_)); Inst165++; } } catch(e) {}
  }

try { if (Inst167 <= 1000 && typeof (removed) != "undefined") {_RecordType("<6367,6374,219>",(removed)); Inst167++; } } catch(e) {}
  return removed;
};
try { if (Inst135 <= 1000 && typeof (SplayTree.prototype.remove) != "undefined") {_RecordType("<5770,5796,194>",(SplayTree.prototype.remove)); Inst135++; } } catch(e) {}try { if (Inst136 <= 1000 && typeof (SplayTree.prototype) != "undefined") {_RecordType("<5770,5789,194>",(SplayTree.prototype)); Inst136++; } } catch(e) {}try { if (Inst137 <= 1000 && typeof (SplayTree) != "undefined") {_RecordType("<5770,5779,194>",(SplayTree)); Inst137++; } } catch(e) {}
/**
 * Returns the node having the specified key or null if the tree doesn't contain
 * a node with the specified key.
 *
 * @param {number} key Key to find in the tree.
 * @return {SplayTree.Node} Node having the specified key.
 */


SplayTree.prototype.find = function (key) {
try { if (Inst171 <= 1000 && typeof (key) != "undefined") {_RecordType("<6651,6654,230>",(key)); Inst171++; } } catch(e) {}
try { if (Inst172 <= 1000 && typeof (this.isEmpty) != "undefined") {_RecordType("<6664,6676,231>",(this.isEmpty)); Inst172++; } } catch(e) {}
  if (this.isEmpty()) {
    return null;
  }

try { if (Inst173 <= 1000 && typeof (this.splay_) != "undefined") {_RecordType("<6706,6717,235>",(this.splay_)); Inst173++; } } catch(e) {}try { if (Inst174 <= 1000 && typeof (key) != "undefined") {_RecordType("<6718,6721,235>",(key)); Inst174++; } } catch(e) {}
  this.splay_(key);
try { if (Inst175 <= 1000 && typeof (this.root_.key) != "undefined") {_RecordType("<6733,6747,236>",(this.root_.key)); Inst175++; } } catch(e) {}try { if (Inst176 <= 1000 && typeof (this.root_) != "undefined") {_RecordType("<6733,6743,236>",(this.root_)); Inst176++; } } catch(e) {}try { if (Inst177 <= 1000 && typeof (key) != "undefined") {_RecordType("<6751,6754,236>",(key)); Inst177++; } } catch(e) {}try { if (Inst178 <= 1000 && typeof (this.root_) != "undefined") {_RecordType("<6757,6767,236>",(this.root_)); Inst178++; } } catch(e) {}
  return this.root_.key == key ? this.root_ : null;
};
try { if (Inst168 <= 1000 && typeof (SplayTree.prototype.find) != "undefined") {_RecordType("<6614,6638,230>",(SplayTree.prototype.find)); Inst168++; } } catch(e) {}try { if (Inst169 <= 1000 && typeof (SplayTree.prototype) != "undefined") {_RecordType("<6614,6633,230>",(SplayTree.prototype)); Inst169++; } } catch(e) {}try { if (Inst170 <= 1000 && typeof (SplayTree) != "undefined") {_RecordType("<6614,6623,230>",(SplayTree)); Inst170++; } } catch(e) {}
/**
 * @return {SplayTree.Node} Node having the maximum key value.
 */


SplayTree.prototype.findMax = function (opt_startNode) {
try { if (Inst182 <= 1000 && typeof (opt_startNode) != "undefined") {_RecordType("<6892,6905,243>",(opt_startNode)); Inst182++; } } catch(e) {}
try { if (Inst183 <= 1000 && typeof (this.isEmpty) != "undefined") {_RecordType("<6915,6927,244>",(this.isEmpty)); Inst183++; } } catch(e) {}
  if (this.isEmpty()) {
    return null;
  }

try { if (Inst185 <= 1000 && typeof (opt_startNode) != "undefined") {_RecordType("<6971,6984,248>",(opt_startNode)); Inst185++; } } catch(e) {}try { if (Inst186 <= 1000 && typeof (this.root_) != "undefined") {_RecordType("<6988,6998,248>",(this.root_)); Inst186++; } } catch(e) {}
  var current = opt_startNode || this.root_;
try { if (Inst184 <= 1000 && typeof (current) != "undefined") {_RecordType("<6961,6968,248>",(current)); Inst184++; } } catch(e) {}

try { if (Inst187 <= 1000 && typeof (current.right) != "undefined") {_RecordType("<7010,7023,250>",(current.right)); Inst187++; } } catch(e) {}try { if (Inst188 <= 1000 && typeof (current) != "undefined") {_RecordType("<7010,7017,250>",(current)); Inst188++; } } catch(e) {}
  while (current.right) {
try { if (Inst190 <= 1000 && typeof (current.right) != "undefined") {_RecordType("<7041,7054,251>",(current.right)); Inst190++; } } catch(e) {}try { if (Inst191 <= 1000 && typeof (current) != "undefined") {_RecordType("<7041,7048,251>",(current)); Inst191++; } } catch(e) {}
    current = current.right;
try { if (Inst189 <= 1000 && typeof (current) != "undefined") {_RecordType("<7031,7038,251>",(current)); Inst189++; } } catch(e) {}
  }

try { if (Inst192 <= 1000 && typeof (current) != "undefined") {_RecordType("<7070,7077,254>",(current)); Inst192++; } } catch(e) {}
  return current;
};
try { if (Inst179 <= 1000 && typeof (SplayTree.prototype.findMax) != "undefined") {_RecordType("<6852,6879,243>",(SplayTree.prototype.findMax)); Inst179++; } } catch(e) {}try { if (Inst180 <= 1000 && typeof (SplayTree.prototype) != "undefined") {_RecordType("<6852,6871,243>",(SplayTree.prototype)); Inst180++; } } catch(e) {}try { if (Inst181 <= 1000 && typeof (SplayTree) != "undefined") {_RecordType("<6852,6861,243>",(SplayTree)); Inst181++; } } catch(e) {}
/**
 * @return {SplayTree.Node} Node having the maximum key value that
 *     is less than the specified key value.
 */


SplayTree.prototype.findGreatestLessThan = function (key) {
try { if (Inst196 <= 1000 && typeof (key) != "undefined") {_RecordType("<7257,7260,262>",(key)); Inst196++; } } catch(e) {}
try { if (Inst197 <= 1000 && typeof (this.isEmpty) != "undefined") {_RecordType("<7270,7282,263>",(this.isEmpty)); Inst197++; } } catch(e) {}
  if (this.isEmpty()) {
    return null;
  } // Splay on the key to move the node with the given key or the last
  // node on the search path to the top of the tree.


try { if (Inst198 <= 1000 && typeof (this.splay_) != "undefined") {_RecordType("<7434,7445,269>",(this.splay_)); Inst198++; } } catch(e) {}try { if (Inst199 <= 1000 && typeof (key) != "undefined") {_RecordType("<7446,7449,269>",(key)); Inst199++; } } catch(e) {}
  this.splay_(key); // Now the result is either the root node or the greatest node in
  // the left subtree.

try { if (Inst200 <= 1000 && typeof (this.root_.key) != "undefined") {_RecordType("<7548,7562,272>",(this.root_.key)); Inst200++; } } catch(e) {}try { if (Inst201 <= 1000 && typeof (this.root_) != "undefined") {_RecordType("<7548,7558,272>",(this.root_)); Inst201++; } } catch(e) {}try { if (Inst202 <= 1000 && typeof (key) != "undefined") {_RecordType("<7565,7568,272>",(key)); Inst202++; } } catch(e) {}
  if (this.root_.key < key) {
try { if (Inst203 <= 1000 && typeof (this.root_) != "undefined") {_RecordType("<7583,7593,273>",(this.root_)); Inst203++; } } catch(e) {}
    return this.root_;
  } else {
try { if (Inst204 <= 1000 && typeof (this.root_.left) != "undefined") {_RecordType("<7614,7629,275>",(this.root_.left)); Inst204++; } } catch(e) {}try { if (Inst205 <= 1000 && typeof (this.root_) != "undefined") {_RecordType("<7614,7624,275>",(this.root_)); Inst205++; } } catch(e) {}
    if (this.root_.left) {
try { if (Inst206 <= 1000 && typeof (this.findMax) != "undefined") {_RecordType("<7646,7658,276>",(this.findMax)); Inst206++; } } catch(e) {}try { if (Inst207 <= 1000 && typeof (this.root_.left) != "undefined") {_RecordType("<7659,7674,276>",(this.root_.left)); Inst207++; } } catch(e) {}try { if (Inst208 <= 1000 && typeof (this.root_) != "undefined") {_RecordType("<7659,7669,276>",(this.root_)); Inst208++; } } catch(e) {}
      return this.findMax(this.root_.left);
    } else {
      return null;
    }
  }
};
try { if (Inst193 <= 1000 && typeof (SplayTree.prototype.findGreatestLessThan) != "undefined") {_RecordType("<7204,7244,262>",(SplayTree.prototype.findGreatestLessThan)); Inst193++; } } catch(e) {}try { if (Inst194 <= 1000 && typeof (SplayTree.prototype) != "undefined") {_RecordType("<7204,7223,262>",(SplayTree.prototype)); Inst194++; } } catch(e) {}try { if (Inst195 <= 1000 && typeof (SplayTree) != "undefined") {_RecordType("<7204,7213,262>",(SplayTree)); Inst195++; } } catch(e) {}
/**
 * @return {Array<*>} An array containing all the keys of tree's nodes.
 */


SplayTree.prototype.exportKeys = function () {
  var result = [];
try { if (Inst212 <= 1000 && typeof (result) != "undefined") {_RecordType("<7857,7863,288>",(result)); Inst212++; } } catch(e) {}

try { if (Inst213 <= 1000 && typeof (this.isEmpty) != "undefined") {_RecordType("<7878,7890,290>",(this.isEmpty)); Inst213++; } } catch(e) {}
  if (!this.isEmpty()) {
try { if (Inst214 <= 1000 && typeof (this.root_.traverse_) != "undefined") {_RecordType("<7900,7920,291>",(this.root_.traverse_)); Inst214++; } } catch(e) {}try { if (Inst215 <= 1000 && typeof (this.root_) != "undefined") {_RecordType("<7900,7910,291>",(this.root_)); Inst215++; } } catch(e) {}
    this.root_.traverse_(function (node) {
try { if (Inst216 <= 1000 && typeof (node) != "undefined") {_RecordType("<7931,7935,291>",(node)); Inst216++; } } catch(e) {}
try { if (Inst217 <= 1000 && typeof (result.push) != "undefined") {_RecordType("<7945,7956,292>",(result.push)); Inst217++; } } catch(e) {}try { if (Inst218 <= 1000 && typeof (result) != "undefined") {_RecordType("<7945,7951,292>",(result)); Inst218++; } } catch(e) {}try { if (Inst219 <= 1000 && typeof (node.key) != "undefined") {_RecordType("<7957,7965,292>",(node.key)); Inst219++; } } catch(e) {}try { if (Inst220 <= 1000 && typeof (node) != "undefined") {_RecordType("<7957,7961,292>",(node)); Inst220++; } } catch(e) {}
      result.push(node.key);
    });
  }

try { if (Inst221 <= 1000 && typeof (result) != "undefined") {_RecordType("<7990,7996,296>",(result)); Inst221++; } } catch(e) {}
  return result;
};
try { if (Inst209 <= 1000 && typeof (SplayTree.prototype.exportKeys) != "undefined") {_RecordType("<7804,7834,287>",(SplayTree.prototype.exportKeys)); Inst209++; } } catch(e) {}try { if (Inst210 <= 1000 && typeof (SplayTree.prototype) != "undefined") {_RecordType("<7804,7823,287>",(SplayTree.prototype)); Inst210++; } } catch(e) {}try { if (Inst211 <= 1000 && typeof (SplayTree) != "undefined") {_RecordType("<7804,7813,287>",(SplayTree)); Inst211++; } } catch(e) {}
/**
 * Perform the splay operation for the given key. Moves the node with
 * the given key to the top of the tree.  If no node has the given
 * key, the last node on the search path is moved to the top of the
 * tree. This is the simplified top-down splaying algorithm from:
 * "Self-adjusting Binary Search Trees" by Sleator and Tarjan
 *
 * @param {number} key Key to splay the tree on.
 * @private
 */


SplayTree.prototype.splay_ = function (key) {
try { if (Inst225 <= 1000 && typeof (key) != "undefined") {_RecordType("<8447,8450,310>",(key)); Inst225++; } } catch(e) {}
try { if (Inst226 <= 1000 && typeof (this.isEmpty) != "undefined") {_RecordType("<8460,8472,311>",(this.isEmpty)); Inst226++; } } catch(e) {}
  if (this.isEmpty()) {
    return;
  } // Create a dummy node.  The use of the dummy node is a bit
  // counter-intuitive: The right child of the dummy node will hold
  // the L tree of the algorithm.  The left child of the dummy node
  // will hold the R tree of the algorithm.  Using a dummy node, left
  // and right will always be nodes and we avoid special cases.


  var dummy, left, right;
try { if (Inst227 <= 1000 && typeof (dummy) != "undefined") {_RecordType("<8832,8837,320>",(dummy)); Inst227++; } } catch(e) {}try { if (Inst228 <= 1000 && typeof (left) != "undefined") {_RecordType("<8839,8843,320>",(left)); Inst228++; } } catch(e) {}try { if (Inst229 <= 1000 && typeof (right) != "undefined") {_RecordType("<8845,8850,320>",(right)); Inst229++; } } catch(e) {}
try { if (Inst233 <= 1000 && typeof (SplayTree.Node) != "undefined") {_RecordType("<8881,8895,321>",(SplayTree.Node)); Inst233++; } } catch(e) {}try { if (Inst234 <= 1000 && typeof (SplayTree) != "undefined") {_RecordType("<8881,8890,321>",(SplayTree)); Inst234++; } } catch(e) {}
  dummy = left = right = new SplayTree.Node(null, null);
try { if (Inst230 <= 1000 && typeof (dummy) != "undefined") {_RecordType("<8854,8859,321>",(dummy)); Inst230++; } } catch(e) {}try { if (Inst231 <= 1000 && typeof (left) != "undefined") {_RecordType("<8862,8866,321>",(left)); Inst231++; } } catch(e) {}try { if (Inst232 <= 1000 && typeof (right) != "undefined") {_RecordType("<8869,8874,321>",(right)); Inst232++; } } catch(e) {}
try { if (Inst236 <= 1000 && typeof (this.root_) != "undefined") {_RecordType("<8925,8935,322>",(this.root_)); Inst236++; } } catch(e) {}
  var current = this.root_;
try { if (Inst235 <= 1000 && typeof (current) != "undefined") {_RecordType("<8915,8922,322>",(current)); Inst235++; } } catch(e) {}

  while (true) {
try { if (Inst237 <= 1000 && typeof (key) != "undefined") {_RecordType("<8963,8966,325>",(key)); Inst237++; } } catch(e) {}try { if (Inst238 <= 1000 && typeof (current.key) != "undefined") {_RecordType("<8969,8980,325>",(current.key)); Inst238++; } } catch(e) {}try { if (Inst239 <= 1000 && typeof (current) != "undefined") {_RecordType("<8969,8976,325>",(current)); Inst239++; } } catch(e) {}
    if (key < current.key) {
try { if (Inst240 <= 1000 && typeof (current.left) != "undefined") {_RecordType("<8995,9007,326>",(current.left)); Inst240++; } } catch(e) {}try { if (Inst241 <= 1000 && typeof (current) != "undefined") {_RecordType("<8995,9002,326>",(current)); Inst241++; } } catch(e) {}
      if (!current.left) {
        break;
      }

try { if (Inst242 <= 1000 && typeof (key) != "undefined") {_RecordType("<9045,9048,330>",(key)); Inst242++; } } catch(e) {}try { if (Inst243 <= 1000 && typeof (current.left.key) != "undefined") {_RecordType("<9051,9067,330>",(current.left.key)); Inst243++; } } catch(e) {}try { if (Inst244 <= 1000 && typeof (current.left) != "undefined") {_RecordType("<9051,9063,330>",(current.left)); Inst244++; } } catch(e) {}try { if (Inst245 <= 1000 && typeof (current) != "undefined") {_RecordType("<9051,9058,330>",(current)); Inst245++; } } catch(e) {}
      if (key < current.left.key) {
        // Rotate right.
try { if (Inst247 <= 1000 && typeof (current.left) != "undefined") {_RecordType("<9114,9126,332>",(current.left)); Inst247++; } } catch(e) {}try { if (Inst248 <= 1000 && typeof (current) != "undefined") {_RecordType("<9114,9121,332>",(current)); Inst248++; } } catch(e) {}
        var tmp = current.left;
try { if (Inst246 <= 1000 && typeof (tmp) != "undefined") {_RecordType("<9108,9111,332>",(tmp)); Inst246++; } } catch(e) {}
try { if (Inst251 <= 1000 && typeof (tmp.right) != "undefined") {_RecordType("<9151,9160,333>",(tmp.right)); Inst251++; } } catch(e) {}try { if (Inst252 <= 1000 && typeof (tmp) != "undefined") {_RecordType("<9151,9154,333>",(tmp)); Inst252++; } } catch(e) {}
        current.left = tmp.right;
try { if (Inst249 <= 1000 && typeof (current.left) != "undefined") {_RecordType("<9136,9148,333>",(current.left)); Inst249++; } } catch(e) {}try { if (Inst250 <= 1000 && typeof (current) != "undefined") {_RecordType("<9136,9143,333>",(current)); Inst250++; } } catch(e) {}
try { if (Inst255 <= 1000 && typeof (current) != "undefined") {_RecordType("<9182,9189,334>",(current)); Inst255++; } } catch(e) {}
        tmp.right = current;
try { if (Inst253 <= 1000 && typeof (tmp.right) != "undefined") {_RecordType("<9170,9179,334>",(tmp.right)); Inst253++; } } catch(e) {}try { if (Inst254 <= 1000 && typeof (tmp) != "undefined") {_RecordType("<9170,9173,334>",(tmp)); Inst254++; } } catch(e) {}
try { if (Inst257 <= 1000 && typeof (tmp) != "undefined") {_RecordType("<9209,9212,335>",(tmp)); Inst257++; } } catch(e) {}
        current = tmp;
try { if (Inst256 <= 1000 && typeof (current) != "undefined") {_RecordType("<9199,9206,335>",(current)); Inst256++; } } catch(e) {}

try { if (Inst258 <= 1000 && typeof (current.left) != "undefined") {_RecordType("<9228,9240,337>",(current.left)); Inst258++; } } catch(e) {}try { if (Inst259 <= 1000 && typeof (current) != "undefined") {_RecordType("<9228,9235,337>",(current)); Inst259++; } } catch(e) {}
        if (!current.left) {
          break;
        }
      } // Link right.


try { if (Inst262 <= 1000 && typeof (current) != "undefined") {_RecordType("<9315,9322,343>",(current)); Inst262++; } } catch(e) {}
      right.left = current;
try { if (Inst260 <= 1000 && typeof (right.left) != "undefined") {_RecordType("<9302,9312,343>",(right.left)); Inst260++; } } catch(e) {}try { if (Inst261 <= 1000 && typeof (right) != "undefined") {_RecordType("<9302,9307,343>",(right)); Inst261++; } } catch(e) {}
try { if (Inst264 <= 1000 && typeof (current) != "undefined") {_RecordType("<9338,9345,344>",(current)); Inst264++; } } catch(e) {}
      right = current;
try { if (Inst263 <= 1000 && typeof (right) != "undefined") {_RecordType("<9330,9335,344>",(right)); Inst263++; } } catch(e) {}
try { if (Inst266 <= 1000 && typeof (current.left) != "undefined") {_RecordType("<9363,9375,345>",(current.left)); Inst266++; } } catch(e) {}try { if (Inst267 <= 1000 && typeof (current) != "undefined") {_RecordType("<9363,9370,345>",(current)); Inst267++; } } catch(e) {}
      current = current.left;
try { if (Inst265 <= 1000 && typeof (current) != "undefined") {_RecordType("<9353,9360,345>",(current)); Inst265++; } } catch(e) {}
    } else {
try { if (Inst268 <= 1000 && typeof (key) != "undefined") {_RecordType("<9400,9403,347>",(key)); Inst268++; } } catch(e) {}try { if (Inst269 <= 1000 && typeof (current.key) != "undefined") {_RecordType("<9406,9417,347>",(current.key)); Inst269++; } } catch(e) {}try { if (Inst270 <= 1000 && typeof (current) != "undefined") {_RecordType("<9406,9413,347>",(current)); Inst270++; } } catch(e) {}
      if (key > current.key) {
try { if (Inst271 <= 1000 && typeof (current.right) != "undefined") {_RecordType("<9434,9447,348>",(current.right)); Inst271++; } } catch(e) {}try { if (Inst272 <= 1000 && typeof (current) != "undefined") {_RecordType("<9434,9441,348>",(current)); Inst272++; } } catch(e) {}
        if (!current.right) {
          break;
        }

try { if (Inst273 <= 1000 && typeof (key) != "undefined") {_RecordType("<9491,9494,352>",(key)); Inst273++; } } catch(e) {}try { if (Inst274 <= 1000 && typeof (current.right.key) != "undefined") {_RecordType("<9497,9514,352>",(current.right.key)); Inst274++; } } catch(e) {}try { if (Inst275 <= 1000 && typeof (current.right) != "undefined") {_RecordType("<9497,9510,352>",(current.right)); Inst275++; } } catch(e) {}try { if (Inst276 <= 1000 && typeof (current) != "undefined") {_RecordType("<9497,9504,352>",(current)); Inst276++; } } catch(e) {}
        if (key > current.right.key) {
          // Rotate left.
try { if (Inst278 <= 1000 && typeof (current.right) != "undefined") {_RecordType("<9564,9577,354>",(current.right)); Inst278++; } } catch(e) {}try { if (Inst279 <= 1000 && typeof (current) != "undefined") {_RecordType("<9564,9571,354>",(current)); Inst279++; } } catch(e) {}
          var tmp = current.right;
try { if (Inst277 <= 1000 && typeof (tmp) != "undefined") {_RecordType("<9558,9561,354>",(tmp)); Inst277++; } } catch(e) {}
try { if (Inst282 <= 1000 && typeof (tmp.left) != "undefined") {_RecordType("<9605,9613,355>",(tmp.left)); Inst282++; } } catch(e) {}try { if (Inst283 <= 1000 && typeof (tmp) != "undefined") {_RecordType("<9605,9608,355>",(tmp)); Inst283++; } } catch(e) {}
          current.right = tmp.left;
try { if (Inst280 <= 1000 && typeof (current.right) != "undefined") {_RecordType("<9589,9602,355>",(current.right)); Inst280++; } } catch(e) {}try { if (Inst281 <= 1000 && typeof (current) != "undefined") {_RecordType("<9589,9596,355>",(current)); Inst281++; } } catch(e) {}
try { if (Inst286 <= 1000 && typeof (current) != "undefined") {_RecordType("<9636,9643,356>",(current)); Inst286++; } } catch(e) {}
          tmp.left = current;
try { if (Inst284 <= 1000 && typeof (tmp.left) != "undefined") {_RecordType("<9625,9633,356>",(tmp.left)); Inst284++; } } catch(e) {}try { if (Inst285 <= 1000 && typeof (tmp) != "undefined") {_RecordType("<9625,9628,356>",(tmp)); Inst285++; } } catch(e) {}
try { if (Inst288 <= 1000 && typeof (tmp) != "undefined") {_RecordType("<9665,9668,357>",(tmp)); Inst288++; } } catch(e) {}
          current = tmp;
try { if (Inst287 <= 1000 && typeof (current) != "undefined") {_RecordType("<9655,9662,357>",(current)); Inst287++; } } catch(e) {}

try { if (Inst289 <= 1000 && typeof (current.right) != "undefined") {_RecordType("<9686,9699,359>",(current.right)); Inst289++; } } catch(e) {}try { if (Inst290 <= 1000 && typeof (current) != "undefined") {_RecordType("<9686,9693,359>",(current)); Inst290++; } } catch(e) {}
          if (!current.right) {
            break;
          }
        } // Link left.


try { if (Inst293 <= 1000 && typeof (current) != "undefined") {_RecordType("<9781,9788,365>",(current)); Inst293++; } } catch(e) {}
        left.right = current;
try { if (Inst291 <= 1000 && typeof (left.right) != "undefined") {_RecordType("<9768,9778,365>",(left.right)); Inst291++; } } catch(e) {}try { if (Inst292 <= 1000 && typeof (left) != "undefined") {_RecordType("<9768,9772,365>",(left)); Inst292++; } } catch(e) {}
try { if (Inst295 <= 1000 && typeof (current) != "undefined") {_RecordType("<9805,9812,366>",(current)); Inst295++; } } catch(e) {}
        left = current;
try { if (Inst294 <= 1000 && typeof (left) != "undefined") {_RecordType("<9798,9802,366>",(left)); Inst294++; } } catch(e) {}
try { if (Inst297 <= 1000 && typeof (current.right) != "undefined") {_RecordType("<9832,9845,367>",(current.right)); Inst297++; } } catch(e) {}try { if (Inst298 <= 1000 && typeof (current) != "undefined") {_RecordType("<9832,9839,367>",(current)); Inst298++; } } catch(e) {}
        current = current.right;
try { if (Inst296 <= 1000 && typeof (current) != "undefined") {_RecordType("<9822,9829,367>",(current)); Inst296++; } } catch(e) {}
      } else {
        break;
      }
    }
  } // Assemble.


try { if (Inst301 <= 1000 && typeof (current.left) != "undefined") {_RecordType("<9925,9937,375>",(current.left)); Inst301++; } } catch(e) {}try { if (Inst302 <= 1000 && typeof (current) != "undefined") {_RecordType("<9925,9932,375>",(current)); Inst302++; } } catch(e) {}
  left.right = current.left;
try { if (Inst299 <= 1000 && typeof (left.right) != "undefined") {_RecordType("<9912,9922,375>",(left.right)); Inst299++; } } catch(e) {}try { if (Inst300 <= 1000 && typeof (left) != "undefined") {_RecordType("<9912,9916,375>",(left)); Inst300++; } } catch(e) {}
try { if (Inst305 <= 1000 && typeof (current.right) != "undefined") {_RecordType("<9954,9967,376>",(current.right)); Inst305++; } } catch(e) {}try { if (Inst306 <= 1000 && typeof (current) != "undefined") {_RecordType("<9954,9961,376>",(current)); Inst306++; } } catch(e) {}
  right.left = current.right;
try { if (Inst303 <= 1000 && typeof (right.left) != "undefined") {_RecordType("<9941,9951,376>",(right.left)); Inst303++; } } catch(e) {}try { if (Inst304 <= 1000 && typeof (right) != "undefined") {_RecordType("<9941,9946,376>",(right)); Inst304++; } } catch(e) {}
try { if (Inst309 <= 1000 && typeof (dummy.right) != "undefined") {_RecordType("<9986,9997,377>",(dummy.right)); Inst309++; } } catch(e) {}try { if (Inst310 <= 1000 && typeof (dummy) != "undefined") {_RecordType("<9986,9991,377>",(dummy)); Inst310++; } } catch(e) {}
  current.left = dummy.right;
try { if (Inst307 <= 1000 && typeof (current.left) != "undefined") {_RecordType("<9971,9983,377>",(current.left)); Inst307++; } } catch(e) {}try { if (Inst308 <= 1000 && typeof (current) != "undefined") {_RecordType("<9971,9978,377>",(current)); Inst308++; } } catch(e) {}
try { if (Inst313 <= 1000 && typeof (dummy.left) != "undefined") {_RecordType("<10017,10027,378>",(dummy.left)); Inst313++; } } catch(e) {}try { if (Inst314 <= 1000 && typeof (dummy) != "undefined") {_RecordType("<10017,10022,378>",(dummy)); Inst314++; } } catch(e) {}
  current.right = dummy.left;
try { if (Inst311 <= 1000 && typeof (current.right) != "undefined") {_RecordType("<10001,10014,378>",(current.right)); Inst311++; } } catch(e) {}try { if (Inst312 <= 1000 && typeof (current) != "undefined") {_RecordType("<10001,10008,378>",(current)); Inst312++; } } catch(e) {}
try { if (Inst316 <= 1000 && typeof (current) != "undefined") {_RecordType("<10044,10051,379>",(current)); Inst316++; } } catch(e) {}
  this.root_ = current;
try { if (Inst315 <= 1000 && typeof (this.root_) != "undefined") {_RecordType("<10031,10041,379>",(this.root_)); Inst315++; } } catch(e) {}
};
try { if (Inst222 <= 1000 && typeof (SplayTree.prototype.splay_) != "undefined") {_RecordType("<8408,8434,310>",(SplayTree.prototype.splay_)); Inst222++; } } catch(e) {}try { if (Inst223 <= 1000 && typeof (SplayTree.prototype) != "undefined") {_RecordType("<8408,8427,310>",(SplayTree.prototype)); Inst223++; } } catch(e) {}try { if (Inst224 <= 1000 && typeof (SplayTree) != "undefined") {_RecordType("<8408,8417,310>",(SplayTree)); Inst224++; } } catch(e) {}
/**
 * Constructs a Splay tree node.
 *
 * @param {number} key Key.
 * @param {*} value Value.
 */


SplayTree.Node = function (key, value) {
try { if (Inst319 <= 1000 && typeof (key) != "undefined") {_RecordType("<10184,10187,389>",(key)); Inst319++; } } catch(e) {}try { if (Inst320 <= 1000 && typeof (value) != "undefined") {_RecordType("<10189,10194,389>",(value)); Inst320++; } } catch(e) {}
try { if (Inst322 <= 1000 && typeof (key) != "undefined") {_RecordType("<10211,10214,390>",(key)); Inst322++; } } catch(e) {}
  this.key = key;
try { if (Inst321 <= 1000 && typeof (this.key) != "undefined") {_RecordType("<10200,10208,390>",(this.key)); Inst321++; } } catch(e) {}
try { if (Inst324 <= 1000 && typeof (value) != "undefined") {_RecordType("<10231,10236,391>",(value)); Inst324++; } } catch(e) {}
  this.value = value;
try { if (Inst323 <= 1000 && typeof (this.value) != "undefined") {_RecordType("<10218,10228,391>",(this.value)); Inst323++; } } catch(e) {}
};
try { if (Inst317 <= 1000 && typeof (SplayTree.Node) != "undefined") {_RecordType("<10157,10171,389>",(SplayTree.Node)); Inst317++; } } catch(e) {}try { if (Inst318 <= 1000 && typeof (SplayTree) != "undefined") {_RecordType("<10157,10166,389>",(SplayTree)); Inst318++; } } catch(e) {}
/**
 * @type {SplayTree.Node}
 */


SplayTree.Node.prototype.left = null;
try { if (Inst325 <= 1000 && typeof (SplayTree.Node.prototype.left) != "undefined") {_RecordType("<10277,10306,398>",(SplayTree.Node.prototype.left)); Inst325++; } } catch(e) {}try { if (Inst326 <= 1000 && typeof (SplayTree.Node.prototype) != "undefined") {_RecordType("<10277,10301,398>",(SplayTree.Node.prototype)); Inst326++; } } catch(e) {}try { if (Inst327 <= 1000 && typeof (SplayTree.Node) != "undefined") {_RecordType("<10277,10291,398>",(SplayTree.Node)); Inst327++; } } catch(e) {}try { if (Inst328 <= 1000 && typeof (SplayTree) != "undefined") {_RecordType("<10277,10286,398>",(SplayTree)); Inst328++; } } catch(e) {}
/**
 * @type {SplayTree.Node}
 */

SplayTree.Node.prototype.right = null;
try { if (Inst329 <= 1000 && typeof (SplayTree.Node.prototype.right) != "undefined") {_RecordType("<10350,10380,403>",(SplayTree.Node.prototype.right)); Inst329++; } } catch(e) {}try { if (Inst330 <= 1000 && typeof (SplayTree.Node.prototype) != "undefined") {_RecordType("<10350,10374,403>",(SplayTree.Node.prototype)); Inst330++; } } catch(e) {}try { if (Inst331 <= 1000 && typeof (SplayTree.Node) != "undefined") {_RecordType("<10350,10364,403>",(SplayTree.Node)); Inst331++; } } catch(e) {}try { if (Inst332 <= 1000 && typeof (SplayTree) != "undefined") {_RecordType("<10350,10359,403>",(SplayTree)); Inst332++; } } catch(e) {}
/**
 * Performs an ordered traversal of the subtree starting at
 * this SplayTree.Node.
 *
 * @param {function(SplayTree.Node)} f Visitor function.
 * @private
 */

SplayTree.Node.prototype.traverse_ = function (f) {
try { if (Inst337 <= 1000 && typeof (f) != "undefined") {_RecordType("<10601,10602,412>",(f)); Inst337++; } } catch(e) {}
  var current = this;
try { if (Inst338 <= 1000 && typeof (current) != "undefined") {_RecordType("<10612,10619,413>",(current)); Inst338++; } } catch(e) {}

try { if (Inst339 <= 1000 && typeof (current) != "undefined") {_RecordType("<10638,10645,415>",(current)); Inst339++; } } catch(e) {}
  while (current) {
try { if (Inst341 <= 1000 && typeof (current.left) != "undefined") {_RecordType("<10664,10676,416>",(current.left)); Inst341++; } } catch(e) {}try { if (Inst342 <= 1000 && typeof (current) != "undefined") {_RecordType("<10664,10671,416>",(current)); Inst342++; } } catch(e) {}
    var left = current.left;
try { if (Inst340 <= 1000 && typeof (left) != "undefined") {_RecordType("<10657,10661,416>",(left)); Inst340++; } } catch(e) {}

try { if (Inst343 <= 1000 && typeof (left) != "undefined") {_RecordType("<10687,10691,418>",(left)); Inst343++; } } catch(e) {}
    if (left) {
try { if (Inst344 <= 1000 && typeof (left.traverse_) != "undefined") {_RecordType("<10701,10715,419>",(left.traverse_)); Inst344++; } } catch(e) {}try { if (Inst345 <= 1000 && typeof (left) != "undefined") {_RecordType("<10701,10705,419>",(left)); Inst345++; } } catch(e) {}try { if (Inst346 <= 1000 && typeof (f) != "undefined") {_RecordType("<10716,10717,419>",(f)); Inst346++; } } catch(e) {}
      left.traverse_(f);
    }

try { if (Inst347 <= 1000 && typeof (f) != "undefined") {_RecordType("<10731,10732,422>",(f)); Inst347++; } } catch(e) {}try { if (Inst348 <= 1000 && typeof (current) != "undefined") {_RecordType("<10733,10740,422>",(current)); Inst348++; } } catch(e) {}
    f(current);
try { if (Inst350 <= 1000 && typeof (current.right) != "undefined") {_RecordType("<10757,10770,423>",(current.right)); Inst350++; } } catch(e) {}try { if (Inst351 <= 1000 && typeof (current) != "undefined") {_RecordType("<10757,10764,423>",(current)); Inst351++; } } catch(e) {}
    current = current.right;
try { if (Inst349 <= 1000 && typeof (current) != "undefined") {_RecordType("<10747,10754,423>",(current)); Inst349++; } } catch(e) {}
  }
};
try { if (Inst333 <= 1000 && typeof (SplayTree.Node.prototype.traverse_) != "undefined") {_RecordType("<10554,10588,412>",(SplayTree.Node.prototype.traverse_)); Inst333++; } } catch(e) {}try { if (Inst334 <= 1000 && typeof (SplayTree.Node.prototype) != "undefined") {_RecordType("<10554,10578,412>",(SplayTree.Node.prototype)); Inst334++; } } catch(e) {}try { if (Inst335 <= 1000 && typeof (SplayTree.Node) != "undefined") {_RecordType("<10554,10568,412>",(SplayTree.Node)); Inst335++; } } catch(e) {}try { if (Inst336 <= 1000 && typeof (SplayTree) != "undefined") {_RecordType("<10554,10563,412>",(SplayTree)); Inst336++; } } catch(e) {}

try { if (Inst352 <= 1000 && typeof (SplaySetup) != "undefined") {_RecordType("<10780,10790,427>",(SplaySetup)); Inst352++; } } catch(e) {}
SplaySetup();
try { if (Inst353 <= 1000 && typeof (SplayRun) != "undefined") {_RecordType("<10794,10802,428>",(SplayRun)); Inst353++; } } catch(e) {}
SplayRun();
try { if (Inst354 <= 1000 && typeof (SplayTearDown) != "undefined") {_RecordType("<10806,10819,429>",(SplayTearDown)); Inst354++; } } catch(e) {}
SplayTearDown();

