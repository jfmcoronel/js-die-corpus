var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst1 <= 1000 && typeof (Function) != "undefined") {_RecordType("<18,26,1>",(Function)); Inst1++; } } catch(e) {}
F = class extends Function {};
try { if (Inst0 <= 1000 && typeof (F) != "undefined") {_RecordType("<0,1,1>",(F)); Inst0++; } } catch(e) {}
N = class extends null {};
try { if (Inst2 <= 1000 && typeof (N) != "undefined") {_RecordType("<31,32,2>",(N)); Inst2++; } } catch(e) {}

try { if (Inst3 <= 1000 && typeof (test) != "undefined") {_RecordType("<68,72,4>",(test)); Inst3++; } } catch(e) {}
function test(i) {
try { if (Inst4 <= 1000 && typeof (i) != "undefined") {_RecordType("<73,74,4>",(i)); Inst4++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (F) != "undefined") {_RecordType("<92,93,5>",(F)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<115,116,5>",(i)); Inst7++; } } catch(e) {}
  let f = new F("x", "return x + " + i + ";");
try { if (Inst5 <= 1000 && typeof (f) != "undefined") {_RecordType("<84,85,5>",(f)); Inst5++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (F) != "undefined") {_RecordType("<139,140,6>",(F)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<172,173,6>",(i)); Inst10++; } } catch(e) {}
  let C = new F("x", "this.x = x; this.i = " + i);
try { if (Inst8 <= 1000 && typeof (C) != "undefined") {_RecordType("<131,132,6>",(C)); Inst8++; } } catch(e) {}

try { if (Inst11 <= 1000 && typeof (f) != "undefined") {_RecordType("<185,186,8>",(f)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Function) != "undefined") {_RecordType("<198,206,8>",(Function)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (f) != "undefined") {_RecordType("<210,211,8>",(f)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (F) != "undefined") {_RecordType("<223,224,8>",(F)); Inst14++; } } catch(e) {}
  if (!(f instanceof Function && f instanceof F)) {
    throw "bad chain";
  }

try { if (Inst15 <= 1000 && typeof (f) != "undefined") {_RecordType("<263,264,12>",(f)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<272,273,12>",(i)); Inst16++; } } catch(e) {}
  if (f(1) !== i + 1) {
    throw "function was not called correctly";
  }

try { if (Inst18 <= 1000 && typeof (C) != "undefined") {_RecordType("<347,348,16>",(C)); Inst18++; } } catch(e) {}
  let o = new C("hello");
try { if (Inst17 <= 1000 && typeof (o) != "undefined") {_RecordType("<339,340,16>",(o)); Inst17++; } } catch(e) {}

try { if (Inst19 <= 1000 && typeof (o.x) != "undefined") {_RecordType("<366,369,18>",(o.x)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (o) != "undefined") {_RecordType("<366,367,18>",(o)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (o.i) != "undefined") {_RecordType("<385,388,18>",(o.i)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (o) != "undefined") {_RecordType("<385,386,18>",(o)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<393,394,18>",(i)); Inst23++; } } catch(e) {}
  if (o.x !== "hello" || o.i !== i) {
    throw "function as constructor was not correct";
  }

try { if (Inst25 <= 1000 && typeof (F) != "undefined") {_RecordType("<470,471,22>",(F)); Inst25++; } } catch(e) {}
  let g = new F("x", "y", "return this.foo + x + y");
try { if (Inst24 <= 1000 && typeof (g) != "undefined") {_RecordType("<462,463,22>",(g)); Inst24++; } } catch(e) {}

try { if (Inst26 <= 1000 && typeof (g.call) != "undefined") {_RecordType("<517,523,24>",(g.call)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (g) != "undefined") {_RecordType("<517,518,24>",(g)); Inst27++; } } catch(e) {}
  if (g.call({
    foo: 1
  }, 1, 1) !== 3) {
    throw "function was not .callable";
  }

try { if (Inst29 <= 1000 && typeof (g.bind) != "undefined") {_RecordType("<613,619,30>",(g.bind)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (g) != "undefined") {_RecordType("<613,614,30>",(g)); Inst30++; } } catch(e) {}
  let g2 = g.bind({
    foo: 1
  }, 1);
try { if (Inst28 <= 1000 && typeof (g2) != "undefined") {_RecordType("<608,610,30>",(g2)); Inst28++; } } catch(e) {}

try { if (Inst31 <= 1000 && typeof (g2) != "undefined") {_RecordType("<651,653,34>",(g2)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (F) != "undefined") {_RecordType("<665,666,34>",(F)); Inst32++; } } catch(e) {}
  if (!(g2 instanceof F)) {
    throw "the binding of a subclass should inherit from the bound function's class";
  }

try { if (Inst33 <= 1000 && typeof (g2) != "undefined") {_RecordType("<768,770,38>",(g2)); Inst33++; } } catch(e) {}
  if (g2(1) !== 3) {
    throw "binding didn't work";
  }

try { if (Inst35 <= 1000 && typeof (C.bind) != "undefined") {_RecordType("<835,841,42>",(C.bind)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (C) != "undefined") {_RecordType("<835,836,42>",(C)); Inst36++; } } catch(e) {}
  let bound = C.bind(null);
try { if (Inst34 <= 1000 && typeof (bound) != "undefined") {_RecordType("<827,832,42>",(bound)); Inst34++; } } catch(e) {}

try { if (Inst37 <= 1000 && typeof (bound.__proto__) != "undefined") {_RecordType("<856,871,44>",(bound.__proto__)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (bound) != "undefined") {_RecordType("<856,861,44>",(bound)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (C.__proto__) != "undefined") {_RecordType("<876,887,44>",(C.__proto__)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (C) != "undefined") {_RecordType("<876,877,44>",(C)); Inst40++; } } catch(e) {}
  if (bound.__proto__ !== C.__proto__) {
    throw "binding with null as prototype didn't work";
  }
}

try { if (Inst41 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<954,962,49>",(noInline)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (test) != "undefined") {_RecordType("<963,967,49>",(test)); Inst42++; } } catch(e) {}
noInline(test);

for (i = 0; i < 10000; i++) {
try { if (Inst43 <= 1000 && typeof (i) != "undefined") {_RecordType("<976,977,51>",(i)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (i) != "undefined") {_RecordType("<983,984,51>",(i)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (i) != "undefined") {_RecordType("<994,995,51>",(i)); Inst45++; } } catch(e) {}
try { if (Inst46 <= 1000 && typeof (test) != "undefined") {_RecordType("<1003,1007,52>",(test)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (i) != "undefined") {_RecordType("<1008,1009,52>",(i)); Inst47++; } } catch(e) {}
  test(i);
}

