var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//@ runNoJIT
try { if (Inst0 <= 1000 && typeof (stackTraceDescription) != "undefined") {_RecordType("<22,43,2>",(stackTraceDescription)); Inst0++; } } catch(e) {}
function stackTraceDescription(stackFrame) {
try { if (Inst1 <= 1000 && typeof (stackFrame) != "undefined") {_RecordType("<44,54,2>",(stackFrame)); Inst1++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (stackFrame.indexOf) != "undefined") {_RecordType("<76,94,3>",(stackFrame.indexOf)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (stackFrame) != "undefined") {_RecordType("<76,86,3>",(stackFrame)); Inst4++; } } catch(e) {}
  let indexOfAt = stackFrame.indexOf('@');
try { if (Inst2 <= 1000 && typeof (indexOfAt) != "undefined") {_RecordType("<64,73,3>",(indexOfAt)); Inst2++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (stackFrame.lastIndexOf) != "undefined") {_RecordType("<126,148,4>",(stackFrame.lastIndexOf)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (stackFrame) != "undefined") {_RecordType("<126,136,4>",(stackFrame)); Inst7++; } } catch(e) {}
  let indexOfLastSlash = stackFrame.lastIndexOf('/');
try { if (Inst5 <= 1000 && typeof (indexOfLastSlash) != "undefined") {_RecordType("<107,123,4>",(indexOfLastSlash)); Inst5++; } } catch(e) {}

try { if (Inst8 <= 1000 && typeof (indexOfLastSlash) != "undefined") {_RecordType("<162,178,6>",(indexOfLastSlash)); Inst8++; } } catch(e) {}
  if (indexOfLastSlash == -1) {
try { if (Inst10 <= 1000 && typeof (indexOfAt) != "undefined") {_RecordType("<211,220,7>",(indexOfAt)); Inst10++; } } catch(e) {}
    indexOfLastSlash = indexOfAt;
try { if (Inst9 <= 1000 && typeof (indexOfLastSlash) != "undefined") {_RecordType("<192,208,7>",(indexOfLastSlash)); Inst9++; } } catch(e) {}
  }

try { if (Inst12 <= 1000 && typeof (stackFrame.substring) != "undefined") {_RecordType("<248,268,10>",(stackFrame.substring)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (stackFrame) != "undefined") {_RecordType("<248,258,10>",(stackFrame)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (indexOfAt) != "undefined") {_RecordType("<272,281,10>",(indexOfAt)); Inst14++; } } catch(e) {}
  let functionName = stackFrame.substring(0, indexOfAt);
try { if (Inst11 <= 1000 && typeof (functionName) != "undefined") {_RecordType("<233,245,10>",(functionName)); Inst11++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (stackFrame.substring) != "undefined") {_RecordType("<301,321,11>",(stackFrame.substring)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (stackFrame) != "undefined") {_RecordType("<301,311,11>",(stackFrame)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (indexOfLastSlash) != "undefined") {_RecordType("<322,338,11>",(indexOfLastSlash)); Inst18++; } } catch(e) {}
  let fileName = stackFrame.substring(indexOfLastSlash + 1);
try { if (Inst15 <= 1000 && typeof (fileName) != "undefined") {_RecordType("<290,298,11>",(fileName)); Inst15++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (functionName) != "undefined") {_RecordType("<354,366,12>",(functionName)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (fileName) != "undefined") {_RecordType("<378,386,12>",(fileName)); Inst20++; } } catch(e) {}
  return functionName + " at " + fileName;
}

try { if (Inst21 <= 1000 && typeof (foo) != "undefined") {_RecordType("<400,403,15>",(foo)); Inst21++; } } catch(e) {}
function foo(j) {
try { if (Inst22 <= 1000 && typeof (j) != "undefined") {_RecordType("<404,405,15>",(j)); Inst22++; } } catch(e) {}
  for (let i = 0; i < 20; i++) {
try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<420,421,16>",(i)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<427,428,16>",(i)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<435,436,16>",(i)); Inst25++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (i) != "undefined") {_RecordType("<446,447,17>",(i)); Inst26++; } } catch(e) {}
    i--;
try { if (Inst27 <= 1000 && typeof (i) != "undefined") {_RecordType("<455,456,18>",(i)); Inst27++; } } catch(e) {}
    i++;
  }

try { if (Inst28 <= 1000 && typeof (foo) != "undefined") {_RecordType("<467,470,21>",(foo)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (j) != "undefined") {_RecordType("<471,472,21>",(j)); Inst29++; } } catch(e) {}
  foo(j + 1);
}

let error = null;
try { if (Inst30 <= 1000 && typeof (error) != "undefined") {_RecordType("<486,491,24>",(error)); Inst30++; } } catch(e) {}

try { if (Inst32 <= 1000 && typeof (e) != "undefined") {_RecordType("<527,528,28>",(e)); Inst32++; } } catch(e) {}
try {
try { if (Inst31 <= 1000 && typeof (foo) != "undefined") {_RecordType("<509,512,27>",(foo)); Inst31++; } } catch(e) {}
  foo(10);
} catch (e) {
  ;
}

try { if (Inst34 <= 1000 && typeof (error.stack.split("\n")[0]) != "undefined") {_RecordType("<551,577,32>",(error.stack.split("\n")[0])); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (error.stack.split) != "undefined") {_RecordType("<551,568,32>",(error.stack.split)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (error.stack) != "undefined") {_RecordType("<551,562,32>",(error.stack)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (error) != "undefined") {_RecordType("<551,556,32>",(error)); Inst37++; } } catch(e) {}
let frame = error.stack.split("\n")[0];
try { if (Inst33 <= 1000 && typeof (frame) != "undefined") {_RecordType("<543,548,32>",(frame)); Inst33++; } } catch(e) {}
try { if (Inst39 <= 1000 && typeof (stackTraceDescription) != "undefined") {_RecordType("<597,618,33>",(stackTraceDescription)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (frame) != "undefined") {_RecordType("<619,624,33>",(frame)); Inst40++; } } catch(e) {}
let description = stackTraceDescription(frame);
try { if (Inst38 <= 1000 && typeof (description) != "undefined") {_RecordType("<583,594,33>",(description)); Inst38++; } } catch(e) {}

try { if (Inst41 <= 1000 && typeof (description.indexOf) != "undefined") {_RecordType("<632,651,35>",(description.indexOf)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (description) != "undefined") {_RecordType("<632,643,35>",(description)); Inst42++; } } catch(e) {}
if (description.indexOf(".js:18") < 0) {
  ;
}

