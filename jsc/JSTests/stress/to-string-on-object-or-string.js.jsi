var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (Foo) != "undefined") {_RecordType("<9,12,1>",(Foo)); Inst0++; } } catch(e) {}
function Foo() {
  ;
}

Foo.prototype.toString = function () {
  return "hello";
};
try { if (Inst1 <= 1000 && typeof (Foo.prototype.toString) != "undefined") {_RecordType("<24,46,5>",(Foo.prototype.toString)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Foo.prototype) != "undefined") {_RecordType("<24,37,5>",(Foo.prototype)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Foo) != "undefined") {_RecordType("<24,27,5>",(Foo)); Inst3++; } } catch(e) {}

try { if (Inst4 <= 1000 && typeof (foo) != "undefined") {_RecordType("<94,97,9>",(foo)); Inst4++; } } catch(e) {}
function foo(o) {
try { if (Inst5 <= 1000 && typeof (o) != "undefined") {_RecordType("<98,99,9>",(o)); Inst5++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (String) != "undefined") {_RecordType("<112,118,10>",(String)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (o) != "undefined") {_RecordType("<119,120,10>",(o)); Inst7++; } } catch(e) {}
  return String(o);
}

try { if (Inst8 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<126,134,13>",(noInline)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (foo) != "undefined") {_RecordType("<135,138,13>",(foo)); Inst9++; } } catch(e) {}
noInline(foo);

for (var i = 0; i < 100000; ++i) {
try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<151,152,15>",(i)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<158,159,15>",(i)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<172,173,15>",(i)); Inst12++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (foo) != "undefined") {_RecordType("<192,195,16>",(foo)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Foo) != "undefined") {_RecordType("<200,203,16>",(Foo)); Inst15++; } } catch(e) {}
  var result = foo(new Foo());
try { if (Inst13 <= 1000 && typeof (result) != "undefined") {_RecordType("<183,189,16>",(result)); Inst13++; } } catch(e) {}

try { if (Inst16 <= 1000 && typeof (result) != "undefined") {_RecordType("<222,228,18>",(result)); Inst16++; } } catch(e) {}
  if (typeof result != "string") {
try { if (Inst17 <= 1000 && typeof (describe) != "undefined") {_RecordType("<248,256,19>",(describe)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (result) != "undefined") {_RecordType("<257,263,19>",(result)); Inst18++; } } catch(e) {}
    describe(result);
    throw "Error: result isn't a string";
  }

try { if (Inst19 <= 1000 && typeof (result) != "undefined") {_RecordType("<319,325,23>",(result)); Inst19++; } } catch(e) {}
  if (result != "hello") {
try { if (Inst20 <= 1000 && typeof (result) != "undefined") {_RecordType("<374,380,24>",(result)); Inst20++; } } catch(e) {}
    throw "Error: bad result: " + result;
  }

try { if (Inst22 <= 1000 && typeof (foo) != "undefined") {_RecordType("<398,401,27>",(foo)); Inst22++; } } catch(e) {}
  result = foo("world");
try { if (Inst21 <= 1000 && typeof (result) != "undefined") {_RecordType("<389,395,27>",(result)); Inst21++; } } catch(e) {}

try { if (Inst23 <= 1000 && typeof (result) != "undefined") {_RecordType("<426,432,29>",(result)); Inst23++; } } catch(e) {}
  if (typeof result != "string") {
try { if (Inst24 <= 1000 && typeof (describe) != "undefined") {_RecordType("<452,460,30>",(describe)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (result) != "undefined") {_RecordType("<461,467,30>",(result)); Inst25++; } } catch(e) {}
    describe(result);
    throw "Error: result isn't a string";
  }

try { if (Inst26 <= 1000 && typeof (result) != "undefined") {_RecordType("<523,529,34>",(result)); Inst26++; } } catch(e) {}
  if (result != "world") {
try { if (Inst27 <= 1000 && typeof (result) != "undefined") {_RecordType("<578,584,35>",(result)); Inst27++; } } catch(e) {}
    throw "Error: bad result: " + result;
  }
}

