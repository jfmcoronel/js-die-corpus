var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (foo) != "undefined") {_RecordType("<9,12,1>",(foo)); Inst0++; } } catch(e) {}
function foo() {
try { if (Inst1 <= 1000 && typeof (arguments.length) != "undefined") {_RecordType("<26,42,2>",(arguments.length)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<26,35,2>",(arguments)); Inst2++; } } catch(e) {}
  return arguments.length;
}

var o = {};
try { if (Inst3 <= 1000 && typeof (o) != "undefined") {_RecordType("<51,52,5>",(o)); Inst3++; } } catch(e) {}
o[0] = 42;
try { if (Inst4 <= 1000 && typeof (o[0]) != "undefined") {_RecordType("<59,63,6>",(o[0])); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (o) != "undefined") {_RecordType("<59,60,6>",(o)); Inst5++; } } catch(e) {}
var callCount = 0;
try { if (Inst6 <= 1000 && typeof (callCount) != "undefined") {_RecordType("<74,83,7>",(callCount)); Inst6++; } } catch(e) {}

try { if (Inst7 <= 1000 && typeof (o.__defineGetter__) != "undefined") {_RecordType("<90,108,9>",(o.__defineGetter__)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (o) != "undefined") {_RecordType("<90,91,9>",(o)); Inst8++; } } catch(e) {}
o.__defineGetter__("length", function () {
try { if (Inst9 <= 1000 && typeof (callCount) != "undefined") {_RecordType("<135,144,10>",(callCount)); Inst9++; } } catch(e) {}
  callCount++;
  return 1;
});

try { if (Inst10 <= 1000 && typeof (bar) != "undefined") {_RecordType("<174,177,14>",(bar)); Inst10++; } } catch(e) {}
function bar() {
  callCount = 0;
try { if (Inst11 <= 1000 && typeof (callCount) != "undefined") {_RecordType("<184,193,15>",(callCount)); Inst11++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (foo.apply) != "undefined") {_RecordType("<214,223,16>",(foo.apply)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (foo) != "undefined") {_RecordType("<214,217,16>",(foo)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (o) != "undefined") {_RecordType("<230,231,16>",(o)); Inst15++; } } catch(e) {}
  var result = foo.apply(this, o);
try { if (Inst12 <= 1000 && typeof (result) != "undefined") {_RecordType("<205,211,16>",(result)); Inst12++; } } catch(e) {}

try { if (Inst16 <= 1000 && typeof (result) != "undefined") {_RecordType("<241,247,18>",(result)); Inst16++; } } catch(e) {}
  if (result != 1) {
try { if (Inst17 <= 1000 && typeof (result) != "undefined") {_RecordType("<290,296,19>",(result)); Inst17++; } } catch(e) {}
    throw "Error: bad result: " + result;
  }

try { if (Inst18 <= 1000 && typeof (callCount) != "undefined") {_RecordType("<309,318,22>",(callCount)); Inst18++; } } catch(e) {}
  if (callCount != 1) {
try { if (Inst19 <= 1000 && typeof (callCount) != "undefined") {_RecordType("<365,374,23>",(callCount)); Inst19++; } } catch(e) {}
    throw "Error: bad call count: " + callCount;
  }
}

try { if (Inst20 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<383,391,27>",(noInline)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (foo) != "undefined") {_RecordType("<392,395,27>",(foo)); Inst21++; } } catch(e) {}
noInline(foo);
try { if (Inst22 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<398,406,28>",(noInline)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (bar) != "undefined") {_RecordType("<407,410,28>",(bar)); Inst23++; } } catch(e) {}
noInline(bar);

for (var i = 0; i < 10000; ++i) {
try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<423,424,30>",(i)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<430,431,30>",(i)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (i) != "undefined") {_RecordType("<443,444,30>",(i)); Inst26++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (bar) != "undefined") {_RecordType("<450,453,31>",(bar)); Inst27++; } } catch(e) {}
  bar();
}

