var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (bar) != "undefined") {_RecordType("<9,12,1>",(bar)); Inst0++; } } catch(e) {}
function bar() {
try { if (Inst1 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<26,35,2>",(arguments)); Inst1++; } } catch(e) {}
  return arguments;
}

try { if (Inst2 <= 1000 && typeof (foo) != "undefined") {_RecordType("<49,52,5>",(foo)); Inst2++; } } catch(e) {}
function foo() {
try { if (Inst4 <= 1000 && typeof (bar) != "undefined") {_RecordType("<67,70,6>",(bar)); Inst4++; } } catch(e) {}
  var a = bar(1, 2, 3);
try { if (Inst3 <= 1000 && typeof (a) != "undefined") {_RecordType("<63,64,6>",(a)); Inst3++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (bar) != "undefined") {_RecordType("<91,94,7>",(bar)); Inst6++; } } catch(e) {}
  var b = bar(4, 5, 6);
try { if (Inst5 <= 1000 && typeof (b) != "undefined") {_RecordType("<87,88,7>",(b)); Inst5++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (a[0]) != "undefined") {_RecordType("<115,119,8>",(a[0])); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (a) != "undefined") {_RecordType("<115,116,8>",(a)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (a[1]) != "undefined") {_RecordType("<129,133,8>",(a[1])); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (a) != "undefined") {_RecordType("<129,130,8>",(a)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (a[2]) != "undefined") {_RecordType("<143,147,8>",(a[2])); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (a) != "undefined") {_RecordType("<143,144,8>",(a)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (b[0]) != "undefined") {_RecordType("<157,161,8>",(b[0])); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (b) != "undefined") {_RecordType("<157,158,8>",(b)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (b[1]) != "undefined") {_RecordType("<171,175,8>",(b[1])); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (b) != "undefined") {_RecordType("<171,172,8>",(b)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (b[2]) != "undefined") {_RecordType("<185,189,8>",(b[2])); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (b) != "undefined") {_RecordType("<185,186,8>",(b)); Inst18++; } } catch(e) {}
  return (a[0] << 0) + (a[1] << 1) + (a[2] << 2) + (b[0] << 3) + (b[1] << 4) + (b[2] << 5);
}

try { if (Inst19 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<200,208,11>",(noInline)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (foo) != "undefined") {_RecordType("<209,212,11>",(foo)); Inst20++; } } catch(e) {}
noInline(foo);

for (var i = 0; i < 20000; ++i) {
try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<225,226,13>",(i)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<232,233,13>",(i)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<245,246,13>",(i)); Inst23++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (foo) != "undefined") {_RecordType("<265,268,14>",(foo)); Inst25++; } } catch(e) {}
  var result = foo();
try { if (Inst24 <= 1000 && typeof (result) != "undefined") {_RecordType("<256,262,14>",(result)); Inst24++; } } catch(e) {}

try { if (Inst26 <= 1000 && typeof (result) != "undefined") {_RecordType("<279,285,16>",(result)); Inst26++; } } catch(e) {}
  if (result != (1 << 0) + (2 << 1) + (3 << 2) + (4 << 3) + (5 << 4) + (6 << 5)) {
try { if (Inst27 <= 1000 && typeof (result) != "undefined") {_RecordType("<390,396,17>",(result)); Inst27++; } } catch(e) {}
    throw "Error: bad result: " + result;
  }
}

