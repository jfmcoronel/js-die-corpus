var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (shouldThrow) != "undefined") {_RecordType("<9,20,1>",(shouldThrow)); Inst0++; } } catch(e) {}
function shouldThrow(func, errorMessage) {
try { if (Inst1 <= 1000 && typeof (func) != "undefined") {_RecordType("<21,25,1>",(func)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (errorMessage) != "undefined") {_RecordType("<27,39,1>",(errorMessage)); Inst2++; } } catch(e) {}
  var errorThrown = false;
try { if (Inst3 <= 1000 && typeof (errorThrown) != "undefined") {_RecordType("<49,60,2>",(errorThrown)); Inst3++; } } catch(e) {}
  var error = null;
try { if (Inst4 <= 1000 && typeof (error) != "undefined") {_RecordType("<76,81,3>",(error)); Inst4++; } } catch(e) {}

try { if (Inst6 <= 1000 && typeof (e) != "undefined") {_RecordType("<122,123,7>",(e)); Inst6++; } } catch(e) {}
  try {
try { if (Inst5 <= 1000 && typeof (func) != "undefined") {_RecordType("<103,107,6>",(func)); Inst5++; } } catch(e) {}
    func();
  } catch (e) {
    errorThrown = true;
try { if (Inst7 <= 1000 && typeof (errorThrown) != "undefined") {_RecordType("<131,142,8>",(errorThrown)); Inst7++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (e) != "undefined") {_RecordType("<163,164,9>",(e)); Inst9++; } } catch(e) {}
    error = e;
try { if (Inst8 <= 1000 && typeof (error) != "undefined") {_RecordType("<155,160,9>",(error)); Inst8++; } } catch(e) {}
  }
}

try { if (Inst10 <= 1000 && typeof (gen) != "undefined") {_RecordType("<183,186,13>",(gen)); Inst10++; } } catch(e) {}
function* gen() {
  ;
}

try { if (Inst11 <= 1000 && typeof (shouldThrow) != "undefined") {_RecordType("<198,209,17>",(shouldThrow)); Inst11++; } } catch(e) {}
shouldThrow(() => {
try { if (Inst12 <= 1000 && typeof (gen) != "undefined") {_RecordType("<224,227,18>",(gen)); Inst12++; } } catch(e) {}
  new gen();
}, `TypeError: function is not a constructor (evaluating 'new gen()')`);

class A {
  static *staticGen() {
    ;
  }

  *gen() {
    ;
  }

}
try { if (Inst13 <= 1000 && typeof (A) != "undefined") {_RecordType("<311,312,21>",(A)); Inst13++; } } catch(e) {}

;
try { if (Inst14 <= 1000 && typeof (shouldThrow) != "undefined") {_RecordType("<377,388,33>",(shouldThrow)); Inst14++; } } catch(e) {}
shouldThrow(() => {
try { if (Inst16 <= 1000 && typeof (A) != "undefined") {_RecordType("<411,412,34>",(A)); Inst16++; } } catch(e) {}
  let a = new A();
try { if (Inst15 <= 1000 && typeof (a) != "undefined") {_RecordType("<403,404,34>",(a)); Inst15++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (a.gen) != "undefined") {_RecordType("<422,427,35>",(a.gen)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (a) != "undefined") {_RecordType("<422,423,35>",(a)); Inst18++; } } catch(e) {}
  new a.gen();
}, `TypeError: function is not a constructor (evaluating 'new a.gen()')`);
try { if (Inst19 <= 1000 && typeof (shouldThrow) != "undefined") {_RecordType("<506,517,37>",(shouldThrow)); Inst19++; } } catch(e) {}
shouldThrow(() => {
try { if (Inst20 <= 1000 && typeof (A.staticGen) != "undefined") {_RecordType("<532,543,38>",(A.staticGen)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (A) != "undefined") {_RecordType("<532,533,38>",(A)); Inst21++; } } catch(e) {}
  new A.staticGen();
}, `TypeError: function is not a constructor (evaluating 'new A.staticGen()')`);

