var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//@ runDefault("--jitPolicyScale=0")
try { if (Inst0 <= 1000 && typeof (makeTmp) != "undefined") {_RecordType("<46,53,2>",(makeTmp)); Inst0++; } } catch(e) {}
function makeTmp() {
  let tmp = {
    a: 1
  };
try { if (Inst1 <= 1000 && typeof (tmp) != "undefined") {_RecordType("<64,67,3>",(tmp)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (gc) != "undefined") {_RecordType("<88,90,6>",(gc)); Inst2++; } } catch(e) {}
  gc();
  tmp.__proto__ = {};
try { if (Inst3 <= 1000 && typeof (tmp.__proto__) != "undefined") {_RecordType("<96,109,7>",(tmp.__proto__)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (tmp) != "undefined") {_RecordType("<96,99,7>",(tmp)); Inst4++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (tmp) != "undefined") {_RecordType("<125,128,8>",(tmp)); Inst5++; } } catch(e) {}
  return tmp;
}

try { if (Inst6 <= 1000 && typeof (foo) != "undefined") {_RecordType("<142,145,11>",(foo)); Inst6++; } } catch(e) {}
function foo(tmp, obj) {
try { if (Inst7 <= 1000 && typeof (tmp) != "undefined") {_RecordType("<146,149,11>",(tmp)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (obj) != "undefined") {_RecordType("<151,154,11>",(obj)); Inst8++; } } catch(e) {}
  for (let k in tmp) {
try { if (Inst9 <= 1000 && typeof (k) != "undefined") {_RecordType("<169,170,12>",(k)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (tmp) != "undefined") {_RecordType("<174,177,12>",(tmp)); Inst10++; } } catch(e) {}
    tmp.__proto__ = {};
try { if (Inst11 <= 1000 && typeof (tmp.__proto__) != "undefined") {_RecordType("<185,198,13>",(tmp.__proto__)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (tmp) != "undefined") {_RecordType("<185,188,13>",(tmp)); Inst12++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (gc) != "undefined") {_RecordType("<209,211,14>",(gc)); Inst13++; } } catch(e) {}
    gc();
    obj.__proto__ = {};
try { if (Inst14 <= 1000 && typeof (obj.__proto__) != "undefined") {_RecordType("<219,232,15>",(obj.__proto__)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (obj) != "undefined") {_RecordType("<219,222,15>",(obj)); Inst15++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (obj[k]) != "undefined") {_RecordType("<256,262,16>",(obj[k])); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (obj) != "undefined") {_RecordType("<256,259,16>",(obj)); Inst18++; } } catch(e) {}
    var result = obj[k];
try { if (Inst16 <= 1000 && typeof (result) != "undefined") {_RecordType("<247,253,16>",(result)); Inst16++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (result) != "undefined") {_RecordType("<275,281,17>",(result)); Inst19++; } } catch(e) {}
    return result;
  }
}

try { if (Inst20 <= 1000 && typeof (foo) != "undefined") {_RecordType("<290,293,21>",(foo)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (makeTmp) != "undefined") {_RecordType("<294,301,21>",(makeTmp)); Inst21++; } } catch(e) {}
foo(makeTmp(), {});
try { if (Inst23 <= 1000 && typeof (Uint32Array) != "undefined") {_RecordType("<327,338,22>",(Uint32Array)); Inst23++; } } catch(e) {}
let memory = new Uint32Array(100);
try { if (Inst22 <= 1000 && typeof (memory) != "undefined") {_RecordType("<314,320,22>",(memory)); Inst22++; } } catch(e) {}
memory[0] = 0x1234;
try { if (Inst24 <= 1000 && typeof (memory[0]) != "undefined") {_RecordType("<345,354,23>",(memory[0])); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (memory) != "undefined") {_RecordType("<345,351,23>",(memory)); Inst25++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (foo) != "undefined") {_RecordType("<381,384,24>",(foo)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (makeTmp) != "undefined") {_RecordType("<385,392,24>",(makeTmp)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (memory) != "undefined") {_RecordType("<396,402,24>",(memory)); Inst29++; } } catch(e) {}
let fooResult = foo(makeTmp(), memory);
try { if (Inst26 <= 1000 && typeof (fooResult) != "undefined") {_RecordType("<369,378,24>",(fooResult)); Inst26++; } } catch(e) {}

