var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst1 <= 1000 && typeof (Object.prototype.toString) != "undefined") {_RecordType("<11,36,1>",(Object.prototype.toString)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<11,27,1>",(Object.prototype)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Object) != "undefined") {_RecordType("<11,17,1>",(Object)); Inst3++; } } catch(e) {}
expected = Object.prototype.toString;
try { if (Inst0 <= 1000 && typeof (expected) != "undefined") {_RecordType("<0,8,1>",(expected)); Inst0++; } } catch(e) {}
foo = {
  foo: 1,
  bar: 20
};
try { if (Inst4 <= 1000 && typeof (foo) != "undefined") {_RecordType("<38,41,2>",(foo)); Inst4++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (foo.bar) != "undefined") {_RecordType("<76,83,6>",(foo.bar)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (foo) != "undefined") {_RecordType("<76,79,6>",(foo)); Inst6++; } } catch(e) {}
delete foo.bar;

try { if (Inst7 <= 1000 && typeof (test) != "undefined") {_RecordType("<95,99,8>",(test)); Inst7++; } } catch(e) {}
function test() {
try { if (Inst9 <= 1000 && typeof (foo.toString) != "undefined") {_RecordType("<121,133,9>",(foo.toString)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (foo) != "undefined") {_RecordType("<121,124,9>",(foo)); Inst10++; } } catch(e) {}
  let toString = foo.toString;
try { if (Inst8 <= 1000 && typeof (toString) != "undefined") {_RecordType("<110,118,9>",(toString)); Inst8++; } } catch(e) {}

try { if (Inst11 <= 1000 && typeof (toString) != "undefined") {_RecordType("<142,150,11>",(toString)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (expected) != "undefined") {_RecordType("<155,163,11>",(expected)); Inst12++; } } catch(e) {}
  if (toString !== expected) {
try { if (Inst13 <= 1000 && typeof (Error) != "undefined") {_RecordType("<181,186,12>",(Error)); Inst13++; } } catch(e) {}
    throw new Error();
  }
}

for (i = 0; i < 10; i++) {
try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<202,203,16>",(i)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<209,210,16>",(i)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<217,218,16>",(i)); Inst16++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (test) != "undefined") {_RecordType("<226,230,17>",(test)); Inst17++; } } catch(e) {}
  test();
}

foo.toString = 100;
try { if (Inst18 <= 1000 && typeof (foo.toString) != "undefined") {_RecordType("<237,249,20>",(foo.toString)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (foo) != "undefined") {_RecordType("<237,240,20>",(foo)); Inst19++; } } catch(e) {}
expected = 100;
try { if (Inst20 <= 1000 && typeof (expected) != "undefined") {_RecordType("<257,265,21>",(expected)); Inst20++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (test) != "undefined") {_RecordType("<273,277,22>",(test)); Inst21++; } } catch(e) {}
test();

