var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (assert) != "undefined") {_RecordType("<9,15,1>",(assert)); Inst0++; } } catch(e) {}
function assert(b) {
try { if (Inst1 <= 1000 && typeof (b) != "undefined") {_RecordType("<16,17,1>",(b)); Inst1++; } } catch(e) {}
  ;
}

try { if (Inst2 <= 1000 && typeof (test1) != "undefined") {_RecordType("<37,42,5>",(test1)); Inst2++; } } catch(e) {}
function test1() {
try { if (Inst4 <= 1000 && typeof (function () {
    ;
  }.bind) != "undefined") {_RecordType("<69,97,6>",(function () {
    ;
  }.bind)); Inst4++; } } catch(e) {}
  let boundFunction = function () {
    ;
  }.bind();
try { if (Inst3 <= 1000 && typeof (boundFunction) != "undefined") {_RecordType("<53,66,6>",(boundFunction)); Inst3++; } } catch(e) {}

try { if (Inst5 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<104,125,10>",(Object.defineProperty)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Object) != "undefined") {_RecordType("<104,110,10>",(Object)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (boundFunction) != "undefined") {_RecordType("<126,139,10>",(boundFunction)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (get) != "undefined") {_RecordType("<160,163,11>",(get)); Inst8++; } } catch(e) {}
  Object.defineProperty(boundFunction, "prototype", {
    get() {
      ;
    }

  });
  let threw = false;
try { if (Inst9 <= 1000 && typeof (threw) != "undefined") {_RecordType("<195,200,16>",(threw)); Inst9++; } } catch(e) {}

try { if (Inst13 <= 1000 && typeof (e) != "undefined") {_RecordType("<301,302,22>",(e)); Inst13++; } } catch(e) {}
  try {
try { if (Inst10 <= 1000 && typeof (Reflect.construct) != "undefined") {_RecordType("<223,240,19>",(Reflect.construct)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<223,230,19>",(Reflect)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (boundFunction) != "undefined") {_RecordType("<274,287,21>",(boundFunction)); Inst12++; } } catch(e) {}
    Reflect.construct(function () {
      ;
    }, [], boundFunction);
  } catch (e) {
    ;
  }
}

try { if (Inst14 <= 1000 && typeof (test1) != "undefined") {_RecordType("<319,324,27>",(test1)); Inst14++; } } catch(e) {}
test1();

try { if (Inst15 <= 1000 && typeof (test2) != "undefined") {_RecordType("<338,343,29>",(test2)); Inst15++; } } catch(e) {}
function test2() {
try { if (Inst17 <= 1000 && typeof (function () {
    ;
  }.bind) != "undefined") {_RecordType("<370,398,30>",(function () {
    ;
  }.bind)); Inst17++; } } catch(e) {}
  let boundFunction = function () {
    ;
  }.bind();
try { if (Inst16 <= 1000 && typeof (boundFunction) != "undefined") {_RecordType("<354,367,30>",(boundFunction)); Inst16++; } } catch(e) {}

  let counter = 0;
try { if (Inst18 <= 1000 && typeof (counter) != "undefined") {_RecordType("<409,416,34>",(counter)); Inst18++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<424,445,35>",(Object.defineProperty)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (Object) != "undefined") {_RecordType("<424,430,35>",(Object)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (boundFunction) != "undefined") {_RecordType("<446,459,35>",(boundFunction)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (get) != "undefined") {_RecordType("<480,483,36>",(get)); Inst22++; } } catch(e) {}
  Object.defineProperty(boundFunction, "prototype", {
    get() {
try { if (Inst23 <= 1000 && typeof (counter) != "undefined") {_RecordType("<496,503,37>",(counter)); Inst23++; } } catch(e) {}
      ++counter;
      return {};
    }

  });
  const iters = 1000;
try { if (Inst24 <= 1000 && typeof (iters) != "undefined") {_RecordType("<543,548,42>",(iters)); Inst24++; } } catch(e) {}

  for (let i = 0; i < iters; ++i) {
try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<569,570,44>",(i)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (i) != "undefined") {_RecordType("<576,577,44>",(i)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (iters) != "undefined") {_RecordType("<580,585,44>",(iters)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (i) != "undefined") {_RecordType("<589,590,44>",(i)); Inst28++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (Reflect.construct) != "undefined") {_RecordType("<598,615,45>",(Reflect.construct)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<598,605,45>",(Reflect)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (boundFunction) != "undefined") {_RecordType("<649,662,47>",(boundFunction)); Inst31++; } } catch(e) {}
    Reflect.construct(function () {
      ;
    }, [], boundFunction);
  }

try { if (Inst32 <= 1000 && typeof (counter) != "undefined") {_RecordType("<672,679,50>",(counter)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (iters) != "undefined") {_RecordType("<684,689,50>",(iters)); Inst33++; } } catch(e) {}
  counter === iters;
}

try { if (Inst34 <= 1000 && typeof (test2) != "undefined") {_RecordType("<694,699,53>",(test2)); Inst34++; } } catch(e) {}
test2();

