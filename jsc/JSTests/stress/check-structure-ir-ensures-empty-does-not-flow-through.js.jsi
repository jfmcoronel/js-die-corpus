var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (runNearStackLimit) != "undefined") {_RecordType("<9,26,1>",(runNearStackLimit)); Inst0++; } } catch(e) {}
function runNearStackLimit(f) {
try { if (Inst1 <= 1000 && typeof (f) != "undefined") {_RecordType("<27,28,1>",(f)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (t) != "undefined") {_RecordType("<43,44,2>",(t)); Inst2++; } } catch(e) {}
  function t() {
try { if (Inst4 <= 1000 && typeof (e) != "undefined") {_RecordType("<90,91,5>",(e)); Inst4++; } } catch(e) {}
    try {
try { if (Inst3 <= 1000 && typeof (t) != "undefined") {_RecordType("<72,73,4>",(t)); Inst3++; } } catch(e) {}
      return t();
    } catch (e) {
try { if (Inst5 <= 1000 && typeof (f) != "undefined") {_RecordType("<108,109,6>",(f)); Inst5++; } } catch(e) {}
      return f();
    }
  }

try { if (Inst6 <= 1000 && typeof (t) != "undefined") {_RecordType("<133,134,10>",(t)); Inst6++; } } catch(e) {}
  return t();
}

try { if (Inst7 <= 1000 && typeof (test) != "undefined") {_RecordType("<150,154,13>",(test)); Inst7++; } } catch(e) {}
function test() {
try { if (Inst8 <= 1000 && typeof (f) != "undefined") {_RecordType("<170,171,14>",(f)); Inst8++; } } catch(e) {}
  function f(arg) {
try { if (Inst9 <= 1000 && typeof (arg) != "undefined") {_RecordType("<172,175,14>",(arg)); Inst9++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (arg) != "undefined") {_RecordType("<193,196,15>",(arg)); Inst11++; } } catch(e) {}
    let loc = arg;
try { if (Inst10 <= 1000 && typeof (loc) != "undefined") {_RecordType("<187,190,15>",(loc)); Inst10++; } } catch(e) {}

try { if (Inst14 <= 1000 && typeof (e) != "undefined") {_RecordType("<239,240,19>",(e)); Inst14++; } } catch(e) {}
    try {
      loc.p = 0;
try { if (Inst12 <= 1000 && typeof (loc.p) != "undefined") {_RecordType("<215,220,18>",(loc.p)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (loc) != "undefined") {_RecordType("<215,218,18>",(loc)); Inst13++; } } catch(e) {}
    } catch (e) {
      ;
    }

    arg.p = 1;
try { if (Inst15 <= 1000 && typeof (arg.p) != "undefined") {_RecordType("<263,268,23>",(arg.p)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (arg) != "undefined") {_RecordType("<263,266,23>",(arg)); Inst16++; } } catch(e) {}
  }

  let obj = {};
try { if (Inst17 <= 1000 && typeof (obj) != "undefined") {_RecordType("<285,288,26>",(obj)); Inst17++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (runNearStackLimit) != "undefined") {_RecordType("<297,314,27>",(runNearStackLimit)); Inst18++; } } catch(e) {}
  runNearStackLimit(() => {
try { if (Inst19 <= 1000 && typeof (f) != "undefined") {_RecordType("<334,335,28>",(f)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (obj) != "undefined") {_RecordType("<336,339,28>",(obj)); Inst20++; } } catch(e) {}
    return f(obj);
  });
}

for (let i = 0; i < 50; ++i) {
try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<360,361,32>",(i)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<367,368,32>",(i)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<377,378,32>",(i)); Inst23++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (test) != "undefined") {_RecordType("<384,388,33>",(test)); Inst24++; } } catch(e) {}
  test();
}

