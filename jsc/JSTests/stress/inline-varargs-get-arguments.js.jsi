var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (foo) != "undefined") {_RecordType("<9,12,1>",(foo)); Inst0++; } } catch(e) {}
function foo(f, array) {
try { if (Inst1 <= 1000 && typeof (f) != "undefined") {_RecordType("<13,14,1>",(f)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (array) != "undefined") {_RecordType("<16,21,1>",(array)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (f.apply) != "undefined") {_RecordType("<34,41,2>",(f.apply)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (f) != "undefined") {_RecordType("<34,35,2>",(f)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (array) != "undefined") {_RecordType("<48,53,2>",(array)); Inst5++; } } catch(e) {}
  return f.apply(this, array);
}

try { if (Inst6 <= 1000 && typeof (bar) != "undefined") {_RecordType("<68,71,5>",(bar)); Inst6++; } } catch(e) {}
function bar(a, b, c) {
try { if (Inst7 <= 1000 && typeof (a) != "undefined") {_RecordType("<72,73,5>",(a)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (b) != "undefined") {_RecordType("<75,76,5>",(b)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (c) != "undefined") {_RecordType("<78,79,5>",(c)); Inst9++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (baz) != "undefined") {_RecordType("<92,95,6>",(baz)); Inst10++; } } catch(e) {}
  return baz();
}

try { if (Inst11 <= 1000 && typeof (baz) != "undefined") {_RecordType("<111,114,9>",(baz)); Inst11++; } } catch(e) {}
function baz() {
try { if (Inst12 <= 1000 && typeof (bar.arguments[3]) != "undefined") {_RecordType("<128,144,10>",(bar.arguments[3])); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (bar.arguments) != "undefined") {_RecordType("<128,141,10>",(bar.arguments)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (bar) != "undefined") {_RecordType("<128,131,10>",(bar)); Inst14++; } } catch(e) {}
  return bar.arguments[3];
}

try { if (Inst15 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<149,157,13>",(noInline)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (foo) != "undefined") {_RecordType("<158,161,13>",(foo)); Inst16++; } } catch(e) {}
noInline(foo);
try { if (Inst17 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<164,172,14>",(noInline)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (baz) != "undefined") {_RecordType("<173,176,14>",(baz)); Inst18++; } } catch(e) {}
noInline(baz);
var array = [0, 0, 0, 42];
try { if (Inst19 <= 1000 && typeof (array) != "undefined") {_RecordType("<183,188,15>",(array)); Inst19++; } } catch(e) {}

for (var i = 0; i < 10000; ++i) {
try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<216,217,17>",(i)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<223,224,17>",(i)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<236,237,17>",(i)); Inst22++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (foo) != "undefined") {_RecordType("<256,259,18>",(foo)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (bar) != "undefined") {_RecordType("<260,263,18>",(bar)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (array) != "undefined") {_RecordType("<265,270,18>",(array)); Inst26++; } } catch(e) {}
  var result = foo(bar, array);
try { if (Inst23 <= 1000 && typeof (result) != "undefined") {_RecordType("<247,253,18>",(result)); Inst23++; } } catch(e) {}

try { if (Inst27 <= 1000 && typeof (result) != "undefined") {_RecordType("<280,286,20>",(result)); Inst27++; } } catch(e) {}
  if (result != 42) {
try { if (Inst28 <= 1000 && typeof (result) != "undefined") {_RecordType("<330,336,21>",(result)); Inst28++; } } catch(e) {}
    throw "Error: bad result: " + result;
  }
}

