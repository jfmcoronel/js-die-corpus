var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Check frozen Array.of and Array.from don't modify unwritable/unconfigurable entries.
let totalFailed = 0;
try { if (Inst0 <= 1000 && typeof (totalFailed) != "undefined") {_RecordType("<92,103,2>",(totalFailed)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (shouldEqual) != "undefined") {_RecordType("<119,130,4>",(shouldEqual)); Inst1++; } } catch(e) {}
function shouldEqual(testId, iteration, actual, expected) {
try { if (Inst2 <= 1000 && typeof (testId) != "undefined") {_RecordType("<131,137,4>",(testId)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (iteration) != "undefined") {_RecordType("<139,148,4>",(iteration)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (actual) != "undefined") {_RecordType("<150,156,4>",(actual)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (expected) != "undefined") {_RecordType("<158,166,4>",(expected)); Inst5++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (actual) != "undefined") {_RecordType("<176,182,5>",(actual)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (expected) != "undefined") {_RecordType("<186,194,5>",(expected)); Inst7++; } } catch(e) {}
  if (actual != expected) {
try { if (Inst8 <= 1000 && typeof (testId) != "undefined") {_RecordType("<219,225,6>",(testId)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (iteration) != "undefined") {_RecordType("<245,254,6>",(iteration)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (expected) != "undefined") {_RecordType("<282,290,6>",(expected)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (actual) != "undefined") {_RecordType("<308,314,6>",(actual)); Inst11++; } } catch(e) {}
    throw "Test #" + testId + ", iteration " + iteration + ", ERROR: expected \"" + expected + "\", got \"" + actual + "\"";
  }
}

try { if (Inst12 <= 1000 && typeof (makeUnwriteableUnconfigurableObject) != "undefined") {_RecordType("<339,374,10>",(makeUnwriteableUnconfigurableObject)); Inst12++; } } catch(e) {}
function makeUnwriteableUnconfigurableObject() {
try { if (Inst13 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<388,409,11>",(Object.defineProperty)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Object) != "undefined") {_RecordType("<388,394,11>",(Object)); Inst14++; } } catch(e) {}
  return Object.defineProperty([], 0, {
    value: "frozen",
    writable: false,
    configurable: false
  });
}

try { if (Inst15 <= 1000 && typeof (testArrayOf) != "undefined") {_RecordType("<503,514,18>",(testArrayOf)); Inst15++; } } catch(e) {}
function testArrayOf(obj) {
try { if (Inst16 <= 1000 && typeof (obj) != "undefined") {_RecordType("<515,518,18>",(obj)); Inst16++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (Array.of.call) != "undefined") {_RecordType("<524,537,19>",(Array.of.call)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Array.of) != "undefined") {_RecordType("<524,532,19>",(Array.of)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Array) != "undefined") {_RecordType("<524,529,19>",(Array)); Inst19++; } } catch(e) {}
  Array.of.call(function () {
try { if (Inst20 <= 1000 && typeof (obj) != "undefined") {_RecordType("<563,566,20>",(obj)); Inst20++; } } catch(e) {}
    return obj;
  }, "no longer frozen");
}

try { if (Inst21 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<597,605,24>",(noInline)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (testArrayOf) != "undefined") {_RecordType("<606,617,24>",(testArrayOf)); Inst22++; } } catch(e) {}
noInline(testArrayOf);

try { if (Inst23 <= 1000 && typeof (testArrayFrom) != "undefined") {_RecordType("<630,643,26>",(testArrayFrom)); Inst23++; } } catch(e) {}
function testArrayFrom(obj) {
try { if (Inst24 <= 1000 && typeof (obj) != "undefined") {_RecordType("<644,647,26>",(obj)); Inst24++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (Array.from.call) != "undefined") {_RecordType("<653,668,27>",(Array.from.call)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Array.from) != "undefined") {_RecordType("<653,663,27>",(Array.from)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (Array) != "undefined") {_RecordType("<653,658,27>",(Array)); Inst27++; } } catch(e) {}
  Array.from.call(function () {
try { if (Inst28 <= 1000 && typeof (obj) != "undefined") {_RecordType("<694,697,28>",(obj)); Inst28++; } } catch(e) {}
    return obj;
  }, ["no longer frozen"]);
}

try { if (Inst29 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<730,738,32>",(noInline)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (testArrayFrom) != "undefined") {_RecordType("<739,752,32>",(testArrayFrom)); Inst30++; } } catch(e) {}
noInline(testArrayFrom);
let numIterations = 10000;
try { if (Inst31 <= 1000 && typeof (numIterations) != "undefined") {_RecordType("<759,772,33>",(numIterations)); Inst31++; } } catch(e) {}

try { if (Inst32 <= 1000 && typeof (runTest) != "undefined") {_RecordType("<792,799,35>",(runTest)); Inst32++; } } catch(e) {}
function runTest(testId, test, sourceMaker, expectedException) {
try { if (Inst33 <= 1000 && typeof (testId) != "undefined") {_RecordType("<800,806,35>",(testId)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (test) != "undefined") {_RecordType("<808,812,35>",(test)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (sourceMaker) != "undefined") {_RecordType("<814,825,35>",(sourceMaker)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (expectedException) != "undefined") {_RecordType("<827,844,35>",(expectedException)); Inst36++; } } catch(e) {}
  for (var i = 0; i < numIterations; i++) {
try { if (Inst37 <= 1000 && typeof (i) != "undefined") {_RecordType("<859,860,36>",(i)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (i) != "undefined") {_RecordType("<866,867,36>",(i)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (numIterations) != "undefined") {_RecordType("<870,883,36>",(numIterations)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (i) != "undefined") {_RecordType("<885,886,36>",(i)); Inst40++; } } catch(e) {}
    var exception = "No exception";
try { if (Inst41 <= 1000 && typeof (exception) != "undefined") {_RecordType("<900,909,37>",(exception)); Inst41++; } } catch(e) {}
try { if (Inst43 <= 1000 && typeof (sourceMaker) != "undefined") {_RecordType("<942,953,38>",(sourceMaker)); Inst43++; } } catch(e) {}
    var obj = sourceMaker();
try { if (Inst42 <= 1000 && typeof (obj) != "undefined") {_RecordType("<936,939,38>",(obj)); Inst42++; } } catch(e) {}

try { if (Inst46 <= 1000 && typeof (e) != "undefined") {_RecordType("<998,999,42>",(e)); Inst46++; } } catch(e) {}
    try {
try { if (Inst44 <= 1000 && typeof (test) != "undefined") {_RecordType("<974,978,41>",(test)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (obj) != "undefined") {_RecordType("<979,982,41>",(obj)); Inst45++; } } catch(e) {}
      test(obj);
    } catch (e) {
try { if (Inst48 <= 1000 && typeof (e) != "undefined") {_RecordType("<1026,1027,43>",(e)); Inst48++; } } catch(e) {}
      exception = "" + e;
try { if (Inst47 <= 1000 && typeof (exception) != "undefined") {_RecordType("<1009,1018,43>",(exception)); Inst47++; } } catch(e) {}
try { if (Inst50 <= 1000 && typeof (exception.substr) != "undefined") {_RecordType("<1047,1063,44>",(exception.substr)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (exception) != "undefined") {_RecordType("<1047,1056,44>",(exception)); Inst51++; } } catch(e) {}
      exception = exception.substr(0, 10); // Search for "TypeError:".
try { if (Inst49 <= 1000 && typeof (exception) != "undefined") {_RecordType("<1035,1044,44>",(exception)); Inst49++; } } catch(e) {}
    }

try { if (Inst52 <= 1000 && typeof (shouldEqual) != "undefined") {_RecordType("<1111,1122,47>",(shouldEqual)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (testId) != "undefined") {_RecordType("<1123,1129,47>",(testId)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (i) != "undefined") {_RecordType("<1131,1132,47>",(i)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (exception) != "undefined") {_RecordType("<1134,1143,47>",(exception)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (expectedException) != "undefined") {_RecordType("<1145,1162,47>",(expectedException)); Inst56++; } } catch(e) {}
    shouldEqual(testId, i, exception, expectedException);
  }
}

try { if (Inst57 <= 1000 && typeof (runTest) != "undefined") {_RecordType("<1172,1179,51>",(runTest)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (testArrayOf) != "undefined") {_RecordType("<1183,1194,51>",(testArrayOf)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (makeUnwriteableUnconfigurableObject) != "undefined") {_RecordType("<1196,1231,51>",(makeUnwriteableUnconfigurableObject)); Inst59++; } } catch(e) {}
runTest(1, testArrayOf, makeUnwriteableUnconfigurableObject, "TypeError:");
try { if (Inst60 <= 1000 && typeof (runTest) != "undefined") {_RecordType("<1248,1255,52>",(runTest)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (testArrayFrom) != "undefined") {_RecordType("<1259,1272,52>",(testArrayFrom)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (makeUnwriteableUnconfigurableObject) != "undefined") {_RecordType("<1274,1309,52>",(makeUnwriteableUnconfigurableObject)); Inst62++; } } catch(e) {}
runTest(2, testArrayFrom, makeUnwriteableUnconfigurableObject, "TypeError:");

