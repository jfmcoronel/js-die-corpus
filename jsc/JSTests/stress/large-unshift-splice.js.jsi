var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//@ skip if $memoryLimited
try { if (Inst0 <= 1000 && typeof (make_contig_arr) != "undefined") {_RecordType("<36,51,2>",(make_contig_arr)); Inst0++; } } catch(e) {}
function make_contig_arr(sz) {
try { if (Inst1 <= 1000 && typeof (sz) != "undefined") {_RecordType("<52,54,2>",(sz)); Inst1++; } } catch(e) {}
  let a = [];
try { if (Inst2 <= 1000 && typeof (a) != "undefined") {_RecordType("<64,65,3>",(a)); Inst2++; } } catch(e) {}

try { if (Inst3 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<82,90,5>",(a.length)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (a) != "undefined") {_RecordType("<82,83,5>",(a)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (sz) != "undefined") {_RecordType("<93,95,5>",(sz)); Inst5++; } } catch(e) {}
  while (a.length < sz / 8) {
try { if (Inst6 <= 1000 && typeof (a.push) != "undefined") {_RecordType("<107,113,6>",(a.push)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (a) != "undefined") {_RecordType("<107,108,6>",(a)); Inst7++; } } catch(e) {}
    a.push(3.14);
  }

  a.length *= 8;
try { if (Inst8 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<128,136,9>",(a.length)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (a) != "undefined") {_RecordType("<128,129,9>",(a)); Inst9++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (a) != "undefined") {_RecordType("<152,153,10>",(a)); Inst10++; } } catch(e) {}
  return a;
}

try { if (Inst27 <= 1000 && typeof (e) != "undefined") {_RecordType("<356,357,19>",(e)); Inst27++; } } catch(e) {}
try {
  let ARRAY_LENGTH = 0x10000000;
try { if (Inst11 <= 1000 && typeof (ARRAY_LENGTH) != "undefined") {_RecordType("<170,182,14>",(ARRAY_LENGTH)); Inst11++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (make_contig_arr) != "undefined") {_RecordType("<207,222,15>",(make_contig_arr)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (ARRAY_LENGTH) != "undefined") {_RecordType("<223,235,15>",(ARRAY_LENGTH)); Inst14++; } } catch(e) {}
  let a = make_contig_arr(ARRAY_LENGTH);
try { if (Inst12 <= 1000 && typeof (a) != "undefined") {_RecordType("<203,204,15>",(a)); Inst12++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (make_contig_arr) != "undefined") {_RecordType("<248,263,16>",(make_contig_arr)); Inst16++; } } catch(e) {}
  let b = make_contig_arr(0xff00);
try { if (Inst15 <= 1000 && typeof (b) != "undefined") {_RecordType("<244,245,16>",(b)); Inst15++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (b.unshift) != "undefined") {_RecordType("<275,284,17>",(b.unshift)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (b) != "undefined") {_RecordType("<275,276,17>",(b)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<285,293,17>",(a.length)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (a) != "undefined") {_RecordType("<285,286,17>",(a)); Inst20++; } } catch(e) {}
  b.unshift(a.length - 0x10000, 0);
try { if (Inst21 <= 1000 && typeof (Array.prototype.splice.apply) != "undefined") {_RecordType("<311,339,18>",(Array.prototype.splice.apply)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Array.prototype.splice) != "undefined") {_RecordType("<311,333,18>",(Array.prototype.splice)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<311,326,18>",(Array.prototype)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (Array) != "undefined") {_RecordType("<311,316,18>",(Array)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (a) != "undefined") {_RecordType("<340,341,18>",(a)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (b) != "undefined") {_RecordType("<343,344,18>",(b)); Inst26++; } } catch(e) {}
  Array.prototype.splice.apply(a, b);
} catch (e) {
  ;
}

