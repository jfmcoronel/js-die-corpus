var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
"use strict";

try { if (Inst0 <= 1000 && typeof (foo) != "undefined") {_RecordType("<24,27,3>",(foo)); Inst0++; } } catch(e) {}
function foo(x, y) {
try { if (Inst1 <= 1000 && typeof (x) != "undefined") {_RecordType("<28,29,3>",(x)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (y) != "undefined") {_RecordType("<31,32,3>",(y)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (arguments.length) != "undefined") {_RecordType("<42,58,4>",(arguments.length)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<42,51,4>",(arguments)); Inst4++; } } catch(e) {}
  if (arguments.length >= 2) {
try { if (Inst5 <= 1000 && typeof (foo) != "undefined") {_RecordType("<78,81,5>",(foo)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (x) != "undefined") {_RecordType("<82,83,5>",(x)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (y) != "undefined") {_RecordType("<86,87,5>",(y)); Inst7++; } } catch(e) {}
    return foo(x + y);
  }

try { if (Inst8 <= 1000 && typeof (x) != "undefined") {_RecordType("<104,105,8>",(x)); Inst8++; } } catch(e) {}
  return x;
}

try { if (Inst9 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<110,118,11>",(noInline)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (foo) != "undefined") {_RecordType("<119,122,11>",(foo)); Inst10++; } } catch(e) {}
noInline(foo);

try { if (Inst11 <= 1000 && typeof (bar) != "undefined") {_RecordType("<135,138,13>",(bar)); Inst11++; } } catch(e) {}
function bar(x) {
try { if (Inst12 <= 1000 && typeof (x) != "undefined") {_RecordType("<139,140,13>",(x)); Inst12++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (arguments.length) != "undefined") {_RecordType("<150,166,14>",(arguments.length)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<150,159,14>",(arguments)); Inst14++; } } catch(e) {}
  if (arguments.length >= 2) {
try { if (Inst15 <= 1000 && typeof (bar) != "undefined") {_RecordType("<186,189,15>",(bar)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (arguments[0]) != "undefined") {_RecordType("<190,202,15>",(arguments[0])); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<190,199,15>",(arguments)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (arguments[1]) != "undefined") {_RecordType("<205,217,15>",(arguments[1])); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<205,214,15>",(arguments)); Inst19++; } } catch(e) {}
    return bar(arguments[0] + arguments[1]);
  }

try { if (Inst20 <= 1000 && typeof (x) != "undefined") {_RecordType("<234,235,18>",(x)); Inst20++; } } catch(e) {}
  return x;
}

try { if (Inst21 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<240,248,21>",(noInline)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (bar) != "undefined") {_RecordType("<249,252,21>",(bar)); Inst22++; } } catch(e) {}
noInline(bar);

for (var i = 0; i < 10000; ++i) {
try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<265,266,23>",(i)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<272,273,23>",(i)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<285,286,23>",(i)); Inst25++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (foo) != "undefined") {_RecordType("<305,308,24>",(foo)); Inst27++; } } catch(e) {}
  var result = foo(40, 2);
try { if (Inst26 <= 1000 && typeof (result) != "undefined") {_RecordType("<296,302,24>",(result)); Inst26++; } } catch(e) {}

try { if (Inst28 <= 1000 && typeof (result) != "undefined") {_RecordType("<324,330,26>",(result)); Inst28++; } } catch(e) {}
  if (result !== 42) {
try { if (Inst29 <= 1000 && typeof (result) != "undefined") {_RecordType("<395,401,27>",(result)); Inst29++; } } catch(e) {}
    throw "Wrong result for foo, expected 42, got " + result;
  }

try { if (Inst31 <= 1000 && typeof (bar) != "undefined") {_RecordType("<419,422,30>",(bar)); Inst31++; } } catch(e) {}
  result = bar(40, 2);
try { if (Inst30 <= 1000 && typeof (result) != "undefined") {_RecordType("<410,416,30>",(result)); Inst30++; } } catch(e) {}

try { if (Inst32 <= 1000 && typeof (result) != "undefined") {_RecordType("<438,444,32>",(result)); Inst32++; } } catch(e) {}
  if (result !== 42) {
try { if (Inst33 <= 1000 && typeof (result) != "undefined") {_RecordType("<509,515,33>",(result)); Inst33++; } } catch(e) {}
    throw "Wrong result for bar, expected 42, got " + result;
  }
}

