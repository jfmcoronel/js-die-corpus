var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<9,17,1>",(shouldBe)); Inst0++; } } catch(e) {}
function shouldBe(actual, expected) {
try { if (Inst1 <= 1000 && typeof (actual) != "undefined") {_RecordType("<18,24,1>",(actual)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (expected) != "undefined") {_RecordType("<26,34,1>",(expected)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (actual) != "undefined") {_RecordType("<44,50,2>",(actual)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (expected) != "undefined") {_RecordType("<55,63,2>",(expected)); Inst4++; } } catch(e) {}
  if (actual !== expected) {
try { if (Inst5 <= 1000 && typeof (Error) != "undefined") {_RecordType("<81,86,3>",(Error)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (String) != "undefined") {_RecordType("<101,107,3>",(String)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (actual) != "undefined") {_RecordType("<108,114,3>",(actual)); Inst7++; } } catch(e) {}
    throw new Error(`bad value: ${String(actual)}`);
  }
}

(function () {
  "use strict";

  var cols = {
    "col": {
      "title": "&nbsp;",
      "type": "sys",
      "events": [],
      "name": 0,
      "id": 0,
      "_i": 0
    }
  };
try { if (Inst8 <= 1000 && typeof (cols) != "undefined") {_RecordType("<165,169,10>",(cols)); Inst8++; } } catch(e) {}
  var len = 0;
try { if (Inst9 <= 1000 && typeof (len) != "undefined") {_RecordType("<316,319,20>",(len)); Inst9++; } } catch(e) {}
  var remapcols = ['col'];
try { if (Inst10 <= 1000 && typeof (remapcols) != "undefined") {_RecordType("<331,340,21>",(remapcols)); Inst10++; } } catch(e) {}

  for (var i = 0; i < remapcols.length; i++) {
try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<364,365,23>",(i)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<371,372,23>",(i)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (remapcols.length) != "undefined") {_RecordType("<375,391,23>",(remapcols.length)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (remapcols) != "undefined") {_RecordType("<375,384,23>",(remapcols)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<393,394,23>",(i)); Inst15++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (cols[remapcols[i]]) != "undefined") {_RecordType("<436,454,24>",(cols[remapcols[i]])); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (cols) != "undefined") {_RecordType("<436,440,24>",(cols)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (remapcols[i]) != "undefined") {_RecordType("<441,453,24>",(remapcols[i])); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (remapcols) != "undefined") {_RecordType("<441,450,24>",(remapcols)); Inst26++; } } catch(e) {}
    cols[cols[remapcols[i]].name] = cols[remapcols[i]];
try { if (Inst16 <= 1000 && typeof (cols[cols[remapcols[i]].name]) != "undefined") {_RecordType("<404,433,24>",(cols[cols[remapcols[i]].name])); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (cols) != "undefined") {_RecordType("<404,408,24>",(cols)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (cols[remapcols[i]].name) != "undefined") {_RecordType("<409,432,24>",(cols[remapcols[i]].name)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (cols[remapcols[i]]) != "undefined") {_RecordType("<409,427,24>",(cols[remapcols[i]])); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (cols) != "undefined") {_RecordType("<409,413,24>",(cols)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (remapcols[i]) != "undefined") {_RecordType("<414,426,24>",(remapcols[i])); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (remapcols) != "undefined") {_RecordType("<414,423,24>",(remapcols)); Inst22++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (cols[remapcols[i]]) != "undefined") {_RecordType("<467,485,25>",(cols[remapcols[i]])); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (cols) != "undefined") {_RecordType("<467,471,25>",(cols)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (remapcols[i]) != "undefined") {_RecordType("<472,484,25>",(remapcols[i])); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (remapcols) != "undefined") {_RecordType("<472,481,25>",(remapcols)); Inst30++; } } catch(e) {}
    delete cols[remapcols[i]];
  }

  var count = 0;
try { if (Inst31 <= 1000 && typeof (count) != "undefined") {_RecordType("<498,503,28>",(count)); Inst31++; } } catch(e) {}

  for (var col2 in cols) {
try { if (Inst32 <= 1000 && typeof (col2) != "undefined") {_RecordType("<521,525,30>",(col2)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (cols) != "undefined") {_RecordType("<529,533,30>",(cols)); Inst33++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof (count) != "undefined") {_RecordType("<541,546,31>",(count)); Inst34++; } } catch(e) {}
    count++;
try { if (Inst35 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<554,562,32>",(shouldBe)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (col2) != "undefined") {_RecordType("<563,567,32>",(col2)); Inst36++; } } catch(e) {}
    shouldBe(col2, '0');
  }

try { if (Inst37 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<582,590,35>",(shouldBe)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (count) != "undefined") {_RecordType("<591,596,35>",(count)); Inst38++; } } catch(e) {}
  shouldBe(count, 1);
})();

(function () {
  "use strict";

  var cols = {
    "col": {
      "title": "&nbsp;",
      "type": "sys",
      "events": [],
      "name": 0,
      "id": 0,
      "_i": 0
    }
  };
try { if (Inst39 <= 1000 && typeof (cols) != "undefined") {_RecordType("<647,651,41>",(cols)); Inst39++; } } catch(e) {}
  var len = 0;
try { if (Inst40 <= 1000 && typeof (len) != "undefined") {_RecordType("<798,801,51>",(len)); Inst40++; } } catch(e) {}
  var remapcols = ['col'];
try { if (Inst41 <= 1000 && typeof (remapcols) != "undefined") {_RecordType("<813,822,52>",(remapcols)); Inst41++; } } catch(e) {}

  for (var i = 0; i < remapcols.length; i++) {
try { if (Inst42 <= 1000 && typeof (i) != "undefined") {_RecordType("<846,847,54>",(i)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (i) != "undefined") {_RecordType("<853,854,54>",(i)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (remapcols.length) != "undefined") {_RecordType("<857,873,54>",(remapcols.length)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (remapcols) != "undefined") {_RecordType("<857,866,54>",(remapcols)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (i) != "undefined") {_RecordType("<875,876,54>",(i)); Inst46++; } } catch(e) {}
try { if (Inst54 <= 1000 && typeof (cols[remapcols[i]]) != "undefined") {_RecordType("<918,936,55>",(cols[remapcols[i]])); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (cols) != "undefined") {_RecordType("<918,922,55>",(cols)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (remapcols[i]) != "undefined") {_RecordType("<923,935,55>",(remapcols[i])); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (remapcols) != "undefined") {_RecordType("<923,932,55>",(remapcols)); Inst57++; } } catch(e) {}
    cols[cols[remapcols[i]].name] = cols[remapcols[i]];
try { if (Inst47 <= 1000 && typeof (cols[cols[remapcols[i]].name]) != "undefined") {_RecordType("<886,915,55>",(cols[cols[remapcols[i]].name])); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (cols) != "undefined") {_RecordType("<886,890,55>",(cols)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (cols[remapcols[i]].name) != "undefined") {_RecordType("<891,914,55>",(cols[remapcols[i]].name)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (cols[remapcols[i]]) != "undefined") {_RecordType("<891,909,55>",(cols[remapcols[i]])); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (cols) != "undefined") {_RecordType("<891,895,55>",(cols)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (remapcols[i]) != "undefined") {_RecordType("<896,908,55>",(remapcols[i])); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (remapcols) != "undefined") {_RecordType("<896,905,55>",(remapcols)); Inst53++; } } catch(e) {}
try { if (Inst58 <= 1000 && typeof (cols[remapcols[i]]) != "undefined") {_RecordType("<949,967,56>",(cols[remapcols[i]])); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (cols) != "undefined") {_RecordType("<949,953,56>",(cols)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (remapcols[i]) != "undefined") {_RecordType("<954,966,56>",(remapcols[i])); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (remapcols) != "undefined") {_RecordType("<954,963,56>",(remapcols)); Inst61++; } } catch(e) {}
    delete cols[remapcols[i]];
  }

  var count = 0;
try { if (Inst62 <= 1000 && typeof (count) != "undefined") {_RecordType("<980,985,59>",(count)); Inst62++; } } catch(e) {}

  for (var col2 in cols) {
try { if (Inst63 <= 1000 && typeof (col2) != "undefined") {_RecordType("<1003,1007,61>",(col2)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (cols) != "undefined") {_RecordType("<1011,1015,61>",(cols)); Inst64++; } } catch(e) {}
try { if (Inst65 <= 1000 && typeof (count) != "undefined") {_RecordType("<1023,1028,62>",(count)); Inst65++; } } catch(e) {}
    count++;
try { if (Inst66 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<1036,1044,63>",(shouldBe)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (col2) != "undefined") {_RecordType("<1045,1049,63>",(col2)); Inst67++; } } catch(e) {}
    shouldBe(col2, '0');
  }

try { if (Inst68 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<1064,1072,66>",(shouldBe)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (count) != "undefined") {_RecordType("<1073,1078,66>",(count)); Inst69++; } } catch(e) {}
  shouldBe(count, 1);
})();

