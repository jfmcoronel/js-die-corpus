var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (assert) != "undefined") {_RecordType("<9,15,1>",(assert)); Inst0++; } } catch(e) {}
function assert(a) {
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<16,17,1>",(a)); Inst1++; } } catch(e) {}
  ;
}

try { if (Inst2 <= 1000 && typeof (testProperties) != "undefined") {_RecordType("<37,51,5>",(testProperties)); Inst2++; } } catch(e) {}
function testProperties(o, initProperty, testProperty, shouldThrow) {
try { if (Inst3 <= 1000 && typeof (o) != "undefined") {_RecordType("<52,53,5>",(o)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (initProperty) != "undefined") {_RecordType("<55,67,5>",(initProperty)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (testProperty) != "undefined") {_RecordType("<69,81,5>",(testProperty)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (shouldThrow) != "undefined") {_RecordType("<83,94,5>",(shouldThrow)); Inst6++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<100,121,6>",(Object.defineProperty)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Object) != "undefined") {_RecordType("<100,106,6>",(Object)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<122,131,6>",(arguments)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (initProperty) != "undefined") {_RecordType("<136,148,6>",(initProperty)); Inst10++; } } catch(e) {}
  Object.defineProperty(arguments, 0, initProperty);

try { if (Inst11 <= 1000 && typeof (shouldThrow) != "undefined") {_RecordType("<158,169,8>",(shouldThrow)); Inst11++; } } catch(e) {}
  if (shouldThrow) {
try { if (Inst16 <= 1000 && typeof (e) != "undefined") {_RecordType("<253,254,11>",(e)); Inst16++; } } catch(e) {}
    try {
try { if (Inst12 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<189,210,10>",(Object.defineProperty)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Object) != "undefined") {_RecordType("<189,195,10>",(Object)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<211,220,10>",(arguments)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (testProperty) != "undefined") {_RecordType("<225,237,10>",(testProperty)); Inst15++; } } catch(e) {}
      Object.defineProperty(arguments, 0, testProperty);
    } catch (e) {
      ;
    }
  } else {
try { if (Inst17 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<287,308,15>",(Object.defineProperty)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Object) != "undefined") {_RecordType("<287,293,15>",(Object)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<309,318,15>",(arguments)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (testProperty) != "undefined") {_RecordType("<323,335,15>",(testProperty)); Inst20++; } } catch(e) {}
    Object.defineProperty(arguments, 0, testProperty);
  }
}

try { if (Inst21 <= 1000 && typeof (testProperties) != "undefined") {_RecordType("<345,359,19>",(testProperties)); Inst21++; } } catch(e) {}
testProperties("foo", {
  configurable: false
}, {
  writable: true
}, false);
try { if (Inst22 <= 1000 && typeof (testProperties) != "undefined") {_RecordType("<424,438,24>",(testProperties)); Inst22++; } } catch(e) {}
testProperties("foo", {
  configurable: false
}, {
  configurable: true
}, true);
try { if (Inst23 <= 1000 && typeof (testProperties) != "undefined") {_RecordType("<506,520,29>",(testProperties)); Inst23++; } } catch(e) {}
testProperties("foo", {
  configurable: false,
  enumareble: true
}, {
  enumerable: false
}, true);
try { if (Inst24 <= 1000 && typeof (testProperties) != "undefined") {_RecordType("<607,621,35>",(testProperties)); Inst24++; } } catch(e) {}
testProperties("foo", {
  configurable: false,
  writable: false
}, {
  writable: false
}, false);
try { if (Inst25 <= 1000 && typeof (testProperties) != "undefined") {_RecordType("<706,720,41>",(testProperties)); Inst25++; } } catch(e) {}
testProperties("foo", {
  configurable: false,
  writable: false
}, {
  writable: true
}, true);
try { if (Inst26 <= 1000 && typeof (testProperties) != "undefined") {_RecordType("<803,817,47>",(testProperties)); Inst26++; } } catch(e) {}
testProperties("foo", {
  configurable: false,
  writable: false,
  value: 50
}, {
  value: 30
}, true);
try { if (Inst27 <= 1000 && typeof (testProperties) != "undefined") {_RecordType("<908,922,54>",(testProperties)); Inst27++; } } catch(e) {}
testProperties("foo", {
  configurable: false,
  writable: false,
  value: 30
}, {
  value: 30
}, false);
try { if (Inst28 <= 1000 && typeof (testProperties) != "undefined") {_RecordType("<1014,1028,61>",(testProperties)); Inst28++; } } catch(e) {}
testProperties("foo", {
  configurable: false,
  get: () => {
    return 0;
  }
}, {
  get: () => {
    return 10;
  }
}, true);

let getterFoo = () => {
  return 0;
};
try { if (Inst29 <= 1000 && typeof (getterFoo) != "undefined") {_RecordType("<1148,1157,72>",(getterFoo)); Inst29++; } } catch(e) {}

try { if (Inst30 <= 1000 && typeof (testProperties) != "undefined") {_RecordType("<1184,1198,76>",(testProperties)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (getterFoo) != "undefined") {_RecordType("<1238,1247,78>",(getterFoo)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (getterFoo) != "undefined") {_RecordType("<1260,1269,80>",(getterFoo)); Inst32++; } } catch(e) {}
testProperties("foo", {
  configurable: false,
  get: getterFoo
}, {
  get: getterFoo
}, false);
try { if (Inst33 <= 1000 && typeof (testProperties) != "undefined") {_RecordType("<1281,1295,82>",(testProperties)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (x) != "undefined") {_RecordType("<1335,1336,84>",(x)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (x) != "undefined") {_RecordType("<1372,1373,88>",(x)); Inst35++; } } catch(e) {}
testProperties("foo", {
  configurable: false,
  set: x => {
    return 0;
  }
}, {
  get: x => {
    return 10;
  }
}, true);

try { if (Inst37 <= 1000 && typeof (x) != "undefined") {_RecordType("<1425,1426,93>",(x)); Inst37++; } } catch(e) {}
let setterFoo = x => {
  return 0;
};
try { if (Inst36 <= 1000 && typeof (setterFoo) != "undefined") {_RecordType("<1413,1422,93>",(setterFoo)); Inst36++; } } catch(e) {}

try { if (Inst38 <= 1000 && typeof (testProperties) != "undefined") {_RecordType("<1448,1462,97>",(testProperties)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (setterFoo) != "undefined") {_RecordType("<1502,1511,99>",(setterFoo)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (setterFoo) != "undefined") {_RecordType("<1524,1533,101>",(setterFoo)); Inst40++; } } catch(e) {}
testProperties("foo", {
  configurable: false,
  set: setterFoo
}, {
  set: setterFoo
}, false);

