var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (forceTransition) != "undefined") {_RecordType("<9,24,1>",(forceTransition)); Inst0++; } } catch(e) {}
function forceTransition() {
  // We want to test the StructureCheck in testSparseArray(), not this watchpoint.
  // We start with the transition so that it's nothing new.
try { if (Inst2 <= 1000 && typeof (Array) != "undefined") {_RecordType("<190,195,4>",(Array)); Inst2++; } } catch(e) {}
  let array = new Array();
try { if (Inst1 <= 1000 && typeof (array) != "undefined") {_RecordType("<178,183,4>",(array)); Inst1++; } } catch(e) {}
  array[100001] = "WebKit!";
try { if (Inst3 <= 1000 && typeof (array[100001]) != "undefined") {_RecordType("<201,214,5>",(array[100001])); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (array) != "undefined") {_RecordType("<201,206,5>",(array)); Inst4++; } } catch(e) {}
}

try { if (Inst5 <= 1000 && typeof (forceTransition) != "undefined") {_RecordType("<231,246,8>",(forceTransition)); Inst5++; } } catch(e) {}
forceTransition();

try { if (Inst6 <= 1000 && typeof (opaqueGetArrayLength) != "undefined") {_RecordType("<260,280,10>",(opaqueGetArrayLength)); Inst6++; } } catch(e) {}
function opaqueGetArrayLength(array) {
try { if (Inst7 <= 1000 && typeof (array) != "undefined") {_RecordType("<281,286,10>",(array)); Inst7++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (array.length) != "undefined") {_RecordType("<299,311,11>",(array.length)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (array) != "undefined") {_RecordType("<299,304,11>",(array)); Inst9++; } } catch(e) {}
  return array.length;
}

try { if (Inst10 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<316,324,14>",(noInline)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (opaqueGetArrayLength) != "undefined") {_RecordType("<325,345,14>",(opaqueGetArrayLength)); Inst11++; } } catch(e) {}
noInline(opaqueGetArrayLength);

try { if (Inst12 <= 1000 && typeof (testEmptyArray) != "undefined") {_RecordType("<358,372,16>",(testEmptyArray)); Inst12++; } } catch(e) {}
function testEmptyArray() {
  let array = [];
try { if (Inst13 <= 1000 && typeof (array) != "undefined") {_RecordType("<383,388,17>",(array)); Inst13++; } } catch(e) {}

  for (let i = 0; i < 1e6; ++i) {
try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<407,408,19>",(i)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<414,415,19>",(i)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<425,426,19>",(i)); Inst16++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (opaqueGetArrayLength) != "undefined") {_RecordType("<438,458,20>",(opaqueGetArrayLength)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (array) != "undefined") {_RecordType("<459,464,20>",(array)); Inst18++; } } catch(e) {}
    if (opaqueGetArrayLength(array) !== 0) {
      throw "Failed testEmptyArray";
    }
  }

try { if (Inst20 <= 1000 && typeof (Array) != "undefined") {_RecordType("<537,542,25>",(Array)); Inst20++; } } catch(e) {}
  array = new Array();
try { if (Inst19 <= 1000 && typeof (array) != "undefined") {_RecordType("<525,530,25>",(array)); Inst19++; } } catch(e) {}

  for (let i = 0; i < 1e6; ++i) {
try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<558,559,27>",(i)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<565,566,27>",(i)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<576,577,27>",(i)); Inst23++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (opaqueGetArrayLength) != "undefined") {_RecordType("<589,609,28>",(opaqueGetArrayLength)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (array) != "undefined") {_RecordType("<610,615,28>",(array)); Inst25++; } } catch(e) {}
    if (opaqueGetArrayLength(array) !== 0) {
      throw "Failed testEmptyArray";
    }
  }
}

try { if (Inst26 <= 1000 && typeof (testEmptyArray) != "undefined") {_RecordType("<676,690,34>",(testEmptyArray)); Inst26++; } } catch(e) {}
testEmptyArray();

try { if (Inst27 <= 1000 && typeof (testUnitializedArray) != "undefined") {_RecordType("<704,724,36>",(testUnitializedArray)); Inst27++; } } catch(e) {}
function testUnitializedArray() {
try { if (Inst29 <= 1000 && typeof (Array) != "undefined") {_RecordType("<747,752,37>",(Array)); Inst29++; } } catch(e) {}
  let array = new Array(32);
try { if (Inst28 <= 1000 && typeof (array) != "undefined") {_RecordType("<735,740,37>",(array)); Inst28++; } } catch(e) {}

  for (let i = 0; i < 1e6; ++i) {
try { if (Inst30 <= 1000 && typeof (i) != "undefined") {_RecordType("<770,771,39>",(i)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (i) != "undefined") {_RecordType("<777,778,39>",(i)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (i) != "undefined") {_RecordType("<788,789,39>",(i)); Inst32++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (opaqueGetArrayLength) != "undefined") {_RecordType("<801,821,40>",(opaqueGetArrayLength)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (array) != "undefined") {_RecordType("<822,827,40>",(array)); Inst34++; } } catch(e) {}
    if (opaqueGetArrayLength(array) !== 32) {
      throw "Failed testUnitializedArray";
    }
  }

try { if (Inst36 <= 1000 && typeof (Array) != "undefined") {_RecordType("<907,912,45>",(Array)); Inst36++; } } catch(e) {}
  array = new Array();
try { if (Inst35 <= 1000 && typeof (array) != "undefined") {_RecordType("<895,900,45>",(array)); Inst35++; } } catch(e) {}
  array.length = 64;
try { if (Inst37 <= 1000 && typeof (array.length) != "undefined") {_RecordType("<918,930,46>",(array.length)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (array) != "undefined") {_RecordType("<918,923,46>",(array)); Inst38++; } } catch(e) {}

  for (let i = 0; i < 1e6; ++i) {
try { if (Inst39 <= 1000 && typeof (i) != "undefined") {_RecordType("<949,950,48>",(i)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (i) != "undefined") {_RecordType("<956,957,48>",(i)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (i) != "undefined") {_RecordType("<967,968,48>",(i)); Inst41++; } } catch(e) {}
try { if (Inst42 <= 1000 && typeof (opaqueGetArrayLength) != "undefined") {_RecordType("<980,1000,49>",(opaqueGetArrayLength)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (array) != "undefined") {_RecordType("<1001,1006,49>",(array)); Inst43++; } } catch(e) {}
    if (opaqueGetArrayLength(array) !== 64) {
      throw "Failed testUnitializedArray";
    }
  }
}

try { if (Inst44 <= 1000 && typeof (testUnitializedArray) != "undefined") {_RecordType("<1074,1094,55>",(testUnitializedArray)); Inst44++; } } catch(e) {}
testUnitializedArray();

try { if (Inst45 <= 1000 && typeof (testOversizedArray) != "undefined") {_RecordType("<1108,1126,57>",(testOversizedArray)); Inst45++; } } catch(e) {}
function testOversizedArray() {
try { if (Inst47 <= 1000 && typeof (Array) != "undefined") {_RecordType("<1149,1154,58>",(Array)); Inst47++; } } catch(e) {}
  let array = new Array(100001);
try { if (Inst46 <= 1000 && typeof (array) != "undefined") {_RecordType("<1137,1142,58>",(array)); Inst46++; } } catch(e) {}

  for (let i = 0; i < 1e6; ++i) {
try { if (Inst48 <= 1000 && typeof (i) != "undefined") {_RecordType("<1176,1177,60>",(i)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (i) != "undefined") {_RecordType("<1183,1184,60>",(i)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (i) != "undefined") {_RecordType("<1194,1195,60>",(i)); Inst50++; } } catch(e) {}
try { if (Inst51 <= 1000 && typeof (opaqueGetArrayLength) != "undefined") {_RecordType("<1207,1227,61>",(opaqueGetArrayLength)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (array) != "undefined") {_RecordType("<1228,1233,61>",(array)); Inst52++; } } catch(e) {}
    if (opaqueGetArrayLength(array) !== 100001) {
      throw "Failed testOversizedArray";
    }
  }
}

try { if (Inst53 <= 1000 && typeof (testOversizedArray) != "undefined") {_RecordType("<1303,1321,67>",(testOversizedArray)); Inst53++; } } catch(e) {}
testOversizedArray(); // This should OSR Exit and fallback to GetById to get the length.

try { if (Inst54 <= 1000 && typeof (testSparseArray) != "undefined") {_RecordType("<1402,1417,69>",(testSparseArray)); Inst54++; } } catch(e) {}
function testSparseArray() {
try { if (Inst56 <= 1000 && typeof (Array) != "undefined") {_RecordType("<1440,1445,70>",(Array)); Inst56++; } } catch(e) {}
  let array = new Array();
try { if (Inst55 <= 1000 && typeof (array) != "undefined") {_RecordType("<1428,1433,70>",(array)); Inst55++; } } catch(e) {}
  array[100001] = "WebKit!";
try { if (Inst57 <= 1000 && typeof (array[100001]) != "undefined") {_RecordType("<1451,1464,71>",(array[100001])); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (array) != "undefined") {_RecordType("<1451,1456,71>",(array)); Inst58++; } } catch(e) {}

  for (let i = 0; i < 1e6; ++i) {
try { if (Inst59 <= 1000 && typeof (i) != "undefined") {_RecordType("<1490,1491,73>",(i)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (i) != "undefined") {_RecordType("<1497,1498,73>",(i)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (i) != "undefined") {_RecordType("<1508,1509,73>",(i)); Inst61++; } } catch(e) {}
try { if (Inst62 <= 1000 && typeof (opaqueGetArrayLength) != "undefined") {_RecordType("<1521,1541,74>",(opaqueGetArrayLength)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (array) != "undefined") {_RecordType("<1542,1547,74>",(array)); Inst63++; } } catch(e) {}
    if (opaqueGetArrayLength(array) !== 100002) {
      throw "Failed testOversizedArray";
    }
  }
}

try { if (Inst64 <= 1000 && typeof (testSparseArray) != "undefined") {_RecordType("<1617,1632,80>",(testSparseArray)); Inst64++; } } catch(e) {}
testSparseArray();

