var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Map constructor behaviors.
try { if (Inst0 <= 1000 && typeof (testCallTypeError) != "undefined") {_RecordType("<39,56,2>",(testCallTypeError)); Inst0++; } } catch(e) {}
function testCallTypeError(item) {
try { if (Inst1 <= 1000 && typeof (item) != "undefined") {_RecordType("<57,61,2>",(item)); Inst1++; } } catch(e) {}
  var error = null;
try { if (Inst2 <= 1000 && typeof (error) != "undefined") {_RecordType("<71,76,3>",(error)); Inst2++; } } catch(e) {}

try { if (Inst6 <= 1000 && typeof (e) != "undefined") {_RecordType("<130,131,7>",(e)); Inst6++; } } catch(e) {}
  try {
try { if (Inst4 <= 1000 && typeof (Map) != "undefined") {_RecordType("<108,111,6>",(Map)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (item) != "undefined") {_RecordType("<112,116,6>",(item)); Inst5++; } } catch(e) {}
    var map = Map(item);
try { if (Inst3 <= 1000 && typeof (map) != "undefined") {_RecordType("<102,105,6>",(map)); Inst3++; } } catch(e) {}
  } catch (e) {
    ;
  }
}

try { if (Inst8 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<172,181,12>",(undefined)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Set) != "undefined") {_RecordType("<201,204,12>",(Set)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Map) != "undefined") {_RecordType("<217,220,12>",(Map)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Map) != "undefined") {_RecordType("<304,307,12>",(Map)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Map) != "undefined") {_RecordType("<392,395,21>",(Map)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Map) != "undefined") {_RecordType("<432,435,21>",(Map)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Map) != "undefined") {_RecordType("<472,475,21>",(Map)); Inst14++; } } catch(e) {}
var pass = [[null, 0], [undefined, 0], [[], 0], [new Set(), 0], [new Map(), 0], ["", 0], [[[0, 1], [1, 2], [1, 3]], 2], [[[1, 1], [1, 2], [1, 3]], 1], [new Map([{
  0: 'C',
  1: 'O'
}, {
  0: 'C',
  1: 'K'
}, {
  0: 'V',
  1: 'K'
}]), 2], [new Map([[0, 1], [1, 2], [1, 3]]), 2], [new Map([[1, 1], [1, 2], [1, 3]]), 1], [new Map([{
  0: 'C',
  1: 'O'
}, {
  0: 'C',
  1: 'K'
}, {
  0: 'V',
  1: 'K'
}]), 2]];
try { if (Inst7 <= 1000 && typeof (pass) != "undefined") {_RecordType("<152,156,12>",(pass)); Inst7++; } } catch(e) {}

for (var pair of pass) {
try { if (Inst15 <= 1000 && typeof (pair) != "undefined") {_RecordType("<566,570,32>",(pair)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (pass) != "undefined") {_RecordType("<574,578,32>",(pass)); Inst16++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (Map) != "undefined") {_RecordType("<598,601,33>",(Map)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (pair[0]) != "undefined") {_RecordType("<602,609,33>",(pair[0])); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (pair) != "undefined") {_RecordType("<602,606,33>",(pair)); Inst20++; } } catch(e) {}
  var map = new Map(pair[0]);
try { if (Inst17 <= 1000 && typeof (map) != "undefined") {_RecordType("<588,591,33>",(map)); Inst17++; } } catch(e) {}

try { if (Inst21 <= 1000 && typeof (map.size) != "undefined") {_RecordType("<619,627,35>",(map.size)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (map) != "undefined") {_RecordType("<619,622,35>",(map)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (pair[1]) != "undefined") {_RecordType("<632,639,35>",(pair[1])); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (pair) != "undefined") {_RecordType("<632,636,35>",(pair)); Inst24++; } } catch(e) {}
  if (map.size !== pair[1]) {
    ;
  }

try { if (Inst25 <= 1000 && typeof (testCallTypeError) != "undefined") {_RecordType("<656,673,39>",(testCallTypeError)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (pair[0]) != "undefined") {_RecordType("<674,681,39>",(pair[0])); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (pair) != "undefined") {_RecordType("<674,678,39>",(pair)); Inst27++; } } catch(e) {}
  testCallTypeError(pair[0]);
}

try { if (Inst28 <= 1000 && typeof (testTypeError) != "undefined") {_RecordType("<696,709,42>",(testTypeError)); Inst28++; } } catch(e) {}
function testTypeError(item) {
try { if (Inst29 <= 1000 && typeof (item) != "undefined") {_RecordType("<710,714,42>",(item)); Inst29++; } } catch(e) {}
  var error = null;
try { if (Inst30 <= 1000 && typeof (error) != "undefined") {_RecordType("<724,729,43>",(error)); Inst30++; } } catch(e) {}

try { if (Inst34 <= 1000 && typeof (e) != "undefined") {_RecordType("<787,788,47>",(e)); Inst34++; } } catch(e) {}
  try {
try { if (Inst32 <= 1000 && typeof (Map) != "undefined") {_RecordType("<765,768,46>",(Map)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (item) != "undefined") {_RecordType("<769,773,46>",(item)); Inst33++; } } catch(e) {}
    var map = new Map(item);
try { if (Inst31 <= 1000 && typeof (map) != "undefined") {_RecordType("<755,758,46>",(map)); Inst31++; } } catch(e) {}
  } catch (e) {
try { if (Inst36 <= 1000 && typeof (e) != "undefined") {_RecordType("<804,805,48>",(e)); Inst36++; } } catch(e) {}
    error = e;
try { if (Inst35 <= 1000 && typeof (error) != "undefined") {_RecordType("<796,801,48>",(error)); Inst35++; } } catch(e) {}
  }
}

try { if (Inst38 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<837,843,52>",(Symbol)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (Date) != "undefined") {_RecordType("<880,884,52>",(Date)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (Error) != "undefined") {_RecordType("<892,897,52>",(Error)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (Object) != "undefined") {_RecordType("<901,907,52>",(Object)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<908,914,52>",(Symbol)); Inst42++; } } catch(e) {}
var nonIterable = [42, Symbol("Cappuccino"), true, false, {}, new Date(), new Error(), Object(Symbol("Matcha")), function () {
  ;
}];
try { if (Inst37 <= 1000 && typeof (nonIterable) != "undefined") {_RecordType("<818,829,52>",(nonIterable)); Inst37++; } } catch(e) {}

for (var item of nonIterable) {
try { if (Inst43 <= 1000 && typeof (item) != "undefined") {_RecordType("<959,963,56>",(item)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (nonIterable) != "undefined") {_RecordType("<967,978,56>",(nonIterable)); Inst44++; } } catch(e) {}
try { if (Inst45 <= 1000 && typeof (testTypeError) != "undefined") {_RecordType("<984,997,57>",(testTypeError)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (item) != "undefined") {_RecordType("<998,1002,57>",(item)); Inst46++; } } catch(e) {}
  testTypeError(item);
try { if (Inst47 <= 1000 && typeof (testCallTypeError) != "undefined") {_RecordType("<1007,1024,58>",(testCallTypeError)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (item) != "undefined") {_RecordType("<1025,1029,58>",(item)); Inst48++; } } catch(e) {}
  testCallTypeError(item);
}

try { if (Inst50 <= 1000 && typeof (String) != "undefined") {_RecordType("<1125,1131,61>",(String)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (String) != "undefined") {_RecordType("<1146,1152,61>",(String)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (Set) != "undefined") {_RecordType("<1167,1170,61>",(Set)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (Set) != "undefined") {_RecordType("<1193,1196,61>",(Set)); Inst53++; } } catch(e) {}
var notContainNextItem = ["Cocoa", [0, 1, 2, 3, 4], [0, 0, 0, 1, 0], ["A", "B", "A"], new String("cocoa"), new String("Cocoa"), new Set([0, 1, 2, 3, 4]), new Set([1, 1, 1, 1])];
try { if (Inst49 <= 1000 && typeof (notContainNextItem) != "undefined") {_RecordType("<1039,1057,61>",(notContainNextItem)); Inst49++; } } catch(e) {}

for (var item of notContainNextItem) {
try { if (Inst54 <= 1000 && typeof (item) != "undefined") {_RecordType("<1223,1227,63>",(item)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (notContainNextItem) != "undefined") {_RecordType("<1231,1249,63>",(notContainNextItem)); Inst55++; } } catch(e) {}
try { if (Inst56 <= 1000 && typeof (testTypeError) != "undefined") {_RecordType("<1255,1268,64>",(testTypeError)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (item) != "undefined") {_RecordType("<1269,1273,64>",(item)); Inst57++; } } catch(e) {}
  testTypeError(item);
try { if (Inst58 <= 1000 && typeof (testCallTypeError) != "undefined") {_RecordType("<1278,1295,65>",(testCallTypeError)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (item) != "undefined") {_RecordType("<1296,1300,65>",(item)); Inst59++; } } catch(e) {}
  testCallTypeError(item);
}

