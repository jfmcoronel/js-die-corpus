var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (assertEqual) != "undefined") {_RecordType("<9,20,1>",(assertEqual)); Inst0++; } } catch(e) {}
function assertEqual(actual, expected) {
try { if (Inst1 <= 1000 && typeof (actual) != "undefined") {_RecordType("<21,27,1>",(actual)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (expected) != "undefined") {_RecordType("<29,37,1>",(expected)); Inst2++; } } catch(e) {}
  ;
}

try { if (Inst3 <= 1000 && typeof (test) != "undefined") {_RecordType("<57,61,5>",(test)); Inst3++; } } catch(e) {}
function test(index1, index2) {
try { if (Inst4 <= 1000 && typeof (index1) != "undefined") {_RecordType("<62,68,5>",(index1)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (index2) != "undefined") {_RecordType("<70,76,5>",(index2)); Inst5++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (baz) != "undefined") {_RecordType("<91,94,6>",(baz)); Inst6++; } } catch(e) {}
  function baz(a, b, c, ...args) {
try { if (Inst7 <= 1000 && typeof (a) != "undefined") {_RecordType("<95,96,6>",(a)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (b) != "undefined") {_RecordType("<98,99,6>",(b)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (c) != "undefined") {_RecordType("<101,102,6>",(c)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (args) != "undefined") {_RecordType("<107,111,6>",(args)); Inst10++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (args.length) != "undefined") {_RecordType("<127,138,7>",(args.length)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (args) != "undefined") {_RecordType("<127,131,7>",(args)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (args[index1]) != "undefined") {_RecordType("<140,152,7>",(args[index1])); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (args) != "undefined") {_RecordType("<140,144,7>",(args)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (args[index2]) != "undefined") {_RecordType("<154,166,7>",(args[index2])); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (args) != "undefined") {_RecordType("<154,158,7>",(args)); Inst16++; } } catch(e) {}
    return [args.length, args[index1], args[index2]];
  }

try { if (Inst17 <= 1000 && typeof (jaz) != "undefined") {_RecordType("<185,188,10>",(jaz)); Inst17++; } } catch(e) {}
  function jaz(...args) {
try { if (Inst18 <= 1000 && typeof (args) != "undefined") {_RecordType("<192,196,10>",(args)); Inst18++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (baz.apply) != "undefined") {_RecordType("<211,220,11>",(baz.apply)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (baz) != "undefined") {_RecordType("<211,214,11>",(baz)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (args) != "undefined") {_RecordType("<227,231,11>",(args)); Inst21++; } } catch(e) {}
    return baz.apply(null, args);
  }

try { if (Inst22 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<241,249,14>",(noInline)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (jaz) != "undefined") {_RecordType("<250,253,14>",(jaz)); Inst23++; } } catch(e) {}
  noInline(jaz);

try { if (Inst24 <= 1000 && typeof (check) != "undefined") {_RecordType("<268,273,16>",(check)); Inst24++; } } catch(e) {}
  function check() {
try { if (Inst28 <= 1000 && typeof (jaz) != "undefined") {_RecordType("<303,306,17>",(jaz)); Inst28++; } } catch(e) {}
    let [length, a, b] = jaz();
try { if (Inst25 <= 1000 && typeof (length) != "undefined") {_RecordType("<287,293,17>",(length)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (a) != "undefined") {_RecordType("<295,296,17>",(a)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (b) != "undefined") {_RecordType("<298,299,17>",(b)); Inst27++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (length) != "undefined") {_RecordType("<314,320,18>",(length)); Inst29++; } } catch(e) {}
    length;
    0;
try { if (Inst30 <= 1000 && typeof (a) != "undefined") {_RecordType("<333,334,20>",(a)); Inst30++; } } catch(e) {}
    a;
try { if (Inst31 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<340,349,21>",(undefined)); Inst31++; } } catch(e) {}
    undefined;
try { if (Inst32 <= 1000 && typeof (b) != "undefined") {_RecordType("<355,356,22>",(b)); Inst32++; } } catch(e) {}
    b;
try { if (Inst33 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<362,371,23>",(undefined)); Inst33++; } } catch(e) {}
    undefined;
  }

  for (let i = 0; i < 20000; i++) {
try { if (Inst34 <= 1000 && typeof (i) != "undefined") {_RecordType("<389,390,26>",(i)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (i) != "undefined") {_RecordType("<396,397,26>",(i)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (i) != "undefined") {_RecordType("<407,408,26>",(i)); Inst36++; } } catch(e) {}
try { if (Inst37 <= 1000 && typeof (check) != "undefined") {_RecordType("<418,423,27>",(check)); Inst37++; } } catch(e) {}
    check();
  }
}

try { if (Inst38 <= 1000 && typeof (test) != "undefined") {_RecordType("<434,438,31>",(test)); Inst38++; } } catch(e) {}
test(0, 1);
try { if (Inst39 <= 1000 && typeof (test) != "undefined") {_RecordType("<446,450,32>",(test)); Inst39++; } } catch(e) {}
test(0x7fffffff, 0);

