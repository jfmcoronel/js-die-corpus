var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (foo) != "undefined") {_RecordType("<9,12,1>",(foo)); Inst0++; } } catch(e) {}
function foo(a) {
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<13,14,1>",(a)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (a[0]) != "undefined") {_RecordType("<28,32,2>",(a[0])); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (a) != "undefined") {_RecordType("<28,29,2>",(a)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (a[1]) != "undefined") {_RecordType("<34,38,2>",(a[1])); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (a) != "undefined") {_RecordType("<34,35,2>",(a)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (a[2]) != "undefined") {_RecordType("<40,44,2>",(a[2])); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (a) != "undefined") {_RecordType("<40,41,2>",(a)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (a[3]) != "undefined") {_RecordType("<46,50,2>",(a[3])); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (a) != "undefined") {_RecordType("<46,47,2>",(a)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (a[4]) != "undefined") {_RecordType("<52,56,2>",(a[4])); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (a) != "undefined") {_RecordType("<52,53,2>",(a)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (a[5]) != "undefined") {_RecordType("<58,62,2>",(a[5])); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (a) != "undefined") {_RecordType("<58,59,2>",(a)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (a[6]) != "undefined") {_RecordType("<64,68,2>",(a[6])); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (a) != "undefined") {_RecordType("<64,65,2>",(a)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (a[7]) != "undefined") {_RecordType("<70,74,2>",(a[7])); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (a) != "undefined") {_RecordType("<70,71,2>",(a)); Inst17++; } } catch(e) {}
  return [a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7]];
}

try { if (Inst18 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<80,88,5>",(noInline)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (foo) != "undefined") {_RecordType("<89,92,5>",(foo)); Inst19++; } } catch(e) {}
noInline(foo);

try { if (Inst20 <= 1000 && typeof (arraycmp) != "undefined") {_RecordType("<105,113,7>",(arraycmp)); Inst20++; } } catch(e) {}
function arraycmp(a, b) {
try { if (Inst21 <= 1000 && typeof (a) != "undefined") {_RecordType("<114,115,7>",(a)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (b) != "undefined") {_RecordType("<117,118,7>",(b)); Inst22++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<128,136,8>",(a.length)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (a) != "undefined") {_RecordType("<128,129,8>",(a)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (b.length) != "undefined") {_RecordType("<140,148,8>",(b.length)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (b) != "undefined") {_RecordType("<140,141,8>",(b)); Inst26++; } } catch(e) {}
  if (a.length != b.length) {
    return false;
  }

  for (var i = 0; i < a.length; ++i) {
try { if (Inst27 <= 1000 && typeof (i) != "undefined") {_RecordType("<186,187,12>",(i)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (i) != "undefined") {_RecordType("<193,194,12>",(i)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<197,205,12>",(a.length)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (a) != "undefined") {_RecordType("<197,198,12>",(a)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (i) != "undefined") {_RecordType("<209,210,12>",(i)); Inst31++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (a[i]) != "undefined") {_RecordType("<222,226,13>",(a[i])); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (a) != "undefined") {_RecordType("<222,223,13>",(a)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (b[i]) != "undefined") {_RecordType("<230,234,13>",(b[i])); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (b) != "undefined") {_RecordType("<230,231,13>",(b)); Inst35++; } } catch(e) {}
    if (a[i] != b[i]) {
      return false;
    }
  }

  return true;
}

for (var i = 0; i < 100000; ++i) {
try { if (Inst36 <= 1000 && typeof (i) != "undefined") {_RecordType("<296,297,21>",(i)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (i) != "undefined") {_RecordType("<303,304,21>",(i)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (i) != "undefined") {_RecordType("<317,318,21>",(i)); Inst38++; } } catch(e) {}
try { if (Inst40 <= 1000 && typeof (foo) != "undefined") {_RecordType("<337,340,22>",(foo)); Inst40++; } } catch(e) {}
  var result = foo([1, 2, 3, 4, 5, 6, 7, 8]);
try { if (Inst39 <= 1000 && typeof (result) != "undefined") {_RecordType("<328,334,22>",(result)); Inst39++; } } catch(e) {}

try { if (Inst41 <= 1000 && typeof (arraycmp) != "undefined") {_RecordType("<376,384,24>",(arraycmp)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (result) != "undefined") {_RecordType("<385,391,24>",(result)); Inst42++; } } catch(e) {}
  if (!arraycmp(result, [1, 2, 3, 4, 5, 6, 7, 8])) {
try { if (Inst43 <= 1000 && typeof (result) != "undefined") {_RecordType("<463,469,25>",(result)); Inst43++; } } catch(e) {}
    throw "Error: bad result (1..8): " + result;
  }
}

try { if (Inst45 <= 1000 && typeof (foo) != "undefined") {_RecordType("<491,494,29>",(foo)); Inst45++; } } catch(e) {}
var result = foo([1, 2, 3, 4, 5, 6, 7]);
try { if (Inst44 <= 1000 && typeof (result) != "undefined") {_RecordType("<482,488,29>",(result)); Inst44++; } } catch(e) {}

try { if (Inst46 <= 1000 && typeof (arraycmp) != "undefined") {_RecordType("<525,533,31>",(arraycmp)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (result) != "undefined") {_RecordType("<534,540,31>",(result)); Inst47++; } } catch(e) {}
if (!arraycmp(result, [1, 2, 3, 4, 5, 6, 7, void 0])) {
try { if (Inst48 <= 1000 && typeof (result) != "undefined") {_RecordType("<615,621,32>",(result)); Inst48++; } } catch(e) {}
  throw "Error: bad result (1..7): " + result;
}

try { if (Inst50 <= 1000 && typeof (foo) != "undefined") {_RecordType("<639,642,35>",(foo)); Inst50++; } } catch(e) {}
var result = foo([1, 2, 3, 4, 5, 6]);
try { if (Inst49 <= 1000 && typeof (result) != "undefined") {_RecordType("<630,636,35>",(result)); Inst49++; } } catch(e) {}

try { if (Inst51 <= 1000 && typeof (arraycmp) != "undefined") {_RecordType("<670,678,37>",(arraycmp)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (result) != "undefined") {_RecordType("<679,685,37>",(result)); Inst52++; } } catch(e) {}
if (!arraycmp(result, [1, 2, 3, 4, 5, 6, void 0, void 0])) {
try { if (Inst53 <= 1000 && typeof (result) != "undefined") {_RecordType("<765,771,38>",(result)); Inst53++; } } catch(e) {}
  throw "Error: bad result (1..6): " + result;
}

try { if (Inst55 <= 1000 && typeof (foo) != "undefined") {_RecordType("<789,792,41>",(foo)); Inst55++; } } catch(e) {}
var result = foo([1, 2, 3, 4, 5]);
try { if (Inst54 <= 1000 && typeof (result) != "undefined") {_RecordType("<780,786,41>",(result)); Inst54++; } } catch(e) {}

try { if (Inst56 <= 1000 && typeof (arraycmp) != "undefined") {_RecordType("<817,825,43>",(arraycmp)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (result) != "undefined") {_RecordType("<826,832,43>",(result)); Inst57++; } } catch(e) {}
if (!arraycmp(result, [1, 2, 3, 4, 5, void 0, void 0, void 0])) {
try { if (Inst58 <= 1000 && typeof (result) != "undefined") {_RecordType("<917,923,44>",(result)); Inst58++; } } catch(e) {}
  throw "Error: bad result (1..5): " + result;
}

try { if (Inst60 <= 1000 && typeof (foo) != "undefined") {_RecordType("<941,944,47>",(foo)); Inst60++; } } catch(e) {}
var result = foo([1, 2, 3, 4]);
try { if (Inst59 <= 1000 && typeof (result) != "undefined") {_RecordType("<932,938,47>",(result)); Inst59++; } } catch(e) {}

try { if (Inst61 <= 1000 && typeof (arraycmp) != "undefined") {_RecordType("<966,974,49>",(arraycmp)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (result) != "undefined") {_RecordType("<975,981,49>",(result)); Inst62++; } } catch(e) {}
if (!arraycmp(result, [1, 2, 3, 4, void 0, void 0, void 0, void 0])) {
try { if (Inst63 <= 1000 && typeof (result) != "undefined") {_RecordType("<1071,1077,50>",(result)); Inst63++; } } catch(e) {}
  throw "Error: bad result (1..4): " + result;
}

try { if (Inst65 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1095,1098,53>",(foo)); Inst65++; } } catch(e) {}
var result = foo([1, 2, 3]);
try { if (Inst64 <= 1000 && typeof (result) != "undefined") {_RecordType("<1086,1092,53>",(result)); Inst64++; } } catch(e) {}

try { if (Inst66 <= 1000 && typeof (arraycmp) != "undefined") {_RecordType("<1117,1125,55>",(arraycmp)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (result) != "undefined") {_RecordType("<1126,1132,55>",(result)); Inst67++; } } catch(e) {}
if (!arraycmp(result, [1, 2, 3, void 0, void 0, void 0, void 0, void 0])) {
try { if (Inst68 <= 1000 && typeof (result) != "undefined") {_RecordType("<1227,1233,56>",(result)); Inst68++; } } catch(e) {}
  throw "Error: bad result (1..3): " + result;
}

try { if (Inst70 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1251,1254,59>",(foo)); Inst70++; } } catch(e) {}
var result = foo([1, 2]);
try { if (Inst69 <= 1000 && typeof (result) != "undefined") {_RecordType("<1242,1248,59>",(result)); Inst69++; } } catch(e) {}

try { if (Inst71 <= 1000 && typeof (arraycmp) != "undefined") {_RecordType("<1270,1278,61>",(arraycmp)); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (result) != "undefined") {_RecordType("<1279,1285,61>",(result)); Inst72++; } } catch(e) {}
if (!arraycmp(result, [1, 2, void 0, void 0, void 0, void 0, void 0, void 0])) {
try { if (Inst73 <= 1000 && typeof (result) != "undefined") {_RecordType("<1385,1391,62>",(result)); Inst73++; } } catch(e) {}
  throw "Error: bad result (1..2): " + result;
}

try { if (Inst75 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1409,1412,65>",(foo)); Inst75++; } } catch(e) {}
var result = foo([1]);
try { if (Inst74 <= 1000 && typeof (result) != "undefined") {_RecordType("<1400,1406,65>",(result)); Inst74++; } } catch(e) {}

try { if (Inst76 <= 1000 && typeof (arraycmp) != "undefined") {_RecordType("<1425,1433,67>",(arraycmp)); Inst76++; } } catch(e) {}try { if (Inst77 <= 1000 && typeof (result) != "undefined") {_RecordType("<1434,1440,67>",(result)); Inst77++; } } catch(e) {}
if (!arraycmp(result, [1, void 0, void 0, void 0, void 0, void 0, void 0, void 0])) {
try { if (Inst78 <= 1000 && typeof (result) != "undefined") {_RecordType("<1545,1551,68>",(result)); Inst78++; } } catch(e) {}
  throw "Error: bad result (1..1): " + result;
}

try { if (Inst80 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1569,1572,71>",(foo)); Inst80++; } } catch(e) {}
var result = foo([]);
try { if (Inst79 <= 1000 && typeof (result) != "undefined") {_RecordType("<1560,1566,71>",(result)); Inst79++; } } catch(e) {}

try { if (Inst81 <= 1000 && typeof (arraycmp) != "undefined") {_RecordType("<1584,1592,73>",(arraycmp)); Inst81++; } } catch(e) {}try { if (Inst82 <= 1000 && typeof (result) != "undefined") {_RecordType("<1593,1599,73>",(result)); Inst82++; } } catch(e) {}
if (!arraycmp(result, [void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0])) {
try { if (Inst83 <= 1000 && typeof (result) != "undefined") {_RecordType("<1709,1715,74>",(result)); Inst83++; } } catch(e) {}
  throw "Error: bad result (1..1): " + result;
}

