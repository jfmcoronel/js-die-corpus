var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//@ runBigIntEnabled
try { if (Inst0 <= 1000 && typeof (assert) != "undefined") {_RecordType("<30,36,2>",(assert)); Inst0++; } } catch(e) {}
function assert(a) {
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<37,38,2>",(a)); Inst1++; } } catch(e) {}
  ;
}

(() => {
try { if (Inst3 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<68,99,7>",(Object.getOwnPropertyDescriptor)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Object) != "undefined") {_RecordType("<68,74,7>",(Object)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (BigInt.prototype) != "undefined") {_RecordType("<100,116,7>",(BigInt.prototype)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (BigInt) != "undefined") {_RecordType("<100,106,7>",(BigInt)); Inst6++; } } catch(e) {}
  let p = Object.getOwnPropertyDescriptor(BigInt.prototype, "toString");
try { if (Inst2 <= 1000 && typeof (p) != "undefined") {_RecordType("<64,65,7>",(p)); Inst2++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (p.enumerable) != "undefined") {_RecordType("<133,145,8>",(p.enumerable)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (p) != "undefined") {_RecordType("<133,134,8>",(p)); Inst8++; } } catch(e) {}
  p.enumerable === false;
try { if (Inst9 <= 1000 && typeof (p.configurable) != "undefined") {_RecordType("<159,173,9>",(p.configurable)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (p) != "undefined") {_RecordType("<159,160,9>",(p)); Inst10++; } } catch(e) {}
  p.configurable === true;
try { if (Inst11 <= 1000 && typeof (p.writable) != "undefined") {_RecordType("<186,196,10>",(p.writable)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (p) != "undefined") {_RecordType("<186,187,10>",(p)); Inst12++; } } catch(e) {}
  p.writable === true;
})();

(() => {
try { if (Inst14 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<233,264,14>",(Object.getOwnPropertyDescriptor)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Object) != "undefined") {_RecordType("<233,239,14>",(Object)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (BigInt.prototype) != "undefined") {_RecordType("<265,281,14>",(BigInt.prototype)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (BigInt) != "undefined") {_RecordType("<265,271,14>",(BigInt)); Inst17++; } } catch(e) {}
  let p = Object.getOwnPropertyDescriptor(BigInt.prototype, "toLocaleString");
try { if (Inst13 <= 1000 && typeof (p) != "undefined") {_RecordType("<229,230,14>",(p)); Inst13++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (p.enumerable) != "undefined") {_RecordType("<304,316,15>",(p.enumerable)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (p) != "undefined") {_RecordType("<304,305,15>",(p)); Inst19++; } } catch(e) {}
  p.enumerable === false;
try { if (Inst20 <= 1000 && typeof (p.configurable) != "undefined") {_RecordType("<330,344,16>",(p.configurable)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (p) != "undefined") {_RecordType("<330,331,16>",(p)); Inst21++; } } catch(e) {}
  p.configurable === true;
try { if (Inst22 <= 1000 && typeof (p.writable) != "undefined") {_RecordType("<357,367,17>",(p.writable)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (p) != "undefined") {_RecordType("<357,358,17>",(p)); Inst23++; } } catch(e) {}
  p.writable === true;
})();

(() => {
try { if (Inst25 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<404,435,21>",(Object.getOwnPropertyDescriptor)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Object) != "undefined") {_RecordType("<404,410,21>",(Object)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (BigInt.prototype) != "undefined") {_RecordType("<436,452,21>",(BigInt.prototype)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (BigInt) != "undefined") {_RecordType("<436,442,21>",(BigInt)); Inst28++; } } catch(e) {}
  let p = Object.getOwnPropertyDescriptor(BigInt.prototype, "valueOf");
try { if (Inst24 <= 1000 && typeof (p) != "undefined") {_RecordType("<400,401,21>",(p)); Inst24++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (p.enumerable) != "undefined") {_RecordType("<468,480,22>",(p.enumerable)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (p) != "undefined") {_RecordType("<468,469,22>",(p)); Inst30++; } } catch(e) {}
  p.enumerable === false;
try { if (Inst31 <= 1000 && typeof (p.configurable) != "undefined") {_RecordType("<494,508,23>",(p.configurable)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (p) != "undefined") {_RecordType("<494,495,23>",(p)); Inst32++; } } catch(e) {}
  p.configurable === true;
try { if (Inst33 <= 1000 && typeof (p.writable) != "undefined") {_RecordType("<521,531,24>",(p.writable)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (p) != "undefined") {_RecordType("<521,522,24>",(p)); Inst34++; } } catch(e) {}
  p.writable === true;
})();

(() => {
try { if (Inst36 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<568,599,28>",(Object.getOwnPropertyDescriptor)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (Object) != "undefined") {_RecordType("<568,574,28>",(Object)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (BigInt.prototype) != "undefined") {_RecordType("<600,616,28>",(BigInt.prototype)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (BigInt) != "undefined") {_RecordType("<600,606,28>",(BigInt)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (Symbol.toStringTag) != "undefined") {_RecordType("<618,636,28>",(Symbol.toStringTag)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<618,624,28>",(Symbol)); Inst41++; } } catch(e) {}
  let p = Object.getOwnPropertyDescriptor(BigInt.prototype, Symbol.toStringTag);
try { if (Inst35 <= 1000 && typeof (p) != "undefined") {_RecordType("<564,565,28>",(p)); Inst35++; } } catch(e) {}
try { if (Inst42 <= 1000 && typeof (p.enumerable) != "undefined") {_RecordType("<641,653,29>",(p.enumerable)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (p) != "undefined") {_RecordType("<641,642,29>",(p)); Inst43++; } } catch(e) {}
  p.enumerable === false;
try { if (Inst44 <= 1000 && typeof (p.configurable) != "undefined") {_RecordType("<667,681,30>",(p.configurable)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (p) != "undefined") {_RecordType("<667,668,30>",(p)); Inst45++; } } catch(e) {}
  p.configurable === true;
try { if (Inst46 <= 1000 && typeof (p.writable) != "undefined") {_RecordType("<694,704,31>",(p.writable)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (p) != "undefined") {_RecordType("<694,695,31>",(p)); Inst47++; } } catch(e) {}
  p.writable === false;
})();

