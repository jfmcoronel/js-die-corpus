var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
var gi;
try { if (Inst0 <= 1000 && typeof (gi) != "undefined") {_RecordType("<4,6,1>",(gi)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (foo) != "undefined") {_RecordType("<18,21,3>",(foo)); Inst1++; } } catch(e) {}
function foo() {
try { if (Inst2 <= 1000 && typeof (arguments[gi]) != "undefined") {_RecordType("<35,48,4>",(arguments[gi])); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<35,44,4>",(arguments)); Inst3++; } } catch(e) {}
  return arguments[gi];
}

try { if (Inst4 <= 1000 && typeof (bar) != "undefined") {_RecordType("<62,65,7>",(bar)); Inst4++; } } catch(e) {}
function bar(array, i) {
try { if (Inst5 <= 1000 && typeof (array) != "undefined") {_RecordType("<66,71,7>",(array)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<73,74,7>",(i)); Inst6++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<85,86,8>",(i)); Inst8++; } } catch(e) {}
  gi = i;
try { if (Inst7 <= 1000 && typeof (gi) != "undefined") {_RecordType("<80,82,8>",(gi)); Inst7++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (foo.apply) != "undefined") {_RecordType("<97,106,9>",(foo.apply)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (foo) != "undefined") {_RecordType("<97,100,9>",(foo)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (array) != "undefined") {_RecordType("<113,118,9>",(array)); Inst11++; } } catch(e) {}
  return foo.apply(this, array);
}

try { if (Inst12 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<124,132,12>",(noInline)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (bar) != "undefined") {_RecordType("<133,136,12>",(bar)); Inst13++; } } catch(e) {}
noInline(bar);
var bigArray = [];
try { if (Inst14 <= 1000 && typeof (bigArray) != "undefined") {_RecordType("<143,151,13>",(bigArray)); Inst14++; } } catch(e) {}

for (var i = 0; i < 50; ++i) {
try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<168,169,15>",(i)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<175,176,15>",(i)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (i) != "undefined") {_RecordType("<185,186,15>",(i)); Inst17++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (bigArray.push) != "undefined") {_RecordType("<192,205,16>",(bigArray.push)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (bigArray) != "undefined") {_RecordType("<192,200,16>",(bigArray)); Inst19++; } } catch(e) {}
  bigArray.push(42);
}

for (var i = 0; i < 10000; ++i) {
try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<223,224,19>",(i)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<230,231,19>",(i)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<243,244,19>",(i)); Inst22++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<259,260,20>",(i)); Inst24++; } } catch(e) {}
  var mi = i % 50;
try { if (Inst23 <= 1000 && typeof (mi) != "undefined") {_RecordType("<254,256,20>",(mi)); Inst23++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (bar) != "undefined") {_RecordType("<282,285,21>",(bar)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (bigArray) != "undefined") {_RecordType("<286,294,21>",(bigArray)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (mi) != "undefined") {_RecordType("<296,298,21>",(mi)); Inst28++; } } catch(e) {}
  var result = bar(bigArray, mi);
try { if (Inst25 <= 1000 && typeof (result) != "undefined") {_RecordType("<273,279,21>",(result)); Inst25++; } } catch(e) {}

try { if (Inst29 <= 1000 && typeof (result) != "undefined") {_RecordType("<308,314,23>",(result)); Inst29++; } } catch(e) {}
  if (result !== 42) {
try { if (Inst30 <= 1000 && typeof (result) != "undefined") {_RecordType("<366,372,24>",(result)); Inst30++; } } catch(e) {}
    throw "Bad result in first loop: " + result + "; expected: " + 42;
  }
}

for (var i = 0; i < 10000; ++i) {
try { if (Inst31 <= 1000 && typeof (i) != "undefined") {_RecordType("<412,413,28>",(i)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (i) != "undefined") {_RecordType("<419,420,28>",(i)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (i) != "undefined") {_RecordType("<432,433,28>",(i)); Inst33++; } } catch(e) {}
try { if (Inst35 <= 1000 && typeof (i) != "undefined") {_RecordType("<448,449,29>",(i)); Inst35++; } } catch(e) {}
  var mi = i % 100;
try { if (Inst34 <= 1000 && typeof (mi) != "undefined") {_RecordType("<443,445,29>",(mi)); Inst34++; } } catch(e) {}
try { if (Inst37 <= 1000 && typeof (bar) != "undefined") {_RecordType("<472,475,30>",(bar)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (mi) != "undefined") {_RecordType("<482,484,30>",(mi)); Inst38++; } } catch(e) {}
  var result = bar([42], mi);
try { if (Inst36 <= 1000 && typeof (result) != "undefined") {_RecordType("<463,469,30>",(result)); Inst36++; } } catch(e) {}
try { if (Inst40 <= 1000 && typeof (mi) != "undefined") {_RecordType("<504,506,31>",(mi)); Inst40++; } } catch(e) {}
  var expected = mi ? void 0 : 42;
try { if (Inst39 <= 1000 && typeof (expected) != "undefined") {_RecordType("<493,501,31>",(expected)); Inst39++; } } catch(e) {}

try { if (Inst41 <= 1000 && typeof (result) != "undefined") {_RecordType("<529,535,33>",(result)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (expected) != "undefined") {_RecordType("<540,548,33>",(expected)); Inst42++; } } catch(e) {}
  if (result !== expected) {
try { if (Inst43 <= 1000 && typeof (result) != "undefined") {_RecordType("<594,600,34>",(result)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (expected) != "undefined") {_RecordType("<620,628,34>",(expected)); Inst44++; } } catch(e) {}
    throw "Bad result in second loop: " + result + "; expected: " + expected;
  }
}

