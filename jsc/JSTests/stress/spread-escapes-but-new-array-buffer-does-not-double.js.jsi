var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (assert) != "undefined") {_RecordType("<9,15,1>",(assert)); Inst0++; } } catch(e) {}
function assert(b) {
try { if (Inst1 <= 1000 && typeof (b) != "undefined") {_RecordType("<16,17,1>",(b)); Inst1++; } } catch(e) {}
  ;
}

try { if (Inst2 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<28,36,5>",(noInline)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (assert) != "undefined") {_RecordType("<37,43,5>",(assert)); Inst3++; } } catch(e) {}
noInline(assert);

try { if (Inst4 <= 1000 && typeof (getProperties) != "undefined") {_RecordType("<56,69,7>",(getProperties)); Inst4++; } } catch(e) {}
function getProperties(obj) {
try { if (Inst5 <= 1000 && typeof (obj) != "undefined") {_RecordType("<70,73,7>",(obj)); Inst5++; } } catch(e) {}
  let properties = [];
try { if (Inst6 <= 1000 && typeof (properties) != "undefined") {_RecordType("<83,93,8>",(properties)); Inst6++; } } catch(e) {}

  for (let name of Object.getOwnPropertyNames(obj)) {
try { if (Inst7 <= 1000 && typeof (name) != "undefined") {_RecordType("<112,116,10>",(name)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Object.getOwnPropertyNames) != "undefined") {_RecordType("<120,146,10>",(Object.getOwnPropertyNames)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Object) != "undefined") {_RecordType("<120,126,10>",(Object)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (obj) != "undefined") {_RecordType("<147,150,10>",(obj)); Inst10++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (properties.push) != "undefined") {_RecordType("<159,174,11>",(properties.push)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (properties) != "undefined") {_RecordType("<159,169,11>",(properties)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (name) != "undefined") {_RecordType("<175,179,11>",(name)); Inst13++; } } catch(e) {}
    properties.push(name);
  }

try { if (Inst14 <= 1000 && typeof (properties) != "undefined") {_RecordType("<196,206,14>",(properties)); Inst14++; } } catch(e) {}
  return properties;
}

try { if (Inst15 <= 1000 && typeof (theFunc) != "undefined") {_RecordType("<220,227,17>",(theFunc)); Inst15++; } } catch(e) {}
function theFunc(obj, index) {
try { if (Inst16 <= 1000 && typeof (obj) != "undefined") {_RecordType("<228,231,17>",(obj)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (index) != "undefined") {_RecordType("<233,238,17>",(index)); Inst17++; } } catch(e) {}
  let args = [42.195, 20.2];
try { if (Inst18 <= 1000 && typeof (args) != "undefined") {_RecordType("<248,252,18>",(args)); Inst18++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (getProperties) != "undefined") {_RecordType("<289,302,19>",(getProperties)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (obj) != "undefined") {_RecordType("<303,306,19>",(obj)); Inst21++; } } catch(e) {}
  let functions = getProperties(obj);
try { if (Inst19 <= 1000 && typeof (functions) != "undefined") {_RecordType("<277,286,19>",(functions)); Inst19++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (functions[index % functions.length]) != "undefined") {_RecordType("<322,357,20>",(functions[index % functions.length])); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (functions) != "undefined") {_RecordType("<322,331,20>",(functions)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (index) != "undefined") {_RecordType("<332,337,20>",(index)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (functions.length) != "undefined") {_RecordType("<340,356,20>",(functions.length)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (functions) != "undefined") {_RecordType("<340,349,20>",(functions)); Inst27++; } } catch(e) {}
  let func = functions[index % functions.length];
try { if (Inst22 <= 1000 && typeof (func) != "undefined") {_RecordType("<315,319,20>",(func)); Inst22++; } } catch(e) {}
try { if (Inst28 <= 1000 && typeof (obj[func]) != "undefined") {_RecordType("<361,370,21>",(obj[func])); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (obj) != "undefined") {_RecordType("<361,364,21>",(obj)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (args) != "undefined") {_RecordType("<374,378,21>",(args)); Inst30++; } } catch(e) {}
  obj[func](...args);
}

let obj = {
  valueOf: function (x, y) {
try { if (Inst32 <= 1000 && typeof (x) != "undefined") {_RecordType("<417,418,25>",(x)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (y) != "undefined") {_RecordType("<420,421,25>",(y)); Inst33++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof (x) != "undefined") {_RecordType("<429,430,26>",(x)); Inst34++; } } catch(e) {}
    x === 42.195;
try { if (Inst35 <= 1000 && typeof (y) != "undefined") {_RecordType("<447,448,27>",(y)); Inst35++; } } catch(e) {}
    y === 20.2;

try { if (Inst36 <= 1000 && typeof (e) != "undefined") {_RecordType("<491,492,31>",(e)); Inst36++; } } catch(e) {}
    try {
      ;
    } catch (e) {
      ;
    }
  }
};
try { if (Inst31 <= 1000 && typeof (obj) != "undefined") {_RecordType("<388,391,24>",(obj)); Inst31++; } } catch(e) {}

for (let i = 0; i < 1e5; ++i) {
try { if (Inst37 <= 1000 && typeof (i) != "undefined") {_RecordType("<527,528,37>",(i)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (i) != "undefined") {_RecordType("<534,535,37>",(i)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (i) != "undefined") {_RecordType("<545,546,37>",(i)); Inst39++; } } catch(e) {}
  for (let _i = 0; _i < 100; _i++) {
try { if (Inst40 <= 1000 && typeof (_i) != "undefined") {_RecordType("<561,563,38>",(_i)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (_i) != "undefined") {_RecordType("<569,571,38>",(_i)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (_i) != "undefined") {_RecordType("<579,581,38>",(_i)); Inst42++; } } catch(e) {}
    ;
  }

try { if (Inst43 <= 1000 && typeof (theFunc) != "undefined") {_RecordType("<600,607,42>",(theFunc)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (obj) != "undefined") {_RecordType("<608,611,42>",(obj)); Inst44++; } } catch(e) {}
  theFunc(obj, 897989);
}

