var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<9,17,1>",(shouldBe)); Inst0++; } } catch(e) {}
function shouldBe(actual, expected) {
try { if (Inst1 <= 1000 && typeof (actual) != "undefined") {_RecordType("<18,24,1>",(actual)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (expected) != "undefined") {_RecordType("<26,34,1>",(expected)); Inst2++; } } catch(e) {}
  ;
}

try { if (Inst3 <= 1000 && typeof (shouldThrow) != "undefined") {_RecordType("<54,65,5>",(shouldThrow)); Inst3++; } } catch(e) {}
function shouldThrow(func, errorMessage) {
try { if (Inst4 <= 1000 && typeof (func) != "undefined") {_RecordType("<66,70,5>",(func)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (errorMessage) != "undefined") {_RecordType("<72,84,5>",(errorMessage)); Inst5++; } } catch(e) {}
  var errorThrown = false;
try { if (Inst6 <= 1000 && typeof (errorThrown) != "undefined") {_RecordType("<94,105,6>",(errorThrown)); Inst6++; } } catch(e) {}
  var error = null;
try { if (Inst7 <= 1000 && typeof (error) != "undefined") {_RecordType("<121,126,7>",(error)); Inst7++; } } catch(e) {}

try { if (Inst9 <= 1000 && typeof (e) != "undefined") {_RecordType("<167,168,11>",(e)); Inst9++; } } catch(e) {}
  try {
try { if (Inst8 <= 1000 && typeof (func) != "undefined") {_RecordType("<148,152,10>",(func)); Inst8++; } } catch(e) {}
    func();
  } catch (e) {
    errorThrown = true;
try { if (Inst10 <= 1000 && typeof (errorThrown) != "undefined") {_RecordType("<176,187,12>",(errorThrown)); Inst10++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (e) != "undefined") {_RecordType("<208,209,13>",(e)); Inst12++; } } catch(e) {}
    error = e;
try { if (Inst11 <= 1000 && typeof (error) != "undefined") {_RecordType("<200,205,13>",(error)); Inst11++; } } catch(e) {}
  }
}

var executorCalled = false;
try { if (Inst13 <= 1000 && typeof (executorCalled) != "undefined") {_RecordType("<222,236,17>",(executorCalled)); Inst13++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (shouldThrow) != "undefined") {_RecordType("<246,257,18>",(shouldThrow)); Inst14++; } } catch(e) {}
shouldThrow(() => {
try { if (Inst15 <= 1000 && typeof (Promise) != "undefined") {_RecordType("<268,275,19>",(Promise)); Inst15++; } } catch(e) {}
  Promise(function (resolve, reject) {
try { if (Inst16 <= 1000 && typeof (resolve) != "undefined") {_RecordType("<286,293,19>",(resolve)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (reject) != "undefined") {_RecordType("<295,301,19>",(reject)); Inst17++; } } catch(e) {}
    executorCalled = true;
try { if (Inst18 <= 1000 && typeof (executorCalled) != "undefined") {_RecordType("<309,323,20>",(executorCalled)); Inst18++; } } catch(e) {}
  });
}, `TypeError: calling Promise constructor without new is invalid`);
try { if (Inst19 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<407,415,23>",(shouldBe)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (executorCalled) != "undefined") {_RecordType("<416,430,23>",(executorCalled)); Inst20++; } } catch(e) {}
shouldBe(executorCalled, false); // But should accept inheriting Promise.

try { if (Inst30 <= 1000 && typeof (Promise) != "undefined") {_RecordType("<505,512,25>",(Promise)); Inst30++; } } catch(e) {}
class Deferred extends Promise {
  constructor() {
    let resolve, reject;
try { if (Inst22 <= 1000 && typeof (resolve) != "undefined") {_RecordType("<541,548,27>",(resolve)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (reject) != "undefined") {_RecordType("<550,556,27>",(reject)); Inst23++; } } catch(e) {}
    super(function (aResolve, aReject) {
try { if (Inst24 <= 1000 && typeof (aResolve) != "undefined") {_RecordType("<578,586,28>",(aResolve)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (aReject) != "undefined") {_RecordType("<588,595,28>",(aReject)); Inst25++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (aResolve) != "undefined") {_RecordType("<620,628,29>",(aResolve)); Inst27++; } } catch(e) {}
      this.resolve = aResolve;
try { if (Inst26 <= 1000 && typeof (this.resolve) != "undefined") {_RecordType("<605,617,29>",(this.resolve)); Inst26++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (aReject) != "undefined") {_RecordType("<650,657,30>",(aReject)); Inst29++; } } catch(e) {}
      this.reject = aReject;
try { if (Inst28 <= 1000 && typeof (this.reject) != "undefined") {_RecordType("<636,647,30>",(this.reject)); Inst28++; } } catch(e) {}
    });
  }

}
try { if (Inst21 <= 1000 && typeof (Deferred) != "undefined") {_RecordType("<488,496,25>",(Deferred)); Inst21++; } } catch(e) {}

{
try { if (Inst32 <= 1000 && typeof (Deferred) != "undefined") {_RecordType("<698,706,37>",(Deferred)); Inst32++; } } catch(e) {}
  let deferred = new Deferred();
try { if (Inst31 <= 1000 && typeof (deferred) != "undefined") {_RecordType("<683,691,37>",(deferred)); Inst31++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<712,720,38>",(shouldBe)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (deferred.__proto__) != "undefined") {_RecordType("<721,739,38>",(deferred.__proto__)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (deferred) != "undefined") {_RecordType("<721,729,38>",(deferred)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (Deferred.prototype) != "undefined") {_RecordType("<741,759,38>",(Deferred.prototype)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (Deferred) != "undefined") {_RecordType("<741,749,38>",(Deferred)); Inst37++; } } catch(e) {}
  shouldBe(deferred.__proto__, Deferred.prototype);
try { if (Inst38 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<764,772,39>",(shouldBe)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (deferred.__proto__.__proto__) != "undefined") {_RecordType("<773,801,39>",(deferred.__proto__.__proto__)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (deferred.__proto__) != "undefined") {_RecordType("<773,791,39>",(deferred.__proto__)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (deferred) != "undefined") {_RecordType("<773,781,39>",(deferred)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (Promise.prototype) != "undefined") {_RecordType("<803,820,39>",(Promise.prototype)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (Promise) != "undefined") {_RecordType("<803,810,39>",(Promise)); Inst43++; } } catch(e) {}
  shouldBe(deferred.__proto__.__proto__, Promise.prototype);
try { if (Inst44 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<825,833,40>",(shouldBe)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (Deferred.__proto__) != "undefined") {_RecordType("<834,852,40>",(Deferred.__proto__)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (Deferred) != "undefined") {_RecordType("<834,842,40>",(Deferred)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (Promise) != "undefined") {_RecordType("<854,861,40>",(Promise)); Inst47++; } } catch(e) {}
  shouldBe(Deferred.__proto__, Promise);
}

