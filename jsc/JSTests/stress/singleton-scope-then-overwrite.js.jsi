var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (foo) != "undefined") {_RecordType("<9,12,1>",(foo)); Inst0++; } } catch(e) {}
function foo(a) {
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<13,14,1>",(a)); Inst1++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (a) != "undefined") {_RecordType("<28,29,2>",(a)); Inst3++; } } catch(e) {}
  var x = a + 1;
try { if (Inst2 <= 1000 && typeof (x) != "undefined") {_RecordType("<24,25,2>",(x)); Inst2++; } } catch(e) {}

  var f = function (a) {
try { if (Inst5 <= 1000 && typeof (a) != "undefined") {_RecordType("<56,57,4>",(a)); Inst5++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (x) != "undefined") {_RecordType("<72,73,5>",(x)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (a) != "undefined") {_RecordType("<76,77,5>",(a)); Inst7++; } } catch(e) {}
    return x + a;
  };
try { if (Inst4 <= 1000 && typeof (f) != "undefined") {_RecordType("<42,43,4>",(f)); Inst4++; } } catch(e) {}

try { if (Inst8 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<87,95,8>",(noInline)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (f) != "undefined") {_RecordType("<96,97,8>",(f)); Inst9++; } } catch(e) {}
  noInline(f);

  for (var i = 0; i < 10000; ++i) {
try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<112,113,10>",(i)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<119,120,10>",(i)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<132,133,10>",(i)); Inst12++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (f) != "undefined") {_RecordType("<154,155,11>",(f)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<156,157,11>",(i)); Inst15++; } } catch(e) {}
    var result = f(i);
try { if (Inst13 <= 1000 && typeof (result) != "undefined") {_RecordType("<145,151,11>",(result)); Inst13++; } } catch(e) {}

try { if (Inst16 <= 1000 && typeof (result) != "undefined") {_RecordType("<169,175,13>",(result)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (a) != "undefined") {_RecordType("<179,180,13>",(a)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (i) != "undefined") {_RecordType("<187,188,13>",(i)); Inst18++; } } catch(e) {}
    if (result != a + 1 + i) {
try { if (Inst19 <= 1000 && typeof (result) != "undefined") {_RecordType("<228,234,14>",(result)); Inst19++; } } catch(e) {}
      throw "Error: bad result: " + result;
    }
  }

  x = 999;
try { if (Inst20 <= 1000 && typeof (x) != "undefined") {_RecordType("<249,250,18>",(x)); Inst20++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (f) != "undefined") {_RecordType("<273,274,19>",(f)); Inst22++; } } catch(e) {}
  var result = f(1);
try { if (Inst21 <= 1000 && typeof (result) != "undefined") {_RecordType("<264,270,19>",(result)); Inst21++; } } catch(e) {}

try { if (Inst23 <= 1000 && typeof (result) != "undefined") {_RecordType("<286,292,21>",(result)); Inst23++; } } catch(e) {}
  if (result != 999 + 1) {
try { if (Inst24 <= 1000 && typeof (result) != "undefined") {_RecordType("<341,347,22>",(result)); Inst24++; } } catch(e) {}
    throw "Error: bad result: " + result;
  }
}

try { if (Inst25 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<356,364,26>",(noInline)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (foo) != "undefined") {_RecordType("<365,368,26>",(foo)); Inst26++; } } catch(e) {}
noInline(foo);

for (var i = 0; i < 3; ++i) {
try { if (Inst27 <= 1000 && typeof (i) != "undefined") {_RecordType("<381,382,28>",(i)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (i) != "undefined") {_RecordType("<388,389,28>",(i)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (i) != "undefined") {_RecordType("<397,398,28>",(i)); Inst29++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (foo) != "undefined") {_RecordType("<404,407,29>",(foo)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (i) != "undefined") {_RecordType("<413,414,29>",(i)); Inst31++; } } catch(e) {}
  foo(42 + i);
}

