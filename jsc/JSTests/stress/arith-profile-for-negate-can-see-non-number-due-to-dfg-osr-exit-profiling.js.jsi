var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (runNearStackLimit) != "undefined") {_RecordType("<9,26,1>",(runNearStackLimit)); Inst0++; } } catch(e) {}
function runNearStackLimit(f) {
try { if (Inst1 <= 1000 && typeof (f) != "undefined") {_RecordType("<27,28,1>",(f)); Inst1++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (e) != "undefined") {_RecordType("<67,68,4>",(e)); Inst3++; } } catch(e) {}
  try {
try { if (Inst2 <= 1000 && typeof (t) != "undefined") {_RecordType("<51,52,3>",(t)); Inst2++; } } catch(e) {}
    return t();
  } catch (e) {
try { if (Inst4 <= 1000 && typeof (f) != "undefined") {_RecordType("<83,84,5>",(f)); Inst4++; } } catch(e) {}
    return f();
  }
}

let flag = false;
try { if (Inst5 <= 1000 && typeof (flag) != "undefined") {_RecordType("<99,103,9>",(flag)); Inst5++; } } catch(e) {}

try { if (Inst6 <= 1000 && typeof (f1) != "undefined") {_RecordType("<123,125,11>",(f1)); Inst6++; } } catch(e) {}
function f1() {
try { if (Inst7 <= 1000 && typeof (flag) != "undefined") {_RecordType("<139,143,12>",(flag)); Inst7++; } } catch(e) {}
  return flag ? {} : 10;
}

try { if (Inst8 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<158,166,15>",(noInline)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (f1) != "undefined") {_RecordType("<167,169,15>",(f1)); Inst9++; } } catch(e) {}
noInline(f1);

try { if (Inst10 <= 1000 && typeof (f2) != "undefined") {_RecordType("<182,184,17>",(f2)); Inst10++; } } catch(e) {}
function f2() {
  ;
}

try { if (Inst11 <= 1000 && typeof (f3) != "undefined") {_RecordType("<205,207,21>",(f3)); Inst11++; } } catch(e) {}
function f3(arg) {
try { if (Inst12 <= 1000 && typeof (arg) != "undefined") {_RecordType("<208,211,21>",(arg)); Inst12++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (arg) != "undefined") {_RecordType("<227,230,22>",(arg)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (f1) != "undefined") {_RecordType("<233,235,22>",(f1)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (f2) != "undefined") {_RecordType("<240,242,22>",(f2)); Inst16++; } } catch(e) {}
  let r = -(arg ? f1() : f2());
try { if (Inst13 <= 1000 && typeof (r) != "undefined") {_RecordType("<221,222,22>",(r)); Inst13++; } } catch(e) {}
}

for (let i = 0; i < 100000; ++i) {
try { if (Inst17 <= 1000 && typeof (i) != "undefined") {_RecordType("<259,260,25>",(i)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (i) != "undefined") {_RecordType("<266,267,25>",(i)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (i) != "undefined") {_RecordType("<280,281,25>",(i)); Inst19++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (e) != "undefined") {_RecordType("<323,324,28>",(e)); Inst22++; } } catch(e) {}
  try {
try { if (Inst20 <= 1000 && typeof (f3) != "undefined") {_RecordType("<297,299,27>",(f3)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<303,304,27>",(i)); Inst21++; } } catch(e) {}
    f3(!!(i % 2));
  } catch (e) {
    ;
  }
}

flag = true;
try { if (Inst23 <= 1000 && typeof (flag) != "undefined") {_RecordType("<341,345,33>",(flag)); Inst23++; } } catch(e) {}

for (let i = 0; i < 100000; ++i) {
try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<364,365,35>",(i)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<371,372,35>",(i)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (i) != "undefined") {_RecordType("<385,386,35>",(i)); Inst26++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (e) != "undefined") {_RecordType("<475,476,40>",(e)); Inst30++; } } catch(e) {}
  try {
try { if (Inst27 <= 1000 && typeof (runNearStackLimit) != "undefined") {_RecordType("<402,419,37>",(runNearStackLimit)); Inst27++; } } catch(e) {}
    runNearStackLimit(() => {
try { if (Inst28 <= 1000 && typeof (f3) != "undefined") {_RecordType("<441,443,38>",(f3)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (i) != "undefined") {_RecordType("<447,448,38>",(i)); Inst29++; } } catch(e) {}
      return f3(!!(i % 2));
    });
  } catch (e) {
    ;
  }
}

