var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (assert) != "undefined") {_RecordType("<9,15,1>",(assert)); Inst0++; } } catch(e) {}
function assert(b) {
try { if (Inst1 <= 1000 && typeof (b) != "undefined") {_RecordType("<16,17,1>",(b)); Inst1++; } } catch(e) {}
  ;
}

let outer = 42;
try { if (Inst2 <= 1000 && typeof (outer) != "undefined") {_RecordType("<32,37,5>",(outer)); Inst2++; } } catch(e) {}

try { if (Inst3 <= 1000 && typeof (foo) != "undefined") {_RecordType("<54,57,7>",(foo)); Inst3++; } } catch(e) {}
function foo(r, s) {
try { if (Inst4 <= 1000 && typeof (r) != "undefined") {_RecordType("<58,59,7>",(r)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (s) != "undefined") {_RecordType("<61,62,7>",(s)); Inst5++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (outer) != "undefined") {_RecordType("<76,81,8>",(outer)); Inst7++; } } catch(e) {}
  let y = outer;
try { if (Inst6 <= 1000 && typeof (y) != "undefined") {_RecordType("<72,73,8>",(y)); Inst6++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (r.test) != "undefined") {_RecordType("<85,91,9>",(r.test)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (r) != "undefined") {_RecordType("<85,86,9>",(r)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (s) != "undefined") {_RecordType("<92,93,9>",(s)); Inst10++; } } catch(e) {}
  r.test(s);
try { if (Inst11 <= 1000 && typeof (y) != "undefined") {_RecordType("<105,106,10>",(y)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (outer) != "undefined") {_RecordType("<109,114,10>",(outer)); Inst12++; } } catch(e) {}
  return y + outer;
}

try { if (Inst13 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<119,127,13>",(noInline)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (foo) != "undefined") {_RecordType("<128,131,13>",(foo)); Inst14++; } } catch(e) {}
noInline(foo);

for (let i = 0; i < 10000; ++i) {
try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<144,145,15>",(i)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<151,152,15>",(i)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (i) != "undefined") {_RecordType("<164,165,15>",(i)); Inst17++; } } catch(e) {}
  let r = /foo/g;
try { if (Inst18 <= 1000 && typeof (r) != "undefined") {_RecordType("<175,176,16>",(r)); Inst18++; } } catch(e) {}
  regexLastIndex = {};
try { if (Inst19 <= 1000 && typeof (regexLastIndex) != "undefined") {_RecordType("<189,203,17>",(regexLastIndex)); Inst19++; } } catch(e) {}

  regexLastIndex.toString = function () {
    outer = 1;
try { if (Inst22 <= 1000 && typeof (outer) != "undefined") {_RecordType("<257,262,20>",(outer)); Inst22++; } } catch(e) {}
    return "1";
  };
try { if (Inst20 <= 1000 && typeof (regexLastIndex.toString) != "undefined") {_RecordType("<213,236,19>",(regexLastIndex.toString)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (regexLastIndex) != "undefined") {_RecordType("<213,227,19>",(regexLastIndex)); Inst21++; } } catch(e) {}

try { if (Inst25 <= 1000 && typeof (regexLastIndex) != "undefined") {_RecordType("<306,320,24>",(regexLastIndex)); Inst25++; } } catch(e) {}
  r.lastIndex = regexLastIndex;
try { if (Inst23 <= 1000 && typeof (r.lastIndex) != "undefined") {_RecordType("<292,303,24>",(r.lastIndex)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (r) != "undefined") {_RecordType("<292,293,24>",(r)); Inst24++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (foo) != "undefined") {_RecordType("<337,340,25>",(foo)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (r) != "undefined") {_RecordType("<341,342,25>",(r)); Inst28++; } } catch(e) {}
  let result = foo(r, "bar");
try { if (Inst26 <= 1000 && typeof (result) != "undefined") {_RecordType("<328,334,25>",(result)); Inst26++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (result) != "undefined") {_RecordType("<354,360,26>",(result)); Inst29++; } } catch(e) {}
  result === 43;
  outer = 42;
try { if (Inst30 <= 1000 && typeof (outer) != "undefined") {_RecordType("<371,376,27>",(outer)); Inst30++; } } catch(e) {}
}

try { if (Inst31 <= 1000 && typeof (bar) != "undefined") {_RecordType("<395,398,30>",(bar)); Inst31++; } } catch(e) {}
function bar(r, s) {
try { if (Inst32 <= 1000 && typeof (r) != "undefined") {_RecordType("<399,400,30>",(r)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (s) != "undefined") {_RecordType("<402,403,30>",(s)); Inst33++; } } catch(e) {}
try { if (Inst35 <= 1000 && typeof (outer) != "undefined") {_RecordType("<417,422,31>",(outer)); Inst35++; } } catch(e) {}
  let y = outer;
try { if (Inst34 <= 1000 && typeof (y) != "undefined") {_RecordType("<413,414,31>",(y)); Inst34++; } } catch(e) {}
try { if (Inst36 <= 1000 && typeof (r.exec) != "undefined") {_RecordType("<426,432,32>",(r.exec)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (r) != "undefined") {_RecordType("<426,427,32>",(r)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (s) != "undefined") {_RecordType("<433,434,32>",(s)); Inst38++; } } catch(e) {}
  r.exec(s);
try { if (Inst39 <= 1000 && typeof (y) != "undefined") {_RecordType("<446,447,33>",(y)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (outer) != "undefined") {_RecordType("<450,455,33>",(outer)); Inst40++; } } catch(e) {}
  return y + outer;
}

try { if (Inst41 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<460,468,36>",(noInline)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (bar) != "undefined") {_RecordType("<469,472,36>",(bar)); Inst42++; } } catch(e) {}
noInline(bar);

for (let i = 0; i < 10000; ++i) {
try { if (Inst43 <= 1000 && typeof (i) != "undefined") {_RecordType("<485,486,38>",(i)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (i) != "undefined") {_RecordType("<492,493,38>",(i)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (i) != "undefined") {_RecordType("<505,506,38>",(i)); Inst45++; } } catch(e) {}
  let r = /foo/g;
try { if (Inst46 <= 1000 && typeof (r) != "undefined") {_RecordType("<516,517,39>",(r)); Inst46++; } } catch(e) {}
  regexLastIndex = {};
try { if (Inst47 <= 1000 && typeof (regexLastIndex) != "undefined") {_RecordType("<530,544,40>",(regexLastIndex)); Inst47++; } } catch(e) {}

  regexLastIndex.toString = function () {
    outer = 1;
try { if (Inst50 <= 1000 && typeof (outer) != "undefined") {_RecordType("<598,603,43>",(outer)); Inst50++; } } catch(e) {}
    return "1";
  };
try { if (Inst48 <= 1000 && typeof (regexLastIndex.toString) != "undefined") {_RecordType("<554,577,42>",(regexLastIndex.toString)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (regexLastIndex) != "undefined") {_RecordType("<554,568,42>",(regexLastIndex)); Inst49++; } } catch(e) {}

try { if (Inst53 <= 1000 && typeof (regexLastIndex) != "undefined") {_RecordType("<647,661,47>",(regexLastIndex)); Inst53++; } } catch(e) {}
  r.lastIndex = regexLastIndex;
try { if (Inst51 <= 1000 && typeof (r.lastIndex) != "undefined") {_RecordType("<633,644,47>",(r.lastIndex)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (r) != "undefined") {_RecordType("<633,634,47>",(r)); Inst52++; } } catch(e) {}
try { if (Inst55 <= 1000 && typeof (bar) != "undefined") {_RecordType("<678,681,48>",(bar)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (r) != "undefined") {_RecordType("<682,683,48>",(r)); Inst56++; } } catch(e) {}
  let result = bar(r, "bar");
try { if (Inst54 <= 1000 && typeof (result) != "undefined") {_RecordType("<669,675,48>",(result)); Inst54++; } } catch(e) {}
try { if (Inst57 <= 1000 && typeof (result) != "undefined") {_RecordType("<695,701,49>",(result)); Inst57++; } } catch(e) {}
  result === 43;
  outer = 42;
try { if (Inst58 <= 1000 && typeof (outer) != "undefined") {_RecordType("<712,717,50>",(outer)); Inst58++; } } catch(e) {}
}

