var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (assert) != "undefined") {_RecordType("<9,15,1>",(assert)); Inst0++; } } catch(e) {}
function assert(b) {
try { if (Inst1 <= 1000 && typeof (b) != "undefined") {_RecordType("<16,17,1>",(b)); Inst1++; } } catch(e) {}
  ;
}

try { if (Inst2 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<28,36,5>",(noInline)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (assert) != "undefined") {_RecordType("<37,43,5>",(assert)); Inst3++; } } catch(e) {}
noInline(assert);

try { if (Inst4 <= 1000 && typeof (foo) != "undefined") {_RecordType("<56,59,7>",(foo)); Inst4++; } } catch(e) {}
function foo(a, ...args) {
try { if (Inst5 <= 1000 && typeof (a) != "undefined") {_RecordType("<60,61,7>",(a)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (args) != "undefined") {_RecordType("<66,70,7>",(args)); Inst6++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (a) != "undefined") {_RecordType("<88,89,8>",(a)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (args) != "undefined") {_RecordType("<94,98,8>",(args)); Inst9++; } } catch(e) {}
  let r = [...a, ...args];
try { if (Inst7 <= 1000 && typeof (r) != "undefined") {_RecordType("<80,81,8>",(r)); Inst7++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (r) != "undefined") {_RecordType("<110,111,9>",(r)); Inst10++; } } catch(e) {}
  return r;
}

try { if (Inst11 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<116,124,12>",(noInline)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (foo) != "undefined") {_RecordType("<125,128,12>",(foo)); Inst12++; } } catch(e) {}
noInline(foo);

try { if (Inst13 <= 1000 && typeof (escape) != "undefined") {_RecordType("<141,147,14>",(escape)); Inst13++; } } catch(e) {}
function escape(a) {
try { if (Inst14 <= 1000 && typeof (a) != "undefined") {_RecordType("<148,149,14>",(a)); Inst14++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (a) != "undefined") {_RecordType("<162,163,15>",(a)); Inst15++; } } catch(e) {}
  return a;
}

try { if (Inst16 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<168,176,18>",(noInline)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (escape) != "undefined") {_RecordType("<177,183,18>",(escape)); Inst17++; } } catch(e) {}
noInline(escape);

try { if (Inst18 <= 1000 && typeof (bar) != "undefined") {_RecordType("<196,199,20>",(bar)); Inst18++; } } catch(e) {}
function bar(a, ...args) {
try { if (Inst19 <= 1000 && typeof (a) != "undefined") {_RecordType("<200,201,20>",(a)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (args) != "undefined") {_RecordType("<206,210,20>",(args)); Inst20++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (escape) != "undefined") {_RecordType("<216,222,21>",(escape)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (args) != "undefined") {_RecordType("<223,227,21>",(args)); Inst22++; } } catch(e) {}
  escape(args);
try { if (Inst24 <= 1000 && typeof (a) != "undefined") {_RecordType("<244,245,22>",(a)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (args) != "undefined") {_RecordType("<250,254,22>",(args)); Inst25++; } } catch(e) {}
  let r = [...a, ...args];
try { if (Inst23 <= 1000 && typeof (r) != "undefined") {_RecordType("<236,237,22>",(r)); Inst23++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (r) != "undefined") {_RecordType("<266,267,23>",(r)); Inst26++; } } catch(e) {}
  return r;
}

try { if (Inst27 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<272,280,26>",(noInline)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (foo) != "undefined") {_RecordType("<281,284,26>",(foo)); Inst28++; } } catch(e) {}
noInline(foo);

for (let i = 0; i < 50000; i++) {
try { if (Inst29 <= 1000 && typeof (i) != "undefined") {_RecordType("<297,298,28>",(i)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (i) != "undefined") {_RecordType("<304,305,28>",(i)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (i) != "undefined") {_RecordType("<315,316,28>",(i)); Inst31++; } } catch(e) {}
  for (let f of [foo, bar]) {
try { if (Inst32 <= 1000 && typeof (f) != "undefined") {_RecordType("<333,334,29>",(f)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (foo) != "undefined") {_RecordType("<339,342,29>",(foo)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (bar) != "undefined") {_RecordType("<344,347,29>",(bar)); Inst34++; } } catch(e) {}
    let o = {};
try { if (Inst35 <= 1000 && typeof (o) != "undefined") {_RecordType("<360,361,30>",(o)); Inst35++; } } catch(e) {}
try { if (Inst37 <= 1000 && typeof (o) != "undefined") {_RecordType("<381,382,31>",(o)); Inst37++; } } catch(e) {}
    let a = [o, 20];
try { if (Inst36 <= 1000 && typeof (a) != "undefined") {_RecordType("<376,377,31>",(a)); Inst36++; } } catch(e) {}
try { if (Inst39 <= 1000 && typeof (f) != "undefined") {_RecordType("<401,402,32>",(f)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (a) != "undefined") {_RecordType("<403,404,32>",(a)); Inst40++; } } catch(e) {}
    let r = f(a, 30, 40);
try { if (Inst38 <= 1000 && typeof (r) != "undefined") {_RecordType("<397,398,32>",(r)); Inst38++; } } catch(e) {}
try { if (Inst41 <= 1000 && typeof (r.length) != "undefined") {_RecordType("<419,427,33>",(r.length)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (r) != "undefined") {_RecordType("<419,420,33>",(r)); Inst42++; } } catch(e) {}
    r.length === 4;
try { if (Inst43 <= 1000 && typeof (r[0]) != "undefined") {_RecordType("<439,443,34>",(r[0])); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (r) != "undefined") {_RecordType("<439,440,34>",(r)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (o) != "undefined") {_RecordType("<448,449,34>",(o)); Inst45++; } } catch(e) {}
    r[0] === o;
try { if (Inst46 <= 1000 && typeof (r[1]) != "undefined") {_RecordType("<455,459,35>",(r[1])); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (r) != "undefined") {_RecordType("<455,456,35>",(r)); Inst47++; } } catch(e) {}
    r[1] === 20;
try { if (Inst48 <= 1000 && typeof (r[2]) != "undefined") {_RecordType("<472,476,36>",(r[2])); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (r) != "undefined") {_RecordType("<472,473,36>",(r)); Inst49++; } } catch(e) {}
    r[2] === 30;
try { if (Inst50 <= 1000 && typeof (r[3]) != "undefined") {_RecordType("<489,493,37>",(r[3])); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (r) != "undefined") {_RecordType("<489,490,37>",(r)); Inst51++; } } catch(e) {}
    r[3] === 40;
  }
}

