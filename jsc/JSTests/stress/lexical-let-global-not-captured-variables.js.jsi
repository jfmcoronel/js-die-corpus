var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
"use strict";

try { if (Inst0 <= 1000 && typeof (truth) != "undefined") {_RecordType("<24,29,3>",(truth)); Inst0++; } } catch(e) {}
function truth() {
  return true;
}

try { if (Inst1 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<52,60,7>",(noInline)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (truth) != "undefined") {_RecordType("<61,66,7>",(truth)); Inst2++; } } catch(e) {}
noInline(truth);

try { if (Inst3 <= 1000 && typeof (assert) != "undefined") {_RecordType("<79,85,9>",(assert)); Inst3++; } } catch(e) {}
function assert(cond) {
try { if (Inst4 <= 1000 && typeof (cond) != "undefined") {_RecordType("<86,90,9>",(cond)); Inst4++; } } catch(e) {}
  ;
}

try { if (Inst5 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<101,109,13>",(noInline)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (assert) != "undefined") {_RecordType("<110,116,13>",(assert)); Inst6++; } } catch(e) {}
noInline(assert);

try { if (Inst7 <= 1000 && typeof (foo) != "undefined") {_RecordType("<129,132,15>",(foo)); Inst7++; } } catch(e) {}
function foo(y) {
try { if (Inst8 <= 1000 && typeof (y) != "undefined") {_RecordType("<133,134,15>",(y)); Inst8++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (y) != "undefined") {_RecordType("<147,148,16>",(y)); Inst9++; } } catch(e) {}
  return y;
}

let x = 40;
try { if (Inst10 <= 1000 && typeof (x) != "undefined") {_RecordType("<157,158,19>",(x)); Inst10++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (x) != "undefined") {_RecordType("<165,166,20>",(x)); Inst11++; } } catch(e) {}
x === 40;

for (var i = 0; i < 1000; i++) {
try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<185,186,22>",(i)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<192,193,22>",(i)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<202,203,22>",(i)); Inst14++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (truth) != "undefined") {_RecordType("<215,220,23>",(truth)); Inst15++; } } catch(e) {}
  if (truth()) {
    let y = 20;
try { if (Inst16 <= 1000 && typeof (y) != "undefined") {_RecordType("<234,235,24>",(y)); Inst16++; } } catch(e) {}

    let capY = function () {
try { if (Inst18 <= 1000 && typeof (y) != "undefined") {_RecordType("<285,286,27>",(y)); Inst18++; } } catch(e) {}
      return y;
    };
try { if (Inst17 <= 1000 && typeof (capY) != "undefined") {_RecordType("<251,255,26>",(capY)); Inst17++; } } catch(e) {}

try { if (Inst19 <= 1000 && typeof (x) != "undefined") {_RecordType("<300,301,30>",(x)); Inst19++; } } catch(e) {}
    x === 40;
try { if (Inst20 <= 1000 && typeof (capY) != "undefined") {_RecordType("<314,318,31>",(capY)); Inst20++; } } catch(e) {}
    capY() === 20;
try { if (Inst21 <= 1000 && typeof (foo) != "undefined") {_RecordType("<333,336,32>",(foo)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<337,338,32>",(i)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<344,345,32>",(i)); Inst23++; } } catch(e) {}
    foo(i) === i;
  }
}

try { if (Inst24 <= 1000 && typeof (foo) != "undefined") {_RecordType("<354,357,36>",(foo)); Inst24++; } } catch(e) {}
foo("hello") === "hello";

