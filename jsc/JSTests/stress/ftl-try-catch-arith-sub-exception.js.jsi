var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (assert) != "undefined") {_RecordType("<9,15,1>",(assert)); Inst0++; } } catch(e) {}
function assert(b) {
try { if (Inst1 <= 1000 && typeof (b) != "undefined") {_RecordType("<16,17,1>",(b)); Inst1++; } } catch(e) {}
  ;
}

let flag = false;
try { if (Inst2 <= 1000 && typeof (flag) != "undefined") {_RecordType("<32,36,5>",(flag)); Inst2++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (valueOf) != "undefined") {_RecordType("<58,65,7>",(valueOf)); Inst4++; } } catch(e) {}
let o = {
  valueOf() {
try { if (Inst5 <= 1000 && typeof (flag) != "undefined") {_RecordType("<78,82,8>",(flag)); Inst5++; } } catch(e) {}
    if (flag) {
      ;
    }

    return 13.5;
  }

};
try { if (Inst3 <= 1000 && typeof (o) != "undefined") {_RecordType("<50,51,6>",(o)); Inst3++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<126,134,16>",(noInline)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (o.valueOf) != "undefined") {_RecordType("<135,144,16>",(o.valueOf)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (o) != "undefined") {_RecordType("<135,136,16>",(o)); Inst8++; } } catch(e) {}
noInline(o.valueOf);

try { if (Inst9 <= 1000 && typeof (baz) != "undefined") {_RecordType("<157,160,18>",(baz)); Inst9++; } } catch(e) {}
function baz() {
  return 1.5;
}

try { if (Inst10 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<182,190,22>",(noInline)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (baz) != "undefined") {_RecordType("<191,194,22>",(baz)); Inst11++; } } catch(e) {}
noInline(baz);

try { if (Inst12 <= 1000 && typeof (foo) != "undefined") {_RecordType("<207,210,24>",(foo)); Inst12++; } } catch(e) {}
function foo(x, o) {
try { if (Inst13 <= 1000 && typeof (x) != "undefined") {_RecordType("<211,212,24>",(x)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (o) != "undefined") {_RecordType("<214,215,24>",(o)); Inst14++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (baz) != "undefined") {_RecordType("<229,232,25>",(baz)); Inst16++; } } catch(e) {}
  let r = baz();
try { if (Inst15 <= 1000 && typeof (r) != "undefined") {_RecordType("<225,226,25>",(r)); Inst15++; } } catch(e) {}

try { if (Inst21 <= 1000 && typeof (e) != "undefined") {_RecordType("<275,276,29>",(e)); Inst21++; } } catch(e) {}
  try {
try { if (Inst18 <= 1000 && typeof (x) != "undefined") {_RecordType("<253,254,28>",(x)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (o) != "undefined") {_RecordType("<257,258,28>",(o)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (r) != "undefined") {_RecordType("<261,262,28>",(r)); Inst20++; } } catch(e) {}
    r = x - o - r;
try { if (Inst17 <= 1000 && typeof (r) != "undefined") {_RecordType("<249,250,28>",(r)); Inst17++; } } catch(e) {}
  } catch (e) {
    ;
  }

try { if (Inst22 <= 1000 && typeof (r) != "undefined") {_RecordType("<300,301,33>",(r)); Inst22++; } } catch(e) {}
  return r;
}

try { if (Inst23 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<306,314,36>",(noInline)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (foo) != "undefined") {_RecordType("<315,318,36>",(foo)); Inst24++; } } catch(e) {}
noInline(foo);
let x = 20.5;
try { if (Inst25 <= 1000 && typeof (x) != "undefined") {_RecordType("<325,326,37>",(x)); Inst25++; } } catch(e) {}

for (let i = 0; i < 10000; i++) {
try { if (Inst26 <= 1000 && typeof (i) != "undefined") {_RecordType("<345,346,39>",(i)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (i) != "undefined") {_RecordType("<352,353,39>",(i)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (i) != "undefined") {_RecordType("<363,364,39>",(i)); Inst28++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (foo) != "undefined") {_RecordType("<372,375,40>",(foo)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (x) != "undefined") {_RecordType("<376,377,40>",(x)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (o) != "undefined") {_RecordType("<379,380,40>",(o)); Inst31++; } } catch(e) {}
  foo(x, o) === 5.5;
}

flag = true;
try { if (Inst32 <= 1000 && typeof (flag) != "undefined") {_RecordType("<394,398,43>",(flag)); Inst32++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (foo) != "undefined") {_RecordType("<407,410,44>",(foo)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (x) != "undefined") {_RecordType("<411,412,44>",(x)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (o) != "undefined") {_RecordType("<414,415,44>",(o)); Inst35++; } } catch(e) {}
foo(x, o) === 1.5;

try { if (Inst36 <= 1000 && typeof (bar) != "undefined") {_RecordType("<436,439,46>",(bar)); Inst36++; } } catch(e) {}
function bar(x, o) {
try { if (Inst37 <= 1000 && typeof (x) != "undefined") {_RecordType("<440,441,46>",(x)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (o) != "undefined") {_RecordType("<443,444,46>",(o)); Inst38++; } } catch(e) {}
  let caughtException = false;
try { if (Inst39 <= 1000 && typeof (caughtException) != "undefined") {_RecordType("<454,469,47>",(caughtException)); Inst39++; } } catch(e) {}
  var r = null;
try { if (Inst40 <= 1000 && typeof (r) != "undefined") {_RecordType("<485,486,48>",(r)); Inst40++; } } catch(e) {}

try { if (Inst44 <= 1000 && typeof (e) != "undefined") {_RecordType("<718,719,55>",(e)); Inst44++; } } catch(e) {}
  try {
    // This tests aliasing of left/right with result register in a SubGenerator
    // and ensures that the sub will spill the register properly and that we value
    // recover properly.
try { if (Inst42 <= 1000 && typeof (x) != "undefined") {_RecordType("<700,701,54>",(x)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (o) != "undefined") {_RecordType("<704,705,54>",(o)); Inst43++; } } catch(e) {}
    r = x - o;
try { if (Inst41 <= 1000 && typeof (r) != "undefined") {_RecordType("<696,697,54>",(r)); Inst41++; } } catch(e) {}
  } catch (e) {
    caughtException = true;
try { if (Inst45 <= 1000 && typeof (caughtException) != "undefined") {_RecordType("<727,742,56>",(caughtException)); Inst45++; } } catch(e) {}
try { if (Inst46 <= 1000 && typeof (r) != "undefined") {_RecordType("<755,756,57>",(r)); Inst46++; } } catch(e) {}
    r === null;
  }

try { if (Inst47 <= 1000 && typeof (caughtException) != "undefined") {_RecordType("<779,794,60>",(caughtException)); Inst47++; } } catch(e) {}
  if (!caughtException) {
try { if (Inst48 <= 1000 && typeof (r) != "undefined") {_RecordType("<802,803,61>",(r)); Inst48++; } } catch(e) {}
    r === 7;
  }

try { if (Inst49 <= 1000 && typeof (caughtException) != "undefined") {_RecordType("<825,840,64>",(caughtException)); Inst49++; } } catch(e) {}
  return caughtException;
}

try { if (Inst50 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<845,853,67>",(noInline)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (bar) != "undefined") {_RecordType("<854,857,67>",(bar)); Inst51++; } } catch(e) {}
noInline(bar);
flag = false;
try { if (Inst52 <= 1000 && typeof (flag) != "undefined") {_RecordType("<860,864,68>",(flag)); Inst52++; } } catch(e) {}

for (let i = 0; i < 10000; i++) {
try { if (Inst53 <= 1000 && typeof (i) != "undefined") {_RecordType("<884,885,70>",(i)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (i) != "undefined") {_RecordType("<891,892,70>",(i)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (i) != "undefined") {_RecordType("<902,903,70>",(i)); Inst55++; } } catch(e) {}
try { if (Inst56 <= 1000 && typeof (bar) != "undefined") {_RecordType("<911,914,71>",(bar)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (x) != "undefined") {_RecordType("<915,916,71>",(x)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (o) != "undefined") {_RecordType("<918,919,71>",(o)); Inst58++; } } catch(e) {}
  bar(x, o) === false;
}

flag = true;
try { if (Inst59 <= 1000 && typeof (flag) != "undefined") {_RecordType("<935,939,74>",(flag)); Inst59++; } } catch(e) {}
try { if (Inst60 <= 1000 && typeof (bar) != "undefined") {_RecordType("<948,951,75>",(bar)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (x) != "undefined") {_RecordType("<952,953,75>",(x)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (o) != "undefined") {_RecordType("<955,956,75>",(o)); Inst62++; } } catch(e) {}
bar(x, o) === true;

