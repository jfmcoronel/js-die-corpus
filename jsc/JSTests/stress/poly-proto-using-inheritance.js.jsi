var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (assert) != "undefined") {_RecordType("<9,15,1>",(assert)); Inst0++; } } catch(e) {}
function assert(b) {
try { if (Inst1 <= 1000 && typeof (b) != "undefined") {_RecordType("<16,17,1>",(b)); Inst1++; } } catch(e) {}
  ;
}

try { if (Inst2 <= 1000 && typeof (foo) != "undefined") {_RecordType("<37,40,5>",(foo)); Inst2++; } } catch(e) {}
function foo() {
  class C {
    constructor() {
      this.y = 22;
try { if (Inst4 <= 1000 && typeof (this.y) != "undefined") {_RecordType("<83,89,8>",(this.y)); Inst4++; } } catch(e) {}
    }

    get baz() {
try { if (Inst5 <= 1000 && typeof (this.x) != "undefined") {_RecordType("<132,138,12>",(this.x)); Inst5++; } } catch(e) {}
      return this.x;
    }

  }
try { if (Inst3 <= 1000 && typeof (C) != "undefined") {_RecordType("<53,54,6>",(C)); Inst3++; } } catch(e) {}

  C.prototype.field = 42;
try { if (Inst6 <= 1000 && typeof (C.prototype.field) != "undefined") {_RecordType("<154,171,17>",(C.prototype.field)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (C.prototype) != "undefined") {_RecordType("<154,165,17>",(C.prototype)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (C) != "undefined") {_RecordType("<154,155,17>",(C)); Inst8++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (C) != "undefined") {_RecordType("<184,185,18>",(C)); Inst9++; } } catch(e) {}
  new C();
try { if (Inst10 <= 1000 && typeof (C) != "undefined") {_RecordType("<198,199,19>",(C)); Inst10++; } } catch(e) {}
  return C;
}

for (let i = 0; i < 5; ++i) {
try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<213,214,22>",(i)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<220,221,22>",(i)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<229,230,22>",(i)); Inst13++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (foo) != "undefined") {_RecordType("<236,239,23>",(foo)); Inst14++; } } catch(e) {}
  foo();
}

try { if (Inst15 <= 1000 && typeof (bar) != "undefined") {_RecordType("<255,258,26>",(bar)); Inst15++; } } catch(e) {}
function bar(p) {
try { if (Inst16 <= 1000 && typeof (p) != "undefined") {_RecordType("<259,260,26>",(p)); Inst16++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (p) != "undefined") {_RecordType("<282,283,27>",(p)); Inst19++; } } catch(e) {}
  class C extends p {
    constructor() {
      super();
      this.x = 22;
try { if (Inst18 <= 1000 && typeof (this.x) != "undefined") {_RecordType("<327,333,30>",(this.x)); Inst18++; } } catch(e) {}
    }

  }
try { if (Inst17 <= 1000 && typeof (C) != "undefined") {_RecordType("<272,273,27>",(C)); Inst17++; } } catch(e) {}

  ;
try { if (Inst21 <= 1000 && typeof (C) != "undefined") {_RecordType("<375,376,36>",(C)); Inst21++; } } catch(e) {}
  let result = new C();
try { if (Inst20 <= 1000 && typeof (result) != "undefined") {_RecordType("<362,368,36>",(result)); Inst20++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (result) != "undefined") {_RecordType("<389,395,37>",(result)); Inst22++; } } catch(e) {}
  return result;
}

for (let i = 0; i < 5; ++i) {
try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<409,410,40>",(i)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<416,417,40>",(i)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<425,426,40>",(i)); Inst25++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (bar) != "undefined") {_RecordType("<432,435,41>",(bar)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (foo) != "undefined") {_RecordType("<436,439,41>",(foo)); Inst27++; } } catch(e) {}
  bar(foo());
}

let instances = [];
try { if (Inst28 <= 1000 && typeof (instances) != "undefined") {_RecordType("<451,460,44>",(instances)); Inst28++; } } catch(e) {}

for (let i = 0; i < 40; ++i) {
try { if (Inst29 <= 1000 && typeof (i) != "undefined") {_RecordType("<477,478,46>",(i)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (i) != "undefined") {_RecordType("<484,485,46>",(i)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (i) != "undefined") {_RecordType("<494,495,46>",(i)); Inst31++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (instances.push) != "undefined") {_RecordType("<501,515,47>",(instances.push)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (instances) != "undefined") {_RecordType("<501,510,47>",(instances)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (bar) != "undefined") {_RecordType("<516,519,47>",(bar)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (foo) != "undefined") {_RecordType("<520,523,47>",(foo)); Inst35++; } } catch(e) {}
  instances.push(bar(foo()));
}

try { if (Inst36 <= 1000 && typeof (validate) != "undefined") {_RecordType("<541,549,50>",(validate)); Inst36++; } } catch(e) {}
function validate(item) {
try { if (Inst37 <= 1000 && typeof (item) != "undefined") {_RecordType("<550,554,50>",(item)); Inst37++; } } catch(e) {}
try { if (Inst38 <= 1000 && typeof (item.x) != "undefined") {_RecordType("<560,566,51>",(item.x)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (item) != "undefined") {_RecordType("<560,564,51>",(item)); Inst39++; } } catch(e) {}
  item.x === 22;
try { if (Inst40 <= 1000 && typeof (item.baz) != "undefined") {_RecordType("<577,585,52>",(item.baz)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (item) != "undefined") {_RecordType("<577,581,52>",(item)); Inst41++; } } catch(e) {}
  item.baz === 22;
try { if (Inst42 <= 1000 && typeof (item.field) != "undefined") {_RecordType("<596,606,53>",(item.field)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (item) != "undefined") {_RecordType("<596,600,53>",(item)); Inst43++; } } catch(e) {}
  item.field === 42;
}

try { if (Inst45 <= 1000 && typeof (Date.now) != "undefined") {_RecordType("<630,638,56>",(Date.now)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (Date) != "undefined") {_RecordType("<630,634,56>",(Date)); Inst46++; } } catch(e) {}
let start = Date.now();
try { if (Inst44 <= 1000 && typeof (start) != "undefined") {_RecordType("<622,627,56>",(start)); Inst44++; } } catch(e) {}

for (let i = 0; i < 100000; ++i) {
try { if (Inst47 <= 1000 && typeof (i) != "undefined") {_RecordType("<652,653,58>",(i)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (i) != "undefined") {_RecordType("<659,660,58>",(i)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (i) != "undefined") {_RecordType("<673,674,58>",(i)); Inst49++; } } catch(e) {}
try { if (Inst50 <= 1000 && typeof (instances.forEach) != "undefined") {_RecordType("<680,697,59>",(instances.forEach)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (instances) != "undefined") {_RecordType("<680,689,59>",(instances)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (x) != "undefined") {_RecordType("<698,699,59>",(x)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (validate) != "undefined") {_RecordType("<703,711,59>",(validate)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (x) != "undefined") {_RecordType("<712,713,59>",(x)); Inst54++; } } catch(e) {}
  instances.forEach(x => validate(x));
}

if (false) {
try { if (Inst55 <= 1000 && typeof (print) != "undefined") {_RecordType("<735,740,63>",(print)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (Date.now) != "undefined") {_RecordType("<741,749,63>",(Date.now)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (Date) != "undefined") {_RecordType("<741,745,63>",(Date)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (start) != "undefined") {_RecordType("<754,759,63>",(start)); Inst58++; } } catch(e) {}
  print(Date.now() - start);
}

