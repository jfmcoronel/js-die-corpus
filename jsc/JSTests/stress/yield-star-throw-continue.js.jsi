var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<9,17,1>",(shouldBe)); Inst0++; } } catch(e) {}
function shouldBe(actual, expected) {
try { if (Inst1 <= 1000 && typeof (actual) != "undefined") {_RecordType("<18,24,1>",(actual)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (expected) != "undefined") {_RecordType("<26,34,1>",(expected)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (actual) != "undefined") {_RecordType("<44,50,2>",(actual)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (expected) != "undefined") {_RecordType("<55,63,2>",(expected)); Inst4++; } } catch(e) {}
  if (actual !== expected) {
try { if (Inst5 <= 1000 && typeof (Error) != "undefined") {_RecordType("<81,86,3>",(Error)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (String) != "undefined") {_RecordType("<101,107,3>",(String)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (actual) != "undefined") {_RecordType("<108,114,3>",(actual)); Inst7++; } } catch(e) {}
    throw new Error(`bad value: ${String(actual)}`);
  }
}

try { if (Inst8 <= 1000 && typeof (shouldThrow) != "undefined") {_RecordType("<136,147,7>",(shouldThrow)); Inst8++; } } catch(e) {}
function shouldThrow(func, errorMessage) {
try { if (Inst9 <= 1000 && typeof (func) != "undefined") {_RecordType("<148,152,7>",(func)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (errorMessage) != "undefined") {_RecordType("<154,166,7>",(errorMessage)); Inst10++; } } catch(e) {}
  var errorThrown = false;
try { if (Inst11 <= 1000 && typeof (errorThrown) != "undefined") {_RecordType("<176,187,8>",(errorThrown)); Inst11++; } } catch(e) {}
  var error = null;
try { if (Inst12 <= 1000 && typeof (error) != "undefined") {_RecordType("<203,208,9>",(error)); Inst12++; } } catch(e) {}

try { if (Inst14 <= 1000 && typeof (e) != "undefined") {_RecordType("<249,250,13>",(e)); Inst14++; } } catch(e) {}
  try {
try { if (Inst13 <= 1000 && typeof (func) != "undefined") {_RecordType("<230,234,12>",(func)); Inst13++; } } catch(e) {}
    func();
  } catch (e) {
    errorThrown = true;
try { if (Inst15 <= 1000 && typeof (errorThrown) != "undefined") {_RecordType("<258,269,14>",(errorThrown)); Inst15++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (e) != "undefined") {_RecordType("<290,291,15>",(e)); Inst17++; } } catch(e) {}
    error = e;
try { if (Inst16 <= 1000 && typeof (error) != "undefined") {_RecordType("<282,287,15>",(error)); Inst16++; } } catch(e) {}
  }

try { if (Inst18 <= 1000 && typeof (errorThrown) != "undefined") {_RecordType("<305,316,18>",(errorThrown)); Inst18++; } } catch(e) {}
  if (!errorThrown) {
try { if (Inst19 <= 1000 && typeof (Error) != "undefined") {_RecordType("<334,339,19>",(Error)); Inst19++; } } catch(e) {}
    throw new Error("not thrown");
  }

try { if (Inst20 <= 1000 && typeof (String) != "undefined") {_RecordType("<366,372,22>",(String)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (error) != "undefined") {_RecordType("<373,378,22>",(error)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (errorMessage) != "undefined") {_RecordType("<384,396,22>",(errorMessage)); Inst22++; } } catch(e) {}
  if (String(error) !== errorMessage) {
try { if (Inst23 <= 1000 && typeof (Error) != "undefined") {_RecordType("<414,419,23>",(Error)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (String) != "undefined") {_RecordType("<434,440,23>",(String)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (error) != "undefined") {_RecordType("<441,446,23>",(error)); Inst25++; } } catch(e) {}
    throw new Error(`bad error: ${String(error)}`);
  }
}

(function () {
try { if (Inst26 <= 1000 && typeof (generator) != "undefined") {_RecordType("<486,495,28>",(generator)); Inst26++; } } catch(e) {}
  function* generator() {
    yield* function* () {
try { if (Inst27 <= 1000 && typeof (e) != "undefined") {_RecordType("<574,575,32>",(e)); Inst27++; } } catch(e) {}
      try {
        yield "foo";
      } catch (e) {
        return;
      }
    }(); // OK, continue executing.

    yield "bar";
  }

try { if (Inst29 <= 1000 && typeof (generator) != "undefined") {_RecordType("<675,684,40>",(generator)); Inst29++; } } catch(e) {}
  var iter = generator();
try { if (Inst28 <= 1000 && typeof (iter) != "undefined") {_RecordType("<668,672,40>",(iter)); Inst28++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (iter.next) != "undefined") {_RecordType("<690,699,41>",(iter.next)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (iter) != "undefined") {_RecordType("<690,694,41>",(iter)); Inst31++; } } catch(e) {}
  iter.next();
try { if (Inst32 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<705,713,42>",(shouldBe)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (iter["throw"]().value) != "undefined") {_RecordType("<714,735,42>",(iter["throw"]().value)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (iter["throw"]) != "undefined") {_RecordType("<714,727,42>",(iter["throw"])); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (iter) != "undefined") {_RecordType("<714,718,42>",(iter)); Inst35++; } } catch(e) {}
  shouldBe(iter["throw"]().value, "bar");
})();

(function () {
try { if (Inst36 <= 1000 && typeof (generator) != "undefined") {_RecordType("<779,788,46>",(generator)); Inst36++; } } catch(e) {}
  function* generator() {
    yield* function* () {
try { if (Inst37 <= 1000 && typeof (e) != "undefined") {_RecordType("<867,868,50>",(e)); Inst37++; } } catch(e) {}
      try {
        yield "foo";
      } catch (e) {
try { if (Inst38 <= 1000 && typeof (e) != "undefined") {_RecordType("<886,887,51>",(e)); Inst38++; } } catch(e) {}
        throw e;
      }
    }(); // OK, continue executing.

    yield "bar";
  }

try { if (Inst40 <= 1000 && typeof (generator) != "undefined") {_RecordType("<969,978,58>",(generator)); Inst40++; } } catch(e) {}
  var iter = generator();
try { if (Inst39 <= 1000 && typeof (iter) != "undefined") {_RecordType("<962,966,58>",(iter)); Inst39++; } } catch(e) {}
try { if (Inst41 <= 1000 && typeof (iter.next) != "undefined") {_RecordType("<984,993,59>",(iter.next)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (iter) != "undefined") {_RecordType("<984,988,59>",(iter)); Inst42++; } } catch(e) {}
  iter.next();
try { if (Inst43 <= 1000 && typeof (shouldThrow) != "undefined") {_RecordType("<999,1010,60>",(shouldThrow)); Inst43++; } } catch(e) {}
  shouldThrow(() => {
try { if (Inst44 <= 1000 && typeof (iter["throw"]) != "undefined") {_RecordType("<1023,1036,61>",(iter["throw"])); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (iter) != "undefined") {_RecordType("<1023,1027,61>",(iter)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (Error) != "undefined") {_RecordType("<1041,1046,61>",(Error)); Inst46++; } } catch(e) {}
    iter["throw"](new Error("NG"));
  }, `Error: NG`);
})();

(function () {
try { if (Inst47 <= 1000 && typeof (generator) != "undefined") {_RecordType("<1108,1117,66>",(generator)); Inst47++; } } catch(e) {}
  function* generator() {
    yield* function* () {
try { if (Inst48 <= 1000 && typeof (e) != "undefined") {_RecordType("<1196,1197,70>",(e)); Inst48++; } } catch(e) {}
      try {
        yield "foo";
      } catch (e) {
        ;
      }

      yield "cocoa";
    }(); // OK, continue executing.

    yield "bar";
  }

try { if (Inst50 <= 1000 && typeof (generator) != "undefined") {_RecordType("<1313,1322,80>",(generator)); Inst50++; } } catch(e) {}
  var iter = generator();
try { if (Inst49 <= 1000 && typeof (iter) != "undefined") {_RecordType("<1306,1310,80>",(iter)); Inst49++; } } catch(e) {}
try { if (Inst51 <= 1000 && typeof (iter.next) != "undefined") {_RecordType("<1328,1337,81>",(iter.next)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (iter) != "undefined") {_RecordType("<1328,1332,81>",(iter)); Inst52++; } } catch(e) {}
  iter.next();
try { if (Inst53 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<1343,1351,82>",(shouldBe)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (iter["throw"]().value) != "undefined") {_RecordType("<1352,1373,82>",(iter["throw"]().value)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (iter["throw"]) != "undefined") {_RecordType("<1352,1365,82>",(iter["throw"])); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (iter) != "undefined") {_RecordType("<1352,1356,82>",(iter)); Inst56++; } } catch(e) {}
  shouldBe(iter["throw"]().value, "cocoa");
try { if (Inst57 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<1387,1395,83>",(shouldBe)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (iter.next().value) != "undefined") {_RecordType("<1396,1413,83>",(iter.next().value)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (iter.next) != "undefined") {_RecordType("<1396,1405,83>",(iter.next)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (iter) != "undefined") {_RecordType("<1396,1400,83>",(iter)); Inst60++; } } catch(e) {}
  shouldBe(iter.next().value, "bar");
})();

