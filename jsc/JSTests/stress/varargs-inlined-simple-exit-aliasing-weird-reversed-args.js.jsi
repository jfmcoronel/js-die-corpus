var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (foo) != "undefined") {_RecordType("<9,12,1>",(foo)); Inst0++; } } catch(e) {}
function foo(a, b) {
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<13,14,1>",(a)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (b) != "undefined") {_RecordType("<16,17,1>",(b)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (a) != "undefined") {_RecordType("<30,31,2>",(a)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (b) != "undefined") {_RecordType("<34,35,2>",(b)); Inst4++; } } catch(e) {}
  return a + b;
}

try { if (Inst5 <= 1000 && typeof (verify) != "undefined") {_RecordType("<49,55,5>",(verify)); Inst5++; } } catch(e) {}
function verify(a, b) {
try { if (Inst6 <= 1000 && typeof (a) != "undefined") {_RecordType("<56,57,5>",(a)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (b) != "undefined") {_RecordType("<59,60,5>",(b)); Inst7++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (a) != "undefined") {_RecordType("<70,71,6>",(a)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (b) != "undefined") {_RecordType("<76,77,6>",(b)); Inst9++; } } catch(e) {}
  if (a !== b) {
    throw "Error: the two arguments objects aren't identical.";
  }
}

try { if (Inst10 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<152,160,11>",(noInline)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (verify) != "undefined") {_RecordType("<161,167,11>",(verify)); Inst11++; } } catch(e) {}
noInline(verify);

try { if (Inst12 <= 1000 && typeof (bar) != "undefined") {_RecordType("<180,183,13>",(bar)); Inst12++; } } catch(e) {}
function bar() {
try { if (Inst14 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<198,207,14>",(arguments)); Inst14++; } } catch(e) {}
  var a = arguments;
try { if (Inst13 <= 1000 && typeof (a) != "undefined") {_RecordType("<194,195,14>",(a)); Inst13++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (this.verify) != "undefined") {_RecordType("<211,222,15>",(this.verify)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<223,232,15>",(arguments)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (a) != "undefined") {_RecordType("<234,235,15>",(a)); Inst17++; } } catch(e) {}
  this.verify(arguments, a);
try { if (Inst18 <= 1000 && typeof (foo.apply) != "undefined") {_RecordType("<247,256,16>",(foo.apply)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (foo) != "undefined") {_RecordType("<247,250,16>",(foo)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (a) != "undefined") {_RecordType("<263,264,16>",(a)); Inst20++; } } catch(e) {}
  return foo.apply(null, a);
}

try { if (Inst21 <= 1000 && typeof (baz) != "undefined") {_RecordType("<279,282,19>",(baz)); Inst21++; } } catch(e) {}
function baz(a, b) {
try { if (Inst22 <= 1000 && typeof (a) != "undefined") {_RecordType("<283,284,19>",(a)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (b) != "undefined") {_RecordType("<286,287,19>",(b)); Inst23++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (this.bar) != "undefined") {_RecordType("<300,308,20>",(this.bar)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (a) != "undefined") {_RecordType("<309,310,20>",(a)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (b) != "undefined") {_RecordType("<316,317,20>",(b)); Inst26++; } } catch(e) {}
  return this.bar(a + 1, b + 1);
}

try { if (Inst27 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<327,335,23>",(noInline)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (baz) != "undefined") {_RecordType("<336,339,23>",(baz)); Inst28++; } } catch(e) {}
noInline(baz);

for (var i = 0; i < 20000; ++i) {
try { if (Inst29 <= 1000 && typeof (i) != "undefined") {_RecordType("<352,353,25>",(i)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (i) != "undefined") {_RecordType("<359,360,25>",(i)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (i) != "undefined") {_RecordType("<372,373,25>",(i)); Inst31++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (baz) != "undefined") {_RecordType("<398,401,27>",(baz)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (bar) != "undefined") {_RecordType("<412,415,28>",(bar)); Inst34++; } } catch(e) {}
  var o = {
    baz: baz,
    bar: bar,
    verify: function () {
      ;
    }
  };
try { if (Inst32 <= 1000 && typeof (o) != "undefined") {_RecordType("<383,384,26>",(o)); Inst32++; } } catch(e) {}
try { if (Inst36 <= 1000 && typeof (o.baz) != "undefined") {_RecordType("<477,482,33>",(o.baz)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (o) != "undefined") {_RecordType("<477,478,33>",(o)); Inst37++; } } catch(e) {}
  var result = o.baz(1, 2);
try { if (Inst35 <= 1000 && typeof (result) != "undefined") {_RecordType("<468,474,33>",(result)); Inst35++; } } catch(e) {}

try { if (Inst38 <= 1000 && typeof (result) != "undefined") {_RecordType("<497,503,35>",(result)); Inst38++; } } catch(e) {}
  if (result != 1 + 1 + 2 + 1) {
try { if (Inst39 <= 1000 && typeof (result) != "undefined") {_RecordType("<558,564,36>",(result)); Inst39++; } } catch(e) {}
    throw "Error: bad result: " + result;
  }
}

try { if (Inst41 <= 1000 && typeof (baz) != "undefined") {_RecordType("<590,593,41>",(baz)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (bar) != "undefined") {_RecordType("<602,605,42>",(bar)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (verify) != "undefined") {_RecordType("<617,623,43>",(verify)); Inst43++; } } catch(e) {}
var o = {
  baz: baz,
  bar: bar,
  verify: verify
};
try { if (Inst40 <= 1000 && typeof (o) != "undefined") {_RecordType("<577,578,40>",(o)); Inst40++; } } catch(e) {}
try { if (Inst45 <= 1000 && typeof (o.baz) != "undefined") {_RecordType("<640,645,45>",(o.baz)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (o) != "undefined") {_RecordType("<640,641,45>",(o)); Inst46++; } } catch(e) {}
var result = o.baz(1, 2);
try { if (Inst44 <= 1000 && typeof (result) != "undefined") {_RecordType("<631,637,45>",(result)); Inst44++; } } catch(e) {}

try { if (Inst47 <= 1000 && typeof (result) != "undefined") {_RecordType("<658,664,47>",(result)); Inst47++; } } catch(e) {}
if (result != 1 + 1 + 2 + 1) {
try { if (Inst48 <= 1000 && typeof (result) != "undefined") {_RecordType("<724,730,48>",(result)); Inst48++; } } catch(e) {}
  throw "Error: bad result at end: " + result;
}

