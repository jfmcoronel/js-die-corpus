var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (assert) != "undefined") {_RecordType("<9,15,1>",(assert)); Inst0++; } } catch(e) {}
function assert(condition) {
try { if (Inst1 <= 1000 && typeof (condition) != "undefined") {_RecordType("<16,25,1>",(condition)); Inst1++; } } catch(e) {}
  ;
}

try { if (Inst2 <= 1000 && typeof (shouldThrow) != "undefined") {_RecordType("<45,56,5>",(shouldThrow)); Inst2++; } } catch(e) {}
function shouldThrow(func, message) {
try { if (Inst3 <= 1000 && typeof (func) != "undefined") {_RecordType("<57,61,5>",(func)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (message) != "undefined") {_RecordType("<63,70,5>",(message)); Inst4++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (e) != "undefined") {_RecordType("<105,106,8>",(e)); Inst6++; } } catch(e) {}
  try {
try { if (Inst5 <= 1000 && typeof (func) != "undefined") {_RecordType("<86,90,7>",(func)); Inst5++; } } catch(e) {}
    func();
  } catch (e) {
    ;
  }
}

try { if (Inst8 <= 1000 && typeof (ArrayBuffer) != "undefined") {_RecordType("<140,151,13>",(ArrayBuffer)); Inst8++; } } catch(e) {}
var buffer = new ArrayBuffer(128);
try { if (Inst7 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<127,133,13>",(buffer)); Inst7++; } } catch(e) {}
var dataView = null;
try { if (Inst9 <= 1000 && typeof (dataView) != "undefined") {_RecordType("<162,170,14>",(dataView)); Inst9++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (DataView) != "undefined") {_RecordType("<194,202,15>",(DataView)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<203,209,15>",(buffer)); Inst12++; } } catch(e) {}
dataView = new DataView(buffer);
try { if (Inst10 <= 1000 && typeof (dataView) != "undefined") {_RecordType("<179,187,15>",(dataView)); Inst10++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (dataView.byteOffset) != "undefined") {_RecordType("<212,231,16>",(dataView.byteOffset)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (dataView) != "undefined") {_RecordType("<212,220,16>",(dataView)); Inst14++; } } catch(e) {}
dataView.byteOffset === 0;
try { if (Inst15 <= 1000 && typeof (dataView.byteLength) != "undefined") {_RecordType("<239,258,17>",(dataView.byteLength)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (dataView) != "undefined") {_RecordType("<239,247,17>",(dataView)); Inst16++; } } catch(e) {}
dataView.byteLength === 128;
try { if (Inst18 <= 1000 && typeof (DataView) != "undefined") {_RecordType("<283,291,18>",(DataView)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<292,298,18>",(buffer)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<300,309,18>",(undefined)); Inst20++; } } catch(e) {}
dataView = new DataView(buffer, undefined);
try { if (Inst17 <= 1000 && typeof (dataView) != "undefined") {_RecordType("<268,276,18>",(dataView)); Inst17++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (dataView.byteOffset) != "undefined") {_RecordType("<312,331,19>",(dataView.byteOffset)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (dataView) != "undefined") {_RecordType("<312,320,19>",(dataView)); Inst22++; } } catch(e) {}
dataView.byteOffset === 0;
try { if (Inst23 <= 1000 && typeof (dataView.byteLength) != "undefined") {_RecordType("<339,358,20>",(dataView.byteLength)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (dataView) != "undefined") {_RecordType("<339,347,20>",(dataView)); Inst24++; } } catch(e) {}
dataView.byteLength === 128;
try { if (Inst26 <= 1000 && typeof (DataView) != "undefined") {_RecordType("<383,391,21>",(DataView)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<392,398,21>",(buffer)); Inst27++; } } catch(e) {}
dataView = new DataView(buffer, 10);
try { if (Inst25 <= 1000 && typeof (dataView) != "undefined") {_RecordType("<368,376,21>",(dataView)); Inst25++; } } catch(e) {}
try { if (Inst28 <= 1000 && typeof (dataView.byteOffset) != "undefined") {_RecordType("<405,424,22>",(dataView.byteOffset)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (dataView) != "undefined") {_RecordType("<405,413,22>",(dataView)); Inst29++; } } catch(e) {}
dataView.byteOffset === 10;
try { if (Inst30 <= 1000 && typeof (dataView.byteLength) != "undefined") {_RecordType("<433,452,23>",(dataView.byteLength)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (dataView) != "undefined") {_RecordType("<433,441,23>",(dataView)); Inst31++; } } catch(e) {}
dataView.byteLength === 118;
try { if (Inst33 <= 1000 && typeof (DataView) != "undefined") {_RecordType("<477,485,24>",(DataView)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<486,492,24>",(buffer)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<498,507,24>",(undefined)); Inst35++; } } catch(e) {}
dataView = new DataView(buffer, 10, undefined);
try { if (Inst32 <= 1000 && typeof (dataView) != "undefined") {_RecordType("<462,470,24>",(dataView)); Inst32++; } } catch(e) {}
try { if (Inst36 <= 1000 && typeof (dataView.byteOffset) != "undefined") {_RecordType("<510,529,25>",(dataView.byteOffset)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (dataView) != "undefined") {_RecordType("<510,518,25>",(dataView)); Inst37++; } } catch(e) {}
dataView.byteOffset === 10;
try { if (Inst38 <= 1000 && typeof (dataView.byteLength) != "undefined") {_RecordType("<538,557,26>",(dataView.byteLength)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (dataView) != "undefined") {_RecordType("<538,546,26>",(dataView)); Inst39++; } } catch(e) {}
dataView.byteLength === 118;
try { if (Inst41 <= 1000 && typeof (DataView) != "undefined") {_RecordType("<582,590,27>",(DataView)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<591,597,27>",(buffer)); Inst42++; } } catch(e) {}
dataView = new DataView(buffer, 10, 20);
try { if (Inst40 <= 1000 && typeof (dataView) != "undefined") {_RecordType("<567,575,27>",(dataView)); Inst40++; } } catch(e) {}
try { if (Inst43 <= 1000 && typeof (dataView.byteOffset) != "undefined") {_RecordType("<608,627,28>",(dataView.byteOffset)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (dataView) != "undefined") {_RecordType("<608,616,28>",(dataView)); Inst44++; } } catch(e) {}
dataView.byteOffset === 10;
try { if (Inst45 <= 1000 && typeof (dataView.byteLength) != "undefined") {_RecordType("<636,655,29>",(dataView.byteLength)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (dataView) != "undefined") {_RecordType("<636,644,29>",(dataView)); Inst46++; } } catch(e) {}
dataView.byteLength === 20;
try { if (Inst47 <= 1000 && typeof (new DataView(buffer, 10).byteLength) != "undefined") {_RecordType("<664,699,30>",(new DataView(buffer, 10).byteLength)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (DataView) != "undefined") {_RecordType("<668,676,30>",(DataView)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<677,683,30>",(buffer)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (new DataView(buffer, 10, undefined).byteLength) != "undefined") {_RecordType("<704,750,30>",(new DataView(buffer, 10, undefined).byteLength)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (DataView) != "undefined") {_RecordType("<708,716,30>",(DataView)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<717,723,30>",(buffer)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<729,738,30>",(undefined)); Inst53++; } } catch(e) {}
new DataView(buffer, 10).byteLength === new DataView(buffer, 10, undefined).byteLength;
try { if (Inst54 <= 1000 && typeof (shouldThrow) != "undefined") {_RecordType("<752,763,31>",(shouldThrow)); Inst54++; } } catch(e) {}
shouldThrow(() => {
try { if (Inst55 <= 1000 && typeof (DataView) != "undefined") {_RecordType("<778,786,32>",(DataView)); Inst55++; } } catch(e) {}
  new DataView();
}, "TypeError: DataView constructor requires at least one argument.");
try { if (Inst56 <= 1000 && typeof (shouldThrow) != "undefined") {_RecordType("<861,872,34>",(shouldThrow)); Inst56++; } } catch(e) {}
shouldThrow(() => {
try { if (Inst57 <= 1000 && typeof (DataView) != "undefined") {_RecordType("<887,895,35>",(DataView)); Inst57++; } } catch(e) {}
  new DataView(1);
}, "TypeError: Expected ArrayBuffer for the first argument.");
try { if (Inst58 <= 1000 && typeof (shouldThrow) != "undefined") {_RecordType("<963,974,37>",(shouldThrow)); Inst58++; } } catch(e) {}
shouldThrow(() => {
try { if (Inst59 <= 1000 && typeof (DataView) != "undefined") {_RecordType("<989,997,38>",(DataView)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<998,1004,38>",(buffer)); Inst60++; } } catch(e) {}
  new DataView(buffer, 256);
}, "RangeError: Length out of range of buffer");
try { if (Inst61 <= 1000 && typeof (shouldThrow) != "undefined") {_RecordType("<1061,1072,40>",(shouldThrow)); Inst61++; } } catch(e) {}
shouldThrow(() => {
try { if (Inst62 <= 1000 && typeof (DataView) != "undefined") {_RecordType("<1087,1095,41>",(DataView)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<1096,1102,41>",(buffer)); Inst63++; } } catch(e) {}
  new DataView(buffer, -1);
}, "RangeError: byteOffset cannot be negative");
try { if (Inst64 <= 1000 && typeof (shouldThrow) != "undefined") {_RecordType("<1158,1169,43>",(shouldThrow)); Inst64++; } } catch(e) {}
shouldThrow(() => {
try { if (Inst65 <= 1000 && typeof (DataView) != "undefined") {_RecordType("<1184,1192,44>",(DataView)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<1193,1199,44>",(buffer)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<1201,1209,44>",(Infinity)); Inst67++; } } catch(e) {}
  new DataView(buffer, Infinity);
}, "RangeError: byteOffset too large");
try { if (Inst68 <= 1000 && typeof (shouldThrow) != "undefined") {_RecordType("<1252,1263,46>",(shouldThrow)); Inst68++; } } catch(e) {}
shouldThrow(() => {
try { if (Inst69 <= 1000 && typeof (DataView) != "undefined") {_RecordType("<1278,1286,47>",(DataView)); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<1287,1293,47>",(buffer)); Inst70++; } } catch(e) {}
  new DataView(buffer, 0, 256);
}, "RangeError: Length out of range of buffer");
try { if (Inst71 <= 1000 && typeof (shouldThrow) != "undefined") {_RecordType("<1353,1364,49>",(shouldThrow)); Inst71++; } } catch(e) {}
shouldThrow(() => {
try { if (Inst72 <= 1000 && typeof (DataView) != "undefined") {_RecordType("<1379,1387,50>",(DataView)); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<1388,1394,50>",(buffer)); Inst73++; } } catch(e) {}
  new DataView(buffer, 0, -1);
}, "RangeError: byteLength cannot be negative");
try { if (Inst74 <= 1000 && typeof (shouldThrow) != "undefined") {_RecordType("<1453,1464,52>",(shouldThrow)); Inst74++; } } catch(e) {}
shouldThrow(() => {
try { if (Inst75 <= 1000 && typeof (DataView) != "undefined") {_RecordType("<1479,1487,53>",(DataView)); Inst75++; } } catch(e) {}try { if (Inst76 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<1488,1494,53>",(buffer)); Inst76++; } } catch(e) {}try { if (Inst77 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<1499,1507,53>",(Infinity)); Inst77++; } } catch(e) {}
  new DataView(buffer, 0, Infinity);
}, "RangeError: byteLength too large");

