var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (assert) != "undefined") {_RecordType("<9,15,1>",(assert)); Inst0++; } } catch(e) {}
function assert(b) {
try { if (Inst1 <= 1000 && typeof (b) != "undefined") {_RecordType("<16,17,1>",(b)); Inst1++; } } catch(e) {}
  ;
}

try { if (Inst2 <= 1000 && typeof (foo) != "undefined") {_RecordType("<37,40,5>",(foo)); Inst2++; } } catch(e) {}
function foo(a, b, c) {
try { if (Inst3 <= 1000 && typeof (a) != "undefined") {_RecordType("<41,42,5>",(a)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (b) != "undefined") {_RecordType("<44,45,5>",(b)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (c) != "undefined") {_RecordType("<47,48,5>",(c)); Inst5++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (a) != "undefined") {_RecordType("<62,63,6>",(a)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (b) != "undefined") {_RecordType("<66,67,6>",(b)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (c) != "undefined") {_RecordType("<70,71,6>",(c)); Inst9++; } } catch(e) {}
  let x = a + b + c;
try { if (Inst6 <= 1000 && typeof (x) != "undefined") {_RecordType("<58,59,6>",(x)); Inst6++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (a) != "undefined") {_RecordType("<83,84,7>",(a)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (b) != "undefined") {_RecordType("<86,87,7>",(b)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (c) != "undefined") {_RecordType("<89,90,7>",(c)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (x) != "undefined") {_RecordType("<92,93,7>",(x)); Inst13++; } } catch(e) {}
  return [a, b, c, x];
}

try { if (Inst14 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<99,107,10>",(noInline)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (foo) != "undefined") {_RecordType("<108,111,10>",(foo)); Inst15++; } } catch(e) {}
noInline(foo);
try { if (Inst16 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<114,135,11>",(Object.defineProperty)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Object) != "undefined") {_RecordType("<114,120,11>",(Object)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<136,152,11>",(Object.prototype)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Object) != "undefined") {_RecordType("<136,142,11>",(Object)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (get) != "undefined") {_RecordType("<167,170,12>",(get)); Inst20++; } } catch(e) {}
Object.defineProperty(Object.prototype, "10000", {
  get() {
    return 20;
  }

});

for (let i = 0; i < 10000; ++i) {
try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<209,210,18>",(i)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<216,217,18>",(i)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<229,230,18>",(i)); Inst23++; } } catch(e) {}
  let a = 10.5;
try { if (Inst24 <= 1000 && typeof (a) != "undefined") {_RecordType("<240,241,19>",(a)); Inst24++; } } catch(e) {}
  let b = 1.1;
try { if (Inst25 <= 1000 && typeof (b) != "undefined") {_RecordType("<256,257,20>",(b)); Inst25++; } } catch(e) {}
  let c = 1.2;
try { if (Inst26 <= 1000 && typeof (c) != "undefined") {_RecordType("<271,272,21>",(c)); Inst26++; } } catch(e) {}
try { if (Inst28 <= 1000 && typeof (a) != "undefined") {_RecordType("<290,291,22>",(a)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (b) != "undefined") {_RecordType("<294,295,22>",(b)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (c) != "undefined") {_RecordType("<298,299,22>",(c)); Inst30++; } } catch(e) {}
  let x = a + b + c;
try { if (Inst27 <= 1000 && typeof (x) != "undefined") {_RecordType("<286,287,22>",(x)); Inst27++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (foo) != "undefined") {_RecordType("<316,319,23>",(foo)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (a) != "undefined") {_RecordType("<320,321,23>",(a)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (b) != "undefined") {_RecordType("<323,324,23>",(b)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (c) != "undefined") {_RecordType("<326,327,23>",(c)); Inst35++; } } catch(e) {}
  let result = foo(a, b, c);
try { if (Inst31 <= 1000 && typeof (result) != "undefined") {_RecordType("<307,313,23>",(result)); Inst31++; } } catch(e) {}
try { if (Inst36 <= 1000 && typeof (result.length) != "undefined") {_RecordType("<332,345,24>",(result.length)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (result) != "undefined") {_RecordType("<332,338,24>",(result)); Inst37++; } } catch(e) {}
  result.length === 4;
try { if (Inst38 <= 1000 && typeof (result[0]) != "undefined") {_RecordType("<355,364,25>",(result[0])); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (result) != "undefined") {_RecordType("<355,361,25>",(result)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (a) != "undefined") {_RecordType("<369,370,25>",(a)); Inst40++; } } catch(e) {}
  result[0] === a;
try { if (Inst41 <= 1000 && typeof (result[1]) != "undefined") {_RecordType("<374,383,26>",(result[1])); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (result) != "undefined") {_RecordType("<374,380,26>",(result)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (b) != "undefined") {_RecordType("<388,389,26>",(b)); Inst43++; } } catch(e) {}
  result[1] === b;
try { if (Inst44 <= 1000 && typeof (result[2]) != "undefined") {_RecordType("<393,402,27>",(result[2])); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (result) != "undefined") {_RecordType("<393,399,27>",(result)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (c) != "undefined") {_RecordType("<407,408,27>",(c)); Inst46++; } } catch(e) {}
  result[2] === c;
try { if (Inst47 <= 1000 && typeof (result[3]) != "undefined") {_RecordType("<412,421,28>",(result[3])); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (result) != "undefined") {_RecordType("<412,418,28>",(result)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (x) != "undefined") {_RecordType("<426,427,28>",(x)); Inst49++; } } catch(e) {}
  result[3] === x;
}

