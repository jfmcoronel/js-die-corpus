var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (Foo) != "undefined") {_RecordType("<9,12,1>",(Foo)); Inst0++; } } catch(e) {}
function Foo(g) {
try { if (Inst1 <= 1000 && typeof (g) != "undefined") {_RecordType("<13,14,1>",(g)); Inst1++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (g) != "undefined") {_RecordType("<30,31,2>",(g)); Inst3++; } } catch(e) {}
  this.g_ = g;
try { if (Inst2 <= 1000 && typeof (this.g_) != "undefined") {_RecordType("<20,27,2>",(this.g_)); Inst2++; } } catch(e) {}
}

try { if (Inst4 <= 1000 && typeof (Foo.prototype.__defineGetter__) != "undefined") {_RecordType("<36,66,5>",(Foo.prototype.__defineGetter__)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Foo.prototype) != "undefined") {_RecordType("<36,49,5>",(Foo.prototype)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Foo) != "undefined") {_RecordType("<36,39,5>",(Foo)); Inst6++; } } catch(e) {}
Foo.prototype.__defineGetter__("f", function () {
try { if (Inst7 <= 1000 && typeof (this.g_) != "undefined") {_RecordType("<95,102,6>",(this.g_)); Inst7++; } } catch(e) {}
  return this.g_ + 32;
});

try { if (Inst8 <= 1000 && typeof (Foo.prototype.__defineGetter__) != "undefined") {_RecordType("<114,144,9>",(Foo.prototype.__defineGetter__)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Foo.prototype) != "undefined") {_RecordType("<114,127,9>",(Foo.prototype)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Foo) != "undefined") {_RecordType("<114,117,9>",(Foo)); Inst10++; } } catch(e) {}
Foo.prototype.__defineGetter__("g", function () {
try { if (Inst11 <= 1000 && typeof (this.g_) != "undefined") {_RecordType("<173,180,10>",(this.g_)); Inst11++; } } catch(e) {}
  return this.g_ + 33;
});

try { if (Inst12 <= 1000 && typeof (Foo.prototype.__defineGetter__) != "undefined") {_RecordType("<192,222,13>",(Foo.prototype.__defineGetter__)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Foo.prototype) != "undefined") {_RecordType("<192,205,13>",(Foo.prototype)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Foo) != "undefined") {_RecordType("<192,195,13>",(Foo)); Inst14++; } } catch(e) {}
Foo.prototype.__defineGetter__("h", function () {
try { if (Inst15 <= 1000 && typeof (this.g_) != "undefined") {_RecordType("<251,258,14>",(this.g_)); Inst15++; } } catch(e) {}
  return this.g_ + 34;
});

try { if (Inst16 <= 1000 && typeof (Foo.prototype.__defineGetter__) != "undefined") {_RecordType("<270,300,17>",(Foo.prototype.__defineGetter__)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Foo.prototype) != "undefined") {_RecordType("<270,283,17>",(Foo.prototype)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Foo) != "undefined") {_RecordType("<270,273,17>",(Foo)); Inst18++; } } catch(e) {}
Foo.prototype.__defineGetter__("i", function () {
try { if (Inst19 <= 1000 && typeof (this.g_) != "undefined") {_RecordType("<329,336,18>",(this.g_)); Inst19++; } } catch(e) {}
  return this.g_ + 35;
});

try { if (Inst20 <= 1000 && typeof (Foo.prototype.__defineGetter__) != "undefined") {_RecordType("<348,378,21>",(Foo.prototype.__defineGetter__)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Foo.prototype) != "undefined") {_RecordType("<348,361,21>",(Foo.prototype)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Foo) != "undefined") {_RecordType("<348,351,21>",(Foo)); Inst22++; } } catch(e) {}
Foo.prototype.__defineGetter__("j", function () {
try { if (Inst23 <= 1000 && typeof (this.g_) != "undefined") {_RecordType("<407,414,22>",(this.g_)); Inst23++; } } catch(e) {}
  return this.g_ + 36;
});

try { if (Inst24 <= 1000 && typeof (Foo.prototype.__defineGetter__) != "undefined") {_RecordType("<426,456,25>",(Foo.prototype.__defineGetter__)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Foo.prototype) != "undefined") {_RecordType("<426,439,25>",(Foo.prototype)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Foo) != "undefined") {_RecordType("<426,429,25>",(Foo)); Inst26++; } } catch(e) {}
Foo.prototype.__defineGetter__("k", function () {
try { if (Inst27 <= 1000 && typeof (this.g_) != "undefined") {_RecordType("<485,492,26>",(this.g_)); Inst27++; } } catch(e) {}
  return this.g_ + 37;
});

try { if (Inst28 <= 1000 && typeof (foo) != "undefined") {_RecordType("<513,516,29>",(foo)); Inst28++; } } catch(e) {}
function foo(o) {
try { if (Inst29 <= 1000 && typeof (o) != "undefined") {_RecordType("<517,518,29>",(o)); Inst29++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (o.f) != "undefined") {_RecordType("<531,534,30>",(o.f)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (o) != "undefined") {_RecordType("<531,532,30>",(o)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (o.k) != "undefined") {_RecordType("<537,540,30>",(o.k)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (o) != "undefined") {_RecordType("<537,538,30>",(o)); Inst33++; } } catch(e) {}
  return o.f + o.k * 1000;
}

try { if (Inst34 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<552,560,33>",(noInline)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (foo) != "undefined") {_RecordType("<561,564,33>",(foo)); Inst35++; } } catch(e) {}
noInline(foo);

for (var i = 0; i < 100; ++i) {
try { if (Inst36 <= 1000 && typeof (i) != "undefined") {_RecordType("<577,578,35>",(i)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (i) != "undefined") {_RecordType("<584,585,35>",(i)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (i) != "undefined") {_RecordType("<595,596,35>",(i)); Inst38++; } } catch(e) {}
try { if (Inst40 <= 1000 && typeof (foo) != "undefined") {_RecordType("<615,618,36>",(foo)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (Foo) != "undefined") {_RecordType("<623,626,36>",(Foo)); Inst41++; } } catch(e) {}
  var result = foo(new Foo(5));
try { if (Inst39 <= 1000 && typeof (result) != "undefined") {_RecordType("<606,612,36>",(result)); Inst39++; } } catch(e) {}

try { if (Inst42 <= 1000 && typeof (result) != "undefined") {_RecordType("<639,645,38>",(result)); Inst42++; } } catch(e) {}
  if (result != 32 + 5 + (37 + 5) * 1000) {
try { if (Inst43 <= 1000 && typeof (result) != "undefined") {_RecordType("<711,717,39>",(result)); Inst43++; } } catch(e) {}
    throw "Error: bad result: " + result;
  }
}

