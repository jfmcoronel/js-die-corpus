var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (assert) != "undefined") {_RecordType("<9,15,1>",(assert)); Inst0++; } } catch(e) {}
function assert(b) {
try { if (Inst1 <= 1000 && typeof (b) != "undefined") {_RecordType("<16,17,1>",(b)); Inst1++; } } catch(e) {}
  ;
}

try { if (Inst2 <= 1000 && typeof (testStackOverflowGet) != "undefined") {_RecordType("<37,57,5>",(testStackOverflowGet)); Inst2++; } } catch(e) {}
function testStackOverflowGet() {
try { if (Inst13 <= 1000 && typeof (e) != "undefined") {_RecordType("<176,177,11>",(e)); Inst13++; } } catch(e) {}
  try {
    let o = {};
try { if (Inst3 <= 1000 && typeof (o) != "undefined") {_RecordType("<78,79,7>",(o)); Inst3++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<102,107,8>",(Proxy)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (o) != "undefined") {_RecordType("<108,109,8>",(o)); Inst6++; } } catch(e) {}
    let p = new Proxy(o, {});
try { if (Inst4 <= 1000 && typeof (p) != "undefined") {_RecordType("<94,95,8>",(p)); Inst4++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (Object.setPrototypeOf) != "undefined") {_RecordType("<120,141,9>",(Object.setPrototypeOf)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Object) != "undefined") {_RecordType("<120,126,9>",(Object)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (o) != "undefined") {_RecordType("<142,143,9>",(o)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (p) != "undefined") {_RecordType("<145,146,9>",(p)); Inst10++; } } catch(e) {}
    Object.setPrototypeOf(o, p);
try { if (Inst11 <= 1000 && typeof (p.anyField) != "undefined") {_RecordType("<153,163,10>",(p.anyField)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (p) != "undefined") {_RecordType("<153,154,10>",(p)); Inst12++; } } catch(e) {}
    p.anyField;
  } catch (e) {
    ;
  }
}

try { if (Inst14 <= 1000 && typeof (testStackOverflowIndexedGet) != "undefined") {_RecordType("<203,230,16>",(testStackOverflowIndexedGet)); Inst14++; } } catch(e) {}
function testStackOverflowIndexedGet(i) {
try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<231,232,16>",(i)); Inst15++; } } catch(e) {}
  let threw = false;
try { if (Inst16 <= 1000 && typeof (threw) != "undefined") {_RecordType("<242,247,17>",(threw)); Inst16++; } } catch(e) {}

try { if (Inst27 <= 1000 && typeof (e) != "undefined") {_RecordType("<366,367,24>",(e)); Inst27++; } } catch(e) {}
  try {
    let o = {};
try { if (Inst17 <= 1000 && typeof (o) != "undefined") {_RecordType("<274,275,20>",(o)); Inst17++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<298,303,21>",(Proxy)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (o) != "undefined") {_RecordType("<304,305,21>",(o)); Inst20++; } } catch(e) {}
    let p = new Proxy(o, {});
try { if (Inst18 <= 1000 && typeof (p) != "undefined") {_RecordType("<290,291,21>",(p)); Inst18++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (Object.setPrototypeOf) != "undefined") {_RecordType("<316,337,22>",(Object.setPrototypeOf)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Object) != "undefined") {_RecordType("<316,322,22>",(Object)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (o) != "undefined") {_RecordType("<338,339,22>",(o)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (p) != "undefined") {_RecordType("<341,342,22>",(p)); Inst24++; } } catch(e) {}
    Object.setPrototypeOf(o, p);
try { if (Inst25 <= 1000 && typeof (p[i]) != "undefined") {_RecordType("<349,353,23>",(p[i])); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (p) != "undefined") {_RecordType("<349,350,23>",(p)); Inst26++; } } catch(e) {}
    p[i];
  } catch (e) {
    threw = true;
try { if (Inst28 <= 1000 && typeof (threw) != "undefined") {_RecordType("<375,380,25>",(threw)); Inst28++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (e.toString) != "undefined") {_RecordType("<393,403,26>",(e.toString)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (e) != "undefined") {_RecordType("<393,394,26>",(e)); Inst30++; } } catch(e) {}
    e.toString() === "RangeError: Maximum call stack size exceeded.";
  }

try { if (Inst31 <= 1000 && typeof (threw) != "undefined") {_RecordType("<466,471,29>",(threw)); Inst31++; } } catch(e) {}
  threw;
}

try { if (Inst32 <= 1000 && typeof (testStackOverflowSet) != "undefined") {_RecordType("<485,505,32>",(testStackOverflowSet)); Inst32++; } } catch(e) {}
function testStackOverflowSet() {
  let threw = false;
try { if (Inst33 <= 1000 && typeof (threw) != "undefined") {_RecordType("<516,521,33>",(threw)); Inst33++; } } catch(e) {}

try { if (Inst44 <= 1000 && typeof (e) != "undefined") {_RecordType("<651,652,40>",(e)); Inst44++; } } catch(e) {}
  try {
    let o = {};
try { if (Inst34 <= 1000 && typeof (o) != "undefined") {_RecordType("<548,549,36>",(o)); Inst34++; } } catch(e) {}
try { if (Inst36 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<572,577,37>",(Proxy)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (o) != "undefined") {_RecordType("<578,579,37>",(o)); Inst37++; } } catch(e) {}
    let p = new Proxy(o, {});
try { if (Inst35 <= 1000 && typeof (p) != "undefined") {_RecordType("<564,565,37>",(p)); Inst35++; } } catch(e) {}
try { if (Inst38 <= 1000 && typeof (Object.setPrototypeOf) != "undefined") {_RecordType("<590,611,38>",(Object.setPrototypeOf)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (Object) != "undefined") {_RecordType("<590,596,38>",(Object)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (o) != "undefined") {_RecordType("<612,613,38>",(o)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (p) != "undefined") {_RecordType("<615,616,38>",(p)); Inst41++; } } catch(e) {}
    Object.setPrototypeOf(o, p);
    p.anyField = 50;
try { if (Inst42 <= 1000 && typeof (p.anyField) != "undefined") {_RecordType("<623,633,39>",(p.anyField)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (p) != "undefined") {_RecordType("<623,624,39>",(p)); Inst43++; } } catch(e) {}
  } catch (e) {
    threw = true;
try { if (Inst45 <= 1000 && typeof (threw) != "undefined") {_RecordType("<660,665,41>",(threw)); Inst45++; } } catch(e) {}
try { if (Inst46 <= 1000 && typeof (e.toString) != "undefined") {_RecordType("<678,688,42>",(e.toString)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (e) != "undefined") {_RecordType("<678,679,42>",(e)); Inst47++; } } catch(e) {}
    e.toString() === "RangeError: Maximum call stack size exceeded.";
  }

try { if (Inst48 <= 1000 && typeof (threw) != "undefined") {_RecordType("<751,756,45>",(threw)); Inst48++; } } catch(e) {}
  threw;
}

try { if (Inst49 <= 1000 && typeof (testStackOverflowIndexedSet) != "undefined") {_RecordType("<770,797,48>",(testStackOverflowIndexedSet)); Inst49++; } } catch(e) {}
function testStackOverflowIndexedSet(i) {
try { if (Inst50 <= 1000 && typeof (i) != "undefined") {_RecordType("<798,799,48>",(i)); Inst50++; } } catch(e) {}
  let threw = false;
try { if (Inst51 <= 1000 && typeof (threw) != "undefined") {_RecordType("<809,814,49>",(threw)); Inst51++; } } catch(e) {}

try { if (Inst62 <= 1000 && typeof (e) != "undefined") {_RecordType("<938,939,56>",(e)); Inst62++; } } catch(e) {}
  try {
    let o = {};
try { if (Inst52 <= 1000 && typeof (o) != "undefined") {_RecordType("<841,842,52>",(o)); Inst52++; } } catch(e) {}
try { if (Inst54 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<865,870,53>",(Proxy)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (o) != "undefined") {_RecordType("<871,872,53>",(o)); Inst55++; } } catch(e) {}
    let p = new Proxy(o, {});
try { if (Inst53 <= 1000 && typeof (p) != "undefined") {_RecordType("<857,858,53>",(p)); Inst53++; } } catch(e) {}
try { if (Inst56 <= 1000 && typeof (Object.setPrototypeOf) != "undefined") {_RecordType("<883,904,54>",(Object.setPrototypeOf)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (Object) != "undefined") {_RecordType("<883,889,54>",(Object)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (o) != "undefined") {_RecordType("<905,906,54>",(o)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (p) != "undefined") {_RecordType("<908,909,54>",(p)); Inst59++; } } catch(e) {}
    Object.setPrototypeOf(o, p);
    p[i] = 50;
try { if (Inst60 <= 1000 && typeof (p[i]) != "undefined") {_RecordType("<916,920,55>",(p[i])); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (p) != "undefined") {_RecordType("<916,917,55>",(p)); Inst61++; } } catch(e) {}
  } catch (e) {
    threw = true;
try { if (Inst63 <= 1000 && typeof (threw) != "undefined") {_RecordType("<947,952,57>",(threw)); Inst63++; } } catch(e) {}
try { if (Inst64 <= 1000 && typeof (e.toString) != "undefined") {_RecordType("<965,975,58>",(e.toString)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (e) != "undefined") {_RecordType("<965,966,58>",(e)); Inst65++; } } catch(e) {}
    e.toString() === "RangeError: Maximum call stack size exceeded.";
  }

try { if (Inst66 <= 1000 && typeof (threw) != "undefined") {_RecordType("<1038,1043,61>",(threw)); Inst66++; } } catch(e) {}
  threw;
}

for (let i = 0; i < 250; i++) {
try { if (Inst67 <= 1000 && typeof (i) != "undefined") {_RecordType("<1057,1058,64>",(i)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (i) != "undefined") {_RecordType("<1064,1065,64>",(i)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (i) != "undefined") {_RecordType("<1073,1074,64>",(i)); Inst69++; } } catch(e) {}
try { if (Inst70 <= 1000 && typeof (testStackOverflowGet) != "undefined") {_RecordType("<1082,1102,65>",(testStackOverflowGet)); Inst70++; } } catch(e) {}
  testStackOverflowGet();
try { if (Inst71 <= 1000 && typeof (testStackOverflowIndexedGet) != "undefined") {_RecordType("<1108,1135,66>",(testStackOverflowIndexedGet)); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (i) != "undefined") {_RecordType("<1136,1137,66>",(i)); Inst72++; } } catch(e) {}
  testStackOverflowIndexedGet(i);
try { if (Inst73 <= 1000 && typeof (testStackOverflowSet) != "undefined") {_RecordType("<1142,1162,67>",(testStackOverflowSet)); Inst73++; } } catch(e) {}
  testStackOverflowSet();
try { if (Inst74 <= 1000 && typeof (testStackOverflowIndexedSet) != "undefined") {_RecordType("<1168,1195,68>",(testStackOverflowIndexedSet)); Inst74++; } } catch(e) {}try { if (Inst75 <= 1000 && typeof (i) != "undefined") {_RecordType("<1196,1197,68>",(i)); Inst75++; } } catch(e) {}
  testStackOverflowIndexedSet(i);
}

