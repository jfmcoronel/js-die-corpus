var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<9,17,1>",(shouldBe)); Inst0++; } } catch(e) {}
function shouldBe(actual, expected) {
try { if (Inst1 <= 1000 && typeof (actual) != "undefined") {_RecordType("<18,24,1>",(actual)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (expected) != "undefined") {_RecordType("<26,34,1>",(expected)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (actual) != "undefined") {_RecordType("<44,50,2>",(actual)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (expected) != "undefined") {_RecordType("<55,63,2>",(expected)); Inst4++; } } catch(e) {}
  if (actual !== expected) {
try { if (Inst5 <= 1000 && typeof (Error) != "undefined") {_RecordType("<81,86,3>",(Error)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (actual) != "undefined") {_RecordType("<103,109,3>",(actual)); Inst6++; } } catch(e) {}
    throw new Error('bad value: ' + actual);
  }
}

var array = {
  0: 1,
  1: 2,
  2: 3,
  3: 4,
  4: 5
};
try { if (Inst7 <= 1000 && typeof (array) != "undefined") {_RecordType("<123,128,7>",(array)); Inst7++; } } catch(e) {}
var array2 = {
  0: 1,
  1: "HELLO",
  2: 3,
  3: 4,
  4: 5
};
try { if (Inst8 <= 1000 && typeof (array2) != "undefined") {_RecordType("<179,185,14>",(array2)); Inst8++; } } catch(e) {}
var array3 = {
  0: 0.1,
  1: "OK",
  2: 0.3,
  3: 0.4,
  4: 0.5
};
try { if (Inst9 <= 1000 && typeof (array3) != "undefined") {_RecordType("<242,248,21>",(array3)); Inst9++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (ensureArrayStorage) != "undefined") {_RecordType("<306,324,28>",(ensureArrayStorage)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (array2) != "undefined") {_RecordType("<325,331,28>",(array2)); Inst11++; } } catch(e) {}
ensureArrayStorage(array2);
array.ok = 42;
try { if (Inst12 <= 1000 && typeof (array.ok) != "undefined") {_RecordType("<334,342,29>",(array.ok)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (array) != "undefined") {_RecordType("<334,339,29>",(array)); Inst13++; } } catch(e) {}
array2.ok = 42;
try { if (Inst14 <= 1000 && typeof (array2.ok) != "undefined") {_RecordType("<349,358,30>",(array2.ok)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (array2) != "undefined") {_RecordType("<349,355,30>",(array2)); Inst15++; } } catch(e) {}
array3.ok = 42; // Arrayify(ArrayStorage) works with ftl-eager
try { if (Inst16 <= 1000 && typeof (array3.ok) != "undefined") {_RecordType("<365,374,31>",(array3.ok)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (array3) != "undefined") {_RecordType("<365,371,31>",(array3)); Inst17++; } } catch(e) {}

try { if (Inst18 <= 1000 && typeof (testArrayStorage) != "undefined") {_RecordType("<438,454,33>",(testArrayStorage)); Inst18++; } } catch(e) {}
function testArrayStorage(array) {
try { if (Inst19 <= 1000 && typeof (array) != "undefined") {_RecordType("<455,460,33>",(array)); Inst19++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (array[4]) != "undefined") {_RecordType("<473,481,34>",(array[4])); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (array) != "undefined") {_RecordType("<473,478,34>",(array)); Inst21++; } } catch(e) {}
  return array[4];
}

try { if (Inst22 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<486,494,37>",(noInline)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (testArrayStorage) != "undefined") {_RecordType("<495,511,37>",(testArrayStorage)); Inst23++; } } catch(e) {}
noInline(testArrayStorage);

for (var i = 0; i < 1e6; ++i) {
try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<524,525,39>",(i)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<531,532,39>",(i)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (i) != "undefined") {_RecordType("<542,543,39>",(i)); Inst26++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<549,557,40>",(shouldBe)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (testArrayStorage) != "undefined") {_RecordType("<558,574,40>",(testArrayStorage)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (array) != "undefined") {_RecordType("<575,580,40>",(array)); Inst29++; } } catch(e) {}
  shouldBe(testArrayStorage(array), 5);
try { if (Inst30 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<589,597,41>",(shouldBe)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (testArrayStorage) != "undefined") {_RecordType("<598,614,41>",(testArrayStorage)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (array2) != "undefined") {_RecordType("<615,621,41>",(array2)); Inst32++; } } catch(e) {}
  shouldBe(testArrayStorage(array2), 5);
try { if (Inst33 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<630,638,42>",(shouldBe)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (testArrayStorage) != "undefined") {_RecordType("<639,655,42>",(testArrayStorage)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (array3) != "undefined") {_RecordType("<656,662,42>",(array3)); Inst35++; } } catch(e) {}
  shouldBe(testArrayStorage(array3), 0.5);
}

var array4 = [0, 1, 2, 3, 4];
try { if (Inst36 <= 1000 && typeof (array4) != "undefined") {_RecordType("<678,684,45>",(array4)); Inst36++; } } catch(e) {}
try { if (Inst37 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<704,712,46>",(shouldBe)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (testArrayStorage) != "undefined") {_RecordType("<713,729,46>",(testArrayStorage)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (array4) != "undefined") {_RecordType("<730,736,46>",(array4)); Inst39++; } } catch(e) {}
shouldBe(testArrayStorage(array4), 4);

