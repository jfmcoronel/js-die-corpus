var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
'use strict';

try { if (Inst0 <= 1000 && typeof (assert) != "undefined") {_RecordType("<24,30,3>",(assert)); Inst0++; } } catch(e) {}
function assert(b) {
try { if (Inst1 <= 1000 && typeof (b) != "undefined") {_RecordType("<31,32,3>",(b)); Inst1++; } } catch(e) {}
  ;
}

try { if (Inst2 <= 1000 && typeof (test1) != "undefined") {_RecordType("<52,57,7>",(test1)); Inst2++; } } catch(e) {}
function test1(x) {
try { if (Inst3 <= 1000 && typeof (x) != "undefined") {_RecordType("<58,59,7>",(x)); Inst3++; } } catch(e) {}
  for (let x = 20; x < 30; ++x) {
try { if (Inst4 <= 1000 && typeof (x) != "undefined") {_RecordType("<74,75,8>",(x)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (x) != "undefined") {_RecordType("<82,83,8>",(x)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (x) != "undefined") {_RecordType("<92,93,8>",(x)); Inst6++; } } catch(e) {}
    ;
  }

try { if (Inst7 <= 1000 && typeof (x) != "undefined") {_RecordType("<117,118,12>",(x)); Inst7++; } } catch(e) {}
  return x;
}

try { if (Inst8 <= 1000 && typeof (test2) != "undefined") {_RecordType("<132,137,15>",(test2)); Inst8++; } } catch(e) {}
function test2(x) {
try { if (Inst9 <= 1000 && typeof (x) != "undefined") {_RecordType("<138,139,15>",(x)); Inst9++; } } catch(e) {}
  for (let x of [1, 2, 3]) {
try { if (Inst10 <= 1000 && typeof (x) != "undefined") {_RecordType("<154,155,16>",(x)); Inst10++; } } catch(e) {}
    ;
  }

try { if (Inst11 <= 1000 && typeof (x) != "undefined") {_RecordType("<192,193,20>",(x)); Inst11++; } } catch(e) {}
  return x;
}

try { if (Inst12 <= 1000 && typeof (test3) != "undefined") {_RecordType("<207,212,23>",(test3)); Inst12++; } } catch(e) {}
function test3(x) {
try { if (Inst13 <= 1000 && typeof (x) != "undefined") {_RecordType("<213,214,23>",(x)); Inst13++; } } catch(e) {}
  for (let x in {}) {
try { if (Inst14 <= 1000 && typeof (x) != "undefined") {_RecordType("<229,230,24>",(x)); Inst14++; } } catch(e) {}
    ;
  }

try { if (Inst15 <= 1000 && typeof (x) != "undefined") {_RecordType("<260,261,28>",(x)); Inst15++; } } catch(e) {}
  return x;
}

try { if (Inst16 <= 1000 && typeof (test4) != "undefined") {_RecordType("<275,280,31>",(test4)); Inst16++; } } catch(e) {}
function test4(x) {
try { if (Inst17 <= 1000 && typeof (x) != "undefined") {_RecordType("<281,282,31>",(x)); Inst17++; } } catch(e) {}
  let i = 0;
try { if (Inst18 <= 1000 && typeof (i) != "undefined") {_RecordType("<292,293,32>",(i)); Inst18++; } } catch(e) {}

  for (const x = 20; i < 1; ++i) {
try { if (Inst19 <= 1000 && typeof (x) != "undefined") {_RecordType("<313,314,34>",(x)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<321,322,34>",(i)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<330,331,34>",(i)); Inst21++; } } catch(e) {}
    ;
  }

try { if (Inst22 <= 1000 && typeof (x) != "undefined") {_RecordType("<355,356,38>",(x)); Inst22++; } } catch(e) {}
  return x;
}

try { if (Inst23 <= 1000 && typeof (test5) != "undefined") {_RecordType("<370,375,41>",(test5)); Inst23++; } } catch(e) {}
function test5(x) {
try { if (Inst24 <= 1000 && typeof (x) != "undefined") {_RecordType("<376,377,41>",(x)); Inst24++; } } catch(e) {}
  for (const x of [1, 2, 3]) {
try { if (Inst25 <= 1000 && typeof (x) != "undefined") {_RecordType("<394,395,42>",(x)); Inst25++; } } catch(e) {}
    ;
  }

try { if (Inst26 <= 1000 && typeof (x) != "undefined") {_RecordType("<432,433,46>",(x)); Inst26++; } } catch(e) {}
  return x;
}

try { if (Inst27 <= 1000 && typeof (test6) != "undefined") {_RecordType("<447,452,49>",(test6)); Inst27++; } } catch(e) {}
function test6(x) {
try { if (Inst28 <= 1000 && typeof (x) != "undefined") {_RecordType("<453,454,49>",(x)); Inst28++; } } catch(e) {}
  for (const x in {}) {
try { if (Inst29 <= 1000 && typeof (x) != "undefined") {_RecordType("<471,472,50>",(x)); Inst29++; } } catch(e) {}
    ;
  }

try { if (Inst30 <= 1000 && typeof (x) != "undefined") {_RecordType("<502,503,54>",(x)); Inst30++; } } catch(e) {}
  return x;
}

try { if (Inst32 <= 1000 && typeof (x) != "undefined") {_RecordType("<520,521,57>",(x)); Inst32++; } } catch(e) {}
let test7 = x => {
  for (let x = 20; x < 30; ++x) {
try { if (Inst33 <= 1000 && typeof (x) != "undefined") {_RecordType("<538,539,58>",(x)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (x) != "undefined") {_RecordType("<546,547,58>",(x)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (x) != "undefined") {_RecordType("<556,557,58>",(x)); Inst35++; } } catch(e) {}
    ;
  }

try { if (Inst36 <= 1000 && typeof (x) != "undefined") {_RecordType("<581,582,62>",(x)); Inst36++; } } catch(e) {}
  return x;
};
try { if (Inst31 <= 1000 && typeof (test7) != "undefined") {_RecordType("<512,517,57>",(test7)); Inst31++; } } catch(e) {}

try { if (Inst38 <= 1000 && typeof (x) != "undefined") {_RecordType("<600,601,65>",(x)); Inst38++; } } catch(e) {}
let test8 = x => {
  for (let x of [1, 2, 3]) {
try { if (Inst39 <= 1000 && typeof (x) != "undefined") {_RecordType("<618,619,66>",(x)); Inst39++; } } catch(e) {}
    ;
  }

try { if (Inst40 <= 1000 && typeof (x) != "undefined") {_RecordType("<656,657,70>",(x)); Inst40++; } } catch(e) {}
  return x;
};
try { if (Inst37 <= 1000 && typeof (test8) != "undefined") {_RecordType("<592,597,65>",(test8)); Inst37++; } } catch(e) {}

try { if (Inst42 <= 1000 && typeof (x) != "undefined") {_RecordType("<675,676,73>",(x)); Inst42++; } } catch(e) {}
let test9 = x => {
  for (let x in {}) {
try { if (Inst43 <= 1000 && typeof (x) != "undefined") {_RecordType("<693,694,74>",(x)); Inst43++; } } catch(e) {}
    ;
  }

try { if (Inst44 <= 1000 && typeof (x) != "undefined") {_RecordType("<724,725,78>",(x)); Inst44++; } } catch(e) {}
  return x;
};
try { if (Inst41 <= 1000 && typeof (test9) != "undefined") {_RecordType("<667,672,73>",(test9)); Inst41++; } } catch(e) {}

try { if (Inst46 <= 1000 && typeof (x) != "undefined") {_RecordType("<744,745,81>",(x)); Inst46++; } } catch(e) {}
let test10 = x => {
  let i = 0;
try { if (Inst47 <= 1000 && typeof (i) != "undefined") {_RecordType("<757,758,82>",(i)); Inst47++; } } catch(e) {}

  for (const x = 20; i < 1; ++i) {
try { if (Inst48 <= 1000 && typeof (x) != "undefined") {_RecordType("<778,779,84>",(x)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (i) != "undefined") {_RecordType("<786,787,84>",(i)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (i) != "undefined") {_RecordType("<795,796,84>",(i)); Inst50++; } } catch(e) {}
    ;
  }

try { if (Inst51 <= 1000 && typeof (x) != "undefined") {_RecordType("<820,821,88>",(x)); Inst51++; } } catch(e) {}
  return x;
};
try { if (Inst45 <= 1000 && typeof (test10) != "undefined") {_RecordType("<735,741,81>",(test10)); Inst45++; } } catch(e) {}

try { if (Inst53 <= 1000 && typeof (x) != "undefined") {_RecordType("<840,841,91>",(x)); Inst53++; } } catch(e) {}
let test11 = x => {
  for (const x of [1, 2, 3]) {
try { if (Inst54 <= 1000 && typeof (x) != "undefined") {_RecordType("<860,861,92>",(x)); Inst54++; } } catch(e) {}
    ;
  }

try { if (Inst55 <= 1000 && typeof (x) != "undefined") {_RecordType("<898,899,96>",(x)); Inst55++; } } catch(e) {}
  return x;
};
try { if (Inst52 <= 1000 && typeof (test11) != "undefined") {_RecordType("<831,837,91>",(test11)); Inst52++; } } catch(e) {}

try { if (Inst57 <= 1000 && typeof (x) != "undefined") {_RecordType("<918,919,99>",(x)); Inst57++; } } catch(e) {}
let test12 = x => {
  for (const x in {}) {
try { if (Inst58 <= 1000 && typeof (x) != "undefined") {_RecordType("<938,939,100>",(x)); Inst58++; } } catch(e) {}
    ;
  }

try { if (Inst59 <= 1000 && typeof (x) != "undefined") {_RecordType("<969,970,104>",(x)); Inst59++; } } catch(e) {}
  return x;
};
try { if (Inst56 <= 1000 && typeof (test12) != "undefined") {_RecordType("<909,915,99>",(test12)); Inst56++; } } catch(e) {}

for (let test of [test1, test2, test3, test4, test5, test7, test8, test9, test10, test11, test12]) {
try { if (Inst60 <= 1000 && typeof (test) != "undefined") {_RecordType("<985,989,107>",(test)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (test1) != "undefined") {_RecordType("<994,999,107>",(test1)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (test2) != "undefined") {_RecordType("<1001,1006,107>",(test2)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (test3) != "undefined") {_RecordType("<1008,1013,107>",(test3)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (test4) != "undefined") {_RecordType("<1015,1020,107>",(test4)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (test5) != "undefined") {_RecordType("<1022,1027,107>",(test5)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (test7) != "undefined") {_RecordType("<1029,1034,107>",(test7)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (test8) != "undefined") {_RecordType("<1036,1041,107>",(test8)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (test9) != "undefined") {_RecordType("<1043,1048,107>",(test9)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (test10) != "undefined") {_RecordType("<1050,1056,107>",(test10)); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (test11) != "undefined") {_RecordType("<1058,1064,107>",(test11)); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (test12) != "undefined") {_RecordType("<1066,1072,107>",(test12)); Inst71++; } } catch(e) {}
try { if (Inst72 <= 1000 && typeof (test) != "undefined") {_RecordType("<1079,1083,108>",(test)); Inst72++; } } catch(e) {}
  test("foo") === "foo";
}

