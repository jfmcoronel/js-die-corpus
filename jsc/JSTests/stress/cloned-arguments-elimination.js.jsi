var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (testModifyLength) != "undefined") {_RecordType("<9,25,1>",(testModifyLength)); Inst0++; } } catch(e) {}
function testModifyLength() {
  "use strict";

  arguments.length = 10;
try { if (Inst1 <= 1000 && typeof (arguments.length) != "undefined") {_RecordType("<49,65,4>",(arguments.length)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<49,58,4>",(arguments)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (arguments.length) != "undefined") {_RecordType("<81,97,5>",(arguments.length)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<81,90,5>",(arguments)); Inst4++; } } catch(e) {}
  return arguments.length;
}

try { if (Inst5 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<102,110,8>",(noInline)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (testModifyLength) != "undefined") {_RecordType("<111,127,8>",(testModifyLength)); Inst6++; } } catch(e) {}
noInline(testModifyLength);

try { if (Inst7 <= 1000 && typeof (testAddOtherProperty) != "undefined") {_RecordType("<140,160,10>",(testAddOtherProperty)); Inst7++; } } catch(e) {}
function testAddOtherProperty() {
  "use strict";

  arguments.foo = 1;
try { if (Inst8 <= 1000 && typeof (arguments.foo) != "undefined") {_RecordType("<184,197,13>",(arguments.foo)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<184,193,13>",(arguments)); Inst9++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (arguments.length) != "undefined") {_RecordType("<212,228,14>",(arguments.length)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<212,221,14>",(arguments)); Inst11++; } } catch(e) {}
  return arguments.length;
}

try { if (Inst12 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<233,241,17>",(noInline)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (testAddOtherProperty) != "undefined") {_RecordType("<242,262,17>",(testAddOtherProperty)); Inst13++; } } catch(e) {}
noInline(testAddOtherProperty);

try { if (Inst14 <= 1000 && typeof (testAddOtherPropertyInBranch) != "undefined") {_RecordType("<275,303,19>",(testAddOtherPropertyInBranch)); Inst14++; } } catch(e) {}
function testAddOtherPropertyInBranch() {
  "use strict";

try { if (Inst15 <= 1000 && typeof (arguments[0]) != "undefined") {_RecordType("<331,343,22>",(arguments[0])); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<331,340,22>",(arguments)); Inst16++; } } catch(e) {}
  if (arguments[0] % 2) {
    arguments.foo = 1;
try { if (Inst17 <= 1000 && typeof (arguments.foo) != "undefined") {_RecordType("<355,368,23>",(arguments.foo)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<355,364,23>",(arguments)); Inst18++; } } catch(e) {}
  }

try { if (Inst19 <= 1000 && typeof (arguments.length) != "undefined") {_RecordType("<388,404,26>",(arguments.length)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<388,397,26>",(arguments)); Inst20++; } } catch(e) {}
  return arguments.length;
}

try { if (Inst21 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<409,417,29>",(noInline)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (testAddOtherPropertyInBranch) != "undefined") {_RecordType("<418,446,29>",(testAddOtherPropertyInBranch)); Inst22++; } } catch(e) {}
noInline(testAddOtherPropertyInBranch);

for (i = 0; i < 100000; i++) {
try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<455,456,31>",(i)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<462,463,31>",(i)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<474,475,31>",(i)); Inst25++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (testModifyLength) != "undefined") {_RecordType("<487,503,32>",(testModifyLength)); Inst26++; } } catch(e) {}
  if (testModifyLength(1) !== 10) {
    throw "bad";
  }

try { if (Inst27 <= 1000 && typeof (testAddOtherProperty) != "undefined") {_RecordType("<545,565,36>",(testAddOtherProperty)); Inst27++; } } catch(e) {}
  if (testAddOtherProperty(1) !== 1) {
    throw "bad";
  }

try { if (Inst28 <= 1000 && typeof (testAddOtherPropertyInBranch) != "undefined") {_RecordType("<606,634,40>",(testAddOtherPropertyInBranch)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (i) != "undefined") {_RecordType("<635,636,40>",(i)); Inst29++; } } catch(e) {}
  if (testAddOtherPropertyInBranch(i) !== 1) {
    throw "bad";
  }
}

