var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
var Inst102 = 0;
var Inst103 = 0;
var Inst104 = 0;
var Inst105 = 0;
var Inst106 = 0;
var Inst107 = 0;
var Inst108 = 0;
var Inst109 = 0;
var Inst110 = 0;
var Inst111 = 0;
var Inst112 = 0;
var Inst113 = 0;
var Inst114 = 0;
var Inst115 = 0;
var Inst116 = 0;
var Inst117 = 0;
var Inst118 = 0;
var Inst119 = 0;
var Inst120 = 0;
var Inst121 = 0;
var Inst122 = 0;
var Inst123 = 0;
var Inst124 = 0;
var Inst125 = 0;
var Inst126 = 0;
var Inst127 = 0;
var Inst128 = 0;
var Inst129 = 0;
var Inst130 = 0;
var Inst131 = 0;
var Inst132 = 0;
var Inst133 = 0;
var Inst134 = 0;
var Inst135 = 0;
var Inst136 = 0;
var Inst137 = 0;
var Inst138 = 0;
var Inst139 = 0;
var Inst140 = 0;
var Inst141 = 0;
var Inst142 = 0;
var Inst143 = 0;
var Inst144 = 0;
var Inst145 = 0;
var Inst146 = 0;
var Inst147 = 0;
var Inst148 = 0;
var Inst149 = 0;
var Inst150 = 0;
var Inst151 = 0;
var Inst152 = 0;
var Inst153 = 0;
var Inst154 = 0;
var Inst155 = 0;
var Inst156 = 0;
var Inst157 = 0;
var Inst158 = 0;
var Inst159 = 0;
var Inst160 = 0;
var Inst161 = 0;
var Inst162 = 0;
var Inst163 = 0;
var Inst164 = 0;
var Inst165 = 0;
var Inst166 = 0;
var Inst167 = 0;
var Inst168 = 0;
var Inst169 = 0;
var Inst170 = 0;
var Inst171 = 0;
var Inst172 = 0;
var Inst173 = 0;
var Inst174 = 0;
var Inst175 = 0;
var Inst176 = 0;
var Inst177 = 0;
var Inst178 = 0;
var Inst179 = 0;
var Inst180 = 0;
var Inst181 = 0;
var Inst182 = 0;
var Inst183 = 0;
var Inst184 = 0;
var Inst185 = 0;
var Inst186 = 0;
var Inst187 = 0;
var Inst188 = 0;
var Inst189 = 0;
var Inst190 = 0;
var Inst191 = 0;
var Inst192 = 0;
var Inst193 = 0;
var Inst194 = 0;
var Inst195 = 0;
var Inst196 = 0;
var Inst197 = 0;
var Inst198 = 0;
var Inst199 = 0;
var Inst200 = 0;
var Inst201 = 0;
var Inst202 = 0;
var Inst203 = 0;
var Inst204 = 0;
var Inst205 = 0;
var Inst206 = 0;
var Inst207 = 0;
var Inst208 = 0;
var Inst209 = 0;
var Inst210 = 0;
var Inst211 = 0;
var Inst212 = 0;
var Inst213 = 0;
var Inst214 = 0;
var Inst215 = 0;
var Inst216 = 0;
var Inst217 = 0;
var Inst218 = 0;
var Inst219 = 0;
var Inst220 = 0;
var Inst221 = 0;
var Inst222 = 0;
var Inst223 = 0;
var Inst224 = 0;
var Inst225 = 0;
var Inst226 = 0;
var Inst227 = 0;
var Inst228 = 0;
var Inst229 = 0;
var Inst230 = 0;
var Inst231 = 0;
var Inst232 = 0;
var Inst233 = 0;
var Inst234 = 0;
var Inst235 = 0;
var Inst236 = 0;
var Inst237 = 0;
var Inst238 = 0;
var Inst239 = 0;
var Inst240 = 0;
var Inst241 = 0;
var Inst242 = 0;
var Inst243 = 0;
var Inst244 = 0;
var Inst245 = 0;
var Inst246 = 0;
var Inst247 = 0;
var Inst248 = 0;
var Inst249 = 0;
var Inst250 = 0;
var Inst251 = 0;
var Inst252 = 0;
var Inst253 = 0;
var Inst254 = 0;
var Inst255 = 0;
var Inst256 = 0;
var Inst257 = 0;
var Inst258 = 0;
var Inst259 = 0;
var Inst260 = 0;
var Inst261 = 0;
var Inst262 = 0;
var Inst263 = 0;
var Inst264 = 0;
var Inst265 = 0;
var Inst266 = 0;
var Inst267 = 0;
var Inst268 = 0;
var Inst269 = 0;
var Inst270 = 0;
var Inst271 = 0;
var Inst272 = 0;
var Inst273 = 0;
var Inst274 = 0;
var Inst275 = 0;
var Inst276 = 0;
var Inst277 = 0;
var Inst278 = 0;
var Inst279 = 0;
var Inst280 = 0;
var Inst281 = 0;
var Inst282 = 0;
var Inst283 = 0;
var Inst284 = 0;
var Inst285 = 0;
var Inst286 = 0;
var Inst287 = 0;
var Inst288 = 0;
var Inst289 = 0;
var Inst290 = 0;
var Inst291 = 0;
var Inst292 = 0;
var Inst293 = 0;
var Inst294 = 0;
var Inst295 = 0;
var Inst296 = 0;
var Inst297 = 0;
var Inst298 = 0;
var Inst299 = 0;
var Inst300 = 0;
var Inst301 = 0;
var Inst302 = 0;
var Inst303 = 0;
var Inst304 = 0;
var Inst305 = 0;
var Inst306 = 0;
var Inst307 = 0;
var Inst308 = 0;
var Inst309 = 0;
var Inst310 = 0;
var Inst311 = 0;
var Inst312 = 0;
var Inst313 = 0;
var Inst314 = 0;
var Inst315 = 0;
var Inst316 = 0;
var Inst317 = 0;
var Inst318 = 0;
var Inst319 = 0;
var Inst320 = 0;
var Inst321 = 0;
var Inst322 = 0;
var Inst323 = 0;
var Inst324 = 0;
var Inst325 = 0;
var Inst326 = 0;
var Inst327 = 0;
var Inst328 = 0;
var Inst329 = 0;
var Inst330 = 0;
var Inst331 = 0;
var Inst332 = 0;
var Inst333 = 0;
var Inst334 = 0;
var Inst335 = 0;
var Inst336 = 0;
var Inst337 = 0;
var Inst338 = 0;
var Inst339 = 0;
var Inst340 = 0;
var Inst341 = 0;
var Inst342 = 0;
var Inst343 = 0;
var Inst344 = 0;
var Inst345 = 0;
var Inst346 = 0;
var Inst347 = 0;
var Inst348 = 0;
var Inst349 = 0;
var Inst350 = 0;
var Inst351 = 0;
var Inst352 = 0;
var Inst353 = 0;
var Inst354 = 0;
var Inst355 = 0;
var Inst356 = 0;
var Inst357 = 0;
var Inst358 = 0;
var Inst359 = 0;
var Inst360 = 0;
var Inst361 = 0;
var Inst362 = 0;
var Inst363 = 0;
var Inst364 = 0;
var Inst365 = 0;
var Inst366 = 0;
var Inst367 = 0;
var Inst368 = 0;
var Inst369 = 0;
var Inst370 = 0;
var Inst371 = 0;
var Inst372 = 0;
var Inst373 = 0;
var Inst374 = 0;
var Inst375 = 0;
var Inst376 = 0;
var Inst377 = 0;
var Inst378 = 0;
var Inst379 = 0;
var Inst380 = 0;
var Inst381 = 0;
var Inst382 = 0;
var Inst383 = 0;
var Inst384 = 0;
var Inst385 = 0;
var Inst386 = 0;
var Inst387 = 0;
var Inst388 = 0;
var Inst389 = 0;
var Inst390 = 0;
var Inst391 = 0;
var Inst392 = 0;
var Inst393 = 0;
var Inst394 = 0;
var Inst395 = 0;
var Inst396 = 0;
var Inst397 = 0;
var Inst398 = 0;
var Inst399 = 0;
var Inst400 = 0;
var Inst401 = 0;
var Inst402 = 0;
var Inst403 = 0;
var Inst404 = 0;
var Inst405 = 0;
var Inst406 = 0;
var Inst407 = 0;
var Inst408 = 0;
var Inst409 = 0;
var Inst410 = 0;
var Inst411 = 0;
var Inst412 = 0;
var Inst413 = 0;
var Inst414 = 0;
var Inst415 = 0;
var Inst416 = 0;
var Inst417 = 0;
var Inst418 = 0;
var Inst419 = 0;
var Inst420 = 0;
var Inst421 = 0;
var Inst422 = 0;
var Inst423 = 0;
var Inst424 = 0;
var Inst425 = 0;
var Inst426 = 0;
var Inst427 = 0;
var Inst428 = 0;
var Inst429 = 0;
var Inst430 = 0;
var Inst431 = 0;
var Inst432 = 0;
var Inst433 = 0;
var Inst434 = 0;
var Inst435 = 0;
var Inst436 = 0;
var Inst437 = 0;
var Inst438 = 0;
var Inst439 = 0;
var Inst440 = 0;
var Inst441 = 0;
var Inst442 = 0;
var Inst443 = 0;
var Inst444 = 0;
var Inst445 = 0;
var Inst446 = 0;
var Inst447 = 0;
var Inst448 = 0;
var Inst449 = 0;
var Inst450 = 0;
var Inst451 = 0;
var Inst452 = 0;
var Inst453 = 0;
var Inst454 = 0;
var Inst455 = 0;
var Inst456 = 0;
var Inst457 = 0;
var Inst458 = 0;
var Inst459 = 0;
var Inst460 = 0;
var Inst461 = 0;
var Inst462 = 0;
var Inst463 = 0;
var Inst464 = 0;
var Inst465 = 0;
var Inst466 = 0;
var Inst467 = 0;
var Inst468 = 0;
var Inst469 = 0;
var Inst470 = 0;
var Inst471 = 0;
var Inst472 = 0;
var Inst473 = 0;
var Inst474 = 0;
var Inst475 = 0;
var Inst476 = 0;
var Inst477 = 0;
var Inst478 = 0;
var Inst479 = 0;
var Inst480 = 0;
var Inst481 = 0;
var Inst482 = 0;
var Inst483 = 0;
var Inst484 = 0;
var Inst485 = 0;
var Inst486 = 0;
var Inst487 = 0;
var Inst488 = 0;
var Inst489 = 0;
var Inst490 = 0;
var Inst491 = 0;
var Inst492 = 0;
var Inst493 = 0;
var Inst494 = 0;
var Inst495 = 0;
var Inst496 = 0;
var Inst497 = 0;
var Inst498 = 0;
var Inst499 = 0;
var Inst500 = 0;
var Inst501 = 0;
var Inst502 = 0;
var Inst503 = 0;
var Inst504 = 0;
var Inst505 = 0;
var Inst506 = 0;
var Inst507 = 0;
var Inst508 = 0;
var Inst509 = 0;
var Inst510 = 0;
var Inst511 = 0;
var Inst512 = 0;
var Inst513 = 0;
var Inst514 = 0;
var Inst515 = 0;
var Inst516 = 0;
var Inst517 = 0;
var Inst518 = 0;
var Inst519 = 0;
var Inst520 = 0;
var Inst521 = 0;
var Inst522 = 0;
var Inst523 = 0;
var Inst524 = 0;
var Inst525 = 0;
var Inst526 = 0;
var Inst527 = 0;
var Inst528 = 0;
var Inst529 = 0;
var Inst530 = 0;
var Inst531 = 0;
var Inst532 = 0;
var Inst533 = 0;
var Inst534 = 0;
var Inst535 = 0;
var Inst536 = 0;
var Inst537 = 0;
var Inst538 = 0;
var Inst539 = 0;
var Inst540 = 0;
var Inst541 = 0;
var Inst542 = 0;
var Inst543 = 0;
var Inst544 = 0;
var Inst545 = 0;
var Inst546 = 0;
var Inst547 = 0;
var Inst548 = 0;
var Inst549 = 0;
var Inst550 = 0;
var Inst551 = 0;
var Inst552 = 0;
var Inst553 = 0;
var Inst554 = 0;
var Inst555 = 0;
var Inst556 = 0;
var Inst557 = 0;
var Inst558 = 0;
var Inst559 = 0;
var Inst560 = 0;
var Inst561 = 0;
var Inst562 = 0;
var Inst563 = 0;
var Inst564 = 0;
var Inst565 = 0;
var Inst566 = 0;
var Inst567 = 0;
var Inst568 = 0;
var Inst569 = 0;
var Inst570 = 0;
var Inst571 = 0;
var Inst572 = 0;
var Inst573 = 0;
var Inst574 = 0;
var Inst575 = 0;
var Inst576 = 0;
var Inst577 = 0;
var Inst578 = 0;
var Inst579 = 0;
var Inst580 = 0;
var Inst581 = 0;
var Inst582 = 0;
var Inst583 = 0;
var Inst584 = 0;
var Inst585 = 0;
var Inst586 = 0;
var Inst587 = 0;
var Inst588 = 0;
var Inst589 = 0;
var Inst590 = 0;
var Inst591 = 0;
var Inst592 = 0;
var Inst593 = 0;
var Inst594 = 0;
var Inst595 = 0;
var Inst596 = 0;
var Inst597 = 0;
var Inst598 = 0;
var Inst599 = 0;
var Inst600 = 0;
var Inst601 = 0;
var Inst602 = 0;
var Inst603 = 0;
var Inst604 = 0;
var Inst605 = 0;
var Inst606 = 0;
var Inst607 = 0;
var Inst608 = 0;
var Inst609 = 0;
var Inst610 = 0;
var Inst611 = 0;
var Inst612 = 0;
var Inst613 = 0;
var Inst614 = 0;
var Inst615 = 0;
var Inst616 = 0;
var Inst617 = 0;
var Inst618 = 0;
var Inst619 = 0;
var Inst620 = 0;
var Inst621 = 0;
var Inst622 = 0;
var Inst623 = 0;
var Inst624 = 0;
var Inst625 = 0;
var Inst626 = 0;
var Inst627 = 0;
var Inst628 = 0;
var Inst629 = 0;
var Inst630 = 0;
var Inst631 = 0;
var Inst632 = 0;
var Inst633 = 0;
var Inst634 = 0;
var Inst635 = 0;
var Inst636 = 0;
var Inst637 = 0;
var Inst638 = 0;
var Inst639 = 0;
var Inst640 = 0;
var Inst641 = 0;
var Inst642 = 0;
var Inst643 = 0;
var Inst644 = 0;
var Inst645 = 0;
var Inst646 = 0;
var Inst647 = 0;
var Inst648 = 0;
var Inst649 = 0;
var Inst650 = 0;
var Inst651 = 0;
var Inst652 = 0;
var Inst653 = 0;
var Inst654 = 0;
var Inst655 = 0;
var Inst656 = 0;
var Inst657 = 0;
var Inst658 = 0;
var Inst659 = 0;
var Inst660 = 0;
var Inst661 = 0;
var Inst662 = 0;
var Inst663 = 0;
var Inst664 = 0;
var Inst665 = 0;
var Inst666 = 0;
var Inst667 = 0;
var Inst668 = 0;
var Inst669 = 0;
var Inst670 = 0;
var Inst671 = 0;
var Inst672 = 0;
var Inst673 = 0;
var Inst674 = 0;
var Inst675 = 0;
var Inst676 = 0;
var Inst677 = 0;
var Inst678 = 0;
var Inst679 = 0;
var Inst680 = 0;
var Inst681 = 0;
var Inst682 = 0;
var Inst683 = 0;
var Inst684 = 0;
var Inst685 = 0;
var Inst686 = 0;
var Inst687 = 0;
var Inst688 = 0;
var Inst689 = 0;
var Inst690 = 0;
var Inst691 = 0;
var Inst692 = 0;
var Inst693 = 0;
var Inst694 = 0;
var Inst695 = 0;
var Inst696 = 0;
var Inst697 = 0;
var Inst698 = 0;
var Inst699 = 0;
var Inst700 = 0;
var Inst701 = 0;
var Inst702 = 0;
var Inst703 = 0;
var Inst704 = 0;
var Inst705 = 0;
var Inst706 = 0;
var Inst707 = 0;
var Inst708 = 0;
var Inst709 = 0;
var Inst710 = 0;
var Inst711 = 0;
var Inst712 = 0;
var Inst713 = 0;
var Inst714 = 0;
var Inst715 = 0;
var Inst716 = 0;
var Inst717 = 0;
var Inst718 = 0;
var Inst719 = 0;
var Inst720 = 0;
var Inst721 = 0;
var Inst722 = 0;
var Inst723 = 0;
var Inst724 = 0;
var Inst725 = 0;
var Inst726 = 0;
var Inst727 = 0;
var Inst728 = 0;
var Inst729 = 0;
var Inst730 = 0;
var Inst731 = 0;
var Inst732 = 0;
var Inst733 = 0;
var Inst734 = 0;
var Inst735 = 0;
var Inst736 = 0;
var Inst737 = 0;
var Inst738 = 0;
var Inst739 = 0;
var Inst740 = 0;
var Inst741 = 0;
var Inst742 = 0;
var Inst743 = 0;
var Inst744 = 0;
var Inst745 = 0;
var Inst746 = 0;
var Inst747 = 0;
var Inst748 = 0;
var Inst749 = 0;
var Inst750 = 0;
var Inst751 = 0;
var Inst752 = 0;
var Inst753 = 0;
var Inst754 = 0;
var Inst755 = 0;
var Inst756 = 0;
var Inst757 = 0;
var Inst758 = 0;
var Inst759 = 0;
var Inst760 = 0;
var Inst761 = 0;
var Inst762 = 0;
var Inst763 = 0;
var Inst764 = 0;
var Inst765 = 0;
var Inst766 = 0;
var Inst767 = 0;
var Inst768 = 0;
var Inst769 = 0;
var Inst770 = 0;
var Inst771 = 0;
var Inst772 = 0;
var Inst773 = 0;
var Inst774 = 0;
var Inst775 = 0;
var Inst776 = 0;
var Inst777 = 0;
var Inst778 = 0;
var Inst779 = 0;
var Inst780 = 0;
var Inst781 = 0;
var Inst782 = 0;
var Inst783 = 0;
var Inst784 = 0;
var Inst785 = 0;
var Inst786 = 0;
var Inst787 = 0;
var Inst788 = 0;
var Inst789 = 0;
var Inst790 = 0;
var Inst791 = 0;
var Inst792 = 0;
var Inst793 = 0;
var Inst794 = 0;
var Inst795 = 0;
var Inst796 = 0;
var Inst797 = 0;
var Inst798 = 0;
var Inst799 = 0;
var Inst800 = 0;
var Inst801 = 0;
var Inst802 = 0;
var Inst803 = 0;
var Inst804 = 0;
var Inst805 = 0;
var Inst806 = 0;
var Inst807 = 0;
var Inst808 = 0;
var Inst809 = 0;
var Inst810 = 0;
var Inst811 = 0;
var Inst812 = 0;
var Inst813 = 0;
var Inst814 = 0;
var Inst815 = 0;
var Inst816 = 0;
var Inst817 = 0;
var Inst818 = 0;
var Inst819 = 0;
var Inst820 = 0;
var Inst821 = 0;
var Inst822 = 0;
var Inst823 = 0;
var Inst824 = 0;
var Inst825 = 0;
var Inst826 = 0;
var Inst827 = 0;
var Inst828 = 0;
var Inst829 = 0;
var Inst830 = 0;
var Inst831 = 0;
var Inst832 = 0;
var Inst833 = 0;
var Inst834 = 0;
var Inst835 = 0;
var Inst836 = 0;
var Inst837 = 0;
var Inst838 = 0;
var Inst839 = 0;
var Inst840 = 0;
var Inst841 = 0;
var Inst842 = 0;
var Inst843 = 0;
var Inst844 = 0;
var Inst845 = 0;
var Inst846 = 0;
var Inst847 = 0;
var Inst848 = 0;
var Inst849 = 0;
var Inst850 = 0;
var Inst851 = 0;
var Inst852 = 0;
var Inst853 = 0;
var Inst854 = 0;
var Inst855 = 0;
var Inst856 = 0;
var Inst857 = 0;
var Inst858 = 0;
var Inst859 = 0;
var Inst860 = 0;
var Inst861 = 0;
var Inst862 = 0;
var Inst863 = 0;
var Inst864 = 0;
var Inst865 = 0;
var Inst866 = 0;
var Inst867 = 0;
var Inst868 = 0;
var Inst869 = 0;
var Inst870 = 0;
var Inst871 = 0;
var Inst872 = 0;
var Inst873 = 0;
var Inst874 = 0;
var Inst875 = 0;
var Inst876 = 0;
var Inst877 = 0;
var Inst878 = 0;
var Inst879 = 0;
var Inst880 = 0;
var Inst881 = 0;
var Inst882 = 0;
var Inst883 = 0;
var Inst884 = 0;
var Inst885 = 0;
var Inst886 = 0;
var Inst887 = 0;
var Inst888 = 0;
var Inst889 = 0;
var Inst890 = 0;
var Inst891 = 0;
var Inst892 = 0;
var Inst893 = 0;
var Inst894 = 0;
var Inst895 = 0;
var Inst896 = 0;
var Inst897 = 0;
var Inst898 = 0;
var Inst899 = 0;
var Inst900 = 0;
var Inst901 = 0;
var Inst902 = 0;
var Inst903 = 0;
var Inst904 = 0;
var Inst905 = 0;
var Inst906 = 0;
var Inst907 = 0;
var Inst908 = 0;
var Inst909 = 0;
var Inst910 = 0;
var Inst911 = 0;
var Inst912 = 0;
var Inst913 = 0;
var Inst914 = 0;
var Inst915 = 0;
var Inst916 = 0;
var Inst917 = 0;
var Inst918 = 0;
var Inst919 = 0;
var Inst920 = 0;
var Inst921 = 0;
var Inst922 = 0;
var Inst923 = 0;
var Inst924 = 0;
var Inst925 = 0;
var Inst926 = 0;
var Inst927 = 0;
var Inst928 = 0;
var Inst929 = 0;
var Inst930 = 0;
var Inst931 = 0;
var Inst932 = 0;
var Inst933 = 0;
var Inst934 = 0;
var Inst935 = 0;
var Inst936 = 0;
var Inst937 = 0;
var Inst938 = 0;
var Inst939 = 0;
var Inst940 = 0;
var Inst941 = 0;
var Inst942 = 0;
var Inst943 = 0;
var Inst944 = 0;
var Inst945 = 0;
var Inst946 = 0;
var Inst947 = 0;
var Inst948 = 0;
var Inst949 = 0;
var Inst950 = 0;
var Inst951 = 0;
var Inst952 = 0;
var Inst953 = 0;
var Inst954 = 0;
var Inst955 = 0;
var Inst956 = 0;
var Inst957 = 0;
var Inst958 = 0;
var Inst959 = 0;
var Inst960 = 0;
var Inst961 = 0;
var Inst962 = 0;
var Inst963 = 0;
var Inst964 = 0;
var Inst965 = 0;
var Inst966 = 0;
var Inst967 = 0;
var Inst968 = 0;
var Inst969 = 0;
var Inst970 = 0;
var Inst971 = 0;
var Inst972 = 0;
var Inst973 = 0;
var Inst974 = 0;
var Inst975 = 0;
var Inst976 = 0;
var Inst977 = 0;
var Inst978 = 0;
var Inst979 = 0;
var Inst980 = 0;
var Inst981 = 0;
var Inst982 = 0;
var Inst983 = 0;
var Inst984 = 0;
var Inst985 = 0;
var Inst986 = 0;
var Inst987 = 0;
var Inst988 = 0;
var Inst989 = 0;
var Inst990 = 0;
var Inst991 = 0;
var Inst992 = 0;
var Inst993 = 0;
var Inst994 = 0;
var Inst995 = 0;
var Inst996 = 0;
var Inst997 = 0;
var Inst998 = 0;
var Inst999 = 0;
var Inst1000 = 0;
var Inst1001 = 0;
var Inst1002 = 0;
var Inst1003 = 0;
var Inst1004 = 0;
var Inst1005 = 0;
var Inst1006 = 0;
var Inst1007 = 0;
var Inst1008 = 0;
var Inst1009 = 0;
var Inst1010 = 0;
var Inst1011 = 0;
var Inst1012 = 0;
var Inst1013 = 0;
var Inst1014 = 0;
var Inst1015 = 0;
var Inst1016 = 0;
var Inst1017 = 0;
var Inst1018 = 0;
var Inst1019 = 0;
var Inst1020 = 0;
var Inst1021 = 0;
var Inst1022 = 0;
var Inst1023 = 0;
var Inst1024 = 0;
var Inst1025 = 0;
var Inst1026 = 0;
var Inst1027 = 0;
var Inst1028 = 0;
var Inst1029 = 0;
var Inst1030 = 0;
var Inst1031 = 0;
var Inst1032 = 0;
var Inst1033 = 0;
var Inst1034 = 0;
var Inst1035 = 0;
var Inst1036 = 0;
var Inst1037 = 0;
var Inst1038 = 0;
var Inst1039 = 0;
var Inst1040 = 0;
var Inst1041 = 0;
var Inst1042 = 0;
var Inst1043 = 0;
var Inst1044 = 0;
var Inst1045 = 0;
var Inst1046 = 0;
var Inst1047 = 0;
var Inst1048 = 0;
var Inst1049 = 0;
var Inst1050 = 0;
var Inst1051 = 0;
var Inst1052 = 0;
var Inst1053 = 0;
var Inst1054 = 0;
var Inst1055 = 0;
var Inst1056 = 0;
var Inst1057 = 0;
var Inst1058 = 0;
var Inst1059 = 0;
var Inst1060 = 0;
var Inst1061 = 0;
var Inst1062 = 0;
var Inst1063 = 0;
var Inst1064 = 0;
var Inst1065 = 0;
var Inst1066 = 0;
var Inst1067 = 0;
var Inst1068 = 0;
var Inst1069 = 0;
var Inst1070 = 0;
var Inst1071 = 0;
var Inst1072 = 0;
var Inst1073 = 0;
var Inst1074 = 0;
var Inst1075 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
"use strict"; // Copyright 2008 the V8 project authors. All rights reserved.
// Copyright 1996 John Maloney and Mario Wolczko.
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; either version 2 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
// This implementation of the DeltaBlue benchmark is derived
// from the Smalltalk implementation by John Maloney and Mario
// Wolczko. Some parts have been translated directly, whereas
// others have been modified more aggresively to make it feel
// more like a JavaScript program.

/**
 * A JavaScript implementation of the DeltaBlue constraint-solving
 * algorithm, as described in:
 *
 * "The DeltaBlue Algorithm: An Incremental Constraint Hierarchy Solver"
 *   Bjorn N. Freeman-Benson and John Maloney
 *   January 1990 Communications of the ACM,
 *   also available as University of Washington TR 89-08-06.
 *
 * Beware: this benchmark is written in a grotesque style where
 * the constraint model is built by side-effects from constructors.
 * I've kept it this way to avoid deviating too much from the original
 * implementation.
 */

/* --- O b j e c t   M o d e l --- */

Object.prototype.inheritsFrom = function (shuper) {
try { if (Inst3 <= 1000 && typeof (shuper) != "undefined") {_RecordType("<1765,1771,39>",(shuper)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (Inheriter) != "undefined") {_RecordType("<1786,1795,40>",(Inheriter)); Inst4++; } } catch(e) {}
  function Inheriter() {
    ;
  }

try { if (Inst7 <= 1000 && typeof (shuper.prototype) != "undefined") {_RecordType("<1835,1851,44>",(shuper.prototype)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (shuper) != "undefined") {_RecordType("<1835,1841,44>",(shuper)); Inst8++; } } catch(e) {}
  Inheriter.prototype = shuper.prototype;
try { if (Inst5 <= 1000 && typeof (Inheriter.prototype) != "undefined") {_RecordType("<1813,1832,44>",(Inheriter.prototype)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Inheriter) != "undefined") {_RecordType("<1813,1822,44>",(Inheriter)); Inst6++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (Inheriter) != "undefined") {_RecordType("<1876,1885,45>",(Inheriter)); Inst10++; } } catch(e) {}
  this.prototype = new Inheriter();
try { if (Inst9 <= 1000 && typeof (this.prototype) != "undefined") {_RecordType("<1855,1869,45>",(this.prototype)); Inst9++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (shuper) != "undefined") {_RecordType("<1915,1921,46>",(shuper)); Inst12++; } } catch(e) {}
  this.superConstructor = shuper;
try { if (Inst11 <= 1000 && typeof (this.superConstructor) != "undefined") {_RecordType("<1891,1912,46>",(this.superConstructor)); Inst11++; } } catch(e) {}
};
try { if (Inst0 <= 1000 && typeof (Object.prototype.inheritsFrom) != "undefined") {_RecordType("<1723,1752,39>",(Object.prototype.inheritsFrom)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<1723,1739,39>",(Object.prototype)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1723,1729,39>",(Object)); Inst2++; } } catch(e) {}

try { if (Inst13 <= 1000 && typeof (OrderedCollection) != "undefined") {_RecordType("<1936,1953,49>",(OrderedCollection)); Inst13++; } } catch(e) {}
function OrderedCollection() {
try { if (Inst15 <= 1000 && typeof (Array) != "undefined") {_RecordType("<1976,1981,50>",(Array)); Inst15++; } } catch(e) {}
  this.elms = new Array();
try { if (Inst14 <= 1000 && typeof (this.elms) != "undefined") {_RecordType("<1960,1969,50>",(this.elms)); Inst14++; } } catch(e) {}
}

OrderedCollection.prototype.add = function (elm) {
try { if (Inst19 <= 1000 && typeof (elm) != "undefined") {_RecordType("<2032,2035,53>",(elm)); Inst19++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (this.elms.push) != "undefined") {_RecordType("<2041,2055,54>",(this.elms.push)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (this.elms) != "undefined") {_RecordType("<2041,2050,54>",(this.elms)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (elm) != "undefined") {_RecordType("<2056,2059,54>",(elm)); Inst22++; } } catch(e) {}
  this.elms.push(elm);
};
try { if (Inst16 <= 1000 && typeof (OrderedCollection.prototype.add) != "undefined") {_RecordType("<1988,2019,53>",(OrderedCollection.prototype.add)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (OrderedCollection.prototype) != "undefined") {_RecordType("<1988,2015,53>",(OrderedCollection.prototype)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (OrderedCollection) != "undefined") {_RecordType("<1988,2005,53>",(OrderedCollection)); Inst18++; } } catch(e) {}

OrderedCollection.prototype.at = function (index) {
try { if (Inst26 <= 1000 && typeof (index) != "undefined") {_RecordType("<2109,2114,57>",(index)); Inst26++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (this.elms[index]) != "undefined") {_RecordType("<2127,2143,58>",(this.elms[index])); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (this.elms) != "undefined") {_RecordType("<2127,2136,58>",(this.elms)); Inst28++; } } catch(e) {}
  return this.elms[index];
};
try { if (Inst23 <= 1000 && typeof (OrderedCollection.prototype.at) != "undefined") {_RecordType("<2066,2096,57>",(OrderedCollection.prototype.at)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (OrderedCollection.prototype) != "undefined") {_RecordType("<2066,2093,57>",(OrderedCollection.prototype)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (OrderedCollection) != "undefined") {_RecordType("<2066,2083,57>",(OrderedCollection)); Inst25++; } } catch(e) {}

OrderedCollection.prototype.size = function () {
try { if (Inst32 <= 1000 && typeof (this.elms.length) != "undefined") {_RecordType("<2207,2223,62>",(this.elms.length)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (this.elms) != "undefined") {_RecordType("<2207,2216,62>",(this.elms)); Inst33++; } } catch(e) {}
  return this.elms.length;
};
try { if (Inst29 <= 1000 && typeof (OrderedCollection.prototype.size) != "undefined") {_RecordType("<2149,2181,61>",(OrderedCollection.prototype.size)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (OrderedCollection.prototype) != "undefined") {_RecordType("<2149,2176,61>",(OrderedCollection.prototype)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (OrderedCollection) != "undefined") {_RecordType("<2149,2166,61>",(OrderedCollection)); Inst31++; } } catch(e) {}

OrderedCollection.prototype.removeFirst = function () {
try { if (Inst37 <= 1000 && typeof (this.elms.pop) != "undefined") {_RecordType("<2294,2307,66>",(this.elms.pop)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (this.elms) != "undefined") {_RecordType("<2294,2303,66>",(this.elms)); Inst38++; } } catch(e) {}
  return this.elms.pop();
};
try { if (Inst34 <= 1000 && typeof (OrderedCollection.prototype.removeFirst) != "undefined") {_RecordType("<2229,2268,65>",(OrderedCollection.prototype.removeFirst)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (OrderedCollection.prototype) != "undefined") {_RecordType("<2229,2256,65>",(OrderedCollection.prototype)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (OrderedCollection) != "undefined") {_RecordType("<2229,2246,65>",(OrderedCollection)); Inst36++; } } catch(e) {}

OrderedCollection.prototype.remove = function (elm) {
try { if (Inst42 <= 1000 && typeof (elm) != "undefined") {_RecordType("<2362,2365,69>",(elm)); Inst42++; } } catch(e) {}
  var index = 0,
      skipped = 0;
try { if (Inst43 <= 1000 && typeof (index) != "undefined") {_RecordType("<2375,2380,70>",(index)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (skipped) != "undefined") {_RecordType("<2392,2399,71>",(skipped)); Inst44++; } } catch(e) {}

  for (var i = 0; i < this.elms.length; i++) {
try { if (Inst45 <= 1000 && typeof (i) != "undefined") {_RecordType("<2417,2418,73>",(i)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (i) != "undefined") {_RecordType("<2424,2425,73>",(i)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (this.elms.length) != "undefined") {_RecordType("<2428,2444,73>",(this.elms.length)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (this.elms) != "undefined") {_RecordType("<2428,2437,73>",(this.elms)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (i) != "undefined") {_RecordType("<2446,2447,73>",(i)); Inst49++; } } catch(e) {}
try { if (Inst51 <= 1000 && typeof (this.elms[i]) != "undefined") {_RecordType("<2469,2481,74>",(this.elms[i])); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (this.elms) != "undefined") {_RecordType("<2469,2478,74>",(this.elms)); Inst52++; } } catch(e) {}
    var value = this.elms[i];
try { if (Inst50 <= 1000 && typeof (value) != "undefined") {_RecordType("<2461,2466,74>",(value)); Inst50++; } } catch(e) {}

try { if (Inst53 <= 1000 && typeof (value) != "undefined") {_RecordType("<2492,2497,76>",(value)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (elm) != "undefined") {_RecordType("<2501,2504,76>",(elm)); Inst54++; } } catch(e) {}
    if (value != elm) {
try { if (Inst57 <= 1000 && typeof (value) != "undefined") {_RecordType("<2533,2538,77>",(value)); Inst57++; } } catch(e) {}
      this.elms[index] = value;
try { if (Inst55 <= 1000 && typeof (this.elms[index]) != "undefined") {_RecordType("<2514,2530,77>",(this.elms[index])); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (this.elms) != "undefined") {_RecordType("<2514,2523,77>",(this.elms)); Inst56++; } } catch(e) {}
try { if (Inst58 <= 1000 && typeof (index) != "undefined") {_RecordType("<2546,2551,78>",(index)); Inst58++; } } catch(e) {}
      index++;
    } else {
try { if (Inst59 <= 1000 && typeof (skipped) != "undefined") {_RecordType("<2574,2581,80>",(skipped)); Inst59++; } } catch(e) {}
      skipped++;
    }
  }

  for (var i = 0; i < skipped; i++) {
try { if (Inst60 <= 1000 && typeof (i) != "undefined") {_RecordType("<2607,2608,84>",(i)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (i) != "undefined") {_RecordType("<2614,2615,84>",(i)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (skipped) != "undefined") {_RecordType("<2618,2625,84>",(skipped)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (i) != "undefined") {_RecordType("<2627,2628,84>",(i)); Inst63++; } } catch(e) {}
try { if (Inst64 <= 1000 && typeof (this.elms.pop) != "undefined") {_RecordType("<2638,2651,85>",(this.elms.pop)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (this.elms) != "undefined") {_RecordType("<2638,2647,85>",(this.elms)); Inst65++; } } catch(e) {}
    this.elms.pop();
  }
};
try { if (Inst39 <= 1000 && typeof (OrderedCollection.prototype.remove) != "undefined") {_RecordType("<2315,2349,69>",(OrderedCollection.prototype.remove)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (OrderedCollection.prototype) != "undefined") {_RecordType("<2315,2342,69>",(OrderedCollection.prototype)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (OrderedCollection) != "undefined") {_RecordType("<2315,2332,69>",(OrderedCollection)); Inst41++; } } catch(e) {}
/* --- *
 * S t r e n g t h
 * --- */

/**
 * Strengths are used to measure the relative importance of constraints.
 * New strengths may be inserted in the strength hierarchy without
 * disrupting current constraints.  Strengths cannot be created outside
 * this class, so pointer comparison can be used for value comparison.
 */


try { if (Inst66 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<3003,3011,100>",(Strength)); Inst66++; } } catch(e) {}
function Strength(strengthValue, name) {
try { if (Inst67 <= 1000 && typeof (strengthValue) != "undefined") {_RecordType("<3012,3025,100>",(strengthValue)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (name) != "undefined") {_RecordType("<3027,3031,100>",(name)); Inst68++; } } catch(e) {}
try { if (Inst70 <= 1000 && typeof (strengthValue) != "undefined") {_RecordType("<3058,3071,101>",(strengthValue)); Inst70++; } } catch(e) {}
  this.strengthValue = strengthValue;
try { if (Inst69 <= 1000 && typeof (this.strengthValue) != "undefined") {_RecordType("<3037,3055,101>",(this.strengthValue)); Inst69++; } } catch(e) {}
try { if (Inst72 <= 1000 && typeof (name) != "undefined") {_RecordType("<3087,3091,102>",(name)); Inst72++; } } catch(e) {}
  this.name = name;
try { if (Inst71 <= 1000 && typeof (this.name) != "undefined") {_RecordType("<3075,3084,102>",(this.name)); Inst71++; } } catch(e) {}
}

Strength.stronger = function (s1, s2) {
try { if (Inst75 <= 1000 && typeof (s1) != "undefined") {_RecordType("<3126,3128,105>",(s1)); Inst75++; } } catch(e) {}try { if (Inst76 <= 1000 && typeof (s2) != "undefined") {_RecordType("<3130,3132,105>",(s2)); Inst76++; } } catch(e) {}
try { if (Inst77 <= 1000 && typeof (s1.strengthValue) != "undefined") {_RecordType("<3145,3161,106>",(s1.strengthValue)); Inst77++; } } catch(e) {}try { if (Inst78 <= 1000 && typeof (s1) != "undefined") {_RecordType("<3145,3147,106>",(s1)); Inst78++; } } catch(e) {}try { if (Inst79 <= 1000 && typeof (s2.strengthValue) != "undefined") {_RecordType("<3164,3180,106>",(s2.strengthValue)); Inst79++; } } catch(e) {}try { if (Inst80 <= 1000 && typeof (s2) != "undefined") {_RecordType("<3164,3166,106>",(s2)); Inst80++; } } catch(e) {}
  return s1.strengthValue < s2.strengthValue;
};
try { if (Inst73 <= 1000 && typeof (Strength.stronger) != "undefined") {_RecordType("<3096,3113,105>",(Strength.stronger)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<3096,3104,105>",(Strength)); Inst74++; } } catch(e) {}

Strength.weaker = function (s1, s2) {
try { if (Inst83 <= 1000 && typeof (s1) != "undefined") {_RecordType("<3214,3216,109>",(s1)); Inst83++; } } catch(e) {}try { if (Inst84 <= 1000 && typeof (s2) != "undefined") {_RecordType("<3218,3220,109>",(s2)); Inst84++; } } catch(e) {}
try { if (Inst85 <= 1000 && typeof (s1.strengthValue) != "undefined") {_RecordType("<3233,3249,110>",(s1.strengthValue)); Inst85++; } } catch(e) {}try { if (Inst86 <= 1000 && typeof (s1) != "undefined") {_RecordType("<3233,3235,110>",(s1)); Inst86++; } } catch(e) {}try { if (Inst87 <= 1000 && typeof (s2.strengthValue) != "undefined") {_RecordType("<3252,3268,110>",(s2.strengthValue)); Inst87++; } } catch(e) {}try { if (Inst88 <= 1000 && typeof (s2) != "undefined") {_RecordType("<3252,3254,110>",(s2)); Inst88++; } } catch(e) {}
  return s1.strengthValue > s2.strengthValue;
};
try { if (Inst81 <= 1000 && typeof (Strength.weaker) != "undefined") {_RecordType("<3186,3201,109>",(Strength.weaker)); Inst81++; } } catch(e) {}try { if (Inst82 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<3186,3194,109>",(Strength)); Inst82++; } } catch(e) {}

Strength.weakestOf = function (s1, s2) {
try { if (Inst91 <= 1000 && typeof (s1) != "undefined") {_RecordType("<3305,3307,113>",(s1)); Inst91++; } } catch(e) {}try { if (Inst92 <= 1000 && typeof (s2) != "undefined") {_RecordType("<3309,3311,113>",(s2)); Inst92++; } } catch(e) {}
try { if (Inst93 <= 1000 && typeof (this.weaker) != "undefined") {_RecordType("<3324,3335,114>",(this.weaker)); Inst93++; } } catch(e) {}try { if (Inst94 <= 1000 && typeof (s1) != "undefined") {_RecordType("<3336,3338,114>",(s1)); Inst94++; } } catch(e) {}try { if (Inst95 <= 1000 && typeof (s2) != "undefined") {_RecordType("<3340,3342,114>",(s2)); Inst95++; } } catch(e) {}try { if (Inst96 <= 1000 && typeof (s1) != "undefined") {_RecordType("<3346,3348,114>",(s1)); Inst96++; } } catch(e) {}try { if (Inst97 <= 1000 && typeof (s2) != "undefined") {_RecordType("<3351,3353,114>",(s2)); Inst97++; } } catch(e) {}
  return this.weaker(s1, s2) ? s1 : s2;
};
try { if (Inst89 <= 1000 && typeof (Strength.weakestOf) != "undefined") {_RecordType("<3274,3292,113>",(Strength.weakestOf)); Inst89++; } } catch(e) {}try { if (Inst90 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<3274,3282,113>",(Strength)); Inst90++; } } catch(e) {}

Strength.strongest = function (s1, s2) {
try { if (Inst100 <= 1000 && typeof (s1) != "undefined") {_RecordType("<3390,3392,117>",(s1)); Inst100++; } } catch(e) {}try { if (Inst101 <= 1000 && typeof (s2) != "undefined") {_RecordType("<3394,3396,117>",(s2)); Inst101++; } } catch(e) {}
try { if (Inst102 <= 1000 && typeof (this.stronger) != "undefined") {_RecordType("<3409,3422,118>",(this.stronger)); Inst102++; } } catch(e) {}try { if (Inst103 <= 1000 && typeof (s1) != "undefined") {_RecordType("<3423,3425,118>",(s1)); Inst103++; } } catch(e) {}try { if (Inst104 <= 1000 && typeof (s2) != "undefined") {_RecordType("<3427,3429,118>",(s2)); Inst104++; } } catch(e) {}try { if (Inst105 <= 1000 && typeof (s1) != "undefined") {_RecordType("<3433,3435,118>",(s1)); Inst105++; } } catch(e) {}try { if (Inst106 <= 1000 && typeof (s2) != "undefined") {_RecordType("<3438,3440,118>",(s2)); Inst106++; } } catch(e) {}
  return this.stronger(s1, s2) ? s1 : s2;
};
try { if (Inst98 <= 1000 && typeof (Strength.strongest) != "undefined") {_RecordType("<3359,3377,117>",(Strength.strongest)); Inst98++; } } catch(e) {}try { if (Inst99 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<3359,3367,117>",(Strength)); Inst99++; } } catch(e) {}

Strength.prototype.nextWeaker = function () {
try { if (Inst110 <= 1000 && typeof (this.strengthValue) != "undefined") {_RecordType("<3502,3520,122>",(this.strengthValue)); Inst110++; } } catch(e) {}
  switch (this.strengthValue) {
    case 0:
try { if (Inst111 <= 1000 && typeof (Strength.WEAKEST) != "undefined") {_RecordType("<3549,3565,124>",(Strength.WEAKEST)); Inst111++; } } catch(e) {}try { if (Inst112 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<3549,3557,124>",(Strength)); Inst112++; } } catch(e) {}
      return Strength.WEAKEST;

    case 1:
try { if (Inst113 <= 1000 && typeof (Strength.WEAK_DEFAULT) != "undefined") {_RecordType("<3593,3614,127>",(Strength.WEAK_DEFAULT)); Inst113++; } } catch(e) {}try { if (Inst114 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<3593,3601,127>",(Strength)); Inst114++; } } catch(e) {}
      return Strength.WEAK_DEFAULT;

    case 2:
try { if (Inst115 <= 1000 && typeof (Strength.NORMAL) != "undefined") {_RecordType("<3642,3657,130>",(Strength.NORMAL)); Inst115++; } } catch(e) {}try { if (Inst116 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<3642,3650,130>",(Strength)); Inst116++; } } catch(e) {}
      return Strength.NORMAL;

    case 3:
try { if (Inst117 <= 1000 && typeof (Strength.STRONG_DEFAULT) != "undefined") {_RecordType("<3685,3708,133>",(Strength.STRONG_DEFAULT)); Inst117++; } } catch(e) {}try { if (Inst118 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<3685,3693,133>",(Strength)); Inst118++; } } catch(e) {}
      return Strength.STRONG_DEFAULT;

    case 4:
try { if (Inst119 <= 1000 && typeof (Strength.PREFERRED) != "undefined") {_RecordType("<3736,3754,136>",(Strength.PREFERRED)); Inst119++; } } catch(e) {}try { if (Inst120 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<3736,3744,136>",(Strength)); Inst120++; } } catch(e) {}
      return Strength.PREFERRED;

    case 5:
try { if (Inst121 <= 1000 && typeof (Strength.REQUIRED) != "undefined") {_RecordType("<3782,3799,139>",(Strength.REQUIRED)); Inst121++; } } catch(e) {}try { if (Inst122 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<3782,3790,139>",(Strength)); Inst122++; } } catch(e) {}
      return Strength.REQUIRED;
  }
}; // Strength constants.
try { if (Inst107 <= 1000 && typeof (Strength.prototype.nextWeaker) != "undefined") {_RecordType("<3446,3475,121>",(Strength.prototype.nextWeaker)); Inst107++; } } catch(e) {}try { if (Inst108 <= 1000 && typeof (Strength.prototype) != "undefined") {_RecordType("<3446,3464,121>",(Strength.prototype)); Inst108++; } } catch(e) {}try { if (Inst109 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<3446,3454,121>",(Strength)); Inst109++; } } catch(e) {}


try { if (Inst125 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<3857,3865,144>",(Strength)); Inst125++; } } catch(e) {}
Strength.REQUIRED = new Strength(0, "required");
try { if (Inst123 <= 1000 && typeof (Strength.REQUIRED) != "undefined") {_RecordType("<3833,3850,144>",(Strength.REQUIRED)); Inst123++; } } catch(e) {}try { if (Inst124 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<3833,3841,144>",(Strength)); Inst124++; } } catch(e) {}
try { if (Inst128 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<3913,3921,145>",(Strength)); Inst128++; } } catch(e) {}
Strength.STONG_PREFERRED = new Strength(1, "strongPreferred");
try { if (Inst126 <= 1000 && typeof (Strength.STONG_PREFERRED) != "undefined") {_RecordType("<3882,3906,145>",(Strength.STONG_PREFERRED)); Inst126++; } } catch(e) {}try { if (Inst127 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<3882,3890,145>",(Strength)); Inst127++; } } catch(e) {}
try { if (Inst131 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<3970,3978,146>",(Strength)); Inst131++; } } catch(e) {}
Strength.PREFERRED = new Strength(2, "preferred");
try { if (Inst129 <= 1000 && typeof (Strength.PREFERRED) != "undefined") {_RecordType("<3945,3963,146>",(Strength.PREFERRED)); Inst129++; } } catch(e) {}try { if (Inst130 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<3945,3953,146>",(Strength)); Inst130++; } } catch(e) {}
try { if (Inst134 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<4026,4034,147>",(Strength)); Inst134++; } } catch(e) {}
Strength.STRONG_DEFAULT = new Strength(3, "strongDefault");
try { if (Inst132 <= 1000 && typeof (Strength.STRONG_DEFAULT) != "undefined") {_RecordType("<3996,4019,147>",(Strength.STRONG_DEFAULT)); Inst132++; } } catch(e) {}try { if (Inst133 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<3996,4004,147>",(Strength)); Inst133++; } } catch(e) {}
try { if (Inst137 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<4078,4086,148>",(Strength)); Inst137++; } } catch(e) {}
Strength.NORMAL = new Strength(4, "normal");
try { if (Inst135 <= 1000 && typeof (Strength.NORMAL) != "undefined") {_RecordType("<4056,4071,148>",(Strength.NORMAL)); Inst135++; } } catch(e) {}try { if (Inst136 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<4056,4064,148>",(Strength)); Inst136++; } } catch(e) {}
try { if (Inst140 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<4129,4137,149>",(Strength)); Inst140++; } } catch(e) {}
Strength.WEAK_DEFAULT = new Strength(5, "weakDefault");
try { if (Inst138 <= 1000 && typeof (Strength.WEAK_DEFAULT) != "undefined") {_RecordType("<4101,4122,149>",(Strength.WEAK_DEFAULT)); Inst138++; } } catch(e) {}try { if (Inst139 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<4101,4109,149>",(Strength)); Inst139++; } } catch(e) {}
try { if (Inst143 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<4180,4188,150>",(Strength)); Inst143++; } } catch(e) {}
Strength.WEAKEST = new Strength(6, "weakest");
try { if (Inst141 <= 1000 && typeof (Strength.WEAKEST) != "undefined") {_RecordType("<4157,4173,150>",(Strength.WEAKEST)); Inst141++; } } catch(e) {}try { if (Inst142 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<4157,4165,150>",(Strength)); Inst142++; } } catch(e) {}
/* --- *
 * C o n s t r a i n t
 * --- */

/**
 * An abstract class representing a system-maintainable relationship
 * (or "constraint") between a set of variables. A constraint supplies
 * a strength instance variable; concrete subclasses provide a means
 * of storing the constrained variables and other information required
 * to represent a constraint.
 */

try { if (Inst144 <= 1000 && typeof (Constraint) != "undefined") {_RecordType("<4575,4585,163>",(Constraint)); Inst144++; } } catch(e) {}
function Constraint(strength) {
try { if (Inst145 <= 1000 && typeof (strength) != "undefined") {_RecordType("<4586,4594,163>",(strength)); Inst145++; } } catch(e) {}
try { if (Inst147 <= 1000 && typeof (strength) != "undefined") {_RecordType("<4616,4624,164>",(strength)); Inst147++; } } catch(e) {}
  this.strength = strength;
try { if (Inst146 <= 1000 && typeof (this.strength) != "undefined") {_RecordType("<4600,4613,164>",(this.strength)); Inst146++; } } catch(e) {}
}
/**
 * Activate this constraint and attempt to satisfy it.
 */


Constraint.prototype.addConstraint = function () {
try { if (Inst151 <= 1000 && typeof (this.addToGraph) != "undefined") {_RecordType("<4746,4761,172>",(this.addToGraph)); Inst151++; } } catch(e) {}
  this.addToGraph();
try { if (Inst152 <= 1000 && typeof (planner.incrementalAdd) != "undefined") {_RecordType("<4767,4789,173>",(planner.incrementalAdd)); Inst152++; } } catch(e) {}try { if (Inst153 <= 1000 && typeof (planner) != "undefined") {_RecordType("<4767,4774,173>",(planner)); Inst153++; } } catch(e) {}
  planner.incrementalAdd(this);
};
try { if (Inst148 <= 1000 && typeof (Constraint.prototype.addConstraint) != "undefined") {_RecordType("<4693,4727,171>",(Constraint.prototype.addConstraint)); Inst148++; } } catch(e) {}try { if (Inst149 <= 1000 && typeof (Constraint.prototype) != "undefined") {_RecordType("<4693,4713,171>",(Constraint.prototype)); Inst149++; } } catch(e) {}try { if (Inst150 <= 1000 && typeof (Constraint) != "undefined") {_RecordType("<4693,4703,171>",(Constraint)); Inst150++; } } catch(e) {}
/**
 * Attempt to find a way to enforce this constraint. If successful,
 * record the solution, perhaps modifying the current dataflow
 * graph. Answer the constraint that this constraint overrides, if
 * there is one, or nil, if there isn't.
 * Assume: I am not already satisfied.
 */


Constraint.prototype.satisfy = function (mark) {
try { if (Inst157 <= 1000 && typeof (mark) != "undefined") {_RecordType("<5129,5133,184>",(mark)); Inst157++; } } catch(e) {}
try { if (Inst158 <= 1000 && typeof (this.chooseMethod) != "undefined") {_RecordType("<5139,5156,185>",(this.chooseMethod)); Inst158++; } } catch(e) {}try { if (Inst159 <= 1000 && typeof (mark) != "undefined") {_RecordType("<5157,5161,185>",(mark)); Inst159++; } } catch(e) {}
  this.chooseMethod(mark);

try { if (Inst160 <= 1000 && typeof (this.isSatisfied) != "undefined") {_RecordType("<5172,5188,187>",(this.isSatisfied)); Inst160++; } } catch(e) {}
  if (!this.isSatisfied()) {
try { if (Inst161 <= 1000 && typeof (this.strength) != "undefined") {_RecordType("<5202,5215,188>",(this.strength)); Inst161++; } } catch(e) {}try { if (Inst162 <= 1000 && typeof (Strength.REQUIRED) != "undefined") {_RecordType("<5219,5236,188>",(Strength.REQUIRED)); Inst162++; } } catch(e) {}try { if (Inst163 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<5219,5227,188>",(Strength)); Inst163++; } } catch(e) {}
    if (this.strength == Strength.REQUIRED) {
try { if (Inst164 <= 1000 && typeof (alert) != "undefined") {_RecordType("<5246,5251,189>",(alert)); Inst164++; } } catch(e) {}
      alert("Could not satisfy a required constraint!");
    }

    return null;
  }

try { if (Inst165 <= 1000 && typeof (this.markInputs) != "undefined") {_RecordType("<5328,5343,195>",(this.markInputs)); Inst165++; } } catch(e) {}try { if (Inst166 <= 1000 && typeof (mark) != "undefined") {_RecordType("<5344,5348,195>",(mark)); Inst166++; } } catch(e) {}
  this.markInputs(mark);
try { if (Inst168 <= 1000 && typeof (this.output) != "undefined") {_RecordType("<5363,5374,196>",(this.output)); Inst168++; } } catch(e) {}
  var out = this.output();
try { if (Inst167 <= 1000 && typeof (out) != "undefined") {_RecordType("<5357,5360,196>",(out)); Inst167++; } } catch(e) {}
try { if (Inst170 <= 1000 && typeof (out.determinedBy) != "undefined") {_RecordType("<5397,5413,197>",(out.determinedBy)); Inst170++; } } catch(e) {}try { if (Inst171 <= 1000 && typeof (out) != "undefined") {_RecordType("<5397,5400,197>",(out)); Inst171++; } } catch(e) {}
  var overridden = out.determinedBy;
try { if (Inst169 <= 1000 && typeof (overridden) != "undefined") {_RecordType("<5384,5394,197>",(overridden)); Inst169++; } } catch(e) {}

try { if (Inst172 <= 1000 && typeof (overridden) != "undefined") {_RecordType("<5422,5432,199>",(overridden)); Inst172++; } } catch(e) {}
  if (overridden != null) {
try { if (Inst173 <= 1000 && typeof (overridden.markUnsatisfied) != "undefined") {_RecordType("<5448,5474,200>",(overridden.markUnsatisfied)); Inst173++; } } catch(e) {}try { if (Inst174 <= 1000 && typeof (overridden) != "undefined") {_RecordType("<5448,5458,200>",(overridden)); Inst174++; } } catch(e) {}
    overridden.markUnsatisfied();
  }

  out.determinedBy = this;
try { if (Inst175 <= 1000 && typeof (out.determinedBy) != "undefined") {_RecordType("<5485,5501,203>",(out.determinedBy)); Inst175++; } } catch(e) {}try { if (Inst176 <= 1000 && typeof (out) != "undefined") {_RecordType("<5485,5488,203>",(out)); Inst176++; } } catch(e) {}

try { if (Inst177 <= 1000 && typeof (planner.addPropagate) != "undefined") {_RecordType("<5518,5538,205>",(planner.addPropagate)); Inst177++; } } catch(e) {}try { if (Inst178 <= 1000 && typeof (planner) != "undefined") {_RecordType("<5518,5525,205>",(planner)); Inst178++; } } catch(e) {}try { if (Inst179 <= 1000 && typeof (mark) != "undefined") {_RecordType("<5545,5549,205>",(mark)); Inst179++; } } catch(e) {}
  if (!planner.addPropagate(this, mark)) {
try { if (Inst180 <= 1000 && typeof (alert) != "undefined") {_RecordType("<5558,5563,206>",(alert)); Inst180++; } } catch(e) {}
    alert("Cycle encountered");
  }

try { if (Inst183 <= 1000 && typeof (mark) != "undefined") {_RecordType("<5604,5608,209>",(mark)); Inst183++; } } catch(e) {}
  out.mark = mark;
try { if (Inst181 <= 1000 && typeof (out.mark) != "undefined") {_RecordType("<5593,5601,209>",(out.mark)); Inst181++; } } catch(e) {}try { if (Inst182 <= 1000 && typeof (out) != "undefined") {_RecordType("<5593,5596,209>",(out)); Inst182++; } } catch(e) {}
try { if (Inst184 <= 1000 && typeof (overridden) != "undefined") {_RecordType("<5619,5629,210>",(overridden)); Inst184++; } } catch(e) {}
  return overridden;
};
try { if (Inst154 <= 1000 && typeof (Constraint.prototype.satisfy) != "undefined") {_RecordType("<5088,5116,184>",(Constraint.prototype.satisfy)); Inst154++; } } catch(e) {}try { if (Inst155 <= 1000 && typeof (Constraint.prototype) != "undefined") {_RecordType("<5088,5108,184>",(Constraint.prototype)); Inst155++; } } catch(e) {}try { if (Inst156 <= 1000 && typeof (Constraint) != "undefined") {_RecordType("<5088,5098,184>",(Constraint)); Inst156++; } } catch(e) {}

Constraint.prototype.destroyConstraint = function () {
try { if (Inst188 <= 1000 && typeof (this.isSatisfied) != "undefined") {_RecordType("<5696,5712,214>",(this.isSatisfied)); Inst188++; } } catch(e) {}
  if (this.isSatisfied()) {
try { if (Inst189 <= 1000 && typeof (planner.incrementalRemove) != "undefined") {_RecordType("<5722,5747,215>",(planner.incrementalRemove)); Inst189++; } } catch(e) {}try { if (Inst190 <= 1000 && typeof (planner) != "undefined") {_RecordType("<5722,5729,215>",(planner)); Inst190++; } } catch(e) {}
    planner.incrementalRemove(this);
  } else {
try { if (Inst191 <= 1000 && typeof (this.removeFromGraph) != "undefined") {_RecordType("<5770,5790,217>",(this.removeFromGraph)); Inst191++; } } catch(e) {}
    this.removeFromGraph();
  }
};
try { if (Inst185 <= 1000 && typeof (Constraint.prototype.destroyConstraint) != "undefined") {_RecordType("<5635,5673,213>",(Constraint.prototype.destroyConstraint)); Inst185++; } } catch(e) {}try { if (Inst186 <= 1000 && typeof (Constraint.prototype) != "undefined") {_RecordType("<5635,5655,213>",(Constraint.prototype)); Inst186++; } } catch(e) {}try { if (Inst187 <= 1000 && typeof (Constraint) != "undefined") {_RecordType("<5635,5645,213>",(Constraint)); Inst187++; } } catch(e) {}
/**
 * Normal constraints are not input constraints.  An input constraint
 * is one that depends on external state, such as the mouse, the
 * keybord, a clock, or some arbitraty piece of imperative code.
 */


Constraint.prototype.isInput = function () {
  return false;
};
try { if (Inst192 <= 1000 && typeof (Constraint.prototype.isInput) != "undefined") {_RecordType("<6011,6039,227>",(Constraint.prototype.isInput)); Inst192++; } } catch(e) {}try { if (Inst193 <= 1000 && typeof (Constraint.prototype) != "undefined") {_RecordType("<6011,6031,227>",(Constraint.prototype)); Inst193++; } } catch(e) {}try { if (Inst194 <= 1000 && typeof (Constraint) != "undefined") {_RecordType("<6011,6021,227>",(Constraint)); Inst194++; } } catch(e) {}
/* --- *
 * U n a r y   C o n s t r a i n t
 * --- */

/**
 * Abstract superclass for constraints having a single possible output
 * variable.
 */


try { if (Inst195 <= 1000 && typeof (UnaryConstraint) != "undefined") {_RecordType("<6233,6248,240>",(UnaryConstraint)); Inst195++; } } catch(e) {}
function UnaryConstraint(v, strength) {
try { if (Inst196 <= 1000 && typeof (v) != "undefined") {_RecordType("<6249,6250,240>",(v)); Inst196++; } } catch(e) {}try { if (Inst197 <= 1000 && typeof (strength) != "undefined") {_RecordType("<6252,6260,240>",(strength)); Inst197++; } } catch(e) {}
try { if (Inst198 <= 1000 && typeof (UnaryConstraint.superConstructor.call) != "undefined") {_RecordType("<6266,6303,241>",(UnaryConstraint.superConstructor.call)); Inst198++; } } catch(e) {}try { if (Inst199 <= 1000 && typeof (UnaryConstraint.superConstructor) != "undefined") {_RecordType("<6266,6298,241>",(UnaryConstraint.superConstructor)); Inst199++; } } catch(e) {}try { if (Inst200 <= 1000 && typeof (UnaryConstraint) != "undefined") {_RecordType("<6266,6281,241>",(UnaryConstraint)); Inst200++; } } catch(e) {}try { if (Inst201 <= 1000 && typeof (strength) != "undefined") {_RecordType("<6310,6318,241>",(strength)); Inst201++; } } catch(e) {}
  UnaryConstraint.superConstructor.call(this, strength);
try { if (Inst203 <= 1000 && typeof (v) != "undefined") {_RecordType("<6339,6340,242>",(v)); Inst203++; } } catch(e) {}
  this.myOutput = v;
try { if (Inst202 <= 1000 && typeof (this.myOutput) != "undefined") {_RecordType("<6323,6336,242>",(this.myOutput)); Inst202++; } } catch(e) {}
  this.satisfied = false;
try { if (Inst204 <= 1000 && typeof (this.satisfied) != "undefined") {_RecordType("<6344,6358,243>",(this.satisfied)); Inst204++; } } catch(e) {}
try { if (Inst205 <= 1000 && typeof (this.addConstraint) != "undefined") {_RecordType("<6370,6388,244>",(this.addConstraint)); Inst205++; } } catch(e) {}
  this.addConstraint();
}

try { if (Inst206 <= 1000 && typeof (UnaryConstraint.inheritsFrom) != "undefined") {_RecordType("<6395,6423,247>",(UnaryConstraint.inheritsFrom)); Inst206++; } } catch(e) {}try { if (Inst207 <= 1000 && typeof (UnaryConstraint) != "undefined") {_RecordType("<6395,6410,247>",(UnaryConstraint)); Inst207++; } } catch(e) {}try { if (Inst208 <= 1000 && typeof (Constraint) != "undefined") {_RecordType("<6424,6434,247>",(Constraint)); Inst208++; } } catch(e) {}
UnaryConstraint.inheritsFrom(Constraint);
/**
 * Adds this constraint to the constraint graph
 */

UnaryConstraint.prototype.addToGraph = function () {
try { if (Inst212 <= 1000 && typeof (this.myOutput.addConstraint) != "undefined") {_RecordType("<6549,6576,253>",(this.myOutput.addConstraint)); Inst212++; } } catch(e) {}try { if (Inst213 <= 1000 && typeof (this.myOutput) != "undefined") {_RecordType("<6549,6562,253>",(this.myOutput)); Inst213++; } } catch(e) {}
  this.myOutput.addConstraint(this);
  this.satisfied = false;
try { if (Inst214 <= 1000 && typeof (this.satisfied) != "undefined") {_RecordType("<6586,6600,254>",(this.satisfied)); Inst214++; } } catch(e) {}
};
try { if (Inst209 <= 1000 && typeof (UnaryConstraint.prototype.addToGraph) != "undefined") {_RecordType("<6494,6530,252>",(UnaryConstraint.prototype.addToGraph)); Inst209++; } } catch(e) {}try { if (Inst210 <= 1000 && typeof (UnaryConstraint.prototype) != "undefined") {_RecordType("<6494,6519,252>",(UnaryConstraint.prototype)); Inst210++; } } catch(e) {}try { if (Inst211 <= 1000 && typeof (UnaryConstraint) != "undefined") {_RecordType("<6494,6509,252>",(UnaryConstraint)); Inst211++; } } catch(e) {}
/**
 * Decides if this constraint can be satisfied and records that
 * decision.
 */


UnaryConstraint.prototype.chooseMethod = function (mark) {
try { if (Inst218 <= 1000 && typeof (mark) != "undefined") {_RecordType("<6751,6755,262>",(mark)); Inst218++; } } catch(e) {}
try { if (Inst220 <= 1000 && typeof (this.myOutput.mark) != "undefined") {_RecordType("<6778,6796,263>",(this.myOutput.mark)); Inst220++; } } catch(e) {}try { if (Inst221 <= 1000 && typeof (this.myOutput) != "undefined") {_RecordType("<6778,6791,263>",(this.myOutput)); Inst221++; } } catch(e) {}try { if (Inst222 <= 1000 && typeof (mark) != "undefined") {_RecordType("<6800,6804,263>",(mark)); Inst222++; } } catch(e) {}try { if (Inst223 <= 1000 && typeof (Strength.stronger) != "undefined") {_RecordType("<6808,6825,263>",(Strength.stronger)); Inst223++; } } catch(e) {}try { if (Inst224 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<6808,6816,263>",(Strength)); Inst224++; } } catch(e) {}try { if (Inst225 <= 1000 && typeof (this.strength) != "undefined") {_RecordType("<6826,6839,263>",(this.strength)); Inst225++; } } catch(e) {}try { if (Inst226 <= 1000 && typeof (this.myOutput.walkStrength) != "undefined") {_RecordType("<6841,6867,263>",(this.myOutput.walkStrength)); Inst226++; } } catch(e) {}try { if (Inst227 <= 1000 && typeof (this.myOutput) != "undefined") {_RecordType("<6841,6854,263>",(this.myOutput)); Inst227++; } } catch(e) {}
  this.satisfied = this.myOutput.mark != mark && Strength.stronger(this.strength, this.myOutput.walkStrength);
try { if (Inst219 <= 1000 && typeof (this.satisfied) != "undefined") {_RecordType("<6761,6775,263>",(this.satisfied)); Inst219++; } } catch(e) {}
};
try { if (Inst215 <= 1000 && typeof (UnaryConstraint.prototype.chooseMethod) != "undefined") {_RecordType("<6700,6738,262>",(UnaryConstraint.prototype.chooseMethod)); Inst215++; } } catch(e) {}try { if (Inst216 <= 1000 && typeof (UnaryConstraint.prototype) != "undefined") {_RecordType("<6700,6725,262>",(UnaryConstraint.prototype)); Inst216++; } } catch(e) {}try { if (Inst217 <= 1000 && typeof (UnaryConstraint) != "undefined") {_RecordType("<6700,6715,262>",(UnaryConstraint)); Inst217++; } } catch(e) {}
/**
 * Returns true if this constraint is satisfied in the current solution.
 */


UnaryConstraint.prototype.isSatisfied = function () {
try { if (Inst231 <= 1000 && typeof (this.satisfied) != "undefined") {_RecordType("<7019,7033,271>",(this.satisfied)); Inst231++; } } catch(e) {}
  return this.satisfied;
};
try { if (Inst228 <= 1000 && typeof (UnaryConstraint.prototype.isSatisfied) != "undefined") {_RecordType("<6956,6993,270>",(UnaryConstraint.prototype.isSatisfied)); Inst228++; } } catch(e) {}try { if (Inst229 <= 1000 && typeof (UnaryConstraint.prototype) != "undefined") {_RecordType("<6956,6981,270>",(UnaryConstraint.prototype)); Inst229++; } } catch(e) {}try { if (Inst230 <= 1000 && typeof (UnaryConstraint) != "undefined") {_RecordType("<6956,6971,270>",(UnaryConstraint)); Inst230++; } } catch(e) {}

UnaryConstraint.prototype.markInputs = function (mark) {
try { if (Inst235 <= 1000 && typeof (mark) != "undefined") {_RecordType("<7088,7092,274>",(mark)); Inst235++; } } catch(e) {}
  ;
} // has no inputs

/**
 * Returns the current output variable.
 */
;
try { if (Inst232 <= 1000 && typeof (UnaryConstraint.prototype.markInputs) != "undefined") {_RecordType("<7039,7075,274>",(UnaryConstraint.prototype.markInputs)); Inst232++; } } catch(e) {}try { if (Inst233 <= 1000 && typeof (UnaryConstraint.prototype) != "undefined") {_RecordType("<7039,7064,274>",(UnaryConstraint.prototype)); Inst233++; } } catch(e) {}try { if (Inst234 <= 1000 && typeof (UnaryConstraint) != "undefined") {_RecordType("<7039,7054,274>",(UnaryConstraint)); Inst234++; } } catch(e) {}

UnaryConstraint.prototype.output = function () {
try { if (Inst239 <= 1000 && typeof (this.myOutput) != "undefined") {_RecordType("<7229,7242,284>",(this.myOutput)); Inst239++; } } catch(e) {}
  return this.myOutput;
};
try { if (Inst236 <= 1000 && typeof (UnaryConstraint.prototype.output) != "undefined") {_RecordType("<7171,7203,283>",(UnaryConstraint.prototype.output)); Inst236++; } } catch(e) {}try { if (Inst237 <= 1000 && typeof (UnaryConstraint.prototype) != "undefined") {_RecordType("<7171,7196,283>",(UnaryConstraint.prototype)); Inst237++; } } catch(e) {}try { if (Inst238 <= 1000 && typeof (UnaryConstraint) != "undefined") {_RecordType("<7171,7186,283>",(UnaryConstraint)); Inst238++; } } catch(e) {}
/**
 * Calculate the walkabout strength, the stay flag, and, if it is
 * 'stay', the value for the current output of this constraint. Assume
 * this constraint is satisfied.
 */


UnaryConstraint.prototype.recalculate = function () {
try { if (Inst245 <= 1000 && typeof (this.strength) != "undefined") {_RecordType("<7512,7525,294>",(this.strength)); Inst245++; } } catch(e) {}
  this.myOutput.walkStrength = this.strength;
try { if (Inst243 <= 1000 && typeof (this.myOutput.walkStrength) != "undefined") {_RecordType("<7483,7509,294>",(this.myOutput.walkStrength)); Inst243++; } } catch(e) {}try { if (Inst244 <= 1000 && typeof (this.myOutput) != "undefined") {_RecordType("<7483,7496,294>",(this.myOutput)); Inst244++; } } catch(e) {}
try { if (Inst248 <= 1000 && typeof (this.isInput) != "undefined") {_RecordType("<7551,7563,295>",(this.isInput)); Inst248++; } } catch(e) {}
  this.myOutput.stay = !this.isInput();
try { if (Inst246 <= 1000 && typeof (this.myOutput.stay) != "undefined") {_RecordType("<7529,7547,295>",(this.myOutput.stay)); Inst246++; } } catch(e) {}try { if (Inst247 <= 1000 && typeof (this.myOutput) != "undefined") {_RecordType("<7529,7542,295>",(this.myOutput)); Inst247++; } } catch(e) {}

try { if (Inst249 <= 1000 && typeof (this.myOutput.stay) != "undefined") {_RecordType("<7574,7592,297>",(this.myOutput.stay)); Inst249++; } } catch(e) {}try { if (Inst250 <= 1000 && typeof (this.myOutput) != "undefined") {_RecordType("<7574,7587,297>",(this.myOutput)); Inst250++; } } catch(e) {}
  if (this.myOutput.stay) {
try { if (Inst251 <= 1000 && typeof (this.execute) != "undefined") {_RecordType("<7600,7612,298>",(this.execute)); Inst251++; } } catch(e) {}
    this.execute();
  } // Stay optimization

};
try { if (Inst240 <= 1000 && typeof (UnaryConstraint.prototype.recalculate) != "undefined") {_RecordType("<7427,7464,293>",(UnaryConstraint.prototype.recalculate)); Inst240++; } } catch(e) {}try { if (Inst241 <= 1000 && typeof (UnaryConstraint.prototype) != "undefined") {_RecordType("<7427,7452,293>",(UnaryConstraint.prototype)); Inst241++; } } catch(e) {}try { if (Inst242 <= 1000 && typeof (UnaryConstraint) != "undefined") {_RecordType("<7427,7442,293>",(UnaryConstraint)); Inst242++; } } catch(e) {}
/**
 * Records that this constraint is unsatisfied
 */


UnaryConstraint.prototype.markUnsatisfied = function () {
  this.satisfied = false;
try { if (Inst255 <= 1000 && typeof (this.satisfied) != "undefined") {_RecordType("<7762,7776,308>",(this.satisfied)); Inst255++; } } catch(e) {}
};
try { if (Inst252 <= 1000 && typeof (UnaryConstraint.prototype.markUnsatisfied) != "undefined") {_RecordType("<7702,7743,307>",(UnaryConstraint.prototype.markUnsatisfied)); Inst252++; } } catch(e) {}try { if (Inst253 <= 1000 && typeof (UnaryConstraint.prototype) != "undefined") {_RecordType("<7702,7727,307>",(UnaryConstraint.prototype)); Inst253++; } } catch(e) {}try { if (Inst254 <= 1000 && typeof (UnaryConstraint) != "undefined") {_RecordType("<7702,7717,307>",(UnaryConstraint)); Inst254++; } } catch(e) {}

UnaryConstraint.prototype.inputsKnown = function () {
  return true;
};
try { if (Inst256 <= 1000 && typeof (UnaryConstraint.prototype.inputsKnown) != "undefined") {_RecordType("<7790,7827,311>",(UnaryConstraint.prototype.inputsKnown)); Inst256++; } } catch(e) {}try { if (Inst257 <= 1000 && typeof (UnaryConstraint.prototype) != "undefined") {_RecordType("<7790,7815,311>",(UnaryConstraint.prototype)); Inst257++; } } catch(e) {}try { if (Inst258 <= 1000 && typeof (UnaryConstraint) != "undefined") {_RecordType("<7790,7805,311>",(UnaryConstraint)); Inst258++; } } catch(e) {}

UnaryConstraint.prototype.removeFromGraph = function () {
try { if (Inst262 <= 1000 && typeof (this.myOutput) != "undefined") {_RecordType("<7927,7940,316>",(this.myOutput)); Inst262++; } } catch(e) {}
  if (this.myOutput != null) {
try { if (Inst263 <= 1000 && typeof (this.myOutput.removeConstraint) != "undefined") {_RecordType("<7956,7986,317>",(this.myOutput.removeConstraint)); Inst263++; } } catch(e) {}try { if (Inst264 <= 1000 && typeof (this.myOutput) != "undefined") {_RecordType("<7956,7969,317>",(this.myOutput)); Inst264++; } } catch(e) {}
    this.myOutput.removeConstraint(this);
  }

  this.satisfied = false;
try { if (Inst265 <= 1000 && typeof (this.satisfied) != "undefined") {_RecordType("<8001,8015,320>",(this.satisfied)); Inst265++; } } catch(e) {}
};
try { if (Inst259 <= 1000 && typeof (UnaryConstraint.prototype.removeFromGraph) != "undefined") {_RecordType("<7863,7904,315>",(UnaryConstraint.prototype.removeFromGraph)); Inst259++; } } catch(e) {}try { if (Inst260 <= 1000 && typeof (UnaryConstraint.prototype) != "undefined") {_RecordType("<7863,7888,315>",(UnaryConstraint.prototype)); Inst260++; } } catch(e) {}try { if (Inst261 <= 1000 && typeof (UnaryConstraint) != "undefined") {_RecordType("<7863,7878,315>",(UnaryConstraint)); Inst261++; } } catch(e) {}
/* --- *
 * S t a y   C o n s t r a i n t
 * --- */

/**
 * Variables that should, with some level of preference, stay the same.
 * Planners may exploit the fact that instances, if satisfied, will not
 * change their output during plan execution.  This is called "stay
 * optimization".
 */


try { if (Inst266 <= 1000 && typeof (StayConstraint) != "undefined") {_RecordType("<8330,8344,334>",(StayConstraint)); Inst266++; } } catch(e) {}
function StayConstraint(v, str) {
try { if (Inst267 <= 1000 && typeof (v) != "undefined") {_RecordType("<8345,8346,334>",(v)); Inst267++; } } catch(e) {}try { if (Inst268 <= 1000 && typeof (str) != "undefined") {_RecordType("<8348,8351,334>",(str)); Inst268++; } } catch(e) {}
try { if (Inst269 <= 1000 && typeof (StayConstraint.superConstructor.call) != "undefined") {_RecordType("<8357,8393,335>",(StayConstraint.superConstructor.call)); Inst269++; } } catch(e) {}try { if (Inst270 <= 1000 && typeof (StayConstraint.superConstructor) != "undefined") {_RecordType("<8357,8388,335>",(StayConstraint.superConstructor)); Inst270++; } } catch(e) {}try { if (Inst271 <= 1000 && typeof (StayConstraint) != "undefined") {_RecordType("<8357,8371,335>",(StayConstraint)); Inst271++; } } catch(e) {}try { if (Inst272 <= 1000 && typeof (v) != "undefined") {_RecordType("<8400,8401,335>",(v)); Inst272++; } } catch(e) {}try { if (Inst273 <= 1000 && typeof (str) != "undefined") {_RecordType("<8403,8406,335>",(str)); Inst273++; } } catch(e) {}
  StayConstraint.superConstructor.call(this, v, str);
}

try { if (Inst274 <= 1000 && typeof (StayConstraint.inheritsFrom) != "undefined") {_RecordType("<8412,8439,338>",(StayConstraint.inheritsFrom)); Inst274++; } } catch(e) {}try { if (Inst275 <= 1000 && typeof (StayConstraint) != "undefined") {_RecordType("<8412,8426,338>",(StayConstraint)); Inst275++; } } catch(e) {}try { if (Inst276 <= 1000 && typeof (UnaryConstraint) != "undefined") {_RecordType("<8440,8455,338>",(UnaryConstraint)); Inst276++; } } catch(e) {}
StayConstraint.inheritsFrom(UnaryConstraint);

StayConstraint.prototype.execute = function () {
  ;
} // Stay constraints do nothing

/* --- *
 * E d i t   C o n s t r a i n t
 * --- */

/**
 * A unary input constraint used to mark a variable that the client
 * wishes to change.
 */
;
try { if (Inst277 <= 1000 && typeof (StayConstraint.prototype.execute) != "undefined") {_RecordType("<8459,8491,340>",(StayConstraint.prototype.execute)); Inst277++; } } catch(e) {}try { if (Inst278 <= 1000 && typeof (StayConstraint.prototype) != "undefined") {_RecordType("<8459,8483,340>",(StayConstraint.prototype)); Inst278++; } } catch(e) {}try { if (Inst279 <= 1000 && typeof (StayConstraint) != "undefined") {_RecordType("<8459,8473,340>",(StayConstraint)); Inst279++; } } catch(e) {}

try { if (Inst280 <= 1000 && typeof (EditConstraint) != "undefined") {_RecordType("<8708,8722,354>",(EditConstraint)); Inst280++; } } catch(e) {}
function EditConstraint(v, str) {
try { if (Inst281 <= 1000 && typeof (v) != "undefined") {_RecordType("<8723,8724,354>",(v)); Inst281++; } } catch(e) {}try { if (Inst282 <= 1000 && typeof (str) != "undefined") {_RecordType("<8726,8729,354>",(str)); Inst282++; } } catch(e) {}
try { if (Inst283 <= 1000 && typeof (EditConstraint.superConstructor.call) != "undefined") {_RecordType("<8735,8771,355>",(EditConstraint.superConstructor.call)); Inst283++; } } catch(e) {}try { if (Inst284 <= 1000 && typeof (EditConstraint.superConstructor) != "undefined") {_RecordType("<8735,8766,355>",(EditConstraint.superConstructor)); Inst284++; } } catch(e) {}try { if (Inst285 <= 1000 && typeof (EditConstraint) != "undefined") {_RecordType("<8735,8749,355>",(EditConstraint)); Inst285++; } } catch(e) {}try { if (Inst286 <= 1000 && typeof (v) != "undefined") {_RecordType("<8778,8779,355>",(v)); Inst286++; } } catch(e) {}try { if (Inst287 <= 1000 && typeof (str) != "undefined") {_RecordType("<8781,8784,355>",(str)); Inst287++; } } catch(e) {}
  EditConstraint.superConstructor.call(this, v, str);
}

try { if (Inst288 <= 1000 && typeof (EditConstraint.inheritsFrom) != "undefined") {_RecordType("<8790,8817,358>",(EditConstraint.inheritsFrom)); Inst288++; } } catch(e) {}try { if (Inst289 <= 1000 && typeof (EditConstraint) != "undefined") {_RecordType("<8790,8804,358>",(EditConstraint)); Inst289++; } } catch(e) {}try { if (Inst290 <= 1000 && typeof (UnaryConstraint) != "undefined") {_RecordType("<8818,8833,358>",(UnaryConstraint)); Inst290++; } } catch(e) {}
EditConstraint.inheritsFrom(UnaryConstraint);
/**
 * Edits indicate that a variable is to be changed by imperative code.
 */

EditConstraint.prototype.isInput = function () {
  return true;
};
try { if (Inst291 <= 1000 && typeof (EditConstraint.prototype.isInput) != "undefined") {_RecordType("<8916,8948,363>",(EditConstraint.prototype.isInput)); Inst291++; } } catch(e) {}try { if (Inst292 <= 1000 && typeof (EditConstraint.prototype) != "undefined") {_RecordType("<8916,8940,363>",(EditConstraint.prototype)); Inst292++; } } catch(e) {}try { if (Inst293 <= 1000 && typeof (EditConstraint) != "undefined") {_RecordType("<8916,8930,363>",(EditConstraint)); Inst293++; } } catch(e) {}

EditConstraint.prototype.execute = function () {
  ;
} // Edit constraints do nothing

/* --- *
 * B i n a r y   C o n s t r a i n t
 * --- */
;
try { if (Inst294 <= 1000 && typeof (EditConstraint.prototype.execute) != "undefined") {_RecordType("<8984,9016,367>",(EditConstraint.prototype.execute)); Inst294++; } } catch(e) {}try { if (Inst295 <= 1000 && typeof (EditConstraint.prototype) != "undefined") {_RecordType("<8984,9008,367>",(EditConstraint.prototype)); Inst295++; } } catch(e) {}try { if (Inst296 <= 1000 && typeof (EditConstraint) != "undefined") {_RecordType("<8984,8998,367>",(EditConstraint)); Inst296++; } } catch(e) {}

try { if (Inst298 <= 1000 && typeof (Object) != "undefined") {_RecordType("<9150,9156,376>",(Object)); Inst298++; } } catch(e) {}
var Direction = new Object();
try { if (Inst297 <= 1000 && typeof (Direction) != "undefined") {_RecordType("<9134,9143,376>",(Direction)); Inst297++; } } catch(e) {}
Direction.NONE = 0;
try { if (Inst299 <= 1000 && typeof (Direction.NONE) != "undefined") {_RecordType("<9160,9174,377>",(Direction.NONE)); Inst299++; } } catch(e) {}try { if (Inst300 <= 1000 && typeof (Direction) != "undefined") {_RecordType("<9160,9169,377>",(Direction)); Inst300++; } } catch(e) {}
Direction.FORWARD = 1;
try { if (Inst301 <= 1000 && typeof (Direction.FORWARD) != "undefined") {_RecordType("<9180,9197,378>",(Direction.FORWARD)); Inst301++; } } catch(e) {}try { if (Inst302 <= 1000 && typeof (Direction) != "undefined") {_RecordType("<9180,9189,378>",(Direction)); Inst302++; } } catch(e) {}
Direction.BACKWARD = -1;
try { if (Inst303 <= 1000 && typeof (Direction.BACKWARD) != "undefined") {_RecordType("<9203,9221,379>",(Direction.BACKWARD)); Inst303++; } } catch(e) {}try { if (Inst304 <= 1000 && typeof (Direction) != "undefined") {_RecordType("<9203,9212,379>",(Direction)); Inst304++; } } catch(e) {}
/**
 * Abstract superclass for constraints having two possible output
 * variables.
 */

try { if (Inst305 <= 1000 && typeof (BinaryConstraint) != "undefined") {_RecordType("<9326,9342,385>",(BinaryConstraint)); Inst305++; } } catch(e) {}
function BinaryConstraint(var1, var2, strength) {
try { if (Inst306 <= 1000 && typeof (var1) != "undefined") {_RecordType("<9343,9347,385>",(var1)); Inst306++; } } catch(e) {}try { if (Inst307 <= 1000 && typeof (var2) != "undefined") {_RecordType("<9349,9353,385>",(var2)); Inst307++; } } catch(e) {}try { if (Inst308 <= 1000 && typeof (strength) != "undefined") {_RecordType("<9355,9363,385>",(strength)); Inst308++; } } catch(e) {}
try { if (Inst309 <= 1000 && typeof (BinaryConstraint.superConstructor.call) != "undefined") {_RecordType("<9369,9407,386>",(BinaryConstraint.superConstructor.call)); Inst309++; } } catch(e) {}try { if (Inst310 <= 1000 && typeof (BinaryConstraint.superConstructor) != "undefined") {_RecordType("<9369,9402,386>",(BinaryConstraint.superConstructor)); Inst310++; } } catch(e) {}try { if (Inst311 <= 1000 && typeof (BinaryConstraint) != "undefined") {_RecordType("<9369,9385,386>",(BinaryConstraint)); Inst311++; } } catch(e) {}try { if (Inst312 <= 1000 && typeof (strength) != "undefined") {_RecordType("<9414,9422,386>",(strength)); Inst312++; } } catch(e) {}
  BinaryConstraint.superConstructor.call(this, strength);
try { if (Inst314 <= 1000 && typeof (var1) != "undefined") {_RecordType("<9437,9441,387>",(var1)); Inst314++; } } catch(e) {}
  this.v1 = var1;
try { if (Inst313 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<9427,9434,387>",(this.v1)); Inst313++; } } catch(e) {}
try { if (Inst316 <= 1000 && typeof (var2) != "undefined") {_RecordType("<9455,9459,388>",(var2)); Inst316++; } } catch(e) {}
  this.v2 = var2;
try { if (Inst315 <= 1000 && typeof (this.v2) != "undefined") {_RecordType("<9445,9452,388>",(this.v2)); Inst315++; } } catch(e) {}
try { if (Inst318 <= 1000 && typeof (Direction.NONE) != "undefined") {_RecordType("<9480,9494,389>",(Direction.NONE)); Inst318++; } } catch(e) {}try { if (Inst319 <= 1000 && typeof (Direction) != "undefined") {_RecordType("<9480,9489,389>",(Direction)); Inst319++; } } catch(e) {}
  this.direction = Direction.NONE;
try { if (Inst317 <= 1000 && typeof (this.direction) != "undefined") {_RecordType("<9463,9477,389>",(this.direction)); Inst317++; } } catch(e) {}
try { if (Inst320 <= 1000 && typeof (this.addConstraint) != "undefined") {_RecordType("<9498,9516,390>",(this.addConstraint)); Inst320++; } } catch(e) {}
  this.addConstraint();
}

try { if (Inst321 <= 1000 && typeof (BinaryConstraint.inheritsFrom) != "undefined") {_RecordType("<9523,9552,393>",(BinaryConstraint.inheritsFrom)); Inst321++; } } catch(e) {}try { if (Inst322 <= 1000 && typeof (BinaryConstraint) != "undefined") {_RecordType("<9523,9539,393>",(BinaryConstraint)); Inst322++; } } catch(e) {}try { if (Inst323 <= 1000 && typeof (Constraint) != "undefined") {_RecordType("<9553,9563,393>",(Constraint)); Inst323++; } } catch(e) {}
BinaryConstraint.inheritsFrom(Constraint);
/**
 * Decides if this constraint can be satisfied and which way it
 * should flow based on the relative strength of the variables related,
 * and record that decision.
 */

BinaryConstraint.prototype.chooseMethod = function (mark) {
try { if (Inst327 <= 1000 && typeof (mark) != "undefined") {_RecordType("<9792,9796,400>",(mark)); Inst327++; } } catch(e) {}
try { if (Inst328 <= 1000 && typeof (this.v1.mark) != "undefined") {_RecordType("<9806,9818,401>",(this.v1.mark)); Inst328++; } } catch(e) {}try { if (Inst329 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<9806,9813,401>",(this.v1)); Inst329++; } } catch(e) {}try { if (Inst330 <= 1000 && typeof (mark) != "undefined") {_RecordType("<9822,9826,401>",(mark)); Inst330++; } } catch(e) {}
  if (this.v1.mark == mark) {
try { if (Inst332 <= 1000 && typeof (this.v2.mark) != "undefined") {_RecordType("<9851,9863,402>",(this.v2.mark)); Inst332++; } } catch(e) {}try { if (Inst333 <= 1000 && typeof (this.v2) != "undefined") {_RecordType("<9851,9858,402>",(this.v2)); Inst333++; } } catch(e) {}try { if (Inst334 <= 1000 && typeof (mark) != "undefined") {_RecordType("<9867,9871,402>",(mark)); Inst334++; } } catch(e) {}try { if (Inst335 <= 1000 && typeof (Strength.stronger) != "undefined") {_RecordType("<9875,9892,402>",(Strength.stronger)); Inst335++; } } catch(e) {}try { if (Inst336 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<9875,9883,402>",(Strength)); Inst336++; } } catch(e) {}try { if (Inst337 <= 1000 && typeof (this.strength) != "undefined") {_RecordType("<9893,9906,402>",(this.strength)); Inst337++; } } catch(e) {}try { if (Inst338 <= 1000 && typeof (this.v2.walkStrength) != "undefined") {_RecordType("<9908,9928,402>",(this.v2.walkStrength)); Inst338++; } } catch(e) {}try { if (Inst339 <= 1000 && typeof (this.v2) != "undefined") {_RecordType("<9908,9915,402>",(this.v2)); Inst339++; } } catch(e) {}try { if (Inst340 <= 1000 && typeof (Direction.FORWARD) != "undefined") {_RecordType("<9932,9949,402>",(Direction.FORWARD)); Inst340++; } } catch(e) {}try { if (Inst341 <= 1000 && typeof (Direction) != "undefined") {_RecordType("<9932,9941,402>",(Direction)); Inst341++; } } catch(e) {}try { if (Inst342 <= 1000 && typeof (Direction.NONE) != "undefined") {_RecordType("<9952,9966,402>",(Direction.NONE)); Inst342++; } } catch(e) {}try { if (Inst343 <= 1000 && typeof (Direction) != "undefined") {_RecordType("<9952,9961,402>",(Direction)); Inst343++; } } catch(e) {}
    this.direction = this.v2.mark != mark && Strength.stronger(this.strength, this.v2.walkStrength) ? Direction.FORWARD : Direction.NONE;
try { if (Inst331 <= 1000 && typeof (this.direction) != "undefined") {_RecordType("<9834,9848,402>",(this.direction)); Inst331++; } } catch(e) {}
  }

try { if (Inst344 <= 1000 && typeof (this.v2.mark) != "undefined") {_RecordType("<9979,9991,405>",(this.v2.mark)); Inst344++; } } catch(e) {}try { if (Inst345 <= 1000 && typeof (this.v2) != "undefined") {_RecordType("<9979,9986,405>",(this.v2)); Inst345++; } } catch(e) {}try { if (Inst346 <= 1000 && typeof (mark) != "undefined") {_RecordType("<9995,9999,405>",(mark)); Inst346++; } } catch(e) {}
  if (this.v2.mark == mark) {
try { if (Inst348 <= 1000 && typeof (this.v1.mark) != "undefined") {_RecordType("<10024,10036,406>",(this.v1.mark)); Inst348++; } } catch(e) {}try { if (Inst349 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<10024,10031,406>",(this.v1)); Inst349++; } } catch(e) {}try { if (Inst350 <= 1000 && typeof (mark) != "undefined") {_RecordType("<10040,10044,406>",(mark)); Inst350++; } } catch(e) {}try { if (Inst351 <= 1000 && typeof (Strength.stronger) != "undefined") {_RecordType("<10048,10065,406>",(Strength.stronger)); Inst351++; } } catch(e) {}try { if (Inst352 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<10048,10056,406>",(Strength)); Inst352++; } } catch(e) {}try { if (Inst353 <= 1000 && typeof (this.strength) != "undefined") {_RecordType("<10066,10079,406>",(this.strength)); Inst353++; } } catch(e) {}try { if (Inst354 <= 1000 && typeof (this.v1.walkStrength) != "undefined") {_RecordType("<10081,10101,406>",(this.v1.walkStrength)); Inst354++; } } catch(e) {}try { if (Inst355 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<10081,10088,406>",(this.v1)); Inst355++; } } catch(e) {}try { if (Inst356 <= 1000 && typeof (Direction.BACKWARD) != "undefined") {_RecordType("<10105,10123,406>",(Direction.BACKWARD)); Inst356++; } } catch(e) {}try { if (Inst357 <= 1000 && typeof (Direction) != "undefined") {_RecordType("<10105,10114,406>",(Direction)); Inst357++; } } catch(e) {}try { if (Inst358 <= 1000 && typeof (Direction.NONE) != "undefined") {_RecordType("<10126,10140,406>",(Direction.NONE)); Inst358++; } } catch(e) {}try { if (Inst359 <= 1000 && typeof (Direction) != "undefined") {_RecordType("<10126,10135,406>",(Direction)); Inst359++; } } catch(e) {}
    this.direction = this.v1.mark != mark && Strength.stronger(this.strength, this.v1.walkStrength) ? Direction.BACKWARD : Direction.NONE;
try { if (Inst347 <= 1000 && typeof (this.direction) != "undefined") {_RecordType("<10007,10021,406>",(this.direction)); Inst347++; } } catch(e) {}
  }

try { if (Inst360 <= 1000 && typeof (Strength.weaker) != "undefined") {_RecordType("<10153,10168,409>",(Strength.weaker)); Inst360++; } } catch(e) {}try { if (Inst361 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<10153,10161,409>",(Strength)); Inst361++; } } catch(e) {}try { if (Inst362 <= 1000 && typeof (this.v1.walkStrength) != "undefined") {_RecordType("<10169,10189,409>",(this.v1.walkStrength)); Inst362++; } } catch(e) {}try { if (Inst363 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<10169,10176,409>",(this.v1)); Inst363++; } } catch(e) {}try { if (Inst364 <= 1000 && typeof (this.v2.walkStrength) != "undefined") {_RecordType("<10191,10211,409>",(this.v2.walkStrength)); Inst364++; } } catch(e) {}try { if (Inst365 <= 1000 && typeof (this.v2) != "undefined") {_RecordType("<10191,10198,409>",(this.v2)); Inst365++; } } catch(e) {}
  if (Strength.weaker(this.v1.walkStrength, this.v2.walkStrength)) {
try { if (Inst367 <= 1000 && typeof (Strength.stronger) != "undefined") {_RecordType("<10237,10254,410>",(Strength.stronger)); Inst367++; } } catch(e) {}try { if (Inst368 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<10237,10245,410>",(Strength)); Inst368++; } } catch(e) {}try { if (Inst369 <= 1000 && typeof (this.strength) != "undefined") {_RecordType("<10255,10268,410>",(this.strength)); Inst369++; } } catch(e) {}try { if (Inst370 <= 1000 && typeof (this.v1.walkStrength) != "undefined") {_RecordType("<10270,10290,410>",(this.v1.walkStrength)); Inst370++; } } catch(e) {}try { if (Inst371 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<10270,10277,410>",(this.v1)); Inst371++; } } catch(e) {}try { if (Inst372 <= 1000 && typeof (Direction.BACKWARD) != "undefined") {_RecordType("<10294,10312,410>",(Direction.BACKWARD)); Inst372++; } } catch(e) {}try { if (Inst373 <= 1000 && typeof (Direction) != "undefined") {_RecordType("<10294,10303,410>",(Direction)); Inst373++; } } catch(e) {}try { if (Inst374 <= 1000 && typeof (Direction.NONE) != "undefined") {_RecordType("<10315,10329,410>",(Direction.NONE)); Inst374++; } } catch(e) {}try { if (Inst375 <= 1000 && typeof (Direction) != "undefined") {_RecordType("<10315,10324,410>",(Direction)); Inst375++; } } catch(e) {}
    this.direction = Strength.stronger(this.strength, this.v1.walkStrength) ? Direction.BACKWARD : Direction.NONE;
try { if (Inst366 <= 1000 && typeof (this.direction) != "undefined") {_RecordType("<10220,10234,410>",(this.direction)); Inst366++; } } catch(e) {}
  } else {
try { if (Inst377 <= 1000 && typeof (Strength.stronger) != "undefined") {_RecordType("<10363,10380,412>",(Strength.stronger)); Inst377++; } } catch(e) {}try { if (Inst378 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<10363,10371,412>",(Strength)); Inst378++; } } catch(e) {}try { if (Inst379 <= 1000 && typeof (this.strength) != "undefined") {_RecordType("<10381,10394,412>",(this.strength)); Inst379++; } } catch(e) {}try { if (Inst380 <= 1000 && typeof (this.v2.walkStrength) != "undefined") {_RecordType("<10396,10416,412>",(this.v2.walkStrength)); Inst380++; } } catch(e) {}try { if (Inst381 <= 1000 && typeof (this.v2) != "undefined") {_RecordType("<10396,10403,412>",(this.v2)); Inst381++; } } catch(e) {}try { if (Inst382 <= 1000 && typeof (Direction.FORWARD) != "undefined") {_RecordType("<10420,10437,412>",(Direction.FORWARD)); Inst382++; } } catch(e) {}try { if (Inst383 <= 1000 && typeof (Direction) != "undefined") {_RecordType("<10420,10429,412>",(Direction)); Inst383++; } } catch(e) {}try { if (Inst384 <= 1000 && typeof (Direction.BACKWARD) != "undefined") {_RecordType("<10440,10458,412>",(Direction.BACKWARD)); Inst384++; } } catch(e) {}try { if (Inst385 <= 1000 && typeof (Direction) != "undefined") {_RecordType("<10440,10449,412>",(Direction)); Inst385++; } } catch(e) {}
    this.direction = Strength.stronger(this.strength, this.v2.walkStrength) ? Direction.FORWARD : Direction.BACKWARD;
try { if (Inst376 <= 1000 && typeof (this.direction) != "undefined") {_RecordType("<10346,10360,412>",(this.direction)); Inst376++; } } catch(e) {}
  }
};
try { if (Inst324 <= 1000 && typeof (BinaryConstraint.prototype.chooseMethod) != "undefined") {_RecordType("<9740,9779,400>",(BinaryConstraint.prototype.chooseMethod)); Inst324++; } } catch(e) {}try { if (Inst325 <= 1000 && typeof (BinaryConstraint.prototype) != "undefined") {_RecordType("<9740,9766,400>",(BinaryConstraint.prototype)); Inst325++; } } catch(e) {}try { if (Inst326 <= 1000 && typeof (BinaryConstraint) != "undefined") {_RecordType("<9740,9756,400>",(BinaryConstraint)); Inst326++; } } catch(e) {}
/**
 * Add this constraint to the constraint graph
 */


BinaryConstraint.prototype.addToGraph = function () {
try { if (Inst389 <= 1000 && typeof (this.v1.addConstraint) != "undefined") {_RecordType("<10580,10601,421>",(this.v1.addConstraint)); Inst389++; } } catch(e) {}try { if (Inst390 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<10580,10587,421>",(this.v1)); Inst390++; } } catch(e) {}
  this.v1.addConstraint(this);
try { if (Inst391 <= 1000 && typeof (this.v2.addConstraint) != "undefined") {_RecordType("<10611,10632,422>",(this.v2.addConstraint)); Inst391++; } } catch(e) {}try { if (Inst392 <= 1000 && typeof (this.v2) != "undefined") {_RecordType("<10611,10618,422>",(this.v2)); Inst392++; } } catch(e) {}
  this.v2.addConstraint(this);
try { if (Inst394 <= 1000 && typeof (Direction.NONE) != "undefined") {_RecordType("<10659,10673,423>",(Direction.NONE)); Inst394++; } } catch(e) {}try { if (Inst395 <= 1000 && typeof (Direction) != "undefined") {_RecordType("<10659,10668,423>",(Direction)); Inst395++; } } catch(e) {}
  this.direction = Direction.NONE;
try { if (Inst393 <= 1000 && typeof (this.direction) != "undefined") {_RecordType("<10642,10656,423>",(this.direction)); Inst393++; } } catch(e) {}
};
try { if (Inst386 <= 1000 && typeof (BinaryConstraint.prototype.addToGraph) != "undefined") {_RecordType("<10524,10561,420>",(BinaryConstraint.prototype.addToGraph)); Inst386++; } } catch(e) {}try { if (Inst387 <= 1000 && typeof (BinaryConstraint.prototype) != "undefined") {_RecordType("<10524,10550,420>",(BinaryConstraint.prototype)); Inst387++; } } catch(e) {}try { if (Inst388 <= 1000 && typeof (BinaryConstraint) != "undefined") {_RecordType("<10524,10540,420>",(BinaryConstraint)); Inst388++; } } catch(e) {}
/**
 * Answer true if this constraint is satisfied in the current solution.
 */


BinaryConstraint.prototype.isSatisfied = function () {
try { if (Inst399 <= 1000 && typeof (this.direction) != "undefined") {_RecordType("<10824,10838,431>",(this.direction)); Inst399++; } } catch(e) {}try { if (Inst400 <= 1000 && typeof (Direction.NONE) != "undefined") {_RecordType("<10842,10856,431>",(Direction.NONE)); Inst400++; } } catch(e) {}try { if (Inst401 <= 1000 && typeof (Direction) != "undefined") {_RecordType("<10842,10851,431>",(Direction)); Inst401++; } } catch(e) {}
  return this.direction != Direction.NONE;
};
try { if (Inst396 <= 1000 && typeof (BinaryConstraint.prototype.isSatisfied) != "undefined") {_RecordType("<10760,10798,430>",(BinaryConstraint.prototype.isSatisfied)); Inst396++; } } catch(e) {}try { if (Inst397 <= 1000 && typeof (BinaryConstraint.prototype) != "undefined") {_RecordType("<10760,10786,430>",(BinaryConstraint.prototype)); Inst397++; } } catch(e) {}try { if (Inst398 <= 1000 && typeof (BinaryConstraint) != "undefined") {_RecordType("<10760,10776,430>",(BinaryConstraint)); Inst398++; } } catch(e) {}
/**
 * Mark the input variable with the given mark.
 */


BinaryConstraint.prototype.markInputs = function (mark) {
try { if (Inst405 <= 1000 && typeof (mark) != "undefined") {_RecordType("<10969,10973,438>",(mark)); Inst405++; } } catch(e) {}
try { if (Inst408 <= 1000 && typeof (mark) != "undefined") {_RecordType("<10999,11003,439>",(mark)); Inst408++; } } catch(e) {}
  this.input().mark = mark;
try { if (Inst406 <= 1000 && typeof (this.input().mark) != "undefined") {_RecordType("<10979,10996,439>",(this.input().mark)); Inst406++; } } catch(e) {}try { if (Inst407 <= 1000 && typeof (this.input) != "undefined") {_RecordType("<10979,10989,439>",(this.input)); Inst407++; } } catch(e) {}
};
try { if (Inst402 <= 1000 && typeof (BinaryConstraint.prototype.markInputs) != "undefined") {_RecordType("<10919,10956,438>",(BinaryConstraint.prototype.markInputs)); Inst402++; } } catch(e) {}try { if (Inst403 <= 1000 && typeof (BinaryConstraint.prototype) != "undefined") {_RecordType("<10919,10945,438>",(BinaryConstraint.prototype)); Inst403++; } } catch(e) {}try { if (Inst404 <= 1000 && typeof (BinaryConstraint) != "undefined") {_RecordType("<10919,10935,438>",(BinaryConstraint)); Inst404++; } } catch(e) {}
/**
 * Returns the current input variable
 */


BinaryConstraint.prototype.input = function () {
try { if (Inst412 <= 1000 && typeof (this.direction) != "undefined") {_RecordType("<11114,11128,447>",(this.direction)); Inst412++; } } catch(e) {}try { if (Inst413 <= 1000 && typeof (Direction.FORWARD) != "undefined") {_RecordType("<11132,11149,447>",(Direction.FORWARD)); Inst413++; } } catch(e) {}try { if (Inst414 <= 1000 && typeof (Direction) != "undefined") {_RecordType("<11132,11141,447>",(Direction)); Inst414++; } } catch(e) {}try { if (Inst415 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<11152,11159,447>",(this.v1)); Inst415++; } } catch(e) {}try { if (Inst416 <= 1000 && typeof (this.v2) != "undefined") {_RecordType("<11162,11169,447>",(this.v2)); Inst416++; } } catch(e) {}
  return this.direction == Direction.FORWARD ? this.v1 : this.v2;
};
try { if (Inst409 <= 1000 && typeof (BinaryConstraint.prototype.input) != "undefined") {_RecordType("<11056,11088,446>",(BinaryConstraint.prototype.input)); Inst409++; } } catch(e) {}try { if (Inst410 <= 1000 && typeof (BinaryConstraint.prototype) != "undefined") {_RecordType("<11056,11082,446>",(BinaryConstraint.prototype)); Inst410++; } } catch(e) {}try { if (Inst411 <= 1000 && typeof (BinaryConstraint) != "undefined") {_RecordType("<11056,11072,446>",(BinaryConstraint)); Inst411++; } } catch(e) {}
/**
 * Returns the current output variable
 */


BinaryConstraint.prototype.output = function () {
try { if (Inst420 <= 1000 && typeof (this.direction) != "undefined") {_RecordType("<11282,11296,455>",(this.direction)); Inst420++; } } catch(e) {}try { if (Inst421 <= 1000 && typeof (Direction.FORWARD) != "undefined") {_RecordType("<11300,11317,455>",(Direction.FORWARD)); Inst421++; } } catch(e) {}try { if (Inst422 <= 1000 && typeof (Direction) != "undefined") {_RecordType("<11300,11309,455>",(Direction)); Inst422++; } } catch(e) {}try { if (Inst423 <= 1000 && typeof (this.v2) != "undefined") {_RecordType("<11320,11327,455>",(this.v2)); Inst423++; } } catch(e) {}try { if (Inst424 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<11330,11337,455>",(this.v1)); Inst424++; } } catch(e) {}
  return this.direction == Direction.FORWARD ? this.v2 : this.v1;
};
try { if (Inst417 <= 1000 && typeof (BinaryConstraint.prototype.output) != "undefined") {_RecordType("<11223,11256,454>",(BinaryConstraint.prototype.output)); Inst417++; } } catch(e) {}try { if (Inst418 <= 1000 && typeof (BinaryConstraint.prototype) != "undefined") {_RecordType("<11223,11249,454>",(BinaryConstraint.prototype)); Inst418++; } } catch(e) {}try { if (Inst419 <= 1000 && typeof (BinaryConstraint) != "undefined") {_RecordType("<11223,11239,454>",(BinaryConstraint)); Inst419++; } } catch(e) {}
/**
 * Calculate the walkabout strength, the stay flag, and, if it is
 * 'stay', the value for the current output of this
 * constraint. Assume this constraint is satisfied.
 */


BinaryConstraint.prototype.recalculate = function () {
try { if (Inst429 <= 1000 && typeof (this.input) != "undefined") {_RecordType("<11589,11599,465>",(this.input)); Inst429++; } } catch(e) {}try { if (Inst431 <= 1000 && typeof (this.output) != "undefined") {_RecordType("<11615,11626,466>",(this.output)); Inst431++; } } catch(e) {}
  var ihn = this.input(),
      out = this.output();
try { if (Inst428 <= 1000 && typeof (ihn) != "undefined") {_RecordType("<11583,11586,465>",(ihn)); Inst428++; } } catch(e) {}try { if (Inst430 <= 1000 && typeof (out) != "undefined") {_RecordType("<11609,11612,466>",(out)); Inst430++; } } catch(e) {}
try { if (Inst434 <= 1000 && typeof (Strength.weakestOf) != "undefined") {_RecordType("<11651,11669,467>",(Strength.weakestOf)); Inst434++; } } catch(e) {}try { if (Inst435 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<11651,11659,467>",(Strength)); Inst435++; } } catch(e) {}try { if (Inst436 <= 1000 && typeof (this.strength) != "undefined") {_RecordType("<11670,11683,467>",(this.strength)); Inst436++; } } catch(e) {}try { if (Inst437 <= 1000 && typeof (ihn.walkStrength) != "undefined") {_RecordType("<11685,11701,467>",(ihn.walkStrength)); Inst437++; } } catch(e) {}try { if (Inst438 <= 1000 && typeof (ihn) != "undefined") {_RecordType("<11685,11688,467>",(ihn)); Inst438++; } } catch(e) {}
  out.walkStrength = Strength.weakestOf(this.strength, ihn.walkStrength);
try { if (Inst432 <= 1000 && typeof (out.walkStrength) != "undefined") {_RecordType("<11632,11648,467>",(out.walkStrength)); Inst432++; } } catch(e) {}try { if (Inst433 <= 1000 && typeof (out) != "undefined") {_RecordType("<11632,11635,467>",(out)); Inst433++; } } catch(e) {}
try { if (Inst441 <= 1000 && typeof (ihn.stay) != "undefined") {_RecordType("<11717,11725,468>",(ihn.stay)); Inst441++; } } catch(e) {}try { if (Inst442 <= 1000 && typeof (ihn) != "undefined") {_RecordType("<11717,11720,468>",(ihn)); Inst442++; } } catch(e) {}
  out.stay = ihn.stay;
try { if (Inst439 <= 1000 && typeof (out.stay) != "undefined") {_RecordType("<11706,11714,468>",(out.stay)); Inst439++; } } catch(e) {}try { if (Inst440 <= 1000 && typeof (out) != "undefined") {_RecordType("<11706,11709,468>",(out)); Inst440++; } } catch(e) {}

try { if (Inst443 <= 1000 && typeof (out.stay) != "undefined") {_RecordType("<11734,11742,470>",(out.stay)); Inst443++; } } catch(e) {}try { if (Inst444 <= 1000 && typeof (out) != "undefined") {_RecordType("<11734,11737,470>",(out)); Inst444++; } } catch(e) {}
  if (out.stay) {
try { if (Inst445 <= 1000 && typeof (this.execute) != "undefined") {_RecordType("<11750,11762,471>",(this.execute)); Inst445++; } } catch(e) {}
    this.execute();
  }
};
try { if (Inst425 <= 1000 && typeof (BinaryConstraint.prototype.recalculate) != "undefined") {_RecordType("<11522,11560,464>",(BinaryConstraint.prototype.recalculate)); Inst425++; } } catch(e) {}try { if (Inst426 <= 1000 && typeof (BinaryConstraint.prototype) != "undefined") {_RecordType("<11522,11548,464>",(BinaryConstraint.prototype)); Inst426++; } } catch(e) {}try { if (Inst427 <= 1000 && typeof (BinaryConstraint) != "undefined") {_RecordType("<11522,11538,464>",(BinaryConstraint)); Inst427++; } } catch(e) {}
/**
 * Record the fact that this constraint is unsatisfied.
 */


BinaryConstraint.prototype.markUnsatisfied = function () {
try { if (Inst450 <= 1000 && typeof (Direction.NONE) != "undefined") {_RecordType("<11917,11931,480>",(Direction.NONE)); Inst450++; } } catch(e) {}try { if (Inst451 <= 1000 && typeof (Direction) != "undefined") {_RecordType("<11917,11926,480>",(Direction)); Inst451++; } } catch(e) {}
  this.direction = Direction.NONE;
try { if (Inst449 <= 1000 && typeof (this.direction) != "undefined") {_RecordType("<11900,11914,480>",(this.direction)); Inst449++; } } catch(e) {}
};
try { if (Inst446 <= 1000 && typeof (BinaryConstraint.prototype.markUnsatisfied) != "undefined") {_RecordType("<11839,11881,479>",(BinaryConstraint.prototype.markUnsatisfied)); Inst446++; } } catch(e) {}try { if (Inst447 <= 1000 && typeof (BinaryConstraint.prototype) != "undefined") {_RecordType("<11839,11865,479>",(BinaryConstraint.prototype)); Inst447++; } } catch(e) {}try { if (Inst448 <= 1000 && typeof (BinaryConstraint) != "undefined") {_RecordType("<11839,11855,479>",(BinaryConstraint)); Inst448++; } } catch(e) {}

BinaryConstraint.prototype.inputsKnown = function (mark) {
try { if (Inst455 <= 1000 && typeof (mark) != "undefined") {_RecordType("<11988,11992,483>",(mark)); Inst455++; } } catch(e) {}
try { if (Inst457 <= 1000 && typeof (this.input) != "undefined") {_RecordType("<12006,12016,484>",(this.input)); Inst457++; } } catch(e) {}
  var i = this.input();
try { if (Inst456 <= 1000 && typeof (i) != "undefined") {_RecordType("<12002,12003,484>",(i)); Inst456++; } } catch(e) {}
try { if (Inst458 <= 1000 && typeof (i.mark) != "undefined") {_RecordType("<12029,12035,485>",(i.mark)); Inst458++; } } catch(e) {}try { if (Inst459 <= 1000 && typeof (i) != "undefined") {_RecordType("<12029,12030,485>",(i)); Inst459++; } } catch(e) {}try { if (Inst460 <= 1000 && typeof (mark) != "undefined") {_RecordType("<12039,12043,485>",(mark)); Inst460++; } } catch(e) {}try { if (Inst461 <= 1000 && typeof (i.stay) != "undefined") {_RecordType("<12047,12053,485>",(i.stay)); Inst461++; } } catch(e) {}try { if (Inst462 <= 1000 && typeof (i) != "undefined") {_RecordType("<12047,12048,485>",(i)); Inst462++; } } catch(e) {}try { if (Inst463 <= 1000 && typeof (i.determinedBy) != "undefined") {_RecordType("<12057,12071,485>",(i.determinedBy)); Inst463++; } } catch(e) {}try { if (Inst464 <= 1000 && typeof (i) != "undefined") {_RecordType("<12057,12058,485>",(i)); Inst464++; } } catch(e) {}
  return i.mark == mark || i.stay || i.determinedBy == null;
};
try { if (Inst452 <= 1000 && typeof (BinaryConstraint.prototype.inputsKnown) != "undefined") {_RecordType("<11937,11975,483>",(BinaryConstraint.prototype.inputsKnown)); Inst452++; } } catch(e) {}try { if (Inst453 <= 1000 && typeof (BinaryConstraint.prototype) != "undefined") {_RecordType("<11937,11963,483>",(BinaryConstraint.prototype)); Inst453++; } } catch(e) {}try { if (Inst454 <= 1000 && typeof (BinaryConstraint) != "undefined") {_RecordType("<11937,11953,483>",(BinaryConstraint)); Inst454++; } } catch(e) {}

BinaryConstraint.prototype.removeFromGraph = function () {
try { if (Inst468 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<12150,12157,489>",(this.v1)); Inst468++; } } catch(e) {}
  if (this.v1 != null) {
try { if (Inst469 <= 1000 && typeof (this.v1.removeConstraint) != "undefined") {_RecordType("<12173,12197,490>",(this.v1.removeConstraint)); Inst469++; } } catch(e) {}try { if (Inst470 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<12173,12180,490>",(this.v1)); Inst470++; } } catch(e) {}
    this.v1.removeConstraint(this);
  }

try { if (Inst471 <= 1000 && typeof (this.v2) != "undefined") {_RecordType("<12216,12223,493>",(this.v2)); Inst471++; } } catch(e) {}
  if (this.v2 != null) {
try { if (Inst472 <= 1000 && typeof (this.v2.removeConstraint) != "undefined") {_RecordType("<12239,12263,494>",(this.v2.removeConstraint)); Inst472++; } } catch(e) {}try { if (Inst473 <= 1000 && typeof (this.v2) != "undefined") {_RecordType("<12239,12246,494>",(this.v2)); Inst473++; } } catch(e) {}
    this.v2.removeConstraint(this);
  }

try { if (Inst475 <= 1000 && typeof (Direction.NONE) != "undefined") {_RecordType("<12295,12309,497>",(Direction.NONE)); Inst475++; } } catch(e) {}try { if (Inst476 <= 1000 && typeof (Direction) != "undefined") {_RecordType("<12295,12304,497>",(Direction)); Inst476++; } } catch(e) {}
  this.direction = Direction.NONE;
try { if (Inst474 <= 1000 && typeof (this.direction) != "undefined") {_RecordType("<12278,12292,497>",(this.direction)); Inst474++; } } catch(e) {}
};
try { if (Inst465 <= 1000 && typeof (BinaryConstraint.prototype.removeFromGraph) != "undefined") {_RecordType("<12085,12127,488>",(BinaryConstraint.prototype.removeFromGraph)); Inst465++; } } catch(e) {}try { if (Inst466 <= 1000 && typeof (BinaryConstraint.prototype) != "undefined") {_RecordType("<12085,12111,488>",(BinaryConstraint.prototype)); Inst466++; } } catch(e) {}try { if (Inst467 <= 1000 && typeof (BinaryConstraint) != "undefined") {_RecordType("<12085,12101,488>",(BinaryConstraint)); Inst467++; } } catch(e) {}
/* --- *
 * S c a l e   C o n s t r a i n t
 * --- */

/**
 * Relates two variables by the linear scaling relationship: "v2 =
 * (v1 * scale) + offset". Either v1 or v2 may be changed to maintain
 * this relationship but the scale factor and offset are considered
 * read-only.
 */


try { if (Inst477 <= 1000 && typeof (ScaleConstraint) != "undefined") {_RecordType("<12607,12622,511>",(ScaleConstraint)); Inst477++; } } catch(e) {}
function ScaleConstraint(src, scale, offset, dest, strength) {
try { if (Inst478 <= 1000 && typeof (src) != "undefined") {_RecordType("<12623,12626,511>",(src)); Inst478++; } } catch(e) {}try { if (Inst479 <= 1000 && typeof (scale) != "undefined") {_RecordType("<12628,12633,511>",(scale)); Inst479++; } } catch(e) {}try { if (Inst480 <= 1000 && typeof (offset) != "undefined") {_RecordType("<12635,12641,511>",(offset)); Inst480++; } } catch(e) {}try { if (Inst481 <= 1000 && typeof (dest) != "undefined") {_RecordType("<12643,12647,511>",(dest)); Inst481++; } } catch(e) {}try { if (Inst482 <= 1000 && typeof (strength) != "undefined") {_RecordType("<12649,12657,511>",(strength)); Inst482++; } } catch(e) {}
try { if (Inst484 <= 1000 && typeof (Direction.NONE) != "undefined") {_RecordType("<12680,12694,512>",(Direction.NONE)); Inst484++; } } catch(e) {}try { if (Inst485 <= 1000 && typeof (Direction) != "undefined") {_RecordType("<12680,12689,512>",(Direction)); Inst485++; } } catch(e) {}
  this.direction = Direction.NONE;
try { if (Inst483 <= 1000 && typeof (this.direction) != "undefined") {_RecordType("<12663,12677,512>",(this.direction)); Inst483++; } } catch(e) {}
try { if (Inst487 <= 1000 && typeof (scale) != "undefined") {_RecordType("<12711,12716,513>",(scale)); Inst487++; } } catch(e) {}
  this.scale = scale;
try { if (Inst486 <= 1000 && typeof (this.scale) != "undefined") {_RecordType("<12698,12708,513>",(this.scale)); Inst486++; } } catch(e) {}
try { if (Inst489 <= 1000 && typeof (offset) != "undefined") {_RecordType("<12734,12740,514>",(offset)); Inst489++; } } catch(e) {}
  this.offset = offset;
try { if (Inst488 <= 1000 && typeof (this.offset) != "undefined") {_RecordType("<12720,12731,514>",(this.offset)); Inst488++; } } catch(e) {}
try { if (Inst490 <= 1000 && typeof (ScaleConstraint.superConstructor.call) != "undefined") {_RecordType("<12744,12781,515>",(ScaleConstraint.superConstructor.call)); Inst490++; } } catch(e) {}try { if (Inst491 <= 1000 && typeof (ScaleConstraint.superConstructor) != "undefined") {_RecordType("<12744,12776,515>",(ScaleConstraint.superConstructor)); Inst491++; } } catch(e) {}try { if (Inst492 <= 1000 && typeof (ScaleConstraint) != "undefined") {_RecordType("<12744,12759,515>",(ScaleConstraint)); Inst492++; } } catch(e) {}try { if (Inst493 <= 1000 && typeof (src) != "undefined") {_RecordType("<12788,12791,515>",(src)); Inst493++; } } catch(e) {}try { if (Inst494 <= 1000 && typeof (dest) != "undefined") {_RecordType("<12793,12797,515>",(dest)); Inst494++; } } catch(e) {}try { if (Inst495 <= 1000 && typeof (strength) != "undefined") {_RecordType("<12799,12807,515>",(strength)); Inst495++; } } catch(e) {}
  ScaleConstraint.superConstructor.call(this, src, dest, strength);
}

try { if (Inst496 <= 1000 && typeof (ScaleConstraint.inheritsFrom) != "undefined") {_RecordType("<12813,12841,518>",(ScaleConstraint.inheritsFrom)); Inst496++; } } catch(e) {}try { if (Inst497 <= 1000 && typeof (ScaleConstraint) != "undefined") {_RecordType("<12813,12828,518>",(ScaleConstraint)); Inst497++; } } catch(e) {}try { if (Inst498 <= 1000 && typeof (BinaryConstraint) != "undefined") {_RecordType("<12842,12858,518>",(BinaryConstraint)); Inst498++; } } catch(e) {}
ScaleConstraint.inheritsFrom(BinaryConstraint);
/**
 * Adds this constraint to the constraint graph.
 */

ScaleConstraint.prototype.addToGraph = function () {
try { if (Inst502 <= 1000 && typeof (ScaleConstraint.superConstructor.prototype.addToGraph.call) != "undefined") {_RecordType("<12974,13032,524>",(ScaleConstraint.superConstructor.prototype.addToGraph.call)); Inst502++; } } catch(e) {}try { if (Inst503 <= 1000 && typeof (ScaleConstraint.superConstructor.prototype.addToGraph) != "undefined") {_RecordType("<12974,13027,524>",(ScaleConstraint.superConstructor.prototype.addToGraph)); Inst503++; } } catch(e) {}try { if (Inst504 <= 1000 && typeof (ScaleConstraint.superConstructor.prototype) != "undefined") {_RecordType("<12974,13016,524>",(ScaleConstraint.superConstructor.prototype)); Inst504++; } } catch(e) {}try { if (Inst505 <= 1000 && typeof (ScaleConstraint.superConstructor) != "undefined") {_RecordType("<12974,13006,524>",(ScaleConstraint.superConstructor)); Inst505++; } } catch(e) {}try { if (Inst506 <= 1000 && typeof (ScaleConstraint) != "undefined") {_RecordType("<12974,12989,524>",(ScaleConstraint)); Inst506++; } } catch(e) {}
  ScaleConstraint.superConstructor.prototype.addToGraph.call(this);
try { if (Inst507 <= 1000 && typeof (this.scale.addConstraint) != "undefined") {_RecordType("<13042,13066,525>",(this.scale.addConstraint)); Inst507++; } } catch(e) {}try { if (Inst508 <= 1000 && typeof (this.scale) != "undefined") {_RecordType("<13042,13052,525>",(this.scale)); Inst508++; } } catch(e) {}
  this.scale.addConstraint(this);
try { if (Inst509 <= 1000 && typeof (this.offset.addConstraint) != "undefined") {_RecordType("<13076,13101,526>",(this.offset.addConstraint)); Inst509++; } } catch(e) {}try { if (Inst510 <= 1000 && typeof (this.offset) != "undefined") {_RecordType("<13076,13087,526>",(this.offset)); Inst510++; } } catch(e) {}
  this.offset.addConstraint(this);
};
try { if (Inst499 <= 1000 && typeof (ScaleConstraint.prototype.addToGraph) != "undefined") {_RecordType("<12919,12955,523>",(ScaleConstraint.prototype.addToGraph)); Inst499++; } } catch(e) {}try { if (Inst500 <= 1000 && typeof (ScaleConstraint.prototype) != "undefined") {_RecordType("<12919,12944,523>",(ScaleConstraint.prototype)); Inst500++; } } catch(e) {}try { if (Inst501 <= 1000 && typeof (ScaleConstraint) != "undefined") {_RecordType("<12919,12934,523>",(ScaleConstraint)); Inst501++; } } catch(e) {}

ScaleConstraint.prototype.removeFromGraph = function () {
try { if (Inst514 <= 1000 && typeof (ScaleConstraint.superConstructor.prototype.removeFromGraph.call) != "undefined") {_RecordType("<13173,13236,530>",(ScaleConstraint.superConstructor.prototype.removeFromGraph.call)); Inst514++; } } catch(e) {}try { if (Inst515 <= 1000 && typeof (ScaleConstraint.superConstructor.prototype.removeFromGraph) != "undefined") {_RecordType("<13173,13231,530>",(ScaleConstraint.superConstructor.prototype.removeFromGraph)); Inst515++; } } catch(e) {}try { if (Inst516 <= 1000 && typeof (ScaleConstraint.superConstructor.prototype) != "undefined") {_RecordType("<13173,13215,530>",(ScaleConstraint.superConstructor.prototype)); Inst516++; } } catch(e) {}try { if (Inst517 <= 1000 && typeof (ScaleConstraint.superConstructor) != "undefined") {_RecordType("<13173,13205,530>",(ScaleConstraint.superConstructor)); Inst517++; } } catch(e) {}try { if (Inst518 <= 1000 && typeof (ScaleConstraint) != "undefined") {_RecordType("<13173,13188,530>",(ScaleConstraint)); Inst518++; } } catch(e) {}
  ScaleConstraint.superConstructor.prototype.removeFromGraph.call(this);

try { if (Inst519 <= 1000 && typeof (this.scale) != "undefined") {_RecordType("<13251,13261,532>",(this.scale)); Inst519++; } } catch(e) {}
  if (this.scale != null) {
try { if (Inst520 <= 1000 && typeof (this.scale.removeConstraint) != "undefined") {_RecordType("<13277,13304,533>",(this.scale.removeConstraint)); Inst520++; } } catch(e) {}try { if (Inst521 <= 1000 && typeof (this.scale) != "undefined") {_RecordType("<13277,13287,533>",(this.scale)); Inst521++; } } catch(e) {}
    this.scale.removeConstraint(this);
  }

try { if (Inst522 <= 1000 && typeof (this.offset) != "undefined") {_RecordType("<13323,13334,536>",(this.offset)); Inst522++; } } catch(e) {}
  if (this.offset != null) {
try { if (Inst523 <= 1000 && typeof (this.offset.removeConstraint) != "undefined") {_RecordType("<13350,13378,537>",(this.offset.removeConstraint)); Inst523++; } } catch(e) {}try { if (Inst524 <= 1000 && typeof (this.offset) != "undefined") {_RecordType("<13350,13361,537>",(this.offset)); Inst524++; } } catch(e) {}
    this.offset.removeConstraint(this);
  }
};
try { if (Inst511 <= 1000 && typeof (ScaleConstraint.prototype.removeFromGraph) != "undefined") {_RecordType("<13113,13154,529>",(ScaleConstraint.prototype.removeFromGraph)); Inst511++; } } catch(e) {}try { if (Inst512 <= 1000 && typeof (ScaleConstraint.prototype) != "undefined") {_RecordType("<13113,13138,529>",(ScaleConstraint.prototype)); Inst512++; } } catch(e) {}try { if (Inst513 <= 1000 && typeof (ScaleConstraint) != "undefined") {_RecordType("<13113,13128,529>",(ScaleConstraint)); Inst513++; } } catch(e) {}

ScaleConstraint.prototype.markInputs = function (mark) {
try { if (Inst528 <= 1000 && typeof (mark) != "undefined") {_RecordType("<13443,13447,541>",(mark)); Inst528++; } } catch(e) {}
try { if (Inst529 <= 1000 && typeof (ScaleConstraint.superConstructor.prototype.markInputs.call) != "undefined") {_RecordType("<13453,13511,542>",(ScaleConstraint.superConstructor.prototype.markInputs.call)); Inst529++; } } catch(e) {}try { if (Inst530 <= 1000 && typeof (ScaleConstraint.superConstructor.prototype.markInputs) != "undefined") {_RecordType("<13453,13506,542>",(ScaleConstraint.superConstructor.prototype.markInputs)); Inst530++; } } catch(e) {}try { if (Inst531 <= 1000 && typeof (ScaleConstraint.superConstructor.prototype) != "undefined") {_RecordType("<13453,13495,542>",(ScaleConstraint.superConstructor.prototype)); Inst531++; } } catch(e) {}try { if (Inst532 <= 1000 && typeof (ScaleConstraint.superConstructor) != "undefined") {_RecordType("<13453,13485,542>",(ScaleConstraint.superConstructor)); Inst532++; } } catch(e) {}try { if (Inst533 <= 1000 && typeof (ScaleConstraint) != "undefined") {_RecordType("<13453,13468,542>",(ScaleConstraint)); Inst533++; } } catch(e) {}try { if (Inst534 <= 1000 && typeof (mark) != "undefined") {_RecordType("<13518,13522,542>",(mark)); Inst534++; } } catch(e) {}
  ScaleConstraint.superConstructor.prototype.markInputs.call(this, mark);
try { if (Inst539 <= 1000 && typeof (mark) != "undefined") {_RecordType("<13564,13568,543>",(mark)); Inst539++; } } catch(e) {}
  this.scale.mark = this.offset.mark = mark;
try { if (Inst535 <= 1000 && typeof (this.scale.mark) != "undefined") {_RecordType("<13527,13542,543>",(this.scale.mark)); Inst535++; } } catch(e) {}try { if (Inst536 <= 1000 && typeof (this.scale) != "undefined") {_RecordType("<13527,13537,543>",(this.scale)); Inst536++; } } catch(e) {}try { if (Inst537 <= 1000 && typeof (this.offset.mark) != "undefined") {_RecordType("<13545,13561,543>",(this.offset.mark)); Inst537++; } } catch(e) {}try { if (Inst538 <= 1000 && typeof (this.offset) != "undefined") {_RecordType("<13545,13556,543>",(this.offset)); Inst538++; } } catch(e) {}
};
try { if (Inst525 <= 1000 && typeof (ScaleConstraint.prototype.markInputs) != "undefined") {_RecordType("<13394,13430,541>",(ScaleConstraint.prototype.markInputs)); Inst525++; } } catch(e) {}try { if (Inst526 <= 1000 && typeof (ScaleConstraint.prototype) != "undefined") {_RecordType("<13394,13419,541>",(ScaleConstraint.prototype)); Inst526++; } } catch(e) {}try { if (Inst527 <= 1000 && typeof (ScaleConstraint) != "undefined") {_RecordType("<13394,13409,541>",(ScaleConstraint)); Inst527++; } } catch(e) {}
/**
 * Enforce this constraint. Assume that it is satisfied.
 */


ScaleConstraint.prototype.execute = function () {
try { if (Inst543 <= 1000 && typeof (this.direction) != "undefined") {_RecordType("<13696,13710,551>",(this.direction)); Inst543++; } } catch(e) {}try { if (Inst544 <= 1000 && typeof (Direction.FORWARD) != "undefined") {_RecordType("<13714,13731,551>",(Direction.FORWARD)); Inst544++; } } catch(e) {}try { if (Inst545 <= 1000 && typeof (Direction) != "undefined") {_RecordType("<13714,13723,551>",(Direction)); Inst545++; } } catch(e) {}
  if (this.direction == Direction.FORWARD) {
try { if (Inst548 <= 1000 && typeof (this.v1.value) != "undefined") {_RecordType("<13755,13768,552>",(this.v1.value)); Inst548++; } } catch(e) {}try { if (Inst549 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<13755,13762,552>",(this.v1)); Inst549++; } } catch(e) {}try { if (Inst550 <= 1000 && typeof (this.scale.value) != "undefined") {_RecordType("<13771,13787,552>",(this.scale.value)); Inst550++; } } catch(e) {}try { if (Inst551 <= 1000 && typeof (this.scale) != "undefined") {_RecordType("<13771,13781,552>",(this.scale)); Inst551++; } } catch(e) {}try { if (Inst552 <= 1000 && typeof (this.offset.value) != "undefined") {_RecordType("<13790,13807,552>",(this.offset.value)); Inst552++; } } catch(e) {}try { if (Inst553 <= 1000 && typeof (this.offset) != "undefined") {_RecordType("<13790,13801,552>",(this.offset)); Inst553++; } } catch(e) {}
    this.v2.value = this.v1.value * this.scale.value + this.offset.value;
try { if (Inst546 <= 1000 && typeof (this.v2.value) != "undefined") {_RecordType("<13739,13752,552>",(this.v2.value)); Inst546++; } } catch(e) {}try { if (Inst547 <= 1000 && typeof (this.v2) != "undefined") {_RecordType("<13739,13746,552>",(this.v2)); Inst547++; } } catch(e) {}
  } else {
try { if (Inst556 <= 1000 && typeof (this.v2.value) != "undefined") {_RecordType("<13841,13854,554>",(this.v2.value)); Inst556++; } } catch(e) {}try { if (Inst557 <= 1000 && typeof (this.v2) != "undefined") {_RecordType("<13841,13848,554>",(this.v2)); Inst557++; } } catch(e) {}try { if (Inst558 <= 1000 && typeof (this.offset.value) != "undefined") {_RecordType("<13857,13874,554>",(this.offset.value)); Inst558++; } } catch(e) {}try { if (Inst559 <= 1000 && typeof (this.offset) != "undefined") {_RecordType("<13857,13868,554>",(this.offset)); Inst559++; } } catch(e) {}try { if (Inst560 <= 1000 && typeof (this.scale.value) != "undefined") {_RecordType("<13878,13894,554>",(this.scale.value)); Inst560++; } } catch(e) {}try { if (Inst561 <= 1000 && typeof (this.scale) != "undefined") {_RecordType("<13878,13888,554>",(this.scale)); Inst561++; } } catch(e) {}
    this.v1.value = (this.v2.value - this.offset.value) / this.scale.value;
try { if (Inst554 <= 1000 && typeof (this.v1.value) != "undefined") {_RecordType("<13824,13837,554>",(this.v1.value)); Inst554++; } } catch(e) {}try { if (Inst555 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<13824,13831,554>",(this.v1)); Inst555++; } } catch(e) {}
  }
};
try { if (Inst540 <= 1000 && typeof (ScaleConstraint.prototype.execute) != "undefined") {_RecordType("<13640,13673,550>",(ScaleConstraint.prototype.execute)); Inst540++; } } catch(e) {}try { if (Inst541 <= 1000 && typeof (ScaleConstraint.prototype) != "undefined") {_RecordType("<13640,13665,550>",(ScaleConstraint.prototype)); Inst541++; } } catch(e) {}try { if (Inst542 <= 1000 && typeof (ScaleConstraint) != "undefined") {_RecordType("<13640,13655,550>",(ScaleConstraint)); Inst542++; } } catch(e) {}
/**
 * Calculate the walkabout strength, the stay flag, and, if it is
 * 'stay', the value for the current output of this constraint. Assume
 * this constraint is satisfied.
 */


ScaleConstraint.prototype.recalculate = function () {
try { if (Inst566 <= 1000 && typeof (this.input) != "undefined") {_RecordType("<14149,14159,565>",(this.input)); Inst566++; } } catch(e) {}try { if (Inst568 <= 1000 && typeof (this.output) != "undefined") {_RecordType("<14175,14186,566>",(this.output)); Inst568++; } } catch(e) {}
  var ihn = this.input(),
      out = this.output();
try { if (Inst565 <= 1000 && typeof (ihn) != "undefined") {_RecordType("<14143,14146,565>",(ihn)); Inst565++; } } catch(e) {}try { if (Inst567 <= 1000 && typeof (out) != "undefined") {_RecordType("<14169,14172,566>",(out)); Inst567++; } } catch(e) {}
try { if (Inst571 <= 1000 && typeof (Strength.weakestOf) != "undefined") {_RecordType("<14211,14229,567>",(Strength.weakestOf)); Inst571++; } } catch(e) {}try { if (Inst572 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<14211,14219,567>",(Strength)); Inst572++; } } catch(e) {}try { if (Inst573 <= 1000 && typeof (this.strength) != "undefined") {_RecordType("<14230,14243,567>",(this.strength)); Inst573++; } } catch(e) {}try { if (Inst574 <= 1000 && typeof (ihn.walkStrength) != "undefined") {_RecordType("<14245,14261,567>",(ihn.walkStrength)); Inst574++; } } catch(e) {}try { if (Inst575 <= 1000 && typeof (ihn) != "undefined") {_RecordType("<14245,14248,567>",(ihn)); Inst575++; } } catch(e) {}
  out.walkStrength = Strength.weakestOf(this.strength, ihn.walkStrength);
try { if (Inst569 <= 1000 && typeof (out.walkStrength) != "undefined") {_RecordType("<14192,14208,567>",(out.walkStrength)); Inst569++; } } catch(e) {}try { if (Inst570 <= 1000 && typeof (out) != "undefined") {_RecordType("<14192,14195,567>",(out)); Inst570++; } } catch(e) {}
try { if (Inst578 <= 1000 && typeof (ihn.stay) != "undefined") {_RecordType("<14277,14285,568>",(ihn.stay)); Inst578++; } } catch(e) {}try { if (Inst579 <= 1000 && typeof (ihn) != "undefined") {_RecordType("<14277,14280,568>",(ihn)); Inst579++; } } catch(e) {}try { if (Inst580 <= 1000 && typeof (this.scale.stay) != "undefined") {_RecordType("<14289,14304,568>",(this.scale.stay)); Inst580++; } } catch(e) {}try { if (Inst581 <= 1000 && typeof (this.scale) != "undefined") {_RecordType("<14289,14299,568>",(this.scale)); Inst581++; } } catch(e) {}try { if (Inst582 <= 1000 && typeof (this.offset.stay) != "undefined") {_RecordType("<14308,14324,568>",(this.offset.stay)); Inst582++; } } catch(e) {}try { if (Inst583 <= 1000 && typeof (this.offset) != "undefined") {_RecordType("<14308,14319,568>",(this.offset)); Inst583++; } } catch(e) {}
  out.stay = ihn.stay && this.scale.stay && this.offset.stay;
try { if (Inst576 <= 1000 && typeof (out.stay) != "undefined") {_RecordType("<14266,14274,568>",(out.stay)); Inst576++; } } catch(e) {}try { if (Inst577 <= 1000 && typeof (out) != "undefined") {_RecordType("<14266,14269,568>",(out)); Inst577++; } } catch(e) {}

try { if (Inst584 <= 1000 && typeof (out.stay) != "undefined") {_RecordType("<14333,14341,570>",(out.stay)); Inst584++; } } catch(e) {}try { if (Inst585 <= 1000 && typeof (out) != "undefined") {_RecordType("<14333,14336,570>",(out)); Inst585++; } } catch(e) {}
  if (out.stay) {
try { if (Inst586 <= 1000 && typeof (this.execute) != "undefined") {_RecordType("<14349,14361,571>",(this.execute)); Inst586++; } } catch(e) {}
    this.execute();
  }
};
try { if (Inst562 <= 1000 && typeof (ScaleConstraint.prototype.recalculate) != "undefined") {_RecordType("<14083,14120,564>",(ScaleConstraint.prototype.recalculate)); Inst562++; } } catch(e) {}try { if (Inst563 <= 1000 && typeof (ScaleConstraint.prototype) != "undefined") {_RecordType("<14083,14108,564>",(ScaleConstraint.prototype)); Inst563++; } } catch(e) {}try { if (Inst564 <= 1000 && typeof (ScaleConstraint) != "undefined") {_RecordType("<14083,14098,564>",(ScaleConstraint)); Inst564++; } } catch(e) {}
/* --- *
 * E q u a l i t  y   C o n s t r a i n t
 * --- */

/**
 * Constrains two variables to have the same value.
 */


try { if (Inst587 <= 1000 && typeof (EqualityConstraint) != "undefined") {_RecordType("<14505,14523,583>",(EqualityConstraint)); Inst587++; } } catch(e) {}
function EqualityConstraint(var1, var2, strength) {
try { if (Inst588 <= 1000 && typeof (var1) != "undefined") {_RecordType("<14524,14528,583>",(var1)); Inst588++; } } catch(e) {}try { if (Inst589 <= 1000 && typeof (var2) != "undefined") {_RecordType("<14530,14534,583>",(var2)); Inst589++; } } catch(e) {}try { if (Inst590 <= 1000 && typeof (strength) != "undefined") {_RecordType("<14536,14544,583>",(strength)); Inst590++; } } catch(e) {}
try { if (Inst591 <= 1000 && typeof (EqualityConstraint.superConstructor.call) != "undefined") {_RecordType("<14550,14590,584>",(EqualityConstraint.superConstructor.call)); Inst591++; } } catch(e) {}try { if (Inst592 <= 1000 && typeof (EqualityConstraint.superConstructor) != "undefined") {_RecordType("<14550,14585,584>",(EqualityConstraint.superConstructor)); Inst592++; } } catch(e) {}try { if (Inst593 <= 1000 && typeof (EqualityConstraint) != "undefined") {_RecordType("<14550,14568,584>",(EqualityConstraint)); Inst593++; } } catch(e) {}try { if (Inst594 <= 1000 && typeof (var1) != "undefined") {_RecordType("<14597,14601,584>",(var1)); Inst594++; } } catch(e) {}try { if (Inst595 <= 1000 && typeof (var2) != "undefined") {_RecordType("<14603,14607,584>",(var2)); Inst595++; } } catch(e) {}try { if (Inst596 <= 1000 && typeof (strength) != "undefined") {_RecordType("<14609,14617,584>",(strength)); Inst596++; } } catch(e) {}
  EqualityConstraint.superConstructor.call(this, var1, var2, strength);
}

try { if (Inst597 <= 1000 && typeof (EqualityConstraint.inheritsFrom) != "undefined") {_RecordType("<14623,14654,587>",(EqualityConstraint.inheritsFrom)); Inst597++; } } catch(e) {}try { if (Inst598 <= 1000 && typeof (EqualityConstraint) != "undefined") {_RecordType("<14623,14641,587>",(EqualityConstraint)); Inst598++; } } catch(e) {}try { if (Inst599 <= 1000 && typeof (BinaryConstraint) != "undefined") {_RecordType("<14655,14671,587>",(BinaryConstraint)); Inst599++; } } catch(e) {}
EqualityConstraint.inheritsFrom(BinaryConstraint);
/**
 * Enforce this constraint. Assume that it is satisfied.
 */

EqualityConstraint.prototype.execute = function () {
try { if (Inst605 <= 1000 && typeof (this.input().value) != "undefined") {_RecordType("<14817,14835,593>",(this.input().value)); Inst605++; } } catch(e) {}try { if (Inst606 <= 1000 && typeof (this.input) != "undefined") {_RecordType("<14817,14827,593>",(this.input)); Inst606++; } } catch(e) {}
  this.output().value = this.input().value;
try { if (Inst603 <= 1000 && typeof (this.output().value) != "undefined") {_RecordType("<14795,14814,593>",(this.output().value)); Inst603++; } } catch(e) {}try { if (Inst604 <= 1000 && typeof (this.output) != "undefined") {_RecordType("<14795,14806,593>",(this.output)); Inst604++; } } catch(e) {}
};
try { if (Inst600 <= 1000 && typeof (EqualityConstraint.prototype.execute) != "undefined") {_RecordType("<14740,14776,592>",(EqualityConstraint.prototype.execute)); Inst600++; } } catch(e) {}try { if (Inst601 <= 1000 && typeof (EqualityConstraint.prototype) != "undefined") {_RecordType("<14740,14768,592>",(EqualityConstraint.prototype)); Inst601++; } } catch(e) {}try { if (Inst602 <= 1000 && typeof (EqualityConstraint) != "undefined") {_RecordType("<14740,14758,592>",(EqualityConstraint)); Inst602++; } } catch(e) {}
/* --- *
 * V a r i a b l e
 * --- */

/**
 * A constrained variable. In addition to its value, it maintain the
 * structure of the constraint graph, the current dataflow graph, and
 * various parameters of interest to the DeltaBlue incremental
 * constraint solver.
 **/


try { if (Inst607 <= 1000 && typeof (Variable) != "undefined") {_RecordType("<15123,15131,607>",(Variable)); Inst607++; } } catch(e) {}
function Variable(name, initialValue) {
try { if (Inst608 <= 1000 && typeof (name) != "undefined") {_RecordType("<15132,15136,607>",(name)); Inst608++; } } catch(e) {}try { if (Inst609 <= 1000 && typeof (initialValue) != "undefined") {_RecordType("<15138,15150,607>",(initialValue)); Inst609++; } } catch(e) {}
try { if (Inst611 <= 1000 && typeof (initialValue) != "undefined") {_RecordType("<15169,15181,608>",(initialValue)); Inst611++; } } catch(e) {}
  this.value = initialValue || 0;
try { if (Inst610 <= 1000 && typeof (this.value) != "undefined") {_RecordType("<15156,15166,608>",(this.value)); Inst610++; } } catch(e) {}
try { if (Inst613 <= 1000 && typeof (OrderedCollection) != "undefined") {_RecordType("<15213,15230,609>",(OrderedCollection)); Inst613++; } } catch(e) {}
  this.constraints = new OrderedCollection();
try { if (Inst612 <= 1000 && typeof (this.constraints) != "undefined") {_RecordType("<15190,15206,609>",(this.constraints)); Inst612++; } } catch(e) {}
  this.determinedBy = null;
try { if (Inst614 <= 1000 && typeof (this.determinedBy) != "undefined") {_RecordType("<15236,15253,610>",(this.determinedBy)); Inst614++; } } catch(e) {}
  this.mark = 0;
try { if (Inst615 <= 1000 && typeof (this.mark) != "undefined") {_RecordType("<15264,15273,611>",(this.mark)); Inst615++; } } catch(e) {}
try { if (Inst617 <= 1000 && typeof (Strength.WEAKEST) != "undefined") {_RecordType("<15301,15317,612>",(Strength.WEAKEST)); Inst617++; } } catch(e) {}try { if (Inst618 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<15301,15309,612>",(Strength)); Inst618++; } } catch(e) {}
  this.walkStrength = Strength.WEAKEST;
try { if (Inst616 <= 1000 && typeof (this.walkStrength) != "undefined") {_RecordType("<15281,15298,612>",(this.walkStrength)); Inst616++; } } catch(e) {}
  this.stay = true;
try { if (Inst619 <= 1000 && typeof (this.stay) != "undefined") {_RecordType("<15321,15330,613>",(this.stay)); Inst619++; } } catch(e) {}
try { if (Inst621 <= 1000 && typeof (name) != "undefined") {_RecordType("<15353,15357,614>",(name)); Inst621++; } } catch(e) {}
  this.name = name;
try { if (Inst620 <= 1000 && typeof (this.name) != "undefined") {_RecordType("<15341,15350,614>",(this.name)); Inst620++; } } catch(e) {}
}
/**
 * Add the given constraint to the set of all constraints that refer
 * this variable.
 */


Variable.prototype.addConstraint = function (c) {
try { if (Inst625 <= 1000 && typeof (c) != "undefined") {_RecordType("<15503,15504,622>",(c)); Inst625++; } } catch(e) {}
try { if (Inst626 <= 1000 && typeof (this.constraints.add) != "undefined") {_RecordType("<15510,15530,623>",(this.constraints.add)); Inst626++; } } catch(e) {}try { if (Inst627 <= 1000 && typeof (this.constraints) != "undefined") {_RecordType("<15510,15526,623>",(this.constraints)); Inst627++; } } catch(e) {}try { if (Inst628 <= 1000 && typeof (c) != "undefined") {_RecordType("<15531,15532,623>",(c)); Inst628++; } } catch(e) {}
  this.constraints.add(c);
};
try { if (Inst622 <= 1000 && typeof (Variable.prototype.addConstraint) != "undefined") {_RecordType("<15458,15490,622>",(Variable.prototype.addConstraint)); Inst622++; } } catch(e) {}try { if (Inst623 <= 1000 && typeof (Variable.prototype) != "undefined") {_RecordType("<15458,15476,622>",(Variable.prototype)); Inst623++; } } catch(e) {}try { if (Inst624 <= 1000 && typeof (Variable) != "undefined") {_RecordType("<15458,15466,622>",(Variable)); Inst624++; } } catch(e) {}
/**
 * Removes all traces of c from this variable.
 */


Variable.prototype.removeConstraint = function (c) {
try { if (Inst632 <= 1000 && typeof (c) != "undefined") {_RecordType("<15643,15644,630>",(c)); Inst632++; } } catch(e) {}
try { if (Inst633 <= 1000 && typeof (this.constraints.remove) != "undefined") {_RecordType("<15650,15673,631>",(this.constraints.remove)); Inst633++; } } catch(e) {}try { if (Inst634 <= 1000 && typeof (this.constraints) != "undefined") {_RecordType("<15650,15666,631>",(this.constraints)); Inst634++; } } catch(e) {}try { if (Inst635 <= 1000 && typeof (c) != "undefined") {_RecordType("<15674,15675,631>",(c)); Inst635++; } } catch(e) {}
  this.constraints.remove(c);

try { if (Inst636 <= 1000 && typeof (this.determinedBy) != "undefined") {_RecordType("<15685,15702,633>",(this.determinedBy)); Inst636++; } } catch(e) {}try { if (Inst637 <= 1000 && typeof (c) != "undefined") {_RecordType("<15706,15707,633>",(c)); Inst637++; } } catch(e) {}
  if (this.determinedBy == c) {
    this.determinedBy = null;
try { if (Inst638 <= 1000 && typeof (this.determinedBy) != "undefined") {_RecordType("<15715,15732,634>",(this.determinedBy)); Inst638++; } } catch(e) {}
  }
};
try { if (Inst629 <= 1000 && typeof (Variable.prototype.removeConstraint) != "undefined") {_RecordType("<15595,15630,630>",(Variable.prototype.removeConstraint)); Inst629++; } } catch(e) {}try { if (Inst630 <= 1000 && typeof (Variable.prototype) != "undefined") {_RecordType("<15595,15613,630>",(Variable.prototype)); Inst630++; } } catch(e) {}try { if (Inst631 <= 1000 && typeof (Variable) != "undefined") {_RecordType("<15595,15603,630>",(Variable)); Inst631++; } } catch(e) {}
/* --- *
 * P l a n n e r
 * --- */

/**
 * The DeltaBlue planner
 */


try { if (Inst639 <= 1000 && typeof (Planner) != "undefined") {_RecordType("<15829,15836,646>",(Planner)); Inst639++; } } catch(e) {}
function Planner() {
  this.currentMark = 0;
try { if (Inst640 <= 1000 && typeof (this.currentMark) != "undefined") {_RecordType("<15843,15859,647>",(this.currentMark)); Inst640++; } } catch(e) {}
}
/**
 * Attempt to satisfy the given constraint and, if successful,
 * incrementally update the dataflow graph.  Details: If satifying
 * the constraint is successful, it may override a weaker constraint
 * on its output. The algorithm attempts to resatisfy that
 * constraint using some other method. This process is repeated
 * until either a) it reaches a variable that was not previously
 * determined by any constraint or b) it reaches a constraint that
 * is too weak to be satisfied using any of its methods. The
 * variables of constraints that have been processed are marked with
 * a unique mark value so that we know where we've been. This allows
 * the algorithm to avoid getting into an infinite loop even if the
 * constraint graph has an inadvertent cycle.
 */


Planner.prototype.incrementalAdd = function (c) {
try { if (Inst644 <= 1000 && typeof (c) != "undefined") {_RecordType("<16689,16690,665>",(c)); Inst644++; } } catch(e) {}
try { if (Inst646 <= 1000 && typeof (this.newMark) != "undefined") {_RecordType("<16707,16719,666>",(this.newMark)); Inst646++; } } catch(e) {}
  var mark = this.newMark();
try { if (Inst645 <= 1000 && typeof (mark) != "undefined") {_RecordType("<16700,16704,666>",(mark)); Inst645++; } } catch(e) {}
try { if (Inst648 <= 1000 && typeof (c.satisfy) != "undefined") {_RecordType("<16742,16751,667>",(c.satisfy)); Inst648++; } } catch(e) {}try { if (Inst649 <= 1000 && typeof (c) != "undefined") {_RecordType("<16742,16743,667>",(c)); Inst649++; } } catch(e) {}try { if (Inst650 <= 1000 && typeof (mark) != "undefined") {_RecordType("<16752,16756,667>",(mark)); Inst650++; } } catch(e) {}
  var overridden = c.satisfy(mark);
try { if (Inst647 <= 1000 && typeof (overridden) != "undefined") {_RecordType("<16729,16739,667>",(overridden)); Inst647++; } } catch(e) {}

try { if (Inst651 <= 1000 && typeof (overridden) != "undefined") {_RecordType("<16769,16779,669>",(overridden)); Inst651++; } } catch(e) {}
  while (overridden != null) {
try { if (Inst653 <= 1000 && typeof (overridden.satisfy) != "undefined") {_RecordType("<16808,16826,670>",(overridden.satisfy)); Inst653++; } } catch(e) {}try { if (Inst654 <= 1000 && typeof (overridden) != "undefined") {_RecordType("<16808,16818,670>",(overridden)); Inst654++; } } catch(e) {}try { if (Inst655 <= 1000 && typeof (mark) != "undefined") {_RecordType("<16827,16831,670>",(mark)); Inst655++; } } catch(e) {}
    overridden = overridden.satisfy(mark);
try { if (Inst652 <= 1000 && typeof (overridden) != "undefined") {_RecordType("<16795,16805,670>",(overridden)); Inst652++; } } catch(e) {}
  }
};
try { if (Inst641 <= 1000 && typeof (Planner.prototype.incrementalAdd) != "undefined") {_RecordType("<16644,16676,665>",(Planner.prototype.incrementalAdd)); Inst641++; } } catch(e) {}try { if (Inst642 <= 1000 && typeof (Planner.prototype) != "undefined") {_RecordType("<16644,16661,665>",(Planner.prototype)); Inst642++; } } catch(e) {}try { if (Inst643 <= 1000 && typeof (Planner) != "undefined") {_RecordType("<16644,16651,665>",(Planner)); Inst643++; } } catch(e) {}
/**
 * Entry point for retracting a constraint. Remove the given
 * constraint and incrementally update the dataflow graph.
 * Details: Retracting the given constraint may allow some currently
 * unsatisfiable downstream constraint to be satisfied. We therefore collect
 * a list of unsatisfied downstream constraints and attempt to
 * satisfy each one in turn. This list is traversed by constraint
 * strength, strongest first, as a heuristic for avoiding
 * unnecessarily adding and then overriding weak constraints.
 * Assume: c is satisfied.
 */


Planner.prototype.incrementalRemove = function (c) {
try { if (Inst659 <= 1000 && typeof (c) != "undefined") {_RecordType("<17441,17442,686>",(c)); Inst659++; } } catch(e) {}
try { if (Inst661 <= 1000 && typeof (c.output) != "undefined") {_RecordType("<17458,17466,687>",(c.output)); Inst661++; } } catch(e) {}try { if (Inst662 <= 1000 && typeof (c) != "undefined") {_RecordType("<17458,17459,687>",(c)); Inst662++; } } catch(e) {}
  var out = c.output();
try { if (Inst660 <= 1000 && typeof (out) != "undefined") {_RecordType("<17452,17455,687>",(out)); Inst660++; } } catch(e) {}
try { if (Inst663 <= 1000 && typeof (c.markUnsatisfied) != "undefined") {_RecordType("<17472,17489,688>",(c.markUnsatisfied)); Inst663++; } } catch(e) {}try { if (Inst664 <= 1000 && typeof (c) != "undefined") {_RecordType("<17472,17473,688>",(c)); Inst664++; } } catch(e) {}
  c.markUnsatisfied();
try { if (Inst665 <= 1000 && typeof (c.removeFromGraph) != "undefined") {_RecordType("<17495,17512,689>",(c.removeFromGraph)); Inst665++; } } catch(e) {}try { if (Inst666 <= 1000 && typeof (c) != "undefined") {_RecordType("<17495,17496,689>",(c)); Inst666++; } } catch(e) {}
  c.removeFromGraph();
try { if (Inst668 <= 1000 && typeof (this.removePropagateFrom) != "undefined") {_RecordType("<17536,17560,690>",(this.removePropagateFrom)); Inst668++; } } catch(e) {}try { if (Inst669 <= 1000 && typeof (out) != "undefined") {_RecordType("<17561,17564,690>",(out)); Inst669++; } } catch(e) {}
  var unsatisfied = this.removePropagateFrom(out);
try { if (Inst667 <= 1000 && typeof (unsatisfied) != "undefined") {_RecordType("<17522,17533,690>",(unsatisfied)); Inst667++; } } catch(e) {}
try { if (Inst671 <= 1000 && typeof (Strength.REQUIRED) != "undefined") {_RecordType("<17584,17601,691>",(Strength.REQUIRED)); Inst671++; } } catch(e) {}try { if (Inst672 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<17584,17592,691>",(Strength)); Inst672++; } } catch(e) {}
  var strength = Strength.REQUIRED;
try { if (Inst670 <= 1000 && typeof (strength) != "undefined") {_RecordType("<17573,17581,691>",(strength)); Inst670++; } } catch(e) {}

try { if (Inst673 <= 1000 && typeof (strength) != "undefined") {_RecordType("<17828,17836,703>",(strength)); Inst673++; } } catch(e) {}try { if (Inst674 <= 1000 && typeof (Strength.WEAKEST) != "undefined") {_RecordType("<17840,17856,703>",(Strength.WEAKEST)); Inst674++; } } catch(e) {}try { if (Inst675 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<17840,17848,703>",(Strength)); Inst675++; } } catch(e) {}
  do {
    for (var i = 0; i < unsatisfied.size(); i++) {
try { if (Inst676 <= 1000 && typeof (i) != "undefined") {_RecordType("<17624,17625,694>",(i)); Inst676++; } } catch(e) {}try { if (Inst677 <= 1000 && typeof (i) != "undefined") {_RecordType("<17631,17632,694>",(i)); Inst677++; } } catch(e) {}try { if (Inst678 <= 1000 && typeof (unsatisfied.size) != "undefined") {_RecordType("<17635,17651,694>",(unsatisfied.size)); Inst678++; } } catch(e) {}try { if (Inst679 <= 1000 && typeof (unsatisfied) != "undefined") {_RecordType("<17635,17646,694>",(unsatisfied)); Inst679++; } } catch(e) {}try { if (Inst680 <= 1000 && typeof (i) != "undefined") {_RecordType("<17655,17656,694>",(i)); Inst680++; } } catch(e) {}
try { if (Inst682 <= 1000 && typeof (unsatisfied.at) != "undefined") {_RecordType("<17676,17690,695>",(unsatisfied.at)); Inst682++; } } catch(e) {}try { if (Inst683 <= 1000 && typeof (unsatisfied) != "undefined") {_RecordType("<17676,17687,695>",(unsatisfied)); Inst683++; } } catch(e) {}try { if (Inst684 <= 1000 && typeof (i) != "undefined") {_RecordType("<17691,17692,695>",(i)); Inst684++; } } catch(e) {}
      var u = unsatisfied.at(i);
try { if (Inst681 <= 1000 && typeof (u) != "undefined") {_RecordType("<17672,17673,695>",(u)); Inst681++; } } catch(e) {}

try { if (Inst685 <= 1000 && typeof (u.strength) != "undefined") {_RecordType("<17706,17716,697>",(u.strength)); Inst685++; } } catch(e) {}try { if (Inst686 <= 1000 && typeof (u) != "undefined") {_RecordType("<17706,17707,697>",(u)); Inst686++; } } catch(e) {}try { if (Inst687 <= 1000 && typeof (strength) != "undefined") {_RecordType("<17720,17728,697>",(strength)); Inst687++; } } catch(e) {}
      if (u.strength == strength) {
try { if (Inst688 <= 1000 && typeof (this.incrementalAdd) != "undefined") {_RecordType("<17740,17759,698>",(this.incrementalAdd)); Inst688++; } } catch(e) {}try { if (Inst689 <= 1000 && typeof (u) != "undefined") {_RecordType("<17760,17761,698>",(u)); Inst689++; } } catch(e) {}
        this.incrementalAdd(u);
      }
    }

try { if (Inst691 <= 1000 && typeof (strength.nextWeaker) != "undefined") {_RecordType("<17794,17813,702>",(strength.nextWeaker)); Inst691++; } } catch(e) {}try { if (Inst692 <= 1000 && typeof (strength) != "undefined") {_RecordType("<17794,17802,702>",(strength)); Inst692++; } } catch(e) {}
    strength = strength.nextWeaker();
try { if (Inst690 <= 1000 && typeof (strength) != "undefined") {_RecordType("<17783,17791,702>",(strength)); Inst690++; } } catch(e) {}
  } while (strength != Strength.WEAKEST);
};
try { if (Inst656 <= 1000 && typeof (Planner.prototype.incrementalRemove) != "undefined") {_RecordType("<17393,17428,686>",(Planner.prototype.incrementalRemove)); Inst656++; } } catch(e) {}try { if (Inst657 <= 1000 && typeof (Planner.prototype) != "undefined") {_RecordType("<17393,17410,686>",(Planner.prototype)); Inst657++; } } catch(e) {}try { if (Inst658 <= 1000 && typeof (Planner) != "undefined") {_RecordType("<17393,17400,686>",(Planner)); Inst658++; } } catch(e) {}
/**
 * Select a previously unused mark value.
 */


Planner.prototype.newMark = function () {
try { if (Inst696 <= 1000 && typeof (this.currentMark) != "undefined") {_RecordType("<17967,17983,711>",(this.currentMark)); Inst696++; } } catch(e) {}
  return ++this.currentMark;
};
try { if (Inst693 <= 1000 && typeof (Planner.prototype.newMark) != "undefined") {_RecordType("<17914,17939,710>",(Planner.prototype.newMark)); Inst693++; } } catch(e) {}try { if (Inst694 <= 1000 && typeof (Planner.prototype) != "undefined") {_RecordType("<17914,17931,710>",(Planner.prototype)); Inst694++; } } catch(e) {}try { if (Inst695 <= 1000 && typeof (Planner) != "undefined") {_RecordType("<17914,17921,710>",(Planner)); Inst695++; } } catch(e) {}
/**
 * Extract a plan for resatisfaction starting from the given source
 * constraints, usually a set of input constraints. This method
 * assumes that stay optimization is desired; the plan will contain
 * only constraints whose output variables are not stay. Constraints
 * that do no computation, such as stay and edit constraints, are
 * not included in the plan.
 * Details: The outputs of a constraint are marked when it is added
 * to the plan under construction. A constraint may be appended to
 * the plan when all its input variables are known. A variable is
 * known if either a) the variable is marked (indicating that has
 * been computed by a constraint appearing earlier in the plan), b)
 * the variable is 'stay' (i.e. it is a constant at plan execution
 * time), or c) the variable is not determined by any
 * constraint. The last provision is for past states of history
 * variables, which are not stay but which are also not computed by
 * any constraint.
 * Assume: sources are all satisfied.
 */


Planner.prototype.makePlan = function (sources) {
try { if (Inst700 <= 1000 && typeof (sources) != "undefined") {_RecordType("<19046,19053,734>",(sources)); Inst700++; } } catch(e) {}
try { if (Inst702 <= 1000 && typeof (this.newMark) != "undefined") {_RecordType("<19070,19082,735>",(this.newMark)); Inst702++; } } catch(e) {}
  var mark = this.newMark();
try { if (Inst701 <= 1000 && typeof (mark) != "undefined") {_RecordType("<19063,19067,735>",(mark)); Inst701++; } } catch(e) {}
try { if (Inst704 <= 1000 && typeof (Plan) != "undefined") {_RecordType("<19103,19107,736>",(Plan)); Inst704++; } } catch(e) {}
  var plan = new Plan();
try { if (Inst703 <= 1000 && typeof (plan) != "undefined") {_RecordType("<19092,19096,736>",(plan)); Inst703++; } } catch(e) {}
try { if (Inst706 <= 1000 && typeof (sources) != "undefined") {_RecordType("<19124,19131,737>",(sources)); Inst706++; } } catch(e) {}
  var todo = sources;
try { if (Inst705 <= 1000 && typeof (todo) != "undefined") {_RecordType("<19117,19121,737>",(todo)); Inst705++; } } catch(e) {}

try { if (Inst707 <= 1000 && typeof (todo.size) != "undefined") {_RecordType("<19143,19152,739>",(todo.size)); Inst707++; } } catch(e) {}try { if (Inst708 <= 1000 && typeof (todo) != "undefined") {_RecordType("<19143,19147,739>",(todo)); Inst708++; } } catch(e) {}
  while (todo.size() > 0) {
try { if (Inst710 <= 1000 && typeof (todo.removeFirst) != "undefined") {_RecordType("<19174,19190,740>",(todo.removeFirst)); Inst710++; } } catch(e) {}try { if (Inst711 <= 1000 && typeof (todo) != "undefined") {_RecordType("<19174,19178,740>",(todo)); Inst711++; } } catch(e) {}
    var c = todo.removeFirst();
try { if (Inst709 <= 1000 && typeof (c) != "undefined") {_RecordType("<19170,19171,740>",(c)); Inst709++; } } catch(e) {}

try { if (Inst712 <= 1000 && typeof (c.output().mark) != "undefined") {_RecordType("<19203,19218,742>",(c.output().mark)); Inst712++; } } catch(e) {}try { if (Inst713 <= 1000 && typeof (c.output) != "undefined") {_RecordType("<19203,19211,742>",(c.output)); Inst713++; } } catch(e) {}try { if (Inst714 <= 1000 && typeof (c) != "undefined") {_RecordType("<19203,19204,742>",(c)); Inst714++; } } catch(e) {}try { if (Inst715 <= 1000 && typeof (mark) != "undefined") {_RecordType("<19222,19226,742>",(mark)); Inst715++; } } catch(e) {}try { if (Inst716 <= 1000 && typeof (c.inputsKnown) != "undefined") {_RecordType("<19230,19243,742>",(c.inputsKnown)); Inst716++; } } catch(e) {}try { if (Inst717 <= 1000 && typeof (c) != "undefined") {_RecordType("<19230,19231,742>",(c)); Inst717++; } } catch(e) {}try { if (Inst718 <= 1000 && typeof (mark) != "undefined") {_RecordType("<19244,19248,742>",(mark)); Inst718++; } } catch(e) {}
    if (c.output().mark != mark && c.inputsKnown(mark)) {
try { if (Inst719 <= 1000 && typeof (plan.addConstraint) != "undefined") {_RecordType("<19259,19277,743>",(plan.addConstraint)); Inst719++; } } catch(e) {}try { if (Inst720 <= 1000 && typeof (plan) != "undefined") {_RecordType("<19259,19263,743>",(plan)); Inst720++; } } catch(e) {}try { if (Inst721 <= 1000 && typeof (c) != "undefined") {_RecordType("<19278,19279,743>",(c)); Inst721++; } } catch(e) {}
      plan.addConstraint(c);
try { if (Inst725 <= 1000 && typeof (mark) != "undefined") {_RecordType("<19306,19310,744>",(mark)); Inst725++; } } catch(e) {}
      c.output().mark = mark;
try { if (Inst722 <= 1000 && typeof (c.output().mark) != "undefined") {_RecordType("<19288,19303,744>",(c.output().mark)); Inst722++; } } catch(e) {}try { if (Inst723 <= 1000 && typeof (c.output) != "undefined") {_RecordType("<19288,19296,744>",(c.output)); Inst723++; } } catch(e) {}try { if (Inst724 <= 1000 && typeof (c) != "undefined") {_RecordType("<19288,19289,744>",(c)); Inst724++; } } catch(e) {}
try { if (Inst726 <= 1000 && typeof (this.addConstraintsConsumingTo) != "undefined") {_RecordType("<19318,19348,745>",(this.addConstraintsConsumingTo)); Inst726++; } } catch(e) {}try { if (Inst727 <= 1000 && typeof (c.output) != "undefined") {_RecordType("<19349,19357,745>",(c.output)); Inst727++; } } catch(e) {}try { if (Inst728 <= 1000 && typeof (c) != "undefined") {_RecordType("<19349,19350,745>",(c)); Inst728++; } } catch(e) {}try { if (Inst729 <= 1000 && typeof (todo) != "undefined") {_RecordType("<19361,19365,745>",(todo)); Inst729++; } } catch(e) {}
      this.addConstraintsConsumingTo(c.output(), todo);
    }
  }

try { if (Inst730 <= 1000 && typeof (plan) != "undefined") {_RecordType("<19388,19392,749>",(plan)); Inst730++; } } catch(e) {}
  return plan;
};
try { if (Inst697 <= 1000 && typeof (Planner.prototype.makePlan) != "undefined") {_RecordType("<19007,19033,734>",(Planner.prototype.makePlan)); Inst697++; } } catch(e) {}try { if (Inst698 <= 1000 && typeof (Planner.prototype) != "undefined") {_RecordType("<19007,19024,734>",(Planner.prototype)); Inst698++; } } catch(e) {}try { if (Inst699 <= 1000 && typeof (Planner) != "undefined") {_RecordType("<19007,19014,734>",(Planner)); Inst699++; } } catch(e) {}
/**
 * Extract a plan for resatisfying starting from the output of the
 * given constraints, usually a set of input constraints.
 */


Planner.prototype.extractPlanFromConstraints = function (constraints) {
try { if (Inst734 <= 1000 && typeof (constraints) != "undefined") {_RecordType("<19589,19600,757>",(constraints)); Inst734++; } } catch(e) {}
try { if (Inst736 <= 1000 && typeof (OrderedCollection) != "undefined") {_RecordType("<19624,19641,758>",(OrderedCollection)); Inst736++; } } catch(e) {}
  var sources = new OrderedCollection();
try { if (Inst735 <= 1000 && typeof (sources) != "undefined") {_RecordType("<19610,19617,758>",(sources)); Inst735++; } } catch(e) {}

  for (var i = 0; i < constraints.size(); i++) {
try { if (Inst737 <= 1000 && typeof (i) != "undefined") {_RecordType("<19657,19658,760>",(i)); Inst737++; } } catch(e) {}try { if (Inst738 <= 1000 && typeof (i) != "undefined") {_RecordType("<19664,19665,760>",(i)); Inst738++; } } catch(e) {}try { if (Inst739 <= 1000 && typeof (constraints.size) != "undefined") {_RecordType("<19668,19684,760>",(constraints.size)); Inst739++; } } catch(e) {}try { if (Inst740 <= 1000 && typeof (constraints) != "undefined") {_RecordType("<19668,19679,760>",(constraints)); Inst740++; } } catch(e) {}try { if (Inst741 <= 1000 && typeof (i) != "undefined") {_RecordType("<19688,19689,760>",(i)); Inst741++; } } catch(e) {}
try { if (Inst743 <= 1000 && typeof (constraints.at) != "undefined") {_RecordType("<19707,19721,761>",(constraints.at)); Inst743++; } } catch(e) {}try { if (Inst744 <= 1000 && typeof (constraints) != "undefined") {_RecordType("<19707,19718,761>",(constraints)); Inst744++; } } catch(e) {}try { if (Inst745 <= 1000 && typeof (i) != "undefined") {_RecordType("<19722,19723,761>",(i)); Inst745++; } } catch(e) {}
    var c = constraints.at(i);
try { if (Inst742 <= 1000 && typeof (c) != "undefined") {_RecordType("<19703,19704,761>",(c)); Inst742++; } } catch(e) {}

try { if (Inst746 <= 1000 && typeof (c.isInput) != "undefined") {_RecordType("<19735,19744,763>",(c.isInput)); Inst746++; } } catch(e) {}try { if (Inst747 <= 1000 && typeof (c) != "undefined") {_RecordType("<19735,19736,763>",(c)); Inst747++; } } catch(e) {}try { if (Inst748 <= 1000 && typeof (c.isSatisfied) != "undefined") {_RecordType("<19750,19763,763>",(c.isSatisfied)); Inst748++; } } catch(e) {}try { if (Inst749 <= 1000 && typeof (c) != "undefined") {_RecordType("<19750,19751,763>",(c)); Inst749++; } } catch(e) {}
    if (c.isInput() && c.isSatisfied()) {
      // not in plan already and eligible for inclusion
try { if (Inst750 <= 1000 && typeof (sources.add) != "undefined") {_RecordType("<19831,19842,765>",(sources.add)); Inst750++; } } catch(e) {}try { if (Inst751 <= 1000 && typeof (sources) != "undefined") {_RecordType("<19831,19838,765>",(sources)); Inst751++; } } catch(e) {}try { if (Inst752 <= 1000 && typeof (c) != "undefined") {_RecordType("<19843,19844,765>",(c)); Inst752++; } } catch(e) {}
      sources.add(c);
    }
  }

try { if (Inst753 <= 1000 && typeof (this.makePlan) != "undefined") {_RecordType("<19867,19880,769>",(this.makePlan)); Inst753++; } } catch(e) {}try { if (Inst754 <= 1000 && typeof (sources) != "undefined") {_RecordType("<19881,19888,769>",(sources)); Inst754++; } } catch(e) {}
  return this.makePlan(sources);
};
try { if (Inst731 <= 1000 && typeof (Planner.prototype.extractPlanFromConstraints) != "undefined") {_RecordType("<19532,19576,757>",(Planner.prototype.extractPlanFromConstraints)); Inst731++; } } catch(e) {}try { if (Inst732 <= 1000 && typeof (Planner.prototype) != "undefined") {_RecordType("<19532,19549,757>",(Planner.prototype)); Inst732++; } } catch(e) {}try { if (Inst733 <= 1000 && typeof (Planner) != "undefined") {_RecordType("<19532,19539,757>",(Planner)); Inst733++; } } catch(e) {}
/**
 * Recompute the walkabout strengths and stay flags of all variables
 * downstream of the given constraint and recompute the actual
 * values of all variables whose stay flag is true. If a cycle is
 * detected, remove the given constraint and answer
 * false. Otherwise, answer true.
 * Details: Cycles are detected when a marked variable is
 * encountered downstream of the given constraint. The sender is
 * assumed to have marked the inputs of the given constraint with
 * the given mark. Thus, encountering a marked node downstream of
 * the output constraint means that there is a path from the
 * constraint's output to one of its inputs.
 */


Planner.prototype.addPropagate = function (c, mark) {
try { if (Inst758 <= 1000 && typeof (c) != "undefined") {_RecordType("<20592,20593,786>",(c)); Inst758++; } } catch(e) {}try { if (Inst759 <= 1000 && typeof (mark) != "undefined") {_RecordType("<20595,20599,786>",(mark)); Inst759++; } } catch(e) {}
try { if (Inst761 <= 1000 && typeof (OrderedCollection) != "undefined") {_RecordType("<20620,20637,787>",(OrderedCollection)); Inst761++; } } catch(e) {}
  var todo = new OrderedCollection();
try { if (Inst760 <= 1000 && typeof (todo) != "undefined") {_RecordType("<20609,20613,787>",(todo)); Inst760++; } } catch(e) {}
try { if (Inst762 <= 1000 && typeof (todo.add) != "undefined") {_RecordType("<20643,20651,788>",(todo.add)); Inst762++; } } catch(e) {}try { if (Inst763 <= 1000 && typeof (todo) != "undefined") {_RecordType("<20643,20647,788>",(todo)); Inst763++; } } catch(e) {}try { if (Inst764 <= 1000 && typeof (c) != "undefined") {_RecordType("<20652,20653,788>",(c)); Inst764++; } } catch(e) {}
  todo.add(c);

try { if (Inst765 <= 1000 && typeof (todo.size) != "undefined") {_RecordType("<20666,20675,790>",(todo.size)); Inst765++; } } catch(e) {}try { if (Inst766 <= 1000 && typeof (todo) != "undefined") {_RecordType("<20666,20670,790>",(todo)); Inst766++; } } catch(e) {}
  while (todo.size() > 0) {
try { if (Inst768 <= 1000 && typeof (todo.removeFirst) != "undefined") {_RecordType("<20697,20713,791>",(todo.removeFirst)); Inst768++; } } catch(e) {}try { if (Inst769 <= 1000 && typeof (todo) != "undefined") {_RecordType("<20697,20701,791>",(todo)); Inst769++; } } catch(e) {}
    var d = todo.removeFirst();
try { if (Inst767 <= 1000 && typeof (d) != "undefined") {_RecordType("<20693,20694,791>",(d)); Inst767++; } } catch(e) {}

try { if (Inst770 <= 1000 && typeof (d.output().mark) != "undefined") {_RecordType("<20726,20741,793>",(d.output().mark)); Inst770++; } } catch(e) {}try { if (Inst771 <= 1000 && typeof (d.output) != "undefined") {_RecordType("<20726,20734,793>",(d.output)); Inst771++; } } catch(e) {}try { if (Inst772 <= 1000 && typeof (d) != "undefined") {_RecordType("<20726,20727,793>",(d)); Inst772++; } } catch(e) {}try { if (Inst773 <= 1000 && typeof (mark) != "undefined") {_RecordType("<20745,20749,793>",(mark)); Inst773++; } } catch(e) {}
    if (d.output().mark == mark) {
try { if (Inst774 <= 1000 && typeof (this.incrementalRemove) != "undefined") {_RecordType("<20759,20781,794>",(this.incrementalRemove)); Inst774++; } } catch(e) {}try { if (Inst775 <= 1000 && typeof (c) != "undefined") {_RecordType("<20782,20783,794>",(c)); Inst775++; } } catch(e) {}
      this.incrementalRemove(c);
      return false;
    }

try { if (Inst776 <= 1000 && typeof (d.recalculate) != "undefined") {_RecordType("<20817,20830,798>",(d.recalculate)); Inst776++; } } catch(e) {}try { if (Inst777 <= 1000 && typeof (d) != "undefined") {_RecordType("<20817,20818,798>",(d)); Inst777++; } } catch(e) {}
    d.recalculate();
try { if (Inst778 <= 1000 && typeof (this.addConstraintsConsumingTo) != "undefined") {_RecordType("<20838,20868,799>",(this.addConstraintsConsumingTo)); Inst778++; } } catch(e) {}try { if (Inst779 <= 1000 && typeof (d.output) != "undefined") {_RecordType("<20869,20877,799>",(d.output)); Inst779++; } } catch(e) {}try { if (Inst780 <= 1000 && typeof (d) != "undefined") {_RecordType("<20869,20870,799>",(d)); Inst780++; } } catch(e) {}try { if (Inst781 <= 1000 && typeof (todo) != "undefined") {_RecordType("<20881,20885,799>",(todo)); Inst781++; } } catch(e) {}
    this.addConstraintsConsumingTo(d.output(), todo);
  }

  return true;
};
try { if (Inst755 <= 1000 && typeof (Planner.prototype.addPropagate) != "undefined") {_RecordType("<20549,20579,786>",(Planner.prototype.addPropagate)); Inst755++; } } catch(e) {}try { if (Inst756 <= 1000 && typeof (Planner.prototype) != "undefined") {_RecordType("<20549,20566,786>",(Planner.prototype)); Inst756++; } } catch(e) {}try { if (Inst757 <= 1000 && typeof (Planner) != "undefined") {_RecordType("<20549,20556,786>",(Planner)); Inst757++; } } catch(e) {}
/**
 * Update the walkabout strengths and stay flags of all variables
 * downstream of the given constraint. Answer a collection of
 * unsatisfied constraints sorted in order of decreasing strength.
 */


Planner.prototype.removePropagateFrom = function (out) {
try { if (Inst785 <= 1000 && typeof (out) != "undefined") {_RecordType("<21166,21169,811>",(out)); Inst785++; } } catch(e) {}
  out.determinedBy = null;
try { if (Inst786 <= 1000 && typeof (out.determinedBy) != "undefined") {_RecordType("<21175,21191,812>",(out.determinedBy)); Inst786++; } } catch(e) {}try { if (Inst787 <= 1000 && typeof (out) != "undefined") {_RecordType("<21175,21178,812>",(out)); Inst787++; } } catch(e) {}
try { if (Inst790 <= 1000 && typeof (Strength.WEAKEST) != "undefined") {_RecordType("<21221,21237,813>",(Strength.WEAKEST)); Inst790++; } } catch(e) {}try { if (Inst791 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<21221,21229,813>",(Strength)); Inst791++; } } catch(e) {}
  out.walkStrength = Strength.WEAKEST;
try { if (Inst788 <= 1000 && typeof (out.walkStrength) != "undefined") {_RecordType("<21202,21218,813>",(out.walkStrength)); Inst788++; } } catch(e) {}try { if (Inst789 <= 1000 && typeof (out) != "undefined") {_RecordType("<21202,21205,813>",(out)); Inst789++; } } catch(e) {}
  out.stay = true;
try { if (Inst792 <= 1000 && typeof (out.stay) != "undefined") {_RecordType("<21241,21249,814>",(out.stay)); Inst792++; } } catch(e) {}try { if (Inst793 <= 1000 && typeof (out) != "undefined") {_RecordType("<21241,21244,814>",(out)); Inst793++; } } catch(e) {}
try { if (Inst795 <= 1000 && typeof (OrderedCollection) != "undefined") {_RecordType("<21282,21299,815>",(OrderedCollection)); Inst795++; } } catch(e) {}
  var unsatisfied = new OrderedCollection();
try { if (Inst794 <= 1000 && typeof (unsatisfied) != "undefined") {_RecordType("<21264,21275,815>",(unsatisfied)); Inst794++; } } catch(e) {}
try { if (Inst797 <= 1000 && typeof (OrderedCollection) != "undefined") {_RecordType("<21320,21337,816>",(OrderedCollection)); Inst797++; } } catch(e) {}
  var todo = new OrderedCollection();
try { if (Inst796 <= 1000 && typeof (todo) != "undefined") {_RecordType("<21309,21313,816>",(todo)); Inst796++; } } catch(e) {}
try { if (Inst798 <= 1000 && typeof (todo.add) != "undefined") {_RecordType("<21343,21351,817>",(todo.add)); Inst798++; } } catch(e) {}try { if (Inst799 <= 1000 && typeof (todo) != "undefined") {_RecordType("<21343,21347,817>",(todo)); Inst799++; } } catch(e) {}try { if (Inst800 <= 1000 && typeof (out) != "undefined") {_RecordType("<21352,21355,817>",(out)); Inst800++; } } catch(e) {}
  todo.add(out);

try { if (Inst801 <= 1000 && typeof (todo.size) != "undefined") {_RecordType("<21368,21377,819>",(todo.size)); Inst801++; } } catch(e) {}try { if (Inst802 <= 1000 && typeof (todo) != "undefined") {_RecordType("<21368,21372,819>",(todo)); Inst802++; } } catch(e) {}
  while (todo.size() > 0) {
try { if (Inst804 <= 1000 && typeof (todo.removeFirst) != "undefined") {_RecordType("<21399,21415,820>",(todo.removeFirst)); Inst804++; } } catch(e) {}try { if (Inst805 <= 1000 && typeof (todo) != "undefined") {_RecordType("<21399,21403,820>",(todo)); Inst805++; } } catch(e) {}
    var v = todo.removeFirst();
try { if (Inst803 <= 1000 && typeof (v) != "undefined") {_RecordType("<21395,21396,820>",(v)); Inst803++; } } catch(e) {}

    for (var i = 0; i < v.constraints.size(); i++) {
try { if (Inst806 <= 1000 && typeof (i) != "undefined") {_RecordType("<21433,21434,822>",(i)); Inst806++; } } catch(e) {}try { if (Inst807 <= 1000 && typeof (i) != "undefined") {_RecordType("<21440,21441,822>",(i)); Inst807++; } } catch(e) {}try { if (Inst808 <= 1000 && typeof (v.constraints.size) != "undefined") {_RecordType("<21444,21462,822>",(v.constraints.size)); Inst808++; } } catch(e) {}try { if (Inst809 <= 1000 && typeof (v.constraints) != "undefined") {_RecordType("<21444,21457,822>",(v.constraints)); Inst809++; } } catch(e) {}try { if (Inst810 <= 1000 && typeof (v) != "undefined") {_RecordType("<21444,21445,822>",(v)); Inst810++; } } catch(e) {}try { if (Inst811 <= 1000 && typeof (i) != "undefined") {_RecordType("<21466,21467,822>",(i)); Inst811++; } } catch(e) {}
try { if (Inst813 <= 1000 && typeof (v.constraints.at) != "undefined") {_RecordType("<21487,21503,823>",(v.constraints.at)); Inst813++; } } catch(e) {}try { if (Inst814 <= 1000 && typeof (v.constraints) != "undefined") {_RecordType("<21487,21500,823>",(v.constraints)); Inst814++; } } catch(e) {}try { if (Inst815 <= 1000 && typeof (v) != "undefined") {_RecordType("<21487,21488,823>",(v)); Inst815++; } } catch(e) {}try { if (Inst816 <= 1000 && typeof (i) != "undefined") {_RecordType("<21504,21505,823>",(i)); Inst816++; } } catch(e) {}
      var c = v.constraints.at(i);
try { if (Inst812 <= 1000 && typeof (c) != "undefined") {_RecordType("<21483,21484,823>",(c)); Inst812++; } } catch(e) {}

try { if (Inst817 <= 1000 && typeof (c.isSatisfied) != "undefined") {_RecordType("<21520,21533,825>",(c.isSatisfied)); Inst817++; } } catch(e) {}try { if (Inst818 <= 1000 && typeof (c) != "undefined") {_RecordType("<21520,21521,825>",(c)); Inst818++; } } catch(e) {}
      if (!c.isSatisfied()) {
try { if (Inst819 <= 1000 && typeof (unsatisfied.add) != "undefined") {_RecordType("<21547,21562,826>",(unsatisfied.add)); Inst819++; } } catch(e) {}try { if (Inst820 <= 1000 && typeof (unsatisfied) != "undefined") {_RecordType("<21547,21558,826>",(unsatisfied)); Inst820++; } } catch(e) {}try { if (Inst821 <= 1000 && typeof (c) != "undefined") {_RecordType("<21563,21564,826>",(c)); Inst821++; } } catch(e) {}
        unsatisfied.add(c);
      }
    }

try { if (Inst823 <= 1000 && typeof (v.determinedBy) != "undefined") {_RecordType("<21604,21618,830>",(v.determinedBy)); Inst823++; } } catch(e) {}try { if (Inst824 <= 1000 && typeof (v) != "undefined") {_RecordType("<21604,21605,830>",(v)); Inst824++; } } catch(e) {}
    var determining = v.determinedBy;
try { if (Inst822 <= 1000 && typeof (determining) != "undefined") {_RecordType("<21590,21601,830>",(determining)); Inst822++; } } catch(e) {}

    for (var i = 0; i < v.constraints.size(); i++) {
try { if (Inst825 <= 1000 && typeof (i) != "undefined") {_RecordType("<21634,21635,832>",(i)); Inst825++; } } catch(e) {}try { if (Inst826 <= 1000 && typeof (i) != "undefined") {_RecordType("<21641,21642,832>",(i)); Inst826++; } } catch(e) {}try { if (Inst827 <= 1000 && typeof (v.constraints.size) != "undefined") {_RecordType("<21645,21663,832>",(v.constraints.size)); Inst827++; } } catch(e) {}try { if (Inst828 <= 1000 && typeof (v.constraints) != "undefined") {_RecordType("<21645,21658,832>",(v.constraints)); Inst828++; } } catch(e) {}try { if (Inst829 <= 1000 && typeof (v) != "undefined") {_RecordType("<21645,21646,832>",(v)); Inst829++; } } catch(e) {}try { if (Inst830 <= 1000 && typeof (i) != "undefined") {_RecordType("<21667,21668,832>",(i)); Inst830++; } } catch(e) {}
try { if (Inst832 <= 1000 && typeof (v.constraints.at) != "undefined") {_RecordType("<21691,21707,833>",(v.constraints.at)); Inst832++; } } catch(e) {}try { if (Inst833 <= 1000 && typeof (v.constraints) != "undefined") {_RecordType("<21691,21704,833>",(v.constraints)); Inst833++; } } catch(e) {}try { if (Inst834 <= 1000 && typeof (v) != "undefined") {_RecordType("<21691,21692,833>",(v)); Inst834++; } } catch(e) {}try { if (Inst835 <= 1000 && typeof (i) != "undefined") {_RecordType("<21708,21709,833>",(i)); Inst835++; } } catch(e) {}
      var next = v.constraints.at(i);
try { if (Inst831 <= 1000 && typeof (next) != "undefined") {_RecordType("<21684,21688,833>",(next)); Inst831++; } } catch(e) {}

try { if (Inst836 <= 1000 && typeof (next) != "undefined") {_RecordType("<21723,21727,835>",(next)); Inst836++; } } catch(e) {}try { if (Inst837 <= 1000 && typeof (determining) != "undefined") {_RecordType("<21731,21742,835>",(determining)); Inst837++; } } catch(e) {}try { if (Inst838 <= 1000 && typeof (next.isSatisfied) != "undefined") {_RecordType("<21746,21762,835>",(next.isSatisfied)); Inst838++; } } catch(e) {}try { if (Inst839 <= 1000 && typeof (next) != "undefined") {_RecordType("<21746,21750,835>",(next)); Inst839++; } } catch(e) {}
      if (next != determining && next.isSatisfied()) {
try { if (Inst840 <= 1000 && typeof (next.recalculate) != "undefined") {_RecordType("<21776,21792,836>",(next.recalculate)); Inst840++; } } catch(e) {}try { if (Inst841 <= 1000 && typeof (next) != "undefined") {_RecordType("<21776,21780,836>",(next)); Inst841++; } } catch(e) {}
        next.recalculate();
try { if (Inst842 <= 1000 && typeof (todo.add) != "undefined") {_RecordType("<21804,21812,837>",(todo.add)); Inst842++; } } catch(e) {}try { if (Inst843 <= 1000 && typeof (todo) != "undefined") {_RecordType("<21804,21808,837>",(todo)); Inst843++; } } catch(e) {}try { if (Inst844 <= 1000 && typeof (next.output) != "undefined") {_RecordType("<21813,21824,837>",(next.output)); Inst844++; } } catch(e) {}try { if (Inst845 <= 1000 && typeof (next) != "undefined") {_RecordType("<21813,21817,837>",(next)); Inst845++; } } catch(e) {}
        todo.add(next.output());
      }
    }
  }

try { if (Inst846 <= 1000 && typeof (unsatisfied) != "undefined") {_RecordType("<21857,21868,842>",(unsatisfied)); Inst846++; } } catch(e) {}
  return unsatisfied;
};
try { if (Inst782 <= 1000 && typeof (Planner.prototype.removePropagateFrom) != "undefined") {_RecordType("<21116,21153,811>",(Planner.prototype.removePropagateFrom)); Inst782++; } } catch(e) {}try { if (Inst783 <= 1000 && typeof (Planner.prototype) != "undefined") {_RecordType("<21116,21133,811>",(Planner.prototype)); Inst783++; } } catch(e) {}try { if (Inst784 <= 1000 && typeof (Planner) != "undefined") {_RecordType("<21116,21123,811>",(Planner)); Inst784++; } } catch(e) {}

Planner.prototype.addConstraintsConsumingTo = function (v, coll) {
try { if (Inst850 <= 1000 && typeof (v) != "undefined") {_RecordType("<21930,21931,845>",(v)); Inst850++; } } catch(e) {}try { if (Inst851 <= 1000 && typeof (coll) != "undefined") {_RecordType("<21933,21937,845>",(coll)); Inst851++; } } catch(e) {}
try { if (Inst853 <= 1000 && typeof (v.determinedBy) != "undefined") {_RecordType("<21961,21975,846>",(v.determinedBy)); Inst853++; } } catch(e) {}try { if (Inst854 <= 1000 && typeof (v) != "undefined") {_RecordType("<21961,21962,846>",(v)); Inst854++; } } catch(e) {}
  var determining = v.determinedBy;
try { if (Inst852 <= 1000 && typeof (determining) != "undefined") {_RecordType("<21947,21958,846>",(determining)); Inst852++; } } catch(e) {}
try { if (Inst856 <= 1000 && typeof (v.constraints) != "undefined") {_RecordType("<21988,22001,847>",(v.constraints)); Inst856++; } } catch(e) {}try { if (Inst857 <= 1000 && typeof (v) != "undefined") {_RecordType("<21988,21989,847>",(v)); Inst857++; } } catch(e) {}
  var cc = v.constraints;
try { if (Inst855 <= 1000 && typeof (cc) != "undefined") {_RecordType("<21983,21985,847>",(cc)); Inst855++; } } catch(e) {}

  for (var i = 0; i < cc.size(); i++) {
try { if (Inst858 <= 1000 && typeof (i) != "undefined") {_RecordType("<22015,22016,849>",(i)); Inst858++; } } catch(e) {}try { if (Inst859 <= 1000 && typeof (i) != "undefined") {_RecordType("<22022,22023,849>",(i)); Inst859++; } } catch(e) {}try { if (Inst860 <= 1000 && typeof (cc.size) != "undefined") {_RecordType("<22026,22033,849>",(cc.size)); Inst860++; } } catch(e) {}try { if (Inst861 <= 1000 && typeof (cc) != "undefined") {_RecordType("<22026,22028,849>",(cc)); Inst861++; } } catch(e) {}try { if (Inst862 <= 1000 && typeof (i) != "undefined") {_RecordType("<22037,22038,849>",(i)); Inst862++; } } catch(e) {}
try { if (Inst864 <= 1000 && typeof (cc.at) != "undefined") {_RecordType("<22056,22061,850>",(cc.at)); Inst864++; } } catch(e) {}try { if (Inst865 <= 1000 && typeof (cc) != "undefined") {_RecordType("<22056,22058,850>",(cc)); Inst865++; } } catch(e) {}try { if (Inst866 <= 1000 && typeof (i) != "undefined") {_RecordType("<22062,22063,850>",(i)); Inst866++; } } catch(e) {}
    var c = cc.at(i);
try { if (Inst863 <= 1000 && typeof (c) != "undefined") {_RecordType("<22052,22053,850>",(c)); Inst863++; } } catch(e) {}

try { if (Inst867 <= 1000 && typeof (c) != "undefined") {_RecordType("<22075,22076,852>",(c)); Inst867++; } } catch(e) {}try { if (Inst868 <= 1000 && typeof (determining) != "undefined") {_RecordType("<22080,22091,852>",(determining)); Inst868++; } } catch(e) {}try { if (Inst869 <= 1000 && typeof (c.isSatisfied) != "undefined") {_RecordType("<22095,22108,852>",(c.isSatisfied)); Inst869++; } } catch(e) {}try { if (Inst870 <= 1000 && typeof (c) != "undefined") {_RecordType("<22095,22096,852>",(c)); Inst870++; } } catch(e) {}
    if (c != determining && c.isSatisfied()) {
try { if (Inst871 <= 1000 && typeof (coll.add) != "undefined") {_RecordType("<22120,22128,853>",(coll.add)); Inst871++; } } catch(e) {}try { if (Inst872 <= 1000 && typeof (coll) != "undefined") {_RecordType("<22120,22124,853>",(coll)); Inst872++; } } catch(e) {}try { if (Inst873 <= 1000 && typeof (c) != "undefined") {_RecordType("<22129,22130,853>",(c)); Inst873++; } } catch(e) {}
      coll.add(c);
    }
  }
};
try { if (Inst847 <= 1000 && typeof (Planner.prototype.addConstraintsConsumingTo) != "undefined") {_RecordType("<21874,21917,845>",(Planner.prototype.addConstraintsConsumingTo)); Inst847++; } } catch(e) {}try { if (Inst848 <= 1000 && typeof (Planner.prototype) != "undefined") {_RecordType("<21874,21891,845>",(Planner.prototype)); Inst848++; } } catch(e) {}try { if (Inst849 <= 1000 && typeof (Planner) != "undefined") {_RecordType("<21874,21881,845>",(Planner)); Inst849++; } } catch(e) {}
/* --- *
 * P l a n
 * --- */

/**
 * A Plan is an ordered list of constraints to be executed in sequence
 * to resatisfy all currently satisfiable constraints in the face of
 * one or more changing inputs.
 */


try { if (Inst874 <= 1000 && typeof (Plan) != "undefined") {_RecordType("<22368,22372,868>",(Plan)); Inst874++; } } catch(e) {}
function Plan() {
try { if (Inst876 <= 1000 && typeof (OrderedCollection) != "undefined") {_RecordType("<22392,22409,869>",(OrderedCollection)); Inst876++; } } catch(e) {}
  this.v = new OrderedCollection();
try { if (Inst875 <= 1000 && typeof (this.v) != "undefined") {_RecordType("<22379,22385,869>",(this.v)); Inst875++; } } catch(e) {}
}

Plan.prototype.addConstraint = function (c) {
try { if (Inst880 <= 1000 && typeof (c) != "undefined") {_RecordType("<22457,22458,872>",(c)); Inst880++; } } catch(e) {}
try { if (Inst881 <= 1000 && typeof (this.v.add) != "undefined") {_RecordType("<22464,22474,873>",(this.v.add)); Inst881++; } } catch(e) {}try { if (Inst882 <= 1000 && typeof (this.v) != "undefined") {_RecordType("<22464,22470,873>",(this.v)); Inst882++; } } catch(e) {}try { if (Inst883 <= 1000 && typeof (c) != "undefined") {_RecordType("<22475,22476,873>",(c)); Inst883++; } } catch(e) {}
  this.v.add(c);
};
try { if (Inst877 <= 1000 && typeof (Plan.prototype.addConstraint) != "undefined") {_RecordType("<22416,22444,872>",(Plan.prototype.addConstraint)); Inst877++; } } catch(e) {}try { if (Inst878 <= 1000 && typeof (Plan.prototype) != "undefined") {_RecordType("<22416,22430,872>",(Plan.prototype)); Inst878++; } } catch(e) {}try { if (Inst879 <= 1000 && typeof (Plan) != "undefined") {_RecordType("<22416,22420,872>",(Plan)); Inst879++; } } catch(e) {}

Plan.prototype.size = function () {
try { if (Inst887 <= 1000 && typeof (this.v.size) != "undefined") {_RecordType("<22528,22539,877>",(this.v.size)); Inst887++; } } catch(e) {}try { if (Inst888 <= 1000 && typeof (this.v) != "undefined") {_RecordType("<22528,22534,877>",(this.v)); Inst888++; } } catch(e) {}
  return this.v.size();
};
try { if (Inst884 <= 1000 && typeof (Plan.prototype.size) != "undefined") {_RecordType("<22483,22502,876>",(Plan.prototype.size)); Inst884++; } } catch(e) {}try { if (Inst885 <= 1000 && typeof (Plan.prototype) != "undefined") {_RecordType("<22483,22497,876>",(Plan.prototype)); Inst885++; } } catch(e) {}try { if (Inst886 <= 1000 && typeof (Plan) != "undefined") {_RecordType("<22483,22487,876>",(Plan)); Inst886++; } } catch(e) {}

Plan.prototype.constraintAt = function (index) {
try { if (Inst892 <= 1000 && typeof (index) != "undefined") {_RecordType("<22587,22592,880>",(index)); Inst892++; } } catch(e) {}
try { if (Inst893 <= 1000 && typeof (this.v.at) != "undefined") {_RecordType("<22605,22614,881>",(this.v.at)); Inst893++; } } catch(e) {}try { if (Inst894 <= 1000 && typeof (this.v) != "undefined") {_RecordType("<22605,22611,881>",(this.v)); Inst894++; } } catch(e) {}try { if (Inst895 <= 1000 && typeof (index) != "undefined") {_RecordType("<22615,22620,881>",(index)); Inst895++; } } catch(e) {}
  return this.v.at(index);
};
try { if (Inst889 <= 1000 && typeof (Plan.prototype.constraintAt) != "undefined") {_RecordType("<22547,22574,880>",(Plan.prototype.constraintAt)); Inst889++; } } catch(e) {}try { if (Inst890 <= 1000 && typeof (Plan.prototype) != "undefined") {_RecordType("<22547,22561,880>",(Plan.prototype)); Inst890++; } } catch(e) {}try { if (Inst891 <= 1000 && typeof (Plan) != "undefined") {_RecordType("<22547,22551,880>",(Plan)); Inst891++; } } catch(e) {}

Plan.prototype.execute = function () {
  for (var i = 0; i < this.size(); i++) {
try { if (Inst899 <= 1000 && typeof (i) != "undefined") {_RecordType("<22677,22678,885>",(i)); Inst899++; } } catch(e) {}try { if (Inst900 <= 1000 && typeof (i) != "undefined") {_RecordType("<22684,22685,885>",(i)); Inst900++; } } catch(e) {}try { if (Inst901 <= 1000 && typeof (this.size) != "undefined") {_RecordType("<22688,22697,885>",(this.size)); Inst901++; } } catch(e) {}try { if (Inst902 <= 1000 && typeof (i) != "undefined") {_RecordType("<22701,22702,885>",(i)); Inst902++; } } catch(e) {}
try { if (Inst904 <= 1000 && typeof (this.constraintAt) != "undefined") {_RecordType("<22720,22737,886>",(this.constraintAt)); Inst904++; } } catch(e) {}try { if (Inst905 <= 1000 && typeof (i) != "undefined") {_RecordType("<22738,22739,886>",(i)); Inst905++; } } catch(e) {}
    var c = this.constraintAt(i);
try { if (Inst903 <= 1000 && typeof (c) != "undefined") {_RecordType("<22716,22717,886>",(c)); Inst903++; } } catch(e) {}
try { if (Inst906 <= 1000 && typeof (c.execute) != "undefined") {_RecordType("<22746,22755,887>",(c.execute)); Inst906++; } } catch(e) {}try { if (Inst907 <= 1000 && typeof (c) != "undefined") {_RecordType("<22746,22747,887>",(c)); Inst907++; } } catch(e) {}
    c.execute();
  }
};
try { if (Inst896 <= 1000 && typeof (Plan.prototype.execute) != "undefined") {_RecordType("<22627,22649,884>",(Plan.prototype.execute)); Inst896++; } } catch(e) {}try { if (Inst897 <= 1000 && typeof (Plan.prototype) != "undefined") {_RecordType("<22627,22641,884>",(Plan.prototype)); Inst897++; } } catch(e) {}try { if (Inst898 <= 1000 && typeof (Plan) != "undefined") {_RecordType("<22627,22631,884>",(Plan)); Inst898++; } } catch(e) {}
/* --- *
 * M a i n
 * --- */

/**
 * This is the standard DeltaBlue benchmark. A long chain of equality
 * constraints is constructed with a stay constraint on one end. An
 * edit constraint is then added to the opposite end and the time is
 * measured for adding and removing this constraint, and extracting
 * and executing a constraint satisfaction plan. There are two cases.
 * In case 1, the added constraint is stronger than the stay
 * constraint and values must propagate down the entire length of the
 * chain. In case 2, the added constraint is weaker than the stay
 * constraint so it cannot be accomodated. The cost in this case is,
 * of course, very low. Typical situations lie somewhere between these
 * two extremes.
 */


try { if (Inst908 <= 1000 && typeof (chainTest) != "undefined") {_RecordType("<23515,23524,909>",(chainTest)); Inst908++; } } catch(e) {}
function chainTest(n) {
try { if (Inst909 <= 1000 && typeof (n) != "undefined") {_RecordType("<23525,23526,909>",(n)); Inst909++; } } catch(e) {}
try { if (Inst911 <= 1000 && typeof (Planner) != "undefined") {_RecordType("<23546,23553,910>",(Planner)); Inst911++; } } catch(e) {}
  planner = new Planner();
try { if (Inst910 <= 1000 && typeof (planner) != "undefined") {_RecordType("<23532,23539,910>",(planner)); Inst910++; } } catch(e) {}
  var prev = null,
      first = null,
      last = null; // Build chain of n equality constraints
try { if (Inst912 <= 1000 && typeof (prev) != "undefined") {_RecordType("<23563,23567,911>",(prev)); Inst912++; } } catch(e) {}try { if (Inst913 <= 1000 && typeof (first) != "undefined") {_RecordType("<23582,23587,912>",(first)); Inst913++; } } catch(e) {}try { if (Inst914 <= 1000 && typeof (last) != "undefined") {_RecordType("<23602,23606,913>",(last)); Inst914++; } } catch(e) {}

  for (var i = 0; i <= n; i++) {
try { if (Inst915 <= 1000 && typeof (i) != "undefined") {_RecordType("<23668,23669,915>",(i)); Inst915++; } } catch(e) {}try { if (Inst916 <= 1000 && typeof (i) != "undefined") {_RecordType("<23675,23676,915>",(i)); Inst916++; } } catch(e) {}try { if (Inst917 <= 1000 && typeof (n) != "undefined") {_RecordType("<23680,23681,915>",(n)); Inst917++; } } catch(e) {}try { if (Inst918 <= 1000 && typeof (i) != "undefined") {_RecordType("<23683,23684,915>",(i)); Inst918++; } } catch(e) {}
try { if (Inst920 <= 1000 && typeof (i) != "undefined") {_RecordType("<23711,23712,916>",(i)); Inst920++; } } catch(e) {}
    var name = "v" + i;
try { if (Inst919 <= 1000 && typeof (name) != "undefined") {_RecordType("<23698,23702,916>",(name)); Inst919++; } } catch(e) {}
try { if (Inst922 <= 1000 && typeof (Variable) != "undefined") {_RecordType("<23730,23738,917>",(Variable)); Inst922++; } } catch(e) {}try { if (Inst923 <= 1000 && typeof (name) != "undefined") {_RecordType("<23739,23743,917>",(name)); Inst923++; } } catch(e) {}
    var v = new Variable(name);
try { if (Inst921 <= 1000 && typeof (v) != "undefined") {_RecordType("<23722,23723,917>",(v)); Inst921++; } } catch(e) {}

try { if (Inst924 <= 1000 && typeof (prev) != "undefined") {_RecordType("<23755,23759,919>",(prev)); Inst924++; } } catch(e) {}
    if (prev != null) {
try { if (Inst925 <= 1000 && typeof (EqualityConstraint) != "undefined") {_RecordType("<23781,23799,920>",(EqualityConstraint)); Inst925++; } } catch(e) {}try { if (Inst926 <= 1000 && typeof (prev) != "undefined") {_RecordType("<23800,23804,920>",(prev)); Inst926++; } } catch(e) {}try { if (Inst927 <= 1000 && typeof (v) != "undefined") {_RecordType("<23806,23807,920>",(v)); Inst927++; } } catch(e) {}try { if (Inst928 <= 1000 && typeof (Strength.REQUIRED) != "undefined") {_RecordType("<23809,23826,920>",(Strength.REQUIRED)); Inst928++; } } catch(e) {}try { if (Inst929 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<23809,23817,920>",(Strength)); Inst929++; } } catch(e) {}
      new EqualityConstraint(prev, v, Strength.REQUIRED);
    }

try { if (Inst930 <= 1000 && typeof (i) != "undefined") {_RecordType("<23844,23845,923>",(i)); Inst930++; } } catch(e) {}
    if (i == 0) {
try { if (Inst932 <= 1000 && typeof (v) != "undefined") {_RecordType("<23868,23869,924>",(v)); Inst932++; } } catch(e) {}
      first = v;
try { if (Inst931 <= 1000 && typeof (first) != "undefined") {_RecordType("<23860,23865,924>",(first)); Inst931++; } } catch(e) {}
    }

try { if (Inst933 <= 1000 && typeof (i) != "undefined") {_RecordType("<23886,23887,927>",(i)); Inst933++; } } catch(e) {}try { if (Inst934 <= 1000 && typeof (n) != "undefined") {_RecordType("<23891,23892,927>",(n)); Inst934++; } } catch(e) {}
    if (i == n) {
try { if (Inst936 <= 1000 && typeof (v) != "undefined") {_RecordType("<23909,23910,928>",(v)); Inst936++; } } catch(e) {}
      last = v;
try { if (Inst935 <= 1000 && typeof (last) != "undefined") {_RecordType("<23902,23906,928>",(last)); Inst935++; } } catch(e) {}
    }

try { if (Inst938 <= 1000 && typeof (v) != "undefined") {_RecordType("<23930,23931,931>",(v)); Inst938++; } } catch(e) {}
    prev = v;
try { if (Inst937 <= 1000 && typeof (prev) != "undefined") {_RecordType("<23923,23927,931>",(prev)); Inst937++; } } catch(e) {}
  }

try { if (Inst939 <= 1000 && typeof (StayConstraint) != "undefined") {_RecordType("<23944,23958,934>",(StayConstraint)); Inst939++; } } catch(e) {}try { if (Inst940 <= 1000 && typeof (last) != "undefined") {_RecordType("<23959,23963,934>",(last)); Inst940++; } } catch(e) {}try { if (Inst941 <= 1000 && typeof (Strength.STRONG_DEFAULT) != "undefined") {_RecordType("<23965,23988,934>",(Strength.STRONG_DEFAULT)); Inst941++; } } catch(e) {}try { if (Inst942 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<23965,23973,934>",(Strength)); Inst942++; } } catch(e) {}
  new StayConstraint(last, Strength.STRONG_DEFAULT);
try { if (Inst944 <= 1000 && typeof (EditConstraint) != "undefined") {_RecordType("<24008,24022,935>",(EditConstraint)); Inst944++; } } catch(e) {}try { if (Inst945 <= 1000 && typeof (first) != "undefined") {_RecordType("<24023,24028,935>",(first)); Inst945++; } } catch(e) {}try { if (Inst946 <= 1000 && typeof (Strength.PREFERRED) != "undefined") {_RecordType("<24030,24048,935>",(Strength.PREFERRED)); Inst946++; } } catch(e) {}try { if (Inst947 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<24030,24038,935>",(Strength)); Inst947++; } } catch(e) {}
  var edit = new EditConstraint(first, Strength.PREFERRED);
try { if (Inst943 <= 1000 && typeof (edit) != "undefined") {_RecordType("<23997,24001,935>",(edit)); Inst943++; } } catch(e) {}
try { if (Inst949 <= 1000 && typeof (OrderedCollection) != "undefined") {_RecordType("<24069,24086,936>",(OrderedCollection)); Inst949++; } } catch(e) {}
  var edits = new OrderedCollection();
try { if (Inst948 <= 1000 && typeof (edits) != "undefined") {_RecordType("<24057,24062,936>",(edits)); Inst948++; } } catch(e) {}
try { if (Inst950 <= 1000 && typeof (edits.add) != "undefined") {_RecordType("<24092,24101,937>",(edits.add)); Inst950++; } } catch(e) {}try { if (Inst951 <= 1000 && typeof (edits) != "undefined") {_RecordType("<24092,24097,937>",(edits)); Inst951++; } } catch(e) {}try { if (Inst952 <= 1000 && typeof (edit) != "undefined") {_RecordType("<24102,24106,937>",(edit)); Inst952++; } } catch(e) {}
  edits.add(edit);
try { if (Inst954 <= 1000 && typeof (planner.extractPlanFromConstraints) != "undefined") {_RecordType("<24122,24156,938>",(planner.extractPlanFromConstraints)); Inst954++; } } catch(e) {}try { if (Inst955 <= 1000 && typeof (planner) != "undefined") {_RecordType("<24122,24129,938>",(planner)); Inst955++; } } catch(e) {}try { if (Inst956 <= 1000 && typeof (edits) != "undefined") {_RecordType("<24157,24162,938>",(edits)); Inst956++; } } catch(e) {}
  var plan = planner.extractPlanFromConstraints(edits);
try { if (Inst953 <= 1000 && typeof (plan) != "undefined") {_RecordType("<24115,24119,938>",(plan)); Inst953++; } } catch(e) {}

  for (var i = 0; i < 100; i++) {
try { if (Inst957 <= 1000 && typeof (i) != "undefined") {_RecordType("<24177,24178,940>",(i)); Inst957++; } } catch(e) {}try { if (Inst958 <= 1000 && typeof (i) != "undefined") {_RecordType("<24184,24185,940>",(i)); Inst958++; } } catch(e) {}try { if (Inst959 <= 1000 && typeof (i) != "undefined") {_RecordType("<24193,24194,940>",(i)); Inst959++; } } catch(e) {}
try { if (Inst962 <= 1000 && typeof (i) != "undefined") {_RecordType("<24218,24219,941>",(i)); Inst962++; } } catch(e) {}
    first.value = i;
try { if (Inst960 <= 1000 && typeof (first.value) != "undefined") {_RecordType("<24204,24215,941>",(first.value)); Inst960++; } } catch(e) {}try { if (Inst961 <= 1000 && typeof (first) != "undefined") {_RecordType("<24204,24209,941>",(first)); Inst961++; } } catch(e) {}
try { if (Inst963 <= 1000 && typeof (plan.execute) != "undefined") {_RecordType("<24225,24237,942>",(plan.execute)); Inst963++; } } catch(e) {}try { if (Inst964 <= 1000 && typeof (plan) != "undefined") {_RecordType("<24225,24229,942>",(plan)); Inst964++; } } catch(e) {}
    plan.execute();

try { if (Inst965 <= 1000 && typeof (last.value) != "undefined") {_RecordType("<24250,24260,944>",(last.value)); Inst965++; } } catch(e) {}try { if (Inst966 <= 1000 && typeof (last) != "undefined") {_RecordType("<24250,24254,944>",(last)); Inst966++; } } catch(e) {}try { if (Inst967 <= 1000 && typeof (i) != "undefined") {_RecordType("<24264,24265,944>",(i)); Inst967++; } } catch(e) {}
    if (last.value != i) {
try { if (Inst968 <= 1000 && typeof (alert) != "undefined") {_RecordType("<24275,24280,945>",(alert)); Inst968++; } } catch(e) {}
      alert("Chain test failed.");
    }
  }
}
/**
 * This test constructs a two sets of variables related to each
 * other by a simple linear transformation (scale and offset). The
 * time is measured to change a variable on either side of the
 * mapping and to change the scale and offset factors.
 */


try { if (Inst969 <= 1000 && typeof (projectionTest) != "undefined") {_RecordType("<24584,24598,957>",(projectionTest)); Inst969++; } } catch(e) {}
function projectionTest(n) {
try { if (Inst970 <= 1000 && typeof (n) != "undefined") {_RecordType("<24599,24600,957>",(n)); Inst970++; } } catch(e) {}
try { if (Inst972 <= 1000 && typeof (Planner) != "undefined") {_RecordType("<24620,24627,958>",(Planner)); Inst972++; } } catch(e) {}
  planner = new Planner();
try { if (Inst971 <= 1000 && typeof (planner) != "undefined") {_RecordType("<24606,24613,958>",(planner)); Inst971++; } } catch(e) {}
try { if (Inst974 <= 1000 && typeof (Variable) != "undefined") {_RecordType("<24649,24657,959>",(Variable)); Inst974++; } } catch(e) {}
  var scale = new Variable("scale", 10);
try { if (Inst973 <= 1000 && typeof (scale) != "undefined") {_RecordType("<24637,24642,959>",(scale)); Inst973++; } } catch(e) {}
try { if (Inst976 <= 1000 && typeof (Variable) != "undefined") {_RecordType("<24691,24699,960>",(Variable)); Inst976++; } } catch(e) {}
  var offset = new Variable("offset", 1000);
try { if (Inst975 <= 1000 && typeof (offset) != "undefined") {_RecordType("<24678,24684,960>",(offset)); Inst975++; } } catch(e) {}
  var src = null,
      dst = null;
try { if (Inst977 <= 1000 && typeof (src) != "undefined") {_RecordType("<24723,24726,961>",(src)); Inst977++; } } catch(e) {}try { if (Inst978 <= 1000 && typeof (dst) != "undefined") {_RecordType("<24741,24744,962>",(dst)); Inst978++; } } catch(e) {}
try { if (Inst980 <= 1000 && typeof (OrderedCollection) != "undefined") {_RecordType("<24771,24788,963>",(OrderedCollection)); Inst980++; } } catch(e) {}
  var dests = new OrderedCollection();
try { if (Inst979 <= 1000 && typeof (dests) != "undefined") {_RecordType("<24759,24764,963>",(dests)); Inst979++; } } catch(e) {}

  for (var i = 0; i < n; i++) {
try { if (Inst981 <= 1000 && typeof (i) != "undefined") {_RecordType("<24804,24805,965>",(i)); Inst981++; } } catch(e) {}try { if (Inst982 <= 1000 && typeof (i) != "undefined") {_RecordType("<24811,24812,965>",(i)); Inst982++; } } catch(e) {}try { if (Inst983 <= 1000 && typeof (n) != "undefined") {_RecordType("<24815,24816,965>",(n)); Inst983++; } } catch(e) {}try { if (Inst984 <= 1000 && typeof (i) != "undefined") {_RecordType("<24818,24819,965>",(i)); Inst984++; } } catch(e) {}
try { if (Inst986 <= 1000 && typeof (Variable) != "undefined") {_RecordType("<24839,24847,966>",(Variable)); Inst986++; } } catch(e) {}try { if (Inst987 <= 1000 && typeof (i) != "undefined") {_RecordType("<24856,24857,966>",(i)); Inst987++; } } catch(e) {}try { if (Inst988 <= 1000 && typeof (i) != "undefined") {_RecordType("<24859,24860,966>",(i)); Inst988++; } } catch(e) {}
    src = new Variable("src" + i, i);
try { if (Inst985 <= 1000 && typeof (src) != "undefined") {_RecordType("<24829,24832,966>",(src)); Inst985++; } } catch(e) {}
try { if (Inst990 <= 1000 && typeof (Variable) != "undefined") {_RecordType("<24877,24885,967>",(Variable)); Inst990++; } } catch(e) {}try { if (Inst991 <= 1000 && typeof (i) != "undefined") {_RecordType("<24894,24895,967>",(i)); Inst991++; } } catch(e) {}try { if (Inst992 <= 1000 && typeof (i) != "undefined") {_RecordType("<24897,24898,967>",(i)); Inst992++; } } catch(e) {}
    dst = new Variable("dst" + i, i);
try { if (Inst989 <= 1000 && typeof (dst) != "undefined") {_RecordType("<24867,24870,967>",(dst)); Inst989++; } } catch(e) {}
try { if (Inst993 <= 1000 && typeof (dests.add) != "undefined") {_RecordType("<24905,24914,968>",(dests.add)); Inst993++; } } catch(e) {}try { if (Inst994 <= 1000 && typeof (dests) != "undefined") {_RecordType("<24905,24910,968>",(dests)); Inst994++; } } catch(e) {}try { if (Inst995 <= 1000 && typeof (dst) != "undefined") {_RecordType("<24915,24918,968>",(dst)); Inst995++; } } catch(e) {}
    dests.add(dst);
try { if (Inst996 <= 1000 && typeof (StayConstraint) != "undefined") {_RecordType("<24929,24943,969>",(StayConstraint)); Inst996++; } } catch(e) {}try { if (Inst997 <= 1000 && typeof (src) != "undefined") {_RecordType("<24944,24947,969>",(src)); Inst997++; } } catch(e) {}try { if (Inst998 <= 1000 && typeof (Strength.NORMAL) != "undefined") {_RecordType("<24949,24964,969>",(Strength.NORMAL)); Inst998++; } } catch(e) {}try { if (Inst999 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<24949,24957,969>",(Strength)); Inst999++; } } catch(e) {}
    new StayConstraint(src, Strength.NORMAL);
try { if (Inst1000 <= 1000 && typeof (ScaleConstraint) != "undefined") {_RecordType("<24975,24990,970>",(ScaleConstraint)); Inst1000++; } } catch(e) {}try { if (Inst1001 <= 1000 && typeof (src) != "undefined") {_RecordType("<24991,24994,970>",(src)); Inst1001++; } } catch(e) {}try { if (Inst1002 <= 1000 && typeof (scale) != "undefined") {_RecordType("<24996,25001,970>",(scale)); Inst1002++; } } catch(e) {}try { if (Inst1003 <= 1000 && typeof (offset) != "undefined") {_RecordType("<25003,25009,970>",(offset)); Inst1003++; } } catch(e) {}try { if (Inst1004 <= 1000 && typeof (dst) != "undefined") {_RecordType("<25011,25014,970>",(dst)); Inst1004++; } } catch(e) {}try { if (Inst1005 <= 1000 && typeof (Strength.REQUIRED) != "undefined") {_RecordType("<25016,25033,970>",(Strength.REQUIRED)); Inst1005++; } } catch(e) {}try { if (Inst1006 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<25016,25024,970>",(Strength)); Inst1006++; } } catch(e) {}
    new ScaleConstraint(src, scale, offset, dst, Strength.REQUIRED);
  }

try { if (Inst1007 <= 1000 && typeof (change) != "undefined") {_RecordType("<25043,25049,973>",(change)); Inst1007++; } } catch(e) {}try { if (Inst1008 <= 1000 && typeof (src) != "undefined") {_RecordType("<25050,25053,973>",(src)); Inst1008++; } } catch(e) {}
  change(src, 17);

try { if (Inst1009 <= 1000 && typeof (dst.value) != "undefined") {_RecordType("<25067,25076,975>",(dst.value)); Inst1009++; } } catch(e) {}try { if (Inst1010 <= 1000 && typeof (dst) != "undefined") {_RecordType("<25067,25070,975>",(dst)); Inst1010++; } } catch(e) {}
  if (dst.value != 1170) {
try { if (Inst1011 <= 1000 && typeof (alert) != "undefined") {_RecordType("<25092,25097,976>",(alert)); Inst1011++; } } catch(e) {}
    alert("Projection 1 failed");
  }

try { if (Inst1012 <= 1000 && typeof (change) != "undefined") {_RecordType("<25129,25135,979>",(change)); Inst1012++; } } catch(e) {}try { if (Inst1013 <= 1000 && typeof (dst) != "undefined") {_RecordType("<25136,25139,979>",(dst)); Inst1013++; } } catch(e) {}
  change(dst, 1050);

try { if (Inst1014 <= 1000 && typeof (src.value) != "undefined") {_RecordType("<25155,25164,981>",(src.value)); Inst1014++; } } catch(e) {}try { if (Inst1015 <= 1000 && typeof (src) != "undefined") {_RecordType("<25155,25158,981>",(src)); Inst1015++; } } catch(e) {}
  if (src.value != 5) {
try { if (Inst1016 <= 1000 && typeof (alert) != "undefined") {_RecordType("<25177,25182,982>",(alert)); Inst1016++; } } catch(e) {}
    alert("Projection 2 failed");
  }

try { if (Inst1017 <= 1000 && typeof (change) != "undefined") {_RecordType("<25214,25220,985>",(change)); Inst1017++; } } catch(e) {}try { if (Inst1018 <= 1000 && typeof (scale) != "undefined") {_RecordType("<25221,25226,985>",(scale)); Inst1018++; } } catch(e) {}
  change(scale, 5);

  for (var i = 0; i < n - 1; i++) {
try { if (Inst1019 <= 1000 && typeof (i) != "undefined") {_RecordType("<25244,25245,987>",(i)); Inst1019++; } } catch(e) {}try { if (Inst1020 <= 1000 && typeof (i) != "undefined") {_RecordType("<25251,25252,987>",(i)); Inst1020++; } } catch(e) {}try { if (Inst1021 <= 1000 && typeof (n) != "undefined") {_RecordType("<25255,25256,987>",(n)); Inst1021++; } } catch(e) {}try { if (Inst1022 <= 1000 && typeof (i) != "undefined") {_RecordType("<25262,25263,987>",(i)); Inst1022++; } } catch(e) {}
try { if (Inst1023 <= 1000 && typeof (dests.at(i).value) != "undefined") {_RecordType("<25277,25294,988>",(dests.at(i).value)); Inst1023++; } } catch(e) {}try { if (Inst1024 <= 1000 && typeof (dests.at) != "undefined") {_RecordType("<25277,25285,988>",(dests.at)); Inst1024++; } } catch(e) {}try { if (Inst1025 <= 1000 && typeof (dests) != "undefined") {_RecordType("<25277,25282,988>",(dests)); Inst1025++; } } catch(e) {}try { if (Inst1026 <= 1000 && typeof (i) != "undefined") {_RecordType("<25286,25287,988>",(i)); Inst1026++; } } catch(e) {}try { if (Inst1027 <= 1000 && typeof (i) != "undefined") {_RecordType("<25298,25299,988>",(i)); Inst1027++; } } catch(e) {}
    if (dests.at(i).value != i * 5 + 1000) {
try { if (Inst1028 <= 1000 && typeof (alert) != "undefined") {_RecordType("<25320,25325,989>",(alert)); Inst1028++; } } catch(e) {}
      alert("Projection 3 failed");
    }
  }

try { if (Inst1029 <= 1000 && typeof (change) != "undefined") {_RecordType("<25363,25369,993>",(change)); Inst1029++; } } catch(e) {}try { if (Inst1030 <= 1000 && typeof (offset) != "undefined") {_RecordType("<25370,25376,993>",(offset)); Inst1030++; } } catch(e) {}
  change(offset, 2000);

  for (var i = 0; i < n - 1; i++) {
try { if (Inst1031 <= 1000 && typeof (i) != "undefined") {_RecordType("<25397,25398,995>",(i)); Inst1031++; } } catch(e) {}try { if (Inst1032 <= 1000 && typeof (i) != "undefined") {_RecordType("<25404,25405,995>",(i)); Inst1032++; } } catch(e) {}try { if (Inst1033 <= 1000 && typeof (n) != "undefined") {_RecordType("<25408,25409,995>",(n)); Inst1033++; } } catch(e) {}try { if (Inst1034 <= 1000 && typeof (i) != "undefined") {_RecordType("<25415,25416,995>",(i)); Inst1034++; } } catch(e) {}
try { if (Inst1035 <= 1000 && typeof (dests.at(i).value) != "undefined") {_RecordType("<25430,25447,996>",(dests.at(i).value)); Inst1035++; } } catch(e) {}try { if (Inst1036 <= 1000 && typeof (dests.at) != "undefined") {_RecordType("<25430,25438,996>",(dests.at)); Inst1036++; } } catch(e) {}try { if (Inst1037 <= 1000 && typeof (dests) != "undefined") {_RecordType("<25430,25435,996>",(dests)); Inst1037++; } } catch(e) {}try { if (Inst1038 <= 1000 && typeof (i) != "undefined") {_RecordType("<25439,25440,996>",(i)); Inst1038++; } } catch(e) {}try { if (Inst1039 <= 1000 && typeof (i) != "undefined") {_RecordType("<25451,25452,996>",(i)); Inst1039++; } } catch(e) {}
    if (dests.at(i).value != i * 5 + 2000) {
try { if (Inst1040 <= 1000 && typeof (alert) != "undefined") {_RecordType("<25473,25478,997>",(alert)); Inst1040++; } } catch(e) {}
      alert("Projection 4 failed");
    }
  }
}

try { if (Inst1041 <= 1000 && typeof (change) != "undefined") {_RecordType("<25525,25531,1002>",(change)); Inst1041++; } } catch(e) {}
function change(v, newValue) {
try { if (Inst1042 <= 1000 && typeof (v) != "undefined") {_RecordType("<25532,25533,1002>",(v)); Inst1042++; } } catch(e) {}try { if (Inst1043 <= 1000 && typeof (newValue) != "undefined") {_RecordType("<25535,25543,1002>",(newValue)); Inst1043++; } } catch(e) {}
try { if (Inst1045 <= 1000 && typeof (EditConstraint) != "undefined") {_RecordType("<25564,25578,1003>",(EditConstraint)); Inst1045++; } } catch(e) {}try { if (Inst1046 <= 1000 && typeof (v) != "undefined") {_RecordType("<25579,25580,1003>",(v)); Inst1046++; } } catch(e) {}try { if (Inst1047 <= 1000 && typeof (Strength.PREFERRED) != "undefined") {_RecordType("<25582,25600,1003>",(Strength.PREFERRED)); Inst1047++; } } catch(e) {}try { if (Inst1048 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<25582,25590,1003>",(Strength)); Inst1048++; } } catch(e) {}
  var edit = new EditConstraint(v, Strength.PREFERRED);
try { if (Inst1044 <= 1000 && typeof (edit) != "undefined") {_RecordType("<25553,25557,1003>",(edit)); Inst1044++; } } catch(e) {}
try { if (Inst1050 <= 1000 && typeof (OrderedCollection) != "undefined") {_RecordType("<25621,25638,1004>",(OrderedCollection)); Inst1050++; } } catch(e) {}
  var edits = new OrderedCollection();
try { if (Inst1049 <= 1000 && typeof (edits) != "undefined") {_RecordType("<25609,25614,1004>",(edits)); Inst1049++; } } catch(e) {}
try { if (Inst1051 <= 1000 && typeof (edits.add) != "undefined") {_RecordType("<25644,25653,1005>",(edits.add)); Inst1051++; } } catch(e) {}try { if (Inst1052 <= 1000 && typeof (edits) != "undefined") {_RecordType("<25644,25649,1005>",(edits)); Inst1052++; } } catch(e) {}try { if (Inst1053 <= 1000 && typeof (edit) != "undefined") {_RecordType("<25654,25658,1005>",(edit)); Inst1053++; } } catch(e) {}
  edits.add(edit);
try { if (Inst1055 <= 1000 && typeof (planner.extractPlanFromConstraints) != "undefined") {_RecordType("<25674,25708,1006>",(planner.extractPlanFromConstraints)); Inst1055++; } } catch(e) {}try { if (Inst1056 <= 1000 && typeof (planner) != "undefined") {_RecordType("<25674,25681,1006>",(planner)); Inst1056++; } } catch(e) {}try { if (Inst1057 <= 1000 && typeof (edits) != "undefined") {_RecordType("<25709,25714,1006>",(edits)); Inst1057++; } } catch(e) {}
  var plan = planner.extractPlanFromConstraints(edits);
try { if (Inst1054 <= 1000 && typeof (plan) != "undefined") {_RecordType("<25667,25671,1006>",(plan)); Inst1054++; } } catch(e) {}

  for (var i = 0; i < 10; i++) {
try { if (Inst1058 <= 1000 && typeof (i) != "undefined") {_RecordType("<25729,25730,1008>",(i)); Inst1058++; } } catch(e) {}try { if (Inst1059 <= 1000 && typeof (i) != "undefined") {_RecordType("<25736,25737,1008>",(i)); Inst1059++; } } catch(e) {}try { if (Inst1060 <= 1000 && typeof (i) != "undefined") {_RecordType("<25744,25745,1008>",(i)); Inst1060++; } } catch(e) {}
try { if (Inst1063 <= 1000 && typeof (newValue) != "undefined") {_RecordType("<25765,25773,1009>",(newValue)); Inst1063++; } } catch(e) {}
    v.value = newValue;
try { if (Inst1061 <= 1000 && typeof (v.value) != "undefined") {_RecordType("<25755,25762,1009>",(v.value)); Inst1061++; } } catch(e) {}try { if (Inst1062 <= 1000 && typeof (v) != "undefined") {_RecordType("<25755,25756,1009>",(v)); Inst1062++; } } catch(e) {}
try { if (Inst1064 <= 1000 && typeof (plan.execute) != "undefined") {_RecordType("<25779,25791,1010>",(plan.execute)); Inst1064++; } } catch(e) {}try { if (Inst1065 <= 1000 && typeof (plan) != "undefined") {_RecordType("<25779,25783,1010>",(plan)); Inst1065++; } } catch(e) {}
    plan.execute();
  }

try { if (Inst1066 <= 1000 && typeof (edit.destroyConstraint) != "undefined") {_RecordType("<25802,25824,1013>",(edit.destroyConstraint)); Inst1066++; } } catch(e) {}try { if (Inst1067 <= 1000 && typeof (edit) != "undefined") {_RecordType("<25802,25806,1013>",(edit)); Inst1067++; } } catch(e) {}
  edit.destroyConstraint();
} // Global variable holding the current planner.


var planner = null;
try { if (Inst1068 <= 1000 && typeof (planner) != "undefined") {_RecordType("<25884,25891,1017>",(planner)); Inst1068++; } } catch(e) {}

try { if (Inst1069 <= 1000 && typeof (deltaBlue) != "undefined") {_RecordType("<25910,25919,1019>",(deltaBlue)); Inst1069++; } } catch(e) {}
function deltaBlue() {
try { if (Inst1070 <= 1000 && typeof (chainTest) != "undefined") {_RecordType("<25926,25935,1020>",(chainTest)); Inst1070++; } } catch(e) {}
  chainTest(100);
try { if (Inst1071 <= 1000 && typeof (projectionTest) != "undefined") {_RecordType("<25944,25958,1021>",(projectionTest)); Inst1071++; } } catch(e) {}
  projectionTest(100);
}

for (var i = 0; i < 155; ++i) {
try { if (Inst1072 <= 1000 && typeof (i) != "undefined") {_RecordType("<25977,25978,1024>",(i)); Inst1072++; } } catch(e) {}try { if (Inst1073 <= 1000 && typeof (i) != "undefined") {_RecordType("<25984,25985,1024>",(i)); Inst1073++; } } catch(e) {}try { if (Inst1074 <= 1000 && typeof (i) != "undefined") {_RecordType("<25995,25996,1024>",(i)); Inst1074++; } } catch(e) {}
try { if (Inst1075 <= 1000 && typeof (deltaBlue) != "undefined") {_RecordType("<26002,26011,1025>",(deltaBlue)); Inst1075++; } } catch(e) {}
  deltaBlue();
}

