var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (foo) != "undefined") {_RecordType("<9,12,1>",(foo)); Inst0++; } } catch(e) {}
function foo(o) {
try { if (Inst1 <= 1000 && typeof (o) != "undefined") {_RecordType("<13,14,1>",(o)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (o[0]) != "undefined") {_RecordType("<27,31,2>",(o[0])); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (o) != "undefined") {_RecordType("<27,28,2>",(o)); Inst3++; } } catch(e) {}
  return o[0];
}

try { if (Inst4 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<36,44,5>",(noInline)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (foo) != "undefined") {_RecordType("<45,48,5>",(foo)); Inst5++; } } catch(e) {}
noInline(foo);

try { if (Inst6 <= 1000 && typeof (test) != "undefined") {_RecordType("<61,65,7>",(test)); Inst6++; } } catch(e) {}
function test(a, x) {
try { if (Inst7 <= 1000 && typeof (a) != "undefined") {_RecordType("<66,67,7>",(a)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (x) != "undefined") {_RecordType("<69,70,7>",(x)); Inst8++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (Int32Array) != "undefined") {_RecordType("<95,105,8>",(Int32Array)); Inst10++; } } catch(e) {}
  var intArray = new Int32Array(1);
try { if (Inst9 <= 1000 && typeof (intArray) != "undefined") {_RecordType("<80,88,8>",(intArray)); Inst9++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (a) != "undefined") {_RecordType("<126,127,9>",(a)); Inst13++; } } catch(e) {}
  intArray[0] = a;
try { if (Inst11 <= 1000 && typeof (intArray[0]) != "undefined") {_RecordType("<112,123,9>",(intArray[0])); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (intArray) != "undefined") {_RecordType("<112,120,9>",(intArray)); Inst12++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (Float32Array) != "undefined") {_RecordType("<152,164,10>",(Float32Array)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (intArray.buffer) != "undefined") {_RecordType("<165,180,10>",(intArray.buffer)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (intArray) != "undefined") {_RecordType("<165,173,10>",(intArray)); Inst17++; } } catch(e) {}
  var floatArray = new Float32Array(intArray.buffer);
try { if (Inst14 <= 1000 && typeof (floatArray) != "undefined") {_RecordType("<135,145,10>",(floatArray)); Inst14++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (foo) != "undefined") {_RecordType("<199,202,11>",(foo)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (floatArray) != "undefined") {_RecordType("<203,213,11>",(floatArray)); Inst20++; } } catch(e) {}
  var element = foo(floatArray);
try { if (Inst18 <= 1000 && typeof (element) != "undefined") {_RecordType("<189,196,11>",(element)); Inst18++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (element) != "undefined") {_RecordType("<231,238,12>",(element)); Inst22++; } } catch(e) {}
  var result = element + 1;
try { if (Inst21 <= 1000 && typeof (result) != "undefined") {_RecordType("<222,228,12>",(result)); Inst21++; } } catch(e) {}

try { if (Inst23 <= 1000 && typeof (result) != "undefined") {_RecordType("<256,262,14>",(result)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (x) != "undefined") {_RecordType("<271,272,14>",(x)); Inst24++; } } catch(e) {}
  if ("" + result != "" + x) {
try { if (Inst25 <= 1000 && typeof (a) != "undefined") {_RecordType("<313,314,15>",(a)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (result) != "undefined") {_RecordType("<324,330,15>",(result)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (x) != "undefined") {_RecordType("<354,355,15>",(x)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (element) != "undefined") {_RecordType("<372,379,15>",(element)); Inst28++; } } catch(e) {}
    throw "Error: bad result for " + a + ": " + result + ", but expected: " + x + "; loaded " + element + " from the array";
  }
}

for (var i = 0; i < 100000; ++i) {
try { if (Inst29 <= 1000 && typeof (i) != "undefined") {_RecordType("<417,418,19>",(i)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (i) != "undefined") {_RecordType("<424,425,19>",(i)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (i) != "undefined") {_RecordType("<438,439,19>",(i)); Inst31++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (test) != "undefined") {_RecordType("<445,449,20>",(test)); Inst32++; } } catch(e) {}
  test(0, 1);
}

try { if (Inst33 <= 1000 && typeof (test) != "undefined") {_RecordType("<460,464,23>",(test)); Inst33++; } } catch(e) {}
test(0xFFFF0000, 0 / 0);

