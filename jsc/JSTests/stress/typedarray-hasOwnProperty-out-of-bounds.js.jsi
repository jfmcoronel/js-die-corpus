var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst1 <= 1000 && typeof (Float32Array) != "undefined") {_RecordType("<16,28,1>",(Float32Array)); Inst1++; } } catch(e) {}
let array = new Float32Array(10);
try { if (Inst0 <= 1000 && typeof (array) != "undefined") {_RecordType("<4,9,1>",(array)); Inst0++; } } catch(e) {}

try { if (Inst2 <= 1000 && typeof (test) != "undefined") {_RecordType("<44,48,3>",(test)); Inst2++; } } catch(e) {}
function test(array, indicies, result) {
try { if (Inst3 <= 1000 && typeof (array) != "undefined") {_RecordType("<49,54,3>",(array)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (indicies) != "undefined") {_RecordType("<56,64,3>",(indicies)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (result) != "undefined") {_RecordType("<66,72,3>",(result)); Inst5++; } } catch(e) {}
  for (let i of indicies) {
try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<87,88,4>",(i)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (indicies) != "undefined") {_RecordType("<92,100,4>",(indicies)); Inst7++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (array.hasOwnProperty) != "undefined") {_RecordType("<112,132,5>",(array.hasOwnProperty)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (array) != "undefined") {_RecordType("<112,117,5>",(array)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<133,134,5>",(i)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (result) != "undefined") {_RecordType("<140,146,5>",(result)); Inst11++; } } catch(e) {}
    if (array.hasOwnProperty(i) !== result) {
try { if (Inst12 <= 1000 && typeof (Error) != "undefined") {_RecordType("<166,171,6>",(Error)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<193,194,6>",(i)); Inst13++; } } catch(e) {}
      throw new Error("wrong value for " + i);
    }

try { if (Inst14 <= 1000 && typeof (array.hasOwnProperty) != "undefined") {_RecordType("<212,232,9>",(array.hasOwnProperty)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (array) != "undefined") {_RecordType("<212,217,9>",(array)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (i.toString) != "undefined") {_RecordType("<233,243,9>",(i.toString)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (i) != "undefined") {_RecordType("<233,234,9>",(i)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (result) != "undefined") {_RecordType("<251,257,9>",(result)); Inst18++; } } catch(e) {}
    if (array.hasOwnProperty(i.toString()) !== result) {
try { if (Inst19 <= 1000 && typeof (Error) != "undefined") {_RecordType("<277,282,10>",(Error)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<304,305,10>",(i)); Inst20++; } } catch(e) {}
      throw new Error("wrong value for " + i + " (as String)");
    }
  }
}

try { if (Inst21 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<338,346,15>",(noInline)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (test) != "undefined") {_RecordType("<347,351,15>",(test)); Inst22++; } } catch(e) {}
noInline(test);
let interestingIndicies = [0, 1, 2, 8, 9];
try { if (Inst23 <= 1000 && typeof (interestingIndicies) != "undefined") {_RecordType("<358,377,16>",(interestingIndicies)); Inst23++; } } catch(e) {}

for (let i = 0; i < 10000; i++) {
try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<407,408,18>",(i)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<414,415,18>",(i)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (i) != "undefined") {_RecordType("<425,426,18>",(i)); Inst26++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (test) != "undefined") {_RecordType("<434,438,19>",(test)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (array) != "undefined") {_RecordType("<439,444,19>",(array)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (interestingIndicies) != "undefined") {_RecordType("<446,465,19>",(interestingIndicies)); Inst29++; } } catch(e) {}
  test(array, interestingIndicies, true);
}

interestingIndicies = [-1, 10, 100];
try { if (Inst30 <= 1000 && typeof (interestingIndicies) != "undefined") {_RecordType("<477,496,22>",(interestingIndicies)); Inst30++; } } catch(e) {}

for (let i = 0; i < 10000; i++) {
try { if (Inst31 <= 1000 && typeof (i) != "undefined") {_RecordType("<524,525,24>",(i)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (i) != "undefined") {_RecordType("<531,532,24>",(i)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (i) != "undefined") {_RecordType("<542,543,24>",(i)); Inst33++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof (test) != "undefined") {_RecordType("<551,555,25>",(test)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (array) != "undefined") {_RecordType("<556,561,25>",(array)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (interestingIndicies) != "undefined") {_RecordType("<563,582,25>",(interestingIndicies)); Inst36++; } } catch(e) {}
  test(array, interestingIndicies, false);
}

