var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (test) != "undefined") {_RecordType("<9,13,1>",(test)); Inst0++; } } catch(e) {}
function test(b, f) {
try { if (Inst1 <= 1000 && typeof (b) != "undefined") {_RecordType("<14,15,1>",(b)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (f) != "undefined") {_RecordType("<17,18,1>",(f)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (b) != "undefined") {_RecordType("<28,29,2>",(b)); Inst3++; } } catch(e) {}
  if (b) {
try { if (Inst4 <= 1000 && typeof (f) != "undefined") {_RecordType("<44,45,3>",(f)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (b) != "undefined") {_RecordType("<46,47,3>",(b)); Inst5++; } } catch(e) {}
    return f(b);
  }
}

try { if (Inst6 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<57,65,7>",(noInline)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (test) != "undefined") {_RecordType("<66,70,7>",(test)); Inst7++; } } catch(e) {}
noInline(test);

try { if (Inst8 <= 1000 && typeof (throwError) != "undefined") {_RecordType("<83,93,9>",(throwError)); Inst8++; } } catch(e) {}
function throwError(b) {
try { if (Inst9 <= 1000 && typeof (b) != "undefined") {_RecordType("<94,95,9>",(b)); Inst9++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (b) != "undefined") {_RecordType("<105,106,10>",(b)); Inst10++; } } catch(e) {}
  if (b) {
try { if (Inst12 <= 1000 && typeof (e) != "undefined") {_RecordType("<158,159,13>",(e)); Inst12++; } } catch(e) {}
    try {
try { if (Inst11 <= 1000 && typeof (Error) != "undefined") {_RecordType("<136,141,12>",(Error)); Inst11++; } } catch(e) {}
      throw new Error();
    } catch (e) {
      ;
    }
  }

  return 2;
}

try { if (Inst13 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<197,205,21>",(noInline)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (throwError) != "undefined") {_RecordType("<206,216,21>",(throwError)); Inst14++; } } catch(e) {}
noInline(throwError);

try { if (Inst15 <= 1000 && typeof (makeFoo) != "undefined") {_RecordType("<229,236,23>",(makeFoo)); Inst15++; } } catch(e) {}
function makeFoo() {
try { if (Inst16 <= 1000 && typeof (foo) != "undefined") {_RecordType("<259,262,24>",(foo)); Inst16++; } } catch(e) {}
  return function foo(b) {
try { if (Inst17 <= 1000 && typeof (b) != "undefined") {_RecordType("<263,264,24>",(b)); Inst17++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (throwError) != "undefined") {_RecordType("<272,282,25>",(throwError)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (b) != "undefined") {_RecordType("<283,284,25>",(b)); Inst19++; } } catch(e) {}
    throwError(b);
try { if (Inst20 <= 1000 && typeof (OSRExit) != "undefined") {_RecordType("<291,298,26>",(OSRExit)); Inst20++; } } catch(e) {}
    OSRExit();
  };
}

try { if (Inst22 <= 1000 && typeof (makeFoo) != "undefined") {_RecordType("<322,329,30>",(makeFoo)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (makeFoo) != "undefined") {_RecordType("<333,340,30>",(makeFoo)); Inst23++; } } catch(e) {}
let foos = [makeFoo(), makeFoo()];
try { if (Inst21 <= 1000 && typeof (foos) != "undefined") {_RecordType("<314,318,30>",(foos)); Inst21++; } } catch(e) {}

for (let i = 0; i < 10000; ++i) {
try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<355,356,32>",(i)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<362,363,32>",(i)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (i) != "undefined") {_RecordType("<375,376,32>",(i)); Inst26++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (test) != "undefined") {_RecordType("<382,386,33>",(test)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (i) != "undefined") {_RecordType("<390,391,33>",(i)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (foos[(Math.random() * 100 | 0) % foos.length]) != "undefined") {_RecordType("<398,443,33>",(foos[(Math.random() * 100 | 0) % foos.length])); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (foos) != "undefined") {_RecordType("<398,402,33>",(foos)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (Math.random) != "undefined") {_RecordType("<404,415,33>",(Math.random)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (Math) != "undefined") {_RecordType("<404,408,33>",(Math)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (foos.length) != "undefined") {_RecordType("<431,442,33>",(foos.length)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (foos) != "undefined") {_RecordType("<431,435,33>",(foos)); Inst34++; } } catch(e) {}
  test(!!(i % 2), foos[(Math.random() * 100 | 0) % foos.length]);
}

