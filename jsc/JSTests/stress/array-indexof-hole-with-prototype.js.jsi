var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<9,17,1>",(shouldBe)); Inst0++; } } catch(e) {}
function shouldBe(actual, expected) {
try { if (Inst1 <= 1000 && typeof (actual) != "undefined") {_RecordType("<18,24,1>",(actual)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (expected) != "undefined") {_RecordType("<26,34,1>",(expected)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (actual) != "undefined") {_RecordType("<44,50,2>",(actual)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (expected) != "undefined") {_RecordType("<55,63,2>",(expected)); Inst4++; } } catch(e) {}
  if (actual !== expected) {
try { if (Inst5 <= 1000 && typeof (Error) != "undefined") {_RecordType("<81,86,3>",(Error)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (actual) != "undefined") {_RecordType("<103,109,3>",(actual)); Inst6++; } } catch(e) {}
    throw new Error('bad value: ' + actual);
  }
}

Array.prototype[42] = 0;
try { if (Inst7 <= 1000 && typeof (Array.prototype[42]) != "undefined") {_RecordType("<119,138,7>",(Array.prototype[42])); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<119,134,7>",(Array.prototype)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Array) != "undefined") {_RecordType("<119,124,7>",(Array)); Inst9++; } } catch(e) {}

(function () {
try { if (Inst10 <= 1000 && typeof (indexOf) != "undefined") {_RecordType("<171,178,10>",(indexOf)); Inst10++; } } catch(e) {}
  function indexOf(array, value) {
try { if (Inst11 <= 1000 && typeof (array) != "undefined") {_RecordType("<179,184,10>",(array)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (value) != "undefined") {_RecordType("<186,191,10>",(value)); Inst12++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (array.indexOf) != "undefined") {_RecordType("<206,219,11>",(array.indexOf)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (array) != "undefined") {_RecordType("<206,211,11>",(array)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (value) != "undefined") {_RecordType("<220,225,11>",(value)); Inst15++; } } catch(e) {}
    return array.indexOf(value);
  }

try { if (Inst16 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<235,243,14>",(noInline)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (indexOf) != "undefined") {_RecordType("<244,251,14>",(indexOf)); Inst17++; } } catch(e) {}
  noInline(indexOf);
try { if (Inst19 <= 1000 && typeof (Array) != "undefined") {_RecordType("<272,277,15>",(Array)); Inst19++; } } catch(e) {}
  var array = new Array(100);
try { if (Inst18 <= 1000 && typeof (array) != "undefined") {_RecordType("<260,265,15>",(array)); Inst18++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (array.push) != "undefined") {_RecordType("<286,296,16>",(array.push)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (array) != "undefined") {_RecordType("<286,291,16>",(array)); Inst21++; } } catch(e) {}
  array.push(10);

  for (var i = 0; i < 1e5; ++i) {
try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<314,315,18>",(i)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<321,322,18>",(i)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<332,333,18>",(i)); Inst24++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<341,349,19>",(shouldBe)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (indexOf) != "undefined") {_RecordType("<350,357,19>",(indexOf)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (array) != "undefined") {_RecordType("<358,363,19>",(array)); Inst27++; } } catch(e) {}
    shouldBe(indexOf(array, 0), 42);
  }
})();

(function () {
try { if (Inst28 <= 1000 && typeof (indexOf) != "undefined") {_RecordType("<411,418,24>",(indexOf)); Inst28++; } } catch(e) {}
  function indexOf(array, value) {
try { if (Inst29 <= 1000 && typeof (array) != "undefined") {_RecordType("<419,424,24>",(array)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (value) != "undefined") {_RecordType("<426,431,24>",(value)); Inst30++; } } catch(e) {}
try { if (Inst31 <= 1000 && typeof (array.indexOf) != "undefined") {_RecordType("<446,459,25>",(array.indexOf)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (array) != "undefined") {_RecordType("<446,451,25>",(array)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (value) != "undefined") {_RecordType("<460,465,25>",(value)); Inst33++; } } catch(e) {}
    return array.indexOf(value);
  }

try { if (Inst34 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<475,483,28>",(noInline)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (indexOf) != "undefined") {_RecordType("<484,491,28>",(indexOf)); Inst35++; } } catch(e) {}
  noInline(indexOf);
try { if (Inst37 <= 1000 && typeof (Array) != "undefined") {_RecordType("<512,517,29>",(Array)); Inst37++; } } catch(e) {}
  var array = new Array(100);
try { if (Inst36 <= 1000 && typeof (array) != "undefined") {_RecordType("<500,505,29>",(array)); Inst36++; } } catch(e) {}
try { if (Inst38 <= 1000 && typeof (array.push) != "undefined") {_RecordType("<526,536,30>",(array.push)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (array) != "undefined") {_RecordType("<526,531,30>",(array)); Inst39++; } } catch(e) {}
  array.push(25.5);

  for (var i = 0; i < 1e5; ++i) {
try { if (Inst40 <= 1000 && typeof (i) != "undefined") {_RecordType("<556,557,32>",(i)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (i) != "undefined") {_RecordType("<563,564,32>",(i)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (i) != "undefined") {_RecordType("<574,575,32>",(i)); Inst42++; } } catch(e) {}
try { if (Inst43 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<583,591,33>",(shouldBe)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (indexOf) != "undefined") {_RecordType("<592,599,33>",(indexOf)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (array) != "undefined") {_RecordType("<600,605,33>",(array)); Inst45++; } } catch(e) {}
    shouldBe(indexOf(array, 0), 42);
  }
})();

