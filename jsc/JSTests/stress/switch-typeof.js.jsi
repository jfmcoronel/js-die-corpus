var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (foo) != "undefined") {_RecordType("<9,12,1>",(foo)); Inst0++; } } catch(e) {}
function foo(value) {
try { if (Inst1 <= 1000 && typeof (value) != "undefined") {_RecordType("<13,18,1>",(value)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (value) != "undefined") {_RecordType("<39,44,2>",(value)); Inst2++; } } catch(e) {}
  switch (typeof value) {
    case "undefined":
      return 0;

    case "object":
      return 1;

    case "function":
      return 2;

    case "boolean":
      return 3;

    case "number":
      return 4;

    case "string":
      return 5;

    default:
      return 6;
  }
}

try { if (Inst3 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<306,314,26>",(noInline)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (foo) != "undefined") {_RecordType("<315,318,26>",(foo)); Inst4++; } } catch(e) {}
noInline(foo);

try { if (Inst5 <= 1000 && typeof (test) != "undefined") {_RecordType("<331,335,28>",(test)); Inst5++; } } catch(e) {}
function test(value, expected) {
try { if (Inst6 <= 1000 && typeof (value) != "undefined") {_RecordType("<336,341,28>",(value)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (expected) != "undefined") {_RecordType("<343,351,28>",(expected)); Inst7++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (foo) != "undefined") {_RecordType("<370,373,29>",(foo)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (value) != "undefined") {_RecordType("<374,379,29>",(value)); Inst10++; } } catch(e) {}
  var result = foo(value);
try { if (Inst8 <= 1000 && typeof (result) != "undefined") {_RecordType("<361,367,29>",(result)); Inst8++; } } catch(e) {}

try { if (Inst11 <= 1000 && typeof (result) != "undefined") {_RecordType("<389,395,31>",(result)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (expected) != "undefined") {_RecordType("<399,407,31>",(expected)); Inst12++; } } catch(e) {}
  if (result != expected) {
try { if (Inst13 <= 1000 && typeof (value) != "undefined") {_RecordType("<451,456,32>",(value)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (result) != "undefined") {_RecordType("<466,472,32>",(result)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (expected) != "undefined") {_RecordType("<491,499,32>",(expected)); Inst15++; } } catch(e) {}
    throw "Error: bad type code for " + value + ": " + result + " (expected " + expected + ")";
  }
}

for (var i = 0; i < 10000; ++i) {
try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<523,524,36>",(i)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (i) != "undefined") {_RecordType("<530,531,36>",(i)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (i) != "undefined") {_RecordType("<543,544,36>",(i)); Inst18++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (test) != "undefined") {_RecordType("<550,554,37>",(test)); Inst19++; } } catch(e) {}
  test(void 0, 0);
try { if (Inst20 <= 1000 && typeof (test) != "undefined") {_RecordType("<569,573,38>",(test)); Inst20++; } } catch(e) {}
  test({}, 1);
try { if (Inst21 <= 1000 && typeof (test) != "undefined") {_RecordType("<584,588,39>",(test)); Inst21++; } } catch(e) {}
  test(function () {
    return 42;
  }, 2);
try { if (Inst22 <= 1000 && typeof (test) != "undefined") {_RecordType("<629,633,42>",(test)); Inst22++; } } catch(e) {}
  test(true, 3);
try { if (Inst23 <= 1000 && typeof (test) != "undefined") {_RecordType("<646,650,43>",(test)); Inst23++; } } catch(e) {}
  test(42, 4);
try { if (Inst24 <= 1000 && typeof (test) != "undefined") {_RecordType("<661,665,44>",(test)); Inst24++; } } catch(e) {}
  test(42.5, 4);
try { if (Inst25 <= 1000 && typeof (test) != "undefined") {_RecordType("<678,682,45>",(test)); Inst25++; } } catch(e) {}
  test("hello", 5);
}

