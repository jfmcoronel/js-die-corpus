var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (arrayEq) != "undefined") {_RecordType("<9,16,1>",(arrayEq)); Inst0++; } } catch(e) {}
function arrayEq(a, b) {
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<17,18,1>",(a)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (b) != "undefined") {_RecordType("<20,21,1>",(b)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<31,39,2>",(a.length)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (a) != "undefined") {_RecordType("<31,32,2>",(a)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (b.length) != "undefined") {_RecordType("<44,52,2>",(b.length)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (b) != "undefined") {_RecordType("<44,45,2>",(b)); Inst6++; } } catch(e) {}
  if (a.length !== b.length) {
    return false;
  }

  for (let i = 0; i < a.length; i++) {
try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<90,91,6>",(i)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<97,98,6>",(i)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<101,109,6>",(a.length)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (a) != "undefined") {_RecordType("<101,102,6>",(a)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<111,112,6>",(i)); Inst11++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (a[i]) != "undefined") {_RecordType("<126,130,7>",(a[i])); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (a) != "undefined") {_RecordType("<126,127,7>",(a)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (b[i]) != "undefined") {_RecordType("<135,139,7>",(b[i])); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (b) != "undefined") {_RecordType("<135,136,7>",(b)); Inst15++; } } catch(e) {}
    if (a[i] !== b[i]) {
      return false;
    }
  }

  return true;
}

{
  array = [1, 2];
try { if (Inst16 <= 1000 && typeof (array) != "undefined") {_RecordType("<196,201,16>",(array)); Inst16++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<214,235,17>",(Object.defineProperty)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Object) != "undefined") {_RecordType("<214,220,17>",(Object)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (array) != "undefined") {_RecordType("<236,241,17>",(array)); Inst19++; } } catch(e) {}
  Object.defineProperty(array, 2, {
    get: () => {
      return 1;
    }
  });

  for (let i = 0; i < 100000; i++) {
try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<305,306,23>",(i)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<312,313,23>",(i)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<324,325,23>",(i)); Inst22++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (arrayEq) != "undefined") {_RecordType("<340,347,24>",(arrayEq)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (Array.prototype.concat.call) != "undefined") {_RecordType("<348,375,24>",(Array.prototype.concat.call)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Array.prototype.concat) != "undefined") {_RecordType("<348,370,24>",(Array.prototype.concat)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<348,363,24>",(Array.prototype)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (Array) != "undefined") {_RecordType("<348,353,24>",(Array)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (array) != "undefined") {_RecordType("<376,381,24>",(array)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (array) != "undefined") {_RecordType("<383,388,24>",(array)); Inst29++; } } catch(e) {}
    if (!arrayEq(Array.prototype.concat.call(array, array), [1, 2, 1, 1, 2, 1])) {
      throw "failed normally with a getter";
    }

try { if (Inst30 <= 1000 && typeof (arrayEq) != "undefined") {_RecordType("<475,482,28>",(arrayEq)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (Array.prototype.concat.call) != "undefined") {_RecordType("<483,510,28>",(Array.prototype.concat.call)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (Array.prototype.concat) != "undefined") {_RecordType("<483,505,28>",(Array.prototype.concat)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<483,498,28>",(Array.prototype)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (Array) != "undefined") {_RecordType("<483,488,28>",(Array)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (array) != "undefined") {_RecordType("<515,520,28>",(array)); Inst35++; } } catch(e) {}
    if (!arrayEq(Array.prototype.concat.call([], array), [1, 2, 1])) {
      throw "failed with undecided and a getter";
    }
  } // Test with indexed types on prototype.


  array = [1, 2];
try { if (Inst36 <= 1000 && typeof (array) != "undefined") {_RecordType("<642,647,34>",(array)); Inst36++; } } catch(e) {}
  array.length = 3;
try { if (Inst37 <= 1000 && typeof (array.length) != "undefined") {_RecordType("<660,672,35>",(array.length)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (array) != "undefined") {_RecordType("<660,665,35>",(array)); Inst38++; } } catch(e) {}
  Array.prototype[2] = 1;
try { if (Inst39 <= 1000 && typeof (Array.prototype[2]) != "undefined") {_RecordType("<680,698,36>",(Array.prototype[2])); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<680,695,36>",(Array.prototype)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (Array) != "undefined") {_RecordType("<680,685,36>",(Array)); Inst41++; } } catch(e) {}

  for (let i = 0; i < 100000; i++) {
try { if (Inst42 <= 1000 && typeof (i) != "undefined") {_RecordType("<716,717,38>",(i)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (i) != "undefined") {_RecordType("<723,724,38>",(i)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (i) != "undefined") {_RecordType("<735,736,38>",(i)); Inst44++; } } catch(e) {}
try { if (Inst45 <= 1000 && typeof (arrayEq) != "undefined") {_RecordType("<751,758,39>",(arrayEq)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (Array.prototype.concat.call) != "undefined") {_RecordType("<759,786,39>",(Array.prototype.concat.call)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (Array.prototype.concat) != "undefined") {_RecordType("<759,781,39>",(Array.prototype.concat)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<759,774,39>",(Array.prototype)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (Array) != "undefined") {_RecordType("<759,764,39>",(Array)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (array) != "undefined") {_RecordType("<787,792,39>",(array)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (array) != "undefined") {_RecordType("<794,799,39>",(array)); Inst51++; } } catch(e) {}
    if (!arrayEq(Array.prototype.concat.call(array, array), [1, 2, 1, 1, 2, 1])) {
      throw "failed normally with an indexed prototype";
    }

try { if (Inst52 <= 1000 && typeof (arrayEq) != "undefined") {_RecordType("<898,905,43>",(arrayEq)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (Array.prototype.concat.call) != "undefined") {_RecordType("<906,933,43>",(Array.prototype.concat.call)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (Array.prototype.concat) != "undefined") {_RecordType("<906,928,43>",(Array.prototype.concat)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<906,921,43>",(Array.prototype)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (Array) != "undefined") {_RecordType("<906,911,43>",(Array)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (array) != "undefined") {_RecordType("<938,943,43>",(array)); Inst57++; } } catch(e) {}
    if (!arrayEq(Array.prototype.concat.call([], array), [1, 2, 1])) {
      throw "failed with undecided and an indexed prototype";
    }
  }
}

