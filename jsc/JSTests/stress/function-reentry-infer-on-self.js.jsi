var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (thingy) != "undefined") {_RecordType("<9,15,1>",(thingy)); Inst0++; } } catch(e) {}
function thingy(f) {
try { if (Inst1 <= 1000 && typeof (f) != "undefined") {_RecordType("<16,17,1>",(f)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (f) != "undefined") {_RecordType("<23,24,2>",(f)); Inst2++; } } catch(e) {}
  f();
}

try { if (Inst3 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<31,39,5>",(noInline)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (thingy) != "undefined") {_RecordType("<40,46,5>",(thingy)); Inst4++; } } catch(e) {}
noInline(thingy);

try { if (Inst5 <= 1000 && typeof (foo) != "undefined") {_RecordType("<59,62,7>",(foo)); Inst5++; } } catch(e) {}
function foo(a) {
try { if (Inst6 <= 1000 && typeof (a) != "undefined") {_RecordType("<63,64,7>",(a)); Inst6++; } } catch(e) {}
  var x;
try { if (Inst7 <= 1000 && typeof (x) != "undefined") {_RecordType("<74,75,8>",(x)); Inst7++; } } catch(e) {}

try { if (Inst8 <= 1000 && typeof (a) != "undefined") {_RecordType("<84,85,10>",(a)); Inst8++; } } catch(e) {}
  if (a) {
try { if (Inst10 <= 1000 && typeof (a) != "undefined") {_RecordType("<97,98,11>",(a)); Inst10++; } } catch(e) {}
    x = a;
try { if (Inst9 <= 1000 && typeof (x) != "undefined") {_RecordType("<93,94,11>",(x)); Inst9++; } } catch(e) {}
  }

try { if (Inst11 <= 1000 && typeof (thingy) != "undefined") {_RecordType("<107,113,14>",(thingy)); Inst11++; } } catch(e) {}
  thingy(function () {
try { if (Inst12 <= 1000 && typeof (x) != "undefined") {_RecordType("<139,140,15>",(x)); Inst12++; } } catch(e) {}
    return x;
  });
  var result = 0;
try { if (Inst13 <= 1000 && typeof (result) != "undefined") {_RecordType("<154,160,17>",(result)); Inst13++; } } catch(e) {}

  for (var i = 0; i < 100000; ++i) {
try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<178,179,19>",(i)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<185,186,19>",(i)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<199,200,19>",(i)); Inst16++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (x) != "undefined") {_RecordType("<218,219,20>",(x)); Inst18++; } } catch(e) {}
    result += x;
try { if (Inst17 <= 1000 && typeof (result) != "undefined") {_RecordType("<208,214,20>",(result)); Inst17++; } } catch(e) {}
  }

try { if (Inst19 <= 1000 && typeof (result) != "undefined") {_RecordType("<235,241,23>",(result)); Inst19++; } } catch(e) {}
  return result;
}

try { if (Inst20 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<246,254,26>",(noInline)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (foo) != "undefined") {_RecordType("<255,258,26>",(foo)); Inst21++; } } catch(e) {}
noInline(foo);

for (var i = 0; i < 10; ++i) {
try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<271,272,28>",(i)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<278,279,28>",(i)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<288,289,28>",(i)); Inst24++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (foo) != "undefined") {_RecordType("<308,311,29>",(foo)); Inst26++; } } catch(e) {}
  var result = foo(42);
try { if (Inst25 <= 1000 && typeof (result) != "undefined") {_RecordType("<299,305,29>",(result)); Inst25++; } } catch(e) {}

try { if (Inst27 <= 1000 && typeof (result) != "undefined") {_RecordType("<324,330,31>",(result)); Inst27++; } } catch(e) {}
  if (result != 4200000) {
try { if (Inst28 <= 1000 && typeof (result) != "undefined") {_RecordType("<385,391,32>",(result)); Inst28++; } } catch(e) {}
    throw "Error: bad first result: " + result;
  }
}

try { if (Inst30 <= 1000 && typeof (foo) != "undefined") {_RecordType("<413,416,36>",(foo)); Inst30++; } } catch(e) {}
var result = foo(0);
try { if (Inst29 <= 1000 && typeof (result) != "undefined") {_RecordType("<404,410,36>",(result)); Inst29++; } } catch(e) {}

try { if (Inst31 <= 1000 && typeof (result) != "undefined") {_RecordType("<431,437,38>",(result)); Inst31++; } } catch(e) {}
if ("" + result != "NaN") {
try { if (Inst32 <= 1000 && typeof (result) != "undefined") {_RecordType("<489,495,39>",(result)); Inst32++; } } catch(e) {}
  throw "Error: bad result at end: " + result;
}

