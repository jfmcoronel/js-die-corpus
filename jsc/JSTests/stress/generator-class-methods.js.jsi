var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<9,17,1>",(shouldBe)); Inst0++; } } catch(e) {}
function shouldBe(actual, expected) {
try { if (Inst1 <= 1000 && typeof (actual) != "undefined") {_RecordType("<18,24,1>",(actual)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (expected) != "undefined") {_RecordType("<26,34,1>",(expected)); Inst2++; } } catch(e) {}
  ;
}

try { if (Inst3 <= 1000 && typeof (shouldThrow) != "undefined") {_RecordType("<54,65,5>",(shouldThrow)); Inst3++; } } catch(e) {}
function shouldThrow(func, errorMessage) {
try { if (Inst4 <= 1000 && typeof (func) != "undefined") {_RecordType("<66,70,5>",(func)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (errorMessage) != "undefined") {_RecordType("<72,84,5>",(errorMessage)); Inst5++; } } catch(e) {}
  var errorThrown = false;
try { if (Inst6 <= 1000 && typeof (errorThrown) != "undefined") {_RecordType("<94,105,6>",(errorThrown)); Inst6++; } } catch(e) {}
  var error = null;
try { if (Inst7 <= 1000 && typeof (error) != "undefined") {_RecordType("<121,126,7>",(error)); Inst7++; } } catch(e) {}

try { if (Inst9 <= 1000 && typeof (e) != "undefined") {_RecordType("<167,168,11>",(e)); Inst9++; } } catch(e) {}
  try {
try { if (Inst8 <= 1000 && typeof (func) != "undefined") {_RecordType("<148,152,10>",(func)); Inst8++; } } catch(e) {}
    func();
  } catch (e) {
    errorThrown = true;
try { if (Inst10 <= 1000 && typeof (errorThrown) != "undefined") {_RecordType("<176,187,12>",(errorThrown)); Inst10++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (e) != "undefined") {_RecordType("<208,209,13>",(e)); Inst12++; } } catch(e) {}
    error = e;
try { if (Inst11 <= 1000 && typeof (error) != "undefined") {_RecordType("<200,205,13>",(error)); Inst11++; } } catch(e) {}
  }
}

class A {
  *gen() {
    yield this;
    yield this;
    return 42;
  }

  static *staticGen() {
    yield this;
    yield this;
    return 42;
  }

}
try { if (Inst13 <= 1000 && typeof (A) != "undefined") {_RecordType("<224,225,17>",(A)); Inst13++; } } catch(e) {}

{
try { if (Inst15 <= 1000 && typeof (A) != "undefined") {_RecordType("<386,387,33>",(A)); Inst15++; } } catch(e) {}
  let a = new A();
try { if (Inst14 <= 1000 && typeof (a) != "undefined") {_RecordType("<378,379,33>",(a)); Inst14++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (a.gen) != "undefined") {_RecordType("<401,406,34>",(a.gen)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (a) != "undefined") {_RecordType("<401,402,34>",(a)); Inst18++; } } catch(e) {}
  let g = a.gen();
try { if (Inst16 <= 1000 && typeof (g) != "undefined") {_RecordType("<397,398,34>",(g)); Inst16++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<412,420,35>",(shouldBe)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (g.next().value) != "undefined") {_RecordType("<421,435,35>",(g.next().value)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (g.next) != "undefined") {_RecordType("<421,427,35>",(g.next)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (g) != "undefined") {_RecordType("<421,422,35>",(g)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (a) != "undefined") {_RecordType("<437,438,35>",(a)); Inst23++; } } catch(e) {}
  shouldBe(g.next().value, a);
try { if (Inst24 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<443,451,36>",(shouldBe)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (g.next().value) != "undefined") {_RecordType("<452,466,36>",(g.next().value)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (g.next) != "undefined") {_RecordType("<452,458,36>",(g.next)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (g) != "undefined") {_RecordType("<452,453,36>",(g)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (a) != "undefined") {_RecordType("<468,469,36>",(a)); Inst28++; } } catch(e) {}
  shouldBe(g.next().value, a);
try { if (Inst29 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<474,482,37>",(shouldBe)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (g.next().value) != "undefined") {_RecordType("<483,497,37>",(g.next().value)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (g.next) != "undefined") {_RecordType("<483,489,37>",(g.next)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (g) != "undefined") {_RecordType("<483,484,37>",(g)); Inst32++; } } catch(e) {}
  shouldBe(g.next().value, 42);
try { if (Inst33 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<506,514,38>",(shouldBe)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (g.next().done) != "undefined") {_RecordType("<515,528,38>",(g.next().done)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (g.next) != "undefined") {_RecordType("<515,521,38>",(g.next)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (g) != "undefined") {_RecordType("<515,516,38>",(g)); Inst36++; } } catch(e) {}
  shouldBe(g.next().done, true);
}
{
try { if (Inst38 <= 1000 && typeof (A) != "undefined") {_RecordType("<555,556,41>",(A)); Inst38++; } } catch(e) {}
  let a = new A();
try { if (Inst37 <= 1000 && typeof (a) != "undefined") {_RecordType("<547,548,41>",(a)); Inst37++; } } catch(e) {}
try { if (Inst39 <= 1000 && typeof (shouldThrow) != "undefined") {_RecordType("<562,573,42>",(shouldThrow)); Inst39++; } } catch(e) {}
  shouldThrow(() => {
try { if (Inst41 <= 1000 && typeof (a.gen) != "undefined") {_RecordType("<598,603,43>",(a.gen)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (a) != "undefined") {_RecordType("<598,599,43>",(a)); Inst42++; } } catch(e) {}
    let g = new a.gen();
try { if (Inst40 <= 1000 && typeof (g) != "undefined") {_RecordType("<590,591,43>",(g)); Inst40++; } } catch(e) {}
  }, `TypeError: function is not a constructor (evaluating 'new a.gen()')`);
}
{
try { if (Inst44 <= 1000 && typeof (A.staticGen) != "undefined") {_RecordType("<698,709,47>",(A.staticGen)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (A) != "undefined") {_RecordType("<698,699,47>",(A)); Inst45++; } } catch(e) {}
  let g = A.staticGen();
try { if (Inst43 <= 1000 && typeof (g) != "undefined") {_RecordType("<694,695,47>",(g)); Inst43++; } } catch(e) {}
try { if (Inst46 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<715,723,48>",(shouldBe)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (g.next().value) != "undefined") {_RecordType("<724,738,48>",(g.next().value)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (g.next) != "undefined") {_RecordType("<724,730,48>",(g.next)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (g) != "undefined") {_RecordType("<724,725,48>",(g)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (A) != "undefined") {_RecordType("<740,741,48>",(A)); Inst50++; } } catch(e) {}
  shouldBe(g.next().value, A);
try { if (Inst51 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<746,754,49>",(shouldBe)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (g.next().value) != "undefined") {_RecordType("<755,769,49>",(g.next().value)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (g.next) != "undefined") {_RecordType("<755,761,49>",(g.next)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (g) != "undefined") {_RecordType("<755,756,49>",(g)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (A) != "undefined") {_RecordType("<771,772,49>",(A)); Inst55++; } } catch(e) {}
  shouldBe(g.next().value, A);
try { if (Inst56 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<777,785,50>",(shouldBe)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (g.next().value) != "undefined") {_RecordType("<786,800,50>",(g.next().value)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (g.next) != "undefined") {_RecordType("<786,792,50>",(g.next)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (g) != "undefined") {_RecordType("<786,787,50>",(g)); Inst59++; } } catch(e) {}
  shouldBe(g.next().value, 42);
try { if (Inst60 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<809,817,51>",(shouldBe)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (g.next().done) != "undefined") {_RecordType("<818,831,51>",(g.next().done)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (g.next) != "undefined") {_RecordType("<818,824,51>",(g.next)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (g) != "undefined") {_RecordType("<818,819,51>",(g)); Inst63++; } } catch(e) {}
  shouldBe(g.next().done, true);
}
{
try { if (Inst64 <= 1000 && typeof (shouldThrow) != "undefined") {_RecordType("<846,857,54>",(shouldThrow)); Inst64++; } } catch(e) {}
  shouldThrow(() => {
try { if (Inst66 <= 1000 && typeof (A.staticGen) != "undefined") {_RecordType("<882,893,55>",(A.staticGen)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (A) != "undefined") {_RecordType("<882,883,55>",(A)); Inst67++; } } catch(e) {}
    let g = new A.staticGen();
try { if (Inst65 <= 1000 && typeof (g) != "undefined") {_RecordType("<874,875,55>",(g)); Inst65++; } } catch(e) {}
  }, `TypeError: function is not a constructor (evaluating 'new A.staticGen()')`);
}

