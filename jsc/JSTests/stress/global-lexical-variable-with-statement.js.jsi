var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (assert) != "undefined") {_RecordType("<9,15,1>",(assert)); Inst0++; } } catch(e) {}
function assert(cond) {
try { if (Inst1 <= 1000 && typeof (cond) != "undefined") {_RecordType("<16,20,1>",(cond)); Inst1++; } } catch(e) {}
  ;
}

try { if (Inst2 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<31,39,5>",(noInline)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (assert) != "undefined") {_RecordType("<40,46,5>",(assert)); Inst3++; } } catch(e) {}
noInline(assert);

try { if (Inst4 <= 1000 && typeof (shouldThrowInvalidConstAssignment) != "undefined") {_RecordType("<59,92,7>",(shouldThrowInvalidConstAssignment)); Inst4++; } } catch(e) {}
function shouldThrowInvalidConstAssignment(f) {
try { if (Inst5 <= 1000 && typeof (f) != "undefined") {_RecordType("<93,94,7>",(f)); Inst5++; } } catch(e) {}
  var threw = false;
try { if (Inst6 <= 1000 && typeof (threw) != "undefined") {_RecordType("<104,109,8>",(threw)); Inst6++; } } catch(e) {}

try { if (Inst8 <= 1000 && typeof (e) != "undefined") {_RecordType("<148,149,12>",(e)); Inst8++; } } catch(e) {}
  try {
try { if (Inst7 <= 1000 && typeof (f) != "undefined") {_RecordType("<132,133,11>",(f)); Inst7++; } } catch(e) {}
    f();
  } catch (e) {
try { if (Inst9 <= 1000 && typeof (e.name.indexOf) != "undefined") {_RecordType("<161,175,13>",(e.name.indexOf)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (e.name) != "undefined") {_RecordType("<161,167,13>",(e.name)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (e) != "undefined") {_RecordType("<161,162,13>",(e)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (e.message.indexOf) != "undefined") {_RecordType("<199,216,13>",(e.message.indexOf)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (e.message) != "undefined") {_RecordType("<199,208,13>",(e.message)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (e) != "undefined") {_RecordType("<199,200,13>",(e)); Inst14++; } } catch(e) {}
    if (e.name.indexOf("TypeError") !== -1 && e.message.indexOf("readonly") !== -1) {
      threw = true;
try { if (Inst15 <= 1000 && typeof (threw) != "undefined") {_RecordType("<245,250,14>",(threw)); Inst15++; } } catch(e) {}
    }
  }

try { if (Inst16 <= 1000 && typeof (threw) != "undefined") {_RecordType("<272,277,18>",(threw)); Inst16++; } } catch(e) {}
  threw;
}

try { if (Inst17 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<282,290,21>",(noInline)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (shouldThrowInvalidConstAssignment) != "undefined") {_RecordType("<291,324,21>",(shouldThrowInvalidConstAssignment)); Inst18++; } } catch(e) {}
noInline(shouldThrowInvalidConstAssignment);

try { if (Inst19 <= 1000 && typeof (makeObj) != "undefined") {_RecordType("<337,344,23>",(makeObj)); Inst19++; } } catch(e) {}
function makeObj() {
  return {
    foo: 20
  };
}

try { if (Inst20 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<380,388,29>",(noInline)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (makeObj) != "undefined") {_RecordType("<389,396,29>",(makeObj)); Inst21++; } } catch(e) {}
noInline(makeObj);
let foo = "foo";
try { if (Inst22 <= 1000 && typeof (foo) != "undefined") {_RecordType("<403,406,30>",(foo)); Inst22++; } } catch(e) {}
const bar = "bar";
try { if (Inst23 <= 1000 && typeof (bar) != "undefined") {_RecordType("<422,425,31>",(bar)); Inst23++; } } catch(e) {}

for (var i = 0; i < 100; i++) {
try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<445,446,33>",(i)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<452,453,33>",(i)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (i) != "undefined") {_RecordType("<461,462,33>",(i)); Inst26++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (makeObj) != "undefined") {_RecordType("<476,483,34>",(makeObj)); Inst27++; } } catch(e) {}
  with (makeObj()) {
try { if (Inst28 <= 1000 && typeof (foo) != "undefined") {_RecordType("<493,496,35>",(foo)); Inst28++; } } catch(e) {}
    foo === 20;
try { if (Inst29 <= 1000 && typeof (bar) != "undefined") {_RecordType("<509,512,36>",(bar)); Inst29++; } } catch(e) {}
    bar === "bar";
try { if (Inst30 <= 1000 && typeof (shouldThrowInvalidConstAssignment) != "undefined") {_RecordType("<528,561,37>",(shouldThrowInvalidConstAssignment)); Inst30++; } } catch(e) {}
    shouldThrowInvalidConstAssignment(function () {
      bar = 20;
try { if (Inst31 <= 1000 && typeof (bar) != "undefined") {_RecordType("<582,585,38>",(bar)); Inst31++; } } catch(e) {}
    });
  }
}

