var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (truth) != "undefined") {_RecordType("<9,14,1>",(truth)); Inst0++; } } catch(e) {}
function truth() {
  return true;
}

try { if (Inst1 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<37,45,5>",(noInline)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (truth) != "undefined") {_RecordType("<46,51,5>",(truth)); Inst2++; } } catch(e) {}
noInline(truth);

try { if (Inst3 <= 1000 && typeof (assert) != "undefined") {_RecordType("<64,70,7>",(assert)); Inst3++; } } catch(e) {}
function assert(cond) {
try { if (Inst4 <= 1000 && typeof (cond) != "undefined") {_RecordType("<71,75,7>",(cond)); Inst4++; } } catch(e) {}
  ;
}

try { if (Inst5 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<86,94,11>",(noInline)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (assert) != "undefined") {_RecordType("<95,101,11>",(assert)); Inst6++; } } catch(e) {}
noInline(assert);

try { if (Inst7 <= 1000 && typeof (shouldThrowInvalidConstAssignment) != "undefined") {_RecordType("<114,147,13>",(shouldThrowInvalidConstAssignment)); Inst7++; } } catch(e) {}
function shouldThrowInvalidConstAssignment(f) {
try { if (Inst8 <= 1000 && typeof (f) != "undefined") {_RecordType("<148,149,13>",(f)); Inst8++; } } catch(e) {}
  var threw = false;
try { if (Inst9 <= 1000 && typeof (threw) != "undefined") {_RecordType("<159,164,14>",(threw)); Inst9++; } } catch(e) {}

try { if (Inst11 <= 1000 && typeof (e) != "undefined") {_RecordType("<203,204,18>",(e)); Inst11++; } } catch(e) {}
  try {
try { if (Inst10 <= 1000 && typeof (f) != "undefined") {_RecordType("<187,188,17>",(f)); Inst10++; } } catch(e) {}
    f();
  } catch (e) {
    ;
  }
}

try { if (Inst12 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<221,229,23>",(noInline)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (shouldThrowInvalidConstAssignment) != "undefined") {_RecordType("<230,263,23>",(shouldThrowInvalidConstAssignment)); Inst13++; } } catch(e) {}
noInline(shouldThrowInvalidConstAssignment); // Tests

const NUM_LOOPS = 100;
try { if (Inst14 <= 1000 && typeof (NUM_LOOPS) != "undefined") {_RecordType("<282,291,25>",(NUM_LOOPS)); Inst14++; } } catch(e) {}
;

(function () {
try { if (Inst15 <= 1000 && typeof (foo) != "undefined") {_RecordType("<328,331,29>",(foo)); Inst15++; } } catch(e) {}
  function foo() {
    const x = 40;
try { if (Inst16 <= 1000 && typeof (x) != "undefined") {_RecordType("<346,347,30>",(x)); Inst16++; } } catch(e) {}
    with ({
      x: 100
    }) {
try { if (Inst17 <= 1000 && typeof (x) != "undefined") {_RecordType("<394,395,34>",(x)); Inst17++; } } catch(e) {}
      x === 100;
    }
    with ({
      y: 100
    }) {
try { if (Inst18 <= 1000 && typeof (x) != "undefined") {_RecordType("<451,452,39>",(x)); Inst18++; } } catch(e) {}
      x === 40;
    }
  }

try { if (Inst19 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<474,482,43>",(noInline)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (foo) != "undefined") {_RecordType("<483,486,43>",(foo)); Inst20++; } } catch(e) {}
  noInline(foo);

try { if (Inst21 <= 1000 && typeof (bar) != "undefined") {_RecordType("<501,504,45>",(bar)); Inst21++; } } catch(e) {}
  function bar() {
    const x = 40;
try { if (Inst22 <= 1000 && typeof (x) != "undefined") {_RecordType("<519,520,46>",(x)); Inst22++; } } catch(e) {}

try { if (Inst23 <= 1000 && typeof (capX) != "undefined") {_RecordType("<541,545,48>",(capX)); Inst23++; } } catch(e) {}
    function capX() {
try { if (Inst24 <= 1000 && typeof (x) != "undefined") {_RecordType("<563,564,49>",(x)); Inst24++; } } catch(e) {}
      return x;
    }

    with ({
      x: 100
    }) {
try { if (Inst25 <= 1000 && typeof (truth) != "undefined") {_RecordType("<617,622,55>",(truth)); Inst25++; } } catch(e) {}
      if (truth()) {
        const x = 50;
try { if (Inst26 <= 1000 && typeof (x) != "undefined") {_RecordType("<642,643,56>",(x)); Inst26++; } } catch(e) {}

        const capX = function () {
try { if (Inst28 <= 1000 && typeof (x) != "undefined") {_RecordType("<703,704,59>",(x)); Inst28++; } } catch(e) {}
          return x;
        };
try { if (Inst27 <= 1000 && typeof (capX) != "undefined") {_RecordType("<665,669,58>",(capX)); Inst27++; } } catch(e) {}

try { if (Inst29 <= 1000 && typeof (x) != "undefined") {_RecordType("<726,727,62>",(x)); Inst29++; } } catch(e) {}
        x === 50;
try { if (Inst30 <= 1000 && typeof (capX) != "undefined") {_RecordType("<744,748,63>",(capX)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (x) != "undefined") {_RecordType("<755,756,63>",(x)); Inst31++; } } catch(e) {}
        capX() === x;
      }

try { if (Inst32 <= 1000 && typeof (x) != "undefined") {_RecordType("<773,774,66>",(x)); Inst32++; } } catch(e) {}
      x === 100;
try { if (Inst33 <= 1000 && typeof (capX) != "undefined") {_RecordType("<790,794,67>",(capX)); Inst33++; } } catch(e) {}
      capX() === 40;
    }
    with ({
      y: 100
    }) {
try { if (Inst34 <= 1000 && typeof (truth) != "undefined") {_RecordType("<855,860,72>",(truth)); Inst34++; } } catch(e) {}
      if (truth()) {
        const x = 50;
try { if (Inst35 <= 1000 && typeof (x) != "undefined") {_RecordType("<880,881,73>",(x)); Inst35++; } } catch(e) {}

        const capX = function () {
try { if (Inst37 <= 1000 && typeof (x) != "undefined") {_RecordType("<941,942,76>",(x)); Inst37++; } } catch(e) {}
          return x;
        };
try { if (Inst36 <= 1000 && typeof (capX) != "undefined") {_RecordType("<903,907,75>",(capX)); Inst36++; } } catch(e) {}

try { if (Inst38 <= 1000 && typeof (x) != "undefined") {_RecordType("<964,965,79>",(x)); Inst38++; } } catch(e) {}
        x === 50;
try { if (Inst39 <= 1000 && typeof (capX) != "undefined") {_RecordType("<982,986,80>",(capX)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (x) != "undefined") {_RecordType("<993,994,80>",(x)); Inst40++; } } catch(e) {}
        capX() === x;
      }

try { if (Inst41 <= 1000 && typeof (x) != "undefined") {_RecordType("<1011,1012,83>",(x)); Inst41++; } } catch(e) {}
      x === 40;
try { if (Inst42 <= 1000 && typeof (capX) != "undefined") {_RecordType("<1027,1031,84>",(capX)); Inst42++; } } catch(e) {}
      capX() === 40;
    }
  }

try { if (Inst43 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<1055,1063,88>",(noInline)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (bar) != "undefined") {_RecordType("<1064,1067,88>",(bar)); Inst44++; } } catch(e) {}
  noInline(bar);

try { if (Inst45 <= 1000 && typeof (baz) != "undefined") {_RecordType("<1082,1085,90>",(baz)); Inst45++; } } catch(e) {}
  function baz() {
    const x = 40;
try { if (Inst46 <= 1000 && typeof (x) != "undefined") {_RecordType("<1100,1101,91>",(x)); Inst46++; } } catch(e) {}

try { if (Inst47 <= 1000 && typeof (capX) != "undefined") {_RecordType("<1122,1126,93>",(capX)); Inst47++; } } catch(e) {}
    function capX() {
try { if (Inst48 <= 1000 && typeof (x) != "undefined") {_RecordType("<1144,1145,94>",(x)); Inst48++; } } catch(e) {}
      return x;
    }

    with ({
      x: 100
    }) {
try { if (Inst49 <= 1000 && typeof (truth) != "undefined") {_RecordType("<1198,1203,100>",(truth)); Inst49++; } } catch(e) {}
      if (truth()) {
        const x = 50;
try { if (Inst50 <= 1000 && typeof (x) != "undefined") {_RecordType("<1223,1224,101>",(x)); Inst50++; } } catch(e) {}
try { if (Inst51 <= 1000 && typeof (x) != "undefined") {_RecordType("<1239,1240,102>",(x)); Inst51++; } } catch(e) {}
        x === 50;
      }

try { if (Inst52 <= 1000 && typeof (x) != "undefined") {_RecordType("<1264,1265,105>",(x)); Inst52++; } } catch(e) {}
      x === 100;
try { if (Inst53 <= 1000 && typeof (capX) != "undefined") {_RecordType("<1281,1285,106>",(capX)); Inst53++; } } catch(e) {}
      capX() === 40;
    }
    with ({
      y: 100
    }) {
try { if (Inst54 <= 1000 && typeof (truth) != "undefined") {_RecordType("<1346,1351,111>",(truth)); Inst54++; } } catch(e) {}
      if (truth()) {
        const x = 50;
try { if (Inst55 <= 1000 && typeof (x) != "undefined") {_RecordType("<1371,1372,112>",(x)); Inst55++; } } catch(e) {}
try { if (Inst56 <= 1000 && typeof (x) != "undefined") {_RecordType("<1387,1388,113>",(x)); Inst56++; } } catch(e) {}
        x === 50;
      }

try { if (Inst57 <= 1000 && typeof (x) != "undefined") {_RecordType("<1412,1413,116>",(x)); Inst57++; } } catch(e) {}
      x === 40;
try { if (Inst58 <= 1000 && typeof (capX) != "undefined") {_RecordType("<1428,1432,117>",(capX)); Inst58++; } } catch(e) {}
      capX() === 40;
    }
  }

try { if (Inst59 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<1456,1464,121>",(noInline)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (baz) != "undefined") {_RecordType("<1465,1468,121>",(baz)); Inst60++; } } catch(e) {}
  noInline(baz);

  for (let i = 0; i < NUM_LOOPS; i++) {
try { if (Inst61 <= 1000 && typeof (i) != "undefined") {_RecordType("<1483,1484,123>",(i)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (i) != "undefined") {_RecordType("<1490,1491,123>",(i)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (NUM_LOOPS) != "undefined") {_RecordType("<1494,1503,123>",(NUM_LOOPS)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (i) != "undefined") {_RecordType("<1505,1506,123>",(i)); Inst64++; } } catch(e) {}
try { if (Inst65 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1516,1519,124>",(foo)); Inst65++; } } catch(e) {}
    foo();
try { if (Inst66 <= 1000 && typeof (bar) != "undefined") {_RecordType("<1527,1530,125>",(bar)); Inst66++; } } catch(e) {}
    bar();
try { if (Inst67 <= 1000 && typeof (baz) != "undefined") {_RecordType("<1538,1541,126>",(baz)); Inst67++; } } catch(e) {}
    baz();
  }
})();

;

(function () {
try { if (Inst68 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1585,1588,133>",(foo)); Inst68++; } } catch(e) {}
  function foo() {
    const x = 40;
try { if (Inst69 <= 1000 && typeof (x) != "undefined") {_RecordType("<1603,1604,134>",(x)); Inst69++; } } catch(e) {}
    with ({
      x: 100
    }) {
try { if (Inst70 <= 1000 && typeof (x) != "undefined") {_RecordType("<1651,1652,138>",(x)); Inst70++; } } catch(e) {}
      x === 100;
      x = 20;
try { if (Inst71 <= 1000 && typeof (x) != "undefined") {_RecordType("<1668,1669,139>",(x)); Inst71++; } } catch(e) {}
try { if (Inst72 <= 1000 && typeof (x) != "undefined") {_RecordType("<1682,1683,140>",(x)); Inst72++; } } catch(e) {}
      x === 20;
    }
try { if (Inst73 <= 1000 && typeof (x) != "undefined") {_RecordType("<1702,1703,142>",(x)); Inst73++; } } catch(e) {}
    x === 40;
    with ({
      y: 100
    }) {
try { if (Inst74 <= 1000 && typeof (x) != "undefined") {_RecordType("<1752,1753,146>",(x)); Inst74++; } } catch(e) {}
      x === 40;
      x = 100;
try { if (Inst75 <= 1000 && typeof (x) != "undefined") {_RecordType("<1768,1769,147>",(x)); Inst75++; } } catch(e) {}
    }
  }

  for (let i = 0; i < NUM_LOOPS; ++i) {
try { if (Inst76 <= 1000 && typeof (i) != "undefined") {_RecordType("<1799,1800,151>",(i)); Inst76++; } } catch(e) {}try { if (Inst77 <= 1000 && typeof (i) != "undefined") {_RecordType("<1806,1807,151>",(i)); Inst77++; } } catch(e) {}try { if (Inst78 <= 1000 && typeof (NUM_LOOPS) != "undefined") {_RecordType("<1810,1819,151>",(NUM_LOOPS)); Inst78++; } } catch(e) {}try { if (Inst79 <= 1000 && typeof (i) != "undefined") {_RecordType("<1823,1824,151>",(i)); Inst79++; } } catch(e) {}
try { if (Inst80 <= 1000 && typeof (shouldThrowInvalidConstAssignment) != "undefined") {_RecordType("<1832,1865,152>",(shouldThrowInvalidConstAssignment)); Inst80++; } } catch(e) {}try { if (Inst81 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1866,1869,152>",(foo)); Inst81++; } } catch(e) {}
    shouldThrowInvalidConstAssignment(foo);
  }
})();

