var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
var testCase = function (actual, expected, message) {
try { if (Inst1 <= 1000 && typeof (actual) != "undefined") {_RecordType("<25,31,1>",(actual)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (expected) != "undefined") {_RecordType("<33,41,1>",(expected)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (message) != "undefined") {_RecordType("<43,50,1>",(message)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (actual) != "undefined") {_RecordType("<60,66,2>",(actual)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (expected) != "undefined") {_RecordType("<71,79,2>",(expected)); Inst5++; } } catch(e) {}
  if (actual !== expected) {
try { if (Inst6 <= 1000 && typeof (message) != "undefined") {_RecordType("<93,100,3>",(message)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (expected) != "undefined") {_RecordType("<120,128,3>",(expected)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (actual) != "undefined") {_RecordType("<148,154,3>",(actual)); Inst8++; } } catch(e) {}
    throw message + ". Expected '" + expected + "', but was '" + actual + "'";
  }
};
try { if (Inst0 <= 1000 && typeof (testCase) != "undefined") {_RecordType("<4,12,1>",(testCase)); Inst0++; } } catch(e) {}

try { if (Inst9 <= 1000 && typeof (run) != "undefined") {_RecordType("<179,182,7>",(run)); Inst9++; } } catch(e) {}
function run(count) {
try { if (Inst10 <= 1000 && typeof (count) != "undefined") {_RecordType("<183,188,7>",(count)); Inst10++; } } catch(e) {}
  var result = true;
try { if (Inst11 <= 1000 && typeof (result) != "undefined") {_RecordType("<198,204,8>",(result)); Inst11++; } } catch(e) {}

  for (var i = 0; i < count; i++) {
try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<225,226,10>",(i)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<232,233,10>",(i)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (count) != "undefined") {_RecordType("<236,241,10>",(count)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<243,244,10>",(i)); Inst15++; } } catch(e) {}
    var Obj = function (name) {
try { if (Inst17 <= 1000 && typeof (name) != "undefined") {_RecordType("<274,278,11>",(name)); Inst17++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (name) != "undefined") {_RecordType("<300,304,12>",(name)); Inst19++; } } catch(e) {}
      this.name = name;
try { if (Inst18 <= 1000 && typeof (this.name) != "undefined") {_RecordType("<288,297,12>",(this.name)); Inst18++; } } catch(e) {}

try { if (Inst21 <= 1000 && typeof (this.name) != "undefined") {_RecordType("<334,343,14>",(this.name)); Inst21++; } } catch(e) {}
      this.getName = () => this.name;
try { if (Inst20 <= 1000 && typeof (this.getName) != "undefined") {_RecordType("<313,325,14>",(this.getName)); Inst20++; } } catch(e) {}
    };
try { if (Inst16 <= 1000 && typeof (Obj) != "undefined") {_RecordType("<258,261,11>",(Obj)); Inst16++; } } catch(e) {}

try { if (Inst23 <= 1000 && typeof (Obj) != "undefined") {_RecordType("<371,374,17>",(Obj)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<384,385,17>",(i)); Inst24++; } } catch(e) {}
    var obj = new Obj("Item" + i);
try { if (Inst22 <= 1000 && typeof (obj) != "undefined") {_RecordType("<361,364,17>",(obj)); Inst22++; } } catch(e) {}

try { if (Inst25 <= 1000 && typeof (obj.name) != "undefined") {_RecordType("<397,405,19>",(obj.name)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (obj) != "undefined") {_RecordType("<397,400,19>",(obj)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (obj.getName) != "undefined") {_RecordType("<410,421,19>",(obj.getName)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (obj) != "undefined") {_RecordType("<410,413,19>",(obj)); Inst28++; } } catch(e) {}
    if (obj.name !== obj.getName()) {
      result = false;
try { if (Inst29 <= 1000 && typeof (result) != "undefined") {_RecordType("<433,439,20>",(result)); Inst29++; } } catch(e) {}
    }
  }

try { if (Inst30 <= 1000 && typeof (result) != "undefined") {_RecordType("<469,475,24>",(result)); Inst30++; } } catch(e) {}
  return result;
}

try { if (Inst31 <= 1000 && typeof (testCase) != "undefined") {_RecordType("<480,488,27>",(testCase)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (run) != "undefined") {_RecordType("<489,492,27>",(run)); Inst32++; } } catch(e) {}
testCase(run(10000), true, "Error: Error: during execution of arrow function 10000 times");

