var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (assert) != "undefined") {_RecordType("<9,15,1>",(assert)); Inst0++; } } catch(e) {}
function assert(b) {
try { if (Inst1 <= 1000 && typeof (b) != "undefined") {_RecordType("<16,17,1>",(b)); Inst1++; } } catch(e) {}
  ;
}

let theTarget = {
  x: 30
};
try { if (Inst2 <= 1000 && typeof (theTarget) != "undefined") {_RecordType("<32,41,5>",(theTarget)); Inst2++; } } catch(e) {}
let handler = {
  get: function (target, propName, proxyArg) {
try { if (Inst4 <= 1000 && typeof (target) != "undefined") {_RecordType("<90,96,9>",(target)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (propName) != "undefined") {_RecordType("<98,106,9>",(propName)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (proxyArg) != "undefined") {_RecordType("<108,116,9>",(proxyArg)); Inst6++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (target) != "undefined") {_RecordType("<124,130,10>",(target)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (theTarget) != "undefined") {_RecordType("<135,144,10>",(theTarget)); Inst8++; } } catch(e) {}
    target === theTarget;
try { if (Inst9 <= 1000 && typeof (proxyArg) != "undefined") {_RecordType("<150,158,11>",(proxyArg)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (obj) != "undefined") {_RecordType("<163,166,11>",(obj)); Inst10++; } } catch(e) {}
    proxyArg === obj;

try { if (Inst11 <= 1000 && typeof (propName) != "undefined") {_RecordType("<177,185,13>",(propName)); Inst11++; } } catch(e) {}
    if (propName === "y") {
      return 45;
    }

try { if (Inst12 <= 1000 && typeof (propName) != "undefined") {_RecordType("<225,233,17>",(propName)); Inst12++; } } catch(e) {}
    propName === "x";
try { if (Inst13 <= 1000 && typeof (target[propName]) != "undefined") {_RecordType("<254,270,18>",(target[propName])); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (target) != "undefined") {_RecordType("<254,260,18>",(target)); Inst14++; } } catch(e) {}
    return target[propName];
  }
};
try { if (Inst3 <= 1000 && typeof (handler) != "undefined") {_RecordType("<61,68,8>",(handler)); Inst3++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<295,300,21>",(Proxy)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (theTarget) != "undefined") {_RecordType("<301,310,21>",(theTarget)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (handler) != "undefined") {_RecordType("<312,319,21>",(handler)); Inst18++; } } catch(e) {}
let proxy = new Proxy(theTarget, handler);
try { if (Inst15 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<283,288,21>",(proxy)); Inst15++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (Object.create) != "undefined") {_RecordType("<332,345,22>",(Object.create)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Object) != "undefined") {_RecordType("<332,338,22>",(Object)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<346,351,22>",(proxy)); Inst22++; } } catch(e) {}
let obj = Object.create(proxy);
try { if (Inst19 <= 1000 && typeof (obj) != "undefined") {_RecordType("<326,329,22>",(obj)); Inst19++; } } catch(e) {}

for (let i = 0; i < 1000; i++) {
try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<364,365,24>",(i)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<371,372,24>",(i)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<381,382,24>",(i)); Inst25++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (obj.x) != "undefined") {_RecordType("<390,395,25>",(obj.x)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (obj) != "undefined") {_RecordType("<390,393,25>",(obj)); Inst27++; } } catch(e) {}
  obj.x === 30;
try { if (Inst28 <= 1000 && typeof (obj.y) != "undefined") {_RecordType("<406,411,26>",(obj.y)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (obj) != "undefined") {_RecordType("<406,409,26>",(obj)); Inst29++; } } catch(e) {}
  obj.y === 45;
}

