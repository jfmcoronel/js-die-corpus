var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (map) != "undefined") {_RecordType("<9,12,1>",(map)); Inst0++; } } catch(e) {}
function map(e, t, i) {
try { if (Inst1 <= 1000 && typeof (e) != "undefined") {_RecordType("<13,14,1>",(e)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (t) != "undefined") {_RecordType("<16,17,1>",(t)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (i) != "undefined") {_RecordType("<19,20,1>",(i)); Inst3++; } } catch(e) {}
  var r;
try { if (Inst4 <= 1000 && typeof (r) != "undefined") {_RecordType("<30,31,2>",(r)); Inst4++; } } catch(e) {}
  var o = 0;
try { if (Inst5 <= 1000 && typeof (o) != "undefined") {_RecordType("<39,40,3>",(o)); Inst5++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (e.length) != "undefined") {_RecordType("<56,64,4>",(e.length)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (e) != "undefined") {_RecordType("<56,57,4>",(e)); Inst8++; } } catch(e) {}
  var s = e.length;
try { if (Inst6 <= 1000 && typeof (s) != "undefined") {_RecordType("<52,53,4>",(s)); Inst6++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (n) != "undefined") {_RecordType("<76,77,5>",(n)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (e) != "undefined") {_RecordType("<78,79,5>",(e)); Inst11++; } } catch(e) {}
  var a = n(e);
try { if (Inst9 <= 1000 && typeof (a) != "undefined") {_RecordType("<72,73,5>",(a)); Inst9++; } } catch(e) {}
  var l = [];
try { if (Inst12 <= 1000 && typeof (l) != "undefined") {_RecordType("<88,89,6>",(l)); Inst12++; } } catch(e) {}

try { if (Inst13 <= 1000 && typeof (a) != "undefined") {_RecordType("<103,104,8>",(a)); Inst13++; } } catch(e) {}
  if (a) {
    for (; s > o; o++) {
try { if (Inst14 <= 1000 && typeof (s) != "undefined") {_RecordType("<119,120,9>",(s)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (o) != "undefined") {_RecordType("<123,124,9>",(o)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (o) != "undefined") {_RecordType("<126,127,9>",(o)); Inst16++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (t) != "undefined") {_RecordType("<143,144,10>",(t)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (e[o]) != "undefined") {_RecordType("<145,149,10>",(e[o])); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (e) != "undefined") {_RecordType("<145,146,10>",(e)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (o) != "undefined") {_RecordType("<151,152,10>",(o)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<154,155,10>",(i)); Inst22++; } } catch(e) {}
      r = t(e[o], o, i);
try { if (Inst17 <= 1000 && typeof (r) != "undefined") {_RecordType("<139,140,10>",(r)); Inst17++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (r) != "undefined") {_RecordType("<172,173,11>",(r)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (l.push) != "undefined") {_RecordType("<177,183,11>",(l.push)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (l) != "undefined") {_RecordType("<177,178,11>",(l)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (r) != "undefined") {_RecordType("<184,185,11>",(r)); Inst26++; } } catch(e) {}
      null != r && l.push(r);
    }
  }

try { if (Inst27 <= 1000 && typeof (l) != "undefined") {_RecordType("<208,209,15>",(l)); Inst27++; } } catch(e) {}
  return l;
}

try { if (Inst28 <= 1000 && typeof (n) != "undefined") {_RecordType("<223,224,18>",(n)); Inst28++; } } catch(e) {}
function n(e) {
try { if (Inst29 <= 1000 && typeof (e) != "undefined") {_RecordType("<225,226,18>",(e)); Inst29++; } } catch(e) {}
try { if (Inst31 <= 1000 && typeof (e) != "undefined") {_RecordType("<252,253,19>",(e)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (e.length) != "undefined") {_RecordType("<257,265,19>",(e.length)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (e) != "undefined") {_RecordType("<257,258,19>",(e)); Inst33++; } } catch(e) {}
  var t = "length" in e && e.length;
try { if (Inst30 <= 1000 && typeof (t) != "undefined") {_RecordType("<236,237,19>",(t)); Inst30++; } } catch(e) {}
try { if (Inst35 <= 1000 && typeof (e) != "undefined") {_RecordType("<284,285,20>",(e)); Inst35++; } } catch(e) {}
  var n = typeof e;
try { if (Inst34 <= 1000 && typeof (n) != "undefined") {_RecordType("<273,274,20>",(n)); Inst34++; } } catch(e) {}
try { if (Inst36 <= 1000 && typeof (n) != "undefined") {_RecordType("<311,312,21>",(n)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (t) != "undefined") {_RecordType("<316,317,21>",(t)); Inst37++; } } catch(e) {}
  return "function" === n || t;
}

try { if (Inst38 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<322,330,24>",(noInline)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (map) != "undefined") {_RecordType("<331,334,24>",(map)); Inst39++; } } catch(e) {}
noInline(map);

try { if (Inst40 <= 1000 && typeof (one) != "undefined") {_RecordType("<347,350,26>",(one)); Inst40++; } } catch(e) {}
function one() {
  return 1;
}

for (i = 0; i < 20000; i++) {
try { if (Inst41 <= 1000 && typeof (i) != "undefined") {_RecordType("<375,376,30>",(i)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (i) != "undefined") {_RecordType("<382,383,30>",(i)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (i) != "undefined") {_RecordType("<393,394,30>",(i)); Inst43++; } } catch(e) {}
try { if (Inst44 <= 1000 && typeof (map) != "undefined") {_RecordType("<402,405,31>",(map)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (one) != "undefined") {_RecordType("<410,413,31>",(one)); Inst45++; } } catch(e) {}
  map([], one, "");
} // This should throw an exception but it shouldn't crash.


try { if (Inst48 <= 1000 && typeof (e) != "undefined") {_RecordType("<517,518,37>",(e)); Inst48++; } } catch(e) {}
try {
try { if (Inst46 <= 1000 && typeof (map) != "undefined") {_RecordType("<490,493,36>",(map)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (one) != "undefined") {_RecordType("<498,501,36>",(one)); Inst47++; } } catch(e) {}
  map("", one, "");
} catch (e) {
  ;
}

