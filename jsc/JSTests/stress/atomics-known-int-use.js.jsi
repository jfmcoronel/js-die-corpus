var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//@ skip
// Break type inference.
var o = {
  f: 42.5
};
try { if (Inst0 <= 1000 && typeof (o) != "undefined") {_RecordType("<38,39,3>",(o)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (foo) != "undefined") {_RecordType("<67,70,7>",(foo)); Inst1++; } } catch(e) {}
function foo(a, i) {
try { if (Inst2 <= 1000 && typeof (a) != "undefined") {_RecordType("<71,72,7>",(a)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (i) != "undefined") {_RecordType("<74,75,7>",(i)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (Atomics.exchange) != "undefined") {_RecordType("<88,104,8>",(Atomics.exchange)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Atomics) != "undefined") {_RecordType("<88,95,8>",(Atomics)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (a) != "undefined") {_RecordType("<105,106,8>",(a)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (i.f) != "undefined") {_RecordType("<108,111,8>",(i.f)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<108,109,8>",(i)); Inst8++; } } catch(e) {}
  return Atomics.exchange(a, i.f, 42);
}

try { if (Inst9 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<121,129,11>",(noInline)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (foo) != "undefined") {_RecordType("<130,133,11>",(foo)); Inst10++; } } catch(e) {}
noInline(foo);
try { if (Inst12 <= 1000 && typeof (Int32Array) != "undefined") {_RecordType("<152,162,12>",(Int32Array)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (SharedArrayBuffer) != "undefined") {_RecordType("<167,184,12>",(SharedArrayBuffer)); Inst13++; } } catch(e) {}
var array = new Int32Array(new SharedArrayBuffer(4));
try { if (Inst11 <= 1000 && typeof (array) != "undefined") {_RecordType("<140,145,12>",(array)); Inst11++; } } catch(e) {}

for (var i = 0; i < 10000; ++i) {
try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<200,201,14>",(i)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<207,208,14>",(i)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<220,221,14>",(i)); Inst16++; } } catch(e) {}
  array[0] = 13;
try { if (Inst17 <= 1000 && typeof (array[0]) != "undefined") {_RecordType("<227,235,15>",(array[0])); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (array) != "undefined") {_RecordType("<227,232,15>",(array)); Inst18++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (foo) != "undefined") {_RecordType("<257,260,16>",(foo)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (array) != "undefined") {_RecordType("<261,266,16>",(array)); Inst21++; } } catch(e) {}
  var result = foo(array, {
    f: 0
  });
try { if (Inst19 <= 1000 && typeof (result) != "undefined") {_RecordType("<248,254,16>",(result)); Inst19++; } } catch(e) {}

try { if (Inst22 <= 1000 && typeof (result) != "undefined") {_RecordType("<292,298,20>",(result)); Inst22++; } } catch(e) {}
  if (result != 13) {
try { if (Inst23 <= 1000 && typeof (result) != "undefined") {_RecordType("<350,356,21>",(result)); Inst23++; } } catch(e) {}
    throw "Error in loop: bad result: " + result;
  }

try { if (Inst24 <= 1000 && typeof (array[0]) != "undefined") {_RecordType("<369,377,24>",(array[0])); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (array) != "undefined") {_RecordType("<369,374,24>",(array)); Inst25++; } } catch(e) {}
  if (array[0] != 42) {
try { if (Inst26 <= 1000 && typeof (array[0]) != "undefined") {_RecordType("<437,445,25>",(array[0])); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (array) != "undefined") {_RecordType("<437,442,25>",(array)); Inst27++; } } catch(e) {}
    throw "Error in loop: bad value in array: " + array[0];
  }
}

var success = false;
try { if (Inst28 <= 1000 && typeof (success) != "undefined") {_RecordType("<458,465,29>",(success)); Inst28++; } } catch(e) {}

try { if (Inst35 <= 1000 && typeof (e) != "undefined") {_RecordType("<572,573,37>",(e)); Inst35++; } } catch(e) {}
try {
  array[0] = 14;
try { if (Inst29 <= 1000 && typeof (array[0]) != "undefined") {_RecordType("<484,492,32>",(array[0])); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (array) != "undefined") {_RecordType("<484,489,32>",(array)); Inst30++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (foo) != "undefined") {_RecordType("<514,517,33>",(foo)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (array) != "undefined") {_RecordType("<518,523,33>",(array)); Inst33++; } } catch(e) {}
  var result = foo(array, {
    f: 42.5
  });
try { if (Inst31 <= 1000 && typeof (result) != "undefined") {_RecordType("<505,511,33>",(result)); Inst31++; } } catch(e) {}
  success = true;
try { if (Inst34 <= 1000 && typeof (success) != "undefined") {_RecordType("<547,554,36>",(success)); Inst34++; } } catch(e) {}
} catch (e) {
try { if (Inst36 <= 1000 && typeof (e.name) != "undefined") {_RecordType("<583,589,38>",(e.name)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (e) != "undefined") {_RecordType("<583,584,38>",(e)); Inst37++; } } catch(e) {}
  if (e.name != "RangeError") {
try { if (Inst38 <= 1000 && typeof (e) != "undefined") {_RecordType("<647,648,39>",(e)); Inst38++; } } catch(e) {}
    throw "Error: bad error type: " + e;
  }
}

try { if (Inst39 <= 1000 && typeof (success) != "undefined") {_RecordType("<661,668,43>",(success)); Inst39++; } } catch(e) {}
if (success) {
  throw "Error: expected to fail, but didn't.";
}

