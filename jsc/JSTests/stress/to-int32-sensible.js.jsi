var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<9,17,1>",(shouldBe)); Inst0++; } } catch(e) {}
function shouldBe(actual, expected) {
try { if (Inst1 <= 1000 && typeof (actual) != "undefined") {_RecordType("<18,24,1>",(actual)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (expected) != "undefined") {_RecordType("<26,34,1>",(expected)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (actual) != "undefined") {_RecordType("<44,50,2>",(actual)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (expected) != "undefined") {_RecordType("<55,63,2>",(expected)); Inst4++; } } catch(e) {}
  if (actual !== expected) {
try { if (Inst5 <= 1000 && typeof (Error) != "undefined") {_RecordType("<81,86,3>",(Error)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (actual) != "undefined") {_RecordType("<103,109,3>",(actual)); Inst6++; } } catch(e) {}
    throw new Error('bad value: ' + actual);
  }
} // ValueToInt32(DoubleRep)


try { if (Inst7 <= 1000 && typeof (toInt32) != "undefined") {_RecordType("<156,163,8>",(toInt32)); Inst7++; } } catch(e) {}
function toInt32(number) {
try { if (Inst8 <= 1000 && typeof (number) != "undefined") {_RecordType("<164,170,8>",(number)); Inst8++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (number) != "undefined") {_RecordType("<183,189,9>",(number)); Inst9++; } } catch(e) {}
  return number * 0.5 >> 0;
}

try { if (Inst10 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<205,213,12>",(noInline)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (toInt32) != "undefined") {_RecordType("<214,221,12>",(toInt32)); Inst11++; } } catch(e) {}
noInline(toInt32);

for (var i = 0; i < 1e5; ++i) {
try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<234,235,14>",(i)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<241,242,14>",(i)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<252,253,14>",(i)); Inst14++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (toInt32) != "undefined") {_RecordType("<259,266,15>",(toInt32)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<267,268,15>",(i)); Inst16++; } } catch(e) {}
  toInt32(i * 1.0);
}

try { if (Inst17 <= 1000 && typeof (test) != "undefined") {_RecordType("<289,293,18>",(test)); Inst17++; } } catch(e) {}
function test(number) {
try { if (Inst18 <= 1000 && typeof (number) != "undefined") {_RecordType("<294,300,18>",(number)); Inst18++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (toInt32) != "undefined") {_RecordType("<313,320,19>",(toInt32)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (number) != "undefined") {_RecordType("<321,327,19>",(number)); Inst20++; } } catch(e) {}
  return toInt32(number * 2);
}

const INT32_MAX = 2147483647;
try { if (Inst21 <= 1000 && typeof (INT32_MAX) != "undefined") {_RecordType("<343,352,22>",(INT32_MAX)); Inst21++; } } catch(e) {}
const INT32_MIN = -2147483648;
try { if (Inst22 <= 1000 && typeof (INT32_MIN) != "undefined") {_RecordType("<373,382,23>",(INT32_MIN)); Inst22++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<398,406,24>",(shouldBe)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (test) != "undefined") {_RecordType("<407,411,24>",(test)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (INT32_MAX) != "undefined") {_RecordType("<412,421,24>",(INT32_MAX)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (INT32_MAX) != "undefined") {_RecordType("<428,437,24>",(INT32_MAX)); Inst26++; } } catch(e) {}
shouldBe(test(INT32_MAX - 1), INT32_MAX - 1);
try { if (Inst27 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<444,452,25>",(shouldBe)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (test) != "undefined") {_RecordType("<453,457,25>",(test)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (INT32_MAX) != "undefined") {_RecordType("<458,467,25>",(INT32_MAX)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (INT32_MAX) != "undefined") {_RecordType("<476,485,25>",(INT32_MAX)); Inst30++; } } catch(e) {}
shouldBe(test(INT32_MAX - 0.5), INT32_MAX - 1);
try { if (Inst31 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<492,500,26>",(shouldBe)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (test) != "undefined") {_RecordType("<501,505,26>",(test)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (INT32_MAX) != "undefined") {_RecordType("<506,515,26>",(INT32_MAX)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (INT32_MAX) != "undefined") {_RecordType("<518,527,26>",(INT32_MAX)); Inst34++; } } catch(e) {}
shouldBe(test(INT32_MAX), INT32_MAX);
try { if (Inst35 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<530,538,27>",(shouldBe)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (test) != "undefined") {_RecordType("<539,543,27>",(test)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (INT32_MAX) != "undefined") {_RecordType("<544,553,27>",(INT32_MAX)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (INT32_MAX) != "undefined") {_RecordType("<562,571,27>",(INT32_MAX)); Inst38++; } } catch(e) {}
shouldBe(test(INT32_MAX + 0.5), INT32_MAX);
try { if (Inst39 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<574,582,28>",(shouldBe)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (test) != "undefined") {_RecordType("<583,587,28>",(test)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (INT32_MAX) != "undefined") {_RecordType("<588,597,28>",(INT32_MAX)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (INT32_MIN) != "undefined") {_RecordType("<604,613,28>",(INT32_MIN)); Inst42++; } } catch(e) {}
shouldBe(test(INT32_MAX + 1), INT32_MIN);
try { if (Inst43 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<616,624,29>",(shouldBe)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (test) != "undefined") {_RecordType("<625,629,29>",(test)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (INT32_MIN) != "undefined") {_RecordType("<630,639,29>",(INT32_MIN)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (INT32_MAX) != "undefined") {_RecordType("<646,655,29>",(INT32_MAX)); Inst46++; } } catch(e) {}
shouldBe(test(INT32_MIN - 1), INT32_MAX);
try { if (Inst47 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<658,666,30>",(shouldBe)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (test) != "undefined") {_RecordType("<667,671,30>",(test)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (INT32_MIN) != "undefined") {_RecordType("<672,681,30>",(INT32_MIN)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (INT32_MIN) != "undefined") {_RecordType("<690,699,30>",(INT32_MIN)); Inst50++; } } catch(e) {}
shouldBe(test(INT32_MIN - 0.5), INT32_MIN);
try { if (Inst51 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<702,710,31>",(shouldBe)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (test) != "undefined") {_RecordType("<711,715,31>",(test)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (INT32_MIN) != "undefined") {_RecordType("<716,725,31>",(INT32_MIN)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (INT32_MIN) != "undefined") {_RecordType("<728,737,31>",(INT32_MIN)); Inst54++; } } catch(e) {}
shouldBe(test(INT32_MIN), INT32_MIN);
try { if (Inst55 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<740,748,32>",(shouldBe)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (test) != "undefined") {_RecordType("<749,753,32>",(test)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (INT32_MIN) != "undefined") {_RecordType("<754,763,32>",(INT32_MIN)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (INT32_MIN) != "undefined") {_RecordType("<772,781,32>",(INT32_MIN)); Inst58++; } } catch(e) {}
shouldBe(test(INT32_MIN + 0.5), INT32_MIN + 1);
try { if (Inst59 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<788,796,33>",(shouldBe)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (test) != "undefined") {_RecordType("<797,801,33>",(test)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (INT32_MIN) != "undefined") {_RecordType("<802,811,33>",(INT32_MIN)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (INT32_MIN) != "undefined") {_RecordType("<818,827,33>",(INT32_MIN)); Inst62++; } } catch(e) {}
shouldBe(test(INT32_MIN + 1), INT32_MIN + 1);
try { if (Inst63 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<834,842,34>",(shouldBe)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (test) != "undefined") {_RecordType("<843,847,34>",(test)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (Number.EPSILON) != "undefined") {_RecordType("<848,862,34>",(Number.EPSILON)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (Number) != "undefined") {_RecordType("<848,854,34>",(Number)); Inst66++; } } catch(e) {}
shouldBe(test(Number.EPSILON), 0);
try { if (Inst67 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<869,877,35>",(shouldBe)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (test) != "undefined") {_RecordType("<878,882,35>",(test)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (Number.NaN) != "undefined") {_RecordType("<883,893,35>",(Number.NaN)); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (Number) != "undefined") {_RecordType("<883,889,35>",(Number)); Inst70++; } } catch(e) {}
shouldBe(test(Number.NaN), 0);
try { if (Inst71 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<900,908,36>",(shouldBe)); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (test) != "undefined") {_RecordType("<909,913,36>",(test)); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (Number.POSITIVE_INFINITY) != "undefined") {_RecordType("<914,938,36>",(Number.POSITIVE_INFINITY)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (Number) != "undefined") {_RecordType("<914,920,36>",(Number)); Inst74++; } } catch(e) {}
shouldBe(test(Number.POSITIVE_INFINITY), 0);
try { if (Inst75 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<945,953,37>",(shouldBe)); Inst75++; } } catch(e) {}try { if (Inst76 <= 1000 && typeof (test) != "undefined") {_RecordType("<954,958,37>",(test)); Inst76++; } } catch(e) {}try { if (Inst77 <= 1000 && typeof (Number.NEGATIVE_INFINITY) != "undefined") {_RecordType("<959,983,37>",(Number.NEGATIVE_INFINITY)); Inst77++; } } catch(e) {}try { if (Inst78 <= 1000 && typeof (Number) != "undefined") {_RecordType("<959,965,37>",(Number)); Inst78++; } } catch(e) {}
shouldBe(test(Number.NEGATIVE_INFINITY), 0);
try { if (Inst79 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<990,998,38>",(shouldBe)); Inst79++; } } catch(e) {}try { if (Inst80 <= 1000 && typeof (test) != "undefined") {_RecordType("<999,1003,38>",(test)); Inst80++; } } catch(e) {}try { if (Inst81 <= 1000 && typeof (Number.MAX_SAFE_INTEGER) != "undefined") {_RecordType("<1004,1027,38>",(Number.MAX_SAFE_INTEGER)); Inst81++; } } catch(e) {}try { if (Inst82 <= 1000 && typeof (Number) != "undefined") {_RecordType("<1004,1010,38>",(Number)); Inst82++; } } catch(e) {}
shouldBe(test(Number.MAX_SAFE_INTEGER), -1);
try { if (Inst83 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<1035,1043,39>",(shouldBe)); Inst83++; } } catch(e) {}try { if (Inst84 <= 1000 && typeof (test) != "undefined") {_RecordType("<1044,1048,39>",(test)); Inst84++; } } catch(e) {}try { if (Inst85 <= 1000 && typeof (Number.MIN_SAFE_INTEGER) != "undefined") {_RecordType("<1049,1072,39>",(Number.MIN_SAFE_INTEGER)); Inst85++; } } catch(e) {}try { if (Inst86 <= 1000 && typeof (Number) != "undefined") {_RecordType("<1049,1055,39>",(Number)); Inst86++; } } catch(e) {}
shouldBe(test(Number.MIN_SAFE_INTEGER), 1);

