var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (foo) != "undefined") {_RecordType("<9,12,1>",(foo)); Inst0++; } } catch(e) {}
function foo(s) {
try { if (Inst1 <= 1000 && typeof (s) != "undefined") {_RecordType("<13,14,1>",(s)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (/.*/.exec) != "undefined") {_RecordType("<27,36,2>",(/.*/.exec)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (s) != "undefined") {_RecordType("<37,38,2>",(s)); Inst3++; } } catch(e) {}
  return /.*/.exec(s);
}

try { if (Inst4 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<44,52,5>",(noInline)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (foo) != "undefined") {_RecordType("<53,56,5>",(foo)); Inst5++; } } catch(e) {}
noInline(foo);

for (var i = 0; i < 10000; ++i) {
try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<69,70,7>",(i)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<76,77,7>",(i)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<89,90,7>",(i)); Inst8++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (foo) != "undefined") {_RecordType("<96,99,8>",(foo)); Inst9++; } } catch(e) {}
  foo("foo bar");
}

RegExp.input = "blah";
try { if (Inst10 <= 1000 && typeof (RegExp.input) != "undefined") {_RecordType("<115,127,11>",(RegExp.input)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<115,121,11>",(RegExp)); Inst11++; } } catch(e) {}
var didFinish = false;
try { if (Inst12 <= 1000 && typeof (didFinish) != "undefined") {_RecordType("<142,151,12>",(didFinish)); Inst12++; } } catch(e) {}

try { if (Inst15 <= 1000 && typeof (e) != "undefined") {_RecordType("<266,267,21>",(e)); Inst15++; } } catch(e) {}
try {
try { if (Inst13 <= 1000 && typeof (foo) != "undefined") {_RecordType("<170,173,15>",(foo)); Inst13++; } } catch(e) {}
  foo({
    toString: function () {
      throw "error";
    }
  });
  didFinish = true;
try { if (Inst14 <= 1000 && typeof (didFinish) != "undefined") {_RecordType("<239,248,20>",(didFinish)); Inst14++; } } catch(e) {}
} catch (e) {
try { if (Inst16 <= 1000 && typeof (e) != "undefined") {_RecordType("<277,278,22>",(e)); Inst16++; } } catch(e) {}
  if (e != "error") {
try { if (Inst17 <= 1000 && typeof (e) != "undefined") {_RecordType("<337,338,23>",(e)); Inst17++; } } catch(e) {}
    throw "Error: bad exception at end: " + e;
  }

try { if (Inst18 <= 1000 && typeof (RegExp.input) != "undefined") {_RecordType("<351,363,26>",(RegExp.input)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<351,357,26>",(RegExp)); Inst19++; } } catch(e) {}
  if (RegExp.input != "blah") {
try { if (Inst20 <= 1000 && typeof (RegExp.input) != "undefined") {_RecordType("<419,431,27>",(RegExp.input)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<419,425,27>",(RegExp)); Inst21++; } } catch(e) {}
    throw "Error: bad value of input: " + RegExp.input;
  }
}

try { if (Inst22 <= 1000 && typeof (didFinish) != "undefined") {_RecordType("<444,453,31>",(didFinish)); Inst22++; } } catch(e) {}
if (didFinish) {
  throw "Error: did not throw exception.";
}

