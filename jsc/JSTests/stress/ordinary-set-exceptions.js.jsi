var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<9,17,1>",(shouldBe)); Inst0++; } } catch(e) {}
function shouldBe(actual, expected) {
try { if (Inst1 <= 1000 && typeof (actual) != "undefined") {_RecordType("<18,24,1>",(actual)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (expected) != "undefined") {_RecordType("<26,34,1>",(expected)); Inst2++; } } catch(e) {}
  ;
}

try { if (Inst3 <= 1000 && typeof (shouldThrow) != "undefined") {_RecordType("<54,65,5>",(shouldThrow)); Inst3++; } } catch(e) {}
function shouldThrow(func, errorMessage) {
try { if (Inst4 <= 1000 && typeof (func) != "undefined") {_RecordType("<66,70,5>",(func)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (errorMessage) != "undefined") {_RecordType("<72,84,5>",(errorMessage)); Inst5++; } } catch(e) {}
  var errorThrown = false;
try { if (Inst6 <= 1000 && typeof (errorThrown) != "undefined") {_RecordType("<94,105,6>",(errorThrown)); Inst6++; } } catch(e) {}
  var error = null;
try { if (Inst7 <= 1000 && typeof (error) != "undefined") {_RecordType("<121,126,7>",(error)); Inst7++; } } catch(e) {}

try { if (Inst9 <= 1000 && typeof (e) != "undefined") {_RecordType("<167,168,11>",(e)); Inst9++; } } catch(e) {}
  try {
try { if (Inst8 <= 1000 && typeof (func) != "undefined") {_RecordType("<148,152,10>",(func)); Inst8++; } } catch(e) {}
    func();
  } catch (e) {
    errorThrown = true;
try { if (Inst10 <= 1000 && typeof (errorThrown) != "undefined") {_RecordType("<176,187,12>",(errorThrown)); Inst10++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (e) != "undefined") {_RecordType("<208,209,13>",(e)); Inst12++; } } catch(e) {}
    error = e;
try { if (Inst11 <= 1000 && typeof (error) != "undefined") {_RecordType("<200,205,13>",(error)); Inst11++; } } catch(e) {}
  }
} // 9.1.9.1 4-a


try { if (Inst13 <= 1000 && typeof (shouldThrow) != "undefined") {_RecordType("<234,245,18>",(shouldThrow)); Inst13++; } } catch(e) {}
shouldThrow(function () {
  'use strict';

  var target = {};
try { if (Inst14 <= 1000 && typeof (target) != "undefined") {_RecordType("<283,289,21>",(target)); Inst14++; } } catch(e) {}
  var handler = {};
try { if (Inst15 <= 1000 && typeof (handler) != "undefined") {_RecordType("<302,309,22>",(handler)); Inst15++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<334,339,23>",(Proxy)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (target) != "undefined") {_RecordType("<340,346,23>",(target)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (handler) != "undefined") {_RecordType("<348,355,23>",(handler)); Inst19++; } } catch(e) {}
  var proxy = new Proxy(target, handler);
try { if (Inst16 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<322,327,23>",(proxy)); Inst16++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<360,368,24>",(shouldBe)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Reflect.defineProperty) != "undefined") {_RecordType("<369,391,24>",(Reflect.defineProperty)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<369,376,24>",(Reflect)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (target) != "undefined") {_RecordType("<392,398,24>",(target)); Inst23++; } } catch(e) {}
  shouldBe(Reflect.defineProperty(target, 'cocoa', {
    writable: false,
    value: 42
  }), true);
  proxy.cocoa = 'NG';
try { if (Inst24 <= 1000 && typeof (proxy.cocoa) != "undefined") {_RecordType("<461,472,28>",(proxy.cocoa)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<461,466,28>",(proxy)); Inst25++; } } catch(e) {}
}, `TypeError: Attempted to assign to readonly property.`); // 9.1.9.1 4-b

(function () {
  'use strict';

  var target = {};
try { if (Inst26 <= 1000 && typeof (target) != "undefined") {_RecordType("<595,601,34>",(target)); Inst26++; } } catch(e) {}
  var handler = {};
try { if (Inst27 <= 1000 && typeof (handler) != "undefined") {_RecordType("<614,621,35>",(handler)); Inst27++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<646,651,36>",(Proxy)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (target) != "undefined") {_RecordType("<652,658,36>",(target)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (handler) != "undefined") {_RecordType("<660,667,36>",(handler)); Inst31++; } } catch(e) {}
  var proxy = new Proxy(target, handler);
try { if (Inst28 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<634,639,36>",(proxy)); Inst28++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<672,680,37>",(shouldBe)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (Reflect.defineProperty) != "undefined") {_RecordType("<681,703,37>",(Reflect.defineProperty)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<681,688,37>",(Reflect)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (target) != "undefined") {_RecordType("<704,710,37>",(target)); Inst35++; } } catch(e) {}
  shouldBe(Reflect.defineProperty(target, 'cocoa', {
    writable: false,
    value: 42
  }), true);
try { if (Inst36 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<773,781,41>",(shouldBe)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (Reflect.set) != "undefined") {_RecordType("<782,793,41>",(Reflect.set)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<782,789,41>",(Reflect)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<794,799,41>",(proxy)); Inst39++; } } catch(e) {}
  shouldBe(Reflect.set(proxy, 'cocoa', 'NG', 'Cocoa'), false);
})(); // 9.1.9.1 4-d-i


try { if (Inst40 <= 1000 && typeof (shouldThrow) != "undefined") {_RecordType("<859,870,45>",(shouldThrow)); Inst40++; } } catch(e) {}
shouldThrow(function () {
  'use strict';

  var target = {};
try { if (Inst41 <= 1000 && typeof (target) != "undefined") {_RecordType("<908,914,48>",(target)); Inst41++; } } catch(e) {}
try { if (Inst43 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<939,944,49>",(Proxy)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (target) != "undefined") {_RecordType("<945,951,49>",(target)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (set) != "undefined") {_RecordType("<963,966,50>",(set)); Inst45++; } } catch(e) {}
  var proxy = new Proxy(target, {
    get set() {
try { if (Inst46 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<977,985,51>",(shouldBe)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (Reflect.defineProperty) != "undefined") {_RecordType("<986,1008,51>",(Reflect.defineProperty)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<986,993,51>",(Reflect)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (receiver) != "undefined") {_RecordType("<1009,1017,51>",(receiver)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (set) != "undefined") {_RecordType("<1038,1041,52>",(set)); Inst50++; } } catch(e) {}
      shouldBe(Reflect.defineProperty(receiver, 'cocoa', {
        set() {
          ;
        }

      }), true);
try { if (Inst51 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<1099,1108,57>",(undefined)); Inst51++; } } catch(e) {}
      return undefined;
    }

  });
try { if (Inst42 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<927,932,49>",(proxy)); Inst42++; } } catch(e) {}
try { if (Inst53 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<1157,1162,62>",(proxy)); Inst53++; } } catch(e) {}
  var receiver = {
    __proto__: proxy
  };
try { if (Inst52 <= 1000 && typeof (receiver) != "undefined") {_RecordType("<1129,1137,61>",(receiver)); Inst52++; } } catch(e) {}
try { if (Inst54 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<1170,1178,64>",(shouldBe)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (Reflect.defineProperty) != "undefined") {_RecordType("<1179,1201,64>",(Reflect.defineProperty)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<1179,1186,64>",(Reflect)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (target) != "undefined") {_RecordType("<1202,1208,64>",(target)); Inst57++; } } catch(e) {}
  shouldBe(Reflect.defineProperty(target, 'cocoa', {
    writable: true,
    value: 42
  }), true);
  receiver.cocoa = 'NG';
try { if (Inst58 <= 1000 && typeof (receiver.cocoa) != "undefined") {_RecordType("<1270,1284,68>",(receiver.cocoa)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (receiver) != "undefined") {_RecordType("<1270,1278,68>",(receiver)); Inst59++; } } catch(e) {}
}, `TypeError: Attempted to assign to readonly property.`); // 9.1.9.1 4-d-ii

try { if (Inst60 <= 1000 && typeof (shouldThrow) != "undefined") {_RecordType("<1372,1383,71>",(shouldThrow)); Inst60++; } } catch(e) {}
shouldThrow(function () {
  'use strict';

  var target = {};
try { if (Inst61 <= 1000 && typeof (target) != "undefined") {_RecordType("<1421,1427,74>",(target)); Inst61++; } } catch(e) {}
try { if (Inst63 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<1452,1457,75>",(Proxy)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (target) != "undefined") {_RecordType("<1458,1464,75>",(target)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (set) != "undefined") {_RecordType("<1476,1479,76>",(set)); Inst65++; } } catch(e) {}
  var proxy = new Proxy(target, {
    get set() {
try { if (Inst66 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<1490,1498,77>",(shouldBe)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (Reflect.defineProperty) != "undefined") {_RecordType("<1499,1521,77>",(Reflect.defineProperty)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<1499,1506,77>",(Reflect)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (receiver) != "undefined") {_RecordType("<1522,1530,77>",(receiver)); Inst69++; } } catch(e) {}
      shouldBe(Reflect.defineProperty(receiver, 'cocoa', {
        value: 'hello',
        writable: false
      }), true);
try { if (Inst70 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<1621,1630,81>",(undefined)); Inst70++; } } catch(e) {}
      return undefined;
    }

  });
try { if (Inst62 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<1440,1445,75>",(proxy)); Inst62++; } } catch(e) {}
try { if (Inst72 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<1679,1684,86>",(proxy)); Inst72++; } } catch(e) {}
  var receiver = {
    __proto__: proxy
  };
try { if (Inst71 <= 1000 && typeof (receiver) != "undefined") {_RecordType("<1651,1659,85>",(receiver)); Inst71++; } } catch(e) {}
try { if (Inst73 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<1692,1700,88>",(shouldBe)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (Reflect.defineProperty) != "undefined") {_RecordType("<1701,1723,88>",(Reflect.defineProperty)); Inst74++; } } catch(e) {}try { if (Inst75 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<1701,1708,88>",(Reflect)); Inst75++; } } catch(e) {}try { if (Inst76 <= 1000 && typeof (target) != "undefined") {_RecordType("<1724,1730,88>",(target)); Inst76++; } } catch(e) {}
  shouldBe(Reflect.defineProperty(target, 'cocoa', {
    writable: true,
    value: 42
  }), true);
  receiver.cocoa = 'NG';
try { if (Inst77 <= 1000 && typeof (receiver.cocoa) != "undefined") {_RecordType("<1792,1806,92>",(receiver.cocoa)); Inst77++; } } catch(e) {}try { if (Inst78 <= 1000 && typeof (receiver) != "undefined") {_RecordType("<1792,1800,92>",(receiver)); Inst78++; } } catch(e) {}
}, `TypeError: Attempted to assign to readonly property.`); // 9.1.9.1 7

try { if (Inst79 <= 1000 && typeof (shouldThrow) != "undefined") {_RecordType("<1889,1900,95>",(shouldThrow)); Inst79++; } } catch(e) {}
shouldThrow(function () {
  'use strict';

  var target = {};
try { if (Inst80 <= 1000 && typeof (target) != "undefined") {_RecordType("<1938,1944,98>",(target)); Inst80++; } } catch(e) {}
try { if (Inst82 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<1969,1974,99>",(Proxy)); Inst82++; } } catch(e) {}try { if (Inst83 <= 1000 && typeof (target) != "undefined") {_RecordType("<1975,1981,99>",(target)); Inst83++; } } catch(e) {}
  var proxy = new Proxy(target, {});
try { if (Inst81 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<1957,1962,99>",(proxy)); Inst81++; } } catch(e) {}
try { if (Inst85 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<2022,2027,101>",(proxy)); Inst85++; } } catch(e) {}
  var receiver = {
    __proto__: proxy
  };
try { if (Inst84 <= 1000 && typeof (receiver) != "undefined") {_RecordType("<1994,2002,100>",(receiver)); Inst84++; } } catch(e) {}
try { if (Inst86 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<2035,2043,103>",(shouldBe)); Inst86++; } } catch(e) {}try { if (Inst87 <= 1000 && typeof (Reflect.defineProperty) != "undefined") {_RecordType("<2044,2066,103>",(Reflect.defineProperty)); Inst87++; } } catch(e) {}try { if (Inst88 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<2044,2051,103>",(Reflect)); Inst88++; } } catch(e) {}try { if (Inst89 <= 1000 && typeof (target) != "undefined") {_RecordType("<2067,2073,103>",(target)); Inst89++; } } catch(e) {}try { if (Inst90 <= 1000 && typeof (get) != "undefined") {_RecordType("<2090,2093,104>",(get)); Inst90++; } } catch(e) {}
  shouldBe(Reflect.defineProperty(target, 'cocoa', {
    get() {
      ;
    }

  }), true);
  receiver.cocoa = 'NG';
try { if (Inst91 <= 1000 && typeof (receiver.cocoa) != "undefined") {_RecordType("<2128,2142,109>",(receiver.cocoa)); Inst91++; } } catch(e) {}try { if (Inst92 <= 1000 && typeof (receiver) != "undefined") {_RecordType("<2128,2136,109>",(receiver)); Inst92++; } } catch(e) {}
}, `TypeError: Attempted to assign to readonly property.`);

