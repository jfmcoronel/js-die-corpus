var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (assert) != "undefined") {_RecordType("<9,15,1>",(assert)); Inst0++; } } catch(e) {}
function assert(b) {
try { if (Inst1 <= 1000 && typeof (b) != "undefined") {_RecordType("<16,17,1>",(b)); Inst1++; } } catch(e) {}
  ;
}

try { if (Inst2 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<28,36,5>",(noInline)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (assert) != "undefined") {_RecordType("<37,43,5>",(assert)); Inst3++; } } catch(e) {}
noInline(assert);
let called = false;
try { if (Inst4 <= 1000 && typeof (called) != "undefined") {_RecordType("<50,56,6>",(called)); Inst4++; } } catch(e) {}

try { if (Inst5 <= 1000 && typeof (baz) != "undefined") {_RecordType("<76,79,8>",(baz)); Inst5++; } } catch(e) {}
function baz(c) {
try { if (Inst6 <= 1000 && typeof (c) != "undefined") {_RecordType("<80,81,8>",(c)); Inst6++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (c) != "undefined") {_RecordType("<91,92,9>",(c)); Inst7++; } } catch(e) {}
  if (c) {
    Array.prototype[Symbol.iterator] = function () {
      let i = 0;
try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<159,160,11>",(i)); Inst13++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (next) != "undefined") {_RecordType("<189,193,13>",(next)); Inst14++; } } catch(e) {}
      return {
        next() {
try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<208,209,14>",(i)); Inst15++; } } catch(e) {}
          i++;

try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<228,229,16>",(i)); Inst16++; } } catch(e) {}
          if (i === 2) {
            return {
              done: true
            };
          }

          return {
            value: 40,
            done: false
          };
        }

      };
    };
try { if (Inst8 <= 1000 && typeof (Array.prototype[Symbol.iterator]) != "undefined") {_RecordType("<100,132,10>",(Array.prototype[Symbol.iterator])); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<100,115,10>",(Array.prototype)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Array) != "undefined") {_RecordType("<100,105,10>",(Array)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<116,131,10>",(Symbol.iterator)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<116,122,10>",(Symbol)); Inst12++; } } catch(e) {}
  }
}

try { if (Inst17 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<426,434,33>",(noInline)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (baz) != "undefined") {_RecordType("<435,438,33>",(baz)); Inst18++; } } catch(e) {}
noInline(baz);

try { if (Inst19 <= 1000 && typeof (bar) != "undefined") {_RecordType("<451,454,35>",(bar)); Inst19++; } } catch(e) {}
function bar(...args) {
try { if (Inst20 <= 1000 && typeof (args) != "undefined") {_RecordType("<458,462,35>",(args)); Inst20++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (args) != "undefined") {_RecordType("<475,479,36>",(args)); Inst21++; } } catch(e) {}
  return args;
}

try { if (Inst22 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<484,492,39>",(noInline)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (bar) != "undefined") {_RecordType("<493,496,39>",(bar)); Inst23++; } } catch(e) {}
noInline(bar);

try { if (Inst24 <= 1000 && typeof (foo) != "undefined") {_RecordType("<509,512,41>",(foo)); Inst24++; } } catch(e) {}
function foo(c, ...args) {
try { if (Inst25 <= 1000 && typeof (c) != "undefined") {_RecordType("<513,514,41>",(c)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (args) != "undefined") {_RecordType("<519,523,41>",(args)); Inst26++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (baz) != "undefined") {_RecordType("<529,532,42>",(baz)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (c) != "undefined") {_RecordType("<533,534,42>",(c)); Inst28++; } } catch(e) {}
  baz(c);
try { if (Inst29 <= 1000 && typeof (bar) != "undefined") {_RecordType("<546,549,43>",(bar)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (args) != "undefined") {_RecordType("<553,557,43>",(args)); Inst30++; } } catch(e) {}
  return bar(...args);
}

try { if (Inst31 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<563,571,46>",(noInline)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (foo) != "undefined") {_RecordType("<572,575,46>",(foo)); Inst32++; } } catch(e) {}
noInline(foo);

for (let i = 0; i < 10000; i++) {
try { if (Inst33 <= 1000 && typeof (i) != "undefined") {_RecordType("<588,589,48>",(i)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (i) != "undefined") {_RecordType("<595,596,48>",(i)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (i) != "undefined") {_RecordType("<606,607,48>",(i)); Inst35++; } } catch(e) {}
  const c = false;
try { if (Inst36 <= 1000 && typeof (c) != "undefined") {_RecordType("<621,622,49>",(c)); Inst36++; } } catch(e) {}
  const args = [{}, 20, [], 45];
try { if (Inst37 <= 1000 && typeof (args) != "undefined") {_RecordType("<640,644,50>",(args)); Inst37++; } } catch(e) {}
try { if (Inst39 <= 1000 && typeof (foo) != "undefined") {_RecordType("<675,678,51>",(foo)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (c) != "undefined") {_RecordType("<679,680,51>",(c)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (args) != "undefined") {_RecordType("<685,689,51>",(args)); Inst41++; } } catch(e) {}
  let r = foo(c, ...args);
try { if (Inst38 <= 1000 && typeof (r) != "undefined") {_RecordType("<671,672,51>",(r)); Inst38++; } } catch(e) {}
try { if (Inst42 <= 1000 && typeof (r.length) != "undefined") {_RecordType("<694,702,52>",(r.length)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (r) != "undefined") {_RecordType("<694,695,52>",(r)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (r.length) != "undefined") {_RecordType("<707,715,52>",(r.length)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (r) != "undefined") {_RecordType("<707,708,52>",(r)); Inst45++; } } catch(e) {}
  r.length === r.length;

  for (let i = 0; i < r.length; i++) {
try { if (Inst46 <= 1000 && typeof (i) != "undefined") {_RecordType("<729,730,54>",(i)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (i) != "undefined") {_RecordType("<736,737,54>",(i)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (r.length) != "undefined") {_RecordType("<740,748,54>",(r.length)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (r) != "undefined") {_RecordType("<740,741,54>",(r)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (i) != "undefined") {_RecordType("<750,751,54>",(i)); Inst50++; } } catch(e) {}
try { if (Inst51 <= 1000 && typeof (r[i]) != "undefined") {_RecordType("<761,765,55>",(r[i])); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (r) != "undefined") {_RecordType("<761,762,55>",(r)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (args[i]) != "undefined") {_RecordType("<770,777,55>",(args[i])); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (args) != "undefined") {_RecordType("<770,774,55>",(args)); Inst54++; } } catch(e) {}
    r[i] === args[i];
  }
}

const c = true;
try { if (Inst55 <= 1000 && typeof (c) != "undefined") {_RecordType("<792,793,59>",(c)); Inst55++; } } catch(e) {}
const args = [{}, 20, [], 45];
try { if (Inst56 <= 1000 && typeof (args) != "undefined") {_RecordType("<808,812,60>",(args)); Inst56++; } } catch(e) {}
try { if (Inst58 <= 1000 && typeof (foo) != "undefined") {_RecordType("<841,844,61>",(foo)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (c) != "undefined") {_RecordType("<845,846,61>",(c)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (args) != "undefined") {_RecordType("<851,855,61>",(args)); Inst60++; } } catch(e) {}
let r = foo(c, ...args);
try { if (Inst57 <= 1000 && typeof (r) != "undefined") {_RecordType("<837,838,61>",(r)); Inst57++; } } catch(e) {}
try { if (Inst61 <= 1000 && typeof (r.length) != "undefined") {_RecordType("<858,866,62>",(r.length)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (r) != "undefined") {_RecordType("<858,859,62>",(r)); Inst62++; } } catch(e) {}
r.length === 1;
try { if (Inst63 <= 1000 && typeof (r[0]) != "undefined") {_RecordType("<874,878,63>",(r[0])); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (r) != "undefined") {_RecordType("<874,875,63>",(r)); Inst64++; } } catch(e) {}
r[0] === 40;

