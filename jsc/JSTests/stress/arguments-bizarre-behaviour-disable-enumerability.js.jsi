var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (foo) != "undefined") {_RecordType("<9,12,1>",(foo)); Inst0++; } } catch(e) {}
function foo(x) {
try { if (Inst1 <= 1000 && typeof (x) != "undefined") {_RecordType("<13,14,1>",(x)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<20,41,2>",(Object.defineProperty)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Object) != "undefined") {_RecordType("<20,26,2>",(Object)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<42,51,2>",(arguments)); Inst4++; } } catch(e) {}
  Object.defineProperty(arguments, 0, {
    configurable: true,
    enumerable: false,
    writable: true,
    value: 42
  });
try { if (Inst5 <= 1000 && typeof (x) != "undefined") {_RecordType("<155,156,8>",(x)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (arguments[0]) != "undefined") {_RecordType("<158,170,8>",(arguments[0])); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<158,167,8>",(arguments)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<172,181,8>",(arguments)); Inst8++; } } catch(e) {}
  return [x, arguments[0], arguments];
}

try { if (Inst10 <= 1000 && typeof (foo) != "undefined") {_RecordType("<200,203,11>",(foo)); Inst10++; } } catch(e) {}
var result = foo(1);
try { if (Inst9 <= 1000 && typeof (result) != "undefined") {_RecordType("<191,197,11>",(result)); Inst9++; } } catch(e) {}

try { if (Inst11 <= 1000 && typeof (result[0]) != "undefined") {_RecordType("<213,222,13>",(result[0])); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (result) != "undefined") {_RecordType("<213,219,13>",(result)); Inst12++; } } catch(e) {}
if (result[0] !== 42) {
  ;
}

try { if (Inst13 <= 1000 && typeof (result[1]) != "undefined") {_RecordType("<244,253,17>",(result[1])); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (result) != "undefined") {_RecordType("<244,250,17>",(result)); Inst14++; } } catch(e) {}
if (result[1] !== 42) {
  ;
}

try { if (Inst15 <= 1000 && typeof (Array.prototype.join.call) != "undefined") {_RecordType("<275,300,21>",(Array.prototype.join.call)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Array.prototype.join) != "undefined") {_RecordType("<275,295,21>",(Array.prototype.join)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<275,290,21>",(Array.prototype)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Array) != "undefined") {_RecordType("<275,280,21>",(Array)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (result[2]) != "undefined") {_RecordType("<301,310,21>",(result[2])); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (result) != "undefined") {_RecordType("<301,307,21>",(result)); Inst20++; } } catch(e) {}
if (Array.prototype.join.call(result[2], ",") != "42") {
  ;
}

var array = [];
try { if (Inst21 <= 1000 && typeof (array) != "undefined") {_RecordType("<339,344,25>",(array)); Inst21++; } } catch(e) {}

for (var s in result[2]) {
try { if (Inst22 <= 1000 && typeof (s) != "undefined") {_RecordType("<361,362,27>",(s)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (result[2]) != "undefined") {_RecordType("<366,375,27>",(result[2])); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (result) != "undefined") {_RecordType("<366,372,27>",(result)); Inst24++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (array.push) != "undefined") {_RecordType("<381,391,28>",(array.push)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (array) != "undefined") {_RecordType("<381,386,28>",(array)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (s) != "undefined") {_RecordType("<392,393,28>",(s)); Inst27++; } } catch(e) {}
  array.push(s);
}

try { if (Inst28 <= 1000 && typeof (array.join) != "undefined") {_RecordType("<403,413,31>",(array.join)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (array) != "undefined") {_RecordType("<403,408,31>",(array)); Inst29++; } } catch(e) {}
if (array.join(",") != "0") {
  ;
}

try { if (Inst30 <= 1000 && typeof (Object.keys(result[2]).join) != "undefined") {_RecordType("<440,467,35>",(Object.keys(result[2]).join)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (Object.keys) != "undefined") {_RecordType("<440,451,35>",(Object.keys)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (Object) != "undefined") {_RecordType("<440,446,35>",(Object)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (result[2]) != "undefined") {_RecordType("<452,461,35>",(result[2])); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (result) != "undefined") {_RecordType("<452,458,35>",(result)); Inst34++; } } catch(e) {}
if (Object.keys(result[2]).join(",") != "0") {
  ;
}

try { if (Inst35 <= 1000 && typeof (Object.getOwnPropertyDescriptor(result[2], 0).enumerable) != "undefined") {_RecordType("<494,550,39>",(Object.getOwnPropertyDescriptor(result[2], 0).enumerable)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<494,525,39>",(Object.getOwnPropertyDescriptor)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (Object) != "undefined") {_RecordType("<494,500,39>",(Object)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (result[2]) != "undefined") {_RecordType("<526,535,39>",(result[2])); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (result) != "undefined") {_RecordType("<526,532,39>",(result)); Inst39++; } } catch(e) {}
if (Object.getOwnPropertyDescriptor(result[2], 0).enumerable === true) {
  ;
}

