var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<9,17,1>",(shouldBe)); Inst0++; } } catch(e) {}
function shouldBe(actual, expected) {
try { if (Inst1 <= 1000 && typeof (actual) != "undefined") {_RecordType("<18,24,1>",(actual)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (expected) != "undefined") {_RecordType("<26,34,1>",(expected)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (actual) != "undefined") {_RecordType("<44,50,2>",(actual)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (expected) != "undefined") {_RecordType("<55,63,2>",(expected)); Inst4++; } } catch(e) {}
  if (actual !== expected) {
try { if (Inst5 <= 1000 && typeof (Error) != "undefined") {_RecordType("<81,86,3>",(Error)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (actual) != "undefined") {_RecordType("<103,109,3>",(actual)); Inst6++; } } catch(e) {}
    throw new Error('bad value: ' + actual);
  }
}

try { if (Inst7 <= 1000 && typeof (inlineTarget) != "undefined") {_RecordType("<128,140,7>",(inlineTarget)); Inst7++; } } catch(e) {}
function inlineTarget(arg1, arg2, arg3, arg4, arg5) {
try { if (Inst8 <= 1000 && typeof (arg1) != "undefined") {_RecordType("<141,145,7>",(arg1)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (arg2) != "undefined") {_RecordType("<147,151,7>",(arg2)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (arg3) != "undefined") {_RecordType("<153,157,7>",(arg3)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (arg4) != "undefined") {_RecordType("<159,163,7>",(arg4)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (arg5) != "undefined") {_RecordType("<165,169,7>",(arg5)); Inst12++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (arg1) != "undefined") {_RecordType("<183,187,8>",(arg1)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (arg2) != "undefined") {_RecordType("<189,193,8>",(arg2)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (arg3) != "undefined") {_RecordType("<195,199,8>",(arg3)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (arg4) != "undefined") {_RecordType("<201,205,8>",(arg4)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (arg5) != "undefined") {_RecordType("<207,211,8>",(arg5)); Inst17++; } } catch(e) {}
  return [arg1, arg2, arg3, arg4, arg5];
}

try { if (Inst18 <= 1000 && typeof (test) != "undefined") {_RecordType("<226,230,11>",(test)); Inst18++; } } catch(e) {}
function test() {
try { if (Inst19 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<237,245,12>",(shouldBe)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (JSON.stringify) != "undefined") {_RecordType("<246,260,12>",(JSON.stringify)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<246,250,12>",(JSON)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (inlineTarget) != "undefined") {_RecordType("<261,273,12>",(inlineTarget)); Inst22++; } } catch(e) {}
  shouldBe(JSON.stringify(inlineTarget()), `[null,null,null,null,null]`);
try { if (Inst23 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<311,319,13>",(shouldBe)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (JSON.stringify) != "undefined") {_RecordType("<320,334,13>",(JSON.stringify)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<320,324,13>",(JSON)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (inlineTarget) != "undefined") {_RecordType("<335,347,13>",(inlineTarget)); Inst26++; } } catch(e) {}
  shouldBe(JSON.stringify(inlineTarget(42)), `[42,null,null,null,null]`);
try { if (Inst27 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<385,393,14>",(shouldBe)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (JSON.stringify) != "undefined") {_RecordType("<394,408,14>",(JSON.stringify)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<394,398,14>",(JSON)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (inlineTarget) != "undefined") {_RecordType("<409,421,14>",(inlineTarget)); Inst30++; } } catch(e) {}
  shouldBe(JSON.stringify(inlineTarget(42, 43)), `[42,43,null,null,null]`);
try { if (Inst31 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<461,469,15>",(shouldBe)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (JSON.stringify) != "undefined") {_RecordType("<470,484,15>",(JSON.stringify)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<470,474,15>",(JSON)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (inlineTarget) != "undefined") {_RecordType("<485,497,15>",(inlineTarget)); Inst34++; } } catch(e) {}
  shouldBe(JSON.stringify(inlineTarget(42, 43, 44)), `[42,43,44,null,null]`);
try { if (Inst35 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<539,547,16>",(shouldBe)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (JSON.stringify) != "undefined") {_RecordType("<548,562,16>",(JSON.stringify)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<548,552,16>",(JSON)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (inlineTarget) != "undefined") {_RecordType("<563,575,16>",(inlineTarget)); Inst38++; } } catch(e) {}
  shouldBe(JSON.stringify(inlineTarget(42, 43, 44, 45)), `[42,43,44,45,null]`);
try { if (Inst39 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<619,627,17>",(shouldBe)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (JSON.stringify) != "undefined") {_RecordType("<628,642,17>",(JSON.stringify)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<628,632,17>",(JSON)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (inlineTarget) != "undefined") {_RecordType("<643,655,17>",(inlineTarget)); Inst42++; } } catch(e) {}
  shouldBe(JSON.stringify(inlineTarget(42, 43, 44, 45, 46)), `[42,43,44,45,46]`);
try { if (Inst43 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<701,709,18>",(shouldBe)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (JSON.stringify) != "undefined") {_RecordType("<710,724,18>",(JSON.stringify)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<710,714,18>",(JSON)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (inlineTarget) != "undefined") {_RecordType("<725,737,18>",(inlineTarget)); Inst46++; } } catch(e) {}
  shouldBe(JSON.stringify(inlineTarget(42, 43, 44, 45, 46, 47)), `[42,43,44,45,46]`);
try { if (Inst47 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<787,795,19>",(shouldBe)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (JSON.stringify) != "undefined") {_RecordType("<796,810,19>",(JSON.stringify)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<796,800,19>",(JSON)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (inlineTarget) != "undefined") {_RecordType("<811,823,19>",(inlineTarget)); Inst50++; } } catch(e) {}
  shouldBe(JSON.stringify(inlineTarget(42, 43, 44, 45, 46, 47, 48)), `[42,43,44,45,46]`);
}

try { if (Inst51 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<878,886,22>",(noInline)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (test) != "undefined") {_RecordType("<887,891,22>",(test)); Inst52++; } } catch(e) {}
noInline(test);

for (var i = 0; i < 3e4; ++i) {
try { if (Inst53 <= 1000 && typeof (i) != "undefined") {_RecordType("<904,905,24>",(i)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (i) != "undefined") {_RecordType("<911,912,24>",(i)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (i) != "undefined") {_RecordType("<922,923,24>",(i)); Inst55++; } } catch(e) {}
try { if (Inst56 <= 1000 && typeof (test) != "undefined") {_RecordType("<929,933,25>",(test)); Inst56++; } } catch(e) {}
  test();
}

