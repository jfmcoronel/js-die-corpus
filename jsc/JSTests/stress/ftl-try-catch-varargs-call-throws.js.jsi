var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (foo) != "undefined") {_RecordType("<9,12,1>",(foo)); Inst0++; } } catch(e) {}
function foo(o, a) {
try { if (Inst1 <= 1000 && typeof (o) != "undefined") {_RecordType("<13,14,1>",(o)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (a) != "undefined") {_RecordType("<16,17,1>",(a)); Inst2++; } } catch(e) {}
  let resetFlag = false;
try { if (Inst3 <= 1000 && typeof (resetFlag) != "undefined") {_RecordType("<27,36,2>",(resetFlag)); Inst3++; } } catch(e) {}

try { if (Inst4 <= 1000 && typeof (flag) != "undefined") {_RecordType("<53,57,4>",(flag)); Inst4++; } } catch(e) {}
  if (flag) {
    resetFlag = true;
try { if (Inst5 <= 1000 && typeof (resetFlag) != "undefined") {_RecordType("<65,74,5>",(resetFlag)); Inst5++; } } catch(e) {}
    flag = false;
try { if (Inst6 <= 1000 && typeof (flag) != "undefined") {_RecordType("<87,91,6>",(flag)); Inst6++; } } catch(e) {}
  }

try { if (Inst8 <= 1000 && typeof (o) != "undefined") {_RecordType("<116,117,9>",(o)); Inst8++; } } catch(e) {}
  let x = o(10);
try { if (Inst7 <= 1000 && typeof (x) != "undefined") {_RecordType("<112,113,9>",(x)); Inst7++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (o) != "undefined") {_RecordType("<133,134,10>",(o)); Inst10++; } } catch(e) {}
  let y = o(20);
try { if (Inst9 <= 1000 && typeof (y) != "undefined") {_RecordType("<129,130,10>",(y)); Inst9++; } } catch(e) {}

try { if (Inst11 <= 1000 && typeof (resetFlag) != "undefined") {_RecordType("<147,156,12>",(resetFlag)); Inst11++; } } catch(e) {}
  if (resetFlag) {
    flag = true;
try { if (Inst12 <= 1000 && typeof (flag) != "undefined") {_RecordType("<164,168,13>",(flag)); Inst12++; } } catch(e) {}
  }

try { if (Inst16 <= 1000 && typeof (e) != "undefined") {_RecordType("<223,224,18>",(e)); Inst16++; } } catch(e) {}
  try {
try { if (Inst13 <= 1000 && typeof (o.apply) != "undefined") {_RecordType("<194,201,17>",(o.apply)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (o) != "undefined") {_RecordType("<194,195,17>",(o)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (a) != "undefined") {_RecordType("<208,209,17>",(a)); Inst15++; } } catch(e) {}
    o.apply(null, a);
  } catch (e) {
try { if (Inst17 <= 1000 && typeof (x) != "undefined") {_RecordType("<236,237,19>",(x)); Inst17++; } } catch(e) {}
    if (x !== 10) {
try { if (Inst18 <= 1000 && typeof (Error) != "undefined") {_RecordType("<264,269,20>",(Error)); Inst18++; } } catch(e) {}
      throw new Error("Not 10");
    }

try { if (Inst19 <= 1000 && typeof (x) != "undefined") {_RecordType("<299,300,23>",(x)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (y) != "undefined") {_RecordType("<303,304,23>",(y)); Inst20++; } } catch(e) {}
    return x + y;
  }
}

try { if (Inst21 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<313,321,27>",(noInline)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (foo) != "undefined") {_RecordType("<322,325,27>",(foo)); Inst22++; } } catch(e) {}
noInline(foo);
var flag = false;
try { if (Inst23 <= 1000 && typeof (flag) != "undefined") {_RecordType("<332,336,28>",(flag)); Inst23++; } } catch(e) {}

try { if (Inst24 <= 1000 && typeof (f) != "undefined") {_RecordType("<356,357,30>",(f)); Inst24++; } } catch(e) {}
function f(arg1, arg2, arg3) {
try { if (Inst25 <= 1000 && typeof (arg1) != "undefined") {_RecordType("<358,362,30>",(arg1)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (arg2) != "undefined") {_RecordType("<364,368,30>",(arg2)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (arg3) != "undefined") {_RecordType("<370,374,30>",(arg3)); Inst27++; } } catch(e) {}
try { if (Inst28 <= 1000 && typeof (flag) != "undefined") {_RecordType("<384,388,31>",(flag)); Inst28++; } } catch(e) {}
  if (flag) {
try { if (Inst29 <= 1000 && typeof (Error) != "undefined") {_RecordType("<406,411,32>",(Error)); Inst29++; } } catch(e) {}
    throw new Error("blah");
  }

try { if (Inst30 <= 1000 && typeof (arg1) != "undefined") {_RecordType("<435,439,35>",(arg1)); Inst30++; } } catch(e) {}
  return arg1;
}

try { if (Inst31 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<444,452,38>",(noInline)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (f) != "undefined") {_RecordType("<453,454,38>",(f)); Inst32++; } } catch(e) {}
noInline(f);

for (let i = 0; i < 100000; i++) {
try { if (Inst33 <= 1000 && typeof (i) != "undefined") {_RecordType("<467,468,40>",(i)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (i) != "undefined") {_RecordType("<474,475,40>",(i)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (i) != "undefined") {_RecordType("<486,487,40>",(i)); Inst35++; } } catch(e) {}
try { if (Inst36 <= 1000 && typeof (foo) != "undefined") {_RecordType("<495,498,41>",(foo)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (f) != "undefined") {_RecordType("<499,500,41>",(f)); Inst37++; } } catch(e) {}
  foo(f, [10, 20, 30]);
}

flag = true;
try { if (Inst38 <= 1000 && typeof (flag) != "undefined") {_RecordType("<520,524,44>",(flag)); Inst38++; } } catch(e) {}
try { if (Inst39 <= 1000 && typeof (foo) != "undefined") {_RecordType("<533,536,45>",(foo)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (f) != "undefined") {_RecordType("<537,538,45>",(f)); Inst40++; } } catch(e) {}
foo(f, [10, 20, 30]);

