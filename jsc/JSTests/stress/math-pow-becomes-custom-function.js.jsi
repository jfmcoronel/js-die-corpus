var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (mathPowWrapper) != "undefined") {_RecordType("<9,23,1>",(mathPowWrapper)); Inst0++; } } catch(e) {}
function mathPowWrapper(x, y) {
try { if (Inst1 <= 1000 && typeof (x) != "undefined") {_RecordType("<24,25,1>",(x)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (y) != "undefined") {_RecordType("<27,28,1>",(y)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (Math.pow) != "undefined") {_RecordType("<41,49,2>",(Math.pow)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Math) != "undefined") {_RecordType("<41,45,2>",(Math)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (x) != "undefined") {_RecordType("<50,51,2>",(x)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (y) != "undefined") {_RecordType("<53,54,2>",(y)); Inst6++; } } catch(e) {}
  return Math.pow(x, y);
}

try { if (Inst7 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<60,68,5>",(noInline)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (mathPowWrapper) != "undefined") {_RecordType("<69,83,5>",(mathPowWrapper)); Inst8++; } } catch(e) {}
noInline(mathPowWrapper);

try { if (Inst9 <= 1000 && typeof (testChangingMathPow) != "undefined") {_RecordType("<96,115,7>",(testChangingMathPow)); Inst9++; } } catch(e) {}
function testChangingMathPow() {
  var result = 0;
try { if (Inst10 <= 1000 && typeof (result) != "undefined") {_RecordType("<126,132,8>",(result)); Inst10++; } } catch(e) {}

  for (var i = 0; i < 10000; ++i) {
try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<150,151,10>",(i)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<157,158,10>",(i)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<170,171,10>",(i)); Inst13++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (mathPowWrapper) != "undefined") {_RecordType("<189,203,11>",(mathPowWrapper)); Inst15++; } } catch(e) {}
    result += mathPowWrapper(3, 2);
try { if (Inst14 <= 1000 && typeof (result) != "undefined") {_RecordType("<179,185,11>",(result)); Inst14++; } } catch(e) {}
  }

  Math.pow = function (a, b) {
try { if (Inst18 <= 1000 && typeof (a) != "undefined") {_RecordType("<239,240,14>",(a)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (b) != "undefined") {_RecordType("<242,243,14>",(b)); Inst19++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (a) != "undefined") {_RecordType("<258,259,15>",(a)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (b) != "undefined") {_RecordType("<262,263,15>",(b)); Inst21++; } } catch(e) {}
    return a + b;
  };
try { if (Inst16 <= 1000 && typeof (Math.pow) != "undefined") {_RecordType("<218,226,14>",(Math.pow)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Math) != "undefined") {_RecordType("<218,222,14>",(Math)); Inst17++; } } catch(e) {}

  for (var i = 0; i < 10000; ++i) {
try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<282,283,18>",(i)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<289,290,18>",(i)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<302,303,18>",(i)); Inst24++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (mathPowWrapper) != "undefined") {_RecordType("<321,335,19>",(mathPowWrapper)); Inst26++; } } catch(e) {}
    result += mathPowWrapper(3, 2);
try { if (Inst25 <= 1000 && typeof (result) != "undefined") {_RecordType("<311,317,19>",(result)); Inst25++; } } catch(e) {}
  }

try { if (Inst27 <= 1000 && typeof (result) != "undefined") {_RecordType("<354,360,22>",(result)); Inst27++; } } catch(e) {}
  if (result !== 140000) {
try { if (Inst28 <= 1000 && typeof (result) != "undefined") {_RecordType("<399,405,23>",(result)); Inst28++; } } catch(e) {}
    throw "Result = " + result + ", expected 140000";
  }
}

try { if (Inst29 <= 1000 && typeof (testChangingMathPow) != "undefined") {_RecordType("<436,455,27>",(testChangingMathPow)); Inst29++; } } catch(e) {}
testChangingMathPow();

