var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (assert) != "undefined") {_RecordType("<9,15,1>",(assert)); Inst0++; } } catch(e) {}
function assert(b, m = "Bad!") {
try { if (Inst1 <= 1000 && typeof (b) != "undefined") {_RecordType("<16,17,1>",(b)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (m) != "undefined") {_RecordType("<19,20,1>",(m)); Inst2++; } } catch(e) {}
  ;
}

try { if (Inst3 <= 1000 && typeof (test) != "undefined") {_RecordType("<49,53,5>",(test)); Inst3++; } } catch(e) {}
function test(f, iters = 1000) {
try { if (Inst4 <= 1000 && typeof (f) != "undefined") {_RecordType("<54,55,5>",(f)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (iters) != "undefined") {_RecordType("<57,62,5>",(iters)); Inst5++; } } catch(e) {}
  for (let i = 0; i < iters; i++) {
try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<84,85,6>",(i)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<91,92,6>",(i)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (iters) != "undefined") {_RecordType("<95,100,6>",(iters)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<102,103,6>",(i)); Inst9++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (f) != "undefined") {_RecordType("<113,114,7>",(f)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<115,116,7>",(i)); Inst11++; } } catch(e) {}
    f(i);
  }
}

try { if (Inst12 <= 1000 && typeof (func) != "undefined") {_RecordType("<135,139,11>",(func)); Inst12++; } } catch(e) {}
function func(x) {
try { if (Inst13 <= 1000 && typeof (x) != "undefined") {_RecordType("<140,141,11>",(x)); Inst13++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (x) != "undefined") {_RecordType("<154,155,12>",(x)); Inst14++; } } catch(e) {}
  return x;
}

try { if (Inst15 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<160,168,15>",(noInline)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (func) != "undefined") {_RecordType("<169,173,15>",(func)); Inst16++; } } catch(e) {}
noInline(func);

try { if (Inst17 <= 1000 && typeof (check) != "undefined") {_RecordType("<186,191,17>",(check)); Inst17++; } } catch(e) {}
function check(index, arr, B) {
try { if (Inst18 <= 1000 && typeof (index) != "undefined") {_RecordType("<192,197,17>",(index)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (arr) != "undefined") {_RecordType("<199,202,17>",(arr)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (B) != "undefined") {_RecordType("<204,205,17>",(B)); Inst20++; } } catch(e) {}
  for (let i = 0; i < 1000; i++) {
try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<220,221,18>",(i)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<227,228,18>",(i)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<237,238,18>",(i)); Inst23++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (arr[i]) != "undefined") {_RecordType("<248,254,19>",(arr[i])); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (arr) != "undefined") {_RecordType("<248,251,19>",(arr)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (B) != "undefined") {_RecordType("<266,267,19>",(B)); Inst26++; } } catch(e) {}
    arr[i] instanceof B;
  }
}

try { if (Inst27 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<276,284,23>",(noInline)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (check) != "undefined") {_RecordType("<285,290,23>",(check)); Inst28++; } } catch(e) {}
noInline(check);
try { if (Inst29 <= 1000 && typeof (test) != "undefined") {_RecordType("<293,297,24>",(test)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (body) != "undefined") {_RecordType("<307,311,24>",(body)); Inst30++; } } catch(e) {}
test(function body(index) {
try { if (Inst31 <= 1000 && typeof (index) != "undefined") {_RecordType("<312,317,24>",(index)); Inst31++; } } catch(e) {}
  class A {
    constructor(x, f = func) {
try { if (Inst33 <= 1000 && typeof (x) != "undefined") {_RecordType("<349,350,26>",(x)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (f) != "undefined") {_RecordType("<352,353,26>",(f)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (func) != "undefined") {_RecordType("<356,360,26>",(func)); Inst35++; } } catch(e) {}
try { if (Inst37 <= 1000 && typeof (x) != "undefined") {_RecordType("<384,385,27>",(x)); Inst37++; } } catch(e) {}
      this._value = x;
try { if (Inst36 <= 1000 && typeof (this._value) != "undefined") {_RecordType("<370,381,27>",(this._value)); Inst36++; } } catch(e) {}
try { if (Inst39 <= 1000 && typeof (f) != "undefined") {_RecordType("<406,407,28>",(f)); Inst39++; } } catch(e) {}
      this._func = f;
try { if (Inst38 <= 1000 && typeof (this._func) != "undefined") {_RecordType("<393,403,28>",(this._func)); Inst38++; } } catch(e) {}
    }

  }
try { if (Inst32 <= 1000 && typeof (A) != "undefined") {_RecordType("<329,330,25>",(A)); Inst32++; } } catch(e) {}

try { if (Inst41 <= 1000 && typeof (A) != "undefined") {_RecordType("<439,440,33>",(A)); Inst41++; } } catch(e) {}
  class B extends A {}
try { if (Inst40 <= 1000 && typeof (B) != "undefined") {_RecordType("<429,430,33>",(B)); Inst40++; } } catch(e) {}

  let arr = [];
try { if (Inst42 <= 1000 && typeof (arr) != "undefined") {_RecordType("<451,454,35>",(arr)); Inst42++; } } catch(e) {}

  for (let i = 0; i < 1000; i++) {
try { if (Inst43 <= 1000 && typeof (i) != "undefined") {_RecordType("<473,474,37>",(i)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (i) != "undefined") {_RecordType("<480,481,37>",(i)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (i) != "undefined") {_RecordType("<490,491,37>",(i)); Inst45++; } } catch(e) {}
try { if (Inst46 <= 1000 && typeof (arr.push) != "undefined") {_RecordType("<501,509,38>",(arr.push)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (arr) != "undefined") {_RecordType("<501,504,38>",(arr)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (B) != "undefined") {_RecordType("<514,515,38>",(B)); Inst48++; } } catch(e) {}
    arr.push(new B(20));
  }

try { if (Inst49 <= 1000 && typeof (check) != "undefined") {_RecordType("<529,534,41>",(check)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (index) != "undefined") {_RecordType("<535,540,41>",(index)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (arr) != "undefined") {_RecordType("<542,545,41>",(arr)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (B) != "undefined") {_RecordType("<547,548,41>",(B)); Inst52++; } } catch(e) {}
  check(index, arr, B);
}, 8);

