var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//@ requireOptions("--useDollarVM=false")
// This test should not crash.
try { if (Inst0 <= 1000 && typeof (Date.prototype.valueOf) != "undefined") {_RecordType("<73,95,3>",(Date.prototype.valueOf)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (Date.prototype) != "undefined") {_RecordType("<73,87,3>",(Date.prototype)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Date) != "undefined") {_RecordType("<73,77,3>",(Date)); Inst2++; } } catch(e) {}
Date.prototype.valueOf;
try { if (Inst3 <= 1000 && typeof (Math.abs) != "undefined") {_RecordType("<97,105,4>",(Math.abs)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Math) != "undefined") {_RecordType("<97,101,4>",(Math)); Inst4++; } } catch(e) {}
Math.abs;

try { if (Inst5 <= 1000 && typeof (Object.prototype.__defineGetter__) != "undefined") {_RecordType("<108,141,6>",(Object.prototype.__defineGetter__)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<108,124,6>",(Object.prototype)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Object) != "undefined") {_RecordType("<108,114,6>",(Object)); Inst7++; } } catch(e) {}
Object.prototype.__defineGetter__(0, function () {
  ;
});

try { if (Inst9 <= 1000 && typeof (Array) != "undefined") {_RecordType("<187,192,10>",(Array)); Inst9++; } } catch(e) {}
class Test extends Array {}
try { if (Inst8 <= 1000 && typeof (Test) != "undefined") {_RecordType("<174,178,10>",(Test)); Inst8++; } } catch(e) {}

for (let i = 0; i < 100; i++) {
try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<206,207,12>",(i)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<213,214,12>",(i)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<222,223,12>",(i)); Inst12++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (new Test(1, 2, 3, -4, 5, 6, 7, 8, 9).splice) != "undefined") {_RecordType("<231,274,13>",(new Test(1, 2, 3, -4, 5, 6, 7, 8, 9).splice)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Test) != "undefined") {_RecordType("<235,239,13>",(Test)); Inst14++; } } catch(e) {}
  new Test(1, 2, 3, -4, 5, 6, 7, 8, 9).splice();
}

try { if (Inst15 <= 1000 && typeof (gc) != "undefined") {_RecordType("<281,283,16>",(gc)); Inst15++; } } catch(e) {}
gc();

