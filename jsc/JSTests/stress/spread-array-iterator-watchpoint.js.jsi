var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (foo) != "undefined") {_RecordType("<9,12,1>",(foo)); Inst0++; } } catch(e) {}
function foo(a) {
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<13,14,1>",(a)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (a) != "undefined") {_RecordType("<31,32,2>",(a)); Inst2++; } } catch(e) {}
  return [...a];
}

try { if (Inst3 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<38,46,5>",(noInline)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (foo) != "undefined") {_RecordType("<47,50,5>",(foo)); Inst4++; } } catch(e) {}
noInline(foo);
let arr = [];
try { if (Inst5 <= 1000 && typeof (arr) != "undefined") {_RecordType("<57,60,6>",(arr)); Inst5++; } } catch(e) {}

for (let i = 0; i < 10000; i++) {
try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<77,78,8>",(i)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<84,85,8>",(i)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<95,96,8>",(i)); Inst8++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<108,109,9>",(i)); Inst9++; } } catch(e) {}
  if (i % 100 === 0) {
try { if (Inst10 <= 1000 && typeof (arr.push) != "undefined") {_RecordType("<129,137,10>",(arr.push)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (arr) != "undefined") {_RecordType("<129,132,10>",(arr)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<142,143,10>",(i)); Inst12++; } } catch(e) {}
    arr.push([], i);
  }

try { if (Inst13 <= 1000 && typeof (foo) != "undefined") {_RecordType("<153,156,13>",(foo)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (arr) != "undefined") {_RecordType("<157,160,13>",(arr)); Inst14++; } } catch(e) {}
  foo(arr);
}

let calledIterator = false;
try { if (Inst15 <= 1000 && typeof (calledIterator) != "undefined") {_RecordType("<170,184,16>",(calledIterator)); Inst15++; } } catch(e) {}

try { if (Inst21 <= 1000 && typeof (iterator) != "undefined") {_RecordType("<239,247,18>",(iterator)); Inst21++; } } catch(e) {}
Array.prototype[Symbol.iterator] = function iterator() {
  calledIterator = true;
try { if (Inst22 <= 1000 && typeof (calledIterator) != "undefined") {_RecordType("<254,268,19>",(calledIterator)); Inst22++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (next) != "undefined") {_RecordType("<292,296,21>",(next)); Inst23++; } } catch(e) {}
  return {
    next() {
      return {
        done: true
      };
    }

  };
};
try { if (Inst16 <= 1000 && typeof (Array.prototype[Symbol.iterator]) != "undefined") {_RecordType("<195,227,18>",(Array.prototype[Symbol.iterator])); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<195,210,18>",(Array.prototype)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Array) != "undefined") {_RecordType("<195,200,18>",(Array)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<211,226,18>",(Symbol.iterator)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<211,217,18>",(Symbol)); Inst20++; } } catch(e) {}

try { if (Inst24 <= 1000 && typeof (foo) != "undefined") {_RecordType("<360,363,30>",(foo)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (arr) != "undefined") {_RecordType("<364,367,30>",(arr)); Inst25++; } } catch(e) {}
foo(arr);

try { if (Inst26 <= 1000 && typeof (calledIterator) != "undefined") {_RecordType("<376,390,32>",(calledIterator)); Inst26++; } } catch(e) {}
if (!calledIterator) {
try { if (Inst27 <= 1000 && typeof (Error) != "undefined") {_RecordType("<406,411,33>",(Error)); Inst27++; } } catch(e) {}
  throw new Error("Bad result");
}

