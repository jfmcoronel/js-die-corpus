var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (ropify) != "undefined") {_RecordType("<9,15,1>",(ropify)); Inst0++; } } catch(e) {}
function ropify(a, b, c) {
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<16,17,1>",(a)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (b) != "undefined") {_RecordType("<19,20,1>",(b)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (c) != "undefined") {_RecordType("<22,23,1>",(c)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (a) != "undefined") {_RecordType("<36,37,2>",(a)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (b) != "undefined") {_RecordType("<40,41,2>",(b)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (c) != "undefined") {_RecordType("<44,45,2>",(c)); Inst6++; } } catch(e) {}
  return a + b + c;
}

try { if (Inst7 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<50,58,5>",(noInline)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (ropify) != "undefined") {_RecordType("<59,65,5>",(ropify)); Inst8++; } } catch(e) {}
noInline(ropify);

try { if (Inst9 <= 1000 && typeof (ropify2) != "undefined") {_RecordType("<78,85,7>",(ropify2)); Inst9++; } } catch(e) {}
function ropify2(a, b, c) {
try { if (Inst10 <= 1000 && typeof (a) != "undefined") {_RecordType("<86,87,7>",(a)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (b) != "undefined") {_RecordType("<89,90,7>",(b)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (c) != "undefined") {_RecordType("<92,93,7>",(c)); Inst12++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (a) != "undefined") {_RecordType("<106,107,8>",(a)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (b) != "undefined") {_RecordType("<110,111,8>",(b)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (c) != "undefined") {_RecordType("<114,115,8>",(c)); Inst15++; } } catch(e) {}
  return a + b + c;
}

try { if (Inst16 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<120,128,11>",(noInline)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (ropify2) != "undefined") {_RecordType("<129,136,11>",(ropify2)); Inst17++; } } catch(e) {}
noInline(ropify2);
try { if (Inst19 <= 1000 && typeof (String) != "undefined") {_RecordType("<154,160,12>",(String)); Inst19++; } } catch(e) {}
let test = new String("test");
try { if (Inst18 <= 1000 && typeof (test) != "undefined") {_RecordType("<143,147,12>",(test)); Inst18++; } } catch(e) {}

for (let i = 0; i < 100000; i++) {
try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<180,181,14>",(i)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<187,188,14>",(i)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<199,200,14>",(i)); Inst22++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (ropify) != "undefined") {_RecordType("<212,218,15>",(ropify)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (test) != "undefined") {_RecordType("<229,233,15>",(test)); Inst24++; } } catch(e) {}
  if (ropify("a", "b", test) !== "abtest") {
    throw "wrong on warmup";
  }
}

String.prototype[Symbol.toPrimitive] = function () {
  return "changed";
};
try { if (Inst25 <= 1000 && typeof (String.prototype[Symbol.toPrimitive]) != "undefined") {_RecordType("<287,323,20>",(String.prototype[Symbol.toPrimitive])); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (String.prototype) != "undefined") {_RecordType("<287,303,20>",(String.prototype)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (String) != "undefined") {_RecordType("<287,293,20>",(String)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (Symbol.toPrimitive) != "undefined") {_RecordType("<304,322,20>",(Symbol.toPrimitive)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<304,310,20>",(Symbol)); Inst29++; } } catch(e) {}

try { if (Inst30 <= 1000 && typeof (ropify) != "undefined") {_RecordType("<368,374,24>",(ropify)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (test) != "undefined") {_RecordType("<385,389,24>",(test)); Inst31++; } } catch(e) {}
if (ropify("a", "b", test) !== "abchanged") {
  throw "watchpoint didn't fire";
} // Test we don't start doing the wrong thing if the prototype chain has been mucked with.


for (let i = 0; i < 100000; i++) {
try { if (Inst32 <= 1000 && typeof (i) != "undefined") {_RecordType("<547,548,29>",(i)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (i) != "undefined") {_RecordType("<554,555,29>",(i)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (i) != "undefined") {_RecordType("<566,567,29>",(i)); Inst34++; } } catch(e) {}
try { if (Inst35 <= 1000 && typeof (ropify2) != "undefined") {_RecordType("<579,586,30>",(ropify2)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (test) != "undefined") {_RecordType("<597,601,30>",(test)); Inst36++; } } catch(e) {}
  if (ropify2("a", "b", test) !== "abchanged") {
    throw "wrong on warmup";
  }
}

