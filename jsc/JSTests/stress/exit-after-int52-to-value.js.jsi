var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (foo) != "undefined") {_RecordType("<9,12,1>",(foo)); Inst0++; } } catch(e) {}
function foo(a, b, c) {
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<13,14,1>",(a)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (b) != "undefined") {_RecordType("<16,17,1>",(b)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (c) != "undefined") {_RecordType("<19,20,1>",(c)); Inst3++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (a.f) != "undefined") {_RecordType("<34,37,2>",(a.f)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (a) != "undefined") {_RecordType("<34,35,2>",(a)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (b.f) != "undefined") {_RecordType("<40,43,2>",(b.f)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (b) != "undefined") {_RecordType("<40,41,2>",(b)); Inst10++; } } catch(e) {}
  c.f.f = a.f + b.f;
try { if (Inst4 <= 1000 && typeof (c.f.f) != "undefined") {_RecordType("<26,31,2>",(c.f.f)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (c.f) != "undefined") {_RecordType("<26,29,2>",(c.f)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (c) != "undefined") {_RecordType("<26,27,2>",(c)); Inst6++; } } catch(e) {}
}

try { if (Inst11 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<48,56,5>",(noInline)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (foo) != "undefined") {_RecordType("<57,60,5>",(foo)); Inst12++; } } catch(e) {}
noInline(foo);
var counter = 0;
try { if (Inst13 <= 1000 && typeof (counter) != "undefined") {_RecordType("<67,74,6>",(counter)); Inst13++; } } catch(e) {}

try { if (Inst14 <= 1000 && typeof (makeWeirdObject) != "undefined") {_RecordType("<90,105,8>",(makeWeirdObject)); Inst14++; } } catch(e) {}
function makeWeirdObject() {
  var result = {};
try { if (Inst15 <= 1000 && typeof (result) != "undefined") {_RecordType("<116,122,9>",(result)); Inst15++; } } catch(e) {}
  result["blah" + counter++] = 42;
try { if (Inst16 <= 1000 && typeof (result["blah" + counter++]) != "undefined") {_RecordType("<131,157,10>",(result["blah" + counter++])); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (result) != "undefined") {_RecordType("<131,137,10>",(result)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (counter) != "undefined") {_RecordType("<147,154,10>",(counter)); Inst18++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (result) != "undefined") {_RecordType("<173,179,11>",(result)); Inst19++; } } catch(e) {}
  return result;
}

for (var i = 0; i < 100000; ++i) {
try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<193,194,14>",(i)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<200,201,14>",(i)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<214,215,14>",(i)); Inst22++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (makeWeirdObject) != "undefined") {_RecordType("<229,244,15>",(makeWeirdObject)); Inst24++; } } catch(e) {}
  var o = makeWeirdObject();
try { if (Inst23 <= 1000 && typeof (o) != "undefined") {_RecordType("<225,226,15>",(o)); Inst23++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (foo) != "undefined") {_RecordType("<250,253,16>",(foo)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (o) != "undefined") {_RecordType("<313,314,21>",(o)); Inst26++; } } catch(e) {}
  foo({
    f: 2000000000
  }, {
    f: 2000000000
  }, {
    f: o
  });

try { if (Inst27 <= 1000 && typeof (o.f) != "undefined") {_RecordType("<328,331,24>",(o.f)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (o) != "undefined") {_RecordType("<328,329,24>",(o)); Inst28++; } } catch(e) {}
  if (o.f != 4000000000) {
try { if (Inst29 <= 1000 && typeof (result) != "undefined") {_RecordType("<383,389,25>",(result)); Inst29++; } } catch(e) {}
    throw "Error: bad result: " + result;
  }
}

var thingy;
try { if (Inst30 <= 1000 && typeof (thingy) != "undefined") {_RecordType("<402,408,29>",(thingy)); Inst30++; } } catch(e) {}

try { if (Inst31 <= 1000 && typeof (Number.prototype.__defineSetter__) != "undefined") {_RecordType("<411,444,31>",(Number.prototype.__defineSetter__)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (Number.prototype) != "undefined") {_RecordType("<411,427,31>",(Number.prototype)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (Number) != "undefined") {_RecordType("<411,417,31>",(Number)); Inst33++; } } catch(e) {}
Number.prototype.__defineSetter__("f", function (value) {
try { if (Inst34 <= 1000 && typeof (value) != "undefined") {_RecordType("<460,465,31>",(value)); Inst34++; } } catch(e) {}
try { if (Inst36 <= 1000 && typeof (value) != "undefined") {_RecordType("<480,485,32>",(value)); Inst36++; } } catch(e) {}
  thingy = value;
try { if (Inst35 <= 1000 && typeof (thingy) != "undefined") {_RecordType("<471,477,32>",(thingy)); Inst35++; } } catch(e) {}
});

try { if (Inst37 <= 1000 && typeof (foo) != "undefined") {_RecordType("<492,495,35>",(foo)); Inst37++; } } catch(e) {}
foo({
  f: 2000000000
}, {
  f: 2000000000
}, {
  f: 42
});

try { if (Inst38 <= 1000 && typeof (thingy) != "undefined") {_RecordType("<557,563,43>",(thingy)); Inst38++; } } catch(e) {}
if (thingy != 4000000000) {
try { if (Inst39 <= 1000 && typeof (thingy) != "undefined") {_RecordType("<613,619,44>",(thingy)); Inst39++; } } catch(e) {}
  throw "Error: bad result: " + thingy;
}

