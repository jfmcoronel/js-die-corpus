var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (foo) != "undefined") {_RecordType("<9,12,1>",(foo)); Inst0++; } } catch(e) {}
function foo(o, value) {
try { if (Inst1 <= 1000 && typeof (o) != "undefined") {_RecordType("<13,14,1>",(o)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (value) != "undefined") {_RecordType("<16,21,1>",(value)); Inst2++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (value) != "undefined") {_RecordType("<33,38,2>",(value)); Inst5++; } } catch(e) {}
  o.f = value;
try { if (Inst3 <= 1000 && typeof (o.f) != "undefined") {_RecordType("<27,30,2>",(o.f)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (o) != "undefined") {_RecordType("<27,28,2>",(o)); Inst4++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (o.f) != "undefined") {_RecordType("<49,52,3>",(o.f)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (o) != "undefined") {_RecordType("<49,50,3>",(o)); Inst7++; } } catch(e) {}
  return o.f;
}

try { if (Inst8 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<57,65,6>",(noInline)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (foo) != "undefined") {_RecordType("<66,69,6>",(foo)); Inst9++; } } catch(e) {}
noInline(foo);
var counter = 0;
try { if (Inst10 <= 1000 && typeof (counter) != "undefined") {_RecordType("<76,83,7>",(counter)); Inst10++; } } catch(e) {}

try { if (Inst11 <= 1000 && typeof (test) != "undefined") {_RecordType("<99,103,9>",(test)); Inst11++; } } catch(e) {}
function test(o, value, expectedCount) {
try { if (Inst12 <= 1000 && typeof (o) != "undefined") {_RecordType("<104,105,9>",(o)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (value) != "undefined") {_RecordType("<107,112,9>",(value)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (expectedCount) != "undefined") {_RecordType("<114,127,9>",(expectedCount)); Inst14++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (foo) != "undefined") {_RecordType("<146,149,10>",(foo)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (o) != "undefined") {_RecordType("<150,151,10>",(o)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (value) != "undefined") {_RecordType("<153,158,10>",(value)); Inst18++; } } catch(e) {}
  var result = foo(o, value);
try { if (Inst15 <= 1000 && typeof (result) != "undefined") {_RecordType("<137,143,10>",(result)); Inst15++; } } catch(e) {}

try { if (Inst19 <= 1000 && typeof (result) != "undefined") {_RecordType("<168,174,12>",(result)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (value) != "undefined") {_RecordType("<178,183,12>",(value)); Inst20++; } } catch(e) {}
  if (result != value) {
try { if (Inst21 <= 1000 && typeof (Error) != "undefined") {_RecordType("<201,206,13>",(Error)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (result) != "undefined") {_RecordType("<224,230,13>",(result)); Inst22++; } } catch(e) {}
    throw new Error("Bad result: " + result);
  }

try { if (Inst23 <= 1000 && typeof (counter) != "undefined") {_RecordType("<244,251,16>",(counter)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (expectedCount) != "undefined") {_RecordType("<255,268,16>",(expectedCount)); Inst24++; } } catch(e) {}
  if (counter != expectedCount) {
try { if (Inst25 <= 1000 && typeof (Error) != "undefined") {_RecordType("<286,291,17>",(Error)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (counter) != "undefined") {_RecordType("<316,323,17>",(counter)); Inst26++; } } catch(e) {}
    throw new Error("Bad counter value: " + counter);
  }
}

for (var i = 0; i < 100000; ++i) {
try { if (Inst27 <= 1000 && typeof (i) != "undefined") {_RecordType("<342,343,21>",(i)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (i) != "undefined") {_RecordType("<349,350,21>",(i)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (i) != "undefined") {_RecordType("<363,364,21>",(i)); Inst29++; } } catch(e) {}
try { if (Inst31 <= 1000 && typeof (f) != "undefined") {_RecordType("<388,389,23>",(f)); Inst31++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (f) != "undefined") {_RecordType("<432,433,27>",(f)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (value) != "undefined") {_RecordType("<434,439,27>",(value)); Inst34++; } } catch(e) {}
  var o = {
    get f() {
try { if (Inst32 <= 1000 && typeof (this._f) != "undefined") {_RecordType("<407,414,24>",(this._f)); Inst32++; } } catch(e) {}
      return this._f;
    },

    set f(value) {
try { if (Inst35 <= 1000 && typeof (counter) != "undefined") {_RecordType("<449,456,28>",(counter)); Inst35++; } } catch(e) {}
      counter++;
try { if (Inst37 <= 1000 && typeof (value) != "undefined") {_RecordType("<476,481,29>",(value)); Inst37++; } } catch(e) {}
      this._f = value;
try { if (Inst36 <= 1000 && typeof (this._f) != "undefined") {_RecordType("<466,473,29>",(this._f)); Inst36++; } } catch(e) {}
    }

  };
try { if (Inst30 <= 1000 && typeof (o) != "undefined") {_RecordType("<374,375,22>",(o)); Inst30++; } } catch(e) {}
try { if (Inst38 <= 1000 && typeof (test) != "undefined") {_RecordType("<497,501,33>",(test)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (o) != "undefined") {_RecordType("<502,503,33>",(o)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (i) != "undefined") {_RecordType("<505,506,33>",(i)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (counter) != "undefined") {_RecordType("<508,515,33>",(counter)); Inst41++; } } catch(e) {}
  test(o, i, counter + 1);
}

