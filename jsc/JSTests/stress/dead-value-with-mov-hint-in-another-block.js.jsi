var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (foo) != "undefined") {_RecordType("<9,12,1>",(foo)); Inst0++; } } catch(e) {}
function foo(a, b, p, o) {
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<13,14,1>",(a)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (b) != "undefined") {_RecordType("<16,17,1>",(b)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (p) != "undefined") {_RecordType("<19,20,1>",(p)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (o) != "undefined") {_RecordType("<22,23,1>",(o)); Inst4++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (a) != "undefined") {_RecordType("<37,38,2>",(a)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (b) != "undefined") {_RecordType("<41,42,2>",(b)); Inst7++; } } catch(e) {}
  var x = a + b;
try { if (Inst5 <= 1000 && typeof (x) != "undefined") {_RecordType("<33,34,2>",(x)); Inst5++; } } catch(e) {}

try { if (Inst8 <= 1000 && typeof (p) != "undefined") {_RecordType("<51,52,4>",(p)); Inst8++; } } catch(e) {}
  if (p) {
try { if (Inst10 <= 1000 && typeof (x) != "undefined") {_RecordType("<68,69,5>",(x)); Inst10++; } } catch(e) {}
    var y = x;
try { if (Inst9 <= 1000 && typeof (y) != "undefined") {_RecordType("<64,65,5>",(y)); Inst9++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (o.f.f) != "undefined") {_RecordType("<88,93,6>",(o.f.f)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (o.f) != "undefined") {_RecordType("<88,91,6>",(o.f)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (o) != "undefined") {_RecordType("<88,89,6>",(o)); Inst14++; } } catch(e) {}
    var result = o.f.f;
try { if (Inst11 <= 1000 && typeof (result) != "undefined") {_RecordType("<79,85,6>",(result)); Inst11++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (y) != "undefined") {_RecordType("<107,108,7>",(y)); Inst16++; } } catch(e) {}
    var z = y + 1;
try { if (Inst15 <= 1000 && typeof (z) != "undefined") {_RecordType("<103,104,7>",(z)); Inst15++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (result) != "undefined") {_RecordType("<125,131,8>",(result)); Inst17++; } } catch(e) {}
    return result;
  }
}

try { if (Inst18 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<140,148,12>",(noInline)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (foo) != "undefined") {_RecordType("<149,152,12>",(foo)); Inst19++; } } catch(e) {}
noInline(foo);

for (var i = 0; i < 100000; ++i) {
try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<165,166,14>",(i)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<172,173,14>",(i)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<186,187,14>",(i)); Inst22++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (foo) != "undefined") {_RecordType("<206,209,15>",(foo)); Inst24++; } } catch(e) {}
  var result = foo(1, 2, true, {
    f: {
      f: 42
    }
  });
try { if (Inst23 <= 1000 && typeof (result) != "undefined") {_RecordType("<197,203,15>",(result)); Inst23++; } } catch(e) {}

try { if (Inst25 <= 1000 && typeof (result) != "undefined") {_RecordType("<264,270,21>",(result)); Inst25++; } } catch(e) {}
  if (result != 42) {
try { if (Inst26 <= 1000 && typeof (result) != "undefined") {_RecordType("<314,320,22>",(result)); Inst26++; } } catch(e) {}
    throw "Error: bad result: " + result;
  }
}

