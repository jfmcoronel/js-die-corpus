var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<9,17,1>",(shouldBe)); Inst0++; } } catch(e) {}
function shouldBe(actual, expected) {
try { if (Inst1 <= 1000 && typeof (actual) != "undefined") {_RecordType("<18,24,1>",(actual)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (expected) != "undefined") {_RecordType("<26,34,1>",(expected)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (actual) != "undefined") {_RecordType("<44,50,2>",(actual)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (expected) != "undefined") {_RecordType("<55,63,2>",(expected)); Inst4++; } } catch(e) {}
  if (actual !== expected) {
try { if (Inst5 <= 1000 && typeof (Error) != "undefined") {_RecordType("<81,86,3>",(Error)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (actual) != "undefined") {_RecordType("<103,109,3>",(actual)); Inst6++; } } catch(e) {}
    throw new Error('bad value: ' + actual);
  }
}

{
  let array = [42.195, -0.0];
try { if (Inst7 <= 1000 && typeof (array) != "undefined") {_RecordType("<127,132,8>",(array)); Inst7++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<153,161,9>",(shouldBe)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (array.indexOf) != "undefined") {_RecordType("<162,175,9>",(array.indexOf)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (array) != "undefined") {_RecordType("<162,167,9>",(array)); Inst10++; } } catch(e) {}
  shouldBe(array.indexOf(0), 1);
try { if (Inst11 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<186,194,10>",(shouldBe)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (array.indexOf) != "undefined") {_RecordType("<195,208,10>",(array.indexOf)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (array) != "undefined") {_RecordType("<195,200,10>",(array)); Inst13++; } } catch(e) {}
  shouldBe(array.indexOf(-0), 1);
}
{
  let array = [42.195, 0, -0.0];
try { if (Inst14 <= 1000 && typeof (array) != "undefined") {_RecordType("<228,233,13>",(array)); Inst14++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<257,265,14>",(shouldBe)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (array.indexOf) != "undefined") {_RecordType("<266,279,14>",(array.indexOf)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (array) != "undefined") {_RecordType("<266,271,14>",(array)); Inst17++; } } catch(e) {}
  shouldBe(array.indexOf(0), 1);
try { if (Inst18 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<290,298,15>",(shouldBe)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (array.indexOf) != "undefined") {_RecordType("<299,312,15>",(array.indexOf)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (array) != "undefined") {_RecordType("<299,304,15>",(array)); Inst20++; } } catch(e) {}
  shouldBe(array.indexOf(-0), 1);
}
{
  let array = [42, 0];
try { if (Inst21 <= 1000 && typeof (array) != "undefined") {_RecordType("<332,337,18>",(array)); Inst21++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<351,359,19>",(shouldBe)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (array.indexOf) != "undefined") {_RecordType("<360,373,19>",(array.indexOf)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (array) != "undefined") {_RecordType("<360,365,19>",(array)); Inst24++; } } catch(e) {}
  shouldBe(array.indexOf(0), 1);
try { if (Inst25 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<384,392,20>",(shouldBe)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (array.indexOf) != "undefined") {_RecordType("<393,406,20>",(array.indexOf)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (array) != "undefined") {_RecordType("<393,398,20>",(array)); Inst27++; } } catch(e) {}
  shouldBe(array.indexOf(-0), 1);
}

