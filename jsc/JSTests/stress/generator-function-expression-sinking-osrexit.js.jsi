var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<9,17,1>",(shouldBe)); Inst0++; } } catch(e) {}
function shouldBe(actual, expected) {
try { if (Inst1 <= 1000 && typeof (actual) != "undefined") {_RecordType("<18,24,1>",(actual)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (expected) != "undefined") {_RecordType("<26,34,1>",(expected)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (actual) != "undefined") {_RecordType("<44,50,2>",(actual)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (expected) != "undefined") {_RecordType("<55,63,2>",(expected)); Inst4++; } } catch(e) {}
  if (actual !== expected) {
try { if (Inst5 <= 1000 && typeof (Error) != "undefined") {_RecordType("<81,86,3>",(Error)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (actual) != "undefined") {_RecordType("<103,109,3>",(actual)); Inst6++; } } catch(e) {}
    throw new Error('bad value: ' + actual);
  }
}

try { if (Inst8 <= 1000 && typeof (function* () {
  ;
}.__proto__) != "undefined") {_RecordType("<152,182,7>",(function* () {
  ;
}.__proto__)); Inst8++; } } catch(e) {}
var GeneratorFunctionPrototype = function* () {
  ;
}.__proto__;
try { if (Inst7 <= 1000 && typeof (GeneratorFunctionPrototype) != "undefined") {_RecordType("<123,149,7>",(GeneratorFunctionPrototype)); Inst7++; } } catch(e) {}

try { if (Inst9 <= 1000 && typeof (sink) != "undefined") {_RecordType("<194,198,11>",(sink)); Inst9++; } } catch(e) {}
function sink(p, q) {
try { if (Inst10 <= 1000 && typeof (p) != "undefined") {_RecordType("<199,200,11>",(p)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (q) != "undefined") {_RecordType("<202,203,11>",(q)); Inst11++; } } catch(e) {}
  var g = function* (x) {
try { if (Inst13 <= 1000 && typeof (x) != "undefined") {_RecordType("<228,229,12>",(x)); Inst13++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (x) != "undefined") {_RecordType("<244,245,13>",(x)); Inst14++; } } catch(e) {}
    return x;
  };
try { if (Inst12 <= 1000 && typeof (g) != "undefined") {_RecordType("<213,214,12>",(g)); Inst12++; } } catch(e) {}

try { if (Inst15 <= 1000 && typeof (p) != "undefined") {_RecordType("<259,260,16>",(p)); Inst15++; } } catch(e) {}
  if (p) {
try { if (Inst16 <= 1000 && typeof (q) != "undefined") {_RecordType("<272,273,17>",(q)); Inst16++; } } catch(e) {}
    if (q) {
try { if (Inst17 <= 1000 && typeof (OSRExit) != "undefined") {_RecordType("<283,290,18>",(OSRExit)); Inst17++; } } catch(e) {}
      OSRExit();
    }

try { if (Inst18 <= 1000 && typeof (g) != "undefined") {_RecordType("<312,313,21>",(g)); Inst18++; } } catch(e) {}
    return g;
  }

  return function* (x) {
try { if (Inst19 <= 1000 && typeof (x) != "undefined") {_RecordType("<340,341,24>",(x)); Inst19++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (x) != "undefined") {_RecordType("<356,357,25>",(x)); Inst20++; } } catch(e) {}
    return x;
  };
}

try { if (Inst21 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<367,375,29>",(noInline)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (sink) != "undefined") {_RecordType("<376,380,29>",(sink)); Inst22++; } } catch(e) {}
noInline(sink);

for (var i = 0; i < 10000; ++i) {
try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<393,394,31>",(i)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<400,401,31>",(i)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<413,414,31>",(i)); Inst25++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (sink) != "undefined") {_RecordType("<428,432,32>",(sink)); Inst27++; } } catch(e) {}
  var f = sink(true, false);
try { if (Inst26 <= 1000 && typeof (f) != "undefined") {_RecordType("<424,425,32>",(f)); Inst26++; } } catch(e) {}
try { if (Inst28 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<449,457,33>",(shouldBe)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (f.__proto__) != "undefined") {_RecordType("<458,469,33>",(f.__proto__)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (f) != "undefined") {_RecordType("<458,459,33>",(f)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (GeneratorFunctionPrototype) != "undefined") {_RecordType("<471,497,33>",(GeneratorFunctionPrototype)); Inst31++; } } catch(e) {}
  shouldBe(f.__proto__, GeneratorFunctionPrototype);
try { if (Inst33 <= 1000 && typeof (f) != "undefined") {_RecordType("<515,516,34>",(f)); Inst33++; } } catch(e) {}
  var result = f(42);
try { if (Inst32 <= 1000 && typeof (result) != "undefined") {_RecordType("<506,512,34>",(result)); Inst32++; } } catch(e) {}

try { if (Inst34 <= 1000 && typeof (result.next().value) != "undefined") {_RecordType("<529,548,36>",(result.next().value)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (result.next) != "undefined") {_RecordType("<529,540,36>",(result.next)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (result) != "undefined") {_RecordType("<529,535,36>",(result)); Inst36++; } } catch(e) {}
  if (result.next().value != 42) {
try { if (Inst37 <= 1000 && typeof (result) != "undefined") {_RecordType("<600,606,37>",(result)); Inst37++; } } catch(e) {}
    throw "Error: expected 42 but got " + result;
  }
} // At this point, the function should be compiled down to the FTL
// Check that the function is properly allocated on OSR exit


try { if (Inst39 <= 1000 && typeof (sink) != "undefined") {_RecordType("<751,755,43>",(sink)); Inst39++; } } catch(e) {}
var f = sink(true, true);
try { if (Inst38 <= 1000 && typeof (f) != "undefined") {_RecordType("<747,748,43>",(f)); Inst38++; } } catch(e) {}
try { if (Inst40 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<769,777,44>",(shouldBe)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (f.__proto__) != "undefined") {_RecordType("<778,789,44>",(f.__proto__)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (f) != "undefined") {_RecordType("<778,779,44>",(f)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (GeneratorFunctionPrototype) != "undefined") {_RecordType("<791,817,44>",(GeneratorFunctionPrototype)); Inst43++; } } catch(e) {}
shouldBe(f.__proto__, GeneratorFunctionPrototype);
try { if (Inst45 <= 1000 && typeof (f) != "undefined") {_RecordType("<833,834,45>",(f)); Inst45++; } } catch(e) {}
var result = f(42);
try { if (Inst44 <= 1000 && typeof (result) != "undefined") {_RecordType("<824,830,45>",(result)); Inst44++; } } catch(e) {}

try { if (Inst46 <= 1000 && typeof (result.next().value) != "undefined") {_RecordType("<845,864,47>",(result.next().value)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (result.next) != "undefined") {_RecordType("<845,856,47>",(result.next)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (result) != "undefined") {_RecordType("<845,851,47>",(result)); Inst48++; } } catch(e) {}
if (result.next().value != 42) {
try { if (Inst49 <= 1000 && typeof (result) != "undefined") {_RecordType("<914,920,48>",(result)); Inst49++; } } catch(e) {}
  throw "Error: expected 42 but got " + result;
}

