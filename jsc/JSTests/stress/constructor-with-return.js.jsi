var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (Test) != "undefined") {_RecordType("<9,13,1>",(Test)); Inst0++; } } catch(e) {}
function Test(value, returnIt) {
try { if (Inst1 <= 1000 && typeof (value) != "undefined") {_RecordType("<14,19,1>",(value)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (returnIt) != "undefined") {_RecordType("<21,29,1>",(returnIt)); Inst2++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (value) != "undefined") {_RecordType("<48,53,2>",(value)); Inst4++; } } catch(e) {}
  this.value = value;
try { if (Inst3 <= 1000 && typeof (this.value) != "undefined") {_RecordType("<35,45,2>",(this.value)); Inst3++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (returnIt) != "undefined") {_RecordType("<73,81,3>",(returnIt)); Inst6++; } } catch(e) {}
  this.returnIt = returnIt;
try { if (Inst5 <= 1000 && typeof (this.returnIt) != "undefined") {_RecordType("<57,70,3>",(this.returnIt)); Inst5++; } } catch(e) {}
}

try { if (Inst8 <= 1000 && typeof (Test) != "undefined") {_RecordType("<103,107,6>",(Test)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Test) != "undefined") {_RecordType("<130,134,6>",(Test)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Test) != "undefined") {_RecordType("<150,154,6>",(Test)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Test) != "undefined") {_RecordType("<172,176,6>",(Test)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Test) != "undefined") {_RecordType("<197,201,6>",(Test)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Test) != "undefined") {_RecordType("<220,224,6>",(Test)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Test) != "undefined") {_RecordType("<243,247,6>",(Test)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Test) != "undefined") {_RecordType("<267,271,6>",(Test)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<272,287,6>",(Symbol.iterator)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<272,278,6>",(Symbol)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Test) != "undefined") {_RecordType("<301,305,6>",(Test)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Test) != "undefined") {_RecordType("<330,334,8>",(Test)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (Test) != "undefined") {_RecordType("<357,361,8>",(Test)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (String) != "undefined") {_RecordType("<366,372,8>",(String)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Test) != "undefined") {_RecordType("<395,399,8>",(Test)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Number) != "undefined") {_RecordType("<404,410,8>",(Number)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (Test) != "undefined") {_RecordType("<427,431,8>",(Test)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Boolean) != "undefined") {_RecordType("<436,443,8>",(Boolean)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Test) != "undefined") {_RecordType("<463,467,8>",(Test)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (Boolean) != "undefined") {_RecordType("<472,479,8>",(Boolean)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (Test) != "undefined") {_RecordType("<499,503,8>",(Test)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (Object) != "undefined") {_RecordType("<504,510,8>",(Object)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<511,526,8>",(Symbol.iterator)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<511,517,8>",(Symbol)); Inst31++; } } catch(e) {}
var tests = [new Test("string", false), new Test(5, false), new Test(6.5, false), new Test(void 0, false), new Test(null, false), new Test(true, false), new Test(false, false), new Test(Symbol.iterator, false), new Test({
  f: 42
}, true), new Test([1, 2, 3], true), new Test(new String("string"), true), new Test(new Number(42), true), new Test(new Boolean(false), true), new Test(new Boolean(false), true), new Test(Object(Symbol.iterator), true)];
try { if (Inst7 <= 1000 && typeof (tests) != "undefined") {_RecordType("<90,95,6>",(tests)); Inst7++; } } catch(e) {}

for (let i = 0; i < 1000; ++i) {
try { if (Inst32 <= 1000 && typeof (i) != "undefined") {_RecordType("<547,548,10>",(i)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (i) != "undefined") {_RecordType("<554,555,10>",(i)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (i) != "undefined") {_RecordType("<566,567,10>",(i)); Inst34++; } } catch(e) {}
try { if (Inst35 <= 1000 && typeof (tests.forEach) != "undefined") {_RecordType("<573,586,11>",(tests.forEach)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (tests) != "undefined") {_RecordType("<573,578,11>",(tests)); Inst36++; } } catch(e) {}
  tests.forEach(function (test) {
try { if (Inst37 <= 1000 && typeof (test) != "undefined") {_RecordType("<597,601,11>",(test)); Inst37++; } } catch(e) {}
try { if (Inst38 <= 1000 && typeof (Constructor) != "undefined") {_RecordType("<618,629,12>",(Constructor)); Inst38++; } } catch(e) {}
    function Constructor() {
try { if (Inst39 <= 1000 && typeof (test.value) != "undefined") {_RecordType("<647,657,13>",(test.value)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (test) != "undefined") {_RecordType("<647,651,13>",(test)); Inst40++; } } catch(e) {}
      return test.value;
    }

try { if (Inst42 <= 1000 && typeof (Constructor) != "undefined") {_RecordType("<687,698,16>",(Constructor)); Inst42++; } } catch(e) {}
    var result = new Constructor();
try { if (Inst41 <= 1000 && typeof (result) != "undefined") {_RecordType("<674,680,16>",(result)); Inst41++; } } catch(e) {}

try { if (Inst43 <= 1000 && typeof (test.returnIt) != "undefined") {_RecordType("<711,724,18>",(test.returnIt)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (test) != "undefined") {_RecordType("<711,715,18>",(test)); Inst44++; } } catch(e) {}
    if (test.returnIt) {
try { if (Inst45 <= 1000 && typeof (test.value) != "undefined") {_RecordType("<738,748,19>",(test.value)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (test) != "undefined") {_RecordType("<738,742,19>",(test)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (result) != "undefined") {_RecordType("<753,759,19>",(result)); Inst47++; } } catch(e) {}
      if (test.value !== result) {
try { if (Inst48 <= 1000 && typeof (result) != "undefined") {_RecordType("<794,800,20>",(result)); Inst48++; } } catch(e) {}
        throw "Bad result: " + result;
      }
    } else {
try { if (Inst49 <= 1000 && typeof (result) != "undefined") {_RecordType("<835,841,23>",(result)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (Constructor) != "undefined") {_RecordType("<853,864,23>",(Constructor)); Inst50++; } } catch(e) {}
      if (!(result instanceof Constructor)) {
try { if (Inst51 <= 1000 && typeof (result) != "undefined") {_RecordType("<900,906,24>",(result)); Inst51++; } } catch(e) {}
        throw "Bad result: " + result;
      }
    }
  });
}

