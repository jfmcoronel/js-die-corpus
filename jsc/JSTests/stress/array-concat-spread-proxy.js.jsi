var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// This file tests is concat spreadable.
try { if (Inst0 <= 1000 && typeof (arrayEq) != "undefined") {_RecordType("<50,57,2>",(arrayEq)); Inst0++; } } catch(e) {}
function arrayEq(a, b) {
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<58,59,2>",(a)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (b) != "undefined") {_RecordType("<61,62,2>",(b)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<72,80,3>",(a.length)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (a) != "undefined") {_RecordType("<72,73,3>",(a)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (b.length) != "undefined") {_RecordType("<85,93,3>",(b.length)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (b) != "undefined") {_RecordType("<85,86,3>",(b)); Inst6++; } } catch(e) {}
  if (a.length !== b.length) {
    return false;
  }

  for (let i = 0; i < a.length; i++) {
try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<131,132,7>",(i)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<138,139,7>",(i)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<142,150,7>",(a.length)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (a) != "undefined") {_RecordType("<142,143,7>",(a)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<152,153,7>",(i)); Inst11++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (a[i]) != "undefined") {_RecordType("<167,171,8>",(a[i])); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (a) != "undefined") {_RecordType("<167,168,8>",(a)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (b[i]) != "undefined") {_RecordType("<176,180,8>",(b[i])); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (b) != "undefined") {_RecordType("<176,177,8>",(b)); Inst15++; } } catch(e) {}
    if (a[i] !== b[i]) {
      return false;
    }
  }

  return true;
}

{
  let array = [1, 2, 3];
try { if (Inst16 <= 1000 && typeof (array) != "undefined") {_RecordType("<241,246,17>",(array)); Inst16++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (Proxy.revocable) != "undefined") {_RecordType("<299,314,21>",(Proxy.revocable)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<299,304,21>",(Proxy)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (array) != "undefined") {_RecordType("<315,320,21>",(array)); Inst21++; } } catch(e) {}
  let {
    proxy: p,
    revoke
  } = Proxy.revocable(array, {
    get: function (o, k) {
try { if (Inst22 <= 1000 && typeof (o) != "undefined") {_RecordType("<343,344,22>",(o)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (k) != "undefined") {_RecordType("<346,347,22>",(k)); Inst23++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (o[k]) != "undefined") {_RecordType("<364,368,23>",(o[k])); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (o) != "undefined") {_RecordType("<364,365,23>",(o)); Inst25++; } } catch(e) {}
      return o[k];
    }
  }); // Test it works with proxies by default
try { if (Inst17 <= 1000 && typeof (p) != "undefined") {_RecordType("<279,280,19>",(p)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (revoke) != "undefined") {_RecordType("<286,292,20>",(revoke)); Inst18++; } } catch(e) {}

  for (let i = 0; i < 100000; i++) {
try { if (Inst26 <= 1000 && typeof (i) != "undefined") {_RecordType("<435,436,27>",(i)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (i) != "undefined") {_RecordType("<442,443,27>",(i)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (i) != "undefined") {_RecordType("<454,455,27>",(i)); Inst28++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (arrayEq) != "undefined") {_RecordType("<470,477,28>",(arrayEq)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (Array.prototype.concat.call) != "undefined") {_RecordType("<478,505,28>",(Array.prototype.concat.call)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (Array.prototype.concat) != "undefined") {_RecordType("<478,500,28>",(Array.prototype.concat)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<478,493,28>",(Array.prototype)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (Array) != "undefined") {_RecordType("<478,483,28>",(Array)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (p) != "undefined") {_RecordType("<506,507,28>",(p)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (p) != "undefined") {_RecordType("<509,510,28>",(p)); Inst35++; } } catch(e) {}
    if (!arrayEq(Array.prototype.concat.call(p, p), [1, 2, 3, 1, 2, 3])) {
      throw "failed normally with a proxy";
    }
  } // Test it works with spreadable false.


  p[Symbol.isConcatSpreadable] = false;
try { if (Inst36 <= 1000 && typeof (p[Symbol.isConcatSpreadable]) != "undefined") {_RecordType("<634,662,34>",(p[Symbol.isConcatSpreadable])); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (p) != "undefined") {_RecordType("<634,635,34>",(p)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (Symbol.isConcatSpreadable) != "undefined") {_RecordType("<636,661,34>",(Symbol.isConcatSpreadable)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<636,642,34>",(Symbol)); Inst39++; } } catch(e) {}

  for (let i = 0; i < 100000; i++) {
try { if (Inst40 <= 1000 && typeof (i) != "undefined") {_RecordType("<684,685,36>",(i)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (i) != "undefined") {_RecordType("<691,692,36>",(i)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (i) != "undefined") {_RecordType("<703,704,36>",(i)); Inst42++; } } catch(e) {}
try { if (Inst43 <= 1000 && typeof (arrayEq) != "undefined") {_RecordType("<719,726,37>",(arrayEq)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (Array.prototype.concat.call) != "undefined") {_RecordType("<727,754,37>",(Array.prototype.concat.call)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (Array.prototype.concat) != "undefined") {_RecordType("<727,749,37>",(Array.prototype.concat)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<727,742,37>",(Array.prototype)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (Array) != "undefined") {_RecordType("<727,732,37>",(Array)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (p) != "undefined") {_RecordType("<755,756,37>",(p)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (p) != "undefined") {_RecordType("<758,759,37>",(p)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (p) != "undefined") {_RecordType("<763,764,37>",(p)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (p) != "undefined") {_RecordType("<766,767,37>",(p)); Inst51++; } } catch(e) {}
    if (!arrayEq(Array.prototype.concat.call(p, p), [p, p])) {
      throw "failed with no spread";
    }
  }

try { if (Inst56 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<854,863,42>",(undefined)); Inst56++; } } catch(e) {}
  p[Symbol.isConcatSpreadable] = undefined;
try { if (Inst52 <= 1000 && typeof (p[Symbol.isConcatSpreadable]) != "undefined") {_RecordType("<823,851,42>",(p[Symbol.isConcatSpreadable])); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (p) != "undefined") {_RecordType("<823,824,42>",(p)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (Symbol.isConcatSpreadable) != "undefined") {_RecordType("<825,850,42>",(Symbol.isConcatSpreadable)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<825,831,42>",(Symbol)); Inst55++; } } catch(e) {}
try { if (Inst57 <= 1000 && typeof (revoke) != "undefined") {_RecordType("<867,873,43>",(revoke)); Inst57++; } } catch(e) {}
  revoke();
  passed = true;
try { if (Inst58 <= 1000 && typeof (passed) != "undefined") {_RecordType("<879,885,44>",(passed)); Inst58++; } } catch(e) {}

try { if (Inst65 <= 1000 && typeof (e) != "undefined") {_RecordType("<974,975,49>",(e)); Inst65++; } } catch(e) {}
  try {
try { if (Inst59 <= 1000 && typeof (Array.prototype.concat.call) != "undefined") {_RecordType("<907,934,47>",(Array.prototype.concat.call)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (Array.prototype.concat) != "undefined") {_RecordType("<907,929,47>",(Array.prototype.concat)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<907,922,47>",(Array.prototype)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (Array) != "undefined") {_RecordType("<907,912,47>",(Array)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (p) != "undefined") {_RecordType("<935,936,47>",(p)); Inst63++; } } catch(e) {}
    Array.prototype.concat.call(p, []);
    passed = false;
try { if (Inst64 <= 1000 && typeof (passed) != "undefined") {_RecordType("<947,953,48>",(passed)); Inst64++; } } catch(e) {}
  } catch (e) {
    ;
  }

try { if (Inst66 <= 1000 && typeof (passed) != "undefined") {_RecordType("<997,1003,53>",(passed)); Inst66++; } } catch(e) {}
  if (!passed) {
    throw "failed to throw spreading revoked proxy";
  }
}

