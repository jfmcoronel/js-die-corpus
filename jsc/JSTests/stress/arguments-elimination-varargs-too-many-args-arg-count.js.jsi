var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (foo) != "undefined") {_RecordType("<9,12,1>",(foo)); Inst0++; } } catch(e) {}
function foo() {
try { if (Inst1 <= 1000 && typeof (arguments.length) != "undefined") {_RecordType("<26,42,2>",(arguments.length)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<26,35,2>",(arguments)); Inst2++; } } catch(e) {}
  return arguments.length;
}

try { if (Inst3 <= 1000 && typeof (bar) != "undefined") {_RecordType("<56,59,5>",(bar)); Inst3++; } } catch(e) {}
function bar(...args) {
try { if (Inst4 <= 1000 && typeof (args) != "undefined") {_RecordType("<63,67,5>",(args)); Inst4++; } } catch(e) {}
  var a = [42];
try { if (Inst5 <= 1000 && typeof (a) != "undefined") {_RecordType("<77,78,6>",(a)); Inst5++; } } catch(e) {}

try { if (Inst6 <= 1000 && typeof (isFinalTier) != "undefined") {_RecordType("<94,105,8>",(isFinalTier)); Inst6++; } } catch(e) {}
  if (isFinalTier()) {
try { if (Inst8 <= 1000 && typeof (args) != "undefined") {_RecordType("<119,123,9>",(args)); Inst8++; } } catch(e) {}
    a = args;
try { if (Inst7 <= 1000 && typeof (a) != "undefined") {_RecordType("<115,116,9>",(a)); Inst7++; } } catch(e) {}
  }

try { if (Inst9 <= 1000 && typeof (isFinalTier) != "undefined") {_RecordType("<150,161,13>",(isFinalTier)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (foo) != "undefined") {_RecordType("<177,180,14>",(foo)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (a) != "undefined") {_RecordType("<184,185,14>",(a)); Inst11++; } } catch(e) {}
  return {
    ftl: isFinalTier(),
    result: foo(...a)
  };
}

try { if (Inst12 <= 1000 && typeof (baz) != "undefined") {_RecordType("<204,207,18>",(baz)); Inst12++; } } catch(e) {}
function baz() {
try { if (Inst13 <= 1000 && typeof (bar) != "undefined") {_RecordType("<221,224,19>",(bar)); Inst13++; } } catch(e) {}
  return bar(1, 2, 3, 4);
}

try { if (Inst14 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<241,249,22>",(noInline)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (baz) != "undefined") {_RecordType("<250,253,22>",(baz)); Inst15++; } } catch(e) {}
noInline(baz);

for (var i = 0; i < 100000; ++i) {
try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<266,267,24>",(i)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (i) != "undefined") {_RecordType("<273,274,24>",(i)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (i) != "undefined") {_RecordType("<287,288,24>",(i)); Inst18++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (baz) != "undefined") {_RecordType("<307,310,25>",(baz)); Inst20++; } } catch(e) {}
  var result = baz();
try { if (Inst19 <= 1000 && typeof (result) != "undefined") {_RecordType("<298,304,25>",(result)); Inst19++; } } catch(e) {}

try { if (Inst21 <= 1000 && typeof (result.ftl) != "undefined") {_RecordType("<321,331,27>",(result.ftl)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (result) != "undefined") {_RecordType("<321,327,27>",(result)); Inst22++; } } catch(e) {}
  if (result.ftl) {
try { if (Inst23 <= 1000 && typeof (result.result) != "undefined") {_RecordType("<343,356,28>",(result.result)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (result) != "undefined") {_RecordType("<343,349,28>",(result)); Inst24++; } } catch(e) {}
    if (result.result != 4) {
try { if (Inst25 <= 1000 && typeof (result.result) != "undefined") {_RecordType("<416,429,29>",(result.result)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (result) != "undefined") {_RecordType("<416,422,29>",(result)); Inst26++; } } catch(e) {}
      throw "Error: bad result in loop in DFG: " + result.result;
    }
  } else {
try { if (Inst27 <= 1000 && typeof (result.result) != "undefined") {_RecordType("<456,469,32>",(result.result)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (result) != "undefined") {_RecordType("<456,462,32>",(result)); Inst28++; } } catch(e) {}
    if (result.result != 1) {
try { if (Inst29 <= 1000 && typeof (result.result) != "undefined") {_RecordType("<533,546,33>",(result.result)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (result) != "undefined") {_RecordType("<533,539,33>",(result)); Inst30++; } } catch(e) {}
      throw "Error: bad result in loop before DFG: " + result.result;
    }
  }
}

