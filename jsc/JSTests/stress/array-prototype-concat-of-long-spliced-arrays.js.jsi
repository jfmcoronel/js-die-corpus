var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (shouldEqual) != "undefined") {_RecordType("<9,20,1>",(shouldEqual)); Inst0++; } } catch(e) {}
function shouldEqual(actual, expected) {
try { if (Inst1 <= 1000 && typeof (actual) != "undefined") {_RecordType("<21,27,1>",(actual)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (expected) != "undefined") {_RecordType("<29,37,1>",(expected)); Inst2++; } } catch(e) {}
  ;
}

try { if (Inst3 <= 1000 && typeof (test) != "undefined") {_RecordType("<57,61,5>",(test)); Inst3++; } } catch(e) {}
function test() {
  var exception;
try { if (Inst4 <= 1000 && typeof (exception) != "undefined") {_RecordType("<72,81,6>",(exception)); Inst4++; } } catch(e) {}

try { if (Inst36 <= 1000 && typeof (e) != "undefined") {_RecordType("<446,447,24>",(e)); Inst36++; } } catch(e) {}
  try {
    var a = [];
try { if (Inst5 <= 1000 && typeof (a) != "undefined") {_RecordType("<100,101,9>",(a)); Inst5++; } } catch(e) {}
    a.length = 0xffffff00;
try { if (Inst6 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<112,120,10>",(a.length)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (a) != "undefined") {_RecordType("<112,113,10>",(a)); Inst7++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (a.splice) != "undefined") {_RecordType("<147,155,11>",(a.splice)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (a) != "undefined") {_RecordType("<147,148,11>",(a)); Inst10++; } } catch(e) {}
    var b = a.splice(0, 0x100000); // Undecided array
try { if (Inst8 <= 1000 && typeof (b) != "undefined") {_RecordType("<143,144,11>",(b)); Inst8++; } } catch(e) {}

    var args = [];
try { if (Inst11 <= 1000 && typeof (args) != "undefined") {_RecordType("<198,202,13>",(args)); Inst11++; } } catch(e) {}
    args.length = 4094;
try { if (Inst12 <= 1000 && typeof (args.length) != "undefined") {_RecordType("<213,224,14>",(args.length)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (args) != "undefined") {_RecordType("<213,217,14>",(args)); Inst13++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (args.fill) != "undefined") {_RecordType("<237,246,15>",(args.fill)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (args) != "undefined") {_RecordType("<237,241,15>",(args)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (b) != "undefined") {_RecordType("<247,248,15>",(b)); Inst16++; } } catch(e) {}
    args.fill(b);
    var q = [];
try { if (Inst17 <= 1000 && typeof (q) != "undefined") {_RecordType("<259,260,16>",(q)); Inst17++; } } catch(e) {}
    q.length = 0x1000;
try { if (Inst18 <= 1000 && typeof (q.length) != "undefined") {_RecordType("<271,279,17>",(q.length)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (q) != "undefined") {_RecordType("<271,272,17>",(q)); Inst19++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (q.fill) != "undefined") {_RecordType("<294,300,18>",(q.fill)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (q) != "undefined") {_RecordType("<294,295,18>",(q)); Inst21++; } } catch(e) {}
    q.fill(7);
try { if (Inst23 <= 1000 && typeof (a.splice) != "undefined") {_RecordType("<317,325,19>",(a.splice)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (a) != "undefined") {_RecordType("<317,318,19>",(a)); Inst24++; } } catch(e) {}
    var c = a.splice(0, 0xfffef); //Shorter undecided array
try { if (Inst22 <= 1000 && typeof (c) != "undefined") {_RecordType("<313,314,19>",(c)); Inst22++; } } catch(e) {}

try { if (Inst27 <= 1000 && typeof (c) != "undefined") {_RecordType("<383,384,21>",(c)); Inst27++; } } catch(e) {}
    args[4094] = c;
try { if (Inst25 <= 1000 && typeof (args[4094]) != "undefined") {_RecordType("<370,380,21>",(args[4094])); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (args) != "undefined") {_RecordType("<370,374,21>",(args)); Inst26++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (q) != "undefined") {_RecordType("<403,404,22>",(q)); Inst30++; } } catch(e) {}
    args[4095] = q;
try { if (Inst28 <= 1000 && typeof (args[4095]) != "undefined") {_RecordType("<390,400,22>",(args[4095])); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (args) != "undefined") {_RecordType("<390,394,22>",(args)); Inst29++; } } catch(e) {}
try { if (Inst31 <= 1000 && typeof (b.concat.apply) != "undefined") {_RecordType("<410,424,23>",(b.concat.apply)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (b.concat) != "undefined") {_RecordType("<410,418,23>",(b.concat)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (b) != "undefined") {_RecordType("<410,411,23>",(b)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (b) != "undefined") {_RecordType("<425,426,23>",(b)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (args) != "undefined") {_RecordType("<428,432,23>",(args)); Inst35++; } } catch(e) {}
    b.concat.apply(b, args);
  } catch (e) {
try { if (Inst38 <= 1000 && typeof (e) != "undefined") {_RecordType("<467,468,25>",(e)); Inst38++; } } catch(e) {}
    exception = e;
try { if (Inst37 <= 1000 && typeof (exception) != "undefined") {_RecordType("<455,464,25>",(exception)); Inst37++; } } catch(e) {}
  }

try { if (Inst39 <= 1000 && typeof (shouldEqual) != "undefined") {_RecordType("<477,488,28>",(shouldEqual)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (exception) != "undefined") {_RecordType("<489,498,28>",(exception)); Inst40++; } } catch(e) {}
  shouldEqual(exception, "RangeError: Length exceeded the maximum array length");
}

try { if (Inst41 <= 1000 && typeof (test) != "undefined") {_RecordType("<560,564,31>",(test)); Inst41++; } } catch(e) {}
test();

