var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//@ if $architecture == "x86" then defaultSpotCheckNoMaximalFlush else defaultRun end
try { if (Inst0 <= 1000 && typeof (assert) != "undefined") {_RecordType("<95,101,2>",(assert)); Inst0++; } } catch(e) {}
function assert(b) {
try { if (Inst1 <= 1000 && typeof (b) != "undefined") {_RecordType("<102,103,2>",(b)); Inst1++; } } catch(e) {}
  ;
}

try { if (Inst2 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<114,122,6>",(noInline)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (assert) != "undefined") {_RecordType("<123,129,6>",(assert)); Inst3++; } } catch(e) {}
noInline(assert);
let calledGet = false;
try { if (Inst4 <= 1000 && typeof (calledGet) != "undefined") {_RecordType("<136,145,7>",(calledGet)); Inst4++; } } catch(e) {}
let definedAccessor = false;
try { if (Inst5 <= 1000 && typeof (definedAccessor) != "undefined") {_RecordType("<159,174,8>",(definedAccessor)); Inst5++; } } catch(e) {}

try { if (Inst6 <= 1000 && typeof (test) != "undefined") {_RecordType("<194,198,10>",(test)); Inst6++; } } catch(e) {}
function test() {
try { if (Inst7 <= 1000 && typeof (foo) != "undefined") {_RecordType("<214,217,11>",(foo)); Inst7++; } } catch(e) {}
  function foo(...rest) {
try { if (Inst8 <= 1000 && typeof (rest) != "undefined") {_RecordType("<221,225,11>",(rest)); Inst8++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (rest) != "undefined") {_RecordType("<240,244,12>",(rest)); Inst9++; } } catch(e) {}
    return rest;
  }

try { if (Inst10 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<253,261,15>",(noInline)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (foo) != "undefined") {_RecordType("<262,265,15>",(foo)); Inst11++; } } catch(e) {}
  noInline(foo);

  for (let i = 0; i < 10000; i++) {
try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<280,281,17>",(i)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<287,288,17>",(i)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<298,299,17>",(i)); Inst14++; } } catch(e) {}
    const size = 800;
try { if (Inst15 <= 1000 && typeof (size) != "undefined") {_RecordType("<315,319,18>",(size)); Inst15++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (Array) != "undefined") {_RecordType("<345,350,19>",(Array)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (size) != "undefined") {_RecordType("<351,355,19>",(size)); Inst18++; } } catch(e) {}
    let arr = new Array(size);
try { if (Inst16 <= 1000 && typeof (arr) != "undefined") {_RecordType("<335,338,19>",(arr)); Inst16++; } } catch(e) {}

    for (let i = 0; i < size; i++) {
try { if (Inst19 <= 1000 && typeof (i) != "undefined") {_RecordType("<372,373,21>",(i)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<379,380,21>",(i)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (size) != "undefined") {_RecordType("<383,387,21>",(size)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<389,390,21>",(i)); Inst22++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<411,412,22>",(i)); Inst25++; } } catch(e) {}
      arr[i] = i;
try { if (Inst23 <= 1000 && typeof (arr[i]) != "undefined") {_RecordType("<402,408,22>",(arr[i])); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (arr) != "undefined") {_RecordType("<402,405,22>",(arr)); Inst24++; } } catch(e) {}
    }

try { if (Inst27 <= 1000 && typeof (foo) != "undefined") {_RecordType("<438,441,25>",(foo)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (arr) != "undefined") {_RecordType("<445,448,25>",(arr)); Inst28++; } } catch(e) {}
    let result = foo(...arr);
try { if (Inst26 <= 1000 && typeof (result) != "undefined") {_RecordType("<429,435,25>",(result)); Inst26++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (result.length) != "undefined") {_RecordType("<455,468,26>",(result.length)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (result) != "undefined") {_RecordType("<455,461,26>",(result)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (arr.length) != "undefined") {_RecordType("<473,483,26>",(arr.length)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (arr) != "undefined") {_RecordType("<473,476,26>",(arr)); Inst32++; } } catch(e) {}
    result.length === arr.length;
try { if (Inst33 <= 1000 && typeof (result.length) != "undefined") {_RecordType("<489,502,27>",(result.length)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (result) != "undefined") {_RecordType("<489,495,27>",(result)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (size) != "undefined") {_RecordType("<507,511,27>",(size)); Inst35++; } } catch(e) {}
    result.length === size;

    for (let i = 0; i < arr.length; i++) {
try { if (Inst36 <= 1000 && typeof (i) != "undefined") {_RecordType("<527,528,29>",(i)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (i) != "undefined") {_RecordType("<534,535,29>",(i)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (arr.length) != "undefined") {_RecordType("<538,548,29>",(arr.length)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (arr) != "undefined") {_RecordType("<538,541,29>",(arr)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (i) != "undefined") {_RecordType("<550,551,29>",(i)); Inst40++; } } catch(e) {}
try { if (Inst41 <= 1000 && typeof (arr[i]) != "undefined") {_RecordType("<563,569,30>",(arr[i])); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (arr) != "undefined") {_RecordType("<563,566,30>",(arr)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (result[i]) != "undefined") {_RecordType("<574,583,30>",(result[i])); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (result) != "undefined") {_RecordType("<574,580,30>",(result)); Inst44++; } } catch(e) {}
      arr[i] === result[i];
try { if (Inst45 <= 1000 && typeof (result[i]) != "undefined") {_RecordType("<591,600,31>",(result[i])); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (result) != "undefined") {_RecordType("<591,597,31>",(result)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (i) != "undefined") {_RecordType("<605,606,31>",(i)); Inst47++; } } catch(e) {}
      result[i] === i;
    }

try { if (Inst48 <= 1000 && typeof (definedAccessor) != "undefined") {_RecordType("<623,638,34>",(definedAccessor)); Inst48++; } } catch(e) {}
    if (definedAccessor) {
      calledGet = false;
try { if (Inst49 <= 1000 && typeof (calledGet) != "undefined") {_RecordType("<648,657,35>",(calledGet)); Inst49++; } } catch(e) {}
try { if (Inst50 <= 1000 && typeof (result[0]) != "undefined") {_RecordType("<673,682,36>",(result[0])); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (result) != "undefined") {_RecordType("<673,679,36>",(result)); Inst51++; } } catch(e) {}
      result[0];
try { if (Inst52 <= 1000 && typeof (calledGet) != "undefined") {_RecordType("<691,700,37>",(calledGet)); Inst52++; } } catch(e) {}
      !calledGet;
try { if (Inst53 <= 1000 && typeof (arr[0]) != "undefined") {_RecordType("<708,714,38>",(arr[0])); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (arr) != "undefined") {_RecordType("<708,711,38>",(arr)); Inst54++; } } catch(e) {}
      arr[0];
try { if (Inst55 <= 1000 && typeof (calledGet) != "undefined") {_RecordType("<722,731,39>",(calledGet)); Inst55++; } } catch(e) {}
      calledGet;
try { if (Inst57 <= 1000 && typeof (arr) != "undefined") {_RecordType("<757,760,40>",(arr)); Inst57++; } } catch(e) {}
      let testArr = [...arr];
try { if (Inst56 <= 1000 && typeof (testArr) != "undefined") {_RecordType("<743,750,40>",(testArr)); Inst56++; } } catch(e) {}
      calledGet = false;
try { if (Inst58 <= 1000 && typeof (calledGet) != "undefined") {_RecordType("<769,778,41>",(calledGet)); Inst58++; } } catch(e) {}
try { if (Inst59 <= 1000 && typeof (testArr[0]) != "undefined") {_RecordType("<794,804,42>",(testArr[0])); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (testArr) != "undefined") {_RecordType("<794,801,42>",(testArr)); Inst60++; } } catch(e) {}
      testArr[0];
try { if (Inst61 <= 1000 && typeof (calledGet) != "undefined") {_RecordType("<813,822,43>",(calledGet)); Inst61++; } } catch(e) {}
      !calledGet;
    }
  }
}

try { if (Inst62 <= 1000 && typeof (test) != "undefined") {_RecordType("<837,841,48>",(test)); Inst62++; } } catch(e) {}
test();
definedAccessor = true;
try { if (Inst63 <= 1000 && typeof (definedAccessor) != "undefined") {_RecordType("<845,860,49>",(definedAccessor)); Inst63++; } } catch(e) {}
try { if (Inst64 <= 1000 && typeof (Reflect.defineProperty) != "undefined") {_RecordType("<869,891,50>",(Reflect.defineProperty)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<869,876,50>",(Reflect)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<892,907,50>",(Array.prototype)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (Array) != "undefined") {_RecordType("<892,897,50>",(Array)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (get) != "undefined") {_RecordType("<918,921,51>",(get)); Inst68++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (set) != "undefined") {_RecordType("<970,973,56>",(set)); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (x) != "undefined") {_RecordType("<974,975,56>",(x)); Inst71++; } } catch(e) {}
Reflect.defineProperty(Array.prototype, "0", {
  get() {
    calledGet = true;
try { if (Inst69 <= 1000 && typeof (calledGet) != "undefined") {_RecordType("<930,939,52>",(calledGet)); Inst69++; } } catch(e) {}
    return 0;
  },

  set(x) {
    ;
  }

});
try { if (Inst72 <= 1000 && typeof (test) != "undefined") {_RecordType("<994,998,61>",(test)); Inst72++; } } catch(e) {}
test();

