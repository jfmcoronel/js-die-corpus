var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (assert) != "undefined") {_RecordType("<9,15,1>",(assert)); Inst0++; } } catch(e) {}
function assert(b) {
try { if (Inst1 <= 1000 && typeof (b) != "undefined") {_RecordType("<16,17,1>",(b)); Inst1++; } } catch(e) {}
  ;
}

let arr = [];
try { if (Inst2 <= 1000 && typeof (arr) != "undefined") {_RecordType("<32,35,5>",(arr)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (arr.length) != "undefined") {_RecordType("<42,52,6>",(arr.length)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (arr) != "undefined") {_RecordType("<42,45,6>",(arr)); Inst4++; } } catch(e) {}
arr.length === 0;
try { if (Inst5 <= 1000 && typeof (Object.freeze) != "undefined") {_RecordType("<60,73,7>",(Object.freeze)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Object) != "undefined") {_RecordType("<60,66,7>",(Object)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (arr) != "undefined") {_RecordType("<74,77,7>",(arr)); Inst7++; } } catch(e) {}
Object.freeze(arr);
try { if (Inst8 <= 1000 && typeof (arr.length) != "undefined") {_RecordType("<80,90,8>",(arr.length)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (arr) != "undefined") {_RecordType("<80,83,8>",(arr)); Inst9++; } } catch(e) {}
arr.length === 0;
arr.length = 5;
try { if (Inst10 <= 1000 && typeof (arr.length) != "undefined") {_RecordType("<98,108,9>",(arr.length)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (arr) != "undefined") {_RecordType("<98,101,9>",(arr)); Inst11++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (arr.length) != "undefined") {_RecordType("<114,124,10>",(arr.length)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (arr) != "undefined") {_RecordType("<114,117,10>",(arr)); Inst13++; } } catch(e) {}
arr.length === 0;
arr.length = "test";
try { if (Inst14 <= 1000 && typeof (arr.length) != "undefined") {_RecordType("<132,142,11>",(arr.length)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (arr) != "undefined") {_RecordType("<132,135,11>",(arr)); Inst15++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (arr.length) != "undefined") {_RecordType("<153,163,12>",(arr.length)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (arr) != "undefined") {_RecordType("<153,156,12>",(arr)); Inst17++; } } catch(e) {}
arr.length === 0;
arr = [1];
try { if (Inst18 <= 1000 && typeof (arr) != "undefined") {_RecordType("<171,174,13>",(arr)); Inst18++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (arr.length) != "undefined") {_RecordType("<182,192,14>",(arr.length)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (arr) != "undefined") {_RecordType("<182,185,14>",(arr)); Inst20++; } } catch(e) {}
arr.length === 1;
try { if (Inst21 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<200,221,15>",(Object.defineProperty)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Object) != "undefined") {_RecordType("<200,206,15>",(Object)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (arr) != "undefined") {_RecordType("<222,225,15>",(arr)); Inst23++; } } catch(e) {}
Object.defineProperty(arr, "length", {
  value: 3,
  writable: false
});
try { if (Inst24 <= 1000 && typeof (arr.length) != "undefined") {_RecordType("<273,283,19>",(arr.length)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (arr) != "undefined") {_RecordType("<273,276,19>",(arr)); Inst25++; } } catch(e) {}
arr.length === 3;
arr.length = 5;
try { if (Inst26 <= 1000 && typeof (arr.length) != "undefined") {_RecordType("<291,301,20>",(arr.length)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (arr) != "undefined") {_RecordType("<291,294,20>",(arr)); Inst27++; } } catch(e) {}
try { if (Inst28 <= 1000 && typeof (arr.length) != "undefined") {_RecordType("<307,317,21>",(arr.length)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (arr) != "undefined") {_RecordType("<307,310,21>",(arr)); Inst29++; } } catch(e) {}
arr.length === 3;
arr.length = "test";
try { if (Inst30 <= 1000 && typeof (arr.length) != "undefined") {_RecordType("<325,335,22>",(arr.length)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (arr) != "undefined") {_RecordType("<325,328,22>",(arr)); Inst31++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (arr.length) != "undefined") {_RecordType("<346,356,23>",(arr.length)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (arr) != "undefined") {_RecordType("<346,349,23>",(arr)); Inst33++; } } catch(e) {}
arr.length === 3;

