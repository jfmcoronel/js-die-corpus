var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (assert) != "undefined") {_RecordType("<9,15,1>",(assert)); Inst0++; } } catch(e) {}
function assert(b) {
try { if (Inst1 <= 1000 && typeof (b) != "undefined") {_RecordType("<16,17,1>",(b)); Inst1++; } } catch(e) {}
  ;
}

try { if (Inst2 <= 1000 && typeof (foo) != "undefined") {_RecordType("<37,40,5>",(foo)); Inst2++; } } catch(e) {}
function foo(m) {
try { if (Inst3 <= 1000 && typeof (m) != "undefined") {_RecordType("<41,42,5>",(m)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (m) != "undefined") {_RecordType("<59,60,6>",(m)); Inst4++; } } catch(e) {}
  return [...m];
}

try { if (Inst5 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<66,74,9>",(noInline)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (foo) != "undefined") {_RecordType("<75,78,9>",(foo)); Inst6++; } } catch(e) {}
noInline(foo);
try { if (Inst8 <= 1000 && typeof (Map) != "undefined") {_RecordType("<95,98,10>",(Map)); Inst8++; } } catch(e) {}
let map = new Map();
try { if (Inst7 <= 1000 && typeof (map) != "undefined") {_RecordType("<85,88,10>",(map)); Inst7++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (map.set) != "undefined") {_RecordType("<102,109,11>",(map.set)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (map) != "undefined") {_RecordType("<102,105,11>",(map)); Inst10++; } } catch(e) {}
map.set(20, 30);
try { if (Inst11 <= 1000 && typeof (map.set) != "undefined") {_RecordType("<119,126,12>",(map.set)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (map) != "undefined") {_RecordType("<119,122,12>",(map)); Inst12++; } } catch(e) {}
map.set(40, 50);
let called = 0;
try { if (Inst13 <= 1000 && typeof (called) != "undefined") {_RecordType("<140,146,13>",(called)); Inst13++; } } catch(e) {}
let customIterator = {
  [Symbol.iterator]: function () {
try { if (Inst15 <= 1000 && typeof (called) != "undefined") {_RecordType("<214,220,16>",(called)); Inst15++; } } catch(e) {}
    called++;
    let count = 0;
try { if (Inst16 <= 1000 && typeof (count) != "undefined") {_RecordType("<232,237,17>",(count)); Inst16++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (next) != "undefined") {_RecordType("<262,266,19>",(next)); Inst17++; } } catch(e) {}
    return {
      next() {
try { if (Inst18 <= 1000 && typeof (called) != "undefined") {_RecordType("<279,285,20>",(called)); Inst18++; } } catch(e) {}
        called++;
try { if (Inst19 <= 1000 && typeof (count) != "undefined") {_RecordType("<297,302,21>",(count)); Inst19++; } } catch(e) {}
        count++;

try { if (Inst20 <= 1000 && typeof (count) != "undefined") {_RecordType("<319,324,23>",(count)); Inst20++; } } catch(e) {}
        if (count === 1) {
          return {
            done: false,
            value: [20, 30]
          };
        }

try { if (Inst21 <= 1000 && typeof (count) != "undefined") {_RecordType("<442,447,30>",(count)); Inst21++; } } catch(e) {}
        if (count === 2) {
          return {
            done: false,
            value: [40, 50]
          };
        }

        return {
          done: true
        };
      }

    };
  }
};
try { if (Inst14 <= 1000 && typeof (customIterator) != "undefined") {_RecordType("<156,170,14>",(customIterator)); Inst14++; } } catch(e) {}

for (let i = 0; i < 10000; i++) {
try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<635,636,46>",(i)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<642,643,46>",(i)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<653,654,46>",(i)); Inst24++; } } catch(e) {}
  for (let o of [customIterator, map]) {
try { if (Inst25 <= 1000 && typeof (o) != "undefined") {_RecordType("<671,672,47>",(o)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (customIterator) != "undefined") {_RecordType("<677,691,47>",(customIterator)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (map) != "undefined") {_RecordType("<693,696,47>",(map)); Inst27++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (foo) != "undefined") {_RecordType("<728,731,48>",(foo)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (o) != "undefined") {_RecordType("<732,733,48>",(o)); Inst33++; } } catch(e) {}
    let [[a, b], [c, d]] = foo(o);
try { if (Inst28 <= 1000 && typeof (a) != "undefined") {_RecordType("<711,712,48>",(a)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (b) != "undefined") {_RecordType("<714,715,48>",(b)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (c) != "undefined") {_RecordType("<719,720,48>",(c)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (d) != "undefined") {_RecordType("<722,723,48>",(d)); Inst31++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof (a) != "undefined") {_RecordType("<740,741,49>",(a)); Inst34++; } } catch(e) {}
    a === 20;
try { if (Inst35 <= 1000 && typeof (b) != "undefined") {_RecordType("<754,755,50>",(b)); Inst35++; } } catch(e) {}
    b === 30;
try { if (Inst36 <= 1000 && typeof (c) != "undefined") {_RecordType("<768,769,51>",(c)); Inst36++; } } catch(e) {}
    c === 40;
try { if (Inst37 <= 1000 && typeof (d) != "undefined") {_RecordType("<782,783,52>",(d)); Inst37++; } } catch(e) {}
    d === 50;
  }

try { if (Inst38 <= 1000 && typeof (called) != "undefined") {_RecordType("<799,805,55>",(called)); Inst38++; } } catch(e) {}
  called === 4;
  called = 0;
try { if (Inst39 <= 1000 && typeof (called) != "undefined") {_RecordType("<815,821,56>",(called)); Inst39++; } } catch(e) {}
}

try { if (Inst40 <= 1000 && typeof (bar) != "undefined") {_RecordType("<839,842,59>",(bar)); Inst40++; } } catch(e) {}
function bar(m) {
try { if (Inst41 <= 1000 && typeof (m) != "undefined") {_RecordType("<843,844,59>",(m)); Inst41++; } } catch(e) {}
try { if (Inst42 <= 1000 && typeof (m) != "undefined") {_RecordType("<861,862,60>",(m)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (m) != "undefined") {_RecordType("<867,868,60>",(m)); Inst43++; } } catch(e) {}
  return [...m, ...m];
}

try { if (Inst44 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<874,882,63>",(noInline)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (bar) != "undefined") {_RecordType("<883,886,63>",(bar)); Inst45++; } } catch(e) {}
noInline(bar);

for (let i = 0; i < 10000; i++) {
try { if (Inst46 <= 1000 && typeof (i) != "undefined") {_RecordType("<899,900,65>",(i)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (i) != "undefined") {_RecordType("<906,907,65>",(i)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (i) != "undefined") {_RecordType("<917,918,65>",(i)); Inst48++; } } catch(e) {}
  for (let o of [customIterator, map]) {
try { if (Inst49 <= 1000 && typeof (o) != "undefined") {_RecordType("<935,936,66>",(o)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (customIterator) != "undefined") {_RecordType("<941,955,66>",(customIterator)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (map) != "undefined") {_RecordType("<957,960,66>",(map)); Inst51++; } } catch(e) {}
try { if (Inst60 <= 1000 && typeof (bar) != "undefined") {_RecordType("<1008,1011,67>",(bar)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (o) != "undefined") {_RecordType("<1012,1013,67>",(o)); Inst61++; } } catch(e) {}
    let [[a, b], [c, d], [e, f], [g, h]] = bar(o);
try { if (Inst52 <= 1000 && typeof (a) != "undefined") {_RecordType("<975,976,67>",(a)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (b) != "undefined") {_RecordType("<978,979,67>",(b)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (c) != "undefined") {_RecordType("<983,984,67>",(c)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (d) != "undefined") {_RecordType("<986,987,67>",(d)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (e) != "undefined") {_RecordType("<991,992,67>",(e)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (f) != "undefined") {_RecordType("<994,995,67>",(f)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (g) != "undefined") {_RecordType("<999,1000,67>",(g)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (h) != "undefined") {_RecordType("<1002,1003,67>",(h)); Inst59++; } } catch(e) {}
try { if (Inst62 <= 1000 && typeof (a) != "undefined") {_RecordType("<1020,1021,68>",(a)); Inst62++; } } catch(e) {}
    a === 20;
try { if (Inst63 <= 1000 && typeof (b) != "undefined") {_RecordType("<1034,1035,69>",(b)); Inst63++; } } catch(e) {}
    b === 30;
try { if (Inst64 <= 1000 && typeof (c) != "undefined") {_RecordType("<1048,1049,70>",(c)); Inst64++; } } catch(e) {}
    c === 40;
try { if (Inst65 <= 1000 && typeof (d) != "undefined") {_RecordType("<1062,1063,71>",(d)); Inst65++; } } catch(e) {}
    d === 50;
try { if (Inst66 <= 1000 && typeof (e) != "undefined") {_RecordType("<1076,1077,72>",(e)); Inst66++; } } catch(e) {}
    e === 20;
try { if (Inst67 <= 1000 && typeof (f) != "undefined") {_RecordType("<1090,1091,73>",(f)); Inst67++; } } catch(e) {}
    f === 30;
try { if (Inst68 <= 1000 && typeof (g) != "undefined") {_RecordType("<1104,1105,74>",(g)); Inst68++; } } catch(e) {}
    g === 40;
try { if (Inst69 <= 1000 && typeof (h) != "undefined") {_RecordType("<1118,1119,75>",(h)); Inst69++; } } catch(e) {}
    h === 50;
  }

try { if (Inst70 <= 1000 && typeof (called) != "undefined") {_RecordType("<1135,1141,78>",(called)); Inst70++; } } catch(e) {}
  called === 8;
  called = 0;
try { if (Inst71 <= 1000 && typeof (called) != "undefined") {_RecordType("<1151,1157,79>",(called)); Inst71++; } } catch(e) {}
}

