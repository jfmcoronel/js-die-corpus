var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (exponentIsNonNanDouble1) != "undefined") {_RecordType("<9,32,1>",(exponentIsNonNanDouble1)); Inst0++; } } catch(e) {}
function exponentIsNonNanDouble1(x, doubleArrayIndex) {
try { if (Inst1 <= 1000 && typeof (x) != "undefined") {_RecordType("<33,34,1>",(x)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (doubleArrayIndex) != "undefined") {_RecordType("<36,52,1>",(doubleArrayIndex)); Inst2++; } } catch(e) {}
  var doubleArray = [4.4];
try { if (Inst3 <= 1000 && typeof (doubleArray) != "undefined") {_RecordType("<62,73,2>",(doubleArray)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (x) != "undefined") {_RecordType("<92,93,3>",(x)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (doubleArray[doubleArrayIndex]) != "undefined") {_RecordType("<97,126,3>",(doubleArray[doubleArrayIndex])); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (doubleArray) != "undefined") {_RecordType("<97,108,3>",(doubleArray)); Inst6++; } } catch(e) {}
  return x ** doubleArray[doubleArrayIndex];
}

try { if (Inst7 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<131,139,6>",(noInline)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (exponentIsNonNanDouble1) != "undefined") {_RecordType("<140,163,6>",(exponentIsNonNanDouble1)); Inst8++; } } catch(e) {}
noInline(exponentIsNonNanDouble1);

try { if (Inst9 <= 1000 && typeof (exponentIsNonNanDouble2) != "undefined") {_RecordType("<176,199,8>",(exponentIsNonNanDouble2)); Inst9++; } } catch(e) {}
function exponentIsNonNanDouble2(x, doubleArray) {
try { if (Inst10 <= 1000 && typeof (x) != "undefined") {_RecordType("<200,201,8>",(x)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (doubleArray) != "undefined") {_RecordType("<203,214,8>",(doubleArray)); Inst11++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (x) != "undefined") {_RecordType("<227,228,9>",(x)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (doubleArray[0]) != "undefined") {_RecordType("<232,246,9>",(doubleArray[0])); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (doubleArray) != "undefined") {_RecordType("<232,243,9>",(doubleArray)); Inst14++; } } catch(e) {}
  return x ** doubleArray[0];
}

try { if (Inst15 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<251,259,12>",(noInline)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (exponentIsNonNanDouble2) != "undefined") {_RecordType("<260,283,12>",(exponentIsNonNanDouble2)); Inst16++; } } catch(e) {}
noInline(exponentIsNonNanDouble2);

try { if (Inst17 <= 1000 && typeof (testExponentIsDoubleConstant) != "undefined") {_RecordType("<296,324,14>",(testExponentIsDoubleConstant)); Inst17++; } } catch(e) {}
function testExponentIsDoubleConstant() {
  for (var i = 0; i < 10000; ++i) {
try { if (Inst18 <= 1000 && typeof (i) != "undefined") {_RecordType("<340,341,15>",(i)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (i) != "undefined") {_RecordType("<347,348,15>",(i)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<360,361,15>",(i)); Inst20++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (exponentIsNonNanDouble1) != "undefined") {_RecordType("<382,405,16>",(exponentIsNonNanDouble1)); Inst22++; } } catch(e) {}
    var result = exponentIsNonNanDouble1(2, 0);
try { if (Inst21 <= 1000 && typeof (result) != "undefined") {_RecordType("<373,379,16>",(result)); Inst21++; } } catch(e) {}

try { if (Inst23 <= 1000 && typeof (result) != "undefined") {_RecordType("<422,428,18>",(result)); Inst23++; } } catch(e) {}
    if (result !== 21.112126572366314) {
try { if (Inst24 <= 1000 && typeof (result) != "undefined") {_RecordType("<545,551,19>",(result)); Inst24++; } } catch(e) {}
      throw "Error: exponentIsNonNanDouble1(2, 0) should be 21.112126572366314, was = " + result;
    }
  }

  for (var i = 0; i < 10000; ++i) {
try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<575,576,23>",(i)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (i) != "undefined") {_RecordType("<582,583,23>",(i)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (i) != "undefined") {_RecordType("<595,596,23>",(i)); Inst27++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (exponentIsNonNanDouble2) != "undefined") {_RecordType("<617,640,24>",(exponentIsNonNanDouble2)); Inst29++; } } catch(e) {}
    var result = exponentIsNonNanDouble2(3, [-1.5]);
try { if (Inst28 <= 1000 && typeof (result) != "undefined") {_RecordType("<608,614,24>",(result)); Inst28++; } } catch(e) {}

try { if (Inst30 <= 1000 && typeof (result) != "undefined") {_RecordType("<662,668,26>",(result)); Inst30++; } } catch(e) {}
    if (result !== 0.19245008972987526) {
try { if (Inst31 <= 1000 && typeof (result) != "undefined") {_RecordType("<792,798,27>",(result)); Inst31++; } } catch(e) {}
      throw "Error: exponentIsNonNanDouble2(3, [-1.5]) should be 0.19245008972987526, was = " + result;
    }
  }
}

try { if (Inst32 <= 1000 && typeof (testExponentIsDoubleConstant) != "undefined") {_RecordType("<813,841,32>",(testExponentIsDoubleConstant)); Inst32++; } } catch(e) {}
testExponentIsDoubleConstant();

