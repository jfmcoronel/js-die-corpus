var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (assert) != "undefined") {_RecordType("<9,15,1>",(assert)); Inst0++; } } catch(e) {}
function assert(b, m = "Bad!") {
try { if (Inst1 <= 1000 && typeof (b) != "undefined") {_RecordType("<16,17,1>",(b)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (m) != "undefined") {_RecordType("<19,20,1>",(m)); Inst2++; } } catch(e) {}
  ;
}

try { if (Inst3 <= 1000 && typeof (test) != "undefined") {_RecordType("<49,53,5>",(test)); Inst3++; } } catch(e) {}
function test(f, iters = 1000) {
try { if (Inst4 <= 1000 && typeof (f) != "undefined") {_RecordType("<54,55,5>",(f)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (iters) != "undefined") {_RecordType("<57,62,5>",(iters)); Inst5++; } } catch(e) {}
  for (let i = 0; i < iters; i++) {
try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<84,85,6>",(i)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<91,92,6>",(i)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (iters) != "undefined") {_RecordType("<95,100,6>",(iters)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<102,103,6>",(i)); Inst9++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (f) != "undefined") {_RecordType("<113,114,7>",(f)); Inst10++; } } catch(e) {}
    f();
  }
}

try { if (Inst11 <= 1000 && typeof (shouldThrowTDZ) != "undefined") {_RecordType("<134,148,11>",(shouldThrowTDZ)); Inst11++; } } catch(e) {}
function shouldThrowTDZ(f) {
try { if (Inst12 <= 1000 && typeof (f) != "undefined") {_RecordType("<149,150,11>",(f)); Inst12++; } } catch(e) {}
  let threw = false;
try { if (Inst13 <= 1000 && typeof (threw) != "undefined") {_RecordType("<160,165,12>",(threw)); Inst13++; } } catch(e) {}

try { if (Inst15 <= 1000 && typeof (e) != "undefined") {_RecordType("<204,205,16>",(e)); Inst15++; } } catch(e) {}
  try {
try { if (Inst14 <= 1000 && typeof (f) != "undefined") {_RecordType("<188,189,15>",(f)); Inst14++; } } catch(e) {}
    f();
  } catch (e) {
    ;
  }
}

try { if (Inst16 <= 1000 && typeof (test) != "undefined") {_RecordType("<222,226,21>",(test)); Inst16++; } } catch(e) {}
test(function () {
  class A {
    get foo() {
try { if (Inst18 <= 1000 && typeof (this._x) != "undefined") {_RecordType("<282,289,24>",(this._x)); Inst18++; } } catch(e) {}
      return this._x;
    }

    set foo(x) {
try { if (Inst19 <= 1000 && typeof (x) != "undefined") {_RecordType("<310,311,27>",(x)); Inst19++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (x) != "undefined") {_RecordType("<331,332,28>",(x)); Inst21++; } } catch(e) {}
      this._x = x;
try { if (Inst20 <= 1000 && typeof (this._x) != "undefined") {_RecordType("<321,328,28>",(this._x)); Inst20++; } } catch(e) {}
    }

  }
try { if (Inst17 <= 1000 && typeof (A) != "undefined") {_RecordType("<249,250,22>",(A)); Inst17++; } } catch(e) {}

try { if (Inst22 <= 1000 && typeof (fooProp) != "undefined") {_RecordType("<357,364,33>",(fooProp)); Inst22++; } } catch(e) {}
  function fooProp() {
    return 'foo';
  }

try { if (Inst25 <= 1000 && typeof (A) != "undefined") {_RecordType("<410,411,37>",(A)); Inst25++; } } catch(e) {}
  class B extends A {
    constructor() {
      super.foo = 20;
try { if (Inst24 <= 1000 && typeof (super.foo) != "undefined") {_RecordType("<440,449,39>",(super.foo)); Inst24++; } } catch(e) {}
    }

  }
try { if (Inst23 <= 1000 && typeof (B) != "undefined") {_RecordType("<400,401,37>",(B)); Inst23++; } } catch(e) {}

try { if (Inst29 <= 1000 && typeof (A) != "undefined") {_RecordType("<486,487,44>",(A)); Inst29++; } } catch(e) {}
  class C extends A {
    constructor() {
      super[fooProp()] = 20;
try { if (Inst27 <= 1000 && typeof (super[fooProp()]) != "undefined") {_RecordType("<516,532,46>",(super[fooProp()])); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (fooProp) != "undefined") {_RecordType("<522,529,46>",(fooProp)); Inst28++; } } catch(e) {}
    }

  }
try { if (Inst26 <= 1000 && typeof (C) != "undefined") {_RecordType("<476,477,44>",(C)); Inst26++; } } catch(e) {}

try { if (Inst33 <= 1000 && typeof (A) != "undefined") {_RecordType("<569,570,51>",(A)); Inst33++; } } catch(e) {}
  class D extends A {
    constructor() {
try { if (Inst31 <= 1000 && typeof (super[fooProp()]) != "undefined") {_RecordType("<599,615,53>",(super[fooProp()])); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (fooProp) != "undefined") {_RecordType("<605,612,53>",(fooProp)); Inst32++; } } catch(e) {}
      super[fooProp()];
    }

  }
try { if (Inst30 <= 1000 && typeof (D) != "undefined") {_RecordType("<559,560,51>",(D)); Inst30++; } } catch(e) {}

try { if (Inst36 <= 1000 && typeof (A) != "undefined") {_RecordType("<647,648,58>",(A)); Inst36++; } } catch(e) {}
  class E extends A {
    constructor() {
try { if (Inst35 <= 1000 && typeof (super.foo) != "undefined") {_RecordType("<677,686,60>",(super.foo)); Inst35++; } } catch(e) {}
      super.foo;
    }

  }
try { if (Inst34 <= 1000 && typeof (E) != "undefined") {_RecordType("<637,638,58>",(E)); Inst34++; } } catch(e) {}

try { if (Inst39 <= 1000 && typeof (A) != "undefined") {_RecordType("<718,719,65>",(A)); Inst39++; } } catch(e) {}
  class F extends A {
    constructor() {
      (() => super.foo = 20)();
try { if (Inst38 <= 1000 && typeof (super.foo) != "undefined") {_RecordType("<755,764,67>",(super.foo)); Inst38++; } } catch(e) {}
    }

  }
try { if (Inst37 <= 1000 && typeof (F) != "undefined") {_RecordType("<708,709,65>",(F)); Inst37++; } } catch(e) {}

try { if (Inst43 <= 1000 && typeof (A) != "undefined") {_RecordType("<804,805,72>",(A)); Inst43++; } } catch(e) {}
  class G extends A {
    constructor() {
      (() => super[fooProp()] = 20)();
try { if (Inst41 <= 1000 && typeof (super[fooProp()]) != "undefined") {_RecordType("<841,857,74>",(super[fooProp()])); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (fooProp) != "undefined") {_RecordType("<847,854,74>",(fooProp)); Inst42++; } } catch(e) {}
    }

  }
try { if (Inst40 <= 1000 && typeof (G) != "undefined") {_RecordType("<794,795,72>",(G)); Inst40++; } } catch(e) {}

try { if (Inst47 <= 1000 && typeof (A) != "undefined") {_RecordType("<897,898,79>",(A)); Inst47++; } } catch(e) {}
  class H extends A {
    constructor() {
try { if (Inst45 <= 1000 && typeof (super[fooProp()]) != "undefined") {_RecordType("<934,950,81>",(super[fooProp()])); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (fooProp) != "undefined") {_RecordType("<940,947,81>",(fooProp)); Inst46++; } } catch(e) {}
      (() => super[fooProp()])();
    }

  }
try { if (Inst44 <= 1000 && typeof (H) != "undefined") {_RecordType("<887,888,79>",(H)); Inst44++; } } catch(e) {}

try { if (Inst50 <= 1000 && typeof (A) != "undefined") {_RecordType("<985,986,86>",(A)); Inst50++; } } catch(e) {}
  class I extends A {
    constructor() {
try { if (Inst49 <= 1000 && typeof (super.foo) != "undefined") {_RecordType("<1022,1031,88>",(super.foo)); Inst49++; } } catch(e) {}
      (() => super.foo)();
    }

  }
try { if (Inst48 <= 1000 && typeof (I) != "undefined") {_RecordType("<975,976,86>",(I)); Inst48++; } } catch(e) {}

try { if (Inst51 <= 1000 && typeof (shouldThrowTDZ) != "undefined") {_RecordType("<1050,1064,93>",(shouldThrowTDZ)); Inst51++; } } catch(e) {}
  shouldThrowTDZ(function () {
try { if (Inst52 <= 1000 && typeof (B) != "undefined") {_RecordType("<1087,1088,94>",(B)); Inst52++; } } catch(e) {}
    new B();
  });
try { if (Inst53 <= 1000 && typeof (shouldThrowTDZ) != "undefined") {_RecordType("<1100,1114,96>",(shouldThrowTDZ)); Inst53++; } } catch(e) {}
  shouldThrowTDZ(function () {
try { if (Inst54 <= 1000 && typeof (C) != "undefined") {_RecordType("<1137,1138,97>",(C)); Inst54++; } } catch(e) {}
    new C();
  });
try { if (Inst55 <= 1000 && typeof (shouldThrowTDZ) != "undefined") {_RecordType("<1150,1164,99>",(shouldThrowTDZ)); Inst55++; } } catch(e) {}
  shouldThrowTDZ(function () {
try { if (Inst56 <= 1000 && typeof (D) != "undefined") {_RecordType("<1187,1188,100>",(D)); Inst56++; } } catch(e) {}
    new D();
  });
try { if (Inst57 <= 1000 && typeof (shouldThrowTDZ) != "undefined") {_RecordType("<1200,1214,102>",(shouldThrowTDZ)); Inst57++; } } catch(e) {}
  shouldThrowTDZ(function () {
try { if (Inst58 <= 1000 && typeof (E) != "undefined") {_RecordType("<1237,1238,103>",(E)); Inst58++; } } catch(e) {}
    new E();
  });
try { if (Inst59 <= 1000 && typeof (shouldThrowTDZ) != "undefined") {_RecordType("<1250,1264,105>",(shouldThrowTDZ)); Inst59++; } } catch(e) {}
  shouldThrowTDZ(function () {
try { if (Inst60 <= 1000 && typeof (F) != "undefined") {_RecordType("<1287,1288,106>",(F)); Inst60++; } } catch(e) {}
    new F();
  });
try { if (Inst61 <= 1000 && typeof (shouldThrowTDZ) != "undefined") {_RecordType("<1300,1314,108>",(shouldThrowTDZ)); Inst61++; } } catch(e) {}
  shouldThrowTDZ(function () {
try { if (Inst62 <= 1000 && typeof (G) != "undefined") {_RecordType("<1337,1338,109>",(G)); Inst62++; } } catch(e) {}
    new G();
  });
try { if (Inst63 <= 1000 && typeof (shouldThrowTDZ) != "undefined") {_RecordType("<1350,1364,111>",(shouldThrowTDZ)); Inst63++; } } catch(e) {}
  shouldThrowTDZ(function () {
try { if (Inst64 <= 1000 && typeof (H) != "undefined") {_RecordType("<1387,1388,112>",(H)); Inst64++; } } catch(e) {}
    new H();
  });
try { if (Inst65 <= 1000 && typeof (shouldThrowTDZ) != "undefined") {_RecordType("<1400,1414,114>",(shouldThrowTDZ)); Inst65++; } } catch(e) {}
  shouldThrowTDZ(function () {
try { if (Inst66 <= 1000 && typeof (I) != "undefined") {_RecordType("<1437,1438,115>",(I)); Inst66++; } } catch(e) {}
    new I();
  });
});

