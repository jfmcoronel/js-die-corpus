var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/*
 * Copyright (C) 2015 Apple Inc. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
 * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. 
 */
// Regression test for https://bugs.webkit.org/show_bug.cgi?id=143407.
var verbose = false;
try { if (Inst0 <= 1000 && typeof (verbose) != "undefined") {_RecordType("<1407,1414,26>",(verbose)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1434,1437,28>",(foo)); Inst1++; } } catch(e) {}
function foo() {
try { if (Inst2 <= 1000 && typeof (arguments.length) != "undefined") {_RecordType("<1451,1467,29>",(arguments.length)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<1451,1460,29>",(arguments)); Inst3++; } } catch(e) {}
  return arguments.length;
}

try { if (Inst4 <= 1000 && typeof (Foo) != "undefined") {_RecordType("<1481,1484,32>",(Foo)); Inst4++; } } catch(e) {}
function Foo() {
try { if (Inst6 <= 1000 && typeof (arguments.length) != "undefined") {_RecordType("<1505,1521,33>",(arguments.length)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<1505,1514,33>",(arguments)); Inst7++; } } catch(e) {}
  this.length = arguments.length;
try { if (Inst5 <= 1000 && typeof (this.length) != "undefined") {_RecordType("<1491,1502,33>",(this.length)); Inst5++; } } catch(e) {}
}

var callTestBodyStr = "    var result = this.method.apply(this, arguments);" + "\n" + "    return result + 1;";
try { if (Inst8 <= 1000 && typeof (callTestBodyStr) != "undefined") {_RecordType("<1530,1545,36>",(callTestBodyStr)); Inst8++; } } catch(e) {}
var constructTestBodyStr = "    return new this.constructor(...arguments);";
try { if (Inst9 <= 1000 && typeof (constructTestBodyStr) != "undefined") {_RecordType("<1642,1662,37>",(constructTestBodyStr)); Inst9++; } } catch(e) {}
var tiers = [{
  name: "LLint",
  iterations: 10
}, {
  name: "BaselineJIT",
  iterations: 50
}, {
  name: "DFG",
  iterations: 500
}, {
  name: "FTL",
  iterations: 10000
}];
try { if (Inst10 <= 1000 && typeof (tiers) != "undefined") {_RecordType("<1719,1724,38>",(tiers)); Inst10++; } } catch(e) {}

try { if (Inst11 <= 1000 && typeof (doTest) != "undefined") {_RecordType("<1901,1907,52>",(doTest)); Inst11++; } } catch(e) {}
function doTest(testCategory, testBodyStr, tier) {
try { if (Inst12 <= 1000 && typeof (testCategory) != "undefined") {_RecordType("<1908,1920,52>",(testCategory)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (testBodyStr) != "undefined") {_RecordType("<1922,1933,52>",(testBodyStr)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (tier) != "undefined") {_RecordType("<1935,1939,52>",(tier)); Inst14++; } } catch(e) {}
try { if (Inst47 <= 1000 && typeof (e) != "undefined") {_RecordType("<2349,2350,70>",(e)); Inst47++; } } catch(e) {}
  try {
try { if (Inst16 <= 1000 && typeof (tiers[tier].iterations) != "undefined") {_RecordType("<1972,1994,54>",(tiers[tier].iterations)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (tiers[tier]) != "undefined") {_RecordType("<1972,1983,54>",(tiers[tier])); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (tiers) != "undefined") {_RecordType("<1972,1977,54>",(tiers)); Inst18++; } } catch(e) {}
    var iterations = tiers[tier].iterations;
try { if (Inst15 <= 1000 && typeof (iterations) != "undefined") {_RecordType("<1959,1969,54>",(iterations)); Inst15++; } } catch(e) {}

try { if (Inst19 <= 1000 && typeof (verbose) != "undefined") {_RecordType("<2005,2012,56>",(verbose)); Inst19++; } } catch(e) {}
    if (verbose) {
try { if (Inst20 <= 1000 && typeof (print) != "undefined") {_RecordType("<2022,2027,57>",(print)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (testCategory) != "undefined") {_RecordType("<2041,2053,57>",(testCategory)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (tiers[tier].name) != "undefined") {_RecordType("<2067,2083,57>",(tiers[tier].name)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (tiers[tier]) != "undefined") {_RecordType("<2067,2078,57>",(tiers[tier])); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (tiers) != "undefined") {_RecordType("<2067,2072,57>",(tiers)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (iterations) != "undefined") {_RecordType("<2105,2115,57>",(iterations)); Inst25++; } } catch(e) {}
      print("Testing " + testCategory + " tier " + tiers[tier].name + " by iterating " + iterations + " times");
    }

    var o = {};
try { if (Inst26 <= 1000 && typeof (o) != "undefined") {_RecordType("<2144,2145,60>",(o)); Inst26++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (foo) != "undefined") {_RecordType("<2167,2170,61>",(foo)); Inst29++; } } catch(e) {}
    o.method = foo;
try { if (Inst27 <= 1000 && typeof (o.method) != "undefined") {_RecordType("<2156,2164,61>",(o.method)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (o) != "undefined") {_RecordType("<2156,2157,61>",(o)); Inst28++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (Foo) != "undefined") {_RecordType("<2192,2195,62>",(Foo)); Inst32++; } } catch(e) {}
    o.constructor = Foo;
try { if (Inst30 <= 1000 && typeof (o.constructor) != "undefined") {_RecordType("<2176,2189,62>",(o.constructor)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (o) != "undefined") {_RecordType("<2176,2177,62>",(o)); Inst31++; } } catch(e) {}
try { if (Inst35 <= 1000 && typeof (Function) != "undefined") {_RecordType("<2217,2225,63>",(Function)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (testBodyStr) != "undefined") {_RecordType("<2226,2237,63>",(testBodyStr)); Inst36++; } } catch(e) {}
    o.trigger = new Function(testBodyStr);
try { if (Inst33 <= 1000 && typeof (o.trigger) != "undefined") {_RecordType("<2201,2210,63>",(o.trigger)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (o) != "undefined") {_RecordType("<2201,2202,63>",(o)); Inst34++; } } catch(e) {}

    for (var i = 0; i < iterations; i++) {
try { if (Inst37 <= 1000 && typeof (i) != "undefined") {_RecordType("<2254,2255,65>",(i)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (i) != "undefined") {_RecordType("<2261,2262,65>",(i)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (iterations) != "undefined") {_RecordType("<2265,2275,65>",(iterations)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (i) != "undefined") {_RecordType("<2277,2278,65>",(i)); Inst40++; } } catch(e) {}
try { if (Inst41 <= 1000 && typeof (o.trigger) != "undefined") {_RecordType("<2290,2299,66>",(o.trigger)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (o) != "undefined") {_RecordType("<2290,2291,66>",(o)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (o) != "undefined") {_RecordType("<2300,2301,66>",(o)); Inst43++; } } catch(e) {}
      o.trigger(o, 1);
    }

try { if (Inst44 <= 1000 && typeof (o.trigger) != "undefined") {_RecordType("<2318,2327,69>",(o.trigger)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (o) != "undefined") {_RecordType("<2318,2319,69>",(o)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (o) != "undefined") {_RecordType("<2328,2329,69>",(o)); Inst46++; } } catch(e) {}
    o.trigger(o, 1, 2);
  } catch (e) {
try { if (Inst48 <= 1000 && typeof (print) != "undefined") {_RecordType("<2358,2363,71>",(print)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (testCategory) != "undefined") {_RecordType("<2376,2388,71>",(testCategory)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (tiers[tier].name) != "undefined") {_RecordType("<2405,2421,71>",(tiers[tier].name)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (tiers[tier]) != "undefined") {_RecordType("<2405,2416,71>",(tiers[tier])); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (tiers) != "undefined") {_RecordType("<2405,2410,71>",(tiers)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (e) != "undefined") {_RecordType("<2431,2432,71>",(e)); Inst53++; } } catch(e) {}
    print("FAILED " + testCategory + " in tier " + tiers[tier].name + ": " + e);
    return false;
  }

  return true;
}

var failureFound = 0;
try { if (Inst54 <= 1000 && typeof (failureFound) != "undefined") {_RecordType("<2480,2492,78>",(failureFound)); Inst54++; } } catch(e) {}

for (var tier = 0; tier < tiers.length; tier++) {
try { if (Inst55 <= 1000 && typeof (tier) != "undefined") {_RecordType("<2508,2512,80>",(tier)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (tier) != "undefined") {_RecordType("<2518,2522,80>",(tier)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (tiers.length) != "undefined") {_RecordType("<2525,2537,80>",(tiers.length)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (tiers) != "undefined") {_RecordType("<2525,2530,80>",(tiers)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (tier) != "undefined") {_RecordType("<2539,2543,80>",(tier)); Inst59++; } } catch(e) {}
try { if (Inst60 <= 1000 && typeof (doTest) != "undefined") {_RecordType("<2556,2562,81>",(doTest)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (callTestBodyStr) != "undefined") {_RecordType("<2582,2597,81>",(callTestBodyStr)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (tier) != "undefined") {_RecordType("<2599,2603,81>",(tier)); Inst62++; } } catch(e) {}
  if (!doTest("op_call_varargs", callTestBodyStr, tier)) {
try { if (Inst63 <= 1000 && typeof (failureFound) != "undefined") {_RecordType("<2612,2624,82>",(failureFound)); Inst63++; } } catch(e) {}
    failureFound++;
  }
}

for (var tier = 0; tier < tiers.length; tier++) {
try { if (Inst64 <= 1000 && typeof (tier) != "undefined") {_RecordType("<2644,2648,86>",(tier)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (tier) != "undefined") {_RecordType("<2654,2658,86>",(tier)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (tiers.length) != "undefined") {_RecordType("<2661,2673,86>",(tiers.length)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (tiers) != "undefined") {_RecordType("<2661,2666,86>",(tiers)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (tier) != "undefined") {_RecordType("<2675,2679,86>",(tier)); Inst68++; } } catch(e) {}
try { if (Inst69 <= 1000 && typeof (doTest) != "undefined") {_RecordType("<2692,2698,87>",(doTest)); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (constructTestBodyStr) != "undefined") {_RecordType("<2723,2743,87>",(constructTestBodyStr)); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (tier) != "undefined") {_RecordType("<2745,2749,87>",(tier)); Inst71++; } } catch(e) {}
  if (!doTest("op_construct_varargs", constructTestBodyStr, tier)) {
try { if (Inst72 <= 1000 && typeof (failureFound) != "undefined") {_RecordType("<2758,2770,88>",(failureFound)); Inst72++; } } catch(e) {}
    failureFound++;
  }
}

try { if (Inst73 <= 1000 && typeof (failureFound) != "undefined") {_RecordType("<2785,2797,92>",(failureFound)); Inst73++; } } catch(e) {}
if (failureFound == 1) {
  throw "ERROR: test has 1 failure";
} else {
try { if (Inst74 <= 1000 && typeof (failureFound) != "undefined") {_RecordType("<2858,2870,95>",(failureFound)); Inst74++; } } catch(e) {}
  if (failureFound > 1) {
try { if (Inst75 <= 1000 && typeof (failureFound) != "undefined") {_RecordType("<2909,2921,96>",(failureFound)); Inst75++; } } catch(e) {}
    throw "ERROR: test has " + failureFound + " failures";
  } else {
try { if (Inst76 <= 1000 && typeof (verbose) != "undefined") {_RecordType("<2956,2963,98>",(verbose)); Inst76++; } } catch(e) {}
    if (verbose) {
try { if (Inst77 <= 1000 && typeof (print) != "undefined") {_RecordType("<2973,2978,99>",(print)); Inst77++; } } catch(e) {}
      print("No failures");
    }
  }
}

