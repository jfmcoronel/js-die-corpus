var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// This tests that TypedArray length and byteLength correctly dump code when the prototypes move.
try { if (Inst0 <= 1000 && typeof (body) != "undefined") {_RecordType("<108,112,2>",(body)); Inst0++; } } catch(e) {}
(function body() {
try { if (Inst1 <= 1000 && typeof (foo) != "undefined") {_RecordType("<128,131,3>",(foo)); Inst1++; } } catch(e) {}
  function foo(a) {
try { if (Inst2 <= 1000 && typeof (a) != "undefined") {_RecordType("<132,133,3>",(a)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<148,156,4>",(a.length)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (a) != "undefined") {_RecordType("<148,149,4>",(a)); Inst4++; } } catch(e) {}
    return a.length;
  }

try { if (Inst5 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<165,173,7>",(noInline)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (foo) != "undefined") {_RecordType("<174,177,7>",(foo)); Inst6++; } } catch(e) {}
  noInline(foo);

try { if (Inst7 <= 1000 && typeof (bar) != "undefined") {_RecordType("<192,195,9>",(bar)); Inst7++; } } catch(e) {}
  function bar(a) {
try { if (Inst8 <= 1000 && typeof (a) != "undefined") {_RecordType("<196,197,9>",(a)); Inst8++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (a.byteLength) != "undefined") {_RecordType("<212,224,10>",(a.byteLength)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (a) != "undefined") {_RecordType("<212,213,10>",(a)); Inst10++; } } catch(e) {}
    return a.byteLength;
  }

try { if (Inst11 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<233,241,13>",(noInline)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (bar) != "undefined") {_RecordType("<242,245,13>",(bar)); Inst12++; } } catch(e) {}
  noInline(bar);

try { if (Inst13 <= 1000 && typeof (baz) != "undefined") {_RecordType("<260,263,15>",(baz)); Inst13++; } } catch(e) {}
  function baz(a) {
try { if (Inst14 <= 1000 && typeof (a) != "undefined") {_RecordType("<264,265,15>",(a)); Inst14++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (a.byteOffset) != "undefined") {_RecordType("<280,292,16>",(a.byteOffset)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (a) != "undefined") {_RecordType("<280,281,16>",(a)); Inst16++; } } catch(e) {}
    return a.byteOffset;
  }

try { if (Inst17 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<301,309,19>",(noInline)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (baz) != "undefined") {_RecordType("<310,313,19>",(baz)); Inst18++; } } catch(e) {}
  noInline(baz);
try { if (Inst20 <= 1000 && typeof (Int32Array) != "undefined") {_RecordType("<334,344,20>",(Int32Array)); Inst20++; } } catch(e) {}
  let array = new Int32Array(15);
try { if (Inst19 <= 1000 && typeof (array) != "undefined") {_RecordType("<322,327,20>",(array)); Inst19++; } } catch(e) {}

  for (var i = 0; i < 1000; i++) {
try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<362,363,22>",(i)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<369,370,22>",(i)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<379,380,22>",(i)); Inst23++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (foo) != "undefined") {_RecordType("<390,393,23>",(foo)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (array) != "undefined") {_RecordType("<394,399,23>",(array)); Inst25++; } } catch(e) {}
    foo(array);
try { if (Inst26 <= 1000 && typeof (bar) != "undefined") {_RecordType("<406,409,24>",(bar)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (array) != "undefined") {_RecordType("<410,415,24>",(array)); Inst27++; } } catch(e) {}
    bar(array);
try { if (Inst28 <= 1000 && typeof (baz) != "undefined") {_RecordType("<422,425,25>",(baz)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (array) != "undefined") {_RecordType("<426,431,25>",(array)); Inst29++; } } catch(e) {}
    baz(array);
  }

try { if (Inst30 <= 1000 && typeof (Object.setPrototypeOf) != "undefined") {_RecordType("<441,462,28>",(Object.setPrototypeOf)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (Object) != "undefined") {_RecordType("<441,447,28>",(Object)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (array) != "undefined") {_RecordType("<463,468,28>",(array)); Inst32++; } } catch(e) {}
  Object.setPrototypeOf(array, null);
})();

