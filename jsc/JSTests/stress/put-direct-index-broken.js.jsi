var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (whatToTest) != "undefined") {_RecordType("<9,19,1>",(whatToTest)); Inst0++; } } catch(e) {}
function whatToTest(code) {
try { if (Inst1 <= 1000 && typeof (code) != "undefined") {_RecordType("<20,24,1>",(code)); Inst1++; } } catch(e) {}
  return {
    allowExec: true
  };
}

try { if (Inst2 <= 1000 && typeof (tryRunning) != "undefined") {_RecordType("<76,86,7>",(tryRunning)); Inst2++; } } catch(e) {}
function tryRunning(f, code, wtt) {
try { if (Inst3 <= 1000 && typeof (f) != "undefined") {_RecordType("<87,88,7>",(f)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (code) != "undefined") {_RecordType("<90,94,7>",(code)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (wtt) != "undefined") {_RecordType("<96,99,7>",(wtt)); Inst5++; } } catch(e) {}
  uneval = true;
try { if (Inst6 <= 1000 && typeof (uneval) != "undefined") {_RecordType("<105,111,8>",(uneval)); Inst6++; } } catch(e) {}

try { if (Inst9 <= 1000 && typeof (runError) != "undefined") {_RecordType("<158,166,12>",(runError)); Inst9++; } } catch(e) {}
  try {
try { if (Inst8 <= 1000 && typeof (f) != "undefined") {_RecordType("<142,143,11>",(f)); Inst8++; } } catch(e) {}
    var rv = f();
try { if (Inst7 <= 1000 && typeof (rv) != "undefined") {_RecordType("<137,139,11>",(rv)); Inst7++; } } catch(e) {}
  } catch (runError) {
    ;
  }

try { if (Inst11 <= 1000 && typeof (e) != "undefined") {_RecordType("<270,271,20>",(e)); Inst11++; } } catch(e) {}
  try {
    if ('__defineSetter__' in this) {
try { if (Inst10 <= 1000 && typeof (this.uneval) != "undefined") {_RecordType("<240,251,18>",(this.uneval)); Inst10++; } } catch(e) {}
      delete this.uneval;
    }
  } catch (e) {
    ;
  }
}

try { if (Inst12 <= 1000 && typeof (tryItOut) != "undefined") {_RecordType("<297,305,25>",(tryItOut)); Inst12++; } } catch(e) {}
function tryItOut(code) {
try { if (Inst13 <= 1000 && typeof (code) != "undefined") {_RecordType("<306,310,25>",(code)); Inst13++; } } catch(e) {}
  var wtt = true;
try { if (Inst14 <= 1000 && typeof (wtt) != "undefined") {_RecordType("<320,323,26>",(wtt)); Inst14++; } } catch(e) {}
  var f;
try { if (Inst15 <= 1000 && typeof (f) != "undefined") {_RecordType("<338,339,27>",(f)); Inst15++; } } catch(e) {}

try { if (Inst19 <= 1000 && typeof (compileError) != "undefined") {_RecordType("<389,401,31>",(compileError)); Inst19++; } } catch(e) {}
  try {
try { if (Inst17 <= 1000 && typeof (Function) != "undefined") {_RecordType("<362,370,30>",(Function)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (code) != "undefined") {_RecordType("<371,375,30>",(code)); Inst18++; } } catch(e) {}
    f = new Function(code);
try { if (Inst16 <= 1000 && typeof (f) != "undefined") {_RecordType("<354,355,30>",(f)); Inst16++; } } catch(e) {}
  } catch (compileError) {
    ;
  }

try { if (Inst20 <= 1000 && typeof (tryRunning) != "undefined") {_RecordType("<418,428,35>",(tryRunning)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (f) != "undefined") {_RecordType("<429,430,35>",(f)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (code) != "undefined") {_RecordType("<432,436,35>",(code)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (wtt) != "undefined") {_RecordType("<438,441,35>",(wtt)); Inst23++; } } catch(e) {}
  tryRunning(f, code, wtt);
}

try { if (Inst24 <= 1000 && typeof (tryItOut) != "undefined") {_RecordType("<447,455,38>",(tryItOut)); Inst24++; } } catch(e) {}
tryItOut(`a0 = []; 
        r0 = /x/; 
        t0 = new Uint8ClampedArray;
        o1 = {};
        g1 = this;
        v2 = null;`);
try { if (Inst25 <= 1000 && typeof (tryItOut) != "undefined") {_RecordType("<580,588,44>",(tryItOut)); Inst25++; } } catch(e) {}
tryItOut("func = (function(x, y) {});");
try { if (Inst26 <= 1000 && typeof (tryItOut) != "undefined") {_RecordType("<621,629,45>",(tryItOut)); Inst26++; } } catch(e) {}
tryItOut("for (var p in g1) { this.a0[new func([].map(q => q, null), x)]; }");
try { if (Inst27 <= 1000 && typeof (tryItOut) != "undefined") {_RecordType("<700,708,46>",(tryItOut)); Inst27++; } } catch(e) {}
tryItOut("a0.push(o1.m1);a0.length = (4277);a0.__proto__ = this.t0;");
try { if (Inst28 <= 1000 && typeof (tryItOut) != "undefined") {_RecordType("<771,779,47>",(tryItOut)); Inst28++; } } catch(e) {}
tryItOut("\"use strict\"; a0 = Array.prototype.map.call(a0, (function() {}));");

