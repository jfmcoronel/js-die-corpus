var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (make) != "undefined") {_RecordType("<9,13,1>",(make)); Inst0++; } } catch(e) {}
function make(offset) {
try { if (Inst1 <= 1000 && typeof (offset) != "undefined") {_RecordType("<14,20,1>",(offset)); Inst1++; } } catch(e) {}
  // Default offset is 1.
try { if (Inst2 <= 1000 && typeof (offset) != "undefined") {_RecordType("<56,62,3>",(offset)); Inst2++; } } catch(e) {}
  if (offset === void 0) {
    offset = 1;
try { if (Inst3 <= 1000 && typeof (offset) != "undefined") {_RecordType("<81,87,4>",(offset)); Inst3++; } } catch(e) {}
  }

try { if (Inst5 <= 1000 && typeof (Int8Array) != "undefined") {_RecordType("<120,129,7>",(Int8Array)); Inst5++; } } catch(e) {}
  var int8Array = new Int8Array(100);
try { if (Inst4 <= 1000 && typeof (int8Array) != "undefined") {_RecordType("<104,113,7>",(int8Array)); Inst4++; } } catch(e) {}

  for (var i = 0; i < int8Array.length; ++i) {
try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<148,149,9>",(i)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<155,156,9>",(i)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (int8Array.length) != "undefined") {_RecordType("<159,175,9>",(int8Array.length)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (int8Array) != "undefined") {_RecordType("<159,168,9>",(int8Array)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<179,180,9>",(i)); Inst10++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<203,204,10>",(i)); Inst13++; } } catch(e) {}
    int8Array[i] = i;
try { if (Inst11 <= 1000 && typeof (int8Array[i]) != "undefined") {_RecordType("<188,200,10>",(int8Array[i])); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (int8Array) != "undefined") {_RecordType("<188,197,10>",(int8Array)); Inst12++; } } catch(e) {}
  }

try { if (Inst14 <= 1000 && typeof (Int8Array) != "undefined") {_RecordType("<224,233,13>",(Int8Array)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (int8Array.buffer) != "undefined") {_RecordType("<234,250,13>",(int8Array.buffer)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (int8Array) != "undefined") {_RecordType("<234,243,13>",(int8Array)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (offset) != "undefined") {_RecordType("<252,258,13>",(offset)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (int8Array.length) != "undefined") {_RecordType("<260,276,13>",(int8Array.length)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (int8Array) != "undefined") {_RecordType("<260,269,13>",(int8Array)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (offset) != "undefined") {_RecordType("<279,285,13>",(offset)); Inst20++; } } catch(e) {}
  return new Int8Array(int8Array.buffer, offset, int8Array.length - offset);
}

try { if (Inst21 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<291,299,16>",(noInline)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (make) != "undefined") {_RecordType("<300,304,16>",(make)); Inst22++; } } catch(e) {}
noInline(make);

try { if (Inst23 <= 1000 && typeof (foo) != "undefined") {_RecordType("<317,320,18>",(foo)); Inst23++; } } catch(e) {}
function foo(o) {
try { if (Inst24 <= 1000 && typeof (o) != "undefined") {_RecordType("<321,322,18>",(o)); Inst24++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (o.byteOffset) != "undefined") {_RecordType("<335,347,19>",(o.byteOffset)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (o) != "undefined") {_RecordType("<335,336,19>",(o)); Inst26++; } } catch(e) {}
  return o.byteOffset;
}

try { if (Inst27 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<352,360,22>",(noInline)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (foo) != "undefined") {_RecordType("<361,364,22>",(foo)); Inst28++; } } catch(e) {}
noInline(foo);
try { if (Inst30 <= 1000 && typeof (make) != "undefined") {_RecordType("<375,379,23>",(make)); Inst30++; } } catch(e) {}
var o = make();
try { if (Inst29 <= 1000 && typeof (o) != "undefined") {_RecordType("<371,372,23>",(o)); Inst29++; } } catch(e) {}

for (var i = 0; i < 10000; ++i) {
try { if (Inst31 <= 1000 && typeof (i) != "undefined") {_RecordType("<393,394,25>",(i)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (i) != "undefined") {_RecordType("<400,401,25>",(i)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (i) != "undefined") {_RecordType("<413,414,25>",(i)); Inst33++; } } catch(e) {}
try { if (Inst35 <= 1000 && typeof (foo) != "undefined") {_RecordType("<433,436,26>",(foo)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (o) != "undefined") {_RecordType("<437,438,26>",(o)); Inst36++; } } catch(e) {}
  var result = foo(o);
try { if (Inst34 <= 1000 && typeof (result) != "undefined") {_RecordType("<424,430,26>",(result)); Inst34++; } } catch(e) {}

try { if (Inst37 <= 1000 && typeof (result) != "undefined") {_RecordType("<448,454,28>",(result)); Inst37++; } } catch(e) {}
  if (result != 1) {
try { if (Inst38 <= 1000 && typeof (result) != "undefined") {_RecordType("<497,503,29>",(result)); Inst38++; } } catch(e) {}
    throw "Error: bad result: " + result;
  }
}

