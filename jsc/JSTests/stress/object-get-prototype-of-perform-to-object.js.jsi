var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst1 <= 1000 && typeof (String.prototype) != "undefined") {_RecordType("<29,45,1>",(String.prototype)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (String) != "undefined") {_RecordType("<29,35,1>",(String)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Number.prototype) != "undefined") {_RecordType("<53,69,1>",(Number.prototype)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Number) != "undefined") {_RecordType("<53,59,1>",(Number)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<73,79,1>",(Symbol)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Symbol.prototype) != "undefined") {_RecordType("<91,107,1>",(Symbol.prototype)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<91,97,1>",(Symbol)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Boolean.prototype) != "undefined") {_RecordType("<117,134,1>",(Boolean.prototype)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Boolean) != "undefined") {_RecordType("<117,124,1>",(Boolean)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Boolean.prototype) != "undefined") {_RecordType("<145,162,1>",(Boolean.prototype)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Boolean) != "undefined") {_RecordType("<145,152,1>",(Boolean)); Inst11++; } } catch(e) {}
var primitives = [["string", String.prototype], [42, Number.prototype], [Symbol("symbol"), Symbol.prototype], [true, Boolean.prototype], [false, Boolean.prototype]];
try { if (Inst0 <= 1000 && typeof (primitives) != "undefined") {_RecordType("<4,14,1>",(primitives)); Inst0++; } } catch(e) {}

for (var [primitive, expected] of primitives) {
try { if (Inst12 <= 1000 && typeof (primitive) != "undefined") {_RecordType("<177,186,3>",(primitive)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (expected) != "undefined") {_RecordType("<188,196,3>",(expected)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (primitives) != "undefined") {_RecordType("<201,211,3>",(primitives)); Inst14++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (Object.getPrototypeOf) != "undefined") {_RecordType("<227,248,4>",(Object.getPrototypeOf)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Object) != "undefined") {_RecordType("<227,233,4>",(Object)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (primitive) != "undefined") {_RecordType("<249,258,4>",(primitive)); Inst18++; } } catch(e) {}
  var ret = Object.getPrototypeOf(primitive);
try { if (Inst15 <= 1000 && typeof (ret) != "undefined") {_RecordType("<221,224,4>",(ret)); Inst15++; } } catch(e) {}
}

try { if (Inst19 <= 1000 && typeof ([[null, "TypeError: null is not an object (evaluating 'Object.getPrototypeOf(value)')"], [undefined, "TypeError: undefined is not an object (evaluating 'Object.getPrototypeOf(value)')"]].forEach) != "undefined") {_RecordType("<264,458,7>",([[null, "TypeError: null is not an object (evaluating 'Object.getPrototypeOf(value)')"], [undefined, "TypeError: undefined is not an object (evaluating 'Object.getPrototypeOf(value)')"]].forEach)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<354,363,7>",(undefined)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (value) != "undefined") {_RecordType("<470,475,7>",(value)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (message) != "undefined") {_RecordType("<477,484,7>",(message)); Inst22++; } } catch(e) {}
[[null, "TypeError: null is not an object (evaluating 'Object.getPrototypeOf(value)')"], [undefined, "TypeError: undefined is not an object (evaluating 'Object.getPrototypeOf(value)')"]].forEach(function ([value, message]) {
  var error = null;
try { if (Inst23 <= 1000 && typeof (error) != "undefined") {_RecordType("<495,500,8>",(error)); Inst23++; } } catch(e) {}

try { if (Inst27 <= 1000 && typeof (e) != "undefined") {_RecordType("<563,564,12>",(e)); Inst27++; } } catch(e) {}
  try {
try { if (Inst24 <= 1000 && typeof (Object.getPrototypeOf) != "undefined") {_RecordType("<522,543,11>",(Object.getPrototypeOf)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Object) != "undefined") {_RecordType("<522,528,11>",(Object)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (value) != "undefined") {_RecordType("<544,549,11>",(value)); Inst26++; } } catch(e) {}
    Object.getPrototypeOf(value);
  } catch (e) {
try { if (Inst29 <= 1000 && typeof (e) != "undefined") {_RecordType("<580,581,13>",(e)); Inst29++; } } catch(e) {}
    error = e;
try { if (Inst28 <= 1000 && typeof (error) != "undefined") {_RecordType("<572,577,13>",(error)); Inst28++; } } catch(e) {}
  }
});

