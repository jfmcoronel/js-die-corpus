var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (test1) != "undefined") {_RecordType("<9,14,1>",(test1)); Inst0++; } } catch(e) {}
function test1() {
  var o1;
try { if (Inst1 <= 1000 && typeof (o1) != "undefined") {_RecordType("<25,27,2>",(o1)); Inst1++; } } catch(e) {}

  for (let i = 0; i < 1000000; ++i) {
try { if (Inst2 <= 1000 && typeof (i) != "undefined") {_RecordType("<41,42,4>",(i)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (i) != "undefined") {_RecordType("<48,49,4>",(i)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (i) != "undefined") {_RecordType("<63,64,4>",(i)); Inst4++; } } catch(e) {}
    var o2 = {
      f: {
        f: {
          f: {
            f: {
              f: {
                f: {
                  f: {
                    f: {
                      f: {
                        f: {
                          f: {
                            f: {}
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    };
try { if (Inst5 <= 1000 && typeof (o2) != "undefined") {_RecordType("<76,78,5>",(o2)); Inst5++; } } catch(e) {}
  }

try { if (Inst6 <= 1000 && typeof (o2) != "undefined") {_RecordType("<568,570,32>",(o2)); Inst6++; } } catch(e) {}
  return -o2;
}

try { if (Inst7 <= 1000 && typeof (test1) != "undefined") {_RecordType("<575,580,35>",(test1)); Inst7++; } } catch(e) {}
test1();

try { if (Inst8 <= 1000 && typeof (test2) != "undefined") {_RecordType("<594,599,37>",(test2)); Inst8++; } } catch(e) {}
function test2() {
  var o1;
try { if (Inst9 <= 1000 && typeof (o1) != "undefined") {_RecordType("<610,612,38>",(o1)); Inst9++; } } catch(e) {}

  for (let i = 0; i < 1000000; ++i) {
try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<626,627,40>",(i)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<633,634,40>",(i)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<648,649,40>",(i)); Inst12++; } } catch(e) {}
    var o2 = {
      f: {
        f: {
          f: {
            f: {
              f: {
                f: {
                  f: {
                    f: {
                      f: {
                        f: {
                          f: {
                            f: {}
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    };
try { if (Inst13 <= 1000 && typeof (o2) != "undefined") {_RecordType("<661,663,41>",(o2)); Inst13++; } } catch(e) {}
  }

try { if (Inst14 <= 1000 && typeof (o1) != "undefined") {_RecordType("<1152,1154,68>",(o1)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (o2) != "undefined") {_RecordType("<1157,1159,68>",(o2)); Inst15++; } } catch(e) {}
  return o1 - o2;
}

try { if (Inst16 <= 1000 && typeof (test2) != "undefined") {_RecordType("<1164,1169,71>",(test2)); Inst16++; } } catch(e) {}
test2();

try { if (Inst17 <= 1000 && typeof (test3) != "undefined") {_RecordType("<1183,1188,73>",(test3)); Inst17++; } } catch(e) {}
function test3() {
  var o1;
try { if (Inst18 <= 1000 && typeof (o1) != "undefined") {_RecordType("<1199,1201,74>",(o1)); Inst18++; } } catch(e) {}

  for (let i = 0; i < 1000000; ++i) {
try { if (Inst19 <= 1000 && typeof (i) != "undefined") {_RecordType("<1215,1216,76>",(i)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<1222,1223,76>",(i)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<1237,1238,76>",(i)); Inst21++; } } catch(e) {}
    var o2 = {
      f: {
        f: {
          f: {
            f: {
              f: {
                f: {
                  f: {
                    f: {
                      f: {
                        f: {
                          f: {
                            f: {}
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    };
try { if (Inst22 <= 1000 && typeof (o2) != "undefined") {_RecordType("<1250,1252,77>",(o2)); Inst22++; } } catch(e) {}
  }

try { if (Inst23 <= 1000 && typeof (o1) != "undefined") {_RecordType("<1741,1743,104>",(o1)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (o2) != "undefined") {_RecordType("<1746,1748,104>",(o2)); Inst24++; } } catch(e) {}
  return o1 + o2;
}

try { if (Inst25 <= 1000 && typeof (test3) != "undefined") {_RecordType("<1753,1758,107>",(test3)); Inst25++; } } catch(e) {}
test3();

try { if (Inst26 <= 1000 && typeof (test4) != "undefined") {_RecordType("<1772,1777,109>",(test4)); Inst26++; } } catch(e) {}
function test4() {
  var o1;
try { if (Inst27 <= 1000 && typeof (o1) != "undefined") {_RecordType("<1788,1790,110>",(o1)); Inst27++; } } catch(e) {}

  for (let i = 0; i < 1000000; ++i) {
try { if (Inst28 <= 1000 && typeof (i) != "undefined") {_RecordType("<1804,1805,112>",(i)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (i) != "undefined") {_RecordType("<1811,1812,112>",(i)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (i) != "undefined") {_RecordType("<1826,1827,112>",(i)); Inst30++; } } catch(e) {}
    var o2 = {
      f: {
        f: {
          f: {
            f: {
              f: {
                f: {
                  f: {
                    f: {
                      f: {
                        f: {
                          f: {
                            f: {}
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    };
try { if (Inst31 <= 1000 && typeof (o2) != "undefined") {_RecordType("<1839,1841,113>",(o2)); Inst31++; } } catch(e) {}
  }

try { if (Inst32 <= 1000 && typeof (o1) != "undefined") {_RecordType("<2330,2332,140>",(o1)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (o2) != "undefined") {_RecordType("<2335,2337,140>",(o2)); Inst33++; } } catch(e) {}
  return o1 * o2;
}

try { if (Inst34 <= 1000 && typeof (test4) != "undefined") {_RecordType("<2342,2347,143>",(test4)); Inst34++; } } catch(e) {}
test4();

