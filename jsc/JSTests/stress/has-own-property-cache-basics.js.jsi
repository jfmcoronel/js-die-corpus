var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (assert) != "undefined") {_RecordType("<9,15,1>",(assert)); Inst0++; } } catch(e) {}
function assert(b) {
try { if (Inst1 <= 1000 && typeof (b) != "undefined") {_RecordType("<16,17,1>",(b)); Inst1++; } } catch(e) {}
  ;
}

try { if (Inst2 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<28,36,5>",(noInline)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (assert) != "undefined") {_RecordType("<37,43,5>",(assert)); Inst3++; } } catch(e) {}
noInline(assert);
let objs = [{
  f: 50
}, {
  f: 50,
  g: 70
}, {
  g: 50,
  f: 70
}, {
  h: 50,
  f: 70
}, {
  z: 50,
  f: 70
}, {
  k: 50,
  f: 70
}];
try { if (Inst4 <= 1000 && typeof (objs) != "undefined") {_RecordType("<50,54,6>",(objs)); Inst4++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<191,197,24>",(Symbol)); Inst6++; } } catch(e) {}
let s1 = Symbol();
try { if (Inst5 <= 1000 && typeof (s1) != "undefined") {_RecordType("<186,188,24>",(s1)); Inst5++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<210,216,25>",(Symbol)); Inst8++; } } catch(e) {}
let s2 = Symbol();
try { if (Inst7 <= 1000 && typeof (s2) != "undefined") {_RecordType("<205,207,25>",(s2)); Inst7++; } } catch(e) {}

for (let o of objs) {
try { if (Inst9 <= 1000 && typeof (o) != "undefined") {_RecordType("<230,231,27>",(o)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (objs) != "undefined") {_RecordType("<235,239,27>",(objs)); Inst10++; } } catch(e) {}
  o[s1] = "foo";
try { if (Inst11 <= 1000 && typeof (o[s1]) != "undefined") {_RecordType("<245,250,28>",(o[s1])); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (o) != "undefined") {_RecordType("<245,246,28>",(o)); Inst12++; } } catch(e) {}
}

try { if (Inst13 <= 1000 && typeof (foo) != "undefined") {_RecordType("<272,275,31>",(foo)); Inst13++; } } catch(e) {}
function foo(o) {
try { if (Inst14 <= 1000 && typeof (o) != "undefined") {_RecordType("<276,277,31>",(o)); Inst14++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (o.hasOwnProperty) != "undefined") {_RecordType("<283,299,32>",(o.hasOwnProperty)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (o) != "undefined") {_RecordType("<283,284,32>",(o)); Inst16++; } } catch(e) {}
  o.hasOwnProperty("f");
try { if (Inst17 <= 1000 && typeof (o.hasOwnProperty) != "undefined") {_RecordType("<309,325,33>",(o.hasOwnProperty)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (o) != "undefined") {_RecordType("<309,310,33>",(o)); Inst18++; } } catch(e) {}
  !o.hasOwnProperty("ff");
try { if (Inst19 <= 1000 && typeof (o.hasOwnProperty) != "undefined") {_RecordType("<335,351,34>",(o.hasOwnProperty)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (o) != "undefined") {_RecordType("<335,336,34>",(o)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (s1) != "undefined") {_RecordType("<352,354,34>",(s1)); Inst21++; } } catch(e) {}
  o.hasOwnProperty(s1);
try { if (Inst22 <= 1000 && typeof (o.hasOwnProperty) != "undefined") {_RecordType("<360,376,35>",(o.hasOwnProperty)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (o) != "undefined") {_RecordType("<360,361,35>",(o)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (s2) != "undefined") {_RecordType("<377,379,35>",(s2)); Inst24++; } } catch(e) {}
  !o.hasOwnProperty(s2);
}

try { if (Inst25 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<385,393,38>",(noInline)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (foo) != "undefined") {_RecordType("<394,397,38>",(foo)); Inst26++; } } catch(e) {}
noInline(foo);

for (let i = 0; i < 40000; ++i) {
try { if (Inst27 <= 1000 && typeof (i) != "undefined") {_RecordType("<410,411,40>",(i)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (i) != "undefined") {_RecordType("<417,418,40>",(i)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (i) != "undefined") {_RecordType("<430,431,40>",(i)); Inst29++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (foo) != "undefined") {_RecordType("<437,440,41>",(foo)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (objs[i % objs.length]) != "undefined") {_RecordType("<441,462,41>",(objs[i % objs.length])); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (objs) != "undefined") {_RecordType("<441,445,41>",(objs)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (i) != "undefined") {_RecordType("<446,447,41>",(i)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (objs.length) != "undefined") {_RecordType("<450,461,41>",(objs.length)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (objs) != "undefined") {_RecordType("<450,454,41>",(objs)); Inst35++; } } catch(e) {}
  foo(objs[i % objs.length]);
}

