var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<9,17,1>",(shouldBe)); Inst0++; } } catch(e) {}
function shouldBe(expected, actual, msg) {
try { if (Inst1 <= 1000 && typeof (expected) != "undefined") {_RecordType("<18,26,1>",(expected)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (actual) != "undefined") {_RecordType("<28,34,1>",(actual)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (msg) != "undefined") {_RecordType("<36,39,1>",(msg)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (msg) != "undefined") {_RecordType("<49,52,2>",(msg)); Inst4++; } } catch(e) {}
  if (msg === void 0) {
    msg = "";
try { if (Inst5 <= 1000 && typeof (msg) != "undefined") {_RecordType("<71,74,3>",(msg)); Inst5++; } } catch(e) {}
  } else {
try { if (Inst7 <= 1000 && typeof (msg) != "undefined") {_RecordType("<112,115,5>",(msg)); Inst7++; } } catch(e) {}
    msg = " for " + msg;
try { if (Inst6 <= 1000 && typeof (msg) != "undefined") {_RecordType("<96,99,5>",(msg)); Inst6++; } } catch(e) {}
  }
}

try { if (Inst8 <= 1000 && typeof (shouldBeAsync) != "undefined") {_RecordType("<133,146,9>",(shouldBeAsync)); Inst8++; } } catch(e) {}
function shouldBeAsync(expected, run, msg) {
try { if (Inst9 <= 1000 && typeof (expected) != "undefined") {_RecordType("<147,155,9>",(expected)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (run) != "undefined") {_RecordType("<157,160,9>",(run)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (msg) != "undefined") {_RecordType("<162,165,9>",(msg)); Inst11++; } } catch(e) {}
  let actual;
try { if (Inst12 <= 1000 && typeof (actual) != "undefined") {_RecordType("<175,181,10>",(actual)); Inst12++; } } catch(e) {}
  var hadError = false;
try { if (Inst13 <= 1000 && typeof (hadError) != "undefined") {_RecordType("<189,197,11>",(hadError)); Inst13++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (run().then) != "undefined") {_RecordType("<209,219,12>",(run().then)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (run) != "undefined") {_RecordType("<209,212,12>",(run)); Inst15++; } } catch(e) {}
  run().then(function (value) {
try { if (Inst16 <= 1000 && typeof (value) != "undefined") {_RecordType("<230,235,12>",(value)); Inst16++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (value) != "undefined") {_RecordType("<252,257,13>",(value)); Inst18++; } } catch(e) {}
    actual = value;
try { if (Inst17 <= 1000 && typeof (actual) != "undefined") {_RecordType("<243,249,13>",(actual)); Inst17++; } } catch(e) {}
  }, function (error) {
try { if (Inst19 <= 1000 && typeof (error) != "undefined") {_RecordType("<274,279,14>",(error)); Inst19++; } } catch(e) {}
    hadError = true;
try { if (Inst20 <= 1000 && typeof (hadError) != "undefined") {_RecordType("<287,295,15>",(hadError)); Inst20++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (error) != "undefined") {_RecordType("<317,322,16>",(error)); Inst22++; } } catch(e) {}
    actual = error;
try { if (Inst21 <= 1000 && typeof (actual) != "undefined") {_RecordType("<308,314,16>",(actual)); Inst21++; } } catch(e) {}
  });
try { if (Inst23 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<332,340,18>",(shouldBe)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (expected) != "undefined") {_RecordType("<341,349,18>",(expected)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (actual) != "undefined") {_RecordType("<351,357,18>",(actual)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (msg) != "undefined") {_RecordType("<359,362,18>",(msg)); Inst26++; } } catch(e) {}
  shouldBe(expected, actual, msg);
}

try { if (Inst28 <= 1000 && typeof ({
  x: "bar",
  y: function () {
    return async z => this.x + z;
  }
}.y) != "undefined") {_RecordType("<376,450,21>",({
  x: "bar",
  y: function () {
    return async z => this.x + z;
  }
}.y)); Inst28++; } } catch(e) {}
var d = {
  x: "bar",
  y: function () {
try { if (Inst29 <= 1000 && typeof (z) != "undefined") {_RecordType("<426,427,24>",(z)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (this.x) != "undefined") {_RecordType("<431,437,24>",(this.x)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (z) != "undefined") {_RecordType("<440,441,24>",(z)); Inst31++; } } catch(e) {}
    return async z => this.x + z;
  }
}.y();
try { if (Inst27 <= 1000 && typeof (d) != "undefined") {_RecordType("<372,373,21>",(d)); Inst27++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (d) != "undefined") {_RecordType("<481,482,29>",(d)); Inst33++; } } catch(e) {}
var e = {
  x: "baz",
  y: d
};
try { if (Inst32 <= 1000 && typeof (e) != "undefined") {_RecordType("<458,459,27>",(e)); Inst32++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof (shouldBeAsync) != "undefined") {_RecordType("<486,499,31>",(shouldBeAsync)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (d) != "undefined") {_RecordType("<516,517,31>",(d)); Inst35++; } } catch(e) {}
shouldBeAsync("barley", () => d("ley"));
try { if (Inst36 <= 1000 && typeof (shouldBeAsync) != "undefined") {_RecordType("<527,540,32>",(shouldBeAsync)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (e.y) != "undefined") {_RecordType("<557,560,32>",(e.y)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (e) != "undefined") {_RecordType("<557,558,32>",(e)); Inst38++; } } catch(e) {}
shouldBeAsync("barley", () => e.y("ley"));

