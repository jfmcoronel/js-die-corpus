var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (foo) != "undefined") {_RecordType("<9,12,1>",(foo)); Inst0++; } } catch(e) {}
function foo(p, q) {
try { if (Inst1 <= 1000 && typeof (p) != "undefined") {_RecordType("<13,14,1>",(p)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (q) != "undefined") {_RecordType("<16,17,1>",(q)); Inst2++; } } catch(e) {}
  var o = {};
try { if (Inst3 <= 1000 && typeof (o) != "undefined") {_RecordType("<27,28,2>",(o)); Inst3++; } } catch(e) {}

try { if (Inst4 <= 1000 && typeof (p) != "undefined") {_RecordType("<42,43,4>",(p)); Inst4++; } } catch(e) {}
  if (p) {
    o.f = 42;
try { if (Inst5 <= 1000 && typeof (o.f) != "undefined") {_RecordType("<51,54,5>",(o.f)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (o) != "undefined") {_RecordType("<51,52,5>",(o)); Inst6++; } } catch(e) {}
  }

try { if (Inst7 <= 1000 && typeof (q) != "undefined") {_RecordType("<72,73,8>",(q)); Inst7++; } } catch(e) {}
  if (q) {
try { if (Inst8 <= 1000 && typeof (o.f) != "undefined") {_RecordType("<81,84,9>",(o.f)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (o) != "undefined") {_RecordType("<81,82,9>",(o)); Inst9++; } } catch(e) {}
    o.f++;
try { if (Inst10 <= 1000 && typeof (o) != "undefined") {_RecordType("<99,100,10>",(o)); Inst10++; } } catch(e) {}
    return o;
  }
}

try { if (Inst11 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<109,117,14>",(noInline)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (foo) != "undefined") {_RecordType("<118,121,14>",(foo)); Inst12++; } } catch(e) {}
noInline(foo);
try { if (Inst14 <= 1000 && typeof (foo(false, true).f) != "undefined") {_RecordType("<139,157,15>",(foo(false, true).f)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (foo) != "undefined") {_RecordType("<139,142,15>",(foo)); Inst15++; } } catch(e) {}
var expected = foo(false, true).f;
try { if (Inst13 <= 1000 && typeof (expected) != "undefined") {_RecordType("<128,136,15>",(expected)); Inst13++; } } catch(e) {}

for (var i = 0; i < 1000000; i++) {
try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<169,170,17>",(i)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (i) != "undefined") {_RecordType("<176,177,17>",(i)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (i) != "undefined") {_RecordType("<189,190,17>",(i)); Inst18++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (foo) != "undefined") {_RecordType("<198,201,18>",(foo)); Inst19++; } } catch(e) {}
  foo(true, true);
}

try { if (Inst21 <= 1000 && typeof (foo(false, true).f) != "undefined") {_RecordType("<231,249,21>",(foo(false, true).f)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (foo) != "undefined") {_RecordType("<231,234,21>",(foo)); Inst22++; } } catch(e) {}
var result = foo(false, true).f;
try { if (Inst20 <= 1000 && typeof (result) != "undefined") {_RecordType("<222,228,21>",(result)); Inst20++; } } catch(e) {}

try { if (Inst23 <= 1000 && typeof (Object.is) != "undefined") {_RecordType("<257,266,23>",(Object.is)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (Object) != "undefined") {_RecordType("<257,263,23>",(Object)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (result) != "undefined") {_RecordType("<267,273,23>",(result)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (expected) != "undefined") {_RecordType("<275,283,23>",(expected)); Inst26++; } } catch(e) {}
if (!Object.is(result, expected)) {
try { if (Inst27 <= 1000 && typeof (expected) != "undefined") {_RecordType("<317,325,24>",(expected)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (result) != "undefined") {_RecordType("<348,354,24>",(result)); Inst28++; } } catch(e) {}
  throw "Error: expected " + expected + "; FTL produced " + result;
}

