var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (target1) != "undefined") {_RecordType("<9,16,1>",(target1)); Inst0++; } } catch(e) {}
function target1() {
try { if (Inst1 <= 1000 && typeof (Array.from) != "undefined") {_RecordType("<30,40,2>",(Array.from)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Array) != "undefined") {_RecordType("<30,35,2>",(Array)); Inst2++; } } catch(e) {}
  return Array.from({
    length: 5,
    0: 0,
    1: 0,
    2: 0,
    3: 0,
    4: 0
  });
}

try { if (Inst3 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<116,124,12>",(noInline)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (target1) != "undefined") {_RecordType("<125,132,12>",(target1)); Inst4++; } } catch(e) {}
noInline(target1);

try { if (Inst5 <= 1000 && typeof (target2) != "undefined") {_RecordType("<145,152,14>",(target2)); Inst5++; } } catch(e) {}
function target2() {
try { if (Inst6 <= 1000 && typeof (Array.from) != "undefined") {_RecordType("<166,176,15>",(Array.from)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Array) != "undefined") {_RecordType("<166,171,15>",(Array)); Inst7++; } } catch(e) {}
  return Array.from({
    length: 5.4,
    0: 0,
    1: 0,
    2: 0,
    3: 0,
    4: 0
  });
}

try { if (Inst8 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<254,262,25>",(noInline)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (target2) != "undefined") {_RecordType("<263,270,25>",(target2)); Inst9++; } } catch(e) {}
noInline(target2);

try { if (Inst10 <= 1000 && typeof (target3) != "undefined") {_RecordType("<283,290,27>",(target3)); Inst10++; } } catch(e) {}
function target3() {
try { if (Inst11 <= 1000 && typeof (Array.from) != "undefined") {_RecordType("<304,314,28>",(Array.from)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Array) != "undefined") {_RecordType("<304,309,28>",(Array)); Inst12++; } } catch(e) {}
  return Array.from({
    length: -5.4,
    0: 0,
    1: 0,
    2: 0,
    3: 0,
    4: 0
  });
}

try { if (Inst13 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<393,401,38>",(noInline)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (target3) != "undefined") {_RecordType("<402,409,38>",(target3)); Inst14++; } } catch(e) {}
noInline(target3);

for (var i = 0; i < 10000; ++i) {
try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<422,423,40>",(i)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<429,430,40>",(i)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (i) != "undefined") {_RecordType("<442,443,40>",(i)); Inst17++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (target1) != "undefined") {_RecordType("<449,456,41>",(target1)); Inst18++; } } catch(e) {}
  target1();
}

for (var i = 0; i < 10000; ++i) {
try { if (Inst19 <= 1000 && typeof (i) != "undefined") {_RecordType("<472,473,44>",(i)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<479,480,44>",(i)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<492,493,44>",(i)); Inst21++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (target2) != "undefined") {_RecordType("<499,506,45>",(target2)); Inst22++; } } catch(e) {}
  target2();
}

for (var i = 0; i < 10000; ++i) {
try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<522,523,48>",(i)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<529,530,48>",(i)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<542,543,48>",(i)); Inst25++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (target3) != "undefined") {_RecordType("<549,556,49>",(target3)); Inst26++; } } catch(e) {}
  target3();
}

