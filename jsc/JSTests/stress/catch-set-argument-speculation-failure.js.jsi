var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
"use strict";

let flag = true;
try { if (Inst0 <= 1000 && typeof (flag) != "undefined") {_RecordType("<19,23,3>",(flag)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (o) != "undefined") {_RecordType("<42,43,5>",(o)); Inst1++; } } catch(e) {}
function o() {
try { if (Inst2 <= 1000 && typeof (flag) != "undefined") {_RecordType("<54,58,6>",(flag)); Inst2++; } } catch(e) {}
  if (flag) {
    return {
      x: 20
    };
  }

  return {
    y: 20,
    x: 20
  };
}

try { if (Inst3 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<139,147,18>",(noInline)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (o) != "undefined") {_RecordType("<148,149,18>",(o)); Inst4++; } } catch(e) {}
noInline(o);
let counter = 0;
try { if (Inst5 <= 1000 && typeof (counter) != "undefined") {_RecordType("<156,163,19>",(counter)); Inst5++; } } catch(e) {}

try { if (Inst6 <= 1000 && typeof (e) != "undefined") {_RecordType("<179,180,21>",(e)); Inst6++; } } catch(e) {}
function e() {
try { if (Inst7 <= 1000 && typeof (counter) != "undefined") {_RecordType("<193,200,22>",(counter)); Inst7++; } } catch(e) {}
  if (++counter % 50 === 0) {
try { if (Inst8 <= 1000 && typeof (Error) != "undefined") {_RecordType("<229,234,23>",(Error)); Inst8++; } } catch(e) {}
    throw new Error();
  }
}

try { if (Inst9 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<245,253,27>",(noInline)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (e) != "undefined") {_RecordType("<254,255,27>",(e)); Inst10++; } } catch(e) {}
noInline(e);
let counter2 = 0;
try { if (Inst11 <= 1000 && typeof (counter2) != "undefined") {_RecordType("<262,270,28>",(counter2)); Inst11++; } } catch(e) {}

try { if (Inst12 <= 1000 && typeof (e2) != "undefined") {_RecordType("<286,288,30>",(e2)); Inst12++; } } catch(e) {}
function e2() {
try { if (Inst13 <= 1000 && typeof (counter2) != "undefined") {_RecordType("<301,309,31>",(counter2)); Inst13++; } } catch(e) {}
  if (++counter2 % 2 === 0) {
try { if (Inst14 <= 1000 && typeof (Error) != "undefined") {_RecordType("<337,342,32>",(Error)); Inst14++; } } catch(e) {}
    throw new Error();
  }
}

try { if (Inst15 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<353,361,36>",(noInline)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (e2) != "undefined") {_RecordType("<362,364,36>",(e2)); Inst16++; } } catch(e) {}
noInline(e2);

try { if (Inst17 <= 1000 && typeof (escape) != "undefined") {_RecordType("<377,383,38>",(escape)); Inst17++; } } catch(e) {}
function escape() {
  ;
}

try { if (Inst18 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<395,403,42>",(noInline)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (escape) != "undefined") {_RecordType("<404,410,42>",(escape)); Inst19++; } } catch(e) {}
noInline(escape);

try { if (Inst20 <= 1000 && typeof (baz) != "undefined") {_RecordType("<423,426,44>",(baz)); Inst20++; } } catch(e) {}
function baz(o) {
try { if (Inst21 <= 1000 && typeof (o) != "undefined") {_RecordType("<427,428,44>",(o)); Inst21++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (e) != "undefined") {_RecordType("<477,478,48>",(e)); Inst26++; } } catch(e) {}
  try {
try { if (Inst22 <= 1000 && typeof (e) != "undefined") {_RecordType("<444,445,46>",(e)); Inst22++; } } catch(e) {}
    e();
try { if (Inst23 <= 1000 && typeof (escape) != "undefined") {_RecordType("<453,459,47>",(escape)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (o.x) != "undefined") {_RecordType("<460,463,47>",(o.x)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (o) != "undefined") {_RecordType("<460,461,47>",(o)); Inst25++; } } catch(e) {}
    escape(o.x);
  } catch (e) {
try { if (Inst27 <= 1000 && typeof (escape) != "undefined") {_RecordType("<486,492,49>",(escape)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (o.x) != "undefined") {_RecordType("<493,496,49>",(o.x)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (o) != "undefined") {_RecordType("<493,494,49>",(o)); Inst29++; } } catch(e) {}
    escape(o.x);
try { if (Inst30 <= 1000 && typeof (e2) != "undefined") {_RecordType("<503,505,50>",(e2)); Inst30++; } } catch(e) {}
    e2();
  } finally {
try { if (Inst31 <= 1000 && typeof (o.x) != "undefined") {_RecordType("<527,530,52>",(o.x)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (o) != "undefined") {_RecordType("<527,528,52>",(o)); Inst32++; } } catch(e) {}
    o.x;
  }
}

try { if (Inst33 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<539,547,56>",(noInline)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (baz) != "undefined") {_RecordType("<548,551,56>",(baz)); Inst34++; } } catch(e) {}
noInline(baz);
{
  let o = {
    x: 20
  };
try { if (Inst35 <= 1000 && typeof (o) != "undefined") {_RecordType("<562,563,58>",(o)); Inst35++; } } catch(e) {}

try { if (Inst36 <= 1000 && typeof (run) != "undefined") {_RecordType("<595,598,62>",(run)); Inst36++; } } catch(e) {}
  function run() {
    for (let i = 0; i < 1000; ++i) {
try { if (Inst37 <= 1000 && typeof (i) != "undefined") {_RecordType("<616,617,63>",(i)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (i) != "undefined") {_RecordType("<623,624,63>",(i)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (i) != "undefined") {_RecordType("<635,636,63>",(i)); Inst39++; } } catch(e) {}
      try {
try { if (Inst40 <= 1000 && typeof (baz) != "undefined") {_RecordType("<660,663,65>",(baz)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (o) != "undefined") {_RecordType("<664,665,65>",(o)); Inst41++; } } catch(e) {}
        baz(o);
      } catch {
        ;
      }
    }
  }

try { if (Inst42 <= 1000 && typeof (run) != "undefined") {_RecordType("<715,718,72>",(run)); Inst42++; } } catch(e) {}
  run();
  o = {
    y: 40,
    x: 20
  };
try { if (Inst43 <= 1000 && typeof (o) != "undefined") {_RecordType("<724,725,73>",(o)); Inst43++; } } catch(e) {}
try { if (Inst44 <= 1000 && typeof (run) != "undefined") {_RecordType("<758,761,77>",(run)); Inst44++; } } catch(e) {}
  run();
}

