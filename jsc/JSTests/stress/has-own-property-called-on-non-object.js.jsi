var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
"use strict";

try { if (Inst1 <= 1000 && typeof (String) != "undefined") {_RecordType("<52,58,5>",(String)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Date) != "undefined") {_RecordType("<144,148,14>",(Date)); Inst2++; } } catch(e) {}
let objs = [function () {
  ;
}, new String(), {
  foo: 45
}, {
  bar: 50,
  foo: 45
}, {
  baz: 70,
  bar: 50,
  foo: 45
}, new Date()];
try { if (Inst0 <= 1000 && typeof (objs) != "undefined") {_RecordType("<19,23,3>",(objs)); Inst0++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof ({}.hasOwnProperty) != "undefined") {_RecordType("<163,180,15>",({}.hasOwnProperty)); Inst4++; } } catch(e) {}
let has = {}.hasOwnProperty;
try { if (Inst3 <= 1000 && typeof (has) != "undefined") {_RecordType("<157,160,15>",(has)); Inst3++; } } catch(e) {}

try { if (Inst5 <= 1000 && typeof (foo) != "undefined") {_RecordType("<192,195,17>",(foo)); Inst5++; } } catch(e) {}
function foo(o) {
try { if (Inst6 <= 1000 && typeof (o) != "undefined") {_RecordType("<196,197,17>",(o)); Inst6++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (has.call) != "undefined") {_RecordType("<210,218,18>",(has.call)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (has) != "undefined") {_RecordType("<210,213,18>",(has)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (o) != "undefined") {_RecordType("<219,220,18>",(o)); Inst9++; } } catch(e) {}
  return has.call(o, "foo");
}

try { if (Inst10 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<233,241,21>",(noInline)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (foo) != "undefined") {_RecordType("<242,245,21>",(foo)); Inst11++; } } catch(e) {}
noInline(foo);

for (let i = 0; i < 10000; i++) {
try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<258,259,23>",(i)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<265,266,23>",(i)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<276,277,23>",(i)); Inst14++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (foo) != "undefined") {_RecordType("<285,288,24>",(foo)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (objs[i % objs.length]) != "undefined") {_RecordType("<289,310,24>",(objs[i % objs.length])); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (objs) != "undefined") {_RecordType("<289,293,24>",(objs)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (i) != "undefined") {_RecordType("<294,295,24>",(i)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (objs.length) != "undefined") {_RecordType("<298,309,24>",(objs.length)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (objs) != "undefined") {_RecordType("<298,302,24>",(objs)); Inst20++; } } catch(e) {}
  foo(objs[i % objs.length]);
}

try { if (Inst21 <= 1000 && typeof (foo) != "undefined") {_RecordType("<316,319,27>",(foo)); Inst21++; } } catch(e) {}
foo("foo");

