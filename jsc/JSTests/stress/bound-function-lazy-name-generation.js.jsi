var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (assert) != "undefined") {_RecordType("<9,15,1>",(assert)); Inst0++; } } catch(e) {}
function assert(b) {
try { if (Inst1 <= 1000 && typeof (b) != "undefined") {_RecordType("<16,17,1>",(b)); Inst1++; } } catch(e) {}
  ;
}

try { if (Inst2 <= 1000 && typeof (test) != "undefined") {_RecordType("<37,41,5>",(test)); Inst2++; } } catch(e) {}
function test() {
try { if (Inst4 <= 1000 && typeof (function foo() {
    ;
  }.bind) != "undefined") {_RecordType("<56,87,6>",(function foo() {
    ;
  }.bind)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (foo) != "undefined") {_RecordType("<65,68,6>",(foo)); Inst5++; } } catch(e) {}
  let f = function foo() {
    ;
  }.bind({});
try { if (Inst3 <= 1000 && typeof (f) != "undefined") {_RecordType("<52,53,6>",(f)); Inst3++; } } catch(e) {}

try { if (Inst6 <= 1000 && typeof (f.name) != "undefined") {_RecordType("<96,102,10>",(f.name)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (f) != "undefined") {_RecordType("<96,97,10>",(f)); Inst7++; } } catch(e) {}
  f.name === "bound foo";

try { if (Inst9 <= 1000 && typeof (function () {
    ;
  }.bind) != "undefined") {_RecordType("<127,155,12>",(function () {
    ;
  }.bind)); Inst9++; } } catch(e) {}
  f = function () {
    ;
  }.bind({});
try { if (Inst8 <= 1000 && typeof (f) != "undefined") {_RecordType("<123,124,12>",(f)); Inst8++; } } catch(e) {}

try { if (Inst10 <= 1000 && typeof (f.name) != "undefined") {_RecordType("<164,170,16>",(f.name)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (f) != "undefined") {_RecordType("<164,165,16>",(f)); Inst11++; } } catch(e) {}
  f.name === "bound ";

try { if (Inst13 <= 1000 && typeof (function foo() {
    ;
  }.bind) != "undefined") {_RecordType("<192,223,18>",(function foo() {
    ;
  }.bind)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (foo) != "undefined") {_RecordType("<201,204,18>",(foo)); Inst14++; } } catch(e) {}
  f = function foo() {
    ;
  }.bind({});
try { if (Inst12 <= 1000 && typeof (f) != "undefined") {_RecordType("<188,189,18>",(f)); Inst12++; } } catch(e) {}

try { if (Inst15 <= 1000 && typeof (Reflect.ownKeys(f).includes) != "undefined") {_RecordType("<232,259,22>",(Reflect.ownKeys(f).includes)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Reflect.ownKeys) != "undefined") {_RecordType("<232,247,22>",(Reflect.ownKeys)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<232,239,22>",(Reflect)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (f) != "undefined") {_RecordType("<248,249,22>",(f)); Inst18++; } } catch(e) {}
  Reflect.ownKeys(f).includes("name");
try { if (Inst19 <= 1000 && typeof (f.name) != "undefined") {_RecordType("<271,277,23>",(f.name)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (f) != "undefined") {_RecordType("<271,272,23>",(f)); Inst20++; } } catch(e) {}
  f.name === "bound foo";
try { if (Inst21 <= 1000 && typeof (Reflect.ownKeys(f).includes) != "undefined") {_RecordType("<297,324,24>",(Reflect.ownKeys(f).includes)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Reflect.ownKeys) != "undefined") {_RecordType("<297,312,24>",(Reflect.ownKeys)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<297,304,24>",(Reflect)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (f) != "undefined") {_RecordType("<313,314,24>",(f)); Inst24++; } } catch(e) {}
  Reflect.ownKeys(f).includes("name");

try { if (Inst26 <= 1000 && typeof (function foo() {
    ;
  }.bind) != "undefined") {_RecordType("<341,372,26>",(function foo() {
    ;
  }.bind)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (foo) != "undefined") {_RecordType("<350,353,26>",(foo)); Inst27++; } } catch(e) {}
  f = function foo() {
    ;
  }.bind({});
try { if (Inst25 <= 1000 && typeof (f) != "undefined") {_RecordType("<337,338,26>",(f)); Inst25++; } } catch(e) {}

try { if (Inst28 <= 1000 && typeof (f.name) != "undefined") {_RecordType("<381,387,30>",(f.name)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (f) != "undefined") {_RecordType("<381,382,30>",(f)); Inst29++; } } catch(e) {}
  f.name === "bound foo";
try { if (Inst30 <= 1000 && typeof (Reflect.ownKeys(f).includes) != "undefined") {_RecordType("<407,434,31>",(Reflect.ownKeys(f).includes)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (Reflect.ownKeys) != "undefined") {_RecordType("<407,422,31>",(Reflect.ownKeys)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<407,414,31>",(Reflect)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (f) != "undefined") {_RecordType("<423,424,31>",(f)); Inst33++; } } catch(e) {}
  Reflect.ownKeys(f).includes("name");
}

for (let i = 0; i < 10000; i++) {
try { if (Inst34 <= 1000 && typeof (i) != "undefined") {_RecordType("<456,457,34>",(i)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (i) != "undefined") {_RecordType("<463,464,34>",(i)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (i) != "undefined") {_RecordType("<474,475,34>",(i)); Inst36++; } } catch(e) {}
try { if (Inst37 <= 1000 && typeof (test) != "undefined") {_RecordType("<483,487,35>",(test)); Inst37++; } } catch(e) {}
  test();
}

