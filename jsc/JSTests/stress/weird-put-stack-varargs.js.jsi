var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (baz) != "undefined") {_RecordType("<9,12,1>",(baz)); Inst0++; } } catch(e) {}
function baz() {
try { if (Inst1 <= 1000 && typeof (foo.arguments[1]) != "undefined") {_RecordType("<24,40,2>",(foo.arguments[1])); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (foo.arguments) != "undefined") {_RecordType("<24,37,2>",(foo.arguments)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (foo) != "undefined") {_RecordType("<24,27,2>",(foo)); Inst3++; } } catch(e) {}
  if (!foo.arguments[1]) {
try { if (Inst4 <= 1000 && typeof (foo.arguments[1]) != "undefined") {_RecordType("<114,130,3>",(foo.arguments[1])); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (foo.arguments) != "undefined") {_RecordType("<114,127,3>",(foo.arguments)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (foo) != "undefined") {_RecordType("<114,117,3>",(foo)); Inst6++; } } catch(e) {}
    throw "Error: foo.arguments[1] should be truthy but is falsy: " + foo.arguments[1];
  }
}

try { if (Inst7 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<139,147,7>",(noInline)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (baz) != "undefined") {_RecordType("<148,151,7>",(baz)); Inst8++; } } catch(e) {}
noInline(baz);

try { if (Inst9 <= 1000 && typeof (foo) != "undefined") {_RecordType("<164,167,9>",(foo)); Inst9++; } } catch(e) {}
function foo(a, b) {
try { if (Inst10 <= 1000 && typeof (a) != "undefined") {_RecordType("<168,169,9>",(a)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (b) != "undefined") {_RecordType("<171,172,9>",(b)); Inst11++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (a) != "undefined") {_RecordType("<182,183,10>",(a)); Inst12++; } } catch(e) {}
  if (a) {
    b = 42;
try { if (Inst13 <= 1000 && typeof (b) != "undefined") {_RecordType("<191,192,11>",(b)); Inst13++; } } catch(e) {}
  }

try { if (Inst14 <= 1000 && typeof (baz) != "undefined") {_RecordType("<206,209,14>",(baz)); Inst14++; } } catch(e) {}
  baz();
}

try { if (Inst15 <= 1000 && typeof (fuzz) != "undefined") {_RecordType("<225,229,17>",(fuzz)); Inst15++; } } catch(e) {}
function fuzz(a, b) {
try { if (Inst16 <= 1000 && typeof (a) != "undefined") {_RecordType("<230,231,17>",(a)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (b) != "undefined") {_RecordType("<233,234,17>",(b)); Inst17++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (a) != "undefined") {_RecordType("<247,248,18>",(a)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (b) != "undefined") {_RecordType("<251,252,18>",(b)); Inst19++; } } catch(e) {}
  return a + b;
}

try { if (Inst20 <= 1000 && typeof (bar) != "undefined") {_RecordType("<266,269,21>",(bar)); Inst20++; } } catch(e) {}
function bar(array1, array2) {
try { if (Inst21 <= 1000 && typeof (array1) != "undefined") {_RecordType("<270,276,21>",(array1)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (array2) != "undefined") {_RecordType("<278,284,21>",(array2)); Inst22++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (fuzz.apply) != "undefined") {_RecordType("<290,300,22>",(fuzz.apply)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (fuzz) != "undefined") {_RecordType("<290,294,22>",(fuzz)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (array1) != "undefined") {_RecordType("<307,313,22>",(array1)); Inst25++; } } catch(e) {}
  fuzz.apply(this, array1);
try { if (Inst26 <= 1000 && typeof (foo.apply) != "undefined") {_RecordType("<318,327,23>",(foo.apply)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (foo) != "undefined") {_RecordType("<318,321,23>",(foo)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (array2) != "undefined") {_RecordType("<334,340,23>",(array2)); Inst28++; } } catch(e) {}
  foo.apply(this, array2);
}

try { if (Inst29 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<346,354,26>",(noInline)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (bar) != "undefined") {_RecordType("<355,358,26>",(bar)); Inst30++; } } catch(e) {}
noInline(bar);

for (var i = 0; i < 100000; ++i) {
try { if (Inst31 <= 1000 && typeof (i) != "undefined") {_RecordType("<371,372,28>",(i)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (i) != "undefined") {_RecordType("<378,379,28>",(i)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (i) != "undefined") {_RecordType("<392,393,28>",(i)); Inst33++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof (bar) != "undefined") {_RecordType("<399,402,29>",(bar)); Inst34++; } } catch(e) {}
  bar([false, false], [false, true]);
}

