var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (assert) != "undefined") {_RecordType("<9,15,1>",(assert)); Inst0++; } } catch(e) {}
function assert(b) {
try { if (Inst1 <= 1000 && typeof (b) != "undefined") {_RecordType("<16,17,1>",(b)); Inst1++; } } catch(e) {}
  ;
}

try { if (Inst3 <= 1000 && typeof (Function) != "undefined") {_RecordType("<43,51,5>",(Function)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (String) != "undefined") {_RecordType("<53,59,5>",(String)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Array) != "undefined") {_RecordType("<61,66,5>",(Array)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Set) != "undefined") {_RecordType("<68,71,5>",(Set)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Map) != "undefined") {_RecordType("<73,76,5>",(Map)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (WeakSet) != "undefined") {_RecordType("<78,85,5>",(WeakSet)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (WeakMap) != "undefined") {_RecordType("<87,94,5>",(WeakMap)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<96,102,5>",(RegExp)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Number) != "undefined") {_RecordType("<104,110,5>",(Number)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Promise) != "undefined") {_RecordType("<112,119,5>",(Promise)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Date) != "undefined") {_RecordType("<121,125,5>",(Date)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Boolean) != "undefined") {_RecordType("<127,134,5>",(Boolean)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Error) != "undefined") {_RecordType("<136,141,5>",(Error)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<143,152,5>",(TypeError)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (SyntaxError) != "undefined") {_RecordType("<154,165,5>",(SyntaxError)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (ArrayBuffer) != "undefined") {_RecordType("<167,178,5>",(ArrayBuffer)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Int32Array) != "undefined") {_RecordType("<180,190,5>",(Int32Array)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (Int8Array) != "undefined") {_RecordType("<192,201,5>",(Int8Array)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Uint8Array) != "undefined") {_RecordType("<203,213,5>",(Uint8Array)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Uint8ClampedArray) != "undefined") {_RecordType("<215,232,5>",(Uint8ClampedArray)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Int16Array) != "undefined") {_RecordType("<234,244,5>",(Int16Array)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (Uint16Array) != "undefined") {_RecordType("<246,257,5>",(Uint16Array)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Uint32Array) != "undefined") {_RecordType("<259,270,5>",(Uint32Array)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Float32Array) != "undefined") {_RecordType("<272,284,5>",(Float32Array)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (Float64Array) != "undefined") {_RecordType("<286,298,5>",(Float64Array)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (DataView) != "undefined") {_RecordType("<300,308,5>",(DataView)); Inst28++; } } catch(e) {}
let targets = [Function, String, Array, Set, Map, WeakSet, WeakMap, RegExp, Number, Promise, Date, Boolean, Error, TypeError, SyntaxError, ArrayBuffer, Int32Array, Int8Array, Uint8Array, Uint8ClampedArray, Int16Array, Uint16Array, Uint32Array, Float32Array, Float64Array, DataView];
try { if (Inst2 <= 1000 && typeof (targets) != "undefined") {_RecordType("<32,39,5>",(targets)); Inst2++; } } catch(e) {}

for (let target of targets) {
try { if (Inst29 <= 1000 && typeof (target) != "undefined") {_RecordType("<321,327,7>",(target)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (targets) != "undefined") {_RecordType("<331,338,7>",(targets)); Inst30++; } } catch(e) {}
  let error = null;
try { if (Inst31 <= 1000 && typeof (error) != "undefined") {_RecordType("<348,353,8>",(error)); Inst31++; } } catch(e) {}
  let called = false;
try { if (Inst32 <= 1000 && typeof (called) != "undefined") {_RecordType("<368,374,9>",(called)); Inst32++; } } catch(e) {}
  let handler = {
    get: function (theTarget, propName) {
try { if (Inst34 <= 1000 && typeof (theTarget) != "undefined") {_RecordType("<421,430,11>",(theTarget)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (propName) != "undefined") {_RecordType("<432,440,11>",(propName)); Inst35++; } } catch(e) {}
try { if (Inst36 <= 1000 && typeof (propName) != "undefined") {_RecordType("<450,458,12>",(propName)); Inst36++; } } catch(e) {}
      propName === "prototype";
      called = true;
try { if (Inst37 <= 1000 && typeof (called) != "undefined") {_RecordType("<482,488,13>",(called)); Inst37++; } } catch(e) {}
    }
  };
try { if (Inst33 <= 1000 && typeof (handler) != "undefined") {_RecordType("<390,397,10>",(handler)); Inst33++; } } catch(e) {}
try { if (Inst39 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<526,531,16>",(Proxy)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (target) != "undefined") {_RecordType("<532,538,16>",(target)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (handler) != "undefined") {_RecordType("<540,547,16>",(handler)); Inst41++; } } catch(e) {}
  let proxy = new Proxy(target, handler);
try { if (Inst38 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<514,519,16>",(proxy)); Inst38++; } } catch(e) {}

  for (let i = 0; i < 500; i++) {
try { if (Inst42 <= 1000 && typeof (i) != "undefined") {_RecordType("<562,563,18>",(i)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (i) != "undefined") {_RecordType("<569,570,18>",(i)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (i) != "undefined") {_RecordType("<578,579,18>",(i)); Inst44++; } } catch(e) {}
    let threw = false;
try { if (Inst45 <= 1000 && typeof (threw) != "undefined") {_RecordType("<593,598,19>",(threw)); Inst45++; } } catch(e) {}

try { if (Inst47 <= 1000 && typeof (e) != "undefined") {_RecordType("<651,652,23>",(e)); Inst47++; } } catch(e) {}
    try {
try { if (Inst46 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<629,634,22>",(proxy)); Inst46++; } } catch(e) {}
      new proxy();
    } catch (e) {
      threw = true;
try { if (Inst48 <= 1000 && typeof (threw) != "undefined") {_RecordType("<662,667,24>",(threw)); Inst48++; } } catch(e) {}
try { if (Inst49 <= 1000 && typeof (e) != "undefined") {_RecordType("<682,683,25>",(e)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (error) != "undefined") {_RecordType("<688,693,25>",(error)); Inst50++; } } catch(e) {}
      e === error;
      error = null;
try { if (Inst51 <= 1000 && typeof (error) != "undefined") {_RecordType("<701,706,26>",(error)); Inst51++; } } catch(e) {}
    }

try { if (Inst52 <= 1000 && typeof (threw) != "undefined") {_RecordType("<726,731,29>",(threw)); Inst52++; } } catch(e) {}
    threw;
try { if (Inst53 <= 1000 && typeof (called) != "undefined") {_RecordType("<737,743,30>",(called)); Inst53++; } } catch(e) {}
    called;
    called = false;
try { if (Inst54 <= 1000 && typeof (called) != "undefined") {_RecordType("<749,755,31>",(called)); Inst54++; } } catch(e) {}
  }
}

