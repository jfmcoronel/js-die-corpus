var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// This tests that the lazy watchpoints we set for Symbol.species in our Builtin arrayPrototype functions work.
try { if (Inst0 <= 1000 && typeof (test) != "undefined") {_RecordType("<121,125,2>",(test)); Inst0++; } } catch(e) {}
function test(array) {
try { if (Inst1 <= 1000 && typeof (array) != "undefined") {_RecordType("<126,131,2>",(array)); Inst1++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (array.splice) != "undefined") {_RecordType("<145,157,3>",(array.splice)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (array) != "undefined") {_RecordType("<145,150,3>",(array)); Inst4++; } } catch(e) {}
  array = array.splice(2, 2);
try { if (Inst2 <= 1000 && typeof (array) != "undefined") {_RecordType("<137,142,3>",(array)); Inst2++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (array.slice) != "undefined") {_RecordType("<175,186,4>",(array.slice)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (array) != "undefined") {_RecordType("<175,180,4>",(array)); Inst7++; } } catch(e) {}
  array = array.slice(0, 5);
try { if (Inst5 <= 1000 && typeof (array) != "undefined") {_RecordType("<167,172,4>",(array)); Inst5++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (array.concat) != "undefined") {_RecordType("<204,216,5>",(array.concat)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (array) != "undefined") {_RecordType("<204,209,5>",(array)); Inst10++; } } catch(e) {}
  array = array.concat([1, 2, 3]);
try { if (Inst8 <= 1000 && typeof (array) != "undefined") {_RecordType("<196,201,5>",(array)); Inst8++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (array) != "undefined") {_RecordType("<238,243,6>",(array)); Inst11++; } } catch(e) {}
  return array;
}

try { if (Inst12 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<248,256,9>",(noInline)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (test) != "undefined") {_RecordType("<257,261,9>",(test)); Inst13++; } } catch(e) {}
noInline(test);

try { if (Inst14 <= 1000 && typeof (arrayEq) != "undefined") {_RecordType("<274,281,11>",(arrayEq)); Inst14++; } } catch(e) {}
function arrayEq(a, b) {
try { if (Inst15 <= 1000 && typeof (a) != "undefined") {_RecordType("<282,283,11>",(a)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (b) != "undefined") {_RecordType("<285,286,11>",(b)); Inst16++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<296,304,12>",(a.length)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (a) != "undefined") {_RecordType("<296,297,12>",(a)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (b.length) != "undefined") {_RecordType("<309,317,12>",(b.length)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (b) != "undefined") {_RecordType("<309,310,12>",(b)); Inst20++; } } catch(e) {}
  if (a.length !== b.length) {
try { if (Inst21 <= 1000 && typeof (Error) != "undefined") {_RecordType("<335,340,13>",(Error)); Inst21++; } } catch(e) {}
    throw new Error();
  }

  for (let i = 0; i < a.length; i++) {
try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<360,361,16>",(i)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<367,368,16>",(i)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<371,379,16>",(a.length)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (a) != "undefined") {_RecordType("<371,372,16>",(a)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (i) != "undefined") {_RecordType("<381,382,16>",(i)); Inst26++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (a[i]) != "undefined") {_RecordType("<396,400,17>",(a[i])); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (a) != "undefined") {_RecordType("<396,397,17>",(a)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (b[i]) != "undefined") {_RecordType("<405,409,17>",(b[i])); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (b) != "undefined") {_RecordType("<405,406,17>",(b)); Inst30++; } } catch(e) {}
    if (a[i] !== b[i]) {
try { if (Inst31 <= 1000 && typeof (Error) != "undefined") {_RecordType("<429,434,18>",(Error)); Inst31++; } } catch(e) {}
      throw new Error();
    }
  }
}

for (let i = 0; i < 100; i++) {
try { if (Inst32 <= 1000 && typeof (i) != "undefined") {_RecordType("<460,461,23>",(i)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (i) != "undefined") {_RecordType("<467,468,23>",(i)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (i) != "undefined") {_RecordType("<476,477,23>",(i)); Inst34++; } } catch(e) {}
try { if (Inst35 <= 1000 && typeof (arrayEq) != "undefined") {_RecordType("<485,492,24>",(arrayEq)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (test) != "undefined") {_RecordType("<493,497,24>",(test)); Inst36++; } } catch(e) {}
  arrayEq(test([1, 2, 3, 4, 5, 6, 7, 8, 9]), [3, 4, 1, 2, 3]);
}

try { if (Inst38 <= 1000 && typeof (Array) != "undefined") {_RecordType("<565,570,27>",(Array)); Inst38++; } } catch(e) {}
class A extends Array {}
try { if (Inst37 <= 1000 && typeof (A) != "undefined") {_RecordType("<555,556,27>",(A)); Inst37++; } } catch(e) {}

for (let i = 0; i < 100; i++) {
try { if (Inst39 <= 1000 && typeof (i) != "undefined") {_RecordType("<584,585,29>",(i)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (i) != "undefined") {_RecordType("<591,592,29>",(i)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (i) != "undefined") {_RecordType("<600,601,29>",(i)); Inst41++; } } catch(e) {}
try { if (Inst43 <= 1000 && typeof (test) != "undefined") {_RecordType("<622,626,30>",(test)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (A) != "undefined") {_RecordType("<631,632,30>",(A)); Inst44++; } } catch(e) {}
  let result = test(new A(1, 2, 3, 4, 5, 6, 7, 8, 9));
try { if (Inst42 <= 1000 && typeof (result) != "undefined") {_RecordType("<613,619,30>",(result)); Inst42++; } } catch(e) {}
try { if (Inst45 <= 1000 && typeof (arrayEq) != "undefined") {_RecordType("<664,671,31>",(arrayEq)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (result) != "undefined") {_RecordType("<672,678,31>",(result)); Inst46++; } } catch(e) {}
  arrayEq(result, [3, 4, 1, 2, 3]);

try { if (Inst47 <= 1000 && typeof (result) != "undefined") {_RecordType("<707,713,33>",(result)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (A) != "undefined") {_RecordType("<725,726,33>",(A)); Inst48++; } } catch(e) {}
  if (!(result instanceof A)) {
try { if (Inst49 <= 1000 && typeof (Error) != "undefined") {_RecordType("<745,750,34>",(Error)); Inst49++; } } catch(e) {}
    throw new Error();
  }
}

for (let i = 0; i < 100; i++) {
try { if (Inst50 <= 1000 && typeof (i) != "undefined") {_RecordType("<770,771,38>",(i)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (i) != "undefined") {_RecordType("<777,778,38>",(i)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (i) != "undefined") {_RecordType("<786,787,38>",(i)); Inst52++; } } catch(e) {}
try { if (Inst53 <= 1000 && typeof (arrayEq) != "undefined") {_RecordType("<795,802,39>",(arrayEq)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (test) != "undefined") {_RecordType("<803,807,39>",(test)); Inst54++; } } catch(e) {}
  arrayEq(test([1, 2, 3, 4, 5, 6, 7, 8, 9]), [3, 4, 1, 2, 3]);
}

try { if (Inst55 <= 1000 && typeof (Array.prototype.sort) != "undefined") {_RecordType("<866,886,42>",(Array.prototype.sort)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<866,881,42>",(Array.prototype)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (Array) != "undefined") {_RecordType("<866,871,42>",(Array)); Inst57++; } } catch(e) {}
delete Array.prototype.sort;

for (let i = 0; i < 100; i++) {
try { if (Inst58 <= 1000 && typeof (i) != "undefined") {_RecordType("<898,899,44>",(i)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (i) != "undefined") {_RecordType("<905,906,44>",(i)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (i) != "undefined") {_RecordType("<914,915,44>",(i)); Inst60++; } } catch(e) {}
try { if (Inst61 <= 1000 && typeof (arrayEq) != "undefined") {_RecordType("<923,930,45>",(arrayEq)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (test) != "undefined") {_RecordType("<931,935,45>",(test)); Inst62++; } } catch(e) {}
  arrayEq(test([1, 2, 3, 4, 5, 6, 7, 8, 9]), [3, 4, 1, 2, 3]);
}

for (let i = 0; i < 100; i++) {
try { if (Inst63 <= 1000 && typeof (i) != "undefined") {_RecordType("<996,997,48>",(i)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (i) != "undefined") {_RecordType("<1003,1004,48>",(i)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (i) != "undefined") {_RecordType("<1012,1013,48>",(i)); Inst65++; } } catch(e) {}
try { if (Inst67 <= 1000 && typeof (test) != "undefined") {_RecordType("<1034,1038,49>",(test)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (A) != "undefined") {_RecordType("<1043,1044,49>",(A)); Inst68++; } } catch(e) {}
  let result = test(new A(1, 2, 3, 4, 5, 6, 7, 8, 9));
try { if (Inst66 <= 1000 && typeof (result) != "undefined") {_RecordType("<1025,1031,49>",(result)); Inst66++; } } catch(e) {}
try { if (Inst69 <= 1000 && typeof (arrayEq) != "undefined") {_RecordType("<1076,1083,50>",(arrayEq)); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (result) != "undefined") {_RecordType("<1084,1090,50>",(result)); Inst70++; } } catch(e) {}
  arrayEq(result, [3, 4, 1, 2, 3]);

try { if (Inst71 <= 1000 && typeof (result) != "undefined") {_RecordType("<1119,1125,52>",(result)); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (A) != "undefined") {_RecordType("<1137,1138,52>",(A)); Inst72++; } } catch(e) {}
  if (!(result instanceof A)) {
try { if (Inst73 <= 1000 && typeof (Error) != "undefined") {_RecordType("<1157,1162,53>",(Error)); Inst73++; } } catch(e) {}
    throw new Error();
  }
}

