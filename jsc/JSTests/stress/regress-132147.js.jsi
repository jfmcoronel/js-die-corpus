var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
var foo = function (a, b, count) {
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<20,21,1>",(a)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (b) != "undefined") {_RecordType("<23,24,1>",(b)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (count) != "undefined") {_RecordType("<26,31,1>",(count)); Inst3++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (a) != "undefined") {_RecordType("<41,42,2>",(a)); Inst5++; } } catch(e) {}
  a = a | 0;
try { if (Inst4 <= 1000 && typeof (a) != "undefined") {_RecordType("<37,38,2>",(a)); Inst4++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (b) != "undefined") {_RecordType("<54,55,3>",(b)); Inst7++; } } catch(e) {}
  b = b | 0;
try { if (Inst6 <= 1000 && typeof (b) != "undefined") {_RecordType("<50,51,3>",(b)); Inst6++; } } catch(e) {}

  if (false) {
    return 1;
  } else {
try { if (Inst9 <= 1000 && typeof (a) != "undefined") {_RecordType("<110,111,8>",(a)); Inst9++; } } catch(e) {}
    a = a & 0xff00;
try { if (Inst8 <= 1000 && typeof (a) != "undefined") {_RecordType("<106,107,8>",(a)); Inst8++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (b) != "undefined") {_RecordType("<130,131,9>",(b)); Inst11++; } } catch(e) {}
    b = b & 0x00ff;
try { if (Inst10 <= 1000 && typeof (b) != "undefined") {_RecordType("<126,127,9>",(b)); Inst10++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (a) != "undefined") {_RecordType("<152,153,10>",(a)); Inst13++; } } catch(e) {}
    orA = a | 0xff00;
try { if (Inst12 <= 1000 && typeof (orA) != "undefined") {_RecordType("<146,149,10>",(orA)); Inst12++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (b) != "undefined") {_RecordType("<175,176,11>",(b)); Inst15++; } } catch(e) {}
    xorB = b ^ 0xff;
try { if (Inst14 <= 1000 && typeof (xorB) != "undefined") {_RecordType("<168,172,11>",(xorB)); Inst14++; } } catch(e) {}
  }

try { if (Inst16 <= 1000 && typeof (orA) != "undefined") {_RecordType("<199,202,14>",(orA)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (xorB) != "undefined") {_RecordType("<205,209,14>",(xorB)); Inst17++; } } catch(e) {}
  return orA | xorB;
};
try { if (Inst0 <= 1000 && typeof (foo) != "undefined") {_RecordType("<4,7,1>",(foo)); Inst0++; } } catch(e) {}

var argA = 0;
try { if (Inst18 <= 1000 && typeof (argA) != "undefined") {_RecordType("<219,223,17>",(argA)); Inst18++; } } catch(e) {}
var argB = 0x22;
try { if (Inst19 <= 1000 && typeof (argB) != "undefined") {_RecordType("<233,237,18>",(argB)); Inst19++; } } catch(e) {}
var result = 0;
try { if (Inst20 <= 1000 && typeof (result) != "undefined") {_RecordType("<250,256,19>",(result)); Inst20++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<262,270,20>",(noInline)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (foo) != "undefined") {_RecordType("<271,274,20>",(foo)); Inst22++; } } catch(e) {}
noInline(foo);

for (i = 0; i < 100000; i++) {
try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<283,284,22>",(i)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<290,291,22>",(i)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<302,303,22>",(i)); Inst25++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (result) != "undefined") {_RecordType("<320,326,23>",(result)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (foo) != "undefined") {_RecordType("<329,332,23>",(foo)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (argA) != "undefined") {_RecordType("<333,337,23>",(argA)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (argB) != "undefined") {_RecordType("<339,343,23>",(argB)); Inst30++; } } catch(e) {}
  result = result | foo(argA, argB, 4);
try { if (Inst26 <= 1000 && typeof (result) != "undefined") {_RecordType("<311,317,23>",(result)); Inst26++; } } catch(e) {}
}

try { if (Inst31 <= 1000 && typeof (result) != "undefined") {_RecordType("<356,362,26>",(result)); Inst31++; } } catch(e) {}
if (result != 0xffdd) {
try { if (Inst32 <= 1000 && typeof (Error) != "undefined") {_RecordType("<388,393,27>",(Error)); Inst32++; } } catch(e) {}
  throw new Error("Incorrect result!");
}

