var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (Foo) != "undefined") {_RecordType("<9,12,1>",(Foo)); Inst0++; } } catch(e) {}
function Foo() {
  ;
}

Foo.prototype.f = 42;
try { if (Inst1 <= 1000 && typeof (Foo.prototype.f) != "undefined") {_RecordType("<24,39,5>",(Foo.prototype.f)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Foo.prototype) != "undefined") {_RecordType("<24,37,5>",(Foo.prototype)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Foo) != "undefined") {_RecordType("<24,27,5>",(Foo)); Inst3++; } } catch(e) {}
Foo.prototype.g = 43;
try { if (Inst4 <= 1000 && typeof (Foo.prototype.g) != "undefined") {_RecordType("<46,61,6>",(Foo.prototype.g)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Foo.prototype) != "undefined") {_RecordType("<46,59,6>",(Foo.prototype)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Foo) != "undefined") {_RecordType("<46,49,6>",(Foo)); Inst6++; } } catch(e) {}
Foo.prototype.h = 44;
try { if (Inst7 <= 1000 && typeof (Foo.prototype.h) != "undefined") {_RecordType("<68,83,7>",(Foo.prototype.h)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Foo.prototype) != "undefined") {_RecordType("<68,81,7>",(Foo.prototype)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Foo) != "undefined") {_RecordType("<68,71,7>",(Foo)); Inst9++; } } catch(e) {}
Foo.prototype.i = 45;
try { if (Inst10 <= 1000 && typeof (Foo.prototype.i) != "undefined") {_RecordType("<90,105,8>",(Foo.prototype.i)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Foo.prototype) != "undefined") {_RecordType("<90,103,8>",(Foo.prototype)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Foo) != "undefined") {_RecordType("<90,93,8>",(Foo)); Inst12++; } } catch(e) {}
Foo.prototype.j = 46;
try { if (Inst13 <= 1000 && typeof (Foo.prototype.j) != "undefined") {_RecordType("<112,127,9>",(Foo.prototype.j)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Foo.prototype) != "undefined") {_RecordType("<112,125,9>",(Foo.prototype)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Foo) != "undefined") {_RecordType("<112,115,9>",(Foo)); Inst15++; } } catch(e) {}
Foo.prototype.k = 47;
try { if (Inst16 <= 1000 && typeof (Foo.prototype.k) != "undefined") {_RecordType("<134,149,10>",(Foo.prototype.k)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Foo.prototype) != "undefined") {_RecordType("<134,147,10>",(Foo.prototype)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Foo) != "undefined") {_RecordType("<134,137,10>",(Foo)); Inst18++; } } catch(e) {}

try { if (Inst19 <= 1000 && typeof (Bar) != "undefined") {_RecordType("<166,169,12>",(Bar)); Inst19++; } } catch(e) {}
function Bar() {
  ;
}

Bar.prototype.k = 23;
try { if (Inst20 <= 1000 && typeof (Bar.prototype.k) != "undefined") {_RecordType("<181,196,16>",(Bar.prototype.k)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Bar.prototype) != "undefined") {_RecordType("<181,194,16>",(Bar.prototype)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Bar) != "undefined") {_RecordType("<181,184,16>",(Bar)); Inst22++; } } catch(e) {}
Bar.prototype.f = 24;
try { if (Inst23 <= 1000 && typeof (Bar.prototype.f) != "undefined") {_RecordType("<203,218,17>",(Bar.prototype.f)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (Bar.prototype) != "undefined") {_RecordType("<203,216,17>",(Bar.prototype)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Bar) != "undefined") {_RecordType("<203,206,17>",(Bar)); Inst25++; } } catch(e) {}

try { if (Inst26 <= 1000 && typeof (foo) != "undefined") {_RecordType("<235,238,19>",(foo)); Inst26++; } } catch(e) {}
function foo(o) {
try { if (Inst27 <= 1000 && typeof (o) != "undefined") {_RecordType("<239,240,19>",(o)); Inst27++; } } catch(e) {}
try { if (Inst28 <= 1000 && typeof (o.f) != "undefined") {_RecordType("<253,256,20>",(o.f)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (o) != "undefined") {_RecordType("<253,254,20>",(o)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (o.k) != "undefined") {_RecordType("<259,262,20>",(o.k)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (o) != "undefined") {_RecordType("<259,260,20>",(o)); Inst31++; } } catch(e) {}
  return o.f + o.k;
}

try { if (Inst32 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<267,275,23>",(noInline)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (foo) != "undefined") {_RecordType("<276,279,23>",(foo)); Inst33++; } } catch(e) {}
noInline(foo);

for (var i = 0; i < 100; ++i) {
try { if (Inst34 <= 1000 && typeof (i) != "undefined") {_RecordType("<292,293,25>",(i)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (i) != "undefined") {_RecordType("<299,300,25>",(i)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (i) != "undefined") {_RecordType("<310,311,25>",(i)); Inst36++; } } catch(e) {}
try { if (Inst38 <= 1000 && typeof (foo) != "undefined") {_RecordType("<330,333,26>",(foo)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (Foo) != "undefined") {_RecordType("<338,341,26>",(Foo)); Inst39++; } } catch(e) {}
  var result = foo(new Foo());
try { if (Inst37 <= 1000 && typeof (result) != "undefined") {_RecordType("<321,327,26>",(result)); Inst37++; } } catch(e) {}

try { if (Inst40 <= 1000 && typeof (result) != "undefined") {_RecordType("<353,359,28>",(result)); Inst40++; } } catch(e) {}
  if (result != 89) {
try { if (Inst41 <= 1000 && typeof (result) != "undefined") {_RecordType("<411,417,29>",(result)); Inst41++; } } catch(e) {}
    throw "Error: bad result for Foo: " + result;
  }

try { if (Inst43 <= 1000 && typeof (foo) != "undefined") {_RecordType("<435,438,32>",(foo)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (Bar) != "undefined") {_RecordType("<443,446,32>",(Bar)); Inst44++; } } catch(e) {}
  result = foo(new Bar());
try { if (Inst42 <= 1000 && typeof (result) != "undefined") {_RecordType("<426,432,32>",(result)); Inst42++; } } catch(e) {}

try { if (Inst45 <= 1000 && typeof (result) != "undefined") {_RecordType("<458,464,34>",(result)); Inst45++; } } catch(e) {}
  if (result != 47) {
try { if (Inst46 <= 1000 && typeof (result) != "undefined") {_RecordType("<516,522,35>",(result)); Inst46++; } } catch(e) {}
    throw "Error: bad result for Bar: " + result;
  }
}

