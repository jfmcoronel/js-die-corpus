var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<9,17,1>",(shouldBe)); Inst0++; } } catch(e) {}
function shouldBe(actual, expected) {
try { if (Inst1 <= 1000 && typeof (actual) != "undefined") {_RecordType("<18,24,1>",(actual)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (expected) != "undefined") {_RecordType("<26,34,1>",(expected)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (actual) != "undefined") {_RecordType("<44,50,2>",(actual)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (expected) != "undefined") {_RecordType("<55,63,2>",(expected)); Inst4++; } } catch(e) {}
  if (actual !== expected) {
try { if (Inst5 <= 1000 && typeof (Error) != "undefined") {_RecordType("<81,86,3>",(Error)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (actual) != "undefined") {_RecordType("<103,109,3>",(actual)); Inst6++; } } catch(e) {}
    throw new Error('bad value: ' + actual);
  }
}

try { if (Inst7 <= 1000 && typeof (testing) != "undefined") {_RecordType("<128,135,7>",(testing)); Inst7++; } } catch(e) {}
function testing(object) {
try { if (Inst8 <= 1000 && typeof (object) != "undefined") {_RecordType("<136,142,7>",(object)); Inst8++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (object[1000]) != "undefined") {_RecordType("<160,172,8>",(object[1000])); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (object) != "undefined") {_RecordType("<160,166,8>",(object)); Inst11++; } } catch(e) {}
  var value = object[1000];
try { if (Inst9 <= 1000 && typeof (value) != "undefined") {_RecordType("<152,157,8>",(value)); Inst9++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<176,184,9>",(shouldBe)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (object[1000]) != "undefined") {_RecordType("<185,197,9>",(object[1000])); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (object) != "undefined") {_RecordType("<185,191,9>",(object)); Inst14++; } } catch(e) {}
  shouldBe(object[1000], 42);
}

try { if (Inst15 <= 1000 && typeof (testing) != "undefined") {_RecordType("<207,214,12>",(testing)); Inst15++; } } catch(e) {}
testing({
  0: 0,
  1: 1,
  1000: 42
});
var object = {
  0: 0,

  get 1000() {
    return 42;
  },

  1: 1
};
try { if (Inst16 <= 1000 && typeof (object) != "undefined") {_RecordType("<252,258,17>",(object)); Inst16++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (testing) != "undefined") {_RecordType("<318,325,26>",(testing)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (object) != "undefined") {_RecordType("<326,332,26>",(object)); Inst18++; } } catch(e) {}
testing(object);
try { if (Inst19 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<335,343,27>",(shouldBe)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (object[0]) != "undefined") {_RecordType("<344,353,27>",(object[0])); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (object) != "undefined") {_RecordType("<344,350,27>",(object)); Inst21++; } } catch(e) {}
shouldBe(object[0], 0);
try { if (Inst22 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<359,367,28>",(shouldBe)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (object[1]) != "undefined") {_RecordType("<368,377,28>",(object[1])); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (object) != "undefined") {_RecordType("<368,374,28>",(object)); Inst24++; } } catch(e) {}
shouldBe(object[1], 1);

