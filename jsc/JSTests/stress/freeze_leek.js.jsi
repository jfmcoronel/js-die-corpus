var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst1 <= 1000 && typeof (Object.freeze) != "undefined") {_RecordType("<8,21,1>",(Object.freeze)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Object) != "undefined") {_RecordType("<8,14,1>",(Object)); Inst2++; } } catch(e) {}
var o = Object.freeze([]),
    leak = {};
try { if (Inst0 <= 1000 && typeof (o) != "undefined") {_RecordType("<4,5,1>",(o)); Inst0++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (leak) != "undefined") {_RecordType("<31,35,2>",(leak)); Inst3++; } } catch(e) {}

try { if (Inst5 <= 1000 && typeof (ex) != "undefined") {_RecordType("<69,71,6>",(ex)); Inst5++; } } catch(e) {}
try {
try { if (Inst4 <= 1000 && typeof (o) != "undefined") {_RecordType("<57,58,5>",(o)); Inst4++; } } catch(e) {}
  throw o;
} catch (ex) {
  ;
}

try { if (Inst6 <= 1000 && typeof (o.stack) != "undefined") {_RecordType("<86,93,10>",(o.stack)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (o) != "undefined") {_RecordType("<86,87,10>",(o)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<98,107,10>",(undefined)); Inst8++; } } catch(e) {}
if (o.stack !== undefined) {
try { if (Inst9 <= 1000 && typeof (Error) != "undefined") {_RecordType("<123,128,11>",(Error)); Inst9++; } } catch(e) {}
  throw new Error("the stack was leaked.");
}

try { if (Inst12 <= 1000 && typeof (leak) != "undefined") {_RecordType("<168,172,14>",(leak)); Inst12++; } } catch(e) {}
o.stack = leak;
try { if (Inst10 <= 1000 && typeof (o.stack) != "undefined") {_RecordType("<158,165,14>",(o.stack)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (o) != "undefined") {_RecordType("<158,159,14>",(o)); Inst11++; } } catch(e) {}

try { if (Inst13 <= 1000 && typeof (o.stack) != "undefined") {_RecordType("<179,186,16>",(o.stack)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (o) != "undefined") {_RecordType("<179,180,16>",(o)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (leak) != "undefined") {_RecordType("<191,195,16>",(leak)); Inst15++; } } catch(e) {}
if (o.stack === leak) {
try { if (Inst16 <= 1000 && typeof (Error) != "undefined") {_RecordType("<211,216,17>",(Error)); Inst16++; } } catch(e) {}
  throw new Error("the object wasn't frozen.");
}

o.other = "wrong";
try { if (Inst17 <= 1000 && typeof (o.other) != "undefined") {_RecordType("<250,257,20>",(o.other)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (o) != "undefined") {_RecordType("<250,251,20>",(o)); Inst18++; } } catch(e) {}

try { if (Inst19 <= 1000 && typeof (o.other) != "undefined") {_RecordType("<274,281,22>",(o.other)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (o) != "undefined") {_RecordType("<274,275,22>",(o)); Inst20++; } } catch(e) {}
if (o.other === "wrong") {
try { if (Inst21 <= 1000 && typeof (Error) != "undefined") {_RecordType("<309,314,23>",(Error)); Inst21++; } } catch(e) {}
  throw new Error("the object wasn't frozen.");
}

try { if (Inst23 <= 1000 && typeof (Object.freeze) != "undefined") {_RecordType("<352,365,26>",(Object.freeze)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (Object) != "undefined") {_RecordType("<352,358,26>",(Object)); Inst24++; } } catch(e) {}
o = Object.freeze({
  "hi": "other"
});
try { if (Inst22 <= 1000 && typeof (o) != "undefined") {_RecordType("<348,349,26>",(o)); Inst22++; } } catch(e) {}

try { if (Inst26 <= 1000 && typeof (ex) != "undefined") {_RecordType("<415,417,32>",(ex)); Inst26++; } } catch(e) {}
try {
try { if (Inst25 <= 1000 && typeof (o) != "undefined") {_RecordType("<403,404,31>",(o)); Inst25++; } } catch(e) {}
  throw o;
} catch (ex) {
  ;
}

try { if (Inst29 <= 1000 && typeof (leak) != "undefined") {_RecordType("<438,442,36>",(leak)); Inst29++; } } catch(e) {}
o.stack = leak;
try { if (Inst27 <= 1000 && typeof (o.stack) != "undefined") {_RecordType("<428,435,36>",(o.stack)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (o) != "undefined") {_RecordType("<428,429,36>",(o)); Inst28++; } } catch(e) {}

try { if (Inst30 <= 1000 && typeof (o.stack) != "undefined") {_RecordType("<449,456,38>",(o.stack)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (o) != "undefined") {_RecordType("<449,450,38>",(o)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<461,470,38>",(undefined)); Inst32++; } } catch(e) {}
if (o.stack !== undefined) {
try { if (Inst33 <= 1000 && typeof (Error) != "undefined") {_RecordType("<486,491,39>",(Error)); Inst33++; } } catch(e) {}
  throw new Error("the stack was leaked.");
}

try { if (Inst36 <= 1000 && typeof (leak) != "undefined") {_RecordType("<531,535,42>",(leak)); Inst36++; } } catch(e) {}
o.stack = leak;
try { if (Inst34 <= 1000 && typeof (o.stack) != "undefined") {_RecordType("<521,528,42>",(o.stack)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (o) != "undefined") {_RecordType("<521,522,42>",(o)); Inst35++; } } catch(e) {}

try { if (Inst37 <= 1000 && typeof (o.stack) != "undefined") {_RecordType("<542,549,44>",(o.stack)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (o) != "undefined") {_RecordType("<542,543,44>",(o)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (leak) != "undefined") {_RecordType("<554,558,44>",(leak)); Inst39++; } } catch(e) {}
if (o.stack === leak) {
try { if (Inst40 <= 1000 && typeof (Error) != "undefined") {_RecordType("<574,579,45>",(Error)); Inst40++; } } catch(e) {}
  throw new Error("the object wasn't frozen.");
}

o.other = "wrong";
try { if (Inst41 <= 1000 && typeof (o.other) != "undefined") {_RecordType("<613,620,48>",(o.other)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (o) != "undefined") {_RecordType("<613,614,48>",(o)); Inst42++; } } catch(e) {}

try { if (Inst43 <= 1000 && typeof (o.other) != "undefined") {_RecordType("<637,644,50>",(o.other)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (o) != "undefined") {_RecordType("<637,638,50>",(o)); Inst44++; } } catch(e) {}
if (o.other === "wrong") {
try { if (Inst45 <= 1000 && typeof (Error) != "undefined") {_RecordType("<672,677,51>",(Error)); Inst45++; } } catch(e) {}
  throw new Error("the object wasn't frozen.");
}

