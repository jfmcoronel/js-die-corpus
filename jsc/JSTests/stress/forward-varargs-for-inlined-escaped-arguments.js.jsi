var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (foo) != "undefined") {_RecordType("<9,12,1>",(foo)); Inst0++; } } catch(e) {}
function foo() {
try { if (Inst1 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<26,35,2>",(arguments)); Inst1++; } } catch(e) {}
  return arguments;
}

try { if (Inst2 <= 1000 && typeof (baz) != "undefined") {_RecordType("<49,52,5>",(baz)); Inst2++; } } catch(e) {}
function baz(a, b, c) {
try { if (Inst3 <= 1000 && typeof (a) != "undefined") {_RecordType("<53,54,5>",(a)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (b) != "undefined") {_RecordType("<56,57,5>",(b)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (c) != "undefined") {_RecordType("<59,60,5>",(c)); Inst5++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (a) != "undefined") {_RecordType("<73,74,6>",(a)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (b) != "undefined") {_RecordType("<77,78,6>",(b)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (c) != "undefined") {_RecordType("<81,82,6>",(c)); Inst8++; } } catch(e) {}
  return a + b + c;
}

try { if (Inst9 <= 1000 && typeof (bar) != "undefined") {_RecordType("<96,99,9>",(bar)); Inst9++; } } catch(e) {}
function bar(a, b, c) {
try { if (Inst10 <= 1000 && typeof (a) != "undefined") {_RecordType("<100,101,9>",(a)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (b) != "undefined") {_RecordType("<103,104,9>",(b)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (c) != "undefined") {_RecordType("<106,107,9>",(c)); Inst12++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (foo) != "undefined") {_RecordType("<124,127,10>",(foo)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (b) != "undefined") {_RecordType("<128,129,10>",(b)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (c) != "undefined") {_RecordType("<131,132,10>",(c)); Inst16++; } } catch(e) {}
  var args = foo(b, c, 42);
try { if (Inst13 <= 1000 && typeof (args) != "undefined") {_RecordType("<117,121,10>",(args)); Inst13++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (baz.apply) != "undefined") {_RecordType("<148,157,11>",(baz.apply)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (baz) != "undefined") {_RecordType("<148,151,11>",(baz)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (args) != "undefined") {_RecordType("<166,170,11>",(args)); Inst19++; } } catch(e) {}
  return baz.apply(void 0, args);
}

try { if (Inst20 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<176,184,14>",(noInline)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (bar) != "undefined") {_RecordType("<185,188,14>",(bar)); Inst21++; } } catch(e) {}
noInline(bar);

for (var i = 0; i < 10000; ++i) {
try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<201,202,16>",(i)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<208,209,16>",(i)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<221,222,16>",(i)); Inst24++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (bar) != "undefined") {_RecordType("<241,244,17>",(bar)); Inst26++; } } catch(e) {}
  var result = bar(1, 2, 3);
try { if (Inst25 <= 1000 && typeof (result) != "undefined") {_RecordType("<232,238,17>",(result)); Inst25++; } } catch(e) {}

try { if (Inst27 <= 1000 && typeof (result) != "undefined") {_RecordType("<262,268,19>",(result)); Inst27++; } } catch(e) {}
  if (result != 47) {
try { if (Inst28 <= 1000 && typeof (result) != "undefined") {_RecordType("<312,318,20>",(result)); Inst28++; } } catch(e) {}
    throw "Error: bad result: " + result;
  }
}

