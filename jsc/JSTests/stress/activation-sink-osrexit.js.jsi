var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
var n = 10000000;
try { if (Inst0 <= 1000 && typeof (n) != "undefined") {_RecordType("<4,5,1>",(n)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (bar) != "undefined") {_RecordType("<28,31,3>",(bar)); Inst1++; } } catch(e) {}
function bar() {
  ;
}

try { if (Inst2 <= 1000 && typeof (foo) != "undefined") {_RecordType("<52,55,7>",(foo)); Inst2++; } } catch(e) {}
function foo(b) {
try { if (Inst3 <= 1000 && typeof (b) != "undefined") {_RecordType("<56,57,7>",(b)); Inst3++; } } catch(e) {}
  var result = 0;
try { if (Inst4 <= 1000 && typeof (result) != "undefined") {_RecordType("<67,73,8>",(result)); Inst4++; } } catch(e) {}

  var set = function (x) {
try { if (Inst6 <= 1000 && typeof (x) != "undefined") {_RecordType("<102,103,10>",(x)); Inst6++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (x) != "undefined") {_RecordType("<120,121,11>",(x)); Inst8++; } } catch(e) {}
    result = x;
try { if (Inst7 <= 1000 && typeof (result) != "undefined") {_RecordType("<111,117,11>",(result)); Inst7++; } } catch(e) {}
  };
try { if (Inst5 <= 1000 && typeof (set) != "undefined") {_RecordType("<86,89,10>",(set)); Inst5++; } } catch(e) {}

try { if (Inst9 <= 1000 && typeof (b) != "undefined") {_RecordType("<135,136,14>",(b)); Inst9++; } } catch(e) {}
  if (b) {
try { if (Inst10 <= 1000 && typeof (OSRExit) != "undefined") {_RecordType("<144,151,15>",(OSRExit)); Inst10++; } } catch(e) {}
    OSRExit();

try { if (Inst11 <= 1000 && typeof (b) != "undefined") {_RecordType("<164,165,17>",(b)); Inst11++; } } catch(e) {}
    if (b) {
try { if (Inst12 <= 1000 && typeof (bar) != "undefined") {_RecordType("<175,178,18>",(bar)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (set) != "undefined") {_RecordType("<179,182,18>",(set)); Inst13++; } } catch(e) {}
      bar(set);
    }

    return 0;
  }

try { if (Inst14 <= 1000 && typeof (result) != "undefined") {_RecordType("<220,226,24>",(result)); Inst14++; } } catch(e) {}
  return result;
}

try { if (Inst15 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<231,239,27>",(noInline)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (bar) != "undefined") {_RecordType("<240,243,27>",(bar)); Inst16++; } } catch(e) {}
noInline(bar);
try { if (Inst17 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<246,254,28>",(noInline)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (foo) != "undefined") {_RecordType("<255,258,28>",(foo)); Inst18++; } } catch(e) {}
noInline(foo);

for (var i = 0; i < n; i++) {
try { if (Inst19 <= 1000 && typeof (i) != "undefined") {_RecordType("<271,272,30>",(i)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<278,279,30>",(i)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (n) != "undefined") {_RecordType("<282,283,30>",(n)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<285,286,30>",(i)); Inst22++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (foo) != "undefined") {_RecordType("<307,310,31>",(foo)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<313,314,31>",(i)); Inst25++; } } catch(e) {}
  var result = foo(!(i % 100));
try { if (Inst23 <= 1000 && typeof (result) != "undefined") {_RecordType("<298,304,31>",(result)); Inst23++; } } catch(e) {}

try { if (Inst26 <= 1000 && typeof (result) != "undefined") {_RecordType("<331,337,33>",(result)); Inst26++; } } catch(e) {}
  if (result != 0) {
try { if (Inst27 <= 1000 && typeof (result) != "undefined") {_RecordType("<380,386,34>",(result)); Inst27++; } } catch(e) {}
    throw "Error: bad result: " + result;
  }
}

