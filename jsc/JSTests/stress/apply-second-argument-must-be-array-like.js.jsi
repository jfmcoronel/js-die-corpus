var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//@ runDefault
try { if (Inst0 <= 1000 && typeof (assert) != "undefined") {_RecordType("<24,30,2>",(assert)); Inst0++; } } catch(e) {}
function assert(x) {
try { if (Inst1 <= 1000 && typeof (x) != "undefined") {_RecordType("<31,32,2>",(x)); Inst1++; } } catch(e) {}
  ;
}

try { if (Inst2 <= 1000 && typeof (shouldThrow) != "undefined") {_RecordType("<52,63,6>",(shouldThrow)); Inst2++; } } catch(e) {}
function shouldThrow(expr) {
try { if (Inst3 <= 1000 && typeof (expr) != "undefined") {_RecordType("<64,68,6>",(expr)); Inst3++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (Function) != "undefined") {_RecordType("<93,101,7>",(Function)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (expr) != "undefined") {_RecordType("<102,106,7>",(expr)); Inst6++; } } catch(e) {}
  let testFunc = new Function(expr);
try { if (Inst4 <= 1000 && typeof (testFunc) != "undefined") {_RecordType("<78,86,7>",(testFunc)); Inst4++; } } catch(e) {}

  for (let i = 0; i < 10000; i++) {
try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<121,122,9>",(i)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<128,129,9>",(i)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<139,140,9>",(i)); Inst9++; } } catch(e) {}
    let error;
try { if (Inst10 <= 1000 && typeof (error) != "undefined") {_RecordType("<154,159,10>",(error)); Inst10++; } } catch(e) {}

try { if (Inst12 <= 1000 && typeof (e) != "undefined") {_RecordType("<203,204,14>",(e)); Inst12++; } } catch(e) {}
    try {
try { if (Inst11 <= 1000 && typeof (testFunc) != "undefined") {_RecordType("<178,186,13>",(testFunc)); Inst11++; } } catch(e) {}
      testFunc();
    } catch (e) {
      ;
    }
  }
}

try { if (Inst13 <= 1000 && typeof (shouldNotThrow) != "undefined") {_RecordType("<238,252,20>",(shouldNotThrow)); Inst13++; } } catch(e) {}
function shouldNotThrow(expr) {
try { if (Inst14 <= 1000 && typeof (expr) != "undefined") {_RecordType("<253,257,20>",(expr)); Inst14++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (Function) != "undefined") {_RecordType("<282,290,21>",(Function)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (expr) != "undefined") {_RecordType("<291,295,21>",(expr)); Inst17++; } } catch(e) {}
  let testFunc = new Function(expr);
try { if (Inst15 <= 1000 && typeof (testFunc) != "undefined") {_RecordType("<267,275,21>",(testFunc)); Inst15++; } } catch(e) {}

  for (let i = 0; i < 10000; i++) {
try { if (Inst18 <= 1000 && typeof (i) != "undefined") {_RecordType("<310,311,23>",(i)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (i) != "undefined") {_RecordType("<317,318,23>",(i)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<328,329,23>",(i)); Inst20++; } } catch(e) {}
    let error;
try { if (Inst21 <= 1000 && typeof (error) != "undefined") {_RecordType("<343,348,24>",(error)); Inst21++; } } catch(e) {}

try { if (Inst23 <= 1000 && typeof (e) != "undefined") {_RecordType("<392,393,28>",(e)); Inst23++; } } catch(e) {}
    try {
try { if (Inst22 <= 1000 && typeof (testFunc) != "undefined") {_RecordType("<367,375,27>",(testFunc)); Inst22++; } } catch(e) {}
      testFunc();
    } catch (e) {
      ;
    }
  }
}

try { if (Inst24 <= 1000 && typeof (foo) != "undefined") {_RecordType("<427,430,34>",(foo)); Inst24++; } } catch(e) {}
function foo() {
  ;
}

try { if (Inst25 <= 1000 && typeof (shouldThrow) != "undefined") {_RecordType("<442,453,38>",(shouldThrow)); Inst25++; } } catch(e) {}
shouldThrow("foo.apply(undefined, true)");
try { if (Inst26 <= 1000 && typeof (shouldThrow) != "undefined") {_RecordType("<485,496,39>",(shouldThrow)); Inst26++; } } catch(e) {}
shouldThrow("foo.apply(undefined, false)");
try { if (Inst27 <= 1000 && typeof (shouldThrow) != "undefined") {_RecordType("<529,540,40>",(shouldThrow)); Inst27++; } } catch(e) {}
shouldThrow("foo.apply(undefined, 100)");
try { if (Inst28 <= 1000 && typeof (shouldThrow) != "undefined") {_RecordType("<571,582,41>",(shouldThrow)); Inst28++; } } catch(e) {}
shouldThrow("foo.apply(undefined, 123456789.12345)");
try { if (Inst29 <= 1000 && typeof (shouldThrow) != "undefined") {_RecordType("<625,636,42>",(shouldThrow)); Inst29++; } } catch(e) {}
shouldThrow("foo.apply(undefined, 1.0/1.0)");
try { if (Inst30 <= 1000 && typeof (shouldThrow) != "undefined") {_RecordType("<671,682,43>",(shouldThrow)); Inst30++; } } catch(e) {}
shouldThrow("foo.apply(undefined, 1.0/0)");
try { if (Inst31 <= 1000 && typeof (shouldThrow) != "undefined") {_RecordType("<715,726,44>",(shouldThrow)); Inst31++; } } catch(e) {}
shouldThrow("foo.apply(undefined, 'hello')");
try { if (Inst32 <= 1000 && typeof (shouldThrow) != "undefined") {_RecordType("<761,772,45>",(shouldThrow)); Inst32++; } } catch(e) {}
shouldThrow("foo.apply(undefined, Symbol())");
try { if (Inst33 <= 1000 && typeof (shouldNotThrow) != "undefined") {_RecordType("<808,822,46>",(shouldNotThrow)); Inst33++; } } catch(e) {}
shouldNotThrow("foo.apply(undefined, undefined)");
try { if (Inst34 <= 1000 && typeof (shouldNotThrow) != "undefined") {_RecordType("<859,873,47>",(shouldNotThrow)); Inst34++; } } catch(e) {}
shouldNotThrow("foo.apply(undefined, null)");
try { if (Inst35 <= 1000 && typeof (shouldNotThrow) != "undefined") {_RecordType("<905,919,48>",(shouldNotThrow)); Inst35++; } } catch(e) {}
shouldNotThrow("foo.apply(undefined, {})");
try { if (Inst36 <= 1000 && typeof (shouldNotThrow) != "undefined") {_RecordType("<949,963,49>",(shouldNotThrow)); Inst36++; } } catch(e) {}
shouldNotThrow("foo.apply(undefined, [])");
try { if (Inst37 <= 1000 && typeof (shouldNotThrow) != "undefined") {_RecordType("<993,1007,50>",(shouldNotThrow)); Inst37++; } } catch(e) {}
shouldNotThrow("foo.apply(undefined, function(){})");

