var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (foo) != "undefined") {_RecordType("<9,12,1>",(foo)); Inst0++; } } catch(e) {}
function foo(o) {
try { if (Inst1 <= 1000 && typeof (o) != "undefined") {_RecordType("<13,14,1>",(o)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (o.f) != "undefined") {_RecordType("<27,30,2>",(o.f)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (o) != "undefined") {_RecordType("<27,28,2>",(o)); Inst3++; } } catch(e) {}
  return o.f + 1;
}

Number.prototype.f = 42;
try { if (Inst4 <= 1000 && typeof (Number.prototype.f) != "undefined") {_RecordType("<39,57,5>",(Number.prototype.f)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Number.prototype) != "undefined") {_RecordType("<39,55,5>",(Number.prototype)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Number) != "undefined") {_RecordType("<39,45,5>",(Number)); Inst6++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<64,72,6>",(noInline)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (foo) != "undefined") {_RecordType("<73,76,6>",(foo)); Inst8++; } } catch(e) {}
noInline(foo);

for (var i = 0; i < 100000; ++i) {
try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<89,90,8>",(i)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<96,97,8>",(i)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<110,111,8>",(i)); Inst11++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (foo) != "undefined") {_RecordType("<130,133,9>",(foo)); Inst13++; } } catch(e) {}
  var result = foo(23);
try { if (Inst12 <= 1000 && typeof (result) != "undefined") {_RecordType("<121,127,9>",(result)); Inst12++; } } catch(e) {}

try { if (Inst14 <= 1000 && typeof (result) != "undefined") {_RecordType("<146,152,11>",(result)); Inst14++; } } catch(e) {}
  if (result != 43) {
try { if (Inst15 <= 1000 && typeof (result) != "undefined") {_RecordType("<196,202,12>",(result)); Inst15++; } } catch(e) {}
    throw "Error: bad result: " + result;
  }

try { if (Inst17 <= 1000 && typeof (foo) != "undefined") {_RecordType("<220,223,15>",(foo)); Inst17++; } } catch(e) {}
  result = foo({
    f: 25
  });
try { if (Inst16 <= 1000 && typeof (result) != "undefined") {_RecordType("<211,217,15>",(result)); Inst16++; } } catch(e) {}

try { if (Inst18 <= 1000 && typeof (result) != "undefined") {_RecordType("<249,255,19>",(result)); Inst18++; } } catch(e) {}
  if (result != 26) {
try { if (Inst19 <= 1000 && typeof (result) != "undefined") {_RecordType("<299,305,20>",(result)); Inst19++; } } catch(e) {}
    throw "Error: bad result: " + result;
  }

try { if (Inst21 <= 1000 && typeof (foo) != "undefined") {_RecordType("<323,326,23>",(foo)); Inst21++; } } catch(e) {}
  result = foo({
    g: 12,
    f: 13
  });
try { if (Inst20 <= 1000 && typeof (result) != "undefined") {_RecordType("<314,320,23>",(result)); Inst20++; } } catch(e) {}

try { if (Inst22 <= 1000 && typeof (result) != "undefined") {_RecordType("<363,369,28>",(result)); Inst22++; } } catch(e) {}
  if (result != 14) {
try { if (Inst23 <= 1000 && typeof (result) != "undefined") {_RecordType("<413,419,29>",(result)); Inst23++; } } catch(e) {}
    throw "Error: bad result: " + result;
  }
}

var didThrow;
try { if (Inst24 <= 1000 && typeof (didThrow) != "undefined") {_RecordType("<432,440,33>",(didThrow)); Inst24++; } } catch(e) {}

try { if (Inst26 <= 1000 && typeof (e) != "undefined") {_RecordType("<473,474,37>",(e)); Inst26++; } } catch(e) {}
try {
try { if (Inst25 <= 1000 && typeof (foo) != "undefined") {_RecordType("<451,454,36>",(foo)); Inst25++; } } catch(e) {}
  foo(void 0);
} catch (e) {
try { if (Inst28 <= 1000 && typeof (e) != "undefined") {_RecordType("<491,492,38>",(e)); Inst28++; } } catch(e) {}
  didThrow = e;
try { if (Inst27 <= 1000 && typeof (didThrow) != "undefined") {_RecordType("<480,488,38>",(didThrow)); Inst27++; } } catch(e) {}
}

try { if (Inst29 <= 1000 && typeof (didThrow) != "undefined") {_RecordType("<502,510,41>",(didThrow)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (didThrow.toString().indexOf) != "undefined") {_RecordType("<514,541,41>",(didThrow.toString().indexOf)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (didThrow.toString) != "undefined") {_RecordType("<514,531,41>",(didThrow.toString)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (didThrow) != "undefined") {_RecordType("<514,522,41>",(didThrow)); Inst32++; } } catch(e) {}
if (!didThrow || didThrow.toString().indexOf("TypeError:") != 0) {
try { if (Inst33 <= 1000 && typeof (didThrow) != "undefined") {_RecordType("<623,631,42>",(didThrow)); Inst33++; } } catch(e) {}
  throw "Error: didn't throw or threw wrong exception: " + didThrow;
}

