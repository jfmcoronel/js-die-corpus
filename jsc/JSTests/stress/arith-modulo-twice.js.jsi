var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (opaqueModuloSmaller) != "undefined") {_RecordType("<9,28,1>",(opaqueModuloSmaller)); Inst0++; } } catch(e) {}
function opaqueModuloSmaller(a) {
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<29,30,1>",(a)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (a) != "undefined") {_RecordType("<43,44,2>",(a)); Inst2++; } } catch(e) {}
  return a % 5 % 13;
}

try { if (Inst3 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<58,66,5>",(noInline)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (opaqueModuloSmaller) != "undefined") {_RecordType("<67,86,5>",(opaqueModuloSmaller)); Inst4++; } } catch(e) {}
noInline(opaqueModuloSmaller);

try { if (Inst5 <= 1000 && typeof (opaqueModuloEqual) != "undefined") {_RecordType("<99,116,7>",(opaqueModuloEqual)); Inst5++; } } catch(e) {}
function opaqueModuloEqual(a) {
try { if (Inst6 <= 1000 && typeof (a) != "undefined") {_RecordType("<117,118,7>",(a)); Inst6++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (a) != "undefined") {_RecordType("<131,132,8>",(a)); Inst7++; } } catch(e) {}
  return a % 5 % 5;
}

try { if (Inst8 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<145,153,11>",(noInline)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (opaqueModuloEqual) != "undefined") {_RecordType("<154,171,11>",(opaqueModuloEqual)); Inst9++; } } catch(e) {}
noInline(opaqueModuloEqual);

try { if (Inst10 <= 1000 && typeof (opaqueModuloLarger) != "undefined") {_RecordType("<184,202,13>",(opaqueModuloLarger)); Inst10++; } } catch(e) {}
function opaqueModuloLarger(a) {
try { if (Inst11 <= 1000 && typeof (a) != "undefined") {_RecordType("<203,204,13>",(a)); Inst11++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (a) != "undefined") {_RecordType("<217,218,14>",(a)); Inst12++; } } catch(e) {}
  return a % 13 % 5;
}

try { if (Inst13 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<232,240,17>",(noInline)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (opaqueModuloLarger) != "undefined") {_RecordType("<241,259,17>",(opaqueModuloLarger)); Inst14++; } } catch(e) {}
noInline(opaqueModuloLarger);

try { if (Inst15 <= 1000 && typeof (opaqueModuloSmallerNeg) != "undefined") {_RecordType("<272,294,19>",(opaqueModuloSmallerNeg)); Inst15++; } } catch(e) {}
function opaqueModuloSmallerNeg(a) {
try { if (Inst16 <= 1000 && typeof (a) != "undefined") {_RecordType("<295,296,19>",(a)); Inst16++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (a) != "undefined") {_RecordType("<309,310,20>",(a)); Inst17++; } } catch(e) {}
  return a % -5 % -13;
}

try { if (Inst18 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<326,334,23>",(noInline)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (opaqueModuloSmallerNeg) != "undefined") {_RecordType("<335,357,23>",(opaqueModuloSmallerNeg)); Inst19++; } } catch(e) {}
noInline(opaqueModuloSmallerNeg);

try { if (Inst20 <= 1000 && typeof (opaqueModuloEqualNeg) != "undefined") {_RecordType("<370,390,25>",(opaqueModuloEqualNeg)); Inst20++; } } catch(e) {}
function opaqueModuloEqualNeg(a) {
try { if (Inst21 <= 1000 && typeof (a) != "undefined") {_RecordType("<391,392,25>",(a)); Inst21++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (a) != "undefined") {_RecordType("<405,406,26>",(a)); Inst22++; } } catch(e) {}
  return a % 5 % -5;
}

try { if (Inst23 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<420,428,29>",(noInline)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (opaqueModuloEqualNeg) != "undefined") {_RecordType("<429,449,29>",(opaqueModuloEqualNeg)); Inst24++; } } catch(e) {}
noInline(opaqueModuloEqualNeg);

try { if (Inst25 <= 1000 && typeof (opaqueModuloLargerNeg) != "undefined") {_RecordType("<462,483,31>",(opaqueModuloLargerNeg)); Inst25++; } } catch(e) {}
function opaqueModuloLargerNeg(a) {
try { if (Inst26 <= 1000 && typeof (a) != "undefined") {_RecordType("<484,485,31>",(a)); Inst26++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (a) != "undefined") {_RecordType("<498,499,32>",(a)); Inst27++; } } catch(e) {}
  return a % -13 % 5;
}

try { if (Inst28 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<514,522,35>",(noInline)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (opaqueModuloLargerNeg) != "undefined") {_RecordType("<523,544,35>",(opaqueModuloLargerNeg)); Inst29++; } } catch(e) {}
noInline(opaqueModuloLargerNeg);
try { if (Inst31 <= 1000 && typeof (opaqueModuloSmaller) != "undefined") {_RecordType("<573,592,36>",(opaqueModuloSmaller)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (opaqueModuloEqual) != "undefined") {_RecordType("<594,611,36>",(opaqueModuloEqual)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (opaqueModuloSmallerNeg) != "undefined") {_RecordType("<613,635,36>",(opaqueModuloSmallerNeg)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (opaqueModuloEqualNeg) != "undefined") {_RecordType("<637,657,36>",(opaqueModuloEqualNeg)); Inst34++; } } catch(e) {}
let testReducibleCases = [opaqueModuloSmaller, opaqueModuloEqual, opaqueModuloSmallerNeg, opaqueModuloEqualNeg];
try { if (Inst30 <= 1000 && typeof (testReducibleCases) != "undefined") {_RecordType("<551,569,36>",(testReducibleCases)); Inst30++; } } catch(e) {}
try { if (Inst36 <= 1000 && typeof (opaqueModuloLarger) != "undefined") {_RecordType("<682,700,37>",(opaqueModuloLarger)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (opaqueModuloLargerNeg) != "undefined") {_RecordType("<702,723,37>",(opaqueModuloLargerNeg)); Inst37++; } } catch(e) {}
let testOtherCases = [opaqueModuloLarger, opaqueModuloLargerNeg];
try { if (Inst35 <= 1000 && typeof (testOtherCases) != "undefined") {_RecordType("<664,678,37>",(testOtherCases)); Inst35++; } } catch(e) {}

try { if (Inst38 <= 1000 && typeof (opaqueExpectedOther) != "undefined") {_RecordType("<736,755,39>",(opaqueExpectedOther)); Inst38++; } } catch(e) {}
function opaqueExpectedOther(doubleInput) {
try { if (Inst39 <= 1000 && typeof (doubleInput) != "undefined") {_RecordType("<756,767,39>",(doubleInput)); Inst39++; } } catch(e) {}
try { if (Inst40 <= 1000 && typeof (doubleInput) != "undefined") {_RecordType("<781,792,40>",(doubleInput)); Inst40++; } } catch(e) {}
  return (doubleInput - 2147483648) % 13.0 % 5.0;
}

try { if (Inst41 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<824,832,43>",(noInline)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (opaqueExpectedOther) != "undefined") {_RecordType("<833,852,43>",(opaqueExpectedOther)); Inst42++; } } catch(e) {}
noInline(opaqueExpectedOther);
try { if (Inst43 <= 1000 && typeof (noDFG) != "undefined") {_RecordType("<855,860,44>",(noDFG)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (opaqueExpectedOther) != "undefined") {_RecordType("<861,880,44>",(opaqueExpectedOther)); Inst44++; } } catch(e) {}
noDFG(opaqueExpectedOther); // Warm up with integers. The test for NegZero should not be eliminated here.

for (let i = 1; i < 1e4; ++i) {
try { if (Inst45 <= 1000 && typeof (i) != "undefined") {_RecordType("<971,972,46>",(i)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (i) != "undefined") {_RecordType("<978,979,46>",(i)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (i) != "undefined") {_RecordType("<989,990,46>",(i)); Inst47++; } } catch(e) {}
try { if (Inst49 <= 1000 && typeof (i) != "undefined") {_RecordType("<1019,1020,47>",(i)); Inst49++; } } catch(e) {}
  let excpectedReduced = i % 5;
try { if (Inst48 <= 1000 && typeof (excpectedReduced) != "undefined") {_RecordType("<1000,1016,47>",(excpectedReduced)); Inst48++; } } catch(e) {}

  for (let testFunction of testReducibleCases) {
try { if (Inst50 <= 1000 && typeof (testFunction) != "undefined") {_RecordType("<1038,1050,49>",(testFunction)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (testReducibleCases) != "undefined") {_RecordType("<1054,1072,49>",(testReducibleCases)); Inst51++; } } catch(e) {}
try { if (Inst53 <= 1000 && typeof (testFunction) != "undefined") {_RecordType("<1093,1105,50>",(testFunction)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (i) != "undefined") {_RecordType("<1106,1107,50>",(i)); Inst54++; } } catch(e) {}
    let result = testFunction(i);
try { if (Inst52 <= 1000 && typeof (result) != "undefined") {_RecordType("<1084,1090,50>",(result)); Inst52++; } } catch(e) {}

try { if (Inst55 <= 1000 && typeof (result) != "undefined") {_RecordType("<1119,1125,52>",(result)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (excpectedReduced) != "undefined") {_RecordType("<1130,1146,52>",(excpectedReduced)); Inst56++; } } catch(e) {}
    if (result !== excpectedReduced) {
try { if (Inst57 <= 1000 && typeof (testFunction.name) != "undefined") {_RecordType("<1167,1184,53>",(testFunction.name)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (testFunction) != "undefined") {_RecordType("<1167,1179,53>",(testFunction)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (result) != "undefined") {_RecordType("<1207,1213,53>",(result)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (i) != "undefined") {_RecordType("<1229,1230,53>",(i)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (expectedOther) != "undefined") {_RecordType("<1248,1261,53>",(expectedOther)); Inst61++; } } catch(e) {}
      throw "" + testFunction.name + "(i), returned: " + result + " at i = " + i + " expected " + expectedOther;
    }
  }

try { if (Inst63 <= 1000 && typeof (opaqueExpectedOther) != "undefined") {_RecordType("<1296,1315,57>",(opaqueExpectedOther)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (i) != "undefined") {_RecordType("<1316,1317,57>",(i)); Inst64++; } } catch(e) {}
  let expectedOther = opaqueExpectedOther(i + 2147483648);
try { if (Inst62 <= 1000 && typeof (expectedOther) != "undefined") {_RecordType("<1280,1293,57>",(expectedOther)); Inst62++; } } catch(e) {}

  for (let testFunction of testOtherCases) {
try { if (Inst65 <= 1000 && typeof (testFunction) != "undefined") {_RecordType("<1345,1357,59>",(testFunction)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (testOtherCases) != "undefined") {_RecordType("<1361,1375,59>",(testOtherCases)); Inst66++; } } catch(e) {}
try { if (Inst68 <= 1000 && typeof (testFunction) != "undefined") {_RecordType("<1396,1408,60>",(testFunction)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (i) != "undefined") {_RecordType("<1409,1410,60>",(i)); Inst69++; } } catch(e) {}
    let result = testFunction(i);
try { if (Inst67 <= 1000 && typeof (result) != "undefined") {_RecordType("<1387,1393,60>",(result)); Inst67++; } } catch(e) {}

try { if (Inst70 <= 1000 && typeof (result) != "undefined") {_RecordType("<1422,1428,62>",(result)); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (expectedOther) != "undefined") {_RecordType("<1433,1446,62>",(expectedOther)); Inst71++; } } catch(e) {}
    if (result !== expectedOther) {
try { if (Inst72 <= 1000 && typeof (testFunction.name) != "undefined") {_RecordType("<1467,1484,63>",(testFunction.name)); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (testFunction) != "undefined") {_RecordType("<1467,1479,63>",(testFunction)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (result) != "undefined") {_RecordType("<1507,1513,63>",(result)); Inst74++; } } catch(e) {}try { if (Inst75 <= 1000 && typeof (i) != "undefined") {_RecordType("<1529,1530,63>",(i)); Inst75++; } } catch(e) {}try { if (Inst76 <= 1000 && typeof (expectedOther) != "undefined") {_RecordType("<1548,1561,63>",(expectedOther)); Inst76++; } } catch(e) {}
      throw "" + testFunction.name + "(i), returned: " + result + " at i = " + i + " expected " + expectedOther;
    }
  }
}

