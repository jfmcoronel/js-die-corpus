var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<9,17,1>",(shouldBe)); Inst0++; } } catch(e) {}
function shouldBe(expected, actual, msg) {
try { if (Inst1 <= 1000 && typeof (expected) != "undefined") {_RecordType("<18,26,1>",(expected)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (actual) != "undefined") {_RecordType("<28,34,1>",(actual)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (msg) != "undefined") {_RecordType("<36,39,1>",(msg)); Inst3++; } } catch(e) {}
  ;
}

try { if (Inst4 <= 1000 && typeof (shouldBeAsync) != "undefined") {_RecordType("<59,72,5>",(shouldBeAsync)); Inst4++; } } catch(e) {}
function shouldBeAsync(expected, run, msg) {
try { if (Inst5 <= 1000 && typeof (expected) != "undefined") {_RecordType("<73,81,5>",(expected)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (run) != "undefined") {_RecordType("<83,86,5>",(run)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (msg) != "undefined") {_RecordType("<88,91,5>",(msg)); Inst7++; } } catch(e) {}
  let actual;
try { if (Inst8 <= 1000 && typeof (actual) != "undefined") {_RecordType("<101,107,6>",(actual)); Inst8++; } } catch(e) {}
  var hadError = false;
try { if (Inst9 <= 1000 && typeof (hadError) != "undefined") {_RecordType("<115,123,7>",(hadError)); Inst9++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (run().then) != "undefined") {_RecordType("<135,145,8>",(run().then)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (run) != "undefined") {_RecordType("<135,138,8>",(run)); Inst11++; } } catch(e) {}
  run().then(function (value) {
try { if (Inst12 <= 1000 && typeof (value) != "undefined") {_RecordType("<156,161,8>",(value)); Inst12++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (value) != "undefined") {_RecordType("<178,183,9>",(value)); Inst14++; } } catch(e) {}
    actual = value;
try { if (Inst13 <= 1000 && typeof (actual) != "undefined") {_RecordType("<169,175,9>",(actual)); Inst13++; } } catch(e) {}
  }, function (error) {
try { if (Inst15 <= 1000 && typeof (error) != "undefined") {_RecordType("<200,205,10>",(error)); Inst15++; } } catch(e) {}
    hadError = true;
try { if (Inst16 <= 1000 && typeof (hadError) != "undefined") {_RecordType("<213,221,11>",(hadError)); Inst16++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (error) != "undefined") {_RecordType("<243,248,12>",(error)); Inst18++; } } catch(e) {}
    actual = error;
try { if (Inst17 <= 1000 && typeof (actual) != "undefined") {_RecordType("<234,240,12>",(actual)); Inst17++; } } catch(e) {}
  });
try { if (Inst19 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<258,266,14>",(shouldBe)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (expected) != "undefined") {_RecordType("<267,275,14>",(expected)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (actual) != "undefined") {_RecordType("<277,283,14>",(actual)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (msg) != "undefined") {_RecordType("<285,288,14>",(msg)); Inst22++; } } catch(e) {}
  shouldBe(expected, actual, msg);
}

try { if (Inst23 <= 1000 && typeof (shouldThrowAsync) != "undefined") {_RecordType("<303,319,17>",(shouldThrowAsync)); Inst23++; } } catch(e) {}
function shouldThrowAsync(run, errorType, message) {
try { if (Inst24 <= 1000 && typeof (run) != "undefined") {_RecordType("<320,323,17>",(run)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (errorType) != "undefined") {_RecordType("<325,334,17>",(errorType)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (message) != "undefined") {_RecordType("<336,343,17>",(message)); Inst26++; } } catch(e) {}
  let actual;
try { if (Inst27 <= 1000 && typeof (actual) != "undefined") {_RecordType("<353,359,18>",(actual)); Inst27++; } } catch(e) {}
  var hadError = false;
try { if (Inst28 <= 1000 && typeof (hadError) != "undefined") {_RecordType("<367,375,19>",(hadError)); Inst28++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (run().then) != "undefined") {_RecordType("<387,397,20>",(run().then)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (run) != "undefined") {_RecordType("<387,390,20>",(run)); Inst30++; } } catch(e) {}
  run().then(function (value) {
try { if (Inst31 <= 1000 && typeof (value) != "undefined") {_RecordType("<408,413,20>",(value)); Inst31++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (value) != "undefined") {_RecordType("<430,435,21>",(value)); Inst33++; } } catch(e) {}
    actual = value;
try { if (Inst32 <= 1000 && typeof (actual) != "undefined") {_RecordType("<421,427,21>",(actual)); Inst32++; } } catch(e) {}
  }, function (error) {
try { if (Inst34 <= 1000 && typeof (error) != "undefined") {_RecordType("<452,457,22>",(error)); Inst34++; } } catch(e) {}
    hadError = true;
try { if (Inst35 <= 1000 && typeof (hadError) != "undefined") {_RecordType("<465,473,23>",(hadError)); Inst35++; } } catch(e) {}
try { if (Inst37 <= 1000 && typeof (error) != "undefined") {_RecordType("<495,500,24>",(error)); Inst37++; } } catch(e) {}
    actual = error;
try { if (Inst36 <= 1000 && typeof (actual) != "undefined") {_RecordType("<486,492,24>",(actual)); Inst36++; } } catch(e) {}
  });
}

try { if (Inst39 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<556,565,28>",(arguments)); Inst39++; } } catch(e) {}
var noArgumentsArrow = async () => await [...arguments];
try { if (Inst38 <= 1000 && typeof (noArgumentsArrow) != "undefined") {_RecordType("<515,531,28>",(noArgumentsArrow)); Inst38++; } } catch(e) {}

try { if (Inst40 <= 1000 && typeof (shouldThrowAsync) != "undefined") {_RecordType("<569,585,30>",(shouldThrowAsync)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (noArgumentsArrow) != "undefined") {_RecordType("<592,608,30>",(noArgumentsArrow)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (ReferenceError) != "undefined") {_RecordType("<619,633,30>",(ReferenceError)); Inst42++; } } catch(e) {}
shouldThrowAsync(() => noArgumentsArrow(1, 2, 3), ReferenceError);

var noArgumentsArrow2 = async () => {
try { if (Inst44 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<694,703,33>",(arguments)); Inst44++; } } catch(e) {}
  return await [...arguments];
};
try { if (Inst43 <= 1000 && typeof (noArgumentsArrow2) != "undefined") {_RecordType("<641,658,32>",(noArgumentsArrow2)); Inst43++; } } catch(e) {}

try { if (Inst45 <= 1000 && typeof (shouldThrowAsync) != "undefined") {_RecordType("<710,726,36>",(shouldThrowAsync)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (noArgumentsArrow2) != "undefined") {_RecordType("<733,750,36>",(noArgumentsArrow2)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (ReferenceError) != "undefined") {_RecordType("<761,775,36>",(ReferenceError)); Inst47++; } } catch(e) {}
shouldThrowAsync(() => noArgumentsArrow2(1, 2, 3), ReferenceError);
try { if (Inst48 <= 1000 && typeof (shouldBeAsync) != "undefined") {_RecordType("<778,791,37>",(shouldBeAsync)); Inst48++; } } catch(e) {}
shouldBeAsync("[1,2,3]", () => function () {
try { if (Inst49 <= 1000 && typeof (JSON.stringify) != "undefined") {_RecordType("<845,859,38>",(JSON.stringify)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<845,849,38>",(JSON)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<864,873,38>",(arguments)); Inst51++; } } catch(e) {}
  return (async () => JSON.stringify([...arguments]))();
}(1, 2, 3));
try { if (Inst52 <= 1000 && typeof (shouldBeAsync) != "undefined") {_RecordType("<893,906,40>",(shouldBeAsync)); Inst52++; } } catch(e) {}
shouldBeAsync("[4,5,6]", () => function () {
  return (async () => {
try { if (Inst53 <= 1000 && typeof (JSON.stringify) != "undefined") {_RecordType("<973,987,42>",(JSON.stringify)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<973,977,42>",(JSON)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<999,1008,42>",(arguments)); Inst55++; } } catch(e) {}
    return JSON.stringify([...(await arguments)]);
  })();
}(4, 5, 6));

try { if (Inst56 <= 1000 && typeof (testArgumentsBinding) != "undefined") {_RecordType("<1045,1065,46>",(testArgumentsBinding)); Inst56++; } } catch(e) {}
(function testArgumentsBinding() {
  var argsBinding;
try { if (Inst57 <= 1000 && typeof (argsBinding) != "undefined") {_RecordType("<1076,1087,47>",(argsBinding)); Inst57++; } } catch(e) {}

  var promise = function () {
try { if (Inst60 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<1138,1147,50>",(arguments)); Inst60++; } } catch(e) {}
    argsBinding = arguments;
try { if (Inst59 <= 1000 && typeof (argsBinding) != "undefined") {_RecordType("<1124,1135,50>",(argsBinding)); Inst59++; } } catch(e) {}
try { if (Inst61 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<1173,1182,51>",(arguments)); Inst61++; } } catch(e) {}
    return (async () => arguments)();
  }(1, 2, 3);
try { if (Inst58 <= 1000 && typeof (promise) != "undefined") {_RecordType("<1096,1103,49>",(promise)); Inst58++; } } catch(e) {}

try { if (Inst62 <= 1000 && typeof (shouldBeAsync) != "undefined") {_RecordType("<1204,1217,54>",(shouldBeAsync)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (argsBinding) != "undefined") {_RecordType("<1218,1229,54>",(argsBinding)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (promise) != "undefined") {_RecordType("<1237,1244,54>",(promise)); Inst64++; } } catch(e) {}
  shouldBeAsync(argsBinding, () => promise);
})();

