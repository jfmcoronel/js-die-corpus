var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<9,17,1>",(shouldBe)); Inst0++; } } catch(e) {}
function shouldBe(actual, expected) {
try { if (Inst1 <= 1000 && typeof (actual) != "undefined") {_RecordType("<18,24,1>",(actual)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (expected) != "undefined") {_RecordType("<26,34,1>",(expected)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (actual) != "undefined") {_RecordType("<44,50,2>",(actual)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (expected) != "undefined") {_RecordType("<55,63,2>",(expected)); Inst4++; } } catch(e) {}
  if (actual !== expected) {
try { if (Inst5 <= 1000 && typeof (Error) != "undefined") {_RecordType("<81,86,3>",(Error)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (actual) != "undefined") {_RecordType("<103,109,3>",(actual)); Inst6++; } } catch(e) {}
    throw new Error('bad value: ' + actual);
  }
}

try { if (Inst7 <= 1000 && typeof (testing) != "undefined") {_RecordType("<128,135,7>",(testing)); Inst7++; } } catch(e) {}
function testing(object) {
try { if (Inst8 <= 1000 && typeof (object) != "undefined") {_RecordType("<136,142,7>",(object)); Inst8++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<148,156,8>",(shouldBe)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (object[0]) != "undefined") {_RecordType("<157,166,8>",(object[0])); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (object) != "undefined") {_RecordType("<157,163,8>",(object)); Inst11++; } } catch(e) {}
  shouldBe(object[0], 0);
try { if (Inst12 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<174,182,9>",(shouldBe)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (object[1]) != "undefined") {_RecordType("<183,192,9>",(object[1])); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (object) != "undefined") {_RecordType("<183,189,9>",(object)); Inst14++; } } catch(e) {}
  shouldBe(object[1], 1);
try { if (Inst15 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<200,208,10>",(shouldBe)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (object[2]) != "undefined") {_RecordType("<209,218,10>",(object[2])); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (object) != "undefined") {_RecordType("<209,215,10>",(object)); Inst17++; } } catch(e) {}
  shouldBe(object[2], "String");
}

try { if (Inst18 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<234,242,13>",(noInline)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (testing) != "undefined") {_RecordType("<243,250,13>",(testing)); Inst19++; } } catch(e) {}
noInline(testing);

try { if (Inst20 <= 1000 && typeof (testing2) != "undefined") {_RecordType("<263,271,15>",(testing2)); Inst20++; } } catch(e) {}
function testing2(object) {
try { if (Inst21 <= 1000 && typeof (object) != "undefined") {_RecordType("<272,278,15>",(object)); Inst21++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<284,292,16>",(shouldBe)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (object[0]) != "undefined") {_RecordType("<293,302,16>",(object[0])); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (object) != "undefined") {_RecordType("<293,299,16>",(object)); Inst24++; } } catch(e) {}
  shouldBe(object[0], 0);
try { if (Inst25 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<310,318,17>",(shouldBe)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (object[1]) != "undefined") {_RecordType("<319,328,17>",(object[1])); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (object) != "undefined") {_RecordType("<319,325,17>",(object)); Inst27++; } } catch(e) {}
  shouldBe(object[1], 1);
try { if (Inst28 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<336,344,18>",(shouldBe)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (object[2]) != "undefined") {_RecordType("<345,354,18>",(object[2])); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (object) != "undefined") {_RecordType("<345,351,18>",(object)); Inst30++; } } catch(e) {}
  shouldBe(object[2], "String");
}

try { if (Inst31 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<370,378,21>",(noInline)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (testing2) != "undefined") {_RecordType("<379,387,21>",(testing2)); Inst32++; } } catch(e) {}
noInline(testing2);

for (var i = 0; i < 10000; ++i) {
try { if (Inst33 <= 1000 && typeof (i) != "undefined") {_RecordType("<400,401,23>",(i)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (i) != "undefined") {_RecordType("<407,408,23>",(i)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (i) != "undefined") {_RecordType("<420,421,23>",(i)); Inst35++; } } catch(e) {}
try { if (Inst36 <= 1000 && typeof (testing) != "undefined") {_RecordType("<427,434,24>",(testing)); Inst36++; } } catch(e) {}
  testing({
    0: 0,
    1: 1,
    2: "String"
  });
}

try { if (Inst37 <= 1000 && typeof (testing) != "undefined") {_RecordType("<482,489,31>",(testing)); Inst37++; } } catch(e) {}
testing({
  0: 0,

  get 1() {
    return 1;
  },

  2: "String"
});

for (var i = 0; i < 10000; ++i) {
try { if (Inst38 <= 1000 && typeof (i) != "undefined") {_RecordType("<561,562,41>",(i)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (i) != "undefined") {_RecordType("<568,569,41>",(i)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (i) != "undefined") {_RecordType("<581,582,41>",(i)); Inst40++; } } catch(e) {}
try { if (Inst41 <= 1000 && typeof (testing2) != "undefined") {_RecordType("<588,596,42>",(testing2)); Inst41++; } } catch(e) {}
  testing2({
    0: 0,

    get 1() {
      return 1;
    },

    2: "String"
  });
}
/* vim: set sw=4 ts=4 et tw=80 : */

