var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
"use strict";

try { if (Inst0 <= 1000 && typeof (assert) != "undefined") {_RecordType("<24,30,3>",(assert)); Inst0++; } } catch(e) {}
function assert(b, m = "") {
try { if (Inst1 <= 1000 && typeof (b) != "undefined") {_RecordType("<31,32,3>",(b)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (m) != "undefined") {_RecordType("<34,35,3>",(m)); Inst2++; } } catch(e) {}
  ;
}

try { if (Inst3 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<51,59,7>",(noInline)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (assert) != "undefined") {_RecordType("<60,66,7>",(assert)); Inst4++; } } catch(e) {}
noInline(assert);

try { if (Inst5 <= 1000 && typeof (test) != "undefined") {_RecordType("<79,83,9>",(test)); Inst5++; } } catch(e) {}
function test() {
try { if (Inst6 <= 1000 && typeof (baz) != "undefined") {_RecordType("<99,102,10>",(baz)); Inst6++; } } catch(e) {}
  function baz(...args) {
try { if (Inst7 <= 1000 && typeof (args) != "undefined") {_RecordType("<106,110,10>",(args)); Inst7++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (args) != "undefined") {_RecordType("<125,129,11>",(args)); Inst8++; } } catch(e) {}
    return args;
  }

try { if (Inst9 <= 1000 && typeof (bar) != "undefined") {_RecordType("<147,150,14>",(bar)); Inst9++; } } catch(e) {}
  function bar(...args) {
try { if (Inst10 <= 1000 && typeof (args) != "undefined") {_RecordType("<154,158,14>",(args)); Inst10++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (baz) != "undefined") {_RecordType("<173,176,15>",(baz)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (args) != "undefined") {_RecordType("<180,184,15>",(args)); Inst12++; } } catch(e) {}
    return baz(...args);
  }

try { if (Inst13 <= 1000 && typeof (foo) != "undefined") {_RecordType("<203,206,18>",(foo)); Inst13++; } } catch(e) {}
  function foo(a, b, c, ...args) {
try { if (Inst14 <= 1000 && typeof (a) != "undefined") {_RecordType("<207,208,18>",(a)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (b) != "undefined") {_RecordType("<210,211,18>",(b)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (c) != "undefined") {_RecordType("<213,214,18>",(c)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (args) != "undefined") {_RecordType("<219,223,18>",(args)); Inst17++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (bar) != "undefined") {_RecordType("<238,241,19>",(bar)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (args) != "undefined") {_RecordType("<245,249,19>",(args)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (a) != "undefined") {_RecordType("<251,252,19>",(a)); Inst20++; } } catch(e) {}
    return bar(...args, a, ...[0.5, 1.5, 2.5]);
  }

try { if (Inst21 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<282,290,22>",(noInline)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (foo) != "undefined") {_RecordType("<291,294,22>",(foo)); Inst22++; } } catch(e) {}
  noInline(foo);

  for (let i = 0; i < 100000; i++) {
try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<309,310,24>",(i)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<316,317,24>",(i)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<328,329,24>",(i)); Inst25++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (foo) != "undefined") {_RecordType("<347,350,25>",(foo)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (i) != "undefined") {_RecordType("<351,352,25>",(i)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (i) != "undefined") {_RecordType("<354,355,25>",(i)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (i) != "undefined") {_RecordType("<361,362,25>",(i)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (i) != "undefined") {_RecordType("<368,369,25>",(i)); Inst31++; } } catch(e) {}
    let r = foo(i, i + 1, i + 2, i + 3);
try { if (Inst26 <= 1000 && typeof (r) != "undefined") {_RecordType("<343,344,25>",(r)); Inst26++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (r.length) != "undefined") {_RecordType("<380,388,26>",(r.length)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (r) != "undefined") {_RecordType("<380,381,26>",(r)); Inst33++; } } catch(e) {}
    r.length === 5;
try { if (Inst39 <= 1000 && typeof (r) != "undefined") {_RecordType("<422,423,27>",(r)); Inst39++; } } catch(e) {}
    let [a, b, c, d, e] = r;
try { if (Inst34 <= 1000 && typeof (a) != "undefined") {_RecordType("<405,406,27>",(a)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (b) != "undefined") {_RecordType("<408,409,27>",(b)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (c) != "undefined") {_RecordType("<411,412,27>",(c)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (d) != "undefined") {_RecordType("<414,415,27>",(d)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (e) != "undefined") {_RecordType("<417,418,27>",(e)); Inst38++; } } catch(e) {}
try { if (Inst40 <= 1000 && typeof (a) != "undefined") {_RecordType("<429,430,28>",(a)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (i) != "undefined") {_RecordType("<435,436,28>",(i)); Inst41++; } } catch(e) {}
    a === i + 3;
try { if (Inst42 <= 1000 && typeof (b) != "undefined") {_RecordType("<446,447,29>",(b)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (i) != "undefined") {_RecordType("<452,453,29>",(i)); Inst43++; } } catch(e) {}
    b === i;
try { if (Inst44 <= 1000 && typeof (c) != "undefined") {_RecordType("<459,460,30>",(c)); Inst44++; } } catch(e) {}
    c === 0.5;
try { if (Inst45 <= 1000 && typeof (d) != "undefined") {_RecordType("<474,475,31>",(d)); Inst45++; } } catch(e) {}
    d === 1.5;
try { if (Inst46 <= 1000 && typeof (e) != "undefined") {_RecordType("<489,490,32>",(e)); Inst46++; } } catch(e) {}
    e === 2.5;
  }
}

try { if (Inst47 <= 1000 && typeof (test) != "undefined") {_RecordType("<507,511,36>",(test)); Inst47++; } } catch(e) {}
test();

