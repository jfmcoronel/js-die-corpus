var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
"use strict"; // This test passes when JSC doesn't crash.

try { if (Inst1 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<71,76,3>",(Proxy)); Inst1++; } } catch(e) {}
let p = new Proxy(function () {
  ;
}, {
  apply: function () {
try { if (Inst2 <= 1000 && typeof (bar) != "undefined") {_RecordType("<134,137,7>",(bar)); Inst2++; } } catch(e) {}
    return bar();
  }
});
try { if (Inst0 <= 1000 && typeof (p) != "undefined") {_RecordType("<63,64,3>",(p)); Inst0++; } } catch(e) {}

try { if (Inst3 <= 1000 && typeof (bar) != "undefined") {_RecordType("<159,162,11>",(bar)); Inst3++; } } catch(e) {}
function bar() {
try { if (Inst5 <= 1000 && typeof (getItem) != "undefined") {_RecordType("<180,187,12>",(getItem)); Inst5++; } } catch(e) {}
  let item = getItem();
try { if (Inst4 <= 1000 && typeof (item) != "undefined") {_RecordType("<173,177,12>",(item)); Inst4++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (item.foo) != "undefined") {_RecordType("<200,208,13>",(item.foo)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (item) != "undefined") {_RecordType("<200,204,13>",(item)); Inst7++; } } catch(e) {}
  return item.foo;
}

let i;
try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<217,218,16>",(i)); Inst8++; } } catch(e) {}
let shouldReturnBad = false;
try { if (Inst9 <= 1000 && typeof (shouldReturnBad) != "undefined") {_RecordType("<224,239,17>",(shouldReturnBad)); Inst9++; } } catch(e) {}
let good = [function () {
  return 1;
}, {
  b: 20
}, {
  c: 40
}, {
  d: 50
}];
try { if (Inst10 <= 1000 && typeof (good) != "undefined") {_RecordType("<253,257,18>",(good)); Inst10++; } } catch(e) {}
let bad = [{
  asdfhasf: 20
}, {
  e: 50
}, {
  j: 70
}, {
  k: 100
}, null];
try { if (Inst11 <= 1000 && typeof (bad) != "undefined") {_RecordType("<334,337,27>",(bad)); Inst11++; } } catch(e) {}

try { if (Inst12 <= 1000 && typeof (getItem) != "undefined") {_RecordType("<418,425,37>",(getItem)); Inst12++; } } catch(e) {}
function getItem() {
try { if (Inst13 <= 1000 && typeof (shouldReturnBad) != "undefined") {_RecordType("<436,451,38>",(shouldReturnBad)); Inst13++; } } catch(e) {}
  if (shouldReturnBad) {
try { if (Inst14 <= 1000 && typeof (bad[i % bad.length]) != "undefined") {_RecordType("<466,485,39>",(bad[i % bad.length])); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (bad) != "undefined") {_RecordType("<466,469,39>",(bad)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<470,471,39>",(i)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (bad.length) != "undefined") {_RecordType("<474,484,39>",(bad.length)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (bad) != "undefined") {_RecordType("<474,477,39>",(bad)); Inst18++; } } catch(e) {}
    return bad[i % bad.length];
  }

try { if (Inst19 <= 1000 && typeof (good[i % good.length]) != "undefined") {_RecordType("<501,522,42>",(good[i % good.length])); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (good) != "undefined") {_RecordType("<501,505,42>",(good)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<506,507,42>",(i)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (good.length) != "undefined") {_RecordType("<510,521,42>",(good.length)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (good) != "undefined") {_RecordType("<510,514,42>",(good)); Inst23++; } } catch(e) {}
  return good[i % good.length];
}

try { if (Inst24 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<527,535,45>",(noInline)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (getItem) != "undefined") {_RecordType("<536,543,45>",(getItem)); Inst25++; } } catch(e) {}
noInline(getItem);

try { if (Inst26 <= 1000 && typeof (start) != "undefined") {_RecordType("<556,561,47>",(start)); Inst26++; } } catch(e) {}
function start() {
  for (i = 0; i < 1000; i++) {
try { if (Inst27 <= 1000 && typeof (i) != "undefined") {_RecordType("<573,574,48>",(i)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (i) != "undefined") {_RecordType("<580,581,48>",(i)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (i) != "undefined") {_RecordType("<590,591,48>",(i)); Inst29++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (p) != "undefined") {_RecordType("<601,602,49>",(p)); Inst30++; } } catch(e) {}
    p();
  }

  shouldReturnBad = true;
try { if (Inst31 <= 1000 && typeof (shouldReturnBad) != "undefined") {_RecordType("<613,628,52>",(shouldReturnBad)); Inst31++; } } catch(e) {}

  for (i = 0; i < 10000; i++) {
try { if (Inst32 <= 1000 && typeof (i) != "undefined") {_RecordType("<645,646,54>",(i)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (i) != "undefined") {_RecordType("<652,653,54>",(i)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (i) != "undefined") {_RecordType("<663,664,54>",(i)); Inst34++; } } catch(e) {}
try { if (Inst36 <= 1000 && typeof (e) != "undefined") {_RecordType("<704,705,57>",(e)); Inst36++; } } catch(e) {}
    try {
try { if (Inst35 <= 1000 && typeof (p) != "undefined") {_RecordType("<686,687,56>",(p)); Inst35++; } } catch(e) {}
      p();
    } catch (e) {
      ;
    }
  }
}

try { if (Inst37 <= 1000 && typeof (start) != "undefined") {_RecordType("<730,735,63>",(start)); Inst37++; } } catch(e) {}
start();

