var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
"use strict";

try { if (Inst0 <= 1000 && typeof (f1) != "undefined") {_RecordType("<24,26,3>",(f1)); Inst0++; } } catch(e) {}
function f1(o) {
try { if (Inst1 <= 1000 && typeof (o) != "undefined") {_RecordType("<27,28,3>",(o)); Inst1++; } } catch(e) {}
  let result = [];
try { if (Inst2 <= 1000 && typeof (result) != "undefined") {_RecordType("<38,44,4>",(result)); Inst2++; } } catch(e) {}

  for (let key of Object.getOwnPropertyNames(o)) {
try { if (Inst3 <= 1000 && typeof (key) != "undefined") {_RecordType("<63,66,6>",(key)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Object.getOwnPropertyNames) != "undefined") {_RecordType("<70,96,6>",(Object.getOwnPropertyNames)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Object) != "undefined") {_RecordType("<70,76,6>",(Object)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (o) != "undefined") {_RecordType("<97,98,6>",(o)); Inst6++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (result.push) != "undefined") {_RecordType("<107,118,7>",(result.push)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (result) != "undefined") {_RecordType("<107,113,7>",(result)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (key) != "undefined") {_RecordType("<119,122,7>",(key)); Inst9++; } } catch(e) {}
    result.push(key);
  }

try { if (Inst10 <= 1000 && typeof (result) != "undefined") {_RecordType("<139,145,10>",(result)); Inst10++; } } catch(e) {}
  return result;
}

try { if (Inst11 <= 1000 && typeof (f2) != "undefined") {_RecordType("<159,161,13>",(f2)); Inst11++; } } catch(e) {}
function f2(a1, a2, ...args) {
try { if (Inst12 <= 1000 && typeof (a1) != "undefined") {_RecordType("<162,164,13>",(a1)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (a2) != "undefined") {_RecordType("<166,168,13>",(a2)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (args) != "undefined") {_RecordType("<173,177,13>",(args)); Inst14++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (f1) != "undefined") {_RecordType("<191,193,14>",(f1)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (a1) != "undefined") {_RecordType("<194,196,14>",(a1)); Inst17++; } } catch(e) {}
  let r = f1(a1);
try { if (Inst15 <= 1000 && typeof (r) != "undefined") {_RecordType("<187,188,14>",(r)); Inst15++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (r[a2 % r.length]) != "undefined") {_RecordType("<213,229,15>",(r[a2 % r.length])); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (r) != "undefined") {_RecordType("<213,214,15>",(r)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (a2) != "undefined") {_RecordType("<215,217,15>",(a2)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (r.length) != "undefined") {_RecordType("<220,228,15>",(r.length)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (r) != "undefined") {_RecordType("<220,221,15>",(r)); Inst23++; } } catch(e) {}
  let index = r[a2 % r.length];
try { if (Inst18 <= 1000 && typeof (index) != "undefined") {_RecordType("<205,210,15>",(index)); Inst18++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (a1[index]) != "undefined") {_RecordType("<233,242,16>",(a1[index])); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (a1) != "undefined") {_RecordType("<233,235,16>",(a1)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (args) != "undefined") {_RecordType("<246,250,16>",(args)); Inst26++; } } catch(e) {}
  a1[index](...args);
}

let theObj = {};
try { if (Inst27 <= 1000 && typeof (theObj) != "undefined") {_RecordType("<260,266,19>",(theObj)); Inst27++; } } catch(e) {}
let o2 = {
  valueOf: function (a, b) {
try { if (Inst29 <= 1000 && typeof (a) != "undefined") {_RecordType("<305,306,21>",(a)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (b) != "undefined") {_RecordType("<308,309,21>",(b)); Inst30++; } } catch(e) {}
try { if (Inst31 <= 1000 && typeof (a) != "undefined") {_RecordType("<317,318,22>",(a)); Inst31++; } } catch(e) {}
    a === 42;
try { if (Inst32 <= 1000 && typeof (b) != "undefined") {_RecordType("<331,332,23>",(b)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (theObj) != "undefined") {_RecordType("<337,343,23>",(theObj)); Inst33++; } } catch(e) {}
    b === theObj;

try { if (Inst34 <= 1000 && typeof (e) != "undefined") {_RecordType("<377,378,27>",(e)); Inst34++; } } catch(e) {}
    try {
      ;
    } catch (e) {
      ;
    }
  }
};
try { if (Inst28 <= 1000 && typeof (o2) != "undefined") {_RecordType("<277,279,20>",(o2)); Inst28++; } } catch(e) {}

for (let i = 0; i < 1e5; ++i) {
try { if (Inst35 <= 1000 && typeof (i) != "undefined") {_RecordType("<413,414,33>",(i)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (i) != "undefined") {_RecordType("<420,421,33>",(i)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (i) != "undefined") {_RecordType("<431,432,33>",(i)); Inst37++; } } catch(e) {}
  for (let j = 0; j < 100; j++) {
try { if (Inst38 <= 1000 && typeof (j) != "undefined") {_RecordType("<447,448,34>",(j)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (j) != "undefined") {_RecordType("<454,455,34>",(j)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (j) != "undefined") {_RecordType("<463,464,34>",(j)); Inst40++; } } catch(e) {}
    ;
  }

try { if (Inst41 <= 1000 && typeof (f2) != "undefined") {_RecordType("<483,485,38>",(f2)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (o2) != "undefined") {_RecordType("<486,488,38>",(o2)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (theObj) != "undefined") {_RecordType("<502,508,38>",(theObj)); Inst43++; } } catch(e) {}
  f2(o2, 897989, 42, theObj);
}

