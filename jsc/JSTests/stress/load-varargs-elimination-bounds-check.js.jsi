var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (foo) != "undefined") {_RecordType("<9,12,1>",(foo)); Inst0++; } } catch(e) {}
function foo() {
  var result = 0;
try { if (Inst1 <= 1000 && typeof (result) != "undefined") {_RecordType("<23,29,2>",(result)); Inst1++; } } catch(e) {}

  for (var i = 0; i < arguments.length; ++i) {
try { if (Inst2 <= 1000 && typeof (i) != "undefined") {_RecordType("<47,48,4>",(i)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (i) != "undefined") {_RecordType("<54,55,4>",(i)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (arguments.length) != "undefined") {_RecordType("<58,74,4>",(arguments.length)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<58,67,4>",(arguments)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<78,79,4>",(i)); Inst6++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (arguments[i]) != "undefined") {_RecordType("<97,109,5>",(arguments[i])); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<97,106,5>",(arguments)); Inst9++; } } catch(e) {}
    result += arguments[i];
try { if (Inst7 <= 1000 && typeof (result) != "undefined") {_RecordType("<87,93,5>",(result)); Inst7++; } } catch(e) {}
  }

try { if (Inst10 <= 1000 && typeof (result) != "undefined") {_RecordType("<125,131,8>",(result)); Inst10++; } } catch(e) {}
  return result;
}

try { if (Inst11 <= 1000 && typeof (bar) != "undefined") {_RecordType("<145,148,11>",(bar)); Inst11++; } } catch(e) {}
function bar() {
try { if (Inst12 <= 1000 && typeof (foo.apply) != "undefined") {_RecordType("<162,171,12>",(foo.apply)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (foo) != "undefined") {_RecordType("<162,165,12>",(foo)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<178,187,12>",(arguments)); Inst14++; } } catch(e) {}
  return foo.apply(this, arguments);
}

try { if (Inst15 <= 1000 && typeof (baz) != "undefined") {_RecordType("<202,205,15>",(baz)); Inst15++; } } catch(e) {}
function baz(p) {
try { if (Inst16 <= 1000 && typeof (p) != "undefined") {_RecordType("<206,207,15>",(p)); Inst16++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (p) != "undefined") {_RecordType("<217,218,16>",(p)); Inst17++; } } catch(e) {}
  if (p) {
try { if (Inst18 <= 1000 && typeof (bar) != "undefined") {_RecordType("<233,236,17>",(bar)); Inst18++; } } catch(e) {}
    return bar(1, 2, 3, 4);
  }

  return 0;
}

try { if (Inst19 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<270,278,23>",(noInline)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (baz) != "undefined") {_RecordType("<279,282,23>",(baz)); Inst20++; } } catch(e) {}
noInline(baz); // Execute baz() once with p set, so that the call has a valid prediction.

try { if (Inst21 <= 1000 && typeof (baz) != "undefined") {_RecordType("<361,364,25>",(baz)); Inst21++; } } catch(e) {}
baz(true); // Warm up profiling in bar and foo. Convince this profiling that bar()'s varargs call will tend to
// pass a small number of arguments;

for (var i = 0; i < 1000; ++i) {
try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<519,520,28>",(i)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<526,527,28>",(i)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<538,539,28>",(i)); Inst24++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (bar) != "undefined") {_RecordType("<545,548,29>",(bar)); Inst25++; } } catch(e) {}
  bar(1);
} // Now compile baz(), but don't run the bad code yet.


for (var i = 0; i < 10000; ++i) {
try { if (Inst26 <= 1000 && typeof (i) != "undefined") {_RecordType("<620,621,33>",(i)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (i) != "undefined") {_RecordType("<627,628,33>",(i)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (i) != "undefined") {_RecordType("<640,641,33>",(i)); Inst28++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (baz) != "undefined") {_RecordType("<647,650,34>",(baz)); Inst29++; } } catch(e) {}
  baz(false);
} // Finally, trigger the bug.


try { if (Inst31 <= 1000 && typeof (baz) != "undefined") {_RecordType("<705,708,38>",(baz)); Inst31++; } } catch(e) {}
var result = baz(true);
try { if (Inst30 <= 1000 && typeof (result) != "undefined") {_RecordType("<696,702,38>",(result)); Inst30++; } } catch(e) {}

try { if (Inst32 <= 1000 && typeof (result) != "undefined") {_RecordType("<721,727,40>",(result)); Inst32++; } } catch(e) {}
if (result != 10) {
try { if (Inst33 <= 1000 && typeof (result) != "undefined") {_RecordType("<769,775,41>",(result)); Inst33++; } } catch(e) {}
  throw "Error: bad result: " + result;
}

