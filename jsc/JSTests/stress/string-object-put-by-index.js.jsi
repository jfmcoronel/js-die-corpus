var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<9,17,1>",(shouldBe)); Inst0++; } } catch(e) {}
function shouldBe(actual, expected) {
try { if (Inst1 <= 1000 && typeof (actual) != "undefined") {_RecordType("<18,24,1>",(actual)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (expected) != "undefined") {_RecordType("<26,34,1>",(expected)); Inst2++; } } catch(e) {}
  ;
}

try { if (Inst3 <= 1000 && typeof (shouldThrow) != "undefined") {_RecordType("<54,65,5>",(shouldThrow)); Inst3++; } } catch(e) {}
function shouldThrow(func, message) {
try { if (Inst4 <= 1000 && typeof (func) != "undefined") {_RecordType("<66,70,5>",(func)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (message) != "undefined") {_RecordType("<72,79,5>",(message)); Inst5++; } } catch(e) {}
  var error = null;
try { if (Inst6 <= 1000 && typeof (error) != "undefined") {_RecordType("<89,94,6>",(error)); Inst6++; } } catch(e) {}

try { if (Inst8 <= 1000 && typeof (e) != "undefined") {_RecordType("<135,136,10>",(e)); Inst8++; } } catch(e) {}
  try {
try { if (Inst7 <= 1000 && typeof (func) != "undefined") {_RecordType("<116,120,9>",(func)); Inst7++; } } catch(e) {}
    func();
  } catch (e) {
try { if (Inst10 <= 1000 && typeof (e) != "undefined") {_RecordType("<152,153,11>",(e)); Inst10++; } } catch(e) {}
    error = e;
try { if (Inst9 <= 1000 && typeof (error) != "undefined") {_RecordType("<144,149,11>",(error)); Inst9++; } } catch(e) {}
  }
}

try { if (Inst11 <= 1000 && typeof (testSloppy) != "undefined") {_RecordType("<171,181,15>",(testSloppy)); Inst11++; } } catch(e) {}
function testSloppy(string) {
try { if (Inst12 <= 1000 && typeof (string) != "undefined") {_RecordType("<182,188,15>",(string)); Inst12++; } } catch(e) {}
  string[0] = 52;
try { if (Inst13 <= 1000 && typeof (string[0]) != "undefined") {_RecordType("<194,203,16>",(string[0])); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (string) != "undefined") {_RecordType("<194,200,16>",(string)); Inst14++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<212,220,17>",(shouldBe)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (string[0]) != "undefined") {_RecordType("<221,230,17>",(string[0])); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (string) != "undefined") {_RecordType("<221,227,17>",(string)); Inst17++; } } catch(e) {}
  shouldBe(string[0], 'C');
  string[100] = 52;
try { if (Inst18 <= 1000 && typeof (string[100]) != "undefined") {_RecordType("<240,251,18>",(string[100])); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (string) != "undefined") {_RecordType("<240,246,18>",(string)); Inst19++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<260,268,19>",(shouldBe)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (string[100]) != "undefined") {_RecordType("<269,280,19>",(string[100])); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (string) != "undefined") {_RecordType("<269,275,19>",(string)); Inst22++; } } catch(e) {}
  shouldBe(string[100], 52);
}

try { if (Inst23 <= 1000 && typeof (testStrict) != "undefined") {_RecordType("<299,309,22>",(testStrict)); Inst23++; } } catch(e) {}
function testStrict(string) {
try { if (Inst24 <= 1000 && typeof (string) != "undefined") {_RecordType("<310,316,22>",(string)); Inst24++; } } catch(e) {}
  'use strict';

try { if (Inst25 <= 1000 && typeof (shouldThrow) != "undefined") {_RecordType("<339,350,25>",(shouldThrow)); Inst25++; } } catch(e) {}
  shouldThrow(() => {
    string[0] = 52;
try { if (Inst26 <= 1000 && typeof (string[0]) != "undefined") {_RecordType("<363,372,26>",(string[0])); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (string) != "undefined") {_RecordType("<363,369,26>",(string)); Inst27++; } } catch(e) {}
  }, `TypeError: Attempted to assign to readonly property.`);
try { if (Inst28 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<443,451,28>",(shouldBe)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (string[0]) != "undefined") {_RecordType("<452,461,28>",(string[0])); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (string) != "undefined") {_RecordType("<452,458,28>",(string)); Inst30++; } } catch(e) {}
  shouldBe(string[0], 'C');
  string[100] = 52;
try { if (Inst31 <= 1000 && typeof (string[100]) != "undefined") {_RecordType("<471,482,29>",(string[100])); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (string) != "undefined") {_RecordType("<471,477,29>",(string)); Inst32++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<491,499,30>",(shouldBe)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (string[100]) != "undefined") {_RecordType("<500,511,30>",(string[100])); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (string) != "undefined") {_RecordType("<500,506,30>",(string)); Inst35++; } } catch(e) {}
  shouldBe(string[100], 52);
}

try { if (Inst36 <= 1000 && typeof (testSloppy) != "undefined") {_RecordType("<521,531,33>",(testSloppy)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (String) != "undefined") {_RecordType("<536,542,33>",(String)); Inst37++; } } catch(e) {}
testSloppy(new String("Cocoa"));
try { if (Inst38 <= 1000 && typeof (testStrict) != "undefined") {_RecordType("<554,564,34>",(testStrict)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (String) != "undefined") {_RecordType("<569,575,34>",(String)); Inst39++; } } catch(e) {}
testStrict(new String("Cocoa"));

