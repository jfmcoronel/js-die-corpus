var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (makePolyProtoObject) != "undefined") {_RecordType("<9,28,1>",(makePolyProtoObject)); Inst0++; } } catch(e) {}
function makePolyProtoObject() {
try { if (Inst1 <= 1000 && typeof (foo) != "undefined") {_RecordType("<44,47,2>",(foo)); Inst1++; } } catch(e) {}
  function foo() {
    class C {
      constructor() {
        this._field = 42;
try { if (Inst3 <= 1000 && typeof (this._field) != "undefined") {_RecordType("<96,107,5>",(this._field)); Inst3++; } } catch(e) {}
        this.hello = 33;
try { if (Inst4 <= 1000 && typeof (this.hello) != "undefined") {_RecordType("<122,132,6>",(this.hello)); Inst4++; } } catch(e) {}
      }

    }
try { if (Inst2 <= 1000 && typeof (C) != "undefined") {_RecordType("<62,63,3>",(C)); Inst2++; } } catch(e) {}

    ;
try { if (Inst5 <= 1000 && typeof (C) != "undefined") {_RecordType("<176,177,12>",(C)); Inst5++; } } catch(e) {}
    return new C();
  }

  for (let i = 0; i < 15; ++i) {
try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<197,198,15>",(i)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<204,205,15>",(i)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<214,215,15>",(i)); Inst8++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (foo) != "undefined") {_RecordType("<223,226,16>",(foo)); Inst9++; } } catch(e) {}
    foo();
  }

try { if (Inst10 <= 1000 && typeof (foo) != "undefined") {_RecordType("<244,247,19>",(foo)); Inst10++; } } catch(e) {}
  return foo();
}

try { if (Inst11 <= 1000 && typeof (foo) != "undefined") {_RecordType("<263,266,22>",(foo)); Inst11++; } } catch(e) {}
function foo(o, c) {
try { if (Inst12 <= 1000 && typeof (o) != "undefined") {_RecordType("<267,268,22>",(o)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (c) != "undefined") {_RecordType("<270,271,22>",(c)); Inst13++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (o) != "undefined") {_RecordType("<284,285,23>",(o)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (c) != "undefined") {_RecordType("<297,298,23>",(c)); Inst15++; } } catch(e) {}
  return o instanceof c;
}

try { if (Inst16 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<303,311,26>",(noInline)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (foo) != "undefined") {_RecordType("<312,315,26>",(foo)); Inst17++; } } catch(e) {}
noInline(foo);

class C {}
try { if (Inst18 <= 1000 && typeof (C) != "undefined") {_RecordType("<325,326,28>",(C)); Inst18++; } } catch(e) {}

try { if (Inst20 <= 1000 && typeof (makePolyProtoObject) != "undefined") {_RecordType("<339,358,30>",(makePolyProtoObject)); Inst20++; } } catch(e) {}
let o = makePolyProtoObject();
try { if (Inst19 <= 1000 && typeof (o) != "undefined") {_RecordType("<335,336,30>",(o)); Inst19++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (C) != "undefined") {_RecordType("<380,381,31>",(C)); Inst23++; } } catch(e) {}
o.__proto__ = new C();
try { if (Inst21 <= 1000 && typeof (o.__proto__) != "undefined") {_RecordType("<362,373,31>",(o.__proto__)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (o) != "undefined") {_RecordType("<362,363,31>",(o)); Inst22++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (o) != "undefined") {_RecordType("<408,409,33>",(o)); Inst25++; } } catch(e) {}
let x = {
  __proto__: o
};
try { if (Inst24 <= 1000 && typeof (x) != "undefined") {_RecordType("<389,390,32>",(x)); Inst24++; } } catch(e) {}

for (let i = 0; i < 1000; ++i) {
try { if (Inst26 <= 1000 && typeof (i) != "undefined") {_RecordType("<423,424,36>",(i)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (i) != "undefined") {_RecordType("<430,431,36>",(i)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (i) != "undefined") {_RecordType("<442,443,36>",(i)); Inst28++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (foo) != "undefined") {_RecordType("<449,452,37>",(foo)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (x) != "undefined") {_RecordType("<453,454,37>",(x)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (C) != "undefined") {_RecordType("<456,457,37>",(C)); Inst31++; } } catch(e) {}
  foo(x, C);
}

