var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (foo) != "undefined") {_RecordType("<9,12,1>",(foo)); Inst0++; } } catch(e) {}
function foo(o) {
try { if (Inst1 <= 1000 && typeof (o) != "undefined") {_RecordType("<13,14,1>",(o)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (o.f) != "undefined") {_RecordType("<27,30,2>",(o.f)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (o) != "undefined") {_RecordType("<27,28,2>",(o)); Inst3++; } } catch(e) {}
  return o.f + 1;
}

try { if (Inst4 <= 1000 && typeof (bar) != "undefined") {_RecordType("<48,51,5>",(bar)); Inst4++; } } catch(e) {}
function bar(o, i, v) {
try { if (Inst5 <= 1000 && typeof (o) != "undefined") {_RecordType("<52,53,5>",(o)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<55,56,5>",(i)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (v) != "undefined") {_RecordType("<58,59,5>",(v)); Inst7++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (v) != "undefined") {_RecordType("<72,73,6>",(v)); Inst10++; } } catch(e) {}
  o[i] = v;
try { if (Inst8 <= 1000 && typeof (o[i]) != "undefined") {_RecordType("<65,69,6>",(o[i])); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (o) != "undefined") {_RecordType("<65,66,6>",(o)); Inst9++; } } catch(e) {}
}

try { if (Inst11 <= 1000 && typeof (baz) != "undefined") {_RecordType("<87,90,9>",(baz)); Inst11++; } } catch(e) {}
function baz() {
  return {};
}

try { if (Inst12 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<111,119,13>",(noInline)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (foo) != "undefined") {_RecordType("<120,123,13>",(foo)); Inst13++; } } catch(e) {}
noInline(foo);
try { if (Inst14 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<126,134,14>",(noInline)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (bar) != "undefined") {_RecordType("<135,138,14>",(bar)); Inst15++; } } catch(e) {}
noInline(bar);
try { if (Inst16 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<141,149,15>",(noInline)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (baz) != "undefined") {_RecordType("<150,153,15>",(baz)); Inst17++; } } catch(e) {}
noInline(baz);
try { if (Inst19 <= 1000 && typeof (baz) != "undefined") {_RecordType("<165,168,16>",(baz)); Inst19++; } } catch(e) {}
var o0 = baz();
try { if (Inst18 <= 1000 && typeof (o0) != "undefined") {_RecordType("<160,162,16>",(o0)); Inst18++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (bar) != "undefined") {_RecordType("<172,175,17>",(bar)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (o0) != "undefined") {_RecordType("<176,178,17>",(o0)); Inst21++; } } catch(e) {}
bar(o0, "f", "hello");

for (var i = 0; i < 10000; ++i) {
try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<205,206,19>",(i)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<212,213,19>",(i)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<225,226,19>",(i)); Inst24++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (baz) != "undefined") {_RecordType("<240,243,20>",(baz)); Inst26++; } } catch(e) {}
  var o = baz();
try { if (Inst25 <= 1000 && typeof (o) != "undefined") {_RecordType("<236,237,20>",(o)); Inst25++; } } catch(e) {}
  o.f = 42;
try { if (Inst27 <= 1000 && typeof (o.f) != "undefined") {_RecordType("<249,252,21>",(o.f)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (o) != "undefined") {_RecordType("<249,250,21>",(o)); Inst28++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (foo) != "undefined") {_RecordType("<274,277,22>",(foo)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (o) != "undefined") {_RecordType("<278,279,22>",(o)); Inst31++; } } catch(e) {}
  var result = foo(o);
try { if (Inst29 <= 1000 && typeof (result) != "undefined") {_RecordType("<265,271,22>",(result)); Inst29++; } } catch(e) {}

try { if (Inst32 <= 1000 && typeof (result) != "undefined") {_RecordType("<289,295,24>",(result)); Inst32++; } } catch(e) {}
  if (result != 43) {
try { if (Inst33 <= 1000 && typeof (result) != "undefined") {_RecordType("<347,353,25>",(result)); Inst33++; } } catch(e) {}
    throw "Error: bad result in loop: " + result;
  }
}

try { if (Inst35 <= 1000 && typeof (foo) != "undefined") {_RecordType("<375,378,29>",(foo)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (o0) != "undefined") {_RecordType("<379,381,29>",(o0)); Inst36++; } } catch(e) {}
var result = foo(o0);
try { if (Inst34 <= 1000 && typeof (result) != "undefined") {_RecordType("<366,372,29>",(result)); Inst34++; } } catch(e) {}

try { if (Inst37 <= 1000 && typeof (result) != "undefined") {_RecordType("<389,395,31>",(result)); Inst37++; } } catch(e) {}
if (result != "hello1") {
try { if (Inst38 <= 1000 && typeof (result) != "undefined") {_RecordType("<450,456,32>",(result)); Inst38++; } } catch(e) {}
  throw "Error: bad result at end: " + result;
}

