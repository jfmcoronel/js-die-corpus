var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<9,17,1>",(shouldBe)); Inst0++; } } catch(e) {}
function shouldBe(actual, expected) {
try { if (Inst1 <= 1000 && typeof (actual) != "undefined") {_RecordType("<18,24,1>",(actual)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (expected) != "undefined") {_RecordType("<26,34,1>",(expected)); Inst2++; } } catch(e) {}
  ;
}

var executorFunction;
try { if (Inst3 <= 1000 && typeof (executorFunction) != "undefined") {_RecordType("<49,65,5>",(executorFunction)); Inst3++; } } catch(e) {}

try { if (Inst4 <= 1000 && typeof (NotPromise) != "undefined") {_RecordType("<77,87,7>",(NotPromise)); Inst4++; } } catch(e) {}
function NotPromise(executor) {
try { if (Inst5 <= 1000 && typeof (executor) != "undefined") {_RecordType("<88,96,7>",(executor)); Inst5++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (executor) != "undefined") {_RecordType("<121,129,8>",(executor)); Inst7++; } } catch(e) {}
  executorFunction = executor;
try { if (Inst6 <= 1000 && typeof (executorFunction) != "undefined") {_RecordType("<102,118,8>",(executorFunction)); Inst6++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (executor) != "undefined") {_RecordType("<133,141,9>",(executor)); Inst8++; } } catch(e) {}
  executor(function () {
    ;
  }, function () {
    ;
  });
}

try { if (Inst9 <= 1000 && typeof (Promise.resolve.call) != "undefined") {_RecordType("<196,216,16>",(Promise.resolve.call)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Promise.resolve) != "undefined") {_RecordType("<196,211,16>",(Promise.resolve)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Promise) != "undefined") {_RecordType("<196,203,16>",(Promise)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (NotPromise) != "undefined") {_RecordType("<217,227,16>",(NotPromise)); Inst12++; } } catch(e) {}
Promise.resolve.call(NotPromise);
try { if (Inst13 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<230,238,17>",(shouldBe)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (JSON.stringify) != "undefined") {_RecordType("<239,253,17>",(JSON.stringify)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<239,243,17>",(JSON)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Object.getOwnPropertyNames(executorFunction).sort) != "undefined") {_RecordType("<254,303,17>",(Object.getOwnPropertyNames(executorFunction).sort)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Object.getOwnPropertyNames) != "undefined") {_RecordType("<254,280,17>",(Object.getOwnPropertyNames)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Object) != "undefined") {_RecordType("<254,260,17>",(Object)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (executorFunction) != "undefined") {_RecordType("<281,297,17>",(executorFunction)); Inst19++; } } catch(e) {}
shouldBe(JSON.stringify(Object.getOwnPropertyNames(executorFunction).sort()), `["length"]`);
try { if (Inst20 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<323,331,18>",(shouldBe)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (executorFunction.hasOwnProperty) != "undefined") {_RecordType("<332,363,18>",(executorFunction.hasOwnProperty)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (executorFunction) != "undefined") {_RecordType("<332,348,18>",(executorFunction)); Inst22++; } } catch(e) {}
shouldBe(executorFunction.hasOwnProperty('name'), false);
try { if (Inst23 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<381,389,19>",(shouldBe)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (executorFunction.name) != "undefined") {_RecordType("<390,411,19>",(executorFunction.name)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (executorFunction) != "undefined") {_RecordType("<390,406,19>",(executorFunction)); Inst25++; } } catch(e) {}
shouldBe(executorFunction.name, ``);
try { if (Inst26 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<418,426,20>",(shouldBe)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (executorFunction.name) != "undefined") {_RecordType("<434,455,20>",(executorFunction.name)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (executorFunction) != "undefined") {_RecordType("<434,450,20>",(executorFunction)); Inst28++; } } catch(e) {}
shouldBe(delete executorFunction.name, true);

