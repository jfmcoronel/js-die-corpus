var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (simpleArith) != "undefined") {_RecordType("<9,20,1>",(simpleArith)); Inst0++; } } catch(e) {}
function simpleArith(number) {
try { if (Inst1 <= 1000 && typeof (number) != "undefined") {_RecordType("<21,27,1>",(number)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (number) != "undefined") {_RecordType("<41,47,2>",(number)); Inst2++; } } catch(e) {}
  return (number >>> 0) + 1;
}

try { if (Inst3 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<63,71,5>",(noInline)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (simpleArith) != "undefined") {_RecordType("<72,83,5>",(simpleArith)); Inst4++; } } catch(e) {}
noInline(simpleArith);

for (let i = 0; i < 1e6; ++i) {
try { if (Inst5 <= 1000 && typeof (i) != "undefined") {_RecordType("<96,97,7>",(i)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<103,104,7>",(i)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<114,115,7>",(i)); Inst7++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (simpleArith) != "undefined") {_RecordType("<145,156,8>",(simpleArith)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<157,158,8>",(i)); Inst10++; } } catch(e) {}
  let simpleArithResult = simpleArith(i);
try { if (Inst8 <= 1000 && typeof (simpleArithResult) != "undefined") {_RecordType("<125,142,8>",(simpleArithResult)); Inst8++; } } catch(e) {}

try { if (Inst11 <= 1000 && typeof (simpleArithResult) != "undefined") {_RecordType("<168,185,10>",(simpleArithResult)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<190,191,10>",(i)); Inst12++; } } catch(e) {}
  if (simpleArithResult !== i + 1) {
try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<243,244,11>",(i)); Inst13++; } } catch(e) {}
    throw "Failed simpleArith(i) at i = " + i;
  }

try { if (Inst15 <= 1000 && typeof (simpleArith) != "undefined") {_RecordType("<273,284,14>",(simpleArith)); Inst15++; } } catch(e) {}
  simpleArithResult = simpleArith(2147483647);
try { if (Inst14 <= 1000 && typeof (simpleArithResult) != "undefined") {_RecordType("<253,270,14>",(simpleArithResult)); Inst14++; } } catch(e) {}

try { if (Inst16 <= 1000 && typeof (simpleArithResult) != "undefined") {_RecordType("<305,322,16>",(simpleArithResult)); Inst16++; } } catch(e) {}
  if (simpleArithResult !== 2147483648) {
    throw "Failed simpleArith(2147483647)";
  }

try { if (Inst18 <= 1000 && typeof (simpleArith) != "undefined") {_RecordType("<412,423,20>",(simpleArith)); Inst18++; } } catch(e) {}
  simpleArithResult = simpleArith(-1);
try { if (Inst17 <= 1000 && typeof (simpleArithResult) != "undefined") {_RecordType("<392,409,20>",(simpleArithResult)); Inst17++; } } catch(e) {}

try { if (Inst19 <= 1000 && typeof (simpleArithResult) != "undefined") {_RecordType("<436,453,22>",(simpleArithResult)); Inst19++; } } catch(e) {}
  if (simpleArithResult !== 4294967296) {
try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<517,518,23>",(i)); Inst20++; } } catch(e) {}
    throw "Failed simpleArith(-1) at i = " + i;
  }
} // Make it OSR Exit.


try { if (Inst21 <= 1000 && typeof (simpleArith) != "undefined") {_RecordType("<553,564,28>",(simpleArith)); Inst21++; } } catch(e) {}
if (simpleArith({
  valueOf: function () {
    return 5;
  }
}) !== 6) {
  throw "Failed simpleArith({ toValue: function() { return 5; }}";
}

try { if (Inst22 <= 1000 && typeof (simpleArith) != "undefined") {_RecordType("<696,707,36>",(simpleArith)); Inst22++; } } catch(e) {}
if (simpleArith("WebKit!") !== 1) {
  throw "Failed simpleArith({ toValue: function() { return 5; }}";
}

try { if (Inst23 <= 1000 && typeof (compareToLargeNumber) != "undefined") {_RecordType("<807,827,40>",(compareToLargeNumber)); Inst23++; } } catch(e) {}
function compareToLargeNumber(value) {
try { if (Inst24 <= 1000 && typeof (value) != "undefined") {_RecordType("<828,833,40>",(value)); Inst24++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (value) != "undefined") {_RecordType("<846,851,41>",(value)); Inst25++; } } catch(e) {}
  return value >>> 0 < 4294967294;
}

try { if (Inst26 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<875,883,44>",(noInline)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (compareToLargeNumber) != "undefined") {_RecordType("<884,904,44>",(compareToLargeNumber)); Inst27++; } } catch(e) {}
noInline(compareToLargeNumber);

for (let i = 0; i < 1e6; ++i) {
try { if (Inst28 <= 1000 && typeof (i) != "undefined") {_RecordType("<917,918,46>",(i)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (i) != "undefined") {_RecordType("<924,925,46>",(i)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (i) != "undefined") {_RecordType("<935,936,46>",(i)); Inst30++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (compareToLargeNumber) != "undefined") {_RecordType("<962,982,47>",(compareToLargeNumber)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (i) != "undefined") {_RecordType("<983,984,47>",(i)); Inst33++; } } catch(e) {}
  let compareResult = compareToLargeNumber(i);
try { if (Inst31 <= 1000 && typeof (compareResult) != "undefined") {_RecordType("<946,959,47>",(compareResult)); Inst31++; } } catch(e) {}

try { if (Inst34 <= 1000 && typeof (compareResult) != "undefined") {_RecordType("<994,1007,49>",(compareResult)); Inst34++; } } catch(e) {}
  if (compareResult !== true) {
try { if (Inst35 <= 1000 && typeof (i) != "undefined") {_RecordType("<1073,1074,50>",(i)); Inst35++; } } catch(e) {}
    throw "Failed compareToLargeNumber(i) at i = " + i;
  }

try { if (Inst37 <= 1000 && typeof (compareToLargeNumber) != "undefined") {_RecordType("<1099,1119,53>",(compareToLargeNumber)); Inst37++; } } catch(e) {}
  compareResult = compareToLargeNumber(-3);
try { if (Inst36 <= 1000 && typeof (compareResult) != "undefined") {_RecordType("<1083,1096,53>",(compareResult)); Inst36++; } } catch(e) {}

try { if (Inst38 <= 1000 && typeof (compareResult) != "undefined") {_RecordType("<1132,1145,55>",(compareResult)); Inst38++; } } catch(e) {}
  if (compareResult !== true) {
try { if (Inst39 <= 1000 && typeof (i) != "undefined") {_RecordType("<1220,1221,56>",(i)); Inst39++; } } catch(e) {}
    throw "Failed compareToLargeNumber(4294967293) at i = " + i;
  }

try { if (Inst41 <= 1000 && typeof (compareToLargeNumber) != "undefined") {_RecordType("<1246,1266,59>",(compareToLargeNumber)); Inst41++; } } catch(e) {}
  compareResult = compareToLargeNumber(-2);
try { if (Inst40 <= 1000 && typeof (compareResult) != "undefined") {_RecordType("<1230,1243,59>",(compareResult)); Inst40++; } } catch(e) {}

try { if (Inst42 <= 1000 && typeof (compareResult) != "undefined") {_RecordType("<1279,1292,61>",(compareResult)); Inst42++; } } catch(e) {}
  if (compareResult !== false) {
try { if (Inst43 <= 1000 && typeof (i) != "undefined") {_RecordType("<1368,1369,62>",(i)); Inst43++; } } catch(e) {}
    throw "Failed compareToLargeNumber(4294967294) at i = " + i;
  }

try { if (Inst45 <= 1000 && typeof (compareToLargeNumber) != "undefined") {_RecordType("<1394,1414,65>",(compareToLargeNumber)); Inst45++; } } catch(e) {}
  compareResult = compareToLargeNumber(-1);
try { if (Inst44 <= 1000 && typeof (compareResult) != "undefined") {_RecordType("<1378,1391,65>",(compareResult)); Inst44++; } } catch(e) {}

try { if (Inst46 <= 1000 && typeof (compareResult) != "undefined") {_RecordType("<1427,1440,67>",(compareResult)); Inst46++; } } catch(e) {}
  if (compareResult !== false) {
try { if (Inst47 <= 1000 && typeof (i) != "undefined") {_RecordType("<1516,1517,68>",(i)); Inst47++; } } catch(e) {}
    throw "Failed compareToLargeNumber(4294967295) at i = " + i;
  }
}

