var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (foo) != "undefined") {_RecordType("<9,12,1>",(foo)); Inst0++; } } catch(e) {}
function foo(array, otherArray, i) {
try { if (Inst1 <= 1000 && typeof (array) != "undefined") {_RecordType("<13,18,1>",(array)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (otherArray) != "undefined") {_RecordType("<20,30,1>",(otherArray)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (i) != "undefined") {_RecordType("<32,33,1>",(i)); Inst3++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (otherArray[i]) != "undefined") {_RecordType("<47,60,2>",(otherArray[i])); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (otherArray) != "undefined") {_RecordType("<47,57,2>",(otherArray)); Inst6++; } } catch(e) {}
  var x = otherArray[i];
try { if (Inst4 <= 1000 && typeof (x) != "undefined") {_RecordType("<43,44,2>",(x)); Inst4++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (otherArray[i]) != "undefined") {_RecordType("<72,85,3>",(otherArray[i])); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (otherArray) != "undefined") {_RecordType("<72,82,3>",(otherArray)); Inst9++; } } catch(e) {}
  var y = otherArray[i];
try { if (Inst7 <= 1000 && typeof (y) != "undefined") {_RecordType("<68,69,3>",(y)); Inst7++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (array.push) != "undefined") {_RecordType("<89,99,4>",(array.push)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (array) != "undefined") {_RecordType("<89,94,4>",(array)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (y) != "undefined") {_RecordType("<100,101,4>",(y)); Inst12++; } } catch(e) {}
  array.push(y);
try { if (Inst13 <= 1000 && typeof (x) != "undefined") {_RecordType("<113,114,5>",(x)); Inst13++; } } catch(e) {}
  return x / 42;
}

try { if (Inst14 <= 1000 && typeof (bar) != "undefined") {_RecordType("<133,136,8>",(bar)); Inst14++; } } catch(e) {}
function bar() {
  return [];
}

try { if (Inst15 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<157,165,12>",(noInline)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (foo) != "undefined") {_RecordType("<166,169,12>",(foo)); Inst16++; } } catch(e) {}
noInline(foo);
try { if (Inst17 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<172,180,13>",(noInline)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (bar) != "undefined") {_RecordType("<181,184,13>",(bar)); Inst18++; } } catch(e) {}
noInline(bar);

for (var i = 0; i < 10000; ++i) {
try { if (Inst19 <= 1000 && typeof (i) != "undefined") {_RecordType("<197,198,15>",(i)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<204,205,15>",(i)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<217,218,15>",(i)); Inst21++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (foo) != "undefined") {_RecordType("<224,227,16>",(foo)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (bar) != "undefined") {_RecordType("<228,231,16>",(bar)); Inst23++; } } catch(e) {}
  foo(bar(), [42.5], 0);
}

try { if (Inst25 <= 1000 && typeof (bar) != "undefined") {_RecordType("<263,266,19>",(bar)); Inst25++; } } catch(e) {}
var result = bar();
try { if (Inst24 <= 1000 && typeof (result) != "undefined") {_RecordType("<254,260,19>",(result)); Inst24++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (foo) != "undefined") {_RecordType("<270,273,20>",(foo)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (result) != "undefined") {_RecordType("<274,280,20>",(result)); Inst27++; } } catch(e) {}
foo(result, [, 42.5], 0);

try { if (Inst28 <= 1000 && typeof (result[0]) != "undefined") {_RecordType("<301,310,22>",(result[0])); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (result) != "undefined") {_RecordType("<301,307,22>",(result)); Inst29++; } } catch(e) {}
if (result[0] !== void 0) {
try { if (Inst30 <= 1000 && typeof (result) != "undefined") {_RecordType("<350,356,23>",(result)); Inst30++; } } catch(e) {}
  throw "Bad result: " + result;
}

