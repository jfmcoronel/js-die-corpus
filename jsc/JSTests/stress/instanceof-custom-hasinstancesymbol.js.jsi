var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (Constructor) != "undefined") {_RecordType("<9,20,1>",(Constructor)); Inst0++; } } catch(e) {}
function Constructor(x) {
try { if (Inst1 <= 1000 && typeof (x) != "undefined") {_RecordType("<21,22,1>",(x)); Inst1++; } } catch(e) {}
  ;
}

try { if (Inst2 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<33,54,5>",(Object.defineProperty)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Object) != "undefined") {_RecordType("<33,39,5>",(Object)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Constructor) != "undefined") {_RecordType("<55,66,5>",(Constructor)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Symbol.hasInstance) != "undefined") {_RecordType("<68,86,5>",(Symbol.hasInstance)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<68,74,5>",(Symbol)); Inst6++; } } catch(e) {}
Object.defineProperty(Constructor, Symbol.hasInstance, {
  value: function () {
    return false;
  }
});
try { if (Inst8 <= 1000 && typeof (Constructor) != "undefined") {_RecordType("<147,158,10>",(Constructor)); Inst8++; } } catch(e) {}
x = new Constructor();
try { if (Inst7 <= 1000 && typeof (x) != "undefined") {_RecordType("<139,140,10>",(x)); Inst7++; } } catch(e) {}

try { if (Inst9 <= 1000 && typeof (instanceOf) != "undefined") {_RecordType("<172,182,12>",(instanceOf)); Inst9++; } } catch(e) {}
function instanceOf(a, b) {
try { if (Inst10 <= 1000 && typeof (a) != "undefined") {_RecordType("<183,184,12>",(a)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (b) != "undefined") {_RecordType("<186,187,12>",(b)); Inst11++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (a) != "undefined") {_RecordType("<200,201,13>",(a)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (b) != "undefined") {_RecordType("<213,214,13>",(b)); Inst13++; } } catch(e) {}
  return a instanceof b;
}

try { if (Inst14 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<219,227,16>",(noInline)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (instanceOf) != "undefined") {_RecordType("<228,238,16>",(instanceOf)); Inst15++; } } catch(e) {}
noInline(instanceOf);

try { if (Inst16 <= 1000 && typeof (body) != "undefined") {_RecordType("<251,255,18>",(body)); Inst16++; } } catch(e) {}
function body() {
  var result = 0;
try { if (Inst17 <= 1000 && typeof (result) != "undefined") {_RecordType("<266,272,19>",(result)); Inst17++; } } catch(e) {}

  for (var i = 0; i < 100000; i++) {
try { if (Inst18 <= 1000 && typeof (i) != "undefined") {_RecordType("<290,291,21>",(i)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (i) != "undefined") {_RecordType("<297,298,21>",(i)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<309,310,21>",(i)); Inst20++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (instanceOf) != "undefined") {_RecordType("<324,334,22>",(instanceOf)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (x) != "undefined") {_RecordType("<335,336,22>",(x)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Constructor) != "undefined") {_RecordType("<338,349,22>",(Constructor)); Inst23++; } } catch(e) {}
    if (instanceOf(x, Constructor)) {
try { if (Inst24 <= 1000 && typeof (result) != "undefined") {_RecordType("<360,366,23>",(result)); Inst24++; } } catch(e) {}
      result++;
    }
  }

try { if (Inst25 <= 1000 && typeof (result) != "undefined") {_RecordType("<390,396,27>",(result)); Inst25++; } } catch(e) {}
  return result;
}

try { if (Inst26 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<401,409,30>",(noInline)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (body) != "undefined") {_RecordType("<410,414,30>",(body)); Inst27++; } } catch(e) {}
noInline(body);

try { if (Inst28 <= 1000 && typeof (body) != "undefined") {_RecordType("<422,426,32>",(body)); Inst28++; } } catch(e) {}
if (body()) {
  throw "result incorrect";
}

