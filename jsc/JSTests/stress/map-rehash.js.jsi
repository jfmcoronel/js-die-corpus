var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (assert) != "undefined") {_RecordType("<9,15,1>",(assert)); Inst0++; } } catch(e) {}
function assert(b) {
try { if (Inst1 <= 1000 && typeof (b) != "undefined") {_RecordType("<16,17,1>",(b)); Inst1++; } } catch(e) {}
  ;
}

try { if (Inst3 <= 1000 && typeof (Set) != "undefined") {_RecordType("<42,45,5>",(Set)); Inst3++; } } catch(e) {}
let set = new Set();
try { if (Inst2 <= 1000 && typeof (set) != "undefined") {_RecordType("<32,35,5>",(set)); Inst2++; } } catch(e) {}
let items = [];
try { if (Inst4 <= 1000 && typeof (items) != "undefined") {_RecordType("<53,58,6>",(items)); Inst4++; } } catch(e) {}

for (let i = 0; i < 3000; i++) {
try { if (Inst5 <= 1000 && typeof (i) != "undefined") {_RecordType("<75,76,8>",(i)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<82,83,8>",(i)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<92,93,8>",(i)); Inst7++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (items.push) != "undefined") {_RecordType("<101,111,9>",(items.push)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (items) != "undefined") {_RecordType("<101,106,9>",(items)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<112,113,9>",(i)); Inst10++; } } catch(e) {}
  items.push(i);
try { if (Inst11 <= 1000 && typeof (set.add) != "undefined") {_RecordType("<118,125,10>",(set.add)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (set) != "undefined") {_RecordType("<118,121,10>",(set)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<126,127,10>",(i)); Inst13++; } } catch(e) {}
  set.add(i);
}

let counter = 1000000;
try { if (Inst14 <= 1000 && typeof (counter) != "undefined") {_RecordType("<137,144,13>",(counter)); Inst14++; } } catch(e) {}

try { if (Inst15 <= 1000 && typeof (items.length) != "undefined") {_RecordType("<164,176,15>",(items.length)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (items) != "undefined") {_RecordType("<164,169,15>",(items)); Inst16++; } } catch(e) {}
while (items.length) {
try { if (Inst17 <= 1000 && typeof (Math.random) != "undefined") {_RecordType("<186,197,16>",(Math.random)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Math) != "undefined") {_RecordType("<186,190,16>",(Math)); Inst18++; } } catch(e) {}
  if (Math.random() < 0.85) {
try { if (Inst20 <= 1000 && typeof (items.pop) != "undefined") {_RecordType("<225,234,17>",(items.pop)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (items) != "undefined") {_RecordType("<225,230,17>",(items)); Inst21++; } } catch(e) {}
    let item = items.pop();
try { if (Inst19 <= 1000 && typeof (item) != "undefined") {_RecordType("<218,222,17>",(item)); Inst19++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (set.delete) != "undefined") {_RecordType("<256,266,18>",(set.delete)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (set) != "undefined") {_RecordType("<256,259,18>",(set)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (item) != "undefined") {_RecordType("<267,271,18>",(item)); Inst25++; } } catch(e) {}
    let removed = set.delete(item);
try { if (Inst22 <= 1000 && typeof (removed) != "undefined") {_RecordType("<246,253,18>",(removed)); Inst22++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (removed) != "undefined") {_RecordType("<278,285,19>",(removed)); Inst26++; } } catch(e) {}
    removed;
try { if (Inst27 <= 1000 && typeof (items.length) != "undefined") {_RecordType("<291,303,20>",(items.length)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (items) != "undefined") {_RecordType("<291,296,20>",(items)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (set.size) != "undefined") {_RecordType("<308,316,20>",(set.size)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (set) != "undefined") {_RecordType("<308,311,20>",(set)); Inst30++; } } catch(e) {}
    items.length === set.size;
  } else {
try { if (Inst32 <= 1000 && typeof (counter) != "undefined") {_RecordType("<349,356,22>",(counter)); Inst32++; } } catch(e) {}
    let newItem = ++counter;
try { if (Inst31 <= 1000 && typeof (newItem) != "undefined") {_RecordType("<337,344,22>",(newItem)); Inst31++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (items.push) != "undefined") {_RecordType("<362,372,23>",(items.push)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (items) != "undefined") {_RecordType("<362,367,23>",(items)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (newItem) != "undefined") {_RecordType("<373,380,23>",(newItem)); Inst35++; } } catch(e) {}
    items.push(newItem);
try { if (Inst36 <= 1000 && typeof (set.add) != "undefined") {_RecordType("<387,394,24>",(set.add)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (set) != "undefined") {_RecordType("<387,390,24>",(set)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (newItem) != "undefined") {_RecordType("<395,402,24>",(newItem)); Inst38++; } } catch(e) {}
    set.add(newItem);
try { if (Inst39 <= 1000 && typeof (items.length) != "undefined") {_RecordType("<409,421,25>",(items.length)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (items) != "undefined") {_RecordType("<409,414,25>",(items)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (set.size) != "undefined") {_RecordType("<426,434,25>",(set.size)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (set) != "undefined") {_RecordType("<426,429,25>",(set)); Inst42++; } } catch(e) {}
    items.length === set.size;
  }
}

