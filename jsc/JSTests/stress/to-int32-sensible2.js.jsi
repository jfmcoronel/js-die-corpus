var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//@ runFTLNoCJIT
try { if (Inst1 <= 1000 && typeof (Number.MAX_VALUE) != "undefined") {_RecordType("<46,62,3>",(Number.MAX_VALUE)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Number) != "undefined") {_RecordType("<46,52,3>",(Number)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Number.MAX_VALUE) != "undefined") {_RecordType("<92,108,6>",(Number.MAX_VALUE)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Number) != "undefined") {_RecordType("<92,98,6>",(Number)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Number.MIN_VALUE) != "undefined") {_RecordType("<139,155,9>",(Number.MIN_VALUE)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Number) != "undefined") {_RecordType("<139,145,9>",(Number)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Number.MIN_VALUE) != "undefined") {_RecordType("<185,201,12>",(Number.MIN_VALUE)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Number) != "undefined") {_RecordType("<185,191,12>",(Number)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<232,240,15>",(Infinity)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<270,278,18>",(Infinity)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<308,311,21>",(NaN)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<342,345,24>",(NaN)); Inst12++; } } catch(e) {}
var testCases = [{
  value: -Number.MAX_VALUE,
  expected: 0
}, {
  value: Number.MAX_VALUE,
  expected: 0
}, {
  value: -Number.MIN_VALUE,
  expected: 0
}, {
  value: Number.MIN_VALUE,
  expected: 0
}, {
  value: -Infinity,
  expected: 0
}, {
  value: Infinity,
  expected: 0
}, {
  value: NaN,
  expected: 0
}, {
  value: -NaN,
  expected: 0
}, {
  value: 0,
  expected: 0
}, {
  value: -0,
  expected: 0
}, {
  value: 1,
  expected: 1
}, {
  value: -1,
  expected: -1
}, {
  value: 5,
  expected: 5
}, {
  value: -5,
  expected: -5
}, {
  value: 0x80000001,
  expected: -2147483647
}, {
  value: 0x80000000,
  expected: -2147483648
}, {
  value: 0x7fffffff,
  expected: 2147483647
}, {
  value: 0x7ffffffe,
  expected: 2147483646
}, {
  value: -2147483647,
  expected: -2147483647
}, {
  value: -2147483648,
  expected: -2147483648
}, {
  value: -2147483649,
  expected: 2147483647
}, {
  value: -2147483650,
  expected: 2147483646
}, {
  value: 2147483646,
  expected: 2147483646
}, {
  value: 2147483647,
  expected: 2147483647
}, {
  value: 2147483648,
  expected: -2147483648
}, {
  value: 2147483649,
  expected: -2147483647
}];
try { if (Inst0 <= 1000 && typeof (testCases) != "undefined") {_RecordType("<21,30,2>",(testCases)); Inst0++; } } catch(e) {}
var numFailures = 0;
try { if (Inst13 <= 1000 && typeof (numFailures) != "undefined") {_RecordType("<1158,1169,81>",(numFailures)); Inst13++; } } catch(e) {}

for (var i = 0; i < testCases.length; i++) {
try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<1185,1186,83>",(i)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<1192,1193,83>",(i)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (testCases.length) != "undefined") {_RecordType("<1196,1212,83>",(testCases.length)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (testCases) != "undefined") {_RecordType("<1196,1205,83>",(testCases)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (i) != "undefined") {_RecordType("<1214,1215,83>",(i)); Inst18++; } } catch(e) {}
try { if (Inst42 <= 1000 && typeof (e) != "undefined") {_RecordType("<1610,1611,96>",(e)); Inst42++; } } catch(e) {}
  try {
try { if (Inst20 <= 1000 && typeof (testCases[i]) != "undefined") {_RecordType("<1248,1260,85>",(testCases[i])); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (testCases) != "undefined") {_RecordType("<1248,1257,85>",(testCases)); Inst21++; } } catch(e) {}
    var testCase = testCases[i];
try { if (Inst19 <= 1000 && typeof (testCase) != "undefined") {_RecordType("<1237,1245,85>",(testCase)); Inst19++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (Function) != "undefined") {_RecordType("<1281,1289,86>",(Function)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<1309,1310,86>",(i)); Inst24++; } } catch(e) {}
    var test = new Function("x", "y", "y = " + i + "; return x|0;");
try { if (Inst22 <= 1000 && typeof (test) != "undefined") {_RecordType("<1270,1274,86>",(test)); Inst22++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<1335,1343,87>",(noInline)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (test) != "undefined") {_RecordType("<1344,1348,87>",(test)); Inst26++; } } catch(e) {}
    noInline(test);

    for (var k = 0; k < 10000; ++k) {
try { if (Inst27 <= 1000 && typeof (k) != "undefined") {_RecordType("<1365,1366,89>",(k)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (k) != "undefined") {_RecordType("<1372,1373,89>",(k)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (k) != "undefined") {_RecordType("<1385,1386,89>",(k)); Inst29++; } } catch(e) {}
try { if (Inst31 <= 1000 && typeof (test) != "undefined") {_RecordType("<1405,1409,90>",(test)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (testCase.value) != "undefined") {_RecordType("<1410,1424,90>",(testCase.value)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (testCase) != "undefined") {_RecordType("<1410,1418,90>",(testCase)); Inst33++; } } catch(e) {}
      actual = test(testCase.value);
try { if (Inst30 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1396,1402,90>",(actual)); Inst30++; } } catch(e) {}

try { if (Inst34 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1438,1444,92>",(actual)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (testCase.expected) != "undefined") {_RecordType("<1448,1465,92>",(testCase.expected)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (testCase) != "undefined") {_RecordType("<1448,1456,92>",(testCase)); Inst36++; } } catch(e) {}
      if (actual != testCase.expected) {
try { if (Inst37 <= 1000 && typeof (testCase.value) != "undefined") {_RecordType("<1510,1524,93>",(testCase.value)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (testCase) != "undefined") {_RecordType("<1510,1518,93>",(testCase)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (testCase.expected) != "undefined") {_RecordType("<1543,1560,93>",(testCase.expected)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (testCase) != "undefined") {_RecordType("<1543,1551,93>",(testCase)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1577,1583,93>",(actual)); Inst41++; } } catch(e) {}
        throw "FAILED: x|0 where x = " + testCase.value + ": expected " + testCase.expected + ", actual " + actual;
      }
    }
  } catch (e) {
try { if (Inst43 <= 1000 && typeof (print) != "undefined") {_RecordType("<1619,1624,97>",(print)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (e) != "undefined") {_RecordType("<1625,1626,97>",(e)); Inst44++; } } catch(e) {}
    print(e);
try { if (Inst45 <= 1000 && typeof (numFailures) != "undefined") {_RecordType("<1633,1644,98>",(numFailures)); Inst45++; } } catch(e) {}
    numFailures++;
  }
}

try { if (Inst46 <= 1000 && typeof (numFailures) != "undefined") {_RecordType("<1659,1670,102>",(numFailures)); Inst46++; } } catch(e) {}
if (numFailures) {
try { if (Inst47 <= 1000 && typeof (numFailures) != "undefined") {_RecordType("<1693,1704,103>",(numFailures)); Inst47++; } } catch(e) {}
  throw "Found " + numFailures + " failures";
}

