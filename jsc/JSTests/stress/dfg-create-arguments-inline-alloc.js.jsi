var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
var foo = function (o) {
try { if (Inst1 <= 1000 && typeof (o) != "undefined") {_RecordType("<20,21,1>",(o)); Inst1++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (Array.prototype.slice.call) != "undefined") {_RecordType("<35,61,2>",(Array.prototype.slice.call)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Array.prototype.slice) != "undefined") {_RecordType("<35,56,2>",(Array.prototype.slice)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<35,50,2>",(Array.prototype)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Array) != "undefined") {_RecordType("<35,40,2>",(Array)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<62,71,2>",(arguments)); Inst7++; } } catch(e) {}
  var a = Array.prototype.slice.call(arguments);
try { if (Inst2 <= 1000 && typeof (a) != "undefined") {_RecordType("<31,32,2>",(a)); Inst2++; } } catch(e) {}
  var sum = 0;
try { if (Inst8 <= 1000 && typeof (sum) != "undefined") {_RecordType("<80,83,3>",(sum)); Inst8++; } } catch(e) {}

  for (var i = 0; i < a.length; ++i) {
try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<101,102,5>",(i)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<108,109,5>",(i)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<112,120,5>",(a.length)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (a) != "undefined") {_RecordType("<112,113,5>",(a)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<124,125,5>",(i)); Inst13++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (a[i].x) != "undefined") {_RecordType("<140,146,6>",(a[i].x)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (a[i]) != "undefined") {_RecordType("<140,144,6>",(a[i])); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (a) != "undefined") {_RecordType("<140,141,6>",(a)); Inst17++; } } catch(e) {}
    sum += a[i].x;
try { if (Inst14 <= 1000 && typeof (sum) != "undefined") {_RecordType("<133,136,6>",(sum)); Inst14++; } } catch(e) {}
  }

try { if (Inst18 <= 1000 && typeof (sum) != "undefined") {_RecordType("<162,165,9>",(sum)); Inst18++; } } catch(e) {}
  return sum;
};
try { if (Inst0 <= 1000 && typeof (foo) != "undefined") {_RecordType("<4,7,1>",(foo)); Inst0++; } } catch(e) {}

try { if (Inst19 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<171,179,12>",(noInline)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (foo) != "undefined") {_RecordType("<180,183,12>",(foo)); Inst20++; } } catch(e) {}
noInline(foo);
var niters = 10000;
try { if (Inst21 <= 1000 && typeof (niters) != "undefined") {_RecordType("<190,196,13>",(niters)); Inst21++; } } catch(e) {}
var total = 0;
try { if (Inst22 <= 1000 && typeof (total) != "undefined") {_RecordType("<210,215,14>",(total)); Inst22++; } } catch(e) {}
var o = {
  x: 42
};
try { if (Inst23 <= 1000 && typeof (o) != "undefined") {_RecordType("<225,226,15>",(o)); Inst23++; } } catch(e) {}

for (var i = 0; i < niters; ++i) {
try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<252,253,19>",(i)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<259,260,19>",(i)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (niters) != "undefined") {_RecordType("<263,269,19>",(niters)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (i) != "undefined") {_RecordType("<273,274,19>",(i)); Inst27++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (foo) != "undefined") {_RecordType("<289,292,20>",(foo)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (o) != "undefined") {_RecordType("<293,294,20>",(o)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (o) != "undefined") {_RecordType("<296,297,20>",(o)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (o) != "undefined") {_RecordType("<299,300,20>",(o)); Inst32++; } } catch(e) {}
  total += foo(o, o, o);
try { if (Inst28 <= 1000 && typeof (total) != "undefined") {_RecordType("<280,285,20>",(total)); Inst28++; } } catch(e) {}
}

try { if (Inst33 <= 1000 && typeof (total) != "undefined") {_RecordType("<310,315,23>",(total)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (niters) != "undefined") {_RecordType("<328,334,23>",(niters)); Inst34++; } } catch(e) {}
if (total != 42 * 3 * niters) {
try { if (Inst35 <= 1000 && typeof (Error) != "undefined") {_RecordType("<350,355,24>",(Error)); Inst35++; } } catch(e) {}
  throw new Error("Incorrect result!");
}

