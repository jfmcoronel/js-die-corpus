var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<9,17,1>",(shouldBe)); Inst0++; } } catch(e) {}
function shouldBe(actual, expected) {
try { if (Inst1 <= 1000 && typeof (actual) != "undefined") {_RecordType("<18,24,1>",(actual)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (expected) != "undefined") {_RecordType("<26,34,1>",(expected)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (actual) != "undefined") {_RecordType("<44,50,2>",(actual)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (expected) != "undefined") {_RecordType("<55,63,2>",(expected)); Inst4++; } } catch(e) {}
  if (actual !== expected) {
try { if (Inst5 <= 1000 && typeof (Error) != "undefined") {_RecordType("<81,86,3>",(Error)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (actual) != "undefined") {_RecordType("<103,109,3>",(actual)); Inst6++; } } catch(e) {}
    throw new Error('bad value: ' + actual);
  }
}

try { if (Inst7 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<119,140,7>",(Object.defineProperty)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Object) != "undefined") {_RecordType("<119,125,7>",(Object)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<141,156,7>",(Array.prototype)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Array) != "undefined") {_RecordType("<141,146,7>",(Array)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (get) != "undefined") {_RecordType("<167,170,8>",(get)); Inst11++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (set) != "undefined") {_RecordType("<211,214,12>",(set)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (value) != "undefined") {_RecordType("<215,220,12>",(value)); Inst14++; } } catch(e) {}
Object.defineProperty(Array.prototype, '0', {
  get() {
try { if (Inst12 <= 1000 && typeof (Error) != "undefined") {_RecordType("<189,194,9>",(Error)); Inst12++; } } catch(e) {}
    throw new Error('out');
  },

  set(value) {
try { if (Inst15 <= 1000 && typeof (Error) != "undefined") {_RecordType("<238,243,13>",(Error)); Inst15++; } } catch(e) {}
    throw new Error('out');
  }

});
{
  let object = {
    a: 42,
    b: 42,
    c: 42
  };
try { if (Inst16 <= 1000 && typeof (object) != "undefined") {_RecordType("<269,275,18>",(object)); Inst16++; } } catch(e) {}
  {
try { if (Inst18 <= 1000 && typeof (Object.keys) != "undefined") {_RecordType("<338,349,24>",(Object.keys)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Object) != "undefined") {_RecordType("<338,344,24>",(Object)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (object) != "undefined") {_RecordType("<350,356,24>",(object)); Inst20++; } } catch(e) {}
    let result = Object.keys(object);
try { if (Inst17 <= 1000 && typeof (result) != "undefined") {_RecordType("<329,335,24>",(result)); Inst17++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<363,371,25>",(shouldBe)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (JSON.stringify) != "undefined") {_RecordType("<372,386,25>",(JSON.stringify)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<372,376,25>",(JSON)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (result) != "undefined") {_RecordType("<387,393,25>",(result)); Inst24++; } } catch(e) {}
    shouldBe(JSON.stringify(result), `["a","b","c"]`);
  }
  {
try { if (Inst26 <= 1000 && typeof (Object.values) != "undefined") {_RecordType("<439,452,28>",(Object.values)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (Object) != "undefined") {_RecordType("<439,445,28>",(Object)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (object) != "undefined") {_RecordType("<453,459,28>",(object)); Inst28++; } } catch(e) {}
    let result = Object.values(object);
try { if (Inst25 <= 1000 && typeof (result) != "undefined") {_RecordType("<430,436,28>",(result)); Inst25++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<466,474,29>",(shouldBe)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (JSON.stringify) != "undefined") {_RecordType("<475,489,29>",(JSON.stringify)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<475,479,29>",(JSON)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (result) != "undefined") {_RecordType("<490,496,29>",(result)); Inst32++; } } catch(e) {}
    shouldBe(JSON.stringify(result), `[42,42,42]`);
  }
}
{
  let object = {
    [Symbol.iterator]: 42,
    b: 42,
    c: 42
  };
try { if (Inst33 <= 1000 && typeof (object) != "undefined") {_RecordType("<528,534,33>",(object)); Inst33++; } } catch(e) {}
  {
try { if (Inst35 <= 1000 && typeof (Object.getOwnPropertyNames) != "undefined") {_RecordType("<613,639,39>",(Object.getOwnPropertyNames)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (Object) != "undefined") {_RecordType("<613,619,39>",(Object)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (object) != "undefined") {_RecordType("<640,646,39>",(object)); Inst37++; } } catch(e) {}
    let result = Object.getOwnPropertyNames(object);
try { if (Inst34 <= 1000 && typeof (result) != "undefined") {_RecordType("<604,610,39>",(result)); Inst34++; } } catch(e) {}
try { if (Inst38 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<653,661,40>",(shouldBe)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (JSON.stringify) != "undefined") {_RecordType("<662,676,40>",(JSON.stringify)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<662,666,40>",(JSON)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (result) != "undefined") {_RecordType("<677,683,40>",(result)); Inst41++; } } catch(e) {}
    shouldBe(JSON.stringify(result), `["b","c"]`);
  }
  {
try { if (Inst43 <= 1000 && typeof (Object.getOwnPropertySymbols) != "undefined") {_RecordType("<725,753,43>",(Object.getOwnPropertySymbols)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (Object) != "undefined") {_RecordType("<725,731,43>",(Object)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (object) != "undefined") {_RecordType("<754,760,43>",(object)); Inst45++; } } catch(e) {}
    let result = Object.getOwnPropertySymbols(object);
try { if (Inst42 <= 1000 && typeof (result) != "undefined") {_RecordType("<716,722,43>",(result)); Inst42++; } } catch(e) {}
try { if (Inst46 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<767,775,44>",(shouldBe)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (result.length) != "undefined") {_RecordType("<776,789,44>",(result.length)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (result) != "undefined") {_RecordType("<776,782,44>",(result)); Inst48++; } } catch(e) {}
    shouldBe(result.length, 1);
try { if (Inst49 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<799,807,45>",(shouldBe)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (result[0]) != "undefined") {_RecordType("<808,817,45>",(result[0])); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (result) != "undefined") {_RecordType("<808,814,45>",(result)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<819,834,45>",(Symbol.iterator)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<819,825,45>",(Symbol)); Inst53++; } } catch(e) {}
    shouldBe(result[0], Symbol.iterator);
  }
}

