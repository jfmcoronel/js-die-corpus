var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<9,17,1>",(shouldBe)); Inst0++; } } catch(e) {}
function shouldBe(actual, expected) {
try { if (Inst1 <= 1000 && typeof (actual) != "undefined") {_RecordType("<18,24,1>",(actual)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (expected) != "undefined") {_RecordType("<26,34,1>",(expected)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (actual) != "undefined") {_RecordType("<44,50,2>",(actual)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (expected) != "undefined") {_RecordType("<55,63,2>",(expected)); Inst4++; } } catch(e) {}
  if (actual !== expected) {
try { if (Inst5 <= 1000 && typeof (Error) != "undefined") {_RecordType("<81,86,3>",(Error)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (actual) != "undefined") {_RecordType("<103,109,3>",(actual)); Inst6++; } } catch(e) {}
    throw new Error('bad value: ' + actual);
  }
}

try { if (Inst7 <= 1000 && typeof (testRound) != "undefined") {_RecordType("<128,137,7>",(testRound)); Inst7++; } } catch(e) {}
function testRound(value) {
try { if (Inst8 <= 1000 && typeof (value) != "undefined") {_RecordType("<138,143,7>",(value)); Inst8++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (Math.round) != "undefined") {_RecordType("<156,166,8>",(Math.round)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Math) != "undefined") {_RecordType("<156,160,8>",(Math)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (value) != "undefined") {_RecordType("<167,172,8>",(value)); Inst11++; } } catch(e) {}
  return Math.round(value);
}

try { if (Inst12 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<178,186,11>",(noInline)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (testRound) != "undefined") {_RecordType("<187,196,11>",(testRound)); Inst13++; } } catch(e) {}
noInline(testRound);

try { if (Inst14 <= 1000 && typeof (testFloor) != "undefined") {_RecordType("<209,218,13>",(testFloor)); Inst14++; } } catch(e) {}
function testFloor(value) {
try { if (Inst15 <= 1000 && typeof (value) != "undefined") {_RecordType("<219,224,13>",(value)); Inst15++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (Math.floor) != "undefined") {_RecordType("<237,247,14>",(Math.floor)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Math) != "undefined") {_RecordType("<237,241,14>",(Math)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (value) != "undefined") {_RecordType("<248,253,14>",(value)); Inst18++; } } catch(e) {}
  return Math.floor(value);
}

try { if (Inst19 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<259,267,17>",(noInline)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (testFloor) != "undefined") {_RecordType("<268,277,17>",(testFloor)); Inst20++; } } catch(e) {}
noInline(testFloor);

try { if (Inst21 <= 1000 && typeof (testCeil) != "undefined") {_RecordType("<290,298,19>",(testCeil)); Inst21++; } } catch(e) {}
function testCeil(value) {
try { if (Inst22 <= 1000 && typeof (value) != "undefined") {_RecordType("<299,304,19>",(value)); Inst22++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (Math.ceil) != "undefined") {_RecordType("<317,326,20>",(Math.ceil)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (Math) != "undefined") {_RecordType("<317,321,20>",(Math)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (value) != "undefined") {_RecordType("<327,332,20>",(value)); Inst25++; } } catch(e) {}
  return Math.ceil(value);
}

try { if (Inst26 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<338,346,23>",(noInline)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (testCeil) != "undefined") {_RecordType("<347,355,23>",(testCeil)); Inst27++; } } catch(e) {}
noInline(testCeil);

try { if (Inst28 <= 1000 && typeof (testTrunc) != "undefined") {_RecordType("<368,377,25>",(testTrunc)); Inst28++; } } catch(e) {}
function testTrunc(value) {
try { if (Inst29 <= 1000 && typeof (value) != "undefined") {_RecordType("<378,383,25>",(value)); Inst29++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (Math.trunc) != "undefined") {_RecordType("<396,406,26>",(Math.trunc)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (Math) != "undefined") {_RecordType("<396,400,26>",(Math)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (value) != "undefined") {_RecordType("<407,412,26>",(value)); Inst32++; } } catch(e) {}
  return Math.trunc(value);
}

try { if (Inst33 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<418,426,29>",(noInline)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (testTrunc) != "undefined") {_RecordType("<427,436,29>",(testTrunc)); Inst34++; } } catch(e) {}
noInline(testTrunc);

for (var i = 0; i < 1e4; ++i) {
try { if (Inst35 <= 1000 && typeof (i) != "undefined") {_RecordType("<449,450,31>",(i)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (i) != "undefined") {_RecordType("<456,457,31>",(i)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (i) != "undefined") {_RecordType("<467,468,31>",(i)); Inst37++; } } catch(e) {}
try { if (Inst38 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<474,482,32>",(shouldBe)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (testRound) != "undefined") {_RecordType("<483,492,32>",(testRound)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<493,501,32>",(Infinity)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<504,512,32>",(Infinity)); Inst41++; } } catch(e) {}
  shouldBe(testRound(Infinity), Infinity);
try { if (Inst42 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<517,525,33>",(shouldBe)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (testRound) != "undefined") {_RecordType("<526,535,33>",(testRound)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<537,545,33>",(Infinity)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<549,557,33>",(Infinity)); Inst45++; } } catch(e) {}
  shouldBe(testRound(-Infinity), -Infinity);
try { if (Inst46 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<562,570,34>",(shouldBe)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (testFloor) != "undefined") {_RecordType("<571,580,34>",(testFloor)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<581,589,34>",(Infinity)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<592,600,34>",(Infinity)); Inst49++; } } catch(e) {}
  shouldBe(testFloor(Infinity), Infinity);
try { if (Inst50 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<605,613,35>",(shouldBe)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (testFloor) != "undefined") {_RecordType("<614,623,35>",(testFloor)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<625,633,35>",(Infinity)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<637,645,35>",(Infinity)); Inst53++; } } catch(e) {}
  shouldBe(testFloor(-Infinity), -Infinity);
try { if (Inst54 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<650,658,36>",(shouldBe)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (testCeil) != "undefined") {_RecordType("<659,667,36>",(testCeil)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<668,676,36>",(Infinity)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<679,687,36>",(Infinity)); Inst57++; } } catch(e) {}
  shouldBe(testCeil(Infinity), Infinity);
try { if (Inst58 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<692,700,37>",(shouldBe)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (testCeil) != "undefined") {_RecordType("<701,709,37>",(testCeil)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<711,719,37>",(Infinity)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<723,731,37>",(Infinity)); Inst61++; } } catch(e) {}
  shouldBe(testCeil(-Infinity), -Infinity);
try { if (Inst62 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<736,744,38>",(shouldBe)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (testTrunc) != "undefined") {_RecordType("<745,754,38>",(testTrunc)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<755,763,38>",(Infinity)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<766,774,38>",(Infinity)); Inst65++; } } catch(e) {}
  shouldBe(testTrunc(Infinity), Infinity);
try { if (Inst66 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<779,787,39>",(shouldBe)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (testTrunc) != "undefined") {_RecordType("<788,797,39>",(testTrunc)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<799,807,39>",(Infinity)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<811,819,39>",(Infinity)); Inst69++; } } catch(e) {}
  shouldBe(testTrunc(-Infinity), -Infinity);
}

