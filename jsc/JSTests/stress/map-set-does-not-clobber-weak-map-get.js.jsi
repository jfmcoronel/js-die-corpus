var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<9,17,1>",(shouldBe)); Inst0++; } } catch(e) {}
function shouldBe(actual, expected) {
try { if (Inst1 <= 1000 && typeof (actual) != "undefined") {_RecordType("<18,24,1>",(actual)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (expected) != "undefined") {_RecordType("<26,34,1>",(expected)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (actual) != "undefined") {_RecordType("<44,50,2>",(actual)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (expected) != "undefined") {_RecordType("<55,63,2>",(expected)); Inst4++; } } catch(e) {}
  if (actual !== expected) {
try { if (Inst5 <= 1000 && typeof (Error) != "undefined") {_RecordType("<81,86,3>",(Error)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (actual) != "undefined") {_RecordType("<103,109,3>",(actual)); Inst6++; } } catch(e) {}
    throw new Error('bad value: ' + actual);
  }
}

try { if (Inst7 <= 1000 && typeof (test) != "undefined") {_RecordType("<128,132,7>",(test)); Inst7++; } } catch(e) {}
function test() {
try { if (Inst9 <= 1000 && typeof (Map) != "undefined") {_RecordType("<153,156,8>",(Map)); Inst9++; } } catch(e) {}
  var map = new Map();
try { if (Inst8 <= 1000 && typeof (map) != "undefined") {_RecordType("<143,146,8>",(map)); Inst8++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (WeakMap) != "undefined") {_RecordType("<180,187,9>",(WeakMap)); Inst11++; } } catch(e) {}
  var weakMap = new WeakMap();
try { if (Inst10 <= 1000 && typeof (weakMap) != "undefined") {_RecordType("<166,173,9>",(weakMap)); Inst10++; } } catch(e) {}
  var key = {};
try { if (Inst12 <= 1000 && typeof (key) != "undefined") {_RecordType("<197,200,10>",(key)); Inst12++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (weakMap.get) != "undefined") {_RecordType("<220,231,11>",(weakMap.get)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (weakMap) != "undefined") {_RecordType("<220,227,11>",(weakMap)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (key) != "undefined") {_RecordType("<232,235,11>",(key)); Inst16++; } } catch(e) {}
  var res1 = weakMap.get(key);
try { if (Inst13 <= 1000 && typeof (res1) != "undefined") {_RecordType("<213,217,11>",(res1)); Inst13++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (map.set) != "undefined") {_RecordType("<240,247,12>",(map.set)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (map) != "undefined") {_RecordType("<240,243,12>",(map)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (key) != "undefined") {_RecordType("<248,251,12>",(key)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (key) != "undefined") {_RecordType("<253,256,12>",(key)); Inst20++; } } catch(e) {}
  map.set(key, key);
try { if (Inst22 <= 1000 && typeof (weakMap.get) != "undefined") {_RecordType("<272,283,13>",(weakMap.get)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (weakMap) != "undefined") {_RecordType("<272,279,13>",(weakMap)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (key) != "undefined") {_RecordType("<284,287,13>",(key)); Inst24++; } } catch(e) {}
  var res2 = weakMap.get(key);
try { if (Inst21 <= 1000 && typeof (res2) != "undefined") {_RecordType("<265,269,13>",(res2)); Inst21++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (weakMap.set) != "undefined") {_RecordType("<292,303,14>",(weakMap.set)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (weakMap) != "undefined") {_RecordType("<292,299,14>",(weakMap)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (key) != "undefined") {_RecordType("<304,307,14>",(key)); Inst27++; } } catch(e) {}
  weakMap.set(key, 42);
try { if (Inst29 <= 1000 && typeof (weakMap.get) != "undefined") {_RecordType("<327,338,15>",(weakMap.get)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (weakMap) != "undefined") {_RecordType("<327,334,15>",(weakMap)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (key) != "undefined") {_RecordType("<339,342,15>",(key)); Inst31++; } } catch(e) {}
  var res3 = weakMap.get(key);
try { if (Inst28 <= 1000 && typeof (res3) != "undefined") {_RecordType("<320,324,15>",(res3)); Inst28++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<355,364,16>",(undefined)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<366,375,16>",(undefined)); Inst33++; } } catch(e) {}
  return [undefined, undefined, 42];
}

for (var i = 0; i < 1e5; ++i) {
try { if (Inst34 <= 1000 && typeof (i) != "undefined") {_RecordType("<394,395,19>",(i)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (i) != "undefined") {_RecordType("<401,402,19>",(i)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (i) != "undefined") {_RecordType("<412,413,19>",(i)); Inst36++; } } catch(e) {}
try { if (Inst40 <= 1000 && typeof (test) != "undefined") {_RecordType("<444,448,20>",(test)); Inst40++; } } catch(e) {}
  var [res1, res2, res3] = test();
try { if (Inst37 <= 1000 && typeof (res1) != "undefined") {_RecordType("<424,428,20>",(res1)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (res2) != "undefined") {_RecordType("<430,434,20>",(res2)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (res3) != "undefined") {_RecordType("<436,440,20>",(res3)); Inst39++; } } catch(e) {}
try { if (Inst41 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<454,462,21>",(shouldBe)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (res1) != "undefined") {_RecordType("<463,467,21>",(res1)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<469,478,21>",(undefined)); Inst43++; } } catch(e) {}
  shouldBe(res1, undefined);
try { if (Inst44 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<483,491,22>",(shouldBe)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (res2) != "undefined") {_RecordType("<492,496,22>",(res2)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<498,507,22>",(undefined)); Inst46++; } } catch(e) {}
  shouldBe(res2, undefined);
try { if (Inst47 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<512,520,23>",(shouldBe)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (res3) != "undefined") {_RecordType("<521,525,23>",(res3)); Inst48++; } } catch(e) {}
  shouldBe(res3, 42);
}

