var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//@ runFTLNoCJIT("--maxPerThreadStackUsage=400000")
try { if (Inst0 <= 1000 && typeof (runNearStackLimit) != "undefined") {_RecordType("<61,78,2>",(runNearStackLimit)); Inst0++; } } catch(e) {}
function runNearStackLimit(f) {
try { if (Inst1 <= 1000 && typeof (f) != "undefined") {_RecordType("<79,80,2>",(f)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (t) != "undefined") {_RecordType("<95,96,3>",(t)); Inst2++; } } catch(e) {}
  function t() {
try { if (Inst4 <= 1000 && typeof (e) != "undefined") {_RecordType("<142,143,6>",(e)); Inst4++; } } catch(e) {}
    try {
try { if (Inst3 <= 1000 && typeof (t) != "undefined") {_RecordType("<124,125,5>",(t)); Inst3++; } } catch(e) {}
      return t();
    } catch (e) {
try { if (Inst5 <= 1000 && typeof (f) != "undefined") {_RecordType("<160,161,7>",(f)); Inst5++; } } catch(e) {}
      return f();
    }
  }

try { if (Inst6 <= 1000 && typeof (t) != "undefined") {_RecordType("<185,186,11>",(t)); Inst6++; } } catch(e) {}
  return t();
}

try { if (Inst7 <= 1000 && typeof (foo) != "undefined") {_RecordType("<202,205,14>",(foo)); Inst7++; } } catch(e) {}
function foo(a, b) {
try { if (Inst8 <= 1000 && typeof (a) != "undefined") {_RecordType("<206,207,14>",(a)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (b) != "undefined") {_RecordType("<209,210,14>",(b)); Inst9++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (b) != "undefined") {_RecordType("<236,237,16>",(b)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (a) != "undefined") {_RecordType("<245,246,16>",(a)); Inst11++; } } catch(e) {}
  return [{
    name: b + "" + a
  }];
}

var exception;
try { if (Inst12 <= 1000 && typeof (exception) != "undefined") {_RecordType("<260,269,20>",(exception)); Inst12++; } } catch(e) {}

try { if (Inst20 <= 1000 && typeof (e) != "undefined") {_RecordType("<394,395,26>",(e)); Inst20++; } } catch(e) {}
try {
try { if (Inst14 <= 1000 && typeof ([].concat) != "undefined") {_RecordType("<292,301,23>",([].concat)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (foo) != "undefined") {_RecordType("<302,305,23>",(foo)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (runNearStackLimit) != "undefined") {_RecordType("<314,331,23>",(runNearStackLimit)); Inst16++; } } catch(e) {}
  __v_25012 = [].concat(foo(1, []), runNearStackLimit(() => {
try { if (Inst17 <= 1000 && typeof (foo) != "undefined") {_RecordType("<351,354,24>",(foo)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Symbol.search) != "undefined") {_RecordType("<362,375,24>",(Symbol.search)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<362,368,24>",(Symbol)); Inst19++; } } catch(e) {}
    return foo("bla", Symbol.search);
  }));
try { if (Inst13 <= 1000 && typeof (__v_25012) != "undefined") {_RecordType("<280,289,23>",(__v_25012)); Inst13++; } } catch(e) {}
} catch (e) {
try { if (Inst22 <= 1000 && typeof (e) != "undefined") {_RecordType("<413,414,27>",(e)); Inst22++; } } catch(e) {}
  exception = e;
try { if (Inst21 <= 1000 && typeof (exception) != "undefined") {_RecordType("<401,410,27>",(exception)); Inst21++; } } catch(e) {}
}

