var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<9,17,1>",(shouldBe)); Inst0++; } } catch(e) {}
function shouldBe(actual, expected) {
try { if (Inst1 <= 1000 && typeof (actual) != "undefined") {_RecordType("<18,24,1>",(actual)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (expected) != "undefined") {_RecordType("<26,34,1>",(expected)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (actual) != "undefined") {_RecordType("<44,50,2>",(actual)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (expected) != "undefined") {_RecordType("<55,63,2>",(expected)); Inst4++; } } catch(e) {}
  if (actual !== expected) {
try { if (Inst5 <= 1000 && typeof (Error) != "undefined") {_RecordType("<81,86,3>",(Error)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (actual) != "undefined") {_RecordType("<103,109,3>",(actual)); Inst6++; } } catch(e) {}
    throw new Error('bad value: ' + actual);
  }
}

try { if (Inst7 <= 1000 && typeof (test) != "undefined") {_RecordType("<128,132,7>",(test)); Inst7++; } } catch(e) {}
function test() {
try { if (Inst9 <= 1000 && typeof (Map) != "undefined") {_RecordType("<153,156,8>",(Map)); Inst9++; } } catch(e) {}
  var map = new Map();
try { if (Inst8 <= 1000 && typeof (map) != "undefined") {_RecordType("<143,146,8>",(map)); Inst8++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (map.get) != "undefined") {_RecordType("<173,180,9>",(map.get)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (map) != "undefined") {_RecordType("<173,176,9>",(map)); Inst12++; } } catch(e) {}
  var res1 = map.get(42);
try { if (Inst10 <= 1000 && typeof (res1) != "undefined") {_RecordType("<166,170,9>",(res1)); Inst10++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (map.set) != "undefined") {_RecordType("<188,195,10>",(map.set)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (map) != "undefined") {_RecordType("<188,191,10>",(map)); Inst14++; } } catch(e) {}
  map.set(42, 20);
try { if (Inst16 <= 1000 && typeof (map.get) != "undefined") {_RecordType("<218,225,11>",(map.get)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (map) != "undefined") {_RecordType("<218,221,11>",(map)); Inst17++; } } catch(e) {}
  var res2 = map.get(42);
try { if (Inst15 <= 1000 && typeof (res2) != "undefined") {_RecordType("<211,215,11>",(res2)); Inst15++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (map.set) != "undefined") {_RecordType("<233,240,12>",(map.set)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (map) != "undefined") {_RecordType("<233,236,12>",(map)); Inst19++; } } catch(e) {}
  map.set(42, 400);
try { if (Inst21 <= 1000 && typeof (map.get) != "undefined") {_RecordType("<264,271,13>",(map.get)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (map) != "undefined") {_RecordType("<264,267,13>",(map)); Inst22++; } } catch(e) {}
  var res3 = map.get(42);
try { if (Inst20 <= 1000 && typeof (res3) != "undefined") {_RecordType("<257,261,13>",(res3)); Inst20++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (res1) != "undefined") {_RecordType("<287,291,14>",(res1)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (res2) != "undefined") {_RecordType("<293,297,14>",(res2)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (res3) != "undefined") {_RecordType("<299,303,14>",(res3)); Inst25++; } } catch(e) {}
  return [res1, res2, res3];
}

try { if (Inst26 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<309,317,17>",(noInline)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (test) != "undefined") {_RecordType("<318,322,17>",(test)); Inst27++; } } catch(e) {}
noInline(test);

for (var i = 0; i < 1e5; ++i) {
try { if (Inst28 <= 1000 && typeof (i) != "undefined") {_RecordType("<335,336,19>",(i)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (i) != "undefined") {_RecordType("<342,343,19>",(i)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (i) != "undefined") {_RecordType("<353,354,19>",(i)); Inst30++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof (test) != "undefined") {_RecordType("<385,389,20>",(test)); Inst34++; } } catch(e) {}
  var [res1, res2, res3] = test();
try { if (Inst31 <= 1000 && typeof (res1) != "undefined") {_RecordType("<365,369,20>",(res1)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (res2) != "undefined") {_RecordType("<371,375,20>",(res2)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (res3) != "undefined") {_RecordType("<377,381,20>",(res3)); Inst33++; } } catch(e) {}
try { if (Inst35 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<395,403,21>",(shouldBe)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (res1) != "undefined") {_RecordType("<404,408,21>",(res1)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<410,419,21>",(undefined)); Inst37++; } } catch(e) {}
  shouldBe(res1, undefined);
try { if (Inst38 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<424,432,22>",(shouldBe)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (res2) != "undefined") {_RecordType("<433,437,22>",(res2)); Inst39++; } } catch(e) {}
  shouldBe(res2, 20);
try { if (Inst40 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<446,454,23>",(shouldBe)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (res3) != "undefined") {_RecordType("<455,459,23>",(res3)); Inst41++; } } catch(e) {}
  shouldBe(res3, 400);
}

