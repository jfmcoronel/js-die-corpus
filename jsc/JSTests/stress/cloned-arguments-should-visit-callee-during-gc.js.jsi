var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Test that the ClonedArguments created by the Function.arguments will properly
// keep its callee alive.  This test should not crash and should not print any error
// messages.
var cachedArguments = [];
try { if (Inst0 <= 1000 && typeof (cachedArguments) != "undefined") {_RecordType("<183,198,4>",(cachedArguments)); Inst0++; } } catch(e) {}
var numberOfEntries = 1000;
try { if (Inst1 <= 1000 && typeof (numberOfEntries) != "undefined") {_RecordType("<209,224,5>",(numberOfEntries)); Inst1++; } } catch(e) {}

try { if (Inst2 <= 1000 && typeof (makeTransientFunction) != "undefined") {_RecordType("<243,264,7>",(makeTransientFunction)); Inst2++; } } catch(e) {}
function makeTransientFunction(i) {
try { if (Inst3 <= 1000 && typeof (i) != "undefined") {_RecordType("<265,266,7>",(i)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (transientFunc) != "undefined") {_RecordType("<281,294,8>",(transientFunc)); Inst4++; } } catch(e) {}
  function transientFunc() {
try { if (Inst7 <= 1000 && typeof (transientFunc.arguments) != "undefined") {_RecordType("<324,347,9>",(transientFunc.arguments)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (transientFunc) != "undefined") {_RecordType("<324,337,9>",(transientFunc)); Inst8++; } } catch(e) {}
    cachedArguments[i] = transientFunc.arguments;
try { if (Inst5 <= 1000 && typeof (cachedArguments[i]) != "undefined") {_RecordType("<303,321,9>",(cachedArguments[i])); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (cachedArguments) != "undefined") {_RecordType("<303,318,9>",(cachedArguments)); Inst6++; } } catch(e) {}
  }

try { if (Inst9 <= 1000 && typeof (transientFunc) != "undefined") {_RecordType("<363,376,12>",(transientFunc)); Inst9++; } } catch(e) {}
  return transientFunc;
}

for (i = 0; i < numberOfEntries; i++) {
try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<386,387,15>",(i)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<393,394,15>",(i)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (numberOfEntries) != "undefined") {_RecordType("<397,412,15>",(numberOfEntries)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<414,415,15>",(i)); Inst13++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (makeTransientFunction) != "undefined") {_RecordType("<443,464,16>",(makeTransientFunction)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<465,466,16>",(i)); Inst16++; } } catch(e) {}
  var transientFunc = makeTransientFunction(i);
try { if (Inst14 <= 1000 && typeof (transientFunc) != "undefined") {_RecordType("<427,440,16>",(transientFunc)); Inst14++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (transientFunc) != "undefined") {_RecordType("<471,484,17>",(transientFunc)); Inst17++; } } catch(e) {}
  transientFunc(); // At this point, the only reference to the transient function is from
  // cachedArguments[i].callee.
}

try { if (Inst18 <= 1000 && typeof (gc) != "undefined") {_RecordType("<594,596,21>",(gc)); Inst18++; } } catch(e) {}
gc(); // Allocate a bunch of memory to stomp over the transient functions that may have been
// erroneously collected. webkit.org/b/145709

for (i = 0; i < numberOfEntries; i++) {
try { if (Inst19 <= 1000 && typeof (i) != "undefined") {_RecordType("<739,740,24>",(i)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<746,747,24>",(i)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (numberOfEntries) != "undefined") {_RecordType("<750,765,24>",(numberOfEntries)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<767,768,24>",(i)); Inst22++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (Object) != "undefined") {_RecordType("<780,786,25>",(Object)); Inst23++; } } catch(e) {}
  new Object();
}

for (i = 0; i < numberOfEntries; i++) {
try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<798,799,28>",(i)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<805,806,28>",(i)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (numberOfEntries) != "undefined") {_RecordType("<809,824,28>",(numberOfEntries)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (i) != "undefined") {_RecordType("<826,827,28>",(i)); Inst27++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (cachedArguments[i].callee) != "undefined") {_RecordType("<848,873,29>",(cachedArguments[i].callee)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (cachedArguments[i]) != "undefined") {_RecordType("<848,866,29>",(cachedArguments[i])); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (cachedArguments) != "undefined") {_RecordType("<848,863,29>",(cachedArguments)); Inst31++; } } catch(e) {}
  var callee = cachedArguments[i].callee;
try { if (Inst28 <= 1000 && typeof (callee) != "undefined") {_RecordType("<839,845,29>",(callee)); Inst28++; } } catch(e) {}

try { if (Inst32 <= 1000 && typeof (callee) != "undefined") {_RecordType("<889,895,31>",(callee)); Inst32++; } } catch(e) {}
  if (typeof callee != "function") {
try { if (Inst33 <= 1000 && typeof (print) != "undefined") {_RecordType("<917,922,32>",(print)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (callee) != "undefined") {_RecordType("<945,951,32>",(callee)); Inst34++; } } catch(e) {}
    print("ERROR: callee is " + callee);
  }
}

