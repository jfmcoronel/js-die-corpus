var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
{
try { if (Inst1 <= 1000 && typeof (ArrayBuffer) != "undefined") {_RecordType("<21,32,2>",(ArrayBuffer)); Inst1++; } } catch(e) {}
  let buffer = new ArrayBuffer(10);
try { if (Inst0 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<8,14,2>",(buffer)); Inst0++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (DataView) != "undefined") {_RecordType("<55,63,3>",(DataView)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<64,70,3>",(buffer)); Inst4++; } } catch(e) {}
  let view = new DataView(buffer);
try { if (Inst2 <= 1000 && typeof (view) != "undefined") {_RecordType("<44,48,3>",(view)); Inst2++; } } catch(e) {}

try { if (Inst5 <= 1000 && typeof (view.byteOffset) != "undefined") {_RecordType("<80,95,5>",(view.byteOffset)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (view) != "undefined") {_RecordType("<80,84,5>",(view)); Inst6++; } } catch(e) {}
  if (view.byteOffset !== 0) {
    throw "byteoffest should be 0";
  }

try { if (Inst7 <= 1000 && typeof (view.byteLength) != "undefined") {_RecordType("<152,167,9>",(view.byteLength)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (view) != "undefined") {_RecordType("<152,156,9>",(view)); Inst8++; } } catch(e) {}
  if (view.byteLength !== 10) {
    throw "byteLength should be 0";
  }

try { if (Inst9 <= 1000 && typeof (view.buffer) != "undefined") {_RecordType("<225,236,13>",(view.buffer)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (view) != "undefined") {_RecordType("<225,229,13>",(view)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<241,247,13>",(buffer)); Inst11++; } } catch(e) {}
  if (view.buffer !== buffer) {
    throw "buffer should be the incomming buffer";
  }

try { if (Inst13 <= 1000 && typeof (DataView) != "undefined") {_RecordType("<320,328,17>",(DataView)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<329,335,17>",(buffer)); Inst14++; } } catch(e) {}
  view = new DataView(buffer, 1, 1);
try { if (Inst12 <= 1000 && typeof (view) != "undefined") {_RecordType("<309,313,17>",(view)); Inst12++; } } catch(e) {}

try { if (Inst15 <= 1000 && typeof (view.byteOffset) != "undefined") {_RecordType("<351,366,19>",(view.byteOffset)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (view) != "undefined") {_RecordType("<351,355,19>",(view)); Inst16++; } } catch(e) {}
  if (view.byteOffset !== 1) {
    throw "byteoffest should be 0";
  }

try { if (Inst17 <= 1000 && typeof (view.byteLength) != "undefined") {_RecordType("<423,438,23>",(view.byteLength)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (view) != "undefined") {_RecordType("<423,427,23>",(view)); Inst18++; } } catch(e) {}
  if (view.byteLength !== 1) {
    throw "byteLength should be 0";
  }

try { if (Inst19 <= 1000 && typeof (view.buffer) != "undefined") {_RecordType("<495,506,27>",(view.buffer)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (view) != "undefined") {_RecordType("<495,499,27>",(view)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<511,517,27>",(buffer)); Inst21++; } } catch(e) {}
  if (view.buffer !== buffer) {
    throw "buffer should be the incomming buffer";
  }
}

