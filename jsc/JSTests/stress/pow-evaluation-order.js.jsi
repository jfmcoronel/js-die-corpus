var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright (C) 2016 Rick Waldron. All rights reserved.
// This code is governed by the BSD license found in the LICENSE file.
try { if (Inst0 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<137,145,3>",(shouldBe)); Inst0++; } } catch(e) {}
function shouldBe(actual, expected) {
try { if (Inst1 <= 1000 && typeof (actual) != "undefined") {_RecordType("<146,152,3>",(actual)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (expected) != "undefined") {_RecordType("<154,162,3>",(expected)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (actual) != "undefined") {_RecordType("<172,178,4>",(actual)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (expected) != "undefined") {_RecordType("<183,191,4>",(expected)); Inst4++; } } catch(e) {}
  if (actual !== expected) {
try { if (Inst5 <= 1000 && typeof (Error) != "undefined") {_RecordType("<209,214,5>",(Error)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (actual) != "undefined") {_RecordType("<231,237,5>",(actual)); Inst6++; } } catch(e) {}
    throw new Error('bad value: ' + actual);
  }
}

{
  let capture = [];
try { if (Inst7 <= 1000 && typeof (capture) != "undefined") {_RecordType("<255,262,10>",(capture)); Inst7++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (valueOf) != "undefined") {_RecordType("<293,300,12>",(valueOf)); Inst9++; } } catch(e) {}
  let leftValue = {
    valueOf() {
try { if (Inst10 <= 1000 && typeof (capture.push) != "undefined") {_RecordType("<311,323,13>",(capture.push)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (capture) != "undefined") {_RecordType("<311,318,13>",(capture)); Inst11++; } } catch(e) {}
      capture.push("leftValue");
      return 3;
    }

  };
try { if (Inst8 <= 1000 && typeof (leftValue) != "undefined") {_RecordType("<275,284,11>",(leftValue)); Inst8++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (valueOf) != "undefined") {_RecordType("<391,398,19>",(valueOf)); Inst13++; } } catch(e) {}
  let rightValue = {
    valueOf() {
try { if (Inst14 <= 1000 && typeof (capture.push) != "undefined") {_RecordType("<409,421,20>",(capture.push)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (capture) != "undefined") {_RecordType("<409,416,20>",(capture)); Inst15++; } } catch(e) {}
      capture.push("rightValue");
      return 2;
    }

  };
try { if (Inst12 <= 1000 && typeof (rightValue) != "undefined") {_RecordType("<372,382,18>",(rightValue)); Inst12++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (capture.push) != "undefined") {_RecordType("<468,480,25>",(capture.push)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (capture) != "undefined") {_RecordType("<468,475,25>",(capture)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (leftValue) != "undefined") {_RecordType("<490,499,25>",(leftValue)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (capture.push) != "undefined") {_RecordType("<506,518,25>",(capture.push)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (capture) != "undefined") {_RecordType("<506,513,25>",(capture)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (rightValue) != "undefined") {_RecordType("<529,539,25>",(rightValue)); Inst21++; } } catch(e) {}
  (capture.push("left"), leftValue) ** +(capture.push("right"), rightValue); //                                       ^
  //                                Changes the order
  // Expected per operator evaluation order: "left", "right", "rightValue", "leftValue"

try { if (Inst22 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<730,738,29>",(shouldBe)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (capture[0]) != "undefined") {_RecordType("<739,749,29>",(capture[0])); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (capture) != "undefined") {_RecordType("<739,746,29>",(capture)); Inst24++; } } catch(e) {}
  shouldBe(capture[0], "left");
try { if (Inst25 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<762,770,30>",(shouldBe)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (capture[1]) != "undefined") {_RecordType("<771,781,30>",(capture[1])); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (capture) != "undefined") {_RecordType("<771,778,30>",(capture)); Inst27++; } } catch(e) {}
  shouldBe(capture[1], "right");
try { if (Inst28 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<795,803,31>",(shouldBe)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (capture[2]) != "undefined") {_RecordType("<804,814,31>",(capture[2])); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (capture) != "undefined") {_RecordType("<804,811,31>",(capture)); Inst30++; } } catch(e) {}
  shouldBe(capture[2], "rightValue");
try { if (Inst31 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<833,841,32>",(shouldBe)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (capture[3]) != "undefined") {_RecordType("<842,852,32>",(capture[3])); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (capture) != "undefined") {_RecordType("<842,849,32>",(capture)); Inst33++; } } catch(e) {}
  shouldBe(capture[3], "leftValue");
}
{
  let capture = [];
try { if (Inst34 <= 1000 && typeof (capture) != "undefined") {_RecordType("<878,885,35>",(capture)); Inst34++; } } catch(e) {}
try { if (Inst36 <= 1000 && typeof (valueOf) != "undefined") {_RecordType("<916,923,37>",(valueOf)); Inst36++; } } catch(e) {}
  let leftValue = {
    valueOf() {
try { if (Inst37 <= 1000 && typeof (capture.push) != "undefined") {_RecordType("<934,946,38>",(capture.push)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (capture) != "undefined") {_RecordType("<934,941,38>",(capture)); Inst38++; } } catch(e) {}
      capture.push("leftValue");
      return 3;
    }

  };
try { if (Inst35 <= 1000 && typeof (leftValue) != "undefined") {_RecordType("<898,907,36>",(leftValue)); Inst35++; } } catch(e) {}
try { if (Inst40 <= 1000 && typeof (valueOf) != "undefined") {_RecordType("<1014,1021,44>",(valueOf)); Inst40++; } } catch(e) {}
  let rightValue = {
    valueOf() {
try { if (Inst41 <= 1000 && typeof (capture.push) != "undefined") {_RecordType("<1032,1044,45>",(capture.push)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (capture) != "undefined") {_RecordType("<1032,1039,45>",(capture)); Inst42++; } } catch(e) {}
      capture.push("rightValue");
      return 2;
    }

  };
try { if (Inst39 <= 1000 && typeof (rightValue) != "undefined") {_RecordType("<995,1005,43>",(rightValue)); Inst39++; } } catch(e) {}
try { if (Inst43 <= 1000 && typeof (capture.push) != "undefined") {_RecordType("<1093,1105,50>",(capture.push)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (capture) != "undefined") {_RecordType("<1093,1100,50>",(capture)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (leftValue) != "undefined") {_RecordType("<1115,1124,50>",(leftValue)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (capture.push) != "undefined") {_RecordType("<1131,1143,50>",(capture.push)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (capture) != "undefined") {_RecordType("<1131,1138,50>",(capture)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (rightValue) != "undefined") {_RecordType("<1154,1164,50>",(rightValue)); Inst48++; } } catch(e) {}
  (+(capture.push("left"), leftValue)) ** (capture.push("right"), rightValue); //   ^
  //   Changes the order
  // Expected per operator evaluation order: "left", "right", "rightValue", "leftValue"

try { if (Inst49 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<1290,1298,54>",(shouldBe)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (capture[0]) != "undefined") {_RecordType("<1299,1309,54>",(capture[0])); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (capture) != "undefined") {_RecordType("<1299,1306,54>",(capture)); Inst51++; } } catch(e) {}
  shouldBe(capture[0], "left");
try { if (Inst52 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<1322,1330,55>",(shouldBe)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (capture[1]) != "undefined") {_RecordType("<1331,1341,55>",(capture[1])); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (capture) != "undefined") {_RecordType("<1331,1338,55>",(capture)); Inst54++; } } catch(e) {}
  shouldBe(capture[1], "leftValue");
try { if (Inst55 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<1359,1367,56>",(shouldBe)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (capture[2]) != "undefined") {_RecordType("<1368,1378,56>",(capture[2])); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (capture) != "undefined") {_RecordType("<1368,1375,56>",(capture)); Inst57++; } } catch(e) {}
  shouldBe(capture[2], "right");
try { if (Inst58 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<1392,1400,57>",(shouldBe)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (capture[3]) != "undefined") {_RecordType("<1401,1411,57>",(capture[3])); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (capture) != "undefined") {_RecordType("<1401,1408,57>",(capture)); Inst60++; } } catch(e) {}
  shouldBe(capture[3], "rightValue");
}

