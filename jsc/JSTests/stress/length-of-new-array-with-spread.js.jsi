var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (foo) != "undefined") {_RecordType("<9,12,1>",(foo)); Inst0++; } } catch(e) {}
function foo() {
  var a = [1, 2];
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<23,24,2>",(a)); Inst1++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof ([...a, 42, ...a].length) != "undefined") {_RecordType("<45,68,3>",([...a, 42, ...a].length)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (a) != "undefined") {_RecordType("<49,50,3>",(a)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (a) != "undefined") {_RecordType("<59,60,3>",(a)); Inst5++; } } catch(e) {}
  var l = [...a, 42, ...a].length;
try { if (Inst2 <= 1000 && typeof (l) != "undefined") {_RecordType("<41,42,3>",(l)); Inst2++; } } catch(e) {}

try { if (Inst6 <= 1000 && typeof (l) != "undefined") {_RecordType("<77,78,5>",(l)); Inst6++; } } catch(e) {}
  if (l != 5) {
try { if (Inst7 <= 1000 && typeof (l) != "undefined") {_RecordType("<123,124,6>",(l)); Inst7++; } } catch(e) {}
    throw "Wrong length in foo: " + l;
  }
}

try { if (Inst8 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<133,141,10>",(noInline)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (foo) != "undefined") {_RecordType("<142,145,10>",(foo)); Inst9++; } } catch(e) {}
noInline(foo);

try { if (Inst10 <= 1000 && typeof (bar) != "undefined") {_RecordType("<158,161,12>",(bar)); Inst10++; } } catch(e) {}
function bar(...b) {
try { if (Inst11 <= 1000 && typeof (b) != "undefined") {_RecordType("<165,166,12>",(b)); Inst11++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof ([...b, 43, ...b].length) != "undefined") {_RecordType("<180,203,13>",([...b, 43, ...b].length)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (b) != "undefined") {_RecordType("<184,185,13>",(b)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (b) != "undefined") {_RecordType("<194,195,13>",(b)); Inst15++; } } catch(e) {}
  var l = [...b, 43, ...b].length;
try { if (Inst12 <= 1000 && typeof (l) != "undefined") {_RecordType("<176,177,13>",(l)); Inst12++; } } catch(e) {}

try { if (Inst16 <= 1000 && typeof (l) != "undefined") {_RecordType("<212,213,15>",(l)); Inst16++; } } catch(e) {}
  if (l != 7) {
try { if (Inst17 <= 1000 && typeof (l) != "undefined") {_RecordType("<258,259,16>",(l)); Inst17++; } } catch(e) {}
    throw "Wrong length in bar: " + l;
  }
}

try { if (Inst18 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<268,276,20>",(noInline)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (bar) != "undefined") {_RecordType("<277,280,20>",(bar)); Inst19++; } } catch(e) {}
noInline(bar);

try { if (Inst20 <= 1000 && typeof (baz) != "undefined") {_RecordType("<293,296,22>",(baz)); Inst20++; } } catch(e) {}
function baz(arg0, ...c) {
try { if (Inst21 <= 1000 && typeof (arg0) != "undefined") {_RecordType("<297,301,22>",(arg0)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (c) != "undefined") {_RecordType("<306,307,22>",(c)); Inst22++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (c) != "undefined") {_RecordType("<325,326,23>",(c)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (c) != "undefined") {_RecordType("<331,332,23>",(c)); Inst25++; } } catch(e) {}
  var x = [...c, ...c];
try { if (Inst23 <= 1000 && typeof (x) != "undefined") {_RecordType("<317,318,23>",(x)); Inst23++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof ([...x, ...x, ...x].length) != "undefined") {_RecordType("<345,370,24>",([...x, ...x, ...x].length)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (x) != "undefined") {_RecordType("<349,350,24>",(x)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (x) != "undefined") {_RecordType("<355,356,24>",(x)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (x) != "undefined") {_RecordType("<361,362,24>",(x)); Inst30++; } } catch(e) {}
  var l = [...x, ...x, ...x].length;
try { if (Inst26 <= 1000 && typeof (l) != "undefined") {_RecordType("<341,342,24>",(l)); Inst26++; } } catch(e) {}

try { if (Inst31 <= 1000 && typeof (l) != "undefined") {_RecordType("<379,380,26>",(l)); Inst31++; } } catch(e) {}
  if (l != 24) {
try { if (Inst32 <= 1000 && typeof (l) != "undefined") {_RecordType("<426,427,27>",(l)); Inst32++; } } catch(e) {}
    throw "Wrong length in baz: " + l;
  }
}

try { if (Inst33 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<436,444,31>",(noInline)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (baz) != "undefined") {_RecordType("<445,448,31>",(baz)); Inst34++; } } catch(e) {}
noInline(baz);

for (var i = 0; i < 10000; ++i) {
try { if (Inst35 <= 1000 && typeof (i) != "undefined") {_RecordType("<461,462,33>",(i)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (i) != "undefined") {_RecordType("<468,469,33>",(i)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (i) != "undefined") {_RecordType("<481,482,33>",(i)); Inst37++; } } catch(e) {}
try { if (Inst38 <= 1000 && typeof (foo) != "undefined") {_RecordType("<488,491,34>",(foo)); Inst38++; } } catch(e) {}
  foo();
try { if (Inst39 <= 1000 && typeof (bar) != "undefined") {_RecordType("<497,500,35>",(bar)); Inst39++; } } catch(e) {}
  bar(1, 2, 3);
try { if (Inst40 <= 1000 && typeof (baz) != "undefined") {_RecordType("<513,516,36>",(baz)); Inst40++; } } catch(e) {}
  baz(0, 1, 2, 3, 4);
}

