var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<9,17,1>",(shouldBe)); Inst0++; } } catch(e) {}
function shouldBe(actual, expected) {
try { if (Inst1 <= 1000 && typeof (actual) != "undefined") {_RecordType("<18,24,1>",(actual)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (expected) != "undefined") {_RecordType("<26,34,1>",(expected)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (actual) != "undefined") {_RecordType("<44,50,2>",(actual)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (expected) != "undefined") {_RecordType("<55,63,2>",(expected)); Inst4++; } } catch(e) {}
  if (actual !== expected) {
try { if (Inst5 <= 1000 && typeof (Error) != "undefined") {_RecordType("<81,86,3>",(Error)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (actual) != "undefined") {_RecordType("<103,109,3>",(actual)); Inst6++; } } catch(e) {}
    throw new Error('bad value: ' + actual);
  }
}

var order = [];
try { if (Inst7 <= 1000 && typeof (order) != "undefined") {_RecordType("<123,128,7>",(order)); Inst7++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<157,172,9>",(Symbol.iterator)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<157,163,9>",(Symbol)); Inst10++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (cocoa) != "undefined") {_RecordType("<310,315,19>",(cocoa)); Inst15++; } } catch(e) {}
var source = {
  get [Symbol.iterator]() {
try { if (Inst11 <= 1000 && typeof (order.push) != "undefined") {_RecordType("<182,192,10>",(order.push)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (order) != "undefined") {_RecordType("<182,187,10>",(order)); Inst12++; } } catch(e) {}
    order.push(`Symbol.iterator`);
    return `Symbol.iterator`;
  },

  get 1() {
try { if (Inst13 <= 1000 && typeof (order.push) != "undefined") {_RecordType("<265,275,15>",(order.push)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (order) != "undefined") {_RecordType("<265,270,15>",(order)); Inst14++; } } catch(e) {}
    order.push(`1`);
    return `1`;
  },

  get cocoa() {
try { if (Inst16 <= 1000 && typeof (order.push) != "undefined") {_RecordType("<324,334,20>",(order.push)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (order) != "undefined") {_RecordType("<324,329,20>",(order)); Inst17++; } } catch(e) {}
    order.push(`cocoa`);
    return `cocoa`;
  }

};
try { if (Inst8 <= 1000 && typeof (source) != "undefined") {_RecordType("<139,145,8>",(source)); Inst8++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (Object.assign) != "undefined") {_RecordType("<386,399,25>",(Object.assign)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (Object) != "undefined") {_RecordType("<386,392,25>",(Object)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (source) != "undefined") {_RecordType("<404,410,25>",(source)); Inst21++; } } catch(e) {}
var result = Object.assign({}, source);
try { if (Inst18 <= 1000 && typeof (result) != "undefined") {_RecordType("<377,383,25>",(result)); Inst18++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<413,421,26>",(shouldBe)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (result[1]) != "undefined") {_RecordType("<422,431,26>",(result[1])); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (result) != "undefined") {_RecordType("<422,428,26>",(result)); Inst24++; } } catch(e) {}
shouldBe(result[1], `1`);
try { if (Inst25 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<439,447,27>",(shouldBe)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (result.cocoa) != "undefined") {_RecordType("<448,460,27>",(result.cocoa)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (result) != "undefined") {_RecordType("<448,454,27>",(result)); Inst27++; } } catch(e) {}
shouldBe(result.cocoa, `cocoa`);
try { if (Inst28 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<472,480,28>",(shouldBe)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (result[Symbol.iterator]) != "undefined") {_RecordType("<481,504,28>",(result[Symbol.iterator])); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (result) != "undefined") {_RecordType("<481,487,28>",(result)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<488,503,28>",(Symbol.iterator)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<488,494,28>",(Symbol)); Inst32++; } } catch(e) {}
shouldBe(result[Symbol.iterator], `Symbol.iterator`);
try { if (Inst33 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<526,534,29>",(shouldBe)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (order.join) != "undefined") {_RecordType("<535,545,29>",(order.join)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (order) != "undefined") {_RecordType("<535,540,29>",(order)); Inst35++; } } catch(e) {}
shouldBe(order.join(','), `1,cocoa,Symbol.iterator`);

