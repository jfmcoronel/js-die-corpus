var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (f) != "undefined") {_RecordType("<9,10,1>",(f)); Inst0++; } } catch(e) {}
function f() {
try { if (Inst2 <= 1000 && typeof (Array(100).fill) != "undefined") {_RecordType("<25,40,2>",(Array(100).fill)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Array) != "undefined") {_RecordType("<25,30,2>",(Array)); Inst3++; } } catch(e) {}
  var a = Array(100).fill(0);
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<21,22,2>",(a)); Inst1++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (Set) != "undefined") {_RecordType("<60,63,3>",(Set)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (a.map) != "undefined") {_RecordType("<64,69,3>",(a.map)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (a) != "undefined") {_RecordType("<64,65,3>",(a)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (v) != "undefined") {_RecordType("<71,72,3>",(v)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (k) != "undefined") {_RecordType("<74,75,3>",(k)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (k) != "undefined") {_RecordType("<80,81,3>",(k)); Inst10++; } } catch(e) {}
  var ta = new Set(a.map((v, k) => k));
try { if (Inst4 <= 1000 && typeof (ta) != "undefined") {_RecordType("<51,53,3>",(ta)); Inst4++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (a) != "undefined") {_RecordType("<97,98,4>",(a)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (ta) != "undefined") {_RecordType("<100,102,4>",(ta)); Inst13++; } } catch(e) {}
  var xs = [a, ta];
try { if (Inst11 <= 1000 && typeof (xs) != "undefined") {_RecordType("<91,93,4>",(xs)); Inst11++; } } catch(e) {}
  var q = 0;
try { if (Inst14 <= 1000 && typeof (q) != "undefined") {_RecordType("<111,112,5>",(q)); Inst14++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (Date.now) != "undefined") {_RecordType("<128,136,6>",(Date.now)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Date) != "undefined") {_RecordType("<128,132,6>",(Date)); Inst17++; } } catch(e) {}
  var t = Date.now();
try { if (Inst15 <= 1000 && typeof (t) != "undefined") {_RecordType("<124,125,6>",(t)); Inst15++; } } catch(e) {}

  for (var i = 0; i < 100000; ++i) {
try { if (Inst18 <= 1000 && typeof (i) != "undefined") {_RecordType("<152,153,8>",(i)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (i) != "undefined") {_RecordType("<159,160,8>",(i)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<173,174,8>",(i)); Inst20++; } } catch(e) {}
    for (var x of xs[i & 1]) {
try { if (Inst21 <= 1000 && typeof (x) != "undefined") {_RecordType("<191,192,9>",(x)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (xs[i & 1]) != "undefined") {_RecordType("<196,205,9>",(xs[i & 1])); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (xs) != "undefined") {_RecordType("<196,198,9>",(xs)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<199,200,9>",(i)); Inst24++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (x) != "undefined") {_RecordType("<220,221,10>",(x)); Inst26++; } } catch(e) {}
      q += x;
try { if (Inst25 <= 1000 && typeof (q) != "undefined") {_RecordType("<215,216,10>",(q)); Inst25++; } } catch(e) {}
    }
  }

try { if (Inst27 <= 1000 && typeof (Date.now) != "undefined") {_RecordType("<244,252,14>",(Date.now)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (Date) != "undefined") {_RecordType("<244,248,14>",(Date)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (t) != "undefined") {_RecordType("<257,258,14>",(t)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (q) != "undefined") {_RecordType("<260,261,14>",(q)); Inst30++; } } catch(e) {}
  return [Date.now() - t, q];
}

try { if (Inst31 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<267,275,17>",(noInline)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (f) != "undefined") {_RecordType("<276,277,17>",(f)); Inst32++; } } catch(e) {}
noInline(f);
try { if (Inst33 <= 1000 && typeof (f) != "undefined") {_RecordType("<280,281,18>",(f)); Inst33++; } } catch(e) {}
f();

