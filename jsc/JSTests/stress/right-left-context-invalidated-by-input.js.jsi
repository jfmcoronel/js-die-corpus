var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//@ runDefault
try { if (Inst0 <= 1000 && typeof (test) != "undefined") {_RecordType("<24,28,2>",(test)); Inst0++; } } catch(e) {}
function test(when) {
try { if (Inst1 <= 1000 && typeof (when) != "undefined") {_RecordType("<29,33,2>",(when)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (/bar/.exec) != "undefined") {_RecordType("<39,49,3>",(/bar/.exec)); Inst2++; } } catch(e) {}
  /bar/.exec("foo bar baz");

try { if (Inst3 <= 1000 && typeof (validateContexts) != "undefined") {_RecordType("<78,94,5>",(validateContexts)); Inst3++; } } catch(e) {}
  function validateContexts(when) {
try { if (Inst4 <= 1000 && typeof (when) != "undefined") {_RecordType("<95,99,5>",(when)); Inst4++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (RegExp.leftContext) != "undefined") {_RecordType("<111,129,6>",(RegExp.leftContext)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<111,117,6>",(RegExp)); Inst6++; } } catch(e) {}
    if (RegExp.leftContext !== "foo ") {
try { if (Inst7 <= 1000 && typeof (when) != "undefined") {_RecordType("<168,172,7>",(when)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (RegExp.leftContext) != "undefined") {_RecordType("<199,217,7>",(RegExp.leftContext)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<199,205,7>",(RegExp)); Inst9++; } } catch(e) {}
      throw "Error: " + when + ": bad leftContext: " + RegExp.leftContext;
    }

try { if (Inst10 <= 1000 && typeof (RegExp.rightContext) != "undefined") {_RecordType("<234,253,10>",(RegExp.rightContext)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<234,240,10>",(RegExp)); Inst11++; } } catch(e) {}
    if (RegExp.rightContext !== " baz") {
try { if (Inst12 <= 1000 && typeof (when) != "undefined") {_RecordType("<292,296,11>",(when)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (RegExp.rightContext) != "undefined") {_RecordType("<324,343,11>",(RegExp.rightContext)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<324,330,11>",(RegExp)); Inst14++; } } catch(e) {}
      throw "Error: " + when + ": bad rightContext: " + RegExp.rightContext;
    }
  }

try { if (Inst15 <= 1000 && typeof (when) != "undefined") {_RecordType("<362,366,15>",(when)); Inst15++; } } catch(e) {}
  if (when === "before") {
try { if (Inst16 <= 1000 && typeof (validateContexts) != "undefined") {_RecordType("<387,403,16>",(validateContexts)); Inst16++; } } catch(e) {}
    validateContexts("before");
  }

  RegExp.input = "";
try { if (Inst17 <= 1000 && typeof (RegExp.input) != "undefined") {_RecordType("<422,434,19>",(RegExp.input)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<422,428,19>",(RegExp)); Inst18++; } } catch(e) {}

try { if (Inst19 <= 1000 && typeof (when) != "undefined") {_RecordType("<448,452,21>",(when)); Inst19++; } } catch(e) {}
  if (when === "after") {
try { if (Inst20 <= 1000 && typeof (validateContexts) != "undefined") {_RecordType("<472,488,22>",(validateContexts)); Inst20++; } } catch(e) {}
    validateContexts("after");
  }
}

try { if (Inst21 <= 1000 && typeof (test) != "undefined") {_RecordType("<506,510,26>",(test)); Inst21++; } } catch(e) {}
test("before");
try { if (Inst22 <= 1000 && typeof (test) != "undefined") {_RecordType("<522,526,27>",(test)); Inst22++; } } catch(e) {}
test("after");

