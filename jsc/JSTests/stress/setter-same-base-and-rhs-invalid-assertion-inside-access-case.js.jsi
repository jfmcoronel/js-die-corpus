var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (ctor) != "undefined") {_RecordType("<9,13,1>",(ctor)); Inst0++; } } catch(e) {}
function ctor() {
  ;
}

try { if (Inst1 <= 1000 && typeof (ctor.prototype.__defineSetter__) != "undefined") {_RecordType("<25,56,5>",(ctor.prototype.__defineSetter__)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (ctor.prototype) != "undefined") {_RecordType("<25,39,5>",(ctor.prototype)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (ctor) != "undefined") {_RecordType("<25,29,5>",(ctor)); Inst3++; } } catch(e) {}
ctor.prototype.__defineSetter__("f", function () {
  ;
});

try { if (Inst4 <= 1000 && typeof (theFunc) != "undefined") {_RecordType("<94,101,9>",(theFunc)); Inst4++; } } catch(e) {}
function theFunc(o) {
try { if (Inst5 <= 1000 && typeof (o) != "undefined") {_RecordType("<102,103,9>",(o)); Inst5++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (o) != "undefined") {_RecordType("<115,116,10>",(o)); Inst8++; } } catch(e) {}
  o.f = o;
try { if (Inst6 <= 1000 && typeof (o.f) != "undefined") {_RecordType("<109,112,10>",(o.f)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (o) != "undefined") {_RecordType("<109,110,10>",(o)); Inst7++; } } catch(e) {}
}

try { if (Inst9 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<121,129,13>",(noInline)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (theFunc) != "undefined") {_RecordType("<130,137,13>",(theFunc)); Inst10++; } } catch(e) {}
noInline(theFunc);

try { if (Inst11 <= 1000 && typeof (run) != "undefined") {_RecordType("<150,153,15>",(run)); Inst11++; } } catch(e) {}
function run(o) {
try { if (Inst12 <= 1000 && typeof (o) != "undefined") {_RecordType("<154,155,15>",(o)); Inst12++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (theFunc) != "undefined") {_RecordType("<161,168,16>",(theFunc)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (o) != "undefined") {_RecordType("<169,170,16>",(o)); Inst14++; } } catch(e) {}
  theFunc(o);
}

for (let i = 0; i < 100000; ++i) {
try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<185,186,19>",(i)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<192,193,19>",(i)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (i) != "undefined") {_RecordType("<206,207,19>",(i)); Inst17++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (run) != "undefined") {_RecordType("<213,216,20>",(run)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (ctor) != "undefined") {_RecordType("<221,225,20>",(ctor)); Inst19++; } } catch(e) {}
  run(new ctor());
try { if (Inst21 <= 1000 && typeof (ctor) != "undefined") {_RecordType("<244,248,21>",(ctor)); Inst21++; } } catch(e) {}
  let o = new ctor();
try { if (Inst20 <= 1000 && typeof (o) != "undefined") {_RecordType("<236,237,21>",(o)); Inst20++; } } catch(e) {}
  o.g = 54;
try { if (Inst22 <= 1000 && typeof (o.g) != "undefined") {_RecordType("<254,257,22>",(o.g)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (o) != "undefined") {_RecordType("<254,255,22>",(o)); Inst23++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (run) != "undefined") {_RecordType("<266,269,23>",(run)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (o) != "undefined") {_RecordType("<270,271,23>",(o)); Inst25++; } } catch(e) {}
  run(o);
}

