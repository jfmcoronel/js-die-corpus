var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<9,17,1>",(shouldBe)); Inst0++; } } catch(e) {}
function shouldBe(actual, expected) {
try { if (Inst1 <= 1000 && typeof (actual) != "undefined") {_RecordType("<18,24,1>",(actual)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (expected) != "undefined") {_RecordType("<26,34,1>",(expected)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (actual) != "undefined") {_RecordType("<44,50,2>",(actual)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (expected) != "undefined") {_RecordType("<55,63,2>",(expected)); Inst4++; } } catch(e) {}
  if (actual !== expected) {
try { if (Inst5 <= 1000 && typeof (Error) != "undefined") {_RecordType("<81,86,3>",(Error)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (actual) != "undefined") {_RecordType("<103,109,3>",(actual)); Inst6++; } } catch(e) {}
    throw new Error('bad value: ' + actual);
  }
}

try { if (Inst8 <= 1000 && typeof (Object) != "undefined") {_RecordType("<139,145,7>",(Object)); Inst8++; } } catch(e) {}
class Hello extends Object {
  constructor() {
    super();
  }

}
try { if (Inst7 <= 1000 && typeof (Hello) != "undefined") {_RecordType("<125,130,7>",(Hello)); Inst7++; } } catch(e) {}

try { if (Inst10 <= 1000 && typeof (Hello) != "undefined") {_RecordType("<203,208,14>",(Hello)); Inst10++; } } catch(e) {}
var hello = new Hello();
try { if (Inst9 <= 1000 && typeof (hello) != "undefined") {_RecordType("<191,196,14>",(hello)); Inst9++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<212,220,15>",(shouldBe)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (hello.__proto__) != "undefined") {_RecordType("<221,236,15>",(hello.__proto__)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (hello) != "undefined") {_RecordType("<221,226,15>",(hello)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Hello.prototype) != "undefined") {_RecordType("<238,253,15>",(Hello.prototype)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Hello) != "undefined") {_RecordType("<238,243,15>",(Hello)); Inst15++; } } catch(e) {}
shouldBe(hello.__proto__, Hello.prototype);
try { if (Inst16 <= 1000 && typeof (shouldBe) != "undefined") {_RecordType("<256,264,16>",(shouldBe)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Reflect.construct(Object, [], Hello).__proto__) != "undefined") {_RecordType("<265,311,16>",(Reflect.construct(Object, [], Hello).__proto__)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Reflect.construct) != "undefined") {_RecordType("<265,282,16>",(Reflect.construct)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<265,272,16>",(Reflect)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (Object) != "undefined") {_RecordType("<283,289,16>",(Object)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Hello) != "undefined") {_RecordType("<295,300,16>",(Hello)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Hello.prototype) != "undefined") {_RecordType("<313,328,16>",(Hello.prototype)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Hello) != "undefined") {_RecordType("<313,318,16>",(Hello)); Inst23++; } } catch(e) {}
shouldBe(Reflect.construct(Object, [], Hello).__proto__, Hello.prototype);
try { if (Inst24 <= 1000 && typeof (gc) != "undefined") {_RecordType("<331,333,17>",(gc)); Inst24++; } } catch(e) {}
gc(); // Regression test for https:/webkit.org/b/160666.

