var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (foo) != "undefined") {_RecordType("<9,12,1>",(foo)); Inst0++; } } catch(e) {}
function foo(a) {
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<13,14,1>",(a)); Inst1++; } } catch(e) {}
  var result = 0.0;
try { if (Inst2 <= 1000 && typeof (result) != "undefined") {_RecordType("<24,30,2>",(result)); Inst2++; } } catch(e) {}

  for (var i = 0; i < 1000; ++i) {
try { if (Inst3 <= 1000 && typeof (i) != "undefined") {_RecordType("<50,51,4>",(i)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (i) != "undefined") {_RecordType("<57,58,4>",(i)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (i) != "undefined") {_RecordType("<69,70,4>",(i)); Inst5++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (a[i]) != "undefined") {_RecordType("<86,90,5>",(a[i])); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (a) != "undefined") {_RecordType("<86,87,5>",(a)); Inst8++; } } catch(e) {}
    var o = a[i];
try { if (Inst6 <= 1000 && typeof (o) != "undefined") {_RecordType("<82,83,5>",(o)); Inst6++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (o.x) != "undefined") {_RecordType("<106,109,6>",(o.x)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (o) != "undefined") {_RecordType("<106,107,6>",(o)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (o.y) != "undefined") {_RecordType("<112,115,6>",(o.y)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (o) != "undefined") {_RecordType("<112,113,6>",(o)); Inst13++; } } catch(e) {}
    result += o.x + o.y;
try { if (Inst9 <= 1000 && typeof (result) != "undefined") {_RecordType("<96,102,6>",(result)); Inst9++; } } catch(e) {}
  }

try { if (Inst14 <= 1000 && typeof (result) != "undefined") {_RecordType("<131,137,9>",(result)); Inst14++; } } catch(e) {}
  return result;
}

try { if (Inst15 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<142,150,12>",(noInline)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (foo) != "undefined") {_RecordType("<151,154,12>",(foo)); Inst16++; } } catch(e) {}
noInline(foo);
var array = [];
try { if (Inst17 <= 1000 && typeof (array) != "undefined") {_RecordType("<161,166,13>",(array)); Inst17++; } } catch(e) {}

for (var i = 0; i < 1000; ++i) {
try { if (Inst18 <= 1000 && typeof (i) != "undefined") {_RecordType("<183,184,15>",(i)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (i) != "undefined") {_RecordType("<190,191,15>",(i)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<202,203,15>",(i)); Inst20++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (array.push) != "undefined") {_RecordType("<209,219,16>",(array.push)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (array) != "undefined") {_RecordType("<209,214,16>",(array)); Inst22++; } } catch(e) {}
  array.push({
    x: 1.5,
    y: 2.5
  });
}

for (var i = 0; i < 10000; ++i) {
try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<263,264,22>",(i)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<270,271,22>",(i)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<283,284,22>",(i)); Inst25++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (foo) != "undefined") {_RecordType("<290,293,23>",(foo)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (array) != "undefined") {_RecordType("<294,299,23>",(array)); Inst27++; } } catch(e) {}
  foo(array);
}

