var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
(function () {
  var globalO;
try { if (Inst0 <= 1000 && typeof (globalO) != "undefined") {_RecordType("<21,28,2>",(globalO)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (polyvariant) != "undefined") {_RecordType("<42,53,4>",(polyvariant)); Inst1++; } } catch(e) {}
  function polyvariant() {
try { if (Inst2 <= 1000 && typeof (globalO.func) != "undefined") {_RecordType("<69,81,5>",(globalO.func)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (globalO) != "undefined") {_RecordType("<69,76,5>",(globalO)); Inst3++; } } catch(e) {}
    return globalO.func();
  }

  class Foo {
    func() {
      return 42;
    }

  }
try { if (Inst4 <= 1000 && typeof (Foo) != "undefined") {_RecordType("<98,101,8>",(Foo)); Inst4++; } } catch(e) {}

try { if (Inst6 <= 1000 && typeof (Foo) != "undefined") {_RecordType("<163,166,15>",(Foo)); Inst6++; } } catch(e) {}
  var fooO = new Foo();
try { if (Inst5 <= 1000 && typeof (fooO) != "undefined") {_RecordType("<152,156,15>",(fooO)); Inst5++; } } catch(e) {}

try { if (Inst7 <= 1000 && typeof (foo) != "undefined") {_RecordType("<182,185,17>",(foo)); Inst7++; } } catch(e) {}
  function foo() {
try { if (Inst9 <= 1000 && typeof (fooO) != "undefined") {_RecordType("<204,208,18>",(fooO)); Inst9++; } } catch(e) {}
    globalO = fooO;
try { if (Inst8 <= 1000 && typeof (globalO) != "undefined") {_RecordType("<194,201,18>",(globalO)); Inst8++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (polyvariant) != "undefined") {_RecordType("<221,232,19>",(polyvariant)); Inst10++; } } catch(e) {}
    return polyvariant();
  }

  class Bar {
    func() {
try { if (Inst12 <= 1000 && typeof (foo) != "undefined") {_RecordType("<281,284,24>",(foo)); Inst12++; } } catch(e) {}
      return foo();
    }

  }
try { if (Inst11 <= 1000 && typeof (Bar) != "undefined") {_RecordType("<249,252,22>",(Bar)); Inst11++; } } catch(e) {}

try { if (Inst14 <= 1000 && typeof (Bar) != "undefined") {_RecordType("<317,320,29>",(Bar)); Inst14++; } } catch(e) {}
  var barO = new Bar();
try { if (Inst13 <= 1000 && typeof (barO) != "undefined") {_RecordType("<306,310,29>",(barO)); Inst13++; } } catch(e) {}

try { if (Inst15 <= 1000 && typeof (bar) != "undefined") {_RecordType("<336,339,31>",(bar)); Inst15++; } } catch(e) {}
  function bar() {
try { if (Inst17 <= 1000 && typeof (barO) != "undefined") {_RecordType("<358,362,32>",(barO)); Inst17++; } } catch(e) {}
    globalO = barO;
try { if (Inst16 <= 1000 && typeof (globalO) != "undefined") {_RecordType("<348,355,32>",(globalO)); Inst16++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (polyvariant) != "undefined") {_RecordType("<375,386,33>",(polyvariant)); Inst18++; } } catch(e) {}
    return polyvariant();
  }

  var count = 1000000;
try { if (Inst19 <= 1000 && typeof (count) != "undefined") {_RecordType("<401,406,36>",(count)); Inst19++; } } catch(e) {}
  var result = 0;
try { if (Inst20 <= 1000 && typeof (result) != "undefined") {_RecordType("<424,430,37>",(result)); Inst20++; } } catch(e) {}

  for (var i = 0; i < count; ++i) {
try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<448,449,39>",(i)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<455,456,39>",(i)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (count) != "undefined") {_RecordType("<459,464,39>",(count)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<468,469,39>",(i)); Inst24++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (bar) != "undefined") {_RecordType("<487,490,40>",(bar)); Inst26++; } } catch(e) {}
    result += bar();
try { if (Inst25 <= 1000 && typeof (result) != "undefined") {_RecordType("<477,483,40>",(result)); Inst25++; } } catch(e) {}
  }

try { if (Inst27 <= 1000 && typeof (result) != "undefined") {_RecordType("<505,511,43>",(result)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (count) != "undefined") {_RecordType("<515,520,43>",(count)); Inst28++; } } catch(e) {}
  if (result != count * 42) {
try { if (Inst29 <= 1000 && typeof (result) != "undefined") {_RecordType("<563,569,44>",(result)); Inst29++; } } catch(e) {}
    throw "Error: bad result: " + result;
  }
})();

