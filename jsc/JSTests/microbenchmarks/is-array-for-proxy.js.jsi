var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
{
try { if (Inst0 <= 1000 && typeof (isArray) != "undefined") {_RecordType("<13,20,2>",(isArray)); Inst0++; } } catch(e) {}
  function isArray(array) {
try { if (Inst1 <= 1000 && typeof (array) != "undefined") {_RecordType("<21,26,2>",(array)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (Array.isArray) != "undefined") {_RecordType("<41,54,3>",(Array.isArray)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Array) != "undefined") {_RecordType("<41,46,3>",(Array)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (array) != "undefined") {_RecordType("<55,60,3>",(array)); Inst4++; } } catch(e) {}
    return Array.isArray(array);
  }

try { if (Inst5 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<70,78,6>",(noInline)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (isArray) != "undefined") {_RecordType("<79,86,6>",(isArray)); Inst6++; } } catch(e) {}
  noInline(isArray);
try { if (Inst8 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<107,112,7>",(Proxy)); Inst8++; } } catch(e) {}
  let proxy = new Proxy([], {});
try { if (Inst7 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<95,100,7>",(proxy)); Inst7++; } } catch(e) {}

  for (let i = 0; i < 1e5; ++i) {
try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<134,135,9>",(i)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<141,142,9>",(i)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<152,153,9>",(i)); Inst11++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (isArray) != "undefined") {_RecordType("<166,173,10>",(isArray)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<174,179,10>",(proxy)); Inst13++; } } catch(e) {}
    if (!isArray(proxy)) {
try { if (Inst14 <= 1000 && typeof (Error) != "undefined") {_RecordType("<200,205,11>",(Error)); Inst14++; } } catch(e) {}
      throw new Error(`bad error`);
    }
  }
}
{
try { if (Inst15 <= 1000 && typeof (isArray) != "undefined") {_RecordType("<245,252,16>",(isArray)); Inst15++; } } catch(e) {}
  function isArray(array) {
try { if (Inst16 <= 1000 && typeof (array) != "undefined") {_RecordType("<253,258,16>",(array)); Inst16++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (Array.isArray) != "undefined") {_RecordType("<273,286,17>",(Array.isArray)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Array) != "undefined") {_RecordType("<273,278,17>",(Array)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (array) != "undefined") {_RecordType("<287,292,17>",(array)); Inst19++; } } catch(e) {}
    return Array.isArray(array);
  }

try { if (Inst20 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<302,310,20>",(noInline)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (isArray) != "undefined") {_RecordType("<311,318,20>",(isArray)); Inst21++; } } catch(e) {}
  noInline(isArray);
try { if (Inst23 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<339,344,21>",(Proxy)); Inst23++; } } catch(e) {}
  let proxy = new Proxy({}, {});
try { if (Inst22 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<327,332,21>",(proxy)); Inst22++; } } catch(e) {}

  for (let i = 0; i < 1e5; ++i) {
try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<366,367,23>",(i)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<373,374,23>",(i)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (i) != "undefined") {_RecordType("<384,385,23>",(i)); Inst26++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (isArray) != "undefined") {_RecordType("<397,404,24>",(isArray)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<405,410,24>",(proxy)); Inst28++; } } catch(e) {}
    if (isArray(proxy)) {
try { if (Inst29 <= 1000 && typeof (Error) != "undefined") {_RecordType("<431,436,25>",(Error)); Inst29++; } } catch(e) {}
      throw new Error(`bad error`);
    }
  }
}

