var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
var Inst102 = 0;
var Inst103 = 0;
var Inst104 = 0;
var Inst105 = 0;
var Inst106 = 0;
var Inst107 = 0;
var Inst108 = 0;
var Inst109 = 0;
var Inst110 = 0;
var Inst111 = 0;
var Inst112 = 0;
var Inst113 = 0;
var Inst114 = 0;
var Inst115 = 0;
var Inst116 = 0;
var Inst117 = 0;
var Inst118 = 0;
var Inst119 = 0;
var Inst120 = 0;
var Inst121 = 0;
var Inst122 = 0;
var Inst123 = 0;
var Inst124 = 0;
var Inst125 = 0;
var Inst126 = 0;
var Inst127 = 0;
var Inst128 = 0;
var Inst129 = 0;
var Inst130 = 0;
var Inst131 = 0;
var Inst132 = 0;
var Inst133 = 0;
var Inst134 = 0;
var Inst135 = 0;
var Inst136 = 0;
var Inst137 = 0;
var Inst138 = 0;
var Inst139 = 0;
var Inst140 = 0;
var Inst141 = 0;
var Inst142 = 0;
var Inst143 = 0;
var Inst144 = 0;
var Inst145 = 0;
var Inst146 = 0;
var Inst147 = 0;
var Inst148 = 0;
var Inst149 = 0;
var Inst150 = 0;
var Inst151 = 0;
var Inst152 = 0;
var Inst153 = 0;
var Inst154 = 0;
var Inst155 = 0;
var Inst156 = 0;
var Inst157 = 0;
var Inst158 = 0;
var Inst159 = 0;
var Inst160 = 0;
var Inst161 = 0;
var Inst162 = 0;
var Inst163 = 0;
var Inst164 = 0;
var Inst165 = 0;
var Inst166 = 0;
var Inst167 = 0;
var Inst168 = 0;
var Inst169 = 0;
var Inst170 = 0;
var Inst171 = 0;
var Inst172 = 0;
var Inst173 = 0;
var Inst174 = 0;
var Inst175 = 0;
var Inst176 = 0;
var Inst177 = 0;
var Inst178 = 0;
var Inst179 = 0;
var Inst180 = 0;
var Inst181 = 0;
var Inst182 = 0;
var Inst183 = 0;
var Inst184 = 0;
var Inst185 = 0;
var Inst186 = 0;
var Inst187 = 0;
var Inst188 = 0;
var Inst189 = 0;
var Inst190 = 0;
var Inst191 = 0;
var Inst192 = 0;
var Inst193 = 0;
var Inst194 = 0;
var Inst195 = 0;
var Inst196 = 0;
var Inst197 = 0;
var Inst198 = 0;
var Inst199 = 0;
var Inst200 = 0;
var Inst201 = 0;
var Inst202 = 0;
var Inst203 = 0;
var Inst204 = 0;
var Inst205 = 0;
var Inst206 = 0;
var Inst207 = 0;
var Inst208 = 0;
var Inst209 = 0;
var Inst210 = 0;
var Inst211 = 0;
var Inst212 = 0;
var Inst213 = 0;
var Inst214 = 0;
var Inst215 = 0;
var Inst216 = 0;
var Inst217 = 0;
var Inst218 = 0;
var Inst219 = 0;
var Inst220 = 0;
var Inst221 = 0;
var Inst222 = 0;
var Inst223 = 0;
var Inst224 = 0;
var Inst225 = 0;
var Inst226 = 0;
var Inst227 = 0;
var Inst228 = 0;
var Inst229 = 0;
var Inst230 = 0;
var Inst231 = 0;
var Inst232 = 0;
var Inst233 = 0;
var Inst234 = 0;
var Inst235 = 0;
var Inst236 = 0;
var Inst237 = 0;
var Inst238 = 0;
var Inst239 = 0;
var Inst240 = 0;
var Inst241 = 0;
var Inst242 = 0;
var Inst243 = 0;
var Inst244 = 0;
var Inst245 = 0;
var Inst246 = 0;
var Inst247 = 0;
var Inst248 = 0;
var Inst249 = 0;
var Inst250 = 0;
var Inst251 = 0;
var Inst252 = 0;
var Inst253 = 0;
var Inst254 = 0;
var Inst255 = 0;
var Inst256 = 0;
var Inst257 = 0;
var Inst258 = 0;
var Inst259 = 0;
var Inst260 = 0;
var Inst261 = 0;
var Inst262 = 0;
var Inst263 = 0;
var Inst264 = 0;
var Inst265 = 0;
var Inst266 = 0;
var Inst267 = 0;
var Inst268 = 0;
var Inst269 = 0;
var Inst270 = 0;
var Inst271 = 0;
var Inst272 = 0;
var Inst273 = 0;
var Inst274 = 0;
var Inst275 = 0;
var Inst276 = 0;
var Inst277 = 0;
var Inst278 = 0;
var Inst279 = 0;
var Inst280 = 0;
var Inst281 = 0;
var Inst282 = 0;
var Inst283 = 0;
var Inst284 = 0;
var Inst285 = 0;
var Inst286 = 0;
var Inst287 = 0;
var Inst288 = 0;
var Inst289 = 0;
var Inst290 = 0;
var Inst291 = 0;
var Inst292 = 0;
var Inst293 = 0;
var Inst294 = 0;
var Inst295 = 0;
var Inst296 = 0;
var Inst297 = 0;
var Inst298 = 0;
var Inst299 = 0;
var Inst300 = 0;
var Inst301 = 0;
var Inst302 = 0;
var Inst303 = 0;
var Inst304 = 0;
var Inst305 = 0;
var Inst306 = 0;
var Inst307 = 0;
var Inst308 = 0;
var Inst309 = 0;
var Inst310 = 0;
var Inst311 = 0;
var Inst312 = 0;
var Inst313 = 0;
var Inst314 = 0;
var Inst315 = 0;
var Inst316 = 0;
var Inst317 = 0;
var Inst318 = 0;
var Inst319 = 0;
var Inst320 = 0;
var Inst321 = 0;
var Inst322 = 0;
var Inst323 = 0;
var Inst324 = 0;
var Inst325 = 0;
var Inst326 = 0;
var Inst327 = 0;
var Inst328 = 0;
var Inst329 = 0;
var Inst330 = 0;
var Inst331 = 0;
var Inst332 = 0;
var Inst333 = 0;
var Inst334 = 0;
var Inst335 = 0;
var Inst336 = 0;
var Inst337 = 0;
var Inst338 = 0;
var Inst339 = 0;
var Inst340 = 0;
var Inst341 = 0;
var Inst342 = 0;
var Inst343 = 0;
var Inst344 = 0;
var Inst345 = 0;
var Inst346 = 0;
var Inst347 = 0;
var Inst348 = 0;
var Inst349 = 0;
var Inst350 = 0;
var Inst351 = 0;
var Inst352 = 0;
var Inst353 = 0;
var Inst354 = 0;
var Inst355 = 0;
var Inst356 = 0;
var Inst357 = 0;
var Inst358 = 0;
var Inst359 = 0;
var Inst360 = 0;
var Inst361 = 0;
var Inst362 = 0;
var Inst363 = 0;
var Inst364 = 0;
var Inst365 = 0;
var Inst366 = 0;
var Inst367 = 0;
var Inst368 = 0;
var Inst369 = 0;
var Inst370 = 0;
var Inst371 = 0;
var Inst372 = 0;
var Inst373 = 0;
var Inst374 = 0;
var Inst375 = 0;
var Inst376 = 0;
var Inst377 = 0;
var Inst378 = 0;
var Inst379 = 0;
var Inst380 = 0;
var Inst381 = 0;
var Inst382 = 0;
var Inst383 = 0;
var Inst384 = 0;
var Inst385 = 0;
var Inst386 = 0;
var Inst387 = 0;
var Inst388 = 0;
var Inst389 = 0;
var Inst390 = 0;
var Inst391 = 0;
var Inst392 = 0;
var Inst393 = 0;
var Inst394 = 0;
var Inst395 = 0;
var Inst396 = 0;
var Inst397 = 0;
var Inst398 = 0;
var Inst399 = 0;
var Inst400 = 0;
var Inst401 = 0;
var Inst402 = 0;
var Inst403 = 0;
var Inst404 = 0;
var Inst405 = 0;
var Inst406 = 0;
var Inst407 = 0;
var Inst408 = 0;
var Inst409 = 0;
var Inst410 = 0;
var Inst411 = 0;
var Inst412 = 0;
var Inst413 = 0;
var Inst414 = 0;
var Inst415 = 0;
var Inst416 = 0;
var Inst417 = 0;
var Inst418 = 0;
var Inst419 = 0;
var Inst420 = 0;
var Inst421 = 0;
var Inst422 = 0;
var Inst423 = 0;
var Inst424 = 0;
var Inst425 = 0;
var Inst426 = 0;
var Inst427 = 0;
var Inst428 = 0;
var Inst429 = 0;
var Inst430 = 0;
var Inst431 = 0;
var Inst432 = 0;
var Inst433 = 0;
var Inst434 = 0;
var Inst435 = 0;
var Inst436 = 0;
var Inst437 = 0;
var Inst438 = 0;
var Inst439 = 0;
var Inst440 = 0;
var Inst441 = 0;
var Inst442 = 0;
var Inst443 = 0;
var Inst444 = 0;
var Inst445 = 0;
var Inst446 = 0;
var Inst447 = 0;
var Inst448 = 0;
var Inst449 = 0;
var Inst450 = 0;
var Inst451 = 0;
var Inst452 = 0;
var Inst453 = 0;
var Inst454 = 0;
var Inst455 = 0;
var Inst456 = 0;
var Inst457 = 0;
var Inst458 = 0;
var Inst459 = 0;
var Inst460 = 0;
var Inst461 = 0;
var Inst462 = 0;
var Inst463 = 0;
var Inst464 = 0;
var Inst465 = 0;
var Inst466 = 0;
var Inst467 = 0;
var Inst468 = 0;
var Inst469 = 0;
var Inst470 = 0;
var Inst471 = 0;
var Inst472 = 0;
var Inst473 = 0;
var Inst474 = 0;
var Inst475 = 0;
var Inst476 = 0;
var Inst477 = 0;
var Inst478 = 0;
var Inst479 = 0;
var Inst480 = 0;
var Inst481 = 0;
var Inst482 = 0;
var Inst483 = 0;
var Inst484 = 0;
var Inst485 = 0;
var Inst486 = 0;
var Inst487 = 0;
var Inst488 = 0;
var Inst489 = 0;
var Inst490 = 0;
var Inst491 = 0;
var Inst492 = 0;
var Inst493 = 0;
var Inst494 = 0;
var Inst495 = 0;
var Inst496 = 0;
var Inst497 = 0;
var Inst498 = 0;
var Inst499 = 0;
var Inst500 = 0;
var Inst501 = 0;
var Inst502 = 0;
var Inst503 = 0;
var Inst504 = 0;
var Inst505 = 0;
var Inst506 = 0;
var Inst507 = 0;
var Inst508 = 0;
var Inst509 = 0;
var Inst510 = 0;
var Inst511 = 0;
var Inst512 = 0;
var Inst513 = 0;
var Inst514 = 0;
var Inst515 = 0;
var Inst516 = 0;
var Inst517 = 0;
var Inst518 = 0;
var Inst519 = 0;
var Inst520 = 0;
var Inst521 = 0;
var Inst522 = 0;
var Inst523 = 0;
var Inst524 = 0;
var Inst525 = 0;
var Inst526 = 0;
var Inst527 = 0;
var Inst528 = 0;
var Inst529 = 0;
var Inst530 = 0;
var Inst531 = 0;
var Inst532 = 0;
var Inst533 = 0;
var Inst534 = 0;
var Inst535 = 0;
var Inst536 = 0;
var Inst537 = 0;
var Inst538 = 0;
var Inst539 = 0;
var Inst540 = 0;
var Inst541 = 0;
var Inst542 = 0;
var Inst543 = 0;
var Inst544 = 0;
var Inst545 = 0;
var Inst546 = 0;
var Inst547 = 0;
var Inst548 = 0;
var Inst549 = 0;
var Inst550 = 0;
var Inst551 = 0;
var Inst552 = 0;
var Inst553 = 0;
var Inst554 = 0;
var Inst555 = 0;
var Inst556 = 0;
var Inst557 = 0;
var Inst558 = 0;
var Inst559 = 0;
var Inst560 = 0;
var Inst561 = 0;
var Inst562 = 0;
var Inst563 = 0;
var Inst564 = 0;
var Inst565 = 0;
var Inst566 = 0;
var Inst567 = 0;
var Inst568 = 0;
var Inst569 = 0;
var Inst570 = 0;
var Inst571 = 0;
var Inst572 = 0;
var Inst573 = 0;
var Inst574 = 0;
var Inst575 = 0;
var Inst576 = 0;
var Inst577 = 0;
var Inst578 = 0;
var Inst579 = 0;
var Inst580 = 0;
var Inst581 = 0;
var Inst582 = 0;
var Inst583 = 0;
var Inst584 = 0;
var Inst585 = 0;
var Inst586 = 0;
var Inst587 = 0;
var Inst588 = 0;
var Inst589 = 0;
var Inst590 = 0;
var Inst591 = 0;
var Inst592 = 0;
var Inst593 = 0;
var Inst594 = 0;
var Inst595 = 0;
var Inst596 = 0;
var Inst597 = 0;
var Inst598 = 0;
var Inst599 = 0;
var Inst600 = 0;
var Inst601 = 0;
var Inst602 = 0;
var Inst603 = 0;
var Inst604 = 0;
var Inst605 = 0;
var Inst606 = 0;
var Inst607 = 0;
var Inst608 = 0;
var Inst609 = 0;
var Inst610 = 0;
var Inst611 = 0;
var Inst612 = 0;
var Inst613 = 0;
var Inst614 = 0;
var Inst615 = 0;
var Inst616 = 0;
var Inst617 = 0;
var Inst618 = 0;
var Inst619 = 0;
var Inst620 = 0;
var Inst621 = 0;
var Inst622 = 0;
var Inst623 = 0;
var Inst624 = 0;
var Inst625 = 0;
var Inst626 = 0;
var Inst627 = 0;
var Inst628 = 0;
var Inst629 = 0;
var Inst630 = 0;
var Inst631 = 0;
var Inst632 = 0;
var Inst633 = 0;
var Inst634 = 0;
var Inst635 = 0;
var Inst636 = 0;
var Inst637 = 0;
var Inst638 = 0;
var Inst639 = 0;
var Inst640 = 0;
var Inst641 = 0;
var Inst642 = 0;
var Inst643 = 0;
var Inst644 = 0;
var Inst645 = 0;
var Inst646 = 0;
var Inst647 = 0;
var Inst648 = 0;
var Inst649 = 0;
var Inst650 = 0;
var Inst651 = 0;
var Inst652 = 0;
var Inst653 = 0;
var Inst654 = 0;
var Inst655 = 0;
var Inst656 = 0;
var Inst657 = 0;
var Inst658 = 0;
var Inst659 = 0;
var Inst660 = 0;
var Inst661 = 0;
var Inst662 = 0;
var Inst663 = 0;
var Inst664 = 0;
var Inst665 = 0;
var Inst666 = 0;
var Inst667 = 0;
var Inst668 = 0;
var Inst669 = 0;
var Inst670 = 0;
var Inst671 = 0;
var Inst672 = 0;
var Inst673 = 0;
var Inst674 = 0;
var Inst675 = 0;
var Inst676 = 0;
var Inst677 = 0;
var Inst678 = 0;
var Inst679 = 0;
var Inst680 = 0;
var Inst681 = 0;
var Inst682 = 0;
var Inst683 = 0;
var Inst684 = 0;
var Inst685 = 0;
var Inst686 = 0;
var Inst687 = 0;
var Inst688 = 0;
var Inst689 = 0;
var Inst690 = 0;
var Inst691 = 0;
var Inst692 = 0;
var Inst693 = 0;
var Inst694 = 0;
var Inst695 = 0;
var Inst696 = 0;
var Inst697 = 0;
var Inst698 = 0;
var Inst699 = 0;
var Inst700 = 0;
var Inst701 = 0;
var Inst702 = 0;
var Inst703 = 0;
var Inst704 = 0;
var Inst705 = 0;
var Inst706 = 0;
var Inst707 = 0;
var Inst708 = 0;
var Inst709 = 0;
var Inst710 = 0;
var Inst711 = 0;
var Inst712 = 0;
var Inst713 = 0;
var Inst714 = 0;
var Inst715 = 0;
var Inst716 = 0;
var Inst717 = 0;
var Inst718 = 0;
var Inst719 = 0;
var Inst720 = 0;
var Inst721 = 0;
var Inst722 = 0;
var Inst723 = 0;
var Inst724 = 0;
var Inst725 = 0;
var Inst726 = 0;
var Inst727 = 0;
var Inst728 = 0;
var Inst729 = 0;
var Inst730 = 0;
var Inst731 = 0;
var Inst732 = 0;
var Inst733 = 0;
var Inst734 = 0;
var Inst735 = 0;
var Inst736 = 0;
var Inst737 = 0;
var Inst738 = 0;
var Inst739 = 0;
var Inst740 = 0;
var Inst741 = 0;
var Inst742 = 0;
var Inst743 = 0;
var Inst744 = 0;
var Inst745 = 0;
var Inst746 = 0;
var Inst747 = 0;
var Inst748 = 0;
var Inst749 = 0;
var Inst750 = 0;
var Inst751 = 0;
var Inst752 = 0;
var Inst753 = 0;
var Inst754 = 0;
var Inst755 = 0;
var Inst756 = 0;
var Inst757 = 0;
var Inst758 = 0;
var Inst759 = 0;
var Inst760 = 0;
var Inst761 = 0;
var Inst762 = 0;
var Inst763 = 0;
var Inst764 = 0;
var Inst765 = 0;
var Inst766 = 0;
var Inst767 = 0;
var Inst768 = 0;
var Inst769 = 0;
var Inst770 = 0;
var Inst771 = 0;
var Inst772 = 0;
var Inst773 = 0;
var Inst774 = 0;
var Inst775 = 0;
var Inst776 = 0;
var Inst777 = 0;
var Inst778 = 0;
var Inst779 = 0;
var Inst780 = 0;
var Inst781 = 0;
var Inst782 = 0;
var Inst783 = 0;
var Inst784 = 0;
var Inst785 = 0;
var Inst786 = 0;
var Inst787 = 0;
var Inst788 = 0;
var Inst789 = 0;
var Inst790 = 0;
var Inst791 = 0;
var Inst792 = 0;
var Inst793 = 0;
var Inst794 = 0;
var Inst795 = 0;
var Inst796 = 0;
var Inst797 = 0;
var Inst798 = 0;
var Inst799 = 0;
var Inst800 = 0;
var Inst801 = 0;
var Inst802 = 0;
var Inst803 = 0;
var Inst804 = 0;
var Inst805 = 0;
var Inst806 = 0;
var Inst807 = 0;
var Inst808 = 0;
var Inst809 = 0;
var Inst810 = 0;
var Inst811 = 0;
var Inst812 = 0;
var Inst813 = 0;
var Inst814 = 0;
var Inst815 = 0;
var Inst816 = 0;
var Inst817 = 0;
var Inst818 = 0;
var Inst819 = 0;
var Inst820 = 0;
var Inst821 = 0;
var Inst822 = 0;
var Inst823 = 0;
var Inst824 = 0;
var Inst825 = 0;
var Inst826 = 0;
var Inst827 = 0;
var Inst828 = 0;
var Inst829 = 0;
var Inst830 = 0;
var Inst831 = 0;
var Inst832 = 0;
var Inst833 = 0;
var Inst834 = 0;
var Inst835 = 0;
var Inst836 = 0;
var Inst837 = 0;
var Inst838 = 0;
var Inst839 = 0;
var Inst840 = 0;
var Inst841 = 0;
var Inst842 = 0;
var Inst843 = 0;
var Inst844 = 0;
var Inst845 = 0;
var Inst846 = 0;
var Inst847 = 0;
var Inst848 = 0;
var Inst849 = 0;
var Inst850 = 0;
var Inst851 = 0;
var Inst852 = 0;
var Inst853 = 0;
var Inst854 = 0;
var Inst855 = 0;
var Inst856 = 0;
var Inst857 = 0;
var Inst858 = 0;
var Inst859 = 0;
var Inst860 = 0;
var Inst861 = 0;
var Inst862 = 0;
var Inst863 = 0;
var Inst864 = 0;
var Inst865 = 0;
var Inst866 = 0;
var Inst867 = 0;
var Inst868 = 0;
var Inst869 = 0;
var Inst870 = 0;
var Inst871 = 0;
var Inst872 = 0;
var Inst873 = 0;
var Inst874 = 0;
var Inst875 = 0;
var Inst876 = 0;
var Inst877 = 0;
var Inst878 = 0;
var Inst879 = 0;
var Inst880 = 0;
var Inst881 = 0;
var Inst882 = 0;
var Inst883 = 0;
var Inst884 = 0;
var Inst885 = 0;
var Inst886 = 0;
var Inst887 = 0;
var Inst888 = 0;
var Inst889 = 0;
var Inst890 = 0;
var Inst891 = 0;
var Inst892 = 0;
var Inst893 = 0;
var Inst894 = 0;
var Inst895 = 0;
var Inst896 = 0;
var Inst897 = 0;
var Inst898 = 0;
var Inst899 = 0;
var Inst900 = 0;
var Inst901 = 0;
var Inst902 = 0;
var Inst903 = 0;
var Inst904 = 0;
var Inst905 = 0;
var Inst906 = 0;
var Inst907 = 0;
var Inst908 = 0;
var Inst909 = 0;
var Inst910 = 0;
var Inst911 = 0;
var Inst912 = 0;
var Inst913 = 0;
var Inst914 = 0;
var Inst915 = 0;
var Inst916 = 0;
var Inst917 = 0;
var Inst918 = 0;
var Inst919 = 0;
var Inst920 = 0;
var Inst921 = 0;
var Inst922 = 0;
var Inst923 = 0;
var Inst924 = 0;
var Inst925 = 0;
var Inst926 = 0;
var Inst927 = 0;
var Inst928 = 0;
var Inst929 = 0;
var Inst930 = 0;
var Inst931 = 0;
var Inst932 = 0;
var Inst933 = 0;
var Inst934 = 0;
var Inst935 = 0;
var Inst936 = 0;
var Inst937 = 0;
var Inst938 = 0;
var Inst939 = 0;
var Inst940 = 0;
var Inst941 = 0;
var Inst942 = 0;
var Inst943 = 0;
var Inst944 = 0;
var Inst945 = 0;
var Inst946 = 0;
var Inst947 = 0;
var Inst948 = 0;
var Inst949 = 0;
var Inst950 = 0;
var Inst951 = 0;
var Inst952 = 0;
var Inst953 = 0;
var Inst954 = 0;
var Inst955 = 0;
var Inst956 = 0;
var Inst957 = 0;
var Inst958 = 0;
var Inst959 = 0;
var Inst960 = 0;
var Inst961 = 0;
var Inst962 = 0;
var Inst963 = 0;
var Inst964 = 0;
var Inst965 = 0;
var Inst966 = 0;
var Inst967 = 0;
var Inst968 = 0;
var Inst969 = 0;
var Inst970 = 0;
var Inst971 = 0;
var Inst972 = 0;
var Inst973 = 0;
var Inst974 = 0;
var Inst975 = 0;
var Inst976 = 0;
var Inst977 = 0;
var Inst978 = 0;
var Inst979 = 0;
var Inst980 = 0;
var Inst981 = 0;
var Inst982 = 0;
var Inst983 = 0;
var Inst984 = 0;
var Inst985 = 0;
var Inst986 = 0;
var Inst987 = 0;
var Inst988 = 0;
var Inst989 = 0;
var Inst990 = 0;
var Inst991 = 0;
var Inst992 = 0;
var Inst993 = 0;
var Inst994 = 0;
var Inst995 = 0;
var Inst996 = 0;
var Inst997 = 0;
var Inst998 = 0;
var Inst999 = 0;
var Inst1000 = 0;
var Inst1001 = 0;
var Inst1002 = 0;
var Inst1003 = 0;
var Inst1004 = 0;
var Inst1005 = 0;
var Inst1006 = 0;
var Inst1007 = 0;
var Inst1008 = 0;
var Inst1009 = 0;
var Inst1010 = 0;
var Inst1011 = 0;
var Inst1012 = 0;
var Inst1013 = 0;
var Inst1014 = 0;
var Inst1015 = 0;
var Inst1016 = 0;
var Inst1017 = 0;
var Inst1018 = 0;
var Inst1019 = 0;
var Inst1020 = 0;
var Inst1021 = 0;
var Inst1022 = 0;
var Inst1023 = 0;
var Inst1024 = 0;
var Inst1025 = 0;
var Inst1026 = 0;
var Inst1027 = 0;
var Inst1028 = 0;
var Inst1029 = 0;
var Inst1030 = 0;
var Inst1031 = 0;
var Inst1032 = 0;
var Inst1033 = 0;
var Inst1034 = 0;
var Inst1035 = 0;
var Inst1036 = 0;
var Inst1037 = 0;
var Inst1038 = 0;
var Inst1039 = 0;
var Inst1040 = 0;
var Inst1041 = 0;
var Inst1042 = 0;
var Inst1043 = 0;
var Inst1044 = 0;
var Inst1045 = 0;
var Inst1046 = 0;
var Inst1047 = 0;
var Inst1048 = 0;
var Inst1049 = 0;
var Inst1050 = 0;
var Inst1051 = 0;
var Inst1052 = 0;
var Inst1053 = 0;
var Inst1054 = 0;
var Inst1055 = 0;
var Inst1056 = 0;
var Inst1057 = 0;
var Inst1058 = 0;
var Inst1059 = 0;
var Inst1060 = 0;
var Inst1061 = 0;
var Inst1062 = 0;
var Inst1063 = 0;
var Inst1064 = 0;
var Inst1065 = 0;
var Inst1066 = 0;
var Inst1067 = 0;
var Inst1068 = 0;
var Inst1069 = 0;
var Inst1070 = 0;
var Inst1071 = 0;
var Inst1072 = 0;
var Inst1073 = 0;
var Inst1074 = 0;
var Inst1075 = 0;
var Inst1076 = 0;
var Inst1077 = 0;
var Inst1078 = 0;
var Inst1079 = 0;
var Inst1080 = 0;
var Inst1081 = 0;
var Inst1082 = 0;
var Inst1083 = 0;
var Inst1084 = 0;
var Inst1085 = 0;
var Inst1086 = 0;
var Inst1087 = 0;
var Inst1088 = 0;
var Inst1089 = 0;
var Inst1090 = 0;
var Inst1091 = 0;
var Inst1092 = 0;
var Inst1093 = 0;
var Inst1094 = 0;
var Inst1095 = 0;
var Inst1096 = 0;
var Inst1097 = 0;
var Inst1098 = 0;
var Inst1099 = 0;
var Inst1100 = 0;
var Inst1101 = 0;
var Inst1102 = 0;
var Inst1103 = 0;
var Inst1104 = 0;
var Inst1105 = 0;
var Inst1106 = 0;
var Inst1107 = 0;
var Inst1108 = 0;
var Inst1109 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2008 the V8 project authors. All rights reserved.
// Copyright 1996 John Maloney and Mario Wolczko.
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; either version 2 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
// This implementation of the DeltaBlue benchmark is derived
// from the Smalltalk implementation by John Maloney and Mario
// Wolczko. Some parts have been translated directly, whereas
// others have been modified more aggresively to make it feel
// more like a JavaScript program.
let __exceptionCounter = 0;
try { if (Inst0 <= 1000 && typeof (__exceptionCounter) != "undefined") {_RecordType("<1113,1131,21>",(__exceptionCounter)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (exception) != "undefined") {_RecordType("<1147,1156,23>",(exception)); Inst1++; } } catch(e) {}
function exception() {
try { if (Inst2 <= 1000 && typeof (__exceptionCounter) != "undefined") {_RecordType("<1167,1185,24>",(__exceptionCounter)); Inst2++; } } catch(e) {}
  if (__exceptionCounter++ % 35 === 0) {
try { if (Inst3 <= 1000 && typeof (__exceptionCounter) != "undefined") {_RecordType("<1212,1230,25>",(__exceptionCounter)); Inst3++; } } catch(e) {}
    throw __exceptionCounter;
  }
}
/**
 * A JavaScript implementation of the DeltaBlue constraint-solving
 * algorithm, as described in:
 *
 * "The DeltaBlue Algorithm: An Incremental Constraint Hierarchy Solver"
 *   Bjorn N. Freeman-Benson and John Maloney
 *   January 1990 Communications of the ACM,
 *   also available as University of Washington TR 89-08-06.
 *
 * Beware: this benchmark is written in a grotesque style where
 * the constraint model is built by side-effects from constructors.
 * I've kept it this way to avoid deviating too much from the original
 * implementation.
 */

/* --- O b j e c t   M o d e l --- */


try { if (Inst4 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<1838,1859,46>",(Object.defineProperty)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1838,1844,46>",(Object)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<1860,1876,46>",(Object.prototype)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1860,1866,46>",(Object)); Inst7++; } } catch(e) {}
Object.defineProperty(Object.prototype, "inheritsFrom", {
  value: function (shuper) {
try { if (Inst8 <= 1000 && typeof (shuper) != "undefined") {_RecordType("<1915,1921,47>",(shuper)); Inst8++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (Inheriter) != "undefined") {_RecordType("<1938,1947,48>",(Inheriter)); Inst9++; } } catch(e) {}
    function Inheriter() {
      ;
    }

try { if (Inst12 <= 1000 && typeof (shuper.prototype) != "undefined") {_RecordType("<1993,2009,52>",(shuper.prototype)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (shuper) != "undefined") {_RecordType("<1993,1999,52>",(shuper)); Inst13++; } } catch(e) {}
    Inheriter.prototype = shuper.prototype;
try { if (Inst10 <= 1000 && typeof (Inheriter.prototype) != "undefined") {_RecordType("<1971,1990,52>",(Inheriter.prototype)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Inheriter) != "undefined") {_RecordType("<1971,1980,52>",(Inheriter)); Inst11++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (Inheriter) != "undefined") {_RecordType("<2036,2045,53>",(Inheriter)); Inst15++; } } catch(e) {}
    this.prototype = new Inheriter();
try { if (Inst14 <= 1000 && typeof (this.prototype) != "undefined") {_RecordType("<2015,2029,53>",(this.prototype)); Inst14++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (shuper) != "undefined") {_RecordType("<2077,2083,54>",(shuper)); Inst17++; } } catch(e) {}
    this.superConstructor = shuper;
try { if (Inst16 <= 1000 && typeof (this.superConstructor) != "undefined") {_RecordType("<2053,2074,54>",(this.superConstructor)); Inst16++; } } catch(e) {}
  }
});

try { if (Inst18 <= 1000 && typeof (OrderedCollection) != "undefined") {_RecordType("<2103,2120,58>",(OrderedCollection)); Inst18++; } } catch(e) {}
function OrderedCollection() {
try { if (Inst20 <= 1000 && typeof (Array) != "undefined") {_RecordType("<2143,2148,59>",(Array)); Inst20++; } } catch(e) {}
  this.elms = new Array();
try { if (Inst19 <= 1000 && typeof (this.elms) != "undefined") {_RecordType("<2127,2136,59>",(this.elms)); Inst19++; } } catch(e) {}
}

OrderedCollection.prototype.add = function (elm) {
try { if (Inst24 <= 1000 && typeof (elm) != "undefined") {_RecordType("<2199,2202,62>",(elm)); Inst24++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (this.elms.push) != "undefined") {_RecordType("<2208,2222,63>",(this.elms.push)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (this.elms) != "undefined") {_RecordType("<2208,2217,63>",(this.elms)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (elm) != "undefined") {_RecordType("<2223,2226,63>",(elm)); Inst27++; } } catch(e) {}
  this.elms.push(elm);
};
try { if (Inst21 <= 1000 && typeof (OrderedCollection.prototype.add) != "undefined") {_RecordType("<2155,2186,62>",(OrderedCollection.prototype.add)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (OrderedCollection.prototype) != "undefined") {_RecordType("<2155,2182,62>",(OrderedCollection.prototype)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (OrderedCollection) != "undefined") {_RecordType("<2155,2172,62>",(OrderedCollection)); Inst23++; } } catch(e) {}

OrderedCollection.prototype.at = function (index) {
try { if (Inst31 <= 1000 && typeof (index) != "undefined") {_RecordType("<2276,2281,66>",(index)); Inst31++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (this.elms[index]) != "undefined") {_RecordType("<2294,2310,67>",(this.elms[index])); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (this.elms) != "undefined") {_RecordType("<2294,2303,67>",(this.elms)); Inst33++; } } catch(e) {}
  return this.elms[index];
};
try { if (Inst28 <= 1000 && typeof (OrderedCollection.prototype.at) != "undefined") {_RecordType("<2233,2263,66>",(OrderedCollection.prototype.at)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (OrderedCollection.prototype) != "undefined") {_RecordType("<2233,2260,66>",(OrderedCollection.prototype)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (OrderedCollection) != "undefined") {_RecordType("<2233,2250,66>",(OrderedCollection)); Inst30++; } } catch(e) {}

OrderedCollection.prototype.size = function () {
try { if (Inst37 <= 1000 && typeof (this.elms.length) != "undefined") {_RecordType("<2374,2390,71>",(this.elms.length)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (this.elms) != "undefined") {_RecordType("<2374,2383,71>",(this.elms)); Inst38++; } } catch(e) {}
  return this.elms.length;
};
try { if (Inst34 <= 1000 && typeof (OrderedCollection.prototype.size) != "undefined") {_RecordType("<2316,2348,70>",(OrderedCollection.prototype.size)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (OrderedCollection.prototype) != "undefined") {_RecordType("<2316,2343,70>",(OrderedCollection.prototype)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (OrderedCollection) != "undefined") {_RecordType("<2316,2333,70>",(OrderedCollection)); Inst36++; } } catch(e) {}

OrderedCollection.prototype.removeFirst = function () {
try { if (Inst42 <= 1000 && typeof (this.elms.pop) != "undefined") {_RecordType("<2461,2474,75>",(this.elms.pop)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (this.elms) != "undefined") {_RecordType("<2461,2470,75>",(this.elms)); Inst43++; } } catch(e) {}
  return this.elms.pop();
};
try { if (Inst39 <= 1000 && typeof (OrderedCollection.prototype.removeFirst) != "undefined") {_RecordType("<2396,2435,74>",(OrderedCollection.prototype.removeFirst)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (OrderedCollection.prototype) != "undefined") {_RecordType("<2396,2423,74>",(OrderedCollection.prototype)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (OrderedCollection) != "undefined") {_RecordType("<2396,2413,74>",(OrderedCollection)); Inst41++; } } catch(e) {}

OrderedCollection.prototype.remove = function (elm) {
try { if (Inst47 <= 1000 && typeof (elm) != "undefined") {_RecordType("<2529,2532,78>",(elm)); Inst47++; } } catch(e) {}
  var index = 0,
      skipped = 0;
try { if (Inst48 <= 1000 && typeof (index) != "undefined") {_RecordType("<2542,2547,79>",(index)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (skipped) != "undefined") {_RecordType("<2559,2566,80>",(skipped)); Inst49++; } } catch(e) {}

  for (var i = 0; i < this.elms.length; i++) {
try { if (Inst50 <= 1000 && typeof (i) != "undefined") {_RecordType("<2584,2585,82>",(i)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (i) != "undefined") {_RecordType("<2591,2592,82>",(i)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (this.elms.length) != "undefined") {_RecordType("<2595,2611,82>",(this.elms.length)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (this.elms) != "undefined") {_RecordType("<2595,2604,82>",(this.elms)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (i) != "undefined") {_RecordType("<2613,2614,82>",(i)); Inst54++; } } catch(e) {}
try { if (Inst56 <= 1000 && typeof (this.elms[i]) != "undefined") {_RecordType("<2636,2648,83>",(this.elms[i])); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (this.elms) != "undefined") {_RecordType("<2636,2645,83>",(this.elms)); Inst57++; } } catch(e) {}
    var value = this.elms[i];
try { if (Inst55 <= 1000 && typeof (value) != "undefined") {_RecordType("<2628,2633,83>",(value)); Inst55++; } } catch(e) {}

try { if (Inst58 <= 1000 && typeof (value) != "undefined") {_RecordType("<2659,2664,85>",(value)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (elm) != "undefined") {_RecordType("<2668,2671,85>",(elm)); Inst59++; } } catch(e) {}
    if (value != elm) {
try { if (Inst62 <= 1000 && typeof (value) != "undefined") {_RecordType("<2700,2705,86>",(value)); Inst62++; } } catch(e) {}
      this.elms[index] = value;
try { if (Inst60 <= 1000 && typeof (this.elms[index]) != "undefined") {_RecordType("<2681,2697,86>",(this.elms[index])); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (this.elms) != "undefined") {_RecordType("<2681,2690,86>",(this.elms)); Inst61++; } } catch(e) {}
try { if (Inst63 <= 1000 && typeof (index) != "undefined") {_RecordType("<2713,2718,87>",(index)); Inst63++; } } catch(e) {}
      index++;
    } else {
try { if (Inst64 <= 1000 && typeof (skipped) != "undefined") {_RecordType("<2741,2748,89>",(skipped)); Inst64++; } } catch(e) {}
      skipped++;
    }

try { if (Inst66 <= 1000 && typeof (e) != "undefined") {_RecordType("<2801,2802,94>",(e)); Inst66++; } } catch(e) {}
    try {
try { if (Inst65 <= 1000 && typeof (exception) != "undefined") {_RecordType("<2775,2784,93>",(exception)); Inst65++; } } catch(e) {}
      exception();
    } catch (e) {
      ;
    }
  }

  for (var i = 0; i < skipped; i++) {
try { if (Inst67 <= 1000 && typeof (i) != "undefined") {_RecordType("<2836,2837,99>",(i)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (i) != "undefined") {_RecordType("<2843,2844,99>",(i)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (skipped) != "undefined") {_RecordType("<2847,2854,99>",(skipped)); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (i) != "undefined") {_RecordType("<2856,2857,99>",(i)); Inst70++; } } catch(e) {}
try { if (Inst71 <= 1000 && typeof (this.elms.pop) != "undefined") {_RecordType("<2867,2880,100>",(this.elms.pop)); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (this.elms) != "undefined") {_RecordType("<2867,2876,100>",(this.elms)); Inst72++; } } catch(e) {}
    this.elms.pop();

try { if (Inst74 <= 1000 && typeof (e) != "undefined") {_RecordType("<2927,2928,104>",(e)); Inst74++; } } catch(e) {}
    try {
try { if (Inst73 <= 1000 && typeof (exception) != "undefined") {_RecordType("<2901,2910,103>",(exception)); Inst73++; } } catch(e) {}
      exception();
    } catch (e) {
      ;
    }
  }
};
try { if (Inst44 <= 1000 && typeof (OrderedCollection.prototype.remove) != "undefined") {_RecordType("<2482,2516,78>",(OrderedCollection.prototype.remove)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (OrderedCollection.prototype) != "undefined") {_RecordType("<2482,2509,78>",(OrderedCollection.prototype)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (OrderedCollection) != "undefined") {_RecordType("<2482,2499,78>",(OrderedCollection)); Inst46++; } } catch(e) {}
/* --- *
 * S t r e n g t h
 * --- */

/**
 * Strengths are used to measure the relative importance of constraints.
 * New strengths may be inserted in the strength hierarchy without
 * disrupting current constraints.  Strengths cannot be created outside
 * this class, so pointer comparison can be used for value comparison.
 */


try { if (Inst75 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<3294,3302,121>",(Strength)); Inst75++; } } catch(e) {}
function Strength(strengthValue, name) {
try { if (Inst76 <= 1000 && typeof (strengthValue) != "undefined") {_RecordType("<3303,3316,121>",(strengthValue)); Inst76++; } } catch(e) {}try { if (Inst77 <= 1000 && typeof (name) != "undefined") {_RecordType("<3318,3322,121>",(name)); Inst77++; } } catch(e) {}
try { if (Inst79 <= 1000 && typeof (strengthValue) != "undefined") {_RecordType("<3349,3362,122>",(strengthValue)); Inst79++; } } catch(e) {}
  this.strengthValue = strengthValue;
try { if (Inst78 <= 1000 && typeof (this.strengthValue) != "undefined") {_RecordType("<3328,3346,122>",(this.strengthValue)); Inst78++; } } catch(e) {}
try { if (Inst81 <= 1000 && typeof (name) != "undefined") {_RecordType("<3378,3382,123>",(name)); Inst81++; } } catch(e) {}
  this.name = name;
try { if (Inst80 <= 1000 && typeof (this.name) != "undefined") {_RecordType("<3366,3375,123>",(this.name)); Inst80++; } } catch(e) {}
}

Strength.stronger = function (s1, s2) {
try { if (Inst84 <= 1000 && typeof (s1) != "undefined") {_RecordType("<3417,3419,126>",(s1)); Inst84++; } } catch(e) {}try { if (Inst85 <= 1000 && typeof (s2) != "undefined") {_RecordType("<3421,3423,126>",(s2)); Inst85++; } } catch(e) {}
try { if (Inst86 <= 1000 && typeof (s1.strengthValue) != "undefined") {_RecordType("<3436,3452,127>",(s1.strengthValue)); Inst86++; } } catch(e) {}try { if (Inst87 <= 1000 && typeof (s1) != "undefined") {_RecordType("<3436,3438,127>",(s1)); Inst87++; } } catch(e) {}try { if (Inst88 <= 1000 && typeof (s2.strengthValue) != "undefined") {_RecordType("<3455,3471,127>",(s2.strengthValue)); Inst88++; } } catch(e) {}try { if (Inst89 <= 1000 && typeof (s2) != "undefined") {_RecordType("<3455,3457,127>",(s2)); Inst89++; } } catch(e) {}
  return s1.strengthValue < s2.strengthValue;
};
try { if (Inst82 <= 1000 && typeof (Strength.stronger) != "undefined") {_RecordType("<3387,3404,126>",(Strength.stronger)); Inst82++; } } catch(e) {}try { if (Inst83 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<3387,3395,126>",(Strength)); Inst83++; } } catch(e) {}

Strength.weaker = function (s1, s2) {
try { if (Inst92 <= 1000 && typeof (s1) != "undefined") {_RecordType("<3505,3507,130>",(s1)); Inst92++; } } catch(e) {}try { if (Inst93 <= 1000 && typeof (s2) != "undefined") {_RecordType("<3509,3511,130>",(s2)); Inst93++; } } catch(e) {}
try { if (Inst94 <= 1000 && typeof (s1.strengthValue) != "undefined") {_RecordType("<3524,3540,131>",(s1.strengthValue)); Inst94++; } } catch(e) {}try { if (Inst95 <= 1000 && typeof (s1) != "undefined") {_RecordType("<3524,3526,131>",(s1)); Inst95++; } } catch(e) {}try { if (Inst96 <= 1000 && typeof (s2.strengthValue) != "undefined") {_RecordType("<3543,3559,131>",(s2.strengthValue)); Inst96++; } } catch(e) {}try { if (Inst97 <= 1000 && typeof (s2) != "undefined") {_RecordType("<3543,3545,131>",(s2)); Inst97++; } } catch(e) {}
  return s1.strengthValue > s2.strengthValue;
};
try { if (Inst90 <= 1000 && typeof (Strength.weaker) != "undefined") {_RecordType("<3477,3492,130>",(Strength.weaker)); Inst90++; } } catch(e) {}try { if (Inst91 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<3477,3485,130>",(Strength)); Inst91++; } } catch(e) {}

Strength.weakestOf = function (s1, s2) {
try { if (Inst100 <= 1000 && typeof (s1) != "undefined") {_RecordType("<3596,3598,134>",(s1)); Inst100++; } } catch(e) {}try { if (Inst101 <= 1000 && typeof (s2) != "undefined") {_RecordType("<3600,3602,134>",(s2)); Inst101++; } } catch(e) {}
try { if (Inst102 <= 1000 && typeof (this.weaker) != "undefined") {_RecordType("<3615,3626,135>",(this.weaker)); Inst102++; } } catch(e) {}try { if (Inst103 <= 1000 && typeof (s1) != "undefined") {_RecordType("<3627,3629,135>",(s1)); Inst103++; } } catch(e) {}try { if (Inst104 <= 1000 && typeof (s2) != "undefined") {_RecordType("<3631,3633,135>",(s2)); Inst104++; } } catch(e) {}try { if (Inst105 <= 1000 && typeof (s1) != "undefined") {_RecordType("<3637,3639,135>",(s1)); Inst105++; } } catch(e) {}try { if (Inst106 <= 1000 && typeof (s2) != "undefined") {_RecordType("<3642,3644,135>",(s2)); Inst106++; } } catch(e) {}
  return this.weaker(s1, s2) ? s1 : s2;
};
try { if (Inst98 <= 1000 && typeof (Strength.weakestOf) != "undefined") {_RecordType("<3565,3583,134>",(Strength.weakestOf)); Inst98++; } } catch(e) {}try { if (Inst99 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<3565,3573,134>",(Strength)); Inst99++; } } catch(e) {}

Strength.strongest = function (s1, s2) {
try { if (Inst109 <= 1000 && typeof (s1) != "undefined") {_RecordType("<3681,3683,138>",(s1)); Inst109++; } } catch(e) {}try { if (Inst110 <= 1000 && typeof (s2) != "undefined") {_RecordType("<3685,3687,138>",(s2)); Inst110++; } } catch(e) {}
try { if (Inst111 <= 1000 && typeof (this.stronger) != "undefined") {_RecordType("<3700,3713,139>",(this.stronger)); Inst111++; } } catch(e) {}try { if (Inst112 <= 1000 && typeof (s1) != "undefined") {_RecordType("<3714,3716,139>",(s1)); Inst112++; } } catch(e) {}try { if (Inst113 <= 1000 && typeof (s2) != "undefined") {_RecordType("<3718,3720,139>",(s2)); Inst113++; } } catch(e) {}try { if (Inst114 <= 1000 && typeof (s1) != "undefined") {_RecordType("<3724,3726,139>",(s1)); Inst114++; } } catch(e) {}try { if (Inst115 <= 1000 && typeof (s2) != "undefined") {_RecordType("<3729,3731,139>",(s2)); Inst115++; } } catch(e) {}
  return this.stronger(s1, s2) ? s1 : s2;
};
try { if (Inst107 <= 1000 && typeof (Strength.strongest) != "undefined") {_RecordType("<3650,3668,138>",(Strength.strongest)); Inst107++; } } catch(e) {}try { if (Inst108 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<3650,3658,138>",(Strength)); Inst108++; } } catch(e) {}

Strength.prototype.nextWeaker = function () {
try { if (Inst119 <= 1000 && typeof (this.strengthValue) != "undefined") {_RecordType("<3793,3811,143>",(this.strengthValue)); Inst119++; } } catch(e) {}
  switch (this.strengthValue) {
    case 0:
try { if (Inst120 <= 1000 && typeof (Strength.WEAKEST) != "undefined") {_RecordType("<3840,3856,145>",(Strength.WEAKEST)); Inst120++; } } catch(e) {}try { if (Inst121 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<3840,3848,145>",(Strength)); Inst121++; } } catch(e) {}
      return Strength.WEAKEST;

    case 1:
try { if (Inst122 <= 1000 && typeof (Strength.WEAK_DEFAULT) != "undefined") {_RecordType("<3884,3905,148>",(Strength.WEAK_DEFAULT)); Inst122++; } } catch(e) {}try { if (Inst123 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<3884,3892,148>",(Strength)); Inst123++; } } catch(e) {}
      return Strength.WEAK_DEFAULT;

    case 2:
try { if (Inst124 <= 1000 && typeof (Strength.NORMAL) != "undefined") {_RecordType("<3933,3948,151>",(Strength.NORMAL)); Inst124++; } } catch(e) {}try { if (Inst125 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<3933,3941,151>",(Strength)); Inst125++; } } catch(e) {}
      return Strength.NORMAL;

    case 3:
try { if (Inst126 <= 1000 && typeof (Strength.STRONG_DEFAULT) != "undefined") {_RecordType("<3976,3999,154>",(Strength.STRONG_DEFAULT)); Inst126++; } } catch(e) {}try { if (Inst127 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<3976,3984,154>",(Strength)); Inst127++; } } catch(e) {}
      return Strength.STRONG_DEFAULT;

    case 4:
try { if (Inst128 <= 1000 && typeof (Strength.PREFERRED) != "undefined") {_RecordType("<4027,4045,157>",(Strength.PREFERRED)); Inst128++; } } catch(e) {}try { if (Inst129 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<4027,4035,157>",(Strength)); Inst129++; } } catch(e) {}
      return Strength.PREFERRED;

    case 5:
try { if (Inst130 <= 1000 && typeof (Strength.REQUIRED) != "undefined") {_RecordType("<4073,4090,160>",(Strength.REQUIRED)); Inst130++; } } catch(e) {}try { if (Inst131 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<4073,4081,160>",(Strength)); Inst131++; } } catch(e) {}
      return Strength.REQUIRED;
  }
}; // Strength constants.
try { if (Inst116 <= 1000 && typeof (Strength.prototype.nextWeaker) != "undefined") {_RecordType("<3737,3766,142>",(Strength.prototype.nextWeaker)); Inst116++; } } catch(e) {}try { if (Inst117 <= 1000 && typeof (Strength.prototype) != "undefined") {_RecordType("<3737,3755,142>",(Strength.prototype)); Inst117++; } } catch(e) {}try { if (Inst118 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<3737,3745,142>",(Strength)); Inst118++; } } catch(e) {}


try { if (Inst134 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<4148,4156,165>",(Strength)); Inst134++; } } catch(e) {}
Strength.REQUIRED = new Strength(0, "required");
try { if (Inst132 <= 1000 && typeof (Strength.REQUIRED) != "undefined") {_RecordType("<4124,4141,165>",(Strength.REQUIRED)); Inst132++; } } catch(e) {}try { if (Inst133 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<4124,4132,165>",(Strength)); Inst133++; } } catch(e) {}
try { if (Inst137 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<4204,4212,166>",(Strength)); Inst137++; } } catch(e) {}
Strength.STONG_PREFERRED = new Strength(1, "strongPreferred");
try { if (Inst135 <= 1000 && typeof (Strength.STONG_PREFERRED) != "undefined") {_RecordType("<4173,4197,166>",(Strength.STONG_PREFERRED)); Inst135++; } } catch(e) {}try { if (Inst136 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<4173,4181,166>",(Strength)); Inst136++; } } catch(e) {}
try { if (Inst140 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<4261,4269,167>",(Strength)); Inst140++; } } catch(e) {}
Strength.PREFERRED = new Strength(2, "preferred");
try { if (Inst138 <= 1000 && typeof (Strength.PREFERRED) != "undefined") {_RecordType("<4236,4254,167>",(Strength.PREFERRED)); Inst138++; } } catch(e) {}try { if (Inst139 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<4236,4244,167>",(Strength)); Inst139++; } } catch(e) {}
try { if (Inst143 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<4317,4325,168>",(Strength)); Inst143++; } } catch(e) {}
Strength.STRONG_DEFAULT = new Strength(3, "strongDefault");
try { if (Inst141 <= 1000 && typeof (Strength.STRONG_DEFAULT) != "undefined") {_RecordType("<4287,4310,168>",(Strength.STRONG_DEFAULT)); Inst141++; } } catch(e) {}try { if (Inst142 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<4287,4295,168>",(Strength)); Inst142++; } } catch(e) {}
try { if (Inst146 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<4369,4377,169>",(Strength)); Inst146++; } } catch(e) {}
Strength.NORMAL = new Strength(4, "normal");
try { if (Inst144 <= 1000 && typeof (Strength.NORMAL) != "undefined") {_RecordType("<4347,4362,169>",(Strength.NORMAL)); Inst144++; } } catch(e) {}try { if (Inst145 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<4347,4355,169>",(Strength)); Inst145++; } } catch(e) {}
try { if (Inst149 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<4420,4428,170>",(Strength)); Inst149++; } } catch(e) {}
Strength.WEAK_DEFAULT = new Strength(5, "weakDefault");
try { if (Inst147 <= 1000 && typeof (Strength.WEAK_DEFAULT) != "undefined") {_RecordType("<4392,4413,170>",(Strength.WEAK_DEFAULT)); Inst147++; } } catch(e) {}try { if (Inst148 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<4392,4400,170>",(Strength)); Inst148++; } } catch(e) {}
try { if (Inst152 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<4471,4479,171>",(Strength)); Inst152++; } } catch(e) {}
Strength.WEAKEST = new Strength(6, "weakest");
try { if (Inst150 <= 1000 && typeof (Strength.WEAKEST) != "undefined") {_RecordType("<4448,4464,171>",(Strength.WEAKEST)); Inst150++; } } catch(e) {}try { if (Inst151 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<4448,4456,171>",(Strength)); Inst151++; } } catch(e) {}
/* --- *
 * C o n s t r a i n t
 * --- */

/**
 * An abstract class representing a system-maintainable relationship
 * (or "constraint") between a set of variables. A constraint supplies
 * a strength instance variable; concrete subclasses provide a means
 * of storing the constrained variables and other information required
 * to represent a constraint.
 */

try { if (Inst153 <= 1000 && typeof (Constraint) != "undefined") {_RecordType("<4866,4876,184>",(Constraint)); Inst153++; } } catch(e) {}
function Constraint(strength) {
try { if (Inst154 <= 1000 && typeof (strength) != "undefined") {_RecordType("<4877,4885,184>",(strength)); Inst154++; } } catch(e) {}
try { if (Inst156 <= 1000 && typeof (strength) != "undefined") {_RecordType("<4907,4915,185>",(strength)); Inst156++; } } catch(e) {}
  this.strength = strength;
try { if (Inst155 <= 1000 && typeof (this.strength) != "undefined") {_RecordType("<4891,4904,185>",(this.strength)); Inst155++; } } catch(e) {}
}
/**
 * Activate this constraint and attempt to satisfy it.
 */


Constraint.prototype.addConstraint = function () {
try { if (Inst160 <= 1000 && typeof (this.addToGraph) != "undefined") {_RecordType("<5037,5052,193>",(this.addToGraph)); Inst160++; } } catch(e) {}
  this.addToGraph();
try { if (Inst161 <= 1000 && typeof (planner.incrementalAdd) != "undefined") {_RecordType("<5058,5080,194>",(planner.incrementalAdd)); Inst161++; } } catch(e) {}try { if (Inst162 <= 1000 && typeof (planner) != "undefined") {_RecordType("<5058,5065,194>",(planner)); Inst162++; } } catch(e) {}
  planner.incrementalAdd(this);
};
try { if (Inst157 <= 1000 && typeof (Constraint.prototype.addConstraint) != "undefined") {_RecordType("<4984,5018,192>",(Constraint.prototype.addConstraint)); Inst157++; } } catch(e) {}try { if (Inst158 <= 1000 && typeof (Constraint.prototype) != "undefined") {_RecordType("<4984,5004,192>",(Constraint.prototype)); Inst158++; } } catch(e) {}try { if (Inst159 <= 1000 && typeof (Constraint) != "undefined") {_RecordType("<4984,4994,192>",(Constraint)); Inst159++; } } catch(e) {}
/**
 * Attempt to find a way to enforce this constraint. If successful,
 * record the solution, perhaps modifying the current dataflow
 * graph. Answer the constraint that this constraint overrides, if
 * there is one, or nil, if there isn't.
 * Assume: I am not already satisfied.
 */


Constraint.prototype.satisfy = function (mark) {
try { if (Inst166 <= 1000 && typeof (mark) != "undefined") {_RecordType("<5420,5424,205>",(mark)); Inst166++; } } catch(e) {}
try { if (Inst167 <= 1000 && typeof (this.chooseMethod) != "undefined") {_RecordType("<5430,5447,206>",(this.chooseMethod)); Inst167++; } } catch(e) {}try { if (Inst168 <= 1000 && typeof (mark) != "undefined") {_RecordType("<5448,5452,206>",(mark)); Inst168++; } } catch(e) {}
  this.chooseMethod(mark);

try { if (Inst169 <= 1000 && typeof (this.isSatisfied) != "undefined") {_RecordType("<5463,5479,208>",(this.isSatisfied)); Inst169++; } } catch(e) {}
  if (!this.isSatisfied()) {
try { if (Inst170 <= 1000 && typeof (this.strength) != "undefined") {_RecordType("<5493,5506,209>",(this.strength)); Inst170++; } } catch(e) {}try { if (Inst171 <= 1000 && typeof (Strength.REQUIRED) != "undefined") {_RecordType("<5510,5527,209>",(Strength.REQUIRED)); Inst171++; } } catch(e) {}try { if (Inst172 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<5510,5518,209>",(Strength)); Inst172++; } } catch(e) {}
    if (this.strength == Strength.REQUIRED) {
try { if (Inst173 <= 1000 && typeof (alert) != "undefined") {_RecordType("<5537,5542,210>",(alert)); Inst173++; } } catch(e) {}
      alert("Could not satisfy a required constraint!");
    }

    return null;
  }

try { if (Inst174 <= 1000 && typeof (this.markInputs) != "undefined") {_RecordType("<5619,5634,216>",(this.markInputs)); Inst174++; } } catch(e) {}try { if (Inst175 <= 1000 && typeof (mark) != "undefined") {_RecordType("<5635,5639,216>",(mark)); Inst175++; } } catch(e) {}
  this.markInputs(mark);
try { if (Inst177 <= 1000 && typeof (this.output) != "undefined") {_RecordType("<5654,5665,217>",(this.output)); Inst177++; } } catch(e) {}
  var out = this.output();
try { if (Inst176 <= 1000 && typeof (out) != "undefined") {_RecordType("<5648,5651,217>",(out)); Inst176++; } } catch(e) {}
try { if (Inst179 <= 1000 && typeof (out.determinedBy) != "undefined") {_RecordType("<5688,5704,218>",(out.determinedBy)); Inst179++; } } catch(e) {}try { if (Inst180 <= 1000 && typeof (out) != "undefined") {_RecordType("<5688,5691,218>",(out)); Inst180++; } } catch(e) {}
  var overridden = out.determinedBy;
try { if (Inst178 <= 1000 && typeof (overridden) != "undefined") {_RecordType("<5675,5685,218>",(overridden)); Inst178++; } } catch(e) {}

try { if (Inst181 <= 1000 && typeof (overridden) != "undefined") {_RecordType("<5713,5723,220>",(overridden)); Inst181++; } } catch(e) {}
  if (overridden != null) {
try { if (Inst182 <= 1000 && typeof (overridden.markUnsatisfied) != "undefined") {_RecordType("<5739,5765,221>",(overridden.markUnsatisfied)); Inst182++; } } catch(e) {}try { if (Inst183 <= 1000 && typeof (overridden) != "undefined") {_RecordType("<5739,5749,221>",(overridden)); Inst183++; } } catch(e) {}
    overridden.markUnsatisfied();
  }

  out.determinedBy = this;
try { if (Inst184 <= 1000 && typeof (out.determinedBy) != "undefined") {_RecordType("<5776,5792,224>",(out.determinedBy)); Inst184++; } } catch(e) {}try { if (Inst185 <= 1000 && typeof (out) != "undefined") {_RecordType("<5776,5779,224>",(out)); Inst185++; } } catch(e) {}

try { if (Inst186 <= 1000 && typeof (planner.addPropagate) != "undefined") {_RecordType("<5809,5829,226>",(planner.addPropagate)); Inst186++; } } catch(e) {}try { if (Inst187 <= 1000 && typeof (planner) != "undefined") {_RecordType("<5809,5816,226>",(planner)); Inst187++; } } catch(e) {}try { if (Inst188 <= 1000 && typeof (mark) != "undefined") {_RecordType("<5836,5840,226>",(mark)); Inst188++; } } catch(e) {}
  if (!planner.addPropagate(this, mark)) {
try { if (Inst189 <= 1000 && typeof (alert) != "undefined") {_RecordType("<5849,5854,227>",(alert)); Inst189++; } } catch(e) {}
    alert("Cycle encountered");
  }

try { if (Inst192 <= 1000 && typeof (mark) != "undefined") {_RecordType("<5895,5899,230>",(mark)); Inst192++; } } catch(e) {}
  out.mark = mark;
try { if (Inst190 <= 1000 && typeof (out.mark) != "undefined") {_RecordType("<5884,5892,230>",(out.mark)); Inst190++; } } catch(e) {}try { if (Inst191 <= 1000 && typeof (out) != "undefined") {_RecordType("<5884,5887,230>",(out)); Inst191++; } } catch(e) {}
try { if (Inst193 <= 1000 && typeof (overridden) != "undefined") {_RecordType("<5910,5920,231>",(overridden)); Inst193++; } } catch(e) {}
  return overridden;
};
try { if (Inst163 <= 1000 && typeof (Constraint.prototype.satisfy) != "undefined") {_RecordType("<5379,5407,205>",(Constraint.prototype.satisfy)); Inst163++; } } catch(e) {}try { if (Inst164 <= 1000 && typeof (Constraint.prototype) != "undefined") {_RecordType("<5379,5399,205>",(Constraint.prototype)); Inst164++; } } catch(e) {}try { if (Inst165 <= 1000 && typeof (Constraint) != "undefined") {_RecordType("<5379,5389,205>",(Constraint)); Inst165++; } } catch(e) {}

Constraint.prototype.destroyConstraint = function () {
try { if (Inst197 <= 1000 && typeof (this.isSatisfied) != "undefined") {_RecordType("<5987,6003,235>",(this.isSatisfied)); Inst197++; } } catch(e) {}
  if (this.isSatisfied()) {
try { if (Inst198 <= 1000 && typeof (planner.incrementalRemove) != "undefined") {_RecordType("<6013,6038,236>",(planner.incrementalRemove)); Inst198++; } } catch(e) {}try { if (Inst199 <= 1000 && typeof (planner) != "undefined") {_RecordType("<6013,6020,236>",(planner)); Inst199++; } } catch(e) {}
    planner.incrementalRemove(this);
  } else {
try { if (Inst200 <= 1000 && typeof (this.removeFromGraph) != "undefined") {_RecordType("<6061,6081,238>",(this.removeFromGraph)); Inst200++; } } catch(e) {}
    this.removeFromGraph();
  }
};
try { if (Inst194 <= 1000 && typeof (Constraint.prototype.destroyConstraint) != "undefined") {_RecordType("<5926,5964,234>",(Constraint.prototype.destroyConstraint)); Inst194++; } } catch(e) {}try { if (Inst195 <= 1000 && typeof (Constraint.prototype) != "undefined") {_RecordType("<5926,5946,234>",(Constraint.prototype)); Inst195++; } } catch(e) {}try { if (Inst196 <= 1000 && typeof (Constraint) != "undefined") {_RecordType("<5926,5936,234>",(Constraint)); Inst196++; } } catch(e) {}
/**
 * Normal constraints are not input constraints.  An input constraint
 * is one that depends on external state, such as the mouse, the
 * keybord, a clock, or some arbitraty piece of imperative code.
 */


Constraint.prototype.isInput = function () {
  return false;
};
try { if (Inst201 <= 1000 && typeof (Constraint.prototype.isInput) != "undefined") {_RecordType("<6302,6330,248>",(Constraint.prototype.isInput)); Inst201++; } } catch(e) {}try { if (Inst202 <= 1000 && typeof (Constraint.prototype) != "undefined") {_RecordType("<6302,6322,248>",(Constraint.prototype)); Inst202++; } } catch(e) {}try { if (Inst203 <= 1000 && typeof (Constraint) != "undefined") {_RecordType("<6302,6312,248>",(Constraint)); Inst203++; } } catch(e) {}
/* --- *
 * U n a r y   C o n s t r a i n t
 * --- */

/**
 * Abstract superclass for constraints having a single possible output
 * variable.
 */


try { if (Inst204 <= 1000 && typeof (UnaryConstraint) != "undefined") {_RecordType("<6524,6539,261>",(UnaryConstraint)); Inst204++; } } catch(e) {}
function UnaryConstraint(v, strength) {
try { if (Inst205 <= 1000 && typeof (v) != "undefined") {_RecordType("<6540,6541,261>",(v)); Inst205++; } } catch(e) {}try { if (Inst206 <= 1000 && typeof (strength) != "undefined") {_RecordType("<6543,6551,261>",(strength)); Inst206++; } } catch(e) {}
try { if (Inst207 <= 1000 && typeof (UnaryConstraint.superConstructor.call) != "undefined") {_RecordType("<6557,6594,262>",(UnaryConstraint.superConstructor.call)); Inst207++; } } catch(e) {}try { if (Inst208 <= 1000 && typeof (UnaryConstraint.superConstructor) != "undefined") {_RecordType("<6557,6589,262>",(UnaryConstraint.superConstructor)); Inst208++; } } catch(e) {}try { if (Inst209 <= 1000 && typeof (UnaryConstraint) != "undefined") {_RecordType("<6557,6572,262>",(UnaryConstraint)); Inst209++; } } catch(e) {}try { if (Inst210 <= 1000 && typeof (strength) != "undefined") {_RecordType("<6601,6609,262>",(strength)); Inst210++; } } catch(e) {}
  UnaryConstraint.superConstructor.call(this, strength);
try { if (Inst212 <= 1000 && typeof (v) != "undefined") {_RecordType("<6630,6631,263>",(v)); Inst212++; } } catch(e) {}
  this.myOutput = v;
try { if (Inst211 <= 1000 && typeof (this.myOutput) != "undefined") {_RecordType("<6614,6627,263>",(this.myOutput)); Inst211++; } } catch(e) {}
  this.satisfied = false;
try { if (Inst213 <= 1000 && typeof (this.satisfied) != "undefined") {_RecordType("<6635,6649,264>",(this.satisfied)); Inst213++; } } catch(e) {}
try { if (Inst214 <= 1000 && typeof (this.addConstraint) != "undefined") {_RecordType("<6661,6679,265>",(this.addConstraint)); Inst214++; } } catch(e) {}
  this.addConstraint();
}

try { if (Inst215 <= 1000 && typeof (UnaryConstraint.inheritsFrom) != "undefined") {_RecordType("<6686,6714,268>",(UnaryConstraint.inheritsFrom)); Inst215++; } } catch(e) {}try { if (Inst216 <= 1000 && typeof (UnaryConstraint) != "undefined") {_RecordType("<6686,6701,268>",(UnaryConstraint)); Inst216++; } } catch(e) {}try { if (Inst217 <= 1000 && typeof (Constraint) != "undefined") {_RecordType("<6715,6725,268>",(Constraint)); Inst217++; } } catch(e) {}
UnaryConstraint.inheritsFrom(Constraint);
/**
 * Adds this constraint to the constraint graph
 */

UnaryConstraint.prototype.addToGraph = function () {
try { if (Inst221 <= 1000 && typeof (this.myOutput.addConstraint) != "undefined") {_RecordType("<6840,6867,274>",(this.myOutput.addConstraint)); Inst221++; } } catch(e) {}try { if (Inst222 <= 1000 && typeof (this.myOutput) != "undefined") {_RecordType("<6840,6853,274>",(this.myOutput)); Inst222++; } } catch(e) {}
  this.myOutput.addConstraint(this);
  this.satisfied = false;
try { if (Inst223 <= 1000 && typeof (this.satisfied) != "undefined") {_RecordType("<6877,6891,275>",(this.satisfied)); Inst223++; } } catch(e) {}
};
try { if (Inst218 <= 1000 && typeof (UnaryConstraint.prototype.addToGraph) != "undefined") {_RecordType("<6785,6821,273>",(UnaryConstraint.prototype.addToGraph)); Inst218++; } } catch(e) {}try { if (Inst219 <= 1000 && typeof (UnaryConstraint.prototype) != "undefined") {_RecordType("<6785,6810,273>",(UnaryConstraint.prototype)); Inst219++; } } catch(e) {}try { if (Inst220 <= 1000 && typeof (UnaryConstraint) != "undefined") {_RecordType("<6785,6800,273>",(UnaryConstraint)); Inst220++; } } catch(e) {}
/**
 * Decides if this constraint can be satisfied and records that
 * decision.
 */


UnaryConstraint.prototype.chooseMethod = function (mark) {
try { if (Inst227 <= 1000 && typeof (mark) != "undefined") {_RecordType("<7042,7046,283>",(mark)); Inst227++; } } catch(e) {}
try { if (Inst229 <= 1000 && typeof (this.myOutput.mark) != "undefined") {_RecordType("<7069,7087,284>",(this.myOutput.mark)); Inst229++; } } catch(e) {}try { if (Inst230 <= 1000 && typeof (this.myOutput) != "undefined") {_RecordType("<7069,7082,284>",(this.myOutput)); Inst230++; } } catch(e) {}try { if (Inst231 <= 1000 && typeof (mark) != "undefined") {_RecordType("<7091,7095,284>",(mark)); Inst231++; } } catch(e) {}try { if (Inst232 <= 1000 && typeof (Strength.stronger) != "undefined") {_RecordType("<7099,7116,284>",(Strength.stronger)); Inst232++; } } catch(e) {}try { if (Inst233 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<7099,7107,284>",(Strength)); Inst233++; } } catch(e) {}try { if (Inst234 <= 1000 && typeof (this.strength) != "undefined") {_RecordType("<7117,7130,284>",(this.strength)); Inst234++; } } catch(e) {}try { if (Inst235 <= 1000 && typeof (this.myOutput.walkStrength) != "undefined") {_RecordType("<7132,7158,284>",(this.myOutput.walkStrength)); Inst235++; } } catch(e) {}try { if (Inst236 <= 1000 && typeof (this.myOutput) != "undefined") {_RecordType("<7132,7145,284>",(this.myOutput)); Inst236++; } } catch(e) {}
  this.satisfied = this.myOutput.mark != mark && Strength.stronger(this.strength, this.myOutput.walkStrength);
try { if (Inst228 <= 1000 && typeof (this.satisfied) != "undefined") {_RecordType("<7052,7066,284>",(this.satisfied)); Inst228++; } } catch(e) {}
};
try { if (Inst224 <= 1000 && typeof (UnaryConstraint.prototype.chooseMethod) != "undefined") {_RecordType("<6991,7029,283>",(UnaryConstraint.prototype.chooseMethod)); Inst224++; } } catch(e) {}try { if (Inst225 <= 1000 && typeof (UnaryConstraint.prototype) != "undefined") {_RecordType("<6991,7016,283>",(UnaryConstraint.prototype)); Inst225++; } } catch(e) {}try { if (Inst226 <= 1000 && typeof (UnaryConstraint) != "undefined") {_RecordType("<6991,7006,283>",(UnaryConstraint)); Inst226++; } } catch(e) {}
/**
 * Returns true if this constraint is satisfied in the current solution.
 */


UnaryConstraint.prototype.isSatisfied = function () {
try { if (Inst240 <= 1000 && typeof (this.satisfied) != "undefined") {_RecordType("<7310,7324,292>",(this.satisfied)); Inst240++; } } catch(e) {}
  return this.satisfied;
};
try { if (Inst237 <= 1000 && typeof (UnaryConstraint.prototype.isSatisfied) != "undefined") {_RecordType("<7247,7284,291>",(UnaryConstraint.prototype.isSatisfied)); Inst237++; } } catch(e) {}try { if (Inst238 <= 1000 && typeof (UnaryConstraint.prototype) != "undefined") {_RecordType("<7247,7272,291>",(UnaryConstraint.prototype)); Inst238++; } } catch(e) {}try { if (Inst239 <= 1000 && typeof (UnaryConstraint) != "undefined") {_RecordType("<7247,7262,291>",(UnaryConstraint)); Inst239++; } } catch(e) {}

UnaryConstraint.prototype.markInputs = function (mark) {
try { if (Inst244 <= 1000 && typeof (mark) != "undefined") {_RecordType("<7379,7383,295>",(mark)); Inst244++; } } catch(e) {}
  ;
} // has no inputs

/**
 * Returns the current output variable.
 */
;
try { if (Inst241 <= 1000 && typeof (UnaryConstraint.prototype.markInputs) != "undefined") {_RecordType("<7330,7366,295>",(UnaryConstraint.prototype.markInputs)); Inst241++; } } catch(e) {}try { if (Inst242 <= 1000 && typeof (UnaryConstraint.prototype) != "undefined") {_RecordType("<7330,7355,295>",(UnaryConstraint.prototype)); Inst242++; } } catch(e) {}try { if (Inst243 <= 1000 && typeof (UnaryConstraint) != "undefined") {_RecordType("<7330,7345,295>",(UnaryConstraint)); Inst243++; } } catch(e) {}

UnaryConstraint.prototype.output = function () {
try { if (Inst248 <= 1000 && typeof (this.myOutput) != "undefined") {_RecordType("<7520,7533,305>",(this.myOutput)); Inst248++; } } catch(e) {}
  return this.myOutput;
};
try { if (Inst245 <= 1000 && typeof (UnaryConstraint.prototype.output) != "undefined") {_RecordType("<7462,7494,304>",(UnaryConstraint.prototype.output)); Inst245++; } } catch(e) {}try { if (Inst246 <= 1000 && typeof (UnaryConstraint.prototype) != "undefined") {_RecordType("<7462,7487,304>",(UnaryConstraint.prototype)); Inst246++; } } catch(e) {}try { if (Inst247 <= 1000 && typeof (UnaryConstraint) != "undefined") {_RecordType("<7462,7477,304>",(UnaryConstraint)); Inst247++; } } catch(e) {}
/**
 * Calculate the walkabout strength, the stay flag, and, if it is
 * 'stay', the value for the current output of this constraint. Assume
 * this constraint is satisfied.
 */


UnaryConstraint.prototype.recalculate = function () {
try { if (Inst254 <= 1000 && typeof (this.strength) != "undefined") {_RecordType("<7803,7816,315>",(this.strength)); Inst254++; } } catch(e) {}
  this.myOutput.walkStrength = this.strength;
try { if (Inst252 <= 1000 && typeof (this.myOutput.walkStrength) != "undefined") {_RecordType("<7774,7800,315>",(this.myOutput.walkStrength)); Inst252++; } } catch(e) {}try { if (Inst253 <= 1000 && typeof (this.myOutput) != "undefined") {_RecordType("<7774,7787,315>",(this.myOutput)); Inst253++; } } catch(e) {}
try { if (Inst257 <= 1000 && typeof (this.isInput) != "undefined") {_RecordType("<7842,7854,316>",(this.isInput)); Inst257++; } } catch(e) {}
  this.myOutput.stay = !this.isInput();
try { if (Inst255 <= 1000 && typeof (this.myOutput.stay) != "undefined") {_RecordType("<7820,7838,316>",(this.myOutput.stay)); Inst255++; } } catch(e) {}try { if (Inst256 <= 1000 && typeof (this.myOutput) != "undefined") {_RecordType("<7820,7833,316>",(this.myOutput)); Inst256++; } } catch(e) {}

try { if (Inst258 <= 1000 && typeof (this.myOutput.stay) != "undefined") {_RecordType("<7865,7883,318>",(this.myOutput.stay)); Inst258++; } } catch(e) {}try { if (Inst259 <= 1000 && typeof (this.myOutput) != "undefined") {_RecordType("<7865,7878,318>",(this.myOutput)); Inst259++; } } catch(e) {}
  if (this.myOutput.stay) {
try { if (Inst260 <= 1000 && typeof (this.execute) != "undefined") {_RecordType("<7891,7903,319>",(this.execute)); Inst260++; } } catch(e) {}
    this.execute();
  } // Stay optimization

};
try { if (Inst249 <= 1000 && typeof (UnaryConstraint.prototype.recalculate) != "undefined") {_RecordType("<7718,7755,314>",(UnaryConstraint.prototype.recalculate)); Inst249++; } } catch(e) {}try { if (Inst250 <= 1000 && typeof (UnaryConstraint.prototype) != "undefined") {_RecordType("<7718,7743,314>",(UnaryConstraint.prototype)); Inst250++; } } catch(e) {}try { if (Inst251 <= 1000 && typeof (UnaryConstraint) != "undefined") {_RecordType("<7718,7733,314>",(UnaryConstraint)); Inst251++; } } catch(e) {}
/**
 * Records that this constraint is unsatisfied
 */


UnaryConstraint.prototype.markUnsatisfied = function () {
  this.satisfied = false;
try { if (Inst264 <= 1000 && typeof (this.satisfied) != "undefined") {_RecordType("<8053,8067,329>",(this.satisfied)); Inst264++; } } catch(e) {}
};
try { if (Inst261 <= 1000 && typeof (UnaryConstraint.prototype.markUnsatisfied) != "undefined") {_RecordType("<7993,8034,328>",(UnaryConstraint.prototype.markUnsatisfied)); Inst261++; } } catch(e) {}try { if (Inst262 <= 1000 && typeof (UnaryConstraint.prototype) != "undefined") {_RecordType("<7993,8018,328>",(UnaryConstraint.prototype)); Inst262++; } } catch(e) {}try { if (Inst263 <= 1000 && typeof (UnaryConstraint) != "undefined") {_RecordType("<7993,8008,328>",(UnaryConstraint)); Inst263++; } } catch(e) {}

UnaryConstraint.prototype.inputsKnown = function () {
  return true;
};
try { if (Inst265 <= 1000 && typeof (UnaryConstraint.prototype.inputsKnown) != "undefined") {_RecordType("<8081,8118,332>",(UnaryConstraint.prototype.inputsKnown)); Inst265++; } } catch(e) {}try { if (Inst266 <= 1000 && typeof (UnaryConstraint.prototype) != "undefined") {_RecordType("<8081,8106,332>",(UnaryConstraint.prototype)); Inst266++; } } catch(e) {}try { if (Inst267 <= 1000 && typeof (UnaryConstraint) != "undefined") {_RecordType("<8081,8096,332>",(UnaryConstraint)); Inst267++; } } catch(e) {}

UnaryConstraint.prototype.removeFromGraph = function () {
try { if (Inst271 <= 1000 && typeof (this.myOutput) != "undefined") {_RecordType("<8218,8231,337>",(this.myOutput)); Inst271++; } } catch(e) {}
  if (this.myOutput != null) {
try { if (Inst272 <= 1000 && typeof (this.myOutput.removeConstraint) != "undefined") {_RecordType("<8247,8277,338>",(this.myOutput.removeConstraint)); Inst272++; } } catch(e) {}try { if (Inst273 <= 1000 && typeof (this.myOutput) != "undefined") {_RecordType("<8247,8260,338>",(this.myOutput)); Inst273++; } } catch(e) {}
    this.myOutput.removeConstraint(this);
  }

  this.satisfied = false;
try { if (Inst274 <= 1000 && typeof (this.satisfied) != "undefined") {_RecordType("<8292,8306,341>",(this.satisfied)); Inst274++; } } catch(e) {}
};
try { if (Inst268 <= 1000 && typeof (UnaryConstraint.prototype.removeFromGraph) != "undefined") {_RecordType("<8154,8195,336>",(UnaryConstraint.prototype.removeFromGraph)); Inst268++; } } catch(e) {}try { if (Inst269 <= 1000 && typeof (UnaryConstraint.prototype) != "undefined") {_RecordType("<8154,8179,336>",(UnaryConstraint.prototype)); Inst269++; } } catch(e) {}try { if (Inst270 <= 1000 && typeof (UnaryConstraint) != "undefined") {_RecordType("<8154,8169,336>",(UnaryConstraint)); Inst270++; } } catch(e) {}
/* --- *
 * S t a y   C o n s t r a i n t
 * --- */

/**
 * Variables that should, with some level of preference, stay the same.
 * Planners may exploit the fact that instances, if satisfied, will not
 * change their output during plan execution.  This is called "stay
 * optimization".
 */


try { if (Inst275 <= 1000 && typeof (StayConstraint) != "undefined") {_RecordType("<8621,8635,355>",(StayConstraint)); Inst275++; } } catch(e) {}
function StayConstraint(v, str) {
try { if (Inst276 <= 1000 && typeof (v) != "undefined") {_RecordType("<8636,8637,355>",(v)); Inst276++; } } catch(e) {}try { if (Inst277 <= 1000 && typeof (str) != "undefined") {_RecordType("<8639,8642,355>",(str)); Inst277++; } } catch(e) {}
try { if (Inst278 <= 1000 && typeof (StayConstraint.superConstructor.call) != "undefined") {_RecordType("<8648,8684,356>",(StayConstraint.superConstructor.call)); Inst278++; } } catch(e) {}try { if (Inst279 <= 1000 && typeof (StayConstraint.superConstructor) != "undefined") {_RecordType("<8648,8679,356>",(StayConstraint.superConstructor)); Inst279++; } } catch(e) {}try { if (Inst280 <= 1000 && typeof (StayConstraint) != "undefined") {_RecordType("<8648,8662,356>",(StayConstraint)); Inst280++; } } catch(e) {}try { if (Inst281 <= 1000 && typeof (v) != "undefined") {_RecordType("<8691,8692,356>",(v)); Inst281++; } } catch(e) {}try { if (Inst282 <= 1000 && typeof (str) != "undefined") {_RecordType("<8694,8697,356>",(str)); Inst282++; } } catch(e) {}
  StayConstraint.superConstructor.call(this, v, str);
}

try { if (Inst283 <= 1000 && typeof (StayConstraint.inheritsFrom) != "undefined") {_RecordType("<8703,8730,359>",(StayConstraint.inheritsFrom)); Inst283++; } } catch(e) {}try { if (Inst284 <= 1000 && typeof (StayConstraint) != "undefined") {_RecordType("<8703,8717,359>",(StayConstraint)); Inst284++; } } catch(e) {}try { if (Inst285 <= 1000 && typeof (UnaryConstraint) != "undefined") {_RecordType("<8731,8746,359>",(UnaryConstraint)); Inst285++; } } catch(e) {}
StayConstraint.inheritsFrom(UnaryConstraint);

StayConstraint.prototype.execute = function () {
  ;
} // Stay constraints do nothing

/* --- *
 * E d i t   C o n s t r a i n t
 * --- */

/**
 * A unary input constraint used to mark a variable that the client
 * wishes to change.
 */
;
try { if (Inst286 <= 1000 && typeof (StayConstraint.prototype.execute) != "undefined") {_RecordType("<8750,8782,361>",(StayConstraint.prototype.execute)); Inst286++; } } catch(e) {}try { if (Inst287 <= 1000 && typeof (StayConstraint.prototype) != "undefined") {_RecordType("<8750,8774,361>",(StayConstraint.prototype)); Inst287++; } } catch(e) {}try { if (Inst288 <= 1000 && typeof (StayConstraint) != "undefined") {_RecordType("<8750,8764,361>",(StayConstraint)); Inst288++; } } catch(e) {}

try { if (Inst289 <= 1000 && typeof (EditConstraint) != "undefined") {_RecordType("<8999,9013,375>",(EditConstraint)); Inst289++; } } catch(e) {}
function EditConstraint(v, str) {
try { if (Inst290 <= 1000 && typeof (v) != "undefined") {_RecordType("<9014,9015,375>",(v)); Inst290++; } } catch(e) {}try { if (Inst291 <= 1000 && typeof (str) != "undefined") {_RecordType("<9017,9020,375>",(str)); Inst291++; } } catch(e) {}
try { if (Inst292 <= 1000 && typeof (EditConstraint.superConstructor.call) != "undefined") {_RecordType("<9026,9062,376>",(EditConstraint.superConstructor.call)); Inst292++; } } catch(e) {}try { if (Inst293 <= 1000 && typeof (EditConstraint.superConstructor) != "undefined") {_RecordType("<9026,9057,376>",(EditConstraint.superConstructor)); Inst293++; } } catch(e) {}try { if (Inst294 <= 1000 && typeof (EditConstraint) != "undefined") {_RecordType("<9026,9040,376>",(EditConstraint)); Inst294++; } } catch(e) {}try { if (Inst295 <= 1000 && typeof (v) != "undefined") {_RecordType("<9069,9070,376>",(v)); Inst295++; } } catch(e) {}try { if (Inst296 <= 1000 && typeof (str) != "undefined") {_RecordType("<9072,9075,376>",(str)); Inst296++; } } catch(e) {}
  EditConstraint.superConstructor.call(this, v, str);
}

try { if (Inst297 <= 1000 && typeof (EditConstraint.inheritsFrom) != "undefined") {_RecordType("<9081,9108,379>",(EditConstraint.inheritsFrom)); Inst297++; } } catch(e) {}try { if (Inst298 <= 1000 && typeof (EditConstraint) != "undefined") {_RecordType("<9081,9095,379>",(EditConstraint)); Inst298++; } } catch(e) {}try { if (Inst299 <= 1000 && typeof (UnaryConstraint) != "undefined") {_RecordType("<9109,9124,379>",(UnaryConstraint)); Inst299++; } } catch(e) {}
EditConstraint.inheritsFrom(UnaryConstraint);
/**
 * Edits indicate that a variable is to be changed by imperative code.
 */

EditConstraint.prototype.isInput = function () {
  return true;
};
try { if (Inst300 <= 1000 && typeof (EditConstraint.prototype.isInput) != "undefined") {_RecordType("<9207,9239,384>",(EditConstraint.prototype.isInput)); Inst300++; } } catch(e) {}try { if (Inst301 <= 1000 && typeof (EditConstraint.prototype) != "undefined") {_RecordType("<9207,9231,384>",(EditConstraint.prototype)); Inst301++; } } catch(e) {}try { if (Inst302 <= 1000 && typeof (EditConstraint) != "undefined") {_RecordType("<9207,9221,384>",(EditConstraint)); Inst302++; } } catch(e) {}

EditConstraint.prototype.execute = function () {
  ;
} // Edit constraints do nothing

/* --- *
 * B i n a r y   C o n s t r a i n t
 * --- */
;
try { if (Inst303 <= 1000 && typeof (EditConstraint.prototype.execute) != "undefined") {_RecordType("<9275,9307,388>",(EditConstraint.prototype.execute)); Inst303++; } } catch(e) {}try { if (Inst304 <= 1000 && typeof (EditConstraint.prototype) != "undefined") {_RecordType("<9275,9299,388>",(EditConstraint.prototype)); Inst304++; } } catch(e) {}try { if (Inst305 <= 1000 && typeof (EditConstraint) != "undefined") {_RecordType("<9275,9289,388>",(EditConstraint)); Inst305++; } } catch(e) {}

try { if (Inst307 <= 1000 && typeof (Object) != "undefined") {_RecordType("<9441,9447,397>",(Object)); Inst307++; } } catch(e) {}
var Direction = new Object();
try { if (Inst306 <= 1000 && typeof (Direction) != "undefined") {_RecordType("<9425,9434,397>",(Direction)); Inst306++; } } catch(e) {}
Direction.NONE = 0;
try { if (Inst308 <= 1000 && typeof (Direction.NONE) != "undefined") {_RecordType("<9451,9465,398>",(Direction.NONE)); Inst308++; } } catch(e) {}try { if (Inst309 <= 1000 && typeof (Direction) != "undefined") {_RecordType("<9451,9460,398>",(Direction)); Inst309++; } } catch(e) {}
Direction.FORWARD = 1;
try { if (Inst310 <= 1000 && typeof (Direction.FORWARD) != "undefined") {_RecordType("<9471,9488,399>",(Direction.FORWARD)); Inst310++; } } catch(e) {}try { if (Inst311 <= 1000 && typeof (Direction) != "undefined") {_RecordType("<9471,9480,399>",(Direction)); Inst311++; } } catch(e) {}
Direction.BACKWARD = -1;
try { if (Inst312 <= 1000 && typeof (Direction.BACKWARD) != "undefined") {_RecordType("<9494,9512,400>",(Direction.BACKWARD)); Inst312++; } } catch(e) {}try { if (Inst313 <= 1000 && typeof (Direction) != "undefined") {_RecordType("<9494,9503,400>",(Direction)); Inst313++; } } catch(e) {}
/**
 * Abstract superclass for constraints having two possible output
 * variables.
 */

try { if (Inst314 <= 1000 && typeof (BinaryConstraint) != "undefined") {_RecordType("<9617,9633,406>",(BinaryConstraint)); Inst314++; } } catch(e) {}
function BinaryConstraint(var1, var2, strength) {
try { if (Inst315 <= 1000 && typeof (var1) != "undefined") {_RecordType("<9634,9638,406>",(var1)); Inst315++; } } catch(e) {}try { if (Inst316 <= 1000 && typeof (var2) != "undefined") {_RecordType("<9640,9644,406>",(var2)); Inst316++; } } catch(e) {}try { if (Inst317 <= 1000 && typeof (strength) != "undefined") {_RecordType("<9646,9654,406>",(strength)); Inst317++; } } catch(e) {}
try { if (Inst318 <= 1000 && typeof (BinaryConstraint.superConstructor.call) != "undefined") {_RecordType("<9660,9698,407>",(BinaryConstraint.superConstructor.call)); Inst318++; } } catch(e) {}try { if (Inst319 <= 1000 && typeof (BinaryConstraint.superConstructor) != "undefined") {_RecordType("<9660,9693,407>",(BinaryConstraint.superConstructor)); Inst319++; } } catch(e) {}try { if (Inst320 <= 1000 && typeof (BinaryConstraint) != "undefined") {_RecordType("<9660,9676,407>",(BinaryConstraint)); Inst320++; } } catch(e) {}try { if (Inst321 <= 1000 && typeof (strength) != "undefined") {_RecordType("<9705,9713,407>",(strength)); Inst321++; } } catch(e) {}
  BinaryConstraint.superConstructor.call(this, strength);
try { if (Inst323 <= 1000 && typeof (var1) != "undefined") {_RecordType("<9728,9732,408>",(var1)); Inst323++; } } catch(e) {}
  this.v1 = var1;
try { if (Inst322 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<9718,9725,408>",(this.v1)); Inst322++; } } catch(e) {}
try { if (Inst325 <= 1000 && typeof (var2) != "undefined") {_RecordType("<9746,9750,409>",(var2)); Inst325++; } } catch(e) {}
  this.v2 = var2;
try { if (Inst324 <= 1000 && typeof (this.v2) != "undefined") {_RecordType("<9736,9743,409>",(this.v2)); Inst324++; } } catch(e) {}
try { if (Inst327 <= 1000 && typeof (Direction.NONE) != "undefined") {_RecordType("<9771,9785,410>",(Direction.NONE)); Inst327++; } } catch(e) {}try { if (Inst328 <= 1000 && typeof (Direction) != "undefined") {_RecordType("<9771,9780,410>",(Direction)); Inst328++; } } catch(e) {}
  this.direction = Direction.NONE;
try { if (Inst326 <= 1000 && typeof (this.direction) != "undefined") {_RecordType("<9754,9768,410>",(this.direction)); Inst326++; } } catch(e) {}
try { if (Inst329 <= 1000 && typeof (this.addConstraint) != "undefined") {_RecordType("<9789,9807,411>",(this.addConstraint)); Inst329++; } } catch(e) {}
  this.addConstraint();
}

try { if (Inst330 <= 1000 && typeof (BinaryConstraint.inheritsFrom) != "undefined") {_RecordType("<9814,9843,414>",(BinaryConstraint.inheritsFrom)); Inst330++; } } catch(e) {}try { if (Inst331 <= 1000 && typeof (BinaryConstraint) != "undefined") {_RecordType("<9814,9830,414>",(BinaryConstraint)); Inst331++; } } catch(e) {}try { if (Inst332 <= 1000 && typeof (Constraint) != "undefined") {_RecordType("<9844,9854,414>",(Constraint)); Inst332++; } } catch(e) {}
BinaryConstraint.inheritsFrom(Constraint);
/**
 * Decides if this constraint can be satisfied and which way it
 * should flow based on the relative strength of the variables related,
 * and record that decision.
 */

BinaryConstraint.prototype.chooseMethod = function (mark) {
try { if (Inst336 <= 1000 && typeof (mark) != "undefined") {_RecordType("<10083,10087,421>",(mark)); Inst336++; } } catch(e) {}
try { if (Inst337 <= 1000 && typeof (this.v1.mark) != "undefined") {_RecordType("<10097,10109,422>",(this.v1.mark)); Inst337++; } } catch(e) {}try { if (Inst338 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<10097,10104,422>",(this.v1)); Inst338++; } } catch(e) {}try { if (Inst339 <= 1000 && typeof (mark) != "undefined") {_RecordType("<10113,10117,422>",(mark)); Inst339++; } } catch(e) {}
  if (this.v1.mark == mark) {
try { if (Inst341 <= 1000 && typeof (this.v2.mark) != "undefined") {_RecordType("<10142,10154,423>",(this.v2.mark)); Inst341++; } } catch(e) {}try { if (Inst342 <= 1000 && typeof (this.v2) != "undefined") {_RecordType("<10142,10149,423>",(this.v2)); Inst342++; } } catch(e) {}try { if (Inst343 <= 1000 && typeof (mark) != "undefined") {_RecordType("<10158,10162,423>",(mark)); Inst343++; } } catch(e) {}try { if (Inst344 <= 1000 && typeof (Strength.stronger) != "undefined") {_RecordType("<10166,10183,423>",(Strength.stronger)); Inst344++; } } catch(e) {}try { if (Inst345 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<10166,10174,423>",(Strength)); Inst345++; } } catch(e) {}try { if (Inst346 <= 1000 && typeof (this.strength) != "undefined") {_RecordType("<10184,10197,423>",(this.strength)); Inst346++; } } catch(e) {}try { if (Inst347 <= 1000 && typeof (this.v2.walkStrength) != "undefined") {_RecordType("<10199,10219,423>",(this.v2.walkStrength)); Inst347++; } } catch(e) {}try { if (Inst348 <= 1000 && typeof (this.v2) != "undefined") {_RecordType("<10199,10206,423>",(this.v2)); Inst348++; } } catch(e) {}try { if (Inst349 <= 1000 && typeof (Direction.FORWARD) != "undefined") {_RecordType("<10223,10240,423>",(Direction.FORWARD)); Inst349++; } } catch(e) {}try { if (Inst350 <= 1000 && typeof (Direction) != "undefined") {_RecordType("<10223,10232,423>",(Direction)); Inst350++; } } catch(e) {}try { if (Inst351 <= 1000 && typeof (Direction.NONE) != "undefined") {_RecordType("<10243,10257,423>",(Direction.NONE)); Inst351++; } } catch(e) {}try { if (Inst352 <= 1000 && typeof (Direction) != "undefined") {_RecordType("<10243,10252,423>",(Direction)); Inst352++; } } catch(e) {}
    this.direction = this.v2.mark != mark && Strength.stronger(this.strength, this.v2.walkStrength) ? Direction.FORWARD : Direction.NONE;
try { if (Inst340 <= 1000 && typeof (this.direction) != "undefined") {_RecordType("<10125,10139,423>",(this.direction)); Inst340++; } } catch(e) {}
  }

try { if (Inst353 <= 1000 && typeof (this.v2.mark) != "undefined") {_RecordType("<10270,10282,426>",(this.v2.mark)); Inst353++; } } catch(e) {}try { if (Inst354 <= 1000 && typeof (this.v2) != "undefined") {_RecordType("<10270,10277,426>",(this.v2)); Inst354++; } } catch(e) {}try { if (Inst355 <= 1000 && typeof (mark) != "undefined") {_RecordType("<10286,10290,426>",(mark)); Inst355++; } } catch(e) {}
  if (this.v2.mark == mark) {
try { if (Inst357 <= 1000 && typeof (this.v1.mark) != "undefined") {_RecordType("<10315,10327,427>",(this.v1.mark)); Inst357++; } } catch(e) {}try { if (Inst358 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<10315,10322,427>",(this.v1)); Inst358++; } } catch(e) {}try { if (Inst359 <= 1000 && typeof (mark) != "undefined") {_RecordType("<10331,10335,427>",(mark)); Inst359++; } } catch(e) {}try { if (Inst360 <= 1000 && typeof (Strength.stronger) != "undefined") {_RecordType("<10339,10356,427>",(Strength.stronger)); Inst360++; } } catch(e) {}try { if (Inst361 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<10339,10347,427>",(Strength)); Inst361++; } } catch(e) {}try { if (Inst362 <= 1000 && typeof (this.strength) != "undefined") {_RecordType("<10357,10370,427>",(this.strength)); Inst362++; } } catch(e) {}try { if (Inst363 <= 1000 && typeof (this.v1.walkStrength) != "undefined") {_RecordType("<10372,10392,427>",(this.v1.walkStrength)); Inst363++; } } catch(e) {}try { if (Inst364 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<10372,10379,427>",(this.v1)); Inst364++; } } catch(e) {}try { if (Inst365 <= 1000 && typeof (Direction.BACKWARD) != "undefined") {_RecordType("<10396,10414,427>",(Direction.BACKWARD)); Inst365++; } } catch(e) {}try { if (Inst366 <= 1000 && typeof (Direction) != "undefined") {_RecordType("<10396,10405,427>",(Direction)); Inst366++; } } catch(e) {}try { if (Inst367 <= 1000 && typeof (Direction.NONE) != "undefined") {_RecordType("<10417,10431,427>",(Direction.NONE)); Inst367++; } } catch(e) {}try { if (Inst368 <= 1000 && typeof (Direction) != "undefined") {_RecordType("<10417,10426,427>",(Direction)); Inst368++; } } catch(e) {}
    this.direction = this.v1.mark != mark && Strength.stronger(this.strength, this.v1.walkStrength) ? Direction.BACKWARD : Direction.NONE;
try { if (Inst356 <= 1000 && typeof (this.direction) != "undefined") {_RecordType("<10298,10312,427>",(this.direction)); Inst356++; } } catch(e) {}
  }

try { if (Inst369 <= 1000 && typeof (Strength.weaker) != "undefined") {_RecordType("<10444,10459,430>",(Strength.weaker)); Inst369++; } } catch(e) {}try { if (Inst370 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<10444,10452,430>",(Strength)); Inst370++; } } catch(e) {}try { if (Inst371 <= 1000 && typeof (this.v1.walkStrength) != "undefined") {_RecordType("<10460,10480,430>",(this.v1.walkStrength)); Inst371++; } } catch(e) {}try { if (Inst372 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<10460,10467,430>",(this.v1)); Inst372++; } } catch(e) {}try { if (Inst373 <= 1000 && typeof (this.v2.walkStrength) != "undefined") {_RecordType("<10482,10502,430>",(this.v2.walkStrength)); Inst373++; } } catch(e) {}try { if (Inst374 <= 1000 && typeof (this.v2) != "undefined") {_RecordType("<10482,10489,430>",(this.v2)); Inst374++; } } catch(e) {}
  if (Strength.weaker(this.v1.walkStrength, this.v2.walkStrength)) {
try { if (Inst376 <= 1000 && typeof (Strength.stronger) != "undefined") {_RecordType("<10528,10545,431>",(Strength.stronger)); Inst376++; } } catch(e) {}try { if (Inst377 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<10528,10536,431>",(Strength)); Inst377++; } } catch(e) {}try { if (Inst378 <= 1000 && typeof (this.strength) != "undefined") {_RecordType("<10546,10559,431>",(this.strength)); Inst378++; } } catch(e) {}try { if (Inst379 <= 1000 && typeof (this.v1.walkStrength) != "undefined") {_RecordType("<10561,10581,431>",(this.v1.walkStrength)); Inst379++; } } catch(e) {}try { if (Inst380 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<10561,10568,431>",(this.v1)); Inst380++; } } catch(e) {}try { if (Inst381 <= 1000 && typeof (Direction.BACKWARD) != "undefined") {_RecordType("<10585,10603,431>",(Direction.BACKWARD)); Inst381++; } } catch(e) {}try { if (Inst382 <= 1000 && typeof (Direction) != "undefined") {_RecordType("<10585,10594,431>",(Direction)); Inst382++; } } catch(e) {}try { if (Inst383 <= 1000 && typeof (Direction.NONE) != "undefined") {_RecordType("<10606,10620,431>",(Direction.NONE)); Inst383++; } } catch(e) {}try { if (Inst384 <= 1000 && typeof (Direction) != "undefined") {_RecordType("<10606,10615,431>",(Direction)); Inst384++; } } catch(e) {}
    this.direction = Strength.stronger(this.strength, this.v1.walkStrength) ? Direction.BACKWARD : Direction.NONE;
try { if (Inst375 <= 1000 && typeof (this.direction) != "undefined") {_RecordType("<10511,10525,431>",(this.direction)); Inst375++; } } catch(e) {}
  } else {
try { if (Inst386 <= 1000 && typeof (Strength.stronger) != "undefined") {_RecordType("<10654,10671,433>",(Strength.stronger)); Inst386++; } } catch(e) {}try { if (Inst387 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<10654,10662,433>",(Strength)); Inst387++; } } catch(e) {}try { if (Inst388 <= 1000 && typeof (this.strength) != "undefined") {_RecordType("<10672,10685,433>",(this.strength)); Inst388++; } } catch(e) {}try { if (Inst389 <= 1000 && typeof (this.v2.walkStrength) != "undefined") {_RecordType("<10687,10707,433>",(this.v2.walkStrength)); Inst389++; } } catch(e) {}try { if (Inst390 <= 1000 && typeof (this.v2) != "undefined") {_RecordType("<10687,10694,433>",(this.v2)); Inst390++; } } catch(e) {}try { if (Inst391 <= 1000 && typeof (Direction.FORWARD) != "undefined") {_RecordType("<10711,10728,433>",(Direction.FORWARD)); Inst391++; } } catch(e) {}try { if (Inst392 <= 1000 && typeof (Direction) != "undefined") {_RecordType("<10711,10720,433>",(Direction)); Inst392++; } } catch(e) {}try { if (Inst393 <= 1000 && typeof (Direction.BACKWARD) != "undefined") {_RecordType("<10731,10749,433>",(Direction.BACKWARD)); Inst393++; } } catch(e) {}try { if (Inst394 <= 1000 && typeof (Direction) != "undefined") {_RecordType("<10731,10740,433>",(Direction)); Inst394++; } } catch(e) {}
    this.direction = Strength.stronger(this.strength, this.v2.walkStrength) ? Direction.FORWARD : Direction.BACKWARD;
try { if (Inst385 <= 1000 && typeof (this.direction) != "undefined") {_RecordType("<10637,10651,433>",(this.direction)); Inst385++; } } catch(e) {}
  }
};
try { if (Inst333 <= 1000 && typeof (BinaryConstraint.prototype.chooseMethod) != "undefined") {_RecordType("<10031,10070,421>",(BinaryConstraint.prototype.chooseMethod)); Inst333++; } } catch(e) {}try { if (Inst334 <= 1000 && typeof (BinaryConstraint.prototype) != "undefined") {_RecordType("<10031,10057,421>",(BinaryConstraint.prototype)); Inst334++; } } catch(e) {}try { if (Inst335 <= 1000 && typeof (BinaryConstraint) != "undefined") {_RecordType("<10031,10047,421>",(BinaryConstraint)); Inst335++; } } catch(e) {}
/**
 * Add this constraint to the constraint graph
 */


BinaryConstraint.prototype.addToGraph = function () {
try { if (Inst398 <= 1000 && typeof (this.v1.addConstraint) != "undefined") {_RecordType("<10871,10892,442>",(this.v1.addConstraint)); Inst398++; } } catch(e) {}try { if (Inst399 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<10871,10878,442>",(this.v1)); Inst399++; } } catch(e) {}
  this.v1.addConstraint(this);
try { if (Inst400 <= 1000 && typeof (this.v2.addConstraint) != "undefined") {_RecordType("<10902,10923,443>",(this.v2.addConstraint)); Inst400++; } } catch(e) {}try { if (Inst401 <= 1000 && typeof (this.v2) != "undefined") {_RecordType("<10902,10909,443>",(this.v2)); Inst401++; } } catch(e) {}
  this.v2.addConstraint(this);
try { if (Inst403 <= 1000 && typeof (Direction.NONE) != "undefined") {_RecordType("<10950,10964,444>",(Direction.NONE)); Inst403++; } } catch(e) {}try { if (Inst404 <= 1000 && typeof (Direction) != "undefined") {_RecordType("<10950,10959,444>",(Direction)); Inst404++; } } catch(e) {}
  this.direction = Direction.NONE;
try { if (Inst402 <= 1000 && typeof (this.direction) != "undefined") {_RecordType("<10933,10947,444>",(this.direction)); Inst402++; } } catch(e) {}
};
try { if (Inst395 <= 1000 && typeof (BinaryConstraint.prototype.addToGraph) != "undefined") {_RecordType("<10815,10852,441>",(BinaryConstraint.prototype.addToGraph)); Inst395++; } } catch(e) {}try { if (Inst396 <= 1000 && typeof (BinaryConstraint.prototype) != "undefined") {_RecordType("<10815,10841,441>",(BinaryConstraint.prototype)); Inst396++; } } catch(e) {}try { if (Inst397 <= 1000 && typeof (BinaryConstraint) != "undefined") {_RecordType("<10815,10831,441>",(BinaryConstraint)); Inst397++; } } catch(e) {}
/**
 * Answer true if this constraint is satisfied in the current solution.
 */


BinaryConstraint.prototype.isSatisfied = function () {
try { if (Inst408 <= 1000 && typeof (this.direction) != "undefined") {_RecordType("<11115,11129,452>",(this.direction)); Inst408++; } } catch(e) {}try { if (Inst409 <= 1000 && typeof (Direction.NONE) != "undefined") {_RecordType("<11133,11147,452>",(Direction.NONE)); Inst409++; } } catch(e) {}try { if (Inst410 <= 1000 && typeof (Direction) != "undefined") {_RecordType("<11133,11142,452>",(Direction)); Inst410++; } } catch(e) {}
  return this.direction != Direction.NONE;
};
try { if (Inst405 <= 1000 && typeof (BinaryConstraint.prototype.isSatisfied) != "undefined") {_RecordType("<11051,11089,451>",(BinaryConstraint.prototype.isSatisfied)); Inst405++; } } catch(e) {}try { if (Inst406 <= 1000 && typeof (BinaryConstraint.prototype) != "undefined") {_RecordType("<11051,11077,451>",(BinaryConstraint.prototype)); Inst406++; } } catch(e) {}try { if (Inst407 <= 1000 && typeof (BinaryConstraint) != "undefined") {_RecordType("<11051,11067,451>",(BinaryConstraint)); Inst407++; } } catch(e) {}
/**
 * Mark the input variable with the given mark.
 */


BinaryConstraint.prototype.markInputs = function (mark) {
try { if (Inst414 <= 1000 && typeof (mark) != "undefined") {_RecordType("<11260,11264,459>",(mark)); Inst414++; } } catch(e) {}
try { if (Inst417 <= 1000 && typeof (mark) != "undefined") {_RecordType("<11290,11294,460>",(mark)); Inst417++; } } catch(e) {}
  this.input().mark = mark;
try { if (Inst415 <= 1000 && typeof (this.input().mark) != "undefined") {_RecordType("<11270,11287,460>",(this.input().mark)); Inst415++; } } catch(e) {}try { if (Inst416 <= 1000 && typeof (this.input) != "undefined") {_RecordType("<11270,11280,460>",(this.input)); Inst416++; } } catch(e) {}
};
try { if (Inst411 <= 1000 && typeof (BinaryConstraint.prototype.markInputs) != "undefined") {_RecordType("<11210,11247,459>",(BinaryConstraint.prototype.markInputs)); Inst411++; } } catch(e) {}try { if (Inst412 <= 1000 && typeof (BinaryConstraint.prototype) != "undefined") {_RecordType("<11210,11236,459>",(BinaryConstraint.prototype)); Inst412++; } } catch(e) {}try { if (Inst413 <= 1000 && typeof (BinaryConstraint) != "undefined") {_RecordType("<11210,11226,459>",(BinaryConstraint)); Inst413++; } } catch(e) {}
/**
 * Returns the current input variable
 */


BinaryConstraint.prototype.input = function () {
try { if (Inst421 <= 1000 && typeof (this.direction) != "undefined") {_RecordType("<11405,11419,468>",(this.direction)); Inst421++; } } catch(e) {}try { if (Inst422 <= 1000 && typeof (Direction.FORWARD) != "undefined") {_RecordType("<11423,11440,468>",(Direction.FORWARD)); Inst422++; } } catch(e) {}try { if (Inst423 <= 1000 && typeof (Direction) != "undefined") {_RecordType("<11423,11432,468>",(Direction)); Inst423++; } } catch(e) {}try { if (Inst424 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<11443,11450,468>",(this.v1)); Inst424++; } } catch(e) {}try { if (Inst425 <= 1000 && typeof (this.v2) != "undefined") {_RecordType("<11453,11460,468>",(this.v2)); Inst425++; } } catch(e) {}
  return this.direction == Direction.FORWARD ? this.v1 : this.v2;
};
try { if (Inst418 <= 1000 && typeof (BinaryConstraint.prototype.input) != "undefined") {_RecordType("<11347,11379,467>",(BinaryConstraint.prototype.input)); Inst418++; } } catch(e) {}try { if (Inst419 <= 1000 && typeof (BinaryConstraint.prototype) != "undefined") {_RecordType("<11347,11373,467>",(BinaryConstraint.prototype)); Inst419++; } } catch(e) {}try { if (Inst420 <= 1000 && typeof (BinaryConstraint) != "undefined") {_RecordType("<11347,11363,467>",(BinaryConstraint)); Inst420++; } } catch(e) {}
/**
 * Returns the current output variable
 */


BinaryConstraint.prototype.output = function () {
try { if (Inst429 <= 1000 && typeof (this.direction) != "undefined") {_RecordType("<11573,11587,476>",(this.direction)); Inst429++; } } catch(e) {}try { if (Inst430 <= 1000 && typeof (Direction.FORWARD) != "undefined") {_RecordType("<11591,11608,476>",(Direction.FORWARD)); Inst430++; } } catch(e) {}try { if (Inst431 <= 1000 && typeof (Direction) != "undefined") {_RecordType("<11591,11600,476>",(Direction)); Inst431++; } } catch(e) {}try { if (Inst432 <= 1000 && typeof (this.v2) != "undefined") {_RecordType("<11611,11618,476>",(this.v2)); Inst432++; } } catch(e) {}try { if (Inst433 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<11621,11628,476>",(this.v1)); Inst433++; } } catch(e) {}
  return this.direction == Direction.FORWARD ? this.v2 : this.v1;
};
try { if (Inst426 <= 1000 && typeof (BinaryConstraint.prototype.output) != "undefined") {_RecordType("<11514,11547,475>",(BinaryConstraint.prototype.output)); Inst426++; } } catch(e) {}try { if (Inst427 <= 1000 && typeof (BinaryConstraint.prototype) != "undefined") {_RecordType("<11514,11540,475>",(BinaryConstraint.prototype)); Inst427++; } } catch(e) {}try { if (Inst428 <= 1000 && typeof (BinaryConstraint) != "undefined") {_RecordType("<11514,11530,475>",(BinaryConstraint)); Inst428++; } } catch(e) {}
/**
 * Calculate the walkabout strength, the stay flag, and, if it is
 * 'stay', the value for the current output of this
 * constraint. Assume this constraint is satisfied.
 */


BinaryConstraint.prototype.recalculate = function () {
try { if (Inst438 <= 1000 && typeof (this.input) != "undefined") {_RecordType("<11880,11890,486>",(this.input)); Inst438++; } } catch(e) {}try { if (Inst440 <= 1000 && typeof (this.output) != "undefined") {_RecordType("<11906,11917,487>",(this.output)); Inst440++; } } catch(e) {}
  var ihn = this.input(),
      out = this.output();
try { if (Inst437 <= 1000 && typeof (ihn) != "undefined") {_RecordType("<11874,11877,486>",(ihn)); Inst437++; } } catch(e) {}try { if (Inst439 <= 1000 && typeof (out) != "undefined") {_RecordType("<11900,11903,487>",(out)); Inst439++; } } catch(e) {}
try { if (Inst443 <= 1000 && typeof (Strength.weakestOf) != "undefined") {_RecordType("<11942,11960,488>",(Strength.weakestOf)); Inst443++; } } catch(e) {}try { if (Inst444 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<11942,11950,488>",(Strength)); Inst444++; } } catch(e) {}try { if (Inst445 <= 1000 && typeof (this.strength) != "undefined") {_RecordType("<11961,11974,488>",(this.strength)); Inst445++; } } catch(e) {}try { if (Inst446 <= 1000 && typeof (ihn.walkStrength) != "undefined") {_RecordType("<11976,11992,488>",(ihn.walkStrength)); Inst446++; } } catch(e) {}try { if (Inst447 <= 1000 && typeof (ihn) != "undefined") {_RecordType("<11976,11979,488>",(ihn)); Inst447++; } } catch(e) {}
  out.walkStrength = Strength.weakestOf(this.strength, ihn.walkStrength);
try { if (Inst441 <= 1000 && typeof (out.walkStrength) != "undefined") {_RecordType("<11923,11939,488>",(out.walkStrength)); Inst441++; } } catch(e) {}try { if (Inst442 <= 1000 && typeof (out) != "undefined") {_RecordType("<11923,11926,488>",(out)); Inst442++; } } catch(e) {}
try { if (Inst450 <= 1000 && typeof (ihn.stay) != "undefined") {_RecordType("<12008,12016,489>",(ihn.stay)); Inst450++; } } catch(e) {}try { if (Inst451 <= 1000 && typeof (ihn) != "undefined") {_RecordType("<12008,12011,489>",(ihn)); Inst451++; } } catch(e) {}
  out.stay = ihn.stay;
try { if (Inst448 <= 1000 && typeof (out.stay) != "undefined") {_RecordType("<11997,12005,489>",(out.stay)); Inst448++; } } catch(e) {}try { if (Inst449 <= 1000 && typeof (out) != "undefined") {_RecordType("<11997,12000,489>",(out)); Inst449++; } } catch(e) {}

try { if (Inst452 <= 1000 && typeof (out.stay) != "undefined") {_RecordType("<12025,12033,491>",(out.stay)); Inst452++; } } catch(e) {}try { if (Inst453 <= 1000 && typeof (out) != "undefined") {_RecordType("<12025,12028,491>",(out)); Inst453++; } } catch(e) {}
  if (out.stay) {
try { if (Inst454 <= 1000 && typeof (this.execute) != "undefined") {_RecordType("<12041,12053,492>",(this.execute)); Inst454++; } } catch(e) {}
    this.execute();
  }
};
try { if (Inst434 <= 1000 && typeof (BinaryConstraint.prototype.recalculate) != "undefined") {_RecordType("<11813,11851,485>",(BinaryConstraint.prototype.recalculate)); Inst434++; } } catch(e) {}try { if (Inst435 <= 1000 && typeof (BinaryConstraint.prototype) != "undefined") {_RecordType("<11813,11839,485>",(BinaryConstraint.prototype)); Inst435++; } } catch(e) {}try { if (Inst436 <= 1000 && typeof (BinaryConstraint) != "undefined") {_RecordType("<11813,11829,485>",(BinaryConstraint)); Inst436++; } } catch(e) {}
/**
 * Record the fact that this constraint is unsatisfied.
 */


BinaryConstraint.prototype.markUnsatisfied = function () {
try { if (Inst459 <= 1000 && typeof (Direction.NONE) != "undefined") {_RecordType("<12208,12222,501>",(Direction.NONE)); Inst459++; } } catch(e) {}try { if (Inst460 <= 1000 && typeof (Direction) != "undefined") {_RecordType("<12208,12217,501>",(Direction)); Inst460++; } } catch(e) {}
  this.direction = Direction.NONE;
try { if (Inst458 <= 1000 && typeof (this.direction) != "undefined") {_RecordType("<12191,12205,501>",(this.direction)); Inst458++; } } catch(e) {}
};
try { if (Inst455 <= 1000 && typeof (BinaryConstraint.prototype.markUnsatisfied) != "undefined") {_RecordType("<12130,12172,500>",(BinaryConstraint.prototype.markUnsatisfied)); Inst455++; } } catch(e) {}try { if (Inst456 <= 1000 && typeof (BinaryConstraint.prototype) != "undefined") {_RecordType("<12130,12156,500>",(BinaryConstraint.prototype)); Inst456++; } } catch(e) {}try { if (Inst457 <= 1000 && typeof (BinaryConstraint) != "undefined") {_RecordType("<12130,12146,500>",(BinaryConstraint)); Inst457++; } } catch(e) {}

BinaryConstraint.prototype.inputsKnown = function (mark) {
try { if (Inst464 <= 1000 && typeof (mark) != "undefined") {_RecordType("<12279,12283,504>",(mark)); Inst464++; } } catch(e) {}
try { if (Inst466 <= 1000 && typeof (this.input) != "undefined") {_RecordType("<12297,12307,505>",(this.input)); Inst466++; } } catch(e) {}
  var i = this.input();
try { if (Inst465 <= 1000 && typeof (i) != "undefined") {_RecordType("<12293,12294,505>",(i)); Inst465++; } } catch(e) {}
try { if (Inst467 <= 1000 && typeof (i.mark) != "undefined") {_RecordType("<12320,12326,506>",(i.mark)); Inst467++; } } catch(e) {}try { if (Inst468 <= 1000 && typeof (i) != "undefined") {_RecordType("<12320,12321,506>",(i)); Inst468++; } } catch(e) {}try { if (Inst469 <= 1000 && typeof (mark) != "undefined") {_RecordType("<12330,12334,506>",(mark)); Inst469++; } } catch(e) {}try { if (Inst470 <= 1000 && typeof (i.stay) != "undefined") {_RecordType("<12338,12344,506>",(i.stay)); Inst470++; } } catch(e) {}try { if (Inst471 <= 1000 && typeof (i) != "undefined") {_RecordType("<12338,12339,506>",(i)); Inst471++; } } catch(e) {}try { if (Inst472 <= 1000 && typeof (i.determinedBy) != "undefined") {_RecordType("<12348,12362,506>",(i.determinedBy)); Inst472++; } } catch(e) {}try { if (Inst473 <= 1000 && typeof (i) != "undefined") {_RecordType("<12348,12349,506>",(i)); Inst473++; } } catch(e) {}
  return i.mark == mark || i.stay || i.determinedBy == null;
};
try { if (Inst461 <= 1000 && typeof (BinaryConstraint.prototype.inputsKnown) != "undefined") {_RecordType("<12228,12266,504>",(BinaryConstraint.prototype.inputsKnown)); Inst461++; } } catch(e) {}try { if (Inst462 <= 1000 && typeof (BinaryConstraint.prototype) != "undefined") {_RecordType("<12228,12254,504>",(BinaryConstraint.prototype)); Inst462++; } } catch(e) {}try { if (Inst463 <= 1000 && typeof (BinaryConstraint) != "undefined") {_RecordType("<12228,12244,504>",(BinaryConstraint)); Inst463++; } } catch(e) {}

BinaryConstraint.prototype.removeFromGraph = function () {
try { if (Inst477 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<12441,12448,510>",(this.v1)); Inst477++; } } catch(e) {}
  if (this.v1 != null) {
try { if (Inst478 <= 1000 && typeof (this.v1.removeConstraint) != "undefined") {_RecordType("<12464,12488,511>",(this.v1.removeConstraint)); Inst478++; } } catch(e) {}try { if (Inst479 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<12464,12471,511>",(this.v1)); Inst479++; } } catch(e) {}
    this.v1.removeConstraint(this);
  }

try { if (Inst480 <= 1000 && typeof (this.v2) != "undefined") {_RecordType("<12507,12514,514>",(this.v2)); Inst480++; } } catch(e) {}
  if (this.v2 != null) {
try { if (Inst481 <= 1000 && typeof (this.v2.removeConstraint) != "undefined") {_RecordType("<12530,12554,515>",(this.v2.removeConstraint)); Inst481++; } } catch(e) {}try { if (Inst482 <= 1000 && typeof (this.v2) != "undefined") {_RecordType("<12530,12537,515>",(this.v2)); Inst482++; } } catch(e) {}
    this.v2.removeConstraint(this);
  }

try { if (Inst484 <= 1000 && typeof (Direction.NONE) != "undefined") {_RecordType("<12586,12600,518>",(Direction.NONE)); Inst484++; } } catch(e) {}try { if (Inst485 <= 1000 && typeof (Direction) != "undefined") {_RecordType("<12586,12595,518>",(Direction)); Inst485++; } } catch(e) {}
  this.direction = Direction.NONE;
try { if (Inst483 <= 1000 && typeof (this.direction) != "undefined") {_RecordType("<12569,12583,518>",(this.direction)); Inst483++; } } catch(e) {}
};
try { if (Inst474 <= 1000 && typeof (BinaryConstraint.prototype.removeFromGraph) != "undefined") {_RecordType("<12376,12418,509>",(BinaryConstraint.prototype.removeFromGraph)); Inst474++; } } catch(e) {}try { if (Inst475 <= 1000 && typeof (BinaryConstraint.prototype) != "undefined") {_RecordType("<12376,12402,509>",(BinaryConstraint.prototype)); Inst475++; } } catch(e) {}try { if (Inst476 <= 1000 && typeof (BinaryConstraint) != "undefined") {_RecordType("<12376,12392,509>",(BinaryConstraint)); Inst476++; } } catch(e) {}
/* --- *
 * S c a l e   C o n s t r a i n t
 * --- */

/**
 * Relates two variables by the linear scaling relationship: "v2 =
 * (v1 * scale) + offset". Either v1 or v2 may be changed to maintain
 * this relationship but the scale factor and offset are considered
 * read-only.
 */


try { if (Inst486 <= 1000 && typeof (ScaleConstraint) != "undefined") {_RecordType("<12898,12913,532>",(ScaleConstraint)); Inst486++; } } catch(e) {}
function ScaleConstraint(src, scale, offset, dest, strength) {
try { if (Inst487 <= 1000 && typeof (src) != "undefined") {_RecordType("<12914,12917,532>",(src)); Inst487++; } } catch(e) {}try { if (Inst488 <= 1000 && typeof (scale) != "undefined") {_RecordType("<12919,12924,532>",(scale)); Inst488++; } } catch(e) {}try { if (Inst489 <= 1000 && typeof (offset) != "undefined") {_RecordType("<12926,12932,532>",(offset)); Inst489++; } } catch(e) {}try { if (Inst490 <= 1000 && typeof (dest) != "undefined") {_RecordType("<12934,12938,532>",(dest)); Inst490++; } } catch(e) {}try { if (Inst491 <= 1000 && typeof (strength) != "undefined") {_RecordType("<12940,12948,532>",(strength)); Inst491++; } } catch(e) {}
try { if (Inst493 <= 1000 && typeof (Direction.NONE) != "undefined") {_RecordType("<12971,12985,533>",(Direction.NONE)); Inst493++; } } catch(e) {}try { if (Inst494 <= 1000 && typeof (Direction) != "undefined") {_RecordType("<12971,12980,533>",(Direction)); Inst494++; } } catch(e) {}
  this.direction = Direction.NONE;
try { if (Inst492 <= 1000 && typeof (this.direction) != "undefined") {_RecordType("<12954,12968,533>",(this.direction)); Inst492++; } } catch(e) {}
try { if (Inst496 <= 1000 && typeof (scale) != "undefined") {_RecordType("<13002,13007,534>",(scale)); Inst496++; } } catch(e) {}
  this.scale = scale;
try { if (Inst495 <= 1000 && typeof (this.scale) != "undefined") {_RecordType("<12989,12999,534>",(this.scale)); Inst495++; } } catch(e) {}
try { if (Inst498 <= 1000 && typeof (offset) != "undefined") {_RecordType("<13025,13031,535>",(offset)); Inst498++; } } catch(e) {}
  this.offset = offset;
try { if (Inst497 <= 1000 && typeof (this.offset) != "undefined") {_RecordType("<13011,13022,535>",(this.offset)); Inst497++; } } catch(e) {}
try { if (Inst499 <= 1000 && typeof (ScaleConstraint.superConstructor.call) != "undefined") {_RecordType("<13035,13072,536>",(ScaleConstraint.superConstructor.call)); Inst499++; } } catch(e) {}try { if (Inst500 <= 1000 && typeof (ScaleConstraint.superConstructor) != "undefined") {_RecordType("<13035,13067,536>",(ScaleConstraint.superConstructor)); Inst500++; } } catch(e) {}try { if (Inst501 <= 1000 && typeof (ScaleConstraint) != "undefined") {_RecordType("<13035,13050,536>",(ScaleConstraint)); Inst501++; } } catch(e) {}try { if (Inst502 <= 1000 && typeof (src) != "undefined") {_RecordType("<13079,13082,536>",(src)); Inst502++; } } catch(e) {}try { if (Inst503 <= 1000 && typeof (dest) != "undefined") {_RecordType("<13084,13088,536>",(dest)); Inst503++; } } catch(e) {}try { if (Inst504 <= 1000 && typeof (strength) != "undefined") {_RecordType("<13090,13098,536>",(strength)); Inst504++; } } catch(e) {}
  ScaleConstraint.superConstructor.call(this, src, dest, strength);
}

try { if (Inst505 <= 1000 && typeof (ScaleConstraint.inheritsFrom) != "undefined") {_RecordType("<13104,13132,539>",(ScaleConstraint.inheritsFrom)); Inst505++; } } catch(e) {}try { if (Inst506 <= 1000 && typeof (ScaleConstraint) != "undefined") {_RecordType("<13104,13119,539>",(ScaleConstraint)); Inst506++; } } catch(e) {}try { if (Inst507 <= 1000 && typeof (BinaryConstraint) != "undefined") {_RecordType("<13133,13149,539>",(BinaryConstraint)); Inst507++; } } catch(e) {}
ScaleConstraint.inheritsFrom(BinaryConstraint);
/**
 * Adds this constraint to the constraint graph.
 */

ScaleConstraint.prototype.addToGraph = function () {
try { if (Inst511 <= 1000 && typeof (ScaleConstraint.superConstructor.prototype.addToGraph.call) != "undefined") {_RecordType("<13265,13323,545>",(ScaleConstraint.superConstructor.prototype.addToGraph.call)); Inst511++; } } catch(e) {}try { if (Inst512 <= 1000 && typeof (ScaleConstraint.superConstructor.prototype.addToGraph) != "undefined") {_RecordType("<13265,13318,545>",(ScaleConstraint.superConstructor.prototype.addToGraph)); Inst512++; } } catch(e) {}try { if (Inst513 <= 1000 && typeof (ScaleConstraint.superConstructor.prototype) != "undefined") {_RecordType("<13265,13307,545>",(ScaleConstraint.superConstructor.prototype)); Inst513++; } } catch(e) {}try { if (Inst514 <= 1000 && typeof (ScaleConstraint.superConstructor) != "undefined") {_RecordType("<13265,13297,545>",(ScaleConstraint.superConstructor)); Inst514++; } } catch(e) {}try { if (Inst515 <= 1000 && typeof (ScaleConstraint) != "undefined") {_RecordType("<13265,13280,545>",(ScaleConstraint)); Inst515++; } } catch(e) {}
  ScaleConstraint.superConstructor.prototype.addToGraph.call(this);
try { if (Inst516 <= 1000 && typeof (this.scale.addConstraint) != "undefined") {_RecordType("<13333,13357,546>",(this.scale.addConstraint)); Inst516++; } } catch(e) {}try { if (Inst517 <= 1000 && typeof (this.scale) != "undefined") {_RecordType("<13333,13343,546>",(this.scale)); Inst517++; } } catch(e) {}
  this.scale.addConstraint(this);
try { if (Inst518 <= 1000 && typeof (this.offset.addConstraint) != "undefined") {_RecordType("<13367,13392,547>",(this.offset.addConstraint)); Inst518++; } } catch(e) {}try { if (Inst519 <= 1000 && typeof (this.offset) != "undefined") {_RecordType("<13367,13378,547>",(this.offset)); Inst519++; } } catch(e) {}
  this.offset.addConstraint(this);
};
try { if (Inst508 <= 1000 && typeof (ScaleConstraint.prototype.addToGraph) != "undefined") {_RecordType("<13210,13246,544>",(ScaleConstraint.prototype.addToGraph)); Inst508++; } } catch(e) {}try { if (Inst509 <= 1000 && typeof (ScaleConstraint.prototype) != "undefined") {_RecordType("<13210,13235,544>",(ScaleConstraint.prototype)); Inst509++; } } catch(e) {}try { if (Inst510 <= 1000 && typeof (ScaleConstraint) != "undefined") {_RecordType("<13210,13225,544>",(ScaleConstraint)); Inst510++; } } catch(e) {}

ScaleConstraint.prototype.removeFromGraph = function () {
try { if (Inst523 <= 1000 && typeof (ScaleConstraint.superConstructor.prototype.removeFromGraph.call) != "undefined") {_RecordType("<13464,13527,551>",(ScaleConstraint.superConstructor.prototype.removeFromGraph.call)); Inst523++; } } catch(e) {}try { if (Inst524 <= 1000 && typeof (ScaleConstraint.superConstructor.prototype.removeFromGraph) != "undefined") {_RecordType("<13464,13522,551>",(ScaleConstraint.superConstructor.prototype.removeFromGraph)); Inst524++; } } catch(e) {}try { if (Inst525 <= 1000 && typeof (ScaleConstraint.superConstructor.prototype) != "undefined") {_RecordType("<13464,13506,551>",(ScaleConstraint.superConstructor.prototype)); Inst525++; } } catch(e) {}try { if (Inst526 <= 1000 && typeof (ScaleConstraint.superConstructor) != "undefined") {_RecordType("<13464,13496,551>",(ScaleConstraint.superConstructor)); Inst526++; } } catch(e) {}try { if (Inst527 <= 1000 && typeof (ScaleConstraint) != "undefined") {_RecordType("<13464,13479,551>",(ScaleConstraint)); Inst527++; } } catch(e) {}
  ScaleConstraint.superConstructor.prototype.removeFromGraph.call(this);

try { if (Inst528 <= 1000 && typeof (this.scale) != "undefined") {_RecordType("<13542,13552,553>",(this.scale)); Inst528++; } } catch(e) {}
  if (this.scale != null) {
try { if (Inst529 <= 1000 && typeof (this.scale.removeConstraint) != "undefined") {_RecordType("<13568,13595,554>",(this.scale.removeConstraint)); Inst529++; } } catch(e) {}try { if (Inst530 <= 1000 && typeof (this.scale) != "undefined") {_RecordType("<13568,13578,554>",(this.scale)); Inst530++; } } catch(e) {}
    this.scale.removeConstraint(this);
  }

try { if (Inst531 <= 1000 && typeof (this.offset) != "undefined") {_RecordType("<13614,13625,557>",(this.offset)); Inst531++; } } catch(e) {}
  if (this.offset != null) {
try { if (Inst532 <= 1000 && typeof (this.offset.removeConstraint) != "undefined") {_RecordType("<13641,13669,558>",(this.offset.removeConstraint)); Inst532++; } } catch(e) {}try { if (Inst533 <= 1000 && typeof (this.offset) != "undefined") {_RecordType("<13641,13652,558>",(this.offset)); Inst533++; } } catch(e) {}
    this.offset.removeConstraint(this);
  }
};
try { if (Inst520 <= 1000 && typeof (ScaleConstraint.prototype.removeFromGraph) != "undefined") {_RecordType("<13404,13445,550>",(ScaleConstraint.prototype.removeFromGraph)); Inst520++; } } catch(e) {}try { if (Inst521 <= 1000 && typeof (ScaleConstraint.prototype) != "undefined") {_RecordType("<13404,13429,550>",(ScaleConstraint.prototype)); Inst521++; } } catch(e) {}try { if (Inst522 <= 1000 && typeof (ScaleConstraint) != "undefined") {_RecordType("<13404,13419,550>",(ScaleConstraint)); Inst522++; } } catch(e) {}

ScaleConstraint.prototype.markInputs = function (mark) {
try { if (Inst537 <= 1000 && typeof (mark) != "undefined") {_RecordType("<13734,13738,562>",(mark)); Inst537++; } } catch(e) {}
try { if (Inst538 <= 1000 && typeof (ScaleConstraint.superConstructor.prototype.markInputs.call) != "undefined") {_RecordType("<13744,13802,563>",(ScaleConstraint.superConstructor.prototype.markInputs.call)); Inst538++; } } catch(e) {}try { if (Inst539 <= 1000 && typeof (ScaleConstraint.superConstructor.prototype.markInputs) != "undefined") {_RecordType("<13744,13797,563>",(ScaleConstraint.superConstructor.prototype.markInputs)); Inst539++; } } catch(e) {}try { if (Inst540 <= 1000 && typeof (ScaleConstraint.superConstructor.prototype) != "undefined") {_RecordType("<13744,13786,563>",(ScaleConstraint.superConstructor.prototype)); Inst540++; } } catch(e) {}try { if (Inst541 <= 1000 && typeof (ScaleConstraint.superConstructor) != "undefined") {_RecordType("<13744,13776,563>",(ScaleConstraint.superConstructor)); Inst541++; } } catch(e) {}try { if (Inst542 <= 1000 && typeof (ScaleConstraint) != "undefined") {_RecordType("<13744,13759,563>",(ScaleConstraint)); Inst542++; } } catch(e) {}try { if (Inst543 <= 1000 && typeof (mark) != "undefined") {_RecordType("<13809,13813,563>",(mark)); Inst543++; } } catch(e) {}
  ScaleConstraint.superConstructor.prototype.markInputs.call(this, mark);
try { if (Inst548 <= 1000 && typeof (mark) != "undefined") {_RecordType("<13855,13859,564>",(mark)); Inst548++; } } catch(e) {}
  this.scale.mark = this.offset.mark = mark;
try { if (Inst544 <= 1000 && typeof (this.scale.mark) != "undefined") {_RecordType("<13818,13833,564>",(this.scale.mark)); Inst544++; } } catch(e) {}try { if (Inst545 <= 1000 && typeof (this.scale) != "undefined") {_RecordType("<13818,13828,564>",(this.scale)); Inst545++; } } catch(e) {}try { if (Inst546 <= 1000 && typeof (this.offset.mark) != "undefined") {_RecordType("<13836,13852,564>",(this.offset.mark)); Inst546++; } } catch(e) {}try { if (Inst547 <= 1000 && typeof (this.offset) != "undefined") {_RecordType("<13836,13847,564>",(this.offset)); Inst547++; } } catch(e) {}
};
try { if (Inst534 <= 1000 && typeof (ScaleConstraint.prototype.markInputs) != "undefined") {_RecordType("<13685,13721,562>",(ScaleConstraint.prototype.markInputs)); Inst534++; } } catch(e) {}try { if (Inst535 <= 1000 && typeof (ScaleConstraint.prototype) != "undefined") {_RecordType("<13685,13710,562>",(ScaleConstraint.prototype)); Inst535++; } } catch(e) {}try { if (Inst536 <= 1000 && typeof (ScaleConstraint) != "undefined") {_RecordType("<13685,13700,562>",(ScaleConstraint)); Inst536++; } } catch(e) {}
/**
 * Enforce this constraint. Assume that it is satisfied.
 */


ScaleConstraint.prototype.execute = function () {
try { if (Inst552 <= 1000 && typeof (this.direction) != "undefined") {_RecordType("<13987,14001,572>",(this.direction)); Inst552++; } } catch(e) {}try { if (Inst553 <= 1000 && typeof (Direction.FORWARD) != "undefined") {_RecordType("<14005,14022,572>",(Direction.FORWARD)); Inst553++; } } catch(e) {}try { if (Inst554 <= 1000 && typeof (Direction) != "undefined") {_RecordType("<14005,14014,572>",(Direction)); Inst554++; } } catch(e) {}
  if (this.direction == Direction.FORWARD) {
try { if (Inst557 <= 1000 && typeof (this.v1.value) != "undefined") {_RecordType("<14046,14059,573>",(this.v1.value)); Inst557++; } } catch(e) {}try { if (Inst558 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<14046,14053,573>",(this.v1)); Inst558++; } } catch(e) {}try { if (Inst559 <= 1000 && typeof (this.scale.value) != "undefined") {_RecordType("<14062,14078,573>",(this.scale.value)); Inst559++; } } catch(e) {}try { if (Inst560 <= 1000 && typeof (this.scale) != "undefined") {_RecordType("<14062,14072,573>",(this.scale)); Inst560++; } } catch(e) {}try { if (Inst561 <= 1000 && typeof (this.offset.value) != "undefined") {_RecordType("<14081,14098,573>",(this.offset.value)); Inst561++; } } catch(e) {}try { if (Inst562 <= 1000 && typeof (this.offset) != "undefined") {_RecordType("<14081,14092,573>",(this.offset)); Inst562++; } } catch(e) {}
    this.v2.value = this.v1.value * this.scale.value + this.offset.value;
try { if (Inst555 <= 1000 && typeof (this.v2.value) != "undefined") {_RecordType("<14030,14043,573>",(this.v2.value)); Inst555++; } } catch(e) {}try { if (Inst556 <= 1000 && typeof (this.v2) != "undefined") {_RecordType("<14030,14037,573>",(this.v2)); Inst556++; } } catch(e) {}
  } else {
try { if (Inst565 <= 1000 && typeof (this.v2.value) != "undefined") {_RecordType("<14132,14145,575>",(this.v2.value)); Inst565++; } } catch(e) {}try { if (Inst566 <= 1000 && typeof (this.v2) != "undefined") {_RecordType("<14132,14139,575>",(this.v2)); Inst566++; } } catch(e) {}try { if (Inst567 <= 1000 && typeof (this.offset.value) != "undefined") {_RecordType("<14148,14165,575>",(this.offset.value)); Inst567++; } } catch(e) {}try { if (Inst568 <= 1000 && typeof (this.offset) != "undefined") {_RecordType("<14148,14159,575>",(this.offset)); Inst568++; } } catch(e) {}try { if (Inst569 <= 1000 && typeof (this.scale.value) != "undefined") {_RecordType("<14169,14185,575>",(this.scale.value)); Inst569++; } } catch(e) {}try { if (Inst570 <= 1000 && typeof (this.scale) != "undefined") {_RecordType("<14169,14179,575>",(this.scale)); Inst570++; } } catch(e) {}
    this.v1.value = (this.v2.value - this.offset.value) / this.scale.value;
try { if (Inst563 <= 1000 && typeof (this.v1.value) != "undefined") {_RecordType("<14115,14128,575>",(this.v1.value)); Inst563++; } } catch(e) {}try { if (Inst564 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<14115,14122,575>",(this.v1)); Inst564++; } } catch(e) {}
  }
};
try { if (Inst549 <= 1000 && typeof (ScaleConstraint.prototype.execute) != "undefined") {_RecordType("<13931,13964,571>",(ScaleConstraint.prototype.execute)); Inst549++; } } catch(e) {}try { if (Inst550 <= 1000 && typeof (ScaleConstraint.prototype) != "undefined") {_RecordType("<13931,13956,571>",(ScaleConstraint.prototype)); Inst550++; } } catch(e) {}try { if (Inst551 <= 1000 && typeof (ScaleConstraint) != "undefined") {_RecordType("<13931,13946,571>",(ScaleConstraint)); Inst551++; } } catch(e) {}
/**
 * Calculate the walkabout strength, the stay flag, and, if it is
 * 'stay', the value for the current output of this constraint. Assume
 * this constraint is satisfied.
 */


ScaleConstraint.prototype.recalculate = function () {
try { if (Inst575 <= 1000 && typeof (this.input) != "undefined") {_RecordType("<14440,14450,586>",(this.input)); Inst575++; } } catch(e) {}try { if (Inst577 <= 1000 && typeof (this.output) != "undefined") {_RecordType("<14466,14477,587>",(this.output)); Inst577++; } } catch(e) {}
  var ihn = this.input(),
      out = this.output();
try { if (Inst574 <= 1000 && typeof (ihn) != "undefined") {_RecordType("<14434,14437,586>",(ihn)); Inst574++; } } catch(e) {}try { if (Inst576 <= 1000 && typeof (out) != "undefined") {_RecordType("<14460,14463,587>",(out)); Inst576++; } } catch(e) {}
try { if (Inst580 <= 1000 && typeof (Strength.weakestOf) != "undefined") {_RecordType("<14502,14520,588>",(Strength.weakestOf)); Inst580++; } } catch(e) {}try { if (Inst581 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<14502,14510,588>",(Strength)); Inst581++; } } catch(e) {}try { if (Inst582 <= 1000 && typeof (this.strength) != "undefined") {_RecordType("<14521,14534,588>",(this.strength)); Inst582++; } } catch(e) {}try { if (Inst583 <= 1000 && typeof (ihn.walkStrength) != "undefined") {_RecordType("<14536,14552,588>",(ihn.walkStrength)); Inst583++; } } catch(e) {}try { if (Inst584 <= 1000 && typeof (ihn) != "undefined") {_RecordType("<14536,14539,588>",(ihn)); Inst584++; } } catch(e) {}
  out.walkStrength = Strength.weakestOf(this.strength, ihn.walkStrength);
try { if (Inst578 <= 1000 && typeof (out.walkStrength) != "undefined") {_RecordType("<14483,14499,588>",(out.walkStrength)); Inst578++; } } catch(e) {}try { if (Inst579 <= 1000 && typeof (out) != "undefined") {_RecordType("<14483,14486,588>",(out)); Inst579++; } } catch(e) {}
try { if (Inst587 <= 1000 && typeof (ihn.stay) != "undefined") {_RecordType("<14568,14576,589>",(ihn.stay)); Inst587++; } } catch(e) {}try { if (Inst588 <= 1000 && typeof (ihn) != "undefined") {_RecordType("<14568,14571,589>",(ihn)); Inst588++; } } catch(e) {}try { if (Inst589 <= 1000 && typeof (this.scale.stay) != "undefined") {_RecordType("<14580,14595,589>",(this.scale.stay)); Inst589++; } } catch(e) {}try { if (Inst590 <= 1000 && typeof (this.scale) != "undefined") {_RecordType("<14580,14590,589>",(this.scale)); Inst590++; } } catch(e) {}try { if (Inst591 <= 1000 && typeof (this.offset.stay) != "undefined") {_RecordType("<14599,14615,589>",(this.offset.stay)); Inst591++; } } catch(e) {}try { if (Inst592 <= 1000 && typeof (this.offset) != "undefined") {_RecordType("<14599,14610,589>",(this.offset)); Inst592++; } } catch(e) {}
  out.stay = ihn.stay && this.scale.stay && this.offset.stay;
try { if (Inst585 <= 1000 && typeof (out.stay) != "undefined") {_RecordType("<14557,14565,589>",(out.stay)); Inst585++; } } catch(e) {}try { if (Inst586 <= 1000 && typeof (out) != "undefined") {_RecordType("<14557,14560,589>",(out)); Inst586++; } } catch(e) {}

try { if (Inst593 <= 1000 && typeof (out.stay) != "undefined") {_RecordType("<14624,14632,591>",(out.stay)); Inst593++; } } catch(e) {}try { if (Inst594 <= 1000 && typeof (out) != "undefined") {_RecordType("<14624,14627,591>",(out)); Inst594++; } } catch(e) {}
  if (out.stay) {
try { if (Inst595 <= 1000 && typeof (this.execute) != "undefined") {_RecordType("<14640,14652,592>",(this.execute)); Inst595++; } } catch(e) {}
    this.execute();
  }
};
try { if (Inst571 <= 1000 && typeof (ScaleConstraint.prototype.recalculate) != "undefined") {_RecordType("<14374,14411,585>",(ScaleConstraint.prototype.recalculate)); Inst571++; } } catch(e) {}try { if (Inst572 <= 1000 && typeof (ScaleConstraint.prototype) != "undefined") {_RecordType("<14374,14399,585>",(ScaleConstraint.prototype)); Inst572++; } } catch(e) {}try { if (Inst573 <= 1000 && typeof (ScaleConstraint) != "undefined") {_RecordType("<14374,14389,585>",(ScaleConstraint)); Inst573++; } } catch(e) {}
/* --- *
 * E q u a l i t  y   C o n s t r a i n t
 * --- */

/**
 * Constrains two variables to have the same value.
 */


try { if (Inst596 <= 1000 && typeof (EqualityConstraint) != "undefined") {_RecordType("<14796,14814,604>",(EqualityConstraint)); Inst596++; } } catch(e) {}
function EqualityConstraint(var1, var2, strength) {
try { if (Inst597 <= 1000 && typeof (var1) != "undefined") {_RecordType("<14815,14819,604>",(var1)); Inst597++; } } catch(e) {}try { if (Inst598 <= 1000 && typeof (var2) != "undefined") {_RecordType("<14821,14825,604>",(var2)); Inst598++; } } catch(e) {}try { if (Inst599 <= 1000 && typeof (strength) != "undefined") {_RecordType("<14827,14835,604>",(strength)); Inst599++; } } catch(e) {}
try { if (Inst600 <= 1000 && typeof (EqualityConstraint.superConstructor.call) != "undefined") {_RecordType("<14841,14881,605>",(EqualityConstraint.superConstructor.call)); Inst600++; } } catch(e) {}try { if (Inst601 <= 1000 && typeof (EqualityConstraint.superConstructor) != "undefined") {_RecordType("<14841,14876,605>",(EqualityConstraint.superConstructor)); Inst601++; } } catch(e) {}try { if (Inst602 <= 1000 && typeof (EqualityConstraint) != "undefined") {_RecordType("<14841,14859,605>",(EqualityConstraint)); Inst602++; } } catch(e) {}try { if (Inst603 <= 1000 && typeof (var1) != "undefined") {_RecordType("<14888,14892,605>",(var1)); Inst603++; } } catch(e) {}try { if (Inst604 <= 1000 && typeof (var2) != "undefined") {_RecordType("<14894,14898,605>",(var2)); Inst604++; } } catch(e) {}try { if (Inst605 <= 1000 && typeof (strength) != "undefined") {_RecordType("<14900,14908,605>",(strength)); Inst605++; } } catch(e) {}
  EqualityConstraint.superConstructor.call(this, var1, var2, strength);
}

try { if (Inst606 <= 1000 && typeof (EqualityConstraint.inheritsFrom) != "undefined") {_RecordType("<14914,14945,608>",(EqualityConstraint.inheritsFrom)); Inst606++; } } catch(e) {}try { if (Inst607 <= 1000 && typeof (EqualityConstraint) != "undefined") {_RecordType("<14914,14932,608>",(EqualityConstraint)); Inst607++; } } catch(e) {}try { if (Inst608 <= 1000 && typeof (BinaryConstraint) != "undefined") {_RecordType("<14946,14962,608>",(BinaryConstraint)); Inst608++; } } catch(e) {}
EqualityConstraint.inheritsFrom(BinaryConstraint);
/**
 * Enforce this constraint. Assume that it is satisfied.
 */

EqualityConstraint.prototype.execute = function () {
try { if (Inst614 <= 1000 && typeof (this.input().value) != "undefined") {_RecordType("<15108,15126,614>",(this.input().value)); Inst614++; } } catch(e) {}try { if (Inst615 <= 1000 && typeof (this.input) != "undefined") {_RecordType("<15108,15118,614>",(this.input)); Inst615++; } } catch(e) {}
  this.output().value = this.input().value;
try { if (Inst612 <= 1000 && typeof (this.output().value) != "undefined") {_RecordType("<15086,15105,614>",(this.output().value)); Inst612++; } } catch(e) {}try { if (Inst613 <= 1000 && typeof (this.output) != "undefined") {_RecordType("<15086,15097,614>",(this.output)); Inst613++; } } catch(e) {}
};
try { if (Inst609 <= 1000 && typeof (EqualityConstraint.prototype.execute) != "undefined") {_RecordType("<15031,15067,613>",(EqualityConstraint.prototype.execute)); Inst609++; } } catch(e) {}try { if (Inst610 <= 1000 && typeof (EqualityConstraint.prototype) != "undefined") {_RecordType("<15031,15059,613>",(EqualityConstraint.prototype)); Inst610++; } } catch(e) {}try { if (Inst611 <= 1000 && typeof (EqualityConstraint) != "undefined") {_RecordType("<15031,15049,613>",(EqualityConstraint)); Inst611++; } } catch(e) {}
/* --- *
 * V a r i a b l e
 * --- */

/**
 * A constrained variable. In addition to its value, it maintain the
 * structure of the constraint graph, the current dataflow graph, and
 * various parameters of interest to the DeltaBlue incremental
 * constraint solver.
 **/


try { if (Inst616 <= 1000 && typeof (Variable) != "undefined") {_RecordType("<15414,15422,628>",(Variable)); Inst616++; } } catch(e) {}
function Variable(name, initialValue) {
try { if (Inst617 <= 1000 && typeof (name) != "undefined") {_RecordType("<15423,15427,628>",(name)); Inst617++; } } catch(e) {}try { if (Inst618 <= 1000 && typeof (initialValue) != "undefined") {_RecordType("<15429,15441,628>",(initialValue)); Inst618++; } } catch(e) {}
try { if (Inst620 <= 1000 && typeof (initialValue) != "undefined") {_RecordType("<15460,15472,629>",(initialValue)); Inst620++; } } catch(e) {}
  this.value = initialValue || 0;
try { if (Inst619 <= 1000 && typeof (this.value) != "undefined") {_RecordType("<15447,15457,629>",(this.value)); Inst619++; } } catch(e) {}
try { if (Inst622 <= 1000 && typeof (OrderedCollection) != "undefined") {_RecordType("<15504,15521,630>",(OrderedCollection)); Inst622++; } } catch(e) {}
  this.constraints = new OrderedCollection();
try { if (Inst621 <= 1000 && typeof (this.constraints) != "undefined") {_RecordType("<15481,15497,630>",(this.constraints)); Inst621++; } } catch(e) {}
  this.determinedBy = null;
try { if (Inst623 <= 1000 && typeof (this.determinedBy) != "undefined") {_RecordType("<15527,15544,631>",(this.determinedBy)); Inst623++; } } catch(e) {}
  this.mark = 0;
try { if (Inst624 <= 1000 && typeof (this.mark) != "undefined") {_RecordType("<15555,15564,632>",(this.mark)); Inst624++; } } catch(e) {}
try { if (Inst626 <= 1000 && typeof (Strength.WEAKEST) != "undefined") {_RecordType("<15592,15608,633>",(Strength.WEAKEST)); Inst626++; } } catch(e) {}try { if (Inst627 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<15592,15600,633>",(Strength)); Inst627++; } } catch(e) {}
  this.walkStrength = Strength.WEAKEST;
try { if (Inst625 <= 1000 && typeof (this.walkStrength) != "undefined") {_RecordType("<15572,15589,633>",(this.walkStrength)); Inst625++; } } catch(e) {}
  this.stay = true;
try { if (Inst628 <= 1000 && typeof (this.stay) != "undefined") {_RecordType("<15612,15621,634>",(this.stay)); Inst628++; } } catch(e) {}
try { if (Inst630 <= 1000 && typeof (name) != "undefined") {_RecordType("<15644,15648,635>",(name)); Inst630++; } } catch(e) {}
  this.name = name;
try { if (Inst629 <= 1000 && typeof (this.name) != "undefined") {_RecordType("<15632,15641,635>",(this.name)); Inst629++; } } catch(e) {}
}
/**
 * Add the given constraint to the set of all constraints that refer
 * this variable.
 */


Variable.prototype.addConstraint = function (c) {
try { if (Inst634 <= 1000 && typeof (c) != "undefined") {_RecordType("<15794,15795,643>",(c)); Inst634++; } } catch(e) {}
try { if (Inst635 <= 1000 && typeof (this.constraints.add) != "undefined") {_RecordType("<15801,15821,644>",(this.constraints.add)); Inst635++; } } catch(e) {}try { if (Inst636 <= 1000 && typeof (this.constraints) != "undefined") {_RecordType("<15801,15817,644>",(this.constraints)); Inst636++; } } catch(e) {}try { if (Inst637 <= 1000 && typeof (c) != "undefined") {_RecordType("<15822,15823,644>",(c)); Inst637++; } } catch(e) {}
  this.constraints.add(c);
};
try { if (Inst631 <= 1000 && typeof (Variable.prototype.addConstraint) != "undefined") {_RecordType("<15749,15781,643>",(Variable.prototype.addConstraint)); Inst631++; } } catch(e) {}try { if (Inst632 <= 1000 && typeof (Variable.prototype) != "undefined") {_RecordType("<15749,15767,643>",(Variable.prototype)); Inst632++; } } catch(e) {}try { if (Inst633 <= 1000 && typeof (Variable) != "undefined") {_RecordType("<15749,15757,643>",(Variable)); Inst633++; } } catch(e) {}
/**
 * Removes all traces of c from this variable.
 */


Variable.prototype.removeConstraint = function (c) {
try { if (Inst641 <= 1000 && typeof (c) != "undefined") {_RecordType("<15934,15935,651>",(c)); Inst641++; } } catch(e) {}
try { if (Inst642 <= 1000 && typeof (this.constraints.remove) != "undefined") {_RecordType("<15941,15964,652>",(this.constraints.remove)); Inst642++; } } catch(e) {}try { if (Inst643 <= 1000 && typeof (this.constraints) != "undefined") {_RecordType("<15941,15957,652>",(this.constraints)); Inst643++; } } catch(e) {}try { if (Inst644 <= 1000 && typeof (c) != "undefined") {_RecordType("<15965,15966,652>",(c)); Inst644++; } } catch(e) {}
  this.constraints.remove(c);

try { if (Inst645 <= 1000 && typeof (this.determinedBy) != "undefined") {_RecordType("<15976,15993,654>",(this.determinedBy)); Inst645++; } } catch(e) {}try { if (Inst646 <= 1000 && typeof (c) != "undefined") {_RecordType("<15997,15998,654>",(c)); Inst646++; } } catch(e) {}
  if (this.determinedBy == c) {
    this.determinedBy = null;
try { if (Inst647 <= 1000 && typeof (this.determinedBy) != "undefined") {_RecordType("<16006,16023,655>",(this.determinedBy)); Inst647++; } } catch(e) {}
  }
};
try { if (Inst638 <= 1000 && typeof (Variable.prototype.removeConstraint) != "undefined") {_RecordType("<15886,15921,651>",(Variable.prototype.removeConstraint)); Inst638++; } } catch(e) {}try { if (Inst639 <= 1000 && typeof (Variable.prototype) != "undefined") {_RecordType("<15886,15904,651>",(Variable.prototype)); Inst639++; } } catch(e) {}try { if (Inst640 <= 1000 && typeof (Variable) != "undefined") {_RecordType("<15886,15894,651>",(Variable)); Inst640++; } } catch(e) {}
/* --- *
 * P l a n n e r
 * --- */

/**
 * The DeltaBlue planner
 */


try { if (Inst648 <= 1000 && typeof (Planner) != "undefined") {_RecordType("<16120,16127,667>",(Planner)); Inst648++; } } catch(e) {}
function Planner() {
  this.currentMark = 0;
try { if (Inst649 <= 1000 && typeof (this.currentMark) != "undefined") {_RecordType("<16134,16150,668>",(this.currentMark)); Inst649++; } } catch(e) {}
}
/**
 * Attempt to satisfy the given constraint and, if successful,
 * incrementally update the dataflow graph.  Details: If satifying
 * the constraint is successful, it may override a weaker constraint
 * on its output. The algorithm attempts to resatisfy that
 * constraint using some other method. This process is repeated
 * until either a) it reaches a variable that was not previously
 * determined by any constraint or b) it reaches a constraint that
 * is too weak to be satisfied using any of its methods. The
 * variables of constraints that have been processed are marked with
 * a unique mark value so that we know where we've been. This allows
 * the algorithm to avoid getting into an infinite loop even if the
 * constraint graph has an inadvertent cycle.
 */


Planner.prototype.incrementalAdd = function (c) {
try { if (Inst653 <= 1000 && typeof (c) != "undefined") {_RecordType("<16980,16981,686>",(c)); Inst653++; } } catch(e) {}
try { if (Inst655 <= 1000 && typeof (this.newMark) != "undefined") {_RecordType("<16998,17010,687>",(this.newMark)); Inst655++; } } catch(e) {}
  var mark = this.newMark();
try { if (Inst654 <= 1000 && typeof (mark) != "undefined") {_RecordType("<16991,16995,687>",(mark)); Inst654++; } } catch(e) {}
try { if (Inst657 <= 1000 && typeof (c.satisfy) != "undefined") {_RecordType("<17033,17042,688>",(c.satisfy)); Inst657++; } } catch(e) {}try { if (Inst658 <= 1000 && typeof (c) != "undefined") {_RecordType("<17033,17034,688>",(c)); Inst658++; } } catch(e) {}try { if (Inst659 <= 1000 && typeof (mark) != "undefined") {_RecordType("<17043,17047,688>",(mark)); Inst659++; } } catch(e) {}
  var overridden = c.satisfy(mark);
try { if (Inst656 <= 1000 && typeof (overridden) != "undefined") {_RecordType("<17020,17030,688>",(overridden)); Inst656++; } } catch(e) {}

try { if (Inst660 <= 1000 && typeof (overridden) != "undefined") {_RecordType("<17060,17070,690>",(overridden)); Inst660++; } } catch(e) {}
  while (overridden != null) {
try { if (Inst662 <= 1000 && typeof (overridden.satisfy) != "undefined") {_RecordType("<17099,17117,691>",(overridden.satisfy)); Inst662++; } } catch(e) {}try { if (Inst663 <= 1000 && typeof (overridden) != "undefined") {_RecordType("<17099,17109,691>",(overridden)); Inst663++; } } catch(e) {}try { if (Inst664 <= 1000 && typeof (mark) != "undefined") {_RecordType("<17118,17122,691>",(mark)); Inst664++; } } catch(e) {}
    overridden = overridden.satisfy(mark);
try { if (Inst661 <= 1000 && typeof (overridden) != "undefined") {_RecordType("<17086,17096,691>",(overridden)); Inst661++; } } catch(e) {}
  }
};
try { if (Inst650 <= 1000 && typeof (Planner.prototype.incrementalAdd) != "undefined") {_RecordType("<16935,16967,686>",(Planner.prototype.incrementalAdd)); Inst650++; } } catch(e) {}try { if (Inst651 <= 1000 && typeof (Planner.prototype) != "undefined") {_RecordType("<16935,16952,686>",(Planner.prototype)); Inst651++; } } catch(e) {}try { if (Inst652 <= 1000 && typeof (Planner) != "undefined") {_RecordType("<16935,16942,686>",(Planner)); Inst652++; } } catch(e) {}
/**
 * Entry point for retracting a constraint. Remove the given
 * constraint and incrementally update the dataflow graph.
 * Details: Retracting the given constraint may allow some currently
 * unsatisfiable downstream constraint to be satisfied. We therefore collect
 * a list of unsatisfied downstream constraints and attempt to
 * satisfy each one in turn. This list is traversed by constraint
 * strength, strongest first, as a heuristic for avoiding
 * unnecessarily adding and then overriding weak constraints.
 * Assume: c is satisfied.
 */


Planner.prototype.incrementalRemove = function (c) {
try { if (Inst668 <= 1000 && typeof (c) != "undefined") {_RecordType("<17732,17733,707>",(c)); Inst668++; } } catch(e) {}
try { if (Inst670 <= 1000 && typeof (c.output) != "undefined") {_RecordType("<17749,17757,708>",(c.output)); Inst670++; } } catch(e) {}try { if (Inst671 <= 1000 && typeof (c) != "undefined") {_RecordType("<17749,17750,708>",(c)); Inst671++; } } catch(e) {}
  var out = c.output();
try { if (Inst669 <= 1000 && typeof (out) != "undefined") {_RecordType("<17743,17746,708>",(out)); Inst669++; } } catch(e) {}
try { if (Inst672 <= 1000 && typeof (c.markUnsatisfied) != "undefined") {_RecordType("<17763,17780,709>",(c.markUnsatisfied)); Inst672++; } } catch(e) {}try { if (Inst673 <= 1000 && typeof (c) != "undefined") {_RecordType("<17763,17764,709>",(c)); Inst673++; } } catch(e) {}
  c.markUnsatisfied();
try { if (Inst674 <= 1000 && typeof (c.removeFromGraph) != "undefined") {_RecordType("<17786,17803,710>",(c.removeFromGraph)); Inst674++; } } catch(e) {}try { if (Inst675 <= 1000 && typeof (c) != "undefined") {_RecordType("<17786,17787,710>",(c)); Inst675++; } } catch(e) {}
  c.removeFromGraph();
try { if (Inst677 <= 1000 && typeof (this.removePropagateFrom) != "undefined") {_RecordType("<17827,17851,711>",(this.removePropagateFrom)); Inst677++; } } catch(e) {}try { if (Inst678 <= 1000 && typeof (out) != "undefined") {_RecordType("<17852,17855,711>",(out)); Inst678++; } } catch(e) {}
  var unsatisfied = this.removePropagateFrom(out);
try { if (Inst676 <= 1000 && typeof (unsatisfied) != "undefined") {_RecordType("<17813,17824,711>",(unsatisfied)); Inst676++; } } catch(e) {}
try { if (Inst680 <= 1000 && typeof (Strength.REQUIRED) != "undefined") {_RecordType("<17875,17892,712>",(Strength.REQUIRED)); Inst680++; } } catch(e) {}try { if (Inst681 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<17875,17883,712>",(Strength)); Inst681++; } } catch(e) {}
  var strength = Strength.REQUIRED;
try { if (Inst679 <= 1000 && typeof (strength) != "undefined") {_RecordType("<17864,17872,712>",(strength)); Inst679++; } } catch(e) {}

try { if (Inst682 <= 1000 && typeof (strength) != "undefined") {_RecordType("<18119,18127,724>",(strength)); Inst682++; } } catch(e) {}try { if (Inst683 <= 1000 && typeof (Strength.WEAKEST) != "undefined") {_RecordType("<18131,18147,724>",(Strength.WEAKEST)); Inst683++; } } catch(e) {}try { if (Inst684 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<18131,18139,724>",(Strength)); Inst684++; } } catch(e) {}
  do {
    for (var i = 0; i < unsatisfied.size(); i++) {
try { if (Inst685 <= 1000 && typeof (i) != "undefined") {_RecordType("<17915,17916,715>",(i)); Inst685++; } } catch(e) {}try { if (Inst686 <= 1000 && typeof (i) != "undefined") {_RecordType("<17922,17923,715>",(i)); Inst686++; } } catch(e) {}try { if (Inst687 <= 1000 && typeof (unsatisfied.size) != "undefined") {_RecordType("<17926,17942,715>",(unsatisfied.size)); Inst687++; } } catch(e) {}try { if (Inst688 <= 1000 && typeof (unsatisfied) != "undefined") {_RecordType("<17926,17937,715>",(unsatisfied)); Inst688++; } } catch(e) {}try { if (Inst689 <= 1000 && typeof (i) != "undefined") {_RecordType("<17946,17947,715>",(i)); Inst689++; } } catch(e) {}
try { if (Inst691 <= 1000 && typeof (unsatisfied.at) != "undefined") {_RecordType("<17967,17981,716>",(unsatisfied.at)); Inst691++; } } catch(e) {}try { if (Inst692 <= 1000 && typeof (unsatisfied) != "undefined") {_RecordType("<17967,17978,716>",(unsatisfied)); Inst692++; } } catch(e) {}try { if (Inst693 <= 1000 && typeof (i) != "undefined") {_RecordType("<17982,17983,716>",(i)); Inst693++; } } catch(e) {}
      var u = unsatisfied.at(i);
try { if (Inst690 <= 1000 && typeof (u) != "undefined") {_RecordType("<17963,17964,716>",(u)); Inst690++; } } catch(e) {}

try { if (Inst694 <= 1000 && typeof (u.strength) != "undefined") {_RecordType("<17997,18007,718>",(u.strength)); Inst694++; } } catch(e) {}try { if (Inst695 <= 1000 && typeof (u) != "undefined") {_RecordType("<17997,17998,718>",(u)); Inst695++; } } catch(e) {}try { if (Inst696 <= 1000 && typeof (strength) != "undefined") {_RecordType("<18011,18019,718>",(strength)); Inst696++; } } catch(e) {}
      if (u.strength == strength) {
try { if (Inst697 <= 1000 && typeof (this.incrementalAdd) != "undefined") {_RecordType("<18031,18050,719>",(this.incrementalAdd)); Inst697++; } } catch(e) {}try { if (Inst698 <= 1000 && typeof (u) != "undefined") {_RecordType("<18051,18052,719>",(u)); Inst698++; } } catch(e) {}
        this.incrementalAdd(u);
      }
    }

try { if (Inst700 <= 1000 && typeof (strength.nextWeaker) != "undefined") {_RecordType("<18085,18104,723>",(strength.nextWeaker)); Inst700++; } } catch(e) {}try { if (Inst701 <= 1000 && typeof (strength) != "undefined") {_RecordType("<18085,18093,723>",(strength)); Inst701++; } } catch(e) {}
    strength = strength.nextWeaker();
try { if (Inst699 <= 1000 && typeof (strength) != "undefined") {_RecordType("<18074,18082,723>",(strength)); Inst699++; } } catch(e) {}
  } while (strength != Strength.WEAKEST);
};
try { if (Inst665 <= 1000 && typeof (Planner.prototype.incrementalRemove) != "undefined") {_RecordType("<17684,17719,707>",(Planner.prototype.incrementalRemove)); Inst665++; } } catch(e) {}try { if (Inst666 <= 1000 && typeof (Planner.prototype) != "undefined") {_RecordType("<17684,17701,707>",(Planner.prototype)); Inst666++; } } catch(e) {}try { if (Inst667 <= 1000 && typeof (Planner) != "undefined") {_RecordType("<17684,17691,707>",(Planner)); Inst667++; } } catch(e) {}
/**
 * Select a previously unused mark value.
 */


Planner.prototype.newMark = function () {
try { if (Inst705 <= 1000 && typeof (this.currentMark) != "undefined") {_RecordType("<18258,18274,732>",(this.currentMark)); Inst705++; } } catch(e) {}
  return ++this.currentMark;
};
try { if (Inst702 <= 1000 && typeof (Planner.prototype.newMark) != "undefined") {_RecordType("<18205,18230,731>",(Planner.prototype.newMark)); Inst702++; } } catch(e) {}try { if (Inst703 <= 1000 && typeof (Planner.prototype) != "undefined") {_RecordType("<18205,18222,731>",(Planner.prototype)); Inst703++; } } catch(e) {}try { if (Inst704 <= 1000 && typeof (Planner) != "undefined") {_RecordType("<18205,18212,731>",(Planner)); Inst704++; } } catch(e) {}
/**
 * Extract a plan for resatisfaction starting from the given source
 * constraints, usually a set of input constraints. This method
 * assumes that stay optimization is desired; the plan will contain
 * only constraints whose output variables are not stay. Constraints
 * that do no computation, such as stay and edit constraints, are
 * not included in the plan.
 * Details: The outputs of a constraint are marked when it is added
 * to the plan under construction. A constraint may be appended to
 * the plan when all its input variables are known. A variable is
 * known if either a) the variable is marked (indicating that has
 * been computed by a constraint appearing earlier in the plan), b)
 * the variable is 'stay' (i.e. it is a constant at plan execution
 * time), or c) the variable is not determined by any
 * constraint. The last provision is for past states of history
 * variables, which are not stay but which are also not computed by
 * any constraint.
 * Assume: sources are all satisfied.
 */


Planner.prototype.makePlan = function (sources) {
try { if (Inst709 <= 1000 && typeof (sources) != "undefined") {_RecordType("<19337,19344,755>",(sources)); Inst709++; } } catch(e) {}
try { if (Inst711 <= 1000 && typeof (this.newMark) != "undefined") {_RecordType("<19361,19373,756>",(this.newMark)); Inst711++; } } catch(e) {}
  var mark = this.newMark();
try { if (Inst710 <= 1000 && typeof (mark) != "undefined") {_RecordType("<19354,19358,756>",(mark)); Inst710++; } } catch(e) {}
try { if (Inst713 <= 1000 && typeof (Plan) != "undefined") {_RecordType("<19394,19398,757>",(Plan)); Inst713++; } } catch(e) {}
  var plan = new Plan();
try { if (Inst712 <= 1000 && typeof (plan) != "undefined") {_RecordType("<19383,19387,757>",(plan)); Inst712++; } } catch(e) {}
try { if (Inst715 <= 1000 && typeof (sources) != "undefined") {_RecordType("<19415,19422,758>",(sources)); Inst715++; } } catch(e) {}
  var todo = sources;
try { if (Inst714 <= 1000 && typeof (todo) != "undefined") {_RecordType("<19408,19412,758>",(todo)); Inst714++; } } catch(e) {}

try { if (Inst716 <= 1000 && typeof (todo.size) != "undefined") {_RecordType("<19434,19443,760>",(todo.size)); Inst716++; } } catch(e) {}try { if (Inst717 <= 1000 && typeof (todo) != "undefined") {_RecordType("<19434,19438,760>",(todo)); Inst717++; } } catch(e) {}
  while (todo.size() > 0) {
try { if (Inst719 <= 1000 && typeof (todo.removeFirst) != "undefined") {_RecordType("<19465,19481,761>",(todo.removeFirst)); Inst719++; } } catch(e) {}try { if (Inst720 <= 1000 && typeof (todo) != "undefined") {_RecordType("<19465,19469,761>",(todo)); Inst720++; } } catch(e) {}
    var c = todo.removeFirst();
try { if (Inst718 <= 1000 && typeof (c) != "undefined") {_RecordType("<19461,19462,761>",(c)); Inst718++; } } catch(e) {}

try { if (Inst721 <= 1000 && typeof (c.output().mark) != "undefined") {_RecordType("<19494,19509,763>",(c.output().mark)); Inst721++; } } catch(e) {}try { if (Inst722 <= 1000 && typeof (c.output) != "undefined") {_RecordType("<19494,19502,763>",(c.output)); Inst722++; } } catch(e) {}try { if (Inst723 <= 1000 && typeof (c) != "undefined") {_RecordType("<19494,19495,763>",(c)); Inst723++; } } catch(e) {}try { if (Inst724 <= 1000 && typeof (mark) != "undefined") {_RecordType("<19513,19517,763>",(mark)); Inst724++; } } catch(e) {}try { if (Inst725 <= 1000 && typeof (c.inputsKnown) != "undefined") {_RecordType("<19521,19534,763>",(c.inputsKnown)); Inst725++; } } catch(e) {}try { if (Inst726 <= 1000 && typeof (c) != "undefined") {_RecordType("<19521,19522,763>",(c)); Inst726++; } } catch(e) {}try { if (Inst727 <= 1000 && typeof (mark) != "undefined") {_RecordType("<19535,19539,763>",(mark)); Inst727++; } } catch(e) {}
    if (c.output().mark != mark && c.inputsKnown(mark)) {
try { if (Inst728 <= 1000 && typeof (plan.addConstraint) != "undefined") {_RecordType("<19550,19568,764>",(plan.addConstraint)); Inst728++; } } catch(e) {}try { if (Inst729 <= 1000 && typeof (plan) != "undefined") {_RecordType("<19550,19554,764>",(plan)); Inst729++; } } catch(e) {}try { if (Inst730 <= 1000 && typeof (c) != "undefined") {_RecordType("<19569,19570,764>",(c)); Inst730++; } } catch(e) {}
      plan.addConstraint(c);
try { if (Inst734 <= 1000 && typeof (mark) != "undefined") {_RecordType("<19597,19601,765>",(mark)); Inst734++; } } catch(e) {}
      c.output().mark = mark;
try { if (Inst731 <= 1000 && typeof (c.output().mark) != "undefined") {_RecordType("<19579,19594,765>",(c.output().mark)); Inst731++; } } catch(e) {}try { if (Inst732 <= 1000 && typeof (c.output) != "undefined") {_RecordType("<19579,19587,765>",(c.output)); Inst732++; } } catch(e) {}try { if (Inst733 <= 1000 && typeof (c) != "undefined") {_RecordType("<19579,19580,765>",(c)); Inst733++; } } catch(e) {}
try { if (Inst735 <= 1000 && typeof (this.addConstraintsConsumingTo) != "undefined") {_RecordType("<19609,19639,766>",(this.addConstraintsConsumingTo)); Inst735++; } } catch(e) {}try { if (Inst736 <= 1000 && typeof (c.output) != "undefined") {_RecordType("<19640,19648,766>",(c.output)); Inst736++; } } catch(e) {}try { if (Inst737 <= 1000 && typeof (c) != "undefined") {_RecordType("<19640,19641,766>",(c)); Inst737++; } } catch(e) {}try { if (Inst738 <= 1000 && typeof (todo) != "undefined") {_RecordType("<19652,19656,766>",(todo)); Inst738++; } } catch(e) {}
      this.addConstraintsConsumingTo(c.output(), todo);
    }
  }

try { if (Inst739 <= 1000 && typeof (plan) != "undefined") {_RecordType("<19679,19683,770>",(plan)); Inst739++; } } catch(e) {}
  return plan;
};
try { if (Inst706 <= 1000 && typeof (Planner.prototype.makePlan) != "undefined") {_RecordType("<19298,19324,755>",(Planner.prototype.makePlan)); Inst706++; } } catch(e) {}try { if (Inst707 <= 1000 && typeof (Planner.prototype) != "undefined") {_RecordType("<19298,19315,755>",(Planner.prototype)); Inst707++; } } catch(e) {}try { if (Inst708 <= 1000 && typeof (Planner) != "undefined") {_RecordType("<19298,19305,755>",(Planner)); Inst708++; } } catch(e) {}
/**
 * Extract a plan for resatisfying starting from the output of the
 * given constraints, usually a set of input constraints.
 */


Planner.prototype.extractPlanFromConstraints = function (constraints) {
try { if (Inst743 <= 1000 && typeof (constraints) != "undefined") {_RecordType("<19880,19891,778>",(constraints)); Inst743++; } } catch(e) {}
try { if (Inst745 <= 1000 && typeof (OrderedCollection) != "undefined") {_RecordType("<19915,19932,779>",(OrderedCollection)); Inst745++; } } catch(e) {}
  var sources = new OrderedCollection();
try { if (Inst744 <= 1000 && typeof (sources) != "undefined") {_RecordType("<19901,19908,779>",(sources)); Inst744++; } } catch(e) {}

  for (var i = 0; i < constraints.size(); i++) {
try { if (Inst746 <= 1000 && typeof (i) != "undefined") {_RecordType("<19948,19949,781>",(i)); Inst746++; } } catch(e) {}try { if (Inst747 <= 1000 && typeof (i) != "undefined") {_RecordType("<19955,19956,781>",(i)); Inst747++; } } catch(e) {}try { if (Inst748 <= 1000 && typeof (constraints.size) != "undefined") {_RecordType("<19959,19975,781>",(constraints.size)); Inst748++; } } catch(e) {}try { if (Inst749 <= 1000 && typeof (constraints) != "undefined") {_RecordType("<19959,19970,781>",(constraints)); Inst749++; } } catch(e) {}try { if (Inst750 <= 1000 && typeof (i) != "undefined") {_RecordType("<19979,19980,781>",(i)); Inst750++; } } catch(e) {}
try { if (Inst752 <= 1000 && typeof (e) != "undefined") {_RecordType("<20028,20029,784>",(e)); Inst752++; } } catch(e) {}
    try {
try { if (Inst751 <= 1000 && typeof (exception) != "undefined") {_RecordType("<20002,20011,783>",(exception)); Inst751++; } } catch(e) {}
      exception();
    } catch (e) {
      ;
    }

try { if (Inst754 <= 1000 && typeof (constraints.at) != "undefined") {_RecordType("<20060,20074,788>",(constraints.at)); Inst754++; } } catch(e) {}try { if (Inst755 <= 1000 && typeof (constraints) != "undefined") {_RecordType("<20060,20071,788>",(constraints)); Inst755++; } } catch(e) {}try { if (Inst756 <= 1000 && typeof (i) != "undefined") {_RecordType("<20075,20076,788>",(i)); Inst756++; } } catch(e) {}
    var c = constraints.at(i);
try { if (Inst753 <= 1000 && typeof (c) != "undefined") {_RecordType("<20056,20057,788>",(c)); Inst753++; } } catch(e) {}

try { if (Inst758 <= 1000 && typeof (e) != "undefined") {_RecordType("<20122,20123,792>",(e)); Inst758++; } } catch(e) {}
    try {
try { if (Inst757 <= 1000 && typeof (exception) != "undefined") {_RecordType("<20096,20105,791>",(exception)); Inst757++; } } catch(e) {}
      exception();
    } catch (e) {
      ;
    }

try { if (Inst759 <= 1000 && typeof (c.isInput) != "undefined") {_RecordType("<20150,20159,796>",(c.isInput)); Inst759++; } } catch(e) {}try { if (Inst760 <= 1000 && typeof (c) != "undefined") {_RecordType("<20150,20151,796>",(c)); Inst760++; } } catch(e) {}try { if (Inst761 <= 1000 && typeof (c.isSatisfied) != "undefined") {_RecordType("<20165,20178,796>",(c.isSatisfied)); Inst761++; } } catch(e) {}try { if (Inst762 <= 1000 && typeof (c) != "undefined") {_RecordType("<20165,20166,796>",(c)); Inst762++; } } catch(e) {}
    if (c.isInput() && c.isSatisfied()) {
      // not in plan already and eligible for inclusion
try { if (Inst763 <= 1000 && typeof (sources.add) != "undefined") {_RecordType("<20246,20257,798>",(sources.add)); Inst763++; } } catch(e) {}try { if (Inst764 <= 1000 && typeof (sources) != "undefined") {_RecordType("<20246,20253,798>",(sources)); Inst764++; } } catch(e) {}try { if (Inst765 <= 1000 && typeof (c) != "undefined") {_RecordType("<20258,20259,798>",(c)); Inst765++; } } catch(e) {}
      sources.add(c);
    }
  }

try { if (Inst766 <= 1000 && typeof (this.makePlan) != "undefined") {_RecordType("<20282,20295,802>",(this.makePlan)); Inst766++; } } catch(e) {}try { if (Inst767 <= 1000 && typeof (sources) != "undefined") {_RecordType("<20296,20303,802>",(sources)); Inst767++; } } catch(e) {}
  return this.makePlan(sources);
};
try { if (Inst740 <= 1000 && typeof (Planner.prototype.extractPlanFromConstraints) != "undefined") {_RecordType("<19823,19867,778>",(Planner.prototype.extractPlanFromConstraints)); Inst740++; } } catch(e) {}try { if (Inst741 <= 1000 && typeof (Planner.prototype) != "undefined") {_RecordType("<19823,19840,778>",(Planner.prototype)); Inst741++; } } catch(e) {}try { if (Inst742 <= 1000 && typeof (Planner) != "undefined") {_RecordType("<19823,19830,778>",(Planner)); Inst742++; } } catch(e) {}
/**
 * Recompute the walkabout strengths and stay flags of all variables
 * downstream of the given constraint and recompute the actual
 * values of all variables whose stay flag is true. If a cycle is
 * detected, remove the given constraint and answer
 * false. Otherwise, answer true.
 * Details: Cycles are detected when a marked variable is
 * encountered downstream of the given constraint. The sender is
 * assumed to have marked the inputs of the given constraint with
 * the given mark. Thus, encountering a marked node downstream of
 * the output constraint means that there is a path from the
 * constraint's output to one of its inputs.
 */


Planner.prototype.addPropagate = function (c, mark) {
try { if (Inst771 <= 1000 && typeof (c) != "undefined") {_RecordType("<21007,21008,819>",(c)); Inst771++; } } catch(e) {}try { if (Inst772 <= 1000 && typeof (mark) != "undefined") {_RecordType("<21010,21014,819>",(mark)); Inst772++; } } catch(e) {}
try { if (Inst774 <= 1000 && typeof (OrderedCollection) != "undefined") {_RecordType("<21035,21052,820>",(OrderedCollection)); Inst774++; } } catch(e) {}
  var todo = new OrderedCollection();
try { if (Inst773 <= 1000 && typeof (todo) != "undefined") {_RecordType("<21024,21028,820>",(todo)); Inst773++; } } catch(e) {}
try { if (Inst775 <= 1000 && typeof (todo.add) != "undefined") {_RecordType("<21058,21066,821>",(todo.add)); Inst775++; } } catch(e) {}try { if (Inst776 <= 1000 && typeof (todo) != "undefined") {_RecordType("<21058,21062,821>",(todo)); Inst776++; } } catch(e) {}try { if (Inst777 <= 1000 && typeof (c) != "undefined") {_RecordType("<21067,21068,821>",(c)); Inst777++; } } catch(e) {}
  todo.add(c);

try { if (Inst778 <= 1000 && typeof (todo.size) != "undefined") {_RecordType("<21081,21090,823>",(todo.size)); Inst778++; } } catch(e) {}try { if (Inst779 <= 1000 && typeof (todo) != "undefined") {_RecordType("<21081,21085,823>",(todo)); Inst779++; } } catch(e) {}
  while (todo.size() > 0) {
try { if (Inst781 <= 1000 && typeof (todo.removeFirst) != "undefined") {_RecordType("<21112,21128,824>",(todo.removeFirst)); Inst781++; } } catch(e) {}try { if (Inst782 <= 1000 && typeof (todo) != "undefined") {_RecordType("<21112,21116,824>",(todo)); Inst782++; } } catch(e) {}
    var d = todo.removeFirst();
try { if (Inst780 <= 1000 && typeof (d) != "undefined") {_RecordType("<21108,21109,824>",(d)); Inst780++; } } catch(e) {}

try { if (Inst783 <= 1000 && typeof (d.output().mark) != "undefined") {_RecordType("<21141,21156,826>",(d.output().mark)); Inst783++; } } catch(e) {}try { if (Inst784 <= 1000 && typeof (d.output) != "undefined") {_RecordType("<21141,21149,826>",(d.output)); Inst784++; } } catch(e) {}try { if (Inst785 <= 1000 && typeof (d) != "undefined") {_RecordType("<21141,21142,826>",(d)); Inst785++; } } catch(e) {}try { if (Inst786 <= 1000 && typeof (mark) != "undefined") {_RecordType("<21160,21164,826>",(mark)); Inst786++; } } catch(e) {}
    if (d.output().mark == mark) {
try { if (Inst787 <= 1000 && typeof (this.incrementalRemove) != "undefined") {_RecordType("<21174,21196,827>",(this.incrementalRemove)); Inst787++; } } catch(e) {}try { if (Inst788 <= 1000 && typeof (c) != "undefined") {_RecordType("<21197,21198,827>",(c)); Inst788++; } } catch(e) {}
      this.incrementalRemove(c);
      return false;
    }

try { if (Inst789 <= 1000 && typeof (d.recalculate) != "undefined") {_RecordType("<21232,21245,831>",(d.recalculate)); Inst789++; } } catch(e) {}try { if (Inst790 <= 1000 && typeof (d) != "undefined") {_RecordType("<21232,21233,831>",(d)); Inst790++; } } catch(e) {}
    d.recalculate();
try { if (Inst791 <= 1000 && typeof (this.addConstraintsConsumingTo) != "undefined") {_RecordType("<21253,21283,832>",(this.addConstraintsConsumingTo)); Inst791++; } } catch(e) {}try { if (Inst792 <= 1000 && typeof (d.output) != "undefined") {_RecordType("<21284,21292,832>",(d.output)); Inst792++; } } catch(e) {}try { if (Inst793 <= 1000 && typeof (d) != "undefined") {_RecordType("<21284,21285,832>",(d)); Inst793++; } } catch(e) {}try { if (Inst794 <= 1000 && typeof (todo) != "undefined") {_RecordType("<21296,21300,832>",(todo)); Inst794++; } } catch(e) {}
    this.addConstraintsConsumingTo(d.output(), todo);
  }

  return true;
};
try { if (Inst768 <= 1000 && typeof (Planner.prototype.addPropagate) != "undefined") {_RecordType("<20964,20994,819>",(Planner.prototype.addPropagate)); Inst768++; } } catch(e) {}try { if (Inst769 <= 1000 && typeof (Planner.prototype) != "undefined") {_RecordType("<20964,20981,819>",(Planner.prototype)); Inst769++; } } catch(e) {}try { if (Inst770 <= 1000 && typeof (Planner) != "undefined") {_RecordType("<20964,20971,819>",(Planner)); Inst770++; } } catch(e) {}
/**
 * Update the walkabout strengths and stay flags of all variables
 * downstream of the given constraint. Answer a collection of
 * unsatisfied constraints sorted in order of decreasing strength.
 */


Planner.prototype.removePropagateFrom = function (out) {
try { if (Inst798 <= 1000 && typeof (out) != "undefined") {_RecordType("<21581,21584,844>",(out)); Inst798++; } } catch(e) {}
  out.determinedBy = null;
try { if (Inst799 <= 1000 && typeof (out.determinedBy) != "undefined") {_RecordType("<21590,21606,845>",(out.determinedBy)); Inst799++; } } catch(e) {}try { if (Inst800 <= 1000 && typeof (out) != "undefined") {_RecordType("<21590,21593,845>",(out)); Inst800++; } } catch(e) {}
try { if (Inst803 <= 1000 && typeof (Strength.WEAKEST) != "undefined") {_RecordType("<21636,21652,846>",(Strength.WEAKEST)); Inst803++; } } catch(e) {}try { if (Inst804 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<21636,21644,846>",(Strength)); Inst804++; } } catch(e) {}
  out.walkStrength = Strength.WEAKEST;
try { if (Inst801 <= 1000 && typeof (out.walkStrength) != "undefined") {_RecordType("<21617,21633,846>",(out.walkStrength)); Inst801++; } } catch(e) {}try { if (Inst802 <= 1000 && typeof (out) != "undefined") {_RecordType("<21617,21620,846>",(out)); Inst802++; } } catch(e) {}
  out.stay = true;
try { if (Inst805 <= 1000 && typeof (out.stay) != "undefined") {_RecordType("<21656,21664,847>",(out.stay)); Inst805++; } } catch(e) {}try { if (Inst806 <= 1000 && typeof (out) != "undefined") {_RecordType("<21656,21659,847>",(out)); Inst806++; } } catch(e) {}
try { if (Inst808 <= 1000 && typeof (OrderedCollection) != "undefined") {_RecordType("<21697,21714,848>",(OrderedCollection)); Inst808++; } } catch(e) {}
  var unsatisfied = new OrderedCollection();
try { if (Inst807 <= 1000 && typeof (unsatisfied) != "undefined") {_RecordType("<21679,21690,848>",(unsatisfied)); Inst807++; } } catch(e) {}
try { if (Inst810 <= 1000 && typeof (OrderedCollection) != "undefined") {_RecordType("<21735,21752,849>",(OrderedCollection)); Inst810++; } } catch(e) {}
  var todo = new OrderedCollection();
try { if (Inst809 <= 1000 && typeof (todo) != "undefined") {_RecordType("<21724,21728,849>",(todo)); Inst809++; } } catch(e) {}
try { if (Inst811 <= 1000 && typeof (todo.add) != "undefined") {_RecordType("<21758,21766,850>",(todo.add)); Inst811++; } } catch(e) {}try { if (Inst812 <= 1000 && typeof (todo) != "undefined") {_RecordType("<21758,21762,850>",(todo)); Inst812++; } } catch(e) {}try { if (Inst813 <= 1000 && typeof (out) != "undefined") {_RecordType("<21767,21770,850>",(out)); Inst813++; } } catch(e) {}
  todo.add(out);

try { if (Inst814 <= 1000 && typeof (todo.size) != "undefined") {_RecordType("<21783,21792,852>",(todo.size)); Inst814++; } } catch(e) {}try { if (Inst815 <= 1000 && typeof (todo) != "undefined") {_RecordType("<21783,21787,852>",(todo)); Inst815++; } } catch(e) {}
  while (todo.size() > 0) {
try { if (Inst817 <= 1000 && typeof (todo.removeFirst) != "undefined") {_RecordType("<21814,21830,853>",(todo.removeFirst)); Inst817++; } } catch(e) {}try { if (Inst818 <= 1000 && typeof (todo) != "undefined") {_RecordType("<21814,21818,853>",(todo)); Inst818++; } } catch(e) {}
    var v = todo.removeFirst();
try { if (Inst816 <= 1000 && typeof (v) != "undefined") {_RecordType("<21810,21811,853>",(v)); Inst816++; } } catch(e) {}

    for (var i = 0; i < v.constraints.size(); i++) {
try { if (Inst819 <= 1000 && typeof (i) != "undefined") {_RecordType("<21848,21849,855>",(i)); Inst819++; } } catch(e) {}try { if (Inst820 <= 1000 && typeof (i) != "undefined") {_RecordType("<21855,21856,855>",(i)); Inst820++; } } catch(e) {}try { if (Inst821 <= 1000 && typeof (v.constraints.size) != "undefined") {_RecordType("<21859,21877,855>",(v.constraints.size)); Inst821++; } } catch(e) {}try { if (Inst822 <= 1000 && typeof (v.constraints) != "undefined") {_RecordType("<21859,21872,855>",(v.constraints)); Inst822++; } } catch(e) {}try { if (Inst823 <= 1000 && typeof (v) != "undefined") {_RecordType("<21859,21860,855>",(v)); Inst823++; } } catch(e) {}try { if (Inst824 <= 1000 && typeof (i) != "undefined") {_RecordType("<21881,21882,855>",(i)); Inst824++; } } catch(e) {}
try { if (Inst826 <= 1000 && typeof (v.constraints.at) != "undefined") {_RecordType("<21902,21918,856>",(v.constraints.at)); Inst826++; } } catch(e) {}try { if (Inst827 <= 1000 && typeof (v.constraints) != "undefined") {_RecordType("<21902,21915,856>",(v.constraints)); Inst827++; } } catch(e) {}try { if (Inst828 <= 1000 && typeof (v) != "undefined") {_RecordType("<21902,21903,856>",(v)); Inst828++; } } catch(e) {}try { if (Inst829 <= 1000 && typeof (i) != "undefined") {_RecordType("<21919,21920,856>",(i)); Inst829++; } } catch(e) {}
      var c = v.constraints.at(i);
try { if (Inst825 <= 1000 && typeof (c) != "undefined") {_RecordType("<21898,21899,856>",(c)); Inst825++; } } catch(e) {}

try { if (Inst831 <= 1000 && typeof (e) != "undefined") {_RecordType("<21972,21973,860>",(e)); Inst831++; } } catch(e) {}
      try {
try { if (Inst830 <= 1000 && typeof (exception) != "undefined") {_RecordType("<21944,21953,859>",(exception)); Inst830++; } } catch(e) {}
        exception();
      } catch (e) {
        ;
      }

try { if (Inst832 <= 1000 && typeof (c.isSatisfied) != "undefined") {_RecordType("<22007,22020,864>",(c.isSatisfied)); Inst832++; } } catch(e) {}try { if (Inst833 <= 1000 && typeof (c) != "undefined") {_RecordType("<22007,22008,864>",(c)); Inst833++; } } catch(e) {}
      if (!c.isSatisfied()) {
try { if (Inst834 <= 1000 && typeof (unsatisfied.add) != "undefined") {_RecordType("<22034,22049,865>",(unsatisfied.add)); Inst834++; } } catch(e) {}try { if (Inst835 <= 1000 && typeof (unsatisfied) != "undefined") {_RecordType("<22034,22045,865>",(unsatisfied)); Inst835++; } } catch(e) {}try { if (Inst836 <= 1000 && typeof (c) != "undefined") {_RecordType("<22050,22051,865>",(c)); Inst836++; } } catch(e) {}
        unsatisfied.add(c);
      }
    }

try { if (Inst838 <= 1000 && typeof (v.determinedBy) != "undefined") {_RecordType("<22091,22105,869>",(v.determinedBy)); Inst838++; } } catch(e) {}try { if (Inst839 <= 1000 && typeof (v) != "undefined") {_RecordType("<22091,22092,869>",(v)); Inst839++; } } catch(e) {}
    var determining = v.determinedBy;
try { if (Inst837 <= 1000 && typeof (determining) != "undefined") {_RecordType("<22077,22088,869>",(determining)); Inst837++; } } catch(e) {}

    for (var i = 0; i < v.constraints.size(); i++) {
try { if (Inst840 <= 1000 && typeof (i) != "undefined") {_RecordType("<22121,22122,871>",(i)); Inst840++; } } catch(e) {}try { if (Inst841 <= 1000 && typeof (i) != "undefined") {_RecordType("<22128,22129,871>",(i)); Inst841++; } } catch(e) {}try { if (Inst842 <= 1000 && typeof (v.constraints.size) != "undefined") {_RecordType("<22132,22150,871>",(v.constraints.size)); Inst842++; } } catch(e) {}try { if (Inst843 <= 1000 && typeof (v.constraints) != "undefined") {_RecordType("<22132,22145,871>",(v.constraints)); Inst843++; } } catch(e) {}try { if (Inst844 <= 1000 && typeof (v) != "undefined") {_RecordType("<22132,22133,871>",(v)); Inst844++; } } catch(e) {}try { if (Inst845 <= 1000 && typeof (i) != "undefined") {_RecordType("<22154,22155,871>",(i)); Inst845++; } } catch(e) {}
try { if (Inst847 <= 1000 && typeof (v.constraints.at) != "undefined") {_RecordType("<22178,22194,872>",(v.constraints.at)); Inst847++; } } catch(e) {}try { if (Inst848 <= 1000 && typeof (v.constraints) != "undefined") {_RecordType("<22178,22191,872>",(v.constraints)); Inst848++; } } catch(e) {}try { if (Inst849 <= 1000 && typeof (v) != "undefined") {_RecordType("<22178,22179,872>",(v)); Inst849++; } } catch(e) {}try { if (Inst850 <= 1000 && typeof (i) != "undefined") {_RecordType("<22195,22196,872>",(i)); Inst850++; } } catch(e) {}
      var next = v.constraints.at(i);
try { if (Inst846 <= 1000 && typeof (next) != "undefined") {_RecordType("<22171,22175,872>",(next)); Inst846++; } } catch(e) {}

try { if (Inst851 <= 1000 && typeof (next) != "undefined") {_RecordType("<22210,22214,874>",(next)); Inst851++; } } catch(e) {}try { if (Inst852 <= 1000 && typeof (determining) != "undefined") {_RecordType("<22218,22229,874>",(determining)); Inst852++; } } catch(e) {}try { if (Inst853 <= 1000 && typeof (next.isSatisfied) != "undefined") {_RecordType("<22233,22249,874>",(next.isSatisfied)); Inst853++; } } catch(e) {}try { if (Inst854 <= 1000 && typeof (next) != "undefined") {_RecordType("<22233,22237,874>",(next)); Inst854++; } } catch(e) {}
      if (next != determining && next.isSatisfied()) {
try { if (Inst855 <= 1000 && typeof (next.recalculate) != "undefined") {_RecordType("<22263,22279,875>",(next.recalculate)); Inst855++; } } catch(e) {}try { if (Inst856 <= 1000 && typeof (next) != "undefined") {_RecordType("<22263,22267,875>",(next)); Inst856++; } } catch(e) {}
        next.recalculate();
try { if (Inst857 <= 1000 && typeof (todo.add) != "undefined") {_RecordType("<22291,22299,876>",(todo.add)); Inst857++; } } catch(e) {}try { if (Inst858 <= 1000 && typeof (todo) != "undefined") {_RecordType("<22291,22295,876>",(todo)); Inst858++; } } catch(e) {}try { if (Inst859 <= 1000 && typeof (next.output) != "undefined") {_RecordType("<22300,22311,876>",(next.output)); Inst859++; } } catch(e) {}try { if (Inst860 <= 1000 && typeof (next) != "undefined") {_RecordType("<22300,22304,876>",(next)); Inst860++; } } catch(e) {}
        todo.add(next.output());
      }

try { if (Inst862 <= 1000 && typeof (e) != "undefined") {_RecordType("<22373,22374,881>",(e)); Inst862++; } } catch(e) {}
      try {
try { if (Inst861 <= 1000 && typeof (exception) != "undefined") {_RecordType("<22345,22354,880>",(exception)); Inst861++; } } catch(e) {}
        exception();
      } catch (e) {
        ;
      }
    }
  }

try { if (Inst863 <= 1000 && typeof (unsatisfied) != "undefined") {_RecordType("<22416,22427,887>",(unsatisfied)); Inst863++; } } catch(e) {}
  return unsatisfied;
};
try { if (Inst795 <= 1000 && typeof (Planner.prototype.removePropagateFrom) != "undefined") {_RecordType("<21531,21568,844>",(Planner.prototype.removePropagateFrom)); Inst795++; } } catch(e) {}try { if (Inst796 <= 1000 && typeof (Planner.prototype) != "undefined") {_RecordType("<21531,21548,844>",(Planner.prototype)); Inst796++; } } catch(e) {}try { if (Inst797 <= 1000 && typeof (Planner) != "undefined") {_RecordType("<21531,21538,844>",(Planner)); Inst797++; } } catch(e) {}

Planner.prototype.addConstraintsConsumingTo = function (v, coll) {
try { if (Inst867 <= 1000 && typeof (v) != "undefined") {_RecordType("<22489,22490,890>",(v)); Inst867++; } } catch(e) {}try { if (Inst868 <= 1000 && typeof (coll) != "undefined") {_RecordType("<22492,22496,890>",(coll)); Inst868++; } } catch(e) {}
try { if (Inst870 <= 1000 && typeof (v.determinedBy) != "undefined") {_RecordType("<22520,22534,891>",(v.determinedBy)); Inst870++; } } catch(e) {}try { if (Inst871 <= 1000 && typeof (v) != "undefined") {_RecordType("<22520,22521,891>",(v)); Inst871++; } } catch(e) {}
  var determining = v.determinedBy;
try { if (Inst869 <= 1000 && typeof (determining) != "undefined") {_RecordType("<22506,22517,891>",(determining)); Inst869++; } } catch(e) {}
try { if (Inst873 <= 1000 && typeof (v.constraints) != "undefined") {_RecordType("<22547,22560,892>",(v.constraints)); Inst873++; } } catch(e) {}try { if (Inst874 <= 1000 && typeof (v) != "undefined") {_RecordType("<22547,22548,892>",(v)); Inst874++; } } catch(e) {}
  var cc = v.constraints;
try { if (Inst872 <= 1000 && typeof (cc) != "undefined") {_RecordType("<22542,22544,892>",(cc)); Inst872++; } } catch(e) {}

  for (var i = 0; i < cc.size(); i++) {
try { if (Inst875 <= 1000 && typeof (i) != "undefined") {_RecordType("<22574,22575,894>",(i)); Inst875++; } } catch(e) {}try { if (Inst876 <= 1000 && typeof (i) != "undefined") {_RecordType("<22581,22582,894>",(i)); Inst876++; } } catch(e) {}try { if (Inst877 <= 1000 && typeof (cc.size) != "undefined") {_RecordType("<22585,22592,894>",(cc.size)); Inst877++; } } catch(e) {}try { if (Inst878 <= 1000 && typeof (cc) != "undefined") {_RecordType("<22585,22587,894>",(cc)); Inst878++; } } catch(e) {}try { if (Inst879 <= 1000 && typeof (i) != "undefined") {_RecordType("<22596,22597,894>",(i)); Inst879++; } } catch(e) {}
try { if (Inst881 <= 1000 && typeof (cc.at) != "undefined") {_RecordType("<22615,22620,895>",(cc.at)); Inst881++; } } catch(e) {}try { if (Inst882 <= 1000 && typeof (cc) != "undefined") {_RecordType("<22615,22617,895>",(cc)); Inst882++; } } catch(e) {}try { if (Inst883 <= 1000 && typeof (i) != "undefined") {_RecordType("<22621,22622,895>",(i)); Inst883++; } } catch(e) {}
    var c = cc.at(i);
try { if (Inst880 <= 1000 && typeof (c) != "undefined") {_RecordType("<22611,22612,895>",(c)); Inst880++; } } catch(e) {}

try { if (Inst885 <= 1000 && typeof (e) != "undefined") {_RecordType("<22668,22669,899>",(e)); Inst885++; } } catch(e) {}
    try {
try { if (Inst884 <= 1000 && typeof (exception) != "undefined") {_RecordType("<22642,22651,898>",(exception)); Inst884++; } } catch(e) {}
      exception();
    } catch (e) {
      ;
    }

try { if (Inst886 <= 1000 && typeof (c) != "undefined") {_RecordType("<22696,22697,903>",(c)); Inst886++; } } catch(e) {}try { if (Inst887 <= 1000 && typeof (determining) != "undefined") {_RecordType("<22701,22712,903>",(determining)); Inst887++; } } catch(e) {}try { if (Inst888 <= 1000 && typeof (c.isSatisfied) != "undefined") {_RecordType("<22716,22729,903>",(c.isSatisfied)); Inst888++; } } catch(e) {}try { if (Inst889 <= 1000 && typeof (c) != "undefined") {_RecordType("<22716,22717,903>",(c)); Inst889++; } } catch(e) {}
    if (c != determining && c.isSatisfied()) {
try { if (Inst890 <= 1000 && typeof (coll.add) != "undefined") {_RecordType("<22741,22749,904>",(coll.add)); Inst890++; } } catch(e) {}try { if (Inst891 <= 1000 && typeof (coll) != "undefined") {_RecordType("<22741,22745,904>",(coll)); Inst891++; } } catch(e) {}try { if (Inst892 <= 1000 && typeof (c) != "undefined") {_RecordType("<22750,22751,904>",(c)); Inst892++; } } catch(e) {}
      coll.add(c);
    }
  }
};
try { if (Inst864 <= 1000 && typeof (Planner.prototype.addConstraintsConsumingTo) != "undefined") {_RecordType("<22433,22476,890>",(Planner.prototype.addConstraintsConsumingTo)); Inst864++; } } catch(e) {}try { if (Inst865 <= 1000 && typeof (Planner.prototype) != "undefined") {_RecordType("<22433,22450,890>",(Planner.prototype)); Inst865++; } } catch(e) {}try { if (Inst866 <= 1000 && typeof (Planner) != "undefined") {_RecordType("<22433,22440,890>",(Planner)); Inst866++; } } catch(e) {}
/* --- *
 * P l a n
 * --- */

/**
 * A Plan is an ordered list of constraints to be executed in sequence
 * to resatisfy all currently satisfiable constraints in the face of
 * one or more changing inputs.
 */


try { if (Inst893 <= 1000 && typeof (Plan) != "undefined") {_RecordType("<22989,22993,919>",(Plan)); Inst893++; } } catch(e) {}
function Plan() {
try { if (Inst895 <= 1000 && typeof (OrderedCollection) != "undefined") {_RecordType("<23013,23030,920>",(OrderedCollection)); Inst895++; } } catch(e) {}
  this.v = new OrderedCollection();
try { if (Inst894 <= 1000 && typeof (this.v) != "undefined") {_RecordType("<23000,23006,920>",(this.v)); Inst894++; } } catch(e) {}
}

Plan.prototype.addConstraint = function (c) {
try { if (Inst899 <= 1000 && typeof (c) != "undefined") {_RecordType("<23078,23079,923>",(c)); Inst899++; } } catch(e) {}
try { if (Inst900 <= 1000 && typeof (this.v.add) != "undefined") {_RecordType("<23085,23095,924>",(this.v.add)); Inst900++; } } catch(e) {}try { if (Inst901 <= 1000 && typeof (this.v) != "undefined") {_RecordType("<23085,23091,924>",(this.v)); Inst901++; } } catch(e) {}try { if (Inst902 <= 1000 && typeof (c) != "undefined") {_RecordType("<23096,23097,924>",(c)); Inst902++; } } catch(e) {}
  this.v.add(c);
};
try { if (Inst896 <= 1000 && typeof (Plan.prototype.addConstraint) != "undefined") {_RecordType("<23037,23065,923>",(Plan.prototype.addConstraint)); Inst896++; } } catch(e) {}try { if (Inst897 <= 1000 && typeof (Plan.prototype) != "undefined") {_RecordType("<23037,23051,923>",(Plan.prototype)); Inst897++; } } catch(e) {}try { if (Inst898 <= 1000 && typeof (Plan) != "undefined") {_RecordType("<23037,23041,923>",(Plan)); Inst898++; } } catch(e) {}

Plan.prototype.size = function () {
try { if (Inst906 <= 1000 && typeof (this.v.size) != "undefined") {_RecordType("<23149,23160,928>",(this.v.size)); Inst906++; } } catch(e) {}try { if (Inst907 <= 1000 && typeof (this.v) != "undefined") {_RecordType("<23149,23155,928>",(this.v)); Inst907++; } } catch(e) {}
  return this.v.size();
};
try { if (Inst903 <= 1000 && typeof (Plan.prototype.size) != "undefined") {_RecordType("<23104,23123,927>",(Plan.prototype.size)); Inst903++; } } catch(e) {}try { if (Inst904 <= 1000 && typeof (Plan.prototype) != "undefined") {_RecordType("<23104,23118,927>",(Plan.prototype)); Inst904++; } } catch(e) {}try { if (Inst905 <= 1000 && typeof (Plan) != "undefined") {_RecordType("<23104,23108,927>",(Plan)); Inst905++; } } catch(e) {}

Plan.prototype.constraintAt = function (index) {
try { if (Inst911 <= 1000 && typeof (index) != "undefined") {_RecordType("<23208,23213,931>",(index)); Inst911++; } } catch(e) {}
try { if (Inst912 <= 1000 && typeof (this.v.at) != "undefined") {_RecordType("<23226,23235,932>",(this.v.at)); Inst912++; } } catch(e) {}try { if (Inst913 <= 1000 && typeof (this.v) != "undefined") {_RecordType("<23226,23232,932>",(this.v)); Inst913++; } } catch(e) {}try { if (Inst914 <= 1000 && typeof (index) != "undefined") {_RecordType("<23236,23241,932>",(index)); Inst914++; } } catch(e) {}
  return this.v.at(index);
};
try { if (Inst908 <= 1000 && typeof (Plan.prototype.constraintAt) != "undefined") {_RecordType("<23168,23195,931>",(Plan.prototype.constraintAt)); Inst908++; } } catch(e) {}try { if (Inst909 <= 1000 && typeof (Plan.prototype) != "undefined") {_RecordType("<23168,23182,931>",(Plan.prototype)); Inst909++; } } catch(e) {}try { if (Inst910 <= 1000 && typeof (Plan) != "undefined") {_RecordType("<23168,23172,931>",(Plan)); Inst910++; } } catch(e) {}

Plan.prototype.execute = function () {
  for (var i = 0; i < this.size(); i++) {
try { if (Inst918 <= 1000 && typeof (i) != "undefined") {_RecordType("<23298,23299,936>",(i)); Inst918++; } } catch(e) {}try { if (Inst919 <= 1000 && typeof (i) != "undefined") {_RecordType("<23305,23306,936>",(i)); Inst919++; } } catch(e) {}try { if (Inst920 <= 1000 && typeof (this.size) != "undefined") {_RecordType("<23309,23318,936>",(this.size)); Inst920++; } } catch(e) {}try { if (Inst921 <= 1000 && typeof (i) != "undefined") {_RecordType("<23322,23323,936>",(i)); Inst921++; } } catch(e) {}
try { if (Inst923 <= 1000 && typeof (this.constraintAt) != "undefined") {_RecordType("<23341,23358,937>",(this.constraintAt)); Inst923++; } } catch(e) {}try { if (Inst924 <= 1000 && typeof (i) != "undefined") {_RecordType("<23359,23360,937>",(i)); Inst924++; } } catch(e) {}
    var c = this.constraintAt(i);
try { if (Inst922 <= 1000 && typeof (c) != "undefined") {_RecordType("<23337,23338,937>",(c)); Inst922++; } } catch(e) {}

try { if (Inst926 <= 1000 && typeof (e) != "undefined") {_RecordType("<23406,23407,941>",(e)); Inst926++; } } catch(e) {}
    try {
try { if (Inst925 <= 1000 && typeof (exception) != "undefined") {_RecordType("<23380,23389,940>",(exception)); Inst925++; } } catch(e) {}
      exception();
    } catch (e) {
      ;
    }

try { if (Inst927 <= 1000 && typeof (c.execute) != "undefined") {_RecordType("<23430,23439,945>",(c.execute)); Inst927++; } } catch(e) {}try { if (Inst928 <= 1000 && typeof (c) != "undefined") {_RecordType("<23430,23431,945>",(c)); Inst928++; } } catch(e) {}
    c.execute();
  }
};
try { if (Inst915 <= 1000 && typeof (Plan.prototype.execute) != "undefined") {_RecordType("<23248,23270,935>",(Plan.prototype.execute)); Inst915++; } } catch(e) {}try { if (Inst916 <= 1000 && typeof (Plan.prototype) != "undefined") {_RecordType("<23248,23262,935>",(Plan.prototype)); Inst916++; } } catch(e) {}try { if (Inst917 <= 1000 && typeof (Plan) != "undefined") {_RecordType("<23248,23252,935>",(Plan)); Inst917++; } } catch(e) {}
/* --- *
 * M a i n
 * --- */

/**
 * This is the standard DeltaBlue benchmark. A long chain of equality
 * constraints is constructed with a stay constraint on one end. An
 * edit constraint is then added to the opposite end and the time is
 * measured for adding and removing this constraint, and extracting
 * and executing a constraint satisfaction plan. There are two cases.
 * In case 1, the added constraint is stronger than the stay
 * constraint and values must propagate down the entire length of the
 * chain. In case 2, the added constraint is weaker than the stay
 * constraint so it cannot be accomodated. The cost in this case is,
 * of course, very low. Typical situations lie somewhere between these
 * two extremes.
 */


try { if (Inst929 <= 1000 && typeof (chainTest) != "undefined") {_RecordType("<24199,24208,967>",(chainTest)); Inst929++; } } catch(e) {}
function chainTest(n) {
try { if (Inst930 <= 1000 && typeof (n) != "undefined") {_RecordType("<24209,24210,967>",(n)); Inst930++; } } catch(e) {}
try { if (Inst932 <= 1000 && typeof (Planner) != "undefined") {_RecordType("<24230,24237,968>",(Planner)); Inst932++; } } catch(e) {}
  planner = new Planner();
try { if (Inst931 <= 1000 && typeof (planner) != "undefined") {_RecordType("<24216,24223,968>",(planner)); Inst931++; } } catch(e) {}
  var prev = null,
      first = null,
      last = null; // Build chain of n equality constraints
try { if (Inst933 <= 1000 && typeof (prev) != "undefined") {_RecordType("<24247,24251,969>",(prev)); Inst933++; } } catch(e) {}try { if (Inst934 <= 1000 && typeof (first) != "undefined") {_RecordType("<24266,24271,970>",(first)); Inst934++; } } catch(e) {}try { if (Inst935 <= 1000 && typeof (last) != "undefined") {_RecordType("<24286,24290,971>",(last)); Inst935++; } } catch(e) {}

  for (var i = 0; i <= n; i++) {
try { if (Inst936 <= 1000 && typeof (i) != "undefined") {_RecordType("<24352,24353,973>",(i)); Inst936++; } } catch(e) {}try { if (Inst937 <= 1000 && typeof (i) != "undefined") {_RecordType("<24359,24360,973>",(i)); Inst937++; } } catch(e) {}try { if (Inst938 <= 1000 && typeof (n) != "undefined") {_RecordType("<24364,24365,973>",(n)); Inst938++; } } catch(e) {}try { if (Inst939 <= 1000 && typeof (i) != "undefined") {_RecordType("<24367,24368,973>",(i)); Inst939++; } } catch(e) {}
try { if (Inst941 <= 1000 && typeof (i) != "undefined") {_RecordType("<24395,24396,974>",(i)); Inst941++; } } catch(e) {}
    var name = "v" + i;
try { if (Inst940 <= 1000 && typeof (name) != "undefined") {_RecordType("<24382,24386,974>",(name)); Inst940++; } } catch(e) {}
try { if (Inst943 <= 1000 && typeof (Variable) != "undefined") {_RecordType("<24414,24422,975>",(Variable)); Inst943++; } } catch(e) {}try { if (Inst944 <= 1000 && typeof (name) != "undefined") {_RecordType("<24423,24427,975>",(name)); Inst944++; } } catch(e) {}
    var v = new Variable(name);
try { if (Inst942 <= 1000 && typeof (v) != "undefined") {_RecordType("<24406,24407,975>",(v)); Inst942++; } } catch(e) {}

try { if (Inst945 <= 1000 && typeof (prev) != "undefined") {_RecordType("<24439,24443,977>",(prev)); Inst945++; } } catch(e) {}
    if (prev != null) {
try { if (Inst946 <= 1000 && typeof (EqualityConstraint) != "undefined") {_RecordType("<24465,24483,978>",(EqualityConstraint)); Inst946++; } } catch(e) {}try { if (Inst947 <= 1000 && typeof (prev) != "undefined") {_RecordType("<24484,24488,978>",(prev)); Inst947++; } } catch(e) {}try { if (Inst948 <= 1000 && typeof (v) != "undefined") {_RecordType("<24490,24491,978>",(v)); Inst948++; } } catch(e) {}try { if (Inst949 <= 1000 && typeof (Strength.REQUIRED) != "undefined") {_RecordType("<24493,24510,978>",(Strength.REQUIRED)); Inst949++; } } catch(e) {}try { if (Inst950 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<24493,24501,978>",(Strength)); Inst950++; } } catch(e) {}
      new EqualityConstraint(prev, v, Strength.REQUIRED);
    }

try { if (Inst951 <= 1000 && typeof (i) != "undefined") {_RecordType("<24528,24529,981>",(i)); Inst951++; } } catch(e) {}
    if (i == 0) {
try { if (Inst953 <= 1000 && typeof (v) != "undefined") {_RecordType("<24552,24553,982>",(v)); Inst953++; } } catch(e) {}
      first = v;
try { if (Inst952 <= 1000 && typeof (first) != "undefined") {_RecordType("<24544,24549,982>",(first)); Inst952++; } } catch(e) {}
    }

try { if (Inst954 <= 1000 && typeof (i) != "undefined") {_RecordType("<24570,24571,985>",(i)); Inst954++; } } catch(e) {}try { if (Inst955 <= 1000 && typeof (n) != "undefined") {_RecordType("<24575,24576,985>",(n)); Inst955++; } } catch(e) {}
    if (i == n) {
try { if (Inst957 <= 1000 && typeof (v) != "undefined") {_RecordType("<24593,24594,986>",(v)); Inst957++; } } catch(e) {}
      last = v;
try { if (Inst956 <= 1000 && typeof (last) != "undefined") {_RecordType("<24586,24590,986>",(last)); Inst956++; } } catch(e) {}
    }

try { if (Inst959 <= 1000 && typeof (e) != "undefined") {_RecordType("<24645,24646,991>",(e)); Inst959++; } } catch(e) {}
    try {
try { if (Inst958 <= 1000 && typeof (exception) != "undefined") {_RecordType("<24619,24628,990>",(exception)); Inst958++; } } catch(e) {}
      exception();
    } catch (e) {
      ;
    }

try { if (Inst961 <= 1000 && typeof (v) != "undefined") {_RecordType("<24676,24677,995>",(v)); Inst961++; } } catch(e) {}
    prev = v;
try { if (Inst960 <= 1000 && typeof (prev) != "undefined") {_RecordType("<24669,24673,995>",(prev)); Inst960++; } } catch(e) {}
  }

try { if (Inst962 <= 1000 && typeof (StayConstraint) != "undefined") {_RecordType("<24690,24704,998>",(StayConstraint)); Inst962++; } } catch(e) {}try { if (Inst963 <= 1000 && typeof (last) != "undefined") {_RecordType("<24705,24709,998>",(last)); Inst963++; } } catch(e) {}try { if (Inst964 <= 1000 && typeof (Strength.STRONG_DEFAULT) != "undefined") {_RecordType("<24711,24734,998>",(Strength.STRONG_DEFAULT)); Inst964++; } } catch(e) {}try { if (Inst965 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<24711,24719,998>",(Strength)); Inst965++; } } catch(e) {}
  new StayConstraint(last, Strength.STRONG_DEFAULT);
try { if (Inst967 <= 1000 && typeof (EditConstraint) != "undefined") {_RecordType("<24754,24768,999>",(EditConstraint)); Inst967++; } } catch(e) {}try { if (Inst968 <= 1000 && typeof (first) != "undefined") {_RecordType("<24769,24774,999>",(first)); Inst968++; } } catch(e) {}try { if (Inst969 <= 1000 && typeof (Strength.PREFERRED) != "undefined") {_RecordType("<24776,24794,999>",(Strength.PREFERRED)); Inst969++; } } catch(e) {}try { if (Inst970 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<24776,24784,999>",(Strength)); Inst970++; } } catch(e) {}
  var edit = new EditConstraint(first, Strength.PREFERRED);
try { if (Inst966 <= 1000 && typeof (edit) != "undefined") {_RecordType("<24743,24747,999>",(edit)); Inst966++; } } catch(e) {}
try { if (Inst972 <= 1000 && typeof (OrderedCollection) != "undefined") {_RecordType("<24815,24832,1000>",(OrderedCollection)); Inst972++; } } catch(e) {}
  var edits = new OrderedCollection();
try { if (Inst971 <= 1000 && typeof (edits) != "undefined") {_RecordType("<24803,24808,1000>",(edits)); Inst971++; } } catch(e) {}
try { if (Inst973 <= 1000 && typeof (edits.add) != "undefined") {_RecordType("<24838,24847,1001>",(edits.add)); Inst973++; } } catch(e) {}try { if (Inst974 <= 1000 && typeof (edits) != "undefined") {_RecordType("<24838,24843,1001>",(edits)); Inst974++; } } catch(e) {}try { if (Inst975 <= 1000 && typeof (edit) != "undefined") {_RecordType("<24848,24852,1001>",(edit)); Inst975++; } } catch(e) {}
  edits.add(edit);
try { if (Inst977 <= 1000 && typeof (planner.extractPlanFromConstraints) != "undefined") {_RecordType("<24868,24902,1002>",(planner.extractPlanFromConstraints)); Inst977++; } } catch(e) {}try { if (Inst978 <= 1000 && typeof (planner) != "undefined") {_RecordType("<24868,24875,1002>",(planner)); Inst978++; } } catch(e) {}try { if (Inst979 <= 1000 && typeof (edits) != "undefined") {_RecordType("<24903,24908,1002>",(edits)); Inst979++; } } catch(e) {}
  var plan = planner.extractPlanFromConstraints(edits);
try { if (Inst976 <= 1000 && typeof (plan) != "undefined") {_RecordType("<24861,24865,1002>",(plan)); Inst976++; } } catch(e) {}

  for (var i = 0; i < 100; i++) {
try { if (Inst980 <= 1000 && typeof (i) != "undefined") {_RecordType("<24923,24924,1004>",(i)); Inst980++; } } catch(e) {}try { if (Inst981 <= 1000 && typeof (i) != "undefined") {_RecordType("<24930,24931,1004>",(i)); Inst981++; } } catch(e) {}try { if (Inst982 <= 1000 && typeof (i) != "undefined") {_RecordType("<24939,24940,1004>",(i)); Inst982++; } } catch(e) {}
try { if (Inst985 <= 1000 && typeof (i) != "undefined") {_RecordType("<24964,24965,1005>",(i)); Inst985++; } } catch(e) {}
    first.value = i;
try { if (Inst983 <= 1000 && typeof (first.value) != "undefined") {_RecordType("<24950,24961,1005>",(first.value)); Inst983++; } } catch(e) {}try { if (Inst984 <= 1000 && typeof (first) != "undefined") {_RecordType("<24950,24955,1005>",(first)); Inst984++; } } catch(e) {}
try { if (Inst986 <= 1000 && typeof (plan.execute) != "undefined") {_RecordType("<24971,24983,1006>",(plan.execute)); Inst986++; } } catch(e) {}try { if (Inst987 <= 1000 && typeof (plan) != "undefined") {_RecordType("<24971,24975,1006>",(plan)); Inst987++; } } catch(e) {}
    plan.execute();

try { if (Inst988 <= 1000 && typeof (last.value) != "undefined") {_RecordType("<24996,25006,1008>",(last.value)); Inst988++; } } catch(e) {}try { if (Inst989 <= 1000 && typeof (last) != "undefined") {_RecordType("<24996,25000,1008>",(last)); Inst989++; } } catch(e) {}try { if (Inst990 <= 1000 && typeof (i) != "undefined") {_RecordType("<25010,25011,1008>",(i)); Inst990++; } } catch(e) {}
    if (last.value != i) {
try { if (Inst991 <= 1000 && typeof (alert) != "undefined") {_RecordType("<25021,25026,1009>",(alert)); Inst991++; } } catch(e) {}
      alert("Chain test failed.");
    }

try { if (Inst993 <= 1000 && typeof (e) != "undefined") {_RecordType("<25099,25100,1014>",(e)); Inst993++; } } catch(e) {}
    try {
try { if (Inst992 <= 1000 && typeof (exception) != "undefined") {_RecordType("<25073,25082,1013>",(exception)); Inst992++; } } catch(e) {}
      exception();
    } catch (e) {
      ;
    }
  }
}
/**
 * This test constructs a two sets of variables related to each
 * other by a simple linear transformation (scale and offset). The
 * time is measured to change a variable on either side of the
 * mapping and to change the scale and offset factors.
 */


try { if (Inst994 <= 1000 && typeof (projectionTest) != "undefined") {_RecordType("<25392,25406,1027>",(projectionTest)); Inst994++; } } catch(e) {}
function projectionTest(n) {
try { if (Inst995 <= 1000 && typeof (n) != "undefined") {_RecordType("<25407,25408,1027>",(n)); Inst995++; } } catch(e) {}
try { if (Inst997 <= 1000 && typeof (Planner) != "undefined") {_RecordType("<25428,25435,1028>",(Planner)); Inst997++; } } catch(e) {}
  planner = new Planner();
try { if (Inst996 <= 1000 && typeof (planner) != "undefined") {_RecordType("<25414,25421,1028>",(planner)); Inst996++; } } catch(e) {}
try { if (Inst999 <= 1000 && typeof (Variable) != "undefined") {_RecordType("<25457,25465,1029>",(Variable)); Inst999++; } } catch(e) {}
  var scale = new Variable("scale", 10);
try { if (Inst998 <= 1000 && typeof (scale) != "undefined") {_RecordType("<25445,25450,1029>",(scale)); Inst998++; } } catch(e) {}
try { if (Inst1001 <= 1000 && typeof (Variable) != "undefined") {_RecordType("<25499,25507,1030>",(Variable)); Inst1001++; } } catch(e) {}
  var offset = new Variable("offset", 1000);
try { if (Inst1000 <= 1000 && typeof (offset) != "undefined") {_RecordType("<25486,25492,1030>",(offset)); Inst1000++; } } catch(e) {}
  var src = null,
      dst = null;
try { if (Inst1002 <= 1000 && typeof (src) != "undefined") {_RecordType("<25531,25534,1031>",(src)); Inst1002++; } } catch(e) {}try { if (Inst1003 <= 1000 && typeof (dst) != "undefined") {_RecordType("<25549,25552,1032>",(dst)); Inst1003++; } } catch(e) {}
try { if (Inst1005 <= 1000 && typeof (OrderedCollection) != "undefined") {_RecordType("<25579,25596,1033>",(OrderedCollection)); Inst1005++; } } catch(e) {}
  var dests = new OrderedCollection();
try { if (Inst1004 <= 1000 && typeof (dests) != "undefined") {_RecordType("<25567,25572,1033>",(dests)); Inst1004++; } } catch(e) {}

  for (var i = 0; i < n; i++) {
try { if (Inst1006 <= 1000 && typeof (i) != "undefined") {_RecordType("<25612,25613,1035>",(i)); Inst1006++; } } catch(e) {}try { if (Inst1007 <= 1000 && typeof (i) != "undefined") {_RecordType("<25619,25620,1035>",(i)); Inst1007++; } } catch(e) {}try { if (Inst1008 <= 1000 && typeof (n) != "undefined") {_RecordType("<25623,25624,1035>",(n)); Inst1008++; } } catch(e) {}try { if (Inst1009 <= 1000 && typeof (i) != "undefined") {_RecordType("<25626,25627,1035>",(i)); Inst1009++; } } catch(e) {}
try { if (Inst1011 <= 1000 && typeof (Variable) != "undefined") {_RecordType("<25647,25655,1036>",(Variable)); Inst1011++; } } catch(e) {}try { if (Inst1012 <= 1000 && typeof (i) != "undefined") {_RecordType("<25664,25665,1036>",(i)); Inst1012++; } } catch(e) {}try { if (Inst1013 <= 1000 && typeof (i) != "undefined") {_RecordType("<25667,25668,1036>",(i)); Inst1013++; } } catch(e) {}
    src = new Variable("src" + i, i);
try { if (Inst1010 <= 1000 && typeof (src) != "undefined") {_RecordType("<25637,25640,1036>",(src)); Inst1010++; } } catch(e) {}
try { if (Inst1015 <= 1000 && typeof (Variable) != "undefined") {_RecordType("<25685,25693,1037>",(Variable)); Inst1015++; } } catch(e) {}try { if (Inst1016 <= 1000 && typeof (i) != "undefined") {_RecordType("<25702,25703,1037>",(i)); Inst1016++; } } catch(e) {}try { if (Inst1017 <= 1000 && typeof (i) != "undefined") {_RecordType("<25705,25706,1037>",(i)); Inst1017++; } } catch(e) {}
    dst = new Variable("dst" + i, i);
try { if (Inst1014 <= 1000 && typeof (dst) != "undefined") {_RecordType("<25675,25678,1037>",(dst)); Inst1014++; } } catch(e) {}
try { if (Inst1018 <= 1000 && typeof (dests.add) != "undefined") {_RecordType("<25713,25722,1038>",(dests.add)); Inst1018++; } } catch(e) {}try { if (Inst1019 <= 1000 && typeof (dests) != "undefined") {_RecordType("<25713,25718,1038>",(dests)); Inst1019++; } } catch(e) {}try { if (Inst1020 <= 1000 && typeof (dst) != "undefined") {_RecordType("<25723,25726,1038>",(dst)); Inst1020++; } } catch(e) {}
    dests.add(dst);

try { if (Inst1022 <= 1000 && typeof (e) != "undefined") {_RecordType("<25772,25773,1042>",(e)); Inst1022++; } } catch(e) {}
    try {
try { if (Inst1021 <= 1000 && typeof (exception) != "undefined") {_RecordType("<25746,25755,1041>",(exception)); Inst1021++; } } catch(e) {}
      exception();
    } catch (e) {
      ;
    }

try { if (Inst1023 <= 1000 && typeof (StayConstraint) != "undefined") {_RecordType("<25800,25814,1046>",(StayConstraint)); Inst1023++; } } catch(e) {}try { if (Inst1024 <= 1000 && typeof (src) != "undefined") {_RecordType("<25815,25818,1046>",(src)); Inst1024++; } } catch(e) {}try { if (Inst1025 <= 1000 && typeof (Strength.NORMAL) != "undefined") {_RecordType("<25820,25835,1046>",(Strength.NORMAL)); Inst1025++; } } catch(e) {}try { if (Inst1026 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<25820,25828,1046>",(Strength)); Inst1026++; } } catch(e) {}
    new StayConstraint(src, Strength.NORMAL);
try { if (Inst1027 <= 1000 && typeof (ScaleConstraint) != "undefined") {_RecordType("<25846,25861,1047>",(ScaleConstraint)); Inst1027++; } } catch(e) {}try { if (Inst1028 <= 1000 && typeof (src) != "undefined") {_RecordType("<25862,25865,1047>",(src)); Inst1028++; } } catch(e) {}try { if (Inst1029 <= 1000 && typeof (scale) != "undefined") {_RecordType("<25867,25872,1047>",(scale)); Inst1029++; } } catch(e) {}try { if (Inst1030 <= 1000 && typeof (offset) != "undefined") {_RecordType("<25874,25880,1047>",(offset)); Inst1030++; } } catch(e) {}try { if (Inst1031 <= 1000 && typeof (dst) != "undefined") {_RecordType("<25882,25885,1047>",(dst)); Inst1031++; } } catch(e) {}try { if (Inst1032 <= 1000 && typeof (Strength.REQUIRED) != "undefined") {_RecordType("<25887,25904,1047>",(Strength.REQUIRED)); Inst1032++; } } catch(e) {}try { if (Inst1033 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<25887,25895,1047>",(Strength)); Inst1033++; } } catch(e) {}
    new ScaleConstraint(src, scale, offset, dst, Strength.REQUIRED);
  }

try { if (Inst1034 <= 1000 && typeof (change) != "undefined") {_RecordType("<25914,25920,1050>",(change)); Inst1034++; } } catch(e) {}try { if (Inst1035 <= 1000 && typeof (src) != "undefined") {_RecordType("<25921,25924,1050>",(src)); Inst1035++; } } catch(e) {}
  change(src, 17);

try { if (Inst1036 <= 1000 && typeof (dst.value) != "undefined") {_RecordType("<25938,25947,1052>",(dst.value)); Inst1036++; } } catch(e) {}try { if (Inst1037 <= 1000 && typeof (dst) != "undefined") {_RecordType("<25938,25941,1052>",(dst)); Inst1037++; } } catch(e) {}
  if (dst.value != 1170) {
try { if (Inst1038 <= 1000 && typeof (alert) != "undefined") {_RecordType("<25963,25968,1053>",(alert)); Inst1038++; } } catch(e) {}
    alert("Projection 1 failed");
  }

try { if (Inst1039 <= 1000 && typeof (change) != "undefined") {_RecordType("<26000,26006,1056>",(change)); Inst1039++; } } catch(e) {}try { if (Inst1040 <= 1000 && typeof (dst) != "undefined") {_RecordType("<26007,26010,1056>",(dst)); Inst1040++; } } catch(e) {}
  change(dst, 1050);

try { if (Inst1041 <= 1000 && typeof (src.value) != "undefined") {_RecordType("<26026,26035,1058>",(src.value)); Inst1041++; } } catch(e) {}try { if (Inst1042 <= 1000 && typeof (src) != "undefined") {_RecordType("<26026,26029,1058>",(src)); Inst1042++; } } catch(e) {}
  if (src.value != 5) {
try { if (Inst1043 <= 1000 && typeof (alert) != "undefined") {_RecordType("<26048,26053,1059>",(alert)); Inst1043++; } } catch(e) {}
    alert("Projection 2 failed");
  }

try { if (Inst1044 <= 1000 && typeof (change) != "undefined") {_RecordType("<26085,26091,1062>",(change)); Inst1044++; } } catch(e) {}try { if (Inst1045 <= 1000 && typeof (scale) != "undefined") {_RecordType("<26092,26097,1062>",(scale)); Inst1045++; } } catch(e) {}
  change(scale, 5);

  for (var i = 0; i < n - 1; i++) {
try { if (Inst1046 <= 1000 && typeof (i) != "undefined") {_RecordType("<26115,26116,1064>",(i)); Inst1046++; } } catch(e) {}try { if (Inst1047 <= 1000 && typeof (i) != "undefined") {_RecordType("<26122,26123,1064>",(i)); Inst1047++; } } catch(e) {}try { if (Inst1048 <= 1000 && typeof (n) != "undefined") {_RecordType("<26126,26127,1064>",(n)); Inst1048++; } } catch(e) {}try { if (Inst1049 <= 1000 && typeof (i) != "undefined") {_RecordType("<26133,26134,1064>",(i)); Inst1049++; } } catch(e) {}
try { if (Inst1050 <= 1000 && typeof (dests.at(i).value) != "undefined") {_RecordType("<26148,26165,1065>",(dests.at(i).value)); Inst1050++; } } catch(e) {}try { if (Inst1051 <= 1000 && typeof (dests.at) != "undefined") {_RecordType("<26148,26156,1065>",(dests.at)); Inst1051++; } } catch(e) {}try { if (Inst1052 <= 1000 && typeof (dests) != "undefined") {_RecordType("<26148,26153,1065>",(dests)); Inst1052++; } } catch(e) {}try { if (Inst1053 <= 1000 && typeof (i) != "undefined") {_RecordType("<26157,26158,1065>",(i)); Inst1053++; } } catch(e) {}try { if (Inst1054 <= 1000 && typeof (i) != "undefined") {_RecordType("<26169,26170,1065>",(i)); Inst1054++; } } catch(e) {}
    if (dests.at(i).value != i * 5 + 1000) {
try { if (Inst1055 <= 1000 && typeof (alert) != "undefined") {_RecordType("<26191,26196,1066>",(alert)); Inst1055++; } } catch(e) {}
      alert("Projection 3 failed");
    }

try { if (Inst1057 <= 1000 && typeof (e) != "undefined") {_RecordType("<26270,26271,1071>",(e)); Inst1057++; } } catch(e) {}
    try {
try { if (Inst1056 <= 1000 && typeof (exception) != "undefined") {_RecordType("<26244,26253,1070>",(exception)); Inst1056++; } } catch(e) {}
      exception();
    } catch (e) {
      ;
    }
  }

try { if (Inst1058 <= 1000 && typeof (change) != "undefined") {_RecordType("<26296,26302,1076>",(change)); Inst1058++; } } catch(e) {}try { if (Inst1059 <= 1000 && typeof (offset) != "undefined") {_RecordType("<26303,26309,1076>",(offset)); Inst1059++; } } catch(e) {}
  change(offset, 2000);

  for (var i = 0; i < n - 1; i++) {
try { if (Inst1060 <= 1000 && typeof (i) != "undefined") {_RecordType("<26330,26331,1078>",(i)); Inst1060++; } } catch(e) {}try { if (Inst1061 <= 1000 && typeof (i) != "undefined") {_RecordType("<26337,26338,1078>",(i)); Inst1061++; } } catch(e) {}try { if (Inst1062 <= 1000 && typeof (n) != "undefined") {_RecordType("<26341,26342,1078>",(n)); Inst1062++; } } catch(e) {}try { if (Inst1063 <= 1000 && typeof (i) != "undefined") {_RecordType("<26348,26349,1078>",(i)); Inst1063++; } } catch(e) {}
try { if (Inst1064 <= 1000 && typeof (dests.at(i).value) != "undefined") {_RecordType("<26363,26380,1079>",(dests.at(i).value)); Inst1064++; } } catch(e) {}try { if (Inst1065 <= 1000 && typeof (dests.at) != "undefined") {_RecordType("<26363,26371,1079>",(dests.at)); Inst1065++; } } catch(e) {}try { if (Inst1066 <= 1000 && typeof (dests) != "undefined") {_RecordType("<26363,26368,1079>",(dests)); Inst1066++; } } catch(e) {}try { if (Inst1067 <= 1000 && typeof (i) != "undefined") {_RecordType("<26372,26373,1079>",(i)); Inst1067++; } } catch(e) {}try { if (Inst1068 <= 1000 && typeof (i) != "undefined") {_RecordType("<26384,26385,1079>",(i)); Inst1068++; } } catch(e) {}
    if (dests.at(i).value != i * 5 + 2000) {
try { if (Inst1069 <= 1000 && typeof (alert) != "undefined") {_RecordType("<26406,26411,1080>",(alert)); Inst1069++; } } catch(e) {}
      alert("Projection 4 failed");
    }

try { if (Inst1071 <= 1000 && typeof (e) != "undefined") {_RecordType("<26485,26486,1085>",(e)); Inst1071++; } } catch(e) {}
    try {
try { if (Inst1070 <= 1000 && typeof (exception) != "undefined") {_RecordType("<26459,26468,1084>",(exception)); Inst1070++; } } catch(e) {}
      exception();
    } catch (e) {
      ;
    }
  }
}

try { if (Inst1072 <= 1000 && typeof (change) != "undefined") {_RecordType("<26520,26526,1091>",(change)); Inst1072++; } } catch(e) {}
function change(v, newValue) {
try { if (Inst1073 <= 1000 && typeof (v) != "undefined") {_RecordType("<26527,26528,1091>",(v)); Inst1073++; } } catch(e) {}try { if (Inst1074 <= 1000 && typeof (newValue) != "undefined") {_RecordType("<26530,26538,1091>",(newValue)); Inst1074++; } } catch(e) {}
try { if (Inst1076 <= 1000 && typeof (EditConstraint) != "undefined") {_RecordType("<26559,26573,1092>",(EditConstraint)); Inst1076++; } } catch(e) {}try { if (Inst1077 <= 1000 && typeof (v) != "undefined") {_RecordType("<26574,26575,1092>",(v)); Inst1077++; } } catch(e) {}try { if (Inst1078 <= 1000 && typeof (Strength.PREFERRED) != "undefined") {_RecordType("<26577,26595,1092>",(Strength.PREFERRED)); Inst1078++; } } catch(e) {}try { if (Inst1079 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<26577,26585,1092>",(Strength)); Inst1079++; } } catch(e) {}
  var edit = new EditConstraint(v, Strength.PREFERRED);
try { if (Inst1075 <= 1000 && typeof (edit) != "undefined") {_RecordType("<26548,26552,1092>",(edit)); Inst1075++; } } catch(e) {}
try { if (Inst1081 <= 1000 && typeof (OrderedCollection) != "undefined") {_RecordType("<26616,26633,1093>",(OrderedCollection)); Inst1081++; } } catch(e) {}
  var edits = new OrderedCollection();
try { if (Inst1080 <= 1000 && typeof (edits) != "undefined") {_RecordType("<26604,26609,1093>",(edits)); Inst1080++; } } catch(e) {}
try { if (Inst1082 <= 1000 && typeof (edits.add) != "undefined") {_RecordType("<26639,26648,1094>",(edits.add)); Inst1082++; } } catch(e) {}try { if (Inst1083 <= 1000 && typeof (edits) != "undefined") {_RecordType("<26639,26644,1094>",(edits)); Inst1083++; } } catch(e) {}try { if (Inst1084 <= 1000 && typeof (edit) != "undefined") {_RecordType("<26649,26653,1094>",(edit)); Inst1084++; } } catch(e) {}
  edits.add(edit);
try { if (Inst1086 <= 1000 && typeof (planner.extractPlanFromConstraints) != "undefined") {_RecordType("<26669,26703,1095>",(planner.extractPlanFromConstraints)); Inst1086++; } } catch(e) {}try { if (Inst1087 <= 1000 && typeof (planner) != "undefined") {_RecordType("<26669,26676,1095>",(planner)); Inst1087++; } } catch(e) {}try { if (Inst1088 <= 1000 && typeof (edits) != "undefined") {_RecordType("<26704,26709,1095>",(edits)); Inst1088++; } } catch(e) {}
  var plan = planner.extractPlanFromConstraints(edits);
try { if (Inst1085 <= 1000 && typeof (plan) != "undefined") {_RecordType("<26662,26666,1095>",(plan)); Inst1085++; } } catch(e) {}

  for (var i = 0; i < 10; i++) {
try { if (Inst1089 <= 1000 && typeof (i) != "undefined") {_RecordType("<26724,26725,1097>",(i)); Inst1089++; } } catch(e) {}try { if (Inst1090 <= 1000 && typeof (i) != "undefined") {_RecordType("<26731,26732,1097>",(i)); Inst1090++; } } catch(e) {}try { if (Inst1091 <= 1000 && typeof (i) != "undefined") {_RecordType("<26739,26740,1097>",(i)); Inst1091++; } } catch(e) {}
try { if (Inst1094 <= 1000 && typeof (newValue) != "undefined") {_RecordType("<26760,26768,1098>",(newValue)); Inst1094++; } } catch(e) {}
    v.value = newValue;
try { if (Inst1092 <= 1000 && typeof (v.value) != "undefined") {_RecordType("<26750,26757,1098>",(v.value)); Inst1092++; } } catch(e) {}try { if (Inst1093 <= 1000 && typeof (v) != "undefined") {_RecordType("<26750,26751,1098>",(v)); Inst1093++; } } catch(e) {}
try { if (Inst1095 <= 1000 && typeof (plan.execute) != "undefined") {_RecordType("<26774,26786,1099>",(plan.execute)); Inst1095++; } } catch(e) {}try { if (Inst1096 <= 1000 && typeof (plan) != "undefined") {_RecordType("<26774,26778,1099>",(plan)); Inst1096++; } } catch(e) {}
    plan.execute();
  }

try { if (Inst1097 <= 1000 && typeof (edit.destroyConstraint) != "undefined") {_RecordType("<26797,26819,1102>",(edit.destroyConstraint)); Inst1097++; } } catch(e) {}try { if (Inst1098 <= 1000 && typeof (edit) != "undefined") {_RecordType("<26797,26801,1102>",(edit)); Inst1098++; } } catch(e) {}
  edit.destroyConstraint();
} // Global variable holding the current planner.


var planner = null;
try { if (Inst1099 <= 1000 && typeof (planner) != "undefined") {_RecordType("<26879,26886,1106>",(planner)); Inst1099++; } } catch(e) {}

try { if (Inst1100 <= 1000 && typeof (deltaBlue) != "undefined") {_RecordType("<26905,26914,1108>",(deltaBlue)); Inst1100++; } } catch(e) {}
function deltaBlue() {
try { if (Inst1101 <= 1000 && typeof (chainTest) != "undefined") {_RecordType("<26921,26930,1109>",(chainTest)); Inst1101++; } } catch(e) {}
  chainTest(100);
try { if (Inst1102 <= 1000 && typeof (projectionTest) != "undefined") {_RecordType("<26939,26953,1110>",(projectionTest)); Inst1102++; } } catch(e) {}
  projectionTest(100);
}

{
try { if (Inst1104 <= 1000 && typeof (Date.now) != "undefined") {_RecordType("<26979,26987,1114>",(Date.now)); Inst1104++; } } catch(e) {}try { if (Inst1105 <= 1000 && typeof (Date) != "undefined") {_RecordType("<26979,26983,1114>",(Date)); Inst1105++; } } catch(e) {}
  let start = Date.now();
try { if (Inst1103 <= 1000 && typeof (start) != "undefined") {_RecordType("<26971,26976,1114>",(start)); Inst1103++; } } catch(e) {}

  for (let i = 0; i < 50; ++i) {
try { if (Inst1106 <= 1000 && typeof (i) != "undefined") {_RecordType("<27003,27004,1116>",(i)); Inst1106++; } } catch(e) {}try { if (Inst1107 <= 1000 && typeof (i) != "undefined") {_RecordType("<27010,27011,1116>",(i)); Inst1107++; } } catch(e) {}try { if (Inst1108 <= 1000 && typeof (i) != "undefined") {_RecordType("<27020,27021,1116>",(i)); Inst1108++; } } catch(e) {}
try { if (Inst1109 <= 1000 && typeof (deltaBlue) != "undefined") {_RecordType("<27029,27038,1117>",(deltaBlue)); Inst1109++; } } catch(e) {}
    deltaBlue();
  }
}

