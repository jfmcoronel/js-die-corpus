var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (sumOfArithSeries) != "undefined") {_RecordType("<9,25,1>",(sumOfArithSeries)); Inst0++; } } catch(e) {}
function sumOfArithSeries(limit) {
try { if (Inst1 <= 1000 && typeof (limit) != "undefined") {_RecordType("<26,31,1>",(limit)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (limit) != "undefined") {_RecordType("<44,49,2>",(limit)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (limit) != "undefined") {_RecordType("<53,58,2>",(limit)); Inst3++; } } catch(e) {}
  return limit * (limit + 1) / 2;
}

var n = 10000000;
try { if (Inst4 <= 1000 && typeof (n) != "undefined") {_RecordType("<76,77,5>",(n)); Inst4++; } } catch(e) {}

try { if (Inst5 <= 1000 && typeof (verify) != "undefined") {_RecordType("<100,106,7>",(verify)); Inst5++; } } catch(e) {}
function verify(q, i) {
try { if (Inst6 <= 1000 && typeof (q) != "undefined") {_RecordType("<107,108,7>",(q)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<110,111,7>",(i)); Inst7++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (q.f) != "undefined") {_RecordType("<121,124,8>",(q.f)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (q) != "undefined") {_RecordType("<121,122,8>",(q)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (q.g) != "undefined") {_RecordType("<128,131,8>",(q.g)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (q) != "undefined") {_RecordType("<128,129,8>",(q)); Inst11++; } } catch(e) {}
  if (q.f == q.g) {
    throw "Error: q.f == q.g";
  }

try { if (Inst12 <= 1000 && typeof (q.f.f) != "undefined") {_RecordType("<177,182,12>",(q.f.f)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (q.f) != "undefined") {_RecordType("<177,180,12>",(q.f)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (q) != "undefined") {_RecordType("<177,178,12>",(q)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (q.g.f) != "undefined") {_RecordType("<186,191,12>",(q.g.f)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (q.g) != "undefined") {_RecordType("<186,189,12>",(q.g)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (q) != "undefined") {_RecordType("<186,187,12>",(q)); Inst17++; } } catch(e) {}
  if (q.f.f != q.g.f) {
    throw "Error: q.f.f != q.g.f";
  }

try { if (Inst18 <= 1000 && typeof (q.f.f.f) != "undefined") {_RecordType("<241,248,16>",(q.f.f.f)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (q.f.f) != "undefined") {_RecordType("<241,246,16>",(q.f.f)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (q.f) != "undefined") {_RecordType("<241,244,16>",(q.f)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (q) != "undefined") {_RecordType("<241,242,16>",(q)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<252,253,16>",(i)); Inst22++; } } catch(e) {}
  if (q.f.f.f != i) {
    throw "Error: q.f.f.f != i";
  }
}

try { if (Inst23 <= 1000 && typeof (foo) != "undefined") {_RecordType("<306,309,21>",(foo)); Inst23++; } } catch(e) {}
function foo() {
  var result = 0;
try { if (Inst24 <= 1000 && typeof (result) != "undefined") {_RecordType("<320,326,22>",(result)); Inst24++; } } catch(e) {}

  for (var i = 0; i < n; ++i) {
try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<344,345,24>",(i)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (i) != "undefined") {_RecordType("<351,352,24>",(i)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (n) != "undefined") {_RecordType("<355,356,24>",(n)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (i) != "undefined") {_RecordType("<360,361,24>",(i)); Inst28++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (i) != "undefined") {_RecordType("<391,392,26>",(i)); Inst30++; } } catch(e) {}
    var leaf = {
      f: i
    };
try { if (Inst29 <= 1000 && typeof (leaf) != "undefined") {_RecordType("<373,377,25>",(leaf)); Inst29++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (leaf) != "undefined") {_RecordType("<423,427,29>",(leaf)); Inst32++; } } catch(e) {}
    var o = {
      f: leaf
    };
try { if (Inst31 <= 1000 && typeof (o) != "undefined") {_RecordType("<408,409,28>",(o)); Inst31++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof (leaf) != "undefined") {_RecordType("<458,462,32>",(leaf)); Inst34++; } } catch(e) {}
    var p = {
      f: leaf
    };
try { if (Inst33 <= 1000 && typeof (p) != "undefined") {_RecordType("<443,444,31>",(p)); Inst33++; } } catch(e) {}
try { if (Inst36 <= 1000 && typeof (o) != "undefined") {_RecordType("<493,494,35>",(o)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (p) != "undefined") {_RecordType("<505,506,36>",(p)); Inst37++; } } catch(e) {}
    var q = {
      f: o,
      g: p
    };
try { if (Inst35 <= 1000 && typeof (q) != "undefined") {_RecordType("<478,479,34>",(q)); Inst35++; } } catch(e) {}
try { if (Inst39 <= 1000 && typeof (q.f.f.f) != "undefined") {_RecordType("<528,535,38>",(q.f.f.f)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (q.f.f) != "undefined") {_RecordType("<528,533,38>",(q.f.f)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (q.f) != "undefined") {_RecordType("<528,531,38>",(q.f)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (q) != "undefined") {_RecordType("<528,529,38>",(q)); Inst42++; } } catch(e) {}
    result += q.f.f.f;
try { if (Inst38 <= 1000 && typeof (result) != "undefined") {_RecordType("<518,524,38>",(result)); Inst38++; } } catch(e) {}

try { if (Inst43 <= 1000 && typeof (i) != "undefined") {_RecordType("<548,549,40>",(i)); Inst43++; } } catch(e) {}
    if (!(i % 100)) {
try { if (Inst44 <= 1000 && typeof (verify) != "undefined") {_RecordType("<566,572,41>",(verify)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (q) != "undefined") {_RecordType("<573,574,41>",(q)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (i) != "undefined") {_RecordType("<576,577,41>",(i)); Inst46++; } } catch(e) {}
      verify(q, i);
    }
  }

try { if (Inst47 <= 1000 && typeof (result) != "undefined") {_RecordType("<600,606,45>",(result)); Inst47++; } } catch(e) {}
  return result;
}

try { if (Inst48 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<611,619,48>",(noInline)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (foo) != "undefined") {_RecordType("<620,623,48>",(foo)); Inst49++; } } catch(e) {}
noInline(foo);
try { if (Inst50 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<626,634,49>",(noInline)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (verify) != "undefined") {_RecordType("<635,641,49>",(verify)); Inst51++; } } catch(e) {}
noInline(verify);
try { if (Inst53 <= 1000 && typeof (foo) != "undefined") {_RecordType("<657,660,50>",(foo)); Inst53++; } } catch(e) {}
var result = foo();
try { if (Inst52 <= 1000 && typeof (result) != "undefined") {_RecordType("<648,654,50>",(result)); Inst52++; } } catch(e) {}

try { if (Inst54 <= 1000 && typeof (result) != "undefined") {_RecordType("<669,675,52>",(result)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (sumOfArithSeries) != "undefined") {_RecordType("<679,695,52>",(sumOfArithSeries)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (n) != "undefined") {_RecordType("<696,697,52>",(n)); Inst56++; } } catch(e) {}
if (result != sumOfArithSeries(n - 1)) {
try { if (Inst57 <= 1000 && typeof (result) != "undefined") {_RecordType("<738,744,53>",(result)); Inst57++; } } catch(e) {}
  throw "Error: bad result: " + result;
}

