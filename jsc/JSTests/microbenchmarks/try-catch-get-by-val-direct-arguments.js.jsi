var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (foo) != "undefined") {_RecordType("<9,12,1>",(foo)); Inst0++; } } catch(e) {}
function foo() {
try { if (Inst3 <= 1000 && typeof (e) != "undefined") {_RecordType("<61,62,4>",(e)); Inst3++; } } catch(e) {}
  try {
try { if (Inst1 <= 1000 && typeof (arguments[0]) != "undefined") {_RecordType("<36,48,3>",(arguments[0])); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<36,45,3>",(arguments)); Inst2++; } } catch(e) {}
    return arguments[0];
  } catch (e) {
    return 42;
  }
}

var n = 100000;
try { if (Inst4 <= 1000 && typeof (n) != "undefined") {_RecordType("<92,93,9>",(n)); Inst4++; } } catch(e) {}
var result = 0;
try { if (Inst5 <= 1000 && typeof (result) != "undefined") {_RecordType("<108,114,10>",(result)); Inst5++; } } catch(e) {}

for (var i = 0; i < n; ++i) {
try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<130,131,12>",(i)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<137,138,12>",(i)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (n) != "undefined") {_RecordType("<141,142,12>",(n)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<146,147,12>",(i)); Inst9++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (foo) != "undefined") {_RecordType("<163,166,13>",(foo)); Inst11++; } } catch(e) {}
  result += foo(24);
try { if (Inst10 <= 1000 && typeof (result) != "undefined") {_RecordType("<153,159,13>",(result)); Inst10++; } } catch(e) {}
}

try { if (Inst12 <= 1000 && typeof (result) != "undefined") {_RecordType("<179,185,16>",(result)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (n) != "undefined") {_RecordType("<189,190,16>",(n)); Inst13++; } } catch(e) {}
if (result != n * 24) {
try { if (Inst14 <= 1000 && typeof (result) != "undefined") {_RecordType("<231,237,17>",(result)); Inst14++; } } catch(e) {}
  throw "Error: bad result: " + result;
}

try { if (Inst16 <= 1000 && typeof (foo) != "undefined") {_RecordType("<251,254,20>",(foo)); Inst16++; } } catch(e) {}
result = foo();
try { if (Inst15 <= 1000 && typeof (result) != "undefined") {_RecordType("<242,248,20>",(result)); Inst15++; } } catch(e) {}

try { if (Inst17 <= 1000 && typeof (result) != "undefined") {_RecordType("<263,269,22>",(result)); Inst17++; } } catch(e) {}
if (result !== void 0) {
try { if (Inst18 <= 1000 && typeof (result) != "undefined") {_RecordType("<323,329,23>",(result)); Inst18++; } } catch(e) {}
  throw "Error: bad result at end: " + result;
}

