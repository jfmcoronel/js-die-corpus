var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst1 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<8,14,1>",(Symbol)); Inst1++; } } catch(e) {}
var f = Symbol("Cocoa");
try { if (Inst0 <= 1000 && typeof (f) != "undefined") {_RecordType("<4,5,1>",(f)); Inst0++; } } catch(e) {}

try { if (Inst2 <= 1000 && typeof (foo) != "undefined") {_RecordType("<35,38,3>",(foo)); Inst2++; } } catch(e) {}
function foo(o) {
try { if (Inst3 <= 1000 && typeof (o) != "undefined") {_RecordType("<39,40,3>",(o)); Inst3++; } } catch(e) {}
  o[f] = 42;
try { if (Inst4 <= 1000 && typeof (o[f]) != "undefined") {_RecordType("<46,50,4>",(o[f])); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (o) != "undefined") {_RecordType("<46,47,4>",(o)); Inst5++; } } catch(e) {}
}

try { if (Inst6 <= 1000 && typeof (bar) != "undefined") {_RecordType("<69,72,7>",(bar)); Inst6++; } } catch(e) {}
function bar(o) {
try { if (Inst7 <= 1000 && typeof (o) != "undefined") {_RecordType("<73,74,7>",(o)); Inst7++; } } catch(e) {}
  o[f] = 84;
try { if (Inst8 <= 1000 && typeof (o[f]) != "undefined") {_RecordType("<80,84,8>",(o[f])); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (o) != "undefined") {_RecordType("<80,81,8>",(o)); Inst9++; } } catch(e) {}
}

for (var i = 0; i < 1000000; ++i) {
try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<103,104,11>",(i)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<110,111,11>",(i)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<125,126,11>",(i)); Inst12++; } } catch(e) {}
  var o = {};
try { if (Inst13 <= 1000 && typeof (o) != "undefined") {_RecordType("<136,137,12>",(o)); Inst13++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (foo) != "undefined") {_RecordType("<146,149,13>",(foo)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (o) != "undefined") {_RecordType("<150,151,13>",(o)); Inst15++; } } catch(e) {}
  foo(o);

try { if (Inst16 <= 1000 && typeof (o[f]) != "undefined") {_RecordType("<161,165,15>",(o[f])); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (o) != "undefined") {_RecordType("<161,162,15>",(o)); Inst17++; } } catch(e) {}
  if (o[f] != 42) {
try { if (Inst18 <= 1000 && typeof (o[f]) != "undefined") {_RecordType("<214,218,16>",(o[f])); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (o) != "undefined") {_RecordType("<214,215,16>",(o)); Inst19++; } } catch(e) {}
    throw "Error: expected 42, got " + o[f];
  }

try { if (Inst20 <= 1000 && typeof (bar) != "undefined") {_RecordType("<227,230,19>",(bar)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (o) != "undefined") {_RecordType("<231,232,19>",(o)); Inst21++; } } catch(e) {}
  bar(o);

try { if (Inst22 <= 1000 && typeof (o[f]) != "undefined") {_RecordType("<242,246,21>",(o[f])); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (o) != "undefined") {_RecordType("<242,243,21>",(o)); Inst23++; } } catch(e) {}
  if (o[f] != 84) {
try { if (Inst24 <= 1000 && typeof (o[f]) != "undefined") {_RecordType("<295,299,22>",(o[f])); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (o) != "undefined") {_RecordType("<295,296,22>",(o)); Inst25++; } } catch(e) {}
    throw "Error: expected 84, got " + o[f];
  }
}

