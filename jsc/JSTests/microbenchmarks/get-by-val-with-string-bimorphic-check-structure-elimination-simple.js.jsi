var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
(function () {
  var a = 'a',
      l = 'l';
try { if (Inst0 <= 1000 && typeof (a) != "undefined") {_RecordType("<21,22,2>",(a)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (l) != "undefined") {_RecordType("<36,37,3>",(l)); Inst1++; } } catch(e) {}
  var o = {
    [a]: 1
  };
try { if (Inst2 <= 1000 && typeof (o) != "undefined") {_RecordType("<51,52,4>",(o)); Inst2++; } } catch(e) {}
  var p = {
    [a]: 2,
    [l]: 13
  };
try { if (Inst3 <= 1000 && typeof (p) != "undefined") {_RecordType("<79,80,7>",(p)); Inst3++; } } catch(e) {}
  var result = 0;
try { if (Inst4 <= 1000 && typeof (result) != "undefined") {_RecordType("<120,126,11>",(result)); Inst4++; } } catch(e) {}

  for (var i = 0; i < 1000000; ++i) {
try { if (Inst5 <= 1000 && typeof (i) != "undefined") {_RecordType("<144,145,13>",(i)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<151,152,13>",(i)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<166,167,13>",(i)); Inst7++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (o[a]) != "undefined") {_RecordType("<185,189,14>",(o[a])); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (o) != "undefined") {_RecordType("<185,186,14>",(o)); Inst10++; } } catch(e) {}
    result ^= o[a];
try { if (Inst8 <= 1000 && typeof (result) != "undefined") {_RecordType("<175,181,14>",(result)); Inst8++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (o) != "undefined") {_RecordType("<205,206,15>",(o)); Inst12++; } } catch(e) {}
    var tmp = o;
try { if (Inst11 <= 1000 && typeof (tmp) != "undefined") {_RecordType("<199,202,15>",(tmp)); Inst11++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (p) != "undefined") {_RecordType("<216,217,16>",(p)); Inst14++; } } catch(e) {}
    o = p;
try { if (Inst13 <= 1000 && typeof (o) != "undefined") {_RecordType("<212,213,16>",(o)); Inst13++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (tmp) != "undefined") {_RecordType("<227,230,17>",(tmp)); Inst16++; } } catch(e) {}
    p = tmp;
try { if (Inst15 <= 1000 && typeof (p) != "undefined") {_RecordType("<223,224,17>",(p)); Inst15++; } } catch(e) {}
  }

try { if (Inst17 <= 1000 && typeof (result) != "undefined") {_RecordType("<243,249,20>",(result)); Inst17++; } } catch(e) {}
  if (result != 0) {
try { if (Inst18 <= 1000 && typeof (result) != "undefined") {_RecordType("<292,298,21>",(result)); Inst18++; } } catch(e) {}
    throw "Error: bad result: " + result;
  }
})();

