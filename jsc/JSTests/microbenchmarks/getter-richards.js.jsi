var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
var Inst102 = 0;
var Inst103 = 0;
var Inst104 = 0;
var Inst105 = 0;
var Inst106 = 0;
var Inst107 = 0;
var Inst108 = 0;
var Inst109 = 0;
var Inst110 = 0;
var Inst111 = 0;
var Inst112 = 0;
var Inst113 = 0;
var Inst114 = 0;
var Inst115 = 0;
var Inst116 = 0;
var Inst117 = 0;
var Inst118 = 0;
var Inst119 = 0;
var Inst120 = 0;
var Inst121 = 0;
var Inst122 = 0;
var Inst123 = 0;
var Inst124 = 0;
var Inst125 = 0;
var Inst126 = 0;
var Inst127 = 0;
var Inst128 = 0;
var Inst129 = 0;
var Inst130 = 0;
var Inst131 = 0;
var Inst132 = 0;
var Inst133 = 0;
var Inst134 = 0;
var Inst135 = 0;
var Inst136 = 0;
var Inst137 = 0;
var Inst138 = 0;
var Inst139 = 0;
var Inst140 = 0;
var Inst141 = 0;
var Inst142 = 0;
var Inst143 = 0;
var Inst144 = 0;
var Inst145 = 0;
var Inst146 = 0;
var Inst147 = 0;
var Inst148 = 0;
var Inst149 = 0;
var Inst150 = 0;
var Inst151 = 0;
var Inst152 = 0;
var Inst153 = 0;
var Inst154 = 0;
var Inst155 = 0;
var Inst156 = 0;
var Inst157 = 0;
var Inst158 = 0;
var Inst159 = 0;
var Inst160 = 0;
var Inst161 = 0;
var Inst162 = 0;
var Inst163 = 0;
var Inst164 = 0;
var Inst165 = 0;
var Inst166 = 0;
var Inst167 = 0;
var Inst168 = 0;
var Inst169 = 0;
var Inst170 = 0;
var Inst171 = 0;
var Inst172 = 0;
var Inst173 = 0;
var Inst174 = 0;
var Inst175 = 0;
var Inst176 = 0;
var Inst177 = 0;
var Inst178 = 0;
var Inst179 = 0;
var Inst180 = 0;
var Inst181 = 0;
var Inst182 = 0;
var Inst183 = 0;
var Inst184 = 0;
var Inst185 = 0;
var Inst186 = 0;
var Inst187 = 0;
var Inst188 = 0;
var Inst189 = 0;
var Inst190 = 0;
var Inst191 = 0;
var Inst192 = 0;
var Inst193 = 0;
var Inst194 = 0;
var Inst195 = 0;
var Inst196 = 0;
var Inst197 = 0;
var Inst198 = 0;
var Inst199 = 0;
var Inst200 = 0;
var Inst201 = 0;
var Inst202 = 0;
var Inst203 = 0;
var Inst204 = 0;
var Inst205 = 0;
var Inst206 = 0;
var Inst207 = 0;
var Inst208 = 0;
var Inst209 = 0;
var Inst210 = 0;
var Inst211 = 0;
var Inst212 = 0;
var Inst213 = 0;
var Inst214 = 0;
var Inst215 = 0;
var Inst216 = 0;
var Inst217 = 0;
var Inst218 = 0;
var Inst219 = 0;
var Inst220 = 0;
var Inst221 = 0;
var Inst222 = 0;
var Inst223 = 0;
var Inst224 = 0;
var Inst225 = 0;
var Inst226 = 0;
var Inst227 = 0;
var Inst228 = 0;
var Inst229 = 0;
var Inst230 = 0;
var Inst231 = 0;
var Inst232 = 0;
var Inst233 = 0;
var Inst234 = 0;
var Inst235 = 0;
var Inst236 = 0;
var Inst237 = 0;
var Inst238 = 0;
var Inst239 = 0;
var Inst240 = 0;
var Inst241 = 0;
var Inst242 = 0;
var Inst243 = 0;
var Inst244 = 0;
var Inst245 = 0;
var Inst246 = 0;
var Inst247 = 0;
var Inst248 = 0;
var Inst249 = 0;
var Inst250 = 0;
var Inst251 = 0;
var Inst252 = 0;
var Inst253 = 0;
var Inst254 = 0;
var Inst255 = 0;
var Inst256 = 0;
var Inst257 = 0;
var Inst258 = 0;
var Inst259 = 0;
var Inst260 = 0;
var Inst261 = 0;
var Inst262 = 0;
var Inst263 = 0;
var Inst264 = 0;
var Inst265 = 0;
var Inst266 = 0;
var Inst267 = 0;
var Inst268 = 0;
var Inst269 = 0;
var Inst270 = 0;
var Inst271 = 0;
var Inst272 = 0;
var Inst273 = 0;
var Inst274 = 0;
var Inst275 = 0;
var Inst276 = 0;
var Inst277 = 0;
var Inst278 = 0;
var Inst279 = 0;
var Inst280 = 0;
var Inst281 = 0;
var Inst282 = 0;
var Inst283 = 0;
var Inst284 = 0;
var Inst285 = 0;
var Inst286 = 0;
var Inst287 = 0;
var Inst288 = 0;
var Inst289 = 0;
var Inst290 = 0;
var Inst291 = 0;
var Inst292 = 0;
var Inst293 = 0;
var Inst294 = 0;
var Inst295 = 0;
var Inst296 = 0;
var Inst297 = 0;
var Inst298 = 0;
var Inst299 = 0;
var Inst300 = 0;
var Inst301 = 0;
var Inst302 = 0;
var Inst303 = 0;
var Inst304 = 0;
var Inst305 = 0;
var Inst306 = 0;
var Inst307 = 0;
var Inst308 = 0;
var Inst309 = 0;
var Inst310 = 0;
var Inst311 = 0;
var Inst312 = 0;
var Inst313 = 0;
var Inst314 = 0;
var Inst315 = 0;
var Inst316 = 0;
var Inst317 = 0;
var Inst318 = 0;
var Inst319 = 0;
var Inst320 = 0;
var Inst321 = 0;
var Inst322 = 0;
var Inst323 = 0;
var Inst324 = 0;
var Inst325 = 0;
var Inst326 = 0;
var Inst327 = 0;
var Inst328 = 0;
var Inst329 = 0;
var Inst330 = 0;
var Inst331 = 0;
var Inst332 = 0;
var Inst333 = 0;
var Inst334 = 0;
var Inst335 = 0;
var Inst336 = 0;
var Inst337 = 0;
var Inst338 = 0;
var Inst339 = 0;
var Inst340 = 0;
var Inst341 = 0;
var Inst342 = 0;
var Inst343 = 0;
var Inst344 = 0;
var Inst345 = 0;
var Inst346 = 0;
var Inst347 = 0;
var Inst348 = 0;
var Inst349 = 0;
var Inst350 = 0;
var Inst351 = 0;
var Inst352 = 0;
var Inst353 = 0;
var Inst354 = 0;
var Inst355 = 0;
var Inst356 = 0;
var Inst357 = 0;
var Inst358 = 0;
var Inst359 = 0;
var Inst360 = 0;
var Inst361 = 0;
var Inst362 = 0;
var Inst363 = 0;
var Inst364 = 0;
var Inst365 = 0;
var Inst366 = 0;
var Inst367 = 0;
var Inst368 = 0;
var Inst369 = 0;
var Inst370 = 0;
var Inst371 = 0;
var Inst372 = 0;
var Inst373 = 0;
var Inst374 = 0;
var Inst375 = 0;
var Inst376 = 0;
var Inst377 = 0;
var Inst378 = 0;
var Inst379 = 0;
var Inst380 = 0;
var Inst381 = 0;
var Inst382 = 0;
var Inst383 = 0;
var Inst384 = 0;
var Inst385 = 0;
var Inst386 = 0;
var Inst387 = 0;
var Inst388 = 0;
var Inst389 = 0;
var Inst390 = 0;
var Inst391 = 0;
var Inst392 = 0;
var Inst393 = 0;
var Inst394 = 0;
var Inst395 = 0;
var Inst396 = 0;
var Inst397 = 0;
var Inst398 = 0;
var Inst399 = 0;
var Inst400 = 0;
var Inst401 = 0;
var Inst402 = 0;
var Inst403 = 0;
var Inst404 = 0;
var Inst405 = 0;
var Inst406 = 0;
var Inst407 = 0;
var Inst408 = 0;
var Inst409 = 0;
var Inst410 = 0;
var Inst411 = 0;
var Inst412 = 0;
var Inst413 = 0;
var Inst414 = 0;
var Inst415 = 0;
var Inst416 = 0;
var Inst417 = 0;
var Inst418 = 0;
var Inst419 = 0;
var Inst420 = 0;
var Inst421 = 0;
var Inst422 = 0;
var Inst423 = 0;
var Inst424 = 0;
var Inst425 = 0;
var Inst426 = 0;
var Inst427 = 0;
var Inst428 = 0;
var Inst429 = 0;
var Inst430 = 0;
var Inst431 = 0;
var Inst432 = 0;
var Inst433 = 0;
var Inst434 = 0;
var Inst435 = 0;
var Inst436 = 0;
var Inst437 = 0;
var Inst438 = 0;
var Inst439 = 0;
var Inst440 = 0;
var Inst441 = 0;
var Inst442 = 0;
var Inst443 = 0;
var Inst444 = 0;
var Inst445 = 0;
var Inst446 = 0;
var Inst447 = 0;
var Inst448 = 0;
var Inst449 = 0;
var Inst450 = 0;
var Inst451 = 0;
var Inst452 = 0;
var Inst453 = 0;
var Inst454 = 0;
var Inst455 = 0;
var Inst456 = 0;
var Inst457 = 0;
var Inst458 = 0;
var Inst459 = 0;
var Inst460 = 0;
var Inst461 = 0;
var Inst462 = 0;
var Inst463 = 0;
var Inst464 = 0;
var Inst465 = 0;
var Inst466 = 0;
var Inst467 = 0;
var Inst468 = 0;
var Inst469 = 0;
var Inst470 = 0;
var Inst471 = 0;
var Inst472 = 0;
var Inst473 = 0;
var Inst474 = 0;
var Inst475 = 0;
var Inst476 = 0;
var Inst477 = 0;
var Inst478 = 0;
var Inst479 = 0;
var Inst480 = 0;
var Inst481 = 0;
var Inst482 = 0;
var Inst483 = 0;
var Inst484 = 0;
var Inst485 = 0;
var Inst486 = 0;
var Inst487 = 0;
var Inst488 = 0;
var Inst489 = 0;
var Inst490 = 0;
var Inst491 = 0;
var Inst492 = 0;
var Inst493 = 0;
var Inst494 = 0;
var Inst495 = 0;
var Inst496 = 0;
var Inst497 = 0;
var Inst498 = 0;
var Inst499 = 0;
var Inst500 = 0;
var Inst501 = 0;
var Inst502 = 0;
var Inst503 = 0;
var Inst504 = 0;
var Inst505 = 0;
var Inst506 = 0;
var Inst507 = 0;
var Inst508 = 0;
var Inst509 = 0;
var Inst510 = 0;
var Inst511 = 0;
var Inst512 = 0;
var Inst513 = 0;
var Inst514 = 0;
var Inst515 = 0;
var Inst516 = 0;
var Inst517 = 0;
var Inst518 = 0;
var Inst519 = 0;
var Inst520 = 0;
var Inst521 = 0;
var Inst522 = 0;
var Inst523 = 0;
var Inst524 = 0;
var Inst525 = 0;
var Inst526 = 0;
var Inst527 = 0;
var Inst528 = 0;
var Inst529 = 0;
var Inst530 = 0;
var Inst531 = 0;
var Inst532 = 0;
var Inst533 = 0;
var Inst534 = 0;
var Inst535 = 0;
var Inst536 = 0;
var Inst537 = 0;
var Inst538 = 0;
var Inst539 = 0;
var Inst540 = 0;
var Inst541 = 0;
var Inst542 = 0;
var Inst543 = 0;
var Inst544 = 0;
var Inst545 = 0;
var Inst546 = 0;
var Inst547 = 0;
var Inst548 = 0;
var Inst549 = 0;
var Inst550 = 0;
var Inst551 = 0;
var Inst552 = 0;
var Inst553 = 0;
var Inst554 = 0;
var Inst555 = 0;
var Inst556 = 0;
var Inst557 = 0;
var Inst558 = 0;
var Inst559 = 0;
var Inst560 = 0;
var Inst561 = 0;
var Inst562 = 0;
var Inst563 = 0;
var Inst564 = 0;
var Inst565 = 0;
var Inst566 = 0;
var Inst567 = 0;
var Inst568 = 0;
var Inst569 = 0;
var Inst570 = 0;
var Inst571 = 0;
var Inst572 = 0;
var Inst573 = 0;
var Inst574 = 0;
var Inst575 = 0;
var Inst576 = 0;
var Inst577 = 0;
var Inst578 = 0;
var Inst579 = 0;
var Inst580 = 0;
var Inst581 = 0;
var Inst582 = 0;
var Inst583 = 0;
var Inst584 = 0;
var Inst585 = 0;
var Inst586 = 0;
var Inst587 = 0;
var Inst588 = 0;
var Inst589 = 0;
var Inst590 = 0;
var Inst591 = 0;
var Inst592 = 0;
var Inst593 = 0;
var Inst594 = 0;
var Inst595 = 0;
var Inst596 = 0;
var Inst597 = 0;
var Inst598 = 0;
var Inst599 = 0;
var Inst600 = 0;
var Inst601 = 0;
var Inst602 = 0;
var Inst603 = 0;
var Inst604 = 0;
var Inst605 = 0;
var Inst606 = 0;
var Inst607 = 0;
var Inst608 = 0;
var Inst609 = 0;
var Inst610 = 0;
var Inst611 = 0;
var Inst612 = 0;
var Inst613 = 0;
var Inst614 = 0;
var Inst615 = 0;
var Inst616 = 0;
var Inst617 = 0;
var Inst618 = 0;
var Inst619 = 0;
var Inst620 = 0;
var Inst621 = 0;
var Inst622 = 0;
var Inst623 = 0;
var Inst624 = 0;
var Inst625 = 0;
var Inst626 = 0;
var Inst627 = 0;
var Inst628 = 0;
var Inst629 = 0;
var Inst630 = 0;
var Inst631 = 0;
var Inst632 = 0;
var Inst633 = 0;
var Inst634 = 0;
var Inst635 = 0;
var Inst636 = 0;
var Inst637 = 0;
var Inst638 = 0;
var Inst639 = 0;
var Inst640 = 0;
var Inst641 = 0;
var Inst642 = 0;
var Inst643 = 0;
var Inst644 = 0;
var Inst645 = 0;
var Inst646 = 0;
var Inst647 = 0;
var Inst648 = 0;
var Inst649 = 0;
var Inst650 = 0;
var Inst651 = 0;
var Inst652 = 0;
var Inst653 = 0;
var Inst654 = 0;
var Inst655 = 0;
var Inst656 = 0;
var Inst657 = 0;
var Inst658 = 0;
var Inst659 = 0;
var Inst660 = 0;
var Inst661 = 0;
var Inst662 = 0;
var Inst663 = 0;
var Inst664 = 0;
var Inst665 = 0;
var Inst666 = 0;
var Inst667 = 0;
var Inst668 = 0;
var Inst669 = 0;
var Inst670 = 0;
var Inst671 = 0;
var Inst672 = 0;
var Inst673 = 0;
var Inst674 = 0;
var Inst675 = 0;
var Inst676 = 0;
var Inst677 = 0;
var Inst678 = 0;
var Inst679 = 0;
var Inst680 = 0;
var Inst681 = 0;
var Inst682 = 0;
var Inst683 = 0;
var Inst684 = 0;
var Inst685 = 0;
var Inst686 = 0;
var Inst687 = 0;
var Inst688 = 0;
var Inst689 = 0;
var Inst690 = 0;
var Inst691 = 0;
var Inst692 = 0;
var Inst693 = 0;
var Inst694 = 0;
var Inst695 = 0;
var Inst696 = 0;
var Inst697 = 0;
var Inst698 = 0;
var Inst699 = 0;
var Inst700 = 0;
var Inst701 = 0;
var Inst702 = 0;
var Inst703 = 0;
var Inst704 = 0;
var Inst705 = 0;
var Inst706 = 0;
var Inst707 = 0;
var Inst708 = 0;
var Inst709 = 0;
var Inst710 = 0;
var Inst711 = 0;
var Inst712 = 0;
var Inst713 = 0;
var Inst714 = 0;
var Inst715 = 0;
var Inst716 = 0;
var Inst717 = 0;
var Inst718 = 0;
var Inst719 = 0;
var Inst720 = 0;
var Inst721 = 0;
var Inst722 = 0;
var Inst723 = 0;
var Inst724 = 0;
var Inst725 = 0;
var Inst726 = 0;
var Inst727 = 0;
var Inst728 = 0;
var Inst729 = 0;
var Inst730 = 0;
var Inst731 = 0;
var Inst732 = 0;
var Inst733 = 0;
var Inst734 = 0;
var Inst735 = 0;
var Inst736 = 0;
var Inst737 = 0;
var Inst738 = 0;
var Inst739 = 0;
var Inst740 = 0;
var Inst741 = 0;
var Inst742 = 0;
var Inst743 = 0;
var Inst744 = 0;
var Inst745 = 0;
var Inst746 = 0;
var Inst747 = 0;
var Inst748 = 0;
var Inst749 = 0;
var Inst750 = 0;
var Inst751 = 0;
var Inst752 = 0;
var Inst753 = 0;
var Inst754 = 0;
var Inst755 = 0;
var Inst756 = 0;
var Inst757 = 0;
var Inst758 = 0;
var Inst759 = 0;
var Inst760 = 0;
var Inst761 = 0;
var Inst762 = 0;
var Inst763 = 0;
var Inst764 = 0;
var Inst765 = 0;
var Inst766 = 0;
var Inst767 = 0;
var Inst768 = 0;
var Inst769 = 0;
var Inst770 = 0;
var Inst771 = 0;
var Inst772 = 0;
var Inst773 = 0;
var Inst774 = 0;
var Inst775 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//@ defaultQuickRun
// Copyright 2006-2008 the V8 project authors. All rights reserved.
// Copyright 2014 Apple Inc.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// This is a JavaScript implementation of the Richards
// benchmark from:
//
//    http://www.cl.cam.ac.uk/~mr10/Bench.html
//
// The benchmark was originally implemented in BCPL by
// Martin Richards. It was then ported to JavaScript by the
// V8 project authors, and then subsequently it was modified
// to use getters and setters by WebKit authors.

/**
 * The Richards benchmark simulates the task dispatcher of an
 * operating system.
 **/
try { if (Inst0 <= 1000 && typeof (runRichards) != "undefined") {_RecordType("<2105,2116,43>",(runRichards)); Inst0++; } } catch(e) {}
function runRichards() {
try { if (Inst2 <= 1000 && typeof (Scheduler) != "undefined") {_RecordType("<2143,2152,44>",(Scheduler)); Inst2++; } } catch(e) {}
  var scheduler = new Scheduler();
try { if (Inst1 <= 1000 && typeof (scheduler) != "undefined") {_RecordType("<2127,2136,44>",(scheduler)); Inst1++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (scheduler.addIdleTask) != "undefined") {_RecordType("<2158,2179,45>",(scheduler.addIdleTask)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (scheduler) != "undefined") {_RecordType("<2158,2167,45>",(scheduler)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (ID_IDLE) != "undefined") {_RecordType("<2180,2187,45>",(ID_IDLE)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (COUNT) != "undefined") {_RecordType("<2198,2203,45>",(COUNT)); Inst6++; } } catch(e) {}
  scheduler.addIdleTask(ID_IDLE, 0, null, COUNT);
try { if (Inst8 <= 1000 && typeof (Packet) != "undefined") {_RecordType("<2224,2230,46>",(Packet)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (ID_WORKER) != "undefined") {_RecordType("<2237,2246,46>",(ID_WORKER)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (KIND_WORK) != "undefined") {_RecordType("<2248,2257,46>",(KIND_WORK)); Inst10++; } } catch(e) {}
  var queue = new Packet(null, ID_WORKER, KIND_WORK);
try { if (Inst7 <= 1000 && typeof (queue) != "undefined") {_RecordType("<2212,2217,46>",(queue)); Inst7++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (Packet) != "undefined") {_RecordType("<2274,2280,47>",(Packet)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (queue) != "undefined") {_RecordType("<2281,2286,47>",(queue)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (ID_WORKER) != "undefined") {_RecordType("<2288,2297,47>",(ID_WORKER)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (KIND_WORK) != "undefined") {_RecordType("<2299,2308,47>",(KIND_WORK)); Inst15++; } } catch(e) {}
  queue = new Packet(queue, ID_WORKER, KIND_WORK);
try { if (Inst11 <= 1000 && typeof (queue) != "undefined") {_RecordType("<2262,2267,47>",(queue)); Inst11++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (scheduler.addWorkerTask) != "undefined") {_RecordType("<2313,2336,48>",(scheduler.addWorkerTask)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (scheduler) != "undefined") {_RecordType("<2313,2322,48>",(scheduler)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (ID_WORKER) != "undefined") {_RecordType("<2337,2346,48>",(ID_WORKER)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (queue) != "undefined") {_RecordType("<2354,2359,48>",(queue)); Inst19++; } } catch(e) {}
  scheduler.addWorkerTask(ID_WORKER, 1000, queue);
try { if (Inst21 <= 1000 && typeof (Packet) != "undefined") {_RecordType("<2376,2382,49>",(Packet)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (ID_DEVICE_A) != "undefined") {_RecordType("<2389,2400,49>",(ID_DEVICE_A)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (KIND_DEVICE) != "undefined") {_RecordType("<2402,2413,49>",(KIND_DEVICE)); Inst23++; } } catch(e) {}
  queue = new Packet(null, ID_DEVICE_A, KIND_DEVICE);
try { if (Inst20 <= 1000 && typeof (queue) != "undefined") {_RecordType("<2364,2369,49>",(queue)); Inst20++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (Packet) != "undefined") {_RecordType("<2430,2436,50>",(Packet)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (queue) != "undefined") {_RecordType("<2437,2442,50>",(queue)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (ID_DEVICE_A) != "undefined") {_RecordType("<2444,2455,50>",(ID_DEVICE_A)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (KIND_DEVICE) != "undefined") {_RecordType("<2457,2468,50>",(KIND_DEVICE)); Inst28++; } } catch(e) {}
  queue = new Packet(queue, ID_DEVICE_A, KIND_DEVICE);
try { if (Inst24 <= 1000 && typeof (queue) != "undefined") {_RecordType("<2418,2423,50>",(queue)); Inst24++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (Packet) != "undefined") {_RecordType("<2485,2491,51>",(Packet)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (queue) != "undefined") {_RecordType("<2492,2497,51>",(queue)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (ID_DEVICE_A) != "undefined") {_RecordType("<2499,2510,51>",(ID_DEVICE_A)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (KIND_DEVICE) != "undefined") {_RecordType("<2512,2523,51>",(KIND_DEVICE)); Inst33++; } } catch(e) {}
  queue = new Packet(queue, ID_DEVICE_A, KIND_DEVICE);
try { if (Inst29 <= 1000 && typeof (queue) != "undefined") {_RecordType("<2473,2478,51>",(queue)); Inst29++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof (scheduler.addHandlerTask) != "undefined") {_RecordType("<2528,2552,52>",(scheduler.addHandlerTask)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (scheduler) != "undefined") {_RecordType("<2528,2537,52>",(scheduler)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (ID_HANDLER_A) != "undefined") {_RecordType("<2553,2565,52>",(ID_HANDLER_A)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (queue) != "undefined") {_RecordType("<2573,2578,52>",(queue)); Inst37++; } } catch(e) {}
  scheduler.addHandlerTask(ID_HANDLER_A, 2000, queue);
try { if (Inst39 <= 1000 && typeof (Packet) != "undefined") {_RecordType("<2595,2601,53>",(Packet)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (ID_DEVICE_B) != "undefined") {_RecordType("<2608,2619,53>",(ID_DEVICE_B)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (KIND_DEVICE) != "undefined") {_RecordType("<2621,2632,53>",(KIND_DEVICE)); Inst41++; } } catch(e) {}
  queue = new Packet(null, ID_DEVICE_B, KIND_DEVICE);
try { if (Inst38 <= 1000 && typeof (queue) != "undefined") {_RecordType("<2583,2588,53>",(queue)); Inst38++; } } catch(e) {}
try { if (Inst43 <= 1000 && typeof (Packet) != "undefined") {_RecordType("<2649,2655,54>",(Packet)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (queue) != "undefined") {_RecordType("<2656,2661,54>",(queue)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (ID_DEVICE_B) != "undefined") {_RecordType("<2663,2674,54>",(ID_DEVICE_B)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (KIND_DEVICE) != "undefined") {_RecordType("<2676,2687,54>",(KIND_DEVICE)); Inst46++; } } catch(e) {}
  queue = new Packet(queue, ID_DEVICE_B, KIND_DEVICE);
try { if (Inst42 <= 1000 && typeof (queue) != "undefined") {_RecordType("<2637,2642,54>",(queue)); Inst42++; } } catch(e) {}
try { if (Inst48 <= 1000 && typeof (Packet) != "undefined") {_RecordType("<2704,2710,55>",(Packet)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (queue) != "undefined") {_RecordType("<2711,2716,55>",(queue)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (ID_DEVICE_B) != "undefined") {_RecordType("<2718,2729,55>",(ID_DEVICE_B)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (KIND_DEVICE) != "undefined") {_RecordType("<2731,2742,55>",(KIND_DEVICE)); Inst51++; } } catch(e) {}
  queue = new Packet(queue, ID_DEVICE_B, KIND_DEVICE);
try { if (Inst47 <= 1000 && typeof (queue) != "undefined") {_RecordType("<2692,2697,55>",(queue)); Inst47++; } } catch(e) {}
try { if (Inst52 <= 1000 && typeof (scheduler.addHandlerTask) != "undefined") {_RecordType("<2747,2771,56>",(scheduler.addHandlerTask)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (scheduler) != "undefined") {_RecordType("<2747,2756,56>",(scheduler)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (ID_HANDLER_B) != "undefined") {_RecordType("<2772,2784,56>",(ID_HANDLER_B)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (queue) != "undefined") {_RecordType("<2792,2797,56>",(queue)); Inst55++; } } catch(e) {}
  scheduler.addHandlerTask(ID_HANDLER_B, 3000, queue);
try { if (Inst56 <= 1000 && typeof (scheduler.addDeviceTask) != "undefined") {_RecordType("<2802,2825,57>",(scheduler.addDeviceTask)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (scheduler) != "undefined") {_RecordType("<2802,2811,57>",(scheduler)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (ID_DEVICE_A) != "undefined") {_RecordType("<2826,2837,57>",(ID_DEVICE_A)); Inst58++; } } catch(e) {}
  scheduler.addDeviceTask(ID_DEVICE_A, 4000, null);
try { if (Inst59 <= 1000 && typeof (scheduler.addDeviceTask) != "undefined") {_RecordType("<2854,2877,58>",(scheduler.addDeviceTask)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (scheduler) != "undefined") {_RecordType("<2854,2863,58>",(scheduler)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (ID_DEVICE_B) != "undefined") {_RecordType("<2878,2889,58>",(ID_DEVICE_B)); Inst61++; } } catch(e) {}
  scheduler.addDeviceTask(ID_DEVICE_B, 5000, null);
try { if (Inst62 <= 1000 && typeof (scheduler.schedule) != "undefined") {_RecordType("<2906,2924,59>",(scheduler.schedule)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (scheduler) != "undefined") {_RecordType("<2906,2915,59>",(scheduler)); Inst63++; } } catch(e) {}
  scheduler.schedule();

try { if (Inst64 <= 1000 && typeof (scheduler.queueCount) != "undefined") {_RecordType("<2935,2955,61>",(scheduler.queueCount)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (scheduler) != "undefined") {_RecordType("<2935,2944,61>",(scheduler)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (EXPECTED_QUEUE_COUNT) != "undefined") {_RecordType("<2959,2979,61>",(EXPECTED_QUEUE_COUNT)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (scheduler.holdCount) != "undefined") {_RecordType("<2983,3002,61>",(scheduler.holdCount)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (scheduler) != "undefined") {_RecordType("<2983,2992,61>",(scheduler)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (EXPECTED_HOLD_COUNT) != "undefined") {_RecordType("<3006,3025,61>",(EXPECTED_HOLD_COUNT)); Inst69++; } } catch(e) {}
  if (scheduler.queueCount != EXPECTED_QUEUE_COUNT || scheduler.holdCount != EXPECTED_HOLD_COUNT) {
try { if (Inst71 <= 1000 && typeof (scheduler.queueCount) != "undefined") {_RecordType("<3085,3105,62>",(scheduler.queueCount)); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (scheduler) != "undefined") {_RecordType("<3085,3094,62>",(scheduler)); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (scheduler.holdCount) != "undefined") {_RecordType("<3127,3146,62>",(scheduler.holdCount)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (scheduler) != "undefined") {_RecordType("<3127,3136,62>",(scheduler)); Inst74++; } } catch(e) {}
    var msg = "Error during execution: queueCount = " + scheduler.queueCount + ", holdCount = " + scheduler.holdCount + ".";
try { if (Inst70 <= 1000 && typeof (msg) != "undefined") {_RecordType("<3037,3040,62>",(msg)); Inst70++; } } catch(e) {}
try { if (Inst75 <= 1000 && typeof (Error) != "undefined") {_RecordType("<3168,3173,63>",(Error)); Inst75++; } } catch(e) {}try { if (Inst76 <= 1000 && typeof (msg) != "undefined") {_RecordType("<3174,3177,63>",(msg)); Inst76++; } } catch(e) {}
    throw new Error(msg);
  }
}

var COUNT = 1000;
try { if (Inst77 <= 1000 && typeof (COUNT) != "undefined") {_RecordType("<3191,3196,67>",(COUNT)); Inst77++; } } catch(e) {}
/**
 * These two constants specify how many times a packet is queued and
 * how many times a task is put on hold in a correct run of richards.
 * They don't have any meaning a such but are characteristic of a
 * correct run so if the actual queue or hold count is different from
 * the expected there must be a bug in the implementation.
 **/

var EXPECTED_QUEUE_COUNT = 2322;
try { if (Inst78 <= 1000 && typeof (EXPECTED_QUEUE_COUNT) != "undefined") {_RecordType("<3553,3573,76>",(EXPECTED_QUEUE_COUNT)); Inst78++; } } catch(e) {}
var EXPECTED_HOLD_COUNT = 928;
try { if (Inst79 <= 1000 && typeof (EXPECTED_HOLD_COUNT) != "undefined") {_RecordType("<3586,3605,77>",(EXPECTED_HOLD_COUNT)); Inst79++; } } catch(e) {}
/**
 * A scheduler can be used to schedule a set of tasks based on their relative
 * priorities.  Scheduling is done by maintaining a list of task control blocks
 * which holds tasks and the data queue they are processing.
 * @constructor
 */

try { if (Inst80 <= 1000 && typeof (Scheduler) != "undefined") {_RecordType("<3866,3875,85>",(Scheduler)); Inst80++; } } catch(e) {}
function Scheduler() {
  this._queueCount = 0;
try { if (Inst81 <= 1000 && typeof (this._queueCount) != "undefined") {_RecordType("<3882,3898,86>",(this._queueCount)); Inst81++; } } catch(e) {}
  this._holdCount = 0;
try { if (Inst82 <= 1000 && typeof (this._holdCount) != "undefined") {_RecordType("<3906,3921,87>",(this._holdCount)); Inst82++; } } catch(e) {}
try { if (Inst84 <= 1000 && typeof (Array) != "undefined") {_RecordType("<3948,3953,88>",(Array)); Inst84++; } } catch(e) {}try { if (Inst85 <= 1000 && typeof (NUMBER_OF_IDS) != "undefined") {_RecordType("<3954,3967,88>",(NUMBER_OF_IDS)); Inst85++; } } catch(e) {}
  this._blocks = new Array(NUMBER_OF_IDS);
try { if (Inst83 <= 1000 && typeof (this._blocks) != "undefined") {_RecordType("<3929,3941,88>",(this._blocks)); Inst83++; } } catch(e) {}
  this._list = null;
try { if (Inst86 <= 1000 && typeof (this._list) != "undefined") {_RecordType("<3972,3982,89>",(this._list)); Inst86++; } } catch(e) {}
  this._currentTcb = null;
try { if (Inst87 <= 1000 && typeof (this._currentTcb) != "undefined") {_RecordType("<3993,4009,90>",(this._currentTcb)); Inst87++; } } catch(e) {}
  this._currentId = null;
try { if (Inst88 <= 1000 && typeof (this._currentId) != "undefined") {_RecordType("<4020,4035,91>",(this._currentId)); Inst88++; } } catch(e) {}
}

var ID_IDLE = 0;
try { if (Inst89 <= 1000 && typeof (ID_IDLE) != "undefined") {_RecordType("<4051,4058,94>",(ID_IDLE)); Inst89++; } } catch(e) {}
var ID_WORKER = 1;
try { if (Inst90 <= 1000 && typeof (ID_WORKER) != "undefined") {_RecordType("<4068,4077,95>",(ID_WORKER)); Inst90++; } } catch(e) {}
var ID_HANDLER_A = 2;
try { if (Inst91 <= 1000 && typeof (ID_HANDLER_A) != "undefined") {_RecordType("<4087,4099,96>",(ID_HANDLER_A)); Inst91++; } } catch(e) {}
var ID_HANDLER_B = 3;
try { if (Inst92 <= 1000 && typeof (ID_HANDLER_B) != "undefined") {_RecordType("<4109,4121,97>",(ID_HANDLER_B)); Inst92++; } } catch(e) {}
var ID_DEVICE_A = 4;
try { if (Inst93 <= 1000 && typeof (ID_DEVICE_A) != "undefined") {_RecordType("<4131,4142,98>",(ID_DEVICE_A)); Inst93++; } } catch(e) {}
var ID_DEVICE_B = 5;
try { if (Inst94 <= 1000 && typeof (ID_DEVICE_B) != "undefined") {_RecordType("<4152,4163,99>",(ID_DEVICE_B)); Inst94++; } } catch(e) {}
var NUMBER_OF_IDS = 6;
try { if (Inst95 <= 1000 && typeof (NUMBER_OF_IDS) != "undefined") {_RecordType("<4173,4186,100>",(NUMBER_OF_IDS)); Inst95++; } } catch(e) {}
var KIND_DEVICE = 0;
try { if (Inst96 <= 1000 && typeof (KIND_DEVICE) != "undefined") {_RecordType("<4196,4207,101>",(KIND_DEVICE)); Inst96++; } } catch(e) {}
var KIND_WORK = 1;
try { if (Inst97 <= 1000 && typeof (KIND_WORK) != "undefined") {_RecordType("<4217,4226,102>",(KIND_WORK)); Inst97++; } } catch(e) {}

try { if (Inst98 <= 1000 && typeof (Scheduler.prototype.__defineGetter__) != "undefined") {_RecordType("<4233,4269,104>",(Scheduler.prototype.__defineGetter__)); Inst98++; } } catch(e) {}try { if (Inst99 <= 1000 && typeof (Scheduler.prototype) != "undefined") {_RecordType("<4233,4252,104>",(Scheduler.prototype)); Inst99++; } } catch(e) {}try { if (Inst100 <= 1000 && typeof (Scheduler) != "undefined") {_RecordType("<4233,4242,104>",(Scheduler)); Inst100++; } } catch(e) {}
Scheduler.prototype.__defineGetter__("queueCount", function () {
try { if (Inst101 <= 1000 && typeof (this._queueCount) != "undefined") {_RecordType("<4307,4323,105>",(this._queueCount)); Inst101++; } } catch(e) {}
  return this._queueCount;
});

try { if (Inst102 <= 1000 && typeof (Scheduler.prototype.__defineSetter__) != "undefined") {_RecordType("<4330,4366,108>",(Scheduler.prototype.__defineSetter__)); Inst102++; } } catch(e) {}try { if (Inst103 <= 1000 && typeof (Scheduler.prototype) != "undefined") {_RecordType("<4330,4349,108>",(Scheduler.prototype)); Inst103++; } } catch(e) {}try { if (Inst104 <= 1000 && typeof (Scheduler) != "undefined") {_RecordType("<4330,4339,108>",(Scheduler)); Inst104++; } } catch(e) {}
Scheduler.prototype.__defineSetter__("queueCount", function (value) {
try { if (Inst105 <= 1000 && typeof (value) != "undefined") {_RecordType("<4391,4396,108>",(value)); Inst105++; } } catch(e) {}
try { if (Inst107 <= 1000 && typeof (value) != "undefined") {_RecordType("<4421,4426,109>",(value)); Inst107++; } } catch(e) {}
  this._queueCount = value;
try { if (Inst106 <= 1000 && typeof (this._queueCount) != "undefined") {_RecordType("<4402,4418,109>",(this._queueCount)); Inst106++; } } catch(e) {}
});

try { if (Inst108 <= 1000 && typeof (Scheduler.prototype.__defineGetter__) != "undefined") {_RecordType("<4433,4469,112>",(Scheduler.prototype.__defineGetter__)); Inst108++; } } catch(e) {}try { if (Inst109 <= 1000 && typeof (Scheduler.prototype) != "undefined") {_RecordType("<4433,4452,112>",(Scheduler.prototype)); Inst109++; } } catch(e) {}try { if (Inst110 <= 1000 && typeof (Scheduler) != "undefined") {_RecordType("<4433,4442,112>",(Scheduler)); Inst110++; } } catch(e) {}
Scheduler.prototype.__defineGetter__("holdCount", function () {
try { if (Inst111 <= 1000 && typeof (this._holdCount) != "undefined") {_RecordType("<4506,4521,113>",(this._holdCount)); Inst111++; } } catch(e) {}
  return this._holdCount;
});

try { if (Inst112 <= 1000 && typeof (Scheduler.prototype.__defineSetter__) != "undefined") {_RecordType("<4528,4564,116>",(Scheduler.prototype.__defineSetter__)); Inst112++; } } catch(e) {}try { if (Inst113 <= 1000 && typeof (Scheduler.prototype) != "undefined") {_RecordType("<4528,4547,116>",(Scheduler.prototype)); Inst113++; } } catch(e) {}try { if (Inst114 <= 1000 && typeof (Scheduler) != "undefined") {_RecordType("<4528,4537,116>",(Scheduler)); Inst114++; } } catch(e) {}
Scheduler.prototype.__defineSetter__("holdCount", function (value) {
try { if (Inst115 <= 1000 && typeof (value) != "undefined") {_RecordType("<4588,4593,116>",(value)); Inst115++; } } catch(e) {}
try { if (Inst117 <= 1000 && typeof (value) != "undefined") {_RecordType("<4617,4622,117>",(value)); Inst117++; } } catch(e) {}
  this._holdCount = value;
try { if (Inst116 <= 1000 && typeof (this._holdCount) != "undefined") {_RecordType("<4599,4614,117>",(this._holdCount)); Inst116++; } } catch(e) {}
});

try { if (Inst118 <= 1000 && typeof (Scheduler.prototype.__defineGetter__) != "undefined") {_RecordType("<4629,4665,120>",(Scheduler.prototype.__defineGetter__)); Inst118++; } } catch(e) {}try { if (Inst119 <= 1000 && typeof (Scheduler.prototype) != "undefined") {_RecordType("<4629,4648,120>",(Scheduler.prototype)); Inst119++; } } catch(e) {}try { if (Inst120 <= 1000 && typeof (Scheduler) != "undefined") {_RecordType("<4629,4638,120>",(Scheduler)); Inst120++; } } catch(e) {}
Scheduler.prototype.__defineGetter__("blocks", function () {
try { if (Inst121 <= 1000 && typeof (this._blocks) != "undefined") {_RecordType("<4699,4711,121>",(this._blocks)); Inst121++; } } catch(e) {}
  return this._blocks;
});

try { if (Inst122 <= 1000 && typeof (Scheduler.prototype.__defineSetter__) != "undefined") {_RecordType("<4718,4754,124>",(Scheduler.prototype.__defineSetter__)); Inst122++; } } catch(e) {}try { if (Inst123 <= 1000 && typeof (Scheduler.prototype) != "undefined") {_RecordType("<4718,4737,124>",(Scheduler.prototype)); Inst123++; } } catch(e) {}try { if (Inst124 <= 1000 && typeof (Scheduler) != "undefined") {_RecordType("<4718,4727,124>",(Scheduler)); Inst124++; } } catch(e) {}
Scheduler.prototype.__defineSetter__("blocks", function (value) {
try { if (Inst125 <= 1000 && typeof (value) != "undefined") {_RecordType("<4775,4780,124>",(value)); Inst125++; } } catch(e) {}
try { if (Inst127 <= 1000 && typeof (value) != "undefined") {_RecordType("<4801,4806,125>",(value)); Inst127++; } } catch(e) {}
  this._blocks = value;
try { if (Inst126 <= 1000 && typeof (this._blocks) != "undefined") {_RecordType("<4786,4798,125>",(this._blocks)); Inst126++; } } catch(e) {}
});

try { if (Inst128 <= 1000 && typeof (Scheduler.prototype.__defineGetter__) != "undefined") {_RecordType("<4813,4849,128>",(Scheduler.prototype.__defineGetter__)); Inst128++; } } catch(e) {}try { if (Inst129 <= 1000 && typeof (Scheduler.prototype) != "undefined") {_RecordType("<4813,4832,128>",(Scheduler.prototype)); Inst129++; } } catch(e) {}try { if (Inst130 <= 1000 && typeof (Scheduler) != "undefined") {_RecordType("<4813,4822,128>",(Scheduler)); Inst130++; } } catch(e) {}
Scheduler.prototype.__defineGetter__("list", function () {
try { if (Inst131 <= 1000 && typeof (this._list) != "undefined") {_RecordType("<4881,4891,129>",(this._list)); Inst131++; } } catch(e) {}
  return this._list;
});

try { if (Inst132 <= 1000 && typeof (Scheduler.prototype.__defineSetter__) != "undefined") {_RecordType("<4898,4934,132>",(Scheduler.prototype.__defineSetter__)); Inst132++; } } catch(e) {}try { if (Inst133 <= 1000 && typeof (Scheduler.prototype) != "undefined") {_RecordType("<4898,4917,132>",(Scheduler.prototype)); Inst133++; } } catch(e) {}try { if (Inst134 <= 1000 && typeof (Scheduler) != "undefined") {_RecordType("<4898,4907,132>",(Scheduler)); Inst134++; } } catch(e) {}
Scheduler.prototype.__defineSetter__("list", function (value) {
try { if (Inst135 <= 1000 && typeof (value) != "undefined") {_RecordType("<4953,4958,132>",(value)); Inst135++; } } catch(e) {}
try { if (Inst137 <= 1000 && typeof (value) != "undefined") {_RecordType("<4977,4982,133>",(value)); Inst137++; } } catch(e) {}
  this._list = value;
try { if (Inst136 <= 1000 && typeof (this._list) != "undefined") {_RecordType("<4964,4974,133>",(this._list)); Inst136++; } } catch(e) {}
});

try { if (Inst138 <= 1000 && typeof (Scheduler.prototype.__defineGetter__) != "undefined") {_RecordType("<4989,5025,136>",(Scheduler.prototype.__defineGetter__)); Inst138++; } } catch(e) {}try { if (Inst139 <= 1000 && typeof (Scheduler.prototype) != "undefined") {_RecordType("<4989,5008,136>",(Scheduler.prototype)); Inst139++; } } catch(e) {}try { if (Inst140 <= 1000 && typeof (Scheduler) != "undefined") {_RecordType("<4989,4998,136>",(Scheduler)); Inst140++; } } catch(e) {}
Scheduler.prototype.__defineGetter__("currentTcb", function () {
try { if (Inst141 <= 1000 && typeof (this._currentTcb) != "undefined") {_RecordType("<5063,5079,137>",(this._currentTcb)); Inst141++; } } catch(e) {}
  return this._currentTcb;
});

try { if (Inst142 <= 1000 && typeof (Scheduler.prototype.__defineSetter__) != "undefined") {_RecordType("<5086,5122,140>",(Scheduler.prototype.__defineSetter__)); Inst142++; } } catch(e) {}try { if (Inst143 <= 1000 && typeof (Scheduler.prototype) != "undefined") {_RecordType("<5086,5105,140>",(Scheduler.prototype)); Inst143++; } } catch(e) {}try { if (Inst144 <= 1000 && typeof (Scheduler) != "undefined") {_RecordType("<5086,5095,140>",(Scheduler)); Inst144++; } } catch(e) {}
Scheduler.prototype.__defineSetter__("currentTcb", function (value) {
try { if (Inst145 <= 1000 && typeof (value) != "undefined") {_RecordType("<5147,5152,140>",(value)); Inst145++; } } catch(e) {}
try { if (Inst147 <= 1000 && typeof (value) != "undefined") {_RecordType("<5177,5182,141>",(value)); Inst147++; } } catch(e) {}
  this._currentTcb = value;
try { if (Inst146 <= 1000 && typeof (this._currentTcb) != "undefined") {_RecordType("<5158,5174,141>",(this._currentTcb)); Inst146++; } } catch(e) {}
});

try { if (Inst148 <= 1000 && typeof (Scheduler.prototype.__defineGetter__) != "undefined") {_RecordType("<5189,5225,144>",(Scheduler.prototype.__defineGetter__)); Inst148++; } } catch(e) {}try { if (Inst149 <= 1000 && typeof (Scheduler.prototype) != "undefined") {_RecordType("<5189,5208,144>",(Scheduler.prototype)); Inst149++; } } catch(e) {}try { if (Inst150 <= 1000 && typeof (Scheduler) != "undefined") {_RecordType("<5189,5198,144>",(Scheduler)); Inst150++; } } catch(e) {}
Scheduler.prototype.__defineGetter__("currentId", function () {
try { if (Inst151 <= 1000 && typeof (this._currentId) != "undefined") {_RecordType("<5262,5277,145>",(this._currentId)); Inst151++; } } catch(e) {}
  return this._currentId;
});

try { if (Inst152 <= 1000 && typeof (Scheduler.prototype.__defineSetter__) != "undefined") {_RecordType("<5284,5320,148>",(Scheduler.prototype.__defineSetter__)); Inst152++; } } catch(e) {}try { if (Inst153 <= 1000 && typeof (Scheduler.prototype) != "undefined") {_RecordType("<5284,5303,148>",(Scheduler.prototype)); Inst153++; } } catch(e) {}try { if (Inst154 <= 1000 && typeof (Scheduler) != "undefined") {_RecordType("<5284,5293,148>",(Scheduler)); Inst154++; } } catch(e) {}
Scheduler.prototype.__defineSetter__("currentId", function (value) {
try { if (Inst155 <= 1000 && typeof (value) != "undefined") {_RecordType("<5344,5349,148>",(value)); Inst155++; } } catch(e) {}
try { if (Inst157 <= 1000 && typeof (value) != "undefined") {_RecordType("<5373,5378,149>",(value)); Inst157++; } } catch(e) {}
  this._currentId = value;
try { if (Inst156 <= 1000 && typeof (this._currentId) != "undefined") {_RecordType("<5355,5370,149>",(this._currentId)); Inst156++; } } catch(e) {}
});
/**
 * Add an idle task to this scheduler.
 * @param {int} id the identity of the task
 * @param {int} priority the task's priority
 * @param {Packet} queue the queue of work to be processed by the task
 * @param {int} count the number of times to schedule the task
 */


Scheduler.prototype.addIdleTask = function (id, priority, queue, count) {
try { if (Inst161 <= 1000 && typeof (id) != "undefined") {_RecordType("<5700,5702,160>",(id)); Inst161++; } } catch(e) {}try { if (Inst162 <= 1000 && typeof (priority) != "undefined") {_RecordType("<5704,5712,160>",(priority)); Inst162++; } } catch(e) {}try { if (Inst163 <= 1000 && typeof (queue) != "undefined") {_RecordType("<5714,5719,160>",(queue)); Inst163++; } } catch(e) {}try { if (Inst164 <= 1000 && typeof (count) != "undefined") {_RecordType("<5721,5726,160>",(count)); Inst164++; } } catch(e) {}
try { if (Inst165 <= 1000 && typeof (this.addRunningTask) != "undefined") {_RecordType("<5732,5751,161>",(this.addRunningTask)); Inst165++; } } catch(e) {}try { if (Inst166 <= 1000 && typeof (id) != "undefined") {_RecordType("<5752,5754,161>",(id)); Inst166++; } } catch(e) {}try { if (Inst167 <= 1000 && typeof (priority) != "undefined") {_RecordType("<5756,5764,161>",(priority)); Inst167++; } } catch(e) {}try { if (Inst168 <= 1000 && typeof (queue) != "undefined") {_RecordType("<5766,5771,161>",(queue)); Inst168++; } } catch(e) {}try { if (Inst169 <= 1000 && typeof (IdleTask) != "undefined") {_RecordType("<5777,5785,161>",(IdleTask)); Inst169++; } } catch(e) {}try { if (Inst170 <= 1000 && typeof (count) != "undefined") {_RecordType("<5795,5800,161>",(count)); Inst170++; } } catch(e) {}
  this.addRunningTask(id, priority, queue, new IdleTask(this, 1, count));
};
try { if (Inst158 <= 1000 && typeof (Scheduler.prototype.addIdleTask) != "undefined") {_RecordType("<5656,5687,160>",(Scheduler.prototype.addIdleTask)); Inst158++; } } catch(e) {}try { if (Inst159 <= 1000 && typeof (Scheduler.prototype) != "undefined") {_RecordType("<5656,5675,160>",(Scheduler.prototype)); Inst159++; } } catch(e) {}try { if (Inst160 <= 1000 && typeof (Scheduler) != "undefined") {_RecordType("<5656,5665,160>",(Scheduler)); Inst160++; } } catch(e) {}
/**
 * Add a work task to this scheduler.
 * @param {int} id the identity of the task
 * @param {int} priority the task's priority
 * @param {Packet} queue the queue of work to be processed by the task
 */


Scheduler.prototype.addWorkerTask = function (id, priority, queue) {
try { if (Inst174 <= 1000 && typeof (id) != "undefined") {_RecordType("<6061,6063,171>",(id)); Inst174++; } } catch(e) {}try { if (Inst175 <= 1000 && typeof (priority) != "undefined") {_RecordType("<6065,6073,171>",(priority)); Inst175++; } } catch(e) {}try { if (Inst176 <= 1000 && typeof (queue) != "undefined") {_RecordType("<6075,6080,171>",(queue)); Inst176++; } } catch(e) {}
try { if (Inst177 <= 1000 && typeof (this.addTask) != "undefined") {_RecordType("<6086,6098,172>",(this.addTask)); Inst177++; } } catch(e) {}try { if (Inst178 <= 1000 && typeof (id) != "undefined") {_RecordType("<6099,6101,172>",(id)); Inst178++; } } catch(e) {}try { if (Inst179 <= 1000 && typeof (priority) != "undefined") {_RecordType("<6103,6111,172>",(priority)); Inst179++; } } catch(e) {}try { if (Inst180 <= 1000 && typeof (queue) != "undefined") {_RecordType("<6113,6118,172>",(queue)); Inst180++; } } catch(e) {}try { if (Inst181 <= 1000 && typeof (WorkerTask) != "undefined") {_RecordType("<6124,6134,172>",(WorkerTask)); Inst181++; } } catch(e) {}try { if (Inst182 <= 1000 && typeof (ID_HANDLER_A) != "undefined") {_RecordType("<6141,6153,172>",(ID_HANDLER_A)); Inst182++; } } catch(e) {}
  this.addTask(id, priority, queue, new WorkerTask(this, ID_HANDLER_A, 0));
};
try { if (Inst171 <= 1000 && typeof (Scheduler.prototype.addWorkerTask) != "undefined") {_RecordType("<6015,6048,171>",(Scheduler.prototype.addWorkerTask)); Inst171++; } } catch(e) {}try { if (Inst172 <= 1000 && typeof (Scheduler.prototype) != "undefined") {_RecordType("<6015,6034,171>",(Scheduler.prototype)); Inst172++; } } catch(e) {}try { if (Inst173 <= 1000 && typeof (Scheduler) != "undefined") {_RecordType("<6015,6024,171>",(Scheduler)); Inst173++; } } catch(e) {}
/**
 * Add a handler task to this scheduler.
 * @param {int} id the identity of the task
 * @param {int} priority the task's priority
 * @param {Packet} queue the queue of work to be processed by the task
 */


Scheduler.prototype.addHandlerTask = function (id, priority, queue) {
try { if (Inst186 <= 1000 && typeof (id) != "undefined") {_RecordType("<6421,6423,182>",(id)); Inst186++; } } catch(e) {}try { if (Inst187 <= 1000 && typeof (priority) != "undefined") {_RecordType("<6425,6433,182>",(priority)); Inst187++; } } catch(e) {}try { if (Inst188 <= 1000 && typeof (queue) != "undefined") {_RecordType("<6435,6440,182>",(queue)); Inst188++; } } catch(e) {}
try { if (Inst189 <= 1000 && typeof (this.addTask) != "undefined") {_RecordType("<6446,6458,183>",(this.addTask)); Inst189++; } } catch(e) {}try { if (Inst190 <= 1000 && typeof (id) != "undefined") {_RecordType("<6459,6461,183>",(id)); Inst190++; } } catch(e) {}try { if (Inst191 <= 1000 && typeof (priority) != "undefined") {_RecordType("<6463,6471,183>",(priority)); Inst191++; } } catch(e) {}try { if (Inst192 <= 1000 && typeof (queue) != "undefined") {_RecordType("<6473,6478,183>",(queue)); Inst192++; } } catch(e) {}try { if (Inst193 <= 1000 && typeof (HandlerTask) != "undefined") {_RecordType("<6484,6495,183>",(HandlerTask)); Inst193++; } } catch(e) {}
  this.addTask(id, priority, queue, new HandlerTask(this));
};
try { if (Inst183 <= 1000 && typeof (Scheduler.prototype.addHandlerTask) != "undefined") {_RecordType("<6374,6408,182>",(Scheduler.prototype.addHandlerTask)); Inst183++; } } catch(e) {}try { if (Inst184 <= 1000 && typeof (Scheduler.prototype) != "undefined") {_RecordType("<6374,6393,182>",(Scheduler.prototype)); Inst184++; } } catch(e) {}try { if (Inst185 <= 1000 && typeof (Scheduler) != "undefined") {_RecordType("<6374,6383,182>",(Scheduler)); Inst185++; } } catch(e) {}
/**
 * Add a handler task to this scheduler.
 * @param {int} id the identity of the task
 * @param {int} priority the task's priority
 * @param {Packet} queue the queue of work to be processed by the task
 */


Scheduler.prototype.addDeviceTask = function (id, priority, queue) {
try { if (Inst197 <= 1000 && typeof (id) != "undefined") {_RecordType("<6764,6766,193>",(id)); Inst197++; } } catch(e) {}try { if (Inst198 <= 1000 && typeof (priority) != "undefined") {_RecordType("<6768,6776,193>",(priority)); Inst198++; } } catch(e) {}try { if (Inst199 <= 1000 && typeof (queue) != "undefined") {_RecordType("<6778,6783,193>",(queue)); Inst199++; } } catch(e) {}
try { if (Inst200 <= 1000 && typeof (this.addTask) != "undefined") {_RecordType("<6789,6801,194>",(this.addTask)); Inst200++; } } catch(e) {}try { if (Inst201 <= 1000 && typeof (id) != "undefined") {_RecordType("<6802,6804,194>",(id)); Inst201++; } } catch(e) {}try { if (Inst202 <= 1000 && typeof (priority) != "undefined") {_RecordType("<6806,6814,194>",(priority)); Inst202++; } } catch(e) {}try { if (Inst203 <= 1000 && typeof (queue) != "undefined") {_RecordType("<6816,6821,194>",(queue)); Inst203++; } } catch(e) {}try { if (Inst204 <= 1000 && typeof (DeviceTask) != "undefined") {_RecordType("<6827,6837,194>",(DeviceTask)); Inst204++; } } catch(e) {}
  this.addTask(id, priority, queue, new DeviceTask(this));
};
try { if (Inst194 <= 1000 && typeof (Scheduler.prototype.addDeviceTask) != "undefined") {_RecordType("<6718,6751,193>",(Scheduler.prototype.addDeviceTask)); Inst194++; } } catch(e) {}try { if (Inst195 <= 1000 && typeof (Scheduler.prototype) != "undefined") {_RecordType("<6718,6737,193>",(Scheduler.prototype)); Inst195++; } } catch(e) {}try { if (Inst196 <= 1000 && typeof (Scheduler) != "undefined") {_RecordType("<6718,6727,193>",(Scheduler)); Inst196++; } } catch(e) {}
/**
 * Add the specified task and mark it as running.
 * @param {int} id the identity of the task
 * @param {int} priority the task's priority
 * @param {Packet} queue the queue of work to be processed by the task
 * @param {Task} task the task to add
 */


Scheduler.prototype.addRunningTask = function (id, priority, queue, task) {
try { if (Inst208 <= 1000 && typeof (id) != "undefined") {_RecordType("<7154,7156,205>",(id)); Inst208++; } } catch(e) {}try { if (Inst209 <= 1000 && typeof (priority) != "undefined") {_RecordType("<7158,7166,205>",(priority)); Inst209++; } } catch(e) {}try { if (Inst210 <= 1000 && typeof (queue) != "undefined") {_RecordType("<7168,7173,205>",(queue)); Inst210++; } } catch(e) {}try { if (Inst211 <= 1000 && typeof (task) != "undefined") {_RecordType("<7175,7179,205>",(task)); Inst211++; } } catch(e) {}
try { if (Inst212 <= 1000 && typeof (this.addTask) != "undefined") {_RecordType("<7185,7197,206>",(this.addTask)); Inst212++; } } catch(e) {}try { if (Inst213 <= 1000 && typeof (id) != "undefined") {_RecordType("<7198,7200,206>",(id)); Inst213++; } } catch(e) {}try { if (Inst214 <= 1000 && typeof (priority) != "undefined") {_RecordType("<7202,7210,206>",(priority)); Inst214++; } } catch(e) {}try { if (Inst215 <= 1000 && typeof (queue) != "undefined") {_RecordType("<7212,7217,206>",(queue)); Inst215++; } } catch(e) {}try { if (Inst216 <= 1000 && typeof (task) != "undefined") {_RecordType("<7219,7223,206>",(task)); Inst216++; } } catch(e) {}
  this.addTask(id, priority, queue, task);
try { if (Inst217 <= 1000 && typeof (this.currentTcb.setRunning) != "undefined") {_RecordType("<7228,7254,207>",(this.currentTcb.setRunning)); Inst217++; } } catch(e) {}try { if (Inst218 <= 1000 && typeof (this.currentTcb) != "undefined") {_RecordType("<7228,7243,207>",(this.currentTcb)); Inst218++; } } catch(e) {}
  this.currentTcb.setRunning();
};
try { if (Inst205 <= 1000 && typeof (Scheduler.prototype.addRunningTask) != "undefined") {_RecordType("<7107,7141,205>",(Scheduler.prototype.addRunningTask)); Inst205++; } } catch(e) {}try { if (Inst206 <= 1000 && typeof (Scheduler.prototype) != "undefined") {_RecordType("<7107,7126,205>",(Scheduler.prototype)); Inst206++; } } catch(e) {}try { if (Inst207 <= 1000 && typeof (Scheduler) != "undefined") {_RecordType("<7107,7116,205>",(Scheduler)); Inst207++; } } catch(e) {}
/**
 * Add the specified task to this scheduler.
 * @param {int} id the identity of the task
 * @param {int} priority the task's priority
 * @param {Packet} queue the queue of work to be processed by the task
 * @param {Task} task the task to add
 */


Scheduler.prototype.addTask = function (id, priority, queue, task) {
try { if (Inst222 <= 1000 && typeof (id) != "undefined") {_RecordType("<7554,7556,218>",(id)); Inst222++; } } catch(e) {}try { if (Inst223 <= 1000 && typeof (priority) != "undefined") {_RecordType("<7558,7566,218>",(priority)); Inst223++; } } catch(e) {}try { if (Inst224 <= 1000 && typeof (queue) != "undefined") {_RecordType("<7568,7573,218>",(queue)); Inst224++; } } catch(e) {}try { if (Inst225 <= 1000 && typeof (task) != "undefined") {_RecordType("<7575,7579,218>",(task)); Inst225++; } } catch(e) {}
try { if (Inst227 <= 1000 && typeof (TaskControlBlock) != "undefined") {_RecordType("<7607,7623,219>",(TaskControlBlock)); Inst227++; } } catch(e) {}try { if (Inst228 <= 1000 && typeof (this.list) != "undefined") {_RecordType("<7624,7633,219>",(this.list)); Inst228++; } } catch(e) {}try { if (Inst229 <= 1000 && typeof (id) != "undefined") {_RecordType("<7635,7637,219>",(id)); Inst229++; } } catch(e) {}try { if (Inst230 <= 1000 && typeof (priority) != "undefined") {_RecordType("<7639,7647,219>",(priority)); Inst230++; } } catch(e) {}try { if (Inst231 <= 1000 && typeof (queue) != "undefined") {_RecordType("<7649,7654,219>",(queue)); Inst231++; } } catch(e) {}try { if (Inst232 <= 1000 && typeof (task) != "undefined") {_RecordType("<7656,7660,219>",(task)); Inst232++; } } catch(e) {}
  this.currentTcb = new TaskControlBlock(this.list, id, priority, queue, task);
try { if (Inst226 <= 1000 && typeof (this.currentTcb) != "undefined") {_RecordType("<7585,7600,219>",(this.currentTcb)); Inst226++; } } catch(e) {}
try { if (Inst234 <= 1000 && typeof (this.currentTcb) != "undefined") {_RecordType("<7677,7692,220>",(this.currentTcb)); Inst234++; } } catch(e) {}
  this.list = this.currentTcb;
try { if (Inst233 <= 1000 && typeof (this.list) != "undefined") {_RecordType("<7665,7674,220>",(this.list)); Inst233++; } } catch(e) {}
try { if (Inst237 <= 1000 && typeof (this.currentTcb) != "undefined") {_RecordType("<7714,7729,221>",(this.currentTcb)); Inst237++; } } catch(e) {}
  this.blocks[id] = this.currentTcb;
try { if (Inst235 <= 1000 && typeof (this.blocks[id]) != "undefined") {_RecordType("<7696,7711,221>",(this.blocks[id])); Inst235++; } } catch(e) {}try { if (Inst236 <= 1000 && typeof (this.blocks) != "undefined") {_RecordType("<7696,7707,221>",(this.blocks)); Inst236++; } } catch(e) {}
};
try { if (Inst219 <= 1000 && typeof (Scheduler.prototype.addTask) != "undefined") {_RecordType("<7514,7541,218>",(Scheduler.prototype.addTask)); Inst219++; } } catch(e) {}try { if (Inst220 <= 1000 && typeof (Scheduler.prototype) != "undefined") {_RecordType("<7514,7533,218>",(Scheduler.prototype)); Inst220++; } } catch(e) {}try { if (Inst221 <= 1000 && typeof (Scheduler) != "undefined") {_RecordType("<7514,7523,218>",(Scheduler)); Inst221++; } } catch(e) {}
/**
 * Execute the tasks managed by this scheduler.
 */


Scheduler.prototype.schedule = function () {
try { if (Inst242 <= 1000 && typeof (this.list) != "undefined") {_RecordType("<7857,7866,229>",(this.list)); Inst242++; } } catch(e) {}
  this.currentTcb = this.list;
try { if (Inst241 <= 1000 && typeof (this.currentTcb) != "undefined") {_RecordType("<7839,7854,229>",(this.currentTcb)); Inst241++; } } catch(e) {}

try { if (Inst243 <= 1000 && typeof (this.currentTcb) != "undefined") {_RecordType("<7878,7893,231>",(this.currentTcb)); Inst243++; } } catch(e) {}
  while (this.currentTcb != null) {
try { if (Inst244 <= 1000 && typeof (this.currentTcb.isHeldOrSuspended) != "undefined") {_RecordType("<7913,7946,232>",(this.currentTcb.isHeldOrSuspended)); Inst244++; } } catch(e) {}try { if (Inst245 <= 1000 && typeof (this.currentTcb) != "undefined") {_RecordType("<7913,7928,232>",(this.currentTcb)); Inst245++; } } catch(e) {}
    if (this.currentTcb.isHeldOrSuspended()) {
try { if (Inst247 <= 1000 && typeof (this.currentTcb.link) != "undefined") {_RecordType("<7976,7996,233>",(this.currentTcb.link)); Inst247++; } } catch(e) {}try { if (Inst248 <= 1000 && typeof (this.currentTcb) != "undefined") {_RecordType("<7976,7991,233>",(this.currentTcb)); Inst248++; } } catch(e) {}
      this.currentTcb = this.currentTcb.link;
try { if (Inst246 <= 1000 && typeof (this.currentTcb) != "undefined") {_RecordType("<7958,7973,233>",(this.currentTcb)); Inst246++; } } catch(e) {}
    } else {
try { if (Inst250 <= 1000 && typeof (this.currentTcb.id) != "undefined") {_RecordType("<8034,8052,235>",(this.currentTcb.id)); Inst250++; } } catch(e) {}try { if (Inst251 <= 1000 && typeof (this.currentTcb) != "undefined") {_RecordType("<8034,8049,235>",(this.currentTcb)); Inst251++; } } catch(e) {}
      this.currentId = this.currentTcb.id;
try { if (Inst249 <= 1000 && typeof (this.currentId) != "undefined") {_RecordType("<8017,8031,235>",(this.currentId)); Inst249++; } } catch(e) {}
try { if (Inst253 <= 1000 && typeof (this.currentTcb.run) != "undefined") {_RecordType("<8078,8097,236>",(this.currentTcb.run)); Inst253++; } } catch(e) {}try { if (Inst254 <= 1000 && typeof (this.currentTcb) != "undefined") {_RecordType("<8078,8093,236>",(this.currentTcb)); Inst254++; } } catch(e) {}
      this.currentTcb = this.currentTcb.run();
try { if (Inst252 <= 1000 && typeof (this.currentTcb) != "undefined") {_RecordType("<8060,8075,236>",(this.currentTcb)); Inst252++; } } catch(e) {}
    }
  }
};
try { if (Inst238 <= 1000 && typeof (Scheduler.prototype.schedule) != "undefined") {_RecordType("<7792,7820,228>",(Scheduler.prototype.schedule)); Inst238++; } } catch(e) {}try { if (Inst239 <= 1000 && typeof (Scheduler.prototype) != "undefined") {_RecordType("<7792,7811,228>",(Scheduler.prototype)); Inst239++; } } catch(e) {}try { if (Inst240 <= 1000 && typeof (Scheduler) != "undefined") {_RecordType("<7792,7801,228>",(Scheduler)); Inst240++; } } catch(e) {}
/**
 * Release a task that is currently blocked and return the next block to run.
 * @param {int} id the id of the task to suspend
 */


Scheduler.prototype.release = function (id) {
try { if (Inst258 <= 1000 && typeof (id) != "undefined") {_RecordType("<8291,8293,246>",(id)); Inst258++; } } catch(e) {}
try { if (Inst260 <= 1000 && typeof (this.blocks[id]) != "undefined") {_RecordType("<8309,8324,247>",(this.blocks[id])); Inst260++; } } catch(e) {}try { if (Inst261 <= 1000 && typeof (this.blocks) != "undefined") {_RecordType("<8309,8320,247>",(this.blocks)); Inst261++; } } catch(e) {}
  var tcb = this.blocks[id];
try { if (Inst259 <= 1000 && typeof (tcb) != "undefined") {_RecordType("<8303,8306,247>",(tcb)); Inst259++; } } catch(e) {}

try { if (Inst262 <= 1000 && typeof (tcb) != "undefined") {_RecordType("<8333,8336,249>",(tcb)); Inst262++; } } catch(e) {}
  if (tcb == null) {
try { if (Inst263 <= 1000 && typeof (tcb) != "undefined") {_RecordType("<8359,8362,250>",(tcb)); Inst263++; } } catch(e) {}
    return tcb;
  }

try { if (Inst264 <= 1000 && typeof (tcb.markAsNotHeld) != "undefined") {_RecordType("<8371,8388,253>",(tcb.markAsNotHeld)); Inst264++; } } catch(e) {}try { if (Inst265 <= 1000 && typeof (tcb) != "undefined") {_RecordType("<8371,8374,253>",(tcb)); Inst265++; } } catch(e) {}
  tcb.markAsNotHeld();

try { if (Inst266 <= 1000 && typeof (tcb.priority) != "undefined") {_RecordType("<8399,8411,255>",(tcb.priority)); Inst266++; } } catch(e) {}try { if (Inst267 <= 1000 && typeof (tcb) != "undefined") {_RecordType("<8399,8402,255>",(tcb)); Inst267++; } } catch(e) {}try { if (Inst268 <= 1000 && typeof (this.currentTcb.priority) != "undefined") {_RecordType("<8414,8438,255>",(this.currentTcb.priority)); Inst268++; } } catch(e) {}try { if (Inst269 <= 1000 && typeof (this.currentTcb) != "undefined") {_RecordType("<8414,8429,255>",(this.currentTcb)); Inst269++; } } catch(e) {}
  if (tcb.priority > this.currentTcb.priority) {
try { if (Inst270 <= 1000 && typeof (tcb) != "undefined") {_RecordType("<8453,8456,256>",(tcb)); Inst270++; } } catch(e) {}
    return tcb;
  } else {
try { if (Inst271 <= 1000 && typeof (this.currentTcb) != "undefined") {_RecordType("<8480,8495,258>",(this.currentTcb)); Inst271++; } } catch(e) {}
    return this.currentTcb;
  }
};
try { if (Inst255 <= 1000 && typeof (Scheduler.prototype.release) != "undefined") {_RecordType("<8251,8278,246>",(Scheduler.prototype.release)); Inst255++; } } catch(e) {}try { if (Inst256 <= 1000 && typeof (Scheduler.prototype) != "undefined") {_RecordType("<8251,8270,246>",(Scheduler.prototype)); Inst256++; } } catch(e) {}try { if (Inst257 <= 1000 && typeof (Scheduler) != "undefined") {_RecordType("<8251,8260,246>",(Scheduler)); Inst257++; } } catch(e) {}
/**
 * Block the currently executing task and return the next task control block
 * to run.  The blocked task will not be made runnable until it is explicitly
 * released, even if new work is added to it.
 */


Scheduler.prototype.holdCurrent = function () {
try { if (Inst275 <= 1000 && typeof (this.holdCount) != "undefined") {_RecordType("<8765,8779,269>",(this.holdCount)); Inst275++; } } catch(e) {}
  this.holdCount++;
try { if (Inst276 <= 1000 && typeof (this.currentTcb.markAsHeld) != "undefined") {_RecordType("<8785,8811,270>",(this.currentTcb.markAsHeld)); Inst276++; } } catch(e) {}try { if (Inst277 <= 1000 && typeof (this.currentTcb) != "undefined") {_RecordType("<8785,8800,270>",(this.currentTcb)); Inst277++; } } catch(e) {}
  this.currentTcb.markAsHeld();
try { if (Inst278 <= 1000 && typeof (this.currentTcb.link) != "undefined") {_RecordType("<8824,8844,271>",(this.currentTcb.link)); Inst278++; } } catch(e) {}try { if (Inst279 <= 1000 && typeof (this.currentTcb) != "undefined") {_RecordType("<8824,8839,271>",(this.currentTcb)); Inst279++; } } catch(e) {}
  return this.currentTcb.link;
};
try { if (Inst272 <= 1000 && typeof (Scheduler.prototype.holdCurrent) != "undefined") {_RecordType("<8715,8746,268>",(Scheduler.prototype.holdCurrent)); Inst272++; } } catch(e) {}try { if (Inst273 <= 1000 && typeof (Scheduler.prototype) != "undefined") {_RecordType("<8715,8734,268>",(Scheduler.prototype)); Inst273++; } } catch(e) {}try { if (Inst274 <= 1000 && typeof (Scheduler) != "undefined") {_RecordType("<8715,8724,268>",(Scheduler)); Inst274++; } } catch(e) {}
/**
 * Suspend the currently executing task and return the next task control block
 * to run.  If new work is added to the suspended task it will be made runnable.
 */


Scheduler.prototype.suspendCurrent = function () {
try { if (Inst283 <= 1000 && typeof (this.currentTcb.markAsSuspended) != "undefined") {_RecordType("<9072,9103,280>",(this.currentTcb.markAsSuspended)); Inst283++; } } catch(e) {}try { if (Inst284 <= 1000 && typeof (this.currentTcb) != "undefined") {_RecordType("<9072,9087,280>",(this.currentTcb)); Inst284++; } } catch(e) {}
  this.currentTcb.markAsSuspended();
try { if (Inst285 <= 1000 && typeof (this.currentTcb) != "undefined") {_RecordType("<9116,9131,281>",(this.currentTcb)); Inst285++; } } catch(e) {}
  return this.currentTcb;
};
try { if (Inst280 <= 1000 && typeof (Scheduler.prototype.suspendCurrent) != "undefined") {_RecordType("<9019,9053,279>",(Scheduler.prototype.suspendCurrent)); Inst280++; } } catch(e) {}try { if (Inst281 <= 1000 && typeof (Scheduler.prototype) != "undefined") {_RecordType("<9019,9038,279>",(Scheduler.prototype)); Inst281++; } } catch(e) {}try { if (Inst282 <= 1000 && typeof (Scheduler) != "undefined") {_RecordType("<9019,9028,279>",(Scheduler)); Inst282++; } } catch(e) {}
/**
 * Add the specified packet to the end of the worklist used by the task
 * associated with the packet and make the task runnable if it is currently
 * suspended.
 * @param {Packet} packet the packet to add
 */


Scheduler.prototype.queue = function (packet) {
try { if (Inst289 <= 1000 && typeof (packet) != "undefined") {_RecordType("<9390,9396,291>",(packet)); Inst289++; } } catch(e) {}
try { if (Inst291 <= 1000 && typeof (this.blocks[packet.id]) != "undefined") {_RecordType("<9410,9432,292>",(this.blocks[packet.id])); Inst291++; } } catch(e) {}try { if (Inst292 <= 1000 && typeof (this.blocks) != "undefined") {_RecordType("<9410,9421,292>",(this.blocks)); Inst292++; } } catch(e) {}try { if (Inst293 <= 1000 && typeof (packet.id) != "undefined") {_RecordType("<9422,9431,292>",(packet.id)); Inst293++; } } catch(e) {}try { if (Inst294 <= 1000 && typeof (packet) != "undefined") {_RecordType("<9422,9428,292>",(packet)); Inst294++; } } catch(e) {}
  var t = this.blocks[packet.id];
try { if (Inst290 <= 1000 && typeof (t) != "undefined") {_RecordType("<9406,9407,292>",(t)); Inst290++; } } catch(e) {}

try { if (Inst295 <= 1000 && typeof (t) != "undefined") {_RecordType("<9441,9442,294>",(t)); Inst295++; } } catch(e) {}
  if (t == null) {
try { if (Inst296 <= 1000 && typeof (t) != "undefined") {_RecordType("<9465,9466,295>",(t)); Inst296++; } } catch(e) {}
    return t;
  }

try { if (Inst297 <= 1000 && typeof (this.queueCount) != "undefined") {_RecordType("<9475,9490,298>",(this.queueCount)); Inst297++; } } catch(e) {}
  this.queueCount++;
  packet.link = null;
try { if (Inst298 <= 1000 && typeof (packet.link) != "undefined") {_RecordType("<9496,9507,299>",(packet.link)); Inst298++; } } catch(e) {}try { if (Inst299 <= 1000 && typeof (packet) != "undefined") {_RecordType("<9496,9502,299>",(packet)); Inst299++; } } catch(e) {}
try { if (Inst302 <= 1000 && typeof (this.currentId) != "undefined") {_RecordType("<9530,9544,300>",(this.currentId)); Inst302++; } } catch(e) {}
  packet.id = this.currentId;
try { if (Inst300 <= 1000 && typeof (packet.id) != "undefined") {_RecordType("<9518,9527,300>",(packet.id)); Inst300++; } } catch(e) {}try { if (Inst301 <= 1000 && typeof (packet) != "undefined") {_RecordType("<9518,9524,300>",(packet)); Inst301++; } } catch(e) {}
try { if (Inst303 <= 1000 && typeof (t.checkPriorityAdd) != "undefined") {_RecordType("<9555,9573,301>",(t.checkPriorityAdd)); Inst303++; } } catch(e) {}try { if (Inst304 <= 1000 && typeof (t) != "undefined") {_RecordType("<9555,9556,301>",(t)); Inst304++; } } catch(e) {}try { if (Inst305 <= 1000 && typeof (this.currentTcb) != "undefined") {_RecordType("<9574,9589,301>",(this.currentTcb)); Inst305++; } } catch(e) {}try { if (Inst306 <= 1000 && typeof (packet) != "undefined") {_RecordType("<9591,9597,301>",(packet)); Inst306++; } } catch(e) {}
  return t.checkPriorityAdd(this.currentTcb, packet);
};
try { if (Inst286 <= 1000 && typeof (Scheduler.prototype.queue) != "undefined") {_RecordType("<9352,9377,291>",(Scheduler.prototype.queue)); Inst286++; } } catch(e) {}try { if (Inst287 <= 1000 && typeof (Scheduler.prototype) != "undefined") {_RecordType("<9352,9371,291>",(Scheduler.prototype)); Inst287++; } } catch(e) {}try { if (Inst288 <= 1000 && typeof (Scheduler) != "undefined") {_RecordType("<9352,9361,291>",(Scheduler)); Inst288++; } } catch(e) {}
/**
 * A task control block manages a task and the queue of work packages associated
 * with it.
 * @param {TaskControlBlock} link the preceding block in the linked block list
 * @param {int} id the id of this block
 * @param {int} priority the priority of this block
 * @param {Packet} queue the queue of packages to be processed by the task
 * @param {Task} task the task
 * @constructor
 */


try { if (Inst307 <= 1000 && typeof (TaskControlBlock) != "undefined") {_RecordType("<10008,10024,315>",(TaskControlBlock)); Inst307++; } } catch(e) {}
function TaskControlBlock(link, id, priority, queue, task) {
try { if (Inst308 <= 1000 && typeof (link) != "undefined") {_RecordType("<10025,10029,315>",(link)); Inst308++; } } catch(e) {}try { if (Inst309 <= 1000 && typeof (id) != "undefined") {_RecordType("<10031,10033,315>",(id)); Inst309++; } } catch(e) {}try { if (Inst310 <= 1000 && typeof (priority) != "undefined") {_RecordType("<10035,10043,315>",(priority)); Inst310++; } } catch(e) {}try { if (Inst311 <= 1000 && typeof (queue) != "undefined") {_RecordType("<10045,10050,315>",(queue)); Inst311++; } } catch(e) {}try { if (Inst312 <= 1000 && typeof (task) != "undefined") {_RecordType("<10052,10056,315>",(task)); Inst312++; } } catch(e) {}
try { if (Inst314 <= 1000 && typeof (link) != "undefined") {_RecordType("<10075,10079,316>",(link)); Inst314++; } } catch(e) {}
  this._link = link;
try { if (Inst313 <= 1000 && typeof (this._link) != "undefined") {_RecordType("<10062,10072,316>",(this._link)); Inst313++; } } catch(e) {}
try { if (Inst316 <= 1000 && typeof (id) != "undefined") {_RecordType("<10094,10096,317>",(id)); Inst316++; } } catch(e) {}
  this._id = id;
try { if (Inst315 <= 1000 && typeof (this._id) != "undefined") {_RecordType("<10083,10091,317>",(this._id)); Inst315++; } } catch(e) {}
try { if (Inst318 <= 1000 && typeof (priority) != "undefined") {_RecordType("<10117,10125,318>",(priority)); Inst318++; } } catch(e) {}
  this._priority = priority;
try { if (Inst317 <= 1000 && typeof (this._priority) != "undefined") {_RecordType("<10100,10114,318>",(this._priority)); Inst317++; } } catch(e) {}
try { if (Inst320 <= 1000 && typeof (queue) != "undefined") {_RecordType("<10143,10148,319>",(queue)); Inst320++; } } catch(e) {}
  this._queue = queue;
try { if (Inst319 <= 1000 && typeof (this._queue) != "undefined") {_RecordType("<10129,10140,319>",(this._queue)); Inst319++; } } catch(e) {}
try { if (Inst322 <= 1000 && typeof (task) != "undefined") {_RecordType("<10165,10169,320>",(task)); Inst322++; } } catch(e) {}
  this._task = task;
try { if (Inst321 <= 1000 && typeof (this._task) != "undefined") {_RecordType("<10152,10162,320>",(this._task)); Inst321++; } } catch(e) {}

try { if (Inst323 <= 1000 && typeof (queue) != "undefined") {_RecordType("<10178,10183,322>",(queue)); Inst323++; } } catch(e) {}
  if (queue == null) {
try { if (Inst325 <= 1000 && typeof (STATE_SUSPENDED) != "undefined") {_RecordType("<10212,10227,323>",(STATE_SUSPENDED)); Inst325++; } } catch(e) {}
    this.state = STATE_SUSPENDED;
try { if (Inst324 <= 1000 && typeof (this.state) != "undefined") {_RecordType("<10199,10209,323>",(this.state)); Inst324++; } } catch(e) {}
  } else {
try { if (Inst327 <= 1000 && typeof (STATE_SUSPENDED_RUNNABLE) != "undefined") {_RecordType("<10257,10281,325>",(STATE_SUSPENDED_RUNNABLE)); Inst327++; } } catch(e) {}
    this.state = STATE_SUSPENDED_RUNNABLE;
try { if (Inst326 <= 1000 && typeof (this.state) != "undefined") {_RecordType("<10244,10254,325>",(this.state)); Inst326++; } } catch(e) {}
  }
}
/**
 * The task is running and is currently scheduled.
 */


var STATE_RUNNING = 0;
try { if (Inst328 <= 1000 && typeof (STATE_RUNNING) != "undefined") {_RecordType("<10354,10367,333>",(STATE_RUNNING)); Inst328++; } } catch(e) {}
/**
 * The task has packets left to process.
 */

var STATE_RUNNABLE = 1;
try { if (Inst329 <= 1000 && typeof (STATE_RUNNABLE) != "undefined") {_RecordType("<10427,10441,338>",(STATE_RUNNABLE)); Inst329++; } } catch(e) {}
/**
 * The task is not currently running.  The task is not blocked as such and may
 * be started by the scheduler.
 */

var STATE_SUSPENDED = 2;
try { if (Inst330 <= 1000 && typeof (STATE_SUSPENDED) != "undefined") {_RecordType("<10571,10586,344>",(STATE_SUSPENDED)); Inst330++; } } catch(e) {}
/**
 * The task is blocked and cannot be run until it is explicitly released.
 */

var STATE_HELD = 4;
try { if (Inst331 <= 1000 && typeof (STATE_HELD) != "undefined") {_RecordType("<10679,10689,349>",(STATE_HELD)); Inst331++; } } catch(e) {}
try { if (Inst333 <= 1000 && typeof (STATE_SUSPENDED) != "undefined") {_RecordType("<10726,10741,350>",(STATE_SUSPENDED)); Inst333++; } } catch(e) {}try { if (Inst334 <= 1000 && typeof (STATE_RUNNABLE) != "undefined") {_RecordType("<10744,10758,350>",(STATE_RUNNABLE)); Inst334++; } } catch(e) {}
var STATE_SUSPENDED_RUNNABLE = STATE_SUSPENDED | STATE_RUNNABLE;
try { if (Inst332 <= 1000 && typeof (STATE_SUSPENDED_RUNNABLE) != "undefined") {_RecordType("<10699,10723,350>",(STATE_SUSPENDED_RUNNABLE)); Inst332++; } } catch(e) {}
try { if (Inst336 <= 1000 && typeof (STATE_HELD) != "undefined") {_RecordType("<10782,10792,351>",(STATE_HELD)); Inst336++; } } catch(e) {}
var STATE_NOT_HELD = ~STATE_HELD;
try { if (Inst335 <= 1000 && typeof (STATE_NOT_HELD) != "undefined") {_RecordType("<10764,10778,351>",(STATE_NOT_HELD)); Inst335++; } } catch(e) {}

try { if (Inst337 <= 1000 && typeof (TaskControlBlock.prototype.__defineGetter__) != "undefined") {_RecordType("<10795,10838,353>",(TaskControlBlock.prototype.__defineGetter__)); Inst337++; } } catch(e) {}try { if (Inst338 <= 1000 && typeof (TaskControlBlock.prototype) != "undefined") {_RecordType("<10795,10821,353>",(TaskControlBlock.prototype)); Inst338++; } } catch(e) {}try { if (Inst339 <= 1000 && typeof (TaskControlBlock) != "undefined") {_RecordType("<10795,10811,353>",(TaskControlBlock)); Inst339++; } } catch(e) {}
TaskControlBlock.prototype.__defineGetter__("link", function () {
try { if (Inst340 <= 1000 && typeof (this._link) != "undefined") {_RecordType("<10870,10880,354>",(this._link)); Inst340++; } } catch(e) {}
  return this._link;
});

try { if (Inst341 <= 1000 && typeof (TaskControlBlock.prototype.__defineGetter__) != "undefined") {_RecordType("<10887,10930,357>",(TaskControlBlock.prototype.__defineGetter__)); Inst341++; } } catch(e) {}try { if (Inst342 <= 1000 && typeof (TaskControlBlock.prototype) != "undefined") {_RecordType("<10887,10913,357>",(TaskControlBlock.prototype)); Inst342++; } } catch(e) {}try { if (Inst343 <= 1000 && typeof (TaskControlBlock) != "undefined") {_RecordType("<10887,10903,357>",(TaskControlBlock)); Inst343++; } } catch(e) {}
TaskControlBlock.prototype.__defineGetter__("id", function () {
try { if (Inst344 <= 1000 && typeof (this._id) != "undefined") {_RecordType("<10960,10968,358>",(this._id)); Inst344++; } } catch(e) {}
  return this._id;
});

try { if (Inst345 <= 1000 && typeof (TaskControlBlock.prototype.__defineGetter__) != "undefined") {_RecordType("<10975,11018,361>",(TaskControlBlock.prototype.__defineGetter__)); Inst345++; } } catch(e) {}try { if (Inst346 <= 1000 && typeof (TaskControlBlock.prototype) != "undefined") {_RecordType("<10975,11001,361>",(TaskControlBlock.prototype)); Inst346++; } } catch(e) {}try { if (Inst347 <= 1000 && typeof (TaskControlBlock) != "undefined") {_RecordType("<10975,10991,361>",(TaskControlBlock)); Inst347++; } } catch(e) {}
TaskControlBlock.prototype.__defineGetter__("priority", function () {
try { if (Inst348 <= 1000 && typeof (this._priority) != "undefined") {_RecordType("<11054,11068,362>",(this._priority)); Inst348++; } } catch(e) {}
  return this._priority;
});

try { if (Inst349 <= 1000 && typeof (TaskControlBlock.prototype.__defineGetter__) != "undefined") {_RecordType("<11075,11118,365>",(TaskControlBlock.prototype.__defineGetter__)); Inst349++; } } catch(e) {}try { if (Inst350 <= 1000 && typeof (TaskControlBlock.prototype) != "undefined") {_RecordType("<11075,11101,365>",(TaskControlBlock.prototype)); Inst350++; } } catch(e) {}try { if (Inst351 <= 1000 && typeof (TaskControlBlock) != "undefined") {_RecordType("<11075,11091,365>",(TaskControlBlock)); Inst351++; } } catch(e) {}
TaskControlBlock.prototype.__defineGetter__("queue", function () {
try { if (Inst352 <= 1000 && typeof (this._queue) != "undefined") {_RecordType("<11151,11162,366>",(this._queue)); Inst352++; } } catch(e) {}
  return this._queue;
});

try { if (Inst353 <= 1000 && typeof (TaskControlBlock.prototype.__defineSetter__) != "undefined") {_RecordType("<11169,11212,369>",(TaskControlBlock.prototype.__defineSetter__)); Inst353++; } } catch(e) {}try { if (Inst354 <= 1000 && typeof (TaskControlBlock.prototype) != "undefined") {_RecordType("<11169,11195,369>",(TaskControlBlock.prototype)); Inst354++; } } catch(e) {}try { if (Inst355 <= 1000 && typeof (TaskControlBlock) != "undefined") {_RecordType("<11169,11185,369>",(TaskControlBlock)); Inst355++; } } catch(e) {}
TaskControlBlock.prototype.__defineSetter__("queue", function (value) {
try { if (Inst356 <= 1000 && typeof (value) != "undefined") {_RecordType("<11232,11237,369>",(value)); Inst356++; } } catch(e) {}
try { if (Inst358 <= 1000 && typeof (value) != "undefined") {_RecordType("<11257,11262,370>",(value)); Inst358++; } } catch(e) {}
  this._queue = value;
try { if (Inst357 <= 1000 && typeof (this._queue) != "undefined") {_RecordType("<11243,11254,370>",(this._queue)); Inst357++; } } catch(e) {}
});

try { if (Inst359 <= 1000 && typeof (TaskControlBlock.prototype.__defineGetter__) != "undefined") {_RecordType("<11269,11312,373>",(TaskControlBlock.prototype.__defineGetter__)); Inst359++; } } catch(e) {}try { if (Inst360 <= 1000 && typeof (TaskControlBlock.prototype) != "undefined") {_RecordType("<11269,11295,373>",(TaskControlBlock.prototype)); Inst360++; } } catch(e) {}try { if (Inst361 <= 1000 && typeof (TaskControlBlock) != "undefined") {_RecordType("<11269,11285,373>",(TaskControlBlock)); Inst361++; } } catch(e) {}
TaskControlBlock.prototype.__defineGetter__("task", function () {
try { if (Inst362 <= 1000 && typeof (this._task) != "undefined") {_RecordType("<11344,11354,374>",(this._task)); Inst362++; } } catch(e) {}
  return this._task;
});

try { if (Inst363 <= 1000 && typeof (TaskControlBlock.prototype.__defineGetter__) != "undefined") {_RecordType("<11361,11404,377>",(TaskControlBlock.prototype.__defineGetter__)); Inst363++; } } catch(e) {}try { if (Inst364 <= 1000 && typeof (TaskControlBlock.prototype) != "undefined") {_RecordType("<11361,11387,377>",(TaskControlBlock.prototype)); Inst364++; } } catch(e) {}try { if (Inst365 <= 1000 && typeof (TaskControlBlock) != "undefined") {_RecordType("<11361,11377,377>",(TaskControlBlock)); Inst365++; } } catch(e) {}
TaskControlBlock.prototype.__defineGetter__("state", function () {
try { if (Inst366 <= 1000 && typeof (this._state) != "undefined") {_RecordType("<11437,11448,378>",(this._state)); Inst366++; } } catch(e) {}
  return this._state;
});

try { if (Inst367 <= 1000 && typeof (TaskControlBlock.prototype.__defineSetter__) != "undefined") {_RecordType("<11455,11498,381>",(TaskControlBlock.prototype.__defineSetter__)); Inst367++; } } catch(e) {}try { if (Inst368 <= 1000 && typeof (TaskControlBlock.prototype) != "undefined") {_RecordType("<11455,11481,381>",(TaskControlBlock.prototype)); Inst368++; } } catch(e) {}try { if (Inst369 <= 1000 && typeof (TaskControlBlock) != "undefined") {_RecordType("<11455,11471,381>",(TaskControlBlock)); Inst369++; } } catch(e) {}
TaskControlBlock.prototype.__defineSetter__("state", function (value) {
try { if (Inst370 <= 1000 && typeof (value) != "undefined") {_RecordType("<11518,11523,381>",(value)); Inst370++; } } catch(e) {}
try { if (Inst372 <= 1000 && typeof (value) != "undefined") {_RecordType("<11543,11548,382>",(value)); Inst372++; } } catch(e) {}
  this._state = value;
try { if (Inst371 <= 1000 && typeof (this._state) != "undefined") {_RecordType("<11529,11540,382>",(this._state)); Inst371++; } } catch(e) {}
});

TaskControlBlock.prototype.setRunning = function () {
try { if (Inst377 <= 1000 && typeof (STATE_RUNNING) != "undefined") {_RecordType("<11624,11637,386>",(STATE_RUNNING)); Inst377++; } } catch(e) {}
  this.state = STATE_RUNNING;
try { if (Inst376 <= 1000 && typeof (this.state) != "undefined") {_RecordType("<11611,11621,386>",(this.state)); Inst376++; } } catch(e) {}
};
try { if (Inst373 <= 1000 && typeof (TaskControlBlock.prototype.setRunning) != "undefined") {_RecordType("<11555,11592,385>",(TaskControlBlock.prototype.setRunning)); Inst373++; } } catch(e) {}try { if (Inst374 <= 1000 && typeof (TaskControlBlock.prototype) != "undefined") {_RecordType("<11555,11581,385>",(TaskControlBlock.prototype)); Inst374++; } } catch(e) {}try { if (Inst375 <= 1000 && typeof (TaskControlBlock) != "undefined") {_RecordType("<11555,11571,385>",(TaskControlBlock)); Inst375++; } } catch(e) {}

TaskControlBlock.prototype.markAsNotHeld = function () {
try { if (Inst382 <= 1000 && typeof (this.state) != "undefined") {_RecordType("<11715,11725,390>",(this.state)); Inst382++; } } catch(e) {}try { if (Inst383 <= 1000 && typeof (STATE_NOT_HELD) != "undefined") {_RecordType("<11728,11742,390>",(STATE_NOT_HELD)); Inst383++; } } catch(e) {}
  this.state = this.state & STATE_NOT_HELD;
try { if (Inst381 <= 1000 && typeof (this.state) != "undefined") {_RecordType("<11702,11712,390>",(this.state)); Inst381++; } } catch(e) {}
};
try { if (Inst378 <= 1000 && typeof (TaskControlBlock.prototype.markAsNotHeld) != "undefined") {_RecordType("<11643,11683,389>",(TaskControlBlock.prototype.markAsNotHeld)); Inst378++; } } catch(e) {}try { if (Inst379 <= 1000 && typeof (TaskControlBlock.prototype) != "undefined") {_RecordType("<11643,11669,389>",(TaskControlBlock.prototype)); Inst379++; } } catch(e) {}try { if (Inst380 <= 1000 && typeof (TaskControlBlock) != "undefined") {_RecordType("<11643,11659,389>",(TaskControlBlock)); Inst380++; } } catch(e) {}

TaskControlBlock.prototype.markAsHeld = function () {
try { if (Inst388 <= 1000 && typeof (this.state) != "undefined") {_RecordType("<11817,11827,394>",(this.state)); Inst388++; } } catch(e) {}try { if (Inst389 <= 1000 && typeof (STATE_HELD) != "undefined") {_RecordType("<11830,11840,394>",(STATE_HELD)); Inst389++; } } catch(e) {}
  this.state = this.state | STATE_HELD;
try { if (Inst387 <= 1000 && typeof (this.state) != "undefined") {_RecordType("<11804,11814,394>",(this.state)); Inst387++; } } catch(e) {}
};
try { if (Inst384 <= 1000 && typeof (TaskControlBlock.prototype.markAsHeld) != "undefined") {_RecordType("<11748,11785,393>",(TaskControlBlock.prototype.markAsHeld)); Inst384++; } } catch(e) {}try { if (Inst385 <= 1000 && typeof (TaskControlBlock.prototype) != "undefined") {_RecordType("<11748,11774,393>",(TaskControlBlock.prototype)); Inst385++; } } catch(e) {}try { if (Inst386 <= 1000 && typeof (TaskControlBlock) != "undefined") {_RecordType("<11748,11764,393>",(TaskControlBlock)); Inst386++; } } catch(e) {}

TaskControlBlock.prototype.isHeldOrSuspended = function () {
try { if (Inst393 <= 1000 && typeof (this.state) != "undefined") {_RecordType("<11917,11927,398>",(this.state)); Inst393++; } } catch(e) {}try { if (Inst394 <= 1000 && typeof (STATE_HELD) != "undefined") {_RecordType("<11930,11940,398>",(STATE_HELD)); Inst394++; } } catch(e) {}try { if (Inst395 <= 1000 && typeof (this.state) != "undefined") {_RecordType("<11950,11960,398>",(this.state)); Inst395++; } } catch(e) {}try { if (Inst396 <= 1000 && typeof (STATE_SUSPENDED) != "undefined") {_RecordType("<11964,11979,398>",(STATE_SUSPENDED)); Inst396++; } } catch(e) {}
  return (this.state & STATE_HELD) != 0 || this.state == STATE_SUSPENDED;
};
try { if (Inst390 <= 1000 && typeof (TaskControlBlock.prototype.isHeldOrSuspended) != "undefined") {_RecordType("<11846,11890,397>",(TaskControlBlock.prototype.isHeldOrSuspended)); Inst390++; } } catch(e) {}try { if (Inst391 <= 1000 && typeof (TaskControlBlock.prototype) != "undefined") {_RecordType("<11846,11872,397>",(TaskControlBlock.prototype)); Inst391++; } } catch(e) {}try { if (Inst392 <= 1000 && typeof (TaskControlBlock) != "undefined") {_RecordType("<11846,11862,397>",(TaskControlBlock)); Inst392++; } } catch(e) {}

TaskControlBlock.prototype.markAsSuspended = function () {
try { if (Inst401 <= 1000 && typeof (this.state) != "undefined") {_RecordType("<12059,12069,402>",(this.state)); Inst401++; } } catch(e) {}try { if (Inst402 <= 1000 && typeof (STATE_SUSPENDED) != "undefined") {_RecordType("<12072,12087,402>",(STATE_SUSPENDED)); Inst402++; } } catch(e) {}
  this.state = this.state | STATE_SUSPENDED;
try { if (Inst400 <= 1000 && typeof (this.state) != "undefined") {_RecordType("<12046,12056,402>",(this.state)); Inst400++; } } catch(e) {}
};
try { if (Inst397 <= 1000 && typeof (TaskControlBlock.prototype.markAsSuspended) != "undefined") {_RecordType("<11985,12027,401>",(TaskControlBlock.prototype.markAsSuspended)); Inst397++; } } catch(e) {}try { if (Inst398 <= 1000 && typeof (TaskControlBlock.prototype) != "undefined") {_RecordType("<11985,12011,401>",(TaskControlBlock.prototype)); Inst398++; } } catch(e) {}try { if (Inst399 <= 1000 && typeof (TaskControlBlock) != "undefined") {_RecordType("<11985,12001,401>",(TaskControlBlock)); Inst399++; } } catch(e) {}

TaskControlBlock.prototype.markAsRunnable = function () {
try { if (Inst407 <= 1000 && typeof (this.state) != "undefined") {_RecordType("<12166,12176,406>",(this.state)); Inst407++; } } catch(e) {}try { if (Inst408 <= 1000 && typeof (STATE_RUNNABLE) != "undefined") {_RecordType("<12179,12193,406>",(STATE_RUNNABLE)); Inst408++; } } catch(e) {}
  this.state = this.state | STATE_RUNNABLE;
try { if (Inst406 <= 1000 && typeof (this.state) != "undefined") {_RecordType("<12153,12163,406>",(this.state)); Inst406++; } } catch(e) {}
};
try { if (Inst403 <= 1000 && typeof (TaskControlBlock.prototype.markAsRunnable) != "undefined") {_RecordType("<12093,12134,405>",(TaskControlBlock.prototype.markAsRunnable)); Inst403++; } } catch(e) {}try { if (Inst404 <= 1000 && typeof (TaskControlBlock.prototype) != "undefined") {_RecordType("<12093,12119,405>",(TaskControlBlock.prototype)); Inst404++; } } catch(e) {}try { if (Inst405 <= 1000 && typeof (TaskControlBlock) != "undefined") {_RecordType("<12093,12109,405>",(TaskControlBlock)); Inst405++; } } catch(e) {}
/**
 * Runs this task, if it is ready to be run, and returns the next task to run.
 */


TaskControlBlock.prototype.run = function () {
  var packet;
try { if (Inst412 <= 1000 && typeof (packet) != "undefined") {_RecordType("<12340,12346,414>",(packet)); Inst412++; } } catch(e) {}

try { if (Inst413 <= 1000 && typeof (this.state) != "undefined") {_RecordType("<12355,12365,416>",(this.state)); Inst413++; } } catch(e) {}try { if (Inst414 <= 1000 && typeof (STATE_SUSPENDED_RUNNABLE) != "undefined") {_RecordType("<12369,12393,416>",(STATE_SUSPENDED_RUNNABLE)); Inst414++; } } catch(e) {}
  if (this.state == STATE_SUSPENDED_RUNNABLE) {
try { if (Inst416 <= 1000 && typeof (this.queue) != "undefined") {_RecordType("<12410,12420,417>",(this.queue)); Inst416++; } } catch(e) {}
    packet = this.queue;
try { if (Inst415 <= 1000 && typeof (packet) != "undefined") {_RecordType("<12401,12407,417>",(packet)); Inst415++; } } catch(e) {}
try { if (Inst418 <= 1000 && typeof (packet.link) != "undefined") {_RecordType("<12439,12450,418>",(packet.link)); Inst418++; } } catch(e) {}try { if (Inst419 <= 1000 && typeof (packet) != "undefined") {_RecordType("<12439,12445,418>",(packet)); Inst419++; } } catch(e) {}
    this.queue = packet.link;
try { if (Inst417 <= 1000 && typeof (this.queue) != "undefined") {_RecordType("<12426,12436,418>",(this.queue)); Inst417++; } } catch(e) {}

try { if (Inst420 <= 1000 && typeof (this.queue) != "undefined") {_RecordType("<12461,12471,420>",(this.queue)); Inst420++; } } catch(e) {}
    if (this.queue == null) {
try { if (Inst422 <= 1000 && typeof (STATE_RUNNING) != "undefined") {_RecordType("<12502,12515,421>",(STATE_RUNNING)); Inst422++; } } catch(e) {}
      this.state = STATE_RUNNING;
try { if (Inst421 <= 1000 && typeof (this.state) != "undefined") {_RecordType("<12489,12499,421>",(this.state)); Inst421++; } } catch(e) {}
    } else {
try { if (Inst424 <= 1000 && typeof (STATE_RUNNABLE) != "undefined") {_RecordType("<12549,12563,423>",(STATE_RUNNABLE)); Inst424++; } } catch(e) {}
      this.state = STATE_RUNNABLE;
try { if (Inst423 <= 1000 && typeof (this.state) != "undefined") {_RecordType("<12536,12546,423>",(this.state)); Inst423++; } } catch(e) {}
    }
  } else {
    packet = null;
try { if (Inst425 <= 1000 && typeof (packet) != "undefined") {_RecordType("<12586,12592,426>",(packet)); Inst425++; } } catch(e) {}
  }

try { if (Inst426 <= 1000 && typeof (this.task.run) != "undefined") {_RecordType("<12615,12628,429>",(this.task.run)); Inst426++; } } catch(e) {}try { if (Inst427 <= 1000 && typeof (this.task) != "undefined") {_RecordType("<12615,12624,429>",(this.task)); Inst427++; } } catch(e) {}try { if (Inst428 <= 1000 && typeof (packet) != "undefined") {_RecordType("<12629,12635,429>",(packet)); Inst428++; } } catch(e) {}
  return this.task.run(packet);
};
try { if (Inst409 <= 1000 && typeof (TaskControlBlock.prototype.run) != "undefined") {_RecordType("<12287,12317,413>",(TaskControlBlock.prototype.run)); Inst409++; } } catch(e) {}try { if (Inst410 <= 1000 && typeof (TaskControlBlock.prototype) != "undefined") {_RecordType("<12287,12313,413>",(TaskControlBlock.prototype)); Inst410++; } } catch(e) {}try { if (Inst411 <= 1000 && typeof (TaskControlBlock) != "undefined") {_RecordType("<12287,12303,413>",(TaskControlBlock)); Inst411++; } } catch(e) {}
/**
 * Adds a packet to the worklist of this block's task, marks this as runnable if
 * necessary, and returns the next runnable object to run (the one
 * with the highest priority).
 */


TaskControlBlock.prototype.checkPriorityAdd = function (task, packet) {
try { if (Inst432 <= 1000 && typeof (task) != "undefined") {_RecordType("<12886,12890,438>",(task)); Inst432++; } } catch(e) {}try { if (Inst433 <= 1000 && typeof (packet) != "undefined") {_RecordType("<12892,12898,438>",(packet)); Inst433++; } } catch(e) {}
try { if (Inst434 <= 1000 && typeof (this.queue) != "undefined") {_RecordType("<12908,12918,439>",(this.queue)); Inst434++; } } catch(e) {}
  if (this.queue == null) {
try { if (Inst436 <= 1000 && typeof (packet) != "undefined") {_RecordType("<12947,12953,440>",(packet)); Inst436++; } } catch(e) {}
    this.queue = packet;
try { if (Inst435 <= 1000 && typeof (this.queue) != "undefined") {_RecordType("<12934,12944,440>",(this.queue)); Inst435++; } } catch(e) {}
try { if (Inst437 <= 1000 && typeof (this.markAsRunnable) != "undefined") {_RecordType("<12959,12978,441>",(this.markAsRunnable)); Inst437++; } } catch(e) {}
    this.markAsRunnable();

try { if (Inst438 <= 1000 && typeof (this.priority) != "undefined") {_RecordType("<12991,13004,443>",(this.priority)); Inst438++; } } catch(e) {}try { if (Inst439 <= 1000 && typeof (task.priority) != "undefined") {_RecordType("<13007,13020,443>",(task.priority)); Inst439++; } } catch(e) {}try { if (Inst440 <= 1000 && typeof (task) != "undefined") {_RecordType("<13007,13011,443>",(task)); Inst440++; } } catch(e) {}
    if (this.priority > task.priority) {
      return this;
    }
  } else {
try { if (Inst442 <= 1000 && typeof (packet.addTo) != "undefined") {_RecordType("<13077,13089,447>",(packet.addTo)); Inst442++; } } catch(e) {}try { if (Inst443 <= 1000 && typeof (packet) != "undefined") {_RecordType("<13077,13083,447>",(packet)); Inst443++; } } catch(e) {}try { if (Inst444 <= 1000 && typeof (this.queue) != "undefined") {_RecordType("<13090,13100,447>",(this.queue)); Inst444++; } } catch(e) {}
    this.queue = packet.addTo(this.queue);
try { if (Inst441 <= 1000 && typeof (this.queue) != "undefined") {_RecordType("<13064,13074,447>",(this.queue)); Inst441++; } } catch(e) {}
  }

try { if (Inst445 <= 1000 && typeof (task) != "undefined") {_RecordType("<13117,13121,450>",(task)); Inst445++; } } catch(e) {}
  return task;
};
try { if (Inst429 <= 1000 && typeof (TaskControlBlock.prototype.checkPriorityAdd) != "undefined") {_RecordType("<12830,12873,438>",(TaskControlBlock.prototype.checkPriorityAdd)); Inst429++; } } catch(e) {}try { if (Inst430 <= 1000 && typeof (TaskControlBlock.prototype) != "undefined") {_RecordType("<12830,12856,438>",(TaskControlBlock.prototype)); Inst430++; } } catch(e) {}try { if (Inst431 <= 1000 && typeof (TaskControlBlock) != "undefined") {_RecordType("<12830,12846,438>",(TaskControlBlock)); Inst431++; } } catch(e) {}

TaskControlBlock.prototype.toString = function () {
try { if (Inst449 <= 1000 && typeof (this.task) != "undefined") {_RecordType("<13199,13208,454>",(this.task)); Inst449++; } } catch(e) {}try { if (Inst450 <= 1000 && typeof (this.state) != "undefined") {_RecordType("<13217,13227,454>",(this.state)); Inst450++; } } catch(e) {}
  return "tcb { " + this.task + "@" + this.state + " }";
};
try { if (Inst446 <= 1000 && typeof (TaskControlBlock.prototype.toString) != "undefined") {_RecordType("<13127,13162,453>",(TaskControlBlock.prototype.toString)); Inst446++; } } catch(e) {}try { if (Inst447 <= 1000 && typeof (TaskControlBlock.prototype) != "undefined") {_RecordType("<13127,13153,453>",(TaskControlBlock.prototype)); Inst447++; } } catch(e) {}try { if (Inst448 <= 1000 && typeof (TaskControlBlock) != "undefined") {_RecordType("<13127,13143,453>",(TaskControlBlock)); Inst448++; } } catch(e) {}
/**
 * An idle task doesn't do any work itself but cycles control between the two
 * device tasks.
 * @param {Scheduler} scheduler the scheduler that manages this task
 * @param {int} v1 a seed value that controls how the device tasks are scheduled
 * @param {int} count the number of times this task should be scheduled
 * @constructor
 */


try { if (Inst451 <= 1000 && typeof (IdleTask) != "undefined") {_RecordType("<13591,13599,466>",(IdleTask)); Inst451++; } } catch(e) {}
function IdleTask(scheduler, v1, count) {
try { if (Inst452 <= 1000 && typeof (scheduler) != "undefined") {_RecordType("<13600,13609,466>",(scheduler)); Inst452++; } } catch(e) {}try { if (Inst453 <= 1000 && typeof (v1) != "undefined") {_RecordType("<13611,13613,466>",(v1)); Inst453++; } } catch(e) {}try { if (Inst454 <= 1000 && typeof (count) != "undefined") {_RecordType("<13615,13620,466>",(count)); Inst454++; } } catch(e) {}
try { if (Inst456 <= 1000 && typeof (scheduler) != "undefined") {_RecordType("<13644,13653,467>",(scheduler)); Inst456++; } } catch(e) {}
  this._scheduler = scheduler;
try { if (Inst455 <= 1000 && typeof (this._scheduler) != "undefined") {_RecordType("<13626,13641,467>",(this._scheduler)); Inst455++; } } catch(e) {}
try { if (Inst458 <= 1000 && typeof (v1) != "undefined") {_RecordType("<13668,13670,468>",(v1)); Inst458++; } } catch(e) {}
  this._v1 = v1;
try { if (Inst457 <= 1000 && typeof (this._v1) != "undefined") {_RecordType("<13657,13665,468>",(this._v1)); Inst457++; } } catch(e) {}
try { if (Inst460 <= 1000 && typeof (count) != "undefined") {_RecordType("<13688,13693,469>",(count)); Inst460++; } } catch(e) {}
  this._count = count;
try { if (Inst459 <= 1000 && typeof (this._count) != "undefined") {_RecordType("<13674,13685,469>",(this._count)); Inst459++; } } catch(e) {}
}

try { if (Inst461 <= 1000 && typeof (IdleTask.prototype.__defineGetter__) != "undefined") {_RecordType("<13698,13733,472>",(IdleTask.prototype.__defineGetter__)); Inst461++; } } catch(e) {}try { if (Inst462 <= 1000 && typeof (IdleTask.prototype) != "undefined") {_RecordType("<13698,13716,472>",(IdleTask.prototype)); Inst462++; } } catch(e) {}try { if (Inst463 <= 1000 && typeof (IdleTask) != "undefined") {_RecordType("<13698,13706,472>",(IdleTask)); Inst463++; } } catch(e) {}
IdleTask.prototype.__defineGetter__("scheduler", function () {
try { if (Inst464 <= 1000 && typeof (this._scheduler) != "undefined") {_RecordType("<13770,13785,473>",(this._scheduler)); Inst464++; } } catch(e) {}
  return this._scheduler;
});

try { if (Inst465 <= 1000 && typeof (IdleTask.prototype.__defineGetter__) != "undefined") {_RecordType("<13792,13827,476>",(IdleTask.prototype.__defineGetter__)); Inst465++; } } catch(e) {}try { if (Inst466 <= 1000 && typeof (IdleTask.prototype) != "undefined") {_RecordType("<13792,13810,476>",(IdleTask.prototype)); Inst466++; } } catch(e) {}try { if (Inst467 <= 1000 && typeof (IdleTask) != "undefined") {_RecordType("<13792,13800,476>",(IdleTask)); Inst467++; } } catch(e) {}
IdleTask.prototype.__defineGetter__("v1", function () {
try { if (Inst468 <= 1000 && typeof (this._v1) != "undefined") {_RecordType("<13857,13865,477>",(this._v1)); Inst468++; } } catch(e) {}
  return this._v1;
});

try { if (Inst469 <= 1000 && typeof (IdleTask.prototype.__defineSetter__) != "undefined") {_RecordType("<13872,13907,480>",(IdleTask.prototype.__defineSetter__)); Inst469++; } } catch(e) {}try { if (Inst470 <= 1000 && typeof (IdleTask.prototype) != "undefined") {_RecordType("<13872,13890,480>",(IdleTask.prototype)); Inst470++; } } catch(e) {}try { if (Inst471 <= 1000 && typeof (IdleTask) != "undefined") {_RecordType("<13872,13880,480>",(IdleTask)); Inst471++; } } catch(e) {}
IdleTask.prototype.__defineSetter__("v1", function (value) {
try { if (Inst472 <= 1000 && typeof (value) != "undefined") {_RecordType("<13924,13929,480>",(value)); Inst472++; } } catch(e) {}
try { if (Inst474 <= 1000 && typeof (value) != "undefined") {_RecordType("<13946,13951,481>",(value)); Inst474++; } } catch(e) {}
  this._v1 = value;
try { if (Inst473 <= 1000 && typeof (this._v1) != "undefined") {_RecordType("<13935,13943,481>",(this._v1)); Inst473++; } } catch(e) {}
});

try { if (Inst475 <= 1000 && typeof (IdleTask.prototype.__defineGetter__) != "undefined") {_RecordType("<13958,13993,484>",(IdleTask.prototype.__defineGetter__)); Inst475++; } } catch(e) {}try { if (Inst476 <= 1000 && typeof (IdleTask.prototype) != "undefined") {_RecordType("<13958,13976,484>",(IdleTask.prototype)); Inst476++; } } catch(e) {}try { if (Inst477 <= 1000 && typeof (IdleTask) != "undefined") {_RecordType("<13958,13966,484>",(IdleTask)); Inst477++; } } catch(e) {}
IdleTask.prototype.__defineGetter__("count", function () {
try { if (Inst478 <= 1000 && typeof (this._count) != "undefined") {_RecordType("<14026,14037,485>",(this._count)); Inst478++; } } catch(e) {}
  return this._count;
});

try { if (Inst479 <= 1000 && typeof (IdleTask.prototype.__defineSetter__) != "undefined") {_RecordType("<14044,14079,488>",(IdleTask.prototype.__defineSetter__)); Inst479++; } } catch(e) {}try { if (Inst480 <= 1000 && typeof (IdleTask.prototype) != "undefined") {_RecordType("<14044,14062,488>",(IdleTask.prototype)); Inst480++; } } catch(e) {}try { if (Inst481 <= 1000 && typeof (IdleTask) != "undefined") {_RecordType("<14044,14052,488>",(IdleTask)); Inst481++; } } catch(e) {}
IdleTask.prototype.__defineSetter__("count", function (value) {
try { if (Inst482 <= 1000 && typeof (value) != "undefined") {_RecordType("<14099,14104,488>",(value)); Inst482++; } } catch(e) {}
try { if (Inst484 <= 1000 && typeof (value) != "undefined") {_RecordType("<14124,14129,489>",(value)); Inst484++; } } catch(e) {}
  this._count = value;
try { if (Inst483 <= 1000 && typeof (this._count) != "undefined") {_RecordType("<14110,14121,489>",(this._count)); Inst483++; } } catch(e) {}
});

IdleTask.prototype.run = function (packet) {
try { if (Inst488 <= 1000 && typeof (packet) != "undefined") {_RecordType("<14171,14177,492>",(packet)); Inst488++; } } catch(e) {}
try { if (Inst489 <= 1000 && typeof (this.count) != "undefined") {_RecordType("<14183,14193,493>",(this.count)); Inst489++; } } catch(e) {}
  this.count--;

try { if (Inst490 <= 1000 && typeof (this.count) != "undefined") {_RecordType("<14204,14214,495>",(this.count)); Inst490++; } } catch(e) {}
  if (this.count == 0) {
try { if (Inst491 <= 1000 && typeof (this.scheduler.holdCurrent) != "undefined") {_RecordType("<14234,14260,496>",(this.scheduler.holdCurrent)); Inst491++; } } catch(e) {}try { if (Inst492 <= 1000 && typeof (this.scheduler) != "undefined") {_RecordType("<14234,14248,496>",(this.scheduler)); Inst492++; } } catch(e) {}
    return this.scheduler.holdCurrent();
  }

try { if (Inst493 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<14276,14283,499>",(this.v1)); Inst493++; } } catch(e) {}
  if ((this.v1 & 1) == 0) {
try { if (Inst495 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<14311,14318,500>",(this.v1)); Inst495++; } } catch(e) {}
    this.v1 = this.v1 >> 1;
try { if (Inst494 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<14301,14308,500>",(this.v1)); Inst494++; } } catch(e) {}
try { if (Inst496 <= 1000 && typeof (this.scheduler.release) != "undefined") {_RecordType("<14336,14358,501>",(this.scheduler.release)); Inst496++; } } catch(e) {}try { if (Inst497 <= 1000 && typeof (this.scheduler) != "undefined") {_RecordType("<14336,14350,501>",(this.scheduler)); Inst497++; } } catch(e) {}try { if (Inst498 <= 1000 && typeof (ID_DEVICE_A) != "undefined") {_RecordType("<14359,14370,501>",(ID_DEVICE_A)); Inst498++; } } catch(e) {}
    return this.scheduler.release(ID_DEVICE_A);
  } else {
try { if (Inst500 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<14398,14405,503>",(this.v1)); Inst500++; } } catch(e) {}
    this.v1 = this.v1 >> 1 ^ 0xD008;
try { if (Inst499 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<14388,14395,503>",(this.v1)); Inst499++; } } catch(e) {}
try { if (Inst501 <= 1000 && typeof (this.scheduler.release) != "undefined") {_RecordType("<14432,14454,504>",(this.scheduler.release)); Inst501++; } } catch(e) {}try { if (Inst502 <= 1000 && typeof (this.scheduler) != "undefined") {_RecordType("<14432,14446,504>",(this.scheduler)); Inst502++; } } catch(e) {}try { if (Inst503 <= 1000 && typeof (ID_DEVICE_B) != "undefined") {_RecordType("<14455,14466,504>",(ID_DEVICE_B)); Inst503++; } } catch(e) {}
    return this.scheduler.release(ID_DEVICE_B);
  }
};
try { if (Inst485 <= 1000 && typeof (IdleTask.prototype.run) != "undefined") {_RecordType("<14136,14158,492>",(IdleTask.prototype.run)); Inst485++; } } catch(e) {}try { if (Inst486 <= 1000 && typeof (IdleTask.prototype) != "undefined") {_RecordType("<14136,14154,492>",(IdleTask.prototype)); Inst486++; } } catch(e) {}try { if (Inst487 <= 1000 && typeof (IdleTask) != "undefined") {_RecordType("<14136,14144,492>",(IdleTask)); Inst487++; } } catch(e) {}

IdleTask.prototype.toString = function () {
  return "IdleTask";
};
try { if (Inst504 <= 1000 && typeof (IdleTask.prototype.toString) != "undefined") {_RecordType("<14477,14504,508>",(IdleTask.prototype.toString)); Inst504++; } } catch(e) {}try { if (Inst505 <= 1000 && typeof (IdleTask.prototype) != "undefined") {_RecordType("<14477,14495,508>",(IdleTask.prototype)); Inst505++; } } catch(e) {}try { if (Inst506 <= 1000 && typeof (IdleTask) != "undefined") {_RecordType("<14477,14485,508>",(IdleTask)); Inst506++; } } catch(e) {}
/**
 * A task that suspends itself after each time it has been run to simulate
 * waiting for data from an external device.
 * @param {Scheduler} scheduler the scheduler that manages this task
 * @constructor
 */


try { if (Inst507 <= 1000 && typeof (DeviceTask) != "undefined") {_RecordType("<14769,14779,519>",(DeviceTask)); Inst507++; } } catch(e) {}
function DeviceTask(scheduler) {
try { if (Inst508 <= 1000 && typeof (scheduler) != "undefined") {_RecordType("<14780,14789,519>",(scheduler)); Inst508++; } } catch(e) {}
try { if (Inst510 <= 1000 && typeof (scheduler) != "undefined") {_RecordType("<14813,14822,520>",(scheduler)); Inst510++; } } catch(e) {}
  this._scheduler = scheduler;
try { if (Inst509 <= 1000 && typeof (this._scheduler) != "undefined") {_RecordType("<14795,14810,520>",(this._scheduler)); Inst509++; } } catch(e) {}
  this._v1 = null;
try { if (Inst511 <= 1000 && typeof (this._v1) != "undefined") {_RecordType("<14826,14834,521>",(this._v1)); Inst511++; } } catch(e) {}
}

try { if (Inst512 <= 1000 && typeof (DeviceTask.prototype.__defineGetter__) != "undefined") {_RecordType("<14846,14883,524>",(DeviceTask.prototype.__defineGetter__)); Inst512++; } } catch(e) {}try { if (Inst513 <= 1000 && typeof (DeviceTask.prototype) != "undefined") {_RecordType("<14846,14866,524>",(DeviceTask.prototype)); Inst513++; } } catch(e) {}try { if (Inst514 <= 1000 && typeof (DeviceTask) != "undefined") {_RecordType("<14846,14856,524>",(DeviceTask)); Inst514++; } } catch(e) {}
DeviceTask.prototype.__defineGetter__("scheduler", function () {
try { if (Inst515 <= 1000 && typeof (this._scheduler) != "undefined") {_RecordType("<14920,14935,525>",(this._scheduler)); Inst515++; } } catch(e) {}
  return this._scheduler;
});

try { if (Inst516 <= 1000 && typeof (DeviceTask.prototype.__defineGetter__) != "undefined") {_RecordType("<14942,14979,528>",(DeviceTask.prototype.__defineGetter__)); Inst516++; } } catch(e) {}try { if (Inst517 <= 1000 && typeof (DeviceTask.prototype) != "undefined") {_RecordType("<14942,14962,528>",(DeviceTask.prototype)); Inst517++; } } catch(e) {}try { if (Inst518 <= 1000 && typeof (DeviceTask) != "undefined") {_RecordType("<14942,14952,528>",(DeviceTask)); Inst518++; } } catch(e) {}
DeviceTask.prototype.__defineGetter__("v1", function () {
try { if (Inst519 <= 1000 && typeof (this._v1) != "undefined") {_RecordType("<15009,15017,529>",(this._v1)); Inst519++; } } catch(e) {}
  return this._v1;
});

try { if (Inst520 <= 1000 && typeof (DeviceTask.prototype.__defineSetter__) != "undefined") {_RecordType("<15024,15061,532>",(DeviceTask.prototype.__defineSetter__)); Inst520++; } } catch(e) {}try { if (Inst521 <= 1000 && typeof (DeviceTask.prototype) != "undefined") {_RecordType("<15024,15044,532>",(DeviceTask.prototype)); Inst521++; } } catch(e) {}try { if (Inst522 <= 1000 && typeof (DeviceTask) != "undefined") {_RecordType("<15024,15034,532>",(DeviceTask)); Inst522++; } } catch(e) {}
DeviceTask.prototype.__defineSetter__("v1", function (value) {
try { if (Inst523 <= 1000 && typeof (value) != "undefined") {_RecordType("<15078,15083,532>",(value)); Inst523++; } } catch(e) {}
try { if (Inst525 <= 1000 && typeof (value) != "undefined") {_RecordType("<15100,15105,533>",(value)); Inst525++; } } catch(e) {}
  this._v1 = value;
try { if (Inst524 <= 1000 && typeof (this._v1) != "undefined") {_RecordType("<15089,15097,533>",(this._v1)); Inst524++; } } catch(e) {}
});

DeviceTask.prototype.run = function (packet) {
try { if (Inst529 <= 1000 && typeof (packet) != "undefined") {_RecordType("<15149,15155,536>",(packet)); Inst529++; } } catch(e) {}
try { if (Inst530 <= 1000 && typeof (packet) != "undefined") {_RecordType("<15165,15171,537>",(packet)); Inst530++; } } catch(e) {}
  if (packet == null) {
try { if (Inst531 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<15191,15198,538>",(this.v1)); Inst531++; } } catch(e) {}
    if (this.v1 == null) {
try { if (Inst532 <= 1000 && typeof (this.scheduler.suspendCurrent) != "undefined") {_RecordType("<15223,15252,539>",(this.scheduler.suspendCurrent)); Inst532++; } } catch(e) {}try { if (Inst533 <= 1000 && typeof (this.scheduler) != "undefined") {_RecordType("<15223,15237,539>",(this.scheduler)); Inst533++; } } catch(e) {}
      return this.scheduler.suspendCurrent();
    }

try { if (Inst535 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<15275,15282,542>",(this.v1)); Inst535++; } } catch(e) {}
    var v = this.v1;
try { if (Inst534 <= 1000 && typeof (v) != "undefined") {_RecordType("<15271,15272,542>",(v)); Inst534++; } } catch(e) {}
    this.v1 = null;
try { if (Inst536 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<15288,15295,543>",(this.v1)); Inst536++; } } catch(e) {}
try { if (Inst537 <= 1000 && typeof (this.scheduler.queue) != "undefined") {_RecordType("<15315,15335,544>",(this.scheduler.queue)); Inst537++; } } catch(e) {}try { if (Inst538 <= 1000 && typeof (this.scheduler) != "undefined") {_RecordType("<15315,15329,544>",(this.scheduler)); Inst538++; } } catch(e) {}try { if (Inst539 <= 1000 && typeof (v) != "undefined") {_RecordType("<15336,15337,544>",(v)); Inst539++; } } catch(e) {}
    return this.scheduler.queue(v);
  } else {
try { if (Inst541 <= 1000 && typeof (packet) != "undefined") {_RecordType("<15365,15371,546>",(packet)); Inst541++; } } catch(e) {}
    this.v1 = packet;
try { if (Inst540 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<15355,15362,546>",(this.v1)); Inst540++; } } catch(e) {}
try { if (Inst542 <= 1000 && typeof (this.scheduler.holdCurrent) != "undefined") {_RecordType("<15384,15410,547>",(this.scheduler.holdCurrent)); Inst542++; } } catch(e) {}try { if (Inst543 <= 1000 && typeof (this.scheduler) != "undefined") {_RecordType("<15384,15398,547>",(this.scheduler)); Inst543++; } } catch(e) {}
    return this.scheduler.holdCurrent();
  }
};
try { if (Inst526 <= 1000 && typeof (DeviceTask.prototype.run) != "undefined") {_RecordType("<15112,15136,536>",(DeviceTask.prototype.run)); Inst526++; } } catch(e) {}try { if (Inst527 <= 1000 && typeof (DeviceTask.prototype) != "undefined") {_RecordType("<15112,15132,536>",(DeviceTask.prototype)); Inst527++; } } catch(e) {}try { if (Inst528 <= 1000 && typeof (DeviceTask) != "undefined") {_RecordType("<15112,15122,536>",(DeviceTask)); Inst528++; } } catch(e) {}

DeviceTask.prototype.toString = function () {
  return "DeviceTask";
};
try { if (Inst544 <= 1000 && typeof (DeviceTask.prototype.toString) != "undefined") {_RecordType("<15422,15451,551>",(DeviceTask.prototype.toString)); Inst544++; } } catch(e) {}try { if (Inst545 <= 1000 && typeof (DeviceTask.prototype) != "undefined") {_RecordType("<15422,15442,551>",(DeviceTask.prototype)); Inst545++; } } catch(e) {}try { if (Inst546 <= 1000 && typeof (DeviceTask) != "undefined") {_RecordType("<15422,15432,551>",(DeviceTask)); Inst546++; } } catch(e) {}
/**
 * A task that manipulates work packets.
 * @param {Scheduler} scheduler the scheduler that manages this task
 * @param {int} v1 a seed used to specify how work packets are manipulated
 * @param {int} v2 another seed used to specify how work packets are manipulated
 * @constructor
 */


try { if (Inst547 <= 1000 && typeof (WorkerTask) != "undefined") {_RecordType("<15795,15805,563>",(WorkerTask)); Inst547++; } } catch(e) {}
function WorkerTask(scheduler, v1, v2) {
try { if (Inst548 <= 1000 && typeof (scheduler) != "undefined") {_RecordType("<15806,15815,563>",(scheduler)); Inst548++; } } catch(e) {}try { if (Inst549 <= 1000 && typeof (v1) != "undefined") {_RecordType("<15817,15819,563>",(v1)); Inst549++; } } catch(e) {}try { if (Inst550 <= 1000 && typeof (v2) != "undefined") {_RecordType("<15821,15823,563>",(v2)); Inst550++; } } catch(e) {}
try { if (Inst552 <= 1000 && typeof (scheduler) != "undefined") {_RecordType("<15847,15856,564>",(scheduler)); Inst552++; } } catch(e) {}
  this._scheduler = scheduler;
try { if (Inst551 <= 1000 && typeof (this._scheduler) != "undefined") {_RecordType("<15829,15844,564>",(this._scheduler)); Inst551++; } } catch(e) {}
try { if (Inst554 <= 1000 && typeof (v1) != "undefined") {_RecordType("<15871,15873,565>",(v1)); Inst554++; } } catch(e) {}
  this._v1 = v1;
try { if (Inst553 <= 1000 && typeof (this._v1) != "undefined") {_RecordType("<15860,15868,565>",(this._v1)); Inst553++; } } catch(e) {}
try { if (Inst556 <= 1000 && typeof (v2) != "undefined") {_RecordType("<15888,15890,566>",(v2)); Inst556++; } } catch(e) {}
  this._v2 = v2;
try { if (Inst555 <= 1000 && typeof (this._v2) != "undefined") {_RecordType("<15877,15885,566>",(this._v2)); Inst555++; } } catch(e) {}
}

try { if (Inst557 <= 1000 && typeof (WorkerTask.prototype.__defineGetter__) != "undefined") {_RecordType("<15895,15932,569>",(WorkerTask.prototype.__defineGetter__)); Inst557++; } } catch(e) {}try { if (Inst558 <= 1000 && typeof (WorkerTask.prototype) != "undefined") {_RecordType("<15895,15915,569>",(WorkerTask.prototype)); Inst558++; } } catch(e) {}try { if (Inst559 <= 1000 && typeof (WorkerTask) != "undefined") {_RecordType("<15895,15905,569>",(WorkerTask)); Inst559++; } } catch(e) {}
WorkerTask.prototype.__defineGetter__("scheduler", function () {
try { if (Inst560 <= 1000 && typeof (this._scheduler) != "undefined") {_RecordType("<15969,15984,570>",(this._scheduler)); Inst560++; } } catch(e) {}
  return this._scheduler;
});

try { if (Inst561 <= 1000 && typeof (WorkerTask.prototype.__defineGetter__) != "undefined") {_RecordType("<15991,16028,573>",(WorkerTask.prototype.__defineGetter__)); Inst561++; } } catch(e) {}try { if (Inst562 <= 1000 && typeof (WorkerTask.prototype) != "undefined") {_RecordType("<15991,16011,573>",(WorkerTask.prototype)); Inst562++; } } catch(e) {}try { if (Inst563 <= 1000 && typeof (WorkerTask) != "undefined") {_RecordType("<15991,16001,573>",(WorkerTask)); Inst563++; } } catch(e) {}
WorkerTask.prototype.__defineGetter__("v1", function () {
try { if (Inst564 <= 1000 && typeof (this._v1) != "undefined") {_RecordType("<16058,16066,574>",(this._v1)); Inst564++; } } catch(e) {}
  return this._v1;
});

try { if (Inst565 <= 1000 && typeof (WorkerTask.prototype.__defineSetter__) != "undefined") {_RecordType("<16073,16110,577>",(WorkerTask.prototype.__defineSetter__)); Inst565++; } } catch(e) {}try { if (Inst566 <= 1000 && typeof (WorkerTask.prototype) != "undefined") {_RecordType("<16073,16093,577>",(WorkerTask.prototype)); Inst566++; } } catch(e) {}try { if (Inst567 <= 1000 && typeof (WorkerTask) != "undefined") {_RecordType("<16073,16083,577>",(WorkerTask)); Inst567++; } } catch(e) {}
WorkerTask.prototype.__defineSetter__("v1", function (value) {
try { if (Inst568 <= 1000 && typeof (value) != "undefined") {_RecordType("<16127,16132,577>",(value)); Inst568++; } } catch(e) {}
try { if (Inst570 <= 1000 && typeof (value) != "undefined") {_RecordType("<16149,16154,578>",(value)); Inst570++; } } catch(e) {}
  this._v1 = value;
try { if (Inst569 <= 1000 && typeof (this._v1) != "undefined") {_RecordType("<16138,16146,578>",(this._v1)); Inst569++; } } catch(e) {}
});

try { if (Inst571 <= 1000 && typeof (WorkerTask.prototype.__defineGetter__) != "undefined") {_RecordType("<16161,16198,581>",(WorkerTask.prototype.__defineGetter__)); Inst571++; } } catch(e) {}try { if (Inst572 <= 1000 && typeof (WorkerTask.prototype) != "undefined") {_RecordType("<16161,16181,581>",(WorkerTask.prototype)); Inst572++; } } catch(e) {}try { if (Inst573 <= 1000 && typeof (WorkerTask) != "undefined") {_RecordType("<16161,16171,581>",(WorkerTask)); Inst573++; } } catch(e) {}
WorkerTask.prototype.__defineGetter__("v2", function () {
try { if (Inst574 <= 1000 && typeof (this._v2) != "undefined") {_RecordType("<16228,16236,582>",(this._v2)); Inst574++; } } catch(e) {}
  return this._v2;
});

try { if (Inst575 <= 1000 && typeof (WorkerTask.prototype.__defineSetter__) != "undefined") {_RecordType("<16243,16280,585>",(WorkerTask.prototype.__defineSetter__)); Inst575++; } } catch(e) {}try { if (Inst576 <= 1000 && typeof (WorkerTask.prototype) != "undefined") {_RecordType("<16243,16263,585>",(WorkerTask.prototype)); Inst576++; } } catch(e) {}try { if (Inst577 <= 1000 && typeof (WorkerTask) != "undefined") {_RecordType("<16243,16253,585>",(WorkerTask)); Inst577++; } } catch(e) {}
WorkerTask.prototype.__defineSetter__("v2", function (value) {
try { if (Inst578 <= 1000 && typeof (value) != "undefined") {_RecordType("<16297,16302,585>",(value)); Inst578++; } } catch(e) {}
try { if (Inst580 <= 1000 && typeof (value) != "undefined") {_RecordType("<16319,16324,586>",(value)); Inst580++; } } catch(e) {}
  this._v2 = value;
try { if (Inst579 <= 1000 && typeof (this._v2) != "undefined") {_RecordType("<16308,16316,586>",(this._v2)); Inst579++; } } catch(e) {}
});

WorkerTask.prototype.run = function (packet) {
try { if (Inst584 <= 1000 && typeof (packet) != "undefined") {_RecordType("<16368,16374,589>",(packet)); Inst584++; } } catch(e) {}
try { if (Inst585 <= 1000 && typeof (packet) != "undefined") {_RecordType("<16384,16390,590>",(packet)); Inst585++; } } catch(e) {}
  if (packet == null) {
try { if (Inst586 <= 1000 && typeof (this.scheduler.suspendCurrent) != "undefined") {_RecordType("<16413,16442,591>",(this.scheduler.suspendCurrent)); Inst586++; } } catch(e) {}try { if (Inst587 <= 1000 && typeof (this.scheduler) != "undefined") {_RecordType("<16413,16427,591>",(this.scheduler)); Inst587++; } } catch(e) {}
    return this.scheduler.suspendCurrent();
  } else {
try { if (Inst588 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<16465,16472,593>",(this.v1)); Inst588++; } } catch(e) {}try { if (Inst589 <= 1000 && typeof (ID_HANDLER_A) != "undefined") {_RecordType("<16476,16488,593>",(ID_HANDLER_A)); Inst589++; } } catch(e) {}
    if (this.v1 == ID_HANDLER_A) {
try { if (Inst591 <= 1000 && typeof (ID_HANDLER_B) != "undefined") {_RecordType("<16508,16520,594>",(ID_HANDLER_B)); Inst591++; } } catch(e) {}
      this.v1 = ID_HANDLER_B;
try { if (Inst590 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<16498,16505,594>",(this.v1)); Inst590++; } } catch(e) {}
    } else {
try { if (Inst593 <= 1000 && typeof (ID_HANDLER_A) != "undefined") {_RecordType("<16551,16563,596>",(ID_HANDLER_A)); Inst593++; } } catch(e) {}
      this.v1 = ID_HANDLER_A;
try { if (Inst592 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<16541,16548,596>",(this.v1)); Inst592++; } } catch(e) {}
    }

try { if (Inst596 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<16588,16595,599>",(this.v1)); Inst596++; } } catch(e) {}
    packet.id = this.v1;
try { if (Inst594 <= 1000 && typeof (packet.id) != "undefined") {_RecordType("<16576,16585,599>",(packet.id)); Inst594++; } } catch(e) {}try { if (Inst595 <= 1000 && typeof (packet) != "undefined") {_RecordType("<16576,16582,599>",(packet)); Inst595++; } } catch(e) {}
    packet.a1 = 0;
try { if (Inst597 <= 1000 && typeof (packet.a1) != "undefined") {_RecordType("<16601,16610,600>",(packet.a1)); Inst597++; } } catch(e) {}try { if (Inst598 <= 1000 && typeof (packet) != "undefined") {_RecordType("<16601,16607,600>",(packet)); Inst598++; } } catch(e) {}

    for (var i = 0; i < DATA_SIZE; i++) {
try { if (Inst599 <= 1000 && typeof (i) != "undefined") {_RecordType("<16630,16631,602>",(i)); Inst599++; } } catch(e) {}try { if (Inst600 <= 1000 && typeof (i) != "undefined") {_RecordType("<16637,16638,602>",(i)); Inst600++; } } catch(e) {}try { if (Inst601 <= 1000 && typeof (DATA_SIZE) != "undefined") {_RecordType("<16641,16650,602>",(DATA_SIZE)); Inst601++; } } catch(e) {}try { if (Inst602 <= 1000 && typeof (i) != "undefined") {_RecordType("<16652,16653,602>",(i)); Inst602++; } } catch(e) {}
try { if (Inst603 <= 1000 && typeof (this.v2) != "undefined") {_RecordType("<16665,16672,603>",(this.v2)); Inst603++; } } catch(e) {}
      this.v2++;

try { if (Inst604 <= 1000 && typeof (this.v2) != "undefined") {_RecordType("<16687,16694,605>",(this.v2)); Inst604++; } } catch(e) {}
      if (this.v2 > 26) {
        this.v2 = 1;
try { if (Inst605 <= 1000 && typeof (this.v2) != "undefined") {_RecordType("<16711,16718,606>",(this.v2)); Inst605++; } } catch(e) {}
      }

try { if (Inst609 <= 1000 && typeof (this.v2) != "undefined") {_RecordType("<16754,16761,609>",(this.v2)); Inst609++; } } catch(e) {}
      packet.a2[i] = this.v2;
try { if (Inst606 <= 1000 && typeof (packet.a2[i]) != "undefined") {_RecordType("<16739,16751,609>",(packet.a2[i])); Inst606++; } } catch(e) {}try { if (Inst607 <= 1000 && typeof (packet.a2) != "undefined") {_RecordType("<16739,16748,609>",(packet.a2)); Inst607++; } } catch(e) {}try { if (Inst608 <= 1000 && typeof (packet) != "undefined") {_RecordType("<16739,16745,609>",(packet)); Inst608++; } } catch(e) {}
    }

try { if (Inst610 <= 1000 && typeof (this.scheduler.queue) != "undefined") {_RecordType("<16781,16801,612>",(this.scheduler.queue)); Inst610++; } } catch(e) {}try { if (Inst611 <= 1000 && typeof (this.scheduler) != "undefined") {_RecordType("<16781,16795,612>",(this.scheduler)); Inst611++; } } catch(e) {}try { if (Inst612 <= 1000 && typeof (packet) != "undefined") {_RecordType("<16802,16808,612>",(packet)); Inst612++; } } catch(e) {}
    return this.scheduler.queue(packet);
  }
};
try { if (Inst581 <= 1000 && typeof (WorkerTask.prototype.run) != "undefined") {_RecordType("<16331,16355,589>",(WorkerTask.prototype.run)); Inst581++; } } catch(e) {}try { if (Inst582 <= 1000 && typeof (WorkerTask.prototype) != "undefined") {_RecordType("<16331,16351,589>",(WorkerTask.prototype)); Inst582++; } } catch(e) {}try { if (Inst583 <= 1000 && typeof (WorkerTask) != "undefined") {_RecordType("<16331,16341,589>",(WorkerTask)); Inst583++; } } catch(e) {}

WorkerTask.prototype.toString = function () {
  return "WorkerTask";
};
try { if (Inst613 <= 1000 && typeof (WorkerTask.prototype.toString) != "undefined") {_RecordType("<16819,16848,616>",(WorkerTask.prototype.toString)); Inst613++; } } catch(e) {}try { if (Inst614 <= 1000 && typeof (WorkerTask.prototype) != "undefined") {_RecordType("<16819,16839,616>",(WorkerTask.prototype)); Inst614++; } } catch(e) {}try { if (Inst615 <= 1000 && typeof (WorkerTask) != "undefined") {_RecordType("<16819,16829,616>",(WorkerTask)); Inst615++; } } catch(e) {}
/**
 * A task that manipulates work packets and then suspends itself.
 * @param {Scheduler} scheduler the scheduler that manages this task
 * @constructor
 */


try { if (Inst616 <= 1000 && typeof (HandlerTask) != "undefined") {_RecordType("<17061,17072,626>",(HandlerTask)); Inst616++; } } catch(e) {}
function HandlerTask(scheduler) {
try { if (Inst617 <= 1000 && typeof (scheduler) != "undefined") {_RecordType("<17073,17082,626>",(scheduler)); Inst617++; } } catch(e) {}
try { if (Inst619 <= 1000 && typeof (scheduler) != "undefined") {_RecordType("<17106,17115,627>",(scheduler)); Inst619++; } } catch(e) {}
  this._scheduler = scheduler;
try { if (Inst618 <= 1000 && typeof (this._scheduler) != "undefined") {_RecordType("<17088,17103,627>",(this._scheduler)); Inst618++; } } catch(e) {}
  this._v1 = null;
try { if (Inst620 <= 1000 && typeof (this._v1) != "undefined") {_RecordType("<17119,17127,628>",(this._v1)); Inst620++; } } catch(e) {}
  this._v2 = null;
try { if (Inst621 <= 1000 && typeof (this._v2) != "undefined") {_RecordType("<17138,17146,629>",(this._v2)); Inst621++; } } catch(e) {}
}

try { if (Inst622 <= 1000 && typeof (HandlerTask.prototype.__defineGetter__) != "undefined") {_RecordType("<17158,17196,632>",(HandlerTask.prototype.__defineGetter__)); Inst622++; } } catch(e) {}try { if (Inst623 <= 1000 && typeof (HandlerTask.prototype) != "undefined") {_RecordType("<17158,17179,632>",(HandlerTask.prototype)); Inst623++; } } catch(e) {}try { if (Inst624 <= 1000 && typeof (HandlerTask) != "undefined") {_RecordType("<17158,17169,632>",(HandlerTask)); Inst624++; } } catch(e) {}
HandlerTask.prototype.__defineGetter__("scheduler", function () {
try { if (Inst625 <= 1000 && typeof (this._scheduler) != "undefined") {_RecordType("<17233,17248,633>",(this._scheduler)); Inst625++; } } catch(e) {}
  return this._scheduler;
});

try { if (Inst626 <= 1000 && typeof (HandlerTask.prototype.__defineGetter__) != "undefined") {_RecordType("<17255,17293,636>",(HandlerTask.prototype.__defineGetter__)); Inst626++; } } catch(e) {}try { if (Inst627 <= 1000 && typeof (HandlerTask.prototype) != "undefined") {_RecordType("<17255,17276,636>",(HandlerTask.prototype)); Inst627++; } } catch(e) {}try { if (Inst628 <= 1000 && typeof (HandlerTask) != "undefined") {_RecordType("<17255,17266,636>",(HandlerTask)); Inst628++; } } catch(e) {}
HandlerTask.prototype.__defineGetter__("v1", function () {
try { if (Inst629 <= 1000 && typeof (this._v1) != "undefined") {_RecordType("<17323,17331,637>",(this._v1)); Inst629++; } } catch(e) {}
  return this._v1;
});

try { if (Inst630 <= 1000 && typeof (HandlerTask.prototype.__defineSetter__) != "undefined") {_RecordType("<17338,17376,640>",(HandlerTask.prototype.__defineSetter__)); Inst630++; } } catch(e) {}try { if (Inst631 <= 1000 && typeof (HandlerTask.prototype) != "undefined") {_RecordType("<17338,17359,640>",(HandlerTask.prototype)); Inst631++; } } catch(e) {}try { if (Inst632 <= 1000 && typeof (HandlerTask) != "undefined") {_RecordType("<17338,17349,640>",(HandlerTask)); Inst632++; } } catch(e) {}
HandlerTask.prototype.__defineSetter__("v1", function (value) {
try { if (Inst633 <= 1000 && typeof (value) != "undefined") {_RecordType("<17393,17398,640>",(value)); Inst633++; } } catch(e) {}
try { if (Inst635 <= 1000 && typeof (value) != "undefined") {_RecordType("<17415,17420,641>",(value)); Inst635++; } } catch(e) {}
  this._v1 = value;
try { if (Inst634 <= 1000 && typeof (this._v1) != "undefined") {_RecordType("<17404,17412,641>",(this._v1)); Inst634++; } } catch(e) {}
});

try { if (Inst636 <= 1000 && typeof (HandlerTask.prototype.__defineGetter__) != "undefined") {_RecordType("<17427,17465,644>",(HandlerTask.prototype.__defineGetter__)); Inst636++; } } catch(e) {}try { if (Inst637 <= 1000 && typeof (HandlerTask.prototype) != "undefined") {_RecordType("<17427,17448,644>",(HandlerTask.prototype)); Inst637++; } } catch(e) {}try { if (Inst638 <= 1000 && typeof (HandlerTask) != "undefined") {_RecordType("<17427,17438,644>",(HandlerTask)); Inst638++; } } catch(e) {}
HandlerTask.prototype.__defineGetter__("v2", function () {
try { if (Inst639 <= 1000 && typeof (this._v2) != "undefined") {_RecordType("<17495,17503,645>",(this._v2)); Inst639++; } } catch(e) {}
  return this._v2;
});

try { if (Inst640 <= 1000 && typeof (HandlerTask.prototype.__defineSetter__) != "undefined") {_RecordType("<17510,17548,648>",(HandlerTask.prototype.__defineSetter__)); Inst640++; } } catch(e) {}try { if (Inst641 <= 1000 && typeof (HandlerTask.prototype) != "undefined") {_RecordType("<17510,17531,648>",(HandlerTask.prototype)); Inst641++; } } catch(e) {}try { if (Inst642 <= 1000 && typeof (HandlerTask) != "undefined") {_RecordType("<17510,17521,648>",(HandlerTask)); Inst642++; } } catch(e) {}
HandlerTask.prototype.__defineSetter__("v2", function (value) {
try { if (Inst643 <= 1000 && typeof (value) != "undefined") {_RecordType("<17565,17570,648>",(value)); Inst643++; } } catch(e) {}
try { if (Inst645 <= 1000 && typeof (value) != "undefined") {_RecordType("<17587,17592,649>",(value)); Inst645++; } } catch(e) {}
  this._v2 = value;
try { if (Inst644 <= 1000 && typeof (this._v2) != "undefined") {_RecordType("<17576,17584,649>",(this._v2)); Inst644++; } } catch(e) {}
});

HandlerTask.prototype.run = function (packet) {
try { if (Inst649 <= 1000 && typeof (packet) != "undefined") {_RecordType("<17637,17643,652>",(packet)); Inst649++; } } catch(e) {}
try { if (Inst650 <= 1000 && typeof (packet) != "undefined") {_RecordType("<17653,17659,653>",(packet)); Inst650++; } } catch(e) {}
  if (packet != null) {
try { if (Inst651 <= 1000 && typeof (packet.kind) != "undefined") {_RecordType("<17679,17690,654>",(packet.kind)); Inst651++; } } catch(e) {}try { if (Inst652 <= 1000 && typeof (packet) != "undefined") {_RecordType("<17679,17685,654>",(packet)); Inst652++; } } catch(e) {}try { if (Inst653 <= 1000 && typeof (KIND_WORK) != "undefined") {_RecordType("<17694,17703,654>",(KIND_WORK)); Inst653++; } } catch(e) {}
    if (packet.kind == KIND_WORK) {
try { if (Inst655 <= 1000 && typeof (packet.addTo) != "undefined") {_RecordType("<17723,17735,655>",(packet.addTo)); Inst655++; } } catch(e) {}try { if (Inst656 <= 1000 && typeof (packet) != "undefined") {_RecordType("<17723,17729,655>",(packet)); Inst656++; } } catch(e) {}try { if (Inst657 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<17736,17743,655>",(this.v1)); Inst657++; } } catch(e) {}
      this.v1 = packet.addTo(this.v1);
try { if (Inst654 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<17713,17720,655>",(this.v1)); Inst654++; } } catch(e) {}
    } else {
try { if (Inst659 <= 1000 && typeof (packet.addTo) != "undefined") {_RecordType("<17775,17787,657>",(packet.addTo)); Inst659++; } } catch(e) {}try { if (Inst660 <= 1000 && typeof (packet) != "undefined") {_RecordType("<17775,17781,657>",(packet)); Inst660++; } } catch(e) {}try { if (Inst661 <= 1000 && typeof (this.v2) != "undefined") {_RecordType("<17788,17795,657>",(this.v2)); Inst661++; } } catch(e) {}
      this.v2 = packet.addTo(this.v2);
try { if (Inst658 <= 1000 && typeof (this.v2) != "undefined") {_RecordType("<17765,17772,657>",(this.v2)); Inst658++; } } catch(e) {}
    }
  }

try { if (Inst662 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<17815,17822,661>",(this.v1)); Inst662++; } } catch(e) {}
  if (this.v1 != null) {
try { if (Inst664 <= 1000 && typeof (this.v1.a1) != "undefined") {_RecordType("<17850,17860,662>",(this.v1.a1)); Inst664++; } } catch(e) {}try { if (Inst665 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<17850,17857,662>",(this.v1)); Inst665++; } } catch(e) {}
    var count = this.v1.a1;
try { if (Inst663 <= 1000 && typeof (count) != "undefined") {_RecordType("<17842,17847,662>",(count)); Inst663++; } } catch(e) {}
    var v;
try { if (Inst666 <= 1000 && typeof (v) != "undefined") {_RecordType("<17870,17871,663>",(v)); Inst666++; } } catch(e) {}

try { if (Inst667 <= 1000 && typeof (count) != "undefined") {_RecordType("<17882,17887,665>",(count)); Inst667++; } } catch(e) {}try { if (Inst668 <= 1000 && typeof (DATA_SIZE) != "undefined") {_RecordType("<17890,17899,665>",(DATA_SIZE)); Inst668++; } } catch(e) {}
    if (count < DATA_SIZE) {
try { if (Inst669 <= 1000 && typeof (this.v2) != "undefined") {_RecordType("<17913,17920,666>",(this.v2)); Inst669++; } } catch(e) {}
      if (this.v2 != null) {
try { if (Inst671 <= 1000 && typeof (this.v2) != "undefined") {_RecordType("<17944,17951,667>",(this.v2)); Inst671++; } } catch(e) {}
        v = this.v2;
try { if (Inst670 <= 1000 && typeof (v) != "undefined") {_RecordType("<17940,17941,667>",(v)); Inst670++; } } catch(e) {}
try { if (Inst673 <= 1000 && typeof (this.v2.link) != "undefined") {_RecordType("<17971,17983,668>",(this.v2.link)); Inst673++; } } catch(e) {}try { if (Inst674 <= 1000 && typeof (this.v2) != "undefined") {_RecordType("<17971,17978,668>",(this.v2)); Inst674++; } } catch(e) {}
        this.v2 = this.v2.link;
try { if (Inst672 <= 1000 && typeof (this.v2) != "undefined") {_RecordType("<17961,17968,668>",(this.v2)); Inst672++; } } catch(e) {}
try { if (Inst677 <= 1000 && typeof (this.v1.a2[count]) != "undefined") {_RecordType("<18000,18017,669>",(this.v1.a2[count])); Inst677++; } } catch(e) {}try { if (Inst678 <= 1000 && typeof (this.v1.a2) != "undefined") {_RecordType("<18000,18010,669>",(this.v1.a2)); Inst678++; } } catch(e) {}try { if (Inst679 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<18000,18007,669>",(this.v1)); Inst679++; } } catch(e) {}
        v.a1 = this.v1.a2[count];
try { if (Inst675 <= 1000 && typeof (v.a1) != "undefined") {_RecordType("<17993,17997,669>",(v.a1)); Inst675++; } } catch(e) {}try { if (Inst676 <= 1000 && typeof (v) != "undefined") {_RecordType("<17993,17994,669>",(v)); Inst676++; } } catch(e) {}
try { if (Inst682 <= 1000 && typeof (count) != "undefined") {_RecordType("<18040,18045,670>",(count)); Inst682++; } } catch(e) {}
        this.v1.a1 = count + 1;
try { if (Inst680 <= 1000 && typeof (this.v1.a1) != "undefined") {_RecordType("<18027,18037,670>",(this.v1.a1)); Inst680++; } } catch(e) {}try { if (Inst681 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<18027,18034,670>",(this.v1)); Inst681++; } } catch(e) {}
try { if (Inst683 <= 1000 && typeof (this.scheduler.queue) != "undefined") {_RecordType("<18066,18086,671>",(this.scheduler.queue)); Inst683++; } } catch(e) {}try { if (Inst684 <= 1000 && typeof (this.scheduler) != "undefined") {_RecordType("<18066,18080,671>",(this.scheduler)); Inst684++; } } catch(e) {}try { if (Inst685 <= 1000 && typeof (v) != "undefined") {_RecordType("<18087,18088,671>",(v)); Inst685++; } } catch(e) {}
        return this.scheduler.queue(v);
      }
    } else {
try { if (Inst687 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<18122,18129,674>",(this.v1)); Inst687++; } } catch(e) {}
      v = this.v1;
try { if (Inst686 <= 1000 && typeof (v) != "undefined") {_RecordType("<18118,18119,674>",(v)); Inst686++; } } catch(e) {}
try { if (Inst689 <= 1000 && typeof (this.v1.link) != "undefined") {_RecordType("<18147,18159,675>",(this.v1.link)); Inst689++; } } catch(e) {}try { if (Inst690 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<18147,18154,675>",(this.v1)); Inst690++; } } catch(e) {}
      this.v1 = this.v1.link;
try { if (Inst688 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<18137,18144,675>",(this.v1)); Inst688++; } } catch(e) {}
try { if (Inst691 <= 1000 && typeof (this.scheduler.queue) != "undefined") {_RecordType("<18174,18194,676>",(this.scheduler.queue)); Inst691++; } } catch(e) {}try { if (Inst692 <= 1000 && typeof (this.scheduler) != "undefined") {_RecordType("<18174,18188,676>",(this.scheduler)); Inst692++; } } catch(e) {}try { if (Inst693 <= 1000 && typeof (v) != "undefined") {_RecordType("<18195,18196,676>",(v)); Inst693++; } } catch(e) {}
      return this.scheduler.queue(v);
    }
  }

try { if (Inst694 <= 1000 && typeof (this.scheduler.suspendCurrent) != "undefined") {_RecordType("<18219,18248,680>",(this.scheduler.suspendCurrent)); Inst694++; } } catch(e) {}try { if (Inst695 <= 1000 && typeof (this.scheduler) != "undefined") {_RecordType("<18219,18233,680>",(this.scheduler)); Inst695++; } } catch(e) {}
  return this.scheduler.suspendCurrent();
};
try { if (Inst646 <= 1000 && typeof (HandlerTask.prototype.run) != "undefined") {_RecordType("<17599,17624,652>",(HandlerTask.prototype.run)); Inst646++; } } catch(e) {}try { if (Inst647 <= 1000 && typeof (HandlerTask.prototype) != "undefined") {_RecordType("<17599,17620,652>",(HandlerTask.prototype)); Inst647++; } } catch(e) {}try { if (Inst648 <= 1000 && typeof (HandlerTask) != "undefined") {_RecordType("<17599,17610,652>",(HandlerTask)); Inst648++; } } catch(e) {}

HandlerTask.prototype.toString = function () {
  return "HandlerTask";
};
try { if (Inst696 <= 1000 && typeof (HandlerTask.prototype.toString) != "undefined") {_RecordType("<18256,18286,683>",(HandlerTask.prototype.toString)); Inst696++; } } catch(e) {}try { if (Inst697 <= 1000 && typeof (HandlerTask.prototype) != "undefined") {_RecordType("<18256,18277,683>",(HandlerTask.prototype)); Inst697++; } } catch(e) {}try { if (Inst698 <= 1000 && typeof (HandlerTask) != "undefined") {_RecordType("<18256,18267,683>",(HandlerTask)); Inst698++; } } catch(e) {}
/* --- *
 * P a c k e t
 * --- */


var DATA_SIZE = 4;
try { if (Inst699 <= 1000 && typeof (DATA_SIZE) != "undefined") {_RecordType("<18370,18379,691>",(DATA_SIZE)); Inst699++; } } catch(e) {}
/**
 * A simple package of data that is manipulated by the tasks.  The exact layout
 * of the payload data carried by a packet is not importaint, and neither is the
 * nature of the work performed on packets by the tasks.
 *
 * Besides carrying data, packets form linked lists and are hence used both as
 * data and worklists.
 * @param {Packet} link the tail of the linked list of packets
 * @param {int} id an ID for this packet
 * @param {int} kind the type of this packet
 * @constructor
 */

try { if (Inst700 <= 1000 && typeof (Packet) != "undefined") {_RecordType("<18891,18897,705>",(Packet)); Inst700++; } } catch(e) {}
function Packet(link, id, kind) {
try { if (Inst701 <= 1000 && typeof (link) != "undefined") {_RecordType("<18898,18902,705>",(link)); Inst701++; } } catch(e) {}try { if (Inst702 <= 1000 && typeof (id) != "undefined") {_RecordType("<18904,18906,705>",(id)); Inst702++; } } catch(e) {}try { if (Inst703 <= 1000 && typeof (kind) != "undefined") {_RecordType("<18908,18912,705>",(kind)); Inst703++; } } catch(e) {}
try { if (Inst705 <= 1000 && typeof (link) != "undefined") {_RecordType("<18931,18935,706>",(link)); Inst705++; } } catch(e) {}
  this._link = link;
try { if (Inst704 <= 1000 && typeof (this._link) != "undefined") {_RecordType("<18918,18928,706>",(this._link)); Inst704++; } } catch(e) {}
try { if (Inst707 <= 1000 && typeof (id) != "undefined") {_RecordType("<18950,18952,707>",(id)); Inst707++; } } catch(e) {}
  this._id = id;
try { if (Inst706 <= 1000 && typeof (this._id) != "undefined") {_RecordType("<18939,18947,707>",(this._id)); Inst706++; } } catch(e) {}
try { if (Inst709 <= 1000 && typeof (kind) != "undefined") {_RecordType("<18969,18973,708>",(kind)); Inst709++; } } catch(e) {}
  this._kind = kind;
try { if (Inst708 <= 1000 && typeof (this._kind) != "undefined") {_RecordType("<18956,18966,708>",(this._kind)); Inst708++; } } catch(e) {}
  this._a1 = 0;
try { if (Inst710 <= 1000 && typeof (this._a1) != "undefined") {_RecordType("<18977,18985,709>",(this._a1)); Inst710++; } } catch(e) {}
try { if (Inst712 <= 1000 && typeof (Array) != "undefined") {_RecordType("<19008,19013,710>",(Array)); Inst712++; } } catch(e) {}try { if (Inst713 <= 1000 && typeof (DATA_SIZE) != "undefined") {_RecordType("<19014,19023,710>",(DATA_SIZE)); Inst713++; } } catch(e) {}
  this._a2 = new Array(DATA_SIZE);
try { if (Inst711 <= 1000 && typeof (this._a2) != "undefined") {_RecordType("<18993,19001,710>",(this._a2)); Inst711++; } } catch(e) {}
}

try { if (Inst714 <= 1000 && typeof (Packet.prototype.__defineGetter__) != "undefined") {_RecordType("<19029,19062,713>",(Packet.prototype.__defineGetter__)); Inst714++; } } catch(e) {}try { if (Inst715 <= 1000 && typeof (Packet.prototype) != "undefined") {_RecordType("<19029,19045,713>",(Packet.prototype)); Inst715++; } } catch(e) {}try { if (Inst716 <= 1000 && typeof (Packet) != "undefined") {_RecordType("<19029,19035,713>",(Packet)); Inst716++; } } catch(e) {}
Packet.prototype.__defineGetter__("link", function () {
try { if (Inst717 <= 1000 && typeof (this._link) != "undefined") {_RecordType("<19094,19104,714>",(this._link)); Inst717++; } } catch(e) {}
  return this._link;
});

try { if (Inst718 <= 1000 && typeof (Packet.prototype.__defineSetter__) != "undefined") {_RecordType("<19111,19144,717>",(Packet.prototype.__defineSetter__)); Inst718++; } } catch(e) {}try { if (Inst719 <= 1000 && typeof (Packet.prototype) != "undefined") {_RecordType("<19111,19127,717>",(Packet.prototype)); Inst719++; } } catch(e) {}try { if (Inst720 <= 1000 && typeof (Packet) != "undefined") {_RecordType("<19111,19117,717>",(Packet)); Inst720++; } } catch(e) {}
Packet.prototype.__defineSetter__("link", function (value) {
try { if (Inst721 <= 1000 && typeof (value) != "undefined") {_RecordType("<19163,19168,717>",(value)); Inst721++; } } catch(e) {}
try { if (Inst723 <= 1000 && typeof (value) != "undefined") {_RecordType("<19187,19192,718>",(value)); Inst723++; } } catch(e) {}
  this._link = value;
try { if (Inst722 <= 1000 && typeof (this._link) != "undefined") {_RecordType("<19174,19184,718>",(this._link)); Inst722++; } } catch(e) {}
});

try { if (Inst724 <= 1000 && typeof (Packet.prototype.__defineGetter__) != "undefined") {_RecordType("<19199,19232,721>",(Packet.prototype.__defineGetter__)); Inst724++; } } catch(e) {}try { if (Inst725 <= 1000 && typeof (Packet.prototype) != "undefined") {_RecordType("<19199,19215,721>",(Packet.prototype)); Inst725++; } } catch(e) {}try { if (Inst726 <= 1000 && typeof (Packet) != "undefined") {_RecordType("<19199,19205,721>",(Packet)); Inst726++; } } catch(e) {}
Packet.prototype.__defineGetter__("id", function () {
try { if (Inst727 <= 1000 && typeof (this._id) != "undefined") {_RecordType("<19262,19270,722>",(this._id)); Inst727++; } } catch(e) {}
  return this._id;
});

try { if (Inst728 <= 1000 && typeof (Packet.prototype.__defineSetter__) != "undefined") {_RecordType("<19277,19310,725>",(Packet.prototype.__defineSetter__)); Inst728++; } } catch(e) {}try { if (Inst729 <= 1000 && typeof (Packet.prototype) != "undefined") {_RecordType("<19277,19293,725>",(Packet.prototype)); Inst729++; } } catch(e) {}try { if (Inst730 <= 1000 && typeof (Packet) != "undefined") {_RecordType("<19277,19283,725>",(Packet)); Inst730++; } } catch(e) {}
Packet.prototype.__defineSetter__("id", function (value) {
try { if (Inst731 <= 1000 && typeof (value) != "undefined") {_RecordType("<19327,19332,725>",(value)); Inst731++; } } catch(e) {}
try { if (Inst733 <= 1000 && typeof (value) != "undefined") {_RecordType("<19349,19354,726>",(value)); Inst733++; } } catch(e) {}
  this._id = value;
try { if (Inst732 <= 1000 && typeof (this._id) != "undefined") {_RecordType("<19338,19346,726>",(this._id)); Inst732++; } } catch(e) {}
});

try { if (Inst734 <= 1000 && typeof (Packet.prototype.__defineGetter__) != "undefined") {_RecordType("<19361,19394,729>",(Packet.prototype.__defineGetter__)); Inst734++; } } catch(e) {}try { if (Inst735 <= 1000 && typeof (Packet.prototype) != "undefined") {_RecordType("<19361,19377,729>",(Packet.prototype)); Inst735++; } } catch(e) {}try { if (Inst736 <= 1000 && typeof (Packet) != "undefined") {_RecordType("<19361,19367,729>",(Packet)); Inst736++; } } catch(e) {}
Packet.prototype.__defineGetter__("kind", function () {
try { if (Inst737 <= 1000 && typeof (this._kind) != "undefined") {_RecordType("<19426,19436,730>",(this._kind)); Inst737++; } } catch(e) {}
  return this._kind;
});

try { if (Inst738 <= 1000 && typeof (Packet.prototype.__defineGetter__) != "undefined") {_RecordType("<19443,19476,733>",(Packet.prototype.__defineGetter__)); Inst738++; } } catch(e) {}try { if (Inst739 <= 1000 && typeof (Packet.prototype) != "undefined") {_RecordType("<19443,19459,733>",(Packet.prototype)); Inst739++; } } catch(e) {}try { if (Inst740 <= 1000 && typeof (Packet) != "undefined") {_RecordType("<19443,19449,733>",(Packet)); Inst740++; } } catch(e) {}
Packet.prototype.__defineGetter__("a1", function () {
try { if (Inst741 <= 1000 && typeof (this._a1) != "undefined") {_RecordType("<19506,19514,734>",(this._a1)); Inst741++; } } catch(e) {}
  return this._a1;
});

try { if (Inst742 <= 1000 && typeof (Packet.prototype.__defineSetter__) != "undefined") {_RecordType("<19521,19554,737>",(Packet.prototype.__defineSetter__)); Inst742++; } } catch(e) {}try { if (Inst743 <= 1000 && typeof (Packet.prototype) != "undefined") {_RecordType("<19521,19537,737>",(Packet.prototype)); Inst743++; } } catch(e) {}try { if (Inst744 <= 1000 && typeof (Packet) != "undefined") {_RecordType("<19521,19527,737>",(Packet)); Inst744++; } } catch(e) {}
Packet.prototype.__defineSetter__("a1", function (value) {
try { if (Inst745 <= 1000 && typeof (value) != "undefined") {_RecordType("<19571,19576,737>",(value)); Inst745++; } } catch(e) {}
try { if (Inst747 <= 1000 && typeof (value) != "undefined") {_RecordType("<19593,19598,738>",(value)); Inst747++; } } catch(e) {}
  this._a1 = value;
try { if (Inst746 <= 1000 && typeof (this._a1) != "undefined") {_RecordType("<19582,19590,738>",(this._a1)); Inst746++; } } catch(e) {}
});

try { if (Inst748 <= 1000 && typeof (Packet.prototype.__defineGetter__) != "undefined") {_RecordType("<19605,19638,741>",(Packet.prototype.__defineGetter__)); Inst748++; } } catch(e) {}try { if (Inst749 <= 1000 && typeof (Packet.prototype) != "undefined") {_RecordType("<19605,19621,741>",(Packet.prototype)); Inst749++; } } catch(e) {}try { if (Inst750 <= 1000 && typeof (Packet) != "undefined") {_RecordType("<19605,19611,741>",(Packet)); Inst750++; } } catch(e) {}
Packet.prototype.__defineGetter__("a2", function () {
try { if (Inst751 <= 1000 && typeof (this._a2) != "undefined") {_RecordType("<19668,19676,742>",(this._a2)); Inst751++; } } catch(e) {}
  return this._a2;
});
/**
 * Add this packet to the end of a worklist, and return the worklist.
 * @param {Packet} queue the worklist to add this packet to
 */


Packet.prototype.addTo = function (queue) {
try { if (Inst755 <= 1000 && typeof (queue) != "undefined") {_RecordType("<19857,19862,750>",(queue)); Inst755++; } } catch(e) {}
  this.link = null;
try { if (Inst756 <= 1000 && typeof (this.link) != "undefined") {_RecordType("<19868,19877,751>",(this.link)); Inst756++; } } catch(e) {}

try { if (Inst757 <= 1000 && typeof (queue) != "undefined") {_RecordType("<19893,19898,753>",(queue)); Inst757++; } } catch(e) {}
  if (queue == null) {
    return this;
  }

try { if (Inst760 <= 1000 && typeof (queue) != "undefined") {_RecordType("<19957,19962,758>",(queue)); Inst760++; } } catch(e) {}
  var peek,
      next = queue;
try { if (Inst758 <= 1000 && typeof (peek) != "undefined") {_RecordType("<19938,19942,757>",(peek)); Inst758++; } } catch(e) {}try { if (Inst759 <= 1000 && typeof (next) != "undefined") {_RecordType("<19950,19954,758>",(next)); Inst759++; } } catch(e) {}

try { if (Inst762 <= 1000 && typeof (next.link) != "undefined") {_RecordType("<19982,19991,760>",(next.link)); Inst762++; } } catch(e) {}try { if (Inst763 <= 1000 && typeof (next) != "undefined") {_RecordType("<19982,19986,760>",(next)); Inst763++; } } catch(e) {}
  while ((peek = next.link) != null) {
try { if (Inst765 <= 1000 && typeof (peek) != "undefined") {_RecordType("<20015,20019,761>",(peek)); Inst765++; } } catch(e) {}
    next = peek;
try { if (Inst764 <= 1000 && typeof (next) != "undefined") {_RecordType("<20008,20012,761>",(next)); Inst764++; } } catch(e) {}
  }
try { if (Inst761 <= 1000 && typeof (peek) != "undefined") {_RecordType("<19975,19979,760>",(peek)); Inst761++; } } catch(e) {}

  next.link = this;
try { if (Inst766 <= 1000 && typeof (next.link) != "undefined") {_RecordType("<20028,20037,764>",(next.link)); Inst766++; } } catch(e) {}try { if (Inst767 <= 1000 && typeof (next) != "undefined") {_RecordType("<20028,20032,764>",(next)); Inst767++; } } catch(e) {}
try { if (Inst768 <= 1000 && typeof (queue) != "undefined") {_RecordType("<20055,20060,765>",(queue)); Inst768++; } } catch(e) {}
  return queue;
};
try { if (Inst752 <= 1000 && typeof (Packet.prototype.addTo) != "undefined") {_RecordType("<19822,19844,750>",(Packet.prototype.addTo)); Inst752++; } } catch(e) {}try { if (Inst753 <= 1000 && typeof (Packet.prototype) != "undefined") {_RecordType("<19822,19838,750>",(Packet.prototype)); Inst753++; } } catch(e) {}try { if (Inst754 <= 1000 && typeof (Packet) != "undefined") {_RecordType("<19822,19828,750>",(Packet)); Inst754++; } } catch(e) {}

Packet.prototype.toString = function () {
  return "Packet";
};
try { if (Inst769 <= 1000 && typeof (Packet.prototype.toString) != "undefined") {_RecordType("<20066,20091,768>",(Packet.prototype.toString)); Inst769++; } } catch(e) {}try { if (Inst770 <= 1000 && typeof (Packet.prototype) != "undefined") {_RecordType("<20066,20082,768>",(Packet.prototype)); Inst770++; } } catch(e) {}try { if (Inst771 <= 1000 && typeof (Packet) != "undefined") {_RecordType("<20066,20072,768>",(Packet)); Inst771++; } } catch(e) {}

for (var i = 0; i < 350; ++i) {
try { if (Inst772 <= 1000 && typeof (i) != "undefined") {_RecordType("<20140,20141,772>",(i)); Inst772++; } } catch(e) {}try { if (Inst773 <= 1000 && typeof (i) != "undefined") {_RecordType("<20147,20148,772>",(i)); Inst773++; } } catch(e) {}try { if (Inst774 <= 1000 && typeof (i) != "undefined") {_RecordType("<20158,20159,772>",(i)); Inst774++; } } catch(e) {}
try { if (Inst775 <= 1000 && typeof (runRichards) != "undefined") {_RecordType("<20165,20176,773>",(runRichards)); Inst775++; } } catch(e) {}
  runRichards();
}

