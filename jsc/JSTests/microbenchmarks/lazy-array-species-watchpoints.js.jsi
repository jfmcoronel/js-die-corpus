var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<0,21,1>",(Object.defineProperty)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (Object) != "undefined") {_RecordType("<0,6,1>",(Object)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<22,37,1>",(Array.prototype)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Array) != "undefined") {_RecordType("<22,27,1>",(Array)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Array.prototype.sort) != "undefined") {_RecordType("<77,97,3>",(Array.prototype.sort)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<77,92,3>",(Array.prototype)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Array) != "undefined") {_RecordType("<77,82,3>",(Array)); Inst6++; } } catch(e) {}
Object.defineProperty(Array.prototype, "sort", {
  writable: false,
  value: Array.prototype.sort
});

try { if (Inst7 <= 1000 && typeof (test) != "undefined") {_RecordType("<112,116,6>",(test)); Inst7++; } } catch(e) {}
function test(array) {
try { if (Inst8 <= 1000 && typeof (array) != "undefined") {_RecordType("<117,122,6>",(array)); Inst8++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (array.splice) != "undefined") {_RecordType("<136,148,7>",(array.splice)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (array) != "undefined") {_RecordType("<136,141,7>",(array)); Inst11++; } } catch(e) {}
  array = array.splice(2, 2);
try { if (Inst9 <= 1000 && typeof (array) != "undefined") {_RecordType("<128,133,7>",(array)); Inst9++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (array.slice) != "undefined") {_RecordType("<166,177,8>",(array.slice)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (array) != "undefined") {_RecordType("<166,171,8>",(array)); Inst14++; } } catch(e) {}
  array = array.slice(0, 5);
try { if (Inst12 <= 1000 && typeof (array) != "undefined") {_RecordType("<158,163,8>",(array)); Inst12++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (array.concat) != "undefined") {_RecordType("<195,207,9>",(array.concat)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (array) != "undefined") {_RecordType("<195,200,9>",(array)); Inst17++; } } catch(e) {}
  array = array.concat([1, 2, 3]);
try { if (Inst15 <= 1000 && typeof (array) != "undefined") {_RecordType("<187,192,9>",(array)); Inst15++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (array) != "undefined") {_RecordType("<229,234,10>",(array)); Inst18++; } } catch(e) {}
  return array;
}

try { if (Inst19 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<239,247,13>",(noInline)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (test) != "undefined") {_RecordType("<248,252,13>",(test)); Inst20++; } } catch(e) {}
noInline(test);

for (let i = 0; i < 100000; i++) {
try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<265,266,15>",(i)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<272,273,15>",(i)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<284,285,15>",(i)); Inst23++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (test) != "undefined") {_RecordType("<293,297,16>",(test)); Inst24++; } } catch(e) {}
  test([1, 2, 3, 4, 5, 6, 7, 8, 9]);
}

