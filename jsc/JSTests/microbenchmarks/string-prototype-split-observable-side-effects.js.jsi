var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
var Inst102 = 0;
var Inst103 = 0;
var Inst104 = 0;
var Inst105 = 0;
var Inst106 = 0;
var Inst107 = 0;
var Inst108 = 0;
var Inst109 = 0;
var Inst110 = 0;
var Inst111 = 0;
var Inst112 = 0;
var Inst113 = 0;
var Inst114 = 0;
var Inst115 = 0;
var Inst116 = 0;
var Inst117 = 0;
var Inst118 = 0;
var Inst119 = 0;
var Inst120 = 0;
var Inst121 = 0;
var Inst122 = 0;
var Inst123 = 0;
var Inst124 = 0;
var Inst125 = 0;
var Inst126 = 0;
var Inst127 = 0;
var Inst128 = 0;
var Inst129 = 0;
var Inst130 = 0;
var Inst131 = 0;
var Inst132 = 0;
var Inst133 = 0;
var Inst134 = 0;
var Inst135 = 0;
var Inst136 = 0;
var Inst137 = 0;
var Inst138 = 0;
var Inst139 = 0;
var Inst140 = 0;
var Inst141 = 0;
var Inst142 = 0;
var Inst143 = 0;
var Inst144 = 0;
var Inst145 = 0;
var Inst146 = 0;
var Inst147 = 0;
var Inst148 = 0;
var Inst149 = 0;
var Inst150 = 0;
var Inst151 = 0;
var Inst152 = 0;
var Inst153 = 0;
var Inst154 = 0;
var Inst155 = 0;
var Inst156 = 0;
var Inst157 = 0;
var Inst158 = 0;
var Inst159 = 0;
var Inst160 = 0;
var Inst161 = 0;
var Inst162 = 0;
var Inst163 = 0;
var Inst164 = 0;
var Inst165 = 0;
var Inst166 = 0;
var Inst167 = 0;
var Inst168 = 0;
var Inst169 = 0;
var Inst170 = 0;
var Inst171 = 0;
var Inst172 = 0;
var Inst173 = 0;
var Inst174 = 0;
var Inst175 = 0;
var Inst176 = 0;
var Inst177 = 0;
var Inst178 = 0;
var Inst179 = 0;
var Inst180 = 0;
var Inst181 = 0;
var Inst182 = 0;
var Inst183 = 0;
var Inst184 = 0;
var Inst185 = 0;
var Inst186 = 0;
var Inst187 = 0;
var Inst188 = 0;
var Inst189 = 0;
var Inst190 = 0;
var Inst191 = 0;
var Inst192 = 0;
var Inst193 = 0;
var Inst194 = 0;
var Inst195 = 0;
var Inst196 = 0;
var Inst197 = 0;
var Inst198 = 0;
var Inst199 = 0;
var Inst200 = 0;
var Inst201 = 0;
var Inst202 = 0;
var Inst203 = 0;
var Inst204 = 0;
var Inst205 = 0;
var Inst206 = 0;
var Inst207 = 0;
var Inst208 = 0;
var Inst209 = 0;
var Inst210 = 0;
var Inst211 = 0;
var Inst212 = 0;
var Inst213 = 0;
var Inst214 = 0;
var Inst215 = 0;
var Inst216 = 0;
var Inst217 = 0;
var Inst218 = 0;
var Inst219 = 0;
var Inst220 = 0;
var Inst221 = 0;
var Inst222 = 0;
var Inst223 = 0;
var Inst224 = 0;
var Inst225 = 0;
var Inst226 = 0;
var Inst227 = 0;
var Inst228 = 0;
var Inst229 = 0;
var Inst230 = 0;
var Inst231 = 0;
var Inst232 = 0;
var Inst233 = 0;
var Inst234 = 0;
var Inst235 = 0;
var Inst236 = 0;
var Inst237 = 0;
var Inst238 = 0;
var Inst239 = 0;
var Inst240 = 0;
var Inst241 = 0;
var Inst242 = 0;
var Inst243 = 0;
var Inst244 = 0;
var Inst245 = 0;
var Inst246 = 0;
var Inst247 = 0;
var Inst248 = 0;
var Inst249 = 0;
var Inst250 = 0;
var Inst251 = 0;
var Inst252 = 0;
var Inst253 = 0;
var Inst254 = 0;
var Inst255 = 0;
var Inst256 = 0;
var Inst257 = 0;
var Inst258 = 0;
var Inst259 = 0;
var Inst260 = 0;
var Inst261 = 0;
var Inst262 = 0;
var Inst263 = 0;
var Inst264 = 0;
var Inst265 = 0;
var Inst266 = 0;
var Inst267 = 0;
var Inst268 = 0;
var Inst269 = 0;
var Inst270 = 0;
var Inst271 = 0;
var Inst272 = 0;
var Inst273 = 0;
var Inst274 = 0;
var Inst275 = 0;
var Inst276 = 0;
var Inst277 = 0;
var Inst278 = 0;
var Inst279 = 0;
var Inst280 = 0;
var Inst281 = 0;
var Inst282 = 0;
var Inst283 = 0;
var Inst284 = 0;
var Inst285 = 0;
var Inst286 = 0;
var Inst287 = 0;
var Inst288 = 0;
var Inst289 = 0;
var Inst290 = 0;
var Inst291 = 0;
var Inst292 = 0;
var Inst293 = 0;
var Inst294 = 0;
var Inst295 = 0;
var Inst296 = 0;
var Inst297 = 0;
var Inst298 = 0;
var Inst299 = 0;
var Inst300 = 0;
var Inst301 = 0;
var Inst302 = 0;
var Inst303 = 0;
var Inst304 = 0;
var Inst305 = 0;
var Inst306 = 0;
var Inst307 = 0;
var Inst308 = 0;
var Inst309 = 0;
var Inst310 = 0;
var Inst311 = 0;
var Inst312 = 0;
var Inst313 = 0;
var Inst314 = 0;
var Inst315 = 0;
var Inst316 = 0;
var Inst317 = 0;
var Inst318 = 0;
var Inst319 = 0;
var Inst320 = 0;
var Inst321 = 0;
var Inst322 = 0;
var Inst323 = 0;
var Inst324 = 0;
var Inst325 = 0;
var Inst326 = 0;
var Inst327 = 0;
var Inst328 = 0;
var Inst329 = 0;
var Inst330 = 0;
var Inst331 = 0;
var Inst332 = 0;
var Inst333 = 0;
var Inst334 = 0;
var Inst335 = 0;
var Inst336 = 0;
var Inst337 = 0;
var Inst338 = 0;
var Inst339 = 0;
var Inst340 = 0;
var Inst341 = 0;
var Inst342 = 0;
var Inst343 = 0;
var Inst344 = 0;
var Inst345 = 0;
var Inst346 = 0;
var Inst347 = 0;
var Inst348 = 0;
var Inst349 = 0;
var Inst350 = 0;
var Inst351 = 0;
var Inst352 = 0;
var Inst353 = 0;
var Inst354 = 0;
var Inst355 = 0;
var Inst356 = 0;
var Inst357 = 0;
var Inst358 = 0;
var Inst359 = 0;
var Inst360 = 0;
var Inst361 = 0;
var Inst362 = 0;
var Inst363 = 0;
var Inst364 = 0;
var Inst365 = 0;
var Inst366 = 0;
var Inst367 = 0;
var Inst368 = 0;
var Inst369 = 0;
var Inst370 = 0;
var Inst371 = 0;
var Inst372 = 0;
var Inst373 = 0;
var Inst374 = 0;
var Inst375 = 0;
var Inst376 = 0;
var Inst377 = 0;
var Inst378 = 0;
var Inst379 = 0;
var Inst380 = 0;
var Inst381 = 0;
var Inst382 = 0;
var Inst383 = 0;
var Inst384 = 0;
var Inst385 = 0;
var Inst386 = 0;
var Inst387 = 0;
var Inst388 = 0;
var Inst389 = 0;
var Inst390 = 0;
var Inst391 = 0;
var Inst392 = 0;
var Inst393 = 0;
var Inst394 = 0;
var Inst395 = 0;
var Inst396 = 0;
var Inst397 = 0;
var Inst398 = 0;
var Inst399 = 0;
var Inst400 = 0;
var Inst401 = 0;
var Inst402 = 0;
var Inst403 = 0;
var Inst404 = 0;
var Inst405 = 0;
var Inst406 = 0;
var Inst407 = 0;
var Inst408 = 0;
var Inst409 = 0;
var Inst410 = 0;
var Inst411 = 0;
var Inst412 = 0;
var Inst413 = 0;
var Inst414 = 0;
var Inst415 = 0;
var Inst416 = 0;
var Inst417 = 0;
var Inst418 = 0;
var Inst419 = 0;
var Inst420 = 0;
var Inst421 = 0;
var Inst422 = 0;
var Inst423 = 0;
var Inst424 = 0;
var Inst425 = 0;
var Inst426 = 0;
var Inst427 = 0;
var Inst428 = 0;
var Inst429 = 0;
var Inst430 = 0;
var Inst431 = 0;
var Inst432 = 0;
var Inst433 = 0;
var Inst434 = 0;
var Inst435 = 0;
var Inst436 = 0;
var Inst437 = 0;
var Inst438 = 0;
var Inst439 = 0;
var Inst440 = 0;
var Inst441 = 0;
var Inst442 = 0;
var Inst443 = 0;
var Inst444 = 0;
var Inst445 = 0;
var Inst446 = 0;
var Inst447 = 0;
var Inst448 = 0;
var Inst449 = 0;
var Inst450 = 0;
var Inst451 = 0;
var Inst452 = 0;
var Inst453 = 0;
var Inst454 = 0;
var Inst455 = 0;
var Inst456 = 0;
var Inst457 = 0;
var Inst458 = 0;
var Inst459 = 0;
var Inst460 = 0;
var Inst461 = 0;
var Inst462 = 0;
var Inst463 = 0;
var Inst464 = 0;
var Inst465 = 0;
var Inst466 = 0;
var Inst467 = 0;
var Inst468 = 0;
var Inst469 = 0;
var Inst470 = 0;
var Inst471 = 0;
var Inst472 = 0;
var Inst473 = 0;
var Inst474 = 0;
var Inst475 = 0;
var Inst476 = 0;
var Inst477 = 0;
var Inst478 = 0;
var Inst479 = 0;
var Inst480 = 0;
var Inst481 = 0;
var Inst482 = 0;
var Inst483 = 0;
var Inst484 = 0;
var Inst485 = 0;
var Inst486 = 0;
var Inst487 = 0;
var Inst488 = 0;
var Inst489 = 0;
var Inst490 = 0;
var Inst491 = 0;
var Inst492 = 0;
var Inst493 = 0;
var Inst494 = 0;
var Inst495 = 0;
var Inst496 = 0;
var Inst497 = 0;
var Inst498 = 0;
var Inst499 = 0;
var Inst500 = 0;
var Inst501 = 0;
var Inst502 = 0;
var Inst503 = 0;
var Inst504 = 0;
var Inst505 = 0;
var Inst506 = 0;
var Inst507 = 0;
var Inst508 = 0;
var Inst509 = 0;
var Inst510 = 0;
var Inst511 = 0;
var Inst512 = 0;
var Inst513 = 0;
var Inst514 = 0;
var Inst515 = 0;
var Inst516 = 0;
var Inst517 = 0;
var Inst518 = 0;
var Inst519 = 0;
var Inst520 = 0;
var Inst521 = 0;
var Inst522 = 0;
var Inst523 = 0;
var Inst524 = 0;
var Inst525 = 0;
var Inst526 = 0;
var Inst527 = 0;
var Inst528 = 0;
var Inst529 = 0;
var Inst530 = 0;
var Inst531 = 0;
var Inst532 = 0;
var Inst533 = 0;
var Inst534 = 0;
var Inst535 = 0;
var Inst536 = 0;
var Inst537 = 0;
var Inst538 = 0;
var Inst539 = 0;
var Inst540 = 0;
var Inst541 = 0;
var Inst542 = 0;
var Inst543 = 0;
var Inst544 = 0;
var Inst545 = 0;
var Inst546 = 0;
var Inst547 = 0;
var Inst548 = 0;
var Inst549 = 0;
var Inst550 = 0;
var Inst551 = 0;
var Inst552 = 0;
var Inst553 = 0;
var Inst554 = 0;
var Inst555 = 0;
var Inst556 = 0;
var Inst557 = 0;
var Inst558 = 0;
var Inst559 = 0;
var Inst560 = 0;
var Inst561 = 0;
var Inst562 = 0;
var Inst563 = 0;
var Inst564 = 0;
var Inst565 = 0;
var Inst566 = 0;
var Inst567 = 0;
var Inst568 = 0;
var Inst569 = 0;
var Inst570 = 0;
var Inst571 = 0;
var Inst572 = 0;
var Inst573 = 0;
var Inst574 = 0;
var Inst575 = 0;
var Inst576 = 0;
var Inst577 = 0;
var Inst578 = 0;
var Inst579 = 0;
var Inst580 = 0;
var Inst581 = 0;
var Inst582 = 0;
var Inst583 = 0;
var Inst584 = 0;
var Inst585 = 0;
var Inst586 = 0;
var Inst587 = 0;
var Inst588 = 0;
var Inst589 = 0;
var Inst590 = 0;
var Inst591 = 0;
var Inst592 = 0;
var Inst593 = 0;
var Inst594 = 0;
var Inst595 = 0;
var Inst596 = 0;
var Inst597 = 0;
var Inst598 = 0;
var Inst599 = 0;
var Inst600 = 0;
var Inst601 = 0;
var Inst602 = 0;
var Inst603 = 0;
var Inst604 = 0;
var Inst605 = 0;
var Inst606 = 0;
var Inst607 = 0;
var Inst608 = 0;
var Inst609 = 0;
var Inst610 = 0;
var Inst611 = 0;
var Inst612 = 0;
var Inst613 = 0;
var Inst614 = 0;
var Inst615 = 0;
var Inst616 = 0;
var Inst617 = 0;
var Inst618 = 0;
var Inst619 = 0;
var Inst620 = 0;
var Inst621 = 0;
var Inst622 = 0;
var Inst623 = 0;
var Inst624 = 0;
var Inst625 = 0;
var Inst626 = 0;
var Inst627 = 0;
var Inst628 = 0;
var Inst629 = 0;
var Inst630 = 0;
var Inst631 = 0;
var Inst632 = 0;
var Inst633 = 0;
var Inst634 = 0;
var Inst635 = 0;
var Inst636 = 0;
var Inst637 = 0;
var Inst638 = 0;
var Inst639 = 0;
var Inst640 = 0;
var Inst641 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//@ runNoFTL
try { if (Inst0 <= 1000 && typeof (assert) != "undefined") {_RecordType("<22,28,2>",(assert)); Inst0++; } } catch(e) {}
function assert(testedValue, msg) {
try { if (Inst1 <= 1000 && typeof (testedValue) != "undefined") {_RecordType("<29,40,2>",(testedValue)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (msg) != "undefined") {_RecordType("<42,45,2>",(msg)); Inst2++; } } catch(e) {}
  ;
} //======================================================================================
// Testing the string that we're calling split on.
// Proxied String subclass.


(function () {
  let accesses = [];
try { if (Inst3 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<246,254,10>",(accesses)); Inst3++; } } catch(e) {}

try { if (Inst5 <= 1000 && typeof (String) != "undefined") {_RecordType("<288,294,12>",(String)); Inst5++; } } catch(e) {}
  class ExtString extends String {}
try { if (Inst4 <= 1000 && typeof (ExtString) != "undefined") {_RecordType("<270,279,12>",(ExtString)); Inst4++; } } catch(e) {}

try { if (Inst7 <= 1000 && typeof (ExtString) != "undefined") {_RecordType("<315,324,14>",(ExtString)); Inst7++; } } catch(e) {}
  var obj = new ExtString("splitme");
try { if (Inst6 <= 1000 && typeof (obj) != "undefined") {_RecordType("<305,308,14>",(obj)); Inst6++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<355,360,15>",(Proxy)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (obj) != "undefined") {_RecordType("<361,364,15>",(obj)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (get) != "undefined") {_RecordType("<372,375,16>",(get)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (obj) != "undefined") {_RecordType("<376,379,16>",(obj)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (prop) != "undefined") {_RecordType("<381,385,16>",(prop)); Inst13++; } } catch(e) {}
  var proxy = new Proxy(obj, {
    get(obj, prop) {
try { if (Inst14 <= 1000 && typeof (accesses.push) != "undefined") {_RecordType("<395,408,17>",(accesses.push)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<395,403,17>",(accesses)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (prop.toString) != "undefined") {_RecordType("<409,422,17>",(prop.toString)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (prop) != "undefined") {_RecordType("<409,413,17>",(prop)); Inst17++; } } catch(e) {}
      accesses.push(prop.toString());

try { if (Inst18 <= 1000 && typeof (prop) != "undefined") {_RecordType("<438,442,19>",(prop)); Inst18++; } } catch(e) {}
      if (prop === "toString") {
        return function () {
try { if (Inst19 <= 1000 && typeof (accesses.push) != "undefined") {_RecordType("<500,513,21>",(accesses.push)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<500,508,21>",(accesses)); Inst20++; } } catch(e) {}
          accesses.push("in_toString");
try { if (Inst21 <= 1000 && typeof (obj.toString) != "undefined") {_RecordType("<547,559,22>",(obj.toString)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (obj) != "undefined") {_RecordType("<547,550,22>",(obj)); Inst22++; } } catch(e) {}
          return obj.toString();
        };
      }

try { if (Inst23 <= 1000 && typeof (obj[prop]) != "undefined") {_RecordType("<596,605,26>",(obj[prop])); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (obj) != "undefined") {_RecordType("<596,599,26>",(obj)); Inst24++; } } catch(e) {}
      return obj[prop];
    }

  });
try { if (Inst8 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<343,348,15>",(proxy)); Inst8++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<622,630,30>",(accesses)); Inst25++; } } catch(e) {}
  accesses == "";
  "unexpected call to overridden props";
try { if (Inst27 <= 1000 && typeof (String.prototype.split.call) != "undefined") {_RecordType("<694,721,32>",(String.prototype.split.call)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (String.prototype.split) != "undefined") {_RecordType("<694,716,32>",(String.prototype.split)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (String.prototype) != "undefined") {_RecordType("<694,710,32>",(String.prototype)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (String) != "undefined") {_RecordType("<694,700,32>",(String)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<722,727,32>",(proxy)); Inst31++; } } catch(e) {}
  let result = String.prototype.split.call(proxy, "it");
try { if (Inst26 <= 1000 && typeof (result) != "undefined") {_RecordType("<685,691,32>",(result)); Inst26++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<738,746,33>",(accesses)); Inst32++; } } catch(e) {}
  accesses == "Symbol(Symbol.toPrimitive),toString,in_toString";
  "Property accesses do not match expectation";
try { if (Inst33 <= 1000 && typeof (result) != "undefined") {_RecordType("<851,857,35>",(result)); Inst33++; } } catch(e) {}
  result == "spl,me";
  "Unexpected result";
})(); // Object that looks like a string.


(function () {
  let accesses = [];
try { if (Inst34 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<959,967,41>",(accesses)); Inst34++; } } catch(e) {}
try { if (Inst36 <= 1000 && typeof (Symbol.toPrimitive) != "undefined") {_RecordType("<993,1011,43>",(Symbol.toPrimitive)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<993,999,43>",(Symbol)); Inst37++; } } catch(e) {}
  var obj = {
    [Symbol.toPrimitive]() {
try { if (Inst38 <= 1000 && typeof (accesses.push) != "undefined") {_RecordType("<1023,1036,44>",(accesses.push)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<1023,1031,44>",(accesses)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (Symbol.toPrimitive.toString) != "undefined") {_RecordType("<1037,1064,44>",(Symbol.toPrimitive.toString)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (Symbol.toPrimitive) != "undefined") {_RecordType("<1037,1055,44>",(Symbol.toPrimitive)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<1037,1043,44>",(Symbol)); Inst42++; } } catch(e) {}
      accesses.push(Symbol.toPrimitive.toString());
      return "splitme";
    }

  };
try { if (Inst35 <= 1000 && typeof (obj) != "undefined") {_RecordType("<980,983,42>",(obj)); Inst35++; } } catch(e) {}
try { if (Inst43 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<1107,1115,49>",(accesses)); Inst43++; } } catch(e) {}
  accesses == "";
  "unexpected call to overridden props";
try { if (Inst45 <= 1000 && typeof (String.prototype.split.call) != "undefined") {_RecordType("<1179,1206,51>",(String.prototype.split.call)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (String.prototype.split) != "undefined") {_RecordType("<1179,1201,51>",(String.prototype.split)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (String.prototype) != "undefined") {_RecordType("<1179,1195,51>",(String.prototype)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (String) != "undefined") {_RecordType("<1179,1185,51>",(String)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (obj) != "undefined") {_RecordType("<1207,1210,51>",(obj)); Inst49++; } } catch(e) {}
  let result = String.prototype.split.call(obj, "it");
try { if (Inst44 <= 1000 && typeof (result) != "undefined") {_RecordType("<1170,1176,51>",(result)); Inst44++; } } catch(e) {}
try { if (Inst50 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<1221,1229,52>",(accesses)); Inst50++; } } catch(e) {}
  accesses == "Symbol(Symbol.toPrimitive)";
  "Property accesses do not match expectation";
try { if (Inst51 <= 1000 && typeof (result) != "undefined") {_RecordType("<1313,1319,54>",(result)); Inst51++; } } catch(e) {}
  result == "spl,me";
  "Unexpected result";
})(); // Object that looks like a string.


(function () {
  let accesses = [];
try { if (Inst52 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<1421,1429,60>",(accesses)); Inst52++; } } catch(e) {}
try { if (Inst54 <= 1000 && typeof (toString) != "undefined") {_RecordType("<1454,1462,62>",(toString)); Inst54++; } } catch(e) {}
  var obj = {
    toString() {
try { if (Inst55 <= 1000 && typeof (accesses.push) != "undefined") {_RecordType("<1473,1486,63>",(accesses.push)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<1473,1481,63>",(accesses)); Inst56++; } } catch(e) {}
      accesses.push("toString");
      return "splitme";
    }

  };
try { if (Inst53 <= 1000 && typeof (obj) != "undefined") {_RecordType("<1442,1445,61>",(obj)); Inst53++; } } catch(e) {}
try { if (Inst57 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<1538,1546,68>",(accesses)); Inst57++; } } catch(e) {}
  accesses == "";
  "unexpected call to overridden props";
try { if (Inst59 <= 1000 && typeof (String.prototype.split.call) != "undefined") {_RecordType("<1610,1637,70>",(String.prototype.split.call)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (String.prototype.split) != "undefined") {_RecordType("<1610,1632,70>",(String.prototype.split)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (String.prototype) != "undefined") {_RecordType("<1610,1626,70>",(String.prototype)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (String) != "undefined") {_RecordType("<1610,1616,70>",(String)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (obj) != "undefined") {_RecordType("<1638,1641,70>",(obj)); Inst63++; } } catch(e) {}
  let result = String.prototype.split.call(obj, "it");
try { if (Inst58 <= 1000 && typeof (result) != "undefined") {_RecordType("<1601,1607,70>",(result)); Inst58++; } } catch(e) {}
try { if (Inst64 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<1652,1660,71>",(accesses)); Inst64++; } } catch(e) {}
  accesses == "toString";
  "Property accesses do not match expectation";
try { if (Inst65 <= 1000 && typeof (result) != "undefined") {_RecordType("<1726,1732,73>",(result)); Inst65++; } } catch(e) {}
  result == "spl,me";
  "Unexpected result";
})(); // String subclass with overridden @@split.


(function () {
  let accesses = [];
try { if (Inst66 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<1842,1850,79>",(accesses)); Inst66++; } } catch(e) {}

try { if (Inst78 <= 1000 && typeof (String) != "undefined") {_RecordType("<1884,1890,81>",(String)); Inst78++; } } catch(e) {}
  class ExtString extends String {
    [Symbol.split](str) {
try { if (Inst68 <= 1000 && typeof (str) != "undefined") {_RecordType("<1912,1915,82>",(str)); Inst68++; } } catch(e) {}
try { if (Inst69 <= 1000 && typeof (accesses.push) != "undefined") {_RecordType("<1925,1938,83>",(accesses.push)); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<1925,1933,83>",(accesses)); Inst70++; } } catch(e) {}
      accesses.push("Symbol(Symbol.split)");
try { if (Inst71 <= 1000 && typeof (RegExp.prototype[Symbol.split].call) != "undefined") {_RecordType("<1977,2012,84>",(RegExp.prototype[Symbol.split].call)); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (RegExp.prototype[Symbol.split]) != "undefined") {_RecordType("<1977,2007,84>",(RegExp.prototype[Symbol.split])); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (RegExp.prototype) != "undefined") {_RecordType("<1977,1993,84>",(RegExp.prototype)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<1977,1983,84>",(RegExp)); Inst74++; } } catch(e) {}try { if (Inst75 <= 1000 && typeof (Symbol.split) != "undefined") {_RecordType("<1994,2006,84>",(Symbol.split)); Inst75++; } } catch(e) {}try { if (Inst76 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<1994,2000,84>",(Symbol)); Inst76++; } } catch(e) {}try { if (Inst77 <= 1000 && typeof (str) != "undefined") {_RecordType("<2019,2022,84>",(str)); Inst77++; } } catch(e) {}
      return RegExp.prototype[Symbol.split].call(/it/, str);
    }

  }
try { if (Inst67 <= 1000 && typeof (ExtString) != "undefined") {_RecordType("<1866,1875,81>",(ExtString)); Inst67++; } } catch(e) {}

  ;
try { if (Inst80 <= 1000 && typeof (ExtString) != "undefined") {_RecordType("<2057,2066,90>",(ExtString)); Inst80++; } } catch(e) {}
  var obj = new ExtString();
try { if (Inst79 <= 1000 && typeof (obj) != "undefined") {_RecordType("<2047,2050,90>",(obj)); Inst79++; } } catch(e) {}
try { if (Inst81 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<2072,2080,91>",(accesses)); Inst81++; } } catch(e) {}
  accesses == "";
  "unexpected call to overridden props";
try { if (Inst83 <= 1000 && typeof ("splitme".split) != "undefined") {_RecordType("<2144,2159,93>",("splitme".split)); Inst83++; } } catch(e) {}try { if (Inst84 <= 1000 && typeof (obj) != "undefined") {_RecordType("<2160,2163,93>",(obj)); Inst84++; } } catch(e) {}
  let result = "splitme".split(obj);
try { if (Inst82 <= 1000 && typeof (result) != "undefined") {_RecordType("<2135,2141,93>",(result)); Inst82++; } } catch(e) {}
try { if (Inst85 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<2168,2176,94>",(accesses)); Inst85++; } } catch(e) {}
  accesses == "Symbol(Symbol.split)";
  "Property accesses do not match expectation";
try { if (Inst86 <= 1000 && typeof (result) != "undefined") {_RecordType("<2254,2260,96>",(result)); Inst86++; } } catch(e) {}
  result == "spl,me";
  "Unexpected result";
})(); // Object with overridden @@search.


(function () {
  let accesses = [];
try { if (Inst87 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<2362,2370,102>",(accesses)); Inst87++; } } catch(e) {}
try { if (Inst89 <= 1000 && typeof (Symbol.split) != "undefined") {_RecordType("<2396,2408,104>",(Symbol.split)); Inst89++; } } catch(e) {}try { if (Inst90 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<2396,2402,104>",(Symbol)); Inst90++; } } catch(e) {}try { if (Inst91 <= 1000 && typeof (str) != "undefined") {_RecordType("<2410,2413,104>",(str)); Inst91++; } } catch(e) {}
  var obj = {
    [Symbol.split](str) {
try { if (Inst92 <= 1000 && typeof (accesses.push) != "undefined") {_RecordType("<2423,2436,105>",(accesses.push)); Inst92++; } } catch(e) {}try { if (Inst93 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<2423,2431,105>",(accesses)); Inst93++; } } catch(e) {}
      accesses.push("Symbol(Symbol.split)");
try { if (Inst94 <= 1000 && typeof (RegExp.prototype[Symbol.split].call) != "undefined") {_RecordType("<2475,2510,106>",(RegExp.prototype[Symbol.split].call)); Inst94++; } } catch(e) {}try { if (Inst95 <= 1000 && typeof (RegExp.prototype[Symbol.split]) != "undefined") {_RecordType("<2475,2505,106>",(RegExp.prototype[Symbol.split])); Inst95++; } } catch(e) {}try { if (Inst96 <= 1000 && typeof (RegExp.prototype) != "undefined") {_RecordType("<2475,2491,106>",(RegExp.prototype)); Inst96++; } } catch(e) {}try { if (Inst97 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<2475,2481,106>",(RegExp)); Inst97++; } } catch(e) {}try { if (Inst98 <= 1000 && typeof (Symbol.split) != "undefined") {_RecordType("<2492,2504,106>",(Symbol.split)); Inst98++; } } catch(e) {}try { if (Inst99 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<2492,2498,106>",(Symbol)); Inst99++; } } catch(e) {}try { if (Inst100 <= 1000 && typeof (str) != "undefined") {_RecordType("<2517,2520,106>",(str)); Inst100++; } } catch(e) {}
      return RegExp.prototype[Symbol.split].call(/it/, str);
    }

  };
try { if (Inst88 <= 1000 && typeof (obj) != "undefined") {_RecordType("<2383,2386,103>",(obj)); Inst88++; } } catch(e) {}
try { if (Inst101 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<2537,2545,110>",(accesses)); Inst101++; } } catch(e) {}
  accesses == "";
  "unexpected call to overridden props";
try { if (Inst103 <= 1000 && typeof ("splitme".split) != "undefined") {_RecordType("<2609,2624,112>",("splitme".split)); Inst103++; } } catch(e) {}try { if (Inst104 <= 1000 && typeof (obj) != "undefined") {_RecordType("<2625,2628,112>",(obj)); Inst104++; } } catch(e) {}
  let result = "splitme".split(obj);
try { if (Inst102 <= 1000 && typeof (result) != "undefined") {_RecordType("<2600,2606,112>",(result)); Inst102++; } } catch(e) {}
try { if (Inst105 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<2633,2641,113>",(accesses)); Inst105++; } } catch(e) {}
  accesses == "Symbol(Symbol.split)";
  "Property accesses do not match expectation";
try { if (Inst106 <= 1000 && typeof (result) != "undefined") {_RecordType("<2719,2725,115>",(result)); Inst106++; } } catch(e) {}
  result == "spl,me";
  "Unexpected result";
})(); //======================================================================================
// Testing the regexp object that we're calling split with.
// Subclass with overridden [@@species]: Testing ES6 21.2.5.11: 4. Let C be ? SpeciesConstructor(rx, %RegExp%).


(function () {
  let accesses = [];
try { if (Inst107 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<3052,3060,123>",(accesses)); Inst107++; } } catch(e) {}

try { if (Inst109 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<3095,3101,125>",(RegExp)); Inst109++; } } catch(e) {}
  class TestRegExp extends RegExp {}
try { if (Inst108 <= 1000 && typeof (TestRegExp) != "undefined") {_RecordType("<3076,3086,125>",(TestRegExp)); Inst108++; } } catch(e) {}

try { if (Inst110 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<3108,3129,127>",(Object.defineProperty)); Inst110++; } } catch(e) {}try { if (Inst111 <= 1000 && typeof (Object) != "undefined") {_RecordType("<3108,3114,127>",(Object)); Inst111++; } } catch(e) {}try { if (Inst112 <= 1000 && typeof (TestRegExp) != "undefined") {_RecordType("<3130,3140,127>",(TestRegExp)); Inst112++; } } catch(e) {}try { if (Inst113 <= 1000 && typeof (Symbol.species) != "undefined") {_RecordType("<3142,3156,127>",(Symbol.species)); Inst113++; } } catch(e) {}try { if (Inst114 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<3142,3148,127>",(Symbol)); Inst114++; } } catch(e) {}
  Object.defineProperty(TestRegExp, Symbol.species, {
    value: function () {
try { if (Inst115 <= 1000 && typeof (accesses.push) != "undefined") {_RecordType("<3191,3204,129>",(accesses.push)); Inst115++; } } catch(e) {}try { if (Inst116 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<3191,3199,129>",(accesses)); Inst116++; } } catch(e) {}try { if (Inst117 <= 1000 && typeof (Symbol.species.toString) != "undefined") {_RecordType("<3205,3228,129>",(Symbol.species.toString)); Inst117++; } } catch(e) {}try { if (Inst118 <= 1000 && typeof (Symbol.species) != "undefined") {_RecordType("<3205,3219,129>",(Symbol.species)); Inst118++; } } catch(e) {}try { if (Inst119 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<3205,3211,129>",(Symbol)); Inst119++; } } catch(e) {}
      accesses.push(Symbol.species.toString());
      return /it/y;
    }
  });
try { if (Inst121 <= 1000 && typeof (TestRegExp) != "undefined") {_RecordType("<3281,3291,133>",(TestRegExp)); Inst121++; } } catch(e) {}
  let obj = new TestRegExp();
try { if (Inst120 <= 1000 && typeof (obj) != "undefined") {_RecordType("<3271,3274,133>",(obj)); Inst120++; } } catch(e) {}
  let errorStr;
try { if (Inst122 <= 1000 && typeof (errorStr) != "undefined") {_RecordType("<3301,3309,134>",(errorStr)); Inst122++; } } catch(e) {}
try { if (Inst123 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<3313,3321,135>",(accesses)); Inst123++; } } catch(e) {}
  accesses == "";
  "unexpected call to overridden props";
try { if (Inst125 <= 1000 && typeof ("splitme".split) != "undefined") {_RecordType("<3385,3400,137>",("splitme".split)); Inst125++; } } catch(e) {}try { if (Inst126 <= 1000 && typeof (obj) != "undefined") {_RecordType("<3401,3404,137>",(obj)); Inst126++; } } catch(e) {}
  let result = "splitme".split(obj);
try { if (Inst124 <= 1000 && typeof (result) != "undefined") {_RecordType("<3376,3382,137>",(result)); Inst124++; } } catch(e) {}
try { if (Inst127 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<3409,3417,138>",(accesses)); Inst127++; } } catch(e) {}
  accesses == "Symbol(Symbol.species)";
  "Property accesses do not match expectation";
try { if (Inst128 <= 1000 && typeof (result) != "undefined") {_RecordType("<3497,3503,140>",(result)); Inst128++; } } catch(e) {}
  result == "spl,me";
  "Unexpected result";
})(); // RegExp subclass with constructor: Testing ES6 21.2.5.11: 4. Let C be ? SpeciesConstructor(rx, %RegExp%).


(function () {
  let accesses = [];
try { if (Inst129 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<3677,3685,146>",(accesses)); Inst129++; } } catch(e) {}

try { if (Inst137 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<3720,3726,148>",(RegExp)); Inst137++; } } catch(e) {}
  class TestRegExp extends RegExp {
    constructor(str, flags) {
try { if (Inst131 <= 1000 && typeof (str) != "undefined") {_RecordType("<3745,3748,149>",(str)); Inst131++; } } catch(e) {}try { if (Inst132 <= 1000 && typeof (flags) != "undefined") {_RecordType("<3750,3755,149>",(flags)); Inst132++; } } catch(e) {}
try { if (Inst133 <= 1000 && typeof (str) != "undefined") {_RecordType("<3771,3774,150>",(str)); Inst133++; } } catch(e) {}try { if (Inst134 <= 1000 && typeof (flags) != "undefined") {_RecordType("<3776,3781,150>",(flags)); Inst134++; } } catch(e) {}
      super(str, flags);
try { if (Inst135 <= 1000 && typeof (accesses.push) != "undefined") {_RecordType("<3790,3803,151>",(accesses.push)); Inst135++; } } catch(e) {}try { if (Inst136 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<3790,3798,151>",(accesses)); Inst136++; } } catch(e) {}
      accesses.push("constructor");
    }

  }
try { if (Inst130 <= 1000 && typeof (TestRegExp) != "undefined") {_RecordType("<3701,3711,148>",(TestRegExp)); Inst130++; } } catch(e) {}

try { if (Inst139 <= 1000 && typeof (TestRegExp) != "undefined") {_RecordType("<3848,3858,156>",(TestRegExp)); Inst139++; } } catch(e) {}
  let obj = new TestRegExp("it");
try { if (Inst138 <= 1000 && typeof (obj) != "undefined") {_RecordType("<3838,3841,156>",(obj)); Inst138++; } } catch(e) {}
try { if (Inst140 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<3868,3876,157>",(accesses)); Inst140++; } } catch(e) {}
  accesses == "constructor";
  "unexpected call to overridden props";
try { if (Inst142 <= 1000 && typeof ("splitme".split) != "undefined") {_RecordType("<3951,3966,159>",("splitme".split)); Inst142++; } } catch(e) {}try { if (Inst143 <= 1000 && typeof (obj) != "undefined") {_RecordType("<3967,3970,159>",(obj)); Inst143++; } } catch(e) {}
  let result = "splitme".split(obj);
try { if (Inst141 <= 1000 && typeof (result) != "undefined") {_RecordType("<3942,3948,159>",(result)); Inst141++; } } catch(e) {}
try { if (Inst144 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<3975,3983,160>",(accesses)); Inst144++; } } catch(e) {}
  accesses == "constructor,constructor";
  "Property accesses do not match expectation";
try { if (Inst145 <= 1000 && typeof (result) != "undefined") {_RecordType("<4064,4070,162>",(result)); Inst145++; } } catch(e) {}
  result == "spl,me";
  "Unexpected result";
})(); // An object with species constructor: Testing ES6 21.2.5.11: 4. Let C be ? SpeciesConstructor(rx, %RegExp%).


(function () {
  let accesses = [];
try { if (Inst146 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<4246,4254,168>",(accesses)); Inst146++; } } catch(e) {}
  let obj = {
    constructor: {}
  };
try { if (Inst147 <= 1000 && typeof (obj) != "undefined") {_RecordType("<4267,4270,169>",(obj)); Inst147++; } } catch(e) {}

  obj.constructor[Symbol.species] = function () {
try { if (Inst153 <= 1000 && typeof (accesses.push) != "undefined") {_RecordType("<4355,4368,174>",(accesses.push)); Inst153++; } } catch(e) {}try { if (Inst154 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<4355,4363,174>",(accesses)); Inst154++; } } catch(e) {}
    accesses.push("constructor");
    return /it/y;
  };
try { if (Inst148 <= 1000 && typeof (obj.constructor[Symbol.species]) != "undefined") {_RecordType("<4303,4334,173>",(obj.constructor[Symbol.species])); Inst148++; } } catch(e) {}try { if (Inst149 <= 1000 && typeof (obj.constructor) != "undefined") {_RecordType("<4303,4318,173>",(obj.constructor)); Inst149++; } } catch(e) {}try { if (Inst150 <= 1000 && typeof (obj) != "undefined") {_RecordType("<4303,4306,173>",(obj)); Inst150++; } } catch(e) {}try { if (Inst151 <= 1000 && typeof (Symbol.species) != "undefined") {_RecordType("<4319,4333,173>",(Symbol.species)); Inst151++; } } catch(e) {}try { if (Inst152 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<4319,4325,173>",(Symbol)); Inst152++; } } catch(e) {}

  obj[Symbol.split] = function (str, limit) {
try { if (Inst159 <= 1000 && typeof (str) != "undefined") {_RecordType("<4441,4444,178>",(str)); Inst159++; } } catch(e) {}try { if (Inst160 <= 1000 && typeof (limit) != "undefined") {_RecordType("<4446,4451,178>",(limit)); Inst160++; } } catch(e) {}
try { if (Inst161 <= 1000 && typeof (accesses.push) != "undefined") {_RecordType("<4459,4472,179>",(accesses.push)); Inst161++; } } catch(e) {}try { if (Inst162 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<4459,4467,179>",(accesses)); Inst162++; } } catch(e) {}try { if (Inst163 <= 1000 && typeof (Symbol.split.toString) != "undefined") {_RecordType("<4473,4494,179>",(Symbol.split.toString)); Inst163++; } } catch(e) {}try { if (Inst164 <= 1000 && typeof (Symbol.split) != "undefined") {_RecordType("<4473,4485,179>",(Symbol.split)); Inst164++; } } catch(e) {}try { if (Inst165 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<4473,4479,179>",(Symbol)); Inst165++; } } catch(e) {}
    accesses.push(Symbol.split.toString());
try { if (Inst166 <= 1000 && typeof (RegExp.prototype[Symbol.split].call) != "undefined") {_RecordType("<4510,4545,180>",(RegExp.prototype[Symbol.split].call)); Inst166++; } } catch(e) {}try { if (Inst167 <= 1000 && typeof (RegExp.prototype[Symbol.split]) != "undefined") {_RecordType("<4510,4540,180>",(RegExp.prototype[Symbol.split])); Inst167++; } } catch(e) {}try { if (Inst168 <= 1000 && typeof (RegExp.prototype) != "undefined") {_RecordType("<4510,4526,180>",(RegExp.prototype)); Inst168++; } } catch(e) {}try { if (Inst169 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<4510,4516,180>",(RegExp)); Inst169++; } } catch(e) {}try { if (Inst170 <= 1000 && typeof (Symbol.split) != "undefined") {_RecordType("<4527,4539,180>",(Symbol.split)); Inst170++; } } catch(e) {}try { if (Inst171 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<4527,4533,180>",(Symbol)); Inst171++; } } catch(e) {}try { if (Inst172 <= 1000 && typeof (str) != "undefined") {_RecordType("<4552,4555,180>",(str)); Inst172++; } } catch(e) {}try { if (Inst173 <= 1000 && typeof (limit) != "undefined") {_RecordType("<4557,4562,180>",(limit)); Inst173++; } } catch(e) {}
    return RegExp.prototype[Symbol.split].call(this, str, limit);
  };
try { if (Inst155 <= 1000 && typeof (obj[Symbol.split]) != "undefined") {_RecordType("<4411,4428,178>",(obj[Symbol.split])); Inst155++; } } catch(e) {}try { if (Inst156 <= 1000 && typeof (obj) != "undefined") {_RecordType("<4411,4414,178>",(obj)); Inst156++; } } catch(e) {}try { if (Inst157 <= 1000 && typeof (Symbol.split) != "undefined") {_RecordType("<4415,4427,178>",(Symbol.split)); Inst157++; } } catch(e) {}try { if (Inst158 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<4415,4421,178>",(Symbol)); Inst158++; } } catch(e) {}

try { if (Inst174 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<4573,4581,183>",(accesses)); Inst174++; } } catch(e) {}
  accesses == "";
  "unexpected call to overridden props";
try { if (Inst176 <= 1000 && typeof ("splitme".split) != "undefined") {_RecordType("<4645,4660,185>",("splitme".split)); Inst176++; } } catch(e) {}try { if (Inst177 <= 1000 && typeof (obj) != "undefined") {_RecordType("<4661,4664,185>",(obj)); Inst177++; } } catch(e) {}
  let result = "splitme".split(obj);
try { if (Inst175 <= 1000 && typeof (result) != "undefined") {_RecordType("<4636,4642,185>",(result)); Inst175++; } } catch(e) {}
try { if (Inst178 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<4669,4677,186>",(accesses)); Inst178++; } } catch(e) {}
  accesses == "Symbol(Symbol.split),constructor";
  "Property accesses do not match expectation";
try { if (Inst179 <= 1000 && typeof (result) != "undefined") {_RecordType("<4767,4773,188>",(result)); Inst179++; } } catch(e) {}
  result == "spl,me";
  "Unexpected result";
})(); // RegExp object with overridden flags: Testing ES6 21.2.5.11: 5. Let flags be ? ToString(? Get(rx, "flags")).


(function () {
  let flags = ["flags", "global", "ignoreCase", "multiline", "sticky", "unicode"];
try { if (Inst180 <= 1000 && typeof (flags) != "undefined") {_RecordType("<4950,4955,194>",(flags)); Inst180++; } } catch(e) {}
  let flagValues = ["", false, false, false, false, false];
try { if (Inst181 <= 1000 && typeof (flagValues) != "undefined") {_RecordType("<5033,5043,195>",(flagValues)); Inst181++; } } catch(e) {}

  for (let index in flags) {
try { if (Inst182 <= 1000 && typeof (index) != "undefined") {_RecordType("<5099,5104,197>",(index)); Inst182++; } } catch(e) {}try { if (Inst183 <= 1000 && typeof (flags) != "undefined") {_RecordType("<5108,5113,197>",(flags)); Inst183++; } } catch(e) {}
try { if (Inst204 <= 1000 && typeof (flags[index]) != "undefined") {_RecordType("<5614,5626,215>",(flags[index])); Inst204++; } } catch(e) {}try { if (Inst205 <= 1000 && typeof (flags) != "undefined") {_RecordType("<5614,5619,215>",(flags)); Inst205++; } } catch(e) {}try { if (Inst206 <= 1000 && typeof (flagValues[index]) != "undefined") {_RecordType("<5628,5645,215>",(flagValues[index])); Inst206++; } } catch(e) {}try { if (Inst207 <= 1000 && typeof (flagValues) != "undefined") {_RecordType("<5628,5638,215>",(flagValues)); Inst207++; } } catch(e) {}
    (function (flag, flagValue) {
try { if (Inst184 <= 1000 && typeof (flag) != "undefined") {_RecordType("<5132,5136,198>",(flag)); Inst184++; } } catch(e) {}try { if (Inst185 <= 1000 && typeof (flagValue) != "undefined") {_RecordType("<5138,5147,198>",(flagValue)); Inst185++; } } catch(e) {}
      let accesses = [];
try { if (Inst186 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<5161,5169,199>",(accesses)); Inst186++; } } catch(e) {}
      let obj = /it/;
try { if (Inst187 <= 1000 && typeof (obj) != "undefined") {_RecordType("<5186,5189,200>",(obj)); Inst187++; } } catch(e) {}
try { if (Inst188 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<5204,5225,201>",(Object.defineProperty)); Inst188++; } } catch(e) {}try { if (Inst189 <= 1000 && typeof (Object) != "undefined") {_RecordType("<5204,5210,201>",(Object)); Inst189++; } } catch(e) {}try { if (Inst190 <= 1000 && typeof (obj) != "undefined") {_RecordType("<5226,5229,201>",(obj)); Inst190++; } } catch(e) {}try { if (Inst191 <= 1000 && typeof (flag) != "undefined") {_RecordType("<5231,5235,201>",(flag)); Inst191++; } } catch(e) {}
      Object.defineProperty(obj, flag, {
        get: function () {
try { if (Inst192 <= 1000 && typeof (accesses.push) != "undefined") {_RecordType("<5276,5289,203>",(accesses.push)); Inst192++; } } catch(e) {}try { if (Inst193 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<5276,5284,203>",(accesses)); Inst193++; } } catch(e) {}try { if (Inst194 <= 1000 && typeof (flag) != "undefined") {_RecordType("<5290,5294,203>",(flag)); Inst194++; } } catch(e) {}
          accesses.push(flag);
          passed = true;
try { if (Inst195 <= 1000 && typeof (passed) != "undefined") {_RecordType("<5307,5313,204>",(passed)); Inst195++; } } catch(e) {}
try { if (Inst196 <= 1000 && typeof (flagValue) != "undefined") {_RecordType("<5339,5348,205>",(flagValue)); Inst196++; } } catch(e) {}
          return flagValue;
        }
      });
try { if (Inst197 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<5376,5384,208>",(accesses)); Inst197++; } } catch(e) {}
      accesses == "";
      "unexpected call to overridden props";
try { if (Inst199 <= 1000 && typeof ("splitme".split) != "undefined") {_RecordType("<5456,5471,210>",("splitme".split)); Inst199++; } } catch(e) {}try { if (Inst200 <= 1000 && typeof (obj) != "undefined") {_RecordType("<5472,5475,210>",(obj)); Inst200++; } } catch(e) {}
      let result = "splitme".split(obj);
try { if (Inst198 <= 1000 && typeof (result) != "undefined") {_RecordType("<5447,5453,210>",(result)); Inst198++; } } catch(e) {}
try { if (Inst201 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<5484,5492,211>",(accesses)); Inst201++; } } catch(e) {}try { if (Inst202 <= 1000 && typeof (flag) != "undefined") {_RecordType("<5496,5500,211>",(flag)); Inst202++; } } catch(e) {}
      accesses == flag;
      "Property accesses do not match expectation";
try { if (Inst203 <= 1000 && typeof (result) != "undefined") {_RecordType("<5560,5566,213>",(result)); Inst203++; } } catch(e) {}
      result == "spl,me";
      "Unexpected result";
    })(flags[index], flagValues[index]);
  }
})(); // RegExp subclass with overridden flags in subclass method: Testing ES6 21.2.5.11: 5. Let flags be ? ToString(? Get(rx, "flags")).


(function () {
  let flags = ["flags", "global", "ignoreCase", "multiline", "sticky", "unicode"];
try { if (Inst208 <= 1000 && typeof (flags) != "undefined") {_RecordType("<5813,5818,221>",(flags)); Inst208++; } } catch(e) {}
  let flagValues = ["", false, false, false, false, false];
try { if (Inst209 <= 1000 && typeof (flagValues) != "undefined") {_RecordType("<5896,5906,222>",(flagValues)); Inst209++; } } catch(e) {}

  for (let index in flags) {
try { if (Inst210 <= 1000 && typeof (index) != "undefined") {_RecordType("<5962,5967,224>",(index)); Inst210++; } } catch(e) {}try { if (Inst211 <= 1000 && typeof (flags) != "undefined") {_RecordType("<5971,5976,224>",(flags)); Inst211++; } } catch(e) {}
try { if (Inst230 <= 1000 && typeof (flags[index]) != "undefined") {_RecordType("<6472,6484,245>",(flags[index])); Inst230++; } } catch(e) {}try { if (Inst231 <= 1000 && typeof (flags) != "undefined") {_RecordType("<6472,6477,245>",(flags)); Inst231++; } } catch(e) {}try { if (Inst232 <= 1000 && typeof (flagValues[index]) != "undefined") {_RecordType("<6486,6503,245>",(flagValues[index])); Inst232++; } } catch(e) {}try { if (Inst233 <= 1000 && typeof (flagValues) != "undefined") {_RecordType("<6486,6496,245>",(flagValues)); Inst233++; } } catch(e) {}
    (function (flag, flagValue) {
try { if (Inst212 <= 1000 && typeof (flag) != "undefined") {_RecordType("<5995,5999,225>",(flag)); Inst212++; } } catch(e) {}try { if (Inst213 <= 1000 && typeof (flagValue) != "undefined") {_RecordType("<6001,6010,225>",(flagValue)); Inst213++; } } catch(e) {}
      let accesses = [];
try { if (Inst214 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<6024,6032,226>",(accesses)); Inst214++; } } catch(e) {}

try { if (Inst220 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<6071,6077,228>",(RegExp)); Inst220++; } } catch(e) {}
      class TestRegExp extends RegExp {
        get [flag]() {
try { if (Inst216 <= 1000 && typeof (accesses.push) != "undefined") {_RecordType("<6113,6126,230>",(accesses.push)); Inst216++; } } catch(e) {}try { if (Inst217 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<6113,6121,230>",(accesses)); Inst217++; } } catch(e) {}try { if (Inst218 <= 1000 && typeof (flag) != "undefined") {_RecordType("<6127,6131,230>",(flag)); Inst218++; } } catch(e) {}
          accesses.push(flag);
try { if (Inst219 <= 1000 && typeof (flagValue) != "undefined") {_RecordType("<6151,6160,231>",(flagValue)); Inst219++; } } catch(e) {}
          return flagValue;
        }

      }
try { if (Inst215 <= 1000 && typeof (TestRegExp) != "undefined") {_RecordType("<6052,6062,228>",(TestRegExp)); Inst215++; } } catch(e) {}

      ;
try { if (Inst222 <= 1000 && typeof (TestRegExp) != "undefined") {_RecordType("<6210,6220,237>",(TestRegExp)); Inst222++; } } catch(e) {}
      let obj = new TestRegExp(/it/);
try { if (Inst221 <= 1000 && typeof (obj) != "undefined") {_RecordType("<6200,6203,237>",(obj)); Inst221++; } } catch(e) {}
try { if (Inst223 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<6234,6242,238>",(accesses)); Inst223++; } } catch(e) {}
      accesses == "";
      "unexpected call to overridden props";
try { if (Inst225 <= 1000 && typeof ("splitme".split) != "undefined") {_RecordType("<6314,6329,240>",("splitme".split)); Inst225++; } } catch(e) {}try { if (Inst226 <= 1000 && typeof (obj) != "undefined") {_RecordType("<6330,6333,240>",(obj)); Inst226++; } } catch(e) {}
      let result = "splitme".split(obj);
try { if (Inst224 <= 1000 && typeof (result) != "undefined") {_RecordType("<6305,6311,240>",(result)); Inst224++; } } catch(e) {}
try { if (Inst227 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<6342,6350,241>",(accesses)); Inst227++; } } catch(e) {}try { if (Inst228 <= 1000 && typeof (flag) != "undefined") {_RecordType("<6354,6358,241>",(flag)); Inst228++; } } catch(e) {}
      accesses == flag;
      "Property accesses do not match expectation";
try { if (Inst229 <= 1000 && typeof (result) != "undefined") {_RecordType("<6418,6424,243>",(result)); Inst229++; } } catch(e) {}
      result == "spl,me";
      "Unexpected result";
    })(flags[index], flagValues[index]);
  }
})(); // RegExp subclass with overridden flags using Object.defineProperty: Testing ES6 21.2.5.11: 5. Let flags be ? ToString(? Get(rx, "flags")).


(function () {
  let flags = ["flags", "global", "ignoreCase", "multiline", "sticky", "unicode"];
try { if (Inst234 <= 1000 && typeof (flags) != "undefined") {_RecordType("<6680,6685,251>",(flags)); Inst234++; } } catch(e) {}
  let flagValues = ["", false, false, false, false, false];
try { if (Inst235 <= 1000 && typeof (flagValues) != "undefined") {_RecordType("<6763,6773,252>",(flagValues)); Inst235++; } } catch(e) {}

  for (let index in flags) {
try { if (Inst236 <= 1000 && typeof (index) != "undefined") {_RecordType("<6829,6834,254>",(index)); Inst236++; } } catch(e) {}try { if (Inst237 <= 1000 && typeof (flags) != "undefined") {_RecordType("<6838,6843,254>",(flags)); Inst237++; } } catch(e) {}
try { if (Inst260 <= 1000 && typeof (flags[index]) != "undefined") {_RecordType("<7386,7398,275>",(flags[index])); Inst260++; } } catch(e) {}try { if (Inst261 <= 1000 && typeof (flags) != "undefined") {_RecordType("<7386,7391,275>",(flags)); Inst261++; } } catch(e) {}try { if (Inst262 <= 1000 && typeof (flagValues[index]) != "undefined") {_RecordType("<7400,7417,275>",(flagValues[index])); Inst262++; } } catch(e) {}try { if (Inst263 <= 1000 && typeof (flagValues) != "undefined") {_RecordType("<7400,7410,275>",(flagValues)); Inst263++; } } catch(e) {}
    (function (flag, flagValue) {
try { if (Inst238 <= 1000 && typeof (flag) != "undefined") {_RecordType("<6862,6866,255>",(flag)); Inst238++; } } catch(e) {}try { if (Inst239 <= 1000 && typeof (flagValue) != "undefined") {_RecordType("<6868,6877,255>",(flagValue)); Inst239++; } } catch(e) {}
      let accesses = [];
try { if (Inst240 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<6891,6899,256>",(accesses)); Inst240++; } } catch(e) {}

try { if (Inst242 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<6938,6944,258>",(RegExp)); Inst242++; } } catch(e) {}
      class TestRegExp extends RegExp {}
try { if (Inst241 <= 1000 && typeof (TestRegExp) != "undefined") {_RecordType("<6919,6929,258>",(TestRegExp)); Inst241++; } } catch(e) {}

      ;
try { if (Inst244 <= 1000 && typeof (TestRegExp) != "undefined") {_RecordType("<6977,6987,261>",(TestRegExp)); Inst244++; } } catch(e) {}
      let obj = new TestRegExp(/it/);
try { if (Inst243 <= 1000 && typeof (obj) != "undefined") {_RecordType("<6967,6970,261>",(obj)); Inst243++; } } catch(e) {}
try { if (Inst245 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<7001,7022,262>",(Object.defineProperty)); Inst245++; } } catch(e) {}try { if (Inst246 <= 1000 && typeof (Object) != "undefined") {_RecordType("<7001,7007,262>",(Object)); Inst246++; } } catch(e) {}try { if (Inst247 <= 1000 && typeof (obj) != "undefined") {_RecordType("<7023,7026,262>",(obj)); Inst247++; } } catch(e) {}try { if (Inst248 <= 1000 && typeof (flag) != "undefined") {_RecordType("<7028,7032,262>",(flag)); Inst248++; } } catch(e) {}
      Object.defineProperty(obj, flag, {
        get: function () {
try { if (Inst249 <= 1000 && typeof (accesses.push) != "undefined") {_RecordType("<7073,7086,264>",(accesses.push)); Inst249++; } } catch(e) {}try { if (Inst250 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<7073,7081,264>",(accesses)); Inst250++; } } catch(e) {}try { if (Inst251 <= 1000 && typeof (flag) != "undefined") {_RecordType("<7087,7091,264>",(flag)); Inst251++; } } catch(e) {}
          accesses.push(flag);
try { if (Inst252 <= 1000 && typeof (flagValue) != "undefined") {_RecordType("<7111,7120,265>",(flagValue)); Inst252++; } } catch(e) {}
          return flagValue;
        }
      });
try { if (Inst253 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<7148,7156,268>",(accesses)); Inst253++; } } catch(e) {}
      accesses == "";
      "unexpected call to overridden props";
try { if (Inst255 <= 1000 && typeof ("splitme".split) != "undefined") {_RecordType("<7228,7243,270>",("splitme".split)); Inst255++; } } catch(e) {}try { if (Inst256 <= 1000 && typeof (obj) != "undefined") {_RecordType("<7244,7247,270>",(obj)); Inst256++; } } catch(e) {}
      let result = "splitme".split(obj);
try { if (Inst254 <= 1000 && typeof (result) != "undefined") {_RecordType("<7219,7225,270>",(result)); Inst254++; } } catch(e) {}
try { if (Inst257 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<7256,7264,271>",(accesses)); Inst257++; } } catch(e) {}try { if (Inst258 <= 1000 && typeof (flag) != "undefined") {_RecordType("<7268,7272,271>",(flag)); Inst258++; } } catch(e) {}
      accesses == flag;
      "Property accesses do not match expectation";
try { if (Inst259 <= 1000 && typeof (result) != "undefined") {_RecordType("<7332,7338,273>",(result)); Inst259++; } } catch(e) {}
      result == "spl,me";
      "Unexpected result";
    })(flags[index], flagValues[index]);
  }
})(); // Any object with species constructor: Testing ES6 21.2.5.11: 5. Let flags be ? ToString(? Get(rx, "flags")).


(function () {
  let accesses = [];
try { if (Inst264 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<7564,7572,281>",(accesses)); Inst264++; } } catch(e) {}
  let obj = {
    constructor: {}
  };
try { if (Inst265 <= 1000 && typeof (obj) != "undefined") {_RecordType("<7585,7588,282>",(obj)); Inst265++; } } catch(e) {}

  obj.constructor[Symbol.species] = function () {
try { if (Inst271 <= 1000 && typeof (accesses.push) != "undefined") {_RecordType("<7673,7686,287>",(accesses.push)); Inst271++; } } catch(e) {}try { if (Inst272 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<7673,7681,287>",(accesses)); Inst272++; } } catch(e) {}
    accesses.push("constructor");
    return /it/y;
  };
try { if (Inst266 <= 1000 && typeof (obj.constructor[Symbol.species]) != "undefined") {_RecordType("<7621,7652,286>",(obj.constructor[Symbol.species])); Inst266++; } } catch(e) {}try { if (Inst267 <= 1000 && typeof (obj.constructor) != "undefined") {_RecordType("<7621,7636,286>",(obj.constructor)); Inst267++; } } catch(e) {}try { if (Inst268 <= 1000 && typeof (obj) != "undefined") {_RecordType("<7621,7624,286>",(obj)); Inst268++; } } catch(e) {}try { if (Inst269 <= 1000 && typeof (Symbol.species) != "undefined") {_RecordType("<7637,7651,286>",(Symbol.species)); Inst269++; } } catch(e) {}try { if (Inst270 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<7637,7643,286>",(Symbol)); Inst270++; } } catch(e) {}

  obj[Symbol.split] = function (str, limit) {
try { if (Inst277 <= 1000 && typeof (str) != "undefined") {_RecordType("<7759,7762,291>",(str)); Inst277++; } } catch(e) {}try { if (Inst278 <= 1000 && typeof (limit) != "undefined") {_RecordType("<7764,7769,291>",(limit)); Inst278++; } } catch(e) {}
try { if (Inst279 <= 1000 && typeof (accesses.push) != "undefined") {_RecordType("<7777,7790,292>",(accesses.push)); Inst279++; } } catch(e) {}try { if (Inst280 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<7777,7785,292>",(accesses)); Inst280++; } } catch(e) {}try { if (Inst281 <= 1000 && typeof (Symbol.split.toString) != "undefined") {_RecordType("<7791,7812,292>",(Symbol.split.toString)); Inst281++; } } catch(e) {}try { if (Inst282 <= 1000 && typeof (Symbol.split) != "undefined") {_RecordType("<7791,7803,292>",(Symbol.split)); Inst282++; } } catch(e) {}try { if (Inst283 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<7791,7797,292>",(Symbol)); Inst283++; } } catch(e) {}
    accesses.push(Symbol.split.toString());
try { if (Inst284 <= 1000 && typeof (RegExp.prototype[Symbol.split].call) != "undefined") {_RecordType("<7828,7863,293>",(RegExp.prototype[Symbol.split].call)); Inst284++; } } catch(e) {}try { if (Inst285 <= 1000 && typeof (RegExp.prototype[Symbol.split]) != "undefined") {_RecordType("<7828,7858,293>",(RegExp.prototype[Symbol.split])); Inst285++; } } catch(e) {}try { if (Inst286 <= 1000 && typeof (RegExp.prototype) != "undefined") {_RecordType("<7828,7844,293>",(RegExp.prototype)); Inst286++; } } catch(e) {}try { if (Inst287 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<7828,7834,293>",(RegExp)); Inst287++; } } catch(e) {}try { if (Inst288 <= 1000 && typeof (Symbol.split) != "undefined") {_RecordType("<7845,7857,293>",(Symbol.split)); Inst288++; } } catch(e) {}try { if (Inst289 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<7845,7851,293>",(Symbol)); Inst289++; } } catch(e) {}try { if (Inst290 <= 1000 && typeof (str) != "undefined") {_RecordType("<7870,7873,293>",(str)); Inst290++; } } catch(e) {}try { if (Inst291 <= 1000 && typeof (limit) != "undefined") {_RecordType("<7875,7880,293>",(limit)); Inst291++; } } catch(e) {}
    return RegExp.prototype[Symbol.split].call(this, str, limit);
  };
try { if (Inst273 <= 1000 && typeof (obj[Symbol.split]) != "undefined") {_RecordType("<7729,7746,291>",(obj[Symbol.split])); Inst273++; } } catch(e) {}try { if (Inst274 <= 1000 && typeof (obj) != "undefined") {_RecordType("<7729,7732,291>",(obj)); Inst274++; } } catch(e) {}try { if (Inst275 <= 1000 && typeof (Symbol.split) != "undefined") {_RecordType("<7733,7745,291>",(Symbol.split)); Inst275++; } } catch(e) {}try { if (Inst276 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<7733,7739,291>",(Symbol)); Inst276++; } } catch(e) {}

try { if (Inst292 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<7891,7912,296>",(Object.defineProperty)); Inst292++; } } catch(e) {}try { if (Inst293 <= 1000 && typeof (Object) != "undefined") {_RecordType("<7891,7897,296>",(Object)); Inst293++; } } catch(e) {}try { if (Inst294 <= 1000 && typeof (obj) != "undefined") {_RecordType("<7913,7916,296>",(obj)); Inst294++; } } catch(e) {}
  Object.defineProperty(obj, "flags", {
    get: function () {
try { if (Inst295 <= 1000 && typeof (accesses.push) != "undefined") {_RecordType("<7958,7971,298>",(accesses.push)); Inst295++; } } catch(e) {}try { if (Inst296 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<7958,7966,298>",(accesses)); Inst296++; } } catch(e) {}
      accesses.push("flags");
      return "";
    }
  });
try { if (Inst297 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<8013,8021,302>",(accesses)); Inst297++; } } catch(e) {}
  accesses == "";
  "unexpected call to overridden props";
try { if (Inst299 <= 1000 && typeof ("splitme".split) != "undefined") {_RecordType("<8085,8100,304>",("splitme".split)); Inst299++; } } catch(e) {}try { if (Inst300 <= 1000 && typeof (obj) != "undefined") {_RecordType("<8101,8104,304>",(obj)); Inst300++; } } catch(e) {}
  let result = "splitme".split(obj);
try { if (Inst298 <= 1000 && typeof (result) != "undefined") {_RecordType("<8076,8082,304>",(result)); Inst298++; } } catch(e) {}
try { if (Inst301 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<8109,8117,305>",(accesses)); Inst301++; } } catch(e) {}
  accesses == "Symbol(Symbol.split),flags,constructor";
  "Property accesses do not match expectation";
try { if (Inst302 <= 1000 && typeof (result) != "undefined") {_RecordType("<8213,8219,307>",(result)); Inst302++; } } catch(e) {}
  result == "spl,me";
  "Unexpected result";
})(); // Any object with custom prototype: Testing ES6 21.2.5.11: 5. Let flags be ? ToString(? Get(rx, "flags")).


(function () {
  let accesses = [];
try { if (Inst303 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<8393,8401,313>",(accesses)); Inst303++; } } catch(e) {}
try { if (Inst305 <= 1000 && typeof (flags) != "undefined") {_RecordType("<8442,8447,315>",(flags)); Inst305++; } } catch(e) {}try { if (Inst308 <= 1000 && typeof (toString) != "undefined") {_RecordType("<8511,8519,320>",(toString)); Inst308++; } } catch(e) {}try { if (Inst313 <= 1000 && typeof (source) != "undefined") {_RecordType("<8610,8616,325>",(source)); Inst313++; } } catch(e) {}
  let TestRegExpProto = {
    get flags() {
try { if (Inst306 <= 1000 && typeof (accesses.push) != "undefined") {_RecordType("<8458,8471,316>",(accesses.push)); Inst306++; } } catch(e) {}try { if (Inst307 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<8458,8466,316>",(accesses)); Inst307++; } } catch(e) {}
      accesses.push("flags");
      return "";
    },

    toString() {
try { if (Inst309 <= 1000 && typeof (accesses.push) != "undefined") {_RecordType("<8530,8543,321>",(accesses.push)); Inst309++; } } catch(e) {}try { if (Inst310 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<8530,8538,321>",(accesses)); Inst310++; } } catch(e) {}
      accesses.push("toString");
try { if (Inst311 <= 1000 && typeof (this._regex.toString) != "undefined") {_RecordType("<8570,8590,322>",(this._regex.toString)); Inst311++; } } catch(e) {}try { if (Inst312 <= 1000 && typeof (this._regex) != "undefined") {_RecordType("<8570,8581,322>",(this._regex)); Inst312++; } } catch(e) {}
      return this._regex.toString();
    },

    get source() {
try { if (Inst314 <= 1000 && typeof (accesses.push) != "undefined") {_RecordType("<8627,8640,326>",(accesses.push)); Inst314++; } } catch(e) {}try { if (Inst315 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<8627,8635,326>",(accesses)); Inst315++; } } catch(e) {}
      accesses.push("source");
try { if (Inst316 <= 1000 && typeof (this._regex.source) != "undefined") {_RecordType("<8665,8683,327>",(this._regex.source)); Inst316++; } } catch(e) {}try { if (Inst317 <= 1000 && typeof (this._regex) != "undefined") {_RecordType("<8665,8676,327>",(this._regex)); Inst317++; } } catch(e) {}
      return this._regex.source;
    }

  };
try { if (Inst304 <= 1000 && typeof (TestRegExpProto) != "undefined") {_RecordType("<8414,8429,314>",(TestRegExpProto)); Inst304++; } } catch(e) {}
try { if (Inst320 <= 1000 && typeof (RegExp.prototype) != "undefined") {_RecordType("<8727,8743,331>",(RegExp.prototype)); Inst320++; } } catch(e) {}try { if (Inst321 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<8727,8733,331>",(RegExp)); Inst321++; } } catch(e) {}
  TestRegExpProto.__proto__ = RegExp.prototype;
try { if (Inst318 <= 1000 && typeof (TestRegExpProto.__proto__) != "undefined") {_RecordType("<8699,8724,331>",(TestRegExpProto.__proto__)); Inst318++; } } catch(e) {}try { if (Inst319 <= 1000 && typeof (TestRegExpProto) != "undefined") {_RecordType("<8699,8714,331>",(TestRegExpProto)); Inst319++; } } catch(e) {}

  let TestRegExp = function (regex) {
try { if (Inst323 <= 1000 && typeof (regex) != "undefined") {_RecordType("<8775,8780,333>",(regex)); Inst323++; } } catch(e) {}
try { if (Inst324 <= 1000 && typeof (accesses.push) != "undefined") {_RecordType("<8788,8801,334>",(accesses.push)); Inst324++; } } catch(e) {}try { if (Inst325 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<8788,8796,334>",(accesses)); Inst325++; } } catch(e) {}
    accesses.push("constructor");
try { if (Inst327 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<8840,8846,335>",(RegExp)); Inst327++; } } catch(e) {}try { if (Inst328 <= 1000 && typeof (regex) != "undefined") {_RecordType("<8847,8852,335>",(regex)); Inst328++; } } catch(e) {}
    this._regex = new RegExp(regex);
try { if (Inst326 <= 1000 && typeof (this._regex) != "undefined") {_RecordType("<8822,8833,335>",(this._regex)); Inst326++; } } catch(e) {}
  };
try { if (Inst322 <= 1000 && typeof (TestRegExp) != "undefined") {_RecordType("<8752,8762,333>",(TestRegExp)); Inst322++; } } catch(e) {}

try { if (Inst331 <= 1000 && typeof (TestRegExpProto) != "undefined") {_RecordType("<8886,8901,338>",(TestRegExpProto)); Inst331++; } } catch(e) {}
  TestRegExp.prototype = TestRegExpProto;
try { if (Inst329 <= 1000 && typeof (TestRegExp.prototype) != "undefined") {_RecordType("<8863,8883,338>",(TestRegExp.prototype)); Inst329++; } } catch(e) {}try { if (Inst330 <= 1000 && typeof (TestRegExp) != "undefined") {_RecordType("<8863,8873,338>",(TestRegExp)); Inst330++; } } catch(e) {}
try { if (Inst334 <= 1000 && typeof (TestRegExp) != "undefined") {_RecordType("<8935,8945,339>",(TestRegExp)); Inst334++; } } catch(e) {}
  TestRegExpProto.constructor = TestRegExp;
try { if (Inst332 <= 1000 && typeof (TestRegExpProto.constructor) != "undefined") {_RecordType("<8905,8932,339>",(TestRegExpProto.constructor)); Inst332++; } } catch(e) {}try { if (Inst333 <= 1000 && typeof (TestRegExpProto) != "undefined") {_RecordType("<8905,8920,339>",(TestRegExpProto)); Inst333++; } } catch(e) {}
try { if (Inst336 <= 1000 && typeof (TestRegExp) != "undefined") {_RecordType("<8963,8973,340>",(TestRegExp)); Inst336++; } } catch(e) {}
  let obj = new TestRegExp(/it/);
try { if (Inst335 <= 1000 && typeof (obj) != "undefined") {_RecordType("<8953,8956,340>",(obj)); Inst335++; } } catch(e) {}
try { if (Inst337 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<8983,8991,341>",(accesses)); Inst337++; } } catch(e) {}
  accesses == "constructor";
  "unexpected call to overridden props";
try { if (Inst339 <= 1000 && typeof ("splitme".split) != "undefined") {_RecordType("<9066,9081,343>",("splitme".split)); Inst339++; } } catch(e) {}try { if (Inst340 <= 1000 && typeof (obj) != "undefined") {_RecordType("<9082,9085,343>",(obj)); Inst340++; } } catch(e) {}
  let result = "splitme".split(obj);
try { if (Inst338 <= 1000 && typeof (result) != "undefined") {_RecordType("<9057,9063,343>",(result)); Inst338++; } } catch(e) {}
try { if (Inst341 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<9090,9098,344>",(accesses)); Inst341++; } } catch(e) {}
  accesses == "constructor,flags,source";
  "Property accesses do not match expectation";
try { if (Inst342 <= 1000 && typeof (result) != "undefined") {_RecordType("<9180,9186,346>",(result)); Inst342++; } } catch(e) {}
  result == "spl,me";
  "Unexpected result";
})(); // 2 levels of subclasses: Testing ES6 21.2.5.11: 5. Let flags be ? ToString(? Get(rx, "flags")).


(function () {
  let accesses = [];
try { if (Inst343 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<9350,9358,352>",(accesses)); Inst343++; } } catch(e) {}

try { if (Inst347 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<9390,9396,354>",(RegExp)); Inst347++; } } catch(e) {}
  class RegExpB extends RegExp {
    get flags() {
try { if (Inst345 <= 1000 && typeof (accesses.push) != "undefined") {_RecordType("<9423,9436,356>",(accesses.push)); Inst345++; } } catch(e) {}try { if (Inst346 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<9423,9431,356>",(accesses)); Inst346++; } } catch(e) {}
      accesses.push("flags");
      return "";
    }

  }
try { if (Inst344 <= 1000 && typeof (RegExpB) != "undefined") {_RecordType("<9374,9381,354>",(RegExpB)); Inst344++; } } catch(e) {}

try { if (Inst349 <= 1000 && typeof (RegExpB) != "undefined") {_RecordType("<9500,9507,362>",(RegExpB)); Inst349++; } } catch(e) {}
  class RegExpC extends RegExpB {}
try { if (Inst348 <= 1000 && typeof (RegExpC) != "undefined") {_RecordType("<9484,9491,362>",(RegExpC)); Inst348++; } } catch(e) {}

try { if (Inst350 <= 1000 && typeof (RegExpB.__proto__) != "undefined") {_RecordType("<9514,9531,364>",(RegExpB.__proto__)); Inst350++; } } catch(e) {}try { if (Inst351 <= 1000 && typeof (RegExpB) != "undefined") {_RecordType("<9514,9521,364>",(RegExpB)); Inst351++; } } catch(e) {}try { if (Inst352 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<9535,9541,364>",(RegExp)); Inst352++; } } catch(e) {}
  RegExpB.__proto__ == RegExp;
try { if (Inst353 <= 1000 && typeof (RegExpC.__proto__) != "undefined") {_RecordType("<9545,9562,365>",(RegExpC.__proto__)); Inst353++; } } catch(e) {}try { if (Inst354 <= 1000 && typeof (RegExpC) != "undefined") {_RecordType("<9545,9552,365>",(RegExpC)); Inst354++; } } catch(e) {}try { if (Inst355 <= 1000 && typeof (RegExpB) != "undefined") {_RecordType("<9566,9573,365>",(RegExpB)); Inst355++; } } catch(e) {}
  RegExpC.__proto__ == RegExpB;
try { if (Inst357 <= 1000 && typeof (RegExpC) != "undefined") {_RecordType("<9591,9598,366>",(RegExpC)); Inst357++; } } catch(e) {}
  let obj = new RegExpC(/it/);
try { if (Inst356 <= 1000 && typeof (obj) != "undefined") {_RecordType("<9581,9584,366>",(obj)); Inst356++; } } catch(e) {}
try { if (Inst358 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<9608,9616,367>",(accesses)); Inst358++; } } catch(e) {}
  accesses == "";
  "unexpected call to overridden props";
try { if (Inst360 <= 1000 && typeof ("splitme".split) != "undefined") {_RecordType("<9680,9695,369>",("splitme".split)); Inst360++; } } catch(e) {}try { if (Inst361 <= 1000 && typeof (obj) != "undefined") {_RecordType("<9696,9699,369>",(obj)); Inst361++; } } catch(e) {}
  let result = "splitme".split(obj);
try { if (Inst359 <= 1000 && typeof (result) != "undefined") {_RecordType("<9671,9677,369>",(result)); Inst359++; } } catch(e) {}
try { if (Inst362 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<9704,9712,370>",(accesses)); Inst362++; } } catch(e) {}
  accesses == "flags";
  "Property accesses do not match expectation";
try { if (Inst363 <= 1000 && typeof (result) != "undefined") {_RecordType("<9775,9781,372>",(result)); Inst363++; } } catch(e) {}
  result == "spl,me";
  "Unexpected result";
})(); // 2 levels of subclasses with substituted prototype before instantiation: Testing ES6 21.2.5.11: 5. Let flags be ? ToString(? Get(rx, "flags")).


(function () {
  let accesses = [];
try { if (Inst364 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<9993,10001,378>",(accesses)); Inst364++; } } catch(e) {}

try { if (Inst366 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<10027,10033,380>",(RegExp)); Inst366++; } } catch(e) {}
  class B extends RegExp {}
try { if (Inst365 <= 1000 && typeof (B) != "undefined") {_RecordType("<10017,10018,380>",(B)); Inst365++; } } catch(e) {}

try { if (Inst368 <= 1000 && typeof (B) != "undefined") {_RecordType("<10056,10057,382>",(B)); Inst368++; } } catch(e) {}
  class C extends B {}
try { if (Inst367 <= 1000 && typeof (C) != "undefined") {_RecordType("<10046,10047,382>",(C)); Inst367++; } } catch(e) {}

try { if (Inst369 <= 1000 && typeof (B.__proto__) != "undefined") {_RecordType("<10064,10075,384>",(B.__proto__)); Inst369++; } } catch(e) {}try { if (Inst370 <= 1000 && typeof (B) != "undefined") {_RecordType("<10064,10065,384>",(B)); Inst370++; } } catch(e) {}try { if (Inst371 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<10080,10086,384>",(RegExp)); Inst371++; } } catch(e) {}
  B.__proto__ === RegExp;
try { if (Inst372 <= 1000 && typeof (C.__proto__) != "undefined") {_RecordType("<10090,10101,385>",(C.__proto__)); Inst372++; } } catch(e) {}try { if (Inst373 <= 1000 && typeof (C) != "undefined") {_RecordType("<10090,10091,385>",(C)); Inst373++; } } catch(e) {}try { if (Inst374 <= 1000 && typeof (B) != "undefined") {_RecordType("<10106,10107,385>",(B)); Inst374++; } } catch(e) {}
  C.__proto__ === B;
try { if (Inst375 <= 1000 && typeof (B.prototype.__proto__) != "undefined") {_RecordType("<10111,10132,386>",(B.prototype.__proto__)); Inst375++; } } catch(e) {}try { if (Inst376 <= 1000 && typeof (B.prototype) != "undefined") {_RecordType("<10111,10122,386>",(B.prototype)); Inst376++; } } catch(e) {}try { if (Inst377 <= 1000 && typeof (B) != "undefined") {_RecordType("<10111,10112,386>",(B)); Inst377++; } } catch(e) {}try { if (Inst378 <= 1000 && typeof (RegExp.prototype) != "undefined") {_RecordType("<10137,10153,386>",(RegExp.prototype)); Inst378++; } } catch(e) {}try { if (Inst379 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<10137,10143,386>",(RegExp)); Inst379++; } } catch(e) {}
  B.prototype.__proto__ === RegExp.prototype;
try { if (Inst380 <= 1000 && typeof (C.prototype.__proto__) != "undefined") {_RecordType("<10157,10178,387>",(C.prototype.__proto__)); Inst380++; } } catch(e) {}try { if (Inst381 <= 1000 && typeof (C.prototype) != "undefined") {_RecordType("<10157,10168,387>",(C.prototype)); Inst381++; } } catch(e) {}try { if (Inst382 <= 1000 && typeof (C) != "undefined") {_RecordType("<10157,10158,387>",(C)); Inst382++; } } catch(e) {}try { if (Inst383 <= 1000 && typeof (B.prototype) != "undefined") {_RecordType("<10183,10194,387>",(B.prototype)); Inst383++; } } catch(e) {}try { if (Inst384 <= 1000 && typeof (B) != "undefined") {_RecordType("<10183,10184,387>",(B)); Inst384++; } } catch(e) {}
  C.prototype.__proto__ === B.prototype;

  let X = function () {
    ;
  };
try { if (Inst385 <= 1000 && typeof (X) != "undefined") {_RecordType("<10203,10204,389>",(X)); Inst385++; } } catch(e) {}

try { if (Inst386 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<10235,10256,393>",(Object.defineProperty)); Inst386++; } } catch(e) {}try { if (Inst387 <= 1000 && typeof (Object) != "undefined") {_RecordType("<10235,10241,393>",(Object)); Inst387++; } } catch(e) {}try { if (Inst388 <= 1000 && typeof (X.prototype) != "undefined") {_RecordType("<10257,10268,393>",(X.prototype)); Inst388++; } } catch(e) {}try { if (Inst389 <= 1000 && typeof (X) != "undefined") {_RecordType("<10257,10258,393>",(X)); Inst389++; } } catch(e) {}
  Object.defineProperty(X.prototype, "flags", {
    get: function () {
try { if (Inst390 <= 1000 && typeof (accesses.push) != "undefined") {_RecordType("<10310,10323,395>",(accesses.push)); Inst390++; } } catch(e) {}try { if (Inst391 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<10310,10318,395>",(accesses)); Inst391++; } } catch(e) {}
      accesses.push("flags");
      return "";
    }
  });
try { if (Inst392 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<10365,10386,399>",(Object.defineProperty)); Inst392++; } } catch(e) {}try { if (Inst393 <= 1000 && typeof (Object) != "undefined") {_RecordType("<10365,10371,399>",(Object)); Inst393++; } } catch(e) {}try { if (Inst394 <= 1000 && typeof (X.prototype) != "undefined") {_RecordType("<10387,10398,399>",(X.prototype)); Inst394++; } } catch(e) {}try { if (Inst395 <= 1000 && typeof (X) != "undefined") {_RecordType("<10387,10388,399>",(X)); Inst395++; } } catch(e) {}
  Object.defineProperty(X.prototype, "exec", {
    value: function (str) {
try { if (Inst396 <= 1000 && typeof (str) != "undefined") {_RecordType("<10431,10434,400>",(str)); Inst396++; } } catch(e) {}
try { if (Inst397 <= 1000 && typeof (accesses.push) != "undefined") {_RecordType("<10444,10457,401>",(accesses.push)); Inst397++; } } catch(e) {}try { if (Inst398 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<10444,10452,401>",(accesses)); Inst398++; } } catch(e) {}
      accesses.push("exec");
try { if (Inst400 <= 1000 && typeof (/it/y.exec) != "undefined") {_RecordType("<10491,10501,402>",(/it/y.exec)); Inst400++; } } catch(e) {}try { if (Inst401 <= 1000 && typeof (str.substr) != "undefined") {_RecordType("<10502,10512,402>",(str.substr)); Inst401++; } } catch(e) {}try { if (Inst402 <= 1000 && typeof (str) != "undefined") {_RecordType("<10502,10505,402>",(str)); Inst402++; } } catch(e) {}try { if (Inst403 <= 1000 && typeof (this.lastIndex) != "undefined") {_RecordType("<10513,10527,402>",(this.lastIndex)); Inst403++; } } catch(e) {}
      var matchResult = /it/y.exec(str.substr(this.lastIndex));
try { if (Inst399 <= 1000 && typeof (matchResult) != "undefined") {_RecordType("<10477,10488,402>",(matchResult)); Inst399++; } } catch(e) {}

try { if (Inst404 <= 1000 && typeof (matchResult) != "undefined") {_RecordType("<10542,10553,404>",(matchResult)); Inst404++; } } catch(e) {}
      if (matchResult) {
        this.lastIndex += 2;
try { if (Inst405 <= 1000 && typeof (this.lastIndex) != "undefined") {_RecordType("<10565,10579,405>",(this.lastIndex)); Inst405++; } } catch(e) {}
      } // length of "it".


try { if (Inst406 <= 1000 && typeof (matchResult) != "undefined") {_RecordType("<10628,10639,409>",(matchResult)); Inst406++; } } catch(e) {}
      return matchResult;
    }
  }); // Monkey with the prototype chain before instantiating C.

try { if (Inst409 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<10729,10735,413>",(RegExp)); Inst409++; } } catch(e) {}
  X.__proto__ = RegExp;
try { if (Inst407 <= 1000 && typeof (X.__proto__) != "undefined") {_RecordType("<10715,10726,413>",(X.__proto__)); Inst407++; } } catch(e) {}try { if (Inst408 <= 1000 && typeof (X) != "undefined") {_RecordType("<10715,10716,413>",(X)); Inst408++; } } catch(e) {}
try { if (Inst413 <= 1000 && typeof (RegExp.prototype) != "undefined") {_RecordType("<10763,10779,414>",(RegExp.prototype)); Inst413++; } } catch(e) {}try { if (Inst414 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<10763,10769,414>",(RegExp)); Inst414++; } } catch(e) {}
  X.prototype.__proto__ = RegExp.prototype;
try { if (Inst410 <= 1000 && typeof (X.prototype.__proto__) != "undefined") {_RecordType("<10739,10760,414>",(X.prototype.__proto__)); Inst410++; } } catch(e) {}try { if (Inst411 <= 1000 && typeof (X.prototype) != "undefined") {_RecordType("<10739,10750,414>",(X.prototype)); Inst411++; } } catch(e) {}try { if (Inst412 <= 1000 && typeof (X) != "undefined") {_RecordType("<10739,10740,414>",(X)); Inst412++; } } catch(e) {}
try { if (Inst417 <= 1000 && typeof (X) != "undefined") {_RecordType("<10797,10798,415>",(X)); Inst417++; } } catch(e) {}
  C.__proto__ = X;
try { if (Inst415 <= 1000 && typeof (C.__proto__) != "undefined") {_RecordType("<10783,10794,415>",(C.__proto__)); Inst415++; } } catch(e) {}try { if (Inst416 <= 1000 && typeof (C) != "undefined") {_RecordType("<10783,10784,415>",(C)); Inst416++; } } catch(e) {}
try { if (Inst421 <= 1000 && typeof (X.prototype) != "undefined") {_RecordType("<10826,10837,416>",(X.prototype)); Inst421++; } } catch(e) {}try { if (Inst422 <= 1000 && typeof (X) != "undefined") {_RecordType("<10826,10827,416>",(X)); Inst422++; } } catch(e) {}
  C.prototype.__proto__ = X.prototype;
try { if (Inst418 <= 1000 && typeof (C.prototype.__proto__) != "undefined") {_RecordType("<10802,10823,416>",(C.prototype.__proto__)); Inst418++; } } catch(e) {}try { if (Inst419 <= 1000 && typeof (C.prototype) != "undefined") {_RecordType("<10802,10813,416>",(C.prototype)); Inst419++; } } catch(e) {}try { if (Inst420 <= 1000 && typeof (C) != "undefined") {_RecordType("<10802,10803,416>",(C)); Inst420++; } } catch(e) {}
try { if (Inst423 <= 1000 && typeof (X.__proto__) != "undefined") {_RecordType("<10841,10852,417>",(X.__proto__)); Inst423++; } } catch(e) {}try { if (Inst424 <= 1000 && typeof (X) != "undefined") {_RecordType("<10841,10842,417>",(X)); Inst424++; } } catch(e) {}try { if (Inst425 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<10857,10863,417>",(RegExp)); Inst425++; } } catch(e) {}
  X.__proto__ === RegExp;
try { if (Inst426 <= 1000 && typeof (C.__proto__) != "undefined") {_RecordType("<10867,10878,418>",(C.__proto__)); Inst426++; } } catch(e) {}try { if (Inst427 <= 1000 && typeof (C) != "undefined") {_RecordType("<10867,10868,418>",(C)); Inst427++; } } catch(e) {}try { if (Inst428 <= 1000 && typeof (X) != "undefined") {_RecordType("<10883,10884,418>",(X)); Inst428++; } } catch(e) {}
  C.__proto__ === X;
try { if (Inst429 <= 1000 && typeof (X.prototype.__proto__) != "undefined") {_RecordType("<10888,10909,419>",(X.prototype.__proto__)); Inst429++; } } catch(e) {}try { if (Inst430 <= 1000 && typeof (X.prototype) != "undefined") {_RecordType("<10888,10899,419>",(X.prototype)); Inst430++; } } catch(e) {}try { if (Inst431 <= 1000 && typeof (X) != "undefined") {_RecordType("<10888,10889,419>",(X)); Inst431++; } } catch(e) {}try { if (Inst432 <= 1000 && typeof (RegExp.prototype) != "undefined") {_RecordType("<10914,10930,419>",(RegExp.prototype)); Inst432++; } } catch(e) {}try { if (Inst433 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<10914,10920,419>",(RegExp)); Inst433++; } } catch(e) {}
  X.prototype.__proto__ === RegExp.prototype;
try { if (Inst434 <= 1000 && typeof (C.prototype.__proto__) != "undefined") {_RecordType("<10934,10955,420>",(C.prototype.__proto__)); Inst434++; } } catch(e) {}try { if (Inst435 <= 1000 && typeof (C.prototype) != "undefined") {_RecordType("<10934,10945,420>",(C.prototype)); Inst435++; } } catch(e) {}try { if (Inst436 <= 1000 && typeof (C) != "undefined") {_RecordType("<10934,10935,420>",(C)); Inst436++; } } catch(e) {}try { if (Inst437 <= 1000 && typeof (X.prototype) != "undefined") {_RecordType("<10960,10971,420>",(X.prototype)); Inst437++; } } catch(e) {}try { if (Inst438 <= 1000 && typeof (X) != "undefined") {_RecordType("<10960,10961,420>",(X)); Inst438++; } } catch(e) {}
  C.prototype.__proto__ === X.prototype;
try { if (Inst440 <= 1000 && typeof (C) != "undefined") {_RecordType("<10989,10990,421>",(C)); Inst440++; } } catch(e) {}
  let obj = new C();
try { if (Inst439 <= 1000 && typeof (obj) != "undefined") {_RecordType("<10979,10982,421>",(obj)); Inst439++; } } catch(e) {}
try { if (Inst441 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<10996,11004,422>",(accesses)); Inst441++; } } catch(e) {}
  accesses == "";
  "unexpected call to overridden props";
try { if (Inst443 <= 1000 && typeof ("splitme".split) != "undefined") {_RecordType("<11068,11083,424>",("splitme".split)); Inst443++; } } catch(e) {}try { if (Inst444 <= 1000 && typeof (obj) != "undefined") {_RecordType("<11084,11087,424>",(obj)); Inst444++; } } catch(e) {}
  let result = "splitme".split(obj);
try { if (Inst442 <= 1000 && typeof (result) != "undefined") {_RecordType("<11059,11065,424>",(result)); Inst442++; } } catch(e) {}
try { if (Inst445 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<11092,11100,425>",(accesses)); Inst445++; } } catch(e) {}
  accesses == "flags,exec,exec,exec,exec,exec,exec";
  "Property accesses do not match expectation";
try { if (Inst446 <= 1000 && typeof (result) != "undefined") {_RecordType("<11193,11199,427>",(result)); Inst446++; } } catch(e) {}
  result == "spl,me";
  "Unexpected result";
})(); // 2 levels of subclasses with substituted prototype after instantiation: Testing ES6 21.2.5.11: 5. Let flags be ? ToString(? Get(rx, "flags")).


(function () {
  let accesses = [];
try { if (Inst447 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<11410,11418,433>",(accesses)); Inst447++; } } catch(e) {}

try { if (Inst449 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<11444,11450,435>",(RegExp)); Inst449++; } } catch(e) {}
  class B extends RegExp {}
try { if (Inst448 <= 1000 && typeof (B) != "undefined") {_RecordType("<11434,11435,435>",(B)); Inst448++; } } catch(e) {}

try { if (Inst451 <= 1000 && typeof (B) != "undefined") {_RecordType("<11473,11474,437>",(B)); Inst451++; } } catch(e) {}
  class C extends B {}
try { if (Inst450 <= 1000 && typeof (C) != "undefined") {_RecordType("<11463,11464,437>",(C)); Inst450++; } } catch(e) {}

try { if (Inst452 <= 1000 && typeof (B.__proto__) != "undefined") {_RecordType("<11481,11492,439>",(B.__proto__)); Inst452++; } } catch(e) {}try { if (Inst453 <= 1000 && typeof (B) != "undefined") {_RecordType("<11481,11482,439>",(B)); Inst453++; } } catch(e) {}try { if (Inst454 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<11497,11503,439>",(RegExp)); Inst454++; } } catch(e) {}
  B.__proto__ === RegExp;
try { if (Inst455 <= 1000 && typeof (C.__proto__) != "undefined") {_RecordType("<11507,11518,440>",(C.__proto__)); Inst455++; } } catch(e) {}try { if (Inst456 <= 1000 && typeof (C) != "undefined") {_RecordType("<11507,11508,440>",(C)); Inst456++; } } catch(e) {}try { if (Inst457 <= 1000 && typeof (B) != "undefined") {_RecordType("<11523,11524,440>",(B)); Inst457++; } } catch(e) {}
  C.__proto__ === B;
try { if (Inst458 <= 1000 && typeof (B.prototype.__proto__) != "undefined") {_RecordType("<11528,11549,441>",(B.prototype.__proto__)); Inst458++; } } catch(e) {}try { if (Inst459 <= 1000 && typeof (B.prototype) != "undefined") {_RecordType("<11528,11539,441>",(B.prototype)); Inst459++; } } catch(e) {}try { if (Inst460 <= 1000 && typeof (B) != "undefined") {_RecordType("<11528,11529,441>",(B)); Inst460++; } } catch(e) {}try { if (Inst461 <= 1000 && typeof (RegExp.prototype) != "undefined") {_RecordType("<11554,11570,441>",(RegExp.prototype)); Inst461++; } } catch(e) {}try { if (Inst462 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<11554,11560,441>",(RegExp)); Inst462++; } } catch(e) {}
  B.prototype.__proto__ === RegExp.prototype;
try { if (Inst463 <= 1000 && typeof (C.prototype.__proto__) != "undefined") {_RecordType("<11574,11595,442>",(C.prototype.__proto__)); Inst463++; } } catch(e) {}try { if (Inst464 <= 1000 && typeof (C.prototype) != "undefined") {_RecordType("<11574,11585,442>",(C.prototype)); Inst464++; } } catch(e) {}try { if (Inst465 <= 1000 && typeof (C) != "undefined") {_RecordType("<11574,11575,442>",(C)); Inst465++; } } catch(e) {}try { if (Inst466 <= 1000 && typeof (B.prototype) != "undefined") {_RecordType("<11600,11611,442>",(B.prototype)); Inst466++; } } catch(e) {}try { if (Inst467 <= 1000 && typeof (B) != "undefined") {_RecordType("<11600,11601,442>",(B)); Inst467++; } } catch(e) {}
  C.prototype.__proto__ === B.prototype;

  let X = function () {
    ;
  };
try { if (Inst468 <= 1000 && typeof (X) != "undefined") {_RecordType("<11620,11621,444>",(X)); Inst468++; } } catch(e) {}

try { if (Inst469 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<11652,11673,448>",(Object.defineProperty)); Inst469++; } } catch(e) {}try { if (Inst470 <= 1000 && typeof (Object) != "undefined") {_RecordType("<11652,11658,448>",(Object)); Inst470++; } } catch(e) {}try { if (Inst471 <= 1000 && typeof (X.prototype) != "undefined") {_RecordType("<11674,11685,448>",(X.prototype)); Inst471++; } } catch(e) {}try { if (Inst472 <= 1000 && typeof (X) != "undefined") {_RecordType("<11674,11675,448>",(X)); Inst472++; } } catch(e) {}
  Object.defineProperty(X.prototype, "flags", {
    get: function () {
try { if (Inst473 <= 1000 && typeof (accesses.push) != "undefined") {_RecordType("<11727,11740,450>",(accesses.push)); Inst473++; } } catch(e) {}try { if (Inst474 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<11727,11735,450>",(accesses)); Inst474++; } } catch(e) {}
      accesses.push("flags");
      return "";
    }
  });
try { if (Inst475 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<11782,11803,454>",(Object.defineProperty)); Inst475++; } } catch(e) {}try { if (Inst476 <= 1000 && typeof (Object) != "undefined") {_RecordType("<11782,11788,454>",(Object)); Inst476++; } } catch(e) {}try { if (Inst477 <= 1000 && typeof (X.prototype) != "undefined") {_RecordType("<11804,11815,454>",(X.prototype)); Inst477++; } } catch(e) {}try { if (Inst478 <= 1000 && typeof (X) != "undefined") {_RecordType("<11804,11805,454>",(X)); Inst478++; } } catch(e) {}
  Object.defineProperty(X.prototype, "exec", {
    value: function (str) {
try { if (Inst479 <= 1000 && typeof (str) != "undefined") {_RecordType("<11848,11851,455>",(str)); Inst479++; } } catch(e) {}
try { if (Inst480 <= 1000 && typeof (accesses.push) != "undefined") {_RecordType("<11861,11874,456>",(accesses.push)); Inst480++; } } catch(e) {}try { if (Inst481 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<11861,11869,456>",(accesses)); Inst481++; } } catch(e) {}
      accesses.push("exec");
try { if (Inst483 <= 1000 && typeof (/it/y.exec) != "undefined") {_RecordType("<11908,11918,457>",(/it/y.exec)); Inst483++; } } catch(e) {}try { if (Inst484 <= 1000 && typeof (str.substr) != "undefined") {_RecordType("<11919,11929,457>",(str.substr)); Inst484++; } } catch(e) {}try { if (Inst485 <= 1000 && typeof (str) != "undefined") {_RecordType("<11919,11922,457>",(str)); Inst485++; } } catch(e) {}try { if (Inst486 <= 1000 && typeof (this.lastIndex) != "undefined") {_RecordType("<11930,11944,457>",(this.lastIndex)); Inst486++; } } catch(e) {}
      var matchResult = /it/y.exec(str.substr(this.lastIndex));
try { if (Inst482 <= 1000 && typeof (matchResult) != "undefined") {_RecordType("<11894,11905,457>",(matchResult)); Inst482++; } } catch(e) {}

try { if (Inst487 <= 1000 && typeof (matchResult) != "undefined") {_RecordType("<11959,11970,459>",(matchResult)); Inst487++; } } catch(e) {}
      if (matchResult) {
        this.lastIndex += 2;
try { if (Inst488 <= 1000 && typeof (this.lastIndex) != "undefined") {_RecordType("<11982,11996,460>",(this.lastIndex)); Inst488++; } } catch(e) {}
      } // length of "it".


try { if (Inst489 <= 1000 && typeof (matchResult) != "undefined") {_RecordType("<12045,12056,464>",(matchResult)); Inst489++; } } catch(e) {}
      return matchResult;
    }
  }); // Instantiate C before monkeying with the prototype chain.

try { if (Inst491 <= 1000 && typeof (C) != "undefined") {_RecordType("<12147,12148,468>",(C)); Inst491++; } } catch(e) {}
  let obj = new C();
try { if (Inst490 <= 1000 && typeof (obj) != "undefined") {_RecordType("<12137,12140,468>",(obj)); Inst490++; } } catch(e) {}
try { if (Inst494 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<12168,12174,469>",(RegExp)); Inst494++; } } catch(e) {}
  X.__proto__ = RegExp;
try { if (Inst492 <= 1000 && typeof (X.__proto__) != "undefined") {_RecordType("<12154,12165,469>",(X.__proto__)); Inst492++; } } catch(e) {}try { if (Inst493 <= 1000 && typeof (X) != "undefined") {_RecordType("<12154,12155,469>",(X)); Inst493++; } } catch(e) {}
try { if (Inst498 <= 1000 && typeof (RegExp.prototype) != "undefined") {_RecordType("<12202,12218,470>",(RegExp.prototype)); Inst498++; } } catch(e) {}try { if (Inst499 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<12202,12208,470>",(RegExp)); Inst499++; } } catch(e) {}
  X.prototype.__proto__ = RegExp.prototype;
try { if (Inst495 <= 1000 && typeof (X.prototype.__proto__) != "undefined") {_RecordType("<12178,12199,470>",(X.prototype.__proto__)); Inst495++; } } catch(e) {}try { if (Inst496 <= 1000 && typeof (X.prototype) != "undefined") {_RecordType("<12178,12189,470>",(X.prototype)); Inst496++; } } catch(e) {}try { if (Inst497 <= 1000 && typeof (X) != "undefined") {_RecordType("<12178,12179,470>",(X)); Inst497++; } } catch(e) {}
try { if (Inst502 <= 1000 && typeof (X) != "undefined") {_RecordType("<12236,12237,471>",(X)); Inst502++; } } catch(e) {}
  C.__proto__ = X;
try { if (Inst500 <= 1000 && typeof (C.__proto__) != "undefined") {_RecordType("<12222,12233,471>",(C.__proto__)); Inst500++; } } catch(e) {}try { if (Inst501 <= 1000 && typeof (C) != "undefined") {_RecordType("<12222,12223,471>",(C)); Inst501++; } } catch(e) {}
try { if (Inst506 <= 1000 && typeof (X.prototype) != "undefined") {_RecordType("<12265,12276,472>",(X.prototype)); Inst506++; } } catch(e) {}try { if (Inst507 <= 1000 && typeof (X) != "undefined") {_RecordType("<12265,12266,472>",(X)); Inst507++; } } catch(e) {}
  C.prototype.__proto__ = X.prototype;
try { if (Inst503 <= 1000 && typeof (C.prototype.__proto__) != "undefined") {_RecordType("<12241,12262,472>",(C.prototype.__proto__)); Inst503++; } } catch(e) {}try { if (Inst504 <= 1000 && typeof (C.prototype) != "undefined") {_RecordType("<12241,12252,472>",(C.prototype)); Inst504++; } } catch(e) {}try { if (Inst505 <= 1000 && typeof (C) != "undefined") {_RecordType("<12241,12242,472>",(C)); Inst505++; } } catch(e) {}
try { if (Inst508 <= 1000 && typeof (X.__proto__) != "undefined") {_RecordType("<12280,12291,473>",(X.__proto__)); Inst508++; } } catch(e) {}try { if (Inst509 <= 1000 && typeof (X) != "undefined") {_RecordType("<12280,12281,473>",(X)); Inst509++; } } catch(e) {}try { if (Inst510 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<12296,12302,473>",(RegExp)); Inst510++; } } catch(e) {}
  X.__proto__ === RegExp;
try { if (Inst511 <= 1000 && typeof (C.__proto__) != "undefined") {_RecordType("<12306,12317,474>",(C.__proto__)); Inst511++; } } catch(e) {}try { if (Inst512 <= 1000 && typeof (C) != "undefined") {_RecordType("<12306,12307,474>",(C)); Inst512++; } } catch(e) {}try { if (Inst513 <= 1000 && typeof (X) != "undefined") {_RecordType("<12322,12323,474>",(X)); Inst513++; } } catch(e) {}
  C.__proto__ === X;
try { if (Inst514 <= 1000 && typeof (X.prototype.__proto__) != "undefined") {_RecordType("<12327,12348,475>",(X.prototype.__proto__)); Inst514++; } } catch(e) {}try { if (Inst515 <= 1000 && typeof (X.prototype) != "undefined") {_RecordType("<12327,12338,475>",(X.prototype)); Inst515++; } } catch(e) {}try { if (Inst516 <= 1000 && typeof (X) != "undefined") {_RecordType("<12327,12328,475>",(X)); Inst516++; } } catch(e) {}try { if (Inst517 <= 1000 && typeof (RegExp.prototype) != "undefined") {_RecordType("<12353,12369,475>",(RegExp.prototype)); Inst517++; } } catch(e) {}try { if (Inst518 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<12353,12359,475>",(RegExp)); Inst518++; } } catch(e) {}
  X.prototype.__proto__ === RegExp.prototype;
try { if (Inst519 <= 1000 && typeof (C.prototype.__proto__) != "undefined") {_RecordType("<12373,12394,476>",(C.prototype.__proto__)); Inst519++; } } catch(e) {}try { if (Inst520 <= 1000 && typeof (C.prototype) != "undefined") {_RecordType("<12373,12384,476>",(C.prototype)); Inst520++; } } catch(e) {}try { if (Inst521 <= 1000 && typeof (C) != "undefined") {_RecordType("<12373,12374,476>",(C)); Inst521++; } } catch(e) {}try { if (Inst522 <= 1000 && typeof (X.prototype) != "undefined") {_RecordType("<12399,12410,476>",(X.prototype)); Inst522++; } } catch(e) {}try { if (Inst523 <= 1000 && typeof (X) != "undefined") {_RecordType("<12399,12400,476>",(X)); Inst523++; } } catch(e) {}
  C.prototype.__proto__ === X.prototype;
try { if (Inst524 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<12414,12422,477>",(accesses)); Inst524++; } } catch(e) {}
  accesses == "";
  "unexpected call to overridden props";
try { if (Inst526 <= 1000 && typeof ("splitme".split) != "undefined") {_RecordType("<12486,12501,479>",("splitme".split)); Inst526++; } } catch(e) {}try { if (Inst527 <= 1000 && typeof (obj) != "undefined") {_RecordType("<12502,12505,479>",(obj)); Inst527++; } } catch(e) {}
  let result = "splitme".split(obj);
try { if (Inst525 <= 1000 && typeof (result) != "undefined") {_RecordType("<12477,12483,479>",(result)); Inst525++; } } catch(e) {}
try { if (Inst528 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<12510,12518,480>",(accesses)); Inst528++; } } catch(e) {}
  accesses == "flags,exec,exec,exec,exec,exec,exec";
  "Property accesses do not match expectation";
try { if (Inst529 <= 1000 && typeof (result) != "undefined") {_RecordType("<12611,12617,482>",(result)); Inst529++; } } catch(e) {}
  result == "spl,me";
  "Unexpected result";
})(); // 2 levels of subclasses with proxied prototype: Testing ES6 21.2.5.11: 5. Let flags be ? ToString(? Get(rx, "flags")).


(function () {
  let accesses = [];
try { if (Inst530 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<12804,12812,488>",(accesses)); Inst530++; } } catch(e) {}

try { if (Inst532 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<12838,12844,490>",(RegExp)); Inst532++; } } catch(e) {}
  class B extends RegExp {}
try { if (Inst531 <= 1000 && typeof (B) != "undefined") {_RecordType("<12828,12829,490>",(B)); Inst531++; } } catch(e) {}

  ;
try { if (Inst533 <= 1000 && typeof (B.__proto__) != "undefined") {_RecordType("<12855,12866,493>",(B.__proto__)); Inst533++; } } catch(e) {}try { if (Inst534 <= 1000 && typeof (B) != "undefined") {_RecordType("<12855,12856,493>",(B)); Inst534++; } } catch(e) {}try { if (Inst535 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<12871,12877,493>",(RegExp)); Inst535++; } } catch(e) {}
  B.__proto__ === RegExp;
try { if (Inst536 <= 1000 && typeof (B.prototype.__proto__) != "undefined") {_RecordType("<12881,12902,494>",(B.prototype.__proto__)); Inst536++; } } catch(e) {}try { if (Inst537 <= 1000 && typeof (B.prototype) != "undefined") {_RecordType("<12881,12892,494>",(B.prototype)); Inst537++; } } catch(e) {}try { if (Inst538 <= 1000 && typeof (B) != "undefined") {_RecordType("<12881,12882,494>",(B)); Inst538++; } } catch(e) {}try { if (Inst539 <= 1000 && typeof (RegExp.prototype) != "undefined") {_RecordType("<12907,12923,494>",(RegExp.prototype)); Inst539++; } } catch(e) {}try { if (Inst540 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<12907,12913,494>",(RegExp)); Inst540++; } } catch(e) {}
  B.prototype.__proto__ === RegExp.prototype;
try { if (Inst542 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<12943,12948,495>",(Proxy)); Inst542++; } } catch(e) {}try { if (Inst543 <= 1000 && typeof (RegExp.prototype) != "undefined") {_RecordType("<12949,12965,495>",(RegExp.prototype)); Inst543++; } } catch(e) {}try { if (Inst544 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<12949,12955,495>",(RegExp)); Inst544++; } } catch(e) {}
  let proxy = new Proxy(RegExp.prototype, {
    get: function (obj, prop) {
try { if (Inst545 <= 1000 && typeof (obj) != "undefined") {_RecordType("<12988,12991,496>",(obj)); Inst545++; } } catch(e) {}try { if (Inst546 <= 1000 && typeof (prop) != "undefined") {_RecordType("<12993,12997,496>",(prop)); Inst546++; } } catch(e) {}
try { if (Inst547 <= 1000 && typeof (accesses.push) != "undefined") {_RecordType("<13007,13020,497>",(accesses.push)); Inst547++; } } catch(e) {}try { if (Inst548 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<13007,13015,497>",(accesses)); Inst548++; } } catch(e) {}try { if (Inst549 <= 1000 && typeof (prop.toString) != "undefined") {_RecordType("<13021,13034,497>",(prop.toString)); Inst549++; } } catch(e) {}try { if (Inst550 <= 1000 && typeof (prop) != "undefined") {_RecordType("<13021,13025,497>",(prop)); Inst550++; } } catch(e) {}
      accesses.push(prop.toString());

try { if (Inst551 <= 1000 && typeof (prop) != "undefined") {_RecordType("<13050,13054,499>",(prop)); Inst551++; } } catch(e) {}
      if (prop === "exec") {
        return function (str) {
try { if (Inst552 <= 1000 && typeof (str) != "undefined") {_RecordType("<13094,13097,500>",(str)); Inst552++; } } catch(e) {}
try { if (Inst553 <= 1000 && typeof (accesses.push) != "undefined") {_RecordType("<13111,13124,501>",(accesses.push)); Inst553++; } } catch(e) {}try { if (Inst554 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<13111,13119,501>",(accesses)); Inst554++; } } catch(e) {}
          accesses.push("in_exec");
try { if (Inst556 <= 1000 && typeof (/it/y.exec) != "undefined") {_RecordType("<13165,13175,502>",(/it/y.exec)); Inst556++; } } catch(e) {}try { if (Inst557 <= 1000 && typeof (str.substr) != "undefined") {_RecordType("<13176,13186,502>",(str.substr)); Inst557++; } } catch(e) {}try { if (Inst558 <= 1000 && typeof (str) != "undefined") {_RecordType("<13176,13179,502>",(str)); Inst558++; } } catch(e) {}try { if (Inst559 <= 1000 && typeof (this.lastIndex) != "undefined") {_RecordType("<13187,13201,502>",(this.lastIndex)); Inst559++; } } catch(e) {}
          var matchResult = /it/y.exec(str.substr(this.lastIndex));
try { if (Inst555 <= 1000 && typeof (matchResult) != "undefined") {_RecordType("<13151,13162,502>",(matchResult)); Inst555++; } } catch(e) {}

try { if (Inst560 <= 1000 && typeof (matchResult) != "undefined") {_RecordType("<13220,13231,504>",(matchResult)); Inst560++; } } catch(e) {}
          if (matchResult) {
            this.lastIndex += 2;
try { if (Inst561 <= 1000 && typeof (this.lastIndex) != "undefined") {_RecordType("<13247,13261,505>",(this.lastIndex)); Inst561++; } } catch(e) {}
          } // length of "it".


try { if (Inst562 <= 1000 && typeof (matchResult) != "undefined") {_RecordType("<13318,13329,509>",(matchResult)); Inst562++; } } catch(e) {}
          return matchResult;
        };
      }

try { if (Inst563 <= 1000 && typeof (obj[prop]) != "undefined") {_RecordType("<13364,13373,513>",(obj[prop])); Inst563++; } } catch(e) {}try { if (Inst564 <= 1000 && typeof (obj) != "undefined") {_RecordType("<13364,13367,513>",(obj)); Inst564++; } } catch(e) {}
      return obj[prop];
    }
  });
try { if (Inst541 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<12931,12936,495>",(proxy)); Inst541++; } } catch(e) {}
try { if (Inst568 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<13413,13418,516>",(proxy)); Inst568++; } } catch(e) {}
  B.prototype.__proto__ = proxy;
try { if (Inst565 <= 1000 && typeof (B.prototype.__proto__) != "undefined") {_RecordType("<13389,13410,516>",(B.prototype.__proto__)); Inst565++; } } catch(e) {}try { if (Inst566 <= 1000 && typeof (B.prototype) != "undefined") {_RecordType("<13389,13400,516>",(B.prototype)); Inst566++; } } catch(e) {}try { if (Inst567 <= 1000 && typeof (B) != "undefined") {_RecordType("<13389,13390,516>",(B)); Inst567++; } } catch(e) {}
try { if (Inst570 <= 1000 && typeof (B) != "undefined") {_RecordType("<13436,13437,517>",(B)); Inst570++; } } catch(e) {}
  let obj = new B();
try { if (Inst569 <= 1000 && typeof (obj) != "undefined") {_RecordType("<13426,13429,517>",(obj)); Inst569++; } } catch(e) {}
try { if (Inst571 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<13443,13451,518>",(accesses)); Inst571++; } } catch(e) {}
  accesses == "";
  "unexpected call to overridden props";
try { if (Inst573 <= 1000 && typeof ("splitme".split) != "undefined") {_RecordType("<13515,13530,520>",("splitme".split)); Inst573++; } } catch(e) {}try { if (Inst574 <= 1000 && typeof (obj) != "undefined") {_RecordType("<13531,13534,520>",(obj)); Inst574++; } } catch(e) {}
  let result = "splitme".split(obj);
try { if (Inst572 <= 1000 && typeof (result) != "undefined") {_RecordType("<13506,13512,520>",(result)); Inst572++; } } catch(e) {}
try { if (Inst575 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<13539,13547,521>",(accesses)); Inst575++; } } catch(e) {}
  accesses == "Symbol(Symbol.split),flags,Symbol(Symbol.match),exec,in_exec,exec,in_exec,exec,in_exec,exec,in_exec,exec,in_exec,exec,in_exec";
  "Property accesses do not match expectation";
try { if (Inst576 <= 1000 && typeof (result) != "undefined") {_RecordType("<13730,13736,523>",(result)); Inst576++; } } catch(e) {}
  result == "spl,me";
  "Unexpected result";
})(); // RegExp subclass with overridden exec: Testing ES6 21.2.5.11: 19.b. Let z be ? RegExpExec(splitter, S).


(function () {
  let accesses = [];
try { if (Inst577 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<13908,13916,529>",(accesses)); Inst577++; } } catch(e) {}

try { if (Inst587 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<13951,13957,531>",(RegExp)); Inst587++; } } catch(e) {}
  class TestRegExp extends RegExp {
    exec(str) {
try { if (Inst579 <= 1000 && typeof (str) != "undefined") {_RecordType("<13969,13972,532>",(str)); Inst579++; } } catch(e) {}
try { if (Inst580 <= 1000 && typeof (accesses.push) != "undefined") {_RecordType("<13982,13995,533>",(accesses.push)); Inst580++; } } catch(e) {}try { if (Inst581 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<13982,13990,533>",(accesses)); Inst581++; } } catch(e) {}
      accesses.push("exec");
try { if (Inst582 <= 1000 && typeof (RegExp.prototype.exec.call) != "undefined") {_RecordType("<14018,14044,534>",(RegExp.prototype.exec.call)); Inst582++; } } catch(e) {}try { if (Inst583 <= 1000 && typeof (RegExp.prototype.exec) != "undefined") {_RecordType("<14018,14039,534>",(RegExp.prototype.exec)); Inst583++; } } catch(e) {}try { if (Inst584 <= 1000 && typeof (RegExp.prototype) != "undefined") {_RecordType("<14018,14034,534>",(RegExp.prototype)); Inst584++; } } catch(e) {}try { if (Inst585 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<14018,14024,534>",(RegExp)); Inst585++; } } catch(e) {}try { if (Inst586 <= 1000 && typeof (str) != "undefined") {_RecordType("<14051,14054,534>",(str)); Inst586++; } } catch(e) {}
      return RegExp.prototype.exec.call(this, str);
    }

  }
try { if (Inst578 <= 1000 && typeof (TestRegExp) != "undefined") {_RecordType("<13932,13942,531>",(TestRegExp)); Inst578++; } } catch(e) {}

  ;
try { if (Inst589 <= 1000 && typeof (TestRegExp) != "undefined") {_RecordType("<14089,14099,540>",(TestRegExp)); Inst589++; } } catch(e) {}
  let obj = new TestRegExp(/it/);
try { if (Inst588 <= 1000 && typeof (obj) != "undefined") {_RecordType("<14079,14082,540>",(obj)); Inst588++; } } catch(e) {}
try { if (Inst590 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<14109,14117,541>",(accesses)); Inst590++; } } catch(e) {}
  accesses == "";
  "unexpected call to overridden props";
try { if (Inst592 <= 1000 && typeof ("splitme".split) != "undefined") {_RecordType("<14181,14196,543>",("splitme".split)); Inst592++; } } catch(e) {}try { if (Inst593 <= 1000 && typeof (obj) != "undefined") {_RecordType("<14197,14200,543>",(obj)); Inst593++; } } catch(e) {}
  let result = "splitme".split(obj);
try { if (Inst591 <= 1000 && typeof (result) != "undefined") {_RecordType("<14172,14178,543>",(result)); Inst591++; } } catch(e) {}
try { if (Inst594 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<14205,14213,544>",(accesses)); Inst594++; } } catch(e) {}
  accesses == "exec,exec,exec,exec,exec,exec";
  "Property accesses do not match expectation";
try { if (Inst595 <= 1000 && typeof (result) != "undefined") {_RecordType("<14300,14306,546>",(result)); Inst595++; } } catch(e) {}
  result == "spl,me";
  "Unexpected result";
})(); // Proxied RegExp observing every get.


(function () {
  let accesses = [];
try { if (Inst596 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<14411,14419,552>",(accesses)); Inst596++; } } catch(e) {}
try { if (Inst598 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<14445,14451,553>",(RegExp)); Inst598++; } } catch(e) {}
  let regexp = new RegExp(/it/);
try { if (Inst597 <= 1000 && typeof (regexp) != "undefined") {_RecordType("<14432,14438,553>",(regexp)); Inst597++; } } catch(e) {}
try { if (Inst600 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<14477,14482,554>",(Proxy)); Inst600++; } } catch(e) {}try { if (Inst601 <= 1000 && typeof (regexp) != "undefined") {_RecordType("<14483,14489,554>",(regexp)); Inst601++; } } catch(e) {}try { if (Inst602 <= 1000 && typeof (get) != "undefined") {_RecordType("<14497,14500,555>",(get)); Inst602++; } } catch(e) {}try { if (Inst603 <= 1000 && typeof (obj) != "undefined") {_RecordType("<14501,14504,555>",(obj)); Inst603++; } } catch(e) {}try { if (Inst604 <= 1000 && typeof (prop) != "undefined") {_RecordType("<14506,14510,555>",(prop)); Inst604++; } } catch(e) {}
  let proxy = new Proxy(regexp, {
    get(obj, prop) {
try { if (Inst605 <= 1000 && typeof (accesses.push) != "undefined") {_RecordType("<14520,14533,556>",(accesses.push)); Inst605++; } } catch(e) {}try { if (Inst606 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<14520,14528,556>",(accesses)); Inst606++; } } catch(e) {}try { if (Inst607 <= 1000 && typeof (prop.toString) != "undefined") {_RecordType("<14534,14547,556>",(prop.toString)); Inst607++; } } catch(e) {}try { if (Inst608 <= 1000 && typeof (prop) != "undefined") {_RecordType("<14534,14538,556>",(prop)); Inst608++; } } catch(e) {}
      accesses.push(prop.toString());
try { if (Inst609 <= 1000 && typeof (obj[prop]) != "undefined") {_RecordType("<14565,14574,557>",(obj[prop])); Inst609++; } } catch(e) {}try { if (Inst610 <= 1000 && typeof (obj) != "undefined") {_RecordType("<14565,14568,557>",(obj)); Inst610++; } } catch(e) {}
      return obj[prop];
    }

  });
try { if (Inst599 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<14465,14470,554>",(proxy)); Inst599++; } } catch(e) {}
try { if (Inst611 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<14591,14599,561>",(accesses)); Inst611++; } } catch(e) {}
  accesses == "";
  "unexpected call to overridden props";
try { if (Inst613 <= 1000 && typeof ("splitme".split) != "undefined") {_RecordType("<14663,14678,563>",("splitme".split)); Inst613++; } } catch(e) {}try { if (Inst614 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<14679,14684,563>",(proxy)); Inst614++; } } catch(e) {}
  let result = "splitme".split(proxy); // Note: @@split creates a new instance of the RegExp using its @@species, and performs
try { if (Inst612 <= 1000 && typeof (result) != "undefined") {_RecordType("<14654,14660,563>",(result)); Inst612++; } } catch(e) {}
  // the split operation with that new instance. Hence, the proxy is only able to observe
  // gets up to the creation of the new instance.

try { if (Inst615 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<14918,14926,567>",(accesses)); Inst615++; } } catch(e) {}
  accesses == "Symbol(Symbol.split),constructor,flags,Symbol(Symbol.match),source";
  "Proxy not able to observe some gets";
try { if (Inst616 <= 1000 && typeof (result) != "undefined") {_RecordType("<15043,15049,569>",(result)); Inst616++; } } catch(e) {}
  result == "spl,me";
  "Unexpected result";
})(); // Proxied RegExp (without @@match) observing every get.
// This is to force the RegExp @species constructor to access source.


(function () {
  let accesses = [];
try { if (Inst617 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<15242,15250,576>",(accesses)); Inst617++; } } catch(e) {}
try { if (Inst619 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<15276,15282,577>",(RegExp)); Inst619++; } } catch(e) {}
  let regexp = new RegExp(/it/);
try { if (Inst618 <= 1000 && typeof (regexp) != "undefined") {_RecordType("<15263,15269,577>",(regexp)); Inst618++; } } catch(e) {}
try { if (Inst621 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<15308,15313,578>",(Proxy)); Inst621++; } } catch(e) {}try { if (Inst622 <= 1000 && typeof (regexp) != "undefined") {_RecordType("<15314,15320,578>",(regexp)); Inst622++; } } catch(e) {}try { if (Inst623 <= 1000 && typeof (get) != "undefined") {_RecordType("<15328,15331,579>",(get)); Inst623++; } } catch(e) {}try { if (Inst624 <= 1000 && typeof (obj) != "undefined") {_RecordType("<15332,15335,579>",(obj)); Inst624++; } } catch(e) {}try { if (Inst625 <= 1000 && typeof (prop) != "undefined") {_RecordType("<15337,15341,579>",(prop)); Inst625++; } } catch(e) {}
  let proxy = new Proxy(regexp, {
    get(obj, prop) {
try { if (Inst626 <= 1000 && typeof (accesses.push) != "undefined") {_RecordType("<15351,15364,580>",(accesses.push)); Inst626++; } } catch(e) {}try { if (Inst627 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<15351,15359,580>",(accesses)); Inst627++; } } catch(e) {}try { if (Inst628 <= 1000 && typeof (prop.toString) != "undefined") {_RecordType("<15365,15378,580>",(prop.toString)); Inst628++; } } catch(e) {}try { if (Inst629 <= 1000 && typeof (prop) != "undefined") {_RecordType("<15365,15369,580>",(prop)); Inst629++; } } catch(e) {}
      accesses.push(prop.toString());

try { if (Inst630 <= 1000 && typeof (prop) != "undefined") {_RecordType("<15394,15398,582>",(prop)); Inst630++; } } catch(e) {}try { if (Inst631 <= 1000 && typeof (Symbol.match) != "undefined") {_RecordType("<15402,15414,582>",(Symbol.match)); Inst631++; } } catch(e) {}try { if (Inst632 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<15402,15408,582>",(Symbol)); Inst632++; } } catch(e) {}
      if (prop == Symbol.match) {
try { if (Inst633 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<15433,15442,583>",(undefined)); Inst633++; } } catch(e) {}
        return undefined;
      }

try { if (Inst634 <= 1000 && typeof (obj[prop]) != "undefined") {_RecordType("<15466,15475,586>",(obj[prop])); Inst634++; } } catch(e) {}try { if (Inst635 <= 1000 && typeof (obj) != "undefined") {_RecordType("<15466,15469,586>",(obj)); Inst635++; } } catch(e) {}
      return obj[prop];
    }

  });
try { if (Inst620 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<15296,15301,578>",(proxy)); Inst620++; } } catch(e) {}
try { if (Inst636 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<15492,15500,590>",(accesses)); Inst636++; } } catch(e) {}
  accesses == "";
  "unexpected call to overridden props";
try { if (Inst638 <= 1000 && typeof ("splitme".split) != "undefined") {_RecordType("<15564,15579,592>",("splitme".split)); Inst638++; } } catch(e) {}try { if (Inst639 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<15580,15585,592>",(proxy)); Inst639++; } } catch(e) {}
  let result = "splitme".split(proxy); // Note: @@split creates a new instance of the RegExp using its @@species, and performs
try { if (Inst637 <= 1000 && typeof (result) != "undefined") {_RecordType("<15555,15561,592>",(result)); Inst637++; } } catch(e) {}
  // the split operation with that new instance. Hence, the proxy is only able to observe
  // gets up to the creation of the new instance.

try { if (Inst640 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<15819,15827,596>",(accesses)); Inst640++; } } catch(e) {}
  accesses == "Symbol(Symbol.split),constructor,flags,Symbol(Symbol.match),Symbol(Symbol.toPrimitive),toString,source,flags";
  "Proxy not able to observe some gets";
try { if (Inst641 <= 1000 && typeof (result) != "undefined") {_RecordType("<15986,15992,598>",(result)); Inst641++; } } catch(e) {}
  result == "splitme";
  "Unexpected result";
})();

