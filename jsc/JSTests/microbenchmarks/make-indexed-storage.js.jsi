var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (foo) != "undefined") {_RecordType("<9,12,1>",(foo)); Inst0++; } } catch(e) {}
function foo(length) {
try { if (Inst1 <= 1000 && typeof (length) != "undefined") {_RecordType("<13,19,1>",(length)); Inst1++; } } catch(e) {}
  var o = {};
try { if (Inst2 <= 1000 && typeof (o) != "undefined") {_RecordType("<29,30,2>",(o)); Inst2++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (length) != "undefined") {_RecordType("<50,56,3>",(length)); Inst5++; } } catch(e) {}
  o.length = length;
try { if (Inst3 <= 1000 && typeof (o.length) != "undefined") {_RecordType("<39,47,3>",(o.length)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (o) != "undefined") {_RecordType("<39,40,3>",(o)); Inst4++; } } catch(e) {}

  for (var i = 0; i < o.length; ++i) {
try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<70,71,5>",(i)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<77,78,5>",(i)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (o.length) != "undefined") {_RecordType("<81,89,5>",(o.length)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (o) != "undefined") {_RecordType("<81,82,5>",(o)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<93,94,5>",(i)); Inst10++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<109,110,6>",(i)); Inst13++; } } catch(e) {}
    o[i] = i;
try { if (Inst11 <= 1000 && typeof (o[i]) != "undefined") {_RecordType("<102,106,6>",(o[i])); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (o) != "undefined") {_RecordType("<102,103,6>",(o)); Inst12++; } } catch(e) {}
  } // The first iteration is special as it makes indexed storage. If the DFG doesn't know how to optimize that and instead calls a C function, then this benchmark may not run so quickly.


try { if (Inst14 <= 1000 && typeof (o) != "undefined") {_RecordType("<311,312,10>",(o)); Inst14++; } } catch(e) {}
  return o;
}

try { if (Inst15 <= 1000 && typeof (sum) != "undefined") {_RecordType("<326,329,13>",(sum)); Inst15++; } } catch(e) {}
function sum(o) {
try { if (Inst16 <= 1000 && typeof (o) != "undefined") {_RecordType("<330,331,13>",(o)); Inst16++; } } catch(e) {}
  var result = 0;
try { if (Inst17 <= 1000 && typeof (result) != "undefined") {_RecordType("<341,347,14>",(result)); Inst17++; } } catch(e) {}

  for (var i = 0; i < o.length; ++i) {
try { if (Inst18 <= 1000 && typeof (i) != "undefined") {_RecordType("<365,366,16>",(i)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (i) != "undefined") {_RecordType("<372,373,16>",(i)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (o.length) != "undefined") {_RecordType("<376,384,16>",(o.length)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (o) != "undefined") {_RecordType("<376,377,16>",(o)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<388,389,16>",(i)); Inst22++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (o[i]) != "undefined") {_RecordType("<407,411,17>",(o[i])); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (o) != "undefined") {_RecordType("<407,408,17>",(o)); Inst25++; } } catch(e) {}
    result += o[i];
try { if (Inst23 <= 1000 && typeof (result) != "undefined") {_RecordType("<397,403,17>",(result)); Inst23++; } } catch(e) {}
  }

try { if (Inst26 <= 1000 && typeof (result) != "undefined") {_RecordType("<427,433,20>",(result)); Inst26++; } } catch(e) {}
  return result;
}

var result = 0;
try { if (Inst27 <= 1000 && typeof (result) != "undefined") {_RecordType("<442,448,23>",(result)); Inst27++; } } catch(e) {}

for (var i = 0; i < 2000; ++i) {
try { if (Inst28 <= 1000 && typeof (i) != "undefined") {_RecordType("<464,465,25>",(i)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (i) != "undefined") {_RecordType("<471,472,25>",(i)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (i) != "undefined") {_RecordType("<483,484,25>",(i)); Inst30++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (sum) != "undefined") {_RecordType("<500,503,26>",(sum)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (foo) != "undefined") {_RecordType("<504,507,26>",(foo)); Inst33++; } } catch(e) {}
  result += sum(foo(100));
try { if (Inst31 <= 1000 && typeof (result) != "undefined") {_RecordType("<490,496,26>",(result)); Inst31++; } } catch(e) {}
}

try { if (Inst34 <= 1000 && typeof (result) != "undefined") {_RecordType("<522,528,29>",(result)); Inst34++; } } catch(e) {}
if (result != 9900000) {
try { if (Inst35 <= 1000 && typeof (result) != "undefined") {_RecordType("<575,581,30>",(result)); Inst35++; } } catch(e) {}
  throw "Error: bad result: " + result;
}

