var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
let objs = [{
  __proto__: {
    foo: 25
  },
  bar: 50,
  baz: 75,
  jaz: 80
}, {
  __proto__: {
    bar: 25
  },
  baz: 75,
  kaz: 80,
  bar: 50,
  jaz: 80
}, {
  __proto__: {
    bar: 25,
    jaz: 50
  },
  bar: 50,
  baz: 75,
  kaz: 80,
  jaz: 80,
  foo: 55
}];
try { if (Inst0 <= 1000 && typeof (objs) != "undefined") {_RecordType("<4,8,1>",(objs)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (foo) != "undefined") {_RecordType("<276,279,28>",(foo)); Inst1++; } } catch(e) {}
function foo(o) {
try { if (Inst2 <= 1000 && typeof (o) != "undefined") {_RecordType("<280,281,28>",(o)); Inst2++; } } catch(e) {}
  for (let p in o) {
try { if (Inst3 <= 1000 && typeof (p) != "undefined") {_RecordType("<296,297,29>",(p)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (o) != "undefined") {_RecordType("<301,302,29>",(o)); Inst4++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (o.hasOwnProperty) != "undefined") {_RecordType("<310,326,30>",(o.hasOwnProperty)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (o) != "undefined") {_RecordType("<310,311,30>",(o)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (p) != "undefined") {_RecordType("<327,328,30>",(p)); Inst7++; } } catch(e) {}
    o.hasOwnProperty(p);
  }
}

try { if (Inst8 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<338,346,34>",(noInline)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (foo) != "undefined") {_RecordType("<347,350,34>",(foo)); Inst9++; } } catch(e) {}
noInline(foo);
try { if (Inst11 <= 1000 && typeof (Date.now) != "undefined") {_RecordType("<365,373,35>",(Date.now)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Date) != "undefined") {_RecordType("<365,369,35>",(Date)); Inst12++; } } catch(e) {}
let start = Date.now();
try { if (Inst10 <= 1000 && typeof (start) != "undefined") {_RecordType("<357,362,35>",(start)); Inst10++; } } catch(e) {}

for (let i = 0; i < 1000000; ++i) {
try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<387,388,37>",(i)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<394,395,37>",(i)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<409,410,37>",(i)); Inst15++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (foo) != "undefined") {_RecordType("<416,419,38>",(foo)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (objs[i % objs.length]) != "undefined") {_RecordType("<420,441,38>",(objs[i % objs.length])); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (objs) != "undefined") {_RecordType("<420,424,38>",(objs)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (i) != "undefined") {_RecordType("<425,426,38>",(i)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (objs.length) != "undefined") {_RecordType("<429,440,38>",(objs.length)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (objs) != "undefined") {_RecordType("<429,433,38>",(objs)); Inst21++; } } catch(e) {}
  foo(objs[i % objs.length]);
}

const verbose = false;
try { if (Inst22 <= 1000 && typeof (verbose) != "undefined") {_RecordType("<453,460,41>",(verbose)); Inst22++; } } catch(e) {}

try { if (Inst23 <= 1000 && typeof (verbose) != "undefined") {_RecordType("<475,482,43>",(verbose)); Inst23++; } } catch(e) {}
if (verbose) {
try { if (Inst24 <= 1000 && typeof (print) != "undefined") {_RecordType("<488,493,44>",(print)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Date.now) != "undefined") {_RecordType("<494,502,44>",(Date.now)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Date) != "undefined") {_RecordType("<494,498,44>",(Date)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (start) != "undefined") {_RecordType("<507,512,44>",(start)); Inst27++; } } catch(e) {}
  print(Date.now() - start);
}

