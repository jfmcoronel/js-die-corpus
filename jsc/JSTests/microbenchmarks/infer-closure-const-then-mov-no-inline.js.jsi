var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
(function () {
  var a = 42;
try { if (Inst0 <= 1000 && typeof (a) != "undefined") {_RecordType("<21,22,2>",(a)); Inst0++; } } catch(e) {}
  var b = 23;
try { if (Inst1 <= 1000 && typeof (b) != "undefined") {_RecordType("<35,36,3>",(b)); Inst1++; } } catch(e) {}
  var c = 84;
try { if (Inst2 <= 1000 && typeof (c) != "undefined") {_RecordType("<49,50,4>",(c)); Inst2++; } } catch(e) {}
  var d = 13;
try { if (Inst3 <= 1000 && typeof (d) != "undefined") {_RecordType("<63,64,5>",(d)); Inst3++; } } catch(e) {}
  var e = 90;
try { if (Inst4 <= 1000 && typeof (e) != "undefined") {_RecordType("<77,78,6>",(e)); Inst4++; } } catch(e) {}
  var f = 34;
try { if (Inst5 <= 1000 && typeof (f) != "undefined") {_RecordType("<91,92,7>",(f)); Inst5++; } } catch(e) {}
  var g = 52;
try { if (Inst6 <= 1000 && typeof (g) != "undefined") {_RecordType("<105,106,8>",(g)); Inst6++; } } catch(e) {}

try { if (Inst7 <= 1000 && typeof (foo) != "undefined") {_RecordType("<125,128,10>",(foo)); Inst7++; } } catch(e) {}
  function foo() {
try { if (Inst8 <= 1000 && typeof (a) != "undefined") {_RecordType("<144,145,11>",(a)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (b) != "undefined") {_RecordType("<148,149,11>",(b)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (c) != "undefined") {_RecordType("<152,153,11>",(c)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (d) != "undefined") {_RecordType("<156,157,11>",(d)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (e) != "undefined") {_RecordType("<160,161,11>",(e)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (f) != "undefined") {_RecordType("<164,165,11>",(f)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (g) != "undefined") {_RecordType("<168,169,11>",(g)); Inst14++; } } catch(e) {}
    return a + b + c + d + e + f + g;
  }

try { if (Inst15 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<178,186,14>",(noInline)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (foo) != "undefined") {_RecordType("<187,190,14>",(foo)); Inst16++; } } catch(e) {}
  noInline(foo);

  for (var i = 0; i < 500000; ++i) {
try { if (Inst17 <= 1000 && typeof (i) != "undefined") {_RecordType("<205,206,16>",(i)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (i) != "undefined") {_RecordType("<212,213,16>",(i)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (i) != "undefined") {_RecordType("<226,227,16>",(i)); Inst19++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (foo) != "undefined") {_RecordType("<248,251,17>",(foo)); Inst21++; } } catch(e) {}
    var result = foo();
try { if (Inst20 <= 1000 && typeof (result) != "undefined") {_RecordType("<239,245,17>",(result)); Inst20++; } } catch(e) {}

try { if (Inst22 <= 1000 && typeof (result) != "undefined") {_RecordType("<264,270,19>",(result)); Inst22++; } } catch(e) {}
    if (result != 42 + 23 + 84 + 13 + 90 + 34 + 52) {
try { if (Inst23 <= 1000 && typeof (result) != "undefined") {_RecordType("<346,352,20>",(result)); Inst23++; } } catch(e) {}
      throw "Error: bad result: " + result;
    }
  }

  a = 1;
try { if (Inst24 <= 1000 && typeof (a) != "undefined") {_RecordType("<367,368,24>",(a)); Inst24++; } } catch(e) {}
  b = 2;
try { if (Inst25 <= 1000 && typeof (b) != "undefined") {_RecordType("<376,377,25>",(b)); Inst25++; } } catch(e) {}
  c = 3;
try { if (Inst26 <= 1000 && typeof (c) != "undefined") {_RecordType("<385,386,26>",(c)); Inst26++; } } catch(e) {}
  d = 4;
try { if (Inst27 <= 1000 && typeof (d) != "undefined") {_RecordType("<394,395,27>",(d)); Inst27++; } } catch(e) {}
  e = 5;
try { if (Inst28 <= 1000 && typeof (e) != "undefined") {_RecordType("<403,404,28>",(e)); Inst28++; } } catch(e) {}
  f = 6;
try { if (Inst29 <= 1000 && typeof (f) != "undefined") {_RecordType("<412,413,29>",(f)); Inst29++; } } catch(e) {}
  g = 7;
try { if (Inst30 <= 1000 && typeof (g) != "undefined") {_RecordType("<421,422,30>",(g)); Inst30++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (foo) != "undefined") {_RecordType("<443,446,31>",(foo)); Inst32++; } } catch(e) {}
  var result = foo();
try { if (Inst31 <= 1000 && typeof (result) != "undefined") {_RecordType("<434,440,31>",(result)); Inst31++; } } catch(e) {}

try { if (Inst33 <= 1000 && typeof (result) != "undefined") {_RecordType("<457,463,33>",(result)); Inst33++; } } catch(e) {}
  if (result != 1 + 2 + 3 + 4 + 5 + 6 + 7) {
try { if (Inst34 <= 1000 && typeof (result) != "undefined") {_RecordType("<530,536,34>",(result)); Inst34++; } } catch(e) {}
    throw "Error: bad result: " + result;
  }
})();

