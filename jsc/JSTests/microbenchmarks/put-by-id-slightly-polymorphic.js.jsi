var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
(function () {
  var o = {
    f: 1,
    g: 2
  };
try { if (Inst0 <= 1000 && typeof (o) != "undefined") {_RecordType("<21,22,2>",(o)); Inst0++; } } catch(e) {}
  var p = {
    f: 1
  };
try { if (Inst1 <= 1000 && typeof (p) != "undefined") {_RecordType("<57,58,6>",(p)); Inst1++; } } catch(e) {}
  var n = 1000000;
try { if (Inst2 <= 1000 && typeof (n) != "undefined") {_RecordType("<83,84,9>",(n)); Inst2++; } } catch(e) {}

  for (var i = 0; i < n; ++i) {
try { if (Inst3 <= 1000 && typeof (i) != "undefined") {_RecordType("<108,109,11>",(i)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (i) != "undefined") {_RecordType("<115,116,11>",(i)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (n) != "undefined") {_RecordType("<119,120,11>",(n)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<124,125,11>",(i)); Inst6++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<139,140,12>",(i)); Inst9++; } } catch(e) {}
    o.f = i;
try { if (Inst7 <= 1000 && typeof (o.f) != "undefined") {_RecordType("<133,136,12>",(o.f)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (o) != "undefined") {_RecordType("<133,134,12>",(o)); Inst8++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (o) != "undefined") {_RecordType("<156,157,13>",(o)); Inst11++; } } catch(e) {}
    var tmp = o;
try { if (Inst10 <= 1000 && typeof (tmp) != "undefined") {_RecordType("<150,153,13>",(tmp)); Inst10++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (p) != "undefined") {_RecordType("<167,168,14>",(p)); Inst13++; } } catch(e) {}
    o = p;
try { if (Inst12 <= 1000 && typeof (o) != "undefined") {_RecordType("<163,164,14>",(o)); Inst12++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (tmp) != "undefined") {_RecordType("<178,181,15>",(tmp)); Inst15++; } } catch(e) {}
    p = tmp;
try { if (Inst14 <= 1000 && typeof (p) != "undefined") {_RecordType("<174,175,15>",(p)); Inst14++; } } catch(e) {}
  }

try { if (Inst16 <= 1000 && typeof (o.f) != "undefined") {_RecordType("<194,197,18>",(o.f)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (o) != "undefined") {_RecordType("<194,195,18>",(o)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (n) != "undefined") {_RecordType("<201,202,18>",(n)); Inst18++; } } catch(e) {}
  if (o.f != n - 2) {
try { if (Inst19 <= 1000 && typeof (o.f) != "undefined") {_RecordType("<250,253,19>",(o.f)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (o) != "undefined") {_RecordType("<250,251,19>",(o)); Inst20++; } } catch(e) {}
    throw "Error: bad value of o.f: " + o.f;
  }

try { if (Inst21 <= 1000 && typeof (p.f) != "undefined") {_RecordType("<266,269,22>",(p.f)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (p) != "undefined") {_RecordType("<266,267,22>",(p)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (n) != "undefined") {_RecordType("<273,274,22>",(n)); Inst23++; } } catch(e) {}
  if (p.f != n - 1) {
try { if (Inst24 <= 1000 && typeof (p.f) != "undefined") {_RecordType("<322,325,23>",(p.f)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (p) != "undefined") {_RecordType("<322,323,23>",(p)); Inst25++; } } catch(e) {}
    throw "Error: vad value of p.f: " + p.f;
  }
})();

