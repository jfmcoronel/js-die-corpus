var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst3 <= 1000 && typeof (Function.prototype.call) != "undefined") {_RecordType("<23,46,1>",(Function.prototype.call)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Function.prototype) != "undefined") {_RecordType("<23,41,1>",(Function.prototype)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Function) != "undefined") {_RecordType("<23,31,1>",(Function)); Inst5++; } } catch(e) {}
Function.prototype.c = Function.prototype.call;
try { if (Inst0 <= 1000 && typeof (Function.prototype.c) != "undefined") {_RecordType("<0,20,1>",(Function.prototype.c)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (Function.prototype) != "undefined") {_RecordType("<0,18,1>",(Function.prototype)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Function) != "undefined") {_RecordType("<0,8,1>",(Function)); Inst2++; } } catch(e) {}

try { if (Inst6 <= 1000 && typeof (testFunction) != "undefined") {_RecordType("<58,70,3>",(testFunction)); Inst6++; } } catch(e) {}
function testFunction(a, b) {
try { if (Inst7 <= 1000 && typeof (a) != "undefined") {_RecordType("<71,72,3>",(a)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (b) != "undefined") {_RecordType("<74,75,3>",(b)); Inst8++; } } catch(e) {}
  "use strict";

try { if (Inst9 <= 1000 && typeof (a) != "undefined") {_RecordType("<120,121,6>",(a)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (b) != "undefined") {_RecordType("<131,132,6>",(b)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (arguments[2]) != "undefined") {_RecordType("<141,153,6>",(arguments[2])); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<141,150,6>",(arguments)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (arguments.length) != "undefined") {_RecordType("<161,177,6>",(arguments.length)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<161,170,6>",(arguments)); Inst14++; } } catch(e) {}
  return this * 10000 + a * 1000 + b * 100 + arguments[2] * 10 + arguments.length;
}

var arrayArguments = [1, 2, 3, 4];
try { if (Inst15 <= 1000 && typeof (arrayArguments) != "undefined") {_RecordType("<186,200,9>",(arrayArguments)); Inst15++; } } catch(e) {}

for (var i = 0; i < 15000; i++) {
try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<227,228,11>",(i)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (i) != "undefined") {_RecordType("<234,235,11>",(i)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (i) != "undefined") {_RecordType("<245,246,11>",(i)); Inst18++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (testFunction.call) != "undefined") {_RecordType("<268,285,12>",(testFunction.call)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (testFunction) != "undefined") {_RecordType("<268,280,12>",(testFunction)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (arrayArguments) != "undefined") {_RecordType("<289,303,12>",(arrayArguments)); Inst22++; } } catch(e) {}
  var result1 = testFunction.call(...arrayArguments);
try { if (Inst19 <= 1000 && typeof (result1) != "undefined") {_RecordType("<258,265,12>",(result1)); Inst19++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (testFunction.c) != "undefined") {_RecordType("<322,336,13>",(testFunction.c)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (testFunction) != "undefined") {_RecordType("<322,334,13>",(testFunction)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (arrayArguments) != "undefined") {_RecordType("<340,354,13>",(arrayArguments)); Inst26++; } } catch(e) {}
  var result2 = testFunction.c(...arrayArguments);
try { if (Inst23 <= 1000 && typeof (result2) != "undefined") {_RecordType("<312,319,13>",(result2)); Inst23++; } } catch(e) {}

try { if (Inst27 <= 1000 && typeof (result1) != "undefined") {_RecordType("<364,371,15>",(result1)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (result2) != "undefined") {_RecordType("<375,382,15>",(result2)); Inst28++; } } catch(e) {}
  if (result1 != result2) {
try { if (Inst29 <= 1000 && typeof (i) != "undefined") {_RecordType("<444,445,16>",(i)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (result1) != "undefined") {_RecordType("<455,462,16>",(result1)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (result2) != "undefined") {_RecordType("<474,481,16>",(result2)); Inst31++; } } catch(e) {}
    throw "Call with spread array failed at iteration " + i + ": " + result1 + " vs " + result2;
  }
}

try { if (Inst32 <= 1000 && typeof (test2) != "undefined") {_RecordType("<499,504,20>",(test2)); Inst32++; } } catch(e) {}
function test2() {
  for (var i = 0; i < 15000; i++) {
try { if (Inst33 <= 1000 && typeof (i) != "undefined") {_RecordType("<520,521,21>",(i)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (i) != "undefined") {_RecordType("<527,528,21>",(i)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (i) != "undefined") {_RecordType("<538,539,21>",(i)); Inst35++; } } catch(e) {}
try { if (Inst37 <= 1000 && typeof (testFunction.call) != "undefined") {_RecordType("<563,580,22>",(testFunction.call)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (testFunction) != "undefined") {_RecordType("<563,575,22>",(testFunction)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<584,593,22>",(arguments)); Inst39++; } } catch(e) {}
    var result1 = testFunction.call(...arguments);
try { if (Inst36 <= 1000 && typeof (result1) != "undefined") {_RecordType("<553,560,22>",(result1)); Inst36++; } } catch(e) {}
try { if (Inst41 <= 1000 && typeof (testFunction.c) != "undefined") {_RecordType("<614,628,23>",(testFunction.c)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (testFunction) != "undefined") {_RecordType("<614,626,23>",(testFunction)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<632,641,23>",(arguments)); Inst43++; } } catch(e) {}
    var result2 = testFunction.c(...arguments);
try { if (Inst40 <= 1000 && typeof (result2) != "undefined") {_RecordType("<604,611,23>",(result2)); Inst40++; } } catch(e) {}

try { if (Inst44 <= 1000 && typeof (result1) != "undefined") {_RecordType("<653,660,25>",(result1)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (result2) != "undefined") {_RecordType("<664,671,25>",(result2)); Inst45++; } } catch(e) {}
    if (result1 != result2) {
try { if (Inst46 <= 1000 && typeof (i) != "undefined") {_RecordType("<739,740,26>",(i)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (result1) != "undefined") {_RecordType("<750,757,26>",(result1)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (result2) != "undefined") {_RecordType("<769,776,26>",(result2)); Inst48++; } } catch(e) {}
      throw "Call with spread arguments failed at iteration " + i + ": " + result1 + " vs " + result2;
    }
  }
}

try { if (Inst49 <= 1000 && typeof (test2) != "undefined") {_RecordType("<791,796,31>",(test2)); Inst49++; } } catch(e) {}
test2(1, 2, 3, 4);

try { if (Inst50 <= 1000 && typeof (test3) != "undefined") {_RecordType("<820,825,33>",(test3)); Inst50++; } } catch(e) {}
function test3() {
try { if (Inst52 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<851,860,34>",(arguments)); Inst52++; } } catch(e) {}
  aliasedArguments = arguments;
try { if (Inst51 <= 1000 && typeof (aliasedArguments) != "undefined") {_RecordType("<832,848,34>",(aliasedArguments)); Inst51++; } } catch(e) {}

  for (var i = 0; i < 15000; i++) {
try { if (Inst53 <= 1000 && typeof (i) != "undefined") {_RecordType("<874,875,36>",(i)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (i) != "undefined") {_RecordType("<881,882,36>",(i)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (i) != "undefined") {_RecordType("<892,893,36>",(i)); Inst55++; } } catch(e) {}
try { if (Inst57 <= 1000 && typeof (testFunction.call) != "undefined") {_RecordType("<917,934,37>",(testFunction.call)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (testFunction) != "undefined") {_RecordType("<917,929,37>",(testFunction)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (aliasedArguments) != "undefined") {_RecordType("<938,954,37>",(aliasedArguments)); Inst59++; } } catch(e) {}
    var result1 = testFunction.call(...aliasedArguments);
try { if (Inst56 <= 1000 && typeof (result1) != "undefined") {_RecordType("<907,914,37>",(result1)); Inst56++; } } catch(e) {}
try { if (Inst61 <= 1000 && typeof (testFunction.c) != "undefined") {_RecordType("<975,989,38>",(testFunction.c)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (testFunction) != "undefined") {_RecordType("<975,987,38>",(testFunction)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (aliasedArguments) != "undefined") {_RecordType("<993,1009,38>",(aliasedArguments)); Inst63++; } } catch(e) {}
    var result2 = testFunction.c(...aliasedArguments);
try { if (Inst60 <= 1000 && typeof (result2) != "undefined") {_RecordType("<965,972,38>",(result2)); Inst60++; } } catch(e) {}

try { if (Inst64 <= 1000 && typeof (result1) != "undefined") {_RecordType("<1021,1028,40>",(result1)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (result2) != "undefined") {_RecordType("<1032,1039,40>",(result2)); Inst65++; } } catch(e) {}
    if (result1 != result2) {
try { if (Inst66 <= 1000 && typeof (i) != "undefined") {_RecordType("<1107,1108,41>",(i)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (result1) != "undefined") {_RecordType("<1118,1125,41>",(result1)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (result2) != "undefined") {_RecordType("<1137,1144,41>",(result2)); Inst68++; } } catch(e) {}
      throw "Call with spread arguments failed at iteration " + i + ": " + result1 + " vs " + result2;
    }
  }
}

try { if (Inst69 <= 1000 && typeof (test3) != "undefined") {_RecordType("<1159,1164,46>",(test3)); Inst69++; } } catch(e) {}
test3(1, 2, 3, 4);

