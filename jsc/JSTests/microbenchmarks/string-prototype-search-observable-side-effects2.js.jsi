var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//@ runNoFTL
try { if (Inst0 <= 1000 && typeof (assert) != "undefined") {_RecordType("<22,28,2>",(assert)); Inst0++; } } catch(e) {}
function assert(testedValue, msg) {
try { if (Inst1 <= 1000 && typeof (testedValue) != "undefined") {_RecordType("<29,40,2>",(testedValue)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (msg) != "undefined") {_RecordType("<42,45,2>",(msg)); Inst2++; } } catch(e) {}
  ;
} // String prototype with overridden @@search.


(function () {
  let accesses = [];
try { if (Inst3 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<124,132,8>",(accesses)); Inst3++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (String) != "undefined") {_RecordType("<151,157,9>",(String)); Inst5++; } } catch(e) {}
  var obj = String("");
try { if (Inst4 <= 1000 && typeof (obj) != "undefined") {_RecordType("<145,148,9>",(obj)); Inst4++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<165,186,10>",(Object.defineProperty)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Object) != "undefined") {_RecordType("<165,171,10>",(Object)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (String.prototype) != "undefined") {_RecordType("<187,203,10>",(String.prototype)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (String) != "undefined") {_RecordType("<187,193,10>",(String)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Symbol.search) != "undefined") {_RecordType("<205,218,10>",(Symbol.search)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<205,211,10>",(Symbol)); Inst11++; } } catch(e) {}
  Object.defineProperty(String.prototype, Symbol.search, {
    value: function (str) {
try { if (Inst12 <= 1000 && typeof (str) != "undefined") {_RecordType("<243,246,11>",(str)); Inst12++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (accesses.push) != "undefined") {_RecordType("<256,269,12>",(accesses.push)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<256,264,12>",(accesses)); Inst14++; } } catch(e) {}
      accesses.push("Symbol(Symbol.search)");
try { if (Inst15 <= 1000 && typeof (/rch/[Symbol.search]) != "undefined") {_RecordType("<309,329,13>",(/rch/[Symbol.search])); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Symbol.search) != "undefined") {_RecordType("<315,328,13>",(Symbol.search)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<315,321,13>",(Symbol)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (str) != "undefined") {_RecordType("<330,333,13>",(str)); Inst18++; } } catch(e) {}
      return /rch/[Symbol.search](str);
    },
    writable: true,
    configurable: true
  });
try { if (Inst19 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<394,402,18>",(accesses)); Inst19++; } } catch(e) {}
  accesses == "";
  "unexpected call to overridden props";
try { if (Inst21 <= 1000 && typeof ("searchme".search) != "undefined") {_RecordType("<466,483,20>",("searchme".search)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (obj) != "undefined") {_RecordType("<484,487,20>",(obj)); Inst22++; } } catch(e) {}
  let result = "searchme".search(obj);
try { if (Inst20 <= 1000 && typeof (result) != "undefined") {_RecordType("<457,463,20>",(result)); Inst20++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<492,500,21>",(accesses)); Inst23++; } } catch(e) {}
  accesses == "Symbol(Symbol.search)";
  "Property accesses do not match expectation";
try { if (Inst24 <= 1000 && typeof (result) != "undefined") {_RecordType("<579,585,23>",(result)); Inst24++; } } catch(e) {}
  result === 3;
  "Unexpected result";
try { if (Inst25 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<618,639,25>",(Object.defineProperty)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Object) != "undefined") {_RecordType("<618,624,25>",(Object)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (String.prototype) != "undefined") {_RecordType("<640,656,25>",(String.prototype)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (String) != "undefined") {_RecordType("<640,646,25>",(String)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (Symbol.search) != "undefined") {_RecordType("<658,671,25>",(Symbol.search)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<658,664,25>",(Symbol)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<686,695,26>",(undefined)); Inst31++; } } catch(e) {}
  Object.defineProperty(String.prototype, Symbol.search, {
    value: undefined,
    writable: false,
    configurable: true
  });
})();

