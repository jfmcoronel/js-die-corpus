var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
(function () {
try { if (Inst0 <= 1000 && typeof (bench) != "undefined") {_RecordType("<26,31,2>",(bench)); Inst0++; } } catch(e) {}
  function bench(name, f, arg) {
try { if (Inst1 <= 1000 && typeof (name) != "undefined") {_RecordType("<32,36,2>",(name)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (f) != "undefined") {_RecordType("<38,39,2>",(f)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (arg) != "undefined") {_RecordType("<41,44,2>",(arg)); Inst3++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (Date) != "undefined") {_RecordType("<68,72,3>",(Date)); Inst5++; } } catch(e) {}
    var start = new Date();
try { if (Inst4 <= 1000 && typeof (start) != "undefined") {_RecordType("<56,61,3>",(start)); Inst4++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (f) != "undefined") {_RecordType("<93,94,4>",(f)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (arg) != "undefined") {_RecordType("<95,98,4>",(arg)); Inst8++; } } catch(e) {}
    var result = f(arg);
try { if (Inst6 <= 1000 && typeof (result) != "undefined") {_RecordType("<84,90,4>",(result)); Inst6++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (Date) != "undefined") {_RecordType("<119,123,5>",(Date)); Inst10++; } } catch(e) {}
    var end = new Date();
try { if (Inst9 <= 1000 && typeof (end) != "undefined") {_RecordType("<109,112,5>",(end)); Inst9++; } } catch(e) {}
    const verbose = false;
try { if (Inst11 <= 1000 && typeof (verbose) != "undefined") {_RecordType("<137,144,6>",(verbose)); Inst11++; } } catch(e) {}

try { if (Inst12 <= 1000 && typeof (verbose) != "undefined") {_RecordType("<163,170,8>",(verbose)); Inst12++; } } catch(e) {}
    if (verbose) {
try { if (Inst13 <= 1000 && typeof (print) != "undefined") {_RecordType("<180,185,9>",(print)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (name) != "undefined") {_RecordType("<186,190,9>",(name)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (result) != "undefined") {_RecordType("<199,205,9>",(result)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (end) != "undefined") {_RecordType("<215,218,9>",(end)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (start) != "undefined") {_RecordType("<221,226,9>",(start)); Inst17++; } } catch(e) {}
      print(name + " " + result + " " + (end - start) + "ms");
    }
  }

try { if (Inst19 <= 1000 && typeof (Set) != "undefined") {_RecordType("<270,273,13>",(Set)); Inst19++; } } catch(e) {}
  var sparseSet = new Set();
try { if (Inst18 <= 1000 && typeof (sparseSet) != "undefined") {_RecordType("<254,263,13>",(sparseSet)); Inst18++; } } catch(e) {}

  for (var x of [123, 1230, 12300, 123000, 234, 2340, 23400]) {
try { if (Inst20 <= 1000 && typeof (x) != "undefined") {_RecordType("<289,290,15>",(x)); Inst20++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (sparseSet.add) != "undefined") {_RecordType("<346,359,16>",(sparseSet.add)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (sparseSet) != "undefined") {_RecordType("<346,355,16>",(sparseSet)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (x) != "undefined") {_RecordType("<360,361,16>",(x)); Inst23++; } } catch(e) {}
    sparseSet.add(x);
  }

try { if (Inst24 <= 1000 && typeof (bench) != "undefined") {_RecordType("<371,376,19>",(bench)); Inst24++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (sparseSet) != "undefined") {_RecordType("<558,567,29>",(sparseSet)); Inst35++; } } catch(e) {}
  bench("Sparse Set Property Existence", function (s) {
try { if (Inst25 <= 1000 && typeof (s) != "undefined") {_RecordType("<420,421,19>",(s)); Inst25++; } } catch(e) {}
    var count = 0;
try { if (Inst26 <= 1000 && typeof (count) != "undefined") {_RecordType("<433,438,20>",(count)); Inst26++; } } catch(e) {}

    for (var i = 0; i < 5e6; ++i) {
try { if (Inst27 <= 1000 && typeof (i) != "undefined") {_RecordType("<458,459,22>",(i)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (i) != "undefined") {_RecordType("<465,466,22>",(i)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (i) != "undefined") {_RecordType("<476,477,22>",(i)); Inst29++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (s.has) != "undefined") {_RecordType("<491,496,23>",(s.has)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (s) != "undefined") {_RecordType("<491,492,23>",(s)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (i) != "undefined") {_RecordType("<497,498,23>",(i)); Inst32++; } } catch(e) {}
      if (s.has(i)) {
try { if (Inst33 <= 1000 && typeof (count) != "undefined") {_RecordType("<511,516,24>",(count)); Inst33++; } } catch(e) {}
        count++;
      }
    }

try { if (Inst34 <= 1000 && typeof (count) != "undefined") {_RecordType("<546,551,28>",(count)); Inst34++; } } catch(e) {}
    return count;
  }, sparseSet);
})();

