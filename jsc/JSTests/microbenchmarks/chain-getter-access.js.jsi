var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
var x = 1;
try { if (Inst0 <= 1000 && typeof (x) != "undefined") {_RecordType("<4,5,1>",(x)); Inst0++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (value) != "undefined") {_RecordType("<27,32,3>",(value)); Inst2++; } } catch(e) {}
var o = {
  get value() {
try { if (Inst4 <= 1000 && typeof (x) != "undefined") {_RecordType("<46,47,4>",(x)); Inst4++; } } catch(e) {}
    x ^= x * 3;
try { if (Inst3 <= 1000 && typeof (x) != "undefined") {_RecordType("<41,42,4>",(x)); Inst3++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (x) != "undefined") {_RecordType("<61,62,5>",(x)); Inst6++; } } catch(e) {}
    x = x | 1;
try { if (Inst5 <= 1000 && typeof (x) != "undefined") {_RecordType("<57,58,5>",(x)); Inst5++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (x) != "undefined") {_RecordType("<79,80,6>",(x)); Inst7++; } } catch(e) {}
    return x;
  }

};
try { if (Inst1 <= 1000 && typeof (o) != "undefined") {_RecordType("<15,16,2>",(o)); Inst1++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (o) != "undefined") {_RecordType("<109,110,11>",(o)); Inst9++; } } catch(e) {}
o = {
  __proto__: o
};
try { if (Inst8 <= 1000 && typeof (o) != "undefined") {_RecordType("<90,91,10>",(o)); Inst8++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (o) != "undefined") {_RecordType("<133,134,14>",(o)); Inst11++; } } catch(e) {}
o = {
  __proto__: o
};
try { if (Inst10 <= 1000 && typeof (o) != "undefined") {_RecordType("<114,115,13>",(o)); Inst10++; } } catch(e) {}

try { if (Inst12 <= 1000 && typeof (foo) != "undefined") {_RecordType("<148,151,17>",(foo)); Inst12++; } } catch(e) {}
function foo(o) {
try { if (Inst13 <= 1000 && typeof (o) != "undefined") {_RecordType("<152,153,17>",(o)); Inst13++; } } catch(e) {}
  var result = 0;
try { if (Inst14 <= 1000 && typeof (result) != "undefined") {_RecordType("<163,169,18>",(result)); Inst14++; } } catch(e) {}

  for (var i = 0; i < 64; i++) {
try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<187,188,20>",(i)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<194,195,20>",(i)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (i) != "undefined") {_RecordType("<202,203,20>",(i)); Inst17++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (o.value) != "undefined") {_RecordType("<223,230,21>",(o.value)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (o) != "undefined") {_RecordType("<223,224,21>",(o)); Inst20++; } } catch(e) {}
    result ^= o.value;
try { if (Inst18 <= 1000 && typeof (result) != "undefined") {_RecordType("<213,219,21>",(result)); Inst18++; } } catch(e) {}
    result |= 1;
try { if (Inst21 <= 1000 && typeof (result) != "undefined") {_RecordType("<236,242,22>",(result)); Inst21++; } } catch(e) {}
  }

try { if (Inst22 <= 1000 && typeof (result) != "undefined") {_RecordType("<263,269,25>",(result)); Inst22++; } } catch(e) {}
  return result;
}

try { if (Inst23 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<274,282,28>",(noInline)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (foo) != "undefined") {_RecordType("<283,286,28>",(foo)); Inst24++; } } catch(e) {}
noInline(foo);
var result = 0;
try { if (Inst25 <= 1000 && typeof (result) != "undefined") {_RecordType("<293,299,29>",(result)); Inst25++; } } catch(e) {}

for (var i = 0; i < 50000; ++i) {
try { if (Inst26 <= 1000 && typeof (i) != "undefined") {_RecordType("<315,316,31>",(i)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (i) != "undefined") {_RecordType("<322,323,31>",(i)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (i) != "undefined") {_RecordType("<335,336,31>",(i)); Inst28++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (foo) != "undefined") {_RecordType("<352,355,32>",(foo)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (o) != "undefined") {_RecordType("<356,357,32>",(o)); Inst31++; } } catch(e) {}
  result ^= foo(o);
try { if (Inst29 <= 1000 && typeof (result) != "undefined") {_RecordType("<342,348,32>",(result)); Inst29++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (result) != "undefined") {_RecordType("<371,377,33>",(result)); Inst33++; } } catch(e) {}
  result = result | 1;
try { if (Inst32 <= 1000 && typeof (result) != "undefined") {_RecordType("<362,368,33>",(result)); Inst32++; } } catch(e) {}
}

try { if (Inst34 <= 1000 && typeof (result) != "undefined") {_RecordType("<390,396,36>",(result)); Inst34++; } } catch(e) {}
if (result != -2004318071) {
try { if (Inst35 <= 1000 && typeof (result) != "undefined") {_RecordType("<446,452,37>",(result)); Inst35++; } } catch(e) {}
  throw "Incorrect result: " + result + ". Should be -2004318071";
}

