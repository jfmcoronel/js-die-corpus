var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
var Inst102 = 0;
var Inst103 = 0;
var Inst104 = 0;
var Inst105 = 0;
var Inst106 = 0;
var Inst107 = 0;
var Inst108 = 0;
var Inst109 = 0;
var Inst110 = 0;
var Inst111 = 0;
var Inst112 = 0;
var Inst113 = 0;
var Inst114 = 0;
var Inst115 = 0;
var Inst116 = 0;
var Inst117 = 0;
var Inst118 = 0;
var Inst119 = 0;
var Inst120 = 0;
var Inst121 = 0;
var Inst122 = 0;
var Inst123 = 0;
var Inst124 = 0;
var Inst125 = 0;
var Inst126 = 0;
var Inst127 = 0;
var Inst128 = 0;
var Inst129 = 0;
var Inst130 = 0;
var Inst131 = 0;
var Inst132 = 0;
var Inst133 = 0;
var Inst134 = 0;
var Inst135 = 0;
var Inst136 = 0;
var Inst137 = 0;
var Inst138 = 0;
var Inst139 = 0;
var Inst140 = 0;
var Inst141 = 0;
var Inst142 = 0;
var Inst143 = 0;
var Inst144 = 0;
var Inst145 = 0;
var Inst146 = 0;
var Inst147 = 0;
var Inst148 = 0;
var Inst149 = 0;
var Inst150 = 0;
var Inst151 = 0;
var Inst152 = 0;
var Inst153 = 0;
var Inst154 = 0;
var Inst155 = 0;
var Inst156 = 0;
var Inst157 = 0;
var Inst158 = 0;
var Inst159 = 0;
var Inst160 = 0;
var Inst161 = 0;
var Inst162 = 0;
var Inst163 = 0;
var Inst164 = 0;
var Inst165 = 0;
var Inst166 = 0;
var Inst167 = 0;
var Inst168 = 0;
var Inst169 = 0;
var Inst170 = 0;
var Inst171 = 0;
var Inst172 = 0;
var Inst173 = 0;
var Inst174 = 0;
var Inst175 = 0;
var Inst176 = 0;
var Inst177 = 0;
var Inst178 = 0;
var Inst179 = 0;
var Inst180 = 0;
var Inst181 = 0;
var Inst182 = 0;
var Inst183 = 0;
var Inst184 = 0;
var Inst185 = 0;
var Inst186 = 0;
var Inst187 = 0;
var Inst188 = 0;
var Inst189 = 0;
var Inst190 = 0;
var Inst191 = 0;
var Inst192 = 0;
var Inst193 = 0;
var Inst194 = 0;
var Inst195 = 0;
var Inst196 = 0;
var Inst197 = 0;
var Inst198 = 0;
var Inst199 = 0;
var Inst200 = 0;
var Inst201 = 0;
var Inst202 = 0;
var Inst203 = 0;
var Inst204 = 0;
var Inst205 = 0;
var Inst206 = 0;
var Inst207 = 0;
var Inst208 = 0;
var Inst209 = 0;
var Inst210 = 0;
var Inst211 = 0;
var Inst212 = 0;
var Inst213 = 0;
var Inst214 = 0;
var Inst215 = 0;
var Inst216 = 0;
var Inst217 = 0;
var Inst218 = 0;
var Inst219 = 0;
var Inst220 = 0;
var Inst221 = 0;
var Inst222 = 0;
var Inst223 = 0;
var Inst224 = 0;
var Inst225 = 0;
var Inst226 = 0;
var Inst227 = 0;
var Inst228 = 0;
var Inst229 = 0;
var Inst230 = 0;
var Inst231 = 0;
var Inst232 = 0;
var Inst233 = 0;
var Inst234 = 0;
var Inst235 = 0;
var Inst236 = 0;
var Inst237 = 0;
var Inst238 = 0;
var Inst239 = 0;
var Inst240 = 0;
var Inst241 = 0;
var Inst242 = 0;
var Inst243 = 0;
var Inst244 = 0;
var Inst245 = 0;
var Inst246 = 0;
var Inst247 = 0;
var Inst248 = 0;
var Inst249 = 0;
var Inst250 = 0;
var Inst251 = 0;
var Inst252 = 0;
var Inst253 = 0;
var Inst254 = 0;
var Inst255 = 0;
var Inst256 = 0;
var Inst257 = 0;
var Inst258 = 0;
var Inst259 = 0;
var Inst260 = 0;
var Inst261 = 0;
var Inst262 = 0;
var Inst263 = 0;
var Inst264 = 0;
var Inst265 = 0;
var Inst266 = 0;
var Inst267 = 0;
var Inst268 = 0;
var Inst269 = 0;
var Inst270 = 0;
var Inst271 = 0;
var Inst272 = 0;
var Inst273 = 0;
var Inst274 = 0;
var Inst275 = 0;
var Inst276 = 0;
var Inst277 = 0;
var Inst278 = 0;
var Inst279 = 0;
var Inst280 = 0;
var Inst281 = 0;
var Inst282 = 0;
var Inst283 = 0;
var Inst284 = 0;
var Inst285 = 0;
var Inst286 = 0;
var Inst287 = 0;
var Inst288 = 0;
var Inst289 = 0;
var Inst290 = 0;
var Inst291 = 0;
var Inst292 = 0;
var Inst293 = 0;
var Inst294 = 0;
var Inst295 = 0;
var Inst296 = 0;
var Inst297 = 0;
var Inst298 = 0;
var Inst299 = 0;
var Inst300 = 0;
var Inst301 = 0;
var Inst302 = 0;
var Inst303 = 0;
var Inst304 = 0;
var Inst305 = 0;
var Inst306 = 0;
var Inst307 = 0;
var Inst308 = 0;
var Inst309 = 0;
var Inst310 = 0;
var Inst311 = 0;
var Inst312 = 0;
var Inst313 = 0;
var Inst314 = 0;
var Inst315 = 0;
var Inst316 = 0;
var Inst317 = 0;
var Inst318 = 0;
var Inst319 = 0;
var Inst320 = 0;
var Inst321 = 0;
var Inst322 = 0;
var Inst323 = 0;
var Inst324 = 0;
var Inst325 = 0;
var Inst326 = 0;
var Inst327 = 0;
var Inst328 = 0;
var Inst329 = 0;
var Inst330 = 0;
var Inst331 = 0;
var Inst332 = 0;
var Inst333 = 0;
var Inst334 = 0;
var Inst335 = 0;
var Inst336 = 0;
var Inst337 = 0;
var Inst338 = 0;
var Inst339 = 0;
var Inst340 = 0;
var Inst341 = 0;
var Inst342 = 0;
var Inst343 = 0;
var Inst344 = 0;
var Inst345 = 0;
var Inst346 = 0;
var Inst347 = 0;
var Inst348 = 0;
var Inst349 = 0;
var Inst350 = 0;
var Inst351 = 0;
var Inst352 = 0;
var Inst353 = 0;
var Inst354 = 0;
var Inst355 = 0;
var Inst356 = 0;
var Inst357 = 0;
var Inst358 = 0;
var Inst359 = 0;
var Inst360 = 0;
var Inst361 = 0;
var Inst362 = 0;
var Inst363 = 0;
var Inst364 = 0;
var Inst365 = 0;
var Inst366 = 0;
var Inst367 = 0;
var Inst368 = 0;
var Inst369 = 0;
var Inst370 = 0;
var Inst371 = 0;
var Inst372 = 0;
var Inst373 = 0;
var Inst374 = 0;
var Inst375 = 0;
var Inst376 = 0;
var Inst377 = 0;
var Inst378 = 0;
var Inst379 = 0;
var Inst380 = 0;
var Inst381 = 0;
var Inst382 = 0;
var Inst383 = 0;
var Inst384 = 0;
var Inst385 = 0;
var Inst386 = 0;
var Inst387 = 0;
var Inst388 = 0;
var Inst389 = 0;
var Inst390 = 0;
var Inst391 = 0;
var Inst392 = 0;
var Inst393 = 0;
var Inst394 = 0;
var Inst395 = 0;
var Inst396 = 0;
var Inst397 = 0;
var Inst398 = 0;
var Inst399 = 0;
var Inst400 = 0;
var Inst401 = 0;
var Inst402 = 0;
var Inst403 = 0;
var Inst404 = 0;
var Inst405 = 0;
var Inst406 = 0;
var Inst407 = 0;
var Inst408 = 0;
var Inst409 = 0;
var Inst410 = 0;
var Inst411 = 0;
var Inst412 = 0;
var Inst413 = 0;
var Inst414 = 0;
var Inst415 = 0;
var Inst416 = 0;
var Inst417 = 0;
var Inst418 = 0;
var Inst419 = 0;
var Inst420 = 0;
var Inst421 = 0;
var Inst422 = 0;
var Inst423 = 0;
var Inst424 = 0;
var Inst425 = 0;
var Inst426 = 0;
var Inst427 = 0;
var Inst428 = 0;
var Inst429 = 0;
var Inst430 = 0;
var Inst431 = 0;
var Inst432 = 0;
var Inst433 = 0;
var Inst434 = 0;
var Inst435 = 0;
var Inst436 = 0;
var Inst437 = 0;
var Inst438 = 0;
var Inst439 = 0;
var Inst440 = 0;
var Inst441 = 0;
var Inst442 = 0;
var Inst443 = 0;
var Inst444 = 0;
var Inst445 = 0;
var Inst446 = 0;
var Inst447 = 0;
var Inst448 = 0;
var Inst449 = 0;
var Inst450 = 0;
var Inst451 = 0;
var Inst452 = 0;
var Inst453 = 0;
var Inst454 = 0;
var Inst455 = 0;
var Inst456 = 0;
var Inst457 = 0;
var Inst458 = 0;
var Inst459 = 0;
var Inst460 = 0;
var Inst461 = 0;
var Inst462 = 0;
var Inst463 = 0;
var Inst464 = 0;
var Inst465 = 0;
var Inst466 = 0;
var Inst467 = 0;
var Inst468 = 0;
var Inst469 = 0;
var Inst470 = 0;
var Inst471 = 0;
var Inst472 = 0;
var Inst473 = 0;
var Inst474 = 0;
var Inst475 = 0;
var Inst476 = 0;
var Inst477 = 0;
var Inst478 = 0;
var Inst479 = 0;
var Inst480 = 0;
var Inst481 = 0;
var Inst482 = 0;
var Inst483 = 0;
var Inst484 = 0;
var Inst485 = 0;
var Inst486 = 0;
var Inst487 = 0;
var Inst488 = 0;
var Inst489 = 0;
var Inst490 = 0;
var Inst491 = 0;
var Inst492 = 0;
var Inst493 = 0;
var Inst494 = 0;
var Inst495 = 0;
var Inst496 = 0;
var Inst497 = 0;
var Inst498 = 0;
var Inst499 = 0;
var Inst500 = 0;
var Inst501 = 0;
var Inst502 = 0;
var Inst503 = 0;
var Inst504 = 0;
var Inst505 = 0;
var Inst506 = 0;
var Inst507 = 0;
var Inst508 = 0;
var Inst509 = 0;
var Inst510 = 0;
var Inst511 = 0;
var Inst512 = 0;
var Inst513 = 0;
var Inst514 = 0;
var Inst515 = 0;
var Inst516 = 0;
var Inst517 = 0;
var Inst518 = 0;
var Inst519 = 0;
var Inst520 = 0;
var Inst521 = 0;
var Inst522 = 0;
var Inst523 = 0;
var Inst524 = 0;
var Inst525 = 0;
var Inst526 = 0;
var Inst527 = 0;
var Inst528 = 0;
var Inst529 = 0;
var Inst530 = 0;
var Inst531 = 0;
var Inst532 = 0;
var Inst533 = 0;
var Inst534 = 0;
var Inst535 = 0;
var Inst536 = 0;
var Inst537 = 0;
var Inst538 = 0;
var Inst539 = 0;
var Inst540 = 0;
var Inst541 = 0;
var Inst542 = 0;
var Inst543 = 0;
var Inst544 = 0;
var Inst545 = 0;
var Inst546 = 0;
var Inst547 = 0;
var Inst548 = 0;
var Inst549 = 0;
var Inst550 = 0;
var Inst551 = 0;
var Inst552 = 0;
var Inst553 = 0;
var Inst554 = 0;
var Inst555 = 0;
var Inst556 = 0;
var Inst557 = 0;
var Inst558 = 0;
var Inst559 = 0;
var Inst560 = 0;
var Inst561 = 0;
var Inst562 = 0;
var Inst563 = 0;
var Inst564 = 0;
var Inst565 = 0;
var Inst566 = 0;
var Inst567 = 0;
var Inst568 = 0;
var Inst569 = 0;
var Inst570 = 0;
var Inst571 = 0;
var Inst572 = 0;
var Inst573 = 0;
var Inst574 = 0;
var Inst575 = 0;
var Inst576 = 0;
var Inst577 = 0;
var Inst578 = 0;
var Inst579 = 0;
var Inst580 = 0;
var Inst581 = 0;
var Inst582 = 0;
var Inst583 = 0;
var Inst584 = 0;
var Inst585 = 0;
var Inst586 = 0;
var Inst587 = 0;
var Inst588 = 0;
var Inst589 = 0;
var Inst590 = 0;
var Inst591 = 0;
var Inst592 = 0;
var Inst593 = 0;
var Inst594 = 0;
var Inst595 = 0;
var Inst596 = 0;
var Inst597 = 0;
var Inst598 = 0;
var Inst599 = 0;
var Inst600 = 0;
var Inst601 = 0;
var Inst602 = 0;
var Inst603 = 0;
var Inst604 = 0;
var Inst605 = 0;
var Inst606 = 0;
var Inst607 = 0;
var Inst608 = 0;
var Inst609 = 0;
var Inst610 = 0;
var Inst611 = 0;
var Inst612 = 0;
var Inst613 = 0;
var Inst614 = 0;
var Inst615 = 0;
var Inst616 = 0;
var Inst617 = 0;
var Inst618 = 0;
var Inst619 = 0;
var Inst620 = 0;
var Inst621 = 0;
var Inst622 = 0;
var Inst623 = 0;
var Inst624 = 0;
var Inst625 = 0;
var Inst626 = 0;
var Inst627 = 0;
var Inst628 = 0;
var Inst629 = 0;
var Inst630 = 0;
var Inst631 = 0;
var Inst632 = 0;
var Inst633 = 0;
var Inst634 = 0;
var Inst635 = 0;
var Inst636 = 0;
var Inst637 = 0;
var Inst638 = 0;
var Inst639 = 0;
var Inst640 = 0;
var Inst641 = 0;
var Inst642 = 0;
var Inst643 = 0;
var Inst644 = 0;
var Inst645 = 0;
var Inst646 = 0;
var Inst647 = 0;
var Inst648 = 0;
var Inst649 = 0;
var Inst650 = 0;
var Inst651 = 0;
var Inst652 = 0;
var Inst653 = 0;
var Inst654 = 0;
var Inst655 = 0;
var Inst656 = 0;
var Inst657 = 0;
var Inst658 = 0;
var Inst659 = 0;
var Inst660 = 0;
var Inst661 = 0;
var Inst662 = 0;
var Inst663 = 0;
var Inst664 = 0;
var Inst665 = 0;
var Inst666 = 0;
var Inst667 = 0;
var Inst668 = 0;
var Inst669 = 0;
var Inst670 = 0;
var Inst671 = 0;
var Inst672 = 0;
var Inst673 = 0;
var Inst674 = 0;
var Inst675 = 0;
var Inst676 = 0;
var Inst677 = 0;
var Inst678 = 0;
var Inst679 = 0;
var Inst680 = 0;
var Inst681 = 0;
var Inst682 = 0;
var Inst683 = 0;
var Inst684 = 0;
var Inst685 = 0;
var Inst686 = 0;
var Inst687 = 0;
var Inst688 = 0;
var Inst689 = 0;
var Inst690 = 0;
var Inst691 = 0;
var Inst692 = 0;
var Inst693 = 0;
var Inst694 = 0;
var Inst695 = 0;
var Inst696 = 0;
var Inst697 = 0;
var Inst698 = 0;
var Inst699 = 0;
var Inst700 = 0;
var Inst701 = 0;
var Inst702 = 0;
var Inst703 = 0;
var Inst704 = 0;
var Inst705 = 0;
var Inst706 = 0;
var Inst707 = 0;
var Inst708 = 0;
var Inst709 = 0;
var Inst710 = 0;
var Inst711 = 0;
var Inst712 = 0;
var Inst713 = 0;
var Inst714 = 0;
var Inst715 = 0;
var Inst716 = 0;
var Inst717 = 0;
var Inst718 = 0;
var Inst719 = 0;
var Inst720 = 0;
var Inst721 = 0;
var Inst722 = 0;
var Inst723 = 0;
var Inst724 = 0;
var Inst725 = 0;
var Inst726 = 0;
var Inst727 = 0;
var Inst728 = 0;
var Inst729 = 0;
var Inst730 = 0;
var Inst731 = 0;
var Inst732 = 0;
var Inst733 = 0;
var Inst734 = 0;
var Inst735 = 0;
var Inst736 = 0;
var Inst737 = 0;
var Inst738 = 0;
var Inst739 = 0;
var Inst740 = 0;
var Inst741 = 0;
var Inst742 = 0;
var Inst743 = 0;
var Inst744 = 0;
var Inst745 = 0;
var Inst746 = 0;
var Inst747 = 0;
var Inst748 = 0;
var Inst749 = 0;
var Inst750 = 0;
var Inst751 = 0;
var Inst752 = 0;
var Inst753 = 0;
var Inst754 = 0;
var Inst755 = 0;
var Inst756 = 0;
var Inst757 = 0;
var Inst758 = 0;
var Inst759 = 0;
var Inst760 = 0;
var Inst761 = 0;
var Inst762 = 0;
var Inst763 = 0;
var Inst764 = 0;
var Inst765 = 0;
var Inst766 = 0;
var Inst767 = 0;
var Inst768 = 0;
var Inst769 = 0;
var Inst770 = 0;
var Inst771 = 0;
var Inst772 = 0;
var Inst773 = 0;
var Inst774 = 0;
var Inst775 = 0;
var Inst776 = 0;
var Inst777 = 0;
var Inst778 = 0;
var Inst779 = 0;
var Inst780 = 0;
var Inst781 = 0;
var Inst782 = 0;
var Inst783 = 0;
var Inst784 = 0;
var Inst785 = 0;
var Inst786 = 0;
var Inst787 = 0;
var Inst788 = 0;
var Inst789 = 0;
var Inst790 = 0;
var Inst791 = 0;
var Inst792 = 0;
var Inst793 = 0;
var Inst794 = 0;
var Inst795 = 0;
var Inst796 = 0;
var Inst797 = 0;
var Inst798 = 0;
var Inst799 = 0;
var Inst800 = 0;
var Inst801 = 0;
var Inst802 = 0;
var Inst803 = 0;
var Inst804 = 0;
var Inst805 = 0;
var Inst806 = 0;
var Inst807 = 0;
var Inst808 = 0;
var Inst809 = 0;
var Inst810 = 0;
var Inst811 = 0;
var Inst812 = 0;
var Inst813 = 0;
var Inst814 = 0;
var Inst815 = 0;
var Inst816 = 0;
var Inst817 = 0;
var Inst818 = 0;
var Inst819 = 0;
var Inst820 = 0;
var Inst821 = 0;
var Inst822 = 0;
var Inst823 = 0;
var Inst824 = 0;
var Inst825 = 0;
var Inst826 = 0;
var Inst827 = 0;
var Inst828 = 0;
var Inst829 = 0;
var Inst830 = 0;
var Inst831 = 0;
var Inst832 = 0;
var Inst833 = 0;
var Inst834 = 0;
var Inst835 = 0;
var Inst836 = 0;
var Inst837 = 0;
var Inst838 = 0;
var Inst839 = 0;
var Inst840 = 0;
var Inst841 = 0;
var Inst842 = 0;
var Inst843 = 0;
var Inst844 = 0;
var Inst845 = 0;
var Inst846 = 0;
var Inst847 = 0;
var Inst848 = 0;
var Inst849 = 0;
var Inst850 = 0;
var Inst851 = 0;
var Inst852 = 0;
var Inst853 = 0;
var Inst854 = 0;
var Inst855 = 0;
var Inst856 = 0;
var Inst857 = 0;
var Inst858 = 0;
var Inst859 = 0;
var Inst860 = 0;
var Inst861 = 0;
var Inst862 = 0;
var Inst863 = 0;
var Inst864 = 0;
var Inst865 = 0;
var Inst866 = 0;
var Inst867 = 0;
var Inst868 = 0;
var Inst869 = 0;
var Inst870 = 0;
var Inst871 = 0;
var Inst872 = 0;
var Inst873 = 0;
var Inst874 = 0;
var Inst875 = 0;
var Inst876 = 0;
var Inst877 = 0;
var Inst878 = 0;
var Inst879 = 0;
var Inst880 = 0;
var Inst881 = 0;
var Inst882 = 0;
var Inst883 = 0;
var Inst884 = 0;
var Inst885 = 0;
var Inst886 = 0;
var Inst887 = 0;
var Inst888 = 0;
var Inst889 = 0;
var Inst890 = 0;
var Inst891 = 0;
var Inst892 = 0;
var Inst893 = 0;
var Inst894 = 0;
var Inst895 = 0;
var Inst896 = 0;
var Inst897 = 0;
var Inst898 = 0;
var Inst899 = 0;
var Inst900 = 0;
var Inst901 = 0;
var Inst902 = 0;
var Inst903 = 0;
var Inst904 = 0;
var Inst905 = 0;
var Inst906 = 0;
var Inst907 = 0;
var Inst908 = 0;
var Inst909 = 0;
var Inst910 = 0;
var Inst911 = 0;
var Inst912 = 0;
var Inst913 = 0;
var Inst914 = 0;
var Inst915 = 0;
var Inst916 = 0;
var Inst917 = 0;
var Inst918 = 0;
var Inst919 = 0;
var Inst920 = 0;
var Inst921 = 0;
var Inst922 = 0;
var Inst923 = 0;
var Inst924 = 0;
var Inst925 = 0;
var Inst926 = 0;
var Inst927 = 0;
var Inst928 = 0;
var Inst929 = 0;
var Inst930 = 0;
var Inst931 = 0;
var Inst932 = 0;
var Inst933 = 0;
var Inst934 = 0;
var Inst935 = 0;
var Inst936 = 0;
var Inst937 = 0;
var Inst938 = 0;
var Inst939 = 0;
var Inst940 = 0;
var Inst941 = 0;
var Inst942 = 0;
var Inst943 = 0;
var Inst944 = 0;
var Inst945 = 0;
var Inst946 = 0;
var Inst947 = 0;
var Inst948 = 0;
var Inst949 = 0;
var Inst950 = 0;
var Inst951 = 0;
var Inst952 = 0;
var Inst953 = 0;
var Inst954 = 0;
var Inst955 = 0;
var Inst956 = 0;
var Inst957 = 0;
var Inst958 = 0;
var Inst959 = 0;
var Inst960 = 0;
var Inst961 = 0;
var Inst962 = 0;
var Inst963 = 0;
var Inst964 = 0;
var Inst965 = 0;
var Inst966 = 0;
var Inst967 = 0;
var Inst968 = 0;
var Inst969 = 0;
var Inst970 = 0;
var Inst971 = 0;
var Inst972 = 0;
var Inst973 = 0;
var Inst974 = 0;
var Inst975 = 0;
var Inst976 = 0;
var Inst977 = 0;
var Inst978 = 0;
var Inst979 = 0;
var Inst980 = 0;
var Inst981 = 0;
var Inst982 = 0;
var Inst983 = 0;
var Inst984 = 0;
var Inst985 = 0;
var Inst986 = 0;
var Inst987 = 0;
var Inst988 = 0;
var Inst989 = 0;
var Inst990 = 0;
var Inst991 = 0;
var Inst992 = 0;
var Inst993 = 0;
var Inst994 = 0;
var Inst995 = 0;
var Inst996 = 0;
var Inst997 = 0;
var Inst998 = 0;
var Inst999 = 0;
var Inst1000 = 0;
var Inst1001 = 0;
var Inst1002 = 0;
var Inst1003 = 0;
var Inst1004 = 0;
var Inst1005 = 0;
var Inst1006 = 0;
var Inst1007 = 0;
var Inst1008 = 0;
var Inst1009 = 0;
var Inst1010 = 0;
var Inst1011 = 0;
var Inst1012 = 0;
var Inst1013 = 0;
var Inst1014 = 0;
var Inst1015 = 0;
var Inst1016 = 0;
var Inst1017 = 0;
var Inst1018 = 0;
var Inst1019 = 0;
var Inst1020 = 0;
var Inst1021 = 0;
var Inst1022 = 0;
var Inst1023 = 0;
var Inst1024 = 0;
var Inst1025 = 0;
var Inst1026 = 0;
var Inst1027 = 0;
var Inst1028 = 0;
var Inst1029 = 0;
var Inst1030 = 0;
var Inst1031 = 0;
var Inst1032 = 0;
var Inst1033 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2008 the V8 project authors. All rights reserved.
// Copyright 1996 John Maloney and Mario Wolczko.
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; either version 2 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
// This implementation of the DeltaBlue benchmark is derived
// from the Smalltalk implementation by John Maloney and Mario
// Wolczko. Some parts have been translated directly, whereas
// others have been modified more aggresively to make it feel
// more like a JavaScript program.

/**
 * A JavaScript implementation of the DeltaBlue constraint-solving
 * algorithm, as described in:
 *
 * "The DeltaBlue Algorithm: An Incremental Constraint Hierarchy Solver"
 *   Bjorn N. Freeman-Benson and John Maloney
 *   January 1990 Communications of the ACM,
 *   also available as University of Washington TR 89-08-06.
 *
 * Beware: this benchmark is written in a grotesque style where
 * the constraint model is built by side-effects from constructors.
 * I've kept it this way to avoid deviating too much from the original
 * implementation.
 */

/* --- O b j e c t   M o d e l --- */
Object.prototype.inheritsFrom = function (shuper) {
try { if (Inst3 <= 1000 && typeof (shuper) != "undefined") {_RecordType("<1750,1756,38>",(shuper)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (Inheriter) != "undefined") {_RecordType("<1771,1780,39>",(Inheriter)); Inst4++; } } catch(e) {}
  function Inheriter() {
    ;
  }

try { if (Inst7 <= 1000 && typeof (shuper.prototype) != "undefined") {_RecordType("<1820,1836,43>",(shuper.prototype)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (shuper) != "undefined") {_RecordType("<1820,1826,43>",(shuper)); Inst8++; } } catch(e) {}
  Inheriter.prototype = shuper.prototype;
try { if (Inst5 <= 1000 && typeof (Inheriter.prototype) != "undefined") {_RecordType("<1798,1817,43>",(Inheriter.prototype)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Inheriter) != "undefined") {_RecordType("<1798,1807,43>",(Inheriter)); Inst6++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (Inheriter) != "undefined") {_RecordType("<1861,1870,44>",(Inheriter)); Inst10++; } } catch(e) {}
  this.prototype = new Inheriter();
try { if (Inst9 <= 1000 && typeof (this.prototype) != "undefined") {_RecordType("<1840,1854,44>",(this.prototype)); Inst9++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (shuper) != "undefined") {_RecordType("<1900,1906,45>",(shuper)); Inst12++; } } catch(e) {}
  this.superConstructor = shuper;
try { if (Inst11 <= 1000 && typeof (this.superConstructor) != "undefined") {_RecordType("<1876,1897,45>",(this.superConstructor)); Inst11++; } } catch(e) {}
};
try { if (Inst0 <= 1000 && typeof (Object.prototype.inheritsFrom) != "undefined") {_RecordType("<1708,1737,38>",(Object.prototype.inheritsFrom)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<1708,1724,38>",(Object.prototype)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1708,1714,38>",(Object)); Inst2++; } } catch(e) {}

try { if (Inst13 <= 1000 && typeof (OrderedCollection) != "undefined") {_RecordType("<1921,1938,48>",(OrderedCollection)); Inst13++; } } catch(e) {}
function OrderedCollection() {
try { if (Inst15 <= 1000 && typeof (Array) != "undefined") {_RecordType("<1961,1966,49>",(Array)); Inst15++; } } catch(e) {}
  this.elms = new Array();
try { if (Inst14 <= 1000 && typeof (this.elms) != "undefined") {_RecordType("<1945,1954,49>",(this.elms)); Inst14++; } } catch(e) {}
}

OrderedCollection.prototype.add = function (elm) {
try { if (Inst19 <= 1000 && typeof (elm) != "undefined") {_RecordType("<2017,2020,52>",(elm)); Inst19++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (this.elms.push) != "undefined") {_RecordType("<2026,2040,53>",(this.elms.push)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (this.elms) != "undefined") {_RecordType("<2026,2035,53>",(this.elms)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (elm) != "undefined") {_RecordType("<2041,2044,53>",(elm)); Inst22++; } } catch(e) {}
  this.elms.push(elm);
};
try { if (Inst16 <= 1000 && typeof (OrderedCollection.prototype.add) != "undefined") {_RecordType("<1973,2004,52>",(OrderedCollection.prototype.add)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (OrderedCollection.prototype) != "undefined") {_RecordType("<1973,2000,52>",(OrderedCollection.prototype)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (OrderedCollection) != "undefined") {_RecordType("<1973,1990,52>",(OrderedCollection)); Inst18++; } } catch(e) {}

OrderedCollection.prototype.at = function (index) {
try { if (Inst26 <= 1000 && typeof (index) != "undefined") {_RecordType("<2094,2099,56>",(index)); Inst26++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (this.elms[index]) != "undefined") {_RecordType("<2112,2128,57>",(this.elms[index])); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (this.elms) != "undefined") {_RecordType("<2112,2121,57>",(this.elms)); Inst28++; } } catch(e) {}
  return this.elms[index];
};
try { if (Inst23 <= 1000 && typeof (OrderedCollection.prototype.at) != "undefined") {_RecordType("<2051,2081,56>",(OrderedCollection.prototype.at)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (OrderedCollection.prototype) != "undefined") {_RecordType("<2051,2078,56>",(OrderedCollection.prototype)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (OrderedCollection) != "undefined") {_RecordType("<2051,2068,56>",(OrderedCollection)); Inst25++; } } catch(e) {}

OrderedCollection.prototype.size = function () {
try { if (Inst32 <= 1000 && typeof (this.elms.length) != "undefined") {_RecordType("<2192,2208,61>",(this.elms.length)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (this.elms) != "undefined") {_RecordType("<2192,2201,61>",(this.elms)); Inst33++; } } catch(e) {}
  return this.elms.length;
};
try { if (Inst29 <= 1000 && typeof (OrderedCollection.prototype.size) != "undefined") {_RecordType("<2134,2166,60>",(OrderedCollection.prototype.size)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (OrderedCollection.prototype) != "undefined") {_RecordType("<2134,2161,60>",(OrderedCollection.prototype)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (OrderedCollection) != "undefined") {_RecordType("<2134,2151,60>",(OrderedCollection)); Inst31++; } } catch(e) {}

OrderedCollection.prototype.removeFirst = function () {
try { if (Inst37 <= 1000 && typeof (this.elms.pop) != "undefined") {_RecordType("<2279,2292,65>",(this.elms.pop)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (this.elms) != "undefined") {_RecordType("<2279,2288,65>",(this.elms)); Inst38++; } } catch(e) {}
  return this.elms.pop();
};
try { if (Inst34 <= 1000 && typeof (OrderedCollection.prototype.removeFirst) != "undefined") {_RecordType("<2214,2253,64>",(OrderedCollection.prototype.removeFirst)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (OrderedCollection.prototype) != "undefined") {_RecordType("<2214,2241,64>",(OrderedCollection.prototype)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (OrderedCollection) != "undefined") {_RecordType("<2214,2231,64>",(OrderedCollection)); Inst36++; } } catch(e) {}

OrderedCollection.prototype.remove = function (elm) {
try { if (Inst42 <= 1000 && typeof (elm) != "undefined") {_RecordType("<2347,2350,68>",(elm)); Inst42++; } } catch(e) {}
  var index = 0,
      skipped = 0;
try { if (Inst43 <= 1000 && typeof (index) != "undefined") {_RecordType("<2360,2365,69>",(index)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (skipped) != "undefined") {_RecordType("<2377,2384,70>",(skipped)); Inst44++; } } catch(e) {}

  for (var value of this.elms) {
try { if (Inst45 <= 1000 && typeof (value) != "undefined") {_RecordType("<2402,2407,72>",(value)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (this.elms) != "undefined") {_RecordType("<2411,2420,72>",(this.elms)); Inst46++; } } catch(e) {}
try { if (Inst47 <= 1000 && typeof (value) != "undefined") {_RecordType("<2432,2437,73>",(value)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (elm) != "undefined") {_RecordType("<2441,2444,73>",(elm)); Inst48++; } } catch(e) {}
    if (value != elm) {
try { if (Inst51 <= 1000 && typeof (value) != "undefined") {_RecordType("<2473,2478,74>",(value)); Inst51++; } } catch(e) {}
      this.elms[index] = value;
try { if (Inst49 <= 1000 && typeof (this.elms[index]) != "undefined") {_RecordType("<2454,2470,74>",(this.elms[index])); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (this.elms) != "undefined") {_RecordType("<2454,2463,74>",(this.elms)); Inst50++; } } catch(e) {}
try { if (Inst52 <= 1000 && typeof (index) != "undefined") {_RecordType("<2486,2491,75>",(index)); Inst52++; } } catch(e) {}
      index++;
    } else {
try { if (Inst53 <= 1000 && typeof (skipped) != "undefined") {_RecordType("<2514,2521,77>",(skipped)); Inst53++; } } catch(e) {}
      skipped++;
    }
  }

  for (var i = 0; i < skipped; i++) {
try { if (Inst54 <= 1000 && typeof (i) != "undefined") {_RecordType("<2547,2548,81>",(i)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (i) != "undefined") {_RecordType("<2554,2555,81>",(i)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (skipped) != "undefined") {_RecordType("<2558,2565,81>",(skipped)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (i) != "undefined") {_RecordType("<2567,2568,81>",(i)); Inst57++; } } catch(e) {}
try { if (Inst58 <= 1000 && typeof (this.elms.pop) != "undefined") {_RecordType("<2578,2591,82>",(this.elms.pop)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (this.elms) != "undefined") {_RecordType("<2578,2587,82>",(this.elms)); Inst59++; } } catch(e) {}
    this.elms.pop();
  }
};
try { if (Inst39 <= 1000 && typeof (OrderedCollection.prototype.remove) != "undefined") {_RecordType("<2300,2334,68>",(OrderedCollection.prototype.remove)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (OrderedCollection.prototype) != "undefined") {_RecordType("<2300,2327,68>",(OrderedCollection.prototype)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (OrderedCollection) != "undefined") {_RecordType("<2300,2317,68>",(OrderedCollection)); Inst41++; } } catch(e) {}
/* --- *
 * S t r e n g t h
 * --- */

/**
 * Strengths are used to measure the relative importance of constraints.
 * New strengths may be inserted in the strength hierarchy without
 * disrupting current constraints.  Strengths cannot be created outside
 * this class, so pointer comparison can be used for value comparison.
 */


try { if (Inst60 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<2943,2951,97>",(Strength)); Inst60++; } } catch(e) {}
function Strength(strengthValue, name) {
try { if (Inst61 <= 1000 && typeof (strengthValue) != "undefined") {_RecordType("<2952,2965,97>",(strengthValue)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (name) != "undefined") {_RecordType("<2967,2971,97>",(name)); Inst62++; } } catch(e) {}
try { if (Inst64 <= 1000 && typeof (strengthValue) != "undefined") {_RecordType("<2998,3011,98>",(strengthValue)); Inst64++; } } catch(e) {}
  this.strengthValue = strengthValue;
try { if (Inst63 <= 1000 && typeof (this.strengthValue) != "undefined") {_RecordType("<2977,2995,98>",(this.strengthValue)); Inst63++; } } catch(e) {}
try { if (Inst66 <= 1000 && typeof (name) != "undefined") {_RecordType("<3027,3031,99>",(name)); Inst66++; } } catch(e) {}
  this.name = name;
try { if (Inst65 <= 1000 && typeof (this.name) != "undefined") {_RecordType("<3015,3024,99>",(this.name)); Inst65++; } } catch(e) {}
}

Strength.stronger = function (s1, s2) {
try { if (Inst69 <= 1000 && typeof (s1) != "undefined") {_RecordType("<3066,3068,102>",(s1)); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (s2) != "undefined") {_RecordType("<3070,3072,102>",(s2)); Inst70++; } } catch(e) {}
try { if (Inst71 <= 1000 && typeof (s1.strengthValue) != "undefined") {_RecordType("<3085,3101,103>",(s1.strengthValue)); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (s1) != "undefined") {_RecordType("<3085,3087,103>",(s1)); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (s2.strengthValue) != "undefined") {_RecordType("<3104,3120,103>",(s2.strengthValue)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (s2) != "undefined") {_RecordType("<3104,3106,103>",(s2)); Inst74++; } } catch(e) {}
  return s1.strengthValue < s2.strengthValue;
};
try { if (Inst67 <= 1000 && typeof (Strength.stronger) != "undefined") {_RecordType("<3036,3053,102>",(Strength.stronger)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<3036,3044,102>",(Strength)); Inst68++; } } catch(e) {}

Strength.weaker = function (s1, s2) {
try { if (Inst77 <= 1000 && typeof (s1) != "undefined") {_RecordType("<3154,3156,106>",(s1)); Inst77++; } } catch(e) {}try { if (Inst78 <= 1000 && typeof (s2) != "undefined") {_RecordType("<3158,3160,106>",(s2)); Inst78++; } } catch(e) {}
try { if (Inst79 <= 1000 && typeof (s1.strengthValue) != "undefined") {_RecordType("<3173,3189,107>",(s1.strengthValue)); Inst79++; } } catch(e) {}try { if (Inst80 <= 1000 && typeof (s1) != "undefined") {_RecordType("<3173,3175,107>",(s1)); Inst80++; } } catch(e) {}try { if (Inst81 <= 1000 && typeof (s2.strengthValue) != "undefined") {_RecordType("<3192,3208,107>",(s2.strengthValue)); Inst81++; } } catch(e) {}try { if (Inst82 <= 1000 && typeof (s2) != "undefined") {_RecordType("<3192,3194,107>",(s2)); Inst82++; } } catch(e) {}
  return s1.strengthValue > s2.strengthValue;
};
try { if (Inst75 <= 1000 && typeof (Strength.weaker) != "undefined") {_RecordType("<3126,3141,106>",(Strength.weaker)); Inst75++; } } catch(e) {}try { if (Inst76 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<3126,3134,106>",(Strength)); Inst76++; } } catch(e) {}

Strength.weakestOf = function (s1, s2) {
try { if (Inst85 <= 1000 && typeof (s1) != "undefined") {_RecordType("<3245,3247,110>",(s1)); Inst85++; } } catch(e) {}try { if (Inst86 <= 1000 && typeof (s2) != "undefined") {_RecordType("<3249,3251,110>",(s2)); Inst86++; } } catch(e) {}
try { if (Inst87 <= 1000 && typeof (this.weaker) != "undefined") {_RecordType("<3264,3275,111>",(this.weaker)); Inst87++; } } catch(e) {}try { if (Inst88 <= 1000 && typeof (s1) != "undefined") {_RecordType("<3276,3278,111>",(s1)); Inst88++; } } catch(e) {}try { if (Inst89 <= 1000 && typeof (s2) != "undefined") {_RecordType("<3280,3282,111>",(s2)); Inst89++; } } catch(e) {}try { if (Inst90 <= 1000 && typeof (s1) != "undefined") {_RecordType("<3286,3288,111>",(s1)); Inst90++; } } catch(e) {}try { if (Inst91 <= 1000 && typeof (s2) != "undefined") {_RecordType("<3291,3293,111>",(s2)); Inst91++; } } catch(e) {}
  return this.weaker(s1, s2) ? s1 : s2;
};
try { if (Inst83 <= 1000 && typeof (Strength.weakestOf) != "undefined") {_RecordType("<3214,3232,110>",(Strength.weakestOf)); Inst83++; } } catch(e) {}try { if (Inst84 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<3214,3222,110>",(Strength)); Inst84++; } } catch(e) {}

Strength.strongest = function (s1, s2) {
try { if (Inst94 <= 1000 && typeof (s1) != "undefined") {_RecordType("<3330,3332,114>",(s1)); Inst94++; } } catch(e) {}try { if (Inst95 <= 1000 && typeof (s2) != "undefined") {_RecordType("<3334,3336,114>",(s2)); Inst95++; } } catch(e) {}
try { if (Inst96 <= 1000 && typeof (this.stronger) != "undefined") {_RecordType("<3349,3362,115>",(this.stronger)); Inst96++; } } catch(e) {}try { if (Inst97 <= 1000 && typeof (s1) != "undefined") {_RecordType("<3363,3365,115>",(s1)); Inst97++; } } catch(e) {}try { if (Inst98 <= 1000 && typeof (s2) != "undefined") {_RecordType("<3367,3369,115>",(s2)); Inst98++; } } catch(e) {}try { if (Inst99 <= 1000 && typeof (s1) != "undefined") {_RecordType("<3373,3375,115>",(s1)); Inst99++; } } catch(e) {}try { if (Inst100 <= 1000 && typeof (s2) != "undefined") {_RecordType("<3378,3380,115>",(s2)); Inst100++; } } catch(e) {}
  return this.stronger(s1, s2) ? s1 : s2;
};
try { if (Inst92 <= 1000 && typeof (Strength.strongest) != "undefined") {_RecordType("<3299,3317,114>",(Strength.strongest)); Inst92++; } } catch(e) {}try { if (Inst93 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<3299,3307,114>",(Strength)); Inst93++; } } catch(e) {}

Strength.prototype.nextWeaker = function () {
try { if (Inst104 <= 1000 && typeof (this.strengthValue) != "undefined") {_RecordType("<3442,3460,119>",(this.strengthValue)); Inst104++; } } catch(e) {}
  switch (this.strengthValue) {
    case 0:
try { if (Inst105 <= 1000 && typeof (Strength.WEAKEST) != "undefined") {_RecordType("<3489,3505,121>",(Strength.WEAKEST)); Inst105++; } } catch(e) {}try { if (Inst106 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<3489,3497,121>",(Strength)); Inst106++; } } catch(e) {}
      return Strength.WEAKEST;

    case 1:
try { if (Inst107 <= 1000 && typeof (Strength.WEAK_DEFAULT) != "undefined") {_RecordType("<3533,3554,124>",(Strength.WEAK_DEFAULT)); Inst107++; } } catch(e) {}try { if (Inst108 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<3533,3541,124>",(Strength)); Inst108++; } } catch(e) {}
      return Strength.WEAK_DEFAULT;

    case 2:
try { if (Inst109 <= 1000 && typeof (Strength.NORMAL) != "undefined") {_RecordType("<3582,3597,127>",(Strength.NORMAL)); Inst109++; } } catch(e) {}try { if (Inst110 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<3582,3590,127>",(Strength)); Inst110++; } } catch(e) {}
      return Strength.NORMAL;

    case 3:
try { if (Inst111 <= 1000 && typeof (Strength.STRONG_DEFAULT) != "undefined") {_RecordType("<3625,3648,130>",(Strength.STRONG_DEFAULT)); Inst111++; } } catch(e) {}try { if (Inst112 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<3625,3633,130>",(Strength)); Inst112++; } } catch(e) {}
      return Strength.STRONG_DEFAULT;

    case 4:
try { if (Inst113 <= 1000 && typeof (Strength.PREFERRED) != "undefined") {_RecordType("<3676,3694,133>",(Strength.PREFERRED)); Inst113++; } } catch(e) {}try { if (Inst114 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<3676,3684,133>",(Strength)); Inst114++; } } catch(e) {}
      return Strength.PREFERRED;

    case 5:
try { if (Inst115 <= 1000 && typeof (Strength.REQUIRED) != "undefined") {_RecordType("<3722,3739,136>",(Strength.REQUIRED)); Inst115++; } } catch(e) {}try { if (Inst116 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<3722,3730,136>",(Strength)); Inst116++; } } catch(e) {}
      return Strength.REQUIRED;
  }
}; // Strength constants.
try { if (Inst101 <= 1000 && typeof (Strength.prototype.nextWeaker) != "undefined") {_RecordType("<3386,3415,118>",(Strength.prototype.nextWeaker)); Inst101++; } } catch(e) {}try { if (Inst102 <= 1000 && typeof (Strength.prototype) != "undefined") {_RecordType("<3386,3404,118>",(Strength.prototype)); Inst102++; } } catch(e) {}try { if (Inst103 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<3386,3394,118>",(Strength)); Inst103++; } } catch(e) {}


try { if (Inst119 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<3797,3805,141>",(Strength)); Inst119++; } } catch(e) {}
Strength.REQUIRED = new Strength(0, "required");
try { if (Inst117 <= 1000 && typeof (Strength.REQUIRED) != "undefined") {_RecordType("<3773,3790,141>",(Strength.REQUIRED)); Inst117++; } } catch(e) {}try { if (Inst118 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<3773,3781,141>",(Strength)); Inst118++; } } catch(e) {}
try { if (Inst122 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<3853,3861,142>",(Strength)); Inst122++; } } catch(e) {}
Strength.STONG_PREFERRED = new Strength(1, "strongPreferred");
try { if (Inst120 <= 1000 && typeof (Strength.STONG_PREFERRED) != "undefined") {_RecordType("<3822,3846,142>",(Strength.STONG_PREFERRED)); Inst120++; } } catch(e) {}try { if (Inst121 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<3822,3830,142>",(Strength)); Inst121++; } } catch(e) {}
try { if (Inst125 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<3910,3918,143>",(Strength)); Inst125++; } } catch(e) {}
Strength.PREFERRED = new Strength(2, "preferred");
try { if (Inst123 <= 1000 && typeof (Strength.PREFERRED) != "undefined") {_RecordType("<3885,3903,143>",(Strength.PREFERRED)); Inst123++; } } catch(e) {}try { if (Inst124 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<3885,3893,143>",(Strength)); Inst124++; } } catch(e) {}
try { if (Inst128 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<3966,3974,144>",(Strength)); Inst128++; } } catch(e) {}
Strength.STRONG_DEFAULT = new Strength(3, "strongDefault");
try { if (Inst126 <= 1000 && typeof (Strength.STRONG_DEFAULT) != "undefined") {_RecordType("<3936,3959,144>",(Strength.STRONG_DEFAULT)); Inst126++; } } catch(e) {}try { if (Inst127 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<3936,3944,144>",(Strength)); Inst127++; } } catch(e) {}
try { if (Inst131 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<4018,4026,145>",(Strength)); Inst131++; } } catch(e) {}
Strength.NORMAL = new Strength(4, "normal");
try { if (Inst129 <= 1000 && typeof (Strength.NORMAL) != "undefined") {_RecordType("<3996,4011,145>",(Strength.NORMAL)); Inst129++; } } catch(e) {}try { if (Inst130 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<3996,4004,145>",(Strength)); Inst130++; } } catch(e) {}
try { if (Inst134 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<4069,4077,146>",(Strength)); Inst134++; } } catch(e) {}
Strength.WEAK_DEFAULT = new Strength(5, "weakDefault");
try { if (Inst132 <= 1000 && typeof (Strength.WEAK_DEFAULT) != "undefined") {_RecordType("<4041,4062,146>",(Strength.WEAK_DEFAULT)); Inst132++; } } catch(e) {}try { if (Inst133 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<4041,4049,146>",(Strength)); Inst133++; } } catch(e) {}
try { if (Inst137 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<4120,4128,147>",(Strength)); Inst137++; } } catch(e) {}
Strength.WEAKEST = new Strength(6, "weakest");
try { if (Inst135 <= 1000 && typeof (Strength.WEAKEST) != "undefined") {_RecordType("<4097,4113,147>",(Strength.WEAKEST)); Inst135++; } } catch(e) {}try { if (Inst136 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<4097,4105,147>",(Strength)); Inst136++; } } catch(e) {}
/* --- *
 * C o n s t r a i n t
 * --- */

/**
 * An abstract class representing a system-maintainable relationship
 * (or "constraint") between a set of variables. A constraint supplies
 * a strength instance variable; concrete subclasses provide a means
 * of storing the constrained variables and other information required
 * to represent a constraint.
 */

try { if (Inst138 <= 1000 && typeof (Constraint) != "undefined") {_RecordType("<4515,4525,160>",(Constraint)); Inst138++; } } catch(e) {}
function Constraint(strength) {
try { if (Inst139 <= 1000 && typeof (strength) != "undefined") {_RecordType("<4526,4534,160>",(strength)); Inst139++; } } catch(e) {}
try { if (Inst141 <= 1000 && typeof (strength) != "undefined") {_RecordType("<4556,4564,161>",(strength)); Inst141++; } } catch(e) {}
  this.strength = strength;
try { if (Inst140 <= 1000 && typeof (this.strength) != "undefined") {_RecordType("<4540,4553,161>",(this.strength)); Inst140++; } } catch(e) {}
}
/**
 * Activate this constraint and attempt to satisfy it.
 */


Constraint.prototype.addConstraint = function () {
try { if (Inst145 <= 1000 && typeof (this.addToGraph) != "undefined") {_RecordType("<4686,4701,169>",(this.addToGraph)); Inst145++; } } catch(e) {}
  this.addToGraph();
try { if (Inst146 <= 1000 && typeof (planner.incrementalAdd) != "undefined") {_RecordType("<4707,4729,170>",(planner.incrementalAdd)); Inst146++; } } catch(e) {}try { if (Inst147 <= 1000 && typeof (planner) != "undefined") {_RecordType("<4707,4714,170>",(planner)); Inst147++; } } catch(e) {}
  planner.incrementalAdd(this);
};
try { if (Inst142 <= 1000 && typeof (Constraint.prototype.addConstraint) != "undefined") {_RecordType("<4633,4667,168>",(Constraint.prototype.addConstraint)); Inst142++; } } catch(e) {}try { if (Inst143 <= 1000 && typeof (Constraint.prototype) != "undefined") {_RecordType("<4633,4653,168>",(Constraint.prototype)); Inst143++; } } catch(e) {}try { if (Inst144 <= 1000 && typeof (Constraint) != "undefined") {_RecordType("<4633,4643,168>",(Constraint)); Inst144++; } } catch(e) {}
/**
 * Attempt to find a way to enforce this constraint. If successful,
 * record the solution, perhaps modifying the current dataflow
 * graph. Answer the constraint that this constraint overrides, if
 * there is one, or nil, if there isn't.
 * Assume: I am not already satisfied.
 */


Constraint.prototype.satisfy = function (mark) {
try { if (Inst151 <= 1000 && typeof (mark) != "undefined") {_RecordType("<5069,5073,181>",(mark)); Inst151++; } } catch(e) {}
try { if (Inst152 <= 1000 && typeof (this.chooseMethod) != "undefined") {_RecordType("<5079,5096,182>",(this.chooseMethod)); Inst152++; } } catch(e) {}try { if (Inst153 <= 1000 && typeof (mark) != "undefined") {_RecordType("<5097,5101,182>",(mark)); Inst153++; } } catch(e) {}
  this.chooseMethod(mark);

try { if (Inst154 <= 1000 && typeof (this.isSatisfied) != "undefined") {_RecordType("<5112,5128,184>",(this.isSatisfied)); Inst154++; } } catch(e) {}
  if (!this.isSatisfied()) {
try { if (Inst155 <= 1000 && typeof (this.strength) != "undefined") {_RecordType("<5142,5155,185>",(this.strength)); Inst155++; } } catch(e) {}try { if (Inst156 <= 1000 && typeof (Strength.REQUIRED) != "undefined") {_RecordType("<5159,5176,185>",(Strength.REQUIRED)); Inst156++; } } catch(e) {}try { if (Inst157 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<5159,5167,185>",(Strength)); Inst157++; } } catch(e) {}
    if (this.strength == Strength.REQUIRED) {
try { if (Inst158 <= 1000 && typeof (alert) != "undefined") {_RecordType("<5186,5191,186>",(alert)); Inst158++; } } catch(e) {}
      alert("Could not satisfy a required constraint!");
    }

    return null;
  }

try { if (Inst159 <= 1000 && typeof (this.markInputs) != "undefined") {_RecordType("<5268,5283,192>",(this.markInputs)); Inst159++; } } catch(e) {}try { if (Inst160 <= 1000 && typeof (mark) != "undefined") {_RecordType("<5284,5288,192>",(mark)); Inst160++; } } catch(e) {}
  this.markInputs(mark);
try { if (Inst162 <= 1000 && typeof (this.output) != "undefined") {_RecordType("<5303,5314,193>",(this.output)); Inst162++; } } catch(e) {}
  var out = this.output();
try { if (Inst161 <= 1000 && typeof (out) != "undefined") {_RecordType("<5297,5300,193>",(out)); Inst161++; } } catch(e) {}
try { if (Inst164 <= 1000 && typeof (out.determinedBy) != "undefined") {_RecordType("<5337,5353,194>",(out.determinedBy)); Inst164++; } } catch(e) {}try { if (Inst165 <= 1000 && typeof (out) != "undefined") {_RecordType("<5337,5340,194>",(out)); Inst165++; } } catch(e) {}
  var overridden = out.determinedBy;
try { if (Inst163 <= 1000 && typeof (overridden) != "undefined") {_RecordType("<5324,5334,194>",(overridden)); Inst163++; } } catch(e) {}

try { if (Inst166 <= 1000 && typeof (overridden) != "undefined") {_RecordType("<5362,5372,196>",(overridden)); Inst166++; } } catch(e) {}
  if (overridden != null) {
try { if (Inst167 <= 1000 && typeof (overridden.markUnsatisfied) != "undefined") {_RecordType("<5388,5414,197>",(overridden.markUnsatisfied)); Inst167++; } } catch(e) {}try { if (Inst168 <= 1000 && typeof (overridden) != "undefined") {_RecordType("<5388,5398,197>",(overridden)); Inst168++; } } catch(e) {}
    overridden.markUnsatisfied();
  }

  out.determinedBy = this;
try { if (Inst169 <= 1000 && typeof (out.determinedBy) != "undefined") {_RecordType("<5425,5441,200>",(out.determinedBy)); Inst169++; } } catch(e) {}try { if (Inst170 <= 1000 && typeof (out) != "undefined") {_RecordType("<5425,5428,200>",(out)); Inst170++; } } catch(e) {}

try { if (Inst171 <= 1000 && typeof (planner.addPropagate) != "undefined") {_RecordType("<5458,5478,202>",(planner.addPropagate)); Inst171++; } } catch(e) {}try { if (Inst172 <= 1000 && typeof (planner) != "undefined") {_RecordType("<5458,5465,202>",(planner)); Inst172++; } } catch(e) {}try { if (Inst173 <= 1000 && typeof (mark) != "undefined") {_RecordType("<5485,5489,202>",(mark)); Inst173++; } } catch(e) {}
  if (!planner.addPropagate(this, mark)) {
try { if (Inst174 <= 1000 && typeof (alert) != "undefined") {_RecordType("<5498,5503,203>",(alert)); Inst174++; } } catch(e) {}
    alert("Cycle encountered");
  }

try { if (Inst177 <= 1000 && typeof (mark) != "undefined") {_RecordType("<5544,5548,206>",(mark)); Inst177++; } } catch(e) {}
  out.mark = mark;
try { if (Inst175 <= 1000 && typeof (out.mark) != "undefined") {_RecordType("<5533,5541,206>",(out.mark)); Inst175++; } } catch(e) {}try { if (Inst176 <= 1000 && typeof (out) != "undefined") {_RecordType("<5533,5536,206>",(out)); Inst176++; } } catch(e) {}
try { if (Inst178 <= 1000 && typeof (overridden) != "undefined") {_RecordType("<5559,5569,207>",(overridden)); Inst178++; } } catch(e) {}
  return overridden;
};
try { if (Inst148 <= 1000 && typeof (Constraint.prototype.satisfy) != "undefined") {_RecordType("<5028,5056,181>",(Constraint.prototype.satisfy)); Inst148++; } } catch(e) {}try { if (Inst149 <= 1000 && typeof (Constraint.prototype) != "undefined") {_RecordType("<5028,5048,181>",(Constraint.prototype)); Inst149++; } } catch(e) {}try { if (Inst150 <= 1000 && typeof (Constraint) != "undefined") {_RecordType("<5028,5038,181>",(Constraint)); Inst150++; } } catch(e) {}

Constraint.prototype.destroyConstraint = function () {
try { if (Inst182 <= 1000 && typeof (this.isSatisfied) != "undefined") {_RecordType("<5636,5652,211>",(this.isSatisfied)); Inst182++; } } catch(e) {}
  if (this.isSatisfied()) {
try { if (Inst183 <= 1000 && typeof (planner.incrementalRemove) != "undefined") {_RecordType("<5662,5687,212>",(planner.incrementalRemove)); Inst183++; } } catch(e) {}try { if (Inst184 <= 1000 && typeof (planner) != "undefined") {_RecordType("<5662,5669,212>",(planner)); Inst184++; } } catch(e) {}
    planner.incrementalRemove(this);
  } else {
try { if (Inst185 <= 1000 && typeof (this.removeFromGraph) != "undefined") {_RecordType("<5710,5730,214>",(this.removeFromGraph)); Inst185++; } } catch(e) {}
    this.removeFromGraph();
  }
};
try { if (Inst179 <= 1000 && typeof (Constraint.prototype.destroyConstraint) != "undefined") {_RecordType("<5575,5613,210>",(Constraint.prototype.destroyConstraint)); Inst179++; } } catch(e) {}try { if (Inst180 <= 1000 && typeof (Constraint.prototype) != "undefined") {_RecordType("<5575,5595,210>",(Constraint.prototype)); Inst180++; } } catch(e) {}try { if (Inst181 <= 1000 && typeof (Constraint) != "undefined") {_RecordType("<5575,5585,210>",(Constraint)); Inst181++; } } catch(e) {}
/**
 * Normal constraints are not input constraints.  An input constraint
 * is one that depends on external state, such as the mouse, the
 * keybord, a clock, or some arbitraty piece of imperative code.
 */


Constraint.prototype.isInput = function () {
  return false;
};
try { if (Inst186 <= 1000 && typeof (Constraint.prototype.isInput) != "undefined") {_RecordType("<5951,5979,224>",(Constraint.prototype.isInput)); Inst186++; } } catch(e) {}try { if (Inst187 <= 1000 && typeof (Constraint.prototype) != "undefined") {_RecordType("<5951,5971,224>",(Constraint.prototype)); Inst187++; } } catch(e) {}try { if (Inst188 <= 1000 && typeof (Constraint) != "undefined") {_RecordType("<5951,5961,224>",(Constraint)); Inst188++; } } catch(e) {}
/* --- *
 * U n a r y   C o n s t r a i n t
 * --- */

/**
 * Abstract superclass for constraints having a single possible output
 * variable.
 */


try { if (Inst189 <= 1000 && typeof (UnaryConstraint) != "undefined") {_RecordType("<6173,6188,237>",(UnaryConstraint)); Inst189++; } } catch(e) {}
function UnaryConstraint(v, strength) {
try { if (Inst190 <= 1000 && typeof (v) != "undefined") {_RecordType("<6189,6190,237>",(v)); Inst190++; } } catch(e) {}try { if (Inst191 <= 1000 && typeof (strength) != "undefined") {_RecordType("<6192,6200,237>",(strength)); Inst191++; } } catch(e) {}
try { if (Inst192 <= 1000 && typeof (UnaryConstraint.superConstructor.call) != "undefined") {_RecordType("<6206,6243,238>",(UnaryConstraint.superConstructor.call)); Inst192++; } } catch(e) {}try { if (Inst193 <= 1000 && typeof (UnaryConstraint.superConstructor) != "undefined") {_RecordType("<6206,6238,238>",(UnaryConstraint.superConstructor)); Inst193++; } } catch(e) {}try { if (Inst194 <= 1000 && typeof (UnaryConstraint) != "undefined") {_RecordType("<6206,6221,238>",(UnaryConstraint)); Inst194++; } } catch(e) {}try { if (Inst195 <= 1000 && typeof (strength) != "undefined") {_RecordType("<6250,6258,238>",(strength)); Inst195++; } } catch(e) {}
  UnaryConstraint.superConstructor.call(this, strength);
try { if (Inst197 <= 1000 && typeof (v) != "undefined") {_RecordType("<6279,6280,239>",(v)); Inst197++; } } catch(e) {}
  this.myOutput = v;
try { if (Inst196 <= 1000 && typeof (this.myOutput) != "undefined") {_RecordType("<6263,6276,239>",(this.myOutput)); Inst196++; } } catch(e) {}
  this.satisfied = false;
try { if (Inst198 <= 1000 && typeof (this.satisfied) != "undefined") {_RecordType("<6284,6298,240>",(this.satisfied)); Inst198++; } } catch(e) {}
try { if (Inst199 <= 1000 && typeof (this.addConstraint) != "undefined") {_RecordType("<6310,6328,241>",(this.addConstraint)); Inst199++; } } catch(e) {}
  this.addConstraint();
}

try { if (Inst200 <= 1000 && typeof (UnaryConstraint.inheritsFrom) != "undefined") {_RecordType("<6335,6363,244>",(UnaryConstraint.inheritsFrom)); Inst200++; } } catch(e) {}try { if (Inst201 <= 1000 && typeof (UnaryConstraint) != "undefined") {_RecordType("<6335,6350,244>",(UnaryConstraint)); Inst201++; } } catch(e) {}try { if (Inst202 <= 1000 && typeof (Constraint) != "undefined") {_RecordType("<6364,6374,244>",(Constraint)); Inst202++; } } catch(e) {}
UnaryConstraint.inheritsFrom(Constraint);
/**
 * Adds this constraint to the constraint graph
 */

UnaryConstraint.prototype.addToGraph = function () {
try { if (Inst206 <= 1000 && typeof (this.myOutput.addConstraint) != "undefined") {_RecordType("<6489,6516,250>",(this.myOutput.addConstraint)); Inst206++; } } catch(e) {}try { if (Inst207 <= 1000 && typeof (this.myOutput) != "undefined") {_RecordType("<6489,6502,250>",(this.myOutput)); Inst207++; } } catch(e) {}
  this.myOutput.addConstraint(this);
  this.satisfied = false;
try { if (Inst208 <= 1000 && typeof (this.satisfied) != "undefined") {_RecordType("<6526,6540,251>",(this.satisfied)); Inst208++; } } catch(e) {}
};
try { if (Inst203 <= 1000 && typeof (UnaryConstraint.prototype.addToGraph) != "undefined") {_RecordType("<6434,6470,249>",(UnaryConstraint.prototype.addToGraph)); Inst203++; } } catch(e) {}try { if (Inst204 <= 1000 && typeof (UnaryConstraint.prototype) != "undefined") {_RecordType("<6434,6459,249>",(UnaryConstraint.prototype)); Inst204++; } } catch(e) {}try { if (Inst205 <= 1000 && typeof (UnaryConstraint) != "undefined") {_RecordType("<6434,6449,249>",(UnaryConstraint)); Inst205++; } } catch(e) {}
/**
 * Decides if this constraint can be satisfied and records that
 * decision.
 */


UnaryConstraint.prototype.chooseMethod = function (mark) {
try { if (Inst212 <= 1000 && typeof (mark) != "undefined") {_RecordType("<6691,6695,259>",(mark)); Inst212++; } } catch(e) {}
try { if (Inst214 <= 1000 && typeof (this.myOutput.mark) != "undefined") {_RecordType("<6718,6736,260>",(this.myOutput.mark)); Inst214++; } } catch(e) {}try { if (Inst215 <= 1000 && typeof (this.myOutput) != "undefined") {_RecordType("<6718,6731,260>",(this.myOutput)); Inst215++; } } catch(e) {}try { if (Inst216 <= 1000 && typeof (mark) != "undefined") {_RecordType("<6740,6744,260>",(mark)); Inst216++; } } catch(e) {}try { if (Inst217 <= 1000 && typeof (Strength.stronger) != "undefined") {_RecordType("<6748,6765,260>",(Strength.stronger)); Inst217++; } } catch(e) {}try { if (Inst218 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<6748,6756,260>",(Strength)); Inst218++; } } catch(e) {}try { if (Inst219 <= 1000 && typeof (this.strength) != "undefined") {_RecordType("<6766,6779,260>",(this.strength)); Inst219++; } } catch(e) {}try { if (Inst220 <= 1000 && typeof (this.myOutput.walkStrength) != "undefined") {_RecordType("<6781,6807,260>",(this.myOutput.walkStrength)); Inst220++; } } catch(e) {}try { if (Inst221 <= 1000 && typeof (this.myOutput) != "undefined") {_RecordType("<6781,6794,260>",(this.myOutput)); Inst221++; } } catch(e) {}
  this.satisfied = this.myOutput.mark != mark && Strength.stronger(this.strength, this.myOutput.walkStrength);
try { if (Inst213 <= 1000 && typeof (this.satisfied) != "undefined") {_RecordType("<6701,6715,260>",(this.satisfied)); Inst213++; } } catch(e) {}
};
try { if (Inst209 <= 1000 && typeof (UnaryConstraint.prototype.chooseMethod) != "undefined") {_RecordType("<6640,6678,259>",(UnaryConstraint.prototype.chooseMethod)); Inst209++; } } catch(e) {}try { if (Inst210 <= 1000 && typeof (UnaryConstraint.prototype) != "undefined") {_RecordType("<6640,6665,259>",(UnaryConstraint.prototype)); Inst210++; } } catch(e) {}try { if (Inst211 <= 1000 && typeof (UnaryConstraint) != "undefined") {_RecordType("<6640,6655,259>",(UnaryConstraint)); Inst211++; } } catch(e) {}
/**
 * Returns true if this constraint is satisfied in the current solution.
 */


UnaryConstraint.prototype.isSatisfied = function () {
try { if (Inst225 <= 1000 && typeof (this.satisfied) != "undefined") {_RecordType("<6959,6973,268>",(this.satisfied)); Inst225++; } } catch(e) {}
  return this.satisfied;
};
try { if (Inst222 <= 1000 && typeof (UnaryConstraint.prototype.isSatisfied) != "undefined") {_RecordType("<6896,6933,267>",(UnaryConstraint.prototype.isSatisfied)); Inst222++; } } catch(e) {}try { if (Inst223 <= 1000 && typeof (UnaryConstraint.prototype) != "undefined") {_RecordType("<6896,6921,267>",(UnaryConstraint.prototype)); Inst223++; } } catch(e) {}try { if (Inst224 <= 1000 && typeof (UnaryConstraint) != "undefined") {_RecordType("<6896,6911,267>",(UnaryConstraint)); Inst224++; } } catch(e) {}

UnaryConstraint.prototype.markInputs = function (mark) {
try { if (Inst229 <= 1000 && typeof (mark) != "undefined") {_RecordType("<7028,7032,271>",(mark)); Inst229++; } } catch(e) {}
  ;
} // has no inputs

/**
 * Returns the current output variable.
 */
;
try { if (Inst226 <= 1000 && typeof (UnaryConstraint.prototype.markInputs) != "undefined") {_RecordType("<6979,7015,271>",(UnaryConstraint.prototype.markInputs)); Inst226++; } } catch(e) {}try { if (Inst227 <= 1000 && typeof (UnaryConstraint.prototype) != "undefined") {_RecordType("<6979,7004,271>",(UnaryConstraint.prototype)); Inst227++; } } catch(e) {}try { if (Inst228 <= 1000 && typeof (UnaryConstraint) != "undefined") {_RecordType("<6979,6994,271>",(UnaryConstraint)); Inst228++; } } catch(e) {}

UnaryConstraint.prototype.output = function () {
try { if (Inst233 <= 1000 && typeof (this.myOutput) != "undefined") {_RecordType("<7169,7182,281>",(this.myOutput)); Inst233++; } } catch(e) {}
  return this.myOutput;
};
try { if (Inst230 <= 1000 && typeof (UnaryConstraint.prototype.output) != "undefined") {_RecordType("<7111,7143,280>",(UnaryConstraint.prototype.output)); Inst230++; } } catch(e) {}try { if (Inst231 <= 1000 && typeof (UnaryConstraint.prototype) != "undefined") {_RecordType("<7111,7136,280>",(UnaryConstraint.prototype)); Inst231++; } } catch(e) {}try { if (Inst232 <= 1000 && typeof (UnaryConstraint) != "undefined") {_RecordType("<7111,7126,280>",(UnaryConstraint)); Inst232++; } } catch(e) {}
/**
 * Calculate the walkabout strength, the stay flag, and, if it is
 * 'stay', the value for the current output of this constraint. Assume
 * this constraint is satisfied.
 */


UnaryConstraint.prototype.recalculate = function () {
try { if (Inst239 <= 1000 && typeof (this.strength) != "undefined") {_RecordType("<7452,7465,291>",(this.strength)); Inst239++; } } catch(e) {}
  this.myOutput.walkStrength = this.strength;
try { if (Inst237 <= 1000 && typeof (this.myOutput.walkStrength) != "undefined") {_RecordType("<7423,7449,291>",(this.myOutput.walkStrength)); Inst237++; } } catch(e) {}try { if (Inst238 <= 1000 && typeof (this.myOutput) != "undefined") {_RecordType("<7423,7436,291>",(this.myOutput)); Inst238++; } } catch(e) {}
try { if (Inst242 <= 1000 && typeof (this.isInput) != "undefined") {_RecordType("<7491,7503,292>",(this.isInput)); Inst242++; } } catch(e) {}
  this.myOutput.stay = !this.isInput();
try { if (Inst240 <= 1000 && typeof (this.myOutput.stay) != "undefined") {_RecordType("<7469,7487,292>",(this.myOutput.stay)); Inst240++; } } catch(e) {}try { if (Inst241 <= 1000 && typeof (this.myOutput) != "undefined") {_RecordType("<7469,7482,292>",(this.myOutput)); Inst241++; } } catch(e) {}

try { if (Inst243 <= 1000 && typeof (this.myOutput.stay) != "undefined") {_RecordType("<7514,7532,294>",(this.myOutput.stay)); Inst243++; } } catch(e) {}try { if (Inst244 <= 1000 && typeof (this.myOutput) != "undefined") {_RecordType("<7514,7527,294>",(this.myOutput)); Inst244++; } } catch(e) {}
  if (this.myOutput.stay) {
try { if (Inst245 <= 1000 && typeof (this.execute) != "undefined") {_RecordType("<7540,7552,295>",(this.execute)); Inst245++; } } catch(e) {}
    this.execute();
  } // Stay optimization

};
try { if (Inst234 <= 1000 && typeof (UnaryConstraint.prototype.recalculate) != "undefined") {_RecordType("<7367,7404,290>",(UnaryConstraint.prototype.recalculate)); Inst234++; } } catch(e) {}try { if (Inst235 <= 1000 && typeof (UnaryConstraint.prototype) != "undefined") {_RecordType("<7367,7392,290>",(UnaryConstraint.prototype)); Inst235++; } } catch(e) {}try { if (Inst236 <= 1000 && typeof (UnaryConstraint) != "undefined") {_RecordType("<7367,7382,290>",(UnaryConstraint)); Inst236++; } } catch(e) {}
/**
 * Records that this constraint is unsatisfied
 */


UnaryConstraint.prototype.markUnsatisfied = function () {
  this.satisfied = false;
try { if (Inst249 <= 1000 && typeof (this.satisfied) != "undefined") {_RecordType("<7702,7716,305>",(this.satisfied)); Inst249++; } } catch(e) {}
};
try { if (Inst246 <= 1000 && typeof (UnaryConstraint.prototype.markUnsatisfied) != "undefined") {_RecordType("<7642,7683,304>",(UnaryConstraint.prototype.markUnsatisfied)); Inst246++; } } catch(e) {}try { if (Inst247 <= 1000 && typeof (UnaryConstraint.prototype) != "undefined") {_RecordType("<7642,7667,304>",(UnaryConstraint.prototype)); Inst247++; } } catch(e) {}try { if (Inst248 <= 1000 && typeof (UnaryConstraint) != "undefined") {_RecordType("<7642,7657,304>",(UnaryConstraint)); Inst248++; } } catch(e) {}

UnaryConstraint.prototype.inputsKnown = function () {
  return true;
};
try { if (Inst250 <= 1000 && typeof (UnaryConstraint.prototype.inputsKnown) != "undefined") {_RecordType("<7730,7767,308>",(UnaryConstraint.prototype.inputsKnown)); Inst250++; } } catch(e) {}try { if (Inst251 <= 1000 && typeof (UnaryConstraint.prototype) != "undefined") {_RecordType("<7730,7755,308>",(UnaryConstraint.prototype)); Inst251++; } } catch(e) {}try { if (Inst252 <= 1000 && typeof (UnaryConstraint) != "undefined") {_RecordType("<7730,7745,308>",(UnaryConstraint)); Inst252++; } } catch(e) {}

UnaryConstraint.prototype.removeFromGraph = function () {
try { if (Inst256 <= 1000 && typeof (this.myOutput) != "undefined") {_RecordType("<7867,7880,313>",(this.myOutput)); Inst256++; } } catch(e) {}
  if (this.myOutput != null) {
try { if (Inst257 <= 1000 && typeof (this.myOutput.removeConstraint) != "undefined") {_RecordType("<7896,7926,314>",(this.myOutput.removeConstraint)); Inst257++; } } catch(e) {}try { if (Inst258 <= 1000 && typeof (this.myOutput) != "undefined") {_RecordType("<7896,7909,314>",(this.myOutput)); Inst258++; } } catch(e) {}
    this.myOutput.removeConstraint(this);
  }

  this.satisfied = false;
try { if (Inst259 <= 1000 && typeof (this.satisfied) != "undefined") {_RecordType("<7941,7955,317>",(this.satisfied)); Inst259++; } } catch(e) {}
};
try { if (Inst253 <= 1000 && typeof (UnaryConstraint.prototype.removeFromGraph) != "undefined") {_RecordType("<7803,7844,312>",(UnaryConstraint.prototype.removeFromGraph)); Inst253++; } } catch(e) {}try { if (Inst254 <= 1000 && typeof (UnaryConstraint.prototype) != "undefined") {_RecordType("<7803,7828,312>",(UnaryConstraint.prototype)); Inst254++; } } catch(e) {}try { if (Inst255 <= 1000 && typeof (UnaryConstraint) != "undefined") {_RecordType("<7803,7818,312>",(UnaryConstraint)); Inst255++; } } catch(e) {}
/* --- *
 * S t a y   C o n s t r a i n t
 * --- */

/**
 * Variables that should, with some level of preference, stay the same.
 * Planners may exploit the fact that instances, if satisfied, will not
 * change their output during plan execution.  This is called "stay
 * optimization".
 */


try { if (Inst260 <= 1000 && typeof (StayConstraint) != "undefined") {_RecordType("<8270,8284,331>",(StayConstraint)); Inst260++; } } catch(e) {}
function StayConstraint(v, str) {
try { if (Inst261 <= 1000 && typeof (v) != "undefined") {_RecordType("<8285,8286,331>",(v)); Inst261++; } } catch(e) {}try { if (Inst262 <= 1000 && typeof (str) != "undefined") {_RecordType("<8288,8291,331>",(str)); Inst262++; } } catch(e) {}
try { if (Inst263 <= 1000 && typeof (StayConstraint.superConstructor.call) != "undefined") {_RecordType("<8297,8333,332>",(StayConstraint.superConstructor.call)); Inst263++; } } catch(e) {}try { if (Inst264 <= 1000 && typeof (StayConstraint.superConstructor) != "undefined") {_RecordType("<8297,8328,332>",(StayConstraint.superConstructor)); Inst264++; } } catch(e) {}try { if (Inst265 <= 1000 && typeof (StayConstraint) != "undefined") {_RecordType("<8297,8311,332>",(StayConstraint)); Inst265++; } } catch(e) {}try { if (Inst266 <= 1000 && typeof (v) != "undefined") {_RecordType("<8340,8341,332>",(v)); Inst266++; } } catch(e) {}try { if (Inst267 <= 1000 && typeof (str) != "undefined") {_RecordType("<8343,8346,332>",(str)); Inst267++; } } catch(e) {}
  StayConstraint.superConstructor.call(this, v, str);
}

try { if (Inst268 <= 1000 && typeof (StayConstraint.inheritsFrom) != "undefined") {_RecordType("<8352,8379,335>",(StayConstraint.inheritsFrom)); Inst268++; } } catch(e) {}try { if (Inst269 <= 1000 && typeof (StayConstraint) != "undefined") {_RecordType("<8352,8366,335>",(StayConstraint)); Inst269++; } } catch(e) {}try { if (Inst270 <= 1000 && typeof (UnaryConstraint) != "undefined") {_RecordType("<8380,8395,335>",(UnaryConstraint)); Inst270++; } } catch(e) {}
StayConstraint.inheritsFrom(UnaryConstraint);

StayConstraint.prototype.execute = function () {
  ;
} // Stay constraints do nothing

/* --- *
 * E d i t   C o n s t r a i n t
 * --- */

/**
 * A unary input constraint used to mark a variable that the client
 * wishes to change.
 */
;
try { if (Inst271 <= 1000 && typeof (StayConstraint.prototype.execute) != "undefined") {_RecordType("<8399,8431,337>",(StayConstraint.prototype.execute)); Inst271++; } } catch(e) {}try { if (Inst272 <= 1000 && typeof (StayConstraint.prototype) != "undefined") {_RecordType("<8399,8423,337>",(StayConstraint.prototype)); Inst272++; } } catch(e) {}try { if (Inst273 <= 1000 && typeof (StayConstraint) != "undefined") {_RecordType("<8399,8413,337>",(StayConstraint)); Inst273++; } } catch(e) {}

try { if (Inst274 <= 1000 && typeof (EditConstraint) != "undefined") {_RecordType("<8648,8662,351>",(EditConstraint)); Inst274++; } } catch(e) {}
function EditConstraint(v, str) {
try { if (Inst275 <= 1000 && typeof (v) != "undefined") {_RecordType("<8663,8664,351>",(v)); Inst275++; } } catch(e) {}try { if (Inst276 <= 1000 && typeof (str) != "undefined") {_RecordType("<8666,8669,351>",(str)); Inst276++; } } catch(e) {}
try { if (Inst277 <= 1000 && typeof (EditConstraint.superConstructor.call) != "undefined") {_RecordType("<8675,8711,352>",(EditConstraint.superConstructor.call)); Inst277++; } } catch(e) {}try { if (Inst278 <= 1000 && typeof (EditConstraint.superConstructor) != "undefined") {_RecordType("<8675,8706,352>",(EditConstraint.superConstructor)); Inst278++; } } catch(e) {}try { if (Inst279 <= 1000 && typeof (EditConstraint) != "undefined") {_RecordType("<8675,8689,352>",(EditConstraint)); Inst279++; } } catch(e) {}try { if (Inst280 <= 1000 && typeof (v) != "undefined") {_RecordType("<8718,8719,352>",(v)); Inst280++; } } catch(e) {}try { if (Inst281 <= 1000 && typeof (str) != "undefined") {_RecordType("<8721,8724,352>",(str)); Inst281++; } } catch(e) {}
  EditConstraint.superConstructor.call(this, v, str);
}

try { if (Inst282 <= 1000 && typeof (EditConstraint.inheritsFrom) != "undefined") {_RecordType("<8730,8757,355>",(EditConstraint.inheritsFrom)); Inst282++; } } catch(e) {}try { if (Inst283 <= 1000 && typeof (EditConstraint) != "undefined") {_RecordType("<8730,8744,355>",(EditConstraint)); Inst283++; } } catch(e) {}try { if (Inst284 <= 1000 && typeof (UnaryConstraint) != "undefined") {_RecordType("<8758,8773,355>",(UnaryConstraint)); Inst284++; } } catch(e) {}
EditConstraint.inheritsFrom(UnaryConstraint);
/**
 * Edits indicate that a variable is to be changed by imperative code.
 */

EditConstraint.prototype.isInput = function () {
  return true;
};
try { if (Inst285 <= 1000 && typeof (EditConstraint.prototype.isInput) != "undefined") {_RecordType("<8856,8888,360>",(EditConstraint.prototype.isInput)); Inst285++; } } catch(e) {}try { if (Inst286 <= 1000 && typeof (EditConstraint.prototype) != "undefined") {_RecordType("<8856,8880,360>",(EditConstraint.prototype)); Inst286++; } } catch(e) {}try { if (Inst287 <= 1000 && typeof (EditConstraint) != "undefined") {_RecordType("<8856,8870,360>",(EditConstraint)); Inst287++; } } catch(e) {}

EditConstraint.prototype.execute = function () {
  ;
} // Edit constraints do nothing

/* --- *
 * B i n a r y   C o n s t r a i n t
 * --- */
;
try { if (Inst288 <= 1000 && typeof (EditConstraint.prototype.execute) != "undefined") {_RecordType("<8924,8956,364>",(EditConstraint.prototype.execute)); Inst288++; } } catch(e) {}try { if (Inst289 <= 1000 && typeof (EditConstraint.prototype) != "undefined") {_RecordType("<8924,8948,364>",(EditConstraint.prototype)); Inst289++; } } catch(e) {}try { if (Inst290 <= 1000 && typeof (EditConstraint) != "undefined") {_RecordType("<8924,8938,364>",(EditConstraint)); Inst290++; } } catch(e) {}

try { if (Inst292 <= 1000 && typeof (Object) != "undefined") {_RecordType("<9090,9096,373>",(Object)); Inst292++; } } catch(e) {}
var Direction = new Object();
try { if (Inst291 <= 1000 && typeof (Direction) != "undefined") {_RecordType("<9074,9083,373>",(Direction)); Inst291++; } } catch(e) {}
Direction.NONE = 0;
try { if (Inst293 <= 1000 && typeof (Direction.NONE) != "undefined") {_RecordType("<9100,9114,374>",(Direction.NONE)); Inst293++; } } catch(e) {}try { if (Inst294 <= 1000 && typeof (Direction) != "undefined") {_RecordType("<9100,9109,374>",(Direction)); Inst294++; } } catch(e) {}
Direction.FORWARD = 1;
try { if (Inst295 <= 1000 && typeof (Direction.FORWARD) != "undefined") {_RecordType("<9120,9137,375>",(Direction.FORWARD)); Inst295++; } } catch(e) {}try { if (Inst296 <= 1000 && typeof (Direction) != "undefined") {_RecordType("<9120,9129,375>",(Direction)); Inst296++; } } catch(e) {}
Direction.BACKWARD = -1;
try { if (Inst297 <= 1000 && typeof (Direction.BACKWARD) != "undefined") {_RecordType("<9143,9161,376>",(Direction.BACKWARD)); Inst297++; } } catch(e) {}try { if (Inst298 <= 1000 && typeof (Direction) != "undefined") {_RecordType("<9143,9152,376>",(Direction)); Inst298++; } } catch(e) {}
/**
 * Abstract superclass for constraints having two possible output
 * variables.
 */

try { if (Inst299 <= 1000 && typeof (BinaryConstraint) != "undefined") {_RecordType("<9266,9282,382>",(BinaryConstraint)); Inst299++; } } catch(e) {}
function BinaryConstraint(var1, var2, strength) {
try { if (Inst300 <= 1000 && typeof (var1) != "undefined") {_RecordType("<9283,9287,382>",(var1)); Inst300++; } } catch(e) {}try { if (Inst301 <= 1000 && typeof (var2) != "undefined") {_RecordType("<9289,9293,382>",(var2)); Inst301++; } } catch(e) {}try { if (Inst302 <= 1000 && typeof (strength) != "undefined") {_RecordType("<9295,9303,382>",(strength)); Inst302++; } } catch(e) {}
try { if (Inst303 <= 1000 && typeof (BinaryConstraint.superConstructor.call) != "undefined") {_RecordType("<9309,9347,383>",(BinaryConstraint.superConstructor.call)); Inst303++; } } catch(e) {}try { if (Inst304 <= 1000 && typeof (BinaryConstraint.superConstructor) != "undefined") {_RecordType("<9309,9342,383>",(BinaryConstraint.superConstructor)); Inst304++; } } catch(e) {}try { if (Inst305 <= 1000 && typeof (BinaryConstraint) != "undefined") {_RecordType("<9309,9325,383>",(BinaryConstraint)); Inst305++; } } catch(e) {}try { if (Inst306 <= 1000 && typeof (strength) != "undefined") {_RecordType("<9354,9362,383>",(strength)); Inst306++; } } catch(e) {}
  BinaryConstraint.superConstructor.call(this, strength);
try { if (Inst308 <= 1000 && typeof (var1) != "undefined") {_RecordType("<9377,9381,384>",(var1)); Inst308++; } } catch(e) {}
  this.v1 = var1;
try { if (Inst307 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<9367,9374,384>",(this.v1)); Inst307++; } } catch(e) {}
try { if (Inst310 <= 1000 && typeof (var2) != "undefined") {_RecordType("<9395,9399,385>",(var2)); Inst310++; } } catch(e) {}
  this.v2 = var2;
try { if (Inst309 <= 1000 && typeof (this.v2) != "undefined") {_RecordType("<9385,9392,385>",(this.v2)); Inst309++; } } catch(e) {}
try { if (Inst312 <= 1000 && typeof (Direction.NONE) != "undefined") {_RecordType("<9420,9434,386>",(Direction.NONE)); Inst312++; } } catch(e) {}try { if (Inst313 <= 1000 && typeof (Direction) != "undefined") {_RecordType("<9420,9429,386>",(Direction)); Inst313++; } } catch(e) {}
  this.direction = Direction.NONE;
try { if (Inst311 <= 1000 && typeof (this.direction) != "undefined") {_RecordType("<9403,9417,386>",(this.direction)); Inst311++; } } catch(e) {}
try { if (Inst314 <= 1000 && typeof (this.addConstraint) != "undefined") {_RecordType("<9438,9456,387>",(this.addConstraint)); Inst314++; } } catch(e) {}
  this.addConstraint();
}

try { if (Inst315 <= 1000 && typeof (BinaryConstraint.inheritsFrom) != "undefined") {_RecordType("<9463,9492,390>",(BinaryConstraint.inheritsFrom)); Inst315++; } } catch(e) {}try { if (Inst316 <= 1000 && typeof (BinaryConstraint) != "undefined") {_RecordType("<9463,9479,390>",(BinaryConstraint)); Inst316++; } } catch(e) {}try { if (Inst317 <= 1000 && typeof (Constraint) != "undefined") {_RecordType("<9493,9503,390>",(Constraint)); Inst317++; } } catch(e) {}
BinaryConstraint.inheritsFrom(Constraint);
/**
 * Decides if this constraint can be satisfied and which way it
 * should flow based on the relative strength of the variables related,
 * and record that decision.
 */

BinaryConstraint.prototype.chooseMethod = function (mark) {
try { if (Inst321 <= 1000 && typeof (mark) != "undefined") {_RecordType("<9732,9736,397>",(mark)); Inst321++; } } catch(e) {}
try { if (Inst322 <= 1000 && typeof (this.v1.mark) != "undefined") {_RecordType("<9746,9758,398>",(this.v1.mark)); Inst322++; } } catch(e) {}try { if (Inst323 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<9746,9753,398>",(this.v1)); Inst323++; } } catch(e) {}try { if (Inst324 <= 1000 && typeof (mark) != "undefined") {_RecordType("<9762,9766,398>",(mark)); Inst324++; } } catch(e) {}
  if (this.v1.mark == mark) {
try { if (Inst326 <= 1000 && typeof (this.v2.mark) != "undefined") {_RecordType("<9791,9803,399>",(this.v2.mark)); Inst326++; } } catch(e) {}try { if (Inst327 <= 1000 && typeof (this.v2) != "undefined") {_RecordType("<9791,9798,399>",(this.v2)); Inst327++; } } catch(e) {}try { if (Inst328 <= 1000 && typeof (mark) != "undefined") {_RecordType("<9807,9811,399>",(mark)); Inst328++; } } catch(e) {}try { if (Inst329 <= 1000 && typeof (Strength.stronger) != "undefined") {_RecordType("<9815,9832,399>",(Strength.stronger)); Inst329++; } } catch(e) {}try { if (Inst330 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<9815,9823,399>",(Strength)); Inst330++; } } catch(e) {}try { if (Inst331 <= 1000 && typeof (this.strength) != "undefined") {_RecordType("<9833,9846,399>",(this.strength)); Inst331++; } } catch(e) {}try { if (Inst332 <= 1000 && typeof (this.v2.walkStrength) != "undefined") {_RecordType("<9848,9868,399>",(this.v2.walkStrength)); Inst332++; } } catch(e) {}try { if (Inst333 <= 1000 && typeof (this.v2) != "undefined") {_RecordType("<9848,9855,399>",(this.v2)); Inst333++; } } catch(e) {}try { if (Inst334 <= 1000 && typeof (Direction.FORWARD) != "undefined") {_RecordType("<9872,9889,399>",(Direction.FORWARD)); Inst334++; } } catch(e) {}try { if (Inst335 <= 1000 && typeof (Direction) != "undefined") {_RecordType("<9872,9881,399>",(Direction)); Inst335++; } } catch(e) {}try { if (Inst336 <= 1000 && typeof (Direction.NONE) != "undefined") {_RecordType("<9892,9906,399>",(Direction.NONE)); Inst336++; } } catch(e) {}try { if (Inst337 <= 1000 && typeof (Direction) != "undefined") {_RecordType("<9892,9901,399>",(Direction)); Inst337++; } } catch(e) {}
    this.direction = this.v2.mark != mark && Strength.stronger(this.strength, this.v2.walkStrength) ? Direction.FORWARD : Direction.NONE;
try { if (Inst325 <= 1000 && typeof (this.direction) != "undefined") {_RecordType("<9774,9788,399>",(this.direction)); Inst325++; } } catch(e) {}
  }

try { if (Inst338 <= 1000 && typeof (this.v2.mark) != "undefined") {_RecordType("<9919,9931,402>",(this.v2.mark)); Inst338++; } } catch(e) {}try { if (Inst339 <= 1000 && typeof (this.v2) != "undefined") {_RecordType("<9919,9926,402>",(this.v2)); Inst339++; } } catch(e) {}try { if (Inst340 <= 1000 && typeof (mark) != "undefined") {_RecordType("<9935,9939,402>",(mark)); Inst340++; } } catch(e) {}
  if (this.v2.mark == mark) {
try { if (Inst342 <= 1000 && typeof (this.v1.mark) != "undefined") {_RecordType("<9964,9976,403>",(this.v1.mark)); Inst342++; } } catch(e) {}try { if (Inst343 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<9964,9971,403>",(this.v1)); Inst343++; } } catch(e) {}try { if (Inst344 <= 1000 && typeof (mark) != "undefined") {_RecordType("<9980,9984,403>",(mark)); Inst344++; } } catch(e) {}try { if (Inst345 <= 1000 && typeof (Strength.stronger) != "undefined") {_RecordType("<9988,10005,403>",(Strength.stronger)); Inst345++; } } catch(e) {}try { if (Inst346 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<9988,9996,403>",(Strength)); Inst346++; } } catch(e) {}try { if (Inst347 <= 1000 && typeof (this.strength) != "undefined") {_RecordType("<10006,10019,403>",(this.strength)); Inst347++; } } catch(e) {}try { if (Inst348 <= 1000 && typeof (this.v1.walkStrength) != "undefined") {_RecordType("<10021,10041,403>",(this.v1.walkStrength)); Inst348++; } } catch(e) {}try { if (Inst349 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<10021,10028,403>",(this.v1)); Inst349++; } } catch(e) {}try { if (Inst350 <= 1000 && typeof (Direction.BACKWARD) != "undefined") {_RecordType("<10045,10063,403>",(Direction.BACKWARD)); Inst350++; } } catch(e) {}try { if (Inst351 <= 1000 && typeof (Direction) != "undefined") {_RecordType("<10045,10054,403>",(Direction)); Inst351++; } } catch(e) {}try { if (Inst352 <= 1000 && typeof (Direction.NONE) != "undefined") {_RecordType("<10066,10080,403>",(Direction.NONE)); Inst352++; } } catch(e) {}try { if (Inst353 <= 1000 && typeof (Direction) != "undefined") {_RecordType("<10066,10075,403>",(Direction)); Inst353++; } } catch(e) {}
    this.direction = this.v1.mark != mark && Strength.stronger(this.strength, this.v1.walkStrength) ? Direction.BACKWARD : Direction.NONE;
try { if (Inst341 <= 1000 && typeof (this.direction) != "undefined") {_RecordType("<9947,9961,403>",(this.direction)); Inst341++; } } catch(e) {}
  }

try { if (Inst354 <= 1000 && typeof (Strength.weaker) != "undefined") {_RecordType("<10093,10108,406>",(Strength.weaker)); Inst354++; } } catch(e) {}try { if (Inst355 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<10093,10101,406>",(Strength)); Inst355++; } } catch(e) {}try { if (Inst356 <= 1000 && typeof (this.v1.walkStrength) != "undefined") {_RecordType("<10109,10129,406>",(this.v1.walkStrength)); Inst356++; } } catch(e) {}try { if (Inst357 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<10109,10116,406>",(this.v1)); Inst357++; } } catch(e) {}try { if (Inst358 <= 1000 && typeof (this.v2.walkStrength) != "undefined") {_RecordType("<10131,10151,406>",(this.v2.walkStrength)); Inst358++; } } catch(e) {}try { if (Inst359 <= 1000 && typeof (this.v2) != "undefined") {_RecordType("<10131,10138,406>",(this.v2)); Inst359++; } } catch(e) {}
  if (Strength.weaker(this.v1.walkStrength, this.v2.walkStrength)) {
try { if (Inst361 <= 1000 && typeof (Strength.stronger) != "undefined") {_RecordType("<10177,10194,407>",(Strength.stronger)); Inst361++; } } catch(e) {}try { if (Inst362 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<10177,10185,407>",(Strength)); Inst362++; } } catch(e) {}try { if (Inst363 <= 1000 && typeof (this.strength) != "undefined") {_RecordType("<10195,10208,407>",(this.strength)); Inst363++; } } catch(e) {}try { if (Inst364 <= 1000 && typeof (this.v1.walkStrength) != "undefined") {_RecordType("<10210,10230,407>",(this.v1.walkStrength)); Inst364++; } } catch(e) {}try { if (Inst365 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<10210,10217,407>",(this.v1)); Inst365++; } } catch(e) {}try { if (Inst366 <= 1000 && typeof (Direction.BACKWARD) != "undefined") {_RecordType("<10234,10252,407>",(Direction.BACKWARD)); Inst366++; } } catch(e) {}try { if (Inst367 <= 1000 && typeof (Direction) != "undefined") {_RecordType("<10234,10243,407>",(Direction)); Inst367++; } } catch(e) {}try { if (Inst368 <= 1000 && typeof (Direction.NONE) != "undefined") {_RecordType("<10255,10269,407>",(Direction.NONE)); Inst368++; } } catch(e) {}try { if (Inst369 <= 1000 && typeof (Direction) != "undefined") {_RecordType("<10255,10264,407>",(Direction)); Inst369++; } } catch(e) {}
    this.direction = Strength.stronger(this.strength, this.v1.walkStrength) ? Direction.BACKWARD : Direction.NONE;
try { if (Inst360 <= 1000 && typeof (this.direction) != "undefined") {_RecordType("<10160,10174,407>",(this.direction)); Inst360++; } } catch(e) {}
  } else {
try { if (Inst371 <= 1000 && typeof (Strength.stronger) != "undefined") {_RecordType("<10303,10320,409>",(Strength.stronger)); Inst371++; } } catch(e) {}try { if (Inst372 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<10303,10311,409>",(Strength)); Inst372++; } } catch(e) {}try { if (Inst373 <= 1000 && typeof (this.strength) != "undefined") {_RecordType("<10321,10334,409>",(this.strength)); Inst373++; } } catch(e) {}try { if (Inst374 <= 1000 && typeof (this.v2.walkStrength) != "undefined") {_RecordType("<10336,10356,409>",(this.v2.walkStrength)); Inst374++; } } catch(e) {}try { if (Inst375 <= 1000 && typeof (this.v2) != "undefined") {_RecordType("<10336,10343,409>",(this.v2)); Inst375++; } } catch(e) {}try { if (Inst376 <= 1000 && typeof (Direction.FORWARD) != "undefined") {_RecordType("<10360,10377,409>",(Direction.FORWARD)); Inst376++; } } catch(e) {}try { if (Inst377 <= 1000 && typeof (Direction) != "undefined") {_RecordType("<10360,10369,409>",(Direction)); Inst377++; } } catch(e) {}try { if (Inst378 <= 1000 && typeof (Direction.BACKWARD) != "undefined") {_RecordType("<10380,10398,409>",(Direction.BACKWARD)); Inst378++; } } catch(e) {}try { if (Inst379 <= 1000 && typeof (Direction) != "undefined") {_RecordType("<10380,10389,409>",(Direction)); Inst379++; } } catch(e) {}
    this.direction = Strength.stronger(this.strength, this.v2.walkStrength) ? Direction.FORWARD : Direction.BACKWARD;
try { if (Inst370 <= 1000 && typeof (this.direction) != "undefined") {_RecordType("<10286,10300,409>",(this.direction)); Inst370++; } } catch(e) {}
  }
};
try { if (Inst318 <= 1000 && typeof (BinaryConstraint.prototype.chooseMethod) != "undefined") {_RecordType("<9680,9719,397>",(BinaryConstraint.prototype.chooseMethod)); Inst318++; } } catch(e) {}try { if (Inst319 <= 1000 && typeof (BinaryConstraint.prototype) != "undefined") {_RecordType("<9680,9706,397>",(BinaryConstraint.prototype)); Inst319++; } } catch(e) {}try { if (Inst320 <= 1000 && typeof (BinaryConstraint) != "undefined") {_RecordType("<9680,9696,397>",(BinaryConstraint)); Inst320++; } } catch(e) {}
/**
 * Add this constraint to the constraint graph
 */


BinaryConstraint.prototype.addToGraph = function () {
try { if (Inst383 <= 1000 && typeof (this.v1.addConstraint) != "undefined") {_RecordType("<10520,10541,418>",(this.v1.addConstraint)); Inst383++; } } catch(e) {}try { if (Inst384 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<10520,10527,418>",(this.v1)); Inst384++; } } catch(e) {}
  this.v1.addConstraint(this);
try { if (Inst385 <= 1000 && typeof (this.v2.addConstraint) != "undefined") {_RecordType("<10551,10572,419>",(this.v2.addConstraint)); Inst385++; } } catch(e) {}try { if (Inst386 <= 1000 && typeof (this.v2) != "undefined") {_RecordType("<10551,10558,419>",(this.v2)); Inst386++; } } catch(e) {}
  this.v2.addConstraint(this);
try { if (Inst388 <= 1000 && typeof (Direction.NONE) != "undefined") {_RecordType("<10599,10613,420>",(Direction.NONE)); Inst388++; } } catch(e) {}try { if (Inst389 <= 1000 && typeof (Direction) != "undefined") {_RecordType("<10599,10608,420>",(Direction)); Inst389++; } } catch(e) {}
  this.direction = Direction.NONE;
try { if (Inst387 <= 1000 && typeof (this.direction) != "undefined") {_RecordType("<10582,10596,420>",(this.direction)); Inst387++; } } catch(e) {}
};
try { if (Inst380 <= 1000 && typeof (BinaryConstraint.prototype.addToGraph) != "undefined") {_RecordType("<10464,10501,417>",(BinaryConstraint.prototype.addToGraph)); Inst380++; } } catch(e) {}try { if (Inst381 <= 1000 && typeof (BinaryConstraint.prototype) != "undefined") {_RecordType("<10464,10490,417>",(BinaryConstraint.prototype)); Inst381++; } } catch(e) {}try { if (Inst382 <= 1000 && typeof (BinaryConstraint) != "undefined") {_RecordType("<10464,10480,417>",(BinaryConstraint)); Inst382++; } } catch(e) {}
/**
 * Answer true if this constraint is satisfied in the current solution.
 */


BinaryConstraint.prototype.isSatisfied = function () {
try { if (Inst393 <= 1000 && typeof (this.direction) != "undefined") {_RecordType("<10764,10778,428>",(this.direction)); Inst393++; } } catch(e) {}try { if (Inst394 <= 1000 && typeof (Direction.NONE) != "undefined") {_RecordType("<10782,10796,428>",(Direction.NONE)); Inst394++; } } catch(e) {}try { if (Inst395 <= 1000 && typeof (Direction) != "undefined") {_RecordType("<10782,10791,428>",(Direction)); Inst395++; } } catch(e) {}
  return this.direction != Direction.NONE;
};
try { if (Inst390 <= 1000 && typeof (BinaryConstraint.prototype.isSatisfied) != "undefined") {_RecordType("<10700,10738,427>",(BinaryConstraint.prototype.isSatisfied)); Inst390++; } } catch(e) {}try { if (Inst391 <= 1000 && typeof (BinaryConstraint.prototype) != "undefined") {_RecordType("<10700,10726,427>",(BinaryConstraint.prototype)); Inst391++; } } catch(e) {}try { if (Inst392 <= 1000 && typeof (BinaryConstraint) != "undefined") {_RecordType("<10700,10716,427>",(BinaryConstraint)); Inst392++; } } catch(e) {}
/**
 * Mark the input variable with the given mark.
 */


BinaryConstraint.prototype.markInputs = function (mark) {
try { if (Inst399 <= 1000 && typeof (mark) != "undefined") {_RecordType("<10909,10913,435>",(mark)); Inst399++; } } catch(e) {}
try { if (Inst402 <= 1000 && typeof (mark) != "undefined") {_RecordType("<10939,10943,436>",(mark)); Inst402++; } } catch(e) {}
  this.input().mark = mark;
try { if (Inst400 <= 1000 && typeof (this.input().mark) != "undefined") {_RecordType("<10919,10936,436>",(this.input().mark)); Inst400++; } } catch(e) {}try { if (Inst401 <= 1000 && typeof (this.input) != "undefined") {_RecordType("<10919,10929,436>",(this.input)); Inst401++; } } catch(e) {}
};
try { if (Inst396 <= 1000 && typeof (BinaryConstraint.prototype.markInputs) != "undefined") {_RecordType("<10859,10896,435>",(BinaryConstraint.prototype.markInputs)); Inst396++; } } catch(e) {}try { if (Inst397 <= 1000 && typeof (BinaryConstraint.prototype) != "undefined") {_RecordType("<10859,10885,435>",(BinaryConstraint.prototype)); Inst397++; } } catch(e) {}try { if (Inst398 <= 1000 && typeof (BinaryConstraint) != "undefined") {_RecordType("<10859,10875,435>",(BinaryConstraint)); Inst398++; } } catch(e) {}
/**
 * Returns the current input variable
 */


BinaryConstraint.prototype.input = function () {
try { if (Inst406 <= 1000 && typeof (this.direction) != "undefined") {_RecordType("<11054,11068,444>",(this.direction)); Inst406++; } } catch(e) {}try { if (Inst407 <= 1000 && typeof (Direction.FORWARD) != "undefined") {_RecordType("<11072,11089,444>",(Direction.FORWARD)); Inst407++; } } catch(e) {}try { if (Inst408 <= 1000 && typeof (Direction) != "undefined") {_RecordType("<11072,11081,444>",(Direction)); Inst408++; } } catch(e) {}try { if (Inst409 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<11092,11099,444>",(this.v1)); Inst409++; } } catch(e) {}try { if (Inst410 <= 1000 && typeof (this.v2) != "undefined") {_RecordType("<11102,11109,444>",(this.v2)); Inst410++; } } catch(e) {}
  return this.direction == Direction.FORWARD ? this.v1 : this.v2;
};
try { if (Inst403 <= 1000 && typeof (BinaryConstraint.prototype.input) != "undefined") {_RecordType("<10996,11028,443>",(BinaryConstraint.prototype.input)); Inst403++; } } catch(e) {}try { if (Inst404 <= 1000 && typeof (BinaryConstraint.prototype) != "undefined") {_RecordType("<10996,11022,443>",(BinaryConstraint.prototype)); Inst404++; } } catch(e) {}try { if (Inst405 <= 1000 && typeof (BinaryConstraint) != "undefined") {_RecordType("<10996,11012,443>",(BinaryConstraint)); Inst405++; } } catch(e) {}
/**
 * Returns the current output variable
 */


BinaryConstraint.prototype.output = function () {
try { if (Inst414 <= 1000 && typeof (this.direction) != "undefined") {_RecordType("<11222,11236,452>",(this.direction)); Inst414++; } } catch(e) {}try { if (Inst415 <= 1000 && typeof (Direction.FORWARD) != "undefined") {_RecordType("<11240,11257,452>",(Direction.FORWARD)); Inst415++; } } catch(e) {}try { if (Inst416 <= 1000 && typeof (Direction) != "undefined") {_RecordType("<11240,11249,452>",(Direction)); Inst416++; } } catch(e) {}try { if (Inst417 <= 1000 && typeof (this.v2) != "undefined") {_RecordType("<11260,11267,452>",(this.v2)); Inst417++; } } catch(e) {}try { if (Inst418 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<11270,11277,452>",(this.v1)); Inst418++; } } catch(e) {}
  return this.direction == Direction.FORWARD ? this.v2 : this.v1;
};
try { if (Inst411 <= 1000 && typeof (BinaryConstraint.prototype.output) != "undefined") {_RecordType("<11163,11196,451>",(BinaryConstraint.prototype.output)); Inst411++; } } catch(e) {}try { if (Inst412 <= 1000 && typeof (BinaryConstraint.prototype) != "undefined") {_RecordType("<11163,11189,451>",(BinaryConstraint.prototype)); Inst412++; } } catch(e) {}try { if (Inst413 <= 1000 && typeof (BinaryConstraint) != "undefined") {_RecordType("<11163,11179,451>",(BinaryConstraint)); Inst413++; } } catch(e) {}
/**
 * Calculate the walkabout strength, the stay flag, and, if it is
 * 'stay', the value for the current output of this
 * constraint. Assume this constraint is satisfied.
 */


BinaryConstraint.prototype.recalculate = function () {
try { if (Inst423 <= 1000 && typeof (this.input) != "undefined") {_RecordType("<11529,11539,462>",(this.input)); Inst423++; } } catch(e) {}try { if (Inst425 <= 1000 && typeof (this.output) != "undefined") {_RecordType("<11555,11566,463>",(this.output)); Inst425++; } } catch(e) {}
  var ihn = this.input(),
      out = this.output();
try { if (Inst422 <= 1000 && typeof (ihn) != "undefined") {_RecordType("<11523,11526,462>",(ihn)); Inst422++; } } catch(e) {}try { if (Inst424 <= 1000 && typeof (out) != "undefined") {_RecordType("<11549,11552,463>",(out)); Inst424++; } } catch(e) {}
try { if (Inst428 <= 1000 && typeof (Strength.weakestOf) != "undefined") {_RecordType("<11591,11609,464>",(Strength.weakestOf)); Inst428++; } } catch(e) {}try { if (Inst429 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<11591,11599,464>",(Strength)); Inst429++; } } catch(e) {}try { if (Inst430 <= 1000 && typeof (this.strength) != "undefined") {_RecordType("<11610,11623,464>",(this.strength)); Inst430++; } } catch(e) {}try { if (Inst431 <= 1000 && typeof (ihn.walkStrength) != "undefined") {_RecordType("<11625,11641,464>",(ihn.walkStrength)); Inst431++; } } catch(e) {}try { if (Inst432 <= 1000 && typeof (ihn) != "undefined") {_RecordType("<11625,11628,464>",(ihn)); Inst432++; } } catch(e) {}
  out.walkStrength = Strength.weakestOf(this.strength, ihn.walkStrength);
try { if (Inst426 <= 1000 && typeof (out.walkStrength) != "undefined") {_RecordType("<11572,11588,464>",(out.walkStrength)); Inst426++; } } catch(e) {}try { if (Inst427 <= 1000 && typeof (out) != "undefined") {_RecordType("<11572,11575,464>",(out)); Inst427++; } } catch(e) {}
try { if (Inst435 <= 1000 && typeof (ihn.stay) != "undefined") {_RecordType("<11657,11665,465>",(ihn.stay)); Inst435++; } } catch(e) {}try { if (Inst436 <= 1000 && typeof (ihn) != "undefined") {_RecordType("<11657,11660,465>",(ihn)); Inst436++; } } catch(e) {}
  out.stay = ihn.stay;
try { if (Inst433 <= 1000 && typeof (out.stay) != "undefined") {_RecordType("<11646,11654,465>",(out.stay)); Inst433++; } } catch(e) {}try { if (Inst434 <= 1000 && typeof (out) != "undefined") {_RecordType("<11646,11649,465>",(out)); Inst434++; } } catch(e) {}

try { if (Inst437 <= 1000 && typeof (out.stay) != "undefined") {_RecordType("<11674,11682,467>",(out.stay)); Inst437++; } } catch(e) {}try { if (Inst438 <= 1000 && typeof (out) != "undefined") {_RecordType("<11674,11677,467>",(out)); Inst438++; } } catch(e) {}
  if (out.stay) {
try { if (Inst439 <= 1000 && typeof (this.execute) != "undefined") {_RecordType("<11690,11702,468>",(this.execute)); Inst439++; } } catch(e) {}
    this.execute();
  }
};
try { if (Inst419 <= 1000 && typeof (BinaryConstraint.prototype.recalculate) != "undefined") {_RecordType("<11462,11500,461>",(BinaryConstraint.prototype.recalculate)); Inst419++; } } catch(e) {}try { if (Inst420 <= 1000 && typeof (BinaryConstraint.prototype) != "undefined") {_RecordType("<11462,11488,461>",(BinaryConstraint.prototype)); Inst420++; } } catch(e) {}try { if (Inst421 <= 1000 && typeof (BinaryConstraint) != "undefined") {_RecordType("<11462,11478,461>",(BinaryConstraint)); Inst421++; } } catch(e) {}
/**
 * Record the fact that this constraint is unsatisfied.
 */


BinaryConstraint.prototype.markUnsatisfied = function () {
try { if (Inst444 <= 1000 && typeof (Direction.NONE) != "undefined") {_RecordType("<11857,11871,477>",(Direction.NONE)); Inst444++; } } catch(e) {}try { if (Inst445 <= 1000 && typeof (Direction) != "undefined") {_RecordType("<11857,11866,477>",(Direction)); Inst445++; } } catch(e) {}
  this.direction = Direction.NONE;
try { if (Inst443 <= 1000 && typeof (this.direction) != "undefined") {_RecordType("<11840,11854,477>",(this.direction)); Inst443++; } } catch(e) {}
};
try { if (Inst440 <= 1000 && typeof (BinaryConstraint.prototype.markUnsatisfied) != "undefined") {_RecordType("<11779,11821,476>",(BinaryConstraint.prototype.markUnsatisfied)); Inst440++; } } catch(e) {}try { if (Inst441 <= 1000 && typeof (BinaryConstraint.prototype) != "undefined") {_RecordType("<11779,11805,476>",(BinaryConstraint.prototype)); Inst441++; } } catch(e) {}try { if (Inst442 <= 1000 && typeof (BinaryConstraint) != "undefined") {_RecordType("<11779,11795,476>",(BinaryConstraint)); Inst442++; } } catch(e) {}

BinaryConstraint.prototype.inputsKnown = function (mark) {
try { if (Inst449 <= 1000 && typeof (mark) != "undefined") {_RecordType("<11928,11932,480>",(mark)); Inst449++; } } catch(e) {}
try { if (Inst451 <= 1000 && typeof (this.input) != "undefined") {_RecordType("<11946,11956,481>",(this.input)); Inst451++; } } catch(e) {}
  var i = this.input();
try { if (Inst450 <= 1000 && typeof (i) != "undefined") {_RecordType("<11942,11943,481>",(i)); Inst450++; } } catch(e) {}
try { if (Inst452 <= 1000 && typeof (i.mark) != "undefined") {_RecordType("<11969,11975,482>",(i.mark)); Inst452++; } } catch(e) {}try { if (Inst453 <= 1000 && typeof (i) != "undefined") {_RecordType("<11969,11970,482>",(i)); Inst453++; } } catch(e) {}try { if (Inst454 <= 1000 && typeof (mark) != "undefined") {_RecordType("<11979,11983,482>",(mark)); Inst454++; } } catch(e) {}try { if (Inst455 <= 1000 && typeof (i.stay) != "undefined") {_RecordType("<11987,11993,482>",(i.stay)); Inst455++; } } catch(e) {}try { if (Inst456 <= 1000 && typeof (i) != "undefined") {_RecordType("<11987,11988,482>",(i)); Inst456++; } } catch(e) {}try { if (Inst457 <= 1000 && typeof (i.determinedBy) != "undefined") {_RecordType("<11997,12011,482>",(i.determinedBy)); Inst457++; } } catch(e) {}try { if (Inst458 <= 1000 && typeof (i) != "undefined") {_RecordType("<11997,11998,482>",(i)); Inst458++; } } catch(e) {}
  return i.mark == mark || i.stay || i.determinedBy == null;
};
try { if (Inst446 <= 1000 && typeof (BinaryConstraint.prototype.inputsKnown) != "undefined") {_RecordType("<11877,11915,480>",(BinaryConstraint.prototype.inputsKnown)); Inst446++; } } catch(e) {}try { if (Inst447 <= 1000 && typeof (BinaryConstraint.prototype) != "undefined") {_RecordType("<11877,11903,480>",(BinaryConstraint.prototype)); Inst447++; } } catch(e) {}try { if (Inst448 <= 1000 && typeof (BinaryConstraint) != "undefined") {_RecordType("<11877,11893,480>",(BinaryConstraint)); Inst448++; } } catch(e) {}

BinaryConstraint.prototype.removeFromGraph = function () {
try { if (Inst462 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<12090,12097,486>",(this.v1)); Inst462++; } } catch(e) {}
  if (this.v1 != null) {
try { if (Inst463 <= 1000 && typeof (this.v1.removeConstraint) != "undefined") {_RecordType("<12113,12137,487>",(this.v1.removeConstraint)); Inst463++; } } catch(e) {}try { if (Inst464 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<12113,12120,487>",(this.v1)); Inst464++; } } catch(e) {}
    this.v1.removeConstraint(this);
  }

try { if (Inst465 <= 1000 && typeof (this.v2) != "undefined") {_RecordType("<12156,12163,490>",(this.v2)); Inst465++; } } catch(e) {}
  if (this.v2 != null) {
try { if (Inst466 <= 1000 && typeof (this.v2.removeConstraint) != "undefined") {_RecordType("<12179,12203,491>",(this.v2.removeConstraint)); Inst466++; } } catch(e) {}try { if (Inst467 <= 1000 && typeof (this.v2) != "undefined") {_RecordType("<12179,12186,491>",(this.v2)); Inst467++; } } catch(e) {}
    this.v2.removeConstraint(this);
  }

try { if (Inst469 <= 1000 && typeof (Direction.NONE) != "undefined") {_RecordType("<12235,12249,494>",(Direction.NONE)); Inst469++; } } catch(e) {}try { if (Inst470 <= 1000 && typeof (Direction) != "undefined") {_RecordType("<12235,12244,494>",(Direction)); Inst470++; } } catch(e) {}
  this.direction = Direction.NONE;
try { if (Inst468 <= 1000 && typeof (this.direction) != "undefined") {_RecordType("<12218,12232,494>",(this.direction)); Inst468++; } } catch(e) {}
};
try { if (Inst459 <= 1000 && typeof (BinaryConstraint.prototype.removeFromGraph) != "undefined") {_RecordType("<12025,12067,485>",(BinaryConstraint.prototype.removeFromGraph)); Inst459++; } } catch(e) {}try { if (Inst460 <= 1000 && typeof (BinaryConstraint.prototype) != "undefined") {_RecordType("<12025,12051,485>",(BinaryConstraint.prototype)); Inst460++; } } catch(e) {}try { if (Inst461 <= 1000 && typeof (BinaryConstraint) != "undefined") {_RecordType("<12025,12041,485>",(BinaryConstraint)); Inst461++; } } catch(e) {}
/* --- *
 * S c a l e   C o n s t r a i n t
 * --- */

/**
 * Relates two variables by the linear scaling relationship: "v2 =
 * (v1 * scale) + offset". Either v1 or v2 may be changed to maintain
 * this relationship but the scale factor and offset are considered
 * read-only.
 */


try { if (Inst471 <= 1000 && typeof (ScaleConstraint) != "undefined") {_RecordType("<12547,12562,508>",(ScaleConstraint)); Inst471++; } } catch(e) {}
function ScaleConstraint(src, scale, offset, dest, strength) {
try { if (Inst472 <= 1000 && typeof (src) != "undefined") {_RecordType("<12563,12566,508>",(src)); Inst472++; } } catch(e) {}try { if (Inst473 <= 1000 && typeof (scale) != "undefined") {_RecordType("<12568,12573,508>",(scale)); Inst473++; } } catch(e) {}try { if (Inst474 <= 1000 && typeof (offset) != "undefined") {_RecordType("<12575,12581,508>",(offset)); Inst474++; } } catch(e) {}try { if (Inst475 <= 1000 && typeof (dest) != "undefined") {_RecordType("<12583,12587,508>",(dest)); Inst475++; } } catch(e) {}try { if (Inst476 <= 1000 && typeof (strength) != "undefined") {_RecordType("<12589,12597,508>",(strength)); Inst476++; } } catch(e) {}
try { if (Inst478 <= 1000 && typeof (Direction.NONE) != "undefined") {_RecordType("<12620,12634,509>",(Direction.NONE)); Inst478++; } } catch(e) {}try { if (Inst479 <= 1000 && typeof (Direction) != "undefined") {_RecordType("<12620,12629,509>",(Direction)); Inst479++; } } catch(e) {}
  this.direction = Direction.NONE;
try { if (Inst477 <= 1000 && typeof (this.direction) != "undefined") {_RecordType("<12603,12617,509>",(this.direction)); Inst477++; } } catch(e) {}
try { if (Inst481 <= 1000 && typeof (scale) != "undefined") {_RecordType("<12651,12656,510>",(scale)); Inst481++; } } catch(e) {}
  this.scale = scale;
try { if (Inst480 <= 1000 && typeof (this.scale) != "undefined") {_RecordType("<12638,12648,510>",(this.scale)); Inst480++; } } catch(e) {}
try { if (Inst483 <= 1000 && typeof (offset) != "undefined") {_RecordType("<12674,12680,511>",(offset)); Inst483++; } } catch(e) {}
  this.offset = offset;
try { if (Inst482 <= 1000 && typeof (this.offset) != "undefined") {_RecordType("<12660,12671,511>",(this.offset)); Inst482++; } } catch(e) {}
try { if (Inst484 <= 1000 && typeof (ScaleConstraint.superConstructor.call) != "undefined") {_RecordType("<12684,12721,512>",(ScaleConstraint.superConstructor.call)); Inst484++; } } catch(e) {}try { if (Inst485 <= 1000 && typeof (ScaleConstraint.superConstructor) != "undefined") {_RecordType("<12684,12716,512>",(ScaleConstraint.superConstructor)); Inst485++; } } catch(e) {}try { if (Inst486 <= 1000 && typeof (ScaleConstraint) != "undefined") {_RecordType("<12684,12699,512>",(ScaleConstraint)); Inst486++; } } catch(e) {}try { if (Inst487 <= 1000 && typeof (src) != "undefined") {_RecordType("<12728,12731,512>",(src)); Inst487++; } } catch(e) {}try { if (Inst488 <= 1000 && typeof (dest) != "undefined") {_RecordType("<12733,12737,512>",(dest)); Inst488++; } } catch(e) {}try { if (Inst489 <= 1000 && typeof (strength) != "undefined") {_RecordType("<12739,12747,512>",(strength)); Inst489++; } } catch(e) {}
  ScaleConstraint.superConstructor.call(this, src, dest, strength);
}

try { if (Inst490 <= 1000 && typeof (ScaleConstraint.inheritsFrom) != "undefined") {_RecordType("<12753,12781,515>",(ScaleConstraint.inheritsFrom)); Inst490++; } } catch(e) {}try { if (Inst491 <= 1000 && typeof (ScaleConstraint) != "undefined") {_RecordType("<12753,12768,515>",(ScaleConstraint)); Inst491++; } } catch(e) {}try { if (Inst492 <= 1000 && typeof (BinaryConstraint) != "undefined") {_RecordType("<12782,12798,515>",(BinaryConstraint)); Inst492++; } } catch(e) {}
ScaleConstraint.inheritsFrom(BinaryConstraint);
/**
 * Adds this constraint to the constraint graph.
 */

ScaleConstraint.prototype.addToGraph = function () {
try { if (Inst496 <= 1000 && typeof (ScaleConstraint.superConstructor.prototype.addToGraph.call) != "undefined") {_RecordType("<12914,12972,521>",(ScaleConstraint.superConstructor.prototype.addToGraph.call)); Inst496++; } } catch(e) {}try { if (Inst497 <= 1000 && typeof (ScaleConstraint.superConstructor.prototype.addToGraph) != "undefined") {_RecordType("<12914,12967,521>",(ScaleConstraint.superConstructor.prototype.addToGraph)); Inst497++; } } catch(e) {}try { if (Inst498 <= 1000 && typeof (ScaleConstraint.superConstructor.prototype) != "undefined") {_RecordType("<12914,12956,521>",(ScaleConstraint.superConstructor.prototype)); Inst498++; } } catch(e) {}try { if (Inst499 <= 1000 && typeof (ScaleConstraint.superConstructor) != "undefined") {_RecordType("<12914,12946,521>",(ScaleConstraint.superConstructor)); Inst499++; } } catch(e) {}try { if (Inst500 <= 1000 && typeof (ScaleConstraint) != "undefined") {_RecordType("<12914,12929,521>",(ScaleConstraint)); Inst500++; } } catch(e) {}
  ScaleConstraint.superConstructor.prototype.addToGraph.call(this);
try { if (Inst501 <= 1000 && typeof (this.scale.addConstraint) != "undefined") {_RecordType("<12982,13006,522>",(this.scale.addConstraint)); Inst501++; } } catch(e) {}try { if (Inst502 <= 1000 && typeof (this.scale) != "undefined") {_RecordType("<12982,12992,522>",(this.scale)); Inst502++; } } catch(e) {}
  this.scale.addConstraint(this);
try { if (Inst503 <= 1000 && typeof (this.offset.addConstraint) != "undefined") {_RecordType("<13016,13041,523>",(this.offset.addConstraint)); Inst503++; } } catch(e) {}try { if (Inst504 <= 1000 && typeof (this.offset) != "undefined") {_RecordType("<13016,13027,523>",(this.offset)); Inst504++; } } catch(e) {}
  this.offset.addConstraint(this);
};
try { if (Inst493 <= 1000 && typeof (ScaleConstraint.prototype.addToGraph) != "undefined") {_RecordType("<12859,12895,520>",(ScaleConstraint.prototype.addToGraph)); Inst493++; } } catch(e) {}try { if (Inst494 <= 1000 && typeof (ScaleConstraint.prototype) != "undefined") {_RecordType("<12859,12884,520>",(ScaleConstraint.prototype)); Inst494++; } } catch(e) {}try { if (Inst495 <= 1000 && typeof (ScaleConstraint) != "undefined") {_RecordType("<12859,12874,520>",(ScaleConstraint)); Inst495++; } } catch(e) {}

ScaleConstraint.prototype.removeFromGraph = function () {
try { if (Inst508 <= 1000 && typeof (ScaleConstraint.superConstructor.prototype.removeFromGraph.call) != "undefined") {_RecordType("<13113,13176,527>",(ScaleConstraint.superConstructor.prototype.removeFromGraph.call)); Inst508++; } } catch(e) {}try { if (Inst509 <= 1000 && typeof (ScaleConstraint.superConstructor.prototype.removeFromGraph) != "undefined") {_RecordType("<13113,13171,527>",(ScaleConstraint.superConstructor.prototype.removeFromGraph)); Inst509++; } } catch(e) {}try { if (Inst510 <= 1000 && typeof (ScaleConstraint.superConstructor.prototype) != "undefined") {_RecordType("<13113,13155,527>",(ScaleConstraint.superConstructor.prototype)); Inst510++; } } catch(e) {}try { if (Inst511 <= 1000 && typeof (ScaleConstraint.superConstructor) != "undefined") {_RecordType("<13113,13145,527>",(ScaleConstraint.superConstructor)); Inst511++; } } catch(e) {}try { if (Inst512 <= 1000 && typeof (ScaleConstraint) != "undefined") {_RecordType("<13113,13128,527>",(ScaleConstraint)); Inst512++; } } catch(e) {}
  ScaleConstraint.superConstructor.prototype.removeFromGraph.call(this);

try { if (Inst513 <= 1000 && typeof (this.scale) != "undefined") {_RecordType("<13191,13201,529>",(this.scale)); Inst513++; } } catch(e) {}
  if (this.scale != null) {
try { if (Inst514 <= 1000 && typeof (this.scale.removeConstraint) != "undefined") {_RecordType("<13217,13244,530>",(this.scale.removeConstraint)); Inst514++; } } catch(e) {}try { if (Inst515 <= 1000 && typeof (this.scale) != "undefined") {_RecordType("<13217,13227,530>",(this.scale)); Inst515++; } } catch(e) {}
    this.scale.removeConstraint(this);
  }

try { if (Inst516 <= 1000 && typeof (this.offset) != "undefined") {_RecordType("<13263,13274,533>",(this.offset)); Inst516++; } } catch(e) {}
  if (this.offset != null) {
try { if (Inst517 <= 1000 && typeof (this.offset.removeConstraint) != "undefined") {_RecordType("<13290,13318,534>",(this.offset.removeConstraint)); Inst517++; } } catch(e) {}try { if (Inst518 <= 1000 && typeof (this.offset) != "undefined") {_RecordType("<13290,13301,534>",(this.offset)); Inst518++; } } catch(e) {}
    this.offset.removeConstraint(this);
  }
};
try { if (Inst505 <= 1000 && typeof (ScaleConstraint.prototype.removeFromGraph) != "undefined") {_RecordType("<13053,13094,526>",(ScaleConstraint.prototype.removeFromGraph)); Inst505++; } } catch(e) {}try { if (Inst506 <= 1000 && typeof (ScaleConstraint.prototype) != "undefined") {_RecordType("<13053,13078,526>",(ScaleConstraint.prototype)); Inst506++; } } catch(e) {}try { if (Inst507 <= 1000 && typeof (ScaleConstraint) != "undefined") {_RecordType("<13053,13068,526>",(ScaleConstraint)); Inst507++; } } catch(e) {}

ScaleConstraint.prototype.markInputs = function (mark) {
try { if (Inst522 <= 1000 && typeof (mark) != "undefined") {_RecordType("<13383,13387,538>",(mark)); Inst522++; } } catch(e) {}
try { if (Inst523 <= 1000 && typeof (ScaleConstraint.superConstructor.prototype.markInputs.call) != "undefined") {_RecordType("<13393,13451,539>",(ScaleConstraint.superConstructor.prototype.markInputs.call)); Inst523++; } } catch(e) {}try { if (Inst524 <= 1000 && typeof (ScaleConstraint.superConstructor.prototype.markInputs) != "undefined") {_RecordType("<13393,13446,539>",(ScaleConstraint.superConstructor.prototype.markInputs)); Inst524++; } } catch(e) {}try { if (Inst525 <= 1000 && typeof (ScaleConstraint.superConstructor.prototype) != "undefined") {_RecordType("<13393,13435,539>",(ScaleConstraint.superConstructor.prototype)); Inst525++; } } catch(e) {}try { if (Inst526 <= 1000 && typeof (ScaleConstraint.superConstructor) != "undefined") {_RecordType("<13393,13425,539>",(ScaleConstraint.superConstructor)); Inst526++; } } catch(e) {}try { if (Inst527 <= 1000 && typeof (ScaleConstraint) != "undefined") {_RecordType("<13393,13408,539>",(ScaleConstraint)); Inst527++; } } catch(e) {}try { if (Inst528 <= 1000 && typeof (mark) != "undefined") {_RecordType("<13458,13462,539>",(mark)); Inst528++; } } catch(e) {}
  ScaleConstraint.superConstructor.prototype.markInputs.call(this, mark);
try { if (Inst533 <= 1000 && typeof (mark) != "undefined") {_RecordType("<13504,13508,540>",(mark)); Inst533++; } } catch(e) {}
  this.scale.mark = this.offset.mark = mark;
try { if (Inst529 <= 1000 && typeof (this.scale.mark) != "undefined") {_RecordType("<13467,13482,540>",(this.scale.mark)); Inst529++; } } catch(e) {}try { if (Inst530 <= 1000 && typeof (this.scale) != "undefined") {_RecordType("<13467,13477,540>",(this.scale)); Inst530++; } } catch(e) {}try { if (Inst531 <= 1000 && typeof (this.offset.mark) != "undefined") {_RecordType("<13485,13501,540>",(this.offset.mark)); Inst531++; } } catch(e) {}try { if (Inst532 <= 1000 && typeof (this.offset) != "undefined") {_RecordType("<13485,13496,540>",(this.offset)); Inst532++; } } catch(e) {}
};
try { if (Inst519 <= 1000 && typeof (ScaleConstraint.prototype.markInputs) != "undefined") {_RecordType("<13334,13370,538>",(ScaleConstraint.prototype.markInputs)); Inst519++; } } catch(e) {}try { if (Inst520 <= 1000 && typeof (ScaleConstraint.prototype) != "undefined") {_RecordType("<13334,13359,538>",(ScaleConstraint.prototype)); Inst520++; } } catch(e) {}try { if (Inst521 <= 1000 && typeof (ScaleConstraint) != "undefined") {_RecordType("<13334,13349,538>",(ScaleConstraint)); Inst521++; } } catch(e) {}
/**
 * Enforce this constraint. Assume that it is satisfied.
 */


ScaleConstraint.prototype.execute = function () {
try { if (Inst537 <= 1000 && typeof (this.direction) != "undefined") {_RecordType("<13636,13650,548>",(this.direction)); Inst537++; } } catch(e) {}try { if (Inst538 <= 1000 && typeof (Direction.FORWARD) != "undefined") {_RecordType("<13654,13671,548>",(Direction.FORWARD)); Inst538++; } } catch(e) {}try { if (Inst539 <= 1000 && typeof (Direction) != "undefined") {_RecordType("<13654,13663,548>",(Direction)); Inst539++; } } catch(e) {}
  if (this.direction == Direction.FORWARD) {
try { if (Inst542 <= 1000 && typeof (this.v1.value) != "undefined") {_RecordType("<13695,13708,549>",(this.v1.value)); Inst542++; } } catch(e) {}try { if (Inst543 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<13695,13702,549>",(this.v1)); Inst543++; } } catch(e) {}try { if (Inst544 <= 1000 && typeof (this.scale.value) != "undefined") {_RecordType("<13711,13727,549>",(this.scale.value)); Inst544++; } } catch(e) {}try { if (Inst545 <= 1000 && typeof (this.scale) != "undefined") {_RecordType("<13711,13721,549>",(this.scale)); Inst545++; } } catch(e) {}try { if (Inst546 <= 1000 && typeof (this.offset.value) != "undefined") {_RecordType("<13730,13747,549>",(this.offset.value)); Inst546++; } } catch(e) {}try { if (Inst547 <= 1000 && typeof (this.offset) != "undefined") {_RecordType("<13730,13741,549>",(this.offset)); Inst547++; } } catch(e) {}
    this.v2.value = this.v1.value * this.scale.value + this.offset.value;
try { if (Inst540 <= 1000 && typeof (this.v2.value) != "undefined") {_RecordType("<13679,13692,549>",(this.v2.value)); Inst540++; } } catch(e) {}try { if (Inst541 <= 1000 && typeof (this.v2) != "undefined") {_RecordType("<13679,13686,549>",(this.v2)); Inst541++; } } catch(e) {}
  } else {
try { if (Inst550 <= 1000 && typeof (this.v2.value) != "undefined") {_RecordType("<13781,13794,551>",(this.v2.value)); Inst550++; } } catch(e) {}try { if (Inst551 <= 1000 && typeof (this.v2) != "undefined") {_RecordType("<13781,13788,551>",(this.v2)); Inst551++; } } catch(e) {}try { if (Inst552 <= 1000 && typeof (this.offset.value) != "undefined") {_RecordType("<13797,13814,551>",(this.offset.value)); Inst552++; } } catch(e) {}try { if (Inst553 <= 1000 && typeof (this.offset) != "undefined") {_RecordType("<13797,13808,551>",(this.offset)); Inst553++; } } catch(e) {}try { if (Inst554 <= 1000 && typeof (this.scale.value) != "undefined") {_RecordType("<13818,13834,551>",(this.scale.value)); Inst554++; } } catch(e) {}try { if (Inst555 <= 1000 && typeof (this.scale) != "undefined") {_RecordType("<13818,13828,551>",(this.scale)); Inst555++; } } catch(e) {}
    this.v1.value = (this.v2.value - this.offset.value) / this.scale.value;
try { if (Inst548 <= 1000 && typeof (this.v1.value) != "undefined") {_RecordType("<13764,13777,551>",(this.v1.value)); Inst548++; } } catch(e) {}try { if (Inst549 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<13764,13771,551>",(this.v1)); Inst549++; } } catch(e) {}
  }
};
try { if (Inst534 <= 1000 && typeof (ScaleConstraint.prototype.execute) != "undefined") {_RecordType("<13580,13613,547>",(ScaleConstraint.prototype.execute)); Inst534++; } } catch(e) {}try { if (Inst535 <= 1000 && typeof (ScaleConstraint.prototype) != "undefined") {_RecordType("<13580,13605,547>",(ScaleConstraint.prototype)); Inst535++; } } catch(e) {}try { if (Inst536 <= 1000 && typeof (ScaleConstraint) != "undefined") {_RecordType("<13580,13595,547>",(ScaleConstraint)); Inst536++; } } catch(e) {}
/**
 * Calculate the walkabout strength, the stay flag, and, if it is
 * 'stay', the value for the current output of this constraint. Assume
 * this constraint is satisfied.
 */


ScaleConstraint.prototype.recalculate = function () {
try { if (Inst560 <= 1000 && typeof (this.input) != "undefined") {_RecordType("<14089,14099,562>",(this.input)); Inst560++; } } catch(e) {}try { if (Inst562 <= 1000 && typeof (this.output) != "undefined") {_RecordType("<14115,14126,563>",(this.output)); Inst562++; } } catch(e) {}
  var ihn = this.input(),
      out = this.output();
try { if (Inst559 <= 1000 && typeof (ihn) != "undefined") {_RecordType("<14083,14086,562>",(ihn)); Inst559++; } } catch(e) {}try { if (Inst561 <= 1000 && typeof (out) != "undefined") {_RecordType("<14109,14112,563>",(out)); Inst561++; } } catch(e) {}
try { if (Inst565 <= 1000 && typeof (Strength.weakestOf) != "undefined") {_RecordType("<14151,14169,564>",(Strength.weakestOf)); Inst565++; } } catch(e) {}try { if (Inst566 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<14151,14159,564>",(Strength)); Inst566++; } } catch(e) {}try { if (Inst567 <= 1000 && typeof (this.strength) != "undefined") {_RecordType("<14170,14183,564>",(this.strength)); Inst567++; } } catch(e) {}try { if (Inst568 <= 1000 && typeof (ihn.walkStrength) != "undefined") {_RecordType("<14185,14201,564>",(ihn.walkStrength)); Inst568++; } } catch(e) {}try { if (Inst569 <= 1000 && typeof (ihn) != "undefined") {_RecordType("<14185,14188,564>",(ihn)); Inst569++; } } catch(e) {}
  out.walkStrength = Strength.weakestOf(this.strength, ihn.walkStrength);
try { if (Inst563 <= 1000 && typeof (out.walkStrength) != "undefined") {_RecordType("<14132,14148,564>",(out.walkStrength)); Inst563++; } } catch(e) {}try { if (Inst564 <= 1000 && typeof (out) != "undefined") {_RecordType("<14132,14135,564>",(out)); Inst564++; } } catch(e) {}
try { if (Inst572 <= 1000 && typeof (ihn.stay) != "undefined") {_RecordType("<14217,14225,565>",(ihn.stay)); Inst572++; } } catch(e) {}try { if (Inst573 <= 1000 && typeof (ihn) != "undefined") {_RecordType("<14217,14220,565>",(ihn)); Inst573++; } } catch(e) {}try { if (Inst574 <= 1000 && typeof (this.scale.stay) != "undefined") {_RecordType("<14229,14244,565>",(this.scale.stay)); Inst574++; } } catch(e) {}try { if (Inst575 <= 1000 && typeof (this.scale) != "undefined") {_RecordType("<14229,14239,565>",(this.scale)); Inst575++; } } catch(e) {}try { if (Inst576 <= 1000 && typeof (this.offset.stay) != "undefined") {_RecordType("<14248,14264,565>",(this.offset.stay)); Inst576++; } } catch(e) {}try { if (Inst577 <= 1000 && typeof (this.offset) != "undefined") {_RecordType("<14248,14259,565>",(this.offset)); Inst577++; } } catch(e) {}
  out.stay = ihn.stay && this.scale.stay && this.offset.stay;
try { if (Inst570 <= 1000 && typeof (out.stay) != "undefined") {_RecordType("<14206,14214,565>",(out.stay)); Inst570++; } } catch(e) {}try { if (Inst571 <= 1000 && typeof (out) != "undefined") {_RecordType("<14206,14209,565>",(out)); Inst571++; } } catch(e) {}

try { if (Inst578 <= 1000 && typeof (out.stay) != "undefined") {_RecordType("<14273,14281,567>",(out.stay)); Inst578++; } } catch(e) {}try { if (Inst579 <= 1000 && typeof (out) != "undefined") {_RecordType("<14273,14276,567>",(out)); Inst579++; } } catch(e) {}
  if (out.stay) {
try { if (Inst580 <= 1000 && typeof (this.execute) != "undefined") {_RecordType("<14289,14301,568>",(this.execute)); Inst580++; } } catch(e) {}
    this.execute();
  }
};
try { if (Inst556 <= 1000 && typeof (ScaleConstraint.prototype.recalculate) != "undefined") {_RecordType("<14023,14060,561>",(ScaleConstraint.prototype.recalculate)); Inst556++; } } catch(e) {}try { if (Inst557 <= 1000 && typeof (ScaleConstraint.prototype) != "undefined") {_RecordType("<14023,14048,561>",(ScaleConstraint.prototype)); Inst557++; } } catch(e) {}try { if (Inst558 <= 1000 && typeof (ScaleConstraint) != "undefined") {_RecordType("<14023,14038,561>",(ScaleConstraint)); Inst558++; } } catch(e) {}
/* --- *
 * E q u a l i t  y   C o n s t r a i n t
 * --- */

/**
 * Constrains two variables to have the same value.
 */


try { if (Inst581 <= 1000 && typeof (EqualityConstraint) != "undefined") {_RecordType("<14445,14463,580>",(EqualityConstraint)); Inst581++; } } catch(e) {}
function EqualityConstraint(var1, var2, strength) {
try { if (Inst582 <= 1000 && typeof (var1) != "undefined") {_RecordType("<14464,14468,580>",(var1)); Inst582++; } } catch(e) {}try { if (Inst583 <= 1000 && typeof (var2) != "undefined") {_RecordType("<14470,14474,580>",(var2)); Inst583++; } } catch(e) {}try { if (Inst584 <= 1000 && typeof (strength) != "undefined") {_RecordType("<14476,14484,580>",(strength)); Inst584++; } } catch(e) {}
try { if (Inst585 <= 1000 && typeof (EqualityConstraint.superConstructor.call) != "undefined") {_RecordType("<14490,14530,581>",(EqualityConstraint.superConstructor.call)); Inst585++; } } catch(e) {}try { if (Inst586 <= 1000 && typeof (EqualityConstraint.superConstructor) != "undefined") {_RecordType("<14490,14525,581>",(EqualityConstraint.superConstructor)); Inst586++; } } catch(e) {}try { if (Inst587 <= 1000 && typeof (EqualityConstraint) != "undefined") {_RecordType("<14490,14508,581>",(EqualityConstraint)); Inst587++; } } catch(e) {}try { if (Inst588 <= 1000 && typeof (var1) != "undefined") {_RecordType("<14537,14541,581>",(var1)); Inst588++; } } catch(e) {}try { if (Inst589 <= 1000 && typeof (var2) != "undefined") {_RecordType("<14543,14547,581>",(var2)); Inst589++; } } catch(e) {}try { if (Inst590 <= 1000 && typeof (strength) != "undefined") {_RecordType("<14549,14557,581>",(strength)); Inst590++; } } catch(e) {}
  EqualityConstraint.superConstructor.call(this, var1, var2, strength);
}

try { if (Inst591 <= 1000 && typeof (EqualityConstraint.inheritsFrom) != "undefined") {_RecordType("<14563,14594,584>",(EqualityConstraint.inheritsFrom)); Inst591++; } } catch(e) {}try { if (Inst592 <= 1000 && typeof (EqualityConstraint) != "undefined") {_RecordType("<14563,14581,584>",(EqualityConstraint)); Inst592++; } } catch(e) {}try { if (Inst593 <= 1000 && typeof (BinaryConstraint) != "undefined") {_RecordType("<14595,14611,584>",(BinaryConstraint)); Inst593++; } } catch(e) {}
EqualityConstraint.inheritsFrom(BinaryConstraint);
/**
 * Enforce this constraint. Assume that it is satisfied.
 */

EqualityConstraint.prototype.execute = function () {
try { if (Inst599 <= 1000 && typeof (this.input().value) != "undefined") {_RecordType("<14757,14775,590>",(this.input().value)); Inst599++; } } catch(e) {}try { if (Inst600 <= 1000 && typeof (this.input) != "undefined") {_RecordType("<14757,14767,590>",(this.input)); Inst600++; } } catch(e) {}
  this.output().value = this.input().value;
try { if (Inst597 <= 1000 && typeof (this.output().value) != "undefined") {_RecordType("<14735,14754,590>",(this.output().value)); Inst597++; } } catch(e) {}try { if (Inst598 <= 1000 && typeof (this.output) != "undefined") {_RecordType("<14735,14746,590>",(this.output)); Inst598++; } } catch(e) {}
};
try { if (Inst594 <= 1000 && typeof (EqualityConstraint.prototype.execute) != "undefined") {_RecordType("<14680,14716,589>",(EqualityConstraint.prototype.execute)); Inst594++; } } catch(e) {}try { if (Inst595 <= 1000 && typeof (EqualityConstraint.prototype) != "undefined") {_RecordType("<14680,14708,589>",(EqualityConstraint.prototype)); Inst595++; } } catch(e) {}try { if (Inst596 <= 1000 && typeof (EqualityConstraint) != "undefined") {_RecordType("<14680,14698,589>",(EqualityConstraint)); Inst596++; } } catch(e) {}
/* --- *
 * V a r i a b l e
 * --- */

/**
 * A constrained variable. In addition to its value, it maintain the
 * structure of the constraint graph, the current dataflow graph, and
 * various parameters of interest to the DeltaBlue incremental
 * constraint solver.
 **/


try { if (Inst601 <= 1000 && typeof (Variable) != "undefined") {_RecordType("<15063,15071,604>",(Variable)); Inst601++; } } catch(e) {}
function Variable(name, initialValue) {
try { if (Inst602 <= 1000 && typeof (name) != "undefined") {_RecordType("<15072,15076,604>",(name)); Inst602++; } } catch(e) {}try { if (Inst603 <= 1000 && typeof (initialValue) != "undefined") {_RecordType("<15078,15090,604>",(initialValue)); Inst603++; } } catch(e) {}
try { if (Inst605 <= 1000 && typeof (initialValue) != "undefined") {_RecordType("<15109,15121,605>",(initialValue)); Inst605++; } } catch(e) {}
  this.value = initialValue || 0;
try { if (Inst604 <= 1000 && typeof (this.value) != "undefined") {_RecordType("<15096,15106,605>",(this.value)); Inst604++; } } catch(e) {}
try { if (Inst607 <= 1000 && typeof (OrderedCollection) != "undefined") {_RecordType("<15153,15170,606>",(OrderedCollection)); Inst607++; } } catch(e) {}
  this.constraints = new OrderedCollection();
try { if (Inst606 <= 1000 && typeof (this.constraints) != "undefined") {_RecordType("<15130,15146,606>",(this.constraints)); Inst606++; } } catch(e) {}
  this.determinedBy = null;
try { if (Inst608 <= 1000 && typeof (this.determinedBy) != "undefined") {_RecordType("<15176,15193,607>",(this.determinedBy)); Inst608++; } } catch(e) {}
  this.mark = 0;
try { if (Inst609 <= 1000 && typeof (this.mark) != "undefined") {_RecordType("<15204,15213,608>",(this.mark)); Inst609++; } } catch(e) {}
try { if (Inst611 <= 1000 && typeof (Strength.WEAKEST) != "undefined") {_RecordType("<15241,15257,609>",(Strength.WEAKEST)); Inst611++; } } catch(e) {}try { if (Inst612 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<15241,15249,609>",(Strength)); Inst612++; } } catch(e) {}
  this.walkStrength = Strength.WEAKEST;
try { if (Inst610 <= 1000 && typeof (this.walkStrength) != "undefined") {_RecordType("<15221,15238,609>",(this.walkStrength)); Inst610++; } } catch(e) {}
  this.stay = true;
try { if (Inst613 <= 1000 && typeof (this.stay) != "undefined") {_RecordType("<15261,15270,610>",(this.stay)); Inst613++; } } catch(e) {}
try { if (Inst615 <= 1000 && typeof (name) != "undefined") {_RecordType("<15293,15297,611>",(name)); Inst615++; } } catch(e) {}
  this.name = name;
try { if (Inst614 <= 1000 && typeof (this.name) != "undefined") {_RecordType("<15281,15290,611>",(this.name)); Inst614++; } } catch(e) {}
}
/**
 * Add the given constraint to the set of all constraints that refer
 * this variable.
 */


Variable.prototype.addConstraint = function (c) {
try { if (Inst619 <= 1000 && typeof (c) != "undefined") {_RecordType("<15443,15444,619>",(c)); Inst619++; } } catch(e) {}
try { if (Inst620 <= 1000 && typeof (this.constraints.add) != "undefined") {_RecordType("<15450,15470,620>",(this.constraints.add)); Inst620++; } } catch(e) {}try { if (Inst621 <= 1000 && typeof (this.constraints) != "undefined") {_RecordType("<15450,15466,620>",(this.constraints)); Inst621++; } } catch(e) {}try { if (Inst622 <= 1000 && typeof (c) != "undefined") {_RecordType("<15471,15472,620>",(c)); Inst622++; } } catch(e) {}
  this.constraints.add(c);
};
try { if (Inst616 <= 1000 && typeof (Variable.prototype.addConstraint) != "undefined") {_RecordType("<15398,15430,619>",(Variable.prototype.addConstraint)); Inst616++; } } catch(e) {}try { if (Inst617 <= 1000 && typeof (Variable.prototype) != "undefined") {_RecordType("<15398,15416,619>",(Variable.prototype)); Inst617++; } } catch(e) {}try { if (Inst618 <= 1000 && typeof (Variable) != "undefined") {_RecordType("<15398,15406,619>",(Variable)); Inst618++; } } catch(e) {}
/**
 * Removes all traces of c from this variable.
 */


Variable.prototype.removeConstraint = function (c) {
try { if (Inst626 <= 1000 && typeof (c) != "undefined") {_RecordType("<15583,15584,627>",(c)); Inst626++; } } catch(e) {}
try { if (Inst627 <= 1000 && typeof (this.constraints.remove) != "undefined") {_RecordType("<15590,15613,628>",(this.constraints.remove)); Inst627++; } } catch(e) {}try { if (Inst628 <= 1000 && typeof (this.constraints) != "undefined") {_RecordType("<15590,15606,628>",(this.constraints)); Inst628++; } } catch(e) {}try { if (Inst629 <= 1000 && typeof (c) != "undefined") {_RecordType("<15614,15615,628>",(c)); Inst629++; } } catch(e) {}
  this.constraints.remove(c);

try { if (Inst630 <= 1000 && typeof (this.determinedBy) != "undefined") {_RecordType("<15625,15642,630>",(this.determinedBy)); Inst630++; } } catch(e) {}try { if (Inst631 <= 1000 && typeof (c) != "undefined") {_RecordType("<15646,15647,630>",(c)); Inst631++; } } catch(e) {}
  if (this.determinedBy == c) {
    this.determinedBy = null;
try { if (Inst632 <= 1000 && typeof (this.determinedBy) != "undefined") {_RecordType("<15655,15672,631>",(this.determinedBy)); Inst632++; } } catch(e) {}
  }
};
try { if (Inst623 <= 1000 && typeof (Variable.prototype.removeConstraint) != "undefined") {_RecordType("<15535,15570,627>",(Variable.prototype.removeConstraint)); Inst623++; } } catch(e) {}try { if (Inst624 <= 1000 && typeof (Variable.prototype) != "undefined") {_RecordType("<15535,15553,627>",(Variable.prototype)); Inst624++; } } catch(e) {}try { if (Inst625 <= 1000 && typeof (Variable) != "undefined") {_RecordType("<15535,15543,627>",(Variable)); Inst625++; } } catch(e) {}
/* --- *
 * P l a n n e r
 * --- */

/**
 * The DeltaBlue planner
 */


try { if (Inst633 <= 1000 && typeof (Planner) != "undefined") {_RecordType("<15769,15776,643>",(Planner)); Inst633++; } } catch(e) {}
function Planner() {
  this.currentMark = 0;
try { if (Inst634 <= 1000 && typeof (this.currentMark) != "undefined") {_RecordType("<15783,15799,644>",(this.currentMark)); Inst634++; } } catch(e) {}
}
/**
 * Attempt to satisfy the given constraint and, if successful,
 * incrementally update the dataflow graph.  Details: If satifying
 * the constraint is successful, it may override a weaker constraint
 * on its output. The algorithm attempts to resatisfy that
 * constraint using some other method. This process is repeated
 * until either a) it reaches a variable that was not previously
 * determined by any constraint or b) it reaches a constraint that
 * is too weak to be satisfied using any of its methods. The
 * variables of constraints that have been processed are marked with
 * a unique mark value so that we know where we've been. This allows
 * the algorithm to avoid getting into an infinite loop even if the
 * constraint graph has an inadvertent cycle.
 */


Planner.prototype.incrementalAdd = function (c) {
try { if (Inst638 <= 1000 && typeof (c) != "undefined") {_RecordType("<16629,16630,662>",(c)); Inst638++; } } catch(e) {}
try { if (Inst640 <= 1000 && typeof (this.newMark) != "undefined") {_RecordType("<16647,16659,663>",(this.newMark)); Inst640++; } } catch(e) {}
  var mark = this.newMark();
try { if (Inst639 <= 1000 && typeof (mark) != "undefined") {_RecordType("<16640,16644,663>",(mark)); Inst639++; } } catch(e) {}
try { if (Inst642 <= 1000 && typeof (c.satisfy) != "undefined") {_RecordType("<16682,16691,664>",(c.satisfy)); Inst642++; } } catch(e) {}try { if (Inst643 <= 1000 && typeof (c) != "undefined") {_RecordType("<16682,16683,664>",(c)); Inst643++; } } catch(e) {}try { if (Inst644 <= 1000 && typeof (mark) != "undefined") {_RecordType("<16692,16696,664>",(mark)); Inst644++; } } catch(e) {}
  var overridden = c.satisfy(mark);
try { if (Inst641 <= 1000 && typeof (overridden) != "undefined") {_RecordType("<16669,16679,664>",(overridden)); Inst641++; } } catch(e) {}

try { if (Inst645 <= 1000 && typeof (overridden) != "undefined") {_RecordType("<16709,16719,666>",(overridden)); Inst645++; } } catch(e) {}
  while (overridden != null) {
try { if (Inst647 <= 1000 && typeof (overridden.satisfy) != "undefined") {_RecordType("<16748,16766,667>",(overridden.satisfy)); Inst647++; } } catch(e) {}try { if (Inst648 <= 1000 && typeof (overridden) != "undefined") {_RecordType("<16748,16758,667>",(overridden)); Inst648++; } } catch(e) {}try { if (Inst649 <= 1000 && typeof (mark) != "undefined") {_RecordType("<16767,16771,667>",(mark)); Inst649++; } } catch(e) {}
    overridden = overridden.satisfy(mark);
try { if (Inst646 <= 1000 && typeof (overridden) != "undefined") {_RecordType("<16735,16745,667>",(overridden)); Inst646++; } } catch(e) {}
  }
};
try { if (Inst635 <= 1000 && typeof (Planner.prototype.incrementalAdd) != "undefined") {_RecordType("<16584,16616,662>",(Planner.prototype.incrementalAdd)); Inst635++; } } catch(e) {}try { if (Inst636 <= 1000 && typeof (Planner.prototype) != "undefined") {_RecordType("<16584,16601,662>",(Planner.prototype)); Inst636++; } } catch(e) {}try { if (Inst637 <= 1000 && typeof (Planner) != "undefined") {_RecordType("<16584,16591,662>",(Planner)); Inst637++; } } catch(e) {}
/**
 * Entry point for retracting a constraint. Remove the given
 * constraint and incrementally update the dataflow graph.
 * Details: Retracting the given constraint may allow some currently
 * unsatisfiable downstream constraint to be satisfied. We therefore collect
 * a list of unsatisfied downstream constraints and attempt to
 * satisfy each one in turn. This list is traversed by constraint
 * strength, strongest first, as a heuristic for avoiding
 * unnecessarily adding and then overriding weak constraints.
 * Assume: c is satisfied.
 */


Planner.prototype.incrementalRemove = function (c) {
try { if (Inst653 <= 1000 && typeof (c) != "undefined") {_RecordType("<17381,17382,683>",(c)); Inst653++; } } catch(e) {}
try { if (Inst655 <= 1000 && typeof (c.output) != "undefined") {_RecordType("<17398,17406,684>",(c.output)); Inst655++; } } catch(e) {}try { if (Inst656 <= 1000 && typeof (c) != "undefined") {_RecordType("<17398,17399,684>",(c)); Inst656++; } } catch(e) {}
  var out = c.output();
try { if (Inst654 <= 1000 && typeof (out) != "undefined") {_RecordType("<17392,17395,684>",(out)); Inst654++; } } catch(e) {}
try { if (Inst657 <= 1000 && typeof (c.markUnsatisfied) != "undefined") {_RecordType("<17412,17429,685>",(c.markUnsatisfied)); Inst657++; } } catch(e) {}try { if (Inst658 <= 1000 && typeof (c) != "undefined") {_RecordType("<17412,17413,685>",(c)); Inst658++; } } catch(e) {}
  c.markUnsatisfied();
try { if (Inst659 <= 1000 && typeof (c.removeFromGraph) != "undefined") {_RecordType("<17435,17452,686>",(c.removeFromGraph)); Inst659++; } } catch(e) {}try { if (Inst660 <= 1000 && typeof (c) != "undefined") {_RecordType("<17435,17436,686>",(c)); Inst660++; } } catch(e) {}
  c.removeFromGraph();
try { if (Inst662 <= 1000 && typeof (this.removePropagateFrom) != "undefined") {_RecordType("<17476,17500,687>",(this.removePropagateFrom)); Inst662++; } } catch(e) {}try { if (Inst663 <= 1000 && typeof (out) != "undefined") {_RecordType("<17501,17504,687>",(out)); Inst663++; } } catch(e) {}
  var unsatisfied = this.removePropagateFrom(out);
try { if (Inst661 <= 1000 && typeof (unsatisfied) != "undefined") {_RecordType("<17462,17473,687>",(unsatisfied)); Inst661++; } } catch(e) {}
try { if (Inst665 <= 1000 && typeof (Strength.REQUIRED) != "undefined") {_RecordType("<17524,17541,688>",(Strength.REQUIRED)); Inst665++; } } catch(e) {}try { if (Inst666 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<17524,17532,688>",(Strength)); Inst666++; } } catch(e) {}
  var strength = Strength.REQUIRED;
try { if (Inst664 <= 1000 && typeof (strength) != "undefined") {_RecordType("<17513,17521,688>",(strength)); Inst664++; } } catch(e) {}

try { if (Inst667 <= 1000 && typeof (strength) != "undefined") {_RecordType("<17721,17729,698>",(strength)); Inst667++; } } catch(e) {}try { if (Inst668 <= 1000 && typeof (Strength.WEAKEST) != "undefined") {_RecordType("<17733,17749,698>",(Strength.WEAKEST)); Inst668++; } } catch(e) {}try { if (Inst669 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<17733,17741,698>",(Strength)); Inst669++; } } catch(e) {}
  do {
    for (var u of unsatisfied.elms) {
try { if (Inst670 <= 1000 && typeof (u) != "undefined") {_RecordType("<17564,17565,691>",(u)); Inst670++; } } catch(e) {}try { if (Inst671 <= 1000 && typeof (unsatisfied.elms) != "undefined") {_RecordType("<17569,17585,691>",(unsatisfied.elms)); Inst671++; } } catch(e) {}try { if (Inst672 <= 1000 && typeof (unsatisfied) != "undefined") {_RecordType("<17569,17580,691>",(unsatisfied)); Inst672++; } } catch(e) {}
try { if (Inst673 <= 1000 && typeof (u.strength) != "undefined") {_RecordType("<17599,17609,692>",(u.strength)); Inst673++; } } catch(e) {}try { if (Inst674 <= 1000 && typeof (u) != "undefined") {_RecordType("<17599,17600,692>",(u)); Inst674++; } } catch(e) {}try { if (Inst675 <= 1000 && typeof (strength) != "undefined") {_RecordType("<17613,17621,692>",(strength)); Inst675++; } } catch(e) {}
      if (u.strength == strength) {
try { if (Inst676 <= 1000 && typeof (this.incrementalAdd) != "undefined") {_RecordType("<17633,17652,693>",(this.incrementalAdd)); Inst676++; } } catch(e) {}try { if (Inst677 <= 1000 && typeof (u) != "undefined") {_RecordType("<17653,17654,693>",(u)); Inst677++; } } catch(e) {}
        this.incrementalAdd(u);
      }
    }

try { if (Inst679 <= 1000 && typeof (strength.nextWeaker) != "undefined") {_RecordType("<17687,17706,697>",(strength.nextWeaker)); Inst679++; } } catch(e) {}try { if (Inst680 <= 1000 && typeof (strength) != "undefined") {_RecordType("<17687,17695,697>",(strength)); Inst680++; } } catch(e) {}
    strength = strength.nextWeaker();
try { if (Inst678 <= 1000 && typeof (strength) != "undefined") {_RecordType("<17676,17684,697>",(strength)); Inst678++; } } catch(e) {}
  } while (strength != Strength.WEAKEST);
};
try { if (Inst650 <= 1000 && typeof (Planner.prototype.incrementalRemove) != "undefined") {_RecordType("<17333,17368,683>",(Planner.prototype.incrementalRemove)); Inst650++; } } catch(e) {}try { if (Inst651 <= 1000 && typeof (Planner.prototype) != "undefined") {_RecordType("<17333,17350,683>",(Planner.prototype)); Inst651++; } } catch(e) {}try { if (Inst652 <= 1000 && typeof (Planner) != "undefined") {_RecordType("<17333,17340,683>",(Planner)); Inst652++; } } catch(e) {}
/**
 * Select a previously unused mark value.
 */


Planner.prototype.newMark = function () {
try { if (Inst684 <= 1000 && typeof (this.currentMark) != "undefined") {_RecordType("<17860,17876,706>",(this.currentMark)); Inst684++; } } catch(e) {}
  return ++this.currentMark;
};
try { if (Inst681 <= 1000 && typeof (Planner.prototype.newMark) != "undefined") {_RecordType("<17807,17832,705>",(Planner.prototype.newMark)); Inst681++; } } catch(e) {}try { if (Inst682 <= 1000 && typeof (Planner.prototype) != "undefined") {_RecordType("<17807,17824,705>",(Planner.prototype)); Inst682++; } } catch(e) {}try { if (Inst683 <= 1000 && typeof (Planner) != "undefined") {_RecordType("<17807,17814,705>",(Planner)); Inst683++; } } catch(e) {}
/**
 * Extract a plan for resatisfaction starting from the given source
 * constraints, usually a set of input constraints. This method
 * assumes that stay optimization is desired; the plan will contain
 * only constraints whose output variables are not stay. Constraints
 * that do no computation, such as stay and edit constraints, are
 * not included in the plan.
 * Details: The outputs of a constraint are marked when it is added
 * to the plan under construction. A constraint may be appended to
 * the plan when all its input variables are known. A variable is
 * known if either a) the variable is marked (indicating that has
 * been computed by a constraint appearing earlier in the plan), b)
 * the variable is 'stay' (i.e. it is a constant at plan execution
 * time), or c) the variable is not determined by any
 * constraint. The last provision is for past states of history
 * variables, which are not stay but which are also not computed by
 * any constraint.
 * Assume: sources are all satisfied.
 */


Planner.prototype.makePlan = function (sources) {
try { if (Inst688 <= 1000 && typeof (sources) != "undefined") {_RecordType("<18939,18946,729>",(sources)); Inst688++; } } catch(e) {}
try { if (Inst690 <= 1000 && typeof (this.newMark) != "undefined") {_RecordType("<18963,18975,730>",(this.newMark)); Inst690++; } } catch(e) {}
  var mark = this.newMark();
try { if (Inst689 <= 1000 && typeof (mark) != "undefined") {_RecordType("<18956,18960,730>",(mark)); Inst689++; } } catch(e) {}
try { if (Inst692 <= 1000 && typeof (Plan) != "undefined") {_RecordType("<18996,19000,731>",(Plan)); Inst692++; } } catch(e) {}
  var plan = new Plan();
try { if (Inst691 <= 1000 && typeof (plan) != "undefined") {_RecordType("<18985,18989,731>",(plan)); Inst691++; } } catch(e) {}
try { if (Inst694 <= 1000 && typeof (sources) != "undefined") {_RecordType("<19017,19024,732>",(sources)); Inst694++; } } catch(e) {}
  var todo = sources;
try { if (Inst693 <= 1000 && typeof (todo) != "undefined") {_RecordType("<19010,19014,732>",(todo)); Inst693++; } } catch(e) {}

try { if (Inst695 <= 1000 && typeof (todo.size) != "undefined") {_RecordType("<19036,19045,734>",(todo.size)); Inst695++; } } catch(e) {}try { if (Inst696 <= 1000 && typeof (todo) != "undefined") {_RecordType("<19036,19040,734>",(todo)); Inst696++; } } catch(e) {}
  while (todo.size() > 0) {
try { if (Inst698 <= 1000 && typeof (todo.removeFirst) != "undefined") {_RecordType("<19067,19083,735>",(todo.removeFirst)); Inst698++; } } catch(e) {}try { if (Inst699 <= 1000 && typeof (todo) != "undefined") {_RecordType("<19067,19071,735>",(todo)); Inst699++; } } catch(e) {}
    var c = todo.removeFirst();
try { if (Inst697 <= 1000 && typeof (c) != "undefined") {_RecordType("<19063,19064,735>",(c)); Inst697++; } } catch(e) {}

try { if (Inst700 <= 1000 && typeof (c.output().mark) != "undefined") {_RecordType("<19096,19111,737>",(c.output().mark)); Inst700++; } } catch(e) {}try { if (Inst701 <= 1000 && typeof (c.output) != "undefined") {_RecordType("<19096,19104,737>",(c.output)); Inst701++; } } catch(e) {}try { if (Inst702 <= 1000 && typeof (c) != "undefined") {_RecordType("<19096,19097,737>",(c)); Inst702++; } } catch(e) {}try { if (Inst703 <= 1000 && typeof (mark) != "undefined") {_RecordType("<19115,19119,737>",(mark)); Inst703++; } } catch(e) {}try { if (Inst704 <= 1000 && typeof (c.inputsKnown) != "undefined") {_RecordType("<19123,19136,737>",(c.inputsKnown)); Inst704++; } } catch(e) {}try { if (Inst705 <= 1000 && typeof (c) != "undefined") {_RecordType("<19123,19124,737>",(c)); Inst705++; } } catch(e) {}try { if (Inst706 <= 1000 && typeof (mark) != "undefined") {_RecordType("<19137,19141,737>",(mark)); Inst706++; } } catch(e) {}
    if (c.output().mark != mark && c.inputsKnown(mark)) {
try { if (Inst707 <= 1000 && typeof (plan.addConstraint) != "undefined") {_RecordType("<19152,19170,738>",(plan.addConstraint)); Inst707++; } } catch(e) {}try { if (Inst708 <= 1000 && typeof (plan) != "undefined") {_RecordType("<19152,19156,738>",(plan)); Inst708++; } } catch(e) {}try { if (Inst709 <= 1000 && typeof (c) != "undefined") {_RecordType("<19171,19172,738>",(c)); Inst709++; } } catch(e) {}
      plan.addConstraint(c);
try { if (Inst713 <= 1000 && typeof (mark) != "undefined") {_RecordType("<19199,19203,739>",(mark)); Inst713++; } } catch(e) {}
      c.output().mark = mark;
try { if (Inst710 <= 1000 && typeof (c.output().mark) != "undefined") {_RecordType("<19181,19196,739>",(c.output().mark)); Inst710++; } } catch(e) {}try { if (Inst711 <= 1000 && typeof (c.output) != "undefined") {_RecordType("<19181,19189,739>",(c.output)); Inst711++; } } catch(e) {}try { if (Inst712 <= 1000 && typeof (c) != "undefined") {_RecordType("<19181,19182,739>",(c)); Inst712++; } } catch(e) {}
try { if (Inst714 <= 1000 && typeof (this.addConstraintsConsumingTo) != "undefined") {_RecordType("<19211,19241,740>",(this.addConstraintsConsumingTo)); Inst714++; } } catch(e) {}try { if (Inst715 <= 1000 && typeof (c.output) != "undefined") {_RecordType("<19242,19250,740>",(c.output)); Inst715++; } } catch(e) {}try { if (Inst716 <= 1000 && typeof (c) != "undefined") {_RecordType("<19242,19243,740>",(c)); Inst716++; } } catch(e) {}try { if (Inst717 <= 1000 && typeof (todo) != "undefined") {_RecordType("<19254,19258,740>",(todo)); Inst717++; } } catch(e) {}
      this.addConstraintsConsumingTo(c.output(), todo);
    }
  }

try { if (Inst718 <= 1000 && typeof (plan) != "undefined") {_RecordType("<19281,19285,744>",(plan)); Inst718++; } } catch(e) {}
  return plan;
};
try { if (Inst685 <= 1000 && typeof (Planner.prototype.makePlan) != "undefined") {_RecordType("<18900,18926,729>",(Planner.prototype.makePlan)); Inst685++; } } catch(e) {}try { if (Inst686 <= 1000 && typeof (Planner.prototype) != "undefined") {_RecordType("<18900,18917,729>",(Planner.prototype)); Inst686++; } } catch(e) {}try { if (Inst687 <= 1000 && typeof (Planner) != "undefined") {_RecordType("<18900,18907,729>",(Planner)); Inst687++; } } catch(e) {}
/**
 * Extract a plan for resatisfying starting from the output of the
 * given constraints, usually a set of input constraints.
 */


Planner.prototype.extractPlanFromConstraints = function (constraints) {
try { if (Inst722 <= 1000 && typeof (constraints) != "undefined") {_RecordType("<19482,19493,752>",(constraints)); Inst722++; } } catch(e) {}
try { if (Inst724 <= 1000 && typeof (OrderedCollection) != "undefined") {_RecordType("<19517,19534,753>",(OrderedCollection)); Inst724++; } } catch(e) {}
  var sources = new OrderedCollection();
try { if (Inst723 <= 1000 && typeof (sources) != "undefined") {_RecordType("<19503,19510,753>",(sources)); Inst723++; } } catch(e) {}

  for (var c of constraints.elms) {
try { if (Inst725 <= 1000 && typeof (c) != "undefined") {_RecordType("<19550,19551,755>",(c)); Inst725++; } } catch(e) {}try { if (Inst726 <= 1000 && typeof (constraints.elms) != "undefined") {_RecordType("<19555,19571,755>",(constraints.elms)); Inst726++; } } catch(e) {}try { if (Inst727 <= 1000 && typeof (constraints) != "undefined") {_RecordType("<19555,19566,755>",(constraints)); Inst727++; } } catch(e) {}
try { if (Inst728 <= 1000 && typeof (c.isInput) != "undefined") {_RecordType("<19583,19592,756>",(c.isInput)); Inst728++; } } catch(e) {}try { if (Inst729 <= 1000 && typeof (c) != "undefined") {_RecordType("<19583,19584,756>",(c)); Inst729++; } } catch(e) {}try { if (Inst730 <= 1000 && typeof (c.isSatisfied) != "undefined") {_RecordType("<19598,19611,756>",(c.isSatisfied)); Inst730++; } } catch(e) {}try { if (Inst731 <= 1000 && typeof (c) != "undefined") {_RecordType("<19598,19599,756>",(c)); Inst731++; } } catch(e) {}
    if (c.isInput() && c.isSatisfied()) {
      // not in plan already and eligible for inclusion
try { if (Inst732 <= 1000 && typeof (sources.add) != "undefined") {_RecordType("<19679,19690,758>",(sources.add)); Inst732++; } } catch(e) {}try { if (Inst733 <= 1000 && typeof (sources) != "undefined") {_RecordType("<19679,19686,758>",(sources)); Inst733++; } } catch(e) {}try { if (Inst734 <= 1000 && typeof (c) != "undefined") {_RecordType("<19691,19692,758>",(c)); Inst734++; } } catch(e) {}
      sources.add(c);
    }
  }

try { if (Inst735 <= 1000 && typeof (this.makePlan) != "undefined") {_RecordType("<19715,19728,762>",(this.makePlan)); Inst735++; } } catch(e) {}try { if (Inst736 <= 1000 && typeof (sources) != "undefined") {_RecordType("<19729,19736,762>",(sources)); Inst736++; } } catch(e) {}
  return this.makePlan(sources);
};
try { if (Inst719 <= 1000 && typeof (Planner.prototype.extractPlanFromConstraints) != "undefined") {_RecordType("<19425,19469,752>",(Planner.prototype.extractPlanFromConstraints)); Inst719++; } } catch(e) {}try { if (Inst720 <= 1000 && typeof (Planner.prototype) != "undefined") {_RecordType("<19425,19442,752>",(Planner.prototype)); Inst720++; } } catch(e) {}try { if (Inst721 <= 1000 && typeof (Planner) != "undefined") {_RecordType("<19425,19432,752>",(Planner)); Inst721++; } } catch(e) {}
/**
 * Recompute the walkabout strengths and stay flags of all variables
 * downstream of the given constraint and recompute the actual
 * values of all variables whose stay flag is true. If a cycle is
 * detected, remove the given constraint and answer
 * false. Otherwise, answer true.
 * Details: Cycles are detected when a marked variable is
 * encountered downstream of the given constraint. The sender is
 * assumed to have marked the inputs of the given constraint with
 * the given mark. Thus, encountering a marked node downstream of
 * the output constraint means that there is a path from the
 * constraint's output to one of its inputs.
 */


Planner.prototype.addPropagate = function (c, mark) {
try { if (Inst740 <= 1000 && typeof (c) != "undefined") {_RecordType("<20440,20441,779>",(c)); Inst740++; } } catch(e) {}try { if (Inst741 <= 1000 && typeof (mark) != "undefined") {_RecordType("<20443,20447,779>",(mark)); Inst741++; } } catch(e) {}
try { if (Inst743 <= 1000 && typeof (OrderedCollection) != "undefined") {_RecordType("<20468,20485,780>",(OrderedCollection)); Inst743++; } } catch(e) {}
  var todo = new OrderedCollection();
try { if (Inst742 <= 1000 && typeof (todo) != "undefined") {_RecordType("<20457,20461,780>",(todo)); Inst742++; } } catch(e) {}
try { if (Inst744 <= 1000 && typeof (todo.add) != "undefined") {_RecordType("<20491,20499,781>",(todo.add)); Inst744++; } } catch(e) {}try { if (Inst745 <= 1000 && typeof (todo) != "undefined") {_RecordType("<20491,20495,781>",(todo)); Inst745++; } } catch(e) {}try { if (Inst746 <= 1000 && typeof (c) != "undefined") {_RecordType("<20500,20501,781>",(c)); Inst746++; } } catch(e) {}
  todo.add(c);

try { if (Inst747 <= 1000 && typeof (todo.size) != "undefined") {_RecordType("<20514,20523,783>",(todo.size)); Inst747++; } } catch(e) {}try { if (Inst748 <= 1000 && typeof (todo) != "undefined") {_RecordType("<20514,20518,783>",(todo)); Inst748++; } } catch(e) {}
  while (todo.size() > 0) {
try { if (Inst750 <= 1000 && typeof (todo.removeFirst) != "undefined") {_RecordType("<20545,20561,784>",(todo.removeFirst)); Inst750++; } } catch(e) {}try { if (Inst751 <= 1000 && typeof (todo) != "undefined") {_RecordType("<20545,20549,784>",(todo)); Inst751++; } } catch(e) {}
    var d = todo.removeFirst();
try { if (Inst749 <= 1000 && typeof (d) != "undefined") {_RecordType("<20541,20542,784>",(d)); Inst749++; } } catch(e) {}

try { if (Inst752 <= 1000 && typeof (d.output().mark) != "undefined") {_RecordType("<20574,20589,786>",(d.output().mark)); Inst752++; } } catch(e) {}try { if (Inst753 <= 1000 && typeof (d.output) != "undefined") {_RecordType("<20574,20582,786>",(d.output)); Inst753++; } } catch(e) {}try { if (Inst754 <= 1000 && typeof (d) != "undefined") {_RecordType("<20574,20575,786>",(d)); Inst754++; } } catch(e) {}try { if (Inst755 <= 1000 && typeof (mark) != "undefined") {_RecordType("<20593,20597,786>",(mark)); Inst755++; } } catch(e) {}
    if (d.output().mark == mark) {
try { if (Inst756 <= 1000 && typeof (this.incrementalRemove) != "undefined") {_RecordType("<20607,20629,787>",(this.incrementalRemove)); Inst756++; } } catch(e) {}try { if (Inst757 <= 1000 && typeof (c) != "undefined") {_RecordType("<20630,20631,787>",(c)); Inst757++; } } catch(e) {}
      this.incrementalRemove(c);
      return false;
    }

try { if (Inst758 <= 1000 && typeof (d.recalculate) != "undefined") {_RecordType("<20665,20678,791>",(d.recalculate)); Inst758++; } } catch(e) {}try { if (Inst759 <= 1000 && typeof (d) != "undefined") {_RecordType("<20665,20666,791>",(d)); Inst759++; } } catch(e) {}
    d.recalculate();
try { if (Inst760 <= 1000 && typeof (this.addConstraintsConsumingTo) != "undefined") {_RecordType("<20686,20716,792>",(this.addConstraintsConsumingTo)); Inst760++; } } catch(e) {}try { if (Inst761 <= 1000 && typeof (d.output) != "undefined") {_RecordType("<20717,20725,792>",(d.output)); Inst761++; } } catch(e) {}try { if (Inst762 <= 1000 && typeof (d) != "undefined") {_RecordType("<20717,20718,792>",(d)); Inst762++; } } catch(e) {}try { if (Inst763 <= 1000 && typeof (todo) != "undefined") {_RecordType("<20729,20733,792>",(todo)); Inst763++; } } catch(e) {}
    this.addConstraintsConsumingTo(d.output(), todo);
  }

  return true;
};
try { if (Inst737 <= 1000 && typeof (Planner.prototype.addPropagate) != "undefined") {_RecordType("<20397,20427,779>",(Planner.prototype.addPropagate)); Inst737++; } } catch(e) {}try { if (Inst738 <= 1000 && typeof (Planner.prototype) != "undefined") {_RecordType("<20397,20414,779>",(Planner.prototype)); Inst738++; } } catch(e) {}try { if (Inst739 <= 1000 && typeof (Planner) != "undefined") {_RecordType("<20397,20404,779>",(Planner)); Inst739++; } } catch(e) {}
/**
 * Update the walkabout strengths and stay flags of all variables
 * downstream of the given constraint. Answer a collection of
 * unsatisfied constraints sorted in order of decreasing strength.
 */


Planner.prototype.removePropagateFrom = function (out) {
try { if (Inst767 <= 1000 && typeof (out) != "undefined") {_RecordType("<21014,21017,804>",(out)); Inst767++; } } catch(e) {}
  out.determinedBy = null;
try { if (Inst768 <= 1000 && typeof (out.determinedBy) != "undefined") {_RecordType("<21023,21039,805>",(out.determinedBy)); Inst768++; } } catch(e) {}try { if (Inst769 <= 1000 && typeof (out) != "undefined") {_RecordType("<21023,21026,805>",(out)); Inst769++; } } catch(e) {}
try { if (Inst772 <= 1000 && typeof (Strength.WEAKEST) != "undefined") {_RecordType("<21069,21085,806>",(Strength.WEAKEST)); Inst772++; } } catch(e) {}try { if (Inst773 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<21069,21077,806>",(Strength)); Inst773++; } } catch(e) {}
  out.walkStrength = Strength.WEAKEST;
try { if (Inst770 <= 1000 && typeof (out.walkStrength) != "undefined") {_RecordType("<21050,21066,806>",(out.walkStrength)); Inst770++; } } catch(e) {}try { if (Inst771 <= 1000 && typeof (out) != "undefined") {_RecordType("<21050,21053,806>",(out)); Inst771++; } } catch(e) {}
  out.stay = true;
try { if (Inst774 <= 1000 && typeof (out.stay) != "undefined") {_RecordType("<21089,21097,807>",(out.stay)); Inst774++; } } catch(e) {}try { if (Inst775 <= 1000 && typeof (out) != "undefined") {_RecordType("<21089,21092,807>",(out)); Inst775++; } } catch(e) {}
try { if (Inst777 <= 1000 && typeof (OrderedCollection) != "undefined") {_RecordType("<21130,21147,808>",(OrderedCollection)); Inst777++; } } catch(e) {}
  var unsatisfied = new OrderedCollection();
try { if (Inst776 <= 1000 && typeof (unsatisfied) != "undefined") {_RecordType("<21112,21123,808>",(unsatisfied)); Inst776++; } } catch(e) {}
try { if (Inst779 <= 1000 && typeof (OrderedCollection) != "undefined") {_RecordType("<21168,21185,809>",(OrderedCollection)); Inst779++; } } catch(e) {}
  var todo = new OrderedCollection();
try { if (Inst778 <= 1000 && typeof (todo) != "undefined") {_RecordType("<21157,21161,809>",(todo)); Inst778++; } } catch(e) {}
try { if (Inst780 <= 1000 && typeof (todo.add) != "undefined") {_RecordType("<21191,21199,810>",(todo.add)); Inst780++; } } catch(e) {}try { if (Inst781 <= 1000 && typeof (todo) != "undefined") {_RecordType("<21191,21195,810>",(todo)); Inst781++; } } catch(e) {}try { if (Inst782 <= 1000 && typeof (out) != "undefined") {_RecordType("<21200,21203,810>",(out)); Inst782++; } } catch(e) {}
  todo.add(out);

try { if (Inst783 <= 1000 && typeof (todo.size) != "undefined") {_RecordType("<21216,21225,812>",(todo.size)); Inst783++; } } catch(e) {}try { if (Inst784 <= 1000 && typeof (todo) != "undefined") {_RecordType("<21216,21220,812>",(todo)); Inst784++; } } catch(e) {}
  while (todo.size() > 0) {
try { if (Inst786 <= 1000 && typeof (todo.removeFirst) != "undefined") {_RecordType("<21247,21263,813>",(todo.removeFirst)); Inst786++; } } catch(e) {}try { if (Inst787 <= 1000 && typeof (todo) != "undefined") {_RecordType("<21247,21251,813>",(todo)); Inst787++; } } catch(e) {}
    var v = todo.removeFirst();
try { if (Inst785 <= 1000 && typeof (v) != "undefined") {_RecordType("<21243,21244,813>",(v)); Inst785++; } } catch(e) {}

    for (var c of v.constraints.elms) {
try { if (Inst788 <= 1000 && typeof (c) != "undefined") {_RecordType("<21281,21282,815>",(c)); Inst788++; } } catch(e) {}try { if (Inst789 <= 1000 && typeof (v.constraints.elms) != "undefined") {_RecordType("<21286,21304,815>",(v.constraints.elms)); Inst789++; } } catch(e) {}try { if (Inst790 <= 1000 && typeof (v.constraints) != "undefined") {_RecordType("<21286,21299,815>",(v.constraints)); Inst790++; } } catch(e) {}try { if (Inst791 <= 1000 && typeof (v) != "undefined") {_RecordType("<21286,21287,815>",(v)); Inst791++; } } catch(e) {}
try { if (Inst792 <= 1000 && typeof (c.isSatisfied) != "undefined") {_RecordType("<21319,21332,816>",(c.isSatisfied)); Inst792++; } } catch(e) {}try { if (Inst793 <= 1000 && typeof (c) != "undefined") {_RecordType("<21319,21320,816>",(c)); Inst793++; } } catch(e) {}
      if (!c.isSatisfied()) {
try { if (Inst794 <= 1000 && typeof (unsatisfied.add) != "undefined") {_RecordType("<21346,21361,817>",(unsatisfied.add)); Inst794++; } } catch(e) {}try { if (Inst795 <= 1000 && typeof (unsatisfied) != "undefined") {_RecordType("<21346,21357,817>",(unsatisfied)); Inst795++; } } catch(e) {}try { if (Inst796 <= 1000 && typeof (c) != "undefined") {_RecordType("<21362,21363,817>",(c)); Inst796++; } } catch(e) {}
        unsatisfied.add(c);
      }
    }

try { if (Inst798 <= 1000 && typeof (v.determinedBy) != "undefined") {_RecordType("<21403,21417,821>",(v.determinedBy)); Inst798++; } } catch(e) {}try { if (Inst799 <= 1000 && typeof (v) != "undefined") {_RecordType("<21403,21404,821>",(v)); Inst799++; } } catch(e) {}
    var determining = v.determinedBy;
try { if (Inst797 <= 1000 && typeof (determining) != "undefined") {_RecordType("<21389,21400,821>",(determining)); Inst797++; } } catch(e) {}

    for (var next of v.constraints.elms) {
try { if (Inst800 <= 1000 && typeof (next) != "undefined") {_RecordType("<21433,21437,823>",(next)); Inst800++; } } catch(e) {}try { if (Inst801 <= 1000 && typeof (v.constraints.elms) != "undefined") {_RecordType("<21441,21459,823>",(v.constraints.elms)); Inst801++; } } catch(e) {}try { if (Inst802 <= 1000 && typeof (v.constraints) != "undefined") {_RecordType("<21441,21454,823>",(v.constraints)); Inst802++; } } catch(e) {}try { if (Inst803 <= 1000 && typeof (v) != "undefined") {_RecordType("<21441,21442,823>",(v)); Inst803++; } } catch(e) {}
try { if (Inst804 <= 1000 && typeof (next) != "undefined") {_RecordType("<21473,21477,824>",(next)); Inst804++; } } catch(e) {}try { if (Inst805 <= 1000 && typeof (determining) != "undefined") {_RecordType("<21481,21492,824>",(determining)); Inst805++; } } catch(e) {}try { if (Inst806 <= 1000 && typeof (next.isSatisfied) != "undefined") {_RecordType("<21496,21512,824>",(next.isSatisfied)); Inst806++; } } catch(e) {}try { if (Inst807 <= 1000 && typeof (next) != "undefined") {_RecordType("<21496,21500,824>",(next)); Inst807++; } } catch(e) {}
      if (next != determining && next.isSatisfied()) {
try { if (Inst808 <= 1000 && typeof (next.recalculate) != "undefined") {_RecordType("<21526,21542,825>",(next.recalculate)); Inst808++; } } catch(e) {}try { if (Inst809 <= 1000 && typeof (next) != "undefined") {_RecordType("<21526,21530,825>",(next)); Inst809++; } } catch(e) {}
        next.recalculate();
try { if (Inst810 <= 1000 && typeof (todo.add) != "undefined") {_RecordType("<21554,21562,826>",(todo.add)); Inst810++; } } catch(e) {}try { if (Inst811 <= 1000 && typeof (todo) != "undefined") {_RecordType("<21554,21558,826>",(todo)); Inst811++; } } catch(e) {}try { if (Inst812 <= 1000 && typeof (next.output) != "undefined") {_RecordType("<21563,21574,826>",(next.output)); Inst812++; } } catch(e) {}try { if (Inst813 <= 1000 && typeof (next) != "undefined") {_RecordType("<21563,21567,826>",(next)); Inst813++; } } catch(e) {}
        todo.add(next.output());
      }
    }
  }

try { if (Inst814 <= 1000 && typeof (unsatisfied) != "undefined") {_RecordType("<21607,21618,831>",(unsatisfied)); Inst814++; } } catch(e) {}
  return unsatisfied;
};
try { if (Inst764 <= 1000 && typeof (Planner.prototype.removePropagateFrom) != "undefined") {_RecordType("<20964,21001,804>",(Planner.prototype.removePropagateFrom)); Inst764++; } } catch(e) {}try { if (Inst765 <= 1000 && typeof (Planner.prototype) != "undefined") {_RecordType("<20964,20981,804>",(Planner.prototype)); Inst765++; } } catch(e) {}try { if (Inst766 <= 1000 && typeof (Planner) != "undefined") {_RecordType("<20964,20971,804>",(Planner)); Inst766++; } } catch(e) {}

Planner.prototype.addConstraintsConsumingTo = function (v, coll) {
try { if (Inst818 <= 1000 && typeof (v) != "undefined") {_RecordType("<21680,21681,834>",(v)); Inst818++; } } catch(e) {}try { if (Inst819 <= 1000 && typeof (coll) != "undefined") {_RecordType("<21683,21687,834>",(coll)); Inst819++; } } catch(e) {}
try { if (Inst821 <= 1000 && typeof (v.determinedBy) != "undefined") {_RecordType("<21711,21725,835>",(v.determinedBy)); Inst821++; } } catch(e) {}try { if (Inst822 <= 1000 && typeof (v) != "undefined") {_RecordType("<21711,21712,835>",(v)); Inst822++; } } catch(e) {}
  var determining = v.determinedBy;
try { if (Inst820 <= 1000 && typeof (determining) != "undefined") {_RecordType("<21697,21708,835>",(determining)); Inst820++; } } catch(e) {}
try { if (Inst824 <= 1000 && typeof (v.constraints) != "undefined") {_RecordType("<21738,21751,836>",(v.constraints)); Inst824++; } } catch(e) {}try { if (Inst825 <= 1000 && typeof (v) != "undefined") {_RecordType("<21738,21739,836>",(v)); Inst825++; } } catch(e) {}
  var cc = v.constraints;
try { if (Inst823 <= 1000 && typeof (cc) != "undefined") {_RecordType("<21733,21735,836>",(cc)); Inst823++; } } catch(e) {}

  for (var c of cc.elms) {
try { if (Inst826 <= 1000 && typeof (c) != "undefined") {_RecordType("<21765,21766,838>",(c)); Inst826++; } } catch(e) {}try { if (Inst827 <= 1000 && typeof (cc.elms) != "undefined") {_RecordType("<21770,21777,838>",(cc.elms)); Inst827++; } } catch(e) {}try { if (Inst828 <= 1000 && typeof (cc) != "undefined") {_RecordType("<21770,21772,838>",(cc)); Inst828++; } } catch(e) {}
try { if (Inst829 <= 1000 && typeof (c) != "undefined") {_RecordType("<21789,21790,839>",(c)); Inst829++; } } catch(e) {}try { if (Inst830 <= 1000 && typeof (determining) != "undefined") {_RecordType("<21794,21805,839>",(determining)); Inst830++; } } catch(e) {}try { if (Inst831 <= 1000 && typeof (c.isSatisfied) != "undefined") {_RecordType("<21809,21822,839>",(c.isSatisfied)); Inst831++; } } catch(e) {}try { if (Inst832 <= 1000 && typeof (c) != "undefined") {_RecordType("<21809,21810,839>",(c)); Inst832++; } } catch(e) {}
    if (c != determining && c.isSatisfied()) {
try { if (Inst833 <= 1000 && typeof (coll.add) != "undefined") {_RecordType("<21834,21842,840>",(coll.add)); Inst833++; } } catch(e) {}try { if (Inst834 <= 1000 && typeof (coll) != "undefined") {_RecordType("<21834,21838,840>",(coll)); Inst834++; } } catch(e) {}try { if (Inst835 <= 1000 && typeof (c) != "undefined") {_RecordType("<21843,21844,840>",(c)); Inst835++; } } catch(e) {}
      coll.add(c);
    }
  }
};
try { if (Inst815 <= 1000 && typeof (Planner.prototype.addConstraintsConsumingTo) != "undefined") {_RecordType("<21624,21667,834>",(Planner.prototype.addConstraintsConsumingTo)); Inst815++; } } catch(e) {}try { if (Inst816 <= 1000 && typeof (Planner.prototype) != "undefined") {_RecordType("<21624,21641,834>",(Planner.prototype)); Inst816++; } } catch(e) {}try { if (Inst817 <= 1000 && typeof (Planner) != "undefined") {_RecordType("<21624,21631,834>",(Planner)); Inst817++; } } catch(e) {}
/* --- *
 * P l a n
 * --- */

/**
 * A Plan is an ordered list of constraints to be executed in sequence
 * to resatisfy all currently satisfiable constraints in the face of
 * one or more changing inputs.
 */


try { if (Inst836 <= 1000 && typeof (Plan) != "undefined") {_RecordType("<22082,22086,855>",(Plan)); Inst836++; } } catch(e) {}
function Plan() {
try { if (Inst838 <= 1000 && typeof (OrderedCollection) != "undefined") {_RecordType("<22106,22123,856>",(OrderedCollection)); Inst838++; } } catch(e) {}
  this.v = new OrderedCollection();
try { if (Inst837 <= 1000 && typeof (this.v) != "undefined") {_RecordType("<22093,22099,856>",(this.v)); Inst837++; } } catch(e) {}
}

Plan.prototype.addConstraint = function (c) {
try { if (Inst842 <= 1000 && typeof (c) != "undefined") {_RecordType("<22171,22172,859>",(c)); Inst842++; } } catch(e) {}
try { if (Inst843 <= 1000 && typeof (this.v.add) != "undefined") {_RecordType("<22178,22188,860>",(this.v.add)); Inst843++; } } catch(e) {}try { if (Inst844 <= 1000 && typeof (this.v) != "undefined") {_RecordType("<22178,22184,860>",(this.v)); Inst844++; } } catch(e) {}try { if (Inst845 <= 1000 && typeof (c) != "undefined") {_RecordType("<22189,22190,860>",(c)); Inst845++; } } catch(e) {}
  this.v.add(c);
};
try { if (Inst839 <= 1000 && typeof (Plan.prototype.addConstraint) != "undefined") {_RecordType("<22130,22158,859>",(Plan.prototype.addConstraint)); Inst839++; } } catch(e) {}try { if (Inst840 <= 1000 && typeof (Plan.prototype) != "undefined") {_RecordType("<22130,22144,859>",(Plan.prototype)); Inst840++; } } catch(e) {}try { if (Inst841 <= 1000 && typeof (Plan) != "undefined") {_RecordType("<22130,22134,859>",(Plan)); Inst841++; } } catch(e) {}

Plan.prototype.size = function () {
try { if (Inst849 <= 1000 && typeof (this.v.size) != "undefined") {_RecordType("<22242,22253,864>",(this.v.size)); Inst849++; } } catch(e) {}try { if (Inst850 <= 1000 && typeof (this.v) != "undefined") {_RecordType("<22242,22248,864>",(this.v)); Inst850++; } } catch(e) {}
  return this.v.size();
};
try { if (Inst846 <= 1000 && typeof (Plan.prototype.size) != "undefined") {_RecordType("<22197,22216,863>",(Plan.prototype.size)); Inst846++; } } catch(e) {}try { if (Inst847 <= 1000 && typeof (Plan.prototype) != "undefined") {_RecordType("<22197,22211,863>",(Plan.prototype)); Inst847++; } } catch(e) {}try { if (Inst848 <= 1000 && typeof (Plan) != "undefined") {_RecordType("<22197,22201,863>",(Plan)); Inst848++; } } catch(e) {}

Plan.prototype.constraintAt = function (index) {
try { if (Inst854 <= 1000 && typeof (index) != "undefined") {_RecordType("<22301,22306,867>",(index)); Inst854++; } } catch(e) {}
try { if (Inst855 <= 1000 && typeof (this.v.at) != "undefined") {_RecordType("<22319,22328,868>",(this.v.at)); Inst855++; } } catch(e) {}try { if (Inst856 <= 1000 && typeof (this.v) != "undefined") {_RecordType("<22319,22325,868>",(this.v)); Inst856++; } } catch(e) {}try { if (Inst857 <= 1000 && typeof (index) != "undefined") {_RecordType("<22329,22334,868>",(index)); Inst857++; } } catch(e) {}
  return this.v.at(index);
};
try { if (Inst851 <= 1000 && typeof (Plan.prototype.constraintAt) != "undefined") {_RecordType("<22261,22288,867>",(Plan.prototype.constraintAt)); Inst851++; } } catch(e) {}try { if (Inst852 <= 1000 && typeof (Plan.prototype) != "undefined") {_RecordType("<22261,22275,867>",(Plan.prototype)); Inst852++; } } catch(e) {}try { if (Inst853 <= 1000 && typeof (Plan) != "undefined") {_RecordType("<22261,22265,867>",(Plan)); Inst853++; } } catch(e) {}

Plan.prototype.execute = function () {
  for (var c of this.v.elms) {
try { if (Inst861 <= 1000 && typeof (c) != "undefined") {_RecordType("<22391,22392,872>",(c)); Inst861++; } } catch(e) {}try { if (Inst862 <= 1000 && typeof (this.v.elms) != "undefined") {_RecordType("<22396,22407,872>",(this.v.elms)); Inst862++; } } catch(e) {}try { if (Inst863 <= 1000 && typeof (this.v) != "undefined") {_RecordType("<22396,22402,872>",(this.v)); Inst863++; } } catch(e) {}
try { if (Inst864 <= 1000 && typeof (c.execute) != "undefined") {_RecordType("<22415,22424,873>",(c.execute)); Inst864++; } } catch(e) {}try { if (Inst865 <= 1000 && typeof (c) != "undefined") {_RecordType("<22415,22416,873>",(c)); Inst865++; } } catch(e) {}
    c.execute();
  }
};
try { if (Inst858 <= 1000 && typeof (Plan.prototype.execute) != "undefined") {_RecordType("<22341,22363,871>",(Plan.prototype.execute)); Inst858++; } } catch(e) {}try { if (Inst859 <= 1000 && typeof (Plan.prototype) != "undefined") {_RecordType("<22341,22355,871>",(Plan.prototype)); Inst859++; } } catch(e) {}try { if (Inst860 <= 1000 && typeof (Plan) != "undefined") {_RecordType("<22341,22345,871>",(Plan)); Inst860++; } } catch(e) {}
/* --- *
 * M a i n
 * --- */

/**
 * This is the standard DeltaBlue benchmark. A long chain of equality
 * constraints is constructed with a stay constraint on one end. An
 * edit constraint is then added to the opposite end and the time is
 * measured for adding and removing this constraint, and extracting
 * and executing a constraint satisfaction plan. There are two cases.
 * In case 1, the added constraint is stronger than the stay
 * constraint and values must propagate down the entire length of the
 * chain. In case 2, the added constraint is weaker than the stay
 * constraint so it cannot be accomodated. The cost in this case is,
 * of course, very low. Typical situations lie somewhere between these
 * two extremes.
 */


try { if (Inst866 <= 1000 && typeof (chainTest) != "undefined") {_RecordType("<23184,23193,895>",(chainTest)); Inst866++; } } catch(e) {}
function chainTest(n) {
try { if (Inst867 <= 1000 && typeof (n) != "undefined") {_RecordType("<23194,23195,895>",(n)); Inst867++; } } catch(e) {}
try { if (Inst869 <= 1000 && typeof (Planner) != "undefined") {_RecordType("<23215,23222,896>",(Planner)); Inst869++; } } catch(e) {}
  planner = new Planner();
try { if (Inst868 <= 1000 && typeof (planner) != "undefined") {_RecordType("<23201,23208,896>",(planner)); Inst868++; } } catch(e) {}
  var prev = null,
      first = null,
      last = null; // Build chain of n equality constraints
try { if (Inst870 <= 1000 && typeof (prev) != "undefined") {_RecordType("<23232,23236,897>",(prev)); Inst870++; } } catch(e) {}try { if (Inst871 <= 1000 && typeof (first) != "undefined") {_RecordType("<23251,23256,898>",(first)); Inst871++; } } catch(e) {}try { if (Inst872 <= 1000 && typeof (last) != "undefined") {_RecordType("<23271,23275,899>",(last)); Inst872++; } } catch(e) {}

  for (var i = 0; i <= n; i++) {
try { if (Inst873 <= 1000 && typeof (i) != "undefined") {_RecordType("<23337,23338,901>",(i)); Inst873++; } } catch(e) {}try { if (Inst874 <= 1000 && typeof (i) != "undefined") {_RecordType("<23344,23345,901>",(i)); Inst874++; } } catch(e) {}try { if (Inst875 <= 1000 && typeof (n) != "undefined") {_RecordType("<23349,23350,901>",(n)); Inst875++; } } catch(e) {}try { if (Inst876 <= 1000 && typeof (i) != "undefined") {_RecordType("<23352,23353,901>",(i)); Inst876++; } } catch(e) {}
try { if (Inst878 <= 1000 && typeof (i) != "undefined") {_RecordType("<23380,23381,902>",(i)); Inst878++; } } catch(e) {}
    var name = "v" + i;
try { if (Inst877 <= 1000 && typeof (name) != "undefined") {_RecordType("<23367,23371,902>",(name)); Inst877++; } } catch(e) {}
try { if (Inst880 <= 1000 && typeof (Variable) != "undefined") {_RecordType("<23399,23407,903>",(Variable)); Inst880++; } } catch(e) {}try { if (Inst881 <= 1000 && typeof (name) != "undefined") {_RecordType("<23408,23412,903>",(name)); Inst881++; } } catch(e) {}
    var v = new Variable(name);
try { if (Inst879 <= 1000 && typeof (v) != "undefined") {_RecordType("<23391,23392,903>",(v)); Inst879++; } } catch(e) {}

try { if (Inst882 <= 1000 && typeof (prev) != "undefined") {_RecordType("<23424,23428,905>",(prev)); Inst882++; } } catch(e) {}
    if (prev != null) {
try { if (Inst883 <= 1000 && typeof (EqualityConstraint) != "undefined") {_RecordType("<23450,23468,906>",(EqualityConstraint)); Inst883++; } } catch(e) {}try { if (Inst884 <= 1000 && typeof (prev) != "undefined") {_RecordType("<23469,23473,906>",(prev)); Inst884++; } } catch(e) {}try { if (Inst885 <= 1000 && typeof (v) != "undefined") {_RecordType("<23475,23476,906>",(v)); Inst885++; } } catch(e) {}try { if (Inst886 <= 1000 && typeof (Strength.REQUIRED) != "undefined") {_RecordType("<23478,23495,906>",(Strength.REQUIRED)); Inst886++; } } catch(e) {}try { if (Inst887 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<23478,23486,906>",(Strength)); Inst887++; } } catch(e) {}
      new EqualityConstraint(prev, v, Strength.REQUIRED);
    }

try { if (Inst888 <= 1000 && typeof (i) != "undefined") {_RecordType("<23513,23514,909>",(i)); Inst888++; } } catch(e) {}
    if (i == 0) {
try { if (Inst890 <= 1000 && typeof (v) != "undefined") {_RecordType("<23537,23538,910>",(v)); Inst890++; } } catch(e) {}
      first = v;
try { if (Inst889 <= 1000 && typeof (first) != "undefined") {_RecordType("<23529,23534,910>",(first)); Inst889++; } } catch(e) {}
    }

try { if (Inst891 <= 1000 && typeof (i) != "undefined") {_RecordType("<23555,23556,913>",(i)); Inst891++; } } catch(e) {}try { if (Inst892 <= 1000 && typeof (n) != "undefined") {_RecordType("<23560,23561,913>",(n)); Inst892++; } } catch(e) {}
    if (i == n) {
try { if (Inst894 <= 1000 && typeof (v) != "undefined") {_RecordType("<23578,23579,914>",(v)); Inst894++; } } catch(e) {}
      last = v;
try { if (Inst893 <= 1000 && typeof (last) != "undefined") {_RecordType("<23571,23575,914>",(last)); Inst893++; } } catch(e) {}
    }

try { if (Inst896 <= 1000 && typeof (v) != "undefined") {_RecordType("<23599,23600,917>",(v)); Inst896++; } } catch(e) {}
    prev = v;
try { if (Inst895 <= 1000 && typeof (prev) != "undefined") {_RecordType("<23592,23596,917>",(prev)); Inst895++; } } catch(e) {}
  }

try { if (Inst897 <= 1000 && typeof (StayConstraint) != "undefined") {_RecordType("<23613,23627,920>",(StayConstraint)); Inst897++; } } catch(e) {}try { if (Inst898 <= 1000 && typeof (last) != "undefined") {_RecordType("<23628,23632,920>",(last)); Inst898++; } } catch(e) {}try { if (Inst899 <= 1000 && typeof (Strength.STRONG_DEFAULT) != "undefined") {_RecordType("<23634,23657,920>",(Strength.STRONG_DEFAULT)); Inst899++; } } catch(e) {}try { if (Inst900 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<23634,23642,920>",(Strength)); Inst900++; } } catch(e) {}
  new StayConstraint(last, Strength.STRONG_DEFAULT);
try { if (Inst902 <= 1000 && typeof (EditConstraint) != "undefined") {_RecordType("<23677,23691,921>",(EditConstraint)); Inst902++; } } catch(e) {}try { if (Inst903 <= 1000 && typeof (first) != "undefined") {_RecordType("<23692,23697,921>",(first)); Inst903++; } } catch(e) {}try { if (Inst904 <= 1000 && typeof (Strength.PREFERRED) != "undefined") {_RecordType("<23699,23717,921>",(Strength.PREFERRED)); Inst904++; } } catch(e) {}try { if (Inst905 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<23699,23707,921>",(Strength)); Inst905++; } } catch(e) {}
  var edit = new EditConstraint(first, Strength.PREFERRED);
try { if (Inst901 <= 1000 && typeof (edit) != "undefined") {_RecordType("<23666,23670,921>",(edit)); Inst901++; } } catch(e) {}
try { if (Inst907 <= 1000 && typeof (OrderedCollection) != "undefined") {_RecordType("<23738,23755,922>",(OrderedCollection)); Inst907++; } } catch(e) {}
  var edits = new OrderedCollection();
try { if (Inst906 <= 1000 && typeof (edits) != "undefined") {_RecordType("<23726,23731,922>",(edits)); Inst906++; } } catch(e) {}
try { if (Inst908 <= 1000 && typeof (edits.add) != "undefined") {_RecordType("<23761,23770,923>",(edits.add)); Inst908++; } } catch(e) {}try { if (Inst909 <= 1000 && typeof (edits) != "undefined") {_RecordType("<23761,23766,923>",(edits)); Inst909++; } } catch(e) {}try { if (Inst910 <= 1000 && typeof (edit) != "undefined") {_RecordType("<23771,23775,923>",(edit)); Inst910++; } } catch(e) {}
  edits.add(edit);
try { if (Inst912 <= 1000 && typeof (planner.extractPlanFromConstraints) != "undefined") {_RecordType("<23791,23825,924>",(planner.extractPlanFromConstraints)); Inst912++; } } catch(e) {}try { if (Inst913 <= 1000 && typeof (planner) != "undefined") {_RecordType("<23791,23798,924>",(planner)); Inst913++; } } catch(e) {}try { if (Inst914 <= 1000 && typeof (edits) != "undefined") {_RecordType("<23826,23831,924>",(edits)); Inst914++; } } catch(e) {}
  var plan = planner.extractPlanFromConstraints(edits);
try { if (Inst911 <= 1000 && typeof (plan) != "undefined") {_RecordType("<23784,23788,924>",(plan)); Inst911++; } } catch(e) {}

  for (var i = 0; i < 100; i++) {
try { if (Inst915 <= 1000 && typeof (i) != "undefined") {_RecordType("<23846,23847,926>",(i)); Inst915++; } } catch(e) {}try { if (Inst916 <= 1000 && typeof (i) != "undefined") {_RecordType("<23853,23854,926>",(i)); Inst916++; } } catch(e) {}try { if (Inst917 <= 1000 && typeof (i) != "undefined") {_RecordType("<23862,23863,926>",(i)); Inst917++; } } catch(e) {}
try { if (Inst920 <= 1000 && typeof (i) != "undefined") {_RecordType("<23887,23888,927>",(i)); Inst920++; } } catch(e) {}
    first.value = i;
try { if (Inst918 <= 1000 && typeof (first.value) != "undefined") {_RecordType("<23873,23884,927>",(first.value)); Inst918++; } } catch(e) {}try { if (Inst919 <= 1000 && typeof (first) != "undefined") {_RecordType("<23873,23878,927>",(first)); Inst919++; } } catch(e) {}
try { if (Inst921 <= 1000 && typeof (plan.execute) != "undefined") {_RecordType("<23894,23906,928>",(plan.execute)); Inst921++; } } catch(e) {}try { if (Inst922 <= 1000 && typeof (plan) != "undefined") {_RecordType("<23894,23898,928>",(plan)); Inst922++; } } catch(e) {}
    plan.execute();

try { if (Inst923 <= 1000 && typeof (last.value) != "undefined") {_RecordType("<23919,23929,930>",(last.value)); Inst923++; } } catch(e) {}try { if (Inst924 <= 1000 && typeof (last) != "undefined") {_RecordType("<23919,23923,930>",(last)); Inst924++; } } catch(e) {}try { if (Inst925 <= 1000 && typeof (i) != "undefined") {_RecordType("<23933,23934,930>",(i)); Inst925++; } } catch(e) {}
    if (last.value != i) {
try { if (Inst926 <= 1000 && typeof (alert) != "undefined") {_RecordType("<23944,23949,931>",(alert)); Inst926++; } } catch(e) {}
      alert("Chain test failed.");
    }
  }
}
/**
 * This test constructs a two sets of variables related to each
 * other by a simple linear transformation (scale and offset). The
 * time is measured to change a variable on either side of the
 * mapping and to change the scale and offset factors.
 */


try { if (Inst927 <= 1000 && typeof (projectionTest) != "undefined") {_RecordType("<24253,24267,943>",(projectionTest)); Inst927++; } } catch(e) {}
function projectionTest(n) {
try { if (Inst928 <= 1000 && typeof (n) != "undefined") {_RecordType("<24268,24269,943>",(n)); Inst928++; } } catch(e) {}
try { if (Inst930 <= 1000 && typeof (Planner) != "undefined") {_RecordType("<24289,24296,944>",(Planner)); Inst930++; } } catch(e) {}
  planner = new Planner();
try { if (Inst929 <= 1000 && typeof (planner) != "undefined") {_RecordType("<24275,24282,944>",(planner)); Inst929++; } } catch(e) {}
try { if (Inst932 <= 1000 && typeof (Variable) != "undefined") {_RecordType("<24318,24326,945>",(Variable)); Inst932++; } } catch(e) {}
  var scale = new Variable("scale", 10);
try { if (Inst931 <= 1000 && typeof (scale) != "undefined") {_RecordType("<24306,24311,945>",(scale)); Inst931++; } } catch(e) {}
try { if (Inst934 <= 1000 && typeof (Variable) != "undefined") {_RecordType("<24360,24368,946>",(Variable)); Inst934++; } } catch(e) {}
  var offset = new Variable("offset", 1000);
try { if (Inst933 <= 1000 && typeof (offset) != "undefined") {_RecordType("<24347,24353,946>",(offset)); Inst933++; } } catch(e) {}
  var src = null,
      dst = null;
try { if (Inst935 <= 1000 && typeof (src) != "undefined") {_RecordType("<24392,24395,947>",(src)); Inst935++; } } catch(e) {}try { if (Inst936 <= 1000 && typeof (dst) != "undefined") {_RecordType("<24410,24413,948>",(dst)); Inst936++; } } catch(e) {}
try { if (Inst938 <= 1000 && typeof (OrderedCollection) != "undefined") {_RecordType("<24440,24457,949>",(OrderedCollection)); Inst938++; } } catch(e) {}
  var dests = new OrderedCollection();
try { if (Inst937 <= 1000 && typeof (dests) != "undefined") {_RecordType("<24428,24433,949>",(dests)); Inst937++; } } catch(e) {}

  for (var i = 0; i < n; i++) {
try { if (Inst939 <= 1000 && typeof (i) != "undefined") {_RecordType("<24473,24474,951>",(i)); Inst939++; } } catch(e) {}try { if (Inst940 <= 1000 && typeof (i) != "undefined") {_RecordType("<24480,24481,951>",(i)); Inst940++; } } catch(e) {}try { if (Inst941 <= 1000 && typeof (n) != "undefined") {_RecordType("<24484,24485,951>",(n)); Inst941++; } } catch(e) {}try { if (Inst942 <= 1000 && typeof (i) != "undefined") {_RecordType("<24487,24488,951>",(i)); Inst942++; } } catch(e) {}
try { if (Inst944 <= 1000 && typeof (Variable) != "undefined") {_RecordType("<24508,24516,952>",(Variable)); Inst944++; } } catch(e) {}try { if (Inst945 <= 1000 && typeof (i) != "undefined") {_RecordType("<24525,24526,952>",(i)); Inst945++; } } catch(e) {}try { if (Inst946 <= 1000 && typeof (i) != "undefined") {_RecordType("<24528,24529,952>",(i)); Inst946++; } } catch(e) {}
    src = new Variable("src" + i, i);
try { if (Inst943 <= 1000 && typeof (src) != "undefined") {_RecordType("<24498,24501,952>",(src)); Inst943++; } } catch(e) {}
try { if (Inst948 <= 1000 && typeof (Variable) != "undefined") {_RecordType("<24546,24554,953>",(Variable)); Inst948++; } } catch(e) {}try { if (Inst949 <= 1000 && typeof (i) != "undefined") {_RecordType("<24563,24564,953>",(i)); Inst949++; } } catch(e) {}try { if (Inst950 <= 1000 && typeof (i) != "undefined") {_RecordType("<24566,24567,953>",(i)); Inst950++; } } catch(e) {}
    dst = new Variable("dst" + i, i);
try { if (Inst947 <= 1000 && typeof (dst) != "undefined") {_RecordType("<24536,24539,953>",(dst)); Inst947++; } } catch(e) {}
try { if (Inst951 <= 1000 && typeof (dests.add) != "undefined") {_RecordType("<24574,24583,954>",(dests.add)); Inst951++; } } catch(e) {}try { if (Inst952 <= 1000 && typeof (dests) != "undefined") {_RecordType("<24574,24579,954>",(dests)); Inst952++; } } catch(e) {}try { if (Inst953 <= 1000 && typeof (dst) != "undefined") {_RecordType("<24584,24587,954>",(dst)); Inst953++; } } catch(e) {}
    dests.add(dst);
try { if (Inst954 <= 1000 && typeof (StayConstraint) != "undefined") {_RecordType("<24598,24612,955>",(StayConstraint)); Inst954++; } } catch(e) {}try { if (Inst955 <= 1000 && typeof (src) != "undefined") {_RecordType("<24613,24616,955>",(src)); Inst955++; } } catch(e) {}try { if (Inst956 <= 1000 && typeof (Strength.NORMAL) != "undefined") {_RecordType("<24618,24633,955>",(Strength.NORMAL)); Inst956++; } } catch(e) {}try { if (Inst957 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<24618,24626,955>",(Strength)); Inst957++; } } catch(e) {}
    new StayConstraint(src, Strength.NORMAL);
try { if (Inst958 <= 1000 && typeof (ScaleConstraint) != "undefined") {_RecordType("<24644,24659,956>",(ScaleConstraint)); Inst958++; } } catch(e) {}try { if (Inst959 <= 1000 && typeof (src) != "undefined") {_RecordType("<24660,24663,956>",(src)); Inst959++; } } catch(e) {}try { if (Inst960 <= 1000 && typeof (scale) != "undefined") {_RecordType("<24665,24670,956>",(scale)); Inst960++; } } catch(e) {}try { if (Inst961 <= 1000 && typeof (offset) != "undefined") {_RecordType("<24672,24678,956>",(offset)); Inst961++; } } catch(e) {}try { if (Inst962 <= 1000 && typeof (dst) != "undefined") {_RecordType("<24680,24683,956>",(dst)); Inst962++; } } catch(e) {}try { if (Inst963 <= 1000 && typeof (Strength.REQUIRED) != "undefined") {_RecordType("<24685,24702,956>",(Strength.REQUIRED)); Inst963++; } } catch(e) {}try { if (Inst964 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<24685,24693,956>",(Strength)); Inst964++; } } catch(e) {}
    new ScaleConstraint(src, scale, offset, dst, Strength.REQUIRED);
  }

try { if (Inst965 <= 1000 && typeof (change) != "undefined") {_RecordType("<24712,24718,959>",(change)); Inst965++; } } catch(e) {}try { if (Inst966 <= 1000 && typeof (src) != "undefined") {_RecordType("<24719,24722,959>",(src)); Inst966++; } } catch(e) {}
  change(src, 17);

try { if (Inst967 <= 1000 && typeof (dst.value) != "undefined") {_RecordType("<24736,24745,961>",(dst.value)); Inst967++; } } catch(e) {}try { if (Inst968 <= 1000 && typeof (dst) != "undefined") {_RecordType("<24736,24739,961>",(dst)); Inst968++; } } catch(e) {}
  if (dst.value != 1170) {
try { if (Inst969 <= 1000 && typeof (alert) != "undefined") {_RecordType("<24761,24766,962>",(alert)); Inst969++; } } catch(e) {}
    alert("Projection 1 failed");
  }

try { if (Inst970 <= 1000 && typeof (change) != "undefined") {_RecordType("<24798,24804,965>",(change)); Inst970++; } } catch(e) {}try { if (Inst971 <= 1000 && typeof (dst) != "undefined") {_RecordType("<24805,24808,965>",(dst)); Inst971++; } } catch(e) {}
  change(dst, 1050);

try { if (Inst972 <= 1000 && typeof (src.value) != "undefined") {_RecordType("<24824,24833,967>",(src.value)); Inst972++; } } catch(e) {}try { if (Inst973 <= 1000 && typeof (src) != "undefined") {_RecordType("<24824,24827,967>",(src)); Inst973++; } } catch(e) {}
  if (src.value != 5) {
try { if (Inst974 <= 1000 && typeof (alert) != "undefined") {_RecordType("<24846,24851,968>",(alert)); Inst974++; } } catch(e) {}
    alert("Projection 2 failed");
  }

try { if (Inst975 <= 1000 && typeof (change) != "undefined") {_RecordType("<24883,24889,971>",(change)); Inst975++; } } catch(e) {}try { if (Inst976 <= 1000 && typeof (scale) != "undefined") {_RecordType("<24890,24895,971>",(scale)); Inst976++; } } catch(e) {}
  change(scale, 5);

  for (var i = 0; i < n - 1; i++) {
try { if (Inst977 <= 1000 && typeof (i) != "undefined") {_RecordType("<24913,24914,973>",(i)); Inst977++; } } catch(e) {}try { if (Inst978 <= 1000 && typeof (i) != "undefined") {_RecordType("<24920,24921,973>",(i)); Inst978++; } } catch(e) {}try { if (Inst979 <= 1000 && typeof (n) != "undefined") {_RecordType("<24924,24925,973>",(n)); Inst979++; } } catch(e) {}try { if (Inst980 <= 1000 && typeof (i) != "undefined") {_RecordType("<24931,24932,973>",(i)); Inst980++; } } catch(e) {}
try { if (Inst981 <= 1000 && typeof (dests.at(i).value) != "undefined") {_RecordType("<24946,24963,974>",(dests.at(i).value)); Inst981++; } } catch(e) {}try { if (Inst982 <= 1000 && typeof (dests.at) != "undefined") {_RecordType("<24946,24954,974>",(dests.at)); Inst982++; } } catch(e) {}try { if (Inst983 <= 1000 && typeof (dests) != "undefined") {_RecordType("<24946,24951,974>",(dests)); Inst983++; } } catch(e) {}try { if (Inst984 <= 1000 && typeof (i) != "undefined") {_RecordType("<24955,24956,974>",(i)); Inst984++; } } catch(e) {}try { if (Inst985 <= 1000 && typeof (i) != "undefined") {_RecordType("<24967,24968,974>",(i)); Inst985++; } } catch(e) {}
    if (dests.at(i).value != i * 5 + 1000) {
try { if (Inst986 <= 1000 && typeof (alert) != "undefined") {_RecordType("<24989,24994,975>",(alert)); Inst986++; } } catch(e) {}
      alert("Projection 3 failed");
    }
  }

try { if (Inst987 <= 1000 && typeof (change) != "undefined") {_RecordType("<25032,25038,979>",(change)); Inst987++; } } catch(e) {}try { if (Inst988 <= 1000 && typeof (offset) != "undefined") {_RecordType("<25039,25045,979>",(offset)); Inst988++; } } catch(e) {}
  change(offset, 2000);

  for (var i = 0; i < n - 1; i++) {
try { if (Inst989 <= 1000 && typeof (i) != "undefined") {_RecordType("<25066,25067,981>",(i)); Inst989++; } } catch(e) {}try { if (Inst990 <= 1000 && typeof (i) != "undefined") {_RecordType("<25073,25074,981>",(i)); Inst990++; } } catch(e) {}try { if (Inst991 <= 1000 && typeof (n) != "undefined") {_RecordType("<25077,25078,981>",(n)); Inst991++; } } catch(e) {}try { if (Inst992 <= 1000 && typeof (i) != "undefined") {_RecordType("<25084,25085,981>",(i)); Inst992++; } } catch(e) {}
try { if (Inst993 <= 1000 && typeof (dests.at(i).value) != "undefined") {_RecordType("<25099,25116,982>",(dests.at(i).value)); Inst993++; } } catch(e) {}try { if (Inst994 <= 1000 && typeof (dests.at) != "undefined") {_RecordType("<25099,25107,982>",(dests.at)); Inst994++; } } catch(e) {}try { if (Inst995 <= 1000 && typeof (dests) != "undefined") {_RecordType("<25099,25104,982>",(dests)); Inst995++; } } catch(e) {}try { if (Inst996 <= 1000 && typeof (i) != "undefined") {_RecordType("<25108,25109,982>",(i)); Inst996++; } } catch(e) {}try { if (Inst997 <= 1000 && typeof (i) != "undefined") {_RecordType("<25120,25121,982>",(i)); Inst997++; } } catch(e) {}
    if (dests.at(i).value != i * 5 + 2000) {
try { if (Inst998 <= 1000 && typeof (alert) != "undefined") {_RecordType("<25142,25147,983>",(alert)); Inst998++; } } catch(e) {}
      alert("Projection 4 failed");
    }
  }
}

try { if (Inst999 <= 1000 && typeof (change) != "undefined") {_RecordType("<25194,25200,988>",(change)); Inst999++; } } catch(e) {}
function change(v, newValue) {
try { if (Inst1000 <= 1000 && typeof (v) != "undefined") {_RecordType("<25201,25202,988>",(v)); Inst1000++; } } catch(e) {}try { if (Inst1001 <= 1000 && typeof (newValue) != "undefined") {_RecordType("<25204,25212,988>",(newValue)); Inst1001++; } } catch(e) {}
try { if (Inst1003 <= 1000 && typeof (EditConstraint) != "undefined") {_RecordType("<25233,25247,989>",(EditConstraint)); Inst1003++; } } catch(e) {}try { if (Inst1004 <= 1000 && typeof (v) != "undefined") {_RecordType("<25248,25249,989>",(v)); Inst1004++; } } catch(e) {}try { if (Inst1005 <= 1000 && typeof (Strength.PREFERRED) != "undefined") {_RecordType("<25251,25269,989>",(Strength.PREFERRED)); Inst1005++; } } catch(e) {}try { if (Inst1006 <= 1000 && typeof (Strength) != "undefined") {_RecordType("<25251,25259,989>",(Strength)); Inst1006++; } } catch(e) {}
  var edit = new EditConstraint(v, Strength.PREFERRED);
try { if (Inst1002 <= 1000 && typeof (edit) != "undefined") {_RecordType("<25222,25226,989>",(edit)); Inst1002++; } } catch(e) {}
try { if (Inst1008 <= 1000 && typeof (OrderedCollection) != "undefined") {_RecordType("<25290,25307,990>",(OrderedCollection)); Inst1008++; } } catch(e) {}
  var edits = new OrderedCollection();
try { if (Inst1007 <= 1000 && typeof (edits) != "undefined") {_RecordType("<25278,25283,990>",(edits)); Inst1007++; } } catch(e) {}
try { if (Inst1009 <= 1000 && typeof (edits.add) != "undefined") {_RecordType("<25313,25322,991>",(edits.add)); Inst1009++; } } catch(e) {}try { if (Inst1010 <= 1000 && typeof (edits) != "undefined") {_RecordType("<25313,25318,991>",(edits)); Inst1010++; } } catch(e) {}try { if (Inst1011 <= 1000 && typeof (edit) != "undefined") {_RecordType("<25323,25327,991>",(edit)); Inst1011++; } } catch(e) {}
  edits.add(edit);
try { if (Inst1013 <= 1000 && typeof (planner.extractPlanFromConstraints) != "undefined") {_RecordType("<25343,25377,992>",(planner.extractPlanFromConstraints)); Inst1013++; } } catch(e) {}try { if (Inst1014 <= 1000 && typeof (planner) != "undefined") {_RecordType("<25343,25350,992>",(planner)); Inst1014++; } } catch(e) {}try { if (Inst1015 <= 1000 && typeof (edits) != "undefined") {_RecordType("<25378,25383,992>",(edits)); Inst1015++; } } catch(e) {}
  var plan = planner.extractPlanFromConstraints(edits);
try { if (Inst1012 <= 1000 && typeof (plan) != "undefined") {_RecordType("<25336,25340,992>",(plan)); Inst1012++; } } catch(e) {}

  for (var i = 0; i < 10; i++) {
try { if (Inst1016 <= 1000 && typeof (i) != "undefined") {_RecordType("<25398,25399,994>",(i)); Inst1016++; } } catch(e) {}try { if (Inst1017 <= 1000 && typeof (i) != "undefined") {_RecordType("<25405,25406,994>",(i)); Inst1017++; } } catch(e) {}try { if (Inst1018 <= 1000 && typeof (i) != "undefined") {_RecordType("<25413,25414,994>",(i)); Inst1018++; } } catch(e) {}
try { if (Inst1021 <= 1000 && typeof (newValue) != "undefined") {_RecordType("<25434,25442,995>",(newValue)); Inst1021++; } } catch(e) {}
    v.value = newValue;
try { if (Inst1019 <= 1000 && typeof (v.value) != "undefined") {_RecordType("<25424,25431,995>",(v.value)); Inst1019++; } } catch(e) {}try { if (Inst1020 <= 1000 && typeof (v) != "undefined") {_RecordType("<25424,25425,995>",(v)); Inst1020++; } } catch(e) {}
try { if (Inst1022 <= 1000 && typeof (plan.execute) != "undefined") {_RecordType("<25448,25460,996>",(plan.execute)); Inst1022++; } } catch(e) {}try { if (Inst1023 <= 1000 && typeof (plan) != "undefined") {_RecordType("<25448,25452,996>",(plan)); Inst1023++; } } catch(e) {}
    plan.execute();
  }

try { if (Inst1024 <= 1000 && typeof (edit.destroyConstraint) != "undefined") {_RecordType("<25471,25493,999>",(edit.destroyConstraint)); Inst1024++; } } catch(e) {}try { if (Inst1025 <= 1000 && typeof (edit) != "undefined") {_RecordType("<25471,25475,999>",(edit)); Inst1025++; } } catch(e) {}
  edit.destroyConstraint();
} // Global variable holding the current planner.


var planner = null;
try { if (Inst1026 <= 1000 && typeof (planner) != "undefined") {_RecordType("<25553,25560,1003>",(planner)); Inst1026++; } } catch(e) {}

try { if (Inst1027 <= 1000 && typeof (deltaBlue) != "undefined") {_RecordType("<25579,25588,1005>",(deltaBlue)); Inst1027++; } } catch(e) {}
function deltaBlue() {
try { if (Inst1028 <= 1000 && typeof (chainTest) != "undefined") {_RecordType("<25595,25604,1006>",(chainTest)); Inst1028++; } } catch(e) {}
  chainTest(50);
try { if (Inst1029 <= 1000 && typeof (projectionTest) != "undefined") {_RecordType("<25612,25626,1007>",(projectionTest)); Inst1029++; } } catch(e) {}
  projectionTest(50);
}

for (var i = 0; i < 100; ++i) {
try { if (Inst1030 <= 1000 && typeof (i) != "undefined") {_RecordType("<25644,25645,1010>",(i)); Inst1030++; } } catch(e) {}try { if (Inst1031 <= 1000 && typeof (i) != "undefined") {_RecordType("<25651,25652,1010>",(i)); Inst1031++; } } catch(e) {}try { if (Inst1032 <= 1000 && typeof (i) != "undefined") {_RecordType("<25662,25663,1010>",(i)); Inst1032++; } } catch(e) {}
try { if (Inst1033 <= 1000 && typeof (deltaBlue) != "undefined") {_RecordType("<25669,25678,1011>",(deltaBlue)); Inst1033++; } } catch(e) {}
  deltaBlue();
}

