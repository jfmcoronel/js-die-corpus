var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
"use strict";

try { if (Inst0 <= 1000 && typeof (clobber) != "undefined") {_RecordType("<24,31,3>",(clobber)); Inst0++; } } catch(e) {}
function clobber() {
  ;
}

try { if (Inst1 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<43,51,7>",(noInline)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (clobber) != "undefined") {_RecordType("<52,59,7>",(clobber)); Inst2++; } } catch(e) {}
noInline(clobber);

class C {}
try { if (Inst3 <= 1000 && typeof (C) != "undefined") {_RecordType("<69,70,9>",(C)); Inst3++; } } catch(e) {}

class D {}
try { if (Inst4 <= 1000 && typeof (D) != "undefined") {_RecordType("<81,82,11>",(D)); Inst4++; } } catch(e) {}

try { if (Inst5 <= 1000 && typeof (foo) != "undefined") {_RecordType("<96,99,13>",(foo)); Inst5++; } } catch(e) {}
function foo(x, C) {
try { if (Inst6 <= 1000 && typeof (x) != "undefined") {_RecordType("<100,101,13>",(x)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (C) != "undefined") {_RecordType("<103,104,13>",(C)); Inst7++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (clobber) != "undefined") {_RecordType("<110,117,14>",(clobber)); Inst8++; } } catch(e) {}
  clobber();
try { if (Inst9 <= 1000 && typeof (x) != "undefined") {_RecordType("<130,131,15>",(x)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (C) != "undefined") {_RecordType("<143,144,15>",(C)); Inst10++; } } catch(e) {}
  return x instanceof C;
}

try { if (Inst11 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<149,157,18>",(noInline)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (foo) != "undefined") {_RecordType("<158,161,18>",(foo)); Inst12++; } } catch(e) {}
noInline(foo);

try { if (Inst13 <= 1000 && typeof (access) != "undefined") {_RecordType("<174,180,20>",(access)); Inst13++; } } catch(e) {}
function access(o) {
try { if (Inst14 <= 1000 && typeof (o) != "undefined") {_RecordType("<181,182,20>",(o)); Inst14++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (o.foo0) != "undefined") {_RecordType("<195,201,21>",(o.foo0)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (o) != "undefined") {_RecordType("<195,196,21>",(o)); Inst16++; } } catch(e) {}
  return o.foo0;
}

try { if (Inst17 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<206,214,24>",(noInline)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (access) != "undefined") {_RecordType("<215,221,24>",(access)); Inst18++; } } catch(e) {}
noInline(access);

try { if (Inst19 <= 1000 && typeof (theClass) != "undefined") {_RecordType("<234,242,26>",(theClass)); Inst19++; } } catch(e) {}
function theClass(i) {
try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<243,244,26>",(i)); Inst20++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<254,255,27>",(i)); Inst21++; } } catch(e) {}
  if (i & 1) {
try { if (Inst22 <= 1000 && typeof (C) != "undefined") {_RecordType("<274,275,28>",(C)); Inst22++; } } catch(e) {}
    return C;
  }

try { if (Inst23 <= 1000 && typeof (D) != "undefined") {_RecordType("<291,292,31>",(D)); Inst23++; } } catch(e) {}
  return D;
}

try { if (Inst24 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<297,305,34>",(noInline)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (theClass) != "undefined") {_RecordType("<306,314,34>",(theClass)); Inst25++; } } catch(e) {}
noInline(theClass);
try { if (Inst27 <= 1000 && typeof (C) != "undefined") {_RecordType("<329,330,35>",(C)); Inst27++; } } catch(e) {}
let x = new C();
try { if (Inst26 <= 1000 && typeof (x) != "undefined") {_RecordType("<321,322,35>",(x)); Inst26++; } } catch(e) {}

for (let i = 0; i < 1000; ++i) {
try { if (Inst28 <= 1000 && typeof (i) != "undefined") {_RecordType("<344,345,37>",(i)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (i) != "undefined") {_RecordType("<351,352,37>",(i)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (i) != "undefined") {_RecordType("<363,364,37>",(i)); Inst30++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (theClass) != "undefined") {_RecordType("<378,386,38>",(theClass)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (i) != "undefined") {_RecordType("<387,388,38>",(i)); Inst33++; } } catch(e) {}
  let k = theClass(i);
try { if (Inst31 <= 1000 && typeof (k) != "undefined") {_RecordType("<374,375,38>",(k)); Inst31++; } } catch(e) {}

try { if (Inst34 <= 1000 && typeof (i) != "undefined") {_RecordType("<398,399,40>",(i)); Inst34++; } } catch(e) {}
  if (i < 20) {
try { if (Inst38 <= 1000 && typeof (i) != "undefined") {_RecordType("<427,428,41>",(i)); Inst38++; } } catch(e) {}
    k["foo" + i] = i;
try { if (Inst35 <= 1000 && typeof (k["foo" + i]) != "undefined") {_RecordType("<412,424,41>",(k["foo" + i])); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (k) != "undefined") {_RecordType("<412,413,41>",(k)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (i) != "undefined") {_RecordType("<422,423,41>",(i)); Inst37++; } } catch(e) {}
  }

try { if (Inst39 <= 1000 && typeof (i) != "undefined") {_RecordType("<441,442,44>",(i)); Inst39++; } } catch(e) {}
  if (i >= 20) {
try { if (Inst40 <= 1000 && typeof (access) != "undefined") {_RecordType("<456,462,45>",(access)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (k) != "undefined") {_RecordType("<463,464,45>",(k)); Inst41++; } } catch(e) {}
    access(k);
  }

try { if (Inst42 <= 1000 && typeof (i) != "undefined") {_RecordType("<478,479,48>",(i)); Inst42++; } } catch(e) {}
  if (i === 100) {
try { if (Inst46 <= 1000 && typeof (i) != "undefined") {_RecordType("<510,511,49>",(i)); Inst46++; } } catch(e) {}
    k["foo" + i] = i;
try { if (Inst43 <= 1000 && typeof (k["foo" + i]) != "undefined") {_RecordType("<495,507,49>",(k["foo" + i])); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (k) != "undefined") {_RecordType("<495,496,49>",(k)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (i) != "undefined") {_RecordType("<505,506,49>",(i)); Inst45++; } } catch(e) {}
  }

try { if (Inst48 <= 1000 && typeof (foo) != "undefined") {_RecordType("<533,536,52>",(foo)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (x) != "undefined") {_RecordType("<537,538,52>",(x)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (k) != "undefined") {_RecordType("<540,541,52>",(k)); Inst50++; } } catch(e) {}
  let result = foo(x, k);
try { if (Inst47 <= 1000 && typeof (result) != "undefined") {_RecordType("<524,530,52>",(result)); Inst47++; } } catch(e) {}

try { if (Inst51 <= 1000 && typeof (k) != "undefined") {_RecordType("<551,552,54>",(k)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (C) != "undefined") {_RecordType("<557,558,54>",(C)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (result) != "undefined") {_RecordType("<562,568,54>",(result)); Inst53++; } } catch(e) {}
  if (k === C && result !== true) {
try { if (Inst54 <= 1000 && typeof (Error) != "undefined") {_RecordType("<595,600,55>",(Error)); Inst54++; } } catch(e) {}
    throw new Error("Bad");
  }

try { if (Inst55 <= 1000 && typeof (k) != "undefined") {_RecordType("<620,621,58>",(k)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (C) != "undefined") {_RecordType("<626,627,58>",(C)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (result) != "undefined") {_RecordType("<631,637,58>",(result)); Inst57++; } } catch(e) {}
  if (k !== C && result !== false) {
try { if (Inst58 <= 1000 && typeof (Error) != "undefined") {_RecordType("<665,670,59>",(Error)); Inst58++; } } catch(e) {}
    throw new Error("Bad");
  }
}

