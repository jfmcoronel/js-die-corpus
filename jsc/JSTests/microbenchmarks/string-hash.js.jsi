var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Test the performance of integer multiplication by implementing a 16-bit
// string hash.
try { if (Inst0 <= 1000 && typeof (stringHash) != "undefined") {_RecordType("<100,110,3>",(stringHash)); Inst0++; } } catch(e) {}
function stringHash(string) {
try { if (Inst1 <= 1000 && typeof (string) != "undefined") {_RecordType("<111,117,3>",(string)); Inst1++; } } catch(e) {}
  // source: http://en.wikipedia.org/wiki/Java_hashCode()#Sample_implementations_of_the_java.lang.String_algorithm
  var h = 0;
try { if (Inst2 <= 1000 && typeof (h) != "undefined") {_RecordType("<242,243,5>",(h)); Inst2++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (string.length) != "undefined") {_RecordType("<261,274,6>",(string.length)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (string) != "undefined") {_RecordType("<261,267,6>",(string)); Inst5++; } } catch(e) {}
  var len = string.length;
try { if (Inst3 <= 1000 && typeof (len) != "undefined") {_RecordType("<255,258,6>",(len)); Inst3++; } } catch(e) {}

  for (var index = 0; index < len; index++) {
try { if (Inst6 <= 1000 && typeof (index) != "undefined") {_RecordType("<288,293,8>",(index)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (index) != "undefined") {_RecordType("<299,304,8>",(index)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (len) != "undefined") {_RecordType("<307,310,8>",(len)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (index) != "undefined") {_RecordType("<312,317,8>",(index)); Inst9++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (h) != "undefined") {_RecordType("<337,338,9>",(h)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (string.charCodeAt) != "undefined") {_RecordType("<346,363,9>",(string.charCodeAt)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (string) != "undefined") {_RecordType("<346,352,9>",(string)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (index) != "undefined") {_RecordType("<364,369,9>",(index)); Inst14++; } } catch(e) {}
    h = (31 * h | 0) + string.charCodeAt(index) | 0;
try { if (Inst10 <= 1000 && typeof (h) != "undefined") {_RecordType("<327,328,9>",(h)); Inst10++; } } catch(e) {}
  }

try { if (Inst15 <= 1000 && typeof (h) != "undefined") {_RecordType("<390,391,12>",(h)); Inst15++; } } catch(e) {}
  return h;
}

for (var i = 0; i < 10000; ++i) {
try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<405,406,15>",(i)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (i) != "undefined") {_RecordType("<412,413,15>",(i)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (i) != "undefined") {_RecordType("<425,426,15>",(i)); Inst18++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (stringHash) != "undefined") {_RecordType("<445,455,16>",(stringHash)); Inst20++; } } catch(e) {}
  var result = stringHash("The spirit is willing but the flesh is weak.");
try { if (Inst19 <= 1000 && typeof (result) != "undefined") {_RecordType("<436,442,16>",(result)); Inst19++; } } catch(e) {}

try { if (Inst21 <= 1000 && typeof (result) != "undefined") {_RecordType("<512,518,18>",(result)); Inst21++; } } catch(e) {}
  if (result != -723065856) {
try { if (Inst22 <= 1000 && typeof (result) != "undefined") {_RecordType("<563,569,19>",(result)); Inst22++; } } catch(e) {}
    throw "Bad result: " + result;
  }
}

