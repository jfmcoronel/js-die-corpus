var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (foo) != "undefined") {_RecordType("<9,12,1>",(foo)); Inst0++; } } catch(e) {}
function foo(x) {
try { if (Inst1 <= 1000 && typeof (x) != "undefined") {_RecordType("<13,14,1>",(x)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (x) != "undefined") {_RecordType("<28,29,2>",(x)); Inst2++; } } catch(e) {}
  switch (x) {
    case "aaa":
      return 1;

    case "aab":
      return 2;

    case "aac":
      return 3;

    case "baaa":
      return 4;

    case "baab":
      return 5;

    case "baac":
      return 6;

    case "caaaa":
      return 7;

    case "caaab":
      return 8;

    case "caaac":
      return 9;

    default:
      return 10;
  }
}

try { if (Inst3 <= 1000 && typeof (make) != "undefined") {_RecordType("<385,389,35>",(make)); Inst3++; } } catch(e) {}
function make(pre, post) {
try { if (Inst4 <= 1000 && typeof (pre) != "undefined") {_RecordType("<390,393,35>",(pre)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (post) != "undefined") {_RecordType("<395,399,35>",(post)); Inst5++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (pre) != "undefined") {_RecordType("<412,415,36>",(pre)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (post) != "undefined") {_RecordType("<424,428,36>",(post)); Inst7++; } } catch(e) {}
  return pre + "a" + post;
}

try { if (Inst9 <= 1000 && typeof (make) != "undefined") {_RecordType("<448,452,39>",(make)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (make) != "undefined") {_RecordType("<464,468,39>",(make)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (make) != "undefined") {_RecordType("<480,484,39>",(make)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (make) != "undefined") {_RecordType("<496,500,39>",(make)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (make) != "undefined") {_RecordType("<513,517,39>",(make)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (make) != "undefined") {_RecordType("<530,534,39>",(make)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (make) != "undefined") {_RecordType("<547,551,39>",(make)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (make) != "undefined") {_RecordType("<565,569,39>",(make)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (make) != "undefined") {_RecordType("<583,587,39>",(make)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (make) != "undefined") {_RecordType("<601,605,39>",(make)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (make) != "undefined") {_RecordType("<617,621,39>",(make)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (make) != "undefined") {_RecordType("<634,638,39>",(make)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (make) != "undefined") {_RecordType("<657,661,39>",(make)); Inst21++; } } catch(e) {}
var strings = [make("a", "a"), make("a", "b"), make("a", "c"), make("b", "aa"), make("b", "ab"), make("b", "ac"), make("c", "aaa"), make("c", "aab"), make("c", "aac"), make("a", "d"), make("b", "ad"), make("c", "aad"), "d", make("d", "a")];
try { if (Inst8 <= 1000 && typeof (strings) != "undefined") {_RecordType("<437,444,39>",(strings)); Inst8++; } } catch(e) {}
var result = 0;
try { if (Inst22 <= 1000 && typeof (result) != "undefined") {_RecordType("<678,684,40>",(result)); Inst22++; } } catch(e) {}

for (var i = 0; i < 1000000; ++i) {
try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<700,701,42>",(i)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<707,708,42>",(i)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<722,723,42>",(i)); Inst25++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (foo) != "undefined") {_RecordType("<739,742,43>",(foo)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (strings[i % strings.length]) != "undefined") {_RecordType("<743,770,43>",(strings[i % strings.length])); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (strings) != "undefined") {_RecordType("<743,750,43>",(strings)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (i) != "undefined") {_RecordType("<751,752,43>",(i)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (strings.length) != "undefined") {_RecordType("<755,769,43>",(strings.length)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (strings) != "undefined") {_RecordType("<755,762,43>",(strings)); Inst32++; } } catch(e) {}
  result += foo(strings[i % strings.length]);
try { if (Inst26 <= 1000 && typeof (result) != "undefined") {_RecordType("<729,735,43>",(result)); Inst26++; } } catch(e) {}
}

try { if (Inst33 <= 1000 && typeof (result) != "undefined") {_RecordType("<780,786,46>",(result)); Inst33++; } } catch(e) {}
if (result != 6785696) {
try { if (Inst34 <= 1000 && typeof (result) != "undefined") {_RecordType("<826,832,47>",(result)); Inst34++; } } catch(e) {}
  throw "Bad result: " + result;
}

