var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// This tests that integer divisions are appropriately optimized, while double
// divisions are still kept the same as before.
try { if (Inst0 <= 1000 && typeof (foo) != "undefined") {_RecordType("<136,139,3>",(foo)); Inst0++; } } catch(e) {}
function foo(a, b) {
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<140,141,3>",(a)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (b) != "undefined") {_RecordType("<143,144,3>",(b)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (a) != "undefined") {_RecordType("<157,158,4>",(a)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (b) != "undefined") {_RecordType("<161,162,4>",(b)); Inst4++; } } catch(e) {}
  return a / b;
}

try { if (Inst5 <= 1000 && typeof (bar) != "undefined") {_RecordType("<176,179,7>",(bar)); Inst5++; } } catch(e) {}
function bar(a, b) {
try { if (Inst6 <= 1000 && typeof (a) != "undefined") {_RecordType("<180,181,7>",(a)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (b) != "undefined") {_RecordType("<183,184,7>",(b)); Inst7++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (a) != "undefined") {_RecordType("<197,198,8>",(a)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (b) != "undefined") {_RecordType("<201,202,8>",(b)); Inst9++; } } catch(e) {}
  return a / b | 0;
}

var result = 0;
try { if (Inst10 <= 1000 && typeof (result) != "undefined") {_RecordType("<215,221,11>",(result)); Inst10++; } } catch(e) {}

for (var i = 0; i < 1000000; ++i) {
try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<237,238,13>",(i)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<244,245,13>",(i)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<259,260,13>",(i)); Inst13++; } } catch(e) {}
  var a;
try { if (Inst14 <= 1000 && typeof (a) != "undefined") {_RecordType("<270,271,14>",(a)); Inst14++; } } catch(e) {}
  var b;
try { if (Inst15 <= 1000 && typeof (b) != "undefined") {_RecordType("<279,280,15>",(b)); Inst15++; } } catch(e) {}

try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<289,290,17>",(i)); Inst16++; } } catch(e) {}
  if (i < 500) {
try { if (Inst18 <= 1000 && typeof (i) != "undefined") {_RecordType("<308,309,18>",(i)); Inst18++; } } catch(e) {}
    a = i * 2;
try { if (Inst17 <= 1000 && typeof (a) != "undefined") {_RecordType("<304,305,18>",(a)); Inst17++; } } catch(e) {}
    b = 2;
try { if (Inst19 <= 1000 && typeof (b) != "undefined") {_RecordType("<319,320,19>",(b)); Inst19++; } } catch(e) {}
  } else {
try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<345,346,21>",(i)); Inst21++; } } catch(e) {}
    a = i * 3;
try { if (Inst20 <= 1000 && typeof (a) != "undefined") {_RecordType("<341,342,21>",(a)); Inst20++; } } catch(e) {}
    b = 4;
try { if (Inst22 <= 1000 && typeof (b) != "undefined") {_RecordType("<356,357,22>",(b)); Inst22++; } } catch(e) {}
  }

try { if (Inst24 <= 1000 && typeof (foo) != "undefined") {_RecordType("<380,383,25>",(foo)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (a) != "undefined") {_RecordType("<384,385,25>",(a)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (b) != "undefined") {_RecordType("<387,388,25>",(b)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (bar) != "undefined") {_RecordType("<396,399,25>",(bar)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (a) != "undefined") {_RecordType("<400,401,25>",(a)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (b) != "undefined") {_RecordType("<403,404,25>",(b)); Inst29++; } } catch(e) {}
  result += foo(a, b) * 3 + bar(a, b);
try { if (Inst23 <= 1000 && typeof (result) != "undefined") {_RecordType("<370,376,25>",(result)); Inst23++; } } catch(e) {}
}

try { if (Inst30 <= 1000 && typeof (result) != "undefined") {_RecordType("<414,420,28>",(result)); Inst30++; } } catch(e) {}
if (result != 1499998249937.5) {
try { if (Inst31 <= 1000 && typeof (print) != "undefined") {_RecordType("<445,450,29>",(print)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (result) != "undefined") {_RecordType("<468,474,29>",(result)); Inst32++; } } catch(e) {}
  print("Bad result: " + result);
  throw "Error";
}

