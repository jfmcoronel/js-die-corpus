var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//@ skip
try { if (Inst1 <= 1000 && typeof (Array) != "undefined") {_RecordType("<25,30,2>",(Array)); Inst1++; } } catch(e) {}
var array = new Array(10000);
try { if (Inst0 <= 1000 && typeof (array) != "undefined") {_RecordType("<13,18,2>",(array)); Inst0++; } } catch(e) {}

for (var i = 0; i < 100000; ++i) {
try { if (Inst2 <= 1000 && typeof (i) != "undefined") {_RecordType("<49,50,4>",(i)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (i) != "undefined") {_RecordType("<56,57,4>",(i)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (i) != "undefined") {_RecordType("<70,71,4>",(i)); Inst4++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (DataView) != "undefined") {_RecordType("<107,115,5>",(DataView)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (ArrayBuffer) != "undefined") {_RecordType("<120,131,5>",(ArrayBuffer)); Inst11++; } } catch(e) {}
  array[i % array.length] = new DataView(new ArrayBuffer(1000));
try { if (Inst5 <= 1000 && typeof (array[i % array.length]) != "undefined") {_RecordType("<77,100,5>",(array[i % array.length])); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (array) != "undefined") {_RecordType("<77,82,5>",(array)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<83,84,5>",(i)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (array.length) != "undefined") {_RecordType("<87,99,5>",(array.length)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (array) != "undefined") {_RecordType("<87,92,5>",(array)); Inst9++; } } catch(e) {}
}

for (var i = 0; i < array.length; ++i) {
try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<152,153,8>",(i)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<159,160,8>",(i)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (array.length) != "undefined") {_RecordType("<163,175,8>",(array.length)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (array) != "undefined") {_RecordType("<163,168,8>",(array)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<179,180,8>",(i)); Inst16++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (array[i].byteLength) != "undefined") {_RecordType("<190,209,9>",(array[i].byteLength)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (array[i]) != "undefined") {_RecordType("<190,198,9>",(array[i])); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (array) != "undefined") {_RecordType("<190,195,9>",(array)); Inst19++; } } catch(e) {}
  if (array[i].byteLength != 1000) {
try { if (Inst20 <= 1000 && typeof (array[i].byteLength) != "undefined") {_RecordType("<255,274,10>",(array[i].byteLength)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (array[i]) != "undefined") {_RecordType("<255,263,10>",(array[i])); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (array) != "undefined") {_RecordType("<255,260,10>",(array)); Inst22++; } } catch(e) {}
    throw "Error: bad length: " + array[i].byteLength;
  }

try { if (Inst23 <= 1000 && typeof (array[i].buffer.byteLength) != "undefined") {_RecordType("<287,313,13>",(array[i].buffer.byteLength)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (array[i].buffer) != "undefined") {_RecordType("<287,302,13>",(array[i].buffer)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (array[i]) != "undefined") {_RecordType("<287,295,13>",(array[i])); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (array) != "undefined") {_RecordType("<287,292,13>",(array)); Inst26++; } } catch(e) {}
  if (array[i].buffer.byteLength != 1000) {
try { if (Inst27 <= 1000 && typeof (array[i].buffer.byteLength) != "undefined") {_RecordType("<370,396,14>",(array[i].buffer.byteLength)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (array[i].buffer) != "undefined") {_RecordType("<370,385,14>",(array[i].buffer)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (array[i]) != "undefined") {_RecordType("<370,378,14>",(array[i])); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (array) != "undefined") {_RecordType("<370,375,14>",(array)); Inst30++; } } catch(e) {}
    throw "Error: bad buffer.byteLength: " + array[i].buffer.byteLength;
  }
}

