var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Create a really long prototype chain.
// We need to put values on so the objects are not empty and have transition
// watchpoints.
try { if (Inst0 <= 1000 && typeof (buildChain) != "undefined") {_RecordType("<143,153,4>",(buildChain)); Inst0++; } } catch(e) {}
function buildChain(depth) {
try { if (Inst1 <= 1000 && typeof (depth) != "undefined") {_RecordType("<154,159,4>",(depth)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (depth) != "undefined") {_RecordType("<169,174,5>",(depth)); Inst2++; } } catch(e) {}
  if (depth <= 0) {
    return {
      bloop: 1
    };
  }

  let result = {
    value: 1
  };
try { if (Inst3 <= 1000 && typeof (result) != "undefined") {_RecordType("<229,235,11>",(result)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (Object.setPrototypeOf) != "undefined") {_RecordType("<260,281,14>",(Object.setPrototypeOf)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Object) != "undefined") {_RecordType("<260,266,14>",(Object)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (result) != "undefined") {_RecordType("<282,288,14>",(result)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (buildChain) != "undefined") {_RecordType("<290,300,14>",(buildChain)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (depth) != "undefined") {_RecordType("<301,306,14>",(depth)); Inst8++; } } catch(e) {}
  Object.setPrototypeOf(result, buildChain(depth - 1));
try { if (Inst9 <= 1000 && typeof (result) != "undefined") {_RecordType("<323,329,15>",(result)); Inst9++; } } catch(e) {}
  return result;
}

try { if (Inst11 <= 1000 && typeof (buildChain) != "undefined") {_RecordType("<347,357,18>",(buildChain)); Inst11++; } } catch(e) {}
var object = buildChain(20);
try { if (Inst10 <= 1000 && typeof (object) != "undefined") {_RecordType("<338,344,18>",(object)); Inst10++; } } catch(e) {}

try { if (Inst12 <= 1000 && typeof (body) != "undefined") {_RecordType("<373,377,20>",(body)); Inst12++; } } catch(e) {}
function body() {
  for (let i = 0; i < 100000; i++) {
try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<393,394,21>",(i)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<400,401,21>",(i)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<412,413,21>",(i)); Inst15++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (object.toString) != "undefined") {_RecordType("<431,446,22>",(object.toString)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (object) != "undefined") {_RecordType("<431,437,22>",(object)); Inst18++; } } catch(e) {}
    value = object.toString();
try { if (Inst16 <= 1000 && typeof (value) != "undefined") {_RecordType("<423,428,22>",(value)); Inst16++; } } catch(e) {}
  }
}

try { if (Inst19 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<457,465,26>",(noInline)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (body) != "undefined") {_RecordType("<466,470,26>",(body)); Inst20++; } } catch(e) {}
noInline(body); // Try toString with misses.

try { if (Inst21 <= 1000 && typeof (body) != "undefined") {_RecordType("<503,507,28>",(body)); Inst21++; } } catch(e) {}
body();
Object.prototype[Symbol.toStringTag] = "hit"; // Try toString with hit.
try { if (Inst22 <= 1000 && typeof (Object.prototype[Symbol.toStringTag]) != "undefined") {_RecordType("<511,547,29>",(Object.prototype[Symbol.toStringTag])); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<511,527,29>",(Object.prototype)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (Object) != "undefined") {_RecordType("<511,517,29>",(Object)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Symbol.toStringTag) != "undefined") {_RecordType("<528,546,29>",(Symbol.toStringTag)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<528,534,29>",(Symbol)); Inst26++; } } catch(e) {}

try { if (Inst27 <= 1000 && typeof (body) != "undefined") {_RecordType("<584,588,31>",(body)); Inst27++; } } catch(e) {}
body();

