var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (sumOfArithSeries) != "undefined") {_RecordType("<9,25,1>",(sumOfArithSeries)); Inst0++; } } catch(e) {}
function sumOfArithSeries(limit) {
try { if (Inst1 <= 1000 && typeof (limit) != "undefined") {_RecordType("<26,31,1>",(limit)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (limit) != "undefined") {_RecordType("<44,49,2>",(limit)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (limit) != "undefined") {_RecordType("<53,58,2>",(limit)); Inst3++; } } catch(e) {}
  return limit * (limit + 1) / 2;
}

var n = 5;
try { if (Inst4 <= 1000 && typeof (n) != "undefined") {_RecordType("<76,77,5>",(n)); Inst4++; } } catch(e) {}

try { if (Inst5 <= 1000 && typeof (foo) != "undefined") {_RecordType("<93,96,7>",(foo)); Inst5++; } } catch(e) {}
function foo() {
  var result = 0;
try { if (Inst6 <= 1000 && typeof (result) != "undefined") {_RecordType("<107,113,8>",(result)); Inst6++; } } catch(e) {}

  for (var i = 0; i < n; ++i) {
try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<131,132,10>",(i)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<138,139,10>",(i)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (n) != "undefined") {_RecordType("<142,143,10>",(n)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<147,148,10>",(i)); Inst10++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<715,716,30>",(i)); Inst12++; } } catch(e) {}
    var o = {
      f: {
        f: {
          f: {
            f: {
              f: {
                f: {
                  f: {
                    f: {
                      f: {
                        f: {
                          f: {
                            f: {
                              f: {
                                f: {
                                  f: {
                                    f: {
                                      f: {
                                        f: {
                                          f: i
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    };
try { if (Inst11 <= 1000 && typeof (o) != "undefined") {_RecordType("<160,161,11>",(o)); Inst11++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<1737,1738,69>",(i)); Inst14++; } } catch(e) {}
    var p = {
      f: {
        f: {
          f: {
            f: {
              f: {
                f: {
                  f: {
                    f: {
                      f: {
                        f: {
                          f: {
                            f: {
                              f: {
                                f: {
                                  f: {
                                    f: {
                                      f: {
                                        f: {
                                          f: i + 1
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    };
try { if (Inst13 <= 1000 && typeof (p) != "undefined") {_RecordType("<1182,1183,50>",(p)); Inst13++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (o.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f) != "undefined") {_RecordType("<2214,2253,89>",(o.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (o.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f) != "undefined") {_RecordType("<2214,2251,89>",(o.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (o.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f) != "undefined") {_RecordType("<2214,2249,89>",(o.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (o.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f) != "undefined") {_RecordType("<2214,2247,89>",(o.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (o.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f) != "undefined") {_RecordType("<2214,2245,89>",(o.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (o.f.f.f.f.f.f.f.f.f.f.f.f.f.f) != "undefined") {_RecordType("<2214,2243,89>",(o.f.f.f.f.f.f.f.f.f.f.f.f.f.f)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (o.f.f.f.f.f.f.f.f.f.f.f.f.f) != "undefined") {_RecordType("<2214,2241,89>",(o.f.f.f.f.f.f.f.f.f.f.f.f.f)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (o.f.f.f.f.f.f.f.f.f.f.f.f) != "undefined") {_RecordType("<2214,2239,89>",(o.f.f.f.f.f.f.f.f.f.f.f.f)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (o.f.f.f.f.f.f.f.f.f.f.f) != "undefined") {_RecordType("<2214,2237,89>",(o.f.f.f.f.f.f.f.f.f.f.f)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (o.f.f.f.f.f.f.f.f.f.f) != "undefined") {_RecordType("<2214,2235,89>",(o.f.f.f.f.f.f.f.f.f.f)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (o.f.f.f.f.f.f.f.f.f) != "undefined") {_RecordType("<2214,2233,89>",(o.f.f.f.f.f.f.f.f.f)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (o.f.f.f.f.f.f.f.f) != "undefined") {_RecordType("<2214,2231,89>",(o.f.f.f.f.f.f.f.f)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (o.f.f.f.f.f.f.f) != "undefined") {_RecordType("<2214,2229,89>",(o.f.f.f.f.f.f.f)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (o.f.f.f.f.f.f) != "undefined") {_RecordType("<2214,2227,89>",(o.f.f.f.f.f.f)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (o.f.f.f.f.f) != "undefined") {_RecordType("<2214,2225,89>",(o.f.f.f.f.f)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (o.f.f.f.f) != "undefined") {_RecordType("<2214,2223,89>",(o.f.f.f.f)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (o.f.f.f) != "undefined") {_RecordType("<2214,2221,89>",(o.f.f.f)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (o.f.f) != "undefined") {_RecordType("<2214,2219,89>",(o.f.f)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (o.f) != "undefined") {_RecordType("<2214,2217,89>",(o.f)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (o) != "undefined") {_RecordType("<2214,2215,89>",(o)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (p.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f) != "undefined") {_RecordType("<2256,2295,89>",(p.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (p.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f) != "undefined") {_RecordType("<2256,2293,89>",(p.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (p.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f) != "undefined") {_RecordType("<2256,2291,89>",(p.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (p.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f) != "undefined") {_RecordType("<2256,2289,89>",(p.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (p.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f) != "undefined") {_RecordType("<2256,2287,89>",(p.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (p.f.f.f.f.f.f.f.f.f.f.f.f.f.f) != "undefined") {_RecordType("<2256,2285,89>",(p.f.f.f.f.f.f.f.f.f.f.f.f.f.f)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (p.f.f.f.f.f.f.f.f.f.f.f.f.f) != "undefined") {_RecordType("<2256,2283,89>",(p.f.f.f.f.f.f.f.f.f.f.f.f.f)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (p.f.f.f.f.f.f.f.f.f.f.f.f) != "undefined") {_RecordType("<2256,2281,89>",(p.f.f.f.f.f.f.f.f.f.f.f.f)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (p.f.f.f.f.f.f.f.f.f.f.f) != "undefined") {_RecordType("<2256,2279,89>",(p.f.f.f.f.f.f.f.f.f.f.f)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (p.f.f.f.f.f.f.f.f.f.f) != "undefined") {_RecordType("<2256,2277,89>",(p.f.f.f.f.f.f.f.f.f.f)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (p.f.f.f.f.f.f.f.f.f) != "undefined") {_RecordType("<2256,2275,89>",(p.f.f.f.f.f.f.f.f.f)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (p.f.f.f.f.f.f.f.f) != "undefined") {_RecordType("<2256,2273,89>",(p.f.f.f.f.f.f.f.f)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (p.f.f.f.f.f.f.f) != "undefined") {_RecordType("<2256,2271,89>",(p.f.f.f.f.f.f.f)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (p.f.f.f.f.f.f) != "undefined") {_RecordType("<2256,2269,89>",(p.f.f.f.f.f.f)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (p.f.f.f.f.f) != "undefined") {_RecordType("<2256,2267,89>",(p.f.f.f.f.f)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (p.f.f.f.f) != "undefined") {_RecordType("<2256,2265,89>",(p.f.f.f.f)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (p.f.f.f) != "undefined") {_RecordType("<2256,2263,89>",(p.f.f.f)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (p.f.f) != "undefined") {_RecordType("<2256,2261,89>",(p.f.f)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (p.f) != "undefined") {_RecordType("<2256,2259,89>",(p.f)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (p) != "undefined") {_RecordType("<2256,2257,89>",(p)); Inst55++; } } catch(e) {}
    result += o.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f + p.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f.f;
try { if (Inst15 <= 1000 && typeof (result) != "undefined") {_RecordType("<2204,2210,89>",(result)); Inst15++; } } catch(e) {}
  }

try { if (Inst56 <= 1000 && typeof (result) != "undefined") {_RecordType("<2311,2317,92>",(result)); Inst56++; } } catch(e) {}
  return result;
}

for (var _i = 0; _i < 80000; ++_i) {
try { if (Inst57 <= 1000 && typeof (_i) != "undefined") {_RecordType("<2331,2333,95>",(_i)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (_i) != "undefined") {_RecordType("<2339,2341,95>",(_i)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (_i) != "undefined") {_RecordType("<2353,2355,95>",(_i)); Inst59++; } } catch(e) {}
try { if (Inst61 <= 1000 && typeof (foo) != "undefined") {_RecordType("<2374,2377,96>",(foo)); Inst61++; } } catch(e) {}
  var result = foo();
try { if (Inst60 <= 1000 && typeof (result) != "undefined") {_RecordType("<2365,2371,96>",(result)); Inst60++; } } catch(e) {}

try { if (Inst62 <= 1000 && typeof (result) != "undefined") {_RecordType("<2388,2394,98>",(result)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (sumOfArithSeries) != "undefined") {_RecordType("<2398,2414,98>",(sumOfArithSeries)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (n) != "undefined") {_RecordType("<2415,2416,98>",(n)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (sumOfArithSeries) != "undefined") {_RecordType("<2424,2440,98>",(sumOfArithSeries)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (n) != "undefined") {_RecordType("<2441,2442,98>",(n)); Inst66++; } } catch(e) {}
  if (result != sumOfArithSeries(n - 1) + sumOfArithSeries(n)) {
try { if (Inst67 <= 1000 && typeof (result) != "undefined") {_RecordType("<2481,2487,99>",(result)); Inst67++; } } catch(e) {}
    throw "Error: bad result: " + result;
  }
}

