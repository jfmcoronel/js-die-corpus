var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst1 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<8,14,1>",(Symbol)); Inst1++; } } catch(e) {}
var f = Symbol('Cocoa');
try { if (Inst0 <= 1000 && typeof (f) != "undefined") {_RecordType("<4,5,1>",(f)); Inst0++; } } catch(e) {}

try { if (Inst2 <= 1000 && typeof (foo) != "undefined") {_RecordType("<35,38,3>",(foo)); Inst2++; } } catch(e) {}
function foo(o) {
try { if (Inst3 <= 1000 && typeof (o) != "undefined") {_RecordType("<39,40,3>",(o)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (o[f]) != "undefined") {_RecordType("<53,57,4>",(o[f])); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (o) != "undefined") {_RecordType("<53,54,4>",(o)); Inst5++; } } catch(e) {}
  return o[f];
}

try { if (Inst6 <= 1000 && typeof (bar) != "undefined") {_RecordType("<71,74,7>",(bar)); Inst6++; } } catch(e) {}
function bar(a) {
try { if (Inst7 <= 1000 && typeof (a) != "undefined") {_RecordType("<75,76,7>",(a)); Inst7++; } } catch(e) {}
  var result = 0;
try { if (Inst8 <= 1000 && typeof (result) != "undefined") {_RecordType("<86,92,8>",(result)); Inst8++; } } catch(e) {}

  for (var i = 0; i < 2000000; ++i) {
try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<110,111,10>",(i)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<117,118,10>",(i)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<132,133,10>",(i)); Inst11++; } } catch(e) {}
    for (var j = 0; j < a.length; ++j) {
try { if (Inst12 <= 1000 && typeof (j) != "undefined") {_RecordType("<150,151,11>",(j)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (j) != "undefined") {_RecordType("<157,158,11>",(j)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<161,169,11>",(a.length)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (a) != "undefined") {_RecordType("<161,162,11>",(a)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (j) != "undefined") {_RecordType("<173,174,11>",(j)); Inst16++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (foo) != "undefined") {_RecordType("<194,197,12>",(foo)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (a[j]) != "undefined") {_RecordType("<198,202,12>",(a[j])); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (a) != "undefined") {_RecordType("<198,199,12>",(a)); Inst20++; } } catch(e) {}
      result += foo(a[j]);
try { if (Inst17 <= 1000 && typeof (result) != "undefined") {_RecordType("<184,190,12>",(result)); Inst17++; } } catch(e) {}
    }
  }

try { if (Inst21 <= 1000 && typeof (result) != "undefined") {_RecordType("<225,231,16>",(result)); Inst21++; } } catch(e) {}
  return result;
}

try { if (Inst22 <= 1000 && typeof (Foo) != "undefined") {_RecordType("<245,248,19>",(Foo)); Inst22++; } } catch(e) {}
function Foo() {
  ;
}

Foo.prototype[f] = 42;
try { if (Inst23 <= 1000 && typeof (Foo.prototype[f]) != "undefined") {_RecordType("<260,276,23>",(Foo.prototype[f])); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (Foo.prototype) != "undefined") {_RecordType("<260,273,23>",(Foo.prototype)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Foo) != "undefined") {_RecordType("<260,263,23>",(Foo)); Inst25++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (bar) != "undefined") {_RecordType("<296,299,24>",(bar)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (Foo) != "undefined") {_RecordType("<320,323,26>",(Foo)); Inst28++; } } catch(e) {}
var result = bar([{
  [f]: 24
}, new Foo()]);
try { if (Inst26 <= 1000 && typeof (result) != "undefined") {_RecordType("<287,293,24>",(result)); Inst26++; } } catch(e) {}

try { if (Inst29 <= 1000 && typeof (result) != "undefined") {_RecordType("<334,340,28>",(result)); Inst29++; } } catch(e) {}
if (result != 132000000) {
try { if (Inst30 <= 1000 && typeof (result) != "undefined") {_RecordType("<388,394,29>",(result)); Inst30++; } } catch(e) {}
  throw "Error bad result: " + result;
}

