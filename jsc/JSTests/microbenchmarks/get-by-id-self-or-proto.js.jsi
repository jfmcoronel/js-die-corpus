var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (foo) != "undefined") {_RecordType("<9,12,1>",(foo)); Inst0++; } } catch(e) {}
function foo(o) {
try { if (Inst1 <= 1000 && typeof (o) != "undefined") {_RecordType("<13,14,1>",(o)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (o.f) != "undefined") {_RecordType("<27,30,2>",(o.f)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (o) != "undefined") {_RecordType("<27,28,2>",(o)); Inst3++; } } catch(e) {}
  return o.f;
}

try { if (Inst4 <= 1000 && typeof (bar) != "undefined") {_RecordType("<44,47,5>",(bar)); Inst4++; } } catch(e) {}
function bar(a) {
try { if (Inst5 <= 1000 && typeof (a) != "undefined") {_RecordType("<48,49,5>",(a)); Inst5++; } } catch(e) {}
  var result = 0;
try { if (Inst6 <= 1000 && typeof (result) != "undefined") {_RecordType("<59,65,6>",(result)); Inst6++; } } catch(e) {}

  for (var i = 0; i < 2000000; ++i) {
try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<83,84,8>",(i)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<90,91,8>",(i)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<105,106,8>",(i)); Inst9++; } } catch(e) {}
    for (var j = 0; j < a.length; ++j) {
try { if (Inst10 <= 1000 && typeof (j) != "undefined") {_RecordType("<123,124,9>",(j)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (j) != "undefined") {_RecordType("<130,131,9>",(j)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<134,142,9>",(a.length)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (a) != "undefined") {_RecordType("<134,135,9>",(a)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (j) != "undefined") {_RecordType("<146,147,9>",(j)); Inst14++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (foo) != "undefined") {_RecordType("<167,170,10>",(foo)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (a[j]) != "undefined") {_RecordType("<171,175,10>",(a[j])); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (a) != "undefined") {_RecordType("<171,172,10>",(a)); Inst18++; } } catch(e) {}
      result += foo(a[j]);
try { if (Inst15 <= 1000 && typeof (result) != "undefined") {_RecordType("<157,163,10>",(result)); Inst15++; } } catch(e) {}
    }
  }

try { if (Inst19 <= 1000 && typeof (result) != "undefined") {_RecordType("<198,204,14>",(result)); Inst19++; } } catch(e) {}
  return result;
}

try { if (Inst20 <= 1000 && typeof (Foo) != "undefined") {_RecordType("<218,221,17>",(Foo)); Inst20++; } } catch(e) {}
function Foo() {
  ;
}

Foo.prototype.f = 42;
try { if (Inst21 <= 1000 && typeof (Foo.prototype.f) != "undefined") {_RecordType("<233,248,21>",(Foo.prototype.f)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Foo.prototype) != "undefined") {_RecordType("<233,246,21>",(Foo.prototype)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Foo) != "undefined") {_RecordType("<233,236,21>",(Foo)); Inst23++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (bar) != "undefined") {_RecordType("<268,271,22>",(bar)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Foo) != "undefined") {_RecordType("<290,293,24>",(Foo)); Inst26++; } } catch(e) {}
var result = bar([{
  f: 24
}, new Foo()]);
try { if (Inst24 <= 1000 && typeof (result) != "undefined") {_RecordType("<259,265,22>",(result)); Inst24++; } } catch(e) {}

try { if (Inst27 <= 1000 && typeof (result) != "undefined") {_RecordType("<304,310,26>",(result)); Inst27++; } } catch(e) {}
if (result != 132000000) {
try { if (Inst28 <= 1000 && typeof (result) != "undefined") {_RecordType("<358,364,27>",(result)); Inst28++; } } catch(e) {}
  throw "Error bad result: " + result;
}

