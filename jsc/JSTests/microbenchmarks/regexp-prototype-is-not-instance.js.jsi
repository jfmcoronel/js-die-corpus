var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//@ runNoFTL
try { if (Inst0 <= 1000 && typeof (stringify) != "undefined") {_RecordType("<22,31,2>",(stringify)); Inst0++; } } catch(e) {}
function stringify(x) {
try { if (Inst1 <= 1000 && typeof (x) != "undefined") {_RecordType("<32,33,2>",(x)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (x) != "undefined") {_RecordType("<50,51,3>",(x)); Inst2++; } } catch(e) {}
  if (typeof x == "string") {
try { if (Inst3 <= 1000 && typeof (x) != "undefined") {_RecordType("<84,85,4>",(x)); Inst3++; } } catch(e) {}
    return '"' + x + '"';
  }

try { if (Inst4 <= 1000 && typeof (x) != "undefined") {_RecordType("<107,108,7>",(x)); Inst4++; } } catch(e) {}
  return x;
}

try { if (Inst5 <= 1000 && typeof (assert) != "undefined") {_RecordType("<122,128,10>",(assert)); Inst5++; } } catch(e) {}
function assert(actual, expected) {
try { if (Inst6 <= 1000 && typeof (actual) != "undefined") {_RecordType("<129,135,10>",(actual)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (expected) != "undefined") {_RecordType("<137,145,10>",(expected)); Inst7++; } } catch(e) {}
  ;
}

try { if (Inst8 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<165,177,14>",(assertThrows)); Inst8++; } } catch(e) {}
function assertThrows(func, expectedErrMsg) {
try { if (Inst9 <= 1000 && typeof (func) != "undefined") {_RecordType("<178,182,14>",(func)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (expectedErrMsg) != "undefined") {_RecordType("<184,198,14>",(expectedErrMsg)); Inst10++; } } catch(e) {}
  let actualErrMsg;
try { if (Inst11 <= 1000 && typeof (actualErrMsg) != "undefined") {_RecordType("<208,220,15>",(actualErrMsg)); Inst11++; } } catch(e) {}

try { if (Inst13 <= 1000 && typeof (e) != "undefined") {_RecordType("<254,255,19>",(e)); Inst13++; } } catch(e) {}
  try {
try { if (Inst12 <= 1000 && typeof (func) != "undefined") {_RecordType("<235,239,18>",(func)); Inst12++; } } catch(e) {}
    func();
  } catch (e) {
    ;
  }
}

try { if (Inst14 <= 1000 && typeof (RegExp.prototype) != "undefined") {_RecordType("<272,288,24>",(RegExp.prototype)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<272,278,24>",(RegExp)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<300,306,24>",(RegExp)); Inst16++; } } catch(e) {}
RegExp.prototype instanceof RegExp;
false;
try { if (Inst17 <= 1000 && typeof (RegExp.prototype.flags) != "undefined") {_RecordType("<315,337,26>",(RegExp.prototype.flags)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (RegExp.prototype) != "undefined") {_RecordType("<315,331,26>",(RegExp.prototype)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<315,321,26>",(RegExp)); Inst19++; } } catch(e) {}
RegExp.prototype.flags;
"";
try { if (Inst20 <= 1000 && typeof (RegExp.prototype.global) != "undefined") {_RecordType("<343,366,28>",(RegExp.prototype.global)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (RegExp.prototype) != "undefined") {_RecordType("<343,359,28>",(RegExp.prototype)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<343,349,28>",(RegExp)); Inst22++; } } catch(e) {}
RegExp.prototype.global;
void 0;
try { if (Inst23 <= 1000 && typeof (RegExp.prototype.ignoreCase) != "undefined") {_RecordType("<376,403,30>",(RegExp.prototype.ignoreCase)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (RegExp.prototype) != "undefined") {_RecordType("<376,392,30>",(RegExp.prototype)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<376,382,30>",(RegExp)); Inst25++; } } catch(e) {}
RegExp.prototype.ignoreCase;
void 0;
try { if (Inst26 <= 1000 && typeof (RegExp.prototype.multiline) != "undefined") {_RecordType("<413,439,32>",(RegExp.prototype.multiline)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (RegExp.prototype) != "undefined") {_RecordType("<413,429,32>",(RegExp.prototype)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<413,419,32>",(RegExp)); Inst28++; } } catch(e) {}
RegExp.prototype.multiline;
void 0;
try { if (Inst29 <= 1000 && typeof (RegExp.prototype.unicode) != "undefined") {_RecordType("<449,473,34>",(RegExp.prototype.unicode)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (RegExp.prototype) != "undefined") {_RecordType("<449,465,34>",(RegExp.prototype)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<449,455,34>",(RegExp)); Inst31++; } } catch(e) {}
RegExp.prototype.unicode;
void 0;
try { if (Inst32 <= 1000 && typeof (RegExp.prototype.sticky) != "undefined") {_RecordType("<483,506,36>",(RegExp.prototype.sticky)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (RegExp.prototype) != "undefined") {_RecordType("<483,499,36>",(RegExp.prototype)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<483,489,36>",(RegExp)); Inst34++; } } catch(e) {}
RegExp.prototype.sticky;
void 0;
try { if (Inst35 <= 1000 && typeof (RegExp.prototype.source) != "undefined") {_RecordType("<516,539,38>",(RegExp.prototype.source)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (RegExp.prototype) != "undefined") {_RecordType("<516,532,38>",(RegExp.prototype)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<516,522,38>",(RegExp)); Inst37++; } } catch(e) {}
RegExp.prototype.source;
"(?:)";
try { if (Inst38 <= 1000 && typeof (RegExp.prototype.toString) != "undefined") {_RecordType("<549,574,40>",(RegExp.prototype.toString)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (RegExp.prototype) != "undefined") {_RecordType("<549,565,40>",(RegExp.prototype)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<549,555,40>",(RegExp)); Inst40++; } } catch(e) {}
RegExp.prototype.toString();
"/(?:)/";
try { if (Inst41 <= 1000 && typeof (Object.getOwnPropertyDescriptor(RegExp.prototype, 'flags').get.call) != "undefined") {_RecordType("<588,655,42>",(Object.getOwnPropertyDescriptor(RegExp.prototype, 'flags').get.call)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (Object.getOwnPropertyDescriptor(RegExp.prototype, 'flags').get) != "undefined") {_RecordType("<588,650,42>",(Object.getOwnPropertyDescriptor(RegExp.prototype, 'flags').get)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<588,619,42>",(Object.getOwnPropertyDescriptor)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (Object) != "undefined") {_RecordType("<588,594,42>",(Object)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (RegExp.prototype) != "undefined") {_RecordType("<620,636,42>",(RegExp.prototype)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<620,626,42>",(RegExp)); Inst46++; } } catch(e) {}
Object.getOwnPropertyDescriptor(RegExp.prototype, 'flags').get.call({});
"";

(() => {
try { if (Inst47 <= 1000 && typeof (Object.getOwnPropertyDescriptor(RegExp.prototype, 'flags').get.call) != "undefined") {_RecordType("<677,744,46>",(Object.getOwnPropertyDescriptor(RegExp.prototype, 'flags').get.call)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (Object.getOwnPropertyDescriptor(RegExp.prototype, 'flags').get) != "undefined") {_RecordType("<677,739,46>",(Object.getOwnPropertyDescriptor(RegExp.prototype, 'flags').get)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<677,708,46>",(Object.getOwnPropertyDescriptor)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (Object) != "undefined") {_RecordType("<677,683,46>",(Object)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (RegExp.prototype) != "undefined") {_RecordType("<709,725,46>",(RegExp.prototype)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<709,715,46>",(RegExp)); Inst52++; } } catch(e) {}
  Object.getOwnPropertyDescriptor(RegExp.prototype, 'flags').get.call({});
})();

"TypeError: The RegExp.prototype.flags getter can only be called on an object";

(() => {
try { if (Inst53 <= 1000 && typeof (Object.getOwnPropertyDescriptor(RegExp.prototype, 'ignoreCase').get.call) != "undefined") {_RecordType("<849,921,52>",(Object.getOwnPropertyDescriptor(RegExp.prototype, 'ignoreCase').get.call)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (Object.getOwnPropertyDescriptor(RegExp.prototype, 'ignoreCase').get) != "undefined") {_RecordType("<849,916,52>",(Object.getOwnPropertyDescriptor(RegExp.prototype, 'ignoreCase').get)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<849,880,52>",(Object.getOwnPropertyDescriptor)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (Object) != "undefined") {_RecordType("<849,855,52>",(Object)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (RegExp.prototype) != "undefined") {_RecordType("<881,897,52>",(RegExp.prototype)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<881,887,52>",(RegExp)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<926,932,52>",(RegExp)); Inst59++; } } catch(e) {}
  Object.getOwnPropertyDescriptor(RegExp.prototype, 'ignoreCase').get.call(new RegExp());
})();

"TypeError: The RegExp.prototype.ignoreCase getter can only be called on a RegExp object";

(() => {
try { if (Inst60 <= 1000 && typeof (Object.getOwnPropertyDescriptor(RegExp.prototype, 'multiline').get.call) != "undefined") {_RecordType("<1047,1118,58>",(Object.getOwnPropertyDescriptor(RegExp.prototype, 'multiline').get.call)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (Object.getOwnPropertyDescriptor(RegExp.prototype, 'multiline').get) != "undefined") {_RecordType("<1047,1113,58>",(Object.getOwnPropertyDescriptor(RegExp.prototype, 'multiline').get)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<1047,1078,58>",(Object.getOwnPropertyDescriptor)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1047,1053,58>",(Object)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (RegExp.prototype) != "undefined") {_RecordType("<1079,1095,58>",(RegExp.prototype)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<1079,1085,58>",(RegExp)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<1123,1129,58>",(RegExp)); Inst66++; } } catch(e) {}
  Object.getOwnPropertyDescriptor(RegExp.prototype, 'multiline').get.call(new RegExp());
})();

"TypeError: The RegExp.prototype.multiline getter can only be called on a RegExp object";

(() => {
try { if (Inst67 <= 1000 && typeof (Object.getOwnPropertyDescriptor(RegExp.prototype, 'unicode').get.call) != "undefined") {_RecordType("<1243,1312,64>",(Object.getOwnPropertyDescriptor(RegExp.prototype, 'unicode').get.call)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (Object.getOwnPropertyDescriptor(RegExp.prototype, 'unicode').get) != "undefined") {_RecordType("<1243,1307,64>",(Object.getOwnPropertyDescriptor(RegExp.prototype, 'unicode').get)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<1243,1274,64>",(Object.getOwnPropertyDescriptor)); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1243,1249,64>",(Object)); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (RegExp.prototype) != "undefined") {_RecordType("<1275,1291,64>",(RegExp.prototype)); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<1275,1281,64>",(RegExp)); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<1317,1323,64>",(RegExp)); Inst73++; } } catch(e) {}
  Object.getOwnPropertyDescriptor(RegExp.prototype, 'unicode').get.call(new RegExp());
})();

"TypeError: The RegExp.prototype.unicode getter can only be called on a RegExp object";

(() => {
try { if (Inst74 <= 1000 && typeof (Object.getOwnPropertyDescriptor(RegExp.prototype, 'sticky').get.call) != "undefined") {_RecordType("<1435,1503,70>",(Object.getOwnPropertyDescriptor(RegExp.prototype, 'sticky').get.call)); Inst74++; } } catch(e) {}try { if (Inst75 <= 1000 && typeof (Object.getOwnPropertyDescriptor(RegExp.prototype, 'sticky').get) != "undefined") {_RecordType("<1435,1498,70>",(Object.getOwnPropertyDescriptor(RegExp.prototype, 'sticky').get)); Inst75++; } } catch(e) {}try { if (Inst76 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<1435,1466,70>",(Object.getOwnPropertyDescriptor)); Inst76++; } } catch(e) {}try { if (Inst77 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1435,1441,70>",(Object)); Inst77++; } } catch(e) {}try { if (Inst78 <= 1000 && typeof (RegExp.prototype) != "undefined") {_RecordType("<1467,1483,70>",(RegExp.prototype)); Inst78++; } } catch(e) {}try { if (Inst79 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<1467,1473,70>",(RegExp)); Inst79++; } } catch(e) {}try { if (Inst80 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<1508,1514,70>",(RegExp)); Inst80++; } } catch(e) {}
  Object.getOwnPropertyDescriptor(RegExp.prototype, 'sticky').get.call(new RegExp());
})();

"TypeError: The RegExp.prototype.sticky getter can only be called on a RegExp object";

(() => {
try { if (Inst81 <= 1000 && typeof (Object.getOwnPropertyDescriptor(RegExp.prototype, 'source').get.call) != "undefined") {_RecordType("<1625,1693,76>",(Object.getOwnPropertyDescriptor(RegExp.prototype, 'source').get.call)); Inst81++; } } catch(e) {}try { if (Inst82 <= 1000 && typeof (Object.getOwnPropertyDescriptor(RegExp.prototype, 'source').get) != "undefined") {_RecordType("<1625,1688,76>",(Object.getOwnPropertyDescriptor(RegExp.prototype, 'source').get)); Inst82++; } } catch(e) {}try { if (Inst83 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<1625,1656,76>",(Object.getOwnPropertyDescriptor)); Inst83++; } } catch(e) {}try { if (Inst84 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1625,1631,76>",(Object)); Inst84++; } } catch(e) {}try { if (Inst85 <= 1000 && typeof (RegExp.prototype) != "undefined") {_RecordType("<1657,1673,76>",(RegExp.prototype)); Inst85++; } } catch(e) {}try { if (Inst86 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<1657,1663,76>",(RegExp)); Inst86++; } } catch(e) {}try { if (Inst87 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<1698,1704,76>",(RegExp)); Inst87++; } } catch(e) {}
  Object.getOwnPropertyDescriptor(RegExp.prototype, 'source').get.call(new RegExp());
})();

"TypeError: The RegExp.prototype.source getter can only be called on a RegExp object";



