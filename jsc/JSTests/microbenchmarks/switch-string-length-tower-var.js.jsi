var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (foo) != "undefined") {_RecordType("<9,12,1>",(foo)); Inst0++; } } catch(e) {}
function foo(x) {
try { if (Inst1 <= 1000 && typeof (x) != "undefined") {_RecordType("<13,14,1>",(x)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (x) != "undefined") {_RecordType("<28,29,2>",(x)); Inst2++; } } catch(e) {}
  switch (x) {
    case "fooa":
      return 1;

    case "fooab":
      return 2;

    case "fooabc":
      return 3;

    case "fooabcd":
      return 4;

    default:
      return 10;
  }
}

var strings = ["a", "ab", "abc", "abcd", "abcde"];
try { if (Inst3 <= 1000 && typeof (strings) != "undefined") {_RecordType("<216,223,20>",(strings)); Inst3++; } } catch(e) {}

for (var i = 0; i < strings.length; ++i) {
try { if (Inst4 <= 1000 && typeof (i) != "undefined") {_RecordType("<273,274,22>",(i)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (i) != "undefined") {_RecordType("<280,281,22>",(i)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (strings.length) != "undefined") {_RecordType("<284,298,22>",(strings.length)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (strings) != "undefined") {_RecordType("<284,291,22>",(strings)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<302,303,22>",(i)); Inst8++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (strings[i]) != "undefined") {_RecordType("<330,340,23>",(strings[i])); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (strings) != "undefined") {_RecordType("<330,337,23>",(strings)); Inst12++; } } catch(e) {}
  strings[i] = "foo" + strings[i];
try { if (Inst9 <= 1000 && typeof (strings[i]) != "undefined") {_RecordType("<309,319,23>",(strings[i])); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (strings) != "undefined") {_RecordType("<309,316,23>",(strings)); Inst10++; } } catch(e) {}
}

var result = 0;
try { if (Inst13 <= 1000 && typeof (result) != "undefined") {_RecordType("<349,355,26>",(result)); Inst13++; } } catch(e) {}

for (var i = 0; i < 1000000; ++i) {
try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<371,372,28>",(i)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<378,379,28>",(i)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<393,394,28>",(i)); Inst16++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (foo) != "undefined") {_RecordType("<410,413,29>",(foo)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (strings[i % strings.length]) != "undefined") {_RecordType("<414,441,29>",(strings[i % strings.length])); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (strings) != "undefined") {_RecordType("<414,421,29>",(strings)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<422,423,29>",(i)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (strings.length) != "undefined") {_RecordType("<426,440,29>",(strings.length)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (strings) != "undefined") {_RecordType("<426,433,29>",(strings)); Inst23++; } } catch(e) {}
  result += foo(strings[i % strings.length]);
try { if (Inst17 <= 1000 && typeof (result) != "undefined") {_RecordType("<400,406,29>",(result)); Inst17++; } } catch(e) {}
}

try { if (Inst24 <= 1000 && typeof (result) != "undefined") {_RecordType("<451,457,32>",(result)); Inst24++; } } catch(e) {}
if (result != 4000000) {
try { if (Inst25 <= 1000 && typeof (result) != "undefined") {_RecordType("<497,503,33>",(result)); Inst25++; } } catch(e) {}
  throw "Bad result: " + result;
}

