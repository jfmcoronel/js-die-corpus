var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (assert) != "undefined") {_RecordType("<9,15,1>",(assert)); Inst0++; } } catch(e) {}
function assert(b) {
try { if (Inst1 <= 1000 && typeof (b) != "undefined") {_RecordType("<16,17,1>",(b)); Inst1++; } } catch(e) {}
  ;
}

try { if (Inst2 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<28,36,5>",(noInline)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (assert) != "undefined") {_RecordType("<37,43,5>",(assert)); Inst3++; } } catch(e) {}
noInline(assert);
try { if (Inst5 <= 1000 && typeof (WeakMap) != "undefined") {_RecordType("<64,71,6>",(WeakMap)); Inst5++; } } catch(e) {}
let weakMap = new WeakMap();
try { if (Inst4 <= 1000 && typeof (weakMap) != "undefined") {_RecordType("<50,57,6>",(weakMap)); Inst4++; } } catch(e) {}

try { if (Inst6 <= 1000 && typeof (objectKey) != "undefined") {_RecordType("<85,94,8>",(objectKey)); Inst6++; } } catch(e) {}
function objectKey(o) {
try { if (Inst7 <= 1000 && typeof (o) != "undefined") {_RecordType("<95,96,8>",(o)); Inst7++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (weakMap.get) != "undefined") {_RecordType("<109,120,9>",(weakMap.get)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (weakMap) != "undefined") {_RecordType("<109,116,9>",(weakMap)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (o) != "undefined") {_RecordType("<121,122,9>",(o)); Inst10++; } } catch(e) {}
  return weakMap.get(o);
}

try { if (Inst11 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<128,136,12>",(noInline)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (objectKey) != "undefined") {_RecordType("<137,146,12>",(objectKey)); Inst12++; } } catch(e) {}
noInline(objectKey);
const iters = 1000000;
try { if (Inst13 <= 1000 && typeof (iters) != "undefined") {_RecordType("<155,160,13>",(iters)); Inst13++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (Date.now) != "undefined") {_RecordType("<184,192,14>",(Date.now)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Date) != "undefined") {_RecordType("<184,188,14>",(Date)); Inst16++; } } catch(e) {}
let start = Date.now();
try { if (Inst14 <= 1000 && typeof (start) != "undefined") {_RecordType("<176,181,14>",(start)); Inst14++; } } catch(e) {}
{
  let o = {
    f: 20
  };
try { if (Inst17 <= 1000 && typeof (o) != "undefined") {_RecordType("<204,205,16>",(o)); Inst17++; } } catch(e) {}
  var array = [];
try { if (Inst18 <= 1000 && typeof (array) != "undefined") {_RecordType("<231,236,19>",(array)); Inst18++; } } catch(e) {}

  for (var i = 0; i < 10; i++) {
try { if (Inst19 <= 1000 && typeof (i) != "undefined") {_RecordType("<255,256,21>",(i)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<262,263,21>",(i)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<270,271,21>",(i)); Inst21++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<308,309,23>",(i)); Inst23++; } } catch(e) {}
    let newObject = {
      f: i
    };
try { if (Inst22 <= 1000 && typeof (newObject) != "undefined") {_RecordType("<285,294,22>",(newObject)); Inst22++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (weakMap.set) != "undefined") {_RecordType("<321,332,25>",(weakMap.set)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (weakMap) != "undefined") {_RecordType("<321,328,25>",(weakMap)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (newObject) != "undefined") {_RecordType("<333,342,25>",(newObject)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (i) != "undefined") {_RecordType("<344,345,25>",(i)); Inst27++; } } catch(e) {}
    weakMap.set(newObject, i);
try { if (Inst30 <= 1000 && typeof (newObject) != "undefined") {_RecordType("<363,372,26>",(newObject)); Inst30++; } } catch(e) {}
    array[i] = newObject;
try { if (Inst28 <= 1000 && typeof (array[i]) != "undefined") {_RecordType("<352,360,26>",(array[i])); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (array) != "undefined") {_RecordType("<352,357,26>",(array)); Inst29++; } } catch(e) {}
  }

  for (var j = 0; j < iters; ++j) {
try { if (Inst31 <= 1000 && typeof (j) != "undefined") {_RecordType("<390,391,29>",(j)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (j) != "undefined") {_RecordType("<397,398,29>",(j)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (iters) != "undefined") {_RecordType("<401,406,29>",(iters)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (j) != "undefined") {_RecordType("<410,411,29>",(j)); Inst34++; } } catch(e) {}
    for (let i = 0; i < 10; i++) {
try { if (Inst35 <= 1000 && typeof (i) != "undefined") {_RecordType("<428,429,30>",(i)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (i) != "undefined") {_RecordType("<435,436,30>",(i)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (i) != "undefined") {_RecordType("<443,444,30>",(i)); Inst37++; } } catch(e) {}
try { if (Inst38 <= 1000 && typeof (objectKey) != "undefined") {_RecordType("<456,465,31>",(objectKey)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (array[i]) != "undefined") {_RecordType("<466,474,31>",(array[i])); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (array) != "undefined") {_RecordType("<466,471,31>",(array)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (i) != "undefined") {_RecordType("<480,481,31>",(i)); Inst41++; } } catch(e) {}
      objectKey(array[i]) === i;
    }
  }
}
const verbose = false;
try { if (Inst42 <= 1000 && typeof (verbose) != "undefined") {_RecordType("<501,508,35>",(verbose)); Inst42++; } } catch(e) {}

try { if (Inst43 <= 1000 && typeof (verbose) != "undefined") {_RecordType("<523,530,37>",(verbose)); Inst43++; } } catch(e) {}
if (verbose) {
try { if (Inst44 <= 1000 && typeof (print) != "undefined") {_RecordType("<536,541,38>",(print)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (Date.now) != "undefined") {_RecordType("<542,550,38>",(Date.now)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (Date) != "undefined") {_RecordType("<542,546,38>",(Date)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (start) != "undefined") {_RecordType("<555,560,38>",(start)); Inst47++; } } catch(e) {}
  print(Date.now() - start);
}

