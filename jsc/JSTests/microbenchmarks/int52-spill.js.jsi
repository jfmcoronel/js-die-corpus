var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
var array;
try { if (Inst0 <= 1000 && typeof (array) != "undefined") {_RecordType("<4,9,1>",(array)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (bar) != "undefined") {_RecordType("<21,24,3>",(bar)); Inst1++; } } catch(e) {}
function bar(x) {
try { if (Inst2 <= 1000 && typeof (x) != "undefined") {_RecordType("<25,26,3>",(x)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (array.push) != "undefined") {_RecordType("<32,42,4>",(array.push)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (array) != "undefined") {_RecordType("<32,37,4>",(array)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (x) != "undefined") {_RecordType("<43,44,4>",(x)); Inst5++; } } catch(e) {}
  array.push(x);
}

try { if (Inst6 <= 1000 && typeof (foo) != "undefined") {_RecordType("<59,62,7>",(foo)); Inst6++; } } catch(e) {}
function foo(n) {
try { if (Inst7 <= 1000 && typeof (n) != "undefined") {_RecordType("<63,64,7>",(n)); Inst7++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (n) != "undefined") {_RecordType("<78,79,8>",(n)); Inst9++; } } catch(e) {}
  var x = n + 1000;
try { if (Inst8 <= 1000 && typeof (x) != "undefined") {_RecordType("<74,75,8>",(x)); Inst8++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (bar) != "undefined") {_RecordType("<90,93,9>",(bar)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (x) != "undefined") {_RecordType("<94,95,9>",(x)); Inst11++; } } catch(e) {}
  bar(x);
  x += 1000;
try { if (Inst12 <= 1000 && typeof (x) != "undefined") {_RecordType("<100,101,10>",(x)); Inst12++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (bar) != "undefined") {_RecordType("<113,116,11>",(bar)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (x) != "undefined") {_RecordType("<117,118,11>",(x)); Inst14++; } } catch(e) {}
  bar(x);
  x += 1000;
try { if (Inst15 <= 1000 && typeof (x) != "undefined") {_RecordType("<123,124,12>",(x)); Inst15++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (bar) != "undefined") {_RecordType("<136,139,13>",(bar)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (x) != "undefined") {_RecordType("<140,141,13>",(x)); Inst17++; } } catch(e) {}
  bar(x);
}

try { if (Inst18 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<147,155,16>",(noInline)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (bar) != "undefined") {_RecordType("<156,159,16>",(bar)); Inst19++; } } catch(e) {}
noInline(bar);
try { if (Inst20 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<162,170,17>",(noInline)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (foo) != "undefined") {_RecordType("<171,174,17>",(foo)); Inst21++; } } catch(e) {}
noInline(foo);

for (var i = 0; i < 10000; ++i) {
try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<187,188,19>",(i)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<194,195,19>",(i)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<207,208,19>",(i)); Inst24++; } } catch(e) {}
  array = [];
try { if (Inst25 <= 1000 && typeof (array) != "undefined") {_RecordType("<214,219,20>",(array)); Inst25++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (foo) != "undefined") {_RecordType("<228,231,21>",(foo)); Inst26++; } } catch(e) {}
  foo(2147483647);

try { if (Inst27 <= 1000 && typeof (array) != "undefined") {_RecordType("<257,262,23>",(array)); Inst27++; } } catch(e) {}
  if ("" + array != "2147484647,2147485647,2147486647") {
try { if (Inst28 <= 1000 && typeof (array) != "undefined") {_RecordType("<337,342,24>",(array)); Inst28++; } } catch(e) {}
    throw "Error: bad array: " + array;
  }
}

