var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (Foo) != "undefined") {_RecordType("<9,12,1>",(Foo)); Inst0++; } } catch(e) {}
function Foo() {
  this.f = 42;
try { if (Inst1 <= 1000 && typeof (this.f) != "undefined") {_RecordType("<19,25,2>",(this.f)); Inst1++; } } catch(e) {}
}

try { if (Inst2 <= 1000 && typeof (bar) != "undefined") {_RecordType("<44,47,5>",(bar)); Inst2++; } } catch(e) {}
function bar() {
try { if (Inst3 <= 1000 && typeof (Foo) != "undefined") {_RecordType("<65,68,6>",(Foo)); Inst3++; } } catch(e) {}
  return new Foo();
}

try { if (Inst4 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<75,83,9>",(noInline)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Foo) != "undefined") {_RecordType("<84,87,9>",(Foo)); Inst5++; } } catch(e) {}
noInline(Foo);
try { if (Inst6 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<90,98,10>",(noInline)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (bar) != "undefined") {_RecordType("<99,102,10>",(bar)); Inst7++; } } catch(e) {}
noInline(bar);

(function () {
  for (var i = 0; i < 10000000; ++i) {
try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<132,133,13>",(i)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<139,140,13>",(i)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<155,156,13>",(i)); Inst10++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (bar) != "undefined") {_RecordType("<177,180,14>",(bar)); Inst12++; } } catch(e) {}
    var result = bar();
try { if (Inst11 <= 1000 && typeof (result) != "undefined") {_RecordType("<168,174,14>",(result)); Inst11++; } } catch(e) {}

try { if (Inst13 <= 1000 && typeof (result.f) != "undefined") {_RecordType("<193,201,16>",(result.f)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (result) != "undefined") {_RecordType("<193,199,16>",(result)); Inst14++; } } catch(e) {}
    if (result.f != 42) {
try { if (Inst15 <= 1000 && typeof (result) != "undefined") {_RecordType("<247,253,17>",(result)); Inst15++; } } catch(e) {}
      throw "Error: bad result: " + result;
    }
  }
})();

