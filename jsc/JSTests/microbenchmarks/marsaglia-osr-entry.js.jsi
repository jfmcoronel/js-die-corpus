var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// This is a great test for checking if OSR entry works at all. It's great for debugging
// fundamental OSR entry bugs.
try { if (Inst0 <= 1000 && typeof (marsaglia) != "undefined") {_RecordType("<129,138,3>",(marsaglia)); Inst0++; } } catch(e) {}
function marsaglia(m_z, m_w, n) {
try { if (Inst1 <= 1000 && typeof (m_z) != "undefined") {_RecordType("<139,142,3>",(m_z)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (m_w) != "undefined") {_RecordType("<144,147,3>",(m_w)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (n) != "undefined") {_RecordType("<149,150,3>",(n)); Inst3++; } } catch(e) {}
  var result;
try { if (Inst4 <= 1000 && typeof (result) != "undefined") {_RecordType("<160,166,4>",(result)); Inst4++; } } catch(e) {}

  for (var i = 0; i < n; ++i) {
try { if (Inst5 <= 1000 && typeof (i) != "undefined") {_RecordType("<180,181,6>",(i)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<187,188,6>",(i)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (n) != "undefined") {_RecordType("<191,192,6>",(n)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<196,197,6>",(i)); Inst8++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (m_z) != "undefined") {_RecordType("<220,223,7>",(m_z)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (m_z) != "undefined") {_RecordType("<236,239,7>",(m_z)); Inst11++; } } catch(e) {}
    m_z = 36969 * (m_z & 65535) + (m_z >> 16) | 0;
try { if (Inst9 <= 1000 && typeof (m_z) != "undefined") {_RecordType("<205,208,7>",(m_z)); Inst9++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (m_w) != "undefined") {_RecordType("<271,274,8>",(m_w)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (m_w) != "undefined") {_RecordType("<287,290,8>",(m_w)); Inst14++; } } catch(e) {}
    m_w = 18000 * (m_w & 65535) + (m_w >> 16) | 0;
try { if (Inst12 <= 1000 && typeof (m_w) != "undefined") {_RecordType("<256,259,8>",(m_w)); Inst12++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (m_z) != "undefined") {_RecordType("<317,320,9>",(m_z)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (m_w) != "undefined") {_RecordType("<330,333,9>",(m_w)); Inst17++; } } catch(e) {}
    result = (m_z << 16) + m_w | 0;
try { if (Inst15 <= 1000 && typeof (result) != "undefined") {_RecordType("<307,313,9>",(result)); Inst15++; } } catch(e) {}
  }

try { if (Inst18 <= 1000 && typeof (result) != "undefined") {_RecordType("<353,359,12>",(result)); Inst18++; } } catch(e) {}
  return result;
}

try { if (Inst20 <= 1000 && typeof (marsaglia) != "undefined") {_RecordType("<377,386,15>",(marsaglia)); Inst20++; } } catch(e) {}
var result = marsaglia(5, 7, 10000000);
try { if (Inst19 <= 1000 && typeof (result) != "undefined") {_RecordType("<368,374,15>",(result)); Inst19++; } } catch(e) {}

try { if (Inst21 <= 1000 && typeof (result) != "undefined") {_RecordType("<409,415,17>",(result)); Inst21++; } } catch(e) {}
if (result != -1047364056) {
try { if (Inst22 <= 1000 && typeof (result) != "undefined") {_RecordType("<466,472,18>",(result)); Inst22++; } } catch(e) {}
  throw "Error: bad result: " + result;
}

