var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst1 <= 1000 && typeof (Int32Array) != "undefined") {_RecordType("<16,26,1>",(Int32Array)); Inst1++; } } catch(e) {}
var array = new Int32Array(1);
try { if (Inst0 <= 1000 && typeof (array) != "undefined") {_RecordType("<4,9,1>",(array)); Inst0++; } } catch(e) {}

try { if (Inst2 <= 1000 && typeof (foo) != "undefined") {_RecordType("<41,44,3>",(foo)); Inst2++; } } catch(e) {}
function foo(value) {
try { if (Inst3 <= 1000 && typeof (value) != "undefined") {_RecordType("<45,50,3>",(value)); Inst3++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (value) != "undefined") {_RecordType("<67,72,4>",(value)); Inst6++; } } catch(e) {}
  array[0] = value;
try { if (Inst4 <= 1000 && typeof (array[0]) != "undefined") {_RecordType("<56,64,4>",(array[0])); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (array) != "undefined") {_RecordType("<56,61,4>",(array)); Inst5++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (array[0]) != "undefined") {_RecordType("<83,91,5>",(array[0])); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (array) != "undefined") {_RecordType("<83,88,5>",(array)); Inst8++; } } catch(e) {}
  return array[0];
}

try { if (Inst9 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<96,104,8>",(noInline)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (foo) != "undefined") {_RecordType("<105,108,8>",(foo)); Inst10++; } } catch(e) {}
noInline(foo);

try { if (Inst11 <= 1000 && typeof (test) != "undefined") {_RecordType("<121,125,10>",(test)); Inst11++; } } catch(e) {}
function test(input, output) {
try { if (Inst12 <= 1000 && typeof (input) != "undefined") {_RecordType("<126,131,10>",(input)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (output) != "undefined") {_RecordType("<133,139,10>",(output)); Inst13++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (foo) != "undefined") {_RecordType("<158,161,11>",(foo)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (input) != "undefined") {_RecordType("<162,167,11>",(input)); Inst16++; } } catch(e) {}
  var result = foo(input);
try { if (Inst14 <= 1000 && typeof (result) != "undefined") {_RecordType("<149,155,11>",(result)); Inst14++; } } catch(e) {}

try { if (Inst17 <= 1000 && typeof (result) != "undefined") {_RecordType("<177,183,13>",(result)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (output) != "undefined") {_RecordType("<187,193,13>",(output)); Inst18++; } } catch(e) {}
  if (result != output) {
try { if (Inst19 <= 1000 && typeof (input) != "undefined") {_RecordType("<219,224,14>",(input)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (output) != "undefined") {_RecordType("<259,265,14>",(output)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (result) != "undefined") {_RecordType("<290,296,14>",(result)); Inst21++; } } catch(e) {}
    throw "Error: " + input + " was supposed to result in " + output + " but instead got " + result;
  }
}

for (var i = 0; i < 100000; ++i) {
try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<314,315,18>",(i)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<321,322,18>",(i)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<335,336,18>",(i)); Inst24++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (test) != "undefined") {_RecordType("<342,346,19>",(test)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (i) != "undefined") {_RecordType("<347,348,19>",(i)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (i) != "undefined") {_RecordType("<356,357,19>",(i)); Inst27++; } } catch(e) {}
  test(i + 0.5, i);
}

try { if (Inst28 <= 1000 && typeof (test) != "undefined") {_RecordType("<363,367,22>",(test)); Inst28++; } } catch(e) {}
test(0, 0);
try { if (Inst29 <= 1000 && typeof (test) != "undefined") {_RecordType("<375,379,23>",(test)); Inst29++; } } catch(e) {}
test(100.5, 100);
try { if (Inst30 <= 1000 && typeof (test) != "undefined") {_RecordType("<393,397,24>",(test)); Inst30++; } } catch(e) {}
test(-100.5, -100);
try { if (Inst31 <= 1000 && typeof (test) != "undefined") {_RecordType("<413,417,25>",(test)); Inst31++; } } catch(e) {}
test(3000000000, -1294967296);
try { if (Inst32 <= 1000 && typeof (test) != "undefined") {_RecordType("<444,448,26>",(test)); Inst32++; } } catch(e) {}
test(-3000000000, 1294967296);
try { if (Inst33 <= 1000 && typeof (test) != "undefined") {_RecordType("<475,479,27>",(test)); Inst33++; } } catch(e) {}
test(-2147483648, -2147483648);

