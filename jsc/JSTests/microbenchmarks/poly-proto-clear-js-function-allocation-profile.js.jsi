var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (assert) != "undefined") {_RecordType("<9,15,1>",(assert)); Inst0++; } } catch(e) {}
function assert(b) {
try { if (Inst1 <= 1000 && typeof (b) != "undefined") {_RecordType("<16,17,1>",(b)); Inst1++; } } catch(e) {}
  ;
}

try { if (Inst2 <= 1000 && typeof (foo) != "undefined") {_RecordType("<37,40,5>",(foo)); Inst2++; } } catch(e) {}
function foo() {
  class Foo {
    ensureX() {
try { if (Inst4 <= 1000 && typeof (this.x) != "undefined") {_RecordType("<86,92,8>",(this.x)); Inst4++; } } catch(e) {}
      if (!this.x) {
        this.x = 22;
try { if (Inst5 <= 1000 && typeof (this.x) != "undefined") {_RecordType("<104,110,9>",(this.x)); Inst5++; } } catch(e) {}
      }

      return this;
    }

  }
try { if (Inst3 <= 1000 && typeof (Foo) != "undefined") {_RecordType("<53,56,6>",(Foo)); Inst3++; } } catch(e) {}

  ;
try { if (Inst6 <= 1000 && typeof (Foo) != "undefined") {_RecordType("<170,173,18>",(Foo)); Inst6++; } } catch(e) {}
  return Foo;
}

try { if (Inst7 <= 1000 && typeof (access) != "undefined") {_RecordType("<187,193,21>",(access)); Inst7++; } } catch(e) {}
function access(o) {
try { if (Inst8 <= 1000 && typeof (o) != "undefined") {_RecordType("<194,195,21>",(o)); Inst8++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (o.ensureX().x) != "undefined") {_RecordType("<208,221,22>",(o.ensureX().x)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (o.ensureX) != "undefined") {_RecordType("<208,217,22>",(o.ensureX)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (o) != "undefined") {_RecordType("<208,209,22>",(o)); Inst11++; } } catch(e) {}
  return o.ensureX().x === 22;
}

try { if (Inst12 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<233,241,25>",(noInline)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (access) != "undefined") {_RecordType("<242,248,25>",(access)); Inst13++; } } catch(e) {}
noInline(access);
let ctors = [];
try { if (Inst14 <= 1000 && typeof (ctors) != "undefined") {_RecordType("<255,260,26>",(ctors)); Inst14++; } } catch(e) {}

for (let i = 0; i < 50; ++i) {
try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<277,278,28>",(i)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<284,285,28>",(i)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (i) != "undefined") {_RecordType("<294,295,28>",(i)); Inst17++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (foo) != "undefined") {_RecordType("<312,315,29>",(foo)); Inst19++; } } catch(e) {}
  let ctor = foo();
try { if (Inst18 <= 1000 && typeof (ctor) != "undefined") {_RecordType("<305,309,29>",(ctor)); Inst18++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (ctor) != "undefined") {_RecordType("<325,329,30>",(ctor)); Inst20++; } } catch(e) {}
  new ctor(); // warm things up

try { if (Inst21 <= 1000 && typeof (ctors.push) != "undefined") {_RecordType("<354,364,32>",(ctors.push)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (ctors) != "undefined") {_RecordType("<354,359,32>",(ctors)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (ctor) != "undefined") {_RecordType("<365,369,32>",(ctor)); Inst23++; } } catch(e) {}
  ctors.push(ctor);
}

try { if (Inst25 <= 1000 && typeof (Date.now) != "undefined") {_RecordType("<387,395,35>",(Date.now)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Date) != "undefined") {_RecordType("<387,391,35>",(Date)); Inst26++; } } catch(e) {}
let start = Date.now();
try { if (Inst24 <= 1000 && typeof (start) != "undefined") {_RecordType("<379,384,35>",(start)); Inst24++; } } catch(e) {}

for (let i = 0; i < 5000; ++i) {
try { if (Inst27 <= 1000 && typeof (i) != "undefined") {_RecordType("<409,410,37>",(i)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (i) != "undefined") {_RecordType("<416,417,37>",(i)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (i) != "undefined") {_RecordType("<428,429,37>",(i)); Inst29++; } } catch(e) {}
  for (let i = 0; i < ctors.length; ++i) {
try { if (Inst30 <= 1000 && typeof (i) != "undefined") {_RecordType("<444,445,38>",(i)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (i) != "undefined") {_RecordType("<451,452,38>",(i)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (ctors.length) != "undefined") {_RecordType("<455,467,38>",(ctors.length)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (ctors) != "undefined") {_RecordType("<455,460,38>",(ctors)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (i) != "undefined") {_RecordType("<471,472,38>",(i)); Inst34++; } } catch(e) {}
try { if (Inst35 <= 1000 && typeof (access) != "undefined") {_RecordType("<480,486,39>",(access)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (ctors[i]) != "undefined") {_RecordType("<491,499,39>",(ctors[i])); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (ctors) != "undefined") {_RecordType("<491,496,39>",(ctors)); Inst37++; } } catch(e) {}
    access(new ctors[i]());
  }
}

if (false) {
try { if (Inst38 <= 1000 && typeof (print) != "undefined") {_RecordType("<526,531,44>",(print)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (Date.now) != "undefined") {_RecordType("<532,540,44>",(Date.now)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (Date) != "undefined") {_RecordType("<532,536,44>",(Date)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (start) != "undefined") {_RecordType("<545,550,44>",(start)); Inst41++; } } catch(e) {}
  print(Date.now() - start);
}

