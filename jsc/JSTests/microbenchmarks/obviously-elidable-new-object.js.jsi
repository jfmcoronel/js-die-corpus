var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (sumOfArithSeries) != "undefined") {_RecordType("<9,25,1>",(sumOfArithSeries)); Inst0++; } } catch(e) {}
function sumOfArithSeries(limit) {
try { if (Inst1 <= 1000 && typeof (limit) != "undefined") {_RecordType("<26,31,1>",(limit)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (limit) != "undefined") {_RecordType("<44,49,2>",(limit)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (limit) != "undefined") {_RecordType("<53,58,2>",(limit)); Inst3++; } } catch(e) {}
  return limit * (limit + 1) / 2;
}

var n = 10000000;
try { if (Inst4 <= 1000 && typeof (n) != "undefined") {_RecordType("<76,77,5>",(n)); Inst4++; } } catch(e) {}

try { if (Inst5 <= 1000 && typeof (foo) != "undefined") {_RecordType("<100,103,7>",(foo)); Inst5++; } } catch(e) {}
function foo() {
  var result = 0;
try { if (Inst6 <= 1000 && typeof (result) != "undefined") {_RecordType("<114,120,8>",(result)); Inst6++; } } catch(e) {}

  for (var i = 0; i < n; ++i) {
try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<138,139,10>",(i)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<145,146,10>",(i)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (n) != "undefined") {_RecordType("<149,150,10>",(n)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<154,155,10>",(i)); Inst10++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<182,183,12>",(i)); Inst12++; } } catch(e) {}
    var o = {
      f: i
    };
try { if (Inst11 <= 1000 && typeof (o) != "undefined") {_RecordType("<167,168,11>",(o)); Inst11++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<214,215,15>",(i)); Inst14++; } } catch(e) {}
    var p = {
      f: i + 1
    };
try { if (Inst13 <= 1000 && typeof (p) != "undefined") {_RecordType("<199,200,14>",(p)); Inst13++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (o.f) != "undefined") {_RecordType("<241,244,17>",(o.f)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (o) != "undefined") {_RecordType("<241,242,17>",(o)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (p.f) != "undefined") {_RecordType("<247,250,17>",(p.f)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (p) != "undefined") {_RecordType("<247,248,17>",(p)); Inst19++; } } catch(e) {}
    result += o.f + p.f;
try { if (Inst15 <= 1000 && typeof (result) != "undefined") {_RecordType("<231,237,17>",(result)); Inst15++; } } catch(e) {}
  }

try { if (Inst20 <= 1000 && typeof (result) != "undefined") {_RecordType("<266,272,20>",(result)); Inst20++; } } catch(e) {}
  return result;
}

try { if (Inst22 <= 1000 && typeof (foo) != "undefined") {_RecordType("<290,293,23>",(foo)); Inst22++; } } catch(e) {}
var result = foo();
try { if (Inst21 <= 1000 && typeof (result) != "undefined") {_RecordType("<281,287,23>",(result)); Inst21++; } } catch(e) {}

try { if (Inst23 <= 1000 && typeof (result) != "undefined") {_RecordType("<302,308,25>",(result)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (sumOfArithSeries) != "undefined") {_RecordType("<312,328,25>",(sumOfArithSeries)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (n) != "undefined") {_RecordType("<329,330,25>",(n)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (sumOfArithSeries) != "undefined") {_RecordType("<338,354,25>",(sumOfArithSeries)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (n) != "undefined") {_RecordType("<355,356,25>",(n)); Inst27++; } } catch(e) {}
if (result != sumOfArithSeries(n - 1) + sumOfArithSeries(n)) {
try { if (Inst28 <= 1000 && typeof (result) != "undefined") {_RecordType("<393,399,26>",(result)); Inst28++; } } catch(e) {}
  throw "Error: bad result: " + result;
}

