var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
"use strict";

try { if (Inst0 <= 1000 && typeof (foo) != "undefined") {_RecordType("<24,27,3>",(foo)); Inst0++; } } catch(e) {}
function foo(...rest) {
try { if (Inst1 <= 1000 && typeof (rest) != "undefined") {_RecordType("<31,35,3>",(rest)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (rest) != "undefined") {_RecordType("<48,52,4>",(rest)); Inst2++; } } catch(e) {}
  return rest;
}

try { if (Inst3 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<57,65,7>",(noInline)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (foo) != "undefined") {_RecordType("<66,69,7>",(foo)); Inst4++; } } catch(e) {}
noInline(foo);
const iters = 900000;
try { if (Inst5 <= 1000 && typeof (iters) != "undefined") {_RecordType("<78,83,8>",(iters)); Inst5++; } } catch(e) {}

try { if (Inst6 <= 1000 && typeof (test1) != "undefined") {_RecordType("<104,109,10>",(test1)); Inst6++; } } catch(e) {}
function test1() {
  let o = {};
try { if (Inst7 <= 1000 && typeof (o) != "undefined") {_RecordType("<120,121,11>",(o)); Inst7++; } } catch(e) {}
  let a = [];
try { if (Inst8 <= 1000 && typeof (a) != "undefined") {_RecordType("<134,135,12>",(a)); Inst8++; } } catch(e) {}

  for (let i = 0; i < iters; i++) {
try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<154,155,14>",(i)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<161,162,14>",(i)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (iters) != "undefined") {_RecordType("<165,170,14>",(iters)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<172,173,14>",(i)); Inst12++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (foo) != "undefined") {_RecordType("<183,186,15>",(foo)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (o) != "undefined") {_RecordType("<195,196,15>",(o)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (a) != "undefined") {_RecordType("<202,203,15>",(a)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (a) != "undefined") {_RecordType("<214,215,15>",(a)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (o) != "undefined") {_RecordType("<217,218,15>",(o)); Inst17++; } } catch(e) {}
    foo(10, 20, o, 55, a, 120.341, a, o);
  }
}

try { if (Inst18 <= 1000 && typeof (test2) != "undefined") {_RecordType("<237,242,19>",(test2)); Inst18++; } } catch(e) {}
function test2() {
try { if (Inst19 <= 1000 && typeof (foo) != "undefined") {_RecordType("<258,261,20>",(foo)); Inst19++; } } catch(e) {}
  function foo(...rest) {
try { if (Inst20 <= 1000 && typeof (rest) != "undefined") {_RecordType("<265,269,20>",(rest)); Inst20++; } } catch(e) {}
    // Allow this to be inlined.
try { if (Inst21 <= 1000 && typeof (rest) != "undefined") {_RecordType("<317,321,22>",(rest)); Inst21++; } } catch(e) {}
    return rest;
  }

  let o = {};
try { if (Inst22 <= 1000 && typeof (o) != "undefined") {_RecordType("<334,335,25>",(o)); Inst22++; } } catch(e) {}
  let a = [];
try { if (Inst23 <= 1000 && typeof (a) != "undefined") {_RecordType("<348,349,26>",(a)); Inst23++; } } catch(e) {}

  for (let i = 0; i < iters; i++) {
try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<368,369,28>",(i)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<375,376,28>",(i)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (iters) != "undefined") {_RecordType("<379,384,28>",(iters)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (i) != "undefined") {_RecordType("<386,387,28>",(i)); Inst27++; } } catch(e) {}
try { if (Inst28 <= 1000 && typeof (foo) != "undefined") {_RecordType("<397,400,29>",(foo)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (o) != "undefined") {_RecordType("<409,410,29>",(o)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (a) != "undefined") {_RecordType("<416,417,29>",(a)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (a) != "undefined") {_RecordType("<428,429,29>",(a)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (o) != "undefined") {_RecordType("<431,432,29>",(o)); Inst32++; } } catch(e) {}
    foo(10, 20, o, 55, a, 120.341, a, o);
  }
}

try { if (Inst33 <= 1000 && typeof (test1) != "undefined") {_RecordType("<442,447,33>",(test1)); Inst33++; } } catch(e) {}
test1();
try { if (Inst34 <= 1000 && typeof (test2) != "undefined") {_RecordType("<451,456,34>",(test2)); Inst34++; } } catch(e) {}
test2();

