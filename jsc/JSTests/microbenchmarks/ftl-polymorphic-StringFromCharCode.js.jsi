var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//@ runFTLNoCJIT
var o1 = {
  i: 65,
  valueOf: function () {
try { if (Inst1 <= 1000 && typeof (this.i) != "undefined") {_RecordType("<73,79,5>",(this.i)); Inst1++; } } catch(e) {}
    return this.i;
  }
};
try { if (Inst0 <= 1000 && typeof (o1) != "undefined") {_RecordType("<21,23,2>",(o1)); Inst0++; } } catch(e) {}
result = 0;
try { if (Inst2 <= 1000 && typeof (result) != "undefined") {_RecordType("<88,94,8>",(result)); Inst2++; } } catch(e) {}

try { if (Inst3 <= 1000 && typeof (foo) != "undefined") {_RecordType("<110,113,10>",(foo)); Inst3++; } } catch(e) {}
function foo(a) {
try { if (Inst4 <= 1000 && typeof (a) != "undefined") {_RecordType("<114,115,10>",(a)); Inst4++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (String.fromCharCode) != "undefined") {_RecordType("<134,153,11>",(String.fromCharCode)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (String) != "undefined") {_RecordType("<134,140,11>",(String)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (a) != "undefined") {_RecordType("<154,155,11>",(a)); Inst8++; } } catch(e) {}
  var result = String.fromCharCode(a); // Busy work just to allow the DFG and FTL to optimize this. If the above causes
try { if (Inst5 <= 1000 && typeof (result) != "undefined") {_RecordType("<125,131,11>",(result)); Inst5++; } } catch(e) {}
  // us to speculation fail out to the baseline, this busy work will take a lot longer
  // to run.
  // This loop below also gets the DFG to compile this function sooner.

  var count = 0;
try { if (Inst9 <= 1000 && typeof (count) != "undefined") {_RecordType("<418,423,16>",(count)); Inst9++; } } catch(e) {}

  for (var i = 0; i < 1000; i++) {
try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<441,442,18>",(i)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<448,449,18>",(i)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<458,459,18>",(i)); Inst12++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (count) != "undefined") {_RecordType("<469,474,19>",(count)); Inst13++; } } catch(e) {}
    count++;
  }

try { if (Inst14 <= 1000 && typeof (result) != "undefined") {_RecordType("<492,498,22>",(result)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (count) != "undefined") {_RecordType("<501,506,22>",(count)); Inst15++; } } catch(e) {}
  return result + count;
}

try { if (Inst16 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<511,519,25>",(noInline)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (foo) != "undefined") {_RecordType("<520,523,25>",(foo)); Inst17++; } } catch(e) {}
noInline(foo);
var iterations;
try { if (Inst18 <= 1000 && typeof (iterations) != "undefined") {_RecordType("<530,540,26>",(iterations)); Inst18++; } } catch(e) {}
var expectedResult;
try { if (Inst19 <= 1000 && typeof (expectedResult) != "undefined") {_RecordType("<546,560,27>",(expectedResult)); Inst19++; } } catch(e) {}

try { if (Inst20 <= 1000 && typeof (this.window) != "undefined") {_RecordType("<567,578,29>",(this.window)); Inst20++; } } catch(e) {}
if (this.window) {
  // The layout test doesn't like too many iterations and may time out.
  iterations = 10000;
try { if (Inst21 <= 1000 && typeof (iterations) != "undefined") {_RecordType("<656,666,31>",(iterations)); Inst21++; } } catch(e) {}
  expectedResult = 10001;
try { if (Inst22 <= 1000 && typeof (expectedResult) != "undefined") {_RecordType("<678,692,32>",(expectedResult)); Inst22++; } } catch(e) {}
} else {
  iterations = 100000;
try { if (Inst23 <= 1000 && typeof (iterations) != "undefined") {_RecordType("<713,723,34>",(iterations)); Inst23++; } } catch(e) {}
  expectedResult = 100001;
try { if (Inst24 <= 1000 && typeof (expectedResult) != "undefined") {_RecordType("<736,750,35>",(expectedResult)); Inst24++; } } catch(e) {}
}

for (var i = 0; i <= iterations; i++) {
try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<773,774,38>",(i)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (i) != "undefined") {_RecordType("<780,781,38>",(i)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (iterations) != "undefined") {_RecordType("<785,795,38>",(iterations)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (i) != "undefined") {_RecordType("<797,798,38>",(i)); Inst28++; } } catch(e) {}
  var resultStr;
try { if (Inst29 <= 1000 && typeof (resultStr) != "undefined") {_RecordType("<810,819,39>",(resultStr)); Inst29++; } } catch(e) {}

try { if (Inst30 <= 1000 && typeof (i) != "undefined") {_RecordType("<828,829,41>",(i)); Inst30++; } } catch(e) {}
  if (i % 2 == 2) {
try { if (Inst32 <= 1000 && typeof (foo) != "undefined") {_RecordType("<858,861,42>",(foo)); Inst32++; } } catch(e) {}
    resultStr = foo('65');
try { if (Inst31 <= 1000 && typeof (resultStr) != "undefined") {_RecordType("<846,855,42>",(resultStr)); Inst31++; } } catch(e) {}
  } else {
try { if (Inst33 <= 1000 && typeof (i) != "undefined") {_RecordType("<888,889,44>",(i)); Inst33++; } } catch(e) {}
    if (i % 2 == 1) {
try { if (Inst35 <= 1000 && typeof (foo) != "undefined") {_RecordType("<920,923,45>",(foo)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (o1) != "undefined") {_RecordType("<924,926,45>",(o1)); Inst36++; } } catch(e) {}
      resultStr = foo(o1);
try { if (Inst34 <= 1000 && typeof (resultStr) != "undefined") {_RecordType("<908,917,45>",(resultStr)); Inst34++; } } catch(e) {}
    } else {
try { if (Inst38 <= 1000 && typeof (foo) != "undefined") {_RecordType("<960,963,47>",(foo)); Inst38++; } } catch(e) {}
      resultStr = foo(65);
try { if (Inst37 <= 1000 && typeof (resultStr) != "undefined") {_RecordType("<948,957,47>",(resultStr)); Inst37++; } } catch(e) {}
    }
  }

try { if (Inst39 <= 1000 && typeof (resultStr) != "undefined") {_RecordType("<986,995,51>",(resultStr)); Inst39++; } } catch(e) {}
  if (resultStr == 'A1000') {
try { if (Inst40 <= 1000 && typeof (result) != "undefined") {_RecordType("<1014,1020,52>",(result)); Inst40++; } } catch(e) {}
    result++;
  }
}

try { if (Inst41 <= 1000 && typeof (result) != "undefined") {_RecordType("<1035,1041,56>",(result)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (expectedResult) != "undefined") {_RecordType("<1045,1059,56>",(expectedResult)); Inst42++; } } catch(e) {}
if (result != expectedResult) {
try { if (Inst43 <= 1000 && typeof (result) != "undefined") {_RecordType("<1088,1094,57>",(result)); Inst43++; } } catch(e) {}
  throw "Bad result: " + result;
}

