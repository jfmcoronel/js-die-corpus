var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
var f = "f",
    g = "g",
    h = "h";
try { if (Inst0 <= 1000 && typeof (f) != "undefined") {_RecordType("<4,5,1>",(f)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (g) != "undefined") {_RecordType("<17,18,2>",(g)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (h) != "undefined") {_RecordType("<30,31,3>",(h)); Inst2++; } } catch(e) {}

try { if (Inst3 <= 1000 && typeof (foo) != "undefined") {_RecordType("<49,52,5>",(foo)); Inst3++; } } catch(e) {}
function foo(o) {
try { if (Inst4 <= 1000 && typeof (o) != "undefined") {_RecordType("<53,54,5>",(o)); Inst4++; } } catch(e) {}
  for (var i = 0; i < 100; ++i) {
try { if (Inst5 <= 1000 && typeof (i) != "undefined") {_RecordType("<69,70,6>",(i)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<76,77,6>",(i)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<87,88,6>",(i)); Inst7++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (o[f]) != "undefined") {_RecordType("<104,108,7>",(o[f])); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (o) != "undefined") {_RecordType("<104,105,7>",(o)); Inst11++; } } catch(e) {}
    o[f] = (o[f] | 0) + 42;
try { if (Inst8 <= 1000 && typeof (o[f]) != "undefined") {_RecordType("<96,100,7>",(o[f])); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (o) != "undefined") {_RecordType("<96,97,7>",(o)); Inst9++; } } catch(e) {}
  }
}

try { if (Inst12 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<127,135,11>",(noInline)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (foo) != "undefined") {_RecordType("<136,139,11>",(foo)); Inst13++; } } catch(e) {}
noInline(foo);

for (var i = 0; i < 100000; ++i) {
try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<152,153,13>",(i)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<159,160,13>",(i)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<173,174,13>",(i)); Inst16++; } } catch(e) {}
  var object;
try { if (Inst17 <= 1000 && typeof (object) != "undefined") {_RecordType("<184,190,14>",(object)); Inst17++; } } catch(e) {}

try { if (Inst18 <= 1000 && typeof (i) != "undefined") {_RecordType("<199,200,16>",(i)); Inst18++; } } catch(e) {}
  if (i % 3 == 0) {
    object = {
      [g]: 3
    };
try { if (Inst19 <= 1000 && typeof (object) != "undefined") {_RecordType("<217,223,17>",(object)); Inst19++; } } catch(e) {}
  } else {
try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<267,268,21>",(i)); Inst20++; } } catch(e) {}
    if (i % 3 == 1) {
      object = {
        [f]: 1,
        [g]: 2
      };
try { if (Inst21 <= 1000 && typeof (object) != "undefined") {_RecordType("<287,293,22>",(object)); Inst21++; } } catch(e) {}
    } else {
try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<361,362,27>",(i)); Inst22++; } } catch(e) {}
      if (i % 3 == 2) {
        object = {
          [g]: 1,
          [f]: 2
        };
try { if (Inst23 <= 1000 && typeof (object) != "undefined") {_RecordType("<383,389,28>",(object)); Inst23++; } } catch(e) {}
      }
    }
  }

try { if (Inst24 <= 1000 && typeof (foo) != "undefined") {_RecordType("<461,464,36>",(foo)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (object) != "undefined") {_RecordType("<465,471,36>",(object)); Inst25++; } } catch(e) {}
  foo(object);

try { if (Inst26 <= 1000 && typeof (object[f]) != "undefined") {_RecordType("<481,490,38>",(object[f])); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (object) != "undefined") {_RecordType("<481,487,38>",(object)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (i) != "undefined") {_RecordType("<505,506,38>",(i)); Inst28++; } } catch(e) {}
  if (object[f] != 42 * 100 + i % 3) {
try { if (Inst29 <= 1000 && typeof (i) != "undefined") {_RecordType("<555,556,39>",(i)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (object[f]) != "undefined") {_RecordType("<566,575,39>",(object[f])); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (object) != "undefined") {_RecordType("<566,572,39>",(object)); Inst31++; } } catch(e) {}
    throw "Error: bad result for i = " + i + ": " + object[f];
  }
}

var r = {
  [g]: 3,
  [h]: 4,
  [f]: 5
};
try { if (Inst32 <= 1000 && typeof (r) != "undefined") {_RecordType("<588,589,43>",(r)); Inst32++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (foo) != "undefined") {_RecordType("<626,629,48>",(foo)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (r) != "undefined") {_RecordType("<630,631,48>",(r)); Inst34++; } } catch(e) {}
foo(r);

try { if (Inst35 <= 1000 && typeof (r[f]) != "undefined") {_RecordType("<639,643,50>",(r[f])); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (r) != "undefined") {_RecordType("<639,640,50>",(r)); Inst36++; } } catch(e) {}
if (r[f] != 5 + 42 * 100) {
try { if (Inst37 <= 1000 && typeof (r[f]) != "undefined") {_RecordType("<702,706,51>",(r[f])); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (r) != "undefined") {_RecordType("<702,703,51>",(r)); Inst38++; } } catch(e) {}
  throw "Error: bad result at end: " + r[f];
}

