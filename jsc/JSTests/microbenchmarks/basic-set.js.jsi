var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//@ runNoFTL
try { if (Inst1 <= 1000 && typeof (Set) != "undefined") {_RecordType("<27,30,2>",(Set)); Inst1++; } } catch(e) {}
var set = new Set();
try { if (Inst0 <= 1000 && typeof (set) != "undefined") {_RecordType("<17,20,2>",(set)); Inst0++; } } catch(e) {}

for (var i = 0; i < 8000; ++i) {
try { if (Inst2 <= 1000 && typeof (i) != "undefined") {_RecordType("<44,45,4>",(i)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (i) != "undefined") {_RecordType("<51,52,4>",(i)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (i) != "undefined") {_RecordType("<63,64,4>",(i)); Inst4++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (set.add) != "undefined") {_RecordType("<70,77,5>",(set.add)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (set) != "undefined") {_RecordType("<70,73,5>",(set)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<78,79,5>",(i)); Inst7++; } } catch(e) {}
  set.add(i);
try { if (Inst8 <= 1000 && typeof (set.add) != "undefined") {_RecordType("<84,91,6>",(set.add)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (set) != "undefined") {_RecordType("<84,87,6>",(set)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<97,98,6>",(i)); Inst10++; } } catch(e) {}
  set.add("" + i);
try { if (Inst11 <= 1000 && typeof (set.add) != "undefined") {_RecordType("<103,110,7>",(set.add)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (set) != "undefined") {_RecordType("<103,106,7>",(set)); Inst12++; } } catch(e) {}
  set.add({});
try { if (Inst13 <= 1000 && typeof (set.add) != "undefined") {_RecordType("<118,125,8>",(set.add)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (set) != "undefined") {_RecordType("<118,121,8>",(set)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<126,127,8>",(i)); Inst15++; } } catch(e) {}
  set.add(i + .5);
}

var result = 0;
try { if (Inst16 <= 1000 && typeof (result) != "undefined") {_RecordType("<142,148,11>",(result)); Inst16++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (set.forEach) != "undefined") {_RecordType("<154,165,12>",(set.forEach)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (set) != "undefined") {_RecordType("<154,157,12>",(set)); Inst18++; } } catch(e) {}
set.forEach(function (k) {
try { if (Inst19 <= 1000 && typeof (k) != "undefined") {_RecordType("<176,177,12>",(k)); Inst19++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (set.size) != "undefined") {_RecordType("<193,201,13>",(set.size)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (set) != "undefined") {_RecordType("<193,196,13>",(set)); Inst22++; } } catch(e) {}
  result += set.size;
try { if (Inst20 <= 1000 && typeof (result) != "undefined") {_RecordType("<183,189,13>",(result)); Inst20++; } } catch(e) {}
});

for (var i = 8000; i >= 0; --i) {
try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<217,218,16>",(i)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<227,228,16>",(i)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<237,238,16>",(i)); Inst25++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (set.delete) != "undefined") {_RecordType("<244,254,17>",(set.delete)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (set) != "undefined") {_RecordType("<244,247,17>",(set)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (i) != "undefined") {_RecordType("<255,256,17>",(i)); Inst28++; } } catch(e) {}
  set.delete(i);
try { if (Inst29 <= 1000 && typeof (set.has) != "undefined") {_RecordType("<261,268,18>",(set.has)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (set) != "undefined") {_RecordType("<261,264,18>",(set)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (i) != "undefined") {_RecordType("<274,275,18>",(i)); Inst31++; } } catch(e) {}
  set.has("" + i);
try { if (Inst32 <= 1000 && typeof (set.add) != "undefined") {_RecordType("<280,287,19>",(set.add)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (set) != "undefined") {_RecordType("<280,283,19>",(set)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (i) != "undefined") {_RecordType("<288,289,19>",(i)); Inst34++; } } catch(e) {}
  set.add(i + .5);
}

try { if (Inst35 <= 1000 && typeof (set.forEach) != "undefined") {_RecordType("<300,311,22>",(set.forEach)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (set) != "undefined") {_RecordType("<300,303,22>",(set)); Inst36++; } } catch(e) {}
set.forEach(function (k) {
try { if (Inst37 <= 1000 && typeof (k) != "undefined") {_RecordType("<322,323,22>",(k)); Inst37++; } } catch(e) {}
try { if (Inst39 <= 1000 && typeof (set.size) != "undefined") {_RecordType("<339,347,23>",(set.size)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (set) != "undefined") {_RecordType("<339,342,23>",(set)); Inst40++; } } catch(e) {}
  result += set.size;
try { if (Inst38 <= 1000 && typeof (result) != "undefined") {_RecordType("<329,335,23>",(result)); Inst38++; } } catch(e) {}
});

try { if (Inst41 <= 1000 && typeof (result) != "undefined") {_RecordType("<358,364,26>",(result)); Inst41++; } } catch(e) {}
if (result != 1600048001) {
try { if (Inst42 <= 1000 && typeof (result) != "undefined") {_RecordType("<407,413,27>",(result)); Inst42++; } } catch(e) {}
  throw "Bad result: " + result;
}

