var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (foo) != "undefined") {_RecordType("<9,12,1>",(foo)); Inst0++; } } catch(e) {}
function foo() {
  var x = 4;
try { if (Inst1 <= 1000 && typeof (x) != "undefined") {_RecordType("<23,24,2>",(x)); Inst1++; } } catch(e) {}
  var s;
try { if (Inst2 <= 1000 && typeof (s) != "undefined") {_RecordType("<36,37,3>",(s)); Inst2++; } } catch(e) {}
  var i;
try { if (Inst3 <= 1000 && typeof (i) != "undefined") {_RecordType("<45,46,4>",(i)); Inst3++; } } catch(e) {}

  for (i = 0; i < 2001; i++) {
try { if (Inst4 <= 1000 && typeof (i) != "undefined") {_RecordType("<56,57,6>",(i)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (i) != "undefined") {_RecordType("<63,64,6>",(i)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<73,74,6>",(i)); Inst6++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<88,89,7>",(i)); Inst7++; } } catch(e) {}
    if (i == 2000) {
      x = -4;
try { if (Inst8 <= 1000 && typeof (x) != "undefined") {_RecordType("<107,108,8>",(x)); Inst8++; } } catch(e) {}
    }

try { if (Inst10 <= 1000 && typeof (x) != "undefined") {_RecordType("<135,136,11>",(x)); Inst10++; } } catch(e) {}
    s = 1 / (x % 4);
try { if (Inst9 <= 1000 && typeof (s) != "undefined") {_RecordType("<126,127,11>",(s)); Inst9++; } } catch(e) {}
  }

try { if (Inst11 <= 1000 && typeof (s) != "undefined") {_RecordType("<157,158,14>",(s)); Inst11++; } } catch(e) {}
  return s;
}

try { if (Inst13 <= 1000 && typeof ((1 / (-4 % 4)).toString) != "undefined") {_RecordType("<171,194,17>",((1 / (-4 % 4)).toString)); Inst13++; } } catch(e) {}
var x = (1 / (-4 % 4)).toString();
try { if (Inst12 <= 1000 && typeof (x) != "undefined") {_RecordType("<167,168,17>",(x)); Inst12++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (foo().toString) != "undefined") {_RecordType("<206,220,18>",(foo().toString)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (foo) != "undefined") {_RecordType("<206,209,18>",(foo)); Inst16++; } } catch(e) {}
var y = foo().toString();
try { if (Inst14 <= 1000 && typeof (y) != "undefined") {_RecordType("<202,203,18>",(y)); Inst14++; } } catch(e) {}

try { if (Inst17 <= 1000 && typeof (x) != "undefined") {_RecordType("<229,230,20>",(x)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (y) != "undefined") {_RecordType("<234,235,20>",(y)); Inst18++; } } catch(e) {}
if (x != y) {
try { if (Inst19 <= 1000 && typeof (y) != "undefined") {_RecordType("<271,272,21>",(y)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (x) != "undefined") {_RecordType("<291,292,21>",(x)); Inst20++; } } catch(e) {}
  throw "Error: bad result: " + y + " (expected " + x + ")";
}

