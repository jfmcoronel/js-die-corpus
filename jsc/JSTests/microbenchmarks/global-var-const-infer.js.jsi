var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (foo) != "undefined") {_RecordType("<9,12,1>",(foo)); Inst0++; } } catch(e) {}
function foo() {
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<26,27,2>",(a)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (b) != "undefined") {_RecordType("<30,31,2>",(b)); Inst2++; } } catch(e) {}
  return a + b;
}

try { if (Inst3 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<36,44,5>",(noInline)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (foo) != "undefined") {_RecordType("<45,48,5>",(foo)); Inst4++; } } catch(e) {}
noInline(foo);
var a = 4;
try { if (Inst5 <= 1000 && typeof (a) != "undefined") {_RecordType("<55,56,6>",(a)); Inst5++; } } catch(e) {}
var b = 5;
try { if (Inst6 <= 1000 && typeof (b) != "undefined") {_RecordType("<66,67,7>",(b)); Inst6++; } } catch(e) {}

try { if (Inst7 <= 1000 && typeof (check) != "undefined") {_RecordType("<83,88,9>",(check)); Inst7++; } } catch(e) {}
function check(actual, expected) {
try { if (Inst8 <= 1000 && typeof (actual) != "undefined") {_RecordType("<89,95,9>",(actual)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (expected) != "undefined") {_RecordType("<97,105,9>",(expected)); Inst9++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (actual) != "undefined") {_RecordType("<115,121,10>",(actual)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (expected) != "undefined") {_RecordType("<125,133,10>",(expected)); Inst11++; } } catch(e) {}
  if (actual == expected) {
    return;
  }

try { if (Inst12 <= 1000 && typeof (expected) != "undefined") {_RecordType("<183,191,14>",(expected)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (actual) != "undefined") {_RecordType("<208,214,14>",(actual)); Inst13++; } } catch(e) {}
  throw "Error: expected " + expected + " but got " + actual;
}

for (var i = 0; i < 100; ++i) {
try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<228,229,17>",(i)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<235,236,17>",(i)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<246,247,17>",(i)); Inst16++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (check) != "undefined") {_RecordType("<253,258,18>",(check)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (foo) != "undefined") {_RecordType("<259,262,18>",(foo)); Inst18++; } } catch(e) {}
  check(foo(), 9);
}

a = 6;
try { if (Inst19 <= 1000 && typeof (a) != "undefined") {_RecordType("<273,274,21>",(a)); Inst19++; } } catch(e) {}

for (var i = 0; i < 1000; ++i) {
try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<290,291,23>",(i)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<297,298,23>",(i)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<309,310,23>",(i)); Inst22++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (check) != "undefined") {_RecordType("<316,321,24>",(check)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (foo) != "undefined") {_RecordType("<322,325,24>",(foo)); Inst24++; } } catch(e) {}
  check(foo(), 11);
}

b = 7;
try { if (Inst25 <= 1000 && typeof (b) != "undefined") {_RecordType("<337,338,27>",(b)); Inst25++; } } catch(e) {}

for (var i = 0; i < 10000; ++i) {
try { if (Inst26 <= 1000 && typeof (i) != "undefined") {_RecordType("<354,355,29>",(i)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (i) != "undefined") {_RecordType("<361,362,29>",(i)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (i) != "undefined") {_RecordType("<374,375,29>",(i)); Inst28++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (check) != "undefined") {_RecordType("<381,386,30>",(check)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (foo) != "undefined") {_RecordType("<387,390,30>",(foo)); Inst30++; } } catch(e) {}
  check(foo(), 13);
}

