var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
"use strict";

(function () {
try { if (Inst1 <= 1000 && typeof (call) != "undefined") {_RecordType("<46,50,5>",(call)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (ignored) != "undefined") {_RecordType("<51,58,5>",(ignored)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (a) != "undefined") {_RecordType("<60,61,5>",(a)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (b) != "undefined") {_RecordType("<63,64,5>",(b)); Inst4++; } } catch(e) {}
  let o = {
    call(ignored, a, b) {
try { if (Inst5 <= 1000 && typeof (a) != "undefined") {_RecordType("<81,82,6>",(a)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (b) != "undefined") {_RecordType("<85,86,6>",(b)); Inst6++; } } catch(e) {}
      return a + b;
    }

  };
try { if (Inst0 <= 1000 && typeof (o) != "undefined") {_RecordType("<36,37,4>",(o)); Inst0++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (o) != "undefined") {_RecordType("<111,112,10>",(o)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (a) != "undefined") {_RecordType("<115,116,10>",(a)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (b) != "undefined") {_RecordType("<118,119,10>",(b)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (a) != "undefined") {_RecordType("<124,125,10>",(a)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (b) != "undefined") {_RecordType("<132,133,10>",(b)); Inst12++; } } catch(e) {}
  let a = [o, (a, b) => a - 2 * b];
try { if (Inst7 <= 1000 && typeof (a) != "undefined") {_RecordType("<106,107,10>",(a)); Inst7++; } } catch(e) {}

try { if (Inst13 <= 1000 && typeof (foo) != "undefined") {_RecordType("<148,151,12>",(foo)); Inst13++; } } catch(e) {}
  function foo() {
    let result = 0;
try { if (Inst14 <= 1000 && typeof (result) != "undefined") {_RecordType("<164,170,13>",(result)); Inst14++; } } catch(e) {}

    for (let i = 0; i < 1000; ++i) {
try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<190,191,15>",(i)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<197,198,15>",(i)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (i) != "undefined") {_RecordType("<209,210,15>",(i)); Inst17++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (a[i % 5 == 0 | 0].call) != "undefined") {_RecordType("<229,251,16>",(a[i % 5 == 0 | 0].call)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (a[i % 5 == 0 | 0]) != "undefined") {_RecordType("<229,246,16>",(a[i % 5 == 0 | 0])); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (a) != "undefined") {_RecordType("<229,230,16>",(a)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<231,232,16>",(i)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (result) != "undefined") {_RecordType("<258,264,16>",(result)); Inst23++; } } catch(e) {}
      result = a[i % 5 == 0 | 0].call(null, result, 1);
try { if (Inst18 <= 1000 && typeof (result) != "undefined") {_RecordType("<220,226,16>",(result)); Inst18++; } } catch(e) {}
    }

try { if (Inst24 <= 1000 && typeof (result) != "undefined") {_RecordType("<288,294,19>",(result)); Inst24++; } } catch(e) {}
    return result;
  }

try { if (Inst25 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<303,311,22>",(noInline)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (foo) != "undefined") {_RecordType("<312,315,22>",(foo)); Inst26++; } } catch(e) {}
  noInline(foo);
  let result = 0;
try { if (Inst27 <= 1000 && typeof (result) != "undefined") {_RecordType("<324,330,23>",(result)); Inst27++; } } catch(e) {}

  for (let i = 0; i < 10000; ++i) {
try { if (Inst28 <= 1000 && typeof (i) != "undefined") {_RecordType("<348,349,25>",(i)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (i) != "undefined") {_RecordType("<355,356,25>",(i)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (i) != "undefined") {_RecordType("<368,369,25>",(i)); Inst30++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (foo) != "undefined") {_RecordType("<387,390,26>",(foo)); Inst32++; } } catch(e) {}
    result += foo();
try { if (Inst31 <= 1000 && typeof (result) != "undefined") {_RecordType("<377,383,26>",(result)); Inst31++; } } catch(e) {}
  }

try { if (Inst33 <= 1000 && typeof (result) != "undefined") {_RecordType("<405,411,29>",(result)); Inst33++; } } catch(e) {}
  if (result != 4000000) {
try { if (Inst34 <= 1000 && typeof (result) != "undefined") {_RecordType("<453,459,30>",(result)); Inst34++; } } catch(e) {}
    throw "Bad result: " + result;
  }
})();

