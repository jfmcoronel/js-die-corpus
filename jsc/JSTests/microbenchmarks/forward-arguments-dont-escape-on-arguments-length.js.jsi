var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (f1) != "undefined") {_RecordType("<9,11,1>",(f1)); Inst0++; } } catch(e) {}
function f1() {
  'use strict';

try { if (Inst1 <= 1000 && typeof (arguments.length) != "undefined") {_RecordType("<39,55,4>",(arguments.length)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<39,48,4>",(arguments)); Inst2++; } } catch(e) {}
  if (arguments.length === 1) {
    return 25;
  }

  return 42;
}

try { if (Inst3 <= 1000 && typeof (noFTL) != "undefined") {_RecordType("<101,106,11>",(noFTL)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (f1) != "undefined") {_RecordType("<107,109,11>",(f1)); Inst4++; } } catch(e) {}
noFTL(f1);
try { if (Inst5 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<112,120,12>",(noInline)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (f1) != "undefined") {_RecordType("<121,123,12>",(f1)); Inst6++; } } catch(e) {}
noInline(f1);

try { if (Inst7 <= 1000 && typeof (f2) != "undefined") {_RecordType("<136,138,14>",(f2)); Inst7++; } } catch(e) {}
function f2() {
try { if (Inst8 <= 1000 && typeof (arguments.length) != "undefined") {_RecordType("<149,165,15>",(arguments.length)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<149,158,15>",(arguments)); Inst9++; } } catch(e) {}
  if (arguments.length === 1) {
    return 25;
  }

  return 42;
}

try { if (Inst10 <= 1000 && typeof (noFTL) != "undefined") {_RecordType("<211,216,22>",(noFTL)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (f2) != "undefined") {_RecordType("<217,219,22>",(f2)); Inst11++; } } catch(e) {}
noFTL(f2);
try { if (Inst12 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<222,230,23>",(noInline)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (f2) != "undefined") {_RecordType("<231,233,23>",(f2)); Inst13++; } } catch(e) {}
noInline(f2);

class C {
  construct() {
    let x = 1;
try { if (Inst15 <= 1000 && typeof (x) != "undefined") {_RecordType("<271,272,27>",(x)); Inst15++; } } catch(e) {}

try { if (Inst16 <= 1000 && typeof (arguments.length) != "undefined") {_RecordType("<287,303,29>",(arguments.length)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<287,296,29>",(arguments)); Inst17++; } } catch(e) {}
    if (arguments.length === 2) {
try { if (Inst18 <= 1000 && typeof (x) != "undefined") {_RecordType("<321,322,30>",(x)); Inst18++; } } catch(e) {}
      --x;
    }

try { if (Inst19 <= 1000 && typeof (x) != "undefined") {_RecordType("<339,340,33>",(x)); Inst19++; } } catch(e) {}
    if (x) {
try { if (Inst21 <= 1000 && typeof (x) != "undefined") {_RecordType("<359,360,34>",(x)); Inst21++; } } catch(e) {}
      this.x = x;
try { if (Inst20 <= 1000 && typeof (this.x) != "undefined") {_RecordType("<350,356,34>",(this.x)); Inst20++; } } catch(e) {}
    }
  }

}
try { if (Inst14 <= 1000 && typeof (C) != "undefined") {_RecordType("<243,244,25>",(C)); Inst14++; } } catch(e) {}

try { if (Inst22 <= 1000 && typeof (noFTL) != "undefined") {_RecordType("<376,381,40>",(noFTL)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (C) != "undefined") {_RecordType("<382,383,40>",(C)); Inst23++; } } catch(e) {}
noFTL(C);
try { if (Inst24 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<386,394,41>",(noInline)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (C) != "undefined") {_RecordType("<395,396,41>",(C)); Inst25++; } } catch(e) {}
noInline(C);

for (let i = 0; i < 1000000; ++i) {
try { if (Inst26 <= 1000 && typeof (i) != "undefined") {_RecordType("<409,410,43>",(i)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (i) != "undefined") {_RecordType("<416,417,43>",(i)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (i) != "undefined") {_RecordType("<431,432,43>",(i)); Inst28++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (f1) != "undefined") {_RecordType("<438,440,44>",(f1)); Inst29++; } } catch(e) {}
  f1(10, 20);
}

for (let i = 0; i < 1000000; ++i) {
try { if (Inst30 <= 1000 && typeof (i) != "undefined") {_RecordType("<462,463,47>",(i)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (i) != "undefined") {_RecordType("<469,470,47>",(i)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (i) != "undefined") {_RecordType("<484,485,47>",(i)); Inst32++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (f2) != "undefined") {_RecordType("<491,493,48>",(f2)); Inst33++; } } catch(e) {}
  f2(10, 20);
}

for (let i = 0; i < 1000000; ++i) {
try { if (Inst34 <= 1000 && typeof (i) != "undefined") {_RecordType("<515,516,51>",(i)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (i) != "undefined") {_RecordType("<522,523,51>",(i)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (i) != "undefined") {_RecordType("<537,538,51>",(i)); Inst36++; } } catch(e) {}
try { if (Inst37 <= 1000 && typeof (C) != "undefined") {_RecordType("<548,549,52>",(C)); Inst37++; } } catch(e) {}
  new C(10, 20);
}

