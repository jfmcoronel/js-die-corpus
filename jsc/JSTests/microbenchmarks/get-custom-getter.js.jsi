var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// RegExp.input is a handy getter
try { if (Inst1 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<42,48,2>",(RegExp)); Inst1++; } } catch(e) {}
var o = RegExp;
try { if (Inst0 <= 1000 && typeof (o) != "undefined") {_RecordType("<38,39,2>",(o)); Inst0++; } } catch(e) {}
o.input = "foo";
try { if (Inst2 <= 1000 && typeof (o.input) != "undefined") {_RecordType("<50,57,3>",(o.input)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (o) != "undefined") {_RecordType("<50,51,3>",(o)); Inst3++; } } catch(e) {}

try { if (Inst4 <= 1000 && typeof (test) != "undefined") {_RecordType("<77,81,5>",(test)); Inst4++; } } catch(e) {}
function test(o) {
try { if (Inst5 <= 1000 && typeof (o) != "undefined") {_RecordType("<82,83,5>",(o)); Inst5++; } } catch(e) {}
  var result = null;
try { if (Inst6 <= 1000 && typeof (result) != "undefined") {_RecordType("<93,99,6>",(result)); Inst6++; } } catch(e) {}

  for (var i = 0; i < 30000; i++) {
try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<120,121,8>",(i)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<127,128,8>",(i)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<138,139,8>",(i)); Inst9++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (o.input) != "undefined") {_RecordType("<158,165,9>",(o.input)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (o) != "undefined") {_RecordType("<158,159,9>",(o)); Inst12++; } } catch(e) {}
    result = o.input;
try { if (Inst10 <= 1000 && typeof (result) != "undefined") {_RecordType("<149,155,9>",(result)); Inst10++; } } catch(e) {}
  }

try { if (Inst13 <= 1000 && typeof (result) != "undefined") {_RecordType("<181,187,12>",(result)); Inst13++; } } catch(e) {}
  return result;
}

for (var k = 0; k < 9; k++) {
try { if (Inst14 <= 1000 && typeof (k) != "undefined") {_RecordType("<201,202,15>",(k)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (k) != "undefined") {_RecordType("<208,209,15>",(k)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (k) != "undefined") {_RecordType("<215,216,15>",(k)); Inst16++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (test) != "undefined") {_RecordType("<240,244,16>",(test)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (o) != "undefined") {_RecordType("<245,246,16>",(o)); Inst19++; } } catch(e) {}
  var newResult = test(o);
try { if (Inst17 <= 1000 && typeof (newResult) != "undefined") {_RecordType("<228,237,16>",(newResult)); Inst17++; } } catch(e) {}

try { if (Inst20 <= 1000 && typeof (newResult) != "undefined") {_RecordType("<256,265,18>",(newResult)); Inst20++; } } catch(e) {}
  if (newResult != "foo") {
try { if (Inst21 <= 1000 && typeof (k) != "undefined") {_RecordType("<303,304,19>",(k)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (newResult) != "undefined") {_RecordType("<318,327,19>",(newResult)); Inst22++; } } catch(e) {}
    throw "Failed at " + k + " with " + newResult;
  }

try { if (Inst24 <= 1000 && typeof (newResult) != "undefined") {_RecordType("<345,354,22>",(newResult)); Inst24++; } } catch(e) {}
  result = newResult;
try { if (Inst23 <= 1000 && typeof (result) != "undefined") {_RecordType("<336,342,22>",(result)); Inst23++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (o) != "undefined") {_RecordType("<379,380,24>",(o)); Inst26++; } } catch(e) {}
  o = {
    __proto__: o
  };
try { if (Inst25 <= 1000 && typeof (o) != "undefined") {_RecordType("<358,359,23>",(o)); Inst25++; } } catch(e) {}
}

