var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (Foo) != "undefined") {_RecordType("<9,12,1>",(Foo)); Inst0++; } } catch(e) {}
function Foo(f, g) {
try { if (Inst1 <= 1000 && typeof (f) != "undefined") {_RecordType("<13,14,1>",(f)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (g) != "undefined") {_RecordType("<16,17,1>",(g)); Inst2++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (f) != "undefined") {_RecordType("<32,33,2>",(f)); Inst4++; } } catch(e) {}
  this.f = f;
try { if (Inst3 <= 1000 && typeof (this.f) != "undefined") {_RecordType("<23,29,2>",(this.f)); Inst3++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (g) != "undefined") {_RecordType("<46,47,3>",(g)); Inst6++; } } catch(e) {}
  this.g = g;
try { if (Inst5 <= 1000 && typeof (this.g) != "undefined") {_RecordType("<37,43,3>",(this.g)); Inst5++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (Object.seal) != "undefined") {_RecordType("<51,62,4>",(Object.seal)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Object) != "undefined") {_RecordType("<51,57,4>",(Object)); Inst8++; } } catch(e) {}
  Object.seal(this);
}

(function () {
  var result = 0;
try { if (Inst9 <= 1000 && typeof (result) != "undefined") {_RecordType("<94,100,8>",(result)); Inst9++; } } catch(e) {}

  for (var i = 0; i < 10000; ++i) {
try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<118,119,10>",(i)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<125,126,10>",(i)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<138,139,10>",(i)); Inst12++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (Foo) != "undefined") {_RecordType("<159,162,11>",(Foo)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<163,164,11>",(i)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<166,167,11>",(i)); Inst16++; } } catch(e) {}
    var o = new Foo(i, i + 1);
try { if (Inst13 <= 1000 && typeof (o) != "undefined") {_RecordType("<151,152,11>",(o)); Inst13++; } } catch(e) {}

    for (var j = 0; j < 1000; ++j) {
try { if (Inst17 <= 1000 && typeof (j) != "undefined") {_RecordType("<188,189,13>",(j)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (j) != "undefined") {_RecordType("<195,196,13>",(j)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (j) != "undefined") {_RecordType("<207,208,13>",(j)); Inst19++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (o.f) != "undefined") {_RecordType("<228,231,14>",(o.f)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (o) != "undefined") {_RecordType("<228,229,14>",(o)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (o.g) != "undefined") {_RecordType("<234,237,14>",(o.g)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (o) != "undefined") {_RecordType("<234,235,14>",(o)); Inst24++; } } catch(e) {}
      result += o.f * o.g;
try { if (Inst20 <= 1000 && typeof (result) != "undefined") {_RecordType("<218,224,14>",(result)); Inst20++; } } catch(e) {}
    }
  }

try { if (Inst25 <= 1000 && typeof (result) != "undefined") {_RecordType("<256,262,18>",(result)); Inst25++; } } catch(e) {}
  if (result != 333333330000000) {
try { if (Inst26 <= 1000 && typeof (result) != "undefined") {_RecordType("<319,325,19>",(result)); Inst26++; } } catch(e) {}
    throw "Error: bad result: " + result;
  }
})();

