var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst1 <= 1000 && typeof (val) != "undefined") {_RecordType("<13,16,1>",(val)); Inst1++; } } catch(e) {}
const calc = val => {
  let c = 0;
try { if (Inst2 <= 1000 && typeof (c) != "undefined") {_RecordType("<28,29,2>",(c)); Inst2++; } } catch(e) {}

  for (let v = val; v; v >>>= 1) {
try { if (Inst3 <= 1000 && typeof (v) != "undefined") {_RecordType("<47,48,4>",(v)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (val) != "undefined") {_RecordType("<51,54,4>",(val)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (v) != "undefined") {_RecordType("<56,57,4>",(v)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (v) != "undefined") {_RecordType("<59,60,4>",(v)); Inst6++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (v) != "undefined") {_RecordType("<80,81,5>",(v)); Inst8++; } } catch(e) {}
    c += v & 1;
try { if (Inst7 <= 1000 && typeof (c) != "undefined") {_RecordType("<75,76,5>",(c)); Inst7++; } } catch(e) {}
  }

try { if (Inst9 <= 1000 && typeof (val) != "undefined") {_RecordType("<101,104,8>",(val)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (val) != "undefined") {_RecordType("<111,114,8>",(val)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (c) != "undefined") {_RecordType("<121,122,8>",(c)); Inst11++; } } catch(e) {}
  return val * 2 + val / 2 + c;
};
try { if (Inst0 <= 1000 && typeof (calc) != "undefined") {_RecordType("<6,10,1>",(calc)); Inst0++; } } catch(e) {}

class A {
  constructor(x) {
try { if (Inst13 <= 1000 && typeof (x) != "undefined") {_RecordType("<152,153,12>",(x)); Inst13++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (x) != "undefined") {_RecordType("<175,176,13>",(x)); Inst15++; } } catch(e) {}
    this._value = x;
try { if (Inst14 <= 1000 && typeof (this._value) != "undefined") {_RecordType("<161,172,13>",(this._value)); Inst14++; } } catch(e) {}
  }

  set value(x) {
try { if (Inst16 <= 1000 && typeof (x) != "undefined") {_RecordType("<195,196,16>",(x)); Inst16++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (x) != "undefined") {_RecordType("<218,219,17>",(x)); Inst18++; } } catch(e) {}
    this._value = x;
try { if (Inst17 <= 1000 && typeof (this._value) != "undefined") {_RecordType("<204,215,17>",(this._value)); Inst17++; } } catch(e) {}
  }

  get value() {
try { if (Inst19 <= 1000 && typeof (this._value) != "undefined") {_RecordType("<253,264,21>",(this._value)); Inst19++; } } catch(e) {}
    return this._value;
  }

}
try { if (Inst12 <= 1000 && typeof (A) != "undefined") {_RecordType("<134,135,11>",(A)); Inst12++; } } catch(e) {}

try { if (Inst26 <= 1000 && typeof (A) != "undefined") {_RecordType("<290,291,26>",(A)); Inst26++; } } catch(e) {}
class B extends A {
  set value(x) {
try { if (Inst21 <= 1000 && typeof (x) != "undefined") {_RecordType("<306,307,27>",(x)); Inst21++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (x) != "undefined") {_RecordType("<329,330,28>",(x)); Inst23++; } } catch(e) {}
    super.value = x;
try { if (Inst22 <= 1000 && typeof (super.value) != "undefined") {_RecordType("<315,326,28>",(super.value)); Inst22++; } } catch(e) {}
  }

  get value() {
try { if (Inst24 <= 1000 && typeof (calc) != "undefined") {_RecordType("<364,368,32>",(calc)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (super.value) != "undefined") {_RecordType("<369,380,32>",(super.value)); Inst25++; } } catch(e) {}
    return calc(super.value);
  }

}
try { if (Inst20 <= 1000 && typeof (B) != "undefined") {_RecordType("<280,281,26>",(B)); Inst20++; } } catch(e) {}

try { if (Inst28 <= 1000 && typeof (init) != "undefined") {_RecordType("<406,410,37>",(init)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (num) != "undefined") {_RecordType("<412,415,37>",(num)); Inst29++; } } catch(e) {}
const bench = (init, num) => {
  let arr = [];
try { if (Inst30 <= 1000 && typeof (arr) != "undefined") {_RecordType("<428,431,38>",(arr)); Inst30++; } } catch(e) {}

  for (let i = 0; i != num; ++i) {
try { if (Inst31 <= 1000 && typeof (i) != "undefined") {_RecordType("<450,451,40>",(i)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (i) != "undefined") {_RecordType("<457,458,40>",(i)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (num) != "undefined") {_RecordType("<462,465,40>",(num)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (i) != "undefined") {_RecordType("<469,470,40>",(i)); Inst34++; } } catch(e) {}
try { if (Inst35 <= 1000 && typeof (arr.push) != "undefined") {_RecordType("<478,486,41>",(arr.push)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (arr) != "undefined") {_RecordType("<478,481,41>",(arr)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (B) != "undefined") {_RecordType("<491,492,41>",(B)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (init) != "undefined") {_RecordType("<493,497,41>",(init)); Inst38++; } } catch(e) {}
    arr.push(new B(init));
  }

  for (let i = 0; i != num; ++i) {
try { if (Inst39 <= 1000 && typeof (i) != "undefined") {_RecordType("<517,518,44>",(i)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (i) != "undefined") {_RecordType("<524,525,44>",(i)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (num) != "undefined") {_RecordType("<529,532,44>",(num)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (i) != "undefined") {_RecordType("<536,537,44>",(i)); Inst42++; } } catch(e) {}
try { if (Inst46 <= 1000 && typeof (i) != "undefined") {_RecordType("<561,562,45>",(i)); Inst46++; } } catch(e) {}
    arr[i].value += i;
try { if (Inst43 <= 1000 && typeof (arr[i].value) != "undefined") {_RecordType("<545,557,45>",(arr[i].value)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (arr[i]) != "undefined") {_RecordType("<545,551,45>",(arr[i])); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (arr) != "undefined") {_RecordType("<545,548,45>",(arr)); Inst45++; } } catch(e) {}
  }

  let sum = 0;
try { if (Inst47 <= 1000 && typeof (sum) != "undefined") {_RecordType("<575,578,48>",(sum)); Inst47++; } } catch(e) {}

  for (let i = 0; i != num; ++i) {
try { if (Inst48 <= 1000 && typeof (i) != "undefined") {_RecordType("<596,597,50>",(i)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (i) != "undefined") {_RecordType("<603,604,50>",(i)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (num) != "undefined") {_RecordType("<608,611,50>",(num)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (i) != "undefined") {_RecordType("<615,616,50>",(i)); Inst51++; } } catch(e) {}
try { if (Inst53 <= 1000 && typeof (arr[i].value) != "undefined") {_RecordType("<631,643,51>",(arr[i].value)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (arr[i]) != "undefined") {_RecordType("<631,637,51>",(arr[i])); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (arr) != "undefined") {_RecordType("<631,634,51>",(arr)); Inst55++; } } catch(e) {}
    sum += arr[i].value;
try { if (Inst52 <= 1000 && typeof (sum) != "undefined") {_RecordType("<624,627,51>",(sum)); Inst52++; } } catch(e) {}
  }
};
try { if (Inst27 <= 1000 && typeof (bench) != "undefined") {_RecordType("<397,402,37>",(bench)); Inst27++; } } catch(e) {}

try { if (Inst56 <= 1000 && typeof (bench) != "undefined") {_RecordType("<653,658,55>",(bench)); Inst56++; } } catch(e) {}
bench(2, 10000);
try { if (Inst57 <= 1000 && typeof (bench) != "undefined") {_RecordType("<670,675,56>",(bench)); Inst57++; } } catch(e) {}
bench(1 << 30, 10000);
try { if (Inst58 <= 1000 && typeof (bench) != "undefined") {_RecordType("<693,698,57>",(bench)); Inst58++; } } catch(e) {}
bench(42.2, 10000);
try { if (Inst59 <= 1000 && typeof (bench) != "undefined") {_RecordType("<713,718,58>",(bench)); Inst59++; } } catch(e) {}
bench(42.5e10, 10000);

