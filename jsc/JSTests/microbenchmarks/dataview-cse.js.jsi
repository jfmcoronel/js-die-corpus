var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
"use strict";

try { if (Inst0 <= 1000 && typeof (assert) != "undefined") {_RecordType("<24,30,3>",(assert)); Inst0++; } } catch(e) {}
function assert(b) {
try { if (Inst1 <= 1000 && typeof (b) != "undefined") {_RecordType("<31,32,3>",(b)); Inst1++; } } catch(e) {}
  ;
}

try { if (Inst2 <= 1000 && typeof (test) != "undefined") {_RecordType("<52,56,7>",(test)); Inst2++; } } catch(e) {}
function test(dv, littleEndian) {
try { if (Inst3 <= 1000 && typeof (dv) != "undefined") {_RecordType("<57,59,7>",(dv)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (littleEndian) != "undefined") {_RecordType("<61,73,7>",(littleEndian)); Inst4++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (dv.getInt32) != "undefined") {_RecordType("<86,97,8>",(dv.getInt32)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (dv) != "undefined") {_RecordType("<86,88,8>",(dv)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (littleEndian) != "undefined") {_RecordType("<101,113,8>",(littleEndian)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (dv.getInt32) != "undefined") {_RecordType("<117,128,8>",(dv.getInt32)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (dv) != "undefined") {_RecordType("<117,119,8>",(dv)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (littleEndian) != "undefined") {_RecordType("<132,144,8>",(littleEndian)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (dv.getInt32) != "undefined") {_RecordType("<148,159,8>",(dv.getInt32)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (dv) != "undefined") {_RecordType("<148,150,8>",(dv)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (littleEndian) != "undefined") {_RecordType("<163,175,8>",(littleEndian)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (dv.getInt32) != "undefined") {_RecordType("<179,190,8>",(dv.getInt32)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (dv) != "undefined") {_RecordType("<179,181,8>",(dv)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (littleEndian) != "undefined") {_RecordType("<194,206,8>",(littleEndian)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (dv.getInt32) != "undefined") {_RecordType("<210,221,8>",(dv.getInt32)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (dv) != "undefined") {_RecordType("<210,212,8>",(dv)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (littleEndian) != "undefined") {_RecordType("<225,237,8>",(littleEndian)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (dv.getInt32) != "undefined") {_RecordType("<241,252,8>",(dv.getInt32)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (dv) != "undefined") {_RecordType("<241,243,8>",(dv)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (littleEndian) != "undefined") {_RecordType("<256,268,8>",(littleEndian)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (dv.getInt32) != "undefined") {_RecordType("<272,283,8>",(dv.getInt32)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (dv) != "undefined") {_RecordType("<272,274,8>",(dv)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (littleEndian) != "undefined") {_RecordType("<287,299,8>",(littleEndian)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (dv.getInt32) != "undefined") {_RecordType("<303,314,8>",(dv.getInt32)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (dv) != "undefined") {_RecordType("<303,305,8>",(dv)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (littleEndian) != "undefined") {_RecordType("<318,330,8>",(littleEndian)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (dv.getInt32) != "undefined") {_RecordType("<334,345,8>",(dv.getInt32)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (dv) != "undefined") {_RecordType("<334,336,8>",(dv)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (littleEndian) != "undefined") {_RecordType("<349,361,8>",(littleEndian)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (dv.getInt32) != "undefined") {_RecordType("<365,376,8>",(dv.getInt32)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (dv) != "undefined") {_RecordType("<365,367,8>",(dv)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (littleEndian) != "undefined") {_RecordType("<380,392,8>",(littleEndian)); Inst34++; } } catch(e) {}
  return dv.getInt32(0, littleEndian) + dv.getInt32(0, littleEndian) + dv.getInt32(0, littleEndian) + dv.getInt32(0, littleEndian) + dv.getInt32(0, littleEndian) + dv.getInt32(0, littleEndian) + dv.getInt32(0, littleEndian) + dv.getInt32(0, littleEndian) + dv.getInt32(0, littleEndian) + dv.getInt32(0, littleEndian);
}

try { if (Inst35 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<398,406,11>",(noInline)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (test) != "undefined") {_RecordType("<407,411,11>",(test)); Inst36++; } } catch(e) {}
noInline(test);
try { if (Inst38 <= 1000 && typeof (ArrayBuffer) != "undefined") {_RecordType("<427,438,12>",(ArrayBuffer)); Inst38++; } } catch(e) {}
let ab = new ArrayBuffer(4);
try { if (Inst37 <= 1000 && typeof (ab) != "undefined") {_RecordType("<418,420,12>",(ab)); Inst37++; } } catch(e) {}
try { if (Inst40 <= 1000 && typeof (DataView) != "undefined") {_RecordType("<456,464,13>",(DataView)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (ab) != "undefined") {_RecordType("<465,467,13>",(ab)); Inst41++; } } catch(e) {}
let dv = new DataView(ab);
try { if (Inst39 <= 1000 && typeof (dv) != "undefined") {_RecordType("<447,449,13>",(dv)); Inst39++; } } catch(e) {}
try { if (Inst42 <= 1000 && typeof (dv.setInt32) != "undefined") {_RecordType("<470,481,14>",(dv.setInt32)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (dv) != "undefined") {_RecordType("<470,472,14>",(dv)); Inst43++; } } catch(e) {}
dv.setInt32(0, 10, true);

for (let i = 0; i < 1000000; ++i) {
try { if (Inst44 <= 1000 && typeof (i) != "undefined") {_RecordType("<506,507,16>",(i)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (i) != "undefined") {_RecordType("<513,514,16>",(i)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (i) != "undefined") {_RecordType("<528,529,16>",(i)); Inst46++; } } catch(e) {}
try { if (Inst48 <= 1000 && typeof (test) != "undefined") {_RecordType("<548,552,17>",(test)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (dv) != "undefined") {_RecordType("<553,555,17>",(dv)); Inst49++; } } catch(e) {}
  let result = test(dv, true);
try { if (Inst47 <= 1000 && typeof (result) != "undefined") {_RecordType("<539,545,17>",(result)); Inst47++; } } catch(e) {}
try { if (Inst50 <= 1000 && typeof (result) != "undefined") {_RecordType("<566,572,18>",(result)); Inst50++; } } catch(e) {}
  result === 10 * 10;
}

