var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Test the performance of Int8Array by implementing Adler32.
try { if (Inst0 <= 1000 && typeof (adler32) != "undefined") {_RecordType("<71,78,2>",(adler32)); Inst0++; } } catch(e) {}
function adler32(array) {
try { if (Inst1 <= 1000 && typeof (array) != "undefined") {_RecordType("<79,84,2>",(array)); Inst1++; } } catch(e) {}
  var MOD_ADLER = 65521;
try { if (Inst2 <= 1000 && typeof (MOD_ADLER) != "undefined") {_RecordType("<94,103,3>",(MOD_ADLER)); Inst2++; } } catch(e) {}
  var a = 1;
try { if (Inst3 <= 1000 && typeof (a) != "undefined") {_RecordType("<119,120,4>",(a)); Inst3++; } } catch(e) {}
  var b = 0;
try { if (Inst4 <= 1000 && typeof (b) != "undefined") {_RecordType("<132,133,5>",(b)); Inst4++; } } catch(e) {}
  var index;
try { if (Inst5 <= 1000 && typeof (index) != "undefined") {_RecordType("<145,150,6>",(index)); Inst5++; } } catch(e) {}
  /* Process each byte of the data in order */

  for (index = 0; index < array.length; ++index) {
try { if (Inst6 <= 1000 && typeof (index) != "undefined") {_RecordType("<207,212,9>",(index)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (index) != "undefined") {_RecordType("<218,223,9>",(index)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (array.length) != "undefined") {_RecordType("<226,238,9>",(array.length)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (array) != "undefined") {_RecordType("<226,231,9>",(array)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (index) != "undefined") {_RecordType("<242,247,9>",(index)); Inst10++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (a) != "undefined") {_RecordType("<260,261,10>",(a)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (array[index]) != "undefined") {_RecordType("<264,276,10>",(array[index])); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (array) != "undefined") {_RecordType("<264,269,10>",(array)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (MOD_ADLER) != "undefined") {_RecordType("<280,289,10>",(MOD_ADLER)); Inst15++; } } catch(e) {}
    a = (a + array[index]) % MOD_ADLER;
try { if (Inst11 <= 1000 && typeof (a) != "undefined") {_RecordType("<255,256,10>",(a)); Inst11++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (b) != "undefined") {_RecordType("<300,301,11>",(b)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (a) != "undefined") {_RecordType("<304,305,11>",(a)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (MOD_ADLER) != "undefined") {_RecordType("<309,318,11>",(MOD_ADLER)); Inst19++; } } catch(e) {}
    b = (b + a) % MOD_ADLER;
try { if (Inst16 <= 1000 && typeof (b) != "undefined") {_RecordType("<295,296,11>",(b)); Inst16++; } } catch(e) {}
  }

try { if (Inst20 <= 1000 && typeof (b) != "undefined") {_RecordType("<334,335,14>",(b)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (a) != "undefined") {_RecordType("<344,345,14>",(a)); Inst21++; } } catch(e) {}
  return b << 16 | a;
}

try { if (Inst23 <= 1000 && typeof (Int8Array) != "undefined") {_RecordType("<366,375,17>",(Int8Array)); Inst23++; } } catch(e) {}
var array = new Int8Array(1000);
try { if (Inst22 <= 1000 && typeof (array) != "undefined") {_RecordType("<354,359,17>",(array)); Inst22++; } } catch(e) {}

for (var i = 0; i < array.length; ++i) {
try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<393,394,19>",(i)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<400,401,19>",(i)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (array.length) != "undefined") {_RecordType("<404,416,19>",(array.length)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (array) != "undefined") {_RecordType("<404,409,19>",(array)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (i) != "undefined") {_RecordType("<420,421,19>",(i)); Inst28++; } } catch(e) {}
try { if (Inst31 <= 1000 && typeof (i) != "undefined") {_RecordType("<438,439,20>",(i)); Inst31++; } } catch(e) {}
  array[i] = i;
try { if (Inst29 <= 1000 && typeof (array[i]) != "undefined") {_RecordType("<427,435,20>",(array[i])); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (array) != "undefined") {_RecordType("<427,432,20>",(array)); Inst30++; } } catch(e) {}
}

var result = 0;
try { if (Inst32 <= 1000 && typeof (result) != "undefined") {_RecordType("<448,454,23>",(result)); Inst32++; } } catch(e) {}

for (var i = 0; i < 300; ++i) {
try { if (Inst33 <= 1000 && typeof (i) != "undefined") {_RecordType("<470,471,25>",(i)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (i) != "undefined") {_RecordType("<477,478,25>",(i)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (i) != "undefined") {_RecordType("<488,489,25>",(i)); Inst35++; } } catch(e) {}
try { if (Inst37 <= 1000 && typeof (adler32) != "undefined") {_RecordType("<505,512,26>",(adler32)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (array) != "undefined") {_RecordType("<513,518,26>",(array)); Inst38++; } } catch(e) {}
  result += adler32(array);
try { if (Inst36 <= 1000 && typeof (result) != "undefined") {_RecordType("<495,501,26>",(result)); Inst36++; } } catch(e) {}
}

try { if (Inst39 <= 1000 && typeof (result) != "undefined") {_RecordType("<528,534,29>",(result)); Inst39++; } } catch(e) {}
if (result != -63300) {
try { if (Inst40 <= 1000 && typeof (result) != "undefined") {_RecordType("<573,579,30>",(result)); Inst40++; } } catch(e) {}
  throw "Bad result: " + result;
}

