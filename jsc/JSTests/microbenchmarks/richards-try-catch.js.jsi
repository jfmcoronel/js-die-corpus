var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
var Inst102 = 0;
var Inst103 = 0;
var Inst104 = 0;
var Inst105 = 0;
var Inst106 = 0;
var Inst107 = 0;
var Inst108 = 0;
var Inst109 = 0;
var Inst110 = 0;
var Inst111 = 0;
var Inst112 = 0;
var Inst113 = 0;
var Inst114 = 0;
var Inst115 = 0;
var Inst116 = 0;
var Inst117 = 0;
var Inst118 = 0;
var Inst119 = 0;
var Inst120 = 0;
var Inst121 = 0;
var Inst122 = 0;
var Inst123 = 0;
var Inst124 = 0;
var Inst125 = 0;
var Inst126 = 0;
var Inst127 = 0;
var Inst128 = 0;
var Inst129 = 0;
var Inst130 = 0;
var Inst131 = 0;
var Inst132 = 0;
var Inst133 = 0;
var Inst134 = 0;
var Inst135 = 0;
var Inst136 = 0;
var Inst137 = 0;
var Inst138 = 0;
var Inst139 = 0;
var Inst140 = 0;
var Inst141 = 0;
var Inst142 = 0;
var Inst143 = 0;
var Inst144 = 0;
var Inst145 = 0;
var Inst146 = 0;
var Inst147 = 0;
var Inst148 = 0;
var Inst149 = 0;
var Inst150 = 0;
var Inst151 = 0;
var Inst152 = 0;
var Inst153 = 0;
var Inst154 = 0;
var Inst155 = 0;
var Inst156 = 0;
var Inst157 = 0;
var Inst158 = 0;
var Inst159 = 0;
var Inst160 = 0;
var Inst161 = 0;
var Inst162 = 0;
var Inst163 = 0;
var Inst164 = 0;
var Inst165 = 0;
var Inst166 = 0;
var Inst167 = 0;
var Inst168 = 0;
var Inst169 = 0;
var Inst170 = 0;
var Inst171 = 0;
var Inst172 = 0;
var Inst173 = 0;
var Inst174 = 0;
var Inst175 = 0;
var Inst176 = 0;
var Inst177 = 0;
var Inst178 = 0;
var Inst179 = 0;
var Inst180 = 0;
var Inst181 = 0;
var Inst182 = 0;
var Inst183 = 0;
var Inst184 = 0;
var Inst185 = 0;
var Inst186 = 0;
var Inst187 = 0;
var Inst188 = 0;
var Inst189 = 0;
var Inst190 = 0;
var Inst191 = 0;
var Inst192 = 0;
var Inst193 = 0;
var Inst194 = 0;
var Inst195 = 0;
var Inst196 = 0;
var Inst197 = 0;
var Inst198 = 0;
var Inst199 = 0;
var Inst200 = 0;
var Inst201 = 0;
var Inst202 = 0;
var Inst203 = 0;
var Inst204 = 0;
var Inst205 = 0;
var Inst206 = 0;
var Inst207 = 0;
var Inst208 = 0;
var Inst209 = 0;
var Inst210 = 0;
var Inst211 = 0;
var Inst212 = 0;
var Inst213 = 0;
var Inst214 = 0;
var Inst215 = 0;
var Inst216 = 0;
var Inst217 = 0;
var Inst218 = 0;
var Inst219 = 0;
var Inst220 = 0;
var Inst221 = 0;
var Inst222 = 0;
var Inst223 = 0;
var Inst224 = 0;
var Inst225 = 0;
var Inst226 = 0;
var Inst227 = 0;
var Inst228 = 0;
var Inst229 = 0;
var Inst230 = 0;
var Inst231 = 0;
var Inst232 = 0;
var Inst233 = 0;
var Inst234 = 0;
var Inst235 = 0;
var Inst236 = 0;
var Inst237 = 0;
var Inst238 = 0;
var Inst239 = 0;
var Inst240 = 0;
var Inst241 = 0;
var Inst242 = 0;
var Inst243 = 0;
var Inst244 = 0;
var Inst245 = 0;
var Inst246 = 0;
var Inst247 = 0;
var Inst248 = 0;
var Inst249 = 0;
var Inst250 = 0;
var Inst251 = 0;
var Inst252 = 0;
var Inst253 = 0;
var Inst254 = 0;
var Inst255 = 0;
var Inst256 = 0;
var Inst257 = 0;
var Inst258 = 0;
var Inst259 = 0;
var Inst260 = 0;
var Inst261 = 0;
var Inst262 = 0;
var Inst263 = 0;
var Inst264 = 0;
var Inst265 = 0;
var Inst266 = 0;
var Inst267 = 0;
var Inst268 = 0;
var Inst269 = 0;
var Inst270 = 0;
var Inst271 = 0;
var Inst272 = 0;
var Inst273 = 0;
var Inst274 = 0;
var Inst275 = 0;
var Inst276 = 0;
var Inst277 = 0;
var Inst278 = 0;
var Inst279 = 0;
var Inst280 = 0;
var Inst281 = 0;
var Inst282 = 0;
var Inst283 = 0;
var Inst284 = 0;
var Inst285 = 0;
var Inst286 = 0;
var Inst287 = 0;
var Inst288 = 0;
var Inst289 = 0;
var Inst290 = 0;
var Inst291 = 0;
var Inst292 = 0;
var Inst293 = 0;
var Inst294 = 0;
var Inst295 = 0;
var Inst296 = 0;
var Inst297 = 0;
var Inst298 = 0;
var Inst299 = 0;
var Inst300 = 0;
var Inst301 = 0;
var Inst302 = 0;
var Inst303 = 0;
var Inst304 = 0;
var Inst305 = 0;
var Inst306 = 0;
var Inst307 = 0;
var Inst308 = 0;
var Inst309 = 0;
var Inst310 = 0;
var Inst311 = 0;
var Inst312 = 0;
var Inst313 = 0;
var Inst314 = 0;
var Inst315 = 0;
var Inst316 = 0;
var Inst317 = 0;
var Inst318 = 0;
var Inst319 = 0;
var Inst320 = 0;
var Inst321 = 0;
var Inst322 = 0;
var Inst323 = 0;
var Inst324 = 0;
var Inst325 = 0;
var Inst326 = 0;
var Inst327 = 0;
var Inst328 = 0;
var Inst329 = 0;
var Inst330 = 0;
var Inst331 = 0;
var Inst332 = 0;
var Inst333 = 0;
var Inst334 = 0;
var Inst335 = 0;
var Inst336 = 0;
var Inst337 = 0;
var Inst338 = 0;
var Inst339 = 0;
var Inst340 = 0;
var Inst341 = 0;
var Inst342 = 0;
var Inst343 = 0;
var Inst344 = 0;
var Inst345 = 0;
var Inst346 = 0;
var Inst347 = 0;
var Inst348 = 0;
var Inst349 = 0;
var Inst350 = 0;
var Inst351 = 0;
var Inst352 = 0;
var Inst353 = 0;
var Inst354 = 0;
var Inst355 = 0;
var Inst356 = 0;
var Inst357 = 0;
var Inst358 = 0;
var Inst359 = 0;
var Inst360 = 0;
var Inst361 = 0;
var Inst362 = 0;
var Inst363 = 0;
var Inst364 = 0;
var Inst365 = 0;
var Inst366 = 0;
var Inst367 = 0;
var Inst368 = 0;
var Inst369 = 0;
var Inst370 = 0;
var Inst371 = 0;
var Inst372 = 0;
var Inst373 = 0;
var Inst374 = 0;
var Inst375 = 0;
var Inst376 = 0;
var Inst377 = 0;
var Inst378 = 0;
var Inst379 = 0;
var Inst380 = 0;
var Inst381 = 0;
var Inst382 = 0;
var Inst383 = 0;
var Inst384 = 0;
var Inst385 = 0;
var Inst386 = 0;
var Inst387 = 0;
var Inst388 = 0;
var Inst389 = 0;
var Inst390 = 0;
var Inst391 = 0;
var Inst392 = 0;
var Inst393 = 0;
var Inst394 = 0;
var Inst395 = 0;
var Inst396 = 0;
var Inst397 = 0;
var Inst398 = 0;
var Inst399 = 0;
var Inst400 = 0;
var Inst401 = 0;
var Inst402 = 0;
var Inst403 = 0;
var Inst404 = 0;
var Inst405 = 0;
var Inst406 = 0;
var Inst407 = 0;
var Inst408 = 0;
var Inst409 = 0;
var Inst410 = 0;
var Inst411 = 0;
var Inst412 = 0;
var Inst413 = 0;
var Inst414 = 0;
var Inst415 = 0;
var Inst416 = 0;
var Inst417 = 0;
var Inst418 = 0;
var Inst419 = 0;
var Inst420 = 0;
var Inst421 = 0;
var Inst422 = 0;
var Inst423 = 0;
var Inst424 = 0;
var Inst425 = 0;
var Inst426 = 0;
var Inst427 = 0;
var Inst428 = 0;
var Inst429 = 0;
var Inst430 = 0;
var Inst431 = 0;
var Inst432 = 0;
var Inst433 = 0;
var Inst434 = 0;
var Inst435 = 0;
var Inst436 = 0;
var Inst437 = 0;
var Inst438 = 0;
var Inst439 = 0;
var Inst440 = 0;
var Inst441 = 0;
var Inst442 = 0;
var Inst443 = 0;
var Inst444 = 0;
var Inst445 = 0;
var Inst446 = 0;
var Inst447 = 0;
var Inst448 = 0;
var Inst449 = 0;
var Inst450 = 0;
var Inst451 = 0;
var Inst452 = 0;
var Inst453 = 0;
var Inst454 = 0;
var Inst455 = 0;
var Inst456 = 0;
var Inst457 = 0;
var Inst458 = 0;
var Inst459 = 0;
var Inst460 = 0;
var Inst461 = 0;
var Inst462 = 0;
var Inst463 = 0;
var Inst464 = 0;
var Inst465 = 0;
var Inst466 = 0;
var Inst467 = 0;
var Inst468 = 0;
var Inst469 = 0;
var Inst470 = 0;
var Inst471 = 0;
var Inst472 = 0;
var Inst473 = 0;
var Inst474 = 0;
var Inst475 = 0;
var Inst476 = 0;
var Inst477 = 0;
var Inst478 = 0;
var Inst479 = 0;
var Inst480 = 0;
var Inst481 = 0;
var Inst482 = 0;
var Inst483 = 0;
var Inst484 = 0;
var Inst485 = 0;
var Inst486 = 0;
var Inst487 = 0;
var Inst488 = 0;
var Inst489 = 0;
var Inst490 = 0;
var Inst491 = 0;
var Inst492 = 0;
var Inst493 = 0;
var Inst494 = 0;
var Inst495 = 0;
var Inst496 = 0;
var Inst497 = 0;
var Inst498 = 0;
var Inst499 = 0;
var Inst500 = 0;
var Inst501 = 0;
var Inst502 = 0;
var Inst503 = 0;
var Inst504 = 0;
var Inst505 = 0;
var Inst506 = 0;
var Inst507 = 0;
var Inst508 = 0;
var Inst509 = 0;
var Inst510 = 0;
var Inst511 = 0;
var Inst512 = 0;
var Inst513 = 0;
var Inst514 = 0;
var Inst515 = 0;
var Inst516 = 0;
var Inst517 = 0;
var Inst518 = 0;
var Inst519 = 0;
var Inst520 = 0;
var Inst521 = 0;
var Inst522 = 0;
var Inst523 = 0;
var Inst524 = 0;
var Inst525 = 0;
var Inst526 = 0;
var Inst527 = 0;
var Inst528 = 0;
var Inst529 = 0;
var Inst530 = 0;
var Inst531 = 0;
var Inst532 = 0;
var Inst533 = 0;
var Inst534 = 0;
var Inst535 = 0;
var Inst536 = 0;
var Inst537 = 0;
var Inst538 = 0;
var Inst539 = 0;
var Inst540 = 0;
var Inst541 = 0;
var Inst542 = 0;
var Inst543 = 0;
var Inst544 = 0;
var Inst545 = 0;
var Inst546 = 0;
var Inst547 = 0;
var Inst548 = 0;
var Inst549 = 0;
var Inst550 = 0;
var Inst551 = 0;
var Inst552 = 0;
var Inst553 = 0;
var Inst554 = 0;
var Inst555 = 0;
var Inst556 = 0;
var Inst557 = 0;
var Inst558 = 0;
var Inst559 = 0;
var Inst560 = 0;
var Inst561 = 0;
var Inst562 = 0;
var Inst563 = 0;
var Inst564 = 0;
var Inst565 = 0;
var Inst566 = 0;
var Inst567 = 0;
var Inst568 = 0;
var Inst569 = 0;
var Inst570 = 0;
var Inst571 = 0;
var Inst572 = 0;
var Inst573 = 0;
var Inst574 = 0;
var Inst575 = 0;
var Inst576 = 0;
var Inst577 = 0;
var Inst578 = 0;
var Inst579 = 0;
var Inst580 = 0;
var Inst581 = 0;
var Inst582 = 0;
var Inst583 = 0;
var Inst584 = 0;
var Inst585 = 0;
var Inst586 = 0;
var Inst587 = 0;
var Inst588 = 0;
var Inst589 = 0;
var Inst590 = 0;
var Inst591 = 0;
var Inst592 = 0;
var Inst593 = 0;
var Inst594 = 0;
var Inst595 = 0;
var Inst596 = 0;
var Inst597 = 0;
var Inst598 = 0;
var Inst599 = 0;
var Inst600 = 0;
var Inst601 = 0;
var Inst602 = 0;
var Inst603 = 0;
var Inst604 = 0;
var Inst605 = 0;
var Inst606 = 0;
var Inst607 = 0;
var Inst608 = 0;
var Inst609 = 0;
var Inst610 = 0;
var Inst611 = 0;
var Inst612 = 0;
var Inst613 = 0;
var Inst614 = 0;
var Inst615 = 0;
var Inst616 = 0;
var Inst617 = 0;
var Inst618 = 0;
var Inst619 = 0;
var Inst620 = 0;
var Inst621 = 0;
var Inst622 = 0;
var Inst623 = 0;
var Inst624 = 0;
var Inst625 = 0;
var Inst626 = 0;
var Inst627 = 0;
var Inst628 = 0;
var Inst629 = 0;
var Inst630 = 0;
var Inst631 = 0;
var Inst632 = 0;
var Inst633 = 0;
var Inst634 = 0;
var Inst635 = 0;
var Inst636 = 0;
var Inst637 = 0;
var Inst638 = 0;
var Inst639 = 0;
var Inst640 = 0;
var Inst641 = 0;
var Inst642 = 0;
var Inst643 = 0;
var Inst644 = 0;
var Inst645 = 0;
var Inst646 = 0;
var Inst647 = 0;
var Inst648 = 0;
var Inst649 = 0;
var Inst650 = 0;
var Inst651 = 0;
var Inst652 = 0;
var Inst653 = 0;
var Inst654 = 0;
var Inst655 = 0;
var Inst656 = 0;
var Inst657 = 0;
var Inst658 = 0;
var Inst659 = 0;
var Inst660 = 0;
var Inst661 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2006-2008 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// This is a JavaScript implementation of the Richards
// benchmark from:
//
//    http://www.cl.cam.ac.uk/~mr10/Bench.html
//
// The benchmark was originally implemented in BCPL by
// Martin Richards.
let __exceptionCounter = 0;
try { if (Inst0 <= 1000 && typeof (__exceptionCounter) != "undefined") {_RecordType("<1808,1826,34>",(__exceptionCounter)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (randomException) != "undefined") {_RecordType("<1842,1857,36>",(randomException)); Inst1++; } } catch(e) {}
function randomException() {
try { if (Inst2 <= 1000 && typeof (__exceptionCounter) != "undefined") {_RecordType("<1864,1882,37>",(__exceptionCounter)); Inst2++; } } catch(e) {}
  __exceptionCounter++;

try { if (Inst3 <= 1000 && typeof (__exceptionCounter) != "undefined") {_RecordType("<1893,1911,39>",(__exceptionCounter)); Inst3++; } } catch(e) {}
  if (__exceptionCounter % 5000 === 0) {
try { if (Inst4 <= 1000 && typeof (Error) != "undefined") {_RecordType("<1942,1947,40>",(Error)); Inst4++; } } catch(e) {}
    throw new Error("rando");
  }
}

try { if (Inst5 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<1965,1973,44>",(noInline)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (randomException) != "undefined") {_RecordType("<1974,1989,44>",(randomException)); Inst6++; } } catch(e) {}
noInline(randomException);
/**
 * The Richards benchmark simulates the task dispatcher of an
 * operating system.
 **/

try { if (Inst7 <= 1000 && typeof (runRichards) != "undefined") {_RecordType("<2094,2105,50>",(runRichards)); Inst7++; } } catch(e) {}
function runRichards() {
try { if (Inst85 <= 1000 && typeof (e) != "undefined") {_RecordType("<3256,3257,75>",(e)); Inst85++; } } catch(e) {}
  try {
try { if (Inst9 <= 1000 && typeof (Scheduler) != "undefined") {_RecordType("<2142,2151,52>",(Scheduler)); Inst9++; } } catch(e) {}
    var scheduler = new Scheduler();
try { if (Inst8 <= 1000 && typeof (scheduler) != "undefined") {_RecordType("<2126,2135,52>",(scheduler)); Inst8++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (scheduler.addIdleTask) != "undefined") {_RecordType("<2159,2180,53>",(scheduler.addIdleTask)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (scheduler) != "undefined") {_RecordType("<2159,2168,53>",(scheduler)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (ID_IDLE) != "undefined") {_RecordType("<2181,2188,53>",(ID_IDLE)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (COUNT) != "undefined") {_RecordType("<2199,2204,53>",(COUNT)); Inst13++; } } catch(e) {}
    scheduler.addIdleTask(ID_IDLE, 0, null, COUNT);
try { if (Inst15 <= 1000 && typeof (Packet) != "undefined") {_RecordType("<2227,2233,54>",(Packet)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (ID_WORKER) != "undefined") {_RecordType("<2240,2249,54>",(ID_WORKER)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (KIND_WORK) != "undefined") {_RecordType("<2251,2260,54>",(KIND_WORK)); Inst17++; } } catch(e) {}
    var queue = new Packet(null, ID_WORKER, KIND_WORK);
try { if (Inst14 <= 1000 && typeof (queue) != "undefined") {_RecordType("<2215,2220,54>",(queue)); Inst14++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (Packet) != "undefined") {_RecordType("<2279,2285,55>",(Packet)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (queue) != "undefined") {_RecordType("<2286,2291,55>",(queue)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (ID_WORKER) != "undefined") {_RecordType("<2293,2302,55>",(ID_WORKER)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (KIND_WORK) != "undefined") {_RecordType("<2304,2313,55>",(KIND_WORK)); Inst22++; } } catch(e) {}
    queue = new Packet(queue, ID_WORKER, KIND_WORK);
try { if (Inst18 <= 1000 && typeof (queue) != "undefined") {_RecordType("<2267,2272,55>",(queue)); Inst18++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (scheduler.addWorkerTask) != "undefined") {_RecordType("<2320,2343,56>",(scheduler.addWorkerTask)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (scheduler) != "undefined") {_RecordType("<2320,2329,56>",(scheduler)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (ID_WORKER) != "undefined") {_RecordType("<2344,2353,56>",(ID_WORKER)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (queue) != "undefined") {_RecordType("<2361,2366,56>",(queue)); Inst26++; } } catch(e) {}
    scheduler.addWorkerTask(ID_WORKER, 1000, queue);
try { if (Inst28 <= 1000 && typeof (Packet) != "undefined") {_RecordType("<2385,2391,57>",(Packet)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (ID_DEVICE_A) != "undefined") {_RecordType("<2398,2409,57>",(ID_DEVICE_A)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (KIND_DEVICE) != "undefined") {_RecordType("<2411,2422,57>",(KIND_DEVICE)); Inst30++; } } catch(e) {}
    queue = new Packet(null, ID_DEVICE_A, KIND_DEVICE);
try { if (Inst27 <= 1000 && typeof (queue) != "undefined") {_RecordType("<2373,2378,57>",(queue)); Inst27++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (Packet) != "undefined") {_RecordType("<2441,2447,58>",(Packet)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (queue) != "undefined") {_RecordType("<2448,2453,58>",(queue)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (ID_DEVICE_A) != "undefined") {_RecordType("<2455,2466,58>",(ID_DEVICE_A)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (KIND_DEVICE) != "undefined") {_RecordType("<2468,2479,58>",(KIND_DEVICE)); Inst35++; } } catch(e) {}
    queue = new Packet(queue, ID_DEVICE_A, KIND_DEVICE);
try { if (Inst31 <= 1000 && typeof (queue) != "undefined") {_RecordType("<2429,2434,58>",(queue)); Inst31++; } } catch(e) {}
try { if (Inst37 <= 1000 && typeof (Packet) != "undefined") {_RecordType("<2498,2504,59>",(Packet)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (queue) != "undefined") {_RecordType("<2505,2510,59>",(queue)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (ID_DEVICE_A) != "undefined") {_RecordType("<2512,2523,59>",(ID_DEVICE_A)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (KIND_DEVICE) != "undefined") {_RecordType("<2525,2536,59>",(KIND_DEVICE)); Inst40++; } } catch(e) {}
    queue = new Packet(queue, ID_DEVICE_A, KIND_DEVICE);
try { if (Inst36 <= 1000 && typeof (queue) != "undefined") {_RecordType("<2486,2491,59>",(queue)); Inst36++; } } catch(e) {}
try { if (Inst41 <= 1000 && typeof (scheduler.addHandlerTask) != "undefined") {_RecordType("<2543,2567,60>",(scheduler.addHandlerTask)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (scheduler) != "undefined") {_RecordType("<2543,2552,60>",(scheduler)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (ID_HANDLER_A) != "undefined") {_RecordType("<2568,2580,60>",(ID_HANDLER_A)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (queue) != "undefined") {_RecordType("<2588,2593,60>",(queue)); Inst44++; } } catch(e) {}
    scheduler.addHandlerTask(ID_HANDLER_A, 2000, queue);
try { if (Inst46 <= 1000 && typeof (Packet) != "undefined") {_RecordType("<2612,2618,61>",(Packet)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (ID_DEVICE_B) != "undefined") {_RecordType("<2625,2636,61>",(ID_DEVICE_B)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (KIND_DEVICE) != "undefined") {_RecordType("<2638,2649,61>",(KIND_DEVICE)); Inst48++; } } catch(e) {}
    queue = new Packet(null, ID_DEVICE_B, KIND_DEVICE);
try { if (Inst45 <= 1000 && typeof (queue) != "undefined") {_RecordType("<2600,2605,61>",(queue)); Inst45++; } } catch(e) {}
try { if (Inst50 <= 1000 && typeof (Packet) != "undefined") {_RecordType("<2668,2674,62>",(Packet)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (queue) != "undefined") {_RecordType("<2675,2680,62>",(queue)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (ID_DEVICE_B) != "undefined") {_RecordType("<2682,2693,62>",(ID_DEVICE_B)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (KIND_DEVICE) != "undefined") {_RecordType("<2695,2706,62>",(KIND_DEVICE)); Inst53++; } } catch(e) {}
    queue = new Packet(queue, ID_DEVICE_B, KIND_DEVICE);
try { if (Inst49 <= 1000 && typeof (queue) != "undefined") {_RecordType("<2656,2661,62>",(queue)); Inst49++; } } catch(e) {}
try { if (Inst55 <= 1000 && typeof (Packet) != "undefined") {_RecordType("<2725,2731,63>",(Packet)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (queue) != "undefined") {_RecordType("<2732,2737,63>",(queue)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (ID_DEVICE_B) != "undefined") {_RecordType("<2739,2750,63>",(ID_DEVICE_B)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (KIND_DEVICE) != "undefined") {_RecordType("<2752,2763,63>",(KIND_DEVICE)); Inst58++; } } catch(e) {}
    queue = new Packet(queue, ID_DEVICE_B, KIND_DEVICE);
try { if (Inst54 <= 1000 && typeof (queue) != "undefined") {_RecordType("<2713,2718,63>",(queue)); Inst54++; } } catch(e) {}
try { if (Inst59 <= 1000 && typeof (scheduler.addHandlerTask) != "undefined") {_RecordType("<2770,2794,64>",(scheduler.addHandlerTask)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (scheduler) != "undefined") {_RecordType("<2770,2779,64>",(scheduler)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (ID_HANDLER_B) != "undefined") {_RecordType("<2795,2807,64>",(ID_HANDLER_B)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (queue) != "undefined") {_RecordType("<2815,2820,64>",(queue)); Inst62++; } } catch(e) {}
    scheduler.addHandlerTask(ID_HANDLER_B, 3000, queue);
try { if (Inst63 <= 1000 && typeof (scheduler.addDeviceTask) != "undefined") {_RecordType("<2827,2850,65>",(scheduler.addDeviceTask)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (scheduler) != "undefined") {_RecordType("<2827,2836,65>",(scheduler)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (ID_DEVICE_A) != "undefined") {_RecordType("<2851,2862,65>",(ID_DEVICE_A)); Inst65++; } } catch(e) {}
    scheduler.addDeviceTask(ID_DEVICE_A, 4000, null);
try { if (Inst66 <= 1000 && typeof (scheduler.addDeviceTask) != "undefined") {_RecordType("<2881,2904,66>",(scheduler.addDeviceTask)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (scheduler) != "undefined") {_RecordType("<2881,2890,66>",(scheduler)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (ID_DEVICE_B) != "undefined") {_RecordType("<2905,2916,66>",(ID_DEVICE_B)); Inst68++; } } catch(e) {}
    scheduler.addDeviceTask(ID_DEVICE_B, 5000, null);
try { if (Inst69 <= 1000 && typeof (scheduler.schedule) != "undefined") {_RecordType("<2935,2953,67>",(scheduler.schedule)); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (scheduler) != "undefined") {_RecordType("<2935,2944,67>",(scheduler)); Inst70++; } } catch(e) {}
    scheduler.schedule();

try { if (Inst71 <= 1000 && typeof (scheduler.queueCount) != "undefined") {_RecordType("<2966,2986,69>",(scheduler.queueCount)); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (scheduler) != "undefined") {_RecordType("<2966,2975,69>",(scheduler)); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (EXPECTED_QUEUE_COUNT) != "undefined") {_RecordType("<2990,3010,69>",(EXPECTED_QUEUE_COUNT)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (scheduler.holdCount) != "undefined") {_RecordType("<3014,3033,69>",(scheduler.holdCount)); Inst74++; } } catch(e) {}try { if (Inst75 <= 1000 && typeof (scheduler) != "undefined") {_RecordType("<3014,3023,69>",(scheduler)); Inst75++; } } catch(e) {}try { if (Inst76 <= 1000 && typeof (EXPECTED_HOLD_COUNT) != "undefined") {_RecordType("<3037,3056,69>",(EXPECTED_HOLD_COUNT)); Inst76++; } } catch(e) {}
    if (scheduler.queueCount != EXPECTED_QUEUE_COUNT || scheduler.holdCount != EXPECTED_HOLD_COUNT) {
try { if (Inst78 <= 1000 && typeof (scheduler.queueCount) != "undefined") {_RecordType("<3118,3138,70>",(scheduler.queueCount)); Inst78++; } } catch(e) {}try { if (Inst79 <= 1000 && typeof (scheduler) != "undefined") {_RecordType("<3118,3127,70>",(scheduler)); Inst79++; } } catch(e) {}try { if (Inst80 <= 1000 && typeof (scheduler.holdCount) != "undefined") {_RecordType("<3160,3179,70>",(scheduler.holdCount)); Inst80++; } } catch(e) {}try { if (Inst81 <= 1000 && typeof (scheduler) != "undefined") {_RecordType("<3160,3169,70>",(scheduler)); Inst81++; } } catch(e) {}
      var msg = "Error during execution: queueCount = " + scheduler.queueCount + ", holdCount = " + scheduler.holdCount + ".";
try { if (Inst77 <= 1000 && typeof (msg) != "undefined") {_RecordType("<3070,3073,70>",(msg)); Inst77++; } } catch(e) {}
try { if (Inst82 <= 1000 && typeof (Error) != "undefined") {_RecordType("<3203,3208,71>",(Error)); Inst82++; } } catch(e) {}try { if (Inst83 <= 1000 && typeof (msg) != "undefined") {_RecordType("<3209,3212,71>",(msg)); Inst83++; } } catch(e) {}
      throw new Error(msg);
    }

try { if (Inst84 <= 1000 && typeof (randomException) != "undefined") {_RecordType("<3226,3241,74>",(randomException)); Inst84++; } } catch(e) {}
    randomException();
  } catch (e) {
    ;
  }
}

var COUNT = 1000;
try { if (Inst86 <= 1000 && typeof (COUNT) != "undefined") {_RecordType("<3278,3283,80>",(COUNT)); Inst86++; } } catch(e) {}
/**
 * These two constants specify how many times a packet is queued and
 * how many times a task is put on hold in a correct run of richards.
 * They don't have any meaning a such but are characteristic of a
 * correct run so if the actual queue or hold count is different from
 * the expected there must be a bug in the implementation.
 **/

var EXPECTED_QUEUE_COUNT = 2322;
try { if (Inst87 <= 1000 && typeof (EXPECTED_QUEUE_COUNT) != "undefined") {_RecordType("<3640,3660,89>",(EXPECTED_QUEUE_COUNT)); Inst87++; } } catch(e) {}
var EXPECTED_HOLD_COUNT = 928;
try { if (Inst88 <= 1000 && typeof (EXPECTED_HOLD_COUNT) != "undefined") {_RecordType("<3673,3692,90>",(EXPECTED_HOLD_COUNT)); Inst88++; } } catch(e) {}
/**
 * A scheduler can be used to schedule a set of tasks based on their relative
 * priorities.  Scheduling is done by maintaining a list of task control blocks
 * which holds tasks and the data queue they are processing.
 * @constructor
 */

try { if (Inst89 <= 1000 && typeof (Scheduler) != "undefined") {_RecordType("<3953,3962,98>",(Scheduler)); Inst89++; } } catch(e) {}
function Scheduler() {
try { if (Inst99 <= 1000 && typeof (e) != "undefined") {_RecordType("<4179,4180,107>",(e)); Inst99++; } } catch(e) {}
  try {
    this.queueCount = 0;
try { if (Inst90 <= 1000 && typeof (this.queueCount) != "undefined") {_RecordType("<3979,3994,100>",(this.queueCount)); Inst90++; } } catch(e) {}
    this.holdCount = 0;
try { if (Inst91 <= 1000 && typeof (this.holdCount) != "undefined") {_RecordType("<4004,4018,101>",(this.holdCount)); Inst91++; } } catch(e) {}
try { if (Inst93 <= 1000 && typeof (Array) != "undefined") {_RecordType("<4046,4051,102>",(Array)); Inst93++; } } catch(e) {}try { if (Inst94 <= 1000 && typeof (NUMBER_OF_IDS) != "undefined") {_RecordType("<4052,4065,102>",(NUMBER_OF_IDS)); Inst94++; } } catch(e) {}
    this.blocks = new Array(NUMBER_OF_IDS);
try { if (Inst92 <= 1000 && typeof (this.blocks) != "undefined") {_RecordType("<4028,4039,102>",(this.blocks)); Inst92++; } } catch(e) {}
    this.list = null;
try { if (Inst95 <= 1000 && typeof (this.list) != "undefined") {_RecordType("<4072,4081,103>",(this.list)); Inst95++; } } catch(e) {}
    this.currentTcb = null;
try { if (Inst96 <= 1000 && typeof (this.currentTcb) != "undefined") {_RecordType("<4094,4109,104>",(this.currentTcb)); Inst96++; } } catch(e) {}
    this.currentId = null;
try { if (Inst97 <= 1000 && typeof (this.currentId) != "undefined") {_RecordType("<4122,4136,105>",(this.currentId)); Inst97++; } } catch(e) {}
try { if (Inst98 <= 1000 && typeof (randomException) != "undefined") {_RecordType("<4149,4164,106>",(randomException)); Inst98++; } } catch(e) {}
    randomException();
  } catch (e) {
    ;
  }
}

var ID_IDLE = 0;
try { if (Inst100 <= 1000 && typeof (ID_IDLE) != "undefined") {_RecordType("<4201,4208,112>",(ID_IDLE)); Inst100++; } } catch(e) {}
var ID_WORKER = 1;
try { if (Inst101 <= 1000 && typeof (ID_WORKER) != "undefined") {_RecordType("<4218,4227,113>",(ID_WORKER)); Inst101++; } } catch(e) {}
var ID_HANDLER_A = 2;
try { if (Inst102 <= 1000 && typeof (ID_HANDLER_A) != "undefined") {_RecordType("<4237,4249,114>",(ID_HANDLER_A)); Inst102++; } } catch(e) {}
var ID_HANDLER_B = 3;
try { if (Inst103 <= 1000 && typeof (ID_HANDLER_B) != "undefined") {_RecordType("<4259,4271,115>",(ID_HANDLER_B)); Inst103++; } } catch(e) {}
var ID_DEVICE_A = 4;
try { if (Inst104 <= 1000 && typeof (ID_DEVICE_A) != "undefined") {_RecordType("<4281,4292,116>",(ID_DEVICE_A)); Inst104++; } } catch(e) {}
var ID_DEVICE_B = 5;
try { if (Inst105 <= 1000 && typeof (ID_DEVICE_B) != "undefined") {_RecordType("<4302,4313,117>",(ID_DEVICE_B)); Inst105++; } } catch(e) {}
var NUMBER_OF_IDS = 6;
try { if (Inst106 <= 1000 && typeof (NUMBER_OF_IDS) != "undefined") {_RecordType("<4323,4336,118>",(NUMBER_OF_IDS)); Inst106++; } } catch(e) {}
var KIND_DEVICE = 0;
try { if (Inst107 <= 1000 && typeof (KIND_DEVICE) != "undefined") {_RecordType("<4346,4357,119>",(KIND_DEVICE)); Inst107++; } } catch(e) {}
var KIND_WORK = 1;
try { if (Inst108 <= 1000 && typeof (KIND_WORK) != "undefined") {_RecordType("<4367,4376,120>",(KIND_WORK)); Inst108++; } } catch(e) {}
/**
 * Add an idle task to this scheduler.
 * @param {int} id the identity of the task
 * @param {int} priority the task's priority
 * @param {Packet} queue the queue of work to be processed by the task
 * @param {int} count the number of times to schedule the task
 */

Scheduler.prototype.addIdleTask = function (id, priority, queue, count) {
try { if (Inst112 <= 1000 && typeof (id) != "undefined") {_RecordType("<4697,4699,129>",(id)); Inst112++; } } catch(e) {}try { if (Inst113 <= 1000 && typeof (priority) != "undefined") {_RecordType("<4701,4709,129>",(priority)); Inst113++; } } catch(e) {}try { if (Inst114 <= 1000 && typeof (queue) != "undefined") {_RecordType("<4711,4716,129>",(queue)); Inst114++; } } catch(e) {}try { if (Inst115 <= 1000 && typeof (count) != "undefined") {_RecordType("<4718,4723,129>",(count)); Inst115++; } } catch(e) {}
try { if (Inst123 <= 1000 && typeof (e) != "undefined") {_RecordType("<4845,4846,133>",(e)); Inst123++; } } catch(e) {}
  try {
try { if (Inst116 <= 1000 && typeof (this.addRunningTask) != "undefined") {_RecordType("<4739,4758,131>",(this.addRunningTask)); Inst116++; } } catch(e) {}try { if (Inst117 <= 1000 && typeof (id) != "undefined") {_RecordType("<4759,4761,131>",(id)); Inst117++; } } catch(e) {}try { if (Inst118 <= 1000 && typeof (priority) != "undefined") {_RecordType("<4763,4771,131>",(priority)); Inst118++; } } catch(e) {}try { if (Inst119 <= 1000 && typeof (queue) != "undefined") {_RecordType("<4773,4778,131>",(queue)); Inst119++; } } catch(e) {}try { if (Inst120 <= 1000 && typeof (IdleTask) != "undefined") {_RecordType("<4784,4792,131>",(IdleTask)); Inst120++; } } catch(e) {}try { if (Inst121 <= 1000 && typeof (count) != "undefined") {_RecordType("<4802,4807,131>",(count)); Inst121++; } } catch(e) {}
    this.addRunningTask(id, priority, queue, new IdleTask(this, 1, count));
try { if (Inst122 <= 1000 && typeof (randomException) != "undefined") {_RecordType("<4815,4830,132>",(randomException)); Inst122++; } } catch(e) {}
    randomException();
  } catch (e) {
    ;
  }
};
try { if (Inst109 <= 1000 && typeof (Scheduler.prototype.addIdleTask) != "undefined") {_RecordType("<4653,4684,129>",(Scheduler.prototype.addIdleTask)); Inst109++; } } catch(e) {}try { if (Inst110 <= 1000 && typeof (Scheduler.prototype) != "undefined") {_RecordType("<4653,4672,129>",(Scheduler.prototype)); Inst110++; } } catch(e) {}try { if (Inst111 <= 1000 && typeof (Scheduler) != "undefined") {_RecordType("<4653,4662,129>",(Scheduler)); Inst111++; } } catch(e) {}
/**
 * Add a work task to this scheduler.
 * @param {int} id the identity of the task
 * @param {int} priority the task's priority
 * @param {Packet} queue the queue of work to be processed by the task
 */


Scheduler.prototype.addWorkerTask = function (id, priority, queue) {
try { if (Inst127 <= 1000 && typeof (id) != "undefined") {_RecordType("<5117,5119,145>",(id)); Inst127++; } } catch(e) {}try { if (Inst128 <= 1000 && typeof (priority) != "undefined") {_RecordType("<5121,5129,145>",(priority)); Inst128++; } } catch(e) {}try { if (Inst129 <= 1000 && typeof (queue) != "undefined") {_RecordType("<5131,5136,145>",(queue)); Inst129++; } } catch(e) {}
try { if (Inst137 <= 1000 && typeof (e) != "undefined") {_RecordType("<5260,5261,149>",(e)); Inst137++; } } catch(e) {}
  try {
try { if (Inst130 <= 1000 && typeof (this.addTask) != "undefined") {_RecordType("<5152,5164,147>",(this.addTask)); Inst130++; } } catch(e) {}try { if (Inst131 <= 1000 && typeof (id) != "undefined") {_RecordType("<5165,5167,147>",(id)); Inst131++; } } catch(e) {}try { if (Inst132 <= 1000 && typeof (priority) != "undefined") {_RecordType("<5169,5177,147>",(priority)); Inst132++; } } catch(e) {}try { if (Inst133 <= 1000 && typeof (queue) != "undefined") {_RecordType("<5179,5184,147>",(queue)); Inst133++; } } catch(e) {}try { if (Inst134 <= 1000 && typeof (WorkerTask) != "undefined") {_RecordType("<5190,5200,147>",(WorkerTask)); Inst134++; } } catch(e) {}try { if (Inst135 <= 1000 && typeof (ID_HANDLER_A) != "undefined") {_RecordType("<5207,5219,147>",(ID_HANDLER_A)); Inst135++; } } catch(e) {}
    this.addTask(id, priority, queue, new WorkerTask(this, ID_HANDLER_A, 0));
try { if (Inst136 <= 1000 && typeof (randomException) != "undefined") {_RecordType("<5230,5245,148>",(randomException)); Inst136++; } } catch(e) {}
    randomException();
  } catch (e) {
    ;
  }
};
try { if (Inst124 <= 1000 && typeof (Scheduler.prototype.addWorkerTask) != "undefined") {_RecordType("<5071,5104,145>",(Scheduler.prototype.addWorkerTask)); Inst124++; } } catch(e) {}try { if (Inst125 <= 1000 && typeof (Scheduler.prototype) != "undefined") {_RecordType("<5071,5090,145>",(Scheduler.prototype)); Inst125++; } } catch(e) {}try { if (Inst126 <= 1000 && typeof (Scheduler) != "undefined") {_RecordType("<5071,5080,145>",(Scheduler)); Inst126++; } } catch(e) {}
/**
 * Add a handler task to this scheduler.
 * @param {int} id the identity of the task
 * @param {int} priority the task's priority
 * @param {Packet} queue the queue of work to be processed by the task
 */


Scheduler.prototype.addHandlerTask = function (id, priority, queue) {
try { if (Inst141 <= 1000 && typeof (id) != "undefined") {_RecordType("<5536,5538,161>",(id)); Inst141++; } } catch(e) {}try { if (Inst142 <= 1000 && typeof (priority) != "undefined") {_RecordType("<5540,5548,161>",(priority)); Inst142++; } } catch(e) {}try { if (Inst143 <= 1000 && typeof (queue) != "undefined") {_RecordType("<5550,5555,161>",(queue)); Inst143++; } } catch(e) {}
try { if (Inst150 <= 1000 && typeof (e) != "undefined") {_RecordType("<5663,5664,165>",(e)); Inst150++; } } catch(e) {}
  try {
try { if (Inst144 <= 1000 && typeof (this.addTask) != "undefined") {_RecordType("<5571,5583,163>",(this.addTask)); Inst144++; } } catch(e) {}try { if (Inst145 <= 1000 && typeof (id) != "undefined") {_RecordType("<5584,5586,163>",(id)); Inst145++; } } catch(e) {}try { if (Inst146 <= 1000 && typeof (priority) != "undefined") {_RecordType("<5588,5596,163>",(priority)); Inst146++; } } catch(e) {}try { if (Inst147 <= 1000 && typeof (queue) != "undefined") {_RecordType("<5598,5603,163>",(queue)); Inst147++; } } catch(e) {}try { if (Inst148 <= 1000 && typeof (HandlerTask) != "undefined") {_RecordType("<5609,5620,163>",(HandlerTask)); Inst148++; } } catch(e) {}
    this.addTask(id, priority, queue, new HandlerTask(this));
try { if (Inst149 <= 1000 && typeof (randomException) != "undefined") {_RecordType("<5633,5648,164>",(randomException)); Inst149++; } } catch(e) {}
    randomException();
  } catch (e) {
    ;
  }
};
try { if (Inst138 <= 1000 && typeof (Scheduler.prototype.addHandlerTask) != "undefined") {_RecordType("<5489,5523,161>",(Scheduler.prototype.addHandlerTask)); Inst138++; } } catch(e) {}try { if (Inst139 <= 1000 && typeof (Scheduler.prototype) != "undefined") {_RecordType("<5489,5508,161>",(Scheduler.prototype)); Inst139++; } } catch(e) {}try { if (Inst140 <= 1000 && typeof (Scheduler) != "undefined") {_RecordType("<5489,5498,161>",(Scheduler)); Inst140++; } } catch(e) {}
/**
 * Add a handler task to this scheduler.
 * @param {int} id the identity of the task
 * @param {int} priority the task's priority
 * @param {Packet} queue the queue of work to be processed by the task
 */


Scheduler.prototype.addDeviceTask = function (id, priority, queue) {
try { if (Inst154 <= 1000 && typeof (id) != "undefined") {_RecordType("<5938,5940,177>",(id)); Inst154++; } } catch(e) {}try { if (Inst155 <= 1000 && typeof (priority) != "undefined") {_RecordType("<5942,5950,177>",(priority)); Inst155++; } } catch(e) {}try { if (Inst156 <= 1000 && typeof (queue) != "undefined") {_RecordType("<5952,5957,177>",(queue)); Inst156++; } } catch(e) {}
try { if (Inst163 <= 1000 && typeof (e) != "undefined") {_RecordType("<6064,6065,181>",(e)); Inst163++; } } catch(e) {}
  try {
try { if (Inst157 <= 1000 && typeof (this.addTask) != "undefined") {_RecordType("<5973,5985,179>",(this.addTask)); Inst157++; } } catch(e) {}try { if (Inst158 <= 1000 && typeof (id) != "undefined") {_RecordType("<5986,5988,179>",(id)); Inst158++; } } catch(e) {}try { if (Inst159 <= 1000 && typeof (priority) != "undefined") {_RecordType("<5990,5998,179>",(priority)); Inst159++; } } catch(e) {}try { if (Inst160 <= 1000 && typeof (queue) != "undefined") {_RecordType("<6000,6005,179>",(queue)); Inst160++; } } catch(e) {}try { if (Inst161 <= 1000 && typeof (DeviceTask) != "undefined") {_RecordType("<6011,6021,179>",(DeviceTask)); Inst161++; } } catch(e) {}
    this.addTask(id, priority, queue, new DeviceTask(this));
try { if (Inst162 <= 1000 && typeof (randomException) != "undefined") {_RecordType("<6034,6049,180>",(randomException)); Inst162++; } } catch(e) {}
    randomException();
  } catch (e) {
    ;
  }
};
try { if (Inst151 <= 1000 && typeof (Scheduler.prototype.addDeviceTask) != "undefined") {_RecordType("<5892,5925,177>",(Scheduler.prototype.addDeviceTask)); Inst151++; } } catch(e) {}try { if (Inst152 <= 1000 && typeof (Scheduler.prototype) != "undefined") {_RecordType("<5892,5911,177>",(Scheduler.prototype)); Inst152++; } } catch(e) {}try { if (Inst153 <= 1000 && typeof (Scheduler) != "undefined") {_RecordType("<5892,5901,177>",(Scheduler)); Inst153++; } } catch(e) {}
/**
 * Add the specified task and mark it as running.
 * @param {int} id the identity of the task
 * @param {int} priority the task's priority
 * @param {Packet} queue the queue of work to be processed by the task
 * @param {Task} task the task to add
 */


Scheduler.prototype.addRunningTask = function (id, priority, queue, task) {
try { if (Inst167 <= 1000 && typeof (id) != "undefined") {_RecordType("<6387,6389,194>",(id)); Inst167++; } } catch(e) {}try { if (Inst168 <= 1000 && typeof (priority) != "undefined") {_RecordType("<6391,6399,194>",(priority)); Inst168++; } } catch(e) {}try { if (Inst169 <= 1000 && typeof (queue) != "undefined") {_RecordType("<6401,6406,194>",(queue)); Inst169++; } } catch(e) {}try { if (Inst170 <= 1000 && typeof (task) != "undefined") {_RecordType("<6408,6412,194>",(task)); Inst170++; } } catch(e) {}
try { if (Inst179 <= 1000 && typeof (e) != "undefined") {_RecordType("<6537,6538,199>",(e)); Inst179++; } } catch(e) {}
  try {
try { if (Inst171 <= 1000 && typeof (this.addTask) != "undefined") {_RecordType("<6428,6440,196>",(this.addTask)); Inst171++; } } catch(e) {}try { if (Inst172 <= 1000 && typeof (id) != "undefined") {_RecordType("<6441,6443,196>",(id)); Inst172++; } } catch(e) {}try { if (Inst173 <= 1000 && typeof (priority) != "undefined") {_RecordType("<6445,6453,196>",(priority)); Inst173++; } } catch(e) {}try { if (Inst174 <= 1000 && typeof (queue) != "undefined") {_RecordType("<6455,6460,196>",(queue)); Inst174++; } } catch(e) {}try { if (Inst175 <= 1000 && typeof (task) != "undefined") {_RecordType("<6462,6466,196>",(task)); Inst175++; } } catch(e) {}
    this.addTask(id, priority, queue, task);
try { if (Inst176 <= 1000 && typeof (this.currentTcb.setRunning) != "undefined") {_RecordType("<6473,6499,197>",(this.currentTcb.setRunning)); Inst176++; } } catch(e) {}try { if (Inst177 <= 1000 && typeof (this.currentTcb) != "undefined") {_RecordType("<6473,6488,197>",(this.currentTcb)); Inst177++; } } catch(e) {}
    this.currentTcb.setRunning();
try { if (Inst178 <= 1000 && typeof (randomException) != "undefined") {_RecordType("<6507,6522,198>",(randomException)); Inst178++; } } catch(e) {}
    randomException();
  } catch (e) {
    ;
  }
};
try { if (Inst164 <= 1000 && typeof (Scheduler.prototype.addRunningTask) != "undefined") {_RecordType("<6340,6374,194>",(Scheduler.prototype.addRunningTask)); Inst164++; } } catch(e) {}try { if (Inst165 <= 1000 && typeof (Scheduler.prototype) != "undefined") {_RecordType("<6340,6359,194>",(Scheduler.prototype)); Inst165++; } } catch(e) {}try { if (Inst166 <= 1000 && typeof (Scheduler) != "undefined") {_RecordType("<6340,6349,194>",(Scheduler)); Inst166++; } } catch(e) {}
/**
 * Add the specified task to this scheduler.
 * @param {int} id the identity of the task
 * @param {int} priority the task's priority
 * @param {Packet} queue the queue of work to be processed by the task
 * @param {Task} task the task to add
 */


Scheduler.prototype.addTask = function (id, priority, queue, task) {
try { if (Inst183 <= 1000 && typeof (id) != "undefined") {_RecordType("<6848,6850,212>",(id)); Inst183++; } } catch(e) {}try { if (Inst184 <= 1000 && typeof (priority) != "undefined") {_RecordType("<6852,6860,212>",(priority)); Inst184++; } } catch(e) {}try { if (Inst185 <= 1000 && typeof (queue) != "undefined") {_RecordType("<6862,6867,212>",(queue)); Inst185++; } } catch(e) {}try { if (Inst186 <= 1000 && typeof (task) != "undefined") {_RecordType("<6869,6873,212>",(task)); Inst186++; } } catch(e) {}
try { if (Inst200 <= 1000 && typeof (e) != "undefined") {_RecordType("<7073,7074,218>",(e)); Inst200++; } } catch(e) {}
  try {
try { if (Inst188 <= 1000 && typeof (TaskControlBlock) != "undefined") {_RecordType("<6911,6927,214>",(TaskControlBlock)); Inst188++; } } catch(e) {}try { if (Inst189 <= 1000 && typeof (this.list) != "undefined") {_RecordType("<6928,6937,214>",(this.list)); Inst189++; } } catch(e) {}try { if (Inst190 <= 1000 && typeof (id) != "undefined") {_RecordType("<6939,6941,214>",(id)); Inst190++; } } catch(e) {}try { if (Inst191 <= 1000 && typeof (priority) != "undefined") {_RecordType("<6943,6951,214>",(priority)); Inst191++; } } catch(e) {}try { if (Inst192 <= 1000 && typeof (queue) != "undefined") {_RecordType("<6953,6958,214>",(queue)); Inst192++; } } catch(e) {}try { if (Inst193 <= 1000 && typeof (task) != "undefined") {_RecordType("<6960,6964,214>",(task)); Inst193++; } } catch(e) {}
    this.currentTcb = new TaskControlBlock(this.list, id, priority, queue, task);
try { if (Inst187 <= 1000 && typeof (this.currentTcb) != "undefined") {_RecordType("<6889,6904,214>",(this.currentTcb)); Inst187++; } } catch(e) {}
try { if (Inst195 <= 1000 && typeof (this.currentTcb) != "undefined") {_RecordType("<6983,6998,215>",(this.currentTcb)); Inst195++; } } catch(e) {}
    this.list = this.currentTcb;
try { if (Inst194 <= 1000 && typeof (this.list) != "undefined") {_RecordType("<6971,6980,215>",(this.list)); Inst194++; } } catch(e) {}
try { if (Inst198 <= 1000 && typeof (this.currentTcb) != "undefined") {_RecordType("<7022,7037,216>",(this.currentTcb)); Inst198++; } } catch(e) {}
    this.blocks[id] = this.currentTcb;
try { if (Inst196 <= 1000 && typeof (this.blocks[id]) != "undefined") {_RecordType("<7004,7019,216>",(this.blocks[id])); Inst196++; } } catch(e) {}try { if (Inst197 <= 1000 && typeof (this.blocks) != "undefined") {_RecordType("<7004,7015,216>",(this.blocks)); Inst197++; } } catch(e) {}
try { if (Inst199 <= 1000 && typeof (randomException) != "undefined") {_RecordType("<7043,7058,217>",(randomException)); Inst199++; } } catch(e) {}
    randomException();
  } catch (e) {
    ;
  }
};
try { if (Inst180 <= 1000 && typeof (Scheduler.prototype.addTask) != "undefined") {_RecordType("<6808,6835,212>",(Scheduler.prototype.addTask)); Inst180++; } } catch(e) {}try { if (Inst181 <= 1000 && typeof (Scheduler.prototype) != "undefined") {_RecordType("<6808,6827,212>",(Scheduler.prototype)); Inst181++; } } catch(e) {}try { if (Inst182 <= 1000 && typeof (Scheduler) != "undefined") {_RecordType("<6808,6817,212>",(Scheduler)); Inst182++; } } catch(e) {}
/**
 * Execute the tasks managed by this scheduler.
 */


Scheduler.prototype.schedule = function () {
try { if (Inst205 <= 1000 && typeof (this.list) != "undefined") {_RecordType("<7214,7223,228>",(this.list)); Inst205++; } } catch(e) {}
  this.currentTcb = this.list;
try { if (Inst204 <= 1000 && typeof (this.currentTcb) != "undefined") {_RecordType("<7196,7211,228>",(this.currentTcb)); Inst204++; } } catch(e) {}

try { if (Inst206 <= 1000 && typeof (this.currentTcb) != "undefined") {_RecordType("<7235,7250,230>",(this.currentTcb)); Inst206++; } } catch(e) {}
  while (this.currentTcb != null) {
try { if (Inst219 <= 1000 && typeof (e) != "undefined") {_RecordType("<7525,7526,240>",(e)); Inst219++; } } catch(e) {}
    try {
try { if (Inst207 <= 1000 && typeof (this.currentTcb.isHeldOrSuspended) != "undefined") {_RecordType("<7282,7315,232>",(this.currentTcb.isHeldOrSuspended)); Inst207++; } } catch(e) {}try { if (Inst208 <= 1000 && typeof (this.currentTcb) != "undefined") {_RecordType("<7282,7297,232>",(this.currentTcb)); Inst208++; } } catch(e) {}
      if (this.currentTcb.isHeldOrSuspended()) {
try { if (Inst210 <= 1000 && typeof (this.currentTcb.link) != "undefined") {_RecordType("<7347,7367,233>",(this.currentTcb.link)); Inst210++; } } catch(e) {}try { if (Inst211 <= 1000 && typeof (this.currentTcb) != "undefined") {_RecordType("<7347,7362,233>",(this.currentTcb)); Inst211++; } } catch(e) {}
        this.currentTcb = this.currentTcb.link;
try { if (Inst209 <= 1000 && typeof (this.currentTcb) != "undefined") {_RecordType("<7329,7344,233>",(this.currentTcb)); Inst209++; } } catch(e) {}
      } else {
try { if (Inst213 <= 1000 && typeof (this.currentTcb.id) != "undefined") {_RecordType("<7409,7427,235>",(this.currentTcb.id)); Inst213++; } } catch(e) {}try { if (Inst214 <= 1000 && typeof (this.currentTcb) != "undefined") {_RecordType("<7409,7424,235>",(this.currentTcb)); Inst214++; } } catch(e) {}
        this.currentId = this.currentTcb.id;
try { if (Inst212 <= 1000 && typeof (this.currentId) != "undefined") {_RecordType("<7392,7406,235>",(this.currentId)); Inst212++; } } catch(e) {}
try { if (Inst216 <= 1000 && typeof (this.currentTcb.run) != "undefined") {_RecordType("<7455,7474,236>",(this.currentTcb.run)); Inst216++; } } catch(e) {}try { if (Inst217 <= 1000 && typeof (this.currentTcb) != "undefined") {_RecordType("<7455,7470,236>",(this.currentTcb)); Inst217++; } } catch(e) {}
        this.currentTcb = this.currentTcb.run();
try { if (Inst215 <= 1000 && typeof (this.currentTcb) != "undefined") {_RecordType("<7437,7452,236>",(this.currentTcb)); Inst215++; } } catch(e) {}
      }

try { if (Inst218 <= 1000 && typeof (randomException) != "undefined") {_RecordType("<7493,7508,239>",(randomException)); Inst218++; } } catch(e) {}
      randomException();
    } catch (e) {
      ;
    }
  }
};
try { if (Inst201 <= 1000 && typeof (Scheduler.prototype.schedule) != "undefined") {_RecordType("<7149,7177,227>",(Scheduler.prototype.schedule)); Inst201++; } } catch(e) {}try { if (Inst202 <= 1000 && typeof (Scheduler.prototype) != "undefined") {_RecordType("<7149,7168,227>",(Scheduler.prototype)); Inst202++; } } catch(e) {}try { if (Inst203 <= 1000 && typeof (Scheduler) != "undefined") {_RecordType("<7149,7158,227>",(Scheduler)); Inst203++; } } catch(e) {}
/**
 * Release a task that is currently blocked and return the next block to run.
 * @param {int} id the id of the task to suspend
 */


Scheduler.prototype.release = function (id) {
try { if (Inst223 <= 1000 && typeof (id) != "undefined") {_RecordType("<7728,7730,251>",(id)); Inst223++; } } catch(e) {}
try { if (Inst232 <= 1000 && typeof (e) != "undefined") {_RecordType("<7881,7882,261>",(e)); Inst232++; } } catch(e) {}
  try {
try { if (Inst225 <= 1000 && typeof (this.blocks[id]) != "undefined") {_RecordType("<7756,7771,253>",(this.blocks[id])); Inst225++; } } catch(e) {}try { if (Inst226 <= 1000 && typeof (this.blocks) != "undefined") {_RecordType("<7756,7767,253>",(this.blocks)); Inst226++; } } catch(e) {}
    var tcb = this.blocks[id];
try { if (Inst224 <= 1000 && typeof (tcb) != "undefined") {_RecordType("<7750,7753,253>",(tcb)); Inst224++; } } catch(e) {}

try { if (Inst227 <= 1000 && typeof (tcb) != "undefined") {_RecordType("<7782,7785,255>",(tcb)); Inst227++; } } catch(e) {}
    if (tcb == null) {
try { if (Inst228 <= 1000 && typeof (tcb) != "undefined") {_RecordType("<7810,7813,256>",(tcb)); Inst228++; } } catch(e) {}
      return tcb;
    }

try { if (Inst229 <= 1000 && typeof (tcb.markAsNotHeld) != "undefined") {_RecordType("<7826,7843,259>",(tcb.markAsNotHeld)); Inst229++; } } catch(e) {}try { if (Inst230 <= 1000 && typeof (tcb) != "undefined") {_RecordType("<7826,7829,259>",(tcb)); Inst230++; } } catch(e) {}
    tcb.markAsNotHeld();
try { if (Inst231 <= 1000 && typeof (randomException) != "undefined") {_RecordType("<7851,7866,260>",(randomException)); Inst231++; } } catch(e) {}
    randomException();
  } catch (e) {
    ;
  }

try { if (Inst239 <= 1000 && typeof (e) != "undefined") {_RecordType("<8034,8035,271>",(e)); Inst239++; } } catch(e) {}
  try {
try { if (Inst233 <= 1000 && typeof (tcb.priority) != "undefined") {_RecordType("<7913,7925,266>",(tcb.priority)); Inst233++; } } catch(e) {}try { if (Inst234 <= 1000 && typeof (tcb) != "undefined") {_RecordType("<7913,7916,266>",(tcb)); Inst234++; } } catch(e) {}try { if (Inst235 <= 1000 && typeof (this.currentTcb.priority) != "undefined") {_RecordType("<7928,7952,266>",(this.currentTcb.priority)); Inst235++; } } catch(e) {}try { if (Inst236 <= 1000 && typeof (this.currentTcb) != "undefined") {_RecordType("<7928,7943,266>",(this.currentTcb)); Inst236++; } } catch(e) {}
    if (tcb.priority > this.currentTcb.priority) {
try { if (Inst237 <= 1000 && typeof (tcb) != "undefined") {_RecordType("<7969,7972,267>",(tcb)); Inst237++; } } catch(e) {}
      return tcb;
    } else {
try { if (Inst238 <= 1000 && typeof (this.currentTcb) != "undefined") {_RecordType("<8000,8015,269>",(this.currentTcb)); Inst238++; } } catch(e) {}
      return this.currentTcb;
    }
  } catch (e) {
    ;
  }
};
try { if (Inst220 <= 1000 && typeof (Scheduler.prototype.release) != "undefined") {_RecordType("<7688,7715,251>",(Scheduler.prototype.release)); Inst220++; } } catch(e) {}try { if (Inst221 <= 1000 && typeof (Scheduler.prototype) != "undefined") {_RecordType("<7688,7707,251>",(Scheduler.prototype)); Inst221++; } } catch(e) {}try { if (Inst222 <= 1000 && typeof (Scheduler) != "undefined") {_RecordType("<7688,7697,251>",(Scheduler)); Inst222++; } } catch(e) {}
/**
 * Block the currently executing task and return the next task control block
 * to run.  The blocked task will not be made runnable until it is explicitly
 * released, even if new work is added to it.
 */


Scheduler.prototype.holdCurrent = function () {
try { if (Inst247 <= 1000 && typeof (e) != "undefined") {_RecordType("<8409,8410,287>",(e)); Inst247++; } } catch(e) {}
  try {
try { if (Inst243 <= 1000 && typeof (this.holdCount) != "undefined") {_RecordType("<8323,8337,284>",(this.holdCount)); Inst243++; } } catch(e) {}
    this.holdCount++;
try { if (Inst244 <= 1000 && typeof (this.currentTcb.markAsHeld) != "undefined") {_RecordType("<8345,8371,285>",(this.currentTcb.markAsHeld)); Inst244++; } } catch(e) {}try { if (Inst245 <= 1000 && typeof (this.currentTcb) != "undefined") {_RecordType("<8345,8360,285>",(this.currentTcb)); Inst245++; } } catch(e) {}
    this.currentTcb.markAsHeld();
try { if (Inst246 <= 1000 && typeof (randomException) != "undefined") {_RecordType("<8379,8394,286>",(randomException)); Inst246++; } } catch(e) {}
    randomException();
  } catch (e) {
    ;
  }

try { if (Inst248 <= 1000 && typeof (this.currentTcb.link) != "undefined") {_RecordType("<8434,8454,291>",(this.currentTcb.link)); Inst248++; } } catch(e) {}try { if (Inst249 <= 1000 && typeof (this.currentTcb) != "undefined") {_RecordType("<8434,8449,291>",(this.currentTcb)); Inst249++; } } catch(e) {}
  return this.currentTcb.link;
};
try { if (Inst240 <= 1000 && typeof (Scheduler.prototype.holdCurrent) != "undefined") {_RecordType("<8263,8294,282>",(Scheduler.prototype.holdCurrent)); Inst240++; } } catch(e) {}try { if (Inst241 <= 1000 && typeof (Scheduler.prototype) != "undefined") {_RecordType("<8263,8282,282>",(Scheduler.prototype)); Inst241++; } } catch(e) {}try { if (Inst242 <= 1000 && typeof (Scheduler) != "undefined") {_RecordType("<8263,8272,282>",(Scheduler)); Inst242++; } } catch(e) {}
/**
 * Suspend the currently executing task and return the next task control block
 * to run.  If new work is added to the suspended task it will be made runnable.
 */


Scheduler.prototype.suspendCurrent = function () {
try { if (Inst256 <= 1000 && typeof (e) != "undefined") {_RecordType("<8761,8762,303>",(e)); Inst256++; } } catch(e) {}
  try {
try { if (Inst253 <= 1000 && typeof (this.currentTcb.markAsSuspended) != "undefined") {_RecordType("<8692,8723,301>",(this.currentTcb.markAsSuspended)); Inst253++; } } catch(e) {}try { if (Inst254 <= 1000 && typeof (this.currentTcb) != "undefined") {_RecordType("<8692,8707,301>",(this.currentTcb)); Inst254++; } } catch(e) {}
    this.currentTcb.markAsSuspended();
try { if (Inst255 <= 1000 && typeof (randomException) != "undefined") {_RecordType("<8731,8746,302>",(randomException)); Inst255++; } } catch(e) {}
    randomException();
  } catch (e) {
    ;
  }

try { if (Inst258 <= 1000 && typeof (e) != "undefined") {_RecordType("<8824,8825,309>",(e)); Inst258++; } } catch(e) {}
  try {
try { if (Inst257 <= 1000 && typeof (this.currentTcb) != "undefined") {_RecordType("<8796,8811,308>",(this.currentTcb)); Inst257++; } } catch(e) {}
    return this.currentTcb;
  } catch (e) {
    ;
  }
};
try { if (Inst250 <= 1000 && typeof (Scheduler.prototype.suspendCurrent) != "undefined") {_RecordType("<8629,8663,299>",(Scheduler.prototype.suspendCurrent)); Inst250++; } } catch(e) {}try { if (Inst251 <= 1000 && typeof (Scheduler.prototype) != "undefined") {_RecordType("<8629,8648,299>",(Scheduler.prototype)); Inst251++; } } catch(e) {}try { if (Inst252 <= 1000 && typeof (Scheduler) != "undefined") {_RecordType("<8629,8638,299>",(Scheduler)); Inst252++; } } catch(e) {}
/**
 * Add the specified packet to the end of the worklist used by the task
 * associated with the packet and make the task runnable if it is currently
 * suspended.
 * @param {Packet} packet the packet to add
 */


Scheduler.prototype.queue = function (packet) {
try { if (Inst262 <= 1000 && typeof (packet) != "undefined") {_RecordType("<9096,9102,321>",(packet)); Inst262++; } } catch(e) {}
try { if (Inst274 <= 1000 && typeof (e) != "undefined") {_RecordType("<9276,9277,332>",(e)); Inst274++; } } catch(e) {}
  try {
try { if (Inst264 <= 1000 && typeof (this.blocks[packet.id]) != "undefined") {_RecordType("<9126,9148,323>",(this.blocks[packet.id])); Inst264++; } } catch(e) {}try { if (Inst265 <= 1000 && typeof (this.blocks) != "undefined") {_RecordType("<9126,9137,323>",(this.blocks)); Inst265++; } } catch(e) {}try { if (Inst266 <= 1000 && typeof (packet.id) != "undefined") {_RecordType("<9138,9147,323>",(packet.id)); Inst266++; } } catch(e) {}try { if (Inst267 <= 1000 && typeof (packet) != "undefined") {_RecordType("<9138,9144,323>",(packet)); Inst267++; } } catch(e) {}
    var t = this.blocks[packet.id];
try { if (Inst263 <= 1000 && typeof (t) != "undefined") {_RecordType("<9122,9123,323>",(t)); Inst263++; } } catch(e) {}

try { if (Inst268 <= 1000 && typeof (t) != "undefined") {_RecordType("<9159,9160,325>",(t)); Inst268++; } } catch(e) {}
    if (t == null) {
try { if (Inst269 <= 1000 && typeof (t) != "undefined") {_RecordType("<9185,9186,326>",(t)); Inst269++; } } catch(e) {}
      return t;
    }

try { if (Inst270 <= 1000 && typeof (this.queueCount) != "undefined") {_RecordType("<9199,9214,329>",(this.queueCount)); Inst270++; } } catch(e) {}
    this.queueCount++;
    packet.link = null;
try { if (Inst271 <= 1000 && typeof (packet.link) != "undefined") {_RecordType("<9222,9233,330>",(packet.link)); Inst271++; } } catch(e) {}try { if (Inst272 <= 1000 && typeof (packet) != "undefined") {_RecordType("<9222,9228,330>",(packet)); Inst272++; } } catch(e) {}
try { if (Inst273 <= 1000 && typeof (randomException) != "undefined") {_RecordType("<9246,9261,331>",(randomException)); Inst273++; } } catch(e) {}
    randomException();
  } catch (e) {
    ;
  }

try { if (Inst277 <= 1000 && typeof (this.currentId) != "undefined") {_RecordType("<9306,9320,336>",(this.currentId)); Inst277++; } } catch(e) {}
  packet.id = this.currentId;
try { if (Inst275 <= 1000 && typeof (packet.id) != "undefined") {_RecordType("<9294,9303,336>",(packet.id)); Inst275++; } } catch(e) {}try { if (Inst276 <= 1000 && typeof (packet) != "undefined") {_RecordType("<9294,9300,336>",(packet)); Inst276++; } } catch(e) {}
try { if (Inst278 <= 1000 && typeof (t.checkPriorityAdd) != "undefined") {_RecordType("<9331,9349,337>",(t.checkPriorityAdd)); Inst278++; } } catch(e) {}try { if (Inst279 <= 1000 && typeof (t) != "undefined") {_RecordType("<9331,9332,337>",(t)); Inst279++; } } catch(e) {}try { if (Inst280 <= 1000 && typeof (this.currentTcb) != "undefined") {_RecordType("<9350,9365,337>",(this.currentTcb)); Inst280++; } } catch(e) {}try { if (Inst281 <= 1000 && typeof (packet) != "undefined") {_RecordType("<9367,9373,337>",(packet)); Inst281++; } } catch(e) {}
  return t.checkPriorityAdd(this.currentTcb, packet);
};
try { if (Inst259 <= 1000 && typeof (Scheduler.prototype.queue) != "undefined") {_RecordType("<9058,9083,321>",(Scheduler.prototype.queue)); Inst259++; } } catch(e) {}try { if (Inst260 <= 1000 && typeof (Scheduler.prototype) != "undefined") {_RecordType("<9058,9077,321>",(Scheduler.prototype)); Inst260++; } } catch(e) {}try { if (Inst261 <= 1000 && typeof (Scheduler) != "undefined") {_RecordType("<9058,9067,321>",(Scheduler)); Inst261++; } } catch(e) {}
/**
 * A task control block manages a task and the queue of work packages associated
 * with it.
 * @param {TaskControlBlock} link the preceding block in the linked block list
 * @param {int} id the id of this block
 * @param {int} priority the priority of this block
 * @param {Packet} queue the queue of packages to be processed by the task
 * @param {Task} task the task
 * @constructor
 */


try { if (Inst282 <= 1000 && typeof (TaskControlBlock) != "undefined") {_RecordType("<9784,9800,351>",(TaskControlBlock)); Inst282++; } } catch(e) {}
function TaskControlBlock(link, id, priority, queue, task) {
try { if (Inst283 <= 1000 && typeof (link) != "undefined") {_RecordType("<9801,9805,351>",(link)); Inst283++; } } catch(e) {}try { if (Inst284 <= 1000 && typeof (id) != "undefined") {_RecordType("<9807,9809,351>",(id)); Inst284++; } } catch(e) {}try { if (Inst285 <= 1000 && typeof (priority) != "undefined") {_RecordType("<9811,9819,351>",(priority)); Inst285++; } } catch(e) {}try { if (Inst286 <= 1000 && typeof (queue) != "undefined") {_RecordType("<9821,9826,351>",(queue)); Inst286++; } } catch(e) {}try { if (Inst287 <= 1000 && typeof (task) != "undefined") {_RecordType("<9828,9832,351>",(task)); Inst287++; } } catch(e) {}
try { if (Inst299 <= 1000 && typeof (e) != "undefined") {_RecordType("<9994,9995,359>",(e)); Inst299++; } } catch(e) {}
  try {
try { if (Inst289 <= 1000 && typeof (link) != "undefined") {_RecordType("<9860,9864,353>",(link)); Inst289++; } } catch(e) {}
    this.link = link;
try { if (Inst288 <= 1000 && typeof (this.link) != "undefined") {_RecordType("<9848,9857,353>",(this.link)); Inst288++; } } catch(e) {}
try { if (Inst291 <= 1000 && typeof (id) != "undefined") {_RecordType("<9880,9882,354>",(id)); Inst291++; } } catch(e) {}
    this.id = id;
try { if (Inst290 <= 1000 && typeof (this.id) != "undefined") {_RecordType("<9870,9877,354>",(this.id)); Inst290++; } } catch(e) {}
try { if (Inst293 <= 1000 && typeof (priority) != "undefined") {_RecordType("<9904,9912,355>",(priority)); Inst293++; } } catch(e) {}
    this.priority = priority;
try { if (Inst292 <= 1000 && typeof (this.priority) != "undefined") {_RecordType("<9888,9901,355>",(this.priority)); Inst292++; } } catch(e) {}
try { if (Inst295 <= 1000 && typeof (queue) != "undefined") {_RecordType("<9931,9936,356>",(queue)); Inst295++; } } catch(e) {}
    this.queue = queue;
try { if (Inst294 <= 1000 && typeof (this.queue) != "undefined") {_RecordType("<9918,9928,356>",(this.queue)); Inst294++; } } catch(e) {}
try { if (Inst297 <= 1000 && typeof (task) != "undefined") {_RecordType("<9954,9958,357>",(task)); Inst297++; } } catch(e) {}
    this.task = task;
try { if (Inst296 <= 1000 && typeof (this.task) != "undefined") {_RecordType("<9942,9951,357>",(this.task)); Inst296++; } } catch(e) {}
try { if (Inst298 <= 1000 && typeof (randomException) != "undefined") {_RecordType("<9964,9979,358>",(randomException)); Inst298++; } } catch(e) {}
    randomException();
  } catch (e) {
    ;
  }

try { if (Inst306 <= 1000 && typeof (e) != "undefined") {_RecordType("<10178,10179,371>",(e)); Inst306++; } } catch(e) {}
  try {
try { if (Inst300 <= 1000 && typeof (queue) != "undefined") {_RecordType("<10026,10031,364>",(queue)); Inst300++; } } catch(e) {}
    if (queue == null) {
try { if (Inst302 <= 1000 && typeof (STATE_SUSPENDED) != "undefined") {_RecordType("<10062,10077,365>",(STATE_SUSPENDED)); Inst302++; } } catch(e) {}
      this.state = STATE_SUSPENDED;
try { if (Inst301 <= 1000 && typeof (this.state) != "undefined") {_RecordType("<10049,10059,365>",(this.state)); Inst301++; } } catch(e) {}
    } else {
try { if (Inst304 <= 1000 && typeof (STATE_SUSPENDED_RUNNABLE) != "undefined") {_RecordType("<10111,10135,367>",(STATE_SUSPENDED_RUNNABLE)); Inst304++; } } catch(e) {}
      this.state = STATE_SUSPENDED_RUNNABLE;
try { if (Inst303 <= 1000 && typeof (this.state) != "undefined") {_RecordType("<10098,10108,367>",(this.state)); Inst303++; } } catch(e) {}
    }

try { if (Inst305 <= 1000 && typeof (randomException) != "undefined") {_RecordType("<10148,10163,370>",(randomException)); Inst305++; } } catch(e) {}
    randomException();
  } catch (e) {
    ;
  }
}
/**
 * The task is running and is currently scheduled.
 */


var STATE_RUNNING = 0;
try { if (Inst307 <= 1000 && typeof (STATE_RUNNING) != "undefined") {_RecordType("<10260,10273,380>",(STATE_RUNNING)); Inst307++; } } catch(e) {}
/**
 * The task has packets left to process.
 */

var STATE_RUNNABLE = 1;
try { if (Inst308 <= 1000 && typeof (STATE_RUNNABLE) != "undefined") {_RecordType("<10333,10347,385>",(STATE_RUNNABLE)); Inst308++; } } catch(e) {}
/**
 * The task is not currently running.  The task is not blocked as such and may
 * be started by the scheduler.
 */

var STATE_SUSPENDED = 2;
try { if (Inst309 <= 1000 && typeof (STATE_SUSPENDED) != "undefined") {_RecordType("<10477,10492,391>",(STATE_SUSPENDED)); Inst309++; } } catch(e) {}
/**
 * The task is blocked and cannot be run until it is explicitly released.
 */

var STATE_HELD = 4;
try { if (Inst310 <= 1000 && typeof (STATE_HELD) != "undefined") {_RecordType("<10585,10595,396>",(STATE_HELD)); Inst310++; } } catch(e) {}
try { if (Inst312 <= 1000 && typeof (STATE_SUSPENDED) != "undefined") {_RecordType("<10632,10647,397>",(STATE_SUSPENDED)); Inst312++; } } catch(e) {}try { if (Inst313 <= 1000 && typeof (STATE_RUNNABLE) != "undefined") {_RecordType("<10650,10664,397>",(STATE_RUNNABLE)); Inst313++; } } catch(e) {}
var STATE_SUSPENDED_RUNNABLE = STATE_SUSPENDED | STATE_RUNNABLE;
try { if (Inst311 <= 1000 && typeof (STATE_SUSPENDED_RUNNABLE) != "undefined") {_RecordType("<10605,10629,397>",(STATE_SUSPENDED_RUNNABLE)); Inst311++; } } catch(e) {}
try { if (Inst315 <= 1000 && typeof (STATE_HELD) != "undefined") {_RecordType("<10688,10698,398>",(STATE_HELD)); Inst315++; } } catch(e) {}
var STATE_NOT_HELD = ~STATE_HELD;
try { if (Inst314 <= 1000 && typeof (STATE_NOT_HELD) != "undefined") {_RecordType("<10670,10684,398>",(STATE_NOT_HELD)); Inst314++; } } catch(e) {}

TaskControlBlock.prototype.setRunning = function () {
try { if (Inst322 <= 1000 && typeof (e) != "undefined") {_RecordType("<10829,10830,404>",(e)); Inst322++; } } catch(e) {}
  try {
try { if (Inst320 <= 1000 && typeof (STATE_RUNNING) != "undefined") {_RecordType("<10780,10793,402>",(STATE_RUNNING)); Inst320++; } } catch(e) {}
    this.state = STATE_RUNNING;
try { if (Inst319 <= 1000 && typeof (this.state) != "undefined") {_RecordType("<10767,10777,402>",(this.state)); Inst319++; } } catch(e) {}
try { if (Inst321 <= 1000 && typeof (randomException) != "undefined") {_RecordType("<10799,10814,403>",(randomException)); Inst321++; } } catch(e) {}
    randomException();
  } catch (e) {
    ;
  }
};
try { if (Inst316 <= 1000 && typeof (TaskControlBlock.prototype.setRunning) != "undefined") {_RecordType("<10701,10738,400>",(TaskControlBlock.prototype.setRunning)); Inst316++; } } catch(e) {}try { if (Inst317 <= 1000 && typeof (TaskControlBlock.prototype) != "undefined") {_RecordType("<10701,10727,400>",(TaskControlBlock.prototype)); Inst317++; } } catch(e) {}try { if (Inst318 <= 1000 && typeof (TaskControlBlock) != "undefined") {_RecordType("<10701,10717,400>",(TaskControlBlock)); Inst318++; } } catch(e) {}

TaskControlBlock.prototype.markAsNotHeld = function () {
try { if (Inst330 <= 1000 && typeof (e) != "undefined") {_RecordType("<10993,10994,413>",(e)); Inst330++; } } catch(e) {}
  try {
try { if (Inst327 <= 1000 && typeof (this.state) != "undefined") {_RecordType("<10930,10940,411>",(this.state)); Inst327++; } } catch(e) {}try { if (Inst328 <= 1000 && typeof (STATE_NOT_HELD) != "undefined") {_RecordType("<10943,10957,411>",(STATE_NOT_HELD)); Inst328++; } } catch(e) {}
    this.state = this.state & STATE_NOT_HELD;
try { if (Inst326 <= 1000 && typeof (this.state) != "undefined") {_RecordType("<10917,10927,411>",(this.state)); Inst326++; } } catch(e) {}
try { if (Inst329 <= 1000 && typeof (randomException) != "undefined") {_RecordType("<10963,10978,412>",(randomException)); Inst329++; } } catch(e) {}
    randomException();
  } catch (e) {
    ;
  }
};
try { if (Inst323 <= 1000 && typeof (TaskControlBlock.prototype.markAsNotHeld) != "undefined") {_RecordType("<10848,10888,409>",(TaskControlBlock.prototype.markAsNotHeld)); Inst323++; } } catch(e) {}try { if (Inst324 <= 1000 && typeof (TaskControlBlock.prototype) != "undefined") {_RecordType("<10848,10874,409>",(TaskControlBlock.prototype)); Inst324++; } } catch(e) {}try { if (Inst325 <= 1000 && typeof (TaskControlBlock) != "undefined") {_RecordType("<10848,10864,409>",(TaskControlBlock)); Inst325++; } } catch(e) {}

TaskControlBlock.prototype.markAsHeld = function () {
try { if (Inst338 <= 1000 && typeof (e) != "undefined") {_RecordType("<11150,11151,422>",(e)); Inst338++; } } catch(e) {}
  try {
try { if (Inst335 <= 1000 && typeof (this.state) != "undefined") {_RecordType("<11091,11101,420>",(this.state)); Inst335++; } } catch(e) {}try { if (Inst336 <= 1000 && typeof (STATE_HELD) != "undefined") {_RecordType("<11104,11114,420>",(STATE_HELD)); Inst336++; } } catch(e) {}
    this.state = this.state | STATE_HELD;
try { if (Inst334 <= 1000 && typeof (this.state) != "undefined") {_RecordType("<11078,11088,420>",(this.state)); Inst334++; } } catch(e) {}
try { if (Inst337 <= 1000 && typeof (randomException) != "undefined") {_RecordType("<11120,11135,421>",(randomException)); Inst337++; } } catch(e) {}
    randomException();
  } catch (e) {
    ;
  }
};
try { if (Inst331 <= 1000 && typeof (TaskControlBlock.prototype.markAsHeld) != "undefined") {_RecordType("<11012,11049,418>",(TaskControlBlock.prototype.markAsHeld)); Inst331++; } } catch(e) {}try { if (Inst332 <= 1000 && typeof (TaskControlBlock.prototype) != "undefined") {_RecordType("<11012,11038,418>",(TaskControlBlock.prototype)); Inst332++; } } catch(e) {}try { if (Inst333 <= 1000 && typeof (TaskControlBlock) != "undefined") {_RecordType("<11012,11028,418>",(TaskControlBlock)); Inst333++; } } catch(e) {}

TaskControlBlock.prototype.isHeldOrSuspended = function () {
try { if (Inst347 <= 1000 && typeof (e) != "undefined") {_RecordType("<11348,11349,431>",(e)); Inst347++; } } catch(e) {}
  try {
try { if (Inst342 <= 1000 && typeof (randomException) != "undefined") {_RecordType("<11242,11257,429>",(randomException)); Inst342++; } } catch(e) {}
    randomException();
try { if (Inst343 <= 1000 && typeof (this.state) != "undefined") {_RecordType("<11273,11283,430>",(this.state)); Inst343++; } } catch(e) {}try { if (Inst344 <= 1000 && typeof (STATE_HELD) != "undefined") {_RecordType("<11286,11296,430>",(STATE_HELD)); Inst344++; } } catch(e) {}try { if (Inst345 <= 1000 && typeof (this.state) != "undefined") {_RecordType("<11306,11316,430>",(this.state)); Inst345++; } } catch(e) {}try { if (Inst346 <= 1000 && typeof (STATE_SUSPENDED) != "undefined") {_RecordType("<11320,11335,430>",(STATE_SUSPENDED)); Inst346++; } } catch(e) {}
    return (this.state & STATE_HELD) != 0 || this.state == STATE_SUSPENDED;
  } catch (e) {
try { if (Inst348 <= 1000 && typeof (this.state) != "undefined") {_RecordType("<11365,11375,432>",(this.state)); Inst348++; } } catch(e) {}try { if (Inst349 <= 1000 && typeof (STATE_HELD) != "undefined") {_RecordType("<11378,11388,432>",(STATE_HELD)); Inst349++; } } catch(e) {}try { if (Inst350 <= 1000 && typeof (this.state) != "undefined") {_RecordType("<11398,11408,432>",(this.state)); Inst350++; } } catch(e) {}try { if (Inst351 <= 1000 && typeof (STATE_SUSPENDED) != "undefined") {_RecordType("<11412,11427,432>",(STATE_SUSPENDED)); Inst351++; } } catch(e) {}
    return (this.state & STATE_HELD) != 0 || this.state == STATE_SUSPENDED;
  }
};
try { if (Inst339 <= 1000 && typeof (TaskControlBlock.prototype.isHeldOrSuspended) != "undefined") {_RecordType("<11169,11213,427>",(TaskControlBlock.prototype.isHeldOrSuspended)); Inst339++; } } catch(e) {}try { if (Inst340 <= 1000 && typeof (TaskControlBlock.prototype) != "undefined") {_RecordType("<11169,11195,427>",(TaskControlBlock.prototype)); Inst340++; } } catch(e) {}try { if (Inst341 <= 1000 && typeof (TaskControlBlock) != "undefined") {_RecordType("<11169,11185,427>",(TaskControlBlock)); Inst341++; } } catch(e) {}

TaskControlBlock.prototype.markAsSuspended = function () {
try { if (Inst359 <= 1000 && typeof (e) != "undefined") {_RecordType("<11585,11586,440>",(e)); Inst359++; } } catch(e) {}
  try {
try { if (Inst355 <= 1000 && typeof (randomException) != "undefined") {_RecordType("<11508,11523,438>",(randomException)); Inst355++; } } catch(e) {}
    randomException();
try { if (Inst357 <= 1000 && typeof (this.state) != "undefined") {_RecordType("<11544,11554,439>",(this.state)); Inst357++; } } catch(e) {}try { if (Inst358 <= 1000 && typeof (STATE_SUSPENDED) != "undefined") {_RecordType("<11557,11572,439>",(STATE_SUSPENDED)); Inst358++; } } catch(e) {}
    this.state = this.state | STATE_SUSPENDED;
try { if (Inst356 <= 1000 && typeof (this.state) != "undefined") {_RecordType("<11531,11541,439>",(this.state)); Inst356++; } } catch(e) {}
  } catch (e) {
try { if (Inst361 <= 1000 && typeof (this.state) != "undefined") {_RecordType("<11607,11617,441>",(this.state)); Inst361++; } } catch(e) {}try { if (Inst362 <= 1000 && typeof (STATE_SUSPENDED) != "undefined") {_RecordType("<11620,11635,441>",(STATE_SUSPENDED)); Inst362++; } } catch(e) {}
    this.state = this.state | STATE_SUSPENDED;
try { if (Inst360 <= 1000 && typeof (this.state) != "undefined") {_RecordType("<11594,11604,441>",(this.state)); Inst360++; } } catch(e) {}
  }
};
try { if (Inst352 <= 1000 && typeof (TaskControlBlock.prototype.markAsSuspended) != "undefined") {_RecordType("<11437,11479,436>",(TaskControlBlock.prototype.markAsSuspended)); Inst352++; } } catch(e) {}try { if (Inst353 <= 1000 && typeof (TaskControlBlock.prototype) != "undefined") {_RecordType("<11437,11463,436>",(TaskControlBlock.prototype)); Inst353++; } } catch(e) {}try { if (Inst354 <= 1000 && typeof (TaskControlBlock) != "undefined") {_RecordType("<11437,11453,436>",(TaskControlBlock)); Inst354++; } } catch(e) {}

TaskControlBlock.prototype.markAsRunnable = function () {
try { if (Inst370 <= 1000 && typeof (e) != "undefined") {_RecordType("<11791,11792,449>",(e)); Inst370++; } } catch(e) {}
  try {
try { if (Inst366 <= 1000 && typeof (randomException) != "undefined") {_RecordType("<11715,11730,447>",(randomException)); Inst366++; } } catch(e) {}
    randomException();
try { if (Inst368 <= 1000 && typeof (this.state) != "undefined") {_RecordType("<11751,11761,448>",(this.state)); Inst368++; } } catch(e) {}try { if (Inst369 <= 1000 && typeof (STATE_RUNNABLE) != "undefined") {_RecordType("<11764,11778,448>",(STATE_RUNNABLE)); Inst369++; } } catch(e) {}
    this.state = this.state | STATE_RUNNABLE;
try { if (Inst367 <= 1000 && typeof (this.state) != "undefined") {_RecordType("<11738,11748,448>",(this.state)); Inst367++; } } catch(e) {}
  } catch (e) {
try { if (Inst372 <= 1000 && typeof (this.state) != "undefined") {_RecordType("<11813,11823,450>",(this.state)); Inst372++; } } catch(e) {}try { if (Inst373 <= 1000 && typeof (STATE_RUNNABLE) != "undefined") {_RecordType("<11826,11840,450>",(STATE_RUNNABLE)); Inst373++; } } catch(e) {}
    this.state = this.state | STATE_RUNNABLE;
try { if (Inst371 <= 1000 && typeof (this.state) != "undefined") {_RecordType("<11800,11810,450>",(this.state)); Inst371++; } } catch(e) {}
  }
};
try { if (Inst363 <= 1000 && typeof (TaskControlBlock.prototype.markAsRunnable) != "undefined") {_RecordType("<11645,11686,445>",(TaskControlBlock.prototype.markAsRunnable)); Inst363++; } } catch(e) {}try { if (Inst364 <= 1000 && typeof (TaskControlBlock.prototype) != "undefined") {_RecordType("<11645,11671,445>",(TaskControlBlock.prototype)); Inst364++; } } catch(e) {}try { if (Inst365 <= 1000 && typeof (TaskControlBlock) != "undefined") {_RecordType("<11645,11661,445>",(TaskControlBlock)); Inst365++; } } catch(e) {}
/**
 * Runs this task, if it is ready to be run, and returns the next task to run.
 */


TaskControlBlock.prototype.run = function () {
  var packet;
try { if (Inst377 <= 1000 && typeof (packet) != "undefined") {_RecordType("<11991,11997,459>",(packet)); Inst377++; } } catch(e) {}

try { if (Inst392 <= 1000 && typeof (e) != "undefined") {_RecordType("<12321,12322,476>",(e)); Inst392++; } } catch(e) {}
  try {
try { if (Inst378 <= 1000 && typeof (this.state) != "undefined") {_RecordType("<12016,12026,462>",(this.state)); Inst378++; } } catch(e) {}try { if (Inst379 <= 1000 && typeof (STATE_SUSPENDED_RUNNABLE) != "undefined") {_RecordType("<12030,12054,462>",(STATE_SUSPENDED_RUNNABLE)); Inst379++; } } catch(e) {}
    if (this.state == STATE_SUSPENDED_RUNNABLE) {
try { if (Inst381 <= 1000 && typeof (this.queue) != "undefined") {_RecordType("<12073,12083,463>",(this.queue)); Inst381++; } } catch(e) {}
      packet = this.queue;
try { if (Inst380 <= 1000 && typeof (packet) != "undefined") {_RecordType("<12064,12070,463>",(packet)); Inst380++; } } catch(e) {}
try { if (Inst383 <= 1000 && typeof (packet.link) != "undefined") {_RecordType("<12104,12115,464>",(packet.link)); Inst383++; } } catch(e) {}try { if (Inst384 <= 1000 && typeof (packet) != "undefined") {_RecordType("<12104,12110,464>",(packet)); Inst384++; } } catch(e) {}
      this.queue = packet.link;
try { if (Inst382 <= 1000 && typeof (this.queue) != "undefined") {_RecordType("<12091,12101,464>",(this.queue)); Inst382++; } } catch(e) {}

try { if (Inst385 <= 1000 && typeof (this.queue) != "undefined") {_RecordType("<12128,12138,466>",(this.queue)); Inst385++; } } catch(e) {}
      if (this.queue == null) {
try { if (Inst387 <= 1000 && typeof (STATE_RUNNING) != "undefined") {_RecordType("<12171,12184,467>",(STATE_RUNNING)); Inst387++; } } catch(e) {}
        this.state = STATE_RUNNING;
try { if (Inst386 <= 1000 && typeof (this.state) != "undefined") {_RecordType("<12158,12168,467>",(this.state)); Inst386++; } } catch(e) {}
      } else {
try { if (Inst389 <= 1000 && typeof (STATE_RUNNABLE) != "undefined") {_RecordType("<12222,12236,469>",(STATE_RUNNABLE)); Inst389++; } } catch(e) {}
        this.state = STATE_RUNNABLE;
try { if (Inst388 <= 1000 && typeof (this.state) != "undefined") {_RecordType("<12209,12219,469>",(this.state)); Inst388++; } } catch(e) {}
      }
    } else {
      packet = null;
try { if (Inst390 <= 1000 && typeof (packet) != "undefined") {_RecordType("<12265,12271,472>",(packet)); Inst390++; } } catch(e) {}
    }

try { if (Inst391 <= 1000 && typeof (randomException) != "undefined") {_RecordType("<12291,12306,475>",(randomException)); Inst391++; } } catch(e) {}
    randomException();
  } catch (e) {
    ;
  }

try { if (Inst393 <= 1000 && typeof (this.task.run) != "undefined") {_RecordType("<12346,12359,480>",(this.task.run)); Inst393++; } } catch(e) {}try { if (Inst394 <= 1000 && typeof (this.task) != "undefined") {_RecordType("<12346,12355,480>",(this.task)); Inst394++; } } catch(e) {}try { if (Inst395 <= 1000 && typeof (packet) != "undefined") {_RecordType("<12360,12366,480>",(packet)); Inst395++; } } catch(e) {}
  return this.task.run(packet);
};
try { if (Inst374 <= 1000 && typeof (TaskControlBlock.prototype.run) != "undefined") {_RecordType("<11938,11968,458>",(TaskControlBlock.prototype.run)); Inst374++; } } catch(e) {}try { if (Inst375 <= 1000 && typeof (TaskControlBlock.prototype) != "undefined") {_RecordType("<11938,11964,458>",(TaskControlBlock.prototype)); Inst375++; } } catch(e) {}try { if (Inst376 <= 1000 && typeof (TaskControlBlock) != "undefined") {_RecordType("<11938,11954,458>",(TaskControlBlock)); Inst376++; } } catch(e) {}
/**
 * Adds a packet to the worklist of this block's task, marks this as runnable if
 * necessary, and returns the next runnable object to run (the one
 * with the highest priority).
 */


TaskControlBlock.prototype.checkPriorityAdd = function (task, packet) {
try { if (Inst399 <= 1000 && typeof (task) != "undefined") {_RecordType("<12617,12621,489>",(task)); Inst399++; } } catch(e) {}try { if (Inst400 <= 1000 && typeof (packet) != "undefined") {_RecordType("<12623,12629,489>",(packet)); Inst400++; } } catch(e) {}
try { if (Inst414 <= 1000 && typeof (e) != "undefined") {_RecordType("<12916,12917,504>",(e)); Inst414++; } } catch(e) {}
  try {
try { if (Inst401 <= 1000 && typeof (this.queue) != "undefined") {_RecordType("<12649,12659,491>",(this.queue)); Inst401++; } } catch(e) {}
    if (this.queue == null) {
try { if (Inst403 <= 1000 && typeof (packet) != "undefined") {_RecordType("<12690,12696,492>",(packet)); Inst403++; } } catch(e) {}
      this.queue = packet;
try { if (Inst402 <= 1000 && typeof (this.queue) != "undefined") {_RecordType("<12677,12687,492>",(this.queue)); Inst402++; } } catch(e) {}
try { if (Inst404 <= 1000 && typeof (this.markAsRunnable) != "undefined") {_RecordType("<12704,12723,493>",(this.markAsRunnable)); Inst404++; } } catch(e) {}
      this.markAsRunnable();

try { if (Inst405 <= 1000 && typeof (this.priority) != "undefined") {_RecordType("<12738,12751,495>",(this.priority)); Inst405++; } } catch(e) {}try { if (Inst406 <= 1000 && typeof (task.priority) != "undefined") {_RecordType("<12754,12767,495>",(task.priority)); Inst406++; } } catch(e) {}try { if (Inst407 <= 1000 && typeof (task) != "undefined") {_RecordType("<12754,12758,495>",(task)); Inst407++; } } catch(e) {}
      if (this.priority > task.priority) {
        return this;
      }
    } else {
try { if (Inst409 <= 1000 && typeof (packet.addTo) != "undefined") {_RecordType("<12832,12844,499>",(packet.addTo)); Inst409++; } } catch(e) {}try { if (Inst410 <= 1000 && typeof (packet) != "undefined") {_RecordType("<12832,12838,499>",(packet)); Inst410++; } } catch(e) {}try { if (Inst411 <= 1000 && typeof (this.queue) != "undefined") {_RecordType("<12845,12855,499>",(this.queue)); Inst411++; } } catch(e) {}
      this.queue = packet.addTo(this.queue);
try { if (Inst408 <= 1000 && typeof (this.queue) != "undefined") {_RecordType("<12819,12829,499>",(this.queue)); Inst408++; } } catch(e) {}
    }

try { if (Inst412 <= 1000 && typeof (randomException) != "undefined") {_RecordType("<12869,12884,502>",(randomException)); Inst412++; } } catch(e) {}
    randomException();
try { if (Inst413 <= 1000 && typeof (task) != "undefined") {_RecordType("<12899,12903,503>",(task)); Inst413++; } } catch(e) {}
    return task;
  } catch (e) {
try { if (Inst415 <= 1000 && typeof (task) != "undefined") {_RecordType("<12932,12936,505>",(task)); Inst415++; } } catch(e) {}
    return task;
  }
};
try { if (Inst396 <= 1000 && typeof (TaskControlBlock.prototype.checkPriorityAdd) != "undefined") {_RecordType("<12561,12604,489>",(TaskControlBlock.prototype.checkPriorityAdd)); Inst396++; } } catch(e) {}try { if (Inst397 <= 1000 && typeof (TaskControlBlock.prototype) != "undefined") {_RecordType("<12561,12587,489>",(TaskControlBlock.prototype)); Inst397++; } } catch(e) {}try { if (Inst398 <= 1000 && typeof (TaskControlBlock) != "undefined") {_RecordType("<12561,12577,489>",(TaskControlBlock)); Inst398++; } } catch(e) {}

TaskControlBlock.prototype.toString = function () {
try { if (Inst422 <= 1000 && typeof (e) != "undefined") {_RecordType("<13099,13100,513>",(e)); Inst422++; } } catch(e) {}
  try {
try { if (Inst419 <= 1000 && typeof (randomException) != "undefined") {_RecordType("<13010,13025,511>",(randomException)); Inst419++; } } catch(e) {}
    randomException();
try { if (Inst420 <= 1000 && typeof (this.task) != "undefined") {_RecordType("<13051,13060,512>",(this.task)); Inst420++; } } catch(e) {}try { if (Inst421 <= 1000 && typeof (this.state) != "undefined") {_RecordType("<13069,13079,512>",(this.state)); Inst421++; } } catch(e) {}
    return "tcb { " + this.task + "@" + this.state + " }";
  } catch (e) {
try { if (Inst423 <= 1000 && typeof (this.task) != "undefined") {_RecordType("<13126,13135,514>",(this.task)); Inst423++; } } catch(e) {}try { if (Inst424 <= 1000 && typeof (this.state) != "undefined") {_RecordType("<13144,13154,514>",(this.state)); Inst424++; } } catch(e) {}
    return "tcb { " + this.task + "@" + this.state + " }";
  }
};
try { if (Inst416 <= 1000 && typeof (TaskControlBlock.prototype.toString) != "undefined") {_RecordType("<12946,12981,509>",(TaskControlBlock.prototype.toString)); Inst416++; } } catch(e) {}try { if (Inst417 <= 1000 && typeof (TaskControlBlock.prototype) != "undefined") {_RecordType("<12946,12972,509>",(TaskControlBlock.prototype)); Inst417++; } } catch(e) {}try { if (Inst418 <= 1000 && typeof (TaskControlBlock) != "undefined") {_RecordType("<12946,12962,509>",(TaskControlBlock)); Inst418++; } } catch(e) {}
/**
 * An idle task doesn't do any work itself but cycles control between the two
 * device tasks.
 * @param {Scheduler} scheduler the scheduler that manages this task
 * @param {int} v1 a seed value that controls how the device tasks are scheduled
 * @param {int} count the number of times this task should be scheduled
 * @constructor
 */


try { if (Inst425 <= 1000 && typeof (IdleTask) != "undefined") {_RecordType("<13522,13530,527>",(IdleTask)); Inst425++; } } catch(e) {}
function IdleTask(scheduler, v1, count) {
try { if (Inst426 <= 1000 && typeof (scheduler) != "undefined") {_RecordType("<13531,13540,527>",(scheduler)); Inst426++; } } catch(e) {}try { if (Inst427 <= 1000 && typeof (v1) != "undefined") {_RecordType("<13542,13544,527>",(v1)); Inst427++; } } catch(e) {}try { if (Inst428 <= 1000 && typeof (count) != "undefined") {_RecordType("<13546,13551,527>",(count)); Inst428++; } } catch(e) {}
try { if (Inst436 <= 1000 && typeof (e) != "undefined") {_RecordType("<13671,13672,533>",(e)); Inst436++; } } catch(e) {}
  try {
try { if (Inst430 <= 1000 && typeof (scheduler) != "undefined") {_RecordType("<13584,13593,529>",(scheduler)); Inst430++; } } catch(e) {}
    this.scheduler = scheduler;
try { if (Inst429 <= 1000 && typeof (this.scheduler) != "undefined") {_RecordType("<13567,13581,529>",(this.scheduler)); Inst429++; } } catch(e) {}
try { if (Inst432 <= 1000 && typeof (v1) != "undefined") {_RecordType("<13609,13611,530>",(v1)); Inst432++; } } catch(e) {}
    this.v1 = v1;
try { if (Inst431 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<13599,13606,530>",(this.v1)); Inst431++; } } catch(e) {}
try { if (Inst433 <= 1000 && typeof (randomException) != "undefined") {_RecordType("<13617,13632,531>",(randomException)); Inst433++; } } catch(e) {}
    randomException();
try { if (Inst435 <= 1000 && typeof (count) != "undefined") {_RecordType("<13653,13658,532>",(count)); Inst435++; } } catch(e) {}
    this.count = count;
try { if (Inst434 <= 1000 && typeof (this.count) != "undefined") {_RecordType("<13640,13650,532>",(this.count)); Inst434++; } } catch(e) {}
  } catch (e) {
try { if (Inst438 <= 1000 && typeof (count) != "undefined") {_RecordType("<13693,13698,534>",(count)); Inst438++; } } catch(e) {}
    this.count = count;
try { if (Inst437 <= 1000 && typeof (this.count) != "undefined") {_RecordType("<13680,13690,534>",(this.count)); Inst437++; } } catch(e) {}
  }
}

IdleTask.prototype.run = function (packet) {
try { if (Inst442 <= 1000 && typeof (packet) != "undefined") {_RecordType("<13742,13748,538>",(packet)); Inst442++; } } catch(e) {}
try { if (Inst448 <= 1000 && typeof (e) != "undefined") {_RecordType("<13890,13891,547>",(e)); Inst448++; } } catch(e) {}
  try {
try { if (Inst443 <= 1000 && typeof (this.count) != "undefined") {_RecordType("<13764,13774,540>",(this.count)); Inst443++; } } catch(e) {}
    this.count--;

try { if (Inst444 <= 1000 && typeof (this.count) != "undefined") {_RecordType("<13787,13797,542>",(this.count)); Inst444++; } } catch(e) {}
    if (this.count == 0) {
try { if (Inst445 <= 1000 && typeof (this.scheduler.holdCurrent) != "undefined") {_RecordType("<13819,13845,543>",(this.scheduler.holdCurrent)); Inst445++; } } catch(e) {}try { if (Inst446 <= 1000 && typeof (this.scheduler) != "undefined") {_RecordType("<13819,13833,543>",(this.scheduler)); Inst446++; } } catch(e) {}
      return this.scheduler.holdCurrent();
    }

try { if (Inst447 <= 1000 && typeof (randomException) != "undefined") {_RecordType("<13860,13875,546>",(randomException)); Inst447++; } } catch(e) {}
    randomException();
  } catch (e) {
    ;
  }

try { if (Inst460 <= 1000 && typeof (e) != "undefined") {_RecordType("<14143,14144,559>",(e)); Inst460++; } } catch(e) {}
  try {
try { if (Inst449 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<13923,13930,552>",(this.v1)); Inst449++; } } catch(e) {}
    if ((this.v1 & 1) == 0) {
try { if (Inst451 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<13960,13967,553>",(this.v1)); Inst451++; } } catch(e) {}
      this.v1 = this.v1 >> 1;
try { if (Inst450 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<13950,13957,553>",(this.v1)); Inst450++; } } catch(e) {}
try { if (Inst452 <= 1000 && typeof (this.scheduler.release) != "undefined") {_RecordType("<13987,14009,554>",(this.scheduler.release)); Inst452++; } } catch(e) {}try { if (Inst453 <= 1000 && typeof (this.scheduler) != "undefined") {_RecordType("<13987,14001,554>",(this.scheduler)); Inst453++; } } catch(e) {}try { if (Inst454 <= 1000 && typeof (ID_DEVICE_A) != "undefined") {_RecordType("<14010,14021,554>",(ID_DEVICE_A)); Inst454++; } } catch(e) {}
      return this.scheduler.release(ID_DEVICE_A);
    } else {
try { if (Inst456 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<14053,14060,556>",(this.v1)); Inst456++; } } catch(e) {}
      this.v1 = this.v1 >> 1 ^ 0xD008;
try { if (Inst455 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<14043,14050,556>",(this.v1)); Inst455++; } } catch(e) {}
try { if (Inst457 <= 1000 && typeof (this.scheduler.release) != "undefined") {_RecordType("<14089,14111,557>",(this.scheduler.release)); Inst457++; } } catch(e) {}try { if (Inst458 <= 1000 && typeof (this.scheduler) != "undefined") {_RecordType("<14089,14103,557>",(this.scheduler)); Inst458++; } } catch(e) {}try { if (Inst459 <= 1000 && typeof (ID_DEVICE_B) != "undefined") {_RecordType("<14112,14123,557>",(ID_DEVICE_B)); Inst459++; } } catch(e) {}
      return this.scheduler.release(ID_DEVICE_B);
    }
  } catch (e) {
    ;
  }
};
try { if (Inst439 <= 1000 && typeof (IdleTask.prototype.run) != "undefined") {_RecordType("<13707,13729,538>",(IdleTask.prototype.run)); Inst439++; } } catch(e) {}try { if (Inst440 <= 1000 && typeof (IdleTask.prototype) != "undefined") {_RecordType("<13707,13725,538>",(IdleTask.prototype)); Inst440++; } } catch(e) {}try { if (Inst441 <= 1000 && typeof (IdleTask) != "undefined") {_RecordType("<13707,13715,538>",(IdleTask)); Inst441++; } } catch(e) {}

IdleTask.prototype.toString = function () {
try { if (Inst465 <= 1000 && typeof (e) != "undefined") {_RecordType("<14271,14272,568>",(e)); Inst465++; } } catch(e) {}
  try {
try { if (Inst464 <= 1000 && typeof (randomException) != "undefined") {_RecordType("<14218,14233,566>",(randomException)); Inst464++; } } catch(e) {}
    randomException();
    return "IdleTask";
  } catch (e) {
    return "IdleTask";
  }
};
try { if (Inst461 <= 1000 && typeof (IdleTask.prototype.toString) != "undefined") {_RecordType("<14162,14189,564>",(IdleTask.prototype.toString)); Inst461++; } } catch(e) {}try { if (Inst462 <= 1000 && typeof (IdleTask.prototype) != "undefined") {_RecordType("<14162,14180,564>",(IdleTask.prototype)); Inst462++; } } catch(e) {}try { if (Inst463 <= 1000 && typeof (IdleTask) != "undefined") {_RecordType("<14162,14170,564>",(IdleTask)); Inst463++; } } catch(e) {}
/**
 * A task that suspends itself after each time it has been run to simulate
 * waiting for data from an external device.
 * @param {Scheduler} scheduler the scheduler that manages this task
 * @constructor
 */


try { if (Inst466 <= 1000 && typeof (DeviceTask) != "undefined") {_RecordType("<14530,14540,580>",(DeviceTask)); Inst466++; } } catch(e) {}
function DeviceTask(scheduler) {
try { if (Inst467 <= 1000 && typeof (scheduler) != "undefined") {_RecordType("<14541,14550,580>",(scheduler)); Inst467++; } } catch(e) {}
try { if (Inst472 <= 1000 && typeof (e) != "undefined") {_RecordType("<14648,14649,585>",(e)); Inst472++; } } catch(e) {}
  try {
try { if (Inst469 <= 1000 && typeof (scheduler) != "undefined") {_RecordType("<14583,14592,582>",(scheduler)); Inst469++; } } catch(e) {}
    this.scheduler = scheduler;
try { if (Inst468 <= 1000 && typeof (this.scheduler) != "undefined") {_RecordType("<14566,14580,582>",(this.scheduler)); Inst468++; } } catch(e) {}
    this.v1 = null;
try { if (Inst470 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<14598,14605,583>",(this.v1)); Inst470++; } } catch(e) {}
try { if (Inst471 <= 1000 && typeof (randomException) != "undefined") {_RecordType("<14618,14633,584>",(randomException)); Inst471++; } } catch(e) {}
    randomException();
  } catch (e) {
    ;
  }
}

DeviceTask.prototype.run = function (packet) {
try { if (Inst476 <= 1000 && typeof (packet) != "undefined") {_RecordType("<14703,14709,590>",(packet)); Inst476++; } } catch(e) {}
try { if (Inst477 <= 1000 && typeof (packet) != "undefined") {_RecordType("<14719,14725,591>",(packet)); Inst477++; } } catch(e) {}
  if (packet == null) {
try { if (Inst485 <= 1000 && typeof (e) != "undefined") {_RecordType("<14916,14917,600>",(e)); Inst485++; } } catch(e) {}
    try {
try { if (Inst478 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<14757,14764,593>",(this.v1)); Inst478++; } } catch(e) {}
      if (this.v1 == null) {
try { if (Inst479 <= 1000 && typeof (this.scheduler.suspendCurrent) != "undefined") {_RecordType("<14791,14820,594>",(this.scheduler.suspendCurrent)); Inst479++; } } catch(e) {}try { if (Inst480 <= 1000 && typeof (this.scheduler) != "undefined") {_RecordType("<14791,14805,594>",(this.scheduler)); Inst480++; } } catch(e) {}
        return this.scheduler.suspendCurrent();
      }

try { if (Inst482 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<14847,14854,597>",(this.v1)); Inst482++; } } catch(e) {}
      var v = this.v1;
try { if (Inst481 <= 1000 && typeof (v) != "undefined") {_RecordType("<14843,14844,597>",(v)); Inst481++; } } catch(e) {}
      this.v1 = null;
try { if (Inst483 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<14862,14869,598>",(this.v1)); Inst483++; } } catch(e) {}
try { if (Inst484 <= 1000 && typeof (randomException) != "undefined") {_RecordType("<14884,14899,599>",(randomException)); Inst484++; } } catch(e) {}
      randomException();
    } catch (e) {
      ;
    }

try { if (Inst486 <= 1000 && typeof (this.scheduler.queue) != "undefined") {_RecordType("<14947,14967,604>",(this.scheduler.queue)); Inst486++; } } catch(e) {}try { if (Inst487 <= 1000 && typeof (this.scheduler) != "undefined") {_RecordType("<14947,14961,604>",(this.scheduler)); Inst487++; } } catch(e) {}try { if (Inst488 <= 1000 && typeof (v) != "undefined") {_RecordType("<14968,14969,604>",(v)); Inst488++; } } catch(e) {}
    return this.scheduler.queue(v);
  } else {
try { if (Inst492 <= 1000 && typeof (e) != "undefined") {_RecordType("<15055,15056,609>",(e)); Inst492++; } } catch(e) {}
    try {
try { if (Inst490 <= 1000 && typeof (packet) != "undefined") {_RecordType("<15009,15015,607>",(packet)); Inst490++; } } catch(e) {}
      this.v1 = packet;
try { if (Inst489 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<14999,15006,607>",(this.v1)); Inst489++; } } catch(e) {}
try { if (Inst491 <= 1000 && typeof (randomException) != "undefined") {_RecordType("<15023,15038,608>",(randomException)); Inst491++; } } catch(e) {}
      randomException();
    } catch (e) {
      ;
    }

try { if (Inst493 <= 1000 && typeof (this.scheduler.holdCurrent) != "undefined") {_RecordType("<15086,15112,613>",(this.scheduler.holdCurrent)); Inst493++; } } catch(e) {}try { if (Inst494 <= 1000 && typeof (this.scheduler) != "undefined") {_RecordType("<15086,15100,613>",(this.scheduler)); Inst494++; } } catch(e) {}
    return this.scheduler.holdCurrent();
  }
};
try { if (Inst473 <= 1000 && typeof (DeviceTask.prototype.run) != "undefined") {_RecordType("<14666,14690,590>",(DeviceTask.prototype.run)); Inst473++; } } catch(e) {}try { if (Inst474 <= 1000 && typeof (DeviceTask.prototype) != "undefined") {_RecordType("<14666,14686,590>",(DeviceTask.prototype)); Inst474++; } } catch(e) {}try { if (Inst475 <= 1000 && typeof (DeviceTask) != "undefined") {_RecordType("<14666,14676,590>",(DeviceTask)); Inst475++; } } catch(e) {}

DeviceTask.prototype.toString = function () {
try { if (Inst499 <= 1000 && typeof (e) != "undefined") {_RecordType("<15237,15238,621>",(e)); Inst499++; } } catch(e) {}
  try {
try { if (Inst498 <= 1000 && typeof (randomException) != "undefined") {_RecordType("<15182,15197,619>",(randomException)); Inst498++; } } catch(e) {}
    randomException();
    return "DeviceTask";
  } catch (e) {
    ;
  }
};
try { if (Inst495 <= 1000 && typeof (DeviceTask.prototype.toString) != "undefined") {_RecordType("<15124,15153,617>",(DeviceTask.prototype.toString)); Inst495++; } } catch(e) {}try { if (Inst496 <= 1000 && typeof (DeviceTask.prototype) != "undefined") {_RecordType("<15124,15144,617>",(DeviceTask.prototype)); Inst496++; } } catch(e) {}try { if (Inst497 <= 1000 && typeof (DeviceTask) != "undefined") {_RecordType("<15124,15134,617>",(DeviceTask)); Inst497++; } } catch(e) {}
/**
 * A task that manipulates work packets.
 * @param {Scheduler} scheduler the scheduler that manages this task
 * @param {int} v1 a seed used to specify how work packets are manipulated
 * @param {int} v2 another seed used to specify how work packets are manipulated
 * @constructor
 */


try { if (Inst500 <= 1000 && typeof (WorkerTask) != "undefined") {_RecordType("<15556,15566,634>",(WorkerTask)); Inst500++; } } catch(e) {}
function WorkerTask(scheduler, v1, v2) {
try { if (Inst501 <= 1000 && typeof (scheduler) != "undefined") {_RecordType("<15567,15576,634>",(scheduler)); Inst501++; } } catch(e) {}try { if (Inst502 <= 1000 && typeof (v1) != "undefined") {_RecordType("<15578,15580,634>",(v1)); Inst502++; } } catch(e) {}try { if (Inst503 <= 1000 && typeof (v2) != "undefined") {_RecordType("<15582,15584,634>",(v2)); Inst503++; } } catch(e) {}
try { if (Inst511 <= 1000 && typeof (e) != "undefined") {_RecordType("<15698,15699,640>",(e)); Inst511++; } } catch(e) {}
  try {
try { if (Inst505 <= 1000 && typeof (scheduler) != "undefined") {_RecordType("<15617,15626,636>",(scheduler)); Inst505++; } } catch(e) {}
    this.scheduler = scheduler;
try { if (Inst504 <= 1000 && typeof (this.scheduler) != "undefined") {_RecordType("<15600,15614,636>",(this.scheduler)); Inst504++; } } catch(e) {}
try { if (Inst507 <= 1000 && typeof (v1) != "undefined") {_RecordType("<15642,15644,637>",(v1)); Inst507++; } } catch(e) {}
    this.v1 = v1;
try { if (Inst506 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<15632,15639,637>",(this.v1)); Inst506++; } } catch(e) {}
try { if (Inst509 <= 1000 && typeof (v2) != "undefined") {_RecordType("<15660,15662,638>",(v2)); Inst509++; } } catch(e) {}
    this.v2 = v2;
try { if (Inst508 <= 1000 && typeof (this.v2) != "undefined") {_RecordType("<15650,15657,638>",(this.v2)); Inst508++; } } catch(e) {}
try { if (Inst510 <= 1000 && typeof (randomException) != "undefined") {_RecordType("<15668,15683,639>",(randomException)); Inst510++; } } catch(e) {}
    randomException();
  } catch (e) {
    ;
  }
}

WorkerTask.prototype.run = function (packet) {
try { if (Inst515 <= 1000 && typeof (packet) != "undefined") {_RecordType("<15753,15759,645>",(packet)); Inst515++; } } catch(e) {}
try { if (Inst516 <= 1000 && typeof (packet) != "undefined") {_RecordType("<15769,15775,646>",(packet)); Inst516++; } } catch(e) {}
  if (packet == null) {
try { if (Inst517 <= 1000 && typeof (this.scheduler.suspendCurrent) != "undefined") {_RecordType("<15798,15827,647>",(this.scheduler.suspendCurrent)); Inst517++; } } catch(e) {}try { if (Inst518 <= 1000 && typeof (this.scheduler) != "undefined") {_RecordType("<15798,15812,647>",(this.scheduler)); Inst518++; } } catch(e) {}
    return this.scheduler.suspendCurrent();
  } else {
try { if (Inst531 <= 1000 && typeof (e) != "undefined") {_RecordType("<16063,16064,659>",(e)); Inst531++; } } catch(e) {}
    try {
try { if (Inst519 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<15862,15869,650>",(this.v1)); Inst519++; } } catch(e) {}try { if (Inst520 <= 1000 && typeof (ID_HANDLER_A) != "undefined") {_RecordType("<15873,15885,650>",(ID_HANDLER_A)); Inst520++; } } catch(e) {}
      if (this.v1 == ID_HANDLER_A) {
try { if (Inst522 <= 1000 && typeof (ID_HANDLER_B) != "undefined") {_RecordType("<15907,15919,651>",(ID_HANDLER_B)); Inst522++; } } catch(e) {}
        this.v1 = ID_HANDLER_B;
try { if (Inst521 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<15897,15904,651>",(this.v1)); Inst521++; } } catch(e) {}
      } else {
try { if (Inst524 <= 1000 && typeof (ID_HANDLER_A) != "undefined") {_RecordType("<15954,15966,653>",(ID_HANDLER_A)); Inst524++; } } catch(e) {}
        this.v1 = ID_HANDLER_A;
try { if (Inst523 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<15944,15951,653>",(this.v1)); Inst523++; } } catch(e) {}
      }

try { if (Inst527 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<15995,16002,656>",(this.v1)); Inst527++; } } catch(e) {}
      packet.id = this.v1;
try { if (Inst525 <= 1000 && typeof (packet.id) != "undefined") {_RecordType("<15983,15992,656>",(packet.id)); Inst525++; } } catch(e) {}try { if (Inst526 <= 1000 && typeof (packet) != "undefined") {_RecordType("<15983,15989,656>",(packet)); Inst526++; } } catch(e) {}
      packet.a1 = 0;
try { if (Inst528 <= 1000 && typeof (packet.a1) != "undefined") {_RecordType("<16010,16019,657>",(packet.a1)); Inst528++; } } catch(e) {}try { if (Inst529 <= 1000 && typeof (packet) != "undefined") {_RecordType("<16010,16016,657>",(packet)); Inst529++; } } catch(e) {}
try { if (Inst530 <= 1000 && typeof (randomException) != "undefined") {_RecordType("<16031,16046,658>",(randomException)); Inst530++; } } catch(e) {}
      randomException();
    } catch (e) {
      ;
    }

    for (var i = 0; i < DATA_SIZE; i++) {
try { if (Inst532 <= 1000 && typeof (i) != "undefined") {_RecordType("<16096,16097,663>",(i)); Inst532++; } } catch(e) {}try { if (Inst533 <= 1000 && typeof (i) != "undefined") {_RecordType("<16103,16104,663>",(i)); Inst533++; } } catch(e) {}try { if (Inst534 <= 1000 && typeof (DATA_SIZE) != "undefined") {_RecordType("<16107,16116,663>",(DATA_SIZE)); Inst534++; } } catch(e) {}try { if (Inst535 <= 1000 && typeof (i) != "undefined") {_RecordType("<16118,16119,663>",(i)); Inst535++; } } catch(e) {}
try { if (Inst544 <= 1000 && typeof (e) != "undefined") {_RecordType("<16293,16294,673>",(e)); Inst544++; } } catch(e) {}
      try {
try { if (Inst536 <= 1000 && typeof (this.v2) != "undefined") {_RecordType("<16145,16152,665>",(this.v2)); Inst536++; } } catch(e) {}
        this.v2++;

try { if (Inst537 <= 1000 && typeof (this.v2) != "undefined") {_RecordType("<16169,16176,667>",(this.v2)); Inst537++; } } catch(e) {}
        if (this.v2 > 26) {
          this.v2 = 1;
try { if (Inst538 <= 1000 && typeof (this.v2) != "undefined") {_RecordType("<16195,16202,668>",(this.v2)); Inst538++; } } catch(e) {}
        }

try { if (Inst542 <= 1000 && typeof (this.v2) != "undefined") {_RecordType("<16242,16249,671>",(this.v2)); Inst542++; } } catch(e) {}
        packet.a2[i] = this.v2;
try { if (Inst539 <= 1000 && typeof (packet.a2[i]) != "undefined") {_RecordType("<16227,16239,671>",(packet.a2[i])); Inst539++; } } catch(e) {}try { if (Inst540 <= 1000 && typeof (packet.a2) != "undefined") {_RecordType("<16227,16236,671>",(packet.a2)); Inst540++; } } catch(e) {}try { if (Inst541 <= 1000 && typeof (packet) != "undefined") {_RecordType("<16227,16233,671>",(packet)); Inst541++; } } catch(e) {}
try { if (Inst543 <= 1000 && typeof (randomException) != "undefined") {_RecordType("<16259,16274,672>",(randomException)); Inst543++; } } catch(e) {}
        randomException();
      } catch (e) {
        ;
      }
    }

try { if (Inst545 <= 1000 && typeof (this.scheduler.queue) != "undefined") {_RecordType("<16334,16354,678>",(this.scheduler.queue)); Inst545++; } } catch(e) {}try { if (Inst546 <= 1000 && typeof (this.scheduler) != "undefined") {_RecordType("<16334,16348,678>",(this.scheduler)); Inst546++; } } catch(e) {}try { if (Inst547 <= 1000 && typeof (packet) != "undefined") {_RecordType("<16355,16361,678>",(packet)); Inst547++; } } catch(e) {}
    return this.scheduler.queue(packet);
  }
};
try { if (Inst512 <= 1000 && typeof (WorkerTask.prototype.run) != "undefined") {_RecordType("<15716,15740,645>",(WorkerTask.prototype.run)); Inst512++; } } catch(e) {}try { if (Inst513 <= 1000 && typeof (WorkerTask.prototype) != "undefined") {_RecordType("<15716,15736,645>",(WorkerTask.prototype)); Inst513++; } } catch(e) {}try { if (Inst514 <= 1000 && typeof (WorkerTask) != "undefined") {_RecordType("<15716,15726,645>",(WorkerTask)); Inst514++; } } catch(e) {}

WorkerTask.prototype.toString = function () {
try { if (Inst551 <= 1000 && typeof (e) != "undefined") {_RecordType("<16462,16463,685>",(e)); Inst551++; } } catch(e) {}
  try {
    return "WorkerTask";
  } catch (e) {
    ;
  }
};
try { if (Inst548 <= 1000 && typeof (WorkerTask.prototype.toString) != "undefined") {_RecordType("<16372,16401,682>",(WorkerTask.prototype.toString)); Inst548++; } } catch(e) {}try { if (Inst549 <= 1000 && typeof (WorkerTask.prototype) != "undefined") {_RecordType("<16372,16392,682>",(WorkerTask.prototype)); Inst549++; } } catch(e) {}try { if (Inst550 <= 1000 && typeof (WorkerTask) != "undefined") {_RecordType("<16372,16382,682>",(WorkerTask)); Inst550++; } } catch(e) {}
/**
 * A task that manipulates work packets and then suspends itself.
 * @param {Scheduler} scheduler the scheduler that manages this task
 * @constructor
 */


try { if (Inst552 <= 1000 && typeof (HandlerTask) != "undefined") {_RecordType("<16650,16661,696>",(HandlerTask)); Inst552++; } } catch(e) {}
function HandlerTask(scheduler) {
try { if (Inst553 <= 1000 && typeof (scheduler) != "undefined") {_RecordType("<16662,16671,696>",(scheduler)); Inst553++; } } catch(e) {}
try { if (Inst559 <= 1000 && typeof (e) != "undefined") {_RecordType("<16789,16790,702>",(e)); Inst559++; } } catch(e) {}
  try {
try { if (Inst555 <= 1000 && typeof (scheduler) != "undefined") {_RecordType("<16704,16713,698>",(scheduler)); Inst555++; } } catch(e) {}
    this.scheduler = scheduler;
try { if (Inst554 <= 1000 && typeof (this.scheduler) != "undefined") {_RecordType("<16687,16701,698>",(this.scheduler)); Inst554++; } } catch(e) {}
    this.v1 = null;
try { if (Inst556 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<16719,16726,699>",(this.v1)); Inst556++; } } catch(e) {}
    this.v2 = null;
try { if (Inst557 <= 1000 && typeof (this.v2) != "undefined") {_RecordType("<16739,16746,700>",(this.v2)); Inst557++; } } catch(e) {}
try { if (Inst558 <= 1000 && typeof (randomException) != "undefined") {_RecordType("<16759,16774,701>",(randomException)); Inst558++; } } catch(e) {}
    randomException();
  } catch (e) {
    ;
  }
}

HandlerTask.prototype.run = function (packet) {
try { if (Inst563 <= 1000 && typeof (packet) != "undefined") {_RecordType("<16845,16851,707>",(packet)); Inst563++; } } catch(e) {}
try { if (Inst577 <= 1000 && typeof (e) != "undefined") {_RecordType("<17073,17074,718>",(e)); Inst577++; } } catch(e) {}
  try {
try { if (Inst564 <= 1000 && typeof (packet) != "undefined") {_RecordType("<16871,16877,709>",(packet)); Inst564++; } } catch(e) {}
    if (packet != null) {
try { if (Inst565 <= 1000 && typeof (packet.kind) != "undefined") {_RecordType("<16899,16910,710>",(packet.kind)); Inst565++; } } catch(e) {}try { if (Inst566 <= 1000 && typeof (packet) != "undefined") {_RecordType("<16899,16905,710>",(packet)); Inst566++; } } catch(e) {}try { if (Inst567 <= 1000 && typeof (KIND_WORK) != "undefined") {_RecordType("<16914,16923,710>",(KIND_WORK)); Inst567++; } } catch(e) {}
      if (packet.kind == KIND_WORK) {
try { if (Inst569 <= 1000 && typeof (packet.addTo) != "undefined") {_RecordType("<16945,16957,711>",(packet.addTo)); Inst569++; } } catch(e) {}try { if (Inst570 <= 1000 && typeof (packet) != "undefined") {_RecordType("<16945,16951,711>",(packet)); Inst570++; } } catch(e) {}try { if (Inst571 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<16958,16965,711>",(this.v1)); Inst571++; } } catch(e) {}
        this.v1 = packet.addTo(this.v1);
try { if (Inst568 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<16935,16942,711>",(this.v1)); Inst568++; } } catch(e) {}
      } else {
try { if (Inst573 <= 1000 && typeof (packet.addTo) != "undefined") {_RecordType("<17001,17013,713>",(packet.addTo)); Inst573++; } } catch(e) {}try { if (Inst574 <= 1000 && typeof (packet) != "undefined") {_RecordType("<17001,17007,713>",(packet)); Inst574++; } } catch(e) {}try { if (Inst575 <= 1000 && typeof (this.v2) != "undefined") {_RecordType("<17014,17021,713>",(this.v2)); Inst575++; } } catch(e) {}
        this.v2 = packet.addTo(this.v2);
try { if (Inst572 <= 1000 && typeof (this.v2) != "undefined") {_RecordType("<16991,16998,713>",(this.v2)); Inst572++; } } catch(e) {}
      }
    }

try { if (Inst576 <= 1000 && typeof (randomException) != "undefined") {_RecordType("<17043,17058,717>",(randomException)); Inst576++; } } catch(e) {}
    randomException();
  } catch (e) {
    ;
  }

try { if (Inst611 <= 1000 && typeof (e) != "undefined") {_RecordType("<17566,17567,743>",(e)); Inst611++; } } catch(e) {}
  try {
try { if (Inst578 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<17105,17112,723>",(this.v1)); Inst578++; } } catch(e) {}
    if (this.v1 != null) {
try { if (Inst580 <= 1000 && typeof (this.v1.a1) != "undefined") {_RecordType("<17142,17152,724>",(this.v1.a1)); Inst580++; } } catch(e) {}try { if (Inst581 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<17142,17149,724>",(this.v1)); Inst581++; } } catch(e) {}
      var count = this.v1.a1;
try { if (Inst579 <= 1000 && typeof (count) != "undefined") {_RecordType("<17134,17139,724>",(count)); Inst579++; } } catch(e) {}
      var v;
try { if (Inst582 <= 1000 && typeof (v) != "undefined") {_RecordType("<17164,17165,725>",(v)); Inst582++; } } catch(e) {}

try { if (Inst583 <= 1000 && typeof (count) != "undefined") {_RecordType("<17178,17183,727>",(count)); Inst583++; } } catch(e) {}try { if (Inst584 <= 1000 && typeof (DATA_SIZE) != "undefined") {_RecordType("<17186,17195,727>",(DATA_SIZE)); Inst584++; } } catch(e) {}
      if (count < DATA_SIZE) {
try { if (Inst585 <= 1000 && typeof (this.v2) != "undefined") {_RecordType("<17211,17218,728>",(this.v2)); Inst585++; } } catch(e) {}
        if (this.v2 != null) {
try { if (Inst587 <= 1000 && typeof (this.v2) != "undefined") {_RecordType("<17244,17251,729>",(this.v2)); Inst587++; } } catch(e) {}
          v = this.v2;
try { if (Inst586 <= 1000 && typeof (v) != "undefined") {_RecordType("<17240,17241,729>",(v)); Inst586++; } } catch(e) {}
try { if (Inst589 <= 1000 && typeof (this.v2.link) != "undefined") {_RecordType("<17273,17285,730>",(this.v2.link)); Inst589++; } } catch(e) {}try { if (Inst590 <= 1000 && typeof (this.v2) != "undefined") {_RecordType("<17273,17280,730>",(this.v2)); Inst590++; } } catch(e) {}
          this.v2 = this.v2.link;
try { if (Inst588 <= 1000 && typeof (this.v2) != "undefined") {_RecordType("<17263,17270,730>",(this.v2)); Inst588++; } } catch(e) {}
try { if (Inst593 <= 1000 && typeof (this.v1.a2[count]) != "undefined") {_RecordType("<17304,17321,731>",(this.v1.a2[count])); Inst593++; } } catch(e) {}try { if (Inst594 <= 1000 && typeof (this.v1.a2) != "undefined") {_RecordType("<17304,17314,731>",(this.v1.a2)); Inst594++; } } catch(e) {}try { if (Inst595 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<17304,17311,731>",(this.v1)); Inst595++; } } catch(e) {}
          v.a1 = this.v1.a2[count];
try { if (Inst591 <= 1000 && typeof (v.a1) != "undefined") {_RecordType("<17297,17301,731>",(v.a1)); Inst591++; } } catch(e) {}try { if (Inst592 <= 1000 && typeof (v) != "undefined") {_RecordType("<17297,17298,731>",(v)); Inst592++; } } catch(e) {}
try { if (Inst598 <= 1000 && typeof (count) != "undefined") {_RecordType("<17346,17351,732>",(count)); Inst598++; } } catch(e) {}
          this.v1.a1 = count + 1;
try { if (Inst596 <= 1000 && typeof (this.v1.a1) != "undefined") {_RecordType("<17333,17343,732>",(this.v1.a1)); Inst596++; } } catch(e) {}try { if (Inst597 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<17333,17340,732>",(this.v1)); Inst597++; } } catch(e) {}
try { if (Inst599 <= 1000 && typeof (this.scheduler.queue) != "undefined") {_RecordType("<17374,17394,733>",(this.scheduler.queue)); Inst599++; } } catch(e) {}try { if (Inst600 <= 1000 && typeof (this.scheduler) != "undefined") {_RecordType("<17374,17388,733>",(this.scheduler)); Inst600++; } } catch(e) {}try { if (Inst601 <= 1000 && typeof (v) != "undefined") {_RecordType("<17395,17396,733>",(v)); Inst601++; } } catch(e) {}
          return this.scheduler.queue(v);
        }
      } else {
try { if (Inst603 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<17436,17443,736>",(this.v1)); Inst603++; } } catch(e) {}
        v = this.v1;
try { if (Inst602 <= 1000 && typeof (v) != "undefined") {_RecordType("<17432,17433,736>",(v)); Inst602++; } } catch(e) {}
try { if (Inst605 <= 1000 && typeof (this.v1.link) != "undefined") {_RecordType("<17463,17475,737>",(this.v1.link)); Inst605++; } } catch(e) {}try { if (Inst606 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<17463,17470,737>",(this.v1)); Inst606++; } } catch(e) {}
        this.v1 = this.v1.link;
try { if (Inst604 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<17453,17460,737>",(this.v1)); Inst604++; } } catch(e) {}
try { if (Inst607 <= 1000 && typeof (this.scheduler.queue) != "undefined") {_RecordType("<17492,17512,738>",(this.scheduler.queue)); Inst607++; } } catch(e) {}try { if (Inst608 <= 1000 && typeof (this.scheduler) != "undefined") {_RecordType("<17492,17506,738>",(this.scheduler)); Inst608++; } } catch(e) {}try { if (Inst609 <= 1000 && typeof (v) != "undefined") {_RecordType("<17513,17514,738>",(v)); Inst609++; } } catch(e) {}
        return this.scheduler.queue(v);
      }
    }

try { if (Inst610 <= 1000 && typeof (randomException) != "undefined") {_RecordType("<17536,17551,742>",(randomException)); Inst610++; } } catch(e) {}
    randomException();
  } catch (e) {
    ;
  }

try { if (Inst612 <= 1000 && typeof (this.scheduler.suspendCurrent) != "undefined") {_RecordType("<17591,17620,747>",(this.scheduler.suspendCurrent)); Inst612++; } } catch(e) {}try { if (Inst613 <= 1000 && typeof (this.scheduler) != "undefined") {_RecordType("<17591,17605,747>",(this.scheduler)); Inst613++; } } catch(e) {}
  return this.scheduler.suspendCurrent();
};
try { if (Inst560 <= 1000 && typeof (HandlerTask.prototype.run) != "undefined") {_RecordType("<16807,16832,707>",(HandlerTask.prototype.run)); Inst560++; } } catch(e) {}try { if (Inst561 <= 1000 && typeof (HandlerTask.prototype) != "undefined") {_RecordType("<16807,16828,707>",(HandlerTask.prototype)); Inst561++; } } catch(e) {}try { if (Inst562 <= 1000 && typeof (HandlerTask) != "undefined") {_RecordType("<16807,16818,707>",(HandlerTask)); Inst562++; } } catch(e) {}

HandlerTask.prototype.toString = function () {
try { if (Inst617 <= 1000 && typeof (e) != "undefined") {_RecordType("<17720,17721,753>",(e)); Inst617++; } } catch(e) {}
  try {
    return "HandlerTask";
  } catch (e) {
    ;
  }
};
try { if (Inst614 <= 1000 && typeof (HandlerTask.prototype.toString) != "undefined") {_RecordType("<17628,17658,750>",(HandlerTask.prototype.toString)); Inst614++; } } catch(e) {}try { if (Inst615 <= 1000 && typeof (HandlerTask.prototype) != "undefined") {_RecordType("<17628,17649,750>",(HandlerTask.prototype)); Inst615++; } } catch(e) {}try { if (Inst616 <= 1000 && typeof (HandlerTask) != "undefined") {_RecordType("<17628,17639,750>",(HandlerTask)); Inst616++; } } catch(e) {}
/* --- *
 * P a c k e t
 * --- */


var DATA_SIZE = 4;
try { if (Inst618 <= 1000 && typeof (DATA_SIZE) != "undefined") {_RecordType("<17778,17787,762>",(DATA_SIZE)); Inst618++; } } catch(e) {}
/**
 * A simple package of data that is manipulated by the tasks.  The exact layout
 * of the payload data carried by a packet is not importaint, and neither is the
 * nature of the work performed on packets by the tasks.
 *
 * Besides carrying data, packets form linked lists and are hence used both as
 * data and worklists.
 * @param {Packet} link the tail of the linked list of packets
 * @param {int} id an ID for this packet
 * @param {int} kind the type of this packet
 * @constructor
 */

try { if (Inst619 <= 1000 && typeof (Packet) != "undefined") {_RecordType("<18299,18305,776>",(Packet)); Inst619++; } } catch(e) {}
function Packet(link, id, kind) {
try { if (Inst620 <= 1000 && typeof (link) != "undefined") {_RecordType("<18306,18310,776>",(link)); Inst620++; } } catch(e) {}try { if (Inst621 <= 1000 && typeof (id) != "undefined") {_RecordType("<18312,18314,776>",(id)); Inst621++; } } catch(e) {}try { if (Inst622 <= 1000 && typeof (kind) != "undefined") {_RecordType("<18316,18320,776>",(kind)); Inst622++; } } catch(e) {}
try { if (Inst634 <= 1000 && typeof (e) != "undefined") {_RecordType("<18481,18482,784>",(e)); Inst634++; } } catch(e) {}
  try {
try { if (Inst624 <= 1000 && typeof (link) != "undefined") {_RecordType("<18348,18352,778>",(link)); Inst624++; } } catch(e) {}
    this.link = link;
try { if (Inst623 <= 1000 && typeof (this.link) != "undefined") {_RecordType("<18336,18345,778>",(this.link)); Inst623++; } } catch(e) {}
try { if (Inst626 <= 1000 && typeof (id) != "undefined") {_RecordType("<18368,18370,779>",(id)); Inst626++; } } catch(e) {}
    this.id = id;
try { if (Inst625 <= 1000 && typeof (this.id) != "undefined") {_RecordType("<18358,18365,779>",(this.id)); Inst625++; } } catch(e) {}
try { if (Inst628 <= 1000 && typeof (kind) != "undefined") {_RecordType("<18388,18392,780>",(kind)); Inst628++; } } catch(e) {}
    this.kind = kind;
try { if (Inst627 <= 1000 && typeof (this.kind) != "undefined") {_RecordType("<18376,18385,780>",(this.kind)); Inst627++; } } catch(e) {}
    this.a1 = 0;
try { if (Inst629 <= 1000 && typeof (this.a1) != "undefined") {_RecordType("<18398,18405,781>",(this.a1)); Inst629++; } } catch(e) {}
try { if (Inst631 <= 1000 && typeof (Array) != "undefined") {_RecordType("<18429,18434,782>",(Array)); Inst631++; } } catch(e) {}try { if (Inst632 <= 1000 && typeof (DATA_SIZE) != "undefined") {_RecordType("<18435,18444,782>",(DATA_SIZE)); Inst632++; } } catch(e) {}
    this.a2 = new Array(DATA_SIZE);
try { if (Inst630 <= 1000 && typeof (this.a2) != "undefined") {_RecordType("<18415,18422,782>",(this.a2)); Inst630++; } } catch(e) {}
try { if (Inst633 <= 1000 && typeof (randomException) != "undefined") {_RecordType("<18451,18466,783>",(randomException)); Inst633++; } } catch(e) {}
    randomException();
  } catch (e) {
    ;
  }
}
/**
 * Add this packet to the end of a worklist, and return the worklist.
 * @param {Packet} queue the worklist to add this packet to
 */


Packet.prototype.addTo = function (queue) {
try { if (Inst638 <= 1000 && typeof (queue) != "undefined") {_RecordType("<18673,18678,794>",(queue)); Inst638++; } } catch(e) {}
  this.link = null;
try { if (Inst639 <= 1000 && typeof (this.link) != "undefined") {_RecordType("<18684,18693,795>",(this.link)); Inst639++; } } catch(e) {}

try { if (Inst640 <= 1000 && typeof (queue) != "undefined") {_RecordType("<18709,18714,797>",(queue)); Inst640++; } } catch(e) {}
  if (queue == null) {
    return this;
  }

try { if (Inst643 <= 1000 && typeof (queue) != "undefined") {_RecordType("<18773,18778,802>",(queue)); Inst643++; } } catch(e) {}
  var peek,
      next = queue;
try { if (Inst641 <= 1000 && typeof (peek) != "undefined") {_RecordType("<18754,18758,801>",(peek)); Inst641++; } } catch(e) {}try { if (Inst642 <= 1000 && typeof (next) != "undefined") {_RecordType("<18766,18770,802>",(next)); Inst642++; } } catch(e) {}

try { if (Inst645 <= 1000 && typeof (next.link) != "undefined") {_RecordType("<18798,18807,804>",(next.link)); Inst645++; } } catch(e) {}try { if (Inst646 <= 1000 && typeof (next) != "undefined") {_RecordType("<18798,18802,804>",(next)); Inst646++; } } catch(e) {}
  while ((peek = next.link) != null) {
try { if (Inst650 <= 1000 && typeof (e) != "undefined") {_RecordType("<18887,18888,808>",(e)); Inst650++; } } catch(e) {}
    try {
try { if (Inst648 <= 1000 && typeof (peek) != "undefined") {_RecordType("<18843,18847,806>",(peek)); Inst648++; } } catch(e) {}
      next = peek;
try { if (Inst647 <= 1000 && typeof (next) != "undefined") {_RecordType("<18836,18840,806>",(next)); Inst647++; } } catch(e) {}
try { if (Inst649 <= 1000 && typeof (randomException) != "undefined") {_RecordType("<18855,18870,807>",(randomException)); Inst649++; } } catch(e) {}
      randomException();
    } catch (e) {
      ;
    }
  }
try { if (Inst644 <= 1000 && typeof (peek) != "undefined") {_RecordType("<18791,18795,804>",(peek)); Inst644++; } } catch(e) {}

  next.link = this;
try { if (Inst651 <= 1000 && typeof (next.link) != "undefined") {_RecordType("<18913,18922,813>",(next.link)); Inst651++; } } catch(e) {}try { if (Inst652 <= 1000 && typeof (next) != "undefined") {_RecordType("<18913,18917,813>",(next)); Inst652++; } } catch(e) {}
try { if (Inst653 <= 1000 && typeof (queue) != "undefined") {_RecordType("<18940,18945,814>",(queue)); Inst653++; } } catch(e) {}
  return queue;
};
try { if (Inst635 <= 1000 && typeof (Packet.prototype.addTo) != "undefined") {_RecordType("<18638,18660,794>",(Packet.prototype.addTo)); Inst635++; } } catch(e) {}try { if (Inst636 <= 1000 && typeof (Packet.prototype) != "undefined") {_RecordType("<18638,18654,794>",(Packet.prototype)); Inst636++; } } catch(e) {}try { if (Inst637 <= 1000 && typeof (Packet) != "undefined") {_RecordType("<18638,18644,794>",(Packet)); Inst637++; } } catch(e) {}

Packet.prototype.toString = function () {
try { if (Inst657 <= 1000 && typeof (e) != "undefined") {_RecordType("<19033,19034,820>",(e)); Inst657++; } } catch(e) {}
  try {
    return "Packet";
  } catch (e) {
    ;
  }
};
try { if (Inst654 <= 1000 && typeof (Packet.prototype.toString) != "undefined") {_RecordType("<18951,18976,817>",(Packet.prototype.toString)); Inst654++; } } catch(e) {}try { if (Inst655 <= 1000 && typeof (Packet.prototype) != "undefined") {_RecordType("<18951,18967,817>",(Packet.prototype)); Inst655++; } } catch(e) {}try { if (Inst656 <= 1000 && typeof (Packet) != "undefined") {_RecordType("<18951,18957,817>",(Packet)); Inst656++; } } catch(e) {}

for (let i = 0; i < 350; ++i) {
try { if (Inst658 <= 1000 && typeof (i) != "undefined") {_RecordType("<19061,19062,825>",(i)); Inst658++; } } catch(e) {}try { if (Inst659 <= 1000 && typeof (i) != "undefined") {_RecordType("<19068,19069,825>",(i)); Inst659++; } } catch(e) {}try { if (Inst660 <= 1000 && typeof (i) != "undefined") {_RecordType("<19079,19080,825>",(i)); Inst660++; } } catch(e) {}
try { if (Inst661 <= 1000 && typeof (runRichards) != "undefined") {_RecordType("<19086,19097,826>",(runRichards)); Inst661++; } } catch(e) {}
  runRichards();
}

