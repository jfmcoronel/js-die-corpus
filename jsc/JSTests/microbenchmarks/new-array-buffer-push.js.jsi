var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//@ runNoFTL
try { if (Inst0 <= 1000 && typeof (foo) != "undefined") {_RecordType("<22,25,2>",(foo)); Inst0++; } } catch(e) {}
function foo() {
  return [[1, 2, 3], [5, 6, 6]];
}

try { if (Inst1 <= 1000 && typeof (bar) != "undefined") {_RecordType("<75,78,6>",(bar)); Inst1++; } } catch(e) {}
function bar() {
  return ["foo", "bar"];
}

try { if (Inst2 <= 1000 && typeof (baz) != "undefined") {_RecordType("<120,123,10>",(baz)); Inst2++; } } catch(e) {}
function baz() {
try { if (Inst3 <= 1000 && typeof (foo) != "undefined") {_RecordType("<138,141,11>",(foo)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (bar) != "undefined") {_RecordType("<145,148,11>",(bar)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (foo) != "undefined") {_RecordType("<152,155,11>",(foo)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (bar) != "undefined") {_RecordType("<159,162,11>",(bar)); Inst6++; } } catch(e) {}
  return [foo(), bar(), foo(), bar()];
}

try { if (Inst7 <= 1000 && typeof (thingy) != "undefined") {_RecordType("<179,185,14>",(thingy)); Inst7++; } } catch(e) {}
function thingy() {
  var result = [];
try { if (Inst8 <= 1000 && typeof (result) != "undefined") {_RecordType("<196,202,15>",(result)); Inst8++; } } catch(e) {}

  for (var i = 0; i < 50000; ++i) {
try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<221,222,17>",(i)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<228,229,17>",(i)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<241,242,17>",(i)); Inst11++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (result.push) != "undefined") {_RecordType("<250,261,18>",(result.push)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (result) != "undefined") {_RecordType("<250,256,18>",(result)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (baz) != "undefined") {_RecordType("<262,265,18>",(baz)); Inst14++; } } catch(e) {}
    result.push(baz());
  }

try { if (Inst15 <= 1000 && typeof (result) != "undefined") {_RecordType("<284,290,21>",(result)); Inst15++; } } catch(e) {}
  return result;
}

try { if (Inst17 <= 1000 && typeof (thingy().length) != "undefined") {_RecordType("<306,321,24>",(thingy().length)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (thingy) != "undefined") {_RecordType("<306,312,24>",(thingy)); Inst18++; } } catch(e) {}
var size = thingy().length;
try { if (Inst16 <= 1000 && typeof (size) != "undefined") {_RecordType("<299,303,24>",(size)); Inst16++; } } catch(e) {}

try { if (Inst19 <= 1000 && typeof (size) != "undefined") {_RecordType("<328,332,26>",(size)); Inst19++; } } catch(e) {}
if (size != 50000) {
try { if (Inst20 <= 1000 && typeof (size) != "undefined") {_RecordType("<375,379,27>",(size)); Inst20++; } } catch(e) {}
  throw "Error: bad size: " + size;
}

