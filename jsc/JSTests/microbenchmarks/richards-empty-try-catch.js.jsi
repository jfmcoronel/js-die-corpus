var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
var Inst102 = 0;
var Inst103 = 0;
var Inst104 = 0;
var Inst105 = 0;
var Inst106 = 0;
var Inst107 = 0;
var Inst108 = 0;
var Inst109 = 0;
var Inst110 = 0;
var Inst111 = 0;
var Inst112 = 0;
var Inst113 = 0;
var Inst114 = 0;
var Inst115 = 0;
var Inst116 = 0;
var Inst117 = 0;
var Inst118 = 0;
var Inst119 = 0;
var Inst120 = 0;
var Inst121 = 0;
var Inst122 = 0;
var Inst123 = 0;
var Inst124 = 0;
var Inst125 = 0;
var Inst126 = 0;
var Inst127 = 0;
var Inst128 = 0;
var Inst129 = 0;
var Inst130 = 0;
var Inst131 = 0;
var Inst132 = 0;
var Inst133 = 0;
var Inst134 = 0;
var Inst135 = 0;
var Inst136 = 0;
var Inst137 = 0;
var Inst138 = 0;
var Inst139 = 0;
var Inst140 = 0;
var Inst141 = 0;
var Inst142 = 0;
var Inst143 = 0;
var Inst144 = 0;
var Inst145 = 0;
var Inst146 = 0;
var Inst147 = 0;
var Inst148 = 0;
var Inst149 = 0;
var Inst150 = 0;
var Inst151 = 0;
var Inst152 = 0;
var Inst153 = 0;
var Inst154 = 0;
var Inst155 = 0;
var Inst156 = 0;
var Inst157 = 0;
var Inst158 = 0;
var Inst159 = 0;
var Inst160 = 0;
var Inst161 = 0;
var Inst162 = 0;
var Inst163 = 0;
var Inst164 = 0;
var Inst165 = 0;
var Inst166 = 0;
var Inst167 = 0;
var Inst168 = 0;
var Inst169 = 0;
var Inst170 = 0;
var Inst171 = 0;
var Inst172 = 0;
var Inst173 = 0;
var Inst174 = 0;
var Inst175 = 0;
var Inst176 = 0;
var Inst177 = 0;
var Inst178 = 0;
var Inst179 = 0;
var Inst180 = 0;
var Inst181 = 0;
var Inst182 = 0;
var Inst183 = 0;
var Inst184 = 0;
var Inst185 = 0;
var Inst186 = 0;
var Inst187 = 0;
var Inst188 = 0;
var Inst189 = 0;
var Inst190 = 0;
var Inst191 = 0;
var Inst192 = 0;
var Inst193 = 0;
var Inst194 = 0;
var Inst195 = 0;
var Inst196 = 0;
var Inst197 = 0;
var Inst198 = 0;
var Inst199 = 0;
var Inst200 = 0;
var Inst201 = 0;
var Inst202 = 0;
var Inst203 = 0;
var Inst204 = 0;
var Inst205 = 0;
var Inst206 = 0;
var Inst207 = 0;
var Inst208 = 0;
var Inst209 = 0;
var Inst210 = 0;
var Inst211 = 0;
var Inst212 = 0;
var Inst213 = 0;
var Inst214 = 0;
var Inst215 = 0;
var Inst216 = 0;
var Inst217 = 0;
var Inst218 = 0;
var Inst219 = 0;
var Inst220 = 0;
var Inst221 = 0;
var Inst222 = 0;
var Inst223 = 0;
var Inst224 = 0;
var Inst225 = 0;
var Inst226 = 0;
var Inst227 = 0;
var Inst228 = 0;
var Inst229 = 0;
var Inst230 = 0;
var Inst231 = 0;
var Inst232 = 0;
var Inst233 = 0;
var Inst234 = 0;
var Inst235 = 0;
var Inst236 = 0;
var Inst237 = 0;
var Inst238 = 0;
var Inst239 = 0;
var Inst240 = 0;
var Inst241 = 0;
var Inst242 = 0;
var Inst243 = 0;
var Inst244 = 0;
var Inst245 = 0;
var Inst246 = 0;
var Inst247 = 0;
var Inst248 = 0;
var Inst249 = 0;
var Inst250 = 0;
var Inst251 = 0;
var Inst252 = 0;
var Inst253 = 0;
var Inst254 = 0;
var Inst255 = 0;
var Inst256 = 0;
var Inst257 = 0;
var Inst258 = 0;
var Inst259 = 0;
var Inst260 = 0;
var Inst261 = 0;
var Inst262 = 0;
var Inst263 = 0;
var Inst264 = 0;
var Inst265 = 0;
var Inst266 = 0;
var Inst267 = 0;
var Inst268 = 0;
var Inst269 = 0;
var Inst270 = 0;
var Inst271 = 0;
var Inst272 = 0;
var Inst273 = 0;
var Inst274 = 0;
var Inst275 = 0;
var Inst276 = 0;
var Inst277 = 0;
var Inst278 = 0;
var Inst279 = 0;
var Inst280 = 0;
var Inst281 = 0;
var Inst282 = 0;
var Inst283 = 0;
var Inst284 = 0;
var Inst285 = 0;
var Inst286 = 0;
var Inst287 = 0;
var Inst288 = 0;
var Inst289 = 0;
var Inst290 = 0;
var Inst291 = 0;
var Inst292 = 0;
var Inst293 = 0;
var Inst294 = 0;
var Inst295 = 0;
var Inst296 = 0;
var Inst297 = 0;
var Inst298 = 0;
var Inst299 = 0;
var Inst300 = 0;
var Inst301 = 0;
var Inst302 = 0;
var Inst303 = 0;
var Inst304 = 0;
var Inst305 = 0;
var Inst306 = 0;
var Inst307 = 0;
var Inst308 = 0;
var Inst309 = 0;
var Inst310 = 0;
var Inst311 = 0;
var Inst312 = 0;
var Inst313 = 0;
var Inst314 = 0;
var Inst315 = 0;
var Inst316 = 0;
var Inst317 = 0;
var Inst318 = 0;
var Inst319 = 0;
var Inst320 = 0;
var Inst321 = 0;
var Inst322 = 0;
var Inst323 = 0;
var Inst324 = 0;
var Inst325 = 0;
var Inst326 = 0;
var Inst327 = 0;
var Inst328 = 0;
var Inst329 = 0;
var Inst330 = 0;
var Inst331 = 0;
var Inst332 = 0;
var Inst333 = 0;
var Inst334 = 0;
var Inst335 = 0;
var Inst336 = 0;
var Inst337 = 0;
var Inst338 = 0;
var Inst339 = 0;
var Inst340 = 0;
var Inst341 = 0;
var Inst342 = 0;
var Inst343 = 0;
var Inst344 = 0;
var Inst345 = 0;
var Inst346 = 0;
var Inst347 = 0;
var Inst348 = 0;
var Inst349 = 0;
var Inst350 = 0;
var Inst351 = 0;
var Inst352 = 0;
var Inst353 = 0;
var Inst354 = 0;
var Inst355 = 0;
var Inst356 = 0;
var Inst357 = 0;
var Inst358 = 0;
var Inst359 = 0;
var Inst360 = 0;
var Inst361 = 0;
var Inst362 = 0;
var Inst363 = 0;
var Inst364 = 0;
var Inst365 = 0;
var Inst366 = 0;
var Inst367 = 0;
var Inst368 = 0;
var Inst369 = 0;
var Inst370 = 0;
var Inst371 = 0;
var Inst372 = 0;
var Inst373 = 0;
var Inst374 = 0;
var Inst375 = 0;
var Inst376 = 0;
var Inst377 = 0;
var Inst378 = 0;
var Inst379 = 0;
var Inst380 = 0;
var Inst381 = 0;
var Inst382 = 0;
var Inst383 = 0;
var Inst384 = 0;
var Inst385 = 0;
var Inst386 = 0;
var Inst387 = 0;
var Inst388 = 0;
var Inst389 = 0;
var Inst390 = 0;
var Inst391 = 0;
var Inst392 = 0;
var Inst393 = 0;
var Inst394 = 0;
var Inst395 = 0;
var Inst396 = 0;
var Inst397 = 0;
var Inst398 = 0;
var Inst399 = 0;
var Inst400 = 0;
var Inst401 = 0;
var Inst402 = 0;
var Inst403 = 0;
var Inst404 = 0;
var Inst405 = 0;
var Inst406 = 0;
var Inst407 = 0;
var Inst408 = 0;
var Inst409 = 0;
var Inst410 = 0;
var Inst411 = 0;
var Inst412 = 0;
var Inst413 = 0;
var Inst414 = 0;
var Inst415 = 0;
var Inst416 = 0;
var Inst417 = 0;
var Inst418 = 0;
var Inst419 = 0;
var Inst420 = 0;
var Inst421 = 0;
var Inst422 = 0;
var Inst423 = 0;
var Inst424 = 0;
var Inst425 = 0;
var Inst426 = 0;
var Inst427 = 0;
var Inst428 = 0;
var Inst429 = 0;
var Inst430 = 0;
var Inst431 = 0;
var Inst432 = 0;
var Inst433 = 0;
var Inst434 = 0;
var Inst435 = 0;
var Inst436 = 0;
var Inst437 = 0;
var Inst438 = 0;
var Inst439 = 0;
var Inst440 = 0;
var Inst441 = 0;
var Inst442 = 0;
var Inst443 = 0;
var Inst444 = 0;
var Inst445 = 0;
var Inst446 = 0;
var Inst447 = 0;
var Inst448 = 0;
var Inst449 = 0;
var Inst450 = 0;
var Inst451 = 0;
var Inst452 = 0;
var Inst453 = 0;
var Inst454 = 0;
var Inst455 = 0;
var Inst456 = 0;
var Inst457 = 0;
var Inst458 = 0;
var Inst459 = 0;
var Inst460 = 0;
var Inst461 = 0;
var Inst462 = 0;
var Inst463 = 0;
var Inst464 = 0;
var Inst465 = 0;
var Inst466 = 0;
var Inst467 = 0;
var Inst468 = 0;
var Inst469 = 0;
var Inst470 = 0;
var Inst471 = 0;
var Inst472 = 0;
var Inst473 = 0;
var Inst474 = 0;
var Inst475 = 0;
var Inst476 = 0;
var Inst477 = 0;
var Inst478 = 0;
var Inst479 = 0;
var Inst480 = 0;
var Inst481 = 0;
var Inst482 = 0;
var Inst483 = 0;
var Inst484 = 0;
var Inst485 = 0;
var Inst486 = 0;
var Inst487 = 0;
var Inst488 = 0;
var Inst489 = 0;
var Inst490 = 0;
var Inst491 = 0;
var Inst492 = 0;
var Inst493 = 0;
var Inst494 = 0;
var Inst495 = 0;
var Inst496 = 0;
var Inst497 = 0;
var Inst498 = 0;
var Inst499 = 0;
var Inst500 = 0;
var Inst501 = 0;
var Inst502 = 0;
var Inst503 = 0;
var Inst504 = 0;
var Inst505 = 0;
var Inst506 = 0;
var Inst507 = 0;
var Inst508 = 0;
var Inst509 = 0;
var Inst510 = 0;
var Inst511 = 0;
var Inst512 = 0;
var Inst513 = 0;
var Inst514 = 0;
var Inst515 = 0;
var Inst516 = 0;
var Inst517 = 0;
var Inst518 = 0;
var Inst519 = 0;
var Inst520 = 0;
var Inst521 = 0;
var Inst522 = 0;
var Inst523 = 0;
var Inst524 = 0;
var Inst525 = 0;
var Inst526 = 0;
var Inst527 = 0;
var Inst528 = 0;
var Inst529 = 0;
var Inst530 = 0;
var Inst531 = 0;
var Inst532 = 0;
var Inst533 = 0;
var Inst534 = 0;
var Inst535 = 0;
var Inst536 = 0;
var Inst537 = 0;
var Inst538 = 0;
var Inst539 = 0;
var Inst540 = 0;
var Inst541 = 0;
var Inst542 = 0;
var Inst543 = 0;
var Inst544 = 0;
var Inst545 = 0;
var Inst546 = 0;
var Inst547 = 0;
var Inst548 = 0;
var Inst549 = 0;
var Inst550 = 0;
var Inst551 = 0;
var Inst552 = 0;
var Inst553 = 0;
var Inst554 = 0;
var Inst555 = 0;
var Inst556 = 0;
var Inst557 = 0;
var Inst558 = 0;
var Inst559 = 0;
var Inst560 = 0;
var Inst561 = 0;
var Inst562 = 0;
var Inst563 = 0;
var Inst564 = 0;
var Inst565 = 0;
var Inst566 = 0;
var Inst567 = 0;
var Inst568 = 0;
var Inst569 = 0;
var Inst570 = 0;
var Inst571 = 0;
var Inst572 = 0;
var Inst573 = 0;
var Inst574 = 0;
var Inst575 = 0;
var Inst576 = 0;
var Inst577 = 0;
var Inst578 = 0;
var Inst579 = 0;
var Inst580 = 0;
var Inst581 = 0;
var Inst582 = 0;
var Inst583 = 0;
var Inst584 = 0;
var Inst585 = 0;
var Inst586 = 0;
var Inst587 = 0;
var Inst588 = 0;
var Inst589 = 0;
var Inst590 = 0;
var Inst591 = 0;
var Inst592 = 0;
var Inst593 = 0;
var Inst594 = 0;
var Inst595 = 0;
var Inst596 = 0;
var Inst597 = 0;
var Inst598 = 0;
var Inst599 = 0;
var Inst600 = 0;
var Inst601 = 0;
var Inst602 = 0;
var Inst603 = 0;
var Inst604 = 0;
var Inst605 = 0;
var Inst606 = 0;
var Inst607 = 0;
var Inst608 = 0;
var Inst609 = 0;
var Inst610 = 0;
var Inst611 = 0;
var Inst612 = 0;
var Inst613 = 0;
var Inst614 = 0;
var Inst615 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2006-2008 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// This is a JavaScript implementation of the Richards
// benchmark from:
//
//    http://www.cl.cam.ac.uk/~mr10/Bench.html
//
// The benchmark was originally implemented in BCPL by
// Martin Richards.

/**
 * The Richards benchmark simulates the task dispatcher of an
 * operating system.
 **/
try { if (Inst0 <= 1000 && typeof (runRichards) != "undefined") {_RecordType("<1906,1917,39>",(runRichards)); Inst0++; } } catch(e) {}
function runRichards() {
try { if (Inst77 <= 1000 && typeof (e) != "undefined") {_RecordType("<3044,3045,62>",(e)); Inst77++; } } catch(e) {}
  try {
try { if (Inst2 <= 1000 && typeof (Scheduler) != "undefined") {_RecordType("<1954,1963,41>",(Scheduler)); Inst2++; } } catch(e) {}
    var scheduler = new Scheduler();
try { if (Inst1 <= 1000 && typeof (scheduler) != "undefined") {_RecordType("<1938,1947,41>",(scheduler)); Inst1++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (scheduler.addIdleTask) != "undefined") {_RecordType("<1971,1992,42>",(scheduler.addIdleTask)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (scheduler) != "undefined") {_RecordType("<1971,1980,42>",(scheduler)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (ID_IDLE) != "undefined") {_RecordType("<1993,2000,42>",(ID_IDLE)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (COUNT) != "undefined") {_RecordType("<2011,2016,42>",(COUNT)); Inst6++; } } catch(e) {}
    scheduler.addIdleTask(ID_IDLE, 0, null, COUNT);
try { if (Inst8 <= 1000 && typeof (Packet) != "undefined") {_RecordType("<2039,2045,43>",(Packet)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (ID_WORKER) != "undefined") {_RecordType("<2052,2061,43>",(ID_WORKER)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (KIND_WORK) != "undefined") {_RecordType("<2063,2072,43>",(KIND_WORK)); Inst10++; } } catch(e) {}
    var queue = new Packet(null, ID_WORKER, KIND_WORK);
try { if (Inst7 <= 1000 && typeof (queue) != "undefined") {_RecordType("<2027,2032,43>",(queue)); Inst7++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (Packet) != "undefined") {_RecordType("<2091,2097,44>",(Packet)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (queue) != "undefined") {_RecordType("<2098,2103,44>",(queue)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (ID_WORKER) != "undefined") {_RecordType("<2105,2114,44>",(ID_WORKER)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (KIND_WORK) != "undefined") {_RecordType("<2116,2125,44>",(KIND_WORK)); Inst15++; } } catch(e) {}
    queue = new Packet(queue, ID_WORKER, KIND_WORK);
try { if (Inst11 <= 1000 && typeof (queue) != "undefined") {_RecordType("<2079,2084,44>",(queue)); Inst11++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (scheduler.addWorkerTask) != "undefined") {_RecordType("<2132,2155,45>",(scheduler.addWorkerTask)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (scheduler) != "undefined") {_RecordType("<2132,2141,45>",(scheduler)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (ID_WORKER) != "undefined") {_RecordType("<2156,2165,45>",(ID_WORKER)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (queue) != "undefined") {_RecordType("<2173,2178,45>",(queue)); Inst19++; } } catch(e) {}
    scheduler.addWorkerTask(ID_WORKER, 1000, queue);
try { if (Inst21 <= 1000 && typeof (Packet) != "undefined") {_RecordType("<2197,2203,46>",(Packet)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (ID_DEVICE_A) != "undefined") {_RecordType("<2210,2221,46>",(ID_DEVICE_A)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (KIND_DEVICE) != "undefined") {_RecordType("<2223,2234,46>",(KIND_DEVICE)); Inst23++; } } catch(e) {}
    queue = new Packet(null, ID_DEVICE_A, KIND_DEVICE);
try { if (Inst20 <= 1000 && typeof (queue) != "undefined") {_RecordType("<2185,2190,46>",(queue)); Inst20++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (Packet) != "undefined") {_RecordType("<2253,2259,47>",(Packet)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (queue) != "undefined") {_RecordType("<2260,2265,47>",(queue)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (ID_DEVICE_A) != "undefined") {_RecordType("<2267,2278,47>",(ID_DEVICE_A)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (KIND_DEVICE) != "undefined") {_RecordType("<2280,2291,47>",(KIND_DEVICE)); Inst28++; } } catch(e) {}
    queue = new Packet(queue, ID_DEVICE_A, KIND_DEVICE);
try { if (Inst24 <= 1000 && typeof (queue) != "undefined") {_RecordType("<2241,2246,47>",(queue)); Inst24++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (Packet) != "undefined") {_RecordType("<2310,2316,48>",(Packet)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (queue) != "undefined") {_RecordType("<2317,2322,48>",(queue)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (ID_DEVICE_A) != "undefined") {_RecordType("<2324,2335,48>",(ID_DEVICE_A)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (KIND_DEVICE) != "undefined") {_RecordType("<2337,2348,48>",(KIND_DEVICE)); Inst33++; } } catch(e) {}
    queue = new Packet(queue, ID_DEVICE_A, KIND_DEVICE);
try { if (Inst29 <= 1000 && typeof (queue) != "undefined") {_RecordType("<2298,2303,48>",(queue)); Inst29++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof (scheduler.addHandlerTask) != "undefined") {_RecordType("<2355,2379,49>",(scheduler.addHandlerTask)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (scheduler) != "undefined") {_RecordType("<2355,2364,49>",(scheduler)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (ID_HANDLER_A) != "undefined") {_RecordType("<2380,2392,49>",(ID_HANDLER_A)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (queue) != "undefined") {_RecordType("<2400,2405,49>",(queue)); Inst37++; } } catch(e) {}
    scheduler.addHandlerTask(ID_HANDLER_A, 2000, queue);
try { if (Inst39 <= 1000 && typeof (Packet) != "undefined") {_RecordType("<2424,2430,50>",(Packet)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (ID_DEVICE_B) != "undefined") {_RecordType("<2437,2448,50>",(ID_DEVICE_B)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (KIND_DEVICE) != "undefined") {_RecordType("<2450,2461,50>",(KIND_DEVICE)); Inst41++; } } catch(e) {}
    queue = new Packet(null, ID_DEVICE_B, KIND_DEVICE);
try { if (Inst38 <= 1000 && typeof (queue) != "undefined") {_RecordType("<2412,2417,50>",(queue)); Inst38++; } } catch(e) {}
try { if (Inst43 <= 1000 && typeof (Packet) != "undefined") {_RecordType("<2480,2486,51>",(Packet)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (queue) != "undefined") {_RecordType("<2487,2492,51>",(queue)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (ID_DEVICE_B) != "undefined") {_RecordType("<2494,2505,51>",(ID_DEVICE_B)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (KIND_DEVICE) != "undefined") {_RecordType("<2507,2518,51>",(KIND_DEVICE)); Inst46++; } } catch(e) {}
    queue = new Packet(queue, ID_DEVICE_B, KIND_DEVICE);
try { if (Inst42 <= 1000 && typeof (queue) != "undefined") {_RecordType("<2468,2473,51>",(queue)); Inst42++; } } catch(e) {}
try { if (Inst48 <= 1000 && typeof (Packet) != "undefined") {_RecordType("<2537,2543,52>",(Packet)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (queue) != "undefined") {_RecordType("<2544,2549,52>",(queue)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (ID_DEVICE_B) != "undefined") {_RecordType("<2551,2562,52>",(ID_DEVICE_B)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (KIND_DEVICE) != "undefined") {_RecordType("<2564,2575,52>",(KIND_DEVICE)); Inst51++; } } catch(e) {}
    queue = new Packet(queue, ID_DEVICE_B, KIND_DEVICE);
try { if (Inst47 <= 1000 && typeof (queue) != "undefined") {_RecordType("<2525,2530,52>",(queue)); Inst47++; } } catch(e) {}
try { if (Inst52 <= 1000 && typeof (scheduler.addHandlerTask) != "undefined") {_RecordType("<2582,2606,53>",(scheduler.addHandlerTask)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (scheduler) != "undefined") {_RecordType("<2582,2591,53>",(scheduler)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (ID_HANDLER_B) != "undefined") {_RecordType("<2607,2619,53>",(ID_HANDLER_B)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (queue) != "undefined") {_RecordType("<2627,2632,53>",(queue)); Inst55++; } } catch(e) {}
    scheduler.addHandlerTask(ID_HANDLER_B, 3000, queue);
try { if (Inst56 <= 1000 && typeof (scheduler.addDeviceTask) != "undefined") {_RecordType("<2639,2662,54>",(scheduler.addDeviceTask)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (scheduler) != "undefined") {_RecordType("<2639,2648,54>",(scheduler)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (ID_DEVICE_A) != "undefined") {_RecordType("<2663,2674,54>",(ID_DEVICE_A)); Inst58++; } } catch(e) {}
    scheduler.addDeviceTask(ID_DEVICE_A, 4000, null);
try { if (Inst59 <= 1000 && typeof (scheduler.addDeviceTask) != "undefined") {_RecordType("<2693,2716,55>",(scheduler.addDeviceTask)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (scheduler) != "undefined") {_RecordType("<2693,2702,55>",(scheduler)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (ID_DEVICE_B) != "undefined") {_RecordType("<2717,2728,55>",(ID_DEVICE_B)); Inst61++; } } catch(e) {}
    scheduler.addDeviceTask(ID_DEVICE_B, 5000, null);
try { if (Inst62 <= 1000 && typeof (scheduler.schedule) != "undefined") {_RecordType("<2747,2765,56>",(scheduler.schedule)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (scheduler) != "undefined") {_RecordType("<2747,2756,56>",(scheduler)); Inst63++; } } catch(e) {}
    scheduler.schedule();

try { if (Inst64 <= 1000 && typeof (scheduler.queueCount) != "undefined") {_RecordType("<2778,2798,58>",(scheduler.queueCount)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (scheduler) != "undefined") {_RecordType("<2778,2787,58>",(scheduler)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (EXPECTED_QUEUE_COUNT) != "undefined") {_RecordType("<2802,2822,58>",(EXPECTED_QUEUE_COUNT)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (scheduler.holdCount) != "undefined") {_RecordType("<2826,2845,58>",(scheduler.holdCount)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (scheduler) != "undefined") {_RecordType("<2826,2835,58>",(scheduler)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (EXPECTED_HOLD_COUNT) != "undefined") {_RecordType("<2849,2868,58>",(EXPECTED_HOLD_COUNT)); Inst69++; } } catch(e) {}
    if (scheduler.queueCount != EXPECTED_QUEUE_COUNT || scheduler.holdCount != EXPECTED_HOLD_COUNT) {
try { if (Inst71 <= 1000 && typeof (scheduler.queueCount) != "undefined") {_RecordType("<2930,2950,59>",(scheduler.queueCount)); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (scheduler) != "undefined") {_RecordType("<2930,2939,59>",(scheduler)); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (scheduler.holdCount) != "undefined") {_RecordType("<2972,2991,59>",(scheduler.holdCount)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (scheduler) != "undefined") {_RecordType("<2972,2981,59>",(scheduler)); Inst74++; } } catch(e) {}
      var msg = "Error during execution: queueCount = " + scheduler.queueCount + ", holdCount = " + scheduler.holdCount + ".";
try { if (Inst70 <= 1000 && typeof (msg) != "undefined") {_RecordType("<2882,2885,59>",(msg)); Inst70++; } } catch(e) {}
try { if (Inst75 <= 1000 && typeof (Error) != "undefined") {_RecordType("<3015,3020,60>",(Error)); Inst75++; } } catch(e) {}try { if (Inst76 <= 1000 && typeof (msg) != "undefined") {_RecordType("<3021,3024,60>",(msg)); Inst76++; } } catch(e) {}
      throw new Error(msg);
    }
  } catch (e) {
    ;
  }
}

var COUNT = 1000;
try { if (Inst78 <= 1000 && typeof (COUNT) != "undefined") {_RecordType("<3066,3071,67>",(COUNT)); Inst78++; } } catch(e) {}
/**
 * These two constants specify how many times a packet is queued and
 * how many times a task is put on hold in a correct run of richards.
 * They don't have any meaning a such but are characteristic of a
 * correct run so if the actual queue or hold count is different from
 * the expected there must be a bug in the implementation.
 **/

var EXPECTED_QUEUE_COUNT = 2322;
try { if (Inst79 <= 1000 && typeof (EXPECTED_QUEUE_COUNT) != "undefined") {_RecordType("<3428,3448,76>",(EXPECTED_QUEUE_COUNT)); Inst79++; } } catch(e) {}
var EXPECTED_HOLD_COUNT = 928;
try { if (Inst80 <= 1000 && typeof (EXPECTED_HOLD_COUNT) != "undefined") {_RecordType("<3461,3480,77>",(EXPECTED_HOLD_COUNT)); Inst80++; } } catch(e) {}
/**
 * A scheduler can be used to schedule a set of tasks based on their relative
 * priorities.  Scheduling is done by maintaining a list of task control blocks
 * which holds tasks and the data queue they are processing.
 * @constructor
 */

try { if (Inst81 <= 1000 && typeof (Scheduler) != "undefined") {_RecordType("<3741,3750,85>",(Scheduler)); Inst81++; } } catch(e) {}
function Scheduler() {
try { if (Inst90 <= 1000 && typeof (e) != "undefined") {_RecordType("<3944,3945,93>",(e)); Inst90++; } } catch(e) {}
  try {
    this.queueCount = 0;
try { if (Inst82 <= 1000 && typeof (this.queueCount) != "undefined") {_RecordType("<3767,3782,87>",(this.queueCount)); Inst82++; } } catch(e) {}
    this.holdCount = 0;
try { if (Inst83 <= 1000 && typeof (this.holdCount) != "undefined") {_RecordType("<3792,3806,88>",(this.holdCount)); Inst83++; } } catch(e) {}
try { if (Inst85 <= 1000 && typeof (Array) != "undefined") {_RecordType("<3834,3839,89>",(Array)); Inst85++; } } catch(e) {}try { if (Inst86 <= 1000 && typeof (NUMBER_OF_IDS) != "undefined") {_RecordType("<3840,3853,89>",(NUMBER_OF_IDS)); Inst86++; } } catch(e) {}
    this.blocks = new Array(NUMBER_OF_IDS);
try { if (Inst84 <= 1000 && typeof (this.blocks) != "undefined") {_RecordType("<3816,3827,89>",(this.blocks)); Inst84++; } } catch(e) {}
    this.list = null;
try { if (Inst87 <= 1000 && typeof (this.list) != "undefined") {_RecordType("<3860,3869,90>",(this.list)); Inst87++; } } catch(e) {}
    this.currentTcb = null;
try { if (Inst88 <= 1000 && typeof (this.currentTcb) != "undefined") {_RecordType("<3882,3897,91>",(this.currentTcb)); Inst88++; } } catch(e) {}
    this.currentId = null;
try { if (Inst89 <= 1000 && typeof (this.currentId) != "undefined") {_RecordType("<3910,3924,92>",(this.currentId)); Inst89++; } } catch(e) {}
  } catch (e) {
    ;
  }
}

var ID_IDLE = 0;
try { if (Inst91 <= 1000 && typeof (ID_IDLE) != "undefined") {_RecordType("<3966,3973,98>",(ID_IDLE)); Inst91++; } } catch(e) {}
var ID_WORKER = 1;
try { if (Inst92 <= 1000 && typeof (ID_WORKER) != "undefined") {_RecordType("<3983,3992,99>",(ID_WORKER)); Inst92++; } } catch(e) {}
var ID_HANDLER_A = 2;
try { if (Inst93 <= 1000 && typeof (ID_HANDLER_A) != "undefined") {_RecordType("<4002,4014,100>",(ID_HANDLER_A)); Inst93++; } } catch(e) {}
var ID_HANDLER_B = 3;
try { if (Inst94 <= 1000 && typeof (ID_HANDLER_B) != "undefined") {_RecordType("<4024,4036,101>",(ID_HANDLER_B)); Inst94++; } } catch(e) {}
var ID_DEVICE_A = 4;
try { if (Inst95 <= 1000 && typeof (ID_DEVICE_A) != "undefined") {_RecordType("<4046,4057,102>",(ID_DEVICE_A)); Inst95++; } } catch(e) {}
var ID_DEVICE_B = 5;
try { if (Inst96 <= 1000 && typeof (ID_DEVICE_B) != "undefined") {_RecordType("<4067,4078,103>",(ID_DEVICE_B)); Inst96++; } } catch(e) {}
var NUMBER_OF_IDS = 6;
try { if (Inst97 <= 1000 && typeof (NUMBER_OF_IDS) != "undefined") {_RecordType("<4088,4101,104>",(NUMBER_OF_IDS)); Inst97++; } } catch(e) {}
var KIND_DEVICE = 0;
try { if (Inst98 <= 1000 && typeof (KIND_DEVICE) != "undefined") {_RecordType("<4111,4122,105>",(KIND_DEVICE)); Inst98++; } } catch(e) {}
var KIND_WORK = 1;
try { if (Inst99 <= 1000 && typeof (KIND_WORK) != "undefined") {_RecordType("<4132,4141,106>",(KIND_WORK)); Inst99++; } } catch(e) {}
/**
 * Add an idle task to this scheduler.
 * @param {int} id the identity of the task
 * @param {int} priority the task's priority
 * @param {Packet} queue the queue of work to be processed by the task
 * @param {int} count the number of times to schedule the task
 */

Scheduler.prototype.addIdleTask = function (id, priority, queue, count) {
try { if (Inst103 <= 1000 && typeof (id) != "undefined") {_RecordType("<4462,4464,115>",(id)); Inst103++; } } catch(e) {}try { if (Inst104 <= 1000 && typeof (priority) != "undefined") {_RecordType("<4466,4474,115>",(priority)); Inst104++; } } catch(e) {}try { if (Inst105 <= 1000 && typeof (queue) != "undefined") {_RecordType("<4476,4481,115>",(queue)); Inst105++; } } catch(e) {}try { if (Inst106 <= 1000 && typeof (count) != "undefined") {_RecordType("<4483,4488,115>",(count)); Inst106++; } } catch(e) {}
try { if (Inst113 <= 1000 && typeof (e) != "undefined") {_RecordType("<4587,4588,118>",(e)); Inst113++; } } catch(e) {}
  try {
try { if (Inst107 <= 1000 && typeof (this.addRunningTask) != "undefined") {_RecordType("<4504,4523,117>",(this.addRunningTask)); Inst107++; } } catch(e) {}try { if (Inst108 <= 1000 && typeof (id) != "undefined") {_RecordType("<4524,4526,117>",(id)); Inst108++; } } catch(e) {}try { if (Inst109 <= 1000 && typeof (priority) != "undefined") {_RecordType("<4528,4536,117>",(priority)); Inst109++; } } catch(e) {}try { if (Inst110 <= 1000 && typeof (queue) != "undefined") {_RecordType("<4538,4543,117>",(queue)); Inst110++; } } catch(e) {}try { if (Inst111 <= 1000 && typeof (IdleTask) != "undefined") {_RecordType("<4549,4557,117>",(IdleTask)); Inst111++; } } catch(e) {}try { if (Inst112 <= 1000 && typeof (count) != "undefined") {_RecordType("<4567,4572,117>",(count)); Inst112++; } } catch(e) {}
    this.addRunningTask(id, priority, queue, new IdleTask(this, 1, count));
  } catch (e) {
    ;
  }
};
try { if (Inst100 <= 1000 && typeof (Scheduler.prototype.addIdleTask) != "undefined") {_RecordType("<4418,4449,115>",(Scheduler.prototype.addIdleTask)); Inst100++; } } catch(e) {}try { if (Inst101 <= 1000 && typeof (Scheduler.prototype) != "undefined") {_RecordType("<4418,4437,115>",(Scheduler.prototype)); Inst101++; } } catch(e) {}try { if (Inst102 <= 1000 && typeof (Scheduler) != "undefined") {_RecordType("<4418,4427,115>",(Scheduler)); Inst102++; } } catch(e) {}
/**
 * Add a work task to this scheduler.
 * @param {int} id the identity of the task
 * @param {int} priority the task's priority
 * @param {Packet} queue the queue of work to be processed by the task
 */


Scheduler.prototype.addWorkerTask = function (id, priority, queue) {
try { if (Inst117 <= 1000 && typeof (id) != "undefined") {_RecordType("<4859,4861,130>",(id)); Inst117++; } } catch(e) {}try { if (Inst118 <= 1000 && typeof (priority) != "undefined") {_RecordType("<4863,4871,130>",(priority)); Inst118++; } } catch(e) {}try { if (Inst119 <= 1000 && typeof (queue) != "undefined") {_RecordType("<4873,4878,130>",(queue)); Inst119++; } } catch(e) {}
try { if (Inst126 <= 1000 && typeof (e) != "undefined") {_RecordType("<4979,4980,133>",(e)); Inst126++; } } catch(e) {}
  try {
try { if (Inst120 <= 1000 && typeof (this.addTask) != "undefined") {_RecordType("<4894,4906,132>",(this.addTask)); Inst120++; } } catch(e) {}try { if (Inst121 <= 1000 && typeof (id) != "undefined") {_RecordType("<4907,4909,132>",(id)); Inst121++; } } catch(e) {}try { if (Inst122 <= 1000 && typeof (priority) != "undefined") {_RecordType("<4911,4919,132>",(priority)); Inst122++; } } catch(e) {}try { if (Inst123 <= 1000 && typeof (queue) != "undefined") {_RecordType("<4921,4926,132>",(queue)); Inst123++; } } catch(e) {}try { if (Inst124 <= 1000 && typeof (WorkerTask) != "undefined") {_RecordType("<4932,4942,132>",(WorkerTask)); Inst124++; } } catch(e) {}try { if (Inst125 <= 1000 && typeof (ID_HANDLER_A) != "undefined") {_RecordType("<4949,4961,132>",(ID_HANDLER_A)); Inst125++; } } catch(e) {}
    this.addTask(id, priority, queue, new WorkerTask(this, ID_HANDLER_A, 0));
  } catch (e) {
    ;
  }
};
try { if (Inst114 <= 1000 && typeof (Scheduler.prototype.addWorkerTask) != "undefined") {_RecordType("<4813,4846,130>",(Scheduler.prototype.addWorkerTask)); Inst114++; } } catch(e) {}try { if (Inst115 <= 1000 && typeof (Scheduler.prototype) != "undefined") {_RecordType("<4813,4832,130>",(Scheduler.prototype)); Inst115++; } } catch(e) {}try { if (Inst116 <= 1000 && typeof (Scheduler) != "undefined") {_RecordType("<4813,4822,130>",(Scheduler)); Inst116++; } } catch(e) {}
/**
 * Add a handler task to this scheduler.
 * @param {int} id the identity of the task
 * @param {int} priority the task's priority
 * @param {Packet} queue the queue of work to be processed by the task
 */


Scheduler.prototype.addHandlerTask = function (id, priority, queue) {
try { if (Inst130 <= 1000 && typeof (id) != "undefined") {_RecordType("<5255,5257,145>",(id)); Inst130++; } } catch(e) {}try { if (Inst131 <= 1000 && typeof (priority) != "undefined") {_RecordType("<5259,5267,145>",(priority)); Inst131++; } } catch(e) {}try { if (Inst132 <= 1000 && typeof (queue) != "undefined") {_RecordType("<5269,5274,145>",(queue)); Inst132++; } } catch(e) {}
try { if (Inst138 <= 1000 && typeof (e) != "undefined") {_RecordType("<5359,5360,148>",(e)); Inst138++; } } catch(e) {}
  try {
try { if (Inst133 <= 1000 && typeof (this.addTask) != "undefined") {_RecordType("<5290,5302,147>",(this.addTask)); Inst133++; } } catch(e) {}try { if (Inst134 <= 1000 && typeof (id) != "undefined") {_RecordType("<5303,5305,147>",(id)); Inst134++; } } catch(e) {}try { if (Inst135 <= 1000 && typeof (priority) != "undefined") {_RecordType("<5307,5315,147>",(priority)); Inst135++; } } catch(e) {}try { if (Inst136 <= 1000 && typeof (queue) != "undefined") {_RecordType("<5317,5322,147>",(queue)); Inst136++; } } catch(e) {}try { if (Inst137 <= 1000 && typeof (HandlerTask) != "undefined") {_RecordType("<5328,5339,147>",(HandlerTask)); Inst137++; } } catch(e) {}
    this.addTask(id, priority, queue, new HandlerTask(this));
  } catch (e) {
    ;
  }
};
try { if (Inst127 <= 1000 && typeof (Scheduler.prototype.addHandlerTask) != "undefined") {_RecordType("<5208,5242,145>",(Scheduler.prototype.addHandlerTask)); Inst127++; } } catch(e) {}try { if (Inst128 <= 1000 && typeof (Scheduler.prototype) != "undefined") {_RecordType("<5208,5227,145>",(Scheduler.prototype)); Inst128++; } } catch(e) {}try { if (Inst129 <= 1000 && typeof (Scheduler) != "undefined") {_RecordType("<5208,5217,145>",(Scheduler)); Inst129++; } } catch(e) {}
/**
 * Add a handler task to this scheduler.
 * @param {int} id the identity of the task
 * @param {int} priority the task's priority
 * @param {Packet} queue the queue of work to be processed by the task
 */


Scheduler.prototype.addDeviceTask = function (id, priority, queue) {
try { if (Inst142 <= 1000 && typeof (id) != "undefined") {_RecordType("<5634,5636,160>",(id)); Inst142++; } } catch(e) {}try { if (Inst143 <= 1000 && typeof (priority) != "undefined") {_RecordType("<5638,5646,160>",(priority)); Inst143++; } } catch(e) {}try { if (Inst144 <= 1000 && typeof (queue) != "undefined") {_RecordType("<5648,5653,160>",(queue)); Inst144++; } } catch(e) {}
try { if (Inst150 <= 1000 && typeof (e) != "undefined") {_RecordType("<5737,5738,163>",(e)); Inst150++; } } catch(e) {}
  try {
try { if (Inst145 <= 1000 && typeof (this.addTask) != "undefined") {_RecordType("<5669,5681,162>",(this.addTask)); Inst145++; } } catch(e) {}try { if (Inst146 <= 1000 && typeof (id) != "undefined") {_RecordType("<5682,5684,162>",(id)); Inst146++; } } catch(e) {}try { if (Inst147 <= 1000 && typeof (priority) != "undefined") {_RecordType("<5686,5694,162>",(priority)); Inst147++; } } catch(e) {}try { if (Inst148 <= 1000 && typeof (queue) != "undefined") {_RecordType("<5696,5701,162>",(queue)); Inst148++; } } catch(e) {}try { if (Inst149 <= 1000 && typeof (DeviceTask) != "undefined") {_RecordType("<5707,5717,162>",(DeviceTask)); Inst149++; } } catch(e) {}
    this.addTask(id, priority, queue, new DeviceTask(this));
  } catch (e) {
    ;
  }
};
try { if (Inst139 <= 1000 && typeof (Scheduler.prototype.addDeviceTask) != "undefined") {_RecordType("<5588,5621,160>",(Scheduler.prototype.addDeviceTask)); Inst139++; } } catch(e) {}try { if (Inst140 <= 1000 && typeof (Scheduler.prototype) != "undefined") {_RecordType("<5588,5607,160>",(Scheduler.prototype)); Inst140++; } } catch(e) {}try { if (Inst141 <= 1000 && typeof (Scheduler) != "undefined") {_RecordType("<5588,5597,160>",(Scheduler)); Inst141++; } } catch(e) {}
/**
 * Add the specified task and mark it as running.
 * @param {int} id the identity of the task
 * @param {int} priority the task's priority
 * @param {Packet} queue the queue of work to be processed by the task
 * @param {Task} task the task to add
 */


Scheduler.prototype.addRunningTask = function (id, priority, queue, task) {
try { if (Inst154 <= 1000 && typeof (id) != "undefined") {_RecordType("<6060,6062,176>",(id)); Inst154++; } } catch(e) {}try { if (Inst155 <= 1000 && typeof (priority) != "undefined") {_RecordType("<6064,6072,176>",(priority)); Inst155++; } } catch(e) {}try { if (Inst156 <= 1000 && typeof (queue) != "undefined") {_RecordType("<6074,6079,176>",(queue)); Inst156++; } } catch(e) {}try { if (Inst157 <= 1000 && typeof (task) != "undefined") {_RecordType("<6081,6085,176>",(task)); Inst157++; } } catch(e) {}
try { if (Inst165 <= 1000 && typeof (e) != "undefined") {_RecordType("<6187,6188,180>",(e)); Inst165++; } } catch(e) {}
  try {
try { if (Inst158 <= 1000 && typeof (this.addTask) != "undefined") {_RecordType("<6101,6113,178>",(this.addTask)); Inst158++; } } catch(e) {}try { if (Inst159 <= 1000 && typeof (id) != "undefined") {_RecordType("<6114,6116,178>",(id)); Inst159++; } } catch(e) {}try { if (Inst160 <= 1000 && typeof (priority) != "undefined") {_RecordType("<6118,6126,178>",(priority)); Inst160++; } } catch(e) {}try { if (Inst161 <= 1000 && typeof (queue) != "undefined") {_RecordType("<6128,6133,178>",(queue)); Inst161++; } } catch(e) {}try { if (Inst162 <= 1000 && typeof (task) != "undefined") {_RecordType("<6135,6139,178>",(task)); Inst162++; } } catch(e) {}
    this.addTask(id, priority, queue, task);
try { if (Inst163 <= 1000 && typeof (this.currentTcb.setRunning) != "undefined") {_RecordType("<6146,6172,179>",(this.currentTcb.setRunning)); Inst163++; } } catch(e) {}try { if (Inst164 <= 1000 && typeof (this.currentTcb) != "undefined") {_RecordType("<6146,6161,179>",(this.currentTcb)); Inst164++; } } catch(e) {}
    this.currentTcb.setRunning();
  } catch (e) {
    ;
  }
};
try { if (Inst151 <= 1000 && typeof (Scheduler.prototype.addRunningTask) != "undefined") {_RecordType("<6013,6047,176>",(Scheduler.prototype.addRunningTask)); Inst151++; } } catch(e) {}try { if (Inst152 <= 1000 && typeof (Scheduler.prototype) != "undefined") {_RecordType("<6013,6032,176>",(Scheduler.prototype)); Inst152++; } } catch(e) {}try { if (Inst153 <= 1000 && typeof (Scheduler) != "undefined") {_RecordType("<6013,6022,176>",(Scheduler)); Inst153++; } } catch(e) {}
/**
 * Add the specified task to this scheduler.
 * @param {int} id the identity of the task
 * @param {int} priority the task's priority
 * @param {Packet} queue the queue of work to be processed by the task
 * @param {Task} task the task to add
 */


Scheduler.prototype.addTask = function (id, priority, queue, task) {
try { if (Inst169 <= 1000 && typeof (id) != "undefined") {_RecordType("<6498,6500,193>",(id)); Inst169++; } } catch(e) {}try { if (Inst170 <= 1000 && typeof (priority) != "undefined") {_RecordType("<6502,6510,193>",(priority)); Inst170++; } } catch(e) {}try { if (Inst171 <= 1000 && typeof (queue) != "undefined") {_RecordType("<6512,6517,193>",(queue)); Inst171++; } } catch(e) {}try { if (Inst172 <= 1000 && typeof (task) != "undefined") {_RecordType("<6519,6523,193>",(task)); Inst172++; } } catch(e) {}
try { if (Inst185 <= 1000 && typeof (e) != "undefined") {_RecordType("<6700,6701,198>",(e)); Inst185++; } } catch(e) {}
  try {
try { if (Inst174 <= 1000 && typeof (TaskControlBlock) != "undefined") {_RecordType("<6561,6577,195>",(TaskControlBlock)); Inst174++; } } catch(e) {}try { if (Inst175 <= 1000 && typeof (this.list) != "undefined") {_RecordType("<6578,6587,195>",(this.list)); Inst175++; } } catch(e) {}try { if (Inst176 <= 1000 && typeof (id) != "undefined") {_RecordType("<6589,6591,195>",(id)); Inst176++; } } catch(e) {}try { if (Inst177 <= 1000 && typeof (priority) != "undefined") {_RecordType("<6593,6601,195>",(priority)); Inst177++; } } catch(e) {}try { if (Inst178 <= 1000 && typeof (queue) != "undefined") {_RecordType("<6603,6608,195>",(queue)); Inst178++; } } catch(e) {}try { if (Inst179 <= 1000 && typeof (task) != "undefined") {_RecordType("<6610,6614,195>",(task)); Inst179++; } } catch(e) {}
    this.currentTcb = new TaskControlBlock(this.list, id, priority, queue, task);
try { if (Inst173 <= 1000 && typeof (this.currentTcb) != "undefined") {_RecordType("<6539,6554,195>",(this.currentTcb)); Inst173++; } } catch(e) {}
try { if (Inst181 <= 1000 && typeof (this.currentTcb) != "undefined") {_RecordType("<6633,6648,196>",(this.currentTcb)); Inst181++; } } catch(e) {}
    this.list = this.currentTcb;
try { if (Inst180 <= 1000 && typeof (this.list) != "undefined") {_RecordType("<6621,6630,196>",(this.list)); Inst180++; } } catch(e) {}
try { if (Inst184 <= 1000 && typeof (this.currentTcb) != "undefined") {_RecordType("<6672,6687,197>",(this.currentTcb)); Inst184++; } } catch(e) {}
    this.blocks[id] = this.currentTcb;
try { if (Inst182 <= 1000 && typeof (this.blocks[id]) != "undefined") {_RecordType("<6654,6669,197>",(this.blocks[id])); Inst182++; } } catch(e) {}try { if (Inst183 <= 1000 && typeof (this.blocks) != "undefined") {_RecordType("<6654,6665,197>",(this.blocks)); Inst183++; } } catch(e) {}
  } catch (e) {
    ;
  }
};
try { if (Inst166 <= 1000 && typeof (Scheduler.prototype.addTask) != "undefined") {_RecordType("<6458,6485,193>",(Scheduler.prototype.addTask)); Inst166++; } } catch(e) {}try { if (Inst167 <= 1000 && typeof (Scheduler.prototype) != "undefined") {_RecordType("<6458,6477,193>",(Scheduler.prototype)); Inst167++; } } catch(e) {}try { if (Inst168 <= 1000 && typeof (Scheduler) != "undefined") {_RecordType("<6458,6467,193>",(Scheduler)); Inst168++; } } catch(e) {}
/**
 * Execute the tasks managed by this scheduler.
 */


Scheduler.prototype.schedule = function () {
try { if (Inst190 <= 1000 && typeof (this.list) != "undefined") {_RecordType("<6841,6850,208>",(this.list)); Inst190++; } } catch(e) {}
  this.currentTcb = this.list;
try { if (Inst189 <= 1000 && typeof (this.currentTcb) != "undefined") {_RecordType("<6823,6838,208>",(this.currentTcb)); Inst189++; } } catch(e) {}

try { if (Inst191 <= 1000 && typeof (this.currentTcb) != "undefined") {_RecordType("<6862,6877,210>",(this.currentTcb)); Inst191++; } } catch(e) {}
  while (this.currentTcb != null) {
try { if (Inst203 <= 1000 && typeof (e) != "undefined") {_RecordType("<7126,7127,218>",(e)); Inst203++; } } catch(e) {}
    try {
try { if (Inst192 <= 1000 && typeof (this.currentTcb.isHeldOrSuspended) != "undefined") {_RecordType("<6909,6942,212>",(this.currentTcb.isHeldOrSuspended)); Inst192++; } } catch(e) {}try { if (Inst193 <= 1000 && typeof (this.currentTcb) != "undefined") {_RecordType("<6909,6924,212>",(this.currentTcb)); Inst193++; } } catch(e) {}
      if (this.currentTcb.isHeldOrSuspended()) {
try { if (Inst195 <= 1000 && typeof (this.currentTcb.link) != "undefined") {_RecordType("<6974,6994,213>",(this.currentTcb.link)); Inst195++; } } catch(e) {}try { if (Inst196 <= 1000 && typeof (this.currentTcb) != "undefined") {_RecordType("<6974,6989,213>",(this.currentTcb)); Inst196++; } } catch(e) {}
        this.currentTcb = this.currentTcb.link;
try { if (Inst194 <= 1000 && typeof (this.currentTcb) != "undefined") {_RecordType("<6956,6971,213>",(this.currentTcb)); Inst194++; } } catch(e) {}
      } else {
try { if (Inst198 <= 1000 && typeof (this.currentTcb.id) != "undefined") {_RecordType("<7036,7054,215>",(this.currentTcb.id)); Inst198++; } } catch(e) {}try { if (Inst199 <= 1000 && typeof (this.currentTcb) != "undefined") {_RecordType("<7036,7051,215>",(this.currentTcb)); Inst199++; } } catch(e) {}
        this.currentId = this.currentTcb.id;
try { if (Inst197 <= 1000 && typeof (this.currentId) != "undefined") {_RecordType("<7019,7033,215>",(this.currentId)); Inst197++; } } catch(e) {}
try { if (Inst201 <= 1000 && typeof (this.currentTcb.run) != "undefined") {_RecordType("<7082,7101,216>",(this.currentTcb.run)); Inst201++; } } catch(e) {}try { if (Inst202 <= 1000 && typeof (this.currentTcb) != "undefined") {_RecordType("<7082,7097,216>",(this.currentTcb)); Inst202++; } } catch(e) {}
        this.currentTcb = this.currentTcb.run();
try { if (Inst200 <= 1000 && typeof (this.currentTcb) != "undefined") {_RecordType("<7064,7079,216>",(this.currentTcb)); Inst200++; } } catch(e) {}
      }
    } catch (e) {
      ;
    }
  }
};
try { if (Inst186 <= 1000 && typeof (Scheduler.prototype.schedule) != "undefined") {_RecordType("<6776,6804,207>",(Scheduler.prototype.schedule)); Inst186++; } } catch(e) {}try { if (Inst187 <= 1000 && typeof (Scheduler.prototype) != "undefined") {_RecordType("<6776,6795,207>",(Scheduler.prototype)); Inst187++; } } catch(e) {}try { if (Inst188 <= 1000 && typeof (Scheduler) != "undefined") {_RecordType("<6776,6785,207>",(Scheduler)); Inst188++; } } catch(e) {}
/**
 * Release a task that is currently blocked and return the next block to run.
 * @param {int} id the id of the task to suspend
 */


Scheduler.prototype.release = function (id) {
try { if (Inst207 <= 1000 && typeof (id) != "undefined") {_RecordType("<7329,7331,229>",(id)); Inst207++; } } catch(e) {}
try { if (Inst215 <= 1000 && typeof (e) != "undefined") {_RecordType("<7459,7460,238>",(e)); Inst215++; } } catch(e) {}
  try {
try { if (Inst209 <= 1000 && typeof (this.blocks[id]) != "undefined") {_RecordType("<7357,7372,231>",(this.blocks[id])); Inst209++; } } catch(e) {}try { if (Inst210 <= 1000 && typeof (this.blocks) != "undefined") {_RecordType("<7357,7368,231>",(this.blocks)); Inst210++; } } catch(e) {}
    var tcb = this.blocks[id];
try { if (Inst208 <= 1000 && typeof (tcb) != "undefined") {_RecordType("<7351,7354,231>",(tcb)); Inst208++; } } catch(e) {}

try { if (Inst211 <= 1000 && typeof (tcb) != "undefined") {_RecordType("<7383,7386,233>",(tcb)); Inst211++; } } catch(e) {}
    if (tcb == null) {
try { if (Inst212 <= 1000 && typeof (tcb) != "undefined") {_RecordType("<7411,7414,234>",(tcb)); Inst212++; } } catch(e) {}
      return tcb;
    }

try { if (Inst213 <= 1000 && typeof (tcb.markAsNotHeld) != "undefined") {_RecordType("<7427,7444,237>",(tcb.markAsNotHeld)); Inst213++; } } catch(e) {}try { if (Inst214 <= 1000 && typeof (tcb) != "undefined") {_RecordType("<7427,7430,237>",(tcb)); Inst214++; } } catch(e) {}
    tcb.markAsNotHeld();
  } catch (e) {
    ;
  }

try { if (Inst222 <= 1000 && typeof (e) != "undefined") {_RecordType("<7612,7613,248>",(e)); Inst222++; } } catch(e) {}
  try {
try { if (Inst216 <= 1000 && typeof (tcb.priority) != "undefined") {_RecordType("<7491,7503,243>",(tcb.priority)); Inst216++; } } catch(e) {}try { if (Inst217 <= 1000 && typeof (tcb) != "undefined") {_RecordType("<7491,7494,243>",(tcb)); Inst217++; } } catch(e) {}try { if (Inst218 <= 1000 && typeof (this.currentTcb.priority) != "undefined") {_RecordType("<7506,7530,243>",(this.currentTcb.priority)); Inst218++; } } catch(e) {}try { if (Inst219 <= 1000 && typeof (this.currentTcb) != "undefined") {_RecordType("<7506,7521,243>",(this.currentTcb)); Inst219++; } } catch(e) {}
    if (tcb.priority > this.currentTcb.priority) {
try { if (Inst220 <= 1000 && typeof (tcb) != "undefined") {_RecordType("<7547,7550,244>",(tcb)); Inst220++; } } catch(e) {}
      return tcb;
    } else {
try { if (Inst221 <= 1000 && typeof (this.currentTcb) != "undefined") {_RecordType("<7578,7593,246>",(this.currentTcb)); Inst221++; } } catch(e) {}
      return this.currentTcb;
    }
  } catch (e) {
    ;
  }
};
try { if (Inst204 <= 1000 && typeof (Scheduler.prototype.release) != "undefined") {_RecordType("<7289,7316,229>",(Scheduler.prototype.release)); Inst204++; } } catch(e) {}try { if (Inst205 <= 1000 && typeof (Scheduler.prototype) != "undefined") {_RecordType("<7289,7308,229>",(Scheduler.prototype)); Inst205++; } } catch(e) {}try { if (Inst206 <= 1000 && typeof (Scheduler) != "undefined") {_RecordType("<7289,7298,229>",(Scheduler)); Inst206++; } } catch(e) {}
/**
 * Block the currently executing task and return the next task control block
 * to run.  The blocked task will not be made runnable until it is explicitly
 * released, even if new work is added to it.
 */


Scheduler.prototype.holdCurrent = function () {
try { if (Inst229 <= 1000 && typeof (e) != "undefined") {_RecordType("<7964,7965,263>",(e)); Inst229++; } } catch(e) {}
  try {
try { if (Inst226 <= 1000 && typeof (this.holdCount) != "undefined") {_RecordType("<7901,7915,261>",(this.holdCount)); Inst226++; } } catch(e) {}
    this.holdCount++;
try { if (Inst227 <= 1000 && typeof (this.currentTcb.markAsHeld) != "undefined") {_RecordType("<7923,7949,262>",(this.currentTcb.markAsHeld)); Inst227++; } } catch(e) {}try { if (Inst228 <= 1000 && typeof (this.currentTcb) != "undefined") {_RecordType("<7923,7938,262>",(this.currentTcb)); Inst228++; } } catch(e) {}
    this.currentTcb.markAsHeld();
  } catch (e) {
    ;
  }

try { if (Inst230 <= 1000 && typeof (this.currentTcb.link) != "undefined") {_RecordType("<7989,8009,267>",(this.currentTcb.link)); Inst230++; } } catch(e) {}try { if (Inst231 <= 1000 && typeof (this.currentTcb) != "undefined") {_RecordType("<7989,8004,267>",(this.currentTcb)); Inst231++; } } catch(e) {}
  return this.currentTcb.link;
};
try { if (Inst223 <= 1000 && typeof (Scheduler.prototype.holdCurrent) != "undefined") {_RecordType("<7841,7872,259>",(Scheduler.prototype.holdCurrent)); Inst223++; } } catch(e) {}try { if (Inst224 <= 1000 && typeof (Scheduler.prototype) != "undefined") {_RecordType("<7841,7860,259>",(Scheduler.prototype)); Inst224++; } } catch(e) {}try { if (Inst225 <= 1000 && typeof (Scheduler) != "undefined") {_RecordType("<7841,7850,259>",(Scheduler)); Inst225++; } } catch(e) {}
/**
 * Suspend the currently executing task and return the next task control block
 * to run.  If new work is added to the suspended task it will be made runnable.
 */


Scheduler.prototype.suspendCurrent = function () {
try { if (Inst237 <= 1000 && typeof (e) != "undefined") {_RecordType("<8293,8294,278>",(e)); Inst237++; } } catch(e) {}
  try {
try { if (Inst235 <= 1000 && typeof (this.currentTcb.markAsSuspended) != "undefined") {_RecordType("<8247,8278,277>",(this.currentTcb.markAsSuspended)); Inst235++; } } catch(e) {}try { if (Inst236 <= 1000 && typeof (this.currentTcb) != "undefined") {_RecordType("<8247,8262,277>",(this.currentTcb)); Inst236++; } } catch(e) {}
    this.currentTcb.markAsSuspended();
  } catch (e) {
    ;
  }

try { if (Inst239 <= 1000 && typeof (e) != "undefined") {_RecordType("<8356,8357,284>",(e)); Inst239++; } } catch(e) {}
  try {
try { if (Inst238 <= 1000 && typeof (this.currentTcb) != "undefined") {_RecordType("<8328,8343,283>",(this.currentTcb)); Inst238++; } } catch(e) {}
    return this.currentTcb;
  } catch (e) {
    ;
  }
};
try { if (Inst232 <= 1000 && typeof (Scheduler.prototype.suspendCurrent) != "undefined") {_RecordType("<8184,8218,275>",(Scheduler.prototype.suspendCurrent)); Inst232++; } } catch(e) {}try { if (Inst233 <= 1000 && typeof (Scheduler.prototype) != "undefined") {_RecordType("<8184,8203,275>",(Scheduler.prototype)); Inst233++; } } catch(e) {}try { if (Inst234 <= 1000 && typeof (Scheduler) != "undefined") {_RecordType("<8184,8193,275>",(Scheduler)); Inst234++; } } catch(e) {}
/**
 * Add the specified packet to the end of the worklist used by the task
 * associated with the packet and make the task runnable if it is currently
 * suspended.
 * @param {Packet} packet the packet to add
 */


Scheduler.prototype.queue = function (packet) {
try { if (Inst243 <= 1000 && typeof (packet) != "undefined") {_RecordType("<8628,8634,296>",(packet)); Inst243++; } } catch(e) {}
try { if (Inst254 <= 1000 && typeof (e) != "undefined") {_RecordType("<8785,8786,306>",(e)); Inst254++; } } catch(e) {}
  try {
try { if (Inst245 <= 1000 && typeof (this.blocks[packet.id]) != "undefined") {_RecordType("<8658,8680,298>",(this.blocks[packet.id])); Inst245++; } } catch(e) {}try { if (Inst246 <= 1000 && typeof (this.blocks) != "undefined") {_RecordType("<8658,8669,298>",(this.blocks)); Inst246++; } } catch(e) {}try { if (Inst247 <= 1000 && typeof (packet.id) != "undefined") {_RecordType("<8670,8679,298>",(packet.id)); Inst247++; } } catch(e) {}try { if (Inst248 <= 1000 && typeof (packet) != "undefined") {_RecordType("<8670,8676,298>",(packet)); Inst248++; } } catch(e) {}
    var t = this.blocks[packet.id];
try { if (Inst244 <= 1000 && typeof (t) != "undefined") {_RecordType("<8654,8655,298>",(t)); Inst244++; } } catch(e) {}

try { if (Inst249 <= 1000 && typeof (t) != "undefined") {_RecordType("<8691,8692,300>",(t)); Inst249++; } } catch(e) {}
    if (t == null) {
try { if (Inst250 <= 1000 && typeof (t) != "undefined") {_RecordType("<8717,8718,301>",(t)); Inst250++; } } catch(e) {}
      return t;
    }

try { if (Inst251 <= 1000 && typeof (this.queueCount) != "undefined") {_RecordType("<8731,8746,304>",(this.queueCount)); Inst251++; } } catch(e) {}
    this.queueCount++;
    packet.link = null;
try { if (Inst252 <= 1000 && typeof (packet.link) != "undefined") {_RecordType("<8754,8765,305>",(packet.link)); Inst252++; } } catch(e) {}try { if (Inst253 <= 1000 && typeof (packet) != "undefined") {_RecordType("<8754,8760,305>",(packet)); Inst253++; } } catch(e) {}
  } catch (e) {
    ;
  }

try { if (Inst257 <= 1000 && typeof (this.currentId) != "undefined") {_RecordType("<8815,8829,310>",(this.currentId)); Inst257++; } } catch(e) {}
  packet.id = this.currentId;
try { if (Inst255 <= 1000 && typeof (packet.id) != "undefined") {_RecordType("<8803,8812,310>",(packet.id)); Inst255++; } } catch(e) {}try { if (Inst256 <= 1000 && typeof (packet) != "undefined") {_RecordType("<8803,8809,310>",(packet)); Inst256++; } } catch(e) {}
try { if (Inst258 <= 1000 && typeof (t.checkPriorityAdd) != "undefined") {_RecordType("<8840,8858,311>",(t.checkPriorityAdd)); Inst258++; } } catch(e) {}try { if (Inst259 <= 1000 && typeof (t) != "undefined") {_RecordType("<8840,8841,311>",(t)); Inst259++; } } catch(e) {}try { if (Inst260 <= 1000 && typeof (this.currentTcb) != "undefined") {_RecordType("<8859,8874,311>",(this.currentTcb)); Inst260++; } } catch(e) {}try { if (Inst261 <= 1000 && typeof (packet) != "undefined") {_RecordType("<8876,8882,311>",(packet)); Inst261++; } } catch(e) {}
  return t.checkPriorityAdd(this.currentTcb, packet);
};
try { if (Inst240 <= 1000 && typeof (Scheduler.prototype.queue) != "undefined") {_RecordType("<8590,8615,296>",(Scheduler.prototype.queue)); Inst240++; } } catch(e) {}try { if (Inst241 <= 1000 && typeof (Scheduler.prototype) != "undefined") {_RecordType("<8590,8609,296>",(Scheduler.prototype)); Inst241++; } } catch(e) {}try { if (Inst242 <= 1000 && typeof (Scheduler) != "undefined") {_RecordType("<8590,8599,296>",(Scheduler)); Inst242++; } } catch(e) {}
/**
 * A task control block manages a task and the queue of work packages associated
 * with it.
 * @param {TaskControlBlock} link the preceding block in the linked block list
 * @param {int} id the id of this block
 * @param {int} priority the priority of this block
 * @param {Packet} queue the queue of packages to be processed by the task
 * @param {Task} task the task
 * @constructor
 */


try { if (Inst262 <= 1000 && typeof (TaskControlBlock) != "undefined") {_RecordType("<9293,9309,325>",(TaskControlBlock)); Inst262++; } } catch(e) {}
function TaskControlBlock(link, id, priority, queue, task) {
try { if (Inst263 <= 1000 && typeof (link) != "undefined") {_RecordType("<9310,9314,325>",(link)); Inst263++; } } catch(e) {}try { if (Inst264 <= 1000 && typeof (id) != "undefined") {_RecordType("<9316,9318,325>",(id)); Inst264++; } } catch(e) {}try { if (Inst265 <= 1000 && typeof (priority) != "undefined") {_RecordType("<9320,9328,325>",(priority)); Inst265++; } } catch(e) {}try { if (Inst266 <= 1000 && typeof (queue) != "undefined") {_RecordType("<9330,9335,325>",(queue)); Inst266++; } } catch(e) {}try { if (Inst267 <= 1000 && typeof (task) != "undefined") {_RecordType("<9337,9341,325>",(task)); Inst267++; } } catch(e) {}
try { if (Inst278 <= 1000 && typeof (e) != "undefined") {_RecordType("<9480,9481,332>",(e)); Inst278++; } } catch(e) {}
  try {
try { if (Inst269 <= 1000 && typeof (link) != "undefined") {_RecordType("<9369,9373,327>",(link)); Inst269++; } } catch(e) {}
    this.link = link;
try { if (Inst268 <= 1000 && typeof (this.link) != "undefined") {_RecordType("<9357,9366,327>",(this.link)); Inst268++; } } catch(e) {}
try { if (Inst271 <= 1000 && typeof (id) != "undefined") {_RecordType("<9389,9391,328>",(id)); Inst271++; } } catch(e) {}
    this.id = id;
try { if (Inst270 <= 1000 && typeof (this.id) != "undefined") {_RecordType("<9379,9386,328>",(this.id)); Inst270++; } } catch(e) {}
try { if (Inst273 <= 1000 && typeof (priority) != "undefined") {_RecordType("<9413,9421,329>",(priority)); Inst273++; } } catch(e) {}
    this.priority = priority;
try { if (Inst272 <= 1000 && typeof (this.priority) != "undefined") {_RecordType("<9397,9410,329>",(this.priority)); Inst272++; } } catch(e) {}
try { if (Inst275 <= 1000 && typeof (queue) != "undefined") {_RecordType("<9440,9445,330>",(queue)); Inst275++; } } catch(e) {}
    this.queue = queue;
try { if (Inst274 <= 1000 && typeof (this.queue) != "undefined") {_RecordType("<9427,9437,330>",(this.queue)); Inst274++; } } catch(e) {}
try { if (Inst277 <= 1000 && typeof (task) != "undefined") {_RecordType("<9463,9467,331>",(task)); Inst277++; } } catch(e) {}
    this.task = task;
try { if (Inst276 <= 1000 && typeof (this.task) != "undefined") {_RecordType("<9451,9460,331>",(this.task)); Inst276++; } } catch(e) {}
  } catch (e) {
    ;
  }

try { if (Inst284 <= 1000 && typeof (e) != "undefined") {_RecordType("<9640,9641,342>",(e)); Inst284++; } } catch(e) {}
  try {
try { if (Inst279 <= 1000 && typeof (queue) != "undefined") {_RecordType("<9512,9517,337>",(queue)); Inst279++; } } catch(e) {}
    if (queue == null) {
try { if (Inst281 <= 1000 && typeof (STATE_SUSPENDED) != "undefined") {_RecordType("<9548,9563,338>",(STATE_SUSPENDED)); Inst281++; } } catch(e) {}
      this.state = STATE_SUSPENDED;
try { if (Inst280 <= 1000 && typeof (this.state) != "undefined") {_RecordType("<9535,9545,338>",(this.state)); Inst280++; } } catch(e) {}
    } else {
try { if (Inst283 <= 1000 && typeof (STATE_SUSPENDED_RUNNABLE) != "undefined") {_RecordType("<9597,9621,340>",(STATE_SUSPENDED_RUNNABLE)); Inst283++; } } catch(e) {}
      this.state = STATE_SUSPENDED_RUNNABLE;
try { if (Inst282 <= 1000 && typeof (this.state) != "undefined") {_RecordType("<9584,9594,340>",(this.state)); Inst282++; } } catch(e) {}
    }
  } catch (e) {
    ;
  }
}
/**
 * The task is running and is currently scheduled.
 */


var STATE_RUNNING = 0;
try { if (Inst285 <= 1000 && typeof (STATE_RUNNING) != "undefined") {_RecordType("<9722,9735,351>",(STATE_RUNNING)); Inst285++; } } catch(e) {}
/**
 * The task has packets left to process.
 */

var STATE_RUNNABLE = 1;
try { if (Inst286 <= 1000 && typeof (STATE_RUNNABLE) != "undefined") {_RecordType("<9795,9809,356>",(STATE_RUNNABLE)); Inst286++; } } catch(e) {}
/**
 * The task is not currently running.  The task is not blocked as such and may
 * be started by the scheduler.
 */

var STATE_SUSPENDED = 2;
try { if (Inst287 <= 1000 && typeof (STATE_SUSPENDED) != "undefined") {_RecordType("<9939,9954,362>",(STATE_SUSPENDED)); Inst287++; } } catch(e) {}
/**
 * The task is blocked and cannot be run until it is explicitly released.
 */

var STATE_HELD = 4;
try { if (Inst288 <= 1000 && typeof (STATE_HELD) != "undefined") {_RecordType("<10047,10057,367>",(STATE_HELD)); Inst288++; } } catch(e) {}
try { if (Inst290 <= 1000 && typeof (STATE_SUSPENDED) != "undefined") {_RecordType("<10094,10109,368>",(STATE_SUSPENDED)); Inst290++; } } catch(e) {}try { if (Inst291 <= 1000 && typeof (STATE_RUNNABLE) != "undefined") {_RecordType("<10112,10126,368>",(STATE_RUNNABLE)); Inst291++; } } catch(e) {}
var STATE_SUSPENDED_RUNNABLE = STATE_SUSPENDED | STATE_RUNNABLE;
try { if (Inst289 <= 1000 && typeof (STATE_SUSPENDED_RUNNABLE) != "undefined") {_RecordType("<10067,10091,368>",(STATE_SUSPENDED_RUNNABLE)); Inst289++; } } catch(e) {}
try { if (Inst293 <= 1000 && typeof (STATE_HELD) != "undefined") {_RecordType("<10150,10160,369>",(STATE_HELD)); Inst293++; } } catch(e) {}
var STATE_NOT_HELD = ~STATE_HELD;
try { if (Inst292 <= 1000 && typeof (STATE_NOT_HELD) != "undefined") {_RecordType("<10132,10146,369>",(STATE_NOT_HELD)); Inst292++; } } catch(e) {}

TaskControlBlock.prototype.setRunning = function () {
try { if (Inst299 <= 1000 && typeof (e) != "undefined") {_RecordType("<10268,10269,374>",(e)); Inst299++; } } catch(e) {}
  try {
try { if (Inst298 <= 1000 && typeof (STATE_RUNNING) != "undefined") {_RecordType("<10242,10255,373>",(STATE_RUNNING)); Inst298++; } } catch(e) {}
    this.state = STATE_RUNNING;
try { if (Inst297 <= 1000 && typeof (this.state) != "undefined") {_RecordType("<10229,10239,373>",(this.state)); Inst297++; } } catch(e) {}
  } catch (e) {
    ;
  }
};
try { if (Inst294 <= 1000 && typeof (TaskControlBlock.prototype.setRunning) != "undefined") {_RecordType("<10163,10200,371>",(TaskControlBlock.prototype.setRunning)); Inst294++; } } catch(e) {}try { if (Inst295 <= 1000 && typeof (TaskControlBlock.prototype) != "undefined") {_RecordType("<10163,10189,371>",(TaskControlBlock.prototype)); Inst295++; } } catch(e) {}try { if (Inst296 <= 1000 && typeof (TaskControlBlock) != "undefined") {_RecordType("<10163,10179,371>",(TaskControlBlock)); Inst296++; } } catch(e) {}

TaskControlBlock.prototype.markAsNotHeld = function () {
try { if (Inst306 <= 1000 && typeof (e) != "undefined") {_RecordType("<10409,10410,382>",(e)); Inst306++; } } catch(e) {}
  try {
try { if (Inst304 <= 1000 && typeof (this.state) != "undefined") {_RecordType("<10369,10379,381>",(this.state)); Inst304++; } } catch(e) {}try { if (Inst305 <= 1000 && typeof (STATE_NOT_HELD) != "undefined") {_RecordType("<10382,10396,381>",(STATE_NOT_HELD)); Inst305++; } } catch(e) {}
    this.state = this.state & STATE_NOT_HELD;
try { if (Inst303 <= 1000 && typeof (this.state) != "undefined") {_RecordType("<10356,10366,381>",(this.state)); Inst303++; } } catch(e) {}
  } catch (e) {
    ;
  }
};
try { if (Inst300 <= 1000 && typeof (TaskControlBlock.prototype.markAsNotHeld) != "undefined") {_RecordType("<10287,10327,379>",(TaskControlBlock.prototype.markAsNotHeld)); Inst300++; } } catch(e) {}try { if (Inst301 <= 1000 && typeof (TaskControlBlock.prototype) != "undefined") {_RecordType("<10287,10313,379>",(TaskControlBlock.prototype)); Inst301++; } } catch(e) {}try { if (Inst302 <= 1000 && typeof (TaskControlBlock) != "undefined") {_RecordType("<10287,10303,379>",(TaskControlBlock)); Inst302++; } } catch(e) {}

TaskControlBlock.prototype.markAsHeld = function () {
try { if (Inst313 <= 1000 && typeof (e) != "undefined") {_RecordType("<10543,10544,390>",(e)); Inst313++; } } catch(e) {}
  try {
try { if (Inst311 <= 1000 && typeof (this.state) != "undefined") {_RecordType("<10507,10517,389>",(this.state)); Inst311++; } } catch(e) {}try { if (Inst312 <= 1000 && typeof (STATE_HELD) != "undefined") {_RecordType("<10520,10530,389>",(STATE_HELD)); Inst312++; } } catch(e) {}
    this.state = this.state | STATE_HELD;
try { if (Inst310 <= 1000 && typeof (this.state) != "undefined") {_RecordType("<10494,10504,389>",(this.state)); Inst310++; } } catch(e) {}
  } catch (e) {
    ;
  }
};
try { if (Inst307 <= 1000 && typeof (TaskControlBlock.prototype.markAsHeld) != "undefined") {_RecordType("<10428,10465,387>",(TaskControlBlock.prototype.markAsHeld)); Inst307++; } } catch(e) {}try { if (Inst308 <= 1000 && typeof (TaskControlBlock.prototype) != "undefined") {_RecordType("<10428,10454,387>",(TaskControlBlock.prototype)); Inst308++; } } catch(e) {}try { if (Inst309 <= 1000 && typeof (TaskControlBlock) != "undefined") {_RecordType("<10428,10444,387>",(TaskControlBlock)); Inst309++; } } catch(e) {}

TaskControlBlock.prototype.isHeldOrSuspended = function () {
try { if (Inst321 <= 1000 && typeof (e) != "undefined") {_RecordType("<10718,10719,398>",(e)); Inst321++; } } catch(e) {}
  try {
try { if (Inst317 <= 1000 && typeof (this.state) != "undefined") {_RecordType("<10643,10653,397>",(this.state)); Inst317++; } } catch(e) {}try { if (Inst318 <= 1000 && typeof (STATE_HELD) != "undefined") {_RecordType("<10656,10666,397>",(STATE_HELD)); Inst318++; } } catch(e) {}try { if (Inst319 <= 1000 && typeof (this.state) != "undefined") {_RecordType("<10676,10686,397>",(this.state)); Inst319++; } } catch(e) {}try { if (Inst320 <= 1000 && typeof (STATE_SUSPENDED) != "undefined") {_RecordType("<10690,10705,397>",(STATE_SUSPENDED)); Inst320++; } } catch(e) {}
    return (this.state & STATE_HELD) != 0 || this.state == STATE_SUSPENDED;
  } catch (e) {
try { if (Inst322 <= 1000 && typeof (this.state) != "undefined") {_RecordType("<10735,10745,399>",(this.state)); Inst322++; } } catch(e) {}try { if (Inst323 <= 1000 && typeof (STATE_HELD) != "undefined") {_RecordType("<10748,10758,399>",(STATE_HELD)); Inst323++; } } catch(e) {}try { if (Inst324 <= 1000 && typeof (this.state) != "undefined") {_RecordType("<10768,10778,399>",(this.state)); Inst324++; } } catch(e) {}try { if (Inst325 <= 1000 && typeof (STATE_SUSPENDED) != "undefined") {_RecordType("<10782,10797,399>",(STATE_SUSPENDED)); Inst325++; } } catch(e) {}
    return (this.state & STATE_HELD) != 0 || this.state == STATE_SUSPENDED;
  }
};
try { if (Inst314 <= 1000 && typeof (TaskControlBlock.prototype.isHeldOrSuspended) != "undefined") {_RecordType("<10562,10606,395>",(TaskControlBlock.prototype.isHeldOrSuspended)); Inst314++; } } catch(e) {}try { if (Inst315 <= 1000 && typeof (TaskControlBlock.prototype) != "undefined") {_RecordType("<10562,10588,395>",(TaskControlBlock.prototype)); Inst315++; } } catch(e) {}try { if (Inst316 <= 1000 && typeof (TaskControlBlock) != "undefined") {_RecordType("<10562,10578,395>",(TaskControlBlock)); Inst316++; } } catch(e) {}

TaskControlBlock.prototype.markAsSuspended = function () {
try { if (Inst332 <= 1000 && typeof (e) != "undefined") {_RecordType("<10932,10933,406>",(e)); Inst332++; } } catch(e) {}
  try {
try { if (Inst330 <= 1000 && typeof (this.state) != "undefined") {_RecordType("<10891,10901,405>",(this.state)); Inst330++; } } catch(e) {}try { if (Inst331 <= 1000 && typeof (STATE_SUSPENDED) != "undefined") {_RecordType("<10904,10919,405>",(STATE_SUSPENDED)); Inst331++; } } catch(e) {}
    this.state = this.state | STATE_SUSPENDED;
try { if (Inst329 <= 1000 && typeof (this.state) != "undefined") {_RecordType("<10878,10888,405>",(this.state)); Inst329++; } } catch(e) {}
  } catch (e) {
try { if (Inst334 <= 1000 && typeof (this.state) != "undefined") {_RecordType("<10954,10964,407>",(this.state)); Inst334++; } } catch(e) {}try { if (Inst335 <= 1000 && typeof (STATE_SUSPENDED) != "undefined") {_RecordType("<10967,10982,407>",(STATE_SUSPENDED)); Inst335++; } } catch(e) {}
    this.state = this.state | STATE_SUSPENDED;
try { if (Inst333 <= 1000 && typeof (this.state) != "undefined") {_RecordType("<10941,10951,407>",(this.state)); Inst333++; } } catch(e) {}
  }
};
try { if (Inst326 <= 1000 && typeof (TaskControlBlock.prototype.markAsSuspended) != "undefined") {_RecordType("<10807,10849,403>",(TaskControlBlock.prototype.markAsSuspended)); Inst326++; } } catch(e) {}try { if (Inst327 <= 1000 && typeof (TaskControlBlock.prototype) != "undefined") {_RecordType("<10807,10833,403>",(TaskControlBlock.prototype)); Inst327++; } } catch(e) {}try { if (Inst328 <= 1000 && typeof (TaskControlBlock) != "undefined") {_RecordType("<10807,10823,403>",(TaskControlBlock)); Inst328++; } } catch(e) {}

TaskControlBlock.prototype.markAsRunnable = function () {
try { if (Inst342 <= 1000 && typeof (e) != "undefined") {_RecordType("<11115,11116,414>",(e)); Inst342++; } } catch(e) {}
  try {
try { if (Inst340 <= 1000 && typeof (this.state) != "undefined") {_RecordType("<11075,11085,413>",(this.state)); Inst340++; } } catch(e) {}try { if (Inst341 <= 1000 && typeof (STATE_RUNNABLE) != "undefined") {_RecordType("<11088,11102,413>",(STATE_RUNNABLE)); Inst341++; } } catch(e) {}
    this.state = this.state | STATE_RUNNABLE;
try { if (Inst339 <= 1000 && typeof (this.state) != "undefined") {_RecordType("<11062,11072,413>",(this.state)); Inst339++; } } catch(e) {}
  } catch (e) {
try { if (Inst344 <= 1000 && typeof (this.state) != "undefined") {_RecordType("<11137,11147,415>",(this.state)); Inst344++; } } catch(e) {}try { if (Inst345 <= 1000 && typeof (STATE_RUNNABLE) != "undefined") {_RecordType("<11150,11164,415>",(STATE_RUNNABLE)); Inst345++; } } catch(e) {}
    this.state = this.state | STATE_RUNNABLE;
try { if (Inst343 <= 1000 && typeof (this.state) != "undefined") {_RecordType("<11124,11134,415>",(this.state)); Inst343++; } } catch(e) {}
  }
};
try { if (Inst336 <= 1000 && typeof (TaskControlBlock.prototype.markAsRunnable) != "undefined") {_RecordType("<10992,11033,411>",(TaskControlBlock.prototype.markAsRunnable)); Inst336++; } } catch(e) {}try { if (Inst337 <= 1000 && typeof (TaskControlBlock.prototype) != "undefined") {_RecordType("<10992,11018,411>",(TaskControlBlock.prototype)); Inst337++; } } catch(e) {}try { if (Inst338 <= 1000 && typeof (TaskControlBlock) != "undefined") {_RecordType("<10992,11008,411>",(TaskControlBlock)); Inst338++; } } catch(e) {}
/**
 * Runs this task, if it is ready to be run, and returns the next task to run.
 */


TaskControlBlock.prototype.run = function () {
  var packet;
try { if (Inst349 <= 1000 && typeof (packet) != "undefined") {_RecordType("<11315,11321,424>",(packet)); Inst349++; } } catch(e) {}

try { if (Inst363 <= 1000 && typeof (e) != "undefined") {_RecordType("<11621,11622,439>",(e)); Inst363++; } } catch(e) {}
  try {
try { if (Inst350 <= 1000 && typeof (this.state) != "undefined") {_RecordType("<11340,11350,427>",(this.state)); Inst350++; } } catch(e) {}try { if (Inst351 <= 1000 && typeof (STATE_SUSPENDED_RUNNABLE) != "undefined") {_RecordType("<11354,11378,427>",(STATE_SUSPENDED_RUNNABLE)); Inst351++; } } catch(e) {}
    if (this.state == STATE_SUSPENDED_RUNNABLE) {
try { if (Inst353 <= 1000 && typeof (this.queue) != "undefined") {_RecordType("<11397,11407,428>",(this.queue)); Inst353++; } } catch(e) {}
      packet = this.queue;
try { if (Inst352 <= 1000 && typeof (packet) != "undefined") {_RecordType("<11388,11394,428>",(packet)); Inst352++; } } catch(e) {}
try { if (Inst355 <= 1000 && typeof (packet.link) != "undefined") {_RecordType("<11428,11439,429>",(packet.link)); Inst355++; } } catch(e) {}try { if (Inst356 <= 1000 && typeof (packet) != "undefined") {_RecordType("<11428,11434,429>",(packet)); Inst356++; } } catch(e) {}
      this.queue = packet.link;
try { if (Inst354 <= 1000 && typeof (this.queue) != "undefined") {_RecordType("<11415,11425,429>",(this.queue)); Inst354++; } } catch(e) {}

try { if (Inst357 <= 1000 && typeof (this.queue) != "undefined") {_RecordType("<11452,11462,431>",(this.queue)); Inst357++; } } catch(e) {}
      if (this.queue == null) {
try { if (Inst359 <= 1000 && typeof (STATE_RUNNING) != "undefined") {_RecordType("<11495,11508,432>",(STATE_RUNNING)); Inst359++; } } catch(e) {}
        this.state = STATE_RUNNING;
try { if (Inst358 <= 1000 && typeof (this.state) != "undefined") {_RecordType("<11482,11492,432>",(this.state)); Inst358++; } } catch(e) {}
      } else {
try { if (Inst361 <= 1000 && typeof (STATE_RUNNABLE) != "undefined") {_RecordType("<11546,11560,434>",(STATE_RUNNABLE)); Inst361++; } } catch(e) {}
        this.state = STATE_RUNNABLE;
try { if (Inst360 <= 1000 && typeof (this.state) != "undefined") {_RecordType("<11533,11543,434>",(this.state)); Inst360++; } } catch(e) {}
      }
    } else {
      packet = null;
try { if (Inst362 <= 1000 && typeof (packet) != "undefined") {_RecordType("<11589,11595,437>",(packet)); Inst362++; } } catch(e) {}
    }
  } catch (e) {
    ;
  }

try { if (Inst364 <= 1000 && typeof (this.task.run) != "undefined") {_RecordType("<11646,11659,443>",(this.task.run)); Inst364++; } } catch(e) {}try { if (Inst365 <= 1000 && typeof (this.task) != "undefined") {_RecordType("<11646,11655,443>",(this.task)); Inst365++; } } catch(e) {}try { if (Inst366 <= 1000 && typeof (packet) != "undefined") {_RecordType("<11660,11666,443>",(packet)); Inst366++; } } catch(e) {}
  return this.task.run(packet);
};
try { if (Inst346 <= 1000 && typeof (TaskControlBlock.prototype.run) != "undefined") {_RecordType("<11262,11292,423>",(TaskControlBlock.prototype.run)); Inst346++; } } catch(e) {}try { if (Inst347 <= 1000 && typeof (TaskControlBlock.prototype) != "undefined") {_RecordType("<11262,11288,423>",(TaskControlBlock.prototype)); Inst347++; } } catch(e) {}try { if (Inst348 <= 1000 && typeof (TaskControlBlock) != "undefined") {_RecordType("<11262,11278,423>",(TaskControlBlock)); Inst348++; } } catch(e) {}
/**
 * Adds a packet to the worklist of this block's task, marks this as runnable if
 * necessary, and returns the next runnable object to run (the one
 * with the highest priority).
 */


TaskControlBlock.prototype.checkPriorityAdd = function (task, packet) {
try { if (Inst370 <= 1000 && typeof (task) != "undefined") {_RecordType("<11917,11921,452>",(task)); Inst370++; } } catch(e) {}try { if (Inst371 <= 1000 && typeof (packet) != "undefined") {_RecordType("<11923,11929,452>",(packet)); Inst371++; } } catch(e) {}
try { if (Inst384 <= 1000 && typeof (e) != "undefined") {_RecordType("<12193,12194,466>",(e)); Inst384++; } } catch(e) {}
  try {
try { if (Inst372 <= 1000 && typeof (this.queue) != "undefined") {_RecordType("<11949,11959,454>",(this.queue)); Inst372++; } } catch(e) {}
    if (this.queue == null) {
try { if (Inst374 <= 1000 && typeof (packet) != "undefined") {_RecordType("<11990,11996,455>",(packet)); Inst374++; } } catch(e) {}
      this.queue = packet;
try { if (Inst373 <= 1000 && typeof (this.queue) != "undefined") {_RecordType("<11977,11987,455>",(this.queue)); Inst373++; } } catch(e) {}
try { if (Inst375 <= 1000 && typeof (this.markAsRunnable) != "undefined") {_RecordType("<12004,12023,456>",(this.markAsRunnable)); Inst375++; } } catch(e) {}
      this.markAsRunnable();

try { if (Inst376 <= 1000 && typeof (this.priority) != "undefined") {_RecordType("<12038,12051,458>",(this.priority)); Inst376++; } } catch(e) {}try { if (Inst377 <= 1000 && typeof (task.priority) != "undefined") {_RecordType("<12054,12067,458>",(task.priority)); Inst377++; } } catch(e) {}try { if (Inst378 <= 1000 && typeof (task) != "undefined") {_RecordType("<12054,12058,458>",(task)); Inst378++; } } catch(e) {}
      if (this.priority > task.priority) {
        return this;
      }
    } else {
try { if (Inst380 <= 1000 && typeof (packet.addTo) != "undefined") {_RecordType("<12132,12144,462>",(packet.addTo)); Inst380++; } } catch(e) {}try { if (Inst381 <= 1000 && typeof (packet) != "undefined") {_RecordType("<12132,12138,462>",(packet)); Inst381++; } } catch(e) {}try { if (Inst382 <= 1000 && typeof (this.queue) != "undefined") {_RecordType("<12145,12155,462>",(this.queue)); Inst382++; } } catch(e) {}
      this.queue = packet.addTo(this.queue);
try { if (Inst379 <= 1000 && typeof (this.queue) != "undefined") {_RecordType("<12119,12129,462>",(this.queue)); Inst379++; } } catch(e) {}
    }

try { if (Inst383 <= 1000 && typeof (task) != "undefined") {_RecordType("<12176,12180,465>",(task)); Inst383++; } } catch(e) {}
    return task;
  } catch (e) {
try { if (Inst385 <= 1000 && typeof (task) != "undefined") {_RecordType("<12209,12213,467>",(task)); Inst385++; } } catch(e) {}
    return task;
  }
};
try { if (Inst367 <= 1000 && typeof (TaskControlBlock.prototype.checkPriorityAdd) != "undefined") {_RecordType("<11861,11904,452>",(TaskControlBlock.prototype.checkPriorityAdd)); Inst367++; } } catch(e) {}try { if (Inst368 <= 1000 && typeof (TaskControlBlock.prototype) != "undefined") {_RecordType("<11861,11887,452>",(TaskControlBlock.prototype)); Inst368++; } } catch(e) {}try { if (Inst369 <= 1000 && typeof (TaskControlBlock) != "undefined") {_RecordType("<11861,11877,452>",(TaskControlBlock)); Inst369++; } } catch(e) {}

TaskControlBlock.prototype.toString = function () {
try { if (Inst391 <= 1000 && typeof (e) != "undefined") {_RecordType("<12353,12354,474>",(e)); Inst391++; } } catch(e) {}
  try {
try { if (Inst389 <= 1000 && typeof (this.task) != "undefined") {_RecordType("<12305,12314,473>",(this.task)); Inst389++; } } catch(e) {}try { if (Inst390 <= 1000 && typeof (this.state) != "undefined") {_RecordType("<12323,12333,473>",(this.state)); Inst390++; } } catch(e) {}
    return "tcb { " + this.task + "@" + this.state + " }";
  } catch (e) {
try { if (Inst392 <= 1000 && typeof (this.task) != "undefined") {_RecordType("<12380,12389,475>",(this.task)); Inst392++; } } catch(e) {}try { if (Inst393 <= 1000 && typeof (this.state) != "undefined") {_RecordType("<12398,12408,475>",(this.state)); Inst393++; } } catch(e) {}
    return "tcb { " + this.task + "@" + this.state + " }";
  }
};
try { if (Inst386 <= 1000 && typeof (TaskControlBlock.prototype.toString) != "undefined") {_RecordType("<12223,12258,471>",(TaskControlBlock.prototype.toString)); Inst386++; } } catch(e) {}try { if (Inst387 <= 1000 && typeof (TaskControlBlock.prototype) != "undefined") {_RecordType("<12223,12249,471>",(TaskControlBlock.prototype)); Inst387++; } } catch(e) {}try { if (Inst388 <= 1000 && typeof (TaskControlBlock) != "undefined") {_RecordType("<12223,12239,471>",(TaskControlBlock)); Inst388++; } } catch(e) {}
/**
 * An idle task doesn't do any work itself but cycles control between the two
 * device tasks.
 * @param {Scheduler} scheduler the scheduler that manages this task
 * @param {int} v1 a seed value that controls how the device tasks are scheduled
 * @param {int} count the number of times this task should be scheduled
 * @constructor
 */


try { if (Inst394 <= 1000 && typeof (IdleTask) != "undefined") {_RecordType("<12776,12784,488>",(IdleTask)); Inst394++; } } catch(e) {}
function IdleTask(scheduler, v1, count) {
try { if (Inst395 <= 1000 && typeof (scheduler) != "undefined") {_RecordType("<12785,12794,488>",(scheduler)); Inst395++; } } catch(e) {}try { if (Inst396 <= 1000 && typeof (v1) != "undefined") {_RecordType("<12796,12798,488>",(v1)); Inst396++; } } catch(e) {}try { if (Inst397 <= 1000 && typeof (count) != "undefined") {_RecordType("<12800,12805,488>",(count)); Inst397++; } } catch(e) {}
try { if (Inst404 <= 1000 && typeof (e) != "undefined") {_RecordType("<12902,12903,493>",(e)); Inst404++; } } catch(e) {}
  try {
try { if (Inst399 <= 1000 && typeof (scheduler) != "undefined") {_RecordType("<12838,12847,490>",(scheduler)); Inst399++; } } catch(e) {}
    this.scheduler = scheduler;
try { if (Inst398 <= 1000 && typeof (this.scheduler) != "undefined") {_RecordType("<12821,12835,490>",(this.scheduler)); Inst398++; } } catch(e) {}
try { if (Inst401 <= 1000 && typeof (v1) != "undefined") {_RecordType("<12863,12865,491>",(v1)); Inst401++; } } catch(e) {}
    this.v1 = v1;
try { if (Inst400 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<12853,12860,491>",(this.v1)); Inst400++; } } catch(e) {}
try { if (Inst403 <= 1000 && typeof (count) != "undefined") {_RecordType("<12884,12889,492>",(count)); Inst403++; } } catch(e) {}
    this.count = count;
try { if (Inst402 <= 1000 && typeof (this.count) != "undefined") {_RecordType("<12871,12881,492>",(this.count)); Inst402++; } } catch(e) {}
  } catch (e) {
try { if (Inst406 <= 1000 && typeof (count) != "undefined") {_RecordType("<12924,12929,494>",(count)); Inst406++; } } catch(e) {}
    this.count = count;
try { if (Inst405 <= 1000 && typeof (this.count) != "undefined") {_RecordType("<12911,12921,494>",(this.count)); Inst405++; } } catch(e) {}
  }
}

IdleTask.prototype.run = function (packet) {
try { if (Inst410 <= 1000 && typeof (packet) != "undefined") {_RecordType("<12973,12979,498>",(packet)); Inst410++; } } catch(e) {}
try { if (Inst415 <= 1000 && typeof (e) != "undefined") {_RecordType("<13097,13098,505>",(e)); Inst415++; } } catch(e) {}
  try {
try { if (Inst411 <= 1000 && typeof (this.count) != "undefined") {_RecordType("<12995,13005,500>",(this.count)); Inst411++; } } catch(e) {}
    this.count--;

try { if (Inst412 <= 1000 && typeof (this.count) != "undefined") {_RecordType("<13018,13028,502>",(this.count)); Inst412++; } } catch(e) {}
    if (this.count == 0) {
try { if (Inst413 <= 1000 && typeof (this.scheduler.holdCurrent) != "undefined") {_RecordType("<13050,13076,503>",(this.scheduler.holdCurrent)); Inst413++; } } catch(e) {}try { if (Inst414 <= 1000 && typeof (this.scheduler) != "undefined") {_RecordType("<13050,13064,503>",(this.scheduler)); Inst414++; } } catch(e) {}
      return this.scheduler.holdCurrent();
    }
  } catch (e) {
    ;
  }

try { if (Inst427 <= 1000 && typeof (e) != "undefined") {_RecordType("<13350,13351,517>",(e)); Inst427++; } } catch(e) {}
  try {
try { if (Inst416 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<13130,13137,510>",(this.v1)); Inst416++; } } catch(e) {}
    if ((this.v1 & 1) == 0) {
try { if (Inst418 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<13167,13174,511>",(this.v1)); Inst418++; } } catch(e) {}
      this.v1 = this.v1 >> 1;
try { if (Inst417 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<13157,13164,511>",(this.v1)); Inst417++; } } catch(e) {}
try { if (Inst419 <= 1000 && typeof (this.scheduler.release) != "undefined") {_RecordType("<13194,13216,512>",(this.scheduler.release)); Inst419++; } } catch(e) {}try { if (Inst420 <= 1000 && typeof (this.scheduler) != "undefined") {_RecordType("<13194,13208,512>",(this.scheduler)); Inst420++; } } catch(e) {}try { if (Inst421 <= 1000 && typeof (ID_DEVICE_A) != "undefined") {_RecordType("<13217,13228,512>",(ID_DEVICE_A)); Inst421++; } } catch(e) {}
      return this.scheduler.release(ID_DEVICE_A);
    } else {
try { if (Inst423 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<13260,13267,514>",(this.v1)); Inst423++; } } catch(e) {}
      this.v1 = this.v1 >> 1 ^ 0xD008;
try { if (Inst422 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<13250,13257,514>",(this.v1)); Inst422++; } } catch(e) {}
try { if (Inst424 <= 1000 && typeof (this.scheduler.release) != "undefined") {_RecordType("<13296,13318,515>",(this.scheduler.release)); Inst424++; } } catch(e) {}try { if (Inst425 <= 1000 && typeof (this.scheduler) != "undefined") {_RecordType("<13296,13310,515>",(this.scheduler)); Inst425++; } } catch(e) {}try { if (Inst426 <= 1000 && typeof (ID_DEVICE_B) != "undefined") {_RecordType("<13319,13330,515>",(ID_DEVICE_B)); Inst426++; } } catch(e) {}
      return this.scheduler.release(ID_DEVICE_B);
    }
  } catch (e) {
    ;
  }
};
try { if (Inst407 <= 1000 && typeof (IdleTask.prototype.run) != "undefined") {_RecordType("<12938,12960,498>",(IdleTask.prototype.run)); Inst407++; } } catch(e) {}try { if (Inst408 <= 1000 && typeof (IdleTask.prototype) != "undefined") {_RecordType("<12938,12956,498>",(IdleTask.prototype)); Inst408++; } } catch(e) {}try { if (Inst409 <= 1000 && typeof (IdleTask) != "undefined") {_RecordType("<12938,12946,498>",(IdleTask)); Inst409++; } } catch(e) {}

IdleTask.prototype.toString = function () {
try { if (Inst431 <= 1000 && typeof (e) != "undefined") {_RecordType("<13455,13456,525>",(e)); Inst431++; } } catch(e) {}
  try {
    return "IdleTask";
  } catch (e) {
    return "IdleTask";
  }
};
try { if (Inst428 <= 1000 && typeof (IdleTask.prototype.toString) != "undefined") {_RecordType("<13369,13396,522>",(IdleTask.prototype.toString)); Inst428++; } } catch(e) {}try { if (Inst429 <= 1000 && typeof (IdleTask.prototype) != "undefined") {_RecordType("<13369,13387,522>",(IdleTask.prototype)); Inst429++; } } catch(e) {}try { if (Inst430 <= 1000 && typeof (IdleTask) != "undefined") {_RecordType("<13369,13377,522>",(IdleTask)); Inst430++; } } catch(e) {}
/**
 * A task that suspends itself after each time it has been run to simulate
 * waiting for data from an external device.
 * @param {Scheduler} scheduler the scheduler that manages this task
 * @constructor
 */


try { if (Inst432 <= 1000 && typeof (DeviceTask) != "undefined") {_RecordType("<13714,13724,537>",(DeviceTask)); Inst432++; } } catch(e) {}
function DeviceTask(scheduler) {
try { if (Inst433 <= 1000 && typeof (scheduler) != "undefined") {_RecordType("<13725,13734,537>",(scheduler)); Inst433++; } } catch(e) {}
try { if (Inst437 <= 1000 && typeof (e) != "undefined") {_RecordType("<13809,13810,541>",(e)); Inst437++; } } catch(e) {}
  try {
try { if (Inst435 <= 1000 && typeof (scheduler) != "undefined") {_RecordType("<13767,13776,539>",(scheduler)); Inst435++; } } catch(e) {}
    this.scheduler = scheduler;
try { if (Inst434 <= 1000 && typeof (this.scheduler) != "undefined") {_RecordType("<13750,13764,539>",(this.scheduler)); Inst434++; } } catch(e) {}
    this.v1 = null;
try { if (Inst436 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<13782,13789,540>",(this.v1)); Inst436++; } } catch(e) {}
  } catch (e) {
    ;
  }
}

DeviceTask.prototype.run = function (packet) {
try { if (Inst441 <= 1000 && typeof (packet) != "undefined") {_RecordType("<13864,13870,546>",(packet)); Inst441++; } } catch(e) {}
try { if (Inst442 <= 1000 && typeof (packet) != "undefined") {_RecordType("<13880,13886,547>",(packet)); Inst442++; } } catch(e) {}
  if (packet == null) {
try { if (Inst449 <= 1000 && typeof (e) != "undefined") {_RecordType("<14052,14053,555>",(e)); Inst449++; } } catch(e) {}
    try {
try { if (Inst443 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<13918,13925,549>",(this.v1)); Inst443++; } } catch(e) {}
      if (this.v1 == null) {
try { if (Inst444 <= 1000 && typeof (this.scheduler.suspendCurrent) != "undefined") {_RecordType("<13952,13981,550>",(this.scheduler.suspendCurrent)); Inst444++; } } catch(e) {}try { if (Inst445 <= 1000 && typeof (this.scheduler) != "undefined") {_RecordType("<13952,13966,550>",(this.scheduler)); Inst445++; } } catch(e) {}
        return this.scheduler.suspendCurrent();
      }

try { if (Inst447 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<14008,14015,553>",(this.v1)); Inst447++; } } catch(e) {}
      var v = this.v1;
try { if (Inst446 <= 1000 && typeof (v) != "undefined") {_RecordType("<14004,14005,553>",(v)); Inst446++; } } catch(e) {}
      this.v1 = null;
try { if (Inst448 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<14023,14030,554>",(this.v1)); Inst448++; } } catch(e) {}
    } catch (e) {
      ;
    }

try { if (Inst450 <= 1000 && typeof (this.scheduler.queue) != "undefined") {_RecordType("<14083,14103,559>",(this.scheduler.queue)); Inst450++; } } catch(e) {}try { if (Inst451 <= 1000 && typeof (this.scheduler) != "undefined") {_RecordType("<14083,14097,559>",(this.scheduler)); Inst451++; } } catch(e) {}try { if (Inst452 <= 1000 && typeof (v) != "undefined") {_RecordType("<14104,14105,559>",(v)); Inst452++; } } catch(e) {}
    return this.scheduler.queue(v);
  } else {
try { if (Inst455 <= 1000 && typeof (e) != "undefined") {_RecordType("<14166,14167,563>",(e)); Inst455++; } } catch(e) {}
    try {
try { if (Inst454 <= 1000 && typeof (packet) != "undefined") {_RecordType("<14145,14151,562>",(packet)); Inst454++; } } catch(e) {}
      this.v1 = packet;
try { if (Inst453 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<14135,14142,562>",(this.v1)); Inst453++; } } catch(e) {}
    } catch (e) {
      ;
    }

try { if (Inst456 <= 1000 && typeof (this.scheduler.holdCurrent) != "undefined") {_RecordType("<14197,14223,567>",(this.scheduler.holdCurrent)); Inst456++; } } catch(e) {}try { if (Inst457 <= 1000 && typeof (this.scheduler) != "undefined") {_RecordType("<14197,14211,567>",(this.scheduler)); Inst457++; } } catch(e) {}
    return this.scheduler.holdCurrent();
  }
};
try { if (Inst438 <= 1000 && typeof (DeviceTask.prototype.run) != "undefined") {_RecordType("<13827,13851,546>",(DeviceTask.prototype.run)); Inst438++; } } catch(e) {}try { if (Inst439 <= 1000 && typeof (DeviceTask.prototype) != "undefined") {_RecordType("<13827,13847,546>",(DeviceTask.prototype)); Inst439++; } } catch(e) {}try { if (Inst440 <= 1000 && typeof (DeviceTask) != "undefined") {_RecordType("<13827,13837,546>",(DeviceTask)); Inst440++; } } catch(e) {}

DeviceTask.prototype.toString = function () {
try { if (Inst461 <= 1000 && typeof (e) != "undefined") {_RecordType("<14325,14326,574>",(e)); Inst461++; } } catch(e) {}
  try {
    return "DeviceTask";
  } catch (e) {
    ;
  }
};
try { if (Inst458 <= 1000 && typeof (DeviceTask.prototype.toString) != "undefined") {_RecordType("<14235,14264,571>",(DeviceTask.prototype.toString)); Inst458++; } } catch(e) {}try { if (Inst459 <= 1000 && typeof (DeviceTask.prototype) != "undefined") {_RecordType("<14235,14255,571>",(DeviceTask.prototype)); Inst459++; } } catch(e) {}try { if (Inst460 <= 1000 && typeof (DeviceTask) != "undefined") {_RecordType("<14235,14245,571>",(DeviceTask)); Inst460++; } } catch(e) {}
/**
 * A task that manipulates work packets.
 * @param {Scheduler} scheduler the scheduler that manages this task
 * @param {int} v1 a seed used to specify how work packets are manipulated
 * @param {int} v2 another seed used to specify how work packets are manipulated
 * @constructor
 */


try { if (Inst462 <= 1000 && typeof (WorkerTask) != "undefined") {_RecordType("<14644,14654,587>",(WorkerTask)); Inst462++; } } catch(e) {}
function WorkerTask(scheduler, v1, v2) {
try { if (Inst463 <= 1000 && typeof (scheduler) != "undefined") {_RecordType("<14655,14664,587>",(scheduler)); Inst463++; } } catch(e) {}try { if (Inst464 <= 1000 && typeof (v1) != "undefined") {_RecordType("<14666,14668,587>",(v1)); Inst464++; } } catch(e) {}try { if (Inst465 <= 1000 && typeof (v2) != "undefined") {_RecordType("<14670,14672,587>",(v2)); Inst465++; } } catch(e) {}
try { if (Inst472 <= 1000 && typeof (e) != "undefined") {_RecordType("<14763,14764,592>",(e)); Inst472++; } } catch(e) {}
  try {
try { if (Inst467 <= 1000 && typeof (scheduler) != "undefined") {_RecordType("<14705,14714,589>",(scheduler)); Inst467++; } } catch(e) {}
    this.scheduler = scheduler;
try { if (Inst466 <= 1000 && typeof (this.scheduler) != "undefined") {_RecordType("<14688,14702,589>",(this.scheduler)); Inst466++; } } catch(e) {}
try { if (Inst469 <= 1000 && typeof (v1) != "undefined") {_RecordType("<14730,14732,590>",(v1)); Inst469++; } } catch(e) {}
    this.v1 = v1;
try { if (Inst468 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<14720,14727,590>",(this.v1)); Inst468++; } } catch(e) {}
try { if (Inst471 <= 1000 && typeof (v2) != "undefined") {_RecordType("<14748,14750,591>",(v2)); Inst471++; } } catch(e) {}
    this.v2 = v2;
try { if (Inst470 <= 1000 && typeof (this.v2) != "undefined") {_RecordType("<14738,14745,591>",(this.v2)); Inst470++; } } catch(e) {}
  } catch (e) {
    ;
  }
}

WorkerTask.prototype.run = function (packet) {
try { if (Inst476 <= 1000 && typeof (packet) != "undefined") {_RecordType("<14818,14824,597>",(packet)); Inst476++; } } catch(e) {}
try { if (Inst477 <= 1000 && typeof (packet) != "undefined") {_RecordType("<14834,14840,598>",(packet)); Inst477++; } } catch(e) {}
  if (packet == null) {
try { if (Inst478 <= 1000 && typeof (this.scheduler.suspendCurrent) != "undefined") {_RecordType("<14863,14892,599>",(this.scheduler.suspendCurrent)); Inst478++; } } catch(e) {}try { if (Inst479 <= 1000 && typeof (this.scheduler) != "undefined") {_RecordType("<14863,14877,599>",(this.scheduler)); Inst479++; } } catch(e) {}
    return this.scheduler.suspendCurrent();
  } else {
try { if (Inst491 <= 1000 && typeof (e) != "undefined") {_RecordType("<15103,15104,610>",(e)); Inst491++; } } catch(e) {}
    try {
try { if (Inst480 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<14927,14934,602>",(this.v1)); Inst480++; } } catch(e) {}try { if (Inst481 <= 1000 && typeof (ID_HANDLER_A) != "undefined") {_RecordType("<14938,14950,602>",(ID_HANDLER_A)); Inst481++; } } catch(e) {}
      if (this.v1 == ID_HANDLER_A) {
try { if (Inst483 <= 1000 && typeof (ID_HANDLER_B) != "undefined") {_RecordType("<14972,14984,603>",(ID_HANDLER_B)); Inst483++; } } catch(e) {}
        this.v1 = ID_HANDLER_B;
try { if (Inst482 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<14962,14969,603>",(this.v1)); Inst482++; } } catch(e) {}
      } else {
try { if (Inst485 <= 1000 && typeof (ID_HANDLER_A) != "undefined") {_RecordType("<15019,15031,605>",(ID_HANDLER_A)); Inst485++; } } catch(e) {}
        this.v1 = ID_HANDLER_A;
try { if (Inst484 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<15009,15016,605>",(this.v1)); Inst484++; } } catch(e) {}
      }

try { if (Inst488 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<15060,15067,608>",(this.v1)); Inst488++; } } catch(e) {}
      packet.id = this.v1;
try { if (Inst486 <= 1000 && typeof (packet.id) != "undefined") {_RecordType("<15048,15057,608>",(packet.id)); Inst486++; } } catch(e) {}try { if (Inst487 <= 1000 && typeof (packet) != "undefined") {_RecordType("<15048,15054,608>",(packet)); Inst487++; } } catch(e) {}
      packet.a1 = 0;
try { if (Inst489 <= 1000 && typeof (packet.a1) != "undefined") {_RecordType("<15075,15084,609>",(packet.a1)); Inst489++; } } catch(e) {}try { if (Inst490 <= 1000 && typeof (packet) != "undefined") {_RecordType("<15075,15081,609>",(packet)); Inst490++; } } catch(e) {}
    } catch (e) {
      ;
    }

    for (var i = 0; i < DATA_SIZE; i++) {
try { if (Inst492 <= 1000 && typeof (i) != "undefined") {_RecordType("<15136,15137,614>",(i)); Inst492++; } } catch(e) {}try { if (Inst493 <= 1000 && typeof (i) != "undefined") {_RecordType("<15143,15144,614>",(i)); Inst493++; } } catch(e) {}try { if (Inst494 <= 1000 && typeof (DATA_SIZE) != "undefined") {_RecordType("<15147,15156,614>",(DATA_SIZE)); Inst494++; } } catch(e) {}try { if (Inst495 <= 1000 && typeof (i) != "undefined") {_RecordType("<15158,15159,614>",(i)); Inst495++; } } catch(e) {}
try { if (Inst503 <= 1000 && typeof (e) != "undefined") {_RecordType("<15306,15307,623>",(e)); Inst503++; } } catch(e) {}
      try {
try { if (Inst496 <= 1000 && typeof (this.v2) != "undefined") {_RecordType("<15185,15192,616>",(this.v2)); Inst496++; } } catch(e) {}
        this.v2++;

try { if (Inst497 <= 1000 && typeof (this.v2) != "undefined") {_RecordType("<15209,15216,618>",(this.v2)); Inst497++; } } catch(e) {}
        if (this.v2 > 26) {
          this.v2 = 1;
try { if (Inst498 <= 1000 && typeof (this.v2) != "undefined") {_RecordType("<15235,15242,619>",(this.v2)); Inst498++; } } catch(e) {}
        }

try { if (Inst502 <= 1000 && typeof (this.v2) != "undefined") {_RecordType("<15282,15289,622>",(this.v2)); Inst502++; } } catch(e) {}
        packet.a2[i] = this.v2;
try { if (Inst499 <= 1000 && typeof (packet.a2[i]) != "undefined") {_RecordType("<15267,15279,622>",(packet.a2[i])); Inst499++; } } catch(e) {}try { if (Inst500 <= 1000 && typeof (packet.a2) != "undefined") {_RecordType("<15267,15276,622>",(packet.a2)); Inst500++; } } catch(e) {}try { if (Inst501 <= 1000 && typeof (packet) != "undefined") {_RecordType("<15267,15273,622>",(packet)); Inst501++; } } catch(e) {}
      } catch (e) {
        ;
      }
    }

try { if (Inst504 <= 1000 && typeof (this.scheduler.queue) != "undefined") {_RecordType("<15347,15367,628>",(this.scheduler.queue)); Inst504++; } } catch(e) {}try { if (Inst505 <= 1000 && typeof (this.scheduler) != "undefined") {_RecordType("<15347,15361,628>",(this.scheduler)); Inst505++; } } catch(e) {}try { if (Inst506 <= 1000 && typeof (packet) != "undefined") {_RecordType("<15368,15374,628>",(packet)); Inst506++; } } catch(e) {}
    return this.scheduler.queue(packet);
  }
};
try { if (Inst473 <= 1000 && typeof (WorkerTask.prototype.run) != "undefined") {_RecordType("<14781,14805,597>",(WorkerTask.prototype.run)); Inst473++; } } catch(e) {}try { if (Inst474 <= 1000 && typeof (WorkerTask.prototype) != "undefined") {_RecordType("<14781,14801,597>",(WorkerTask.prototype)); Inst474++; } } catch(e) {}try { if (Inst475 <= 1000 && typeof (WorkerTask) != "undefined") {_RecordType("<14781,14791,597>",(WorkerTask)); Inst475++; } } catch(e) {}

WorkerTask.prototype.toString = function () {
try { if (Inst510 <= 1000 && typeof (e) != "undefined") {_RecordType("<15475,15476,635>",(e)); Inst510++; } } catch(e) {}
  try {
    return "WorkerTask";
  } catch (e) {
    ;
  }
};
try { if (Inst507 <= 1000 && typeof (WorkerTask.prototype.toString) != "undefined") {_RecordType("<15385,15414,632>",(WorkerTask.prototype.toString)); Inst507++; } } catch(e) {}try { if (Inst508 <= 1000 && typeof (WorkerTask.prototype) != "undefined") {_RecordType("<15385,15405,632>",(WorkerTask.prototype)); Inst508++; } } catch(e) {}try { if (Inst509 <= 1000 && typeof (WorkerTask) != "undefined") {_RecordType("<15385,15395,632>",(WorkerTask)); Inst509++; } } catch(e) {}
/**
 * A task that manipulates work packets and then suspends itself.
 * @param {Scheduler} scheduler the scheduler that manages this task
 * @constructor
 */


try { if (Inst511 <= 1000 && typeof (HandlerTask) != "undefined") {_RecordType("<15663,15674,646>",(HandlerTask)); Inst511++; } } catch(e) {}
function HandlerTask(scheduler) {
try { if (Inst512 <= 1000 && typeof (scheduler) != "undefined") {_RecordType("<15675,15684,646>",(scheduler)); Inst512++; } } catch(e) {}
try { if (Inst517 <= 1000 && typeof (e) != "undefined") {_RecordType("<15779,15780,651>",(e)); Inst517++; } } catch(e) {}
  try {
try { if (Inst514 <= 1000 && typeof (scheduler) != "undefined") {_RecordType("<15717,15726,648>",(scheduler)); Inst514++; } } catch(e) {}
    this.scheduler = scheduler;
try { if (Inst513 <= 1000 && typeof (this.scheduler) != "undefined") {_RecordType("<15700,15714,648>",(this.scheduler)); Inst513++; } } catch(e) {}
    this.v1 = null;
try { if (Inst515 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<15732,15739,649>",(this.v1)); Inst515++; } } catch(e) {}
    this.v2 = null;
try { if (Inst516 <= 1000 && typeof (this.v2) != "undefined") {_RecordType("<15752,15759,650>",(this.v2)); Inst516++; } } catch(e) {}
  } catch (e) {
    ;
  }
}

HandlerTask.prototype.run = function (packet) {
try { if (Inst521 <= 1000 && typeof (packet) != "undefined") {_RecordType("<15835,15841,656>",(packet)); Inst521++; } } catch(e) {}
try { if (Inst534 <= 1000 && typeof (e) != "undefined") {_RecordType("<16039,16040,665>",(e)); Inst534++; } } catch(e) {}
  try {
try { if (Inst522 <= 1000 && typeof (packet) != "undefined") {_RecordType("<15861,15867,658>",(packet)); Inst522++; } } catch(e) {}
    if (packet != null) {
try { if (Inst523 <= 1000 && typeof (packet.kind) != "undefined") {_RecordType("<15889,15900,659>",(packet.kind)); Inst523++; } } catch(e) {}try { if (Inst524 <= 1000 && typeof (packet) != "undefined") {_RecordType("<15889,15895,659>",(packet)); Inst524++; } } catch(e) {}try { if (Inst525 <= 1000 && typeof (KIND_WORK) != "undefined") {_RecordType("<15904,15913,659>",(KIND_WORK)); Inst525++; } } catch(e) {}
      if (packet.kind == KIND_WORK) {
try { if (Inst527 <= 1000 && typeof (packet.addTo) != "undefined") {_RecordType("<15935,15947,660>",(packet.addTo)); Inst527++; } } catch(e) {}try { if (Inst528 <= 1000 && typeof (packet) != "undefined") {_RecordType("<15935,15941,660>",(packet)); Inst528++; } } catch(e) {}try { if (Inst529 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<15948,15955,660>",(this.v1)); Inst529++; } } catch(e) {}
        this.v1 = packet.addTo(this.v1);
try { if (Inst526 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<15925,15932,660>",(this.v1)); Inst526++; } } catch(e) {}
      } else {
try { if (Inst531 <= 1000 && typeof (packet.addTo) != "undefined") {_RecordType("<15991,16003,662>",(packet.addTo)); Inst531++; } } catch(e) {}try { if (Inst532 <= 1000 && typeof (packet) != "undefined") {_RecordType("<15991,15997,662>",(packet)); Inst532++; } } catch(e) {}try { if (Inst533 <= 1000 && typeof (this.v2) != "undefined") {_RecordType("<16004,16011,662>",(this.v2)); Inst533++; } } catch(e) {}
        this.v2 = packet.addTo(this.v2);
try { if (Inst530 <= 1000 && typeof (this.v2) != "undefined") {_RecordType("<15981,15988,662>",(this.v2)); Inst530++; } } catch(e) {}
      }
    }
  } catch (e) {
    ;
  }

try { if (Inst567 <= 1000 && typeof (e) != "undefined") {_RecordType("<16508,16509,688>",(e)); Inst567++; } } catch(e) {}
  try {
try { if (Inst535 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<16071,16078,670>",(this.v1)); Inst535++; } } catch(e) {}
    if (this.v1 != null) {
try { if (Inst537 <= 1000 && typeof (this.v1.a1) != "undefined") {_RecordType("<16108,16118,671>",(this.v1.a1)); Inst537++; } } catch(e) {}try { if (Inst538 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<16108,16115,671>",(this.v1)); Inst538++; } } catch(e) {}
      var count = this.v1.a1;
try { if (Inst536 <= 1000 && typeof (count) != "undefined") {_RecordType("<16100,16105,671>",(count)); Inst536++; } } catch(e) {}
      var v;
try { if (Inst539 <= 1000 && typeof (v) != "undefined") {_RecordType("<16130,16131,672>",(v)); Inst539++; } } catch(e) {}

try { if (Inst540 <= 1000 && typeof (count) != "undefined") {_RecordType("<16144,16149,674>",(count)); Inst540++; } } catch(e) {}try { if (Inst541 <= 1000 && typeof (DATA_SIZE) != "undefined") {_RecordType("<16152,16161,674>",(DATA_SIZE)); Inst541++; } } catch(e) {}
      if (count < DATA_SIZE) {
try { if (Inst542 <= 1000 && typeof (this.v2) != "undefined") {_RecordType("<16177,16184,675>",(this.v2)); Inst542++; } } catch(e) {}
        if (this.v2 != null) {
try { if (Inst544 <= 1000 && typeof (this.v2) != "undefined") {_RecordType("<16210,16217,676>",(this.v2)); Inst544++; } } catch(e) {}
          v = this.v2;
try { if (Inst543 <= 1000 && typeof (v) != "undefined") {_RecordType("<16206,16207,676>",(v)); Inst543++; } } catch(e) {}
try { if (Inst546 <= 1000 && typeof (this.v2.link) != "undefined") {_RecordType("<16239,16251,677>",(this.v2.link)); Inst546++; } } catch(e) {}try { if (Inst547 <= 1000 && typeof (this.v2) != "undefined") {_RecordType("<16239,16246,677>",(this.v2)); Inst547++; } } catch(e) {}
          this.v2 = this.v2.link;
try { if (Inst545 <= 1000 && typeof (this.v2) != "undefined") {_RecordType("<16229,16236,677>",(this.v2)); Inst545++; } } catch(e) {}
try { if (Inst550 <= 1000 && typeof (this.v1.a2[count]) != "undefined") {_RecordType("<16270,16287,678>",(this.v1.a2[count])); Inst550++; } } catch(e) {}try { if (Inst551 <= 1000 && typeof (this.v1.a2) != "undefined") {_RecordType("<16270,16280,678>",(this.v1.a2)); Inst551++; } } catch(e) {}try { if (Inst552 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<16270,16277,678>",(this.v1)); Inst552++; } } catch(e) {}
          v.a1 = this.v1.a2[count];
try { if (Inst548 <= 1000 && typeof (v.a1) != "undefined") {_RecordType("<16263,16267,678>",(v.a1)); Inst548++; } } catch(e) {}try { if (Inst549 <= 1000 && typeof (v) != "undefined") {_RecordType("<16263,16264,678>",(v)); Inst549++; } } catch(e) {}
try { if (Inst555 <= 1000 && typeof (count) != "undefined") {_RecordType("<16312,16317,679>",(count)); Inst555++; } } catch(e) {}
          this.v1.a1 = count + 1;
try { if (Inst553 <= 1000 && typeof (this.v1.a1) != "undefined") {_RecordType("<16299,16309,679>",(this.v1.a1)); Inst553++; } } catch(e) {}try { if (Inst554 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<16299,16306,679>",(this.v1)); Inst554++; } } catch(e) {}
try { if (Inst556 <= 1000 && typeof (this.scheduler.queue) != "undefined") {_RecordType("<16340,16360,680>",(this.scheduler.queue)); Inst556++; } } catch(e) {}try { if (Inst557 <= 1000 && typeof (this.scheduler) != "undefined") {_RecordType("<16340,16354,680>",(this.scheduler)); Inst557++; } } catch(e) {}try { if (Inst558 <= 1000 && typeof (v) != "undefined") {_RecordType("<16361,16362,680>",(v)); Inst558++; } } catch(e) {}
          return this.scheduler.queue(v);
        }
      } else {
try { if (Inst560 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<16402,16409,683>",(this.v1)); Inst560++; } } catch(e) {}
        v = this.v1;
try { if (Inst559 <= 1000 && typeof (v) != "undefined") {_RecordType("<16398,16399,683>",(v)); Inst559++; } } catch(e) {}
try { if (Inst562 <= 1000 && typeof (this.v1.link) != "undefined") {_RecordType("<16429,16441,684>",(this.v1.link)); Inst562++; } } catch(e) {}try { if (Inst563 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<16429,16436,684>",(this.v1)); Inst563++; } } catch(e) {}
        this.v1 = this.v1.link;
try { if (Inst561 <= 1000 && typeof (this.v1) != "undefined") {_RecordType("<16419,16426,684>",(this.v1)); Inst561++; } } catch(e) {}
try { if (Inst564 <= 1000 && typeof (this.scheduler.queue) != "undefined") {_RecordType("<16458,16478,685>",(this.scheduler.queue)); Inst564++; } } catch(e) {}try { if (Inst565 <= 1000 && typeof (this.scheduler) != "undefined") {_RecordType("<16458,16472,685>",(this.scheduler)); Inst565++; } } catch(e) {}try { if (Inst566 <= 1000 && typeof (v) != "undefined") {_RecordType("<16479,16480,685>",(v)); Inst566++; } } catch(e) {}
        return this.scheduler.queue(v);
      }
    }
  } catch (e) {
    ;
  }

try { if (Inst568 <= 1000 && typeof (this.scheduler.suspendCurrent) != "undefined") {_RecordType("<16533,16562,692>",(this.scheduler.suspendCurrent)); Inst568++; } } catch(e) {}try { if (Inst569 <= 1000 && typeof (this.scheduler) != "undefined") {_RecordType("<16533,16547,692>",(this.scheduler)); Inst569++; } } catch(e) {}
  return this.scheduler.suspendCurrent();
};
try { if (Inst518 <= 1000 && typeof (HandlerTask.prototype.run) != "undefined") {_RecordType("<15797,15822,656>",(HandlerTask.prototype.run)); Inst518++; } } catch(e) {}try { if (Inst519 <= 1000 && typeof (HandlerTask.prototype) != "undefined") {_RecordType("<15797,15818,656>",(HandlerTask.prototype)); Inst519++; } } catch(e) {}try { if (Inst520 <= 1000 && typeof (HandlerTask) != "undefined") {_RecordType("<15797,15808,656>",(HandlerTask)); Inst520++; } } catch(e) {}

HandlerTask.prototype.toString = function () {
try { if (Inst573 <= 1000 && typeof (e) != "undefined") {_RecordType("<16662,16663,698>",(e)); Inst573++; } } catch(e) {}
  try {
    return "HandlerTask";
  } catch (e) {
    ;
  }
};
try { if (Inst570 <= 1000 && typeof (HandlerTask.prototype.toString) != "undefined") {_RecordType("<16570,16600,695>",(HandlerTask.prototype.toString)); Inst570++; } } catch(e) {}try { if (Inst571 <= 1000 && typeof (HandlerTask.prototype) != "undefined") {_RecordType("<16570,16591,695>",(HandlerTask.prototype)); Inst571++; } } catch(e) {}try { if (Inst572 <= 1000 && typeof (HandlerTask) != "undefined") {_RecordType("<16570,16581,695>",(HandlerTask)); Inst572++; } } catch(e) {}
/* --- *
 * P a c k e t
 * --- */


var DATA_SIZE = 4;
try { if (Inst574 <= 1000 && typeof (DATA_SIZE) != "undefined") {_RecordType("<16720,16729,707>",(DATA_SIZE)); Inst574++; } } catch(e) {}
/**
 * A simple package of data that is manipulated by the tasks.  The exact layout
 * of the payload data carried by a packet is not importaint, and neither is the
 * nature of the work performed on packets by the tasks.
 *
 * Besides carrying data, packets form linked lists and are hence used both as
 * data and worklists.
 * @param {Packet} link the tail of the linked list of packets
 * @param {int} id an ID for this packet
 * @param {int} kind the type of this packet
 * @constructor
 */

try { if (Inst575 <= 1000 && typeof (Packet) != "undefined") {_RecordType("<17241,17247,721>",(Packet)); Inst575++; } } catch(e) {}
function Packet(link, id, kind) {
try { if (Inst576 <= 1000 && typeof (link) != "undefined") {_RecordType("<17248,17252,721>",(link)); Inst576++; } } catch(e) {}try { if (Inst577 <= 1000 && typeof (id) != "undefined") {_RecordType("<17254,17256,721>",(id)); Inst577++; } } catch(e) {}try { if (Inst578 <= 1000 && typeof (kind) != "undefined") {_RecordType("<17258,17262,721>",(kind)); Inst578++; } } catch(e) {}
try { if (Inst589 <= 1000 && typeof (e) != "undefined") {_RecordType("<17400,17401,728>",(e)); Inst589++; } } catch(e) {}
  try {
try { if (Inst580 <= 1000 && typeof (link) != "undefined") {_RecordType("<17290,17294,723>",(link)); Inst580++; } } catch(e) {}
    this.link = link;
try { if (Inst579 <= 1000 && typeof (this.link) != "undefined") {_RecordType("<17278,17287,723>",(this.link)); Inst579++; } } catch(e) {}
try { if (Inst582 <= 1000 && typeof (id) != "undefined") {_RecordType("<17310,17312,724>",(id)); Inst582++; } } catch(e) {}
    this.id = id;
try { if (Inst581 <= 1000 && typeof (this.id) != "undefined") {_RecordType("<17300,17307,724>",(this.id)); Inst581++; } } catch(e) {}
try { if (Inst584 <= 1000 && typeof (kind) != "undefined") {_RecordType("<17330,17334,725>",(kind)); Inst584++; } } catch(e) {}
    this.kind = kind;
try { if (Inst583 <= 1000 && typeof (this.kind) != "undefined") {_RecordType("<17318,17327,725>",(this.kind)); Inst583++; } } catch(e) {}
    this.a1 = 0;
try { if (Inst585 <= 1000 && typeof (this.a1) != "undefined") {_RecordType("<17340,17347,726>",(this.a1)); Inst585++; } } catch(e) {}
try { if (Inst587 <= 1000 && typeof (Array) != "undefined") {_RecordType("<17371,17376,727>",(Array)); Inst587++; } } catch(e) {}try { if (Inst588 <= 1000 && typeof (DATA_SIZE) != "undefined") {_RecordType("<17377,17386,727>",(DATA_SIZE)); Inst588++; } } catch(e) {}
    this.a2 = new Array(DATA_SIZE);
try { if (Inst586 <= 1000 && typeof (this.a2) != "undefined") {_RecordType("<17357,17364,727>",(this.a2)); Inst586++; } } catch(e) {}
  } catch (e) {
    ;
  }
}
/**
 * Add this packet to the end of a worklist, and return the worklist.
 * @param {Packet} queue the worklist to add this packet to
 */


Packet.prototype.addTo = function (queue) {
try { if (Inst593 <= 1000 && typeof (queue) != "undefined") {_RecordType("<17592,17597,738>",(queue)); Inst593++; } } catch(e) {}
  this.link = null;
try { if (Inst594 <= 1000 && typeof (this.link) != "undefined") {_RecordType("<17603,17612,739>",(this.link)); Inst594++; } } catch(e) {}

try { if (Inst595 <= 1000 && typeof (queue) != "undefined") {_RecordType("<17628,17633,741>",(queue)); Inst595++; } } catch(e) {}
  if (queue == null) {
    return this;
  }

try { if (Inst598 <= 1000 && typeof (queue) != "undefined") {_RecordType("<17692,17697,746>",(queue)); Inst598++; } } catch(e) {}
  var peek,
      next = queue;
try { if (Inst596 <= 1000 && typeof (peek) != "undefined") {_RecordType("<17673,17677,745>",(peek)); Inst596++; } } catch(e) {}try { if (Inst597 <= 1000 && typeof (next) != "undefined") {_RecordType("<17685,17689,746>",(next)); Inst597++; } } catch(e) {}

try { if (Inst600 <= 1000 && typeof (next.link) != "undefined") {_RecordType("<17717,17726,748>",(next.link)); Inst600++; } } catch(e) {}try { if (Inst601 <= 1000 && typeof (next) != "undefined") {_RecordType("<17717,17721,748>",(next)); Inst601++; } } catch(e) {}
  while ((peek = next.link) != null) {
try { if (Inst604 <= 1000 && typeof (e) != "undefined") {_RecordType("<17781,17782,751>",(e)); Inst604++; } } catch(e) {}
    try {
try { if (Inst603 <= 1000 && typeof (peek) != "undefined") {_RecordType("<17762,17766,750>",(peek)); Inst603++; } } catch(e) {}
      next = peek;
try { if (Inst602 <= 1000 && typeof (next) != "undefined") {_RecordType("<17755,17759,750>",(next)); Inst602++; } } catch(e) {}
    } catch (e) {
      ;
    }
  }
try { if (Inst599 <= 1000 && typeof (peek) != "undefined") {_RecordType("<17710,17714,748>",(peek)); Inst599++; } } catch(e) {}

  next.link = this;
try { if (Inst605 <= 1000 && typeof (next.link) != "undefined") {_RecordType("<17807,17816,756>",(next.link)); Inst605++; } } catch(e) {}try { if (Inst606 <= 1000 && typeof (next) != "undefined") {_RecordType("<17807,17811,756>",(next)); Inst606++; } } catch(e) {}
try { if (Inst607 <= 1000 && typeof (queue) != "undefined") {_RecordType("<17834,17839,757>",(queue)); Inst607++; } } catch(e) {}
  return queue;
};
try { if (Inst590 <= 1000 && typeof (Packet.prototype.addTo) != "undefined") {_RecordType("<17557,17579,738>",(Packet.prototype.addTo)); Inst590++; } } catch(e) {}try { if (Inst591 <= 1000 && typeof (Packet.prototype) != "undefined") {_RecordType("<17557,17573,738>",(Packet.prototype)); Inst591++; } } catch(e) {}try { if (Inst592 <= 1000 && typeof (Packet) != "undefined") {_RecordType("<17557,17563,738>",(Packet)); Inst592++; } } catch(e) {}

Packet.prototype.toString = function () {
try { if (Inst611 <= 1000 && typeof (e) != "undefined") {_RecordType("<17927,17928,763>",(e)); Inst611++; } } catch(e) {}
  try {
    return "Packet";
  } catch (e) {
    ;
  }
};
try { if (Inst608 <= 1000 && typeof (Packet.prototype.toString) != "undefined") {_RecordType("<17845,17870,760>",(Packet.prototype.toString)); Inst608++; } } catch(e) {}try { if (Inst609 <= 1000 && typeof (Packet.prototype) != "undefined") {_RecordType("<17845,17861,760>",(Packet.prototype)); Inst609++; } } catch(e) {}try { if (Inst610 <= 1000 && typeof (Packet) != "undefined") {_RecordType("<17845,17851,760>",(Packet)); Inst610++; } } catch(e) {}

for (let i = 0; i < 350; ++i) {
try { if (Inst612 <= 1000 && typeof (i) != "undefined") {_RecordType("<17955,17956,768>",(i)); Inst612++; } } catch(e) {}try { if (Inst613 <= 1000 && typeof (i) != "undefined") {_RecordType("<17962,17963,768>",(i)); Inst613++; } } catch(e) {}try { if (Inst614 <= 1000 && typeof (i) != "undefined") {_RecordType("<17973,17974,768>",(i)); Inst614++; } } catch(e) {}
try { if (Inst615 <= 1000 && typeof (runRichards) != "undefined") {_RecordType("<17980,17991,769>",(runRichards)); Inst615++; } } catch(e) {}
  runRichards();
}

