var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
var Inst102 = 0;
var Inst103 = 0;
var Inst104 = 0;
var Inst105 = 0;
var Inst106 = 0;
var Inst107 = 0;
var Inst108 = 0;
var Inst109 = 0;
var Inst110 = 0;
var Inst111 = 0;
var Inst112 = 0;
var Inst113 = 0;
var Inst114 = 0;
var Inst115 = 0;
var Inst116 = 0;
var Inst117 = 0;
var Inst118 = 0;
var Inst119 = 0;
var Inst120 = 0;
var Inst121 = 0;
var Inst122 = 0;
var Inst123 = 0;
var Inst124 = 0;
var Inst125 = 0;
var Inst126 = 0;
var Inst127 = 0;
var Inst128 = 0;
var Inst129 = 0;
var Inst130 = 0;
var Inst131 = 0;
var Inst132 = 0;
var Inst133 = 0;
var Inst134 = 0;
var Inst135 = 0;
var Inst136 = 0;
var Inst137 = 0;
var Inst138 = 0;
var Inst139 = 0;
var Inst140 = 0;
var Inst141 = 0;
var Inst142 = 0;
var Inst143 = 0;
var Inst144 = 0;
var Inst145 = 0;
var Inst146 = 0;
var Inst147 = 0;
var Inst148 = 0;
var Inst149 = 0;
var Inst150 = 0;
var Inst151 = 0;
var Inst152 = 0;
var Inst153 = 0;
var Inst154 = 0;
var Inst155 = 0;
var Inst156 = 0;
var Inst157 = 0;
var Inst158 = 0;
var Inst159 = 0;
var Inst160 = 0;
var Inst161 = 0;
var Inst162 = 0;
var Inst163 = 0;
var Inst164 = 0;
var Inst165 = 0;
var Inst166 = 0;
var Inst167 = 0;
var Inst168 = 0;
var Inst169 = 0;
var Inst170 = 0;
var Inst171 = 0;
var Inst172 = 0;
var Inst173 = 0;
var Inst174 = 0;
var Inst175 = 0;
var Inst176 = 0;
var Inst177 = 0;
var Inst178 = 0;
var Inst179 = 0;
var Inst180 = 0;
var Inst181 = 0;
var Inst182 = 0;
var Inst183 = 0;
var Inst184 = 0;
var Inst185 = 0;
var Inst186 = 0;
var Inst187 = 0;
var Inst188 = 0;
var Inst189 = 0;
var Inst190 = 0;
var Inst191 = 0;
var Inst192 = 0;
var Inst193 = 0;
var Inst194 = 0;
var Inst195 = 0;
var Inst196 = 0;
var Inst197 = 0;
var Inst198 = 0;
var Inst199 = 0;
var Inst200 = 0;
var Inst201 = 0;
var Inst202 = 0;
var Inst203 = 0;
var Inst204 = 0;
var Inst205 = 0;
var Inst206 = 0;
var Inst207 = 0;
var Inst208 = 0;
var Inst209 = 0;
var Inst210 = 0;
var Inst211 = 0;
var Inst212 = 0;
var Inst213 = 0;
var Inst214 = 0;
var Inst215 = 0;
var Inst216 = 0;
var Inst217 = 0;
var Inst218 = 0;
var Inst219 = 0;
var Inst220 = 0;
var Inst221 = 0;
var Inst222 = 0;
var Inst223 = 0;
var Inst224 = 0;
var Inst225 = 0;
var Inst226 = 0;
var Inst227 = 0;
var Inst228 = 0;
var Inst229 = 0;
var Inst230 = 0;
var Inst231 = 0;
var Inst232 = 0;
var Inst233 = 0;
var Inst234 = 0;
var Inst235 = 0;
var Inst236 = 0;
var Inst237 = 0;
var Inst238 = 0;
var Inst239 = 0;
var Inst240 = 0;
var Inst241 = 0;
var Inst242 = 0;
var Inst243 = 0;
var Inst244 = 0;
var Inst245 = 0;
var Inst246 = 0;
var Inst247 = 0;
var Inst248 = 0;
var Inst249 = 0;
var Inst250 = 0;
var Inst251 = 0;
var Inst252 = 0;
var Inst253 = 0;
var Inst254 = 0;
var Inst255 = 0;
var Inst256 = 0;
var Inst257 = 0;
var Inst258 = 0;
var Inst259 = 0;
var Inst260 = 0;
var Inst261 = 0;
var Inst262 = 0;
var Inst263 = 0;
var Inst264 = 0;
var Inst265 = 0;
var Inst266 = 0;
var Inst267 = 0;
var Inst268 = 0;
var Inst269 = 0;
var Inst270 = 0;
var Inst271 = 0;
var Inst272 = 0;
var Inst273 = 0;
var Inst274 = 0;
var Inst275 = 0;
var Inst276 = 0;
var Inst277 = 0;
var Inst278 = 0;
var Inst279 = 0;
var Inst280 = 0;
var Inst281 = 0;
var Inst282 = 0;
var Inst283 = 0;
var Inst284 = 0;
var Inst285 = 0;
var Inst286 = 0;
var Inst287 = 0;
var Inst288 = 0;
var Inst289 = 0;
var Inst290 = 0;
var Inst291 = 0;
var Inst292 = 0;
var Inst293 = 0;
var Inst294 = 0;
var Inst295 = 0;
var Inst296 = 0;
var Inst297 = 0;
var Inst298 = 0;
var Inst299 = 0;
var Inst300 = 0;
var Inst301 = 0;
var Inst302 = 0;
var Inst303 = 0;
var Inst304 = 0;
var Inst305 = 0;
var Inst306 = 0;
var Inst307 = 0;
var Inst308 = 0;
var Inst309 = 0;
var Inst310 = 0;
var Inst311 = 0;
var Inst312 = 0;
var Inst313 = 0;
var Inst314 = 0;
var Inst315 = 0;
var Inst316 = 0;
var Inst317 = 0;
var Inst318 = 0;
var Inst319 = 0;
var Inst320 = 0;
var Inst321 = 0;
var Inst322 = 0;
var Inst323 = 0;
var Inst324 = 0;
var Inst325 = 0;
var Inst326 = 0;
var Inst327 = 0;
var Inst328 = 0;
var Inst329 = 0;
var Inst330 = 0;
var Inst331 = 0;
var Inst332 = 0;
var Inst333 = 0;
var Inst334 = 0;
var Inst335 = 0;
var Inst336 = 0;
var Inst337 = 0;
var Inst338 = 0;
var Inst339 = 0;
var Inst340 = 0;
var Inst341 = 0;
var Inst342 = 0;
var Inst343 = 0;
var Inst344 = 0;
var Inst345 = 0;
var Inst346 = 0;
var Inst347 = 0;
var Inst348 = 0;
var Inst349 = 0;
var Inst350 = 0;
var Inst351 = 0;
var Inst352 = 0;
var Inst353 = 0;
var Inst354 = 0;
var Inst355 = 0;
var Inst356 = 0;
var Inst357 = 0;
var Inst358 = 0;
var Inst359 = 0;
var Inst360 = 0;
var Inst361 = 0;
var Inst362 = 0;
var Inst363 = 0;
var Inst364 = 0;
var Inst365 = 0;
var Inst366 = 0;
var Inst367 = 0;
var Inst368 = 0;
var Inst369 = 0;
var Inst370 = 0;
var Inst371 = 0;
var Inst372 = 0;
var Inst373 = 0;
var Inst374 = 0;
var Inst375 = 0;
var Inst376 = 0;
var Inst377 = 0;
var Inst378 = 0;
var Inst379 = 0;
var Inst380 = 0;
var Inst381 = 0;
var Inst382 = 0;
var Inst383 = 0;
var Inst384 = 0;
var Inst385 = 0;
var Inst386 = 0;
var Inst387 = 0;
var Inst388 = 0;
var Inst389 = 0;
var Inst390 = 0;
var Inst391 = 0;
var Inst392 = 0;
var Inst393 = 0;
var Inst394 = 0;
var Inst395 = 0;
var Inst396 = 0;
var Inst397 = 0;
var Inst398 = 0;
var Inst399 = 0;
var Inst400 = 0;
var Inst401 = 0;
var Inst402 = 0;
var Inst403 = 0;
var Inst404 = 0;
var Inst405 = 0;
var Inst406 = 0;
var Inst407 = 0;
var Inst408 = 0;
var Inst409 = 0;
var Inst410 = 0;
var Inst411 = 0;
var Inst412 = 0;
var Inst413 = 0;
var Inst414 = 0;
var Inst415 = 0;
var Inst416 = 0;
var Inst417 = 0;
var Inst418 = 0;
var Inst419 = 0;
var Inst420 = 0;
var Inst421 = 0;
var Inst422 = 0;
var Inst423 = 0;
var Inst424 = 0;
var Inst425 = 0;
var Inst426 = 0;
var Inst427 = 0;
var Inst428 = 0;
var Inst429 = 0;
var Inst430 = 0;
var Inst431 = 0;
var Inst432 = 0;
var Inst433 = 0;
var Inst434 = 0;
var Inst435 = 0;
var Inst436 = 0;
var Inst437 = 0;
var Inst438 = 0;
var Inst439 = 0;
var Inst440 = 0;
var Inst441 = 0;
var Inst442 = 0;
var Inst443 = 0;
var Inst444 = 0;
var Inst445 = 0;
var Inst446 = 0;
var Inst447 = 0;
var Inst448 = 0;
var Inst449 = 0;
var Inst450 = 0;
var Inst451 = 0;
var Inst452 = 0;
var Inst453 = 0;
var Inst454 = 0;
var Inst455 = 0;
var Inst456 = 0;
var Inst457 = 0;
var Inst458 = 0;
var Inst459 = 0;
var Inst460 = 0;
var Inst461 = 0;
var Inst462 = 0;
var Inst463 = 0;
var Inst464 = 0;
var Inst465 = 0;
var Inst466 = 0;
var Inst467 = 0;
var Inst468 = 0;
var Inst469 = 0;
var Inst470 = 0;
var Inst471 = 0;
var Inst472 = 0;
var Inst473 = 0;
var Inst474 = 0;
var Inst475 = 0;
var Inst476 = 0;
var Inst477 = 0;
var Inst478 = 0;
var Inst479 = 0;
var Inst480 = 0;
var Inst481 = 0;
var Inst482 = 0;
var Inst483 = 0;
var Inst484 = 0;
var Inst485 = 0;
var Inst486 = 0;
var Inst487 = 0;
var Inst488 = 0;
var Inst489 = 0;
var Inst490 = 0;
var Inst491 = 0;
var Inst492 = 0;
var Inst493 = 0;
var Inst494 = 0;
var Inst495 = 0;
var Inst496 = 0;
var Inst497 = 0;
var Inst498 = 0;
var Inst499 = 0;
var Inst500 = 0;
var Inst501 = 0;
var Inst502 = 0;
var Inst503 = 0;
var Inst504 = 0;
var Inst505 = 0;
var Inst506 = 0;
var Inst507 = 0;
var Inst508 = 0;
var Inst509 = 0;
var Inst510 = 0;
var Inst511 = 0;
var Inst512 = 0;
var Inst513 = 0;
var Inst514 = 0;
var Inst515 = 0;
var Inst516 = 0;
var Inst517 = 0;
var Inst518 = 0;
var Inst519 = 0;
var Inst520 = 0;
var Inst521 = 0;
var Inst522 = 0;
var Inst523 = 0;
var Inst524 = 0;
var Inst525 = 0;
var Inst526 = 0;
var Inst527 = 0;
var Inst528 = 0;
var Inst529 = 0;
var Inst530 = 0;
var Inst531 = 0;
var Inst532 = 0;
var Inst533 = 0;
var Inst534 = 0;
var Inst535 = 0;
var Inst536 = 0;
var Inst537 = 0;
var Inst538 = 0;
var Inst539 = 0;
var Inst540 = 0;
var Inst541 = 0;
var Inst542 = 0;
var Inst543 = 0;
var Inst544 = 0;
var Inst545 = 0;
var Inst546 = 0;
var Inst547 = 0;
var Inst548 = 0;
var Inst549 = 0;
var Inst550 = 0;
var Inst551 = 0;
var Inst552 = 0;
var Inst553 = 0;
var Inst554 = 0;
var Inst555 = 0;
var Inst556 = 0;
var Inst557 = 0;
var Inst558 = 0;
var Inst559 = 0;
var Inst560 = 0;
var Inst561 = 0;
var Inst562 = 0;
var Inst563 = 0;
var Inst564 = 0;
var Inst565 = 0;
var Inst566 = 0;
var Inst567 = 0;
var Inst568 = 0;
var Inst569 = 0;
var Inst570 = 0;
var Inst571 = 0;
var Inst572 = 0;
var Inst573 = 0;
var Inst574 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//@ runNoFTL
try { if (Inst0 <= 1000 && typeof (assert) != "undefined") {_RecordType("<22,28,2>",(assert)); Inst0++; } } catch(e) {}
function assert(testedValue, msg) {
try { if (Inst1 <= 1000 && typeof (testedValue) != "undefined") {_RecordType("<29,40,2>",(testedValue)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (msg) != "undefined") {_RecordType("<42,45,2>",(msg)); Inst2++; } } catch(e) {}
  ;
} // Subclass with overridden [@@species]: Testing ES6 21.2.5.11: 4. Let C be ? SpeciesConstructor(rx, %RegExp%).


(function () {
  let accesses = [];
try { if (Inst3 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<190,198,8>",(accesses)); Inst3++; } } catch(e) {}

try { if (Inst5 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<233,239,10>",(RegExp)); Inst5++; } } catch(e) {}
  class TestRegExp extends RegExp {}
try { if (Inst4 <= 1000 && typeof (TestRegExp) != "undefined") {_RecordType("<214,224,10>",(TestRegExp)); Inst4++; } } catch(e) {}

try { if (Inst6 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<246,267,12>",(Object.defineProperty)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Object) != "undefined") {_RecordType("<246,252,12>",(Object)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (TestRegExp) != "undefined") {_RecordType("<268,278,12>",(TestRegExp)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Symbol.species) != "undefined") {_RecordType("<280,294,12>",(Symbol.species)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<280,286,12>",(Symbol)); Inst10++; } } catch(e) {}
  Object.defineProperty(TestRegExp, Symbol.species, {
    value: function () {
try { if (Inst11 <= 1000 && typeof (accesses.push) != "undefined") {_RecordType("<329,342,14>",(accesses.push)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<329,337,14>",(accesses)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Symbol.species.toString) != "undefined") {_RecordType("<343,366,14>",(Symbol.species.toString)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Symbol.species) != "undefined") {_RecordType("<343,357,14>",(Symbol.species)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<343,349,14>",(Symbol)); Inst15++; } } catch(e) {}
      accesses.push(Symbol.species.toString());
      return /it/y;
    }
  });
try { if (Inst17 <= 1000 && typeof (TestRegExp) != "undefined") {_RecordType("<419,429,18>",(TestRegExp)); Inst17++; } } catch(e) {}
  let obj = new TestRegExp(/it/);
try { if (Inst16 <= 1000 && typeof (obj) != "undefined") {_RecordType("<409,412,18>",(obj)); Inst16++; } } catch(e) {}
  let errorStr;
try { if (Inst18 <= 1000 && typeof (errorStr) != "undefined") {_RecordType("<443,451,19>",(errorStr)); Inst18++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<455,463,20>",(accesses)); Inst19++; } } catch(e) {}
  accesses == "";
  "unexpected call to overridden props";
try { if (Inst21 <= 1000 && typeof (RegExp.prototype[Symbol.split].call) != "undefined") {_RecordType("<527,562,22>",(RegExp.prototype[Symbol.split].call)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (RegExp.prototype[Symbol.split]) != "undefined") {_RecordType("<527,557,22>",(RegExp.prototype[Symbol.split])); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (RegExp.prototype) != "undefined") {_RecordType("<527,543,22>",(RegExp.prototype)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<527,533,22>",(RegExp)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Symbol.split) != "undefined") {_RecordType("<544,556,22>",(Symbol.split)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<544,550,22>",(Symbol)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (obj) != "undefined") {_RecordType("<563,566,22>",(obj)); Inst27++; } } catch(e) {}
  let result = RegExp.prototype[Symbol.split].call(obj, "splitme");
try { if (Inst20 <= 1000 && typeof (result) != "undefined") {_RecordType("<518,524,22>",(result)); Inst20++; } } catch(e) {}
try { if (Inst28 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<582,590,23>",(accesses)); Inst28++; } } catch(e) {}
  accesses == "Symbol(Symbol.species)";
  "Property accesses do not match expectation";
try { if (Inst29 <= 1000 && typeof (result) != "undefined") {_RecordType("<670,676,25>",(result)); Inst29++; } } catch(e) {}
  result == "spl,me";
  "Unexpected result";
})(); // RegExp subclass with constructor: Testing ES6 21.2.5.11: 4. Let C be ? SpeciesConstructor(rx, %RegExp%).


(function () {
  let accesses = [];
try { if (Inst30 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<850,858,31>",(accesses)); Inst30++; } } catch(e) {}

try { if (Inst38 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<893,899,33>",(RegExp)); Inst38++; } } catch(e) {}
  class TestRegExp extends RegExp {
    constructor(str, flags) {
try { if (Inst32 <= 1000 && typeof (str) != "undefined") {_RecordType("<918,921,34>",(str)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (flags) != "undefined") {_RecordType("<923,928,34>",(flags)); Inst33++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof (str) != "undefined") {_RecordType("<944,947,35>",(str)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (flags) != "undefined") {_RecordType("<949,954,35>",(flags)); Inst35++; } } catch(e) {}
      super(str, flags);
try { if (Inst36 <= 1000 && typeof (accesses.push) != "undefined") {_RecordType("<963,976,36>",(accesses.push)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<963,971,36>",(accesses)); Inst37++; } } catch(e) {}
      accesses.push("constructor");
    }

  }
try { if (Inst31 <= 1000 && typeof (TestRegExp) != "undefined") {_RecordType("<874,884,33>",(TestRegExp)); Inst31++; } } catch(e) {}

try { if (Inst40 <= 1000 && typeof (TestRegExp) != "undefined") {_RecordType("<1021,1031,41>",(TestRegExp)); Inst40++; } } catch(e) {}
  let obj = new TestRegExp("it");
try { if (Inst39 <= 1000 && typeof (obj) != "undefined") {_RecordType("<1011,1014,41>",(obj)); Inst39++; } } catch(e) {}
try { if (Inst41 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<1041,1049,42>",(accesses)); Inst41++; } } catch(e) {}
  accesses == "constructor";
  "unexpected call to overridden props";
try { if (Inst43 <= 1000 && typeof (RegExp.prototype[Symbol.split].call) != "undefined") {_RecordType("<1124,1159,44>",(RegExp.prototype[Symbol.split].call)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (RegExp.prototype[Symbol.split]) != "undefined") {_RecordType("<1124,1154,44>",(RegExp.prototype[Symbol.split])); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (RegExp.prototype) != "undefined") {_RecordType("<1124,1140,44>",(RegExp.prototype)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<1124,1130,44>",(RegExp)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (Symbol.split) != "undefined") {_RecordType("<1141,1153,44>",(Symbol.split)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<1141,1147,44>",(Symbol)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (obj) != "undefined") {_RecordType("<1160,1163,44>",(obj)); Inst49++; } } catch(e) {}
  let result = RegExp.prototype[Symbol.split].call(obj, "splitme");
try { if (Inst42 <= 1000 && typeof (result) != "undefined") {_RecordType("<1115,1121,44>",(result)); Inst42++; } } catch(e) {}
try { if (Inst50 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<1179,1187,45>",(accesses)); Inst50++; } } catch(e) {}
  accesses == "constructor,constructor";
  "Property accesses do not match expectation";
try { if (Inst51 <= 1000 && typeof (result) != "undefined") {_RecordType("<1268,1274,47>",(result)); Inst51++; } } catch(e) {}
  result == "spl,me";
  "Unexpected result";
})(); // An object with species constructor: Testing ES6 21.2.5.11: 4. Let C be ? SpeciesConstructor(rx, %RegExp%).


(function () {
  let accesses = [];
try { if (Inst52 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<1450,1458,53>",(accesses)); Inst52++; } } catch(e) {}
  let obj = {
    constructor: {}
  };
try { if (Inst53 <= 1000 && typeof (obj) != "undefined") {_RecordType("<1471,1474,54>",(obj)); Inst53++; } } catch(e) {}

  obj.constructor[Symbol.species] = function () {
try { if (Inst59 <= 1000 && typeof (accesses.push) != "undefined") {_RecordType("<1559,1572,59>",(accesses.push)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<1559,1567,59>",(accesses)); Inst60++; } } catch(e) {}
    accesses.push("constructor");
    return /it/y;
  };
try { if (Inst54 <= 1000 && typeof (obj.constructor[Symbol.species]) != "undefined") {_RecordType("<1507,1538,58>",(obj.constructor[Symbol.species])); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (obj.constructor) != "undefined") {_RecordType("<1507,1522,58>",(obj.constructor)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (obj) != "undefined") {_RecordType("<1507,1510,58>",(obj)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (Symbol.species) != "undefined") {_RecordType("<1523,1537,58>",(Symbol.species)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<1523,1529,58>",(Symbol)); Inst58++; } } catch(e) {}

try { if (Inst61 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<1615,1623,63>",(accesses)); Inst61++; } } catch(e) {}
  accesses == "";
  "unexpected call to overridden props";
try { if (Inst63 <= 1000 && typeof (RegExp.prototype[Symbol.split].call) != "undefined") {_RecordType("<1687,1722,65>",(RegExp.prototype[Symbol.split].call)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (RegExp.prototype[Symbol.split]) != "undefined") {_RecordType("<1687,1717,65>",(RegExp.prototype[Symbol.split])); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (RegExp.prototype) != "undefined") {_RecordType("<1687,1703,65>",(RegExp.prototype)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<1687,1693,65>",(RegExp)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (Symbol.split) != "undefined") {_RecordType("<1704,1716,65>",(Symbol.split)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<1704,1710,65>",(Symbol)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (obj) != "undefined") {_RecordType("<1723,1726,65>",(obj)); Inst69++; } } catch(e) {}
  let result = RegExp.prototype[Symbol.split].call(obj, "splitme");
try { if (Inst62 <= 1000 && typeof (result) != "undefined") {_RecordType("<1678,1684,65>",(result)); Inst62++; } } catch(e) {}
try { if (Inst70 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<1742,1750,66>",(accesses)); Inst70++; } } catch(e) {}
  accesses == "constructor";
  "Property accesses do not match expectation";
try { if (Inst71 <= 1000 && typeof (result) != "undefined") {_RecordType("<1819,1825,68>",(result)); Inst71++; } } catch(e) {}
  result == "spl,me";
  "Unexpected result";
})(); // RegExp object with overridden flags: Testing ES6 21.2.5.11: 5. Let flags be ? ToString(? Get(rx, "flags")).


(function () {
  let flags = ["flags", "global", "ignoreCase", "multiline", "sticky", "unicode"];
try { if (Inst72 <= 1000 && typeof (flags) != "undefined") {_RecordType("<2002,2007,74>",(flags)); Inst72++; } } catch(e) {}
  let flagValues = ["", false, false, false, false, false];
try { if (Inst73 <= 1000 && typeof (flagValues) != "undefined") {_RecordType("<2085,2095,75>",(flagValues)); Inst73++; } } catch(e) {}

  for (let index in flags) {
try { if (Inst74 <= 1000 && typeof (index) != "undefined") {_RecordType("<2151,2156,77>",(index)); Inst74++; } } catch(e) {}try { if (Inst75 <= 1000 && typeof (flags) != "undefined") {_RecordType("<2160,2165,77>",(flags)); Inst75++; } } catch(e) {}
try { if (Inst101 <= 1000 && typeof (flags[index]) != "undefined") {_RecordType("<2697,2709,95>",(flags[index])); Inst101++; } } catch(e) {}try { if (Inst102 <= 1000 && typeof (flags) != "undefined") {_RecordType("<2697,2702,95>",(flags)); Inst102++; } } catch(e) {}try { if (Inst103 <= 1000 && typeof (flagValues[index]) != "undefined") {_RecordType("<2711,2728,95>",(flagValues[index])); Inst103++; } } catch(e) {}try { if (Inst104 <= 1000 && typeof (flagValues) != "undefined") {_RecordType("<2711,2721,95>",(flagValues)); Inst104++; } } catch(e) {}
    (function (flag, flagValue) {
try { if (Inst76 <= 1000 && typeof (flag) != "undefined") {_RecordType("<2184,2188,78>",(flag)); Inst76++; } } catch(e) {}try { if (Inst77 <= 1000 && typeof (flagValue) != "undefined") {_RecordType("<2190,2199,78>",(flagValue)); Inst77++; } } catch(e) {}
      let accesses = [];
try { if (Inst78 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<2213,2221,79>",(accesses)); Inst78++; } } catch(e) {}
      let obj = /it/;
try { if (Inst79 <= 1000 && typeof (obj) != "undefined") {_RecordType("<2238,2241,80>",(obj)); Inst79++; } } catch(e) {}
try { if (Inst80 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<2256,2277,81>",(Object.defineProperty)); Inst80++; } } catch(e) {}try { if (Inst81 <= 1000 && typeof (Object) != "undefined") {_RecordType("<2256,2262,81>",(Object)); Inst81++; } } catch(e) {}try { if (Inst82 <= 1000 && typeof (obj) != "undefined") {_RecordType("<2278,2281,81>",(obj)); Inst82++; } } catch(e) {}try { if (Inst83 <= 1000 && typeof (flag) != "undefined") {_RecordType("<2283,2287,81>",(flag)); Inst83++; } } catch(e) {}
      Object.defineProperty(obj, flag, {
        get: function () {
try { if (Inst84 <= 1000 && typeof (accesses.push) != "undefined") {_RecordType("<2328,2341,83>",(accesses.push)); Inst84++; } } catch(e) {}try { if (Inst85 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<2328,2336,83>",(accesses)); Inst85++; } } catch(e) {}try { if (Inst86 <= 1000 && typeof (flag) != "undefined") {_RecordType("<2342,2346,83>",(flag)); Inst86++; } } catch(e) {}
          accesses.push(flag);
          passed = true;
try { if (Inst87 <= 1000 && typeof (passed) != "undefined") {_RecordType("<2359,2365,84>",(passed)); Inst87++; } } catch(e) {}
try { if (Inst88 <= 1000 && typeof (flagValue) != "undefined") {_RecordType("<2391,2400,85>",(flagValue)); Inst88++; } } catch(e) {}
          return flagValue;
        }
      });
try { if (Inst89 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<2428,2436,88>",(accesses)); Inst89++; } } catch(e) {}
      accesses == "";
      "unexpected call to overridden props";
try { if (Inst91 <= 1000 && typeof (RegExp.prototype[Symbol.split].call) != "undefined") {_RecordType("<2508,2543,90>",(RegExp.prototype[Symbol.split].call)); Inst91++; } } catch(e) {}try { if (Inst92 <= 1000 && typeof (RegExp.prototype[Symbol.split]) != "undefined") {_RecordType("<2508,2538,90>",(RegExp.prototype[Symbol.split])); Inst92++; } } catch(e) {}try { if (Inst93 <= 1000 && typeof (RegExp.prototype) != "undefined") {_RecordType("<2508,2524,90>",(RegExp.prototype)); Inst93++; } } catch(e) {}try { if (Inst94 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<2508,2514,90>",(RegExp)); Inst94++; } } catch(e) {}try { if (Inst95 <= 1000 && typeof (Symbol.split) != "undefined") {_RecordType("<2525,2537,90>",(Symbol.split)); Inst95++; } } catch(e) {}try { if (Inst96 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<2525,2531,90>",(Symbol)); Inst96++; } } catch(e) {}try { if (Inst97 <= 1000 && typeof (obj) != "undefined") {_RecordType("<2544,2547,90>",(obj)); Inst97++; } } catch(e) {}
      let result = RegExp.prototype[Symbol.split].call(obj, "splitme");
try { if (Inst90 <= 1000 && typeof (result) != "undefined") {_RecordType("<2499,2505,90>",(result)); Inst90++; } } catch(e) {}
try { if (Inst98 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<2567,2575,91>",(accesses)); Inst98++; } } catch(e) {}try { if (Inst99 <= 1000 && typeof (flag) != "undefined") {_RecordType("<2579,2583,91>",(flag)); Inst99++; } } catch(e) {}
      accesses == flag;
      "Property accesses do not match expectation";
try { if (Inst100 <= 1000 && typeof (result) != "undefined") {_RecordType("<2643,2649,93>",(result)); Inst100++; } } catch(e) {}
      result == "spl,me";
      "Unexpected result";
    })(flags[index], flagValues[index]);
  }
})(); // RegExp subclass with overridden flags in subclass method: Testing ES6 21.2.5.11: 5. Let flags be ? ToString(? Get(rx, "flags")).


(function () {
  let flags = ["flags", "global", "ignoreCase", "multiline", "sticky", "unicode"];
try { if (Inst105 <= 1000 && typeof (flags) != "undefined") {_RecordType("<2896,2901,101>",(flags)); Inst105++; } } catch(e) {}
  let flagValues = ["", false, false, false, false, false];
try { if (Inst106 <= 1000 && typeof (flagValues) != "undefined") {_RecordType("<2979,2989,102>",(flagValues)); Inst106++; } } catch(e) {}

  for (let index in flags) {
try { if (Inst107 <= 1000 && typeof (index) != "undefined") {_RecordType("<3045,3050,104>",(index)); Inst107++; } } catch(e) {}try { if (Inst108 <= 1000 && typeof (flags) != "undefined") {_RecordType("<3054,3059,104>",(flags)); Inst108++; } } catch(e) {}
try { if (Inst132 <= 1000 && typeof (flags[index]) != "undefined") {_RecordType("<3586,3598,125>",(flags[index])); Inst132++; } } catch(e) {}try { if (Inst133 <= 1000 && typeof (flags) != "undefined") {_RecordType("<3586,3591,125>",(flags)); Inst133++; } } catch(e) {}try { if (Inst134 <= 1000 && typeof (flagValues[index]) != "undefined") {_RecordType("<3600,3617,125>",(flagValues[index])); Inst134++; } } catch(e) {}try { if (Inst135 <= 1000 && typeof (flagValues) != "undefined") {_RecordType("<3600,3610,125>",(flagValues)); Inst135++; } } catch(e) {}
    (function (flag, flagValue) {
try { if (Inst109 <= 1000 && typeof (flag) != "undefined") {_RecordType("<3078,3082,105>",(flag)); Inst109++; } } catch(e) {}try { if (Inst110 <= 1000 && typeof (flagValue) != "undefined") {_RecordType("<3084,3093,105>",(flagValue)); Inst110++; } } catch(e) {}
      let accesses = [];
try { if (Inst111 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<3107,3115,106>",(accesses)); Inst111++; } } catch(e) {}

try { if (Inst117 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<3154,3160,108>",(RegExp)); Inst117++; } } catch(e) {}
      class TestRegExp extends RegExp {
        get [flag]() {
try { if (Inst113 <= 1000 && typeof (accesses.push) != "undefined") {_RecordType("<3196,3209,110>",(accesses.push)); Inst113++; } } catch(e) {}try { if (Inst114 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<3196,3204,110>",(accesses)); Inst114++; } } catch(e) {}try { if (Inst115 <= 1000 && typeof (flag) != "undefined") {_RecordType("<3210,3214,110>",(flag)); Inst115++; } } catch(e) {}
          accesses.push(flag);
try { if (Inst116 <= 1000 && typeof (flagValue) != "undefined") {_RecordType("<3234,3243,111>",(flagValue)); Inst116++; } } catch(e) {}
          return flagValue;
        }

      }
try { if (Inst112 <= 1000 && typeof (TestRegExp) != "undefined") {_RecordType("<3135,3145,108>",(TestRegExp)); Inst112++; } } catch(e) {}

      ;
try { if (Inst119 <= 1000 && typeof (TestRegExp) != "undefined") {_RecordType("<3293,3303,117>",(TestRegExp)); Inst119++; } } catch(e) {}
      let obj = new TestRegExp(/it/);
try { if (Inst118 <= 1000 && typeof (obj) != "undefined") {_RecordType("<3283,3286,117>",(obj)); Inst118++; } } catch(e) {}
try { if (Inst120 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<3317,3325,118>",(accesses)); Inst120++; } } catch(e) {}
      accesses == "";
      "unexpected call to overridden props";
try { if (Inst122 <= 1000 && typeof (RegExp.prototype[Symbol.split].call) != "undefined") {_RecordType("<3397,3432,120>",(RegExp.prototype[Symbol.split].call)); Inst122++; } } catch(e) {}try { if (Inst123 <= 1000 && typeof (RegExp.prototype[Symbol.split]) != "undefined") {_RecordType("<3397,3427,120>",(RegExp.prototype[Symbol.split])); Inst123++; } } catch(e) {}try { if (Inst124 <= 1000 && typeof (RegExp.prototype) != "undefined") {_RecordType("<3397,3413,120>",(RegExp.prototype)); Inst124++; } } catch(e) {}try { if (Inst125 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<3397,3403,120>",(RegExp)); Inst125++; } } catch(e) {}try { if (Inst126 <= 1000 && typeof (Symbol.split) != "undefined") {_RecordType("<3414,3426,120>",(Symbol.split)); Inst126++; } } catch(e) {}try { if (Inst127 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<3414,3420,120>",(Symbol)); Inst127++; } } catch(e) {}try { if (Inst128 <= 1000 && typeof (obj) != "undefined") {_RecordType("<3433,3436,120>",(obj)); Inst128++; } } catch(e) {}
      let result = RegExp.prototype[Symbol.split].call(obj, "splitme");
try { if (Inst121 <= 1000 && typeof (result) != "undefined") {_RecordType("<3388,3394,120>",(result)); Inst121++; } } catch(e) {}
try { if (Inst129 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<3456,3464,121>",(accesses)); Inst129++; } } catch(e) {}try { if (Inst130 <= 1000 && typeof (flag) != "undefined") {_RecordType("<3468,3472,121>",(flag)); Inst130++; } } catch(e) {}
      accesses == flag;
      "Property accesses do not match expectation";
try { if (Inst131 <= 1000 && typeof (result) != "undefined") {_RecordType("<3532,3538,123>",(result)); Inst131++; } } catch(e) {}
      result == "spl,me";
      "Unexpected result";
    })(flags[index], flagValues[index]);
  }
})(); // RegExp subclass with overridden flags using Object.defineProperty: Testing ES6 21.2.5.11: 5. Let flags be ? ToString(? Get(rx, "flags")).


(function () {
  let flags = ["flags", "global", "ignoreCase", "multiline", "sticky", "unicode"];
try { if (Inst136 <= 1000 && typeof (flags) != "undefined") {_RecordType("<3794,3799,131>",(flags)); Inst136++; } } catch(e) {}
  let flagValues = ["", false, false, false, false, false];
try { if (Inst137 <= 1000 && typeof (flagValues) != "undefined") {_RecordType("<3877,3887,132>",(flagValues)); Inst137++; } } catch(e) {}

  for (let index in flags) {
try { if (Inst138 <= 1000 && typeof (index) != "undefined") {_RecordType("<3943,3948,134>",(index)); Inst138++; } } catch(e) {}try { if (Inst139 <= 1000 && typeof (flags) != "undefined") {_RecordType("<3952,3957,134>",(flags)); Inst139++; } } catch(e) {}
try { if (Inst167 <= 1000 && typeof (flags[index]) != "undefined") {_RecordType("<4531,4543,155>",(flags[index])); Inst167++; } } catch(e) {}try { if (Inst168 <= 1000 && typeof (flags) != "undefined") {_RecordType("<4531,4536,155>",(flags)); Inst168++; } } catch(e) {}try { if (Inst169 <= 1000 && typeof (flagValues[index]) != "undefined") {_RecordType("<4545,4562,155>",(flagValues[index])); Inst169++; } } catch(e) {}try { if (Inst170 <= 1000 && typeof (flagValues) != "undefined") {_RecordType("<4545,4555,155>",(flagValues)); Inst170++; } } catch(e) {}
    (function (flag, flagValue) {
try { if (Inst140 <= 1000 && typeof (flag) != "undefined") {_RecordType("<3976,3980,135>",(flag)); Inst140++; } } catch(e) {}try { if (Inst141 <= 1000 && typeof (flagValue) != "undefined") {_RecordType("<3982,3991,135>",(flagValue)); Inst141++; } } catch(e) {}
      let accesses = [];
try { if (Inst142 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<4005,4013,136>",(accesses)); Inst142++; } } catch(e) {}

try { if (Inst144 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<4052,4058,138>",(RegExp)); Inst144++; } } catch(e) {}
      class TestRegExp extends RegExp {}
try { if (Inst143 <= 1000 && typeof (TestRegExp) != "undefined") {_RecordType("<4033,4043,138>",(TestRegExp)); Inst143++; } } catch(e) {}

      ;
try { if (Inst146 <= 1000 && typeof (TestRegExp) != "undefined") {_RecordType("<4091,4101,141>",(TestRegExp)); Inst146++; } } catch(e) {}
      let obj = new TestRegExp(/it/);
try { if (Inst145 <= 1000 && typeof (obj) != "undefined") {_RecordType("<4081,4084,141>",(obj)); Inst145++; } } catch(e) {}
try { if (Inst147 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<4115,4136,142>",(Object.defineProperty)); Inst147++; } } catch(e) {}try { if (Inst148 <= 1000 && typeof (Object) != "undefined") {_RecordType("<4115,4121,142>",(Object)); Inst148++; } } catch(e) {}try { if (Inst149 <= 1000 && typeof (obj) != "undefined") {_RecordType("<4137,4140,142>",(obj)); Inst149++; } } catch(e) {}try { if (Inst150 <= 1000 && typeof (flag) != "undefined") {_RecordType("<4142,4146,142>",(flag)); Inst150++; } } catch(e) {}
      Object.defineProperty(obj, flag, {
        get: function () {
try { if (Inst151 <= 1000 && typeof (accesses.push) != "undefined") {_RecordType("<4187,4200,144>",(accesses.push)); Inst151++; } } catch(e) {}try { if (Inst152 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<4187,4195,144>",(accesses)); Inst152++; } } catch(e) {}try { if (Inst153 <= 1000 && typeof (flag) != "undefined") {_RecordType("<4201,4205,144>",(flag)); Inst153++; } } catch(e) {}
          accesses.push(flag);
try { if (Inst154 <= 1000 && typeof (flagValue) != "undefined") {_RecordType("<4225,4234,145>",(flagValue)); Inst154++; } } catch(e) {}
          return flagValue;
        }
      });
try { if (Inst155 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<4262,4270,148>",(accesses)); Inst155++; } } catch(e) {}
      accesses == "";
      "unexpected call to overridden props";
try { if (Inst157 <= 1000 && typeof (RegExp.prototype[Symbol.split].call) != "undefined") {_RecordType("<4342,4377,150>",(RegExp.prototype[Symbol.split].call)); Inst157++; } } catch(e) {}try { if (Inst158 <= 1000 && typeof (RegExp.prototype[Symbol.split]) != "undefined") {_RecordType("<4342,4372,150>",(RegExp.prototype[Symbol.split])); Inst158++; } } catch(e) {}try { if (Inst159 <= 1000 && typeof (RegExp.prototype) != "undefined") {_RecordType("<4342,4358,150>",(RegExp.prototype)); Inst159++; } } catch(e) {}try { if (Inst160 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<4342,4348,150>",(RegExp)); Inst160++; } } catch(e) {}try { if (Inst161 <= 1000 && typeof (Symbol.split) != "undefined") {_RecordType("<4359,4371,150>",(Symbol.split)); Inst161++; } } catch(e) {}try { if (Inst162 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<4359,4365,150>",(Symbol)); Inst162++; } } catch(e) {}try { if (Inst163 <= 1000 && typeof (obj) != "undefined") {_RecordType("<4378,4381,150>",(obj)); Inst163++; } } catch(e) {}
      let result = RegExp.prototype[Symbol.split].call(obj, "splitme");
try { if (Inst156 <= 1000 && typeof (result) != "undefined") {_RecordType("<4333,4339,150>",(result)); Inst156++; } } catch(e) {}
try { if (Inst164 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<4401,4409,151>",(accesses)); Inst164++; } } catch(e) {}try { if (Inst165 <= 1000 && typeof (flag) != "undefined") {_RecordType("<4413,4417,151>",(flag)); Inst165++; } } catch(e) {}
      accesses == flag;
      "Property accesses do not match expectation";
try { if (Inst166 <= 1000 && typeof (result) != "undefined") {_RecordType("<4477,4483,153>",(result)); Inst166++; } } catch(e) {}
      result == "spl,me";
      "Unexpected result";
    })(flags[index], flagValues[index]);
  }
})(); // Any object with species constructor: Testing ES6 21.2.5.11: 5. Let flags be ? ToString(? Get(rx, "flags")).


(function () {
  let accesses = [];
try { if (Inst171 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<4709,4717,161>",(accesses)); Inst171++; } } catch(e) {}
  let obj = {
    constructor: {}
  };
try { if (Inst172 <= 1000 && typeof (obj) != "undefined") {_RecordType("<4730,4733,162>",(obj)); Inst172++; } } catch(e) {}

  obj.constructor[Symbol.species] = function () {
try { if (Inst178 <= 1000 && typeof (accesses.push) != "undefined") {_RecordType("<4818,4831,167>",(accesses.push)); Inst178++; } } catch(e) {}try { if (Inst179 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<4818,4826,167>",(accesses)); Inst179++; } } catch(e) {}
    accesses.push("constructor");
    return /it/y;
  };
try { if (Inst173 <= 1000 && typeof (obj.constructor[Symbol.species]) != "undefined") {_RecordType("<4766,4797,166>",(obj.constructor[Symbol.species])); Inst173++; } } catch(e) {}try { if (Inst174 <= 1000 && typeof (obj.constructor) != "undefined") {_RecordType("<4766,4781,166>",(obj.constructor)); Inst174++; } } catch(e) {}try { if (Inst175 <= 1000 && typeof (obj) != "undefined") {_RecordType("<4766,4769,166>",(obj)); Inst175++; } } catch(e) {}try { if (Inst176 <= 1000 && typeof (Symbol.species) != "undefined") {_RecordType("<4782,4796,166>",(Symbol.species)); Inst176++; } } catch(e) {}try { if (Inst177 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<4782,4788,166>",(Symbol)); Inst177++; } } catch(e) {}

try { if (Inst180 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<4874,4895,171>",(Object.defineProperty)); Inst180++; } } catch(e) {}try { if (Inst181 <= 1000 && typeof (Object) != "undefined") {_RecordType("<4874,4880,171>",(Object)); Inst181++; } } catch(e) {}try { if (Inst182 <= 1000 && typeof (obj) != "undefined") {_RecordType("<4896,4899,171>",(obj)); Inst182++; } } catch(e) {}
  Object.defineProperty(obj, "flags", {
    get: function () {
try { if (Inst183 <= 1000 && typeof (accesses.push) != "undefined") {_RecordType("<4941,4954,173>",(accesses.push)); Inst183++; } } catch(e) {}try { if (Inst184 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<4941,4949,173>",(accesses)); Inst184++; } } catch(e) {}
      accesses.push("flags");
      return "";
    }
  });
try { if (Inst185 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<4996,5004,177>",(accesses)); Inst185++; } } catch(e) {}
  accesses == "";
  "unexpected call to overridden props";
try { if (Inst187 <= 1000 && typeof (RegExp.prototype[Symbol.split].call) != "undefined") {_RecordType("<5068,5103,179>",(RegExp.prototype[Symbol.split].call)); Inst187++; } } catch(e) {}try { if (Inst188 <= 1000 && typeof (RegExp.prototype[Symbol.split]) != "undefined") {_RecordType("<5068,5098,179>",(RegExp.prototype[Symbol.split])); Inst188++; } } catch(e) {}try { if (Inst189 <= 1000 && typeof (RegExp.prototype) != "undefined") {_RecordType("<5068,5084,179>",(RegExp.prototype)); Inst189++; } } catch(e) {}try { if (Inst190 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<5068,5074,179>",(RegExp)); Inst190++; } } catch(e) {}try { if (Inst191 <= 1000 && typeof (Symbol.split) != "undefined") {_RecordType("<5085,5097,179>",(Symbol.split)); Inst191++; } } catch(e) {}try { if (Inst192 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<5085,5091,179>",(Symbol)); Inst192++; } } catch(e) {}try { if (Inst193 <= 1000 && typeof (obj) != "undefined") {_RecordType("<5104,5107,179>",(obj)); Inst193++; } } catch(e) {}
  let result = RegExp.prototype[Symbol.split].call(obj, "splitme");
try { if (Inst186 <= 1000 && typeof (result) != "undefined") {_RecordType("<5059,5065,179>",(result)); Inst186++; } } catch(e) {}
try { if (Inst194 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<5123,5131,180>",(accesses)); Inst194++; } } catch(e) {}
  accesses == "flags,constructor";
  "Property accesses do not match expectation";
try { if (Inst195 <= 1000 && typeof (result) != "undefined") {_RecordType("<5206,5212,182>",(result)); Inst195++; } } catch(e) {}
  result == "spl,me";
  "Unexpected result";
})(); // Any object with custom prototype: Testing ES6 21.2.5.11: 5. Let flags be ? ToString(? Get(rx, "flags")).


(function () {
  let accesses = [];
try { if (Inst196 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<5386,5394,188>",(accesses)); Inst196++; } } catch(e) {}
try { if (Inst198 <= 1000 && typeof (flags) != "undefined") {_RecordType("<5435,5440,190>",(flags)); Inst198++; } } catch(e) {}try { if (Inst201 <= 1000 && typeof (toString) != "undefined") {_RecordType("<5504,5512,195>",(toString)); Inst201++; } } catch(e) {}try { if (Inst206 <= 1000 && typeof (source) != "undefined") {_RecordType("<5603,5609,200>",(source)); Inst206++; } } catch(e) {}
  let TestRegExpProto = {
    get flags() {
try { if (Inst199 <= 1000 && typeof (accesses.push) != "undefined") {_RecordType("<5451,5464,191>",(accesses.push)); Inst199++; } } catch(e) {}try { if (Inst200 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<5451,5459,191>",(accesses)); Inst200++; } } catch(e) {}
      accesses.push("flags");
      return "";
    },

    toString() {
try { if (Inst202 <= 1000 && typeof (accesses.push) != "undefined") {_RecordType("<5523,5536,196>",(accesses.push)); Inst202++; } } catch(e) {}try { if (Inst203 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<5523,5531,196>",(accesses)); Inst203++; } } catch(e) {}
      accesses.push("toString");
try { if (Inst204 <= 1000 && typeof (this._regex.toString) != "undefined") {_RecordType("<5563,5583,197>",(this._regex.toString)); Inst204++; } } catch(e) {}try { if (Inst205 <= 1000 && typeof (this._regex) != "undefined") {_RecordType("<5563,5574,197>",(this._regex)); Inst205++; } } catch(e) {}
      return this._regex.toString();
    },

    get source() {
try { if (Inst207 <= 1000 && typeof (accesses.push) != "undefined") {_RecordType("<5620,5633,201>",(accesses.push)); Inst207++; } } catch(e) {}try { if (Inst208 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<5620,5628,201>",(accesses)); Inst208++; } } catch(e) {}
      accesses.push("source");
try { if (Inst209 <= 1000 && typeof (this._regex.source) != "undefined") {_RecordType("<5658,5676,202>",(this._regex.source)); Inst209++; } } catch(e) {}try { if (Inst210 <= 1000 && typeof (this._regex) != "undefined") {_RecordType("<5658,5669,202>",(this._regex)); Inst210++; } } catch(e) {}
      return this._regex.source;
    }

  };
try { if (Inst197 <= 1000 && typeof (TestRegExpProto) != "undefined") {_RecordType("<5407,5422,189>",(TestRegExpProto)); Inst197++; } } catch(e) {}
try { if (Inst213 <= 1000 && typeof (RegExp.prototype) != "undefined") {_RecordType("<5720,5736,206>",(RegExp.prototype)); Inst213++; } } catch(e) {}try { if (Inst214 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<5720,5726,206>",(RegExp)); Inst214++; } } catch(e) {}
  TestRegExpProto.__proto__ = RegExp.prototype;
try { if (Inst211 <= 1000 && typeof (TestRegExpProto.__proto__) != "undefined") {_RecordType("<5692,5717,206>",(TestRegExpProto.__proto__)); Inst211++; } } catch(e) {}try { if (Inst212 <= 1000 && typeof (TestRegExpProto) != "undefined") {_RecordType("<5692,5707,206>",(TestRegExpProto)); Inst212++; } } catch(e) {}

  let TestRegExp = function (regex) {
try { if (Inst216 <= 1000 && typeof (regex) != "undefined") {_RecordType("<5768,5773,208>",(regex)); Inst216++; } } catch(e) {}
try { if (Inst217 <= 1000 && typeof (accesses.push) != "undefined") {_RecordType("<5781,5794,209>",(accesses.push)); Inst217++; } } catch(e) {}try { if (Inst218 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<5781,5789,209>",(accesses)); Inst218++; } } catch(e) {}
    accesses.push("constructor");
try { if (Inst220 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<5833,5839,210>",(RegExp)); Inst220++; } } catch(e) {}try { if (Inst221 <= 1000 && typeof (regex) != "undefined") {_RecordType("<5840,5845,210>",(regex)); Inst221++; } } catch(e) {}
    this._regex = new RegExp(regex);
try { if (Inst219 <= 1000 && typeof (this._regex) != "undefined") {_RecordType("<5815,5826,210>",(this._regex)); Inst219++; } } catch(e) {}
  };
try { if (Inst215 <= 1000 && typeof (TestRegExp) != "undefined") {_RecordType("<5745,5755,208>",(TestRegExp)); Inst215++; } } catch(e) {}

try { if (Inst224 <= 1000 && typeof (TestRegExpProto) != "undefined") {_RecordType("<5879,5894,213>",(TestRegExpProto)); Inst224++; } } catch(e) {}
  TestRegExp.prototype = TestRegExpProto;
try { if (Inst222 <= 1000 && typeof (TestRegExp.prototype) != "undefined") {_RecordType("<5856,5876,213>",(TestRegExp.prototype)); Inst222++; } } catch(e) {}try { if (Inst223 <= 1000 && typeof (TestRegExp) != "undefined") {_RecordType("<5856,5866,213>",(TestRegExp)); Inst223++; } } catch(e) {}
try { if (Inst227 <= 1000 && typeof (TestRegExp) != "undefined") {_RecordType("<5928,5938,214>",(TestRegExp)); Inst227++; } } catch(e) {}
  TestRegExpProto.constructor = TestRegExp;
try { if (Inst225 <= 1000 && typeof (TestRegExpProto.constructor) != "undefined") {_RecordType("<5898,5925,214>",(TestRegExpProto.constructor)); Inst225++; } } catch(e) {}try { if (Inst226 <= 1000 && typeof (TestRegExpProto) != "undefined") {_RecordType("<5898,5913,214>",(TestRegExpProto)); Inst226++; } } catch(e) {}
try { if (Inst229 <= 1000 && typeof (TestRegExp) != "undefined") {_RecordType("<5956,5966,215>",(TestRegExp)); Inst229++; } } catch(e) {}
  let obj = new TestRegExp(/it/);
try { if (Inst228 <= 1000 && typeof (obj) != "undefined") {_RecordType("<5946,5949,215>",(obj)); Inst228++; } } catch(e) {}
try { if (Inst230 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<5976,5984,216>",(accesses)); Inst230++; } } catch(e) {}
  accesses == "constructor";
  "unexpected call to overridden props";
try { if (Inst232 <= 1000 && typeof (RegExp.prototype[Symbol.split].call) != "undefined") {_RecordType("<6059,6094,218>",(RegExp.prototype[Symbol.split].call)); Inst232++; } } catch(e) {}try { if (Inst233 <= 1000 && typeof (RegExp.prototype[Symbol.split]) != "undefined") {_RecordType("<6059,6089,218>",(RegExp.prototype[Symbol.split])); Inst233++; } } catch(e) {}try { if (Inst234 <= 1000 && typeof (RegExp.prototype) != "undefined") {_RecordType("<6059,6075,218>",(RegExp.prototype)); Inst234++; } } catch(e) {}try { if (Inst235 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<6059,6065,218>",(RegExp)); Inst235++; } } catch(e) {}try { if (Inst236 <= 1000 && typeof (Symbol.split) != "undefined") {_RecordType("<6076,6088,218>",(Symbol.split)); Inst236++; } } catch(e) {}try { if (Inst237 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<6076,6082,218>",(Symbol)); Inst237++; } } catch(e) {}try { if (Inst238 <= 1000 && typeof (obj) != "undefined") {_RecordType("<6095,6098,218>",(obj)); Inst238++; } } catch(e) {}
  let result = RegExp.prototype[Symbol.split].call(obj, "splitme");
try { if (Inst231 <= 1000 && typeof (result) != "undefined") {_RecordType("<6050,6056,218>",(result)); Inst231++; } } catch(e) {}
try { if (Inst239 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<6114,6122,219>",(accesses)); Inst239++; } } catch(e) {}
  accesses == "constructor,flags,source";
  "Property accesses do not match expectation";
try { if (Inst240 <= 1000 && typeof (result) != "undefined") {_RecordType("<6204,6210,221>",(result)); Inst240++; } } catch(e) {}
  result == "spl,me";
  "Unexpected result";
})(); // 2 levels of subclasses: Testing ES6 21.2.5.11: 5. Let flags be ? ToString(? Get(rx, "flags")).


(function () {
  let accesses = [];
try { if (Inst241 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<6374,6382,227>",(accesses)); Inst241++; } } catch(e) {}

try { if (Inst245 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<6414,6420,229>",(RegExp)); Inst245++; } } catch(e) {}
  class RegExpB extends RegExp {
    get flags() {
try { if (Inst243 <= 1000 && typeof (accesses.push) != "undefined") {_RecordType("<6447,6460,231>",(accesses.push)); Inst243++; } } catch(e) {}try { if (Inst244 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<6447,6455,231>",(accesses)); Inst244++; } } catch(e) {}
      accesses.push("flags");
      return "";
    }

  }
try { if (Inst242 <= 1000 && typeof (RegExpB) != "undefined") {_RecordType("<6398,6405,229>",(RegExpB)); Inst242++; } } catch(e) {}

try { if (Inst247 <= 1000 && typeof (RegExpB) != "undefined") {_RecordType("<6524,6531,237>",(RegExpB)); Inst247++; } } catch(e) {}
  class RegExpC extends RegExpB {}
try { if (Inst246 <= 1000 && typeof (RegExpC) != "undefined") {_RecordType("<6508,6515,237>",(RegExpC)); Inst246++; } } catch(e) {}

try { if (Inst248 <= 1000 && typeof (RegExpB.__proto__) != "undefined") {_RecordType("<6538,6555,239>",(RegExpB.__proto__)); Inst248++; } } catch(e) {}try { if (Inst249 <= 1000 && typeof (RegExpB) != "undefined") {_RecordType("<6538,6545,239>",(RegExpB)); Inst249++; } } catch(e) {}try { if (Inst250 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<6559,6565,239>",(RegExp)); Inst250++; } } catch(e) {}
  RegExpB.__proto__ == RegExp;
try { if (Inst251 <= 1000 && typeof (RegExpC.__proto__) != "undefined") {_RecordType("<6569,6586,240>",(RegExpC.__proto__)); Inst251++; } } catch(e) {}try { if (Inst252 <= 1000 && typeof (RegExpC) != "undefined") {_RecordType("<6569,6576,240>",(RegExpC)); Inst252++; } } catch(e) {}try { if (Inst253 <= 1000 && typeof (RegExpB) != "undefined") {_RecordType("<6590,6597,240>",(RegExpB)); Inst253++; } } catch(e) {}
  RegExpC.__proto__ == RegExpB;
try { if (Inst255 <= 1000 && typeof (RegExpC) != "undefined") {_RecordType("<6615,6622,241>",(RegExpC)); Inst255++; } } catch(e) {}
  let obj = new RegExpC(/it/);
try { if (Inst254 <= 1000 && typeof (obj) != "undefined") {_RecordType("<6605,6608,241>",(obj)); Inst254++; } } catch(e) {}
try { if (Inst256 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<6632,6640,242>",(accesses)); Inst256++; } } catch(e) {}
  accesses == "";
  "unexpected call to overridden props";
try { if (Inst258 <= 1000 && typeof (RegExp.prototype[Symbol.split].call) != "undefined") {_RecordType("<6704,6739,244>",(RegExp.prototype[Symbol.split].call)); Inst258++; } } catch(e) {}try { if (Inst259 <= 1000 && typeof (RegExp.prototype[Symbol.split]) != "undefined") {_RecordType("<6704,6734,244>",(RegExp.prototype[Symbol.split])); Inst259++; } } catch(e) {}try { if (Inst260 <= 1000 && typeof (RegExp.prototype) != "undefined") {_RecordType("<6704,6720,244>",(RegExp.prototype)); Inst260++; } } catch(e) {}try { if (Inst261 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<6704,6710,244>",(RegExp)); Inst261++; } } catch(e) {}try { if (Inst262 <= 1000 && typeof (Symbol.split) != "undefined") {_RecordType("<6721,6733,244>",(Symbol.split)); Inst262++; } } catch(e) {}try { if (Inst263 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<6721,6727,244>",(Symbol)); Inst263++; } } catch(e) {}try { if (Inst264 <= 1000 && typeof (obj) != "undefined") {_RecordType("<6740,6743,244>",(obj)); Inst264++; } } catch(e) {}
  let result = RegExp.prototype[Symbol.split].call(obj, "splitme");
try { if (Inst257 <= 1000 && typeof (result) != "undefined") {_RecordType("<6695,6701,244>",(result)); Inst257++; } } catch(e) {}
try { if (Inst265 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<6759,6767,245>",(accesses)); Inst265++; } } catch(e) {}
  accesses == "flags";
  "Property accesses do not match expectation";
try { if (Inst266 <= 1000 && typeof (result) != "undefined") {_RecordType("<6830,6836,247>",(result)); Inst266++; } } catch(e) {}
  result == "spl,me";
  "Unexpected result";
})(); // 2 levels of subclasses with substituted prototype before instantiation: Testing ES6 21.2.5.11: 5. Let flags be ? ToString(? Get(rx, "flags")).


(function () {
  let accesses = [];
try { if (Inst267 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<7048,7056,253>",(accesses)); Inst267++; } } catch(e) {}

try { if (Inst269 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<7082,7088,255>",(RegExp)); Inst269++; } } catch(e) {}
  class B extends RegExp {}
try { if (Inst268 <= 1000 && typeof (B) != "undefined") {_RecordType("<7072,7073,255>",(B)); Inst268++; } } catch(e) {}

try { if (Inst271 <= 1000 && typeof (B) != "undefined") {_RecordType("<7111,7112,257>",(B)); Inst271++; } } catch(e) {}
  class C extends B {}
try { if (Inst270 <= 1000 && typeof (C) != "undefined") {_RecordType("<7101,7102,257>",(C)); Inst270++; } } catch(e) {}

try { if (Inst272 <= 1000 && typeof (B.__proto__) != "undefined") {_RecordType("<7119,7130,259>",(B.__proto__)); Inst272++; } } catch(e) {}try { if (Inst273 <= 1000 && typeof (B) != "undefined") {_RecordType("<7119,7120,259>",(B)); Inst273++; } } catch(e) {}try { if (Inst274 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<7135,7141,259>",(RegExp)); Inst274++; } } catch(e) {}
  B.__proto__ === RegExp;
try { if (Inst275 <= 1000 && typeof (C.__proto__) != "undefined") {_RecordType("<7145,7156,260>",(C.__proto__)); Inst275++; } } catch(e) {}try { if (Inst276 <= 1000 && typeof (C) != "undefined") {_RecordType("<7145,7146,260>",(C)); Inst276++; } } catch(e) {}try { if (Inst277 <= 1000 && typeof (B) != "undefined") {_RecordType("<7161,7162,260>",(B)); Inst277++; } } catch(e) {}
  C.__proto__ === B;
try { if (Inst278 <= 1000 && typeof (B.prototype.__proto__) != "undefined") {_RecordType("<7166,7187,261>",(B.prototype.__proto__)); Inst278++; } } catch(e) {}try { if (Inst279 <= 1000 && typeof (B.prototype) != "undefined") {_RecordType("<7166,7177,261>",(B.prototype)); Inst279++; } } catch(e) {}try { if (Inst280 <= 1000 && typeof (B) != "undefined") {_RecordType("<7166,7167,261>",(B)); Inst280++; } } catch(e) {}try { if (Inst281 <= 1000 && typeof (RegExp.prototype) != "undefined") {_RecordType("<7192,7208,261>",(RegExp.prototype)); Inst281++; } } catch(e) {}try { if (Inst282 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<7192,7198,261>",(RegExp)); Inst282++; } } catch(e) {}
  B.prototype.__proto__ === RegExp.prototype;
try { if (Inst283 <= 1000 && typeof (C.prototype.__proto__) != "undefined") {_RecordType("<7212,7233,262>",(C.prototype.__proto__)); Inst283++; } } catch(e) {}try { if (Inst284 <= 1000 && typeof (C.prototype) != "undefined") {_RecordType("<7212,7223,262>",(C.prototype)); Inst284++; } } catch(e) {}try { if (Inst285 <= 1000 && typeof (C) != "undefined") {_RecordType("<7212,7213,262>",(C)); Inst285++; } } catch(e) {}try { if (Inst286 <= 1000 && typeof (B.prototype) != "undefined") {_RecordType("<7238,7249,262>",(B.prototype)); Inst286++; } } catch(e) {}try { if (Inst287 <= 1000 && typeof (B) != "undefined") {_RecordType("<7238,7239,262>",(B)); Inst287++; } } catch(e) {}
  C.prototype.__proto__ === B.prototype;

  let X = function () {
    ;
  };
try { if (Inst288 <= 1000 && typeof (X) != "undefined") {_RecordType("<7258,7259,264>",(X)); Inst288++; } } catch(e) {}

try { if (Inst289 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<7290,7311,268>",(Object.defineProperty)); Inst289++; } } catch(e) {}try { if (Inst290 <= 1000 && typeof (Object) != "undefined") {_RecordType("<7290,7296,268>",(Object)); Inst290++; } } catch(e) {}try { if (Inst291 <= 1000 && typeof (X.prototype) != "undefined") {_RecordType("<7312,7323,268>",(X.prototype)); Inst291++; } } catch(e) {}try { if (Inst292 <= 1000 && typeof (X) != "undefined") {_RecordType("<7312,7313,268>",(X)); Inst292++; } } catch(e) {}
  Object.defineProperty(X.prototype, "flags", {
    get: function () {
try { if (Inst293 <= 1000 && typeof (accesses.push) != "undefined") {_RecordType("<7365,7378,270>",(accesses.push)); Inst293++; } } catch(e) {}try { if (Inst294 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<7365,7373,270>",(accesses)); Inst294++; } } catch(e) {}
      accesses.push("flags");
      return "";
    }
  });
try { if (Inst295 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<7420,7441,274>",(Object.defineProperty)); Inst295++; } } catch(e) {}try { if (Inst296 <= 1000 && typeof (Object) != "undefined") {_RecordType("<7420,7426,274>",(Object)); Inst296++; } } catch(e) {}try { if (Inst297 <= 1000 && typeof (X.prototype) != "undefined") {_RecordType("<7442,7453,274>",(X.prototype)); Inst297++; } } catch(e) {}try { if (Inst298 <= 1000 && typeof (X) != "undefined") {_RecordType("<7442,7443,274>",(X)); Inst298++; } } catch(e) {}
  Object.defineProperty(X.prototype, "exec", {
    value: function (str) {
try { if (Inst299 <= 1000 && typeof (str) != "undefined") {_RecordType("<7486,7489,275>",(str)); Inst299++; } } catch(e) {}
try { if (Inst300 <= 1000 && typeof (accesses.push) != "undefined") {_RecordType("<7499,7512,276>",(accesses.push)); Inst300++; } } catch(e) {}try { if (Inst301 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<7499,7507,276>",(accesses)); Inst301++; } } catch(e) {}
      accesses.push("exec");
try { if (Inst303 <= 1000 && typeof (/it/y.exec) != "undefined") {_RecordType("<7546,7556,277>",(/it/y.exec)); Inst303++; } } catch(e) {}try { if (Inst304 <= 1000 && typeof (str.substr) != "undefined") {_RecordType("<7557,7567,277>",(str.substr)); Inst304++; } } catch(e) {}try { if (Inst305 <= 1000 && typeof (str) != "undefined") {_RecordType("<7557,7560,277>",(str)); Inst305++; } } catch(e) {}try { if (Inst306 <= 1000 && typeof (this.lastIndex) != "undefined") {_RecordType("<7568,7582,277>",(this.lastIndex)); Inst306++; } } catch(e) {}
      var matchResult = /it/y.exec(str.substr(this.lastIndex));
try { if (Inst302 <= 1000 && typeof (matchResult) != "undefined") {_RecordType("<7532,7543,277>",(matchResult)); Inst302++; } } catch(e) {}

try { if (Inst307 <= 1000 && typeof (matchResult) != "undefined") {_RecordType("<7597,7608,279>",(matchResult)); Inst307++; } } catch(e) {}
      if (matchResult) {
        this.lastIndex += 2;
try { if (Inst308 <= 1000 && typeof (this.lastIndex) != "undefined") {_RecordType("<7620,7634,280>",(this.lastIndex)); Inst308++; } } catch(e) {}
      } // length of "it".


try { if (Inst309 <= 1000 && typeof (matchResult) != "undefined") {_RecordType("<7683,7694,284>",(matchResult)); Inst309++; } } catch(e) {}
      return matchResult;
    }
  }); // Monkey with the prototype chain before instantiating C.

try { if (Inst312 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<7784,7790,288>",(RegExp)); Inst312++; } } catch(e) {}
  X.__proto__ = RegExp;
try { if (Inst310 <= 1000 && typeof (X.__proto__) != "undefined") {_RecordType("<7770,7781,288>",(X.__proto__)); Inst310++; } } catch(e) {}try { if (Inst311 <= 1000 && typeof (X) != "undefined") {_RecordType("<7770,7771,288>",(X)); Inst311++; } } catch(e) {}
try { if (Inst316 <= 1000 && typeof (RegExp.prototype) != "undefined") {_RecordType("<7818,7834,289>",(RegExp.prototype)); Inst316++; } } catch(e) {}try { if (Inst317 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<7818,7824,289>",(RegExp)); Inst317++; } } catch(e) {}
  X.prototype.__proto__ = RegExp.prototype;
try { if (Inst313 <= 1000 && typeof (X.prototype.__proto__) != "undefined") {_RecordType("<7794,7815,289>",(X.prototype.__proto__)); Inst313++; } } catch(e) {}try { if (Inst314 <= 1000 && typeof (X.prototype) != "undefined") {_RecordType("<7794,7805,289>",(X.prototype)); Inst314++; } } catch(e) {}try { if (Inst315 <= 1000 && typeof (X) != "undefined") {_RecordType("<7794,7795,289>",(X)); Inst315++; } } catch(e) {}
try { if (Inst320 <= 1000 && typeof (X) != "undefined") {_RecordType("<7852,7853,290>",(X)); Inst320++; } } catch(e) {}
  C.__proto__ = X;
try { if (Inst318 <= 1000 && typeof (C.__proto__) != "undefined") {_RecordType("<7838,7849,290>",(C.__proto__)); Inst318++; } } catch(e) {}try { if (Inst319 <= 1000 && typeof (C) != "undefined") {_RecordType("<7838,7839,290>",(C)); Inst319++; } } catch(e) {}
try { if (Inst324 <= 1000 && typeof (X.prototype) != "undefined") {_RecordType("<7881,7892,291>",(X.prototype)); Inst324++; } } catch(e) {}try { if (Inst325 <= 1000 && typeof (X) != "undefined") {_RecordType("<7881,7882,291>",(X)); Inst325++; } } catch(e) {}
  C.prototype.__proto__ = X.prototype;
try { if (Inst321 <= 1000 && typeof (C.prototype.__proto__) != "undefined") {_RecordType("<7857,7878,291>",(C.prototype.__proto__)); Inst321++; } } catch(e) {}try { if (Inst322 <= 1000 && typeof (C.prototype) != "undefined") {_RecordType("<7857,7868,291>",(C.prototype)); Inst322++; } } catch(e) {}try { if (Inst323 <= 1000 && typeof (C) != "undefined") {_RecordType("<7857,7858,291>",(C)); Inst323++; } } catch(e) {}
try { if (Inst326 <= 1000 && typeof (X.__proto__) != "undefined") {_RecordType("<7896,7907,292>",(X.__proto__)); Inst326++; } } catch(e) {}try { if (Inst327 <= 1000 && typeof (X) != "undefined") {_RecordType("<7896,7897,292>",(X)); Inst327++; } } catch(e) {}try { if (Inst328 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<7912,7918,292>",(RegExp)); Inst328++; } } catch(e) {}
  X.__proto__ === RegExp;
try { if (Inst329 <= 1000 && typeof (C.__proto__) != "undefined") {_RecordType("<7922,7933,293>",(C.__proto__)); Inst329++; } } catch(e) {}try { if (Inst330 <= 1000 && typeof (C) != "undefined") {_RecordType("<7922,7923,293>",(C)); Inst330++; } } catch(e) {}try { if (Inst331 <= 1000 && typeof (X) != "undefined") {_RecordType("<7938,7939,293>",(X)); Inst331++; } } catch(e) {}
  C.__proto__ === X;
try { if (Inst332 <= 1000 && typeof (X.prototype.__proto__) != "undefined") {_RecordType("<7943,7964,294>",(X.prototype.__proto__)); Inst332++; } } catch(e) {}try { if (Inst333 <= 1000 && typeof (X.prototype) != "undefined") {_RecordType("<7943,7954,294>",(X.prototype)); Inst333++; } } catch(e) {}try { if (Inst334 <= 1000 && typeof (X) != "undefined") {_RecordType("<7943,7944,294>",(X)); Inst334++; } } catch(e) {}try { if (Inst335 <= 1000 && typeof (RegExp.prototype) != "undefined") {_RecordType("<7969,7985,294>",(RegExp.prototype)); Inst335++; } } catch(e) {}try { if (Inst336 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<7969,7975,294>",(RegExp)); Inst336++; } } catch(e) {}
  X.prototype.__proto__ === RegExp.prototype;
try { if (Inst337 <= 1000 && typeof (C.prototype.__proto__) != "undefined") {_RecordType("<7989,8010,295>",(C.prototype.__proto__)); Inst337++; } } catch(e) {}try { if (Inst338 <= 1000 && typeof (C.prototype) != "undefined") {_RecordType("<7989,8000,295>",(C.prototype)); Inst338++; } } catch(e) {}try { if (Inst339 <= 1000 && typeof (C) != "undefined") {_RecordType("<7989,7990,295>",(C)); Inst339++; } } catch(e) {}try { if (Inst340 <= 1000 && typeof (X.prototype) != "undefined") {_RecordType("<8015,8026,295>",(X.prototype)); Inst340++; } } catch(e) {}try { if (Inst341 <= 1000 && typeof (X) != "undefined") {_RecordType("<8015,8016,295>",(X)); Inst341++; } } catch(e) {}
  C.prototype.__proto__ === X.prototype;
try { if (Inst343 <= 1000 && typeof (C) != "undefined") {_RecordType("<8044,8045,296>",(C)); Inst343++; } } catch(e) {}
  let obj = new C();
try { if (Inst342 <= 1000 && typeof (obj) != "undefined") {_RecordType("<8034,8037,296>",(obj)); Inst342++; } } catch(e) {}
try { if (Inst344 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<8051,8059,297>",(accesses)); Inst344++; } } catch(e) {}
  accesses == "";
  "unexpected call to overridden props";
try { if (Inst346 <= 1000 && typeof (RegExp.prototype[Symbol.split].call) != "undefined") {_RecordType("<8123,8158,299>",(RegExp.prototype[Symbol.split].call)); Inst346++; } } catch(e) {}try { if (Inst347 <= 1000 && typeof (RegExp.prototype[Symbol.split]) != "undefined") {_RecordType("<8123,8153,299>",(RegExp.prototype[Symbol.split])); Inst347++; } } catch(e) {}try { if (Inst348 <= 1000 && typeof (RegExp.prototype) != "undefined") {_RecordType("<8123,8139,299>",(RegExp.prototype)); Inst348++; } } catch(e) {}try { if (Inst349 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<8123,8129,299>",(RegExp)); Inst349++; } } catch(e) {}try { if (Inst350 <= 1000 && typeof (Symbol.split) != "undefined") {_RecordType("<8140,8152,299>",(Symbol.split)); Inst350++; } } catch(e) {}try { if (Inst351 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<8140,8146,299>",(Symbol)); Inst351++; } } catch(e) {}try { if (Inst352 <= 1000 && typeof (obj) != "undefined") {_RecordType("<8159,8162,299>",(obj)); Inst352++; } } catch(e) {}
  let result = RegExp.prototype[Symbol.split].call(obj, "splitme");
try { if (Inst345 <= 1000 && typeof (result) != "undefined") {_RecordType("<8114,8120,299>",(result)); Inst345++; } } catch(e) {}
try { if (Inst353 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<8178,8186,300>",(accesses)); Inst353++; } } catch(e) {}
  accesses == "flags,exec,exec,exec,exec,exec,exec";
  "Property accesses do not match expectation";
try { if (Inst354 <= 1000 && typeof (result) != "undefined") {_RecordType("<8279,8285,302>",(result)); Inst354++; } } catch(e) {}
  result == "spl,me";
  "Unexpected result";
})(); // 2 levels of subclasses with substituted prototype after instantiation: Testing ES6 21.2.5.11: 5. Let flags be ? ToString(? Get(rx, "flags")).


(function () {
  let accesses = [];
try { if (Inst355 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<8496,8504,308>",(accesses)); Inst355++; } } catch(e) {}

try { if (Inst357 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<8530,8536,310>",(RegExp)); Inst357++; } } catch(e) {}
  class B extends RegExp {}
try { if (Inst356 <= 1000 && typeof (B) != "undefined") {_RecordType("<8520,8521,310>",(B)); Inst356++; } } catch(e) {}

try { if (Inst359 <= 1000 && typeof (B) != "undefined") {_RecordType("<8559,8560,312>",(B)); Inst359++; } } catch(e) {}
  class C extends B {}
try { if (Inst358 <= 1000 && typeof (C) != "undefined") {_RecordType("<8549,8550,312>",(C)); Inst358++; } } catch(e) {}

try { if (Inst360 <= 1000 && typeof (B.__proto__) != "undefined") {_RecordType("<8567,8578,314>",(B.__proto__)); Inst360++; } } catch(e) {}try { if (Inst361 <= 1000 && typeof (B) != "undefined") {_RecordType("<8567,8568,314>",(B)); Inst361++; } } catch(e) {}try { if (Inst362 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<8583,8589,314>",(RegExp)); Inst362++; } } catch(e) {}
  B.__proto__ === RegExp;
try { if (Inst363 <= 1000 && typeof (C.__proto__) != "undefined") {_RecordType("<8593,8604,315>",(C.__proto__)); Inst363++; } } catch(e) {}try { if (Inst364 <= 1000 && typeof (C) != "undefined") {_RecordType("<8593,8594,315>",(C)); Inst364++; } } catch(e) {}try { if (Inst365 <= 1000 && typeof (B) != "undefined") {_RecordType("<8609,8610,315>",(B)); Inst365++; } } catch(e) {}
  C.__proto__ === B;
try { if (Inst366 <= 1000 && typeof (B.prototype.__proto__) != "undefined") {_RecordType("<8614,8635,316>",(B.prototype.__proto__)); Inst366++; } } catch(e) {}try { if (Inst367 <= 1000 && typeof (B.prototype) != "undefined") {_RecordType("<8614,8625,316>",(B.prototype)); Inst367++; } } catch(e) {}try { if (Inst368 <= 1000 && typeof (B) != "undefined") {_RecordType("<8614,8615,316>",(B)); Inst368++; } } catch(e) {}try { if (Inst369 <= 1000 && typeof (RegExp.prototype) != "undefined") {_RecordType("<8640,8656,316>",(RegExp.prototype)); Inst369++; } } catch(e) {}try { if (Inst370 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<8640,8646,316>",(RegExp)); Inst370++; } } catch(e) {}
  B.prototype.__proto__ === RegExp.prototype;
try { if (Inst371 <= 1000 && typeof (C.prototype.__proto__) != "undefined") {_RecordType("<8660,8681,317>",(C.prototype.__proto__)); Inst371++; } } catch(e) {}try { if (Inst372 <= 1000 && typeof (C.prototype) != "undefined") {_RecordType("<8660,8671,317>",(C.prototype)); Inst372++; } } catch(e) {}try { if (Inst373 <= 1000 && typeof (C) != "undefined") {_RecordType("<8660,8661,317>",(C)); Inst373++; } } catch(e) {}try { if (Inst374 <= 1000 && typeof (B.prototype) != "undefined") {_RecordType("<8686,8697,317>",(B.prototype)); Inst374++; } } catch(e) {}try { if (Inst375 <= 1000 && typeof (B) != "undefined") {_RecordType("<8686,8687,317>",(B)); Inst375++; } } catch(e) {}
  C.prototype.__proto__ === B.prototype;

  let X = function () {
    ;
  };
try { if (Inst376 <= 1000 && typeof (X) != "undefined") {_RecordType("<8706,8707,319>",(X)); Inst376++; } } catch(e) {}

try { if (Inst377 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<8738,8759,323>",(Object.defineProperty)); Inst377++; } } catch(e) {}try { if (Inst378 <= 1000 && typeof (Object) != "undefined") {_RecordType("<8738,8744,323>",(Object)); Inst378++; } } catch(e) {}try { if (Inst379 <= 1000 && typeof (X.prototype) != "undefined") {_RecordType("<8760,8771,323>",(X.prototype)); Inst379++; } } catch(e) {}try { if (Inst380 <= 1000 && typeof (X) != "undefined") {_RecordType("<8760,8761,323>",(X)); Inst380++; } } catch(e) {}
  Object.defineProperty(X.prototype, "flags", {
    get: function () {
try { if (Inst381 <= 1000 && typeof (accesses.push) != "undefined") {_RecordType("<8813,8826,325>",(accesses.push)); Inst381++; } } catch(e) {}try { if (Inst382 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<8813,8821,325>",(accesses)); Inst382++; } } catch(e) {}
      accesses.push("flags");
      return "";
    }
  });
try { if (Inst383 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<8868,8889,329>",(Object.defineProperty)); Inst383++; } } catch(e) {}try { if (Inst384 <= 1000 && typeof (Object) != "undefined") {_RecordType("<8868,8874,329>",(Object)); Inst384++; } } catch(e) {}try { if (Inst385 <= 1000 && typeof (X.prototype) != "undefined") {_RecordType("<8890,8901,329>",(X.prototype)); Inst385++; } } catch(e) {}try { if (Inst386 <= 1000 && typeof (X) != "undefined") {_RecordType("<8890,8891,329>",(X)); Inst386++; } } catch(e) {}
  Object.defineProperty(X.prototype, "exec", {
    value: function (str) {
try { if (Inst387 <= 1000 && typeof (str) != "undefined") {_RecordType("<8934,8937,330>",(str)); Inst387++; } } catch(e) {}
try { if (Inst388 <= 1000 && typeof (accesses.push) != "undefined") {_RecordType("<8947,8960,331>",(accesses.push)); Inst388++; } } catch(e) {}try { if (Inst389 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<8947,8955,331>",(accesses)); Inst389++; } } catch(e) {}
      accesses.push("exec");
try { if (Inst391 <= 1000 && typeof (/it/y.exec) != "undefined") {_RecordType("<8994,9004,332>",(/it/y.exec)); Inst391++; } } catch(e) {}try { if (Inst392 <= 1000 && typeof (str.substr) != "undefined") {_RecordType("<9005,9015,332>",(str.substr)); Inst392++; } } catch(e) {}try { if (Inst393 <= 1000 && typeof (str) != "undefined") {_RecordType("<9005,9008,332>",(str)); Inst393++; } } catch(e) {}try { if (Inst394 <= 1000 && typeof (this.lastIndex) != "undefined") {_RecordType("<9016,9030,332>",(this.lastIndex)); Inst394++; } } catch(e) {}
      var matchResult = /it/y.exec(str.substr(this.lastIndex));
try { if (Inst390 <= 1000 && typeof (matchResult) != "undefined") {_RecordType("<8980,8991,332>",(matchResult)); Inst390++; } } catch(e) {}

try { if (Inst395 <= 1000 && typeof (matchResult) != "undefined") {_RecordType("<9045,9056,334>",(matchResult)); Inst395++; } } catch(e) {}
      if (matchResult) {
        this.lastIndex += 2;
try { if (Inst396 <= 1000 && typeof (this.lastIndex) != "undefined") {_RecordType("<9068,9082,335>",(this.lastIndex)); Inst396++; } } catch(e) {}
      } // length of "it".


try { if (Inst397 <= 1000 && typeof (matchResult) != "undefined") {_RecordType("<9131,9142,339>",(matchResult)); Inst397++; } } catch(e) {}
      return matchResult;
    }
  }); // Instantiate C before monkeying with the prototype chain.

try { if (Inst399 <= 1000 && typeof (C) != "undefined") {_RecordType("<9233,9234,343>",(C)); Inst399++; } } catch(e) {}
  let obj = new C();
try { if (Inst398 <= 1000 && typeof (obj) != "undefined") {_RecordType("<9223,9226,343>",(obj)); Inst398++; } } catch(e) {}
try { if (Inst402 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<9254,9260,344>",(RegExp)); Inst402++; } } catch(e) {}
  X.__proto__ = RegExp;
try { if (Inst400 <= 1000 && typeof (X.__proto__) != "undefined") {_RecordType("<9240,9251,344>",(X.__proto__)); Inst400++; } } catch(e) {}try { if (Inst401 <= 1000 && typeof (X) != "undefined") {_RecordType("<9240,9241,344>",(X)); Inst401++; } } catch(e) {}
try { if (Inst406 <= 1000 && typeof (RegExp.prototype) != "undefined") {_RecordType("<9288,9304,345>",(RegExp.prototype)); Inst406++; } } catch(e) {}try { if (Inst407 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<9288,9294,345>",(RegExp)); Inst407++; } } catch(e) {}
  X.prototype.__proto__ = RegExp.prototype;
try { if (Inst403 <= 1000 && typeof (X.prototype.__proto__) != "undefined") {_RecordType("<9264,9285,345>",(X.prototype.__proto__)); Inst403++; } } catch(e) {}try { if (Inst404 <= 1000 && typeof (X.prototype) != "undefined") {_RecordType("<9264,9275,345>",(X.prototype)); Inst404++; } } catch(e) {}try { if (Inst405 <= 1000 && typeof (X) != "undefined") {_RecordType("<9264,9265,345>",(X)); Inst405++; } } catch(e) {}
try { if (Inst410 <= 1000 && typeof (X) != "undefined") {_RecordType("<9322,9323,346>",(X)); Inst410++; } } catch(e) {}
  C.__proto__ = X;
try { if (Inst408 <= 1000 && typeof (C.__proto__) != "undefined") {_RecordType("<9308,9319,346>",(C.__proto__)); Inst408++; } } catch(e) {}try { if (Inst409 <= 1000 && typeof (C) != "undefined") {_RecordType("<9308,9309,346>",(C)); Inst409++; } } catch(e) {}
try { if (Inst414 <= 1000 && typeof (X.prototype) != "undefined") {_RecordType("<9351,9362,347>",(X.prototype)); Inst414++; } } catch(e) {}try { if (Inst415 <= 1000 && typeof (X) != "undefined") {_RecordType("<9351,9352,347>",(X)); Inst415++; } } catch(e) {}
  C.prototype.__proto__ = X.prototype;
try { if (Inst411 <= 1000 && typeof (C.prototype.__proto__) != "undefined") {_RecordType("<9327,9348,347>",(C.prototype.__proto__)); Inst411++; } } catch(e) {}try { if (Inst412 <= 1000 && typeof (C.prototype) != "undefined") {_RecordType("<9327,9338,347>",(C.prototype)); Inst412++; } } catch(e) {}try { if (Inst413 <= 1000 && typeof (C) != "undefined") {_RecordType("<9327,9328,347>",(C)); Inst413++; } } catch(e) {}
try { if (Inst416 <= 1000 && typeof (X.__proto__) != "undefined") {_RecordType("<9366,9377,348>",(X.__proto__)); Inst416++; } } catch(e) {}try { if (Inst417 <= 1000 && typeof (X) != "undefined") {_RecordType("<9366,9367,348>",(X)); Inst417++; } } catch(e) {}try { if (Inst418 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<9382,9388,348>",(RegExp)); Inst418++; } } catch(e) {}
  X.__proto__ === RegExp;
try { if (Inst419 <= 1000 && typeof (C.__proto__) != "undefined") {_RecordType("<9392,9403,349>",(C.__proto__)); Inst419++; } } catch(e) {}try { if (Inst420 <= 1000 && typeof (C) != "undefined") {_RecordType("<9392,9393,349>",(C)); Inst420++; } } catch(e) {}try { if (Inst421 <= 1000 && typeof (X) != "undefined") {_RecordType("<9408,9409,349>",(X)); Inst421++; } } catch(e) {}
  C.__proto__ === X;
try { if (Inst422 <= 1000 && typeof (X.prototype.__proto__) != "undefined") {_RecordType("<9413,9434,350>",(X.prototype.__proto__)); Inst422++; } } catch(e) {}try { if (Inst423 <= 1000 && typeof (X.prototype) != "undefined") {_RecordType("<9413,9424,350>",(X.prototype)); Inst423++; } } catch(e) {}try { if (Inst424 <= 1000 && typeof (X) != "undefined") {_RecordType("<9413,9414,350>",(X)); Inst424++; } } catch(e) {}try { if (Inst425 <= 1000 && typeof (RegExp.prototype) != "undefined") {_RecordType("<9439,9455,350>",(RegExp.prototype)); Inst425++; } } catch(e) {}try { if (Inst426 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<9439,9445,350>",(RegExp)); Inst426++; } } catch(e) {}
  X.prototype.__proto__ === RegExp.prototype;
try { if (Inst427 <= 1000 && typeof (C.prototype.__proto__) != "undefined") {_RecordType("<9459,9480,351>",(C.prototype.__proto__)); Inst427++; } } catch(e) {}try { if (Inst428 <= 1000 && typeof (C.prototype) != "undefined") {_RecordType("<9459,9470,351>",(C.prototype)); Inst428++; } } catch(e) {}try { if (Inst429 <= 1000 && typeof (C) != "undefined") {_RecordType("<9459,9460,351>",(C)); Inst429++; } } catch(e) {}try { if (Inst430 <= 1000 && typeof (X.prototype) != "undefined") {_RecordType("<9485,9496,351>",(X.prototype)); Inst430++; } } catch(e) {}try { if (Inst431 <= 1000 && typeof (X) != "undefined") {_RecordType("<9485,9486,351>",(X)); Inst431++; } } catch(e) {}
  C.prototype.__proto__ === X.prototype;
try { if (Inst432 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<9500,9508,352>",(accesses)); Inst432++; } } catch(e) {}
  accesses == "";
  "unexpected call to overridden props";
try { if (Inst434 <= 1000 && typeof (RegExp.prototype[Symbol.split].call) != "undefined") {_RecordType("<9572,9607,354>",(RegExp.prototype[Symbol.split].call)); Inst434++; } } catch(e) {}try { if (Inst435 <= 1000 && typeof (RegExp.prototype[Symbol.split]) != "undefined") {_RecordType("<9572,9602,354>",(RegExp.prototype[Symbol.split])); Inst435++; } } catch(e) {}try { if (Inst436 <= 1000 && typeof (RegExp.prototype) != "undefined") {_RecordType("<9572,9588,354>",(RegExp.prototype)); Inst436++; } } catch(e) {}try { if (Inst437 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<9572,9578,354>",(RegExp)); Inst437++; } } catch(e) {}try { if (Inst438 <= 1000 && typeof (Symbol.split) != "undefined") {_RecordType("<9589,9601,354>",(Symbol.split)); Inst438++; } } catch(e) {}try { if (Inst439 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<9589,9595,354>",(Symbol)); Inst439++; } } catch(e) {}try { if (Inst440 <= 1000 && typeof (obj) != "undefined") {_RecordType("<9608,9611,354>",(obj)); Inst440++; } } catch(e) {}
  let result = RegExp.prototype[Symbol.split].call(obj, "splitme");
try { if (Inst433 <= 1000 && typeof (result) != "undefined") {_RecordType("<9563,9569,354>",(result)); Inst433++; } } catch(e) {}
try { if (Inst441 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<9627,9635,355>",(accesses)); Inst441++; } } catch(e) {}
  accesses == "flags,exec,exec,exec,exec,exec,exec";
  "Property accesses do not match expectation";
try { if (Inst442 <= 1000 && typeof (result) != "undefined") {_RecordType("<9728,9734,357>",(result)); Inst442++; } } catch(e) {}
  result == "spl,me";
  "Unexpected result";
})(); // 2 levels of subclasses with proxied prototype: Testing ES6 21.2.5.11: 5. Let flags be ? ToString(? Get(rx, "flags")).


(function () {
  let accesses = [];
try { if (Inst443 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<9921,9929,363>",(accesses)); Inst443++; } } catch(e) {}

try { if (Inst445 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<9955,9961,365>",(RegExp)); Inst445++; } } catch(e) {}
  class B extends RegExp {}
try { if (Inst444 <= 1000 && typeof (B) != "undefined") {_RecordType("<9945,9946,365>",(B)); Inst444++; } } catch(e) {}

  ;
try { if (Inst446 <= 1000 && typeof (B.__proto__) != "undefined") {_RecordType("<9972,9983,368>",(B.__proto__)); Inst446++; } } catch(e) {}try { if (Inst447 <= 1000 && typeof (B) != "undefined") {_RecordType("<9972,9973,368>",(B)); Inst447++; } } catch(e) {}try { if (Inst448 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<9988,9994,368>",(RegExp)); Inst448++; } } catch(e) {}
  B.__proto__ === RegExp;
try { if (Inst449 <= 1000 && typeof (B.prototype.__proto__) != "undefined") {_RecordType("<9998,10019,369>",(B.prototype.__proto__)); Inst449++; } } catch(e) {}try { if (Inst450 <= 1000 && typeof (B.prototype) != "undefined") {_RecordType("<9998,10009,369>",(B.prototype)); Inst450++; } } catch(e) {}try { if (Inst451 <= 1000 && typeof (B) != "undefined") {_RecordType("<9998,9999,369>",(B)); Inst451++; } } catch(e) {}try { if (Inst452 <= 1000 && typeof (RegExp.prototype) != "undefined") {_RecordType("<10024,10040,369>",(RegExp.prototype)); Inst452++; } } catch(e) {}try { if (Inst453 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<10024,10030,369>",(RegExp)); Inst453++; } } catch(e) {}
  B.prototype.__proto__ === RegExp.prototype;
try { if (Inst455 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<10060,10065,370>",(Proxy)); Inst455++; } } catch(e) {}try { if (Inst456 <= 1000 && typeof (RegExp.prototype) != "undefined") {_RecordType("<10066,10082,370>",(RegExp.prototype)); Inst456++; } } catch(e) {}try { if (Inst457 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<10066,10072,370>",(RegExp)); Inst457++; } } catch(e) {}
  let proxy = new Proxy(RegExp.prototype, {
    get: function (obj, prop) {
try { if (Inst458 <= 1000 && typeof (obj) != "undefined") {_RecordType("<10105,10108,371>",(obj)); Inst458++; } } catch(e) {}try { if (Inst459 <= 1000 && typeof (prop) != "undefined") {_RecordType("<10110,10114,371>",(prop)); Inst459++; } } catch(e) {}
try { if (Inst460 <= 1000 && typeof (accesses.push) != "undefined") {_RecordType("<10124,10137,372>",(accesses.push)); Inst460++; } } catch(e) {}try { if (Inst461 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<10124,10132,372>",(accesses)); Inst461++; } } catch(e) {}try { if (Inst462 <= 1000 && typeof (prop.toString) != "undefined") {_RecordType("<10138,10151,372>",(prop.toString)); Inst462++; } } catch(e) {}try { if (Inst463 <= 1000 && typeof (prop) != "undefined") {_RecordType("<10138,10142,372>",(prop)); Inst463++; } } catch(e) {}
      accesses.push(prop.toString());

try { if (Inst464 <= 1000 && typeof (prop) != "undefined") {_RecordType("<10167,10171,374>",(prop)); Inst464++; } } catch(e) {}
      if (prop === "exec") {
        return function (str) {
try { if (Inst465 <= 1000 && typeof (str) != "undefined") {_RecordType("<10211,10214,375>",(str)); Inst465++; } } catch(e) {}
try { if (Inst466 <= 1000 && typeof (accesses.push) != "undefined") {_RecordType("<10228,10241,376>",(accesses.push)); Inst466++; } } catch(e) {}try { if (Inst467 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<10228,10236,376>",(accesses)); Inst467++; } } catch(e) {}
          accesses.push("in_exec");
try { if (Inst469 <= 1000 && typeof (/it/y.exec) != "undefined") {_RecordType("<10282,10292,377>",(/it/y.exec)); Inst469++; } } catch(e) {}try { if (Inst470 <= 1000 && typeof (str.substr) != "undefined") {_RecordType("<10293,10303,377>",(str.substr)); Inst470++; } } catch(e) {}try { if (Inst471 <= 1000 && typeof (str) != "undefined") {_RecordType("<10293,10296,377>",(str)); Inst471++; } } catch(e) {}try { if (Inst472 <= 1000 && typeof (this.lastIndex) != "undefined") {_RecordType("<10304,10318,377>",(this.lastIndex)); Inst472++; } } catch(e) {}
          var matchResult = /it/y.exec(str.substr(this.lastIndex));
try { if (Inst468 <= 1000 && typeof (matchResult) != "undefined") {_RecordType("<10268,10279,377>",(matchResult)); Inst468++; } } catch(e) {}

try { if (Inst473 <= 1000 && typeof (matchResult) != "undefined") {_RecordType("<10337,10348,379>",(matchResult)); Inst473++; } } catch(e) {}
          if (matchResult) {
            this.lastIndex += 2;
try { if (Inst474 <= 1000 && typeof (this.lastIndex) != "undefined") {_RecordType("<10364,10378,380>",(this.lastIndex)); Inst474++; } } catch(e) {}
          } // length of "it".


try { if (Inst475 <= 1000 && typeof (matchResult) != "undefined") {_RecordType("<10435,10446,384>",(matchResult)); Inst475++; } } catch(e) {}
          return matchResult;
        };
      }

try { if (Inst476 <= 1000 && typeof (obj[prop]) != "undefined") {_RecordType("<10481,10490,388>",(obj[prop])); Inst476++; } } catch(e) {}try { if (Inst477 <= 1000 && typeof (obj) != "undefined") {_RecordType("<10481,10484,388>",(obj)); Inst477++; } } catch(e) {}
      return obj[prop];
    }
  });
try { if (Inst454 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<10048,10053,370>",(proxy)); Inst454++; } } catch(e) {}
try { if (Inst481 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<10530,10535,391>",(proxy)); Inst481++; } } catch(e) {}
  B.prototype.__proto__ = proxy;
try { if (Inst478 <= 1000 && typeof (B.prototype.__proto__) != "undefined") {_RecordType("<10506,10527,391>",(B.prototype.__proto__)); Inst478++; } } catch(e) {}try { if (Inst479 <= 1000 && typeof (B.prototype) != "undefined") {_RecordType("<10506,10517,391>",(B.prototype)); Inst479++; } } catch(e) {}try { if (Inst480 <= 1000 && typeof (B) != "undefined") {_RecordType("<10506,10507,391>",(B)); Inst480++; } } catch(e) {}
try { if (Inst483 <= 1000 && typeof (B) != "undefined") {_RecordType("<10553,10554,392>",(B)); Inst483++; } } catch(e) {}
  let obj = new B();
try { if (Inst482 <= 1000 && typeof (obj) != "undefined") {_RecordType("<10543,10546,392>",(obj)); Inst482++; } } catch(e) {}
try { if (Inst484 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<10560,10568,393>",(accesses)); Inst484++; } } catch(e) {}
  accesses == "";
  "unexpected call to overridden props";
try { if (Inst486 <= 1000 && typeof (RegExp.prototype[Symbol.split].call) != "undefined") {_RecordType("<10632,10667,395>",(RegExp.prototype[Symbol.split].call)); Inst486++; } } catch(e) {}try { if (Inst487 <= 1000 && typeof (RegExp.prototype[Symbol.split]) != "undefined") {_RecordType("<10632,10662,395>",(RegExp.prototype[Symbol.split])); Inst487++; } } catch(e) {}try { if (Inst488 <= 1000 && typeof (RegExp.prototype) != "undefined") {_RecordType("<10632,10648,395>",(RegExp.prototype)); Inst488++; } } catch(e) {}try { if (Inst489 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<10632,10638,395>",(RegExp)); Inst489++; } } catch(e) {}try { if (Inst490 <= 1000 && typeof (Symbol.split) != "undefined") {_RecordType("<10649,10661,395>",(Symbol.split)); Inst490++; } } catch(e) {}try { if (Inst491 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<10649,10655,395>",(Symbol)); Inst491++; } } catch(e) {}try { if (Inst492 <= 1000 && typeof (obj) != "undefined") {_RecordType("<10668,10671,395>",(obj)); Inst492++; } } catch(e) {}
  let result = RegExp.prototype[Symbol.split].call(obj, "splitme");
try { if (Inst485 <= 1000 && typeof (result) != "undefined") {_RecordType("<10623,10629,395>",(result)); Inst485++; } } catch(e) {}
try { if (Inst493 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<10687,10695,396>",(accesses)); Inst493++; } } catch(e) {}
  accesses == "flags,Symbol(Symbol.match),exec,in_exec,exec,in_exec,exec,in_exec,exec,in_exec,exec,in_exec,exec,in_exec";
  "Property accesses do not match expectation";
try { if (Inst494 <= 1000 && typeof (result) != "undefined") {_RecordType("<10857,10863,398>",(result)); Inst494++; } } catch(e) {}
  result == "spl,me";
  "Unexpected result";
})(); // RegExp subclass with overridden exec: Testing ES6 21.2.5.11: 19.b. Let z be ? RegExpExec(splitter, S).


(function () {
  let accesses = [];
try { if (Inst495 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<11035,11043,404>",(accesses)); Inst495++; } } catch(e) {}

try { if (Inst505 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<11078,11084,406>",(RegExp)); Inst505++; } } catch(e) {}
  class TestRegExp extends RegExp {
    exec(str) {
try { if (Inst497 <= 1000 && typeof (str) != "undefined") {_RecordType("<11096,11099,407>",(str)); Inst497++; } } catch(e) {}
try { if (Inst498 <= 1000 && typeof (accesses.push) != "undefined") {_RecordType("<11109,11122,408>",(accesses.push)); Inst498++; } } catch(e) {}try { if (Inst499 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<11109,11117,408>",(accesses)); Inst499++; } } catch(e) {}
      accesses.push("exec");
try { if (Inst500 <= 1000 && typeof (RegExp.prototype.exec.call) != "undefined") {_RecordType("<11145,11171,409>",(RegExp.prototype.exec.call)); Inst500++; } } catch(e) {}try { if (Inst501 <= 1000 && typeof (RegExp.prototype.exec) != "undefined") {_RecordType("<11145,11166,409>",(RegExp.prototype.exec)); Inst501++; } } catch(e) {}try { if (Inst502 <= 1000 && typeof (RegExp.prototype) != "undefined") {_RecordType("<11145,11161,409>",(RegExp.prototype)); Inst502++; } } catch(e) {}try { if (Inst503 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<11145,11151,409>",(RegExp)); Inst503++; } } catch(e) {}try { if (Inst504 <= 1000 && typeof (str) != "undefined") {_RecordType("<11178,11181,409>",(str)); Inst504++; } } catch(e) {}
      return RegExp.prototype.exec.call(this, str);
    }

  }
try { if (Inst496 <= 1000 && typeof (TestRegExp) != "undefined") {_RecordType("<11059,11069,406>",(TestRegExp)); Inst496++; } } catch(e) {}

  ;
try { if (Inst507 <= 1000 && typeof (TestRegExp) != "undefined") {_RecordType("<11216,11226,415>",(TestRegExp)); Inst507++; } } catch(e) {}
  let obj = new TestRegExp(/it/);
try { if (Inst506 <= 1000 && typeof (obj) != "undefined") {_RecordType("<11206,11209,415>",(obj)); Inst506++; } } catch(e) {}
try { if (Inst508 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<11236,11244,416>",(accesses)); Inst508++; } } catch(e) {}
  accesses == "";
  "unexpected call to overridden props";
try { if (Inst510 <= 1000 && typeof (RegExp.prototype[Symbol.split].call) != "undefined") {_RecordType("<11308,11343,418>",(RegExp.prototype[Symbol.split].call)); Inst510++; } } catch(e) {}try { if (Inst511 <= 1000 && typeof (RegExp.prototype[Symbol.split]) != "undefined") {_RecordType("<11308,11338,418>",(RegExp.prototype[Symbol.split])); Inst511++; } } catch(e) {}try { if (Inst512 <= 1000 && typeof (RegExp.prototype) != "undefined") {_RecordType("<11308,11324,418>",(RegExp.prototype)); Inst512++; } } catch(e) {}try { if (Inst513 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<11308,11314,418>",(RegExp)); Inst513++; } } catch(e) {}try { if (Inst514 <= 1000 && typeof (Symbol.split) != "undefined") {_RecordType("<11325,11337,418>",(Symbol.split)); Inst514++; } } catch(e) {}try { if (Inst515 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<11325,11331,418>",(Symbol)); Inst515++; } } catch(e) {}try { if (Inst516 <= 1000 && typeof (obj) != "undefined") {_RecordType("<11344,11347,418>",(obj)); Inst516++; } } catch(e) {}
  let result = RegExp.prototype[Symbol.split].call(obj, "splitme");
try { if (Inst509 <= 1000 && typeof (result) != "undefined") {_RecordType("<11299,11305,418>",(result)); Inst509++; } } catch(e) {}
try { if (Inst517 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<11363,11371,419>",(accesses)); Inst517++; } } catch(e) {}
  accesses == "exec,exec,exec,exec,exec,exec";
  "Property accesses do not match expectation";
try { if (Inst518 <= 1000 && typeof (result) != "undefined") {_RecordType("<11458,11464,421>",(result)); Inst518++; } } catch(e) {}
  result == "spl,me";
  "Unexpected result";
})(); // Proxied RegExp observing every get.


(function () {
  let accesses = [];
try { if (Inst519 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<11569,11577,427>",(accesses)); Inst519++; } } catch(e) {}
try { if (Inst521 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<11603,11609,428>",(RegExp)); Inst521++; } } catch(e) {}
  let regexp = new RegExp(/it/);
try { if (Inst520 <= 1000 && typeof (regexp) != "undefined") {_RecordType("<11590,11596,428>",(regexp)); Inst520++; } } catch(e) {}
try { if (Inst523 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<11635,11640,429>",(Proxy)); Inst523++; } } catch(e) {}try { if (Inst524 <= 1000 && typeof (regexp) != "undefined") {_RecordType("<11641,11647,429>",(regexp)); Inst524++; } } catch(e) {}try { if (Inst525 <= 1000 && typeof (get) != "undefined") {_RecordType("<11655,11658,430>",(get)); Inst525++; } } catch(e) {}try { if (Inst526 <= 1000 && typeof (obj) != "undefined") {_RecordType("<11659,11662,430>",(obj)); Inst526++; } } catch(e) {}try { if (Inst527 <= 1000 && typeof (prop) != "undefined") {_RecordType("<11664,11668,430>",(prop)); Inst527++; } } catch(e) {}
  let proxy = new Proxy(regexp, {
    get(obj, prop) {
try { if (Inst528 <= 1000 && typeof (accesses.push) != "undefined") {_RecordType("<11678,11691,431>",(accesses.push)); Inst528++; } } catch(e) {}try { if (Inst529 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<11678,11686,431>",(accesses)); Inst529++; } } catch(e) {}try { if (Inst530 <= 1000 && typeof (prop.toString) != "undefined") {_RecordType("<11692,11705,431>",(prop.toString)); Inst530++; } } catch(e) {}try { if (Inst531 <= 1000 && typeof (prop) != "undefined") {_RecordType("<11692,11696,431>",(prop)); Inst531++; } } catch(e) {}
      accesses.push(prop.toString());
try { if (Inst532 <= 1000 && typeof (obj[prop]) != "undefined") {_RecordType("<11723,11732,432>",(obj[prop])); Inst532++; } } catch(e) {}try { if (Inst533 <= 1000 && typeof (obj) != "undefined") {_RecordType("<11723,11726,432>",(obj)); Inst533++; } } catch(e) {}
      return obj[prop];
    }

  });
try { if (Inst522 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<11623,11628,429>",(proxy)); Inst522++; } } catch(e) {}
try { if (Inst534 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<11749,11757,436>",(accesses)); Inst534++; } } catch(e) {}
  accesses == "";
  "unexpected call to overridden props";
try { if (Inst536 <= 1000 && typeof (RegExp.prototype[Symbol.split].call) != "undefined") {_RecordType("<11821,11856,438>",(RegExp.prototype[Symbol.split].call)); Inst536++; } } catch(e) {}try { if (Inst537 <= 1000 && typeof (RegExp.prototype[Symbol.split]) != "undefined") {_RecordType("<11821,11851,438>",(RegExp.prototype[Symbol.split])); Inst537++; } } catch(e) {}try { if (Inst538 <= 1000 && typeof (RegExp.prototype) != "undefined") {_RecordType("<11821,11837,438>",(RegExp.prototype)); Inst538++; } } catch(e) {}try { if (Inst539 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<11821,11827,438>",(RegExp)); Inst539++; } } catch(e) {}try { if (Inst540 <= 1000 && typeof (Symbol.split) != "undefined") {_RecordType("<11838,11850,438>",(Symbol.split)); Inst540++; } } catch(e) {}try { if (Inst541 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<11838,11844,438>",(Symbol)); Inst541++; } } catch(e) {}try { if (Inst542 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<11857,11862,438>",(proxy)); Inst542++; } } catch(e) {}
  let result = RegExp.prototype[Symbol.split].call(proxy, "splitme"); // Note: @@split creates a new instance of the RegExp using its @@species, and performs
try { if (Inst535 <= 1000 && typeof (result) != "undefined") {_RecordType("<11812,11818,438>",(result)); Inst535++; } } catch(e) {}
  // the split operation with that new instance. Hence, the proxy is only able to observe
  // gets up to the creation of the new instance.

try { if (Inst543 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<12107,12115,442>",(accesses)); Inst543++; } } catch(e) {}
  accesses == "constructor,flags,Symbol(Symbol.match),source";
  "Proxy not able to observe some gets";
try { if (Inst544 <= 1000 && typeof (result) != "undefined") {_RecordType("<12211,12217,444>",(result)); Inst544++; } } catch(e) {}
  result == "spl,me";
  "Unexpected result";
})(); // Proxied RegExp (without @@match) observing every get.
// This is to force the RegExp @species constructor to access source.


(function () {
  let accesses = [];
try { if (Inst545 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<12410,12418,451>",(accesses)); Inst545++; } } catch(e) {}
try { if (Inst547 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<12444,12450,452>",(RegExp)); Inst547++; } } catch(e) {}
  let regexp = new RegExp(/it/);
try { if (Inst546 <= 1000 && typeof (regexp) != "undefined") {_RecordType("<12431,12437,452>",(regexp)); Inst546++; } } catch(e) {}
try { if (Inst549 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<12476,12481,453>",(Proxy)); Inst549++; } } catch(e) {}try { if (Inst550 <= 1000 && typeof (regexp) != "undefined") {_RecordType("<12482,12488,453>",(regexp)); Inst550++; } } catch(e) {}try { if (Inst551 <= 1000 && typeof (get) != "undefined") {_RecordType("<12496,12499,454>",(get)); Inst551++; } } catch(e) {}try { if (Inst552 <= 1000 && typeof (obj) != "undefined") {_RecordType("<12500,12503,454>",(obj)); Inst552++; } } catch(e) {}try { if (Inst553 <= 1000 && typeof (prop) != "undefined") {_RecordType("<12505,12509,454>",(prop)); Inst553++; } } catch(e) {}
  let proxy = new Proxy(regexp, {
    get(obj, prop) {
try { if (Inst554 <= 1000 && typeof (accesses.push) != "undefined") {_RecordType("<12519,12532,455>",(accesses.push)); Inst554++; } } catch(e) {}try { if (Inst555 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<12519,12527,455>",(accesses)); Inst555++; } } catch(e) {}try { if (Inst556 <= 1000 && typeof (prop.toString) != "undefined") {_RecordType("<12533,12546,455>",(prop.toString)); Inst556++; } } catch(e) {}try { if (Inst557 <= 1000 && typeof (prop) != "undefined") {_RecordType("<12533,12537,455>",(prop)); Inst557++; } } catch(e) {}
      accesses.push(prop.toString());

try { if (Inst558 <= 1000 && typeof (prop) != "undefined") {_RecordType("<12562,12566,457>",(prop)); Inst558++; } } catch(e) {}try { if (Inst559 <= 1000 && typeof (Symbol.match) != "undefined") {_RecordType("<12570,12582,457>",(Symbol.match)); Inst559++; } } catch(e) {}try { if (Inst560 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<12570,12576,457>",(Symbol)); Inst560++; } } catch(e) {}
      if (prop == Symbol.match) {
try { if (Inst561 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<12601,12610,458>",(undefined)); Inst561++; } } catch(e) {}
        return undefined;
      }

try { if (Inst562 <= 1000 && typeof (obj[prop]) != "undefined") {_RecordType("<12634,12643,461>",(obj[prop])); Inst562++; } } catch(e) {}try { if (Inst563 <= 1000 && typeof (obj) != "undefined") {_RecordType("<12634,12637,461>",(obj)); Inst563++; } } catch(e) {}
      return obj[prop];
    }

  });
try { if (Inst548 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<12464,12469,453>",(proxy)); Inst548++; } } catch(e) {}
try { if (Inst564 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<12660,12668,465>",(accesses)); Inst564++; } } catch(e) {}
  accesses == "";
  "unexpected call to overridden props";
try { if (Inst566 <= 1000 && typeof (RegExp.prototype[Symbol.split].call) != "undefined") {_RecordType("<12732,12767,467>",(RegExp.prototype[Symbol.split].call)); Inst566++; } } catch(e) {}try { if (Inst567 <= 1000 && typeof (RegExp.prototype[Symbol.split]) != "undefined") {_RecordType("<12732,12762,467>",(RegExp.prototype[Symbol.split])); Inst567++; } } catch(e) {}try { if (Inst568 <= 1000 && typeof (RegExp.prototype) != "undefined") {_RecordType("<12732,12748,467>",(RegExp.prototype)); Inst568++; } } catch(e) {}try { if (Inst569 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<12732,12738,467>",(RegExp)); Inst569++; } } catch(e) {}try { if (Inst570 <= 1000 && typeof (Symbol.split) != "undefined") {_RecordType("<12749,12761,467>",(Symbol.split)); Inst570++; } } catch(e) {}try { if (Inst571 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<12749,12755,467>",(Symbol)); Inst571++; } } catch(e) {}try { if (Inst572 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<12768,12773,467>",(proxy)); Inst572++; } } catch(e) {}
  let result = RegExp.prototype[Symbol.split].call(proxy, "splitme"); // Note: @@split creates a new instance of the RegExp using its @@species, and performs
try { if (Inst565 <= 1000 && typeof (result) != "undefined") {_RecordType("<12723,12729,467>",(result)); Inst565++; } } catch(e) {}
  // the split operation with that new instance. Hence, the proxy is only able to observe
  // gets up to the creation of the new instance.

try { if (Inst573 <= 1000 && typeof (accesses) != "undefined") {_RecordType("<13018,13026,471>",(accesses)); Inst573++; } } catch(e) {}
  accesses == "constructor,flags,Symbol(Symbol.match),Symbol(Symbol.toPrimitive),toString,source,flags";
  "Proxy not able to observe some gets";
try { if (Inst574 <= 1000 && typeof (result) != "undefined") {_RecordType("<13164,13170,473>",(result)); Inst574++; } } catch(e) {}
  result == "splitme";
  "Unexpected result";
})();

