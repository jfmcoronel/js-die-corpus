var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
var result = function () {
try { if (Inst1 <= 1000 && typeof (fib) != "undefined") {_RecordType("<39,42,2>",(fib)); Inst1++; } } catch(e) {}
  function* fib() {
    let a = 1;
try { if (Inst2 <= 1000 && typeof (a) != "undefined") {_RecordType("<55,56,3>",(a)); Inst2++; } } catch(e) {}
    let b = 1;
try { if (Inst3 <= 1000 && typeof (b) != "undefined") {_RecordType("<70,71,4>",(b)); Inst3++; } } catch(e) {}

    while (true) {
try { if (Inst4 <= 1000 && typeof (a) != "undefined") {_RecordType("<109,110,7>",(a)); Inst4++; } } catch(e) {}
      yield a;
try { if (Inst7 <= 1000 && typeof (b) != "undefined") {_RecordType("<128,129,8>",(b)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (a) != "undefined") {_RecordType("<131,132,8>",(a)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (b) != "undefined") {_RecordType("<135,136,8>",(b)); Inst9++; } } catch(e) {}
      [a, b] = [b, a + b];
try { if (Inst5 <= 1000 && typeof (a) != "undefined") {_RecordType("<119,120,8>",(a)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (b) != "undefined") {_RecordType("<122,123,8>",(b)); Inst6++; } } catch(e) {}
    }
  }

  let value = 0;
try { if (Inst10 <= 1000 && typeof (value) != "undefined") {_RecordType("<156,161,12>",(value)); Inst10++; } } catch(e) {}

  for (let i = 0; i < 1e4; ++i) {
try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<179,180,14>",(i)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<186,187,14>",(i)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<197,198,14>",(i)); Inst13++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (fib) != "undefined") {_RecordType("<214,217,15>",(fib)); Inst15++; } } catch(e) {}
    let f = fib();
try { if (Inst14 <= 1000 && typeof (f) != "undefined") {_RecordType("<210,211,15>",(f)); Inst14++; } } catch(e) {}

    for (let i = 0; i < 100; ++i) {
try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<235,236,17>",(i)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (i) != "undefined") {_RecordType("<242,243,17>",(i)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (i) != "undefined") {_RecordType("<253,254,17>",(i)); Inst18++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (f.next().value) != "undefined") {_RecordType("<272,286,18>",(f.next().value)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (f.next) != "undefined") {_RecordType("<272,278,18>",(f.next)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (f) != "undefined") {_RecordType("<272,273,18>",(f)); Inst22++; } } catch(e) {}
      value = f.next().value;
try { if (Inst19 <= 1000 && typeof (value) != "undefined") {_RecordType("<264,269,18>",(value)); Inst19++; } } catch(e) {}
    }
  }

try { if (Inst23 <= 1000 && typeof (value) != "undefined") {_RecordType("<308,313,22>",(value)); Inst23++; } } catch(e) {}
  return value;
}();
try { if (Inst0 <= 1000 && typeof (result) != "undefined") {_RecordType("<4,10,1>",(result)); Inst0++; } } catch(e) {}

try { if (Inst24 <= 1000 && typeof (result) != "undefined") {_RecordType("<325,331,25>",(result)); Inst24++; } } catch(e) {}
if (result !== 354224848179262000000) {
try { if (Inst25 <= 1000 && typeof (Error) != "undefined") {_RecordType("<373,378,26>",(Error)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (result) != "undefined") {_RecordType("<392,398,26>",(result)); Inst26++; } } catch(e) {}
  throw new Error(`bad value:${result}`);
}

