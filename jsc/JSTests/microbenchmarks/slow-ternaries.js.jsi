var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst1 <= 1000 && typeof (test) != "undefined") {_RecordType("<22,26,1>",(test)); Inst1++; } } catch(e) {}
var asmMod = function test(glob, env, b) {
try { if (Inst2 <= 1000 && typeof (glob) != "undefined") {_RecordType("<27,31,1>",(glob)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (env) != "undefined") {_RecordType("<33,36,1>",(env)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (b) != "undefined") {_RecordType("<38,39,1>",(b)); Inst4++; } } catch(e) {}
  'use asm';

try { if (Inst6 <= 1000 && typeof (glob.Int8Array) != "undefined") {_RecordType("<74,88,4>",(glob.Int8Array)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (glob) != "undefined") {_RecordType("<74,78,4>",(glob)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (b) != "undefined") {_RecordType("<89,90,4>",(b)); Inst8++; } } catch(e) {}
  const i8 = new glob.Int8Array(b);
try { if (Inst5 <= 1000 && typeof (i8) != "undefined") {_RecordType("<65,67,4>",(i8)); Inst5++; } } catch(e) {}

try { if (Inst9 <= 1000 && typeof (f) != "undefined") {_RecordType("<105,106,6>",(f)); Inst9++; } } catch(e) {}
  function f() {
    var i = 0;
try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<119,120,7>",(i)); Inst10++; } } catch(e) {}
    var r = 0;
try { if (Inst11 <= 1000 && typeof (r) != "undefined") {_RecordType("<134,135,8>",(r)); Inst11++; } } catch(e) {}

    for (i = 0; (i | 0) < 3000000; i = i + 1 | 0) {
try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<151,152,10>",(i)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<159,160,10>",(i)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<177,178,10>",(i)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<181,182,10>",(i)); Inst15++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (i8[(i & 0xff) >> 0]) != "undefined") {_RecordType("<205,224,11>",(i8[(i & 0xff) >> 0])); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (i8) != "undefined") {_RecordType("<205,207,11>",(i8)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (i) != "undefined") {_RecordType("<209,210,11>",(i)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (i8[(i & 0xff) + 1 >> 0]) != "undefined") {_RecordType("<238,261,11>",(i8[(i & 0xff) + 1 >> 0])); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (i8) != "undefined") {_RecordType("<238,240,11>",(i8)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<242,243,11>",(i)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (i8[(i & 0xff) + 2 >> 0]) != "undefined") {_RecordType("<275,298,11>",(i8[(i & 0xff) + 2 >> 0])); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (i8) != "undefined") {_RecordType("<275,277,11>",(i8)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<279,280,11>",(i)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (i8[(i & 0xff) + 3 >> 0]) != "undefined") {_RecordType("<312,335,11>",(i8[(i & 0xff) + 3 >> 0])); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (i8) != "undefined") {_RecordType("<312,314,11>",(i8)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (i) != "undefined") {_RecordType("<316,317,11>",(i)); Inst27++; } } catch(e) {}
      if ((i8[(i & 0xff) >> 0] | 0) == 1 ? (i8[(i & 0xff) + 1 >> 0] | 0) == 2 ? (i8[(i & 0xff) + 2 >> 0] | 0) == 3 ? (i8[(i & 0xff) + 3 >> 0] | 0) == 4 : 0 : 0 : 0) {
        r = 1;
try { if (Inst28 <= 1000 && typeof (r) != "undefined") {_RecordType("<369,370,12>",(r)); Inst28++; } } catch(e) {}
      }
    }

try { if (Inst29 <= 1000 && typeof (r) != "undefined") {_RecordType("<402,403,16>",(r)); Inst29++; } } catch(e) {}
    return r | 0;
  }

try { if (Inst30 <= 1000 && typeof (f) != "undefined") {_RecordType("<423,424,19>",(f)); Inst30++; } } catch(e) {}
  return f;
};
try { if (Inst0 <= 1000 && typeof (asmMod) != "undefined") {_RecordType("<4,10,1>",(asmMod)); Inst0++; } } catch(e) {}

try { if (Inst32 <= 1000 && typeof (ArrayBuffer) != "undefined") {_RecordType("<448,459,22>",(ArrayBuffer)); Inst32++; } } catch(e) {}
var buffer1 = new ArrayBuffer(64 * 1024);
try { if (Inst31 <= 1000 && typeof (buffer1) != "undefined") {_RecordType("<434,441,22>",(buffer1)); Inst31++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof (asmMod) != "undefined") {_RecordType("<483,489,23>",(asmMod)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (buffer1) != "undefined") {_RecordType("<500,507,23>",(buffer1)); Inst35++; } } catch(e) {}
var asm1 = asmMod(this, {}, buffer1);
try { if (Inst33 <= 1000 && typeof (asm1) != "undefined") {_RecordType("<476,480,23>",(asm1)); Inst33++; } } catch(e) {}

for (var i = 0; i < 5; i++) {
try { if (Inst36 <= 1000 && typeof (i) != "undefined") {_RecordType("<520,521,25>",(i)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (i) != "undefined") {_RecordType("<527,528,25>",(i)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (i) != "undefined") {_RecordType("<534,535,25>",(i)); Inst38++; } } catch(e) {}
try { if (Inst39 <= 1000 && typeof (asm1) != "undefined") {_RecordType("<543,547,26>",(asm1)); Inst39++; } } catch(e) {}
  asm1();
}

