var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (bar) != "undefined") {_RecordType("<9,12,1>",(bar)); Inst0++; } } catch(e) {}
function bar(map, p) {
try { if (Inst1 <= 1000 && typeof (map) != "undefined") {_RecordType("<13,16,1>",(map)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (p) != "undefined") {_RecordType("<18,19,1>",(p)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (map.get) != "undefined") {_RecordType("<32,39,2>",(map.get)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (map) != "undefined") {_RecordType("<32,35,2>",(map)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (p) != "undefined") {_RecordType("<40,41,2>",(p)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (map.get) != "undefined") {_RecordType("<45,52,2>",(map.get)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (map) != "undefined") {_RecordType("<45,48,2>",(map)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (p) != "undefined") {_RecordType("<53,54,2>",(p)); Inst8++; } } catch(e) {}
  return map.get(p) + map.get(p);
}

try { if (Inst9 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<60,68,5>",(noInline)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (bar) != "undefined") {_RecordType("<69,72,5>",(bar)); Inst10++; } } catch(e) {}
noInline(bar);

try { if (Inst11 <= 1000 && typeof (foo) != "undefined") {_RecordType("<85,88,7>",(foo)); Inst11++; } } catch(e) {}
function foo() {
try { if (Inst13 <= 1000 && typeof (Map) != "undefined") {_RecordType("<109,112,8>",(Map)); Inst13++; } } catch(e) {}
  let map = new Map();
try { if (Inst12 <= 1000 && typeof (map) != "undefined") {_RecordType("<99,102,8>",(map)); Inst12++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<165,171,9>",(Symbol)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<183,192,9>",(undefined)); Inst16++; } } catch(e) {}
  let items = [[10, 50], ["450", 78], [{}, {}], [Symbol(), true], [undefined, null], [true, null], [false, true], [45.87, {}]];
try { if (Inst14 <= 1000 && typeof (items) != "undefined") {_RecordType("<122,127,9>",(items)); Inst14++; } } catch(e) {}

  for (let [key, value] of items) {
try { if (Inst17 <= 1000 && typeof (key) != "undefined") {_RecordType("<257,260,11>",(key)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (value) != "undefined") {_RecordType("<262,267,11>",(value)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (items) != "undefined") {_RecordType("<272,277,11>",(items)); Inst19++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (map.set) != "undefined") {_RecordType("<285,292,12>",(map.set)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (map) != "undefined") {_RecordType("<285,288,12>",(map)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (key) != "undefined") {_RecordType("<293,296,12>",(key)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (value) != "undefined") {_RecordType("<298,303,12>",(value)); Inst23++; } } catch(e) {}
    map.set(key, value);
  }

try { if (Inst25 <= 1000 && typeof (Date.now) != "undefined") {_RecordType("<325,333,15>",(Date.now)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Date) != "undefined") {_RecordType("<325,329,15>",(Date)); Inst26++; } } catch(e) {}
  let start = Date.now();
try { if (Inst24 <= 1000 && typeof (start) != "undefined") {_RecordType("<317,322,15>",(start)); Inst24++; } } catch(e) {}

  for (let i = 0; i < 5000000; i++) {
try { if (Inst27 <= 1000 && typeof (i) != "undefined") {_RecordType("<349,350,17>",(i)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (i) != "undefined") {_RecordType("<356,357,17>",(i)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (i) != "undefined") {_RecordType("<369,370,17>",(i)); Inst29++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (bar) != "undefined") {_RecordType("<380,383,18>",(bar)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (map) != "undefined") {_RecordType("<384,387,18>",(map)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (items[i % items.length][0]) != "undefined") {_RecordType("<389,415,18>",(items[i % items.length][0])); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (items[i % items.length]) != "undefined") {_RecordType("<389,412,18>",(items[i % items.length])); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (items) != "undefined") {_RecordType("<389,394,18>",(items)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (i) != "undefined") {_RecordType("<395,396,18>",(i)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (items.length) != "undefined") {_RecordType("<399,411,18>",(items.length)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (items) != "undefined") {_RecordType("<399,404,18>",(items)); Inst37++; } } catch(e) {}
    bar(map, items[i % items.length][0]);
  }

  const verbose = false;
try { if (Inst38 <= 1000 && typeof (verbose) != "undefined") {_RecordType("<431,438,21>",(verbose)); Inst38++; } } catch(e) {}

try { if (Inst39 <= 1000 && typeof (verbose) != "undefined") {_RecordType("<455,462,23>",(verbose)); Inst39++; } } catch(e) {}
  if (verbose) {
try { if (Inst40 <= 1000 && typeof (print) != "undefined") {_RecordType("<470,475,24>",(print)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (Date.now) != "undefined") {_RecordType("<476,484,24>",(Date.now)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (Date) != "undefined") {_RecordType("<476,480,24>",(Date)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (start) != "undefined") {_RecordType("<489,494,24>",(start)); Inst43++; } } catch(e) {}
    print(Date.now() - start);
  }
}

try { if (Inst44 <= 1000 && typeof (foo) != "undefined") {_RecordType("<504,507,28>",(foo)); Inst44++; } } catch(e) {}
foo();

