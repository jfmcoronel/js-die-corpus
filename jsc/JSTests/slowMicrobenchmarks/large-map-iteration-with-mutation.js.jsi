var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (bar) != "undefined") {_RecordType("<9,12,1>",(bar)); Inst0++; } } catch(e) {}
function bar(map) {
try { if (Inst1 <= 1000 && typeof (map) != "undefined") {_RecordType("<13,16,1>",(map)); Inst1++; } } catch(e) {}
  for (let [key, value] of map) {
try { if (Inst2 <= 1000 && typeof (key) != "undefined") {_RecordType("<32,35,2>",(key)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (value) != "undefined") {_RecordType("<37,42,2>",(value)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (map) != "undefined") {_RecordType("<47,50,2>",(map)); Inst4++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (value) != "undefined") {_RecordType("<62,67,3>",(value)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (key) != "undefined") {_RecordType("<76,79,3>",(key)); Inst6++; } } catch(e) {}
    if (value - 1 !== key) {
try { if (Inst7 <= 1000 && typeof (Error) != "undefined") {_RecordType("<99,104,4>",(Error)); Inst7++; } } catch(e) {}
      throw new Error("Bad iteration!");
    }

try { if (Inst8 <= 1000 && typeof (Math.random) != "undefined") {_RecordType("<139,150,7>",(Math.random)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Math) != "undefined") {_RecordType("<139,143,7>",(Math)); Inst9++; } } catch(e) {}
    if (Math.random() > 0.95) {
try { if (Inst10 <= 1000 && typeof (map.delete) != "undefined") {_RecordType("<169,179,8>",(map.delete)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (map) != "undefined") {_RecordType("<169,172,8>",(map)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (key) != "undefined") {_RecordType("<180,183,8>",(key)); Inst12++; } } catch(e) {}
      map.delete(key);
    }
  }
}

try { if (Inst13 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<199,207,13>",(noInline)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (bar) != "undefined") {_RecordType("<208,211,13>",(bar)); Inst14++; } } catch(e) {}
noInline(bar);

try { if (Inst15 <= 1000 && typeof (foo) != "undefined") {_RecordType("<224,227,15>",(foo)); Inst15++; } } catch(e) {}
function foo() {
try { if (Inst17 <= 1000 && typeof (Map) != "undefined") {_RecordType("<248,251,16>",(Map)); Inst17++; } } catch(e) {}
  let map = new Map();
try { if (Inst16 <= 1000 && typeof (map) != "undefined") {_RecordType("<238,241,16>",(map)); Inst16++; } } catch(e) {}

  for (let i = 0; i < 80000; i++) {
try { if (Inst18 <= 1000 && typeof (i) != "undefined") {_RecordType("<267,268,18>",(i)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (i) != "undefined") {_RecordType("<274,275,18>",(i)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<285,286,18>",(i)); Inst20++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (map.set) != "undefined") {_RecordType("<296,303,19>",(map.set)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (map) != "undefined") {_RecordType("<296,299,19>",(map)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<304,305,19>",(i)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<307,308,19>",(i)); Inst24++; } } catch(e) {}
    map.set(i, i + 1);
  }

try { if (Inst26 <= 1000 && typeof (Date.now) != "undefined") {_RecordType("<334,342,22>",(Date.now)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (Date) != "undefined") {_RecordType("<334,338,22>",(Date)); Inst27++; } } catch(e) {}
  let start = Date.now();
try { if (Inst25 <= 1000 && typeof (start) != "undefined") {_RecordType("<326,331,22>",(start)); Inst25++; } } catch(e) {}

  for (let i = 0; i < 100; i++) {
try { if (Inst28 <= 1000 && typeof (i) != "undefined") {_RecordType("<358,359,24>",(i)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (i) != "undefined") {_RecordType("<365,366,24>",(i)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (i) != "undefined") {_RecordType("<374,375,24>",(i)); Inst30++; } } catch(e) {}
try { if (Inst31 <= 1000 && typeof (bar) != "undefined") {_RecordType("<385,388,25>",(bar)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (map) != "undefined") {_RecordType("<389,392,25>",(map)); Inst32++; } } catch(e) {}
    bar(map);
  }

  const verbose = false;
try { if (Inst33 <= 1000 && typeof (verbose) != "undefined") {_RecordType("<408,415,28>",(verbose)); Inst33++; } } catch(e) {}

try { if (Inst34 <= 1000 && typeof (verbose) != "undefined") {_RecordType("<432,439,30>",(verbose)); Inst34++; } } catch(e) {}
  if (verbose) {
try { if (Inst35 <= 1000 && typeof (print) != "undefined") {_RecordType("<447,452,31>",(print)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (Date.now) != "undefined") {_RecordType("<453,461,31>",(Date.now)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (Date) != "undefined") {_RecordType("<453,457,31>",(Date)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (start) != "undefined") {_RecordType("<466,471,31>",(start)); Inst38++; } } catch(e) {}
    print(Date.now() - start);
  }
}

try { if (Inst39 <= 1000 && typeof (foo) != "undefined") {_RecordType("<481,484,35>",(foo)); Inst39++; } } catch(e) {}
foo();

