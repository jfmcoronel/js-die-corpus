var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (assert) != "undefined") {_RecordType("<9,15,1>",(assert)); Inst0++; } } catch(e) {}
function assert(b) {
try { if (Inst1 <= 1000 && typeof (b) != "undefined") {_RecordType("<16,17,1>",(b)); Inst1++; } } catch(e) {}
  ;
}

try { if (Inst2 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<28,36,5>",(noInline)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (assert) != "undefined") {_RecordType("<37,43,5>",(assert)); Inst3++; } } catch(e) {}
noInline(assert);
let tests = [["foo", "foo"], ["foooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo", "foooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo"]];
try { if (Inst4 <= 1000 && typeof (tests) != "undefined") {_RecordType("<50,55,6>",(tests)); Inst4++; } } catch(e) {}

try { if (Inst5 <= 1000 && typeof (foo) != "undefined") {_RecordType("<390,393,8>",(foo)); Inst5++; } } catch(e) {}
function foo(a) {
try { if (Inst6 <= 1000 && typeof (a) != "undefined") {_RecordType("<394,395,8>",(a)); Inst6++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (a.toLowerCase) != "undefined") {_RecordType("<408,421,9>",(a.toLowerCase)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (a) != "undefined") {_RecordType("<408,409,9>",(a)); Inst8++; } } catch(e) {}
  return a.toLowerCase();
}

try { if (Inst9 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<428,436,12>",(noInline)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (foo) != "undefined") {_RecordType("<437,440,12>",(foo)); Inst10++; } } catch(e) {}
noInline(foo);

try { if (Inst11 <= 1000 && typeof (bar) != "undefined") {_RecordType("<453,456,14>",(bar)); Inst11++; } } catch(e) {}
function bar(a) {
try { if (Inst12 <= 1000 && typeof (a) != "undefined") {_RecordType("<457,458,14>",(a)); Inst12++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (a.toLowerCase) != "undefined") {_RecordType("<464,477,15>",(a.toLowerCase)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (a) != "undefined") {_RecordType("<464,465,15>",(a)); Inst14++; } } catch(e) {}
  a.toLowerCase();
  true;
  // side effects
try { if (Inst15 <= 1000 && typeof (a.toLowerCase) != "undefined") {_RecordType("<509,522,18>",(a.toLowerCase)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (a) != "undefined") {_RecordType("<509,510,18>",(a)); Inst16++; } } catch(e) {}
  a.toLowerCase();
}

try { if (Inst17 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<529,537,21>",(noInline)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (bar) != "undefined") {_RecordType("<538,541,21>",(bar)); Inst18++; } } catch(e) {}
noInline(bar);
try { if (Inst20 <= 1000 && typeof (Date.now) != "undefined") {_RecordType("<556,564,22>",(Date.now)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Date) != "undefined") {_RecordType("<556,560,22>",(Date)); Inst21++; } } catch(e) {}
let start = Date.now();
try { if (Inst19 <= 1000 && typeof (start) != "undefined") {_RecordType("<548,553,22>",(start)); Inst19++; } } catch(e) {}

for (let i = 0; i < 500000; i++) {
try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<578,579,24>",(i)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<585,586,24>",(i)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<597,598,24>",(i)); Inst24++; } } catch(e) {}
  for (let i = 0; i < tests.length; i++) {
try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<615,616,25>",(i)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (i) != "undefined") {_RecordType("<622,623,25>",(i)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (tests.length) != "undefined") {_RecordType("<626,638,25>",(tests.length)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (tests) != "undefined") {_RecordType("<626,631,25>",(tests)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (i) != "undefined") {_RecordType("<640,641,25>",(i)); Inst29++; } } catch(e) {}
try { if (Inst31 <= 1000 && typeof (tests[i][0]) != "undefined") {_RecordType("<662,673,26>",(tests[i][0])); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (tests[i]) != "undefined") {_RecordType("<662,670,26>",(tests[i])); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (tests) != "undefined") {_RecordType("<662,667,26>",(tests)); Inst33++; } } catch(e) {}
    let test = tests[i][0];
try { if (Inst30 <= 1000 && typeof (test) != "undefined") {_RecordType("<655,659,26>",(test)); Inst30++; } } catch(e) {}
try { if (Inst35 <= 1000 && typeof (tests[i][1]) != "undefined") {_RecordType("<692,703,27>",(tests[i][1])); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (tests[i]) != "undefined") {_RecordType("<692,700,27>",(tests[i])); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (tests) != "undefined") {_RecordType("<692,697,27>",(tests)); Inst37++; } } catch(e) {}
    let result = tests[i][1];
try { if (Inst34 <= 1000 && typeof (result) != "undefined") {_RecordType("<683,689,27>",(result)); Inst34++; } } catch(e) {}
try { if (Inst38 <= 1000 && typeof (foo) != "undefined") {_RecordType("<709,712,28>",(foo)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (test) != "undefined") {_RecordType("<713,717,28>",(test)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (result) != "undefined") {_RecordType("<723,729,28>",(result)); Inst40++; } } catch(e) {}
    foo(test) === result;
try { if (Inst41 <= 1000 && typeof (bar) != "undefined") {_RecordType("<735,738,29>",(bar)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (test) != "undefined") {_RecordType("<739,743,29>",(test)); Inst42++; } } catch(e) {}
    bar(test);
  }
}

const verbose = false;
try { if (Inst43 <= 1000 && typeof (verbose) != "undefined") {_RecordType("<759,766,33>",(verbose)); Inst43++; } } catch(e) {}

try { if (Inst44 <= 1000 && typeof (verbose) != "undefined") {_RecordType("<781,788,35>",(verbose)); Inst44++; } } catch(e) {}
if (verbose) {
try { if (Inst45 <= 1000 && typeof (print) != "undefined") {_RecordType("<794,799,36>",(print)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (Date.now) != "undefined") {_RecordType("<800,808,36>",(Date.now)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (Date) != "undefined") {_RecordType("<800,804,36>",(Date)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (start) != "undefined") {_RecordType("<813,818,36>",(start)); Inst48++; } } catch(e) {}
  print(Date.now() - start);
}

