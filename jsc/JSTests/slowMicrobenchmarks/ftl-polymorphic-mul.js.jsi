var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//@ runFTLNoCJIT
var o1 = {
  i: 0,
  valueOf: function () {
try { if (Inst1 <= 1000 && typeof (this.i) != "undefined") {_RecordType("<72,78,5>",(this.i)); Inst1++; } } catch(e) {}
    return this.i;
  }
};
try { if (Inst0 <= 1000 && typeof (o1) != "undefined") {_RecordType("<21,23,2>",(o1)); Inst0++; } } catch(e) {}
result = 0;
try { if (Inst2 <= 1000 && typeof (result) != "undefined") {_RecordType("<87,93,8>",(result)); Inst2++; } } catch(e) {}

try { if (Inst3 <= 1000 && typeof (foo) != "undefined") {_RecordType("<109,112,10>",(foo)); Inst3++; } } catch(e) {}
function foo(a, b) {
try { if (Inst4 <= 1000 && typeof (a) != "undefined") {_RecordType("<113,114,10>",(a)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (b) != "undefined") {_RecordType("<116,117,10>",(b)); Inst5++; } } catch(e) {}
  var result = 0;
try { if (Inst6 <= 1000 && typeof (result) != "undefined") {_RecordType("<127,133,11>",(result)); Inst6++; } } catch(e) {}

  for (var j = 0; j < 10; j++) {
try { if (Inst7 <= 1000 && typeof (j) != "undefined") {_RecordType("<151,152,13>",(j)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (j) != "undefined") {_RecordType("<158,159,13>",(j)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (j) != "undefined") {_RecordType("<166,167,13>",(j)); Inst9++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (a) != "undefined") {_RecordType("<181,182,14>",(a)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (b) != "undefined") {_RecordType("<185,186,14>",(b)); Inst11++; } } catch(e) {}
    if (a > b) {
try { if (Inst13 <= 1000 && typeof (a) != "undefined") {_RecordType("<206,207,15>",(a)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (b) != "undefined") {_RecordType("<210,211,15>",(b)); Inst14++; } } catch(e) {}
      result += a * b;
try { if (Inst12 <= 1000 && typeof (result) != "undefined") {_RecordType("<196,202,15>",(result)); Inst12++; } } catch(e) {}
    } else {
try { if (Inst16 <= 1000 && typeof (b) != "undefined") {_RecordType("<242,243,17>",(b)); Inst16++; } } catch(e) {}
      result += b * 1;
try { if (Inst15 <= 1000 && typeof (result) != "undefined") {_RecordType("<232,238,17>",(result)); Inst15++; } } catch(e) {}
    }
  } // Busy work just to allow the DFG and FTL to optimize this out. If the above causes
  // us to speculation fail out to the baseline, this busy work will take a lot longer
  // to run.
  // This loop below also gets the DFG to compile this function sooner.


try { if (Inst18 <= 1000 && typeof (result) != "undefined") {_RecordType("<537,543,25>",(result)); Inst18++; } } catch(e) {}
  var origResult = result;
try { if (Inst17 <= 1000 && typeof (origResult) != "undefined") {_RecordType("<524,534,25>",(origResult)); Inst17++; } } catch(e) {}

  for (var i = 1; i < 1000; i++) {
try { if (Inst19 <= 1000 && typeof (i) != "undefined") {_RecordType("<557,558,27>",(i)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<564,565,27>",(i)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<574,575,27>",(i)); Inst21++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (result) != "undefined") {_RecordType("<594,600,28>",(result)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<603,604,28>",(i)); Inst24++; } } catch(e) {}
    result = result * i;
try { if (Inst22 <= 1000 && typeof (result) != "undefined") {_RecordType("<585,591,28>",(result)); Inst22++; } } catch(e) {}
  }

try { if (Inst26 <= 1000 && typeof (origResult) != "undefined") {_RecordType("<622,632,31>",(origResult)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (result) != "undefined") {_RecordType("<635,641,31>",(result)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (origResult) != "undefined") {_RecordType("<644,654,31>",(origResult)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (result) != "undefined") {_RecordType("<657,663,31>",(result)); Inst29++; } } catch(e) {}
  result = origResult < result ? origResult : result;
try { if (Inst25 <= 1000 && typeof (result) != "undefined") {_RecordType("<613,619,31>",(result)); Inst25++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (result) != "undefined") {_RecordType("<674,680,32>",(result)); Inst30++; } } catch(e) {}
  return result;
}

try { if (Inst31 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<685,693,35>",(noInline)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (foo) != "undefined") {_RecordType("<694,697,35>",(foo)); Inst32++; } } catch(e) {}
noInline(foo);
var iterations;
try { if (Inst33 <= 1000 && typeof (iterations) != "undefined") {_RecordType("<704,714,36>",(iterations)); Inst33++; } } catch(e) {}
var expectedResult;
try { if (Inst34 <= 1000 && typeof (expectedResult) != "undefined") {_RecordType("<720,734,37>",(expectedResult)); Inst34++; } } catch(e) {}

try { if (Inst35 <= 1000 && typeof (this.window) != "undefined") {_RecordType("<741,752,39>",(this.window)); Inst35++; } } catch(e) {}
if (this.window) {
  // The layout test doesn't like too many iterations and may time out.
  iterations = 10000;
try { if (Inst36 <= 1000 && typeof (iterations) != "undefined") {_RecordType("<830,840,41>",(iterations)); Inst36++; } } catch(e) {}
  expectedResult = 5000495600;
try { if (Inst37 <= 1000 && typeof (expectedResult) != "undefined") {_RecordType("<852,866,42>",(expectedResult)); Inst37++; } } catch(e) {}
} else {
  iterations = 100000;
try { if (Inst38 <= 1000 && typeof (iterations) != "undefined") {_RecordType("<892,902,44>",(iterations)); Inst38++; } } catch(e) {}
  expectedResult = 500004995600;
try { if (Inst39 <= 1000 && typeof (expectedResult) != "undefined") {_RecordType("<915,929,45>",(expectedResult)); Inst39++; } } catch(e) {}
}

for (var i = 0; i <= iterations; i++) {
try { if (Inst40 <= 1000 && typeof (i) != "undefined") {_RecordType("<958,959,48>",(i)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (i) != "undefined") {_RecordType("<965,966,48>",(i)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (iterations) != "undefined") {_RecordType("<970,980,48>",(iterations)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (i) != "undefined") {_RecordType("<982,983,48>",(i)); Inst43++; } } catch(e) {}
try { if (Inst46 <= 1000 && typeof (i) != "undefined") {_RecordType("<998,999,49>",(i)); Inst46++; } } catch(e) {}
  o1.i = i;
try { if (Inst44 <= 1000 && typeof (o1.i) != "undefined") {_RecordType("<991,995,49>",(o1.i)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (o1) != "undefined") {_RecordType("<991,993,49>",(o1)); Inst45++; } } catch(e) {}

try { if (Inst47 <= 1000 && typeof (i) != "undefined") {_RecordType("<1008,1009,51>",(i)); Inst47++; } } catch(e) {}
  if (i % 2) {
try { if (Inst49 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1031,1034,52>",(foo)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (o1) != "undefined") {_RecordType("<1035,1037,52>",(o1)); Inst50++; } } catch(e) {}
    result += foo(o1, 10);
try { if (Inst48 <= 1000 && typeof (result) != "undefined") {_RecordType("<1021,1027,52>",(result)); Inst48++; } } catch(e) {}
  } else {
try { if (Inst52 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1069,1072,54>",(foo)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (i) != "undefined") {_RecordType("<1073,1074,54>",(i)); Inst53++; } } catch(e) {}
    result += foo(i, 10);
try { if (Inst51 <= 1000 && typeof (result) != "undefined") {_RecordType("<1059,1065,54>",(result)); Inst51++; } } catch(e) {}
  }
}

try { if (Inst54 <= 1000 && typeof (result) != "undefined") {_RecordType("<1092,1098,58>",(result)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (expectedResult) != "undefined") {_RecordType("<1102,1116,58>",(expectedResult)); Inst55++; } } catch(e) {}
if (result != expectedResult) {
try { if (Inst56 <= 1000 && typeof (result) != "undefined") {_RecordType("<1145,1151,59>",(result)); Inst56++; } } catch(e) {}
  throw "Bad result: " + result;
}

