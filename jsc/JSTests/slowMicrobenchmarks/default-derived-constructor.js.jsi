var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
//@ skip if $architecture == "x86"
try { if (Inst0 <= 1000 && typeof (createClassHierarchy) != "undefined") {_RecordType("<44,64,2>",(createClassHierarchy)); Inst0++; } } catch(e) {}
function createClassHierarchy(depth) {
try { if (Inst1 <= 1000 && typeof (depth) != "undefined") {_RecordType("<65,70,2>",(depth)); Inst1++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (Base) != "undefined") {_RecordType("<101,105,3>",(Base)); Inst3++; } } catch(e) {}
  let currentClass = class Base {};
try { if (Inst2 <= 1000 && typeof (currentClass) != "undefined") {_RecordType("<80,92,3>",(currentClass)); Inst2++; } } catch(e) {}

  for (let i = 0; i < depth; i++) {
try { if (Inst4 <= 1000 && typeof (i) != "undefined") {_RecordType("<122,123,5>",(i)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (i) != "undefined") {_RecordType("<129,130,5>",(i)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (depth) != "undefined") {_RecordType("<133,138,5>",(depth)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<140,141,5>",(i)); Inst7++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (currentClass) != "undefined") {_RecordType("<180,192,6>",(currentClass)); Inst9++; } } catch(e) {}
    currentClass = class extends currentClass {};
try { if (Inst8 <= 1000 && typeof (currentClass) != "undefined") {_RecordType("<151,163,6>",(currentClass)); Inst8++; } } catch(e) {}
  }

try { if (Inst10 <= 1000 && typeof (currentClass) != "undefined") {_RecordType("<211,223,9>",(currentClass)); Inst10++; } } catch(e) {}
  return currentClass;
}

try { if (Inst12 <= 1000 && typeof (createClassHierarchy) != "undefined") {_RecordType("<239,259,12>",(createClassHierarchy)); Inst12++; } } catch(e) {}
let ctor = createClassHierarchy(10);
try { if (Inst11 <= 1000 && typeof (ctor) != "undefined") {_RecordType("<232,236,12>",(ctor)); Inst11++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (Date.now) != "undefined") {_RecordType("<277,285,13>",(Date.now)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Date) != "undefined") {_RecordType("<277,281,13>",(Date)); Inst15++; } } catch(e) {}
let start = Date.now();
try { if (Inst13 <= 1000 && typeof (start) != "undefined") {_RecordType("<269,274,13>",(start)); Inst13++; } } catch(e) {}

for (let i = 0; i < 500000; i++) {
try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<299,300,15>",(i)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (i) != "undefined") {_RecordType("<306,307,15>",(i)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (i) != "undefined") {_RecordType("<318,319,15>",(i)); Inst18++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (ctor) != "undefined") {_RecordType("<339,343,16>",(ctor)); Inst20++; } } catch(e) {}
  let x = new ctor({}, {}, 20, 30, 40, 50, 60, {}, 80, true, false);
try { if (Inst19 <= 1000 && typeof (x) != "undefined") {_RecordType("<331,332,16>",(x)); Inst19++; } } catch(e) {}
}

const verbose = false;
try { if (Inst21 <= 1000 && typeof (verbose) != "undefined") {_RecordType("<403,410,19>",(verbose)); Inst21++; } } catch(e) {}

try { if (Inst22 <= 1000 && typeof (verbose) != "undefined") {_RecordType("<425,432,21>",(verbose)); Inst22++; } } catch(e) {}
if (verbose) {
try { if (Inst23 <= 1000 && typeof (print) != "undefined") {_RecordType("<438,443,22>",(print)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (Date.now) != "undefined") {_RecordType("<444,452,22>",(Date.now)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Date) != "undefined") {_RecordType("<444,448,22>",(Date)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (start) != "undefined") {_RecordType("<457,462,22>",(start)); Inst26++; } } catch(e) {}
  print(Date.now() - start);
}

