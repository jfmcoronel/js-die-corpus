var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (foo) != "undefined") {_RecordType("<9,12,1>",(foo)); Inst0++; } } catch(e) {}
function foo(arg) {
try { if (Inst1 <= 1000 && typeof (arg) != "undefined") {_RecordType("<13,16,1>",(arg)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (arg) != "undefined") {_RecordType("<33,36,2>",(arg)); Inst2++; } } catch(e) {}
  return [...arg];
}

try { if (Inst3 <= 1000 && typeof (noInline) != "undefined") {_RecordType("<42,50,5>",(noInline)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (foo) != "undefined") {_RecordType("<51,54,5>",(foo)); Inst4++; } } catch(e) {}
noInline(foo);
let arrays = [[10, 20, 40], [10.5, 20.5, 40.5], [20, {}, 8]];
try { if (Inst5 <= 1000 && typeof (arrays) != "undefined") {_RecordType("<61,67,6>",(arrays)); Inst5++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (Date.now) != "undefined") {_RecordType("<131,139,7>",(Date.now)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Date) != "undefined") {_RecordType("<131,135,7>",(Date)); Inst8++; } } catch(e) {}
let start = Date.now();
try { if (Inst6 <= 1000 && typeof (start) != "undefined") {_RecordType("<123,128,7>",(start)); Inst6++; } } catch(e) {}

for (let i = 0; i < 10000000; i++) {
try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<153,154,9>",(i)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<160,161,9>",(i)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<174,175,9>",(i)); Inst11++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (arrays[i % arrays.length]) != "undefined") {_RecordType("<195,220,10>",(arrays[i % arrays.length])); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (arrays) != "undefined") {_RecordType("<195,201,10>",(arrays)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<202,203,10>",(i)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (arrays.length) != "undefined") {_RecordType("<206,219,10>",(arrays.length)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (arrays) != "undefined") {_RecordType("<206,212,10>",(arrays)); Inst17++; } } catch(e) {}
  let array = arrays[i % arrays.length];
try { if (Inst12 <= 1000 && typeof (array) != "undefined") {_RecordType("<187,192,10>",(array)); Inst12++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (foo) != "undefined") {_RecordType("<224,227,11>",(foo)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (array) != "undefined") {_RecordType("<228,233,11>",(array)); Inst19++; } } catch(e) {}
  foo(array);
}

const verbose = false;
try { if (Inst20 <= 1000 && typeof (verbose) != "undefined") {_RecordType("<245,252,14>",(verbose)); Inst20++; } } catch(e) {}

try { if (Inst21 <= 1000 && typeof (verbose) != "undefined") {_RecordType("<267,274,16>",(verbose)); Inst21++; } } catch(e) {}
if (verbose) {
try { if (Inst22 <= 1000 && typeof (print) != "undefined") {_RecordType("<280,285,17>",(print)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Date.now) != "undefined") {_RecordType("<286,294,17>",(Date.now)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (Date) != "undefined") {_RecordType("<286,290,17>",(Date)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (start) != "undefined") {_RecordType("<299,304,17>",(start)); Inst25++; } } catch(e) {}
  print(Date.now() - start);
}

