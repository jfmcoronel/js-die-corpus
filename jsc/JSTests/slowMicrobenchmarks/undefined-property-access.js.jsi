var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
var someGlobal; // This is a simple speed test. It should go fast.
try { if (Inst0 <= 1000 && typeof (someGlobal) != "undefined") {_RecordType("<4,14,1>",(someGlobal)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (foo) != "undefined") {_RecordType("<77,80,3>",(foo)); Inst1++; } } catch(e) {}
function foo() {
  var myObject = {};
try { if (Inst2 <= 1000 && typeof (myObject) != "undefined") {_RecordType("<91,99,4>",(myObject)); Inst2++; } } catch(e) {}

  for (var i = 0; i < 10000000; ++i) {
try { if (Inst3 <= 1000 && typeof (i) != "undefined") {_RecordType("<118,119,6>",(i)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (i) != "undefined") {_RecordType("<125,126,6>",(i)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (i) != "undefined") {_RecordType("<141,142,6>",(i)); Inst5++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (myObject.undefinedProperty) != "undefined") {_RecordType("<163,189,7>",(myObject.undefinedProperty)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (myObject) != "undefined") {_RecordType("<163,171,7>",(myObject)); Inst8++; } } catch(e) {}
    someGlobal = myObject.undefinedProperty;
try { if (Inst6 <= 1000 && typeof (someGlobal) != "undefined") {_RecordType("<150,160,7>",(someGlobal)); Inst6++; } } catch(e) {}
  }

try { if (Inst9 <= 1000 && typeof (someGlobal) != "undefined") {_RecordType("<205,215,10>",(someGlobal)); Inst9++; } } catch(e) {}
  return someGlobal;
}

try { if (Inst11 <= 1000 && typeof (foo) != "undefined") {_RecordType("<229,232,13>",(foo)); Inst11++; } } catch(e) {}
result = foo();
try { if (Inst10 <= 1000 && typeof (result) != "undefined") {_RecordType("<220,226,13>",(result)); Inst10++; } } catch(e) {}

try { if (Inst12 <= 1000 && typeof (result) != "undefined") {_RecordType("<241,247,15>",(result)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<251,260,15>",(undefined)); Inst13++; } } catch(e) {}
if (result != undefined) {
try { if (Inst14 <= 1000 && typeof (Error) != "undefined") {_RecordType("<276,281,16>",(Error)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (result) != "undefined") {_RecordType("<299,305,16>",(result)); Inst15++; } } catch(e) {}
  throw new Error("Bad result: " + result);
} // This test checks that a cached property lookup miss doesn't continue to fire when the property suddenly appears on the object.


try { if (Inst16 <= 1000 && typeof (bar) != "undefined") {_RecordType("<451,454,20>",(bar)); Inst16++; } } catch(e) {}
function bar() {
  var myObject = {};
try { if (Inst17 <= 1000 && typeof (myObject) != "undefined") {_RecordType("<465,473,21>",(myObject)); Inst17++; } } catch(e) {}

  for (var i = 0; i < 100000000; ++i) {
try { if (Inst18 <= 1000 && typeof (i) != "undefined") {_RecordType("<492,493,23>",(i)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (i) != "undefined") {_RecordType("<499,500,23>",(i)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<516,517,23>",(i)); Inst20++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (myObject.someProperty) != "undefined") {_RecordType("<538,559,24>",(myObject.someProperty)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (myObject) != "undefined") {_RecordType("<538,546,24>",(myObject)); Inst23++; } } catch(e) {}
    someGlobal = myObject.someProperty;
try { if (Inst21 <= 1000 && typeof (someGlobal) != "undefined") {_RecordType("<525,535,24>",(someGlobal)); Inst21++; } } catch(e) {}

try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<570,571,26>",(i)); Inst24++; } } catch(e) {}
    if (i == 50000000) {
      myObject.someProperty = 1;
try { if (Inst25 <= 1000 && typeof (myObject.someProperty) != "undefined") {_RecordType("<593,614,27>",(myObject.someProperty)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (myObject) != "undefined") {_RecordType("<593,601,27>",(myObject)); Inst26++; } } catch(e) {}
    }
  }

try { if (Inst27 <= 1000 && typeof (someGlobal) != "undefined") {_RecordType("<640,650,31>",(someGlobal)); Inst27++; } } catch(e) {}
  return someGlobal;
}

try { if (Inst29 <= 1000 && typeof (bar) != "undefined") {_RecordType("<668,671,34>",(bar)); Inst29++; } } catch(e) {}
var result = bar();
try { if (Inst28 <= 1000 && typeof (result) != "undefined") {_RecordType("<659,665,34>",(result)); Inst28++; } } catch(e) {}

try { if (Inst30 <= 1000 && typeof (result) != "undefined") {_RecordType("<680,686,36>",(result)); Inst30++; } } catch(e) {}
if (result != 1) {
try { if (Inst31 <= 1000 && typeof (Error) != "undefined") {_RecordType("<707,712,37>",(Error)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (result) != "undefined") {_RecordType("<730,736,37>",(result)); Inst32++; } } catch(e) {}
  throw new Error("Bad result: " + result);
}

try { if (Inst34 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<755,764,40>",(undefined)); Inst34++; } } catch(e) {}
someGlobal = undefined; // This test checks that a cached property lookup miss doesn't continue to fire when the property suddenly appears on the object's prototype.
try { if (Inst33 <= 1000 && typeof (someGlobal) != "undefined") {_RecordType("<742,752,40>",(someGlobal)); Inst33++; } } catch(e) {}

try { if (Inst35 <= 1000 && typeof (baz) != "undefined") {_RecordType("<918,921,42>",(baz)); Inst35++; } } catch(e) {}
function baz() {
  var myPrototype = {};
try { if (Inst36 <= 1000 && typeof (myPrototype) != "undefined") {_RecordType("<932,943,43>",(myPrototype)); Inst36++; } } catch(e) {}
  var myObject = {};
try { if (Inst37 <= 1000 && typeof (myObject) != "undefined") {_RecordType("<956,964,44>",(myObject)); Inst37++; } } catch(e) {}
try { if (Inst40 <= 1000 && typeof (myPrototype) != "undefined") {_RecordType("<994,1005,45>",(myPrototype)); Inst40++; } } catch(e) {}
  myObject.__proto__ = myPrototype;
try { if (Inst38 <= 1000 && typeof (myObject.__proto__) != "undefined") {_RecordType("<973,991,45>",(myObject.__proto__)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (myObject) != "undefined") {_RecordType("<973,981,45>",(myObject)); Inst39++; } } catch(e) {}

  for (var i = 0; i < 100000000; ++i) {
try { if (Inst41 <= 1000 && typeof (i) != "undefined") {_RecordType("<1019,1020,47>",(i)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (i) != "undefined") {_RecordType("<1026,1027,47>",(i)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (i) != "undefined") {_RecordType("<1043,1044,47>",(i)); Inst43++; } } catch(e) {}
try { if (Inst45 <= 1000 && typeof (myObject.someProperty) != "undefined") {_RecordType("<1065,1086,48>",(myObject.someProperty)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (myObject) != "undefined") {_RecordType("<1065,1073,48>",(myObject)); Inst46++; } } catch(e) {}
    someGlobal = myObject.someProperty;
try { if (Inst44 <= 1000 && typeof (someGlobal) != "undefined") {_RecordType("<1052,1062,48>",(someGlobal)); Inst44++; } } catch(e) {}

try { if (Inst47 <= 1000 && typeof (i) != "undefined") {_RecordType("<1097,1098,50>",(i)); Inst47++; } } catch(e) {}
    if (i == 50000000) {
      myPrototype.someProperty = 2;
try { if (Inst48 <= 1000 && typeof (myPrototype.someProperty) != "undefined") {_RecordType("<1120,1144,51>",(myPrototype.someProperty)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (myPrototype) != "undefined") {_RecordType("<1120,1131,51>",(myPrototype)); Inst49++; } } catch(e) {}
    }
  }

try { if (Inst50 <= 1000 && typeof (someGlobal) != "undefined") {_RecordType("<1170,1180,55>",(someGlobal)); Inst50++; } } catch(e) {}
  return someGlobal;
}

try { if (Inst52 <= 1000 && typeof (baz) != "undefined") {_RecordType("<1198,1201,58>",(baz)); Inst52++; } } catch(e) {}
var result = baz();
try { if (Inst51 <= 1000 && typeof (result) != "undefined") {_RecordType("<1189,1195,58>",(result)); Inst51++; } } catch(e) {}

try { if (Inst53 <= 1000 && typeof (result) != "undefined") {_RecordType("<1210,1216,60>",(result)); Inst53++; } } catch(e) {}
if (result != 2) {
try { if (Inst54 <= 1000 && typeof (Error) != "undefined") {_RecordType("<1237,1242,61>",(Error)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (result) != "undefined") {_RecordType("<1260,1266,61>",(result)); Inst55++; } } catch(e) {}
  throw new Error("Bad result: " + result);
}

