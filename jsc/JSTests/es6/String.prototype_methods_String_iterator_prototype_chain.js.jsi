var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (test) != "undefined") {_RecordType("<9,13,1>",(test)); Inst0++; } } catch(e) {}
function test() {
  // Iterator instance
try { if (Inst2 <= 1000 && typeof (''[Symbol.iterator]) != "undefined") {_RecordType("<58,77,3>",(''[Symbol.iterator])); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<61,76,3>",(Symbol.iterator)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<61,67,3>",(Symbol)); Inst4++; } } catch(e) {}
  var iterator = ''[Symbol.iterator](); // %StringIteratorPrototype%
try { if (Inst1 <= 1000 && typeof (iterator) != "undefined") {_RecordType("<47,55,3>",(iterator)); Inst1++; } } catch(e) {}

try { if (Inst6 <= 1000 && typeof (Object.getPrototypeOf) != "undefined") {_RecordType("<126,147,5>",(Object.getPrototypeOf)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Object) != "undefined") {_RecordType("<126,132,5>",(Object)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (iterator) != "undefined") {_RecordType("<148,156,5>",(iterator)); Inst8++; } } catch(e) {}
  var proto1 = Object.getPrototypeOf(iterator); // %IteratorPrototype%
try { if (Inst5 <= 1000 && typeof (proto1) != "undefined") {_RecordType("<117,123,5>",(proto1)); Inst5++; } } catch(e) {}

try { if (Inst10 <= 1000 && typeof (Object.getPrototypeOf) != "undefined") {_RecordType("<198,219,7>",(Object.getPrototypeOf)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Object) != "undefined") {_RecordType("<198,204,7>",(Object)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (proto1) != "undefined") {_RecordType("<220,226,7>",(proto1)); Inst12++; } } catch(e) {}
  var proto2 = Object.getPrototypeOf(proto1);
try { if (Inst9 <= 1000 && typeof (proto2) != "undefined") {_RecordType("<189,195,7>",(proto2)); Inst9++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (proto2.hasOwnProperty) != "undefined") {_RecordType("<238,259,8>",(proto2.hasOwnProperty)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (proto2) != "undefined") {_RecordType("<238,244,8>",(proto2)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<260,275,8>",(Symbol.iterator)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<260,266,8>",(Symbol)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (proto1.hasOwnProperty) != "undefined") {_RecordType("<281,302,8>",(proto1.hasOwnProperty)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (proto1) != "undefined") {_RecordType("<281,287,8>",(proto1)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<303,318,8>",(Symbol.iterator)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<303,309,8>",(Symbol)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (iterator.hasOwnProperty) != "undefined") {_RecordType("<324,347,8>",(iterator.hasOwnProperty)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (iterator) != "undefined") {_RecordType("<324,332,8>",(iterator)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<348,363,8>",(Symbol.iterator)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<348,354,8>",(Symbol)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (iterator[Symbol.iterator]) != "undefined") {_RecordType("<368,393,8>",(iterator[Symbol.iterator])); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (iterator) != "undefined") {_RecordType("<368,376,8>",(iterator)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<377,392,8>",(Symbol.iterator)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<377,383,8>",(Symbol)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (iterator) != "undefined") {_RecordType("<400,408,8>",(iterator)); Inst29++; } } catch(e) {}
  return proto2.hasOwnProperty(Symbol.iterator) && !proto1.hasOwnProperty(Symbol.iterator) && !iterator.hasOwnProperty(Symbol.iterator) && iterator[Symbol.iterator]() === iterator;
}

try { if (Inst30 <= 1000 && typeof (test) != "undefined") {_RecordType("<418,422,11>",(test)); Inst30++; } } catch(e) {}
if (!test()) {
try { if (Inst31 <= 1000 && typeof (Error) != "undefined") {_RecordType("<440,445,12>",(Error)); Inst31++; } } catch(e) {}
  throw new Error("Test failed");
}

