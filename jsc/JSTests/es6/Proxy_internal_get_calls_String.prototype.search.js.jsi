var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (test) != "undefined") {_RecordType("<9,13,1>",(test)); Inst0++; } } catch(e) {}
function test() {
  // String.prototype.search functions -> Get -> [[Get]]
  var get = [];
try { if (Inst1 <= 1000 && typeof (get) != "undefined") {_RecordType("<81,84,3>",(get)); Inst1++; } } catch(e) {}
  var proxied = {};
try { if (Inst2 <= 1000 && typeof (proxied) != "undefined") {_RecordType("<97,104,4>",(proxied)); Inst2++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (Function) != "undefined") {_RecordType("<143,151,5>",(Function)); Inst7++; } } catch(e) {}
  proxied[Symbol.toPrimitive] = Function();
try { if (Inst3 <= 1000 && typeof (proxied[Symbol.toPrimitive]) != "undefined") {_RecordType("<113,140,5>",(proxied[Symbol.toPrimitive])); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (proxied) != "undefined") {_RecordType("<113,120,5>",(proxied)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Symbol.toPrimitive) != "undefined") {_RecordType("<121,139,5>",(Symbol.toPrimitive)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<121,127,5>",(Symbol)); Inst6++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<169,174,6>",(Proxy)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (proxied) != "undefined") {_RecordType("<175,182,6>",(proxied)); Inst10++; } } catch(e) {}
  var p = new Proxy(proxied, {
    get: function (o, k) {
try { if (Inst11 <= 1000 && typeof (o) != "undefined") {_RecordType("<205,206,7>",(o)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (k) != "undefined") {_RecordType("<208,209,7>",(k)); Inst12++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (get.push) != "undefined") {_RecordType("<219,227,8>",(get.push)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (get) != "undefined") {_RecordType("<219,222,8>",(get)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (k) != "undefined") {_RecordType("<228,229,8>",(k)); Inst15++; } } catch(e) {}
      get.push(k);
try { if (Inst16 <= 1000 && typeof (o[k]) != "undefined") {_RecordType("<245,249,9>",(o[k])); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (o) != "undefined") {_RecordType("<245,246,9>",(o)); Inst17++; } } catch(e) {}
      return o[k];
    }
  });
try { if (Inst8 <= 1000 && typeof (p) != "undefined") {_RecordType("<161,162,6>",(p)); Inst8++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof ("".search) != "undefined") {_RecordType("<265,274,12>",("".search)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (p) != "undefined") {_RecordType("<275,276,12>",(p)); Inst19++; } } catch(e) {}
  "".search(p);
try { if (Inst20 <= 1000 && typeof (get[0]) != "undefined") {_RecordType("<288,294,13>",(get[0])); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (get) != "undefined") {_RecordType("<288,291,13>",(get)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Symbol.search) != "undefined") {_RecordType("<299,312,13>",(Symbol.search)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<299,305,13>",(Symbol)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (get[1]) != "undefined") {_RecordType("<316,322,13>",(get[1])); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (get) != "undefined") {_RecordType("<316,319,13>",(get)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Symbol.toPrimitive) != "undefined") {_RecordType("<327,345,13>",(Symbol.toPrimitive)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<327,333,13>",(Symbol)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (get.length) != "undefined") {_RecordType("<349,359,13>",(get.length)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (get) != "undefined") {_RecordType("<349,352,13>",(get)); Inst29++; } } catch(e) {}
  return get[0] === Symbol.search && get[1] === Symbol.toPrimitive && get.length === 2;
}

try { if (Inst30 <= 1000 && typeof (test) != "undefined") {_RecordType("<375,379,16>",(test)); Inst30++; } } catch(e) {}
if (!test()) {
try { if (Inst31 <= 1000 && typeof (Error) != "undefined") {_RecordType("<397,402,17>",(Error)); Inst31++; } } catch(e) {}
  throw new Error("Test failed");
}

