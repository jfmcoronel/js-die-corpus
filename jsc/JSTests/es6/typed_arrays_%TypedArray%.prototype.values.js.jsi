var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (test) != "undefined") {_RecordType("<9,13,1>",(test)); Inst0++; } } catch(e) {}
function test() {
try { if (Inst1 <= 1000 && typeof (Int8Array.prototype.values) != "undefined") {_RecordType("<34,60,2>",(Int8Array.prototype.values)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Int8Array.prototype) != "undefined") {_RecordType("<34,53,2>",(Int8Array.prototype)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Int8Array) != "undefined") {_RecordType("<34,43,2>",(Int8Array)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Uint8Array.prototype.values) != "undefined") {_RecordType("<86,113,2>",(Uint8Array.prototype.values)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Uint8Array.prototype) != "undefined") {_RecordType("<86,106,2>",(Uint8Array.prototype)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Uint8Array) != "undefined") {_RecordType("<86,96,2>",(Uint8Array)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Uint8ClampedArray.prototype.values) != "undefined") {_RecordType("<139,173,2>",(Uint8ClampedArray.prototype.values)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Uint8ClampedArray.prototype) != "undefined") {_RecordType("<139,166,2>",(Uint8ClampedArray.prototype)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Uint8ClampedArray) != "undefined") {_RecordType("<139,156,2>",(Uint8ClampedArray)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Int16Array.prototype.values) != "undefined") {_RecordType("<199,226,2>",(Int16Array.prototype.values)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Int16Array.prototype) != "undefined") {_RecordType("<199,219,2>",(Int16Array.prototype)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Int16Array) != "undefined") {_RecordType("<199,209,2>",(Int16Array)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Uint16Array.prototype.values) != "undefined") {_RecordType("<252,280,2>",(Uint16Array.prototype.values)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Uint16Array.prototype) != "undefined") {_RecordType("<252,273,2>",(Uint16Array.prototype)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Uint16Array) != "undefined") {_RecordType("<252,263,2>",(Uint16Array)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Int32Array.prototype.values) != "undefined") {_RecordType("<306,333,2>",(Int32Array.prototype.values)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Int32Array.prototype) != "undefined") {_RecordType("<306,326,2>",(Int32Array.prototype)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Int32Array) != "undefined") {_RecordType("<306,316,2>",(Int32Array)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Uint32Array.prototype.values) != "undefined") {_RecordType("<359,387,2>",(Uint32Array.prototype.values)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (Uint32Array.prototype) != "undefined") {_RecordType("<359,380,2>",(Uint32Array.prototype)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Uint32Array) != "undefined") {_RecordType("<359,370,2>",(Uint32Array)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Float32Array.prototype.values) != "undefined") {_RecordType("<413,442,2>",(Float32Array.prototype.values)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Float32Array.prototype) != "undefined") {_RecordType("<413,435,2>",(Float32Array.prototype)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (Float32Array) != "undefined") {_RecordType("<413,425,2>",(Float32Array)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Float64Array.prototype.values) != "undefined") {_RecordType("<468,497,2>",(Float64Array.prototype.values)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Float64Array.prototype) != "undefined") {_RecordType("<468,490,2>",(Float64Array.prototype)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (Float64Array) != "undefined") {_RecordType("<468,480,2>",(Float64Array)); Inst27++; } } catch(e) {}
  return typeof Int8Array.prototype.values === "function" && typeof Uint8Array.prototype.values === "function" && typeof Uint8ClampedArray.prototype.values === "function" && typeof Int16Array.prototype.values === "function" && typeof Uint16Array.prototype.values === "function" && typeof Int32Array.prototype.values === "function" && typeof Uint32Array.prototype.values === "function" && typeof Float32Array.prototype.values === "function" && typeof Float64Array.prototype.values === "function";
}

try { if (Inst28 <= 1000 && typeof (test) != "undefined") {_RecordType("<522,526,5>",(test)); Inst28++; } } catch(e) {}
if (!test()) {
try { if (Inst29 <= 1000 && typeof (Error) != "undefined") {_RecordType("<544,549,6>",(Error)); Inst29++; } } catch(e) {}
  throw new Error("Test failed");
}

