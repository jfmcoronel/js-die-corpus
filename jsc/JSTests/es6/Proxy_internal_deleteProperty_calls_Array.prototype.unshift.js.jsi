var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (test) != "undefined") {_RecordType("<9,13,1>",(test)); Inst0++; } } catch(e) {}
function test() {
  // Array.prototype.unshift -> DeletePropertyOrThrow -> [[Delete]]
  var del = [];
try { if (Inst1 <= 1000 && typeof (del) != "undefined") {_RecordType("<92,95,3>",(del)); Inst1++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<116,121,4>",(Proxy)); Inst3++; } } catch(e) {}
  var p = new Proxy([0, 0,, 0,, 0], {
    deleteProperty: function (o, v) {
try { if (Inst4 <= 1000 && typeof (o) != "undefined") {_RecordType("<170,171,5>",(o)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (v) != "undefined") {_RecordType("<173,174,5>",(v)); Inst5++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (del.push) != "undefined") {_RecordType("<184,192,6>",(del.push)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (del) != "undefined") {_RecordType("<184,187,6>",(del)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (v) != "undefined") {_RecordType("<193,194,6>",(v)); Inst8++; } } catch(e) {}
      del.push(v);
try { if (Inst9 <= 1000 && typeof (o[v]) != "undefined") {_RecordType("<217,221,7>",(o[v])); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (o) != "undefined") {_RecordType("<217,218,7>",(o)); Inst10++; } } catch(e) {}
      return delete o[v];
    }
  });
try { if (Inst2 <= 1000 && typeof (p) != "undefined") {_RecordType("<108,109,4>",(p)); Inst2++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (p.unshift) != "undefined") {_RecordType("<237,246,10>",(p.unshift)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (p) != "undefined") {_RecordType("<237,238,10>",(p)); Inst12++; } } catch(e) {}
  p.unshift(0);
try { if (Inst13 <= 1000 && typeof (del) != "undefined") {_RecordType("<260,263,11>",(del)); Inst13++; } } catch(e) {}
  return del + '' === "5,3";
}

try { if (Inst14 <= 1000 && typeof (test) != "undefined") {_RecordType("<288,292,14>",(test)); Inst14++; } } catch(e) {}
if (!test()) {
try { if (Inst15 <= 1000 && typeof (Error) != "undefined") {_RecordType("<310,315,15>",(Error)); Inst15++; } } catch(e) {}
  throw new Error("Test failed");
}

