var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (test) != "undefined") {_RecordType("<9,13,1>",(test)); Inst0++; } } catch(e) {}
function test() {
try { if (Inst2 <= 1000 && typeof (Array.prototype[Symbol.unscopables]) != "undefined") {_RecordType("<38,73,2>",(Array.prototype[Symbol.unscopables])); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<38,53,2>",(Array.prototype)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Array) != "undefined") {_RecordType("<38,43,2>",(Array)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Symbol.unscopables) != "undefined") {_RecordType("<54,72,2>",(Symbol.unscopables)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<54,60,2>",(Symbol)); Inst6++; } } catch(e) {}
  var unscopables = Array.prototype[Symbol.unscopables];
try { if (Inst1 <= 1000 && typeof (unscopables) != "undefined") {_RecordType("<24,35,2>",(unscopables)); Inst1++; } } catch(e) {}

try { if (Inst7 <= 1000 && typeof (unscopables) != "undefined") {_RecordType("<83,94,4>",(unscopables)); Inst7++; } } catch(e) {}
  if (!unscopables) {
    return false;
  }

try { if (Inst9 <= 1000 && typeof ("find,findIndex,fill,copyWithin,entries,keys,values".split) != "undefined") {_RecordType("<132,190,8>",("find,findIndex,fill,copyWithin,entries,keys,values".split)); Inst9++; } } catch(e) {}
  var ns = "find,findIndex,fill,copyWithin,entries,keys,values".split(",");
try { if (Inst8 <= 1000 && typeof (ns) != "undefined") {_RecordType("<127,129,8>",(ns)); Inst8++; } } catch(e) {}

  for (var i = 0; i < ns.length; i++) {
try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<209,210,10>",(i)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<216,217,10>",(i)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (ns.length) != "undefined") {_RecordType("<220,229,10>",(ns.length)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (ns) != "undefined") {_RecordType("<220,222,10>",(ns)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<231,232,10>",(i)); Inst14++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (Array.prototype[ns[i]]) != "undefined") {_RecordType("<246,268,11>",(Array.prototype[ns[i]])); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<246,261,11>",(Array.prototype)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Array) != "undefined") {_RecordType("<246,251,11>",(Array)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (ns[i]) != "undefined") {_RecordType("<262,267,11>",(ns[i])); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (ns) != "undefined") {_RecordType("<262,264,11>",(ns)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (unscopables[ns[i]]) != "undefined") {_RecordType("<273,291,11>",(unscopables[ns[i]])); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (unscopables) != "undefined") {_RecordType("<273,284,11>",(unscopables)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (ns[i]) != "undefined") {_RecordType("<285,290,11>",(ns[i])); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (ns) != "undefined") {_RecordType("<285,287,11>",(ns)); Inst23++; } } catch(e) {}
    if (Array.prototype[ns[i]] && !unscopables[ns[i]]) {
      return false;
    }
  }

  return true;
}

try { if (Inst24 <= 1000 && typeof (test) != "undefined") {_RecordType("<349,353,19>",(test)); Inst24++; } } catch(e) {}
if (!test()) {
try { if (Inst25 <= 1000 && typeof (Error) != "undefined") {_RecordType("<371,376,20>",(Error)); Inst25++; } } catch(e) {}
  throw new Error("Test failed");
}

