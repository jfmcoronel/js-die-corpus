var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (test) != "undefined") {_RecordType("<9,13,1>",(test)); Inst0++; } } catch(e) {}
function test() {
try { if (Inst2 <= 1000 && typeof (generator) != "undefined") {_RecordType("<35,44,3>",(generator)); Inst2++; } } catch(e) {}
  var o = {
    *generator() {
      yield 5;
      yield 6;
    }

  };
try { if (Inst1 <= 1000 && typeof (o) != "undefined") {_RecordType("<24,25,2>",(o)); Inst1++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (o.generator) != "undefined") {_RecordType("<108,119,9>",(o.generator)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (o) != "undefined") {_RecordType("<108,109,9>",(o)); Inst5++; } } catch(e) {}
  var iterator = o.generator();
try { if (Inst3 <= 1000 && typeof (iterator) != "undefined") {_RecordType("<97,105,9>",(iterator)); Inst3++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (iterator.next) != "undefined") {_RecordType("<136,149,10>",(iterator.next)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (iterator) != "undefined") {_RecordType("<136,144,10>",(iterator)); Inst8++; } } catch(e) {}
  var item = iterator.next();
try { if (Inst6 <= 1000 && typeof (item) != "undefined") {_RecordType("<129,133,10>",(item)); Inst6++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (item.value) != "undefined") {_RecordType("<168,178,11>",(item.value)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (item) != "undefined") {_RecordType("<168,172,11>",(item)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (item.done) != "undefined") {_RecordType("<188,197,11>",(item.done)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (item) != "undefined") {_RecordType("<188,192,11>",(item)); Inst13++; } } catch(e) {}
  var passed = item.value === 5 && item.done === false;
try { if (Inst9 <= 1000 && typeof (passed) != "undefined") {_RecordType("<159,165,11>",(passed)); Inst9++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (iterator.next) != "undefined") {_RecordType("<218,231,12>",(iterator.next)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (iterator) != "undefined") {_RecordType("<218,226,12>",(iterator)); Inst16++; } } catch(e) {}
  item = iterator.next();
try { if (Inst14 <= 1000 && typeof (item) != "undefined") {_RecordType("<211,215,12>",(item)); Inst14++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (item.value) != "undefined") {_RecordType("<247,257,13>",(item.value)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (item) != "undefined") {_RecordType("<247,251,13>",(item)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (item.done) != "undefined") {_RecordType("<267,276,13>",(item.done)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (item) != "undefined") {_RecordType("<267,271,13>",(item)); Inst21++; } } catch(e) {}
  passed &= item.value === 6 && item.done === false;
try { if (Inst17 <= 1000 && typeof (passed) != "undefined") {_RecordType("<237,243,13>",(passed)); Inst17++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (iterator.next) != "undefined") {_RecordType("<297,310,14>",(iterator.next)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (iterator) != "undefined") {_RecordType("<297,305,14>",(iterator)); Inst24++; } } catch(e) {}
  item = iterator.next();
try { if (Inst22 <= 1000 && typeof (item) != "undefined") {_RecordType("<290,294,14>",(item)); Inst22++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (item.value) != "undefined") {_RecordType("<326,336,15>",(item.value)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (item) != "undefined") {_RecordType("<326,330,15>",(item)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<341,350,15>",(undefined)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (item.done) != "undefined") {_RecordType("<354,363,15>",(item.done)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (item) != "undefined") {_RecordType("<354,358,15>",(item)); Inst30++; } } catch(e) {}
  passed &= item.value === undefined && item.done === true;
try { if (Inst25 <= 1000 && typeof (passed) != "undefined") {_RecordType("<316,322,15>",(passed)); Inst25++; } } catch(e) {}
try { if (Inst31 <= 1000 && typeof (passed) != "undefined") {_RecordType("<383,389,16>",(passed)); Inst31++; } } catch(e) {}
  return passed;
}

try { if (Inst32 <= 1000 && typeof (test) != "undefined") {_RecordType("<399,403,19>",(test)); Inst32++; } } catch(e) {}
if (!test()) {
try { if (Inst33 <= 1000 && typeof (Error) != "undefined") {_RecordType("<421,426,20>",(Error)); Inst33++; } } catch(e) {}
  throw new Error("Test failed");
}

