var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (test) != "undefined") {_RecordType("<9,13,1>",(test)); Inst0++; } } catch(e) {}
function test() {
  var o = {};
try { if (Inst1 <= 1000 && typeof (o) != "undefined") {_RecordType("<24,25,2>",(o)); Inst1++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<44,50,3>",(Symbol)); Inst3++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<67,73,4>",(Symbol)); Inst5++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<90,96,5>",(Symbol)); Inst7++; } } catch(e) {}
  var sym = Symbol(),
      sym2 = Symbol(),
      sym3 = Symbol();
try { if (Inst2 <= 1000 && typeof (sym) != "undefined") {_RecordType("<38,41,3>",(sym)); Inst2++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (sym2) != "undefined") {_RecordType("<60,64,4>",(sym2)); Inst4++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (sym3) != "undefined") {_RecordType("<83,87,5>",(sym3)); Inst6++; } } catch(e) {}
  o[sym] = true;
try { if (Inst8 <= 1000 && typeof (o[sym]) != "undefined") {_RecordType("<102,108,6>",(o[sym])); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (o) != "undefined") {_RecordType("<102,103,6>",(o)); Inst9++; } } catch(e) {}
  o[sym2] = true;
try { if (Inst10 <= 1000 && typeof (o[sym2]) != "undefined") {_RecordType("<119,126,7>",(o[sym2])); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (o) != "undefined") {_RecordType("<119,120,7>",(o)); Inst11++; } } catch(e) {}
  o[sym3] = true;
try { if (Inst12 <= 1000 && typeof (o[sym3]) != "undefined") {_RecordType("<137,144,8>",(o[sym3])); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (o) != "undefined") {_RecordType("<137,138,8>",(o)); Inst13++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (Object.getOwnPropertySymbols) != "undefined") {_RecordType("<168,196,9>",(Object.getOwnPropertySymbols)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Object) != "undefined") {_RecordType("<168,174,9>",(Object)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (o) != "undefined") {_RecordType("<197,198,9>",(o)); Inst17++; } } catch(e) {}
  var result = Object.getOwnPropertySymbols(o);
try { if (Inst14 <= 1000 && typeof (result) != "undefined") {_RecordType("<159,165,9>",(result)); Inst14++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (result[0]) != "undefined") {_RecordType("<210,219,10>",(result[0])); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (result) != "undefined") {_RecordType("<210,216,10>",(result)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (sym) != "undefined") {_RecordType("<224,227,10>",(sym)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (result[1]) != "undefined") {_RecordType("<231,240,10>",(result[1])); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (result) != "undefined") {_RecordType("<231,237,10>",(result)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (sym2) != "undefined") {_RecordType("<245,249,10>",(sym2)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (result[2]) != "undefined") {_RecordType("<253,262,10>",(result[2])); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (result) != "undefined") {_RecordType("<253,259,10>",(result)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (sym3) != "undefined") {_RecordType("<267,271,10>",(sym3)); Inst26++; } } catch(e) {}
  return result[0] === sym && result[1] === sym2 && result[2] === sym3;
}

try { if (Inst27 <= 1000 && typeof (test) != "undefined") {_RecordType("<281,285,13>",(test)); Inst27++; } } catch(e) {}
if (!test()) {
try { if (Inst28 <= 1000 && typeof (Error) != "undefined") {_RecordType("<303,308,14>",(Error)); Inst28++; } } catch(e) {}
  throw new Error("Test failed");
}

