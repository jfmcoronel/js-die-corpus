var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (test) != "undefined") {_RecordType("<9,13,1>",(test)); Inst0++; } } catch(e) {}
function test() {
  // RegExp.prototype[Symbol.match] -> Get -> [[Get]]
  var get = [];
try { if (Inst1 <= 1000 && typeof (get) != "undefined") {_RecordType("<78,81,3>",(get)); Inst1++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<102,107,4>",(Proxy)); Inst3++; } } catch(e) {}
  var p = new Proxy({
    exec: function () {
      return null;
    }
  }, {
    get: function (o, k) {
try { if (Inst4 <= 1000 && typeof (o) != "undefined") {_RecordType("<185,186,9>",(o)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (k) != "undefined") {_RecordType("<188,189,9>",(k)); Inst5++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (get.push) != "undefined") {_RecordType("<199,207,10>",(get.push)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (get) != "undefined") {_RecordType("<199,202,10>",(get)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (k) != "undefined") {_RecordType("<208,209,10>",(k)); Inst8++; } } catch(e) {}
      get.push(k);
try { if (Inst9 <= 1000 && typeof (o[k]) != "undefined") {_RecordType("<225,229,11>",(o[k])); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (o) != "undefined") {_RecordType("<225,226,11>",(o)); Inst10++; } } catch(e) {}
      return o[k];
    }
  });
try { if (Inst2 <= 1000 && typeof (p) != "undefined") {_RecordType("<94,95,4>",(p)); Inst2++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (RegExp.prototype[Symbol.match].call) != "undefined") {_RecordType("<245,280,14>",(RegExp.prototype[Symbol.match].call)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (RegExp.prototype[Symbol.match]) != "undefined") {_RecordType("<245,275,14>",(RegExp.prototype[Symbol.match])); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (RegExp.prototype) != "undefined") {_RecordType("<245,261,14>",(RegExp.prototype)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<245,251,14>",(RegExp)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Symbol.match) != "undefined") {_RecordType("<262,274,14>",(Symbol.match)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<262,268,14>",(Symbol)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (p) != "undefined") {_RecordType("<281,282,14>",(p)); Inst17++; } } catch(e) {}
  RegExp.prototype[Symbol.match].call(p);
  p.global = true;
try { if (Inst18 <= 1000 && typeof (p.global) != "undefined") {_RecordType("<287,295,15>",(p.global)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (p) != "undefined") {_RecordType("<287,288,15>",(p)); Inst19++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (RegExp.prototype[Symbol.match].call) != "undefined") {_RecordType("<306,341,16>",(RegExp.prototype[Symbol.match].call)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (RegExp.prototype[Symbol.match]) != "undefined") {_RecordType("<306,336,16>",(RegExp.prototype[Symbol.match])); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (RegExp.prototype) != "undefined") {_RecordType("<306,322,16>",(RegExp.prototype)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<306,312,16>",(RegExp)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (Symbol.match) != "undefined") {_RecordType("<323,335,16>",(Symbol.match)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<323,329,16>",(Symbol)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (p) != "undefined") {_RecordType("<342,343,16>",(p)); Inst26++; } } catch(e) {}
  RegExp.prototype[Symbol.match].call(p);
try { if (Inst27 <= 1000 && typeof (get) != "undefined") {_RecordType("<355,358,17>",(get)); Inst27++; } } catch(e) {}
  return get + '' === "global,exec,global,unicode,exec";
}

try { if (Inst28 <= 1000 && typeof (test) != "undefined") {_RecordType("<411,415,20>",(test)); Inst28++; } } catch(e) {}
if (!test()) {
try { if (Inst29 <= 1000 && typeof (Error) != "undefined") {_RecordType("<433,438,21>",(Error)); Inst29++; } } catch(e) {}
  throw new Error("Test failed");
}

