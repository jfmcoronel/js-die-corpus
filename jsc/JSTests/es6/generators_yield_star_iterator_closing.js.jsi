var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (global) != "undefined") {_RecordType("<11,17,1>",(global)); Inst0++; } } catch(e) {}
if (typeof global === 'undefined') {
  var global = this;
try { if (Inst1 <= 1000 && typeof (global) != "undefined") {_RecordType("<43,49,2>",(global)); Inst1++; } } catch(e) {}
}

try { if (Inst2 <= 1000 && typeof (__createIterableObject) != "undefined") {_RecordType("<70,92,5>",(__createIterableObject)); Inst2++; } } catch(e) {}
function __createIterableObject(arr, methods) {
try { if (Inst3 <= 1000 && typeof (arr) != "undefined") {_RecordType("<93,96,5>",(arr)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (methods) != "undefined") {_RecordType("<98,105,5>",(methods)); Inst4++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (methods) != "undefined") {_RecordType("<121,128,6>",(methods)); Inst6++; } } catch(e) {}
  methods = methods || {};
try { if (Inst5 <= 1000 && typeof (methods) != "undefined") {_RecordType("<111,118,6>",(methods)); Inst5++; } } catch(e) {}

try { if (Inst7 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<150,156,8>",(Symbol)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<176,191,8>",(Symbol.iterator)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<176,182,8>",(Symbol)); Inst9++; } } catch(e) {}
  if (typeof Symbol !== 'function' || !Symbol.iterator) {
    return {};
  }

try { if (Inst10 <= 1000 && typeof (arr.length) != "undefined") {_RecordType("<217,227,12>",(arr.length)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (arr) != "undefined") {_RecordType("<217,220,12>",(arr)); Inst11++; } } catch(e) {}
  arr.length++;
try { if (Inst17 <= 1000 && typeof (methods['return']) != "undefined") {_RecordType("<377,394,20>",(methods['return'])); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (methods) != "undefined") {_RecordType("<377,384,20>",(methods)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (methods['throw']) != "undefined") {_RecordType("<409,425,21>",(methods['throw'])); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (methods) != "undefined") {_RecordType("<409,416,21>",(methods)); Inst20++; } } catch(e) {}
  var iterator = {
    next: function () {
try { if (Inst13 <= 1000 && typeof (arr.shift) != "undefined") {_RecordType("<304,313,16>",(arr.shift)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (arr) != "undefined") {_RecordType("<304,307,16>",(arr)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (arr.length) != "undefined") {_RecordType("<331,341,17>",(arr.length)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (arr) != "undefined") {_RecordType("<331,334,17>",(arr)); Inst16++; } } catch(e) {}
      return {
        value: arr.shift(),
        done: arr.length <= 0
      };
    },
    'return': methods['return'],
    'throw': methods['throw']
  };
try { if (Inst12 <= 1000 && typeof (iterator) != "undefined") {_RecordType("<237,245,13>",(iterator)); Inst12++; } } catch(e) {}
  var iterable = {};
try { if (Inst21 <= 1000 && typeof (iterable) != "undefined") {_RecordType("<437,445,23>",(iterable)); Inst21++; } } catch(e) {}

  iterable[Symbol.iterator] = function () {
try { if (Inst26 <= 1000 && typeof (iterator) != "undefined") {_RecordType("<508,516,26>",(iterator)); Inst26++; } } catch(e) {}
    return iterator;
  };
try { if (Inst22 <= 1000 && typeof (iterable[Symbol.iterator]) != "undefined") {_RecordType("<455,480,25>",(iterable[Symbol.iterator])); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (iterable) != "undefined") {_RecordType("<455,463,25>",(iterable)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<464,479,25>",(Symbol.iterator)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<464,470,25>",(Symbol)); Inst25++; } } catch(e) {}

try { if (Inst27 <= 1000 && typeof (iterable) != "undefined") {_RecordType("<533,541,29>",(iterable)); Inst27++; } } catch(e) {}
  return iterable;
}

try { if (Inst28 <= 1000 && typeof (test) != "undefined") {_RecordType("<555,559,32>",(test)); Inst28++; } } catch(e) {}
function test() {
  var closed = '';
try { if (Inst29 <= 1000 && typeof (closed) != "undefined") {_RecordType("<570,576,33>",(closed)); Inst29++; } } catch(e) {}

try { if (Inst31 <= 1000 && typeof (__createIterableObject) != "undefined") {_RecordType("<597,619,35>",(__createIterableObject)); Inst31++; } } catch(e) {}
  var iter = __createIterableObject([1, 2, 3], {
    'return': function () {
      closed += 'a';
try { if (Inst32 <= 1000 && typeof (closed) != "undefined") {_RecordType("<667,673,37>",(closed)); Inst32++; } } catch(e) {}
      return {
        done: true
      };
    }
  });
try { if (Inst30 <= 1000 && typeof (iter) != "undefined") {_RecordType("<590,594,35>",(iter)); Inst30++; } } catch(e) {}

try { if (Inst34 <= 1000 && typeof (generator) != "undefined") {_RecordType("<760,769,44>",(generator)); Inst34++; } } catch(e) {}
  var gen = function* generator() {
    try {
try { if (Inst35 <= 1000 && typeof (iter) != "undefined") {_RecordType("<797,801,46>",(iter)); Inst35++; } } catch(e) {}
      yield* iter;
    } finally {
      closed += 'b';
try { if (Inst36 <= 1000 && typeof (closed) != "undefined") {_RecordType("<825,831,48>",(closed)); Inst36++; } } catch(e) {}
    }
  }();
try { if (Inst33 <= 1000 && typeof (gen) != "undefined") {_RecordType("<744,747,44>",(gen)); Inst33++; } } catch(e) {}

try { if (Inst37 <= 1000 && typeof (gen.next) != "undefined") {_RecordType("<856,864,52>",(gen.next)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (gen) != "undefined") {_RecordType("<856,859,52>",(gen)); Inst38++; } } catch(e) {}
  gen.next();
try { if (Inst39 <= 1000 && typeof (gen['return']) != "undefined") {_RecordType("<870,883,53>",(gen['return'])); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (gen) != "undefined") {_RecordType("<870,873,53>",(gen)); Inst40++; } } catch(e) {}
  gen['return']();
try { if (Inst41 <= 1000 && typeof (closed) != "undefined") {_RecordType("<896,902,54>",(closed)); Inst41++; } } catch(e) {}
  return closed === 'ab';
}

try { if (Inst42 <= 1000 && typeof (test) != "undefined") {_RecordType("<921,925,57>",(test)); Inst42++; } } catch(e) {}
if (!test()) {
try { if (Inst43 <= 1000 && typeof (Error) != "undefined") {_RecordType("<943,948,58>",(Error)); Inst43++; } } catch(e) {}
  throw new Error("Test failed");
}

