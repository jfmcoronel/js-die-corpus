var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (test) != "undefined") {_RecordType("<9,13,1>",(test)); Inst0++; } } catch(e) {}
function test() {
  var passed = false;
try { if (Inst1 <= 1000 && typeof (passed) != "undefined") {_RecordType("<24,30,2>",(passed)); Inst1++; } } catch(e) {}

try { if (Inst2 <= 1000 && typeof (asyncTestPassed) != "undefined") {_RecordType("<52,67,4>",(asyncTestPassed)); Inst2++; } } catch(e) {}
  function asyncTestPassed() {
    passed = true;
try { if (Inst3 <= 1000 && typeof (passed) != "undefined") {_RecordType("<76,82,5>",(passed)); Inst3++; } } catch(e) {}
  }

try { if (Inst5 <= 1000 && typeof (Promise) != "undefined") {_RecordType("<114,121,8>",(Promise)); Inst5++; } } catch(e) {}
  class P extends Promise {}
try { if (Inst4 <= 1000 && typeof (P) != "undefined") {_RecordType("<104,105,8>",(P)); Inst4++; } } catch(e) {}

try { if (Inst7 <= 1000 && typeof (P.race) != "undefined") {_RecordType("<143,149,10>",(P.race)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (P) != "undefined") {_RecordType("<143,144,10>",(P)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Promise) != "undefined") {_RecordType("<155,162,10>",(Promise)); Inst9++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Promise) != "undefined") {_RecordType("<231,238,12>",(Promise)); Inst13++; } } catch(e) {}
  var fulfills = P.race([new Promise(function (resolve) {
try { if (Inst10 <= 1000 && typeof (resolve) != "undefined") {_RecordType("<173,180,10>",(resolve)); Inst10++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (setTimeout) != "undefined") {_RecordType("<188,198,11>",(setTimeout)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (resolve) != "undefined") {_RecordType("<199,206,11>",(resolve)); Inst12++; } } catch(e) {}
    setTimeout(resolve, 200, "foo");
  }), new Promise(function (_, reject) {
try { if (Inst14 <= 1000 && typeof (_) != "undefined") {_RecordType("<249,250,12>",(_)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (reject) != "undefined") {_RecordType("<252,258,12>",(reject)); Inst15++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (setTimeout) != "undefined") {_RecordType("<266,276,13>",(setTimeout)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (reject) != "undefined") {_RecordType("<277,283,13>",(reject)); Inst17++; } } catch(e) {}
    setTimeout(reject, 300, "bar");
  })]);
try { if (Inst6 <= 1000 && typeof (fulfills) != "undefined") {_RecordType("<132,140,10>",(fulfills)); Inst6++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (P.race) != "undefined") {_RecordType("<322,328,15>",(P.race)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (P) != "undefined") {_RecordType("<322,323,15>",(P)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Promise) != "undefined") {_RecordType("<334,341,15>",(Promise)); Inst21++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Promise) != "undefined") {_RecordType("<411,418,17>",(Promise)); Inst26++; } } catch(e) {}
  var rejects = P.race([new Promise(function (_, reject) {
try { if (Inst22 <= 1000 && typeof (_) != "undefined") {_RecordType("<352,353,15>",(_)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (reject) != "undefined") {_RecordType("<355,361,15>",(reject)); Inst23++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (setTimeout) != "undefined") {_RecordType("<369,379,16>",(setTimeout)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (reject) != "undefined") {_RecordType("<380,386,16>",(reject)); Inst25++; } } catch(e) {}
    setTimeout(reject, 200, "baz");
  }), new Promise(function (resolve) {
try { if (Inst27 <= 1000 && typeof (resolve) != "undefined") {_RecordType("<429,436,17>",(resolve)); Inst27++; } } catch(e) {}
try { if (Inst28 <= 1000 && typeof (setTimeout) != "undefined") {_RecordType("<444,454,18>",(setTimeout)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (resolve) != "undefined") {_RecordType("<455,462,18>",(resolve)); Inst29++; } } catch(e) {}
    setTimeout(resolve, 300, "qux");
  })]);
try { if (Inst18 <= 1000 && typeof (rejects) != "undefined") {_RecordType("<312,319,15>",(rejects)); Inst18++; } } catch(e) {}
try { if (Inst31 <= 1000 && typeof (fulfills) != "undefined") {_RecordType("<501,509,20>",(fulfills)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (P) != "undefined") {_RecordType("<521,522,20>",(P)); Inst32++; } } catch(e) {}
  var score = +(fulfills instanceof P);
try { if (Inst30 <= 1000 && typeof (score) != "undefined") {_RecordType("<491,496,20>",(score)); Inst30++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (fulfills.then) != "undefined") {_RecordType("<527,540,21>",(fulfills.then)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (fulfills) != "undefined") {_RecordType("<527,535,21>",(fulfills)); Inst34++; } } catch(e) {}
  fulfills.then(function (result) {
try { if (Inst35 <= 1000 && typeof (result) != "undefined") {_RecordType("<551,557,21>",(result)); Inst35++; } } catch(e) {}
try { if (Inst37 <= 1000 && typeof (result) != "undefined") {_RecordType("<574,580,22>",(result)); Inst37++; } } catch(e) {}
    score += result === "foo";
try { if (Inst36 <= 1000 && typeof (score) != "undefined") {_RecordType("<565,570,22>",(score)); Inst36++; } } catch(e) {}
try { if (Inst38 <= 1000 && typeof (check) != "undefined") {_RecordType("<596,601,23>",(check)); Inst38++; } } catch(e) {}
    check();
  });
try { if (Inst39 <= 1000 && typeof (rejects.catch) != "undefined") {_RecordType("<613,626,25>",(rejects.catch)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (rejects) != "undefined") {_RecordType("<613,620,25>",(rejects)); Inst40++; } } catch(e) {}
  rejects.catch(function (result) {
try { if (Inst41 <= 1000 && typeof (result) != "undefined") {_RecordType("<637,643,25>",(result)); Inst41++; } } catch(e) {}
try { if (Inst43 <= 1000 && typeof (result) != "undefined") {_RecordType("<660,666,26>",(result)); Inst43++; } } catch(e) {}
    score += result === "baz";
try { if (Inst42 <= 1000 && typeof (score) != "undefined") {_RecordType("<651,656,26>",(score)); Inst42++; } } catch(e) {}
try { if (Inst44 <= 1000 && typeof (check) != "undefined") {_RecordType("<682,687,27>",(check)); Inst44++; } } catch(e) {}
    check();
  });

try { if (Inst45 <= 1000 && typeof (check) != "undefined") {_RecordType("<709,714,30>",(check)); Inst45++; } } catch(e) {}
  function check() {
try { if (Inst46 <= 1000 && typeof (score) != "undefined") {_RecordType("<727,732,31>",(score)); Inst46++; } } catch(e) {}
    if (score === 3) {
try { if (Inst47 <= 1000 && typeof (asyncTestPassed) != "undefined") {_RecordType("<748,763,32>",(asyncTestPassed)); Inst47++; } } catch(e) {}
      asyncTestPassed();
    }
  }

try { if (Inst48 <= 1000 && typeof (passed) != "undefined") {_RecordType("<787,793,36>",(passed)); Inst48++; } } catch(e) {}
  return passed;
}

try { if (Inst49 <= 1000 && typeof (test) != "undefined") {_RecordType("<798,802,39>",(test)); Inst49++; } } catch(e) {}
test();

