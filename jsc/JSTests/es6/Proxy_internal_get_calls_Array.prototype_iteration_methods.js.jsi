var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (test) != "undefined") {_RecordType("<9,13,1>",(test)); Inst0++; } } catch(e) {}
function test() {
  // Array.prototype methods -> Get -> [[Get]]
  var methods = ['copyWithin', 'every', 'fill', 'filter', 'find', 'findIndex', 'forEach', 'indexOf', 'join', 'lastIndexOf', 'map', 'reduce', 'reduceRight', 'some'];
try { if (Inst1 <= 1000 && typeof (methods) != "undefined") {_RecordType("<71,78,3>",(methods)); Inst1++; } } catch(e) {}
  var get;
try { if (Inst2 <= 1000 && typeof (get) != "undefined") {_RecordType("<236,239,4>",(get)); Inst2++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<255,260,5>",(Proxy)); Inst4++; } } catch(e) {}
  var p = new Proxy({
    length: 2,
    0: '',
    1: ''
  }, {
    get: function (o, k) {
try { if (Inst5 <= 1000 && typeof (o) != "undefined") {_RecordType("<325,326,10>",(o)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (k) != "undefined") {_RecordType("<328,329,10>",(k)); Inst6++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (get.push) != "undefined") {_RecordType("<339,347,11>",(get.push)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (get) != "undefined") {_RecordType("<339,342,11>",(get)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (k) != "undefined") {_RecordType("<348,349,11>",(k)); Inst9++; } } catch(e) {}
      get.push(k);
try { if (Inst10 <= 1000 && typeof (o[k]) != "undefined") {_RecordType("<365,369,12>",(o[k])); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (o) != "undefined") {_RecordType("<365,366,12>",(o)); Inst11++; } } catch(e) {}
      return o[k];
    }
  });
try { if (Inst3 <= 1000 && typeof (p) != "undefined") {_RecordType("<247,248,5>",(p)); Inst3++; } } catch(e) {}

  for (var i = 0; i < methods.length; i += 1) {
try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<395,396,16>",(i)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<402,403,16>",(i)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (methods.length) != "undefined") {_RecordType("<406,420,16>",(methods.length)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (methods) != "undefined") {_RecordType("<406,413,16>",(methods)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<422,423,16>",(i)); Inst16++; } } catch(e) {}
    get = [];
try { if (Inst17 <= 1000 && typeof (get) != "undefined") {_RecordType("<436,439,17>",(get)); Inst17++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (Array.prototype[methods[i]].call) != "undefined") {_RecordType("<450,482,18>",(Array.prototype[methods[i]].call)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Array.prototype[methods[i]]) != "undefined") {_RecordType("<450,477,18>",(Array.prototype[methods[i]])); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<450,465,18>",(Array.prototype)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Array) != "undefined") {_RecordType("<450,455,18>",(Array)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (methods[i]) != "undefined") {_RecordType("<466,476,18>",(methods[i])); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (methods) != "undefined") {_RecordType("<466,473,18>",(methods)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (p) != "undefined") {_RecordType("<483,484,18>",(p)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Function) != "undefined") {_RecordType("<486,494,18>",(Function)); Inst25++; } } catch(e) {}
    Array.prototype[methods[i]].call(p, Function());

try { if (Inst26 <= 1000 && typeof (get) != "undefined") {_RecordType("<508,511,20>",(get)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (methods[i]) != "undefined") {_RecordType("<522,532,20>",(methods[i])); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (methods) != "undefined") {_RecordType("<522,529,20>",(methods)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (methods[i]) != "undefined") {_RecordType("<557,567,20>",(methods[i])); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (methods) != "undefined") {_RecordType("<557,564,20>",(methods)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (methods[i]) != "undefined") {_RecordType("<595,605,20>",(methods[i])); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (methods) != "undefined") {_RecordType("<595,602,20>",(methods)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (methods[i]) != "undefined") {_RecordType("<627,637,20>",(methods[i])); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (methods) != "undefined") {_RecordType("<627,634,20>",(methods)); Inst34++; } } catch(e) {}
    if (get + '' !== (methods[i] === 'fill' ? "length" : methods[i] === 'every' ? "length,0" : methods[i] === 'lastIndexOf' || methods[i] === 'reduceRight' ? "length,1,0" : "length,0,1")) {
      return false;
    }
  }

  return true;
}

try { if (Inst35 <= 1000 && typeof (test) != "undefined") {_RecordType("<744,748,28>",(test)); Inst35++; } } catch(e) {}
if (!test()) {
try { if (Inst36 <= 1000 && typeof (Error) != "undefined") {_RecordType("<766,771,29>",(Error)); Inst36++; } } catch(e) {}
  throw new Error("Test failed");
}

