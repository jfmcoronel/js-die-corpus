var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (test) != "undefined") {_RecordType("<9,13,1>",(test)); Inst0++; } } catch(e) {}
function test() {
try { if (Inst1 <= 1000 && typeof (f) != "undefined") {_RecordType("<29,30,2>",(f)); Inst1++; } } catch(e) {}
  function f(key) {
try { if (Inst2 <= 1000 && typeof (key) != "undefined") {_RecordType("<31,34,2>",(key)); Inst2++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (Object) != "undefined") {_RecordType("<140,146,8>",(Object)); Inst5++; } } catch(e) {}
    return {
      get: function () {
try { if (Inst4 <= 1000 && typeof (key) != "undefined") {_RecordType("<94,97,5>",(key)); Inst4++; } } catch(e) {}
        result += key;
try { if (Inst3 <= 1000 && typeof (result) != "undefined") {_RecordType("<84,90,5>",(result)); Inst3++; } } catch(e) {}
        return true;
      },
      set: Object,
      enumerable: true
    };
  }

  ;
  var result = '';
try { if (Inst6 <= 1000 && typeof (result) != "undefined") {_RecordType("<193,199,14>",(result)); Inst6++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (Object.defineProperties) != "undefined") {_RecordType("<218,241,15>",(Object.defineProperties)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Object) != "undefined") {_RecordType("<218,224,15>",(Object)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (f) != "undefined") {_RecordType("<255,256,16>",(f)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (f) != "undefined") {_RecordType("<268,269,17>",(f)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (f) != "undefined") {_RecordType("<281,282,18>",(f)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (f) != "undefined") {_RecordType("<296,297,19>",(f)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (f) != "undefined") {_RecordType("<311,312,20>",(f)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (f) != "undefined") {_RecordType("<324,325,21>",(f)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (f) != "undefined") {_RecordType("<339,340,22>",(f)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (f) != "undefined") {_RecordType("<357,358,23>",(f)); Inst17++; } } catch(e) {}
  var obj = Object.defineProperties({}, {
    2: f(2),
    0: f(0),
    1: f(1),
    ' ': f(' '),
    9: f(9),
    D: f('D'),
    B: f('B'),
    '-1': f('-1')
  });
try { if (Inst7 <= 1000 && typeof (obj) != "undefined") {_RecordType("<212,215,15>",(obj)); Inst7++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<373,394,25>",(Object.defineProperty)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Object) != "undefined") {_RecordType("<373,379,25>",(Object)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (obj) != "undefined") {_RecordType("<395,398,25>",(obj)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (f) != "undefined") {_RecordType("<405,406,25>",(f)); Inst21++; } } catch(e) {}
  Object.defineProperty(obj, 'A', f('A'));
try { if (Inst22 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<416,437,26>",(Object.defineProperty)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Object) != "undefined") {_RecordType("<416,422,26>",(Object)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (obj) != "undefined") {_RecordType("<438,441,26>",(obj)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (f) != "undefined") {_RecordType("<448,449,26>",(f)); Inst25++; } } catch(e) {}
  Object.defineProperty(obj, '3', f('3'));
try { if (Inst26 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<459,480,27>",(Object.defineProperty)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (Object) != "undefined") {_RecordType("<459,465,27>",(Object)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (obj) != "undefined") {_RecordType("<481,484,27>",(obj)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (f) != "undefined") {_RecordType("<491,492,27>",(f)); Inst29++; } } catch(e) {}
  Object.defineProperty(obj, 'C', f('C'));
try { if (Inst30 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<502,523,28>",(Object.defineProperty)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (Object) != "undefined") {_RecordType("<502,508,28>",(Object)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (obj) != "undefined") {_RecordType("<524,527,28>",(obj)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (f) != "undefined") {_RecordType("<534,535,28>",(f)); Inst33++; } } catch(e) {}
  Object.defineProperty(obj, '4', f('4'));
try { if (Inst34 <= 1000 && typeof (obj[2]) != "undefined") {_RecordType("<552,558,29>",(obj[2])); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (obj) != "undefined") {_RecordType("<552,555,29>",(obj)); Inst35++; } } catch(e) {}
  delete obj[2];
  obj[2] = true;
try { if (Inst36 <= 1000 && typeof (obj[2]) != "undefined") {_RecordType("<562,568,30>",(obj[2])); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (obj) != "undefined") {_RecordType("<562,565,30>",(obj)); Inst37++; } } catch(e) {}
try { if (Inst38 <= 1000 && typeof (Object.assign) != "undefined") {_RecordType("<579,592,31>",(Object.assign)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (Object) != "undefined") {_RecordType("<579,585,31>",(Object)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (obj) != "undefined") {_RecordType("<597,600,31>",(obj)); Inst40++; } } catch(e) {}
  Object.assign({}, obj);
try { if (Inst41 <= 1000 && typeof (result) != "undefined") {_RecordType("<612,618,32>",(result)); Inst41++; } } catch(e) {}
  return result === "012349 DB-1AC";
}

try { if (Inst42 <= 1000 && typeof (test) != "undefined") {_RecordType("<648,652,35>",(test)); Inst42++; } } catch(e) {}
if (!test()) {
try { if (Inst43 <= 1000 && typeof (Error) != "undefined") {_RecordType("<670,675,36>",(Error)); Inst43++; } } catch(e) {}
  throw new Error("Test failed");
}

