var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (test) != "undefined") {_RecordType("<9,13,1>",(test)); Inst0++; } } catch(e) {}
function test() {
  let scopes = [];
try { if (Inst1 <= 1000 && typeof (scopes) != "undefined") {_RecordType("<24,30,2>",(scopes)); Inst1++; } } catch(e) {}

  for (let i = 0; i < 2; i++) {
try { if (Inst2 <= 1000 && typeof (i) != "undefined") {_RecordType("<49,50,4>",(i)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (i) != "undefined") {_RecordType("<56,57,4>",(i)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (i) != "undefined") {_RecordType("<63,64,4>",(i)); Inst4++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (scopes.push) != "undefined") {_RecordType("<74,85,5>",(scopes.push)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (scopes) != "undefined") {_RecordType("<74,80,5>",(scopes)); Inst6++; } } catch(e) {}
    scopes.push(function () {
try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<113,114,6>",(i)); Inst7++; } } catch(e) {}
      return i;
    });
  }

try { if (Inst9 <= 1000 && typeof (scopes[0]) != "undefined") {_RecordType("<144,153,10>",(scopes[0])); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (scopes) != "undefined") {_RecordType("<144,150,10>",(scopes)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (scopes[1]) != "undefined") {_RecordType("<165,174,10>",(scopes[1])); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (scopes) != "undefined") {_RecordType("<165,171,10>",(scopes)); Inst12++; } } catch(e) {}
  let passed = scopes[0]() === 0 && scopes[1]() === 1;
try { if (Inst8 <= 1000 && typeof (passed) != "undefined") {_RecordType("<135,141,10>",(passed)); Inst8++; } } catch(e) {}
  scopes = [];
try { if (Inst13 <= 1000 && typeof (scopes) != "undefined") {_RecordType("<186,192,11>",(scopes)); Inst13++; } } catch(e) {}

  for (let i in {
    a: 1,
    b: 1
  }) {
try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<211,212,13>",(i)); Inst14++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (scopes.push) != "undefined") {_RecordType("<248,259,17>",(scopes.push)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (scopes) != "undefined") {_RecordType("<248,254,17>",(scopes)); Inst16++; } } catch(e) {}
    scopes.push(function () {
try { if (Inst17 <= 1000 && typeof (i) != "undefined") {_RecordType("<287,288,18>",(i)); Inst17++; } } catch(e) {}
      return i;
    });
  }

try { if (Inst19 <= 1000 && typeof (scopes[0]) != "undefined") {_RecordType("<315,324,22>",(scopes[0])); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (scopes) != "undefined") {_RecordType("<315,321,22>",(scopes)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (scopes[1]) != "undefined") {_RecordType("<338,347,22>",(scopes[1])); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (scopes) != "undefined") {_RecordType("<338,344,22>",(scopes)); Inst22++; } } catch(e) {}
  passed &= scopes[0]() === "a" && scopes[1]() === "b";
try { if (Inst18 <= 1000 && typeof (passed) != "undefined") {_RecordType("<305,311,22>",(passed)); Inst18++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (passed) != "undefined") {_RecordType("<368,374,23>",(passed)); Inst23++; } } catch(e) {}
  return passed;
}

try { if (Inst24 <= 1000 && typeof (test) != "undefined") {_RecordType("<384,388,26>",(test)); Inst24++; } } catch(e) {}
if (!test()) {
try { if (Inst25 <= 1000 && typeof (Error) != "undefined") {_RecordType("<406,411,27>",(Error)); Inst25++; } } catch(e) {}
  throw new Error("Test failed");
}

