var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (test) != "undefined") {_RecordType("<9,13,1>",(test)); Inst0++; } } catch(e) {}
function test() {
  var proxied = {};
try { if (Inst1 <= 1000 && typeof (proxied) != "undefined") {_RecordType("<24,31,2>",(proxied)); Inst1++; } } catch(e) {}
  var fakeDesc = {
    value: "foo",
    configurable: true
  };
try { if (Inst2 <= 1000 && typeof (fakeDesc) != "undefined") {_RecordType("<44,52,3>",(fakeDesc)); Inst2++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<124,155,7>",(Object.getOwnPropertyDescriptor)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Object) != "undefined") {_RecordType("<124,130,7>",(Object)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<160,165,7>",(Proxy)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (proxied) != "undefined") {_RecordType("<166,173,7>",(proxied)); Inst7++; } } catch(e) {}
  var returnedDesc = Object.getOwnPropertyDescriptor(new Proxy(proxied, {
    getOwnPropertyDescriptor: function (t, k) {
try { if (Inst8 <= 1000 && typeof (t) != "undefined") {_RecordType("<217,218,8>",(t)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (k) != "undefined") {_RecordType("<220,221,8>",(k)); Inst9++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (t) != "undefined") {_RecordType("<238,239,9>",(t)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (proxied) != "undefined") {_RecordType("<244,251,9>",(proxied)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (k) != "undefined") {_RecordType("<255,256,9>",(k)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (fakeDesc) != "undefined") {_RecordType("<270,278,9>",(fakeDesc)); Inst13++; } } catch(e) {}
      return t === proxied && k === "foo" && fakeDesc;
    }
  }), "foo");
try { if (Inst3 <= 1000 && typeof (returnedDesc) != "undefined") {_RecordType("<109,121,7>",(returnedDesc)); Inst3++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (returnedDesc.value) != "undefined") {_RecordType("<309,327,12>",(returnedDesc.value)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (returnedDesc) != "undefined") {_RecordType("<309,321,12>",(returnedDesc)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (fakeDesc.value) != "undefined") {_RecordType("<332,346,12>",(fakeDesc.value)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (fakeDesc) != "undefined") {_RecordType("<332,340,12>",(fakeDesc)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (returnedDesc.configurable) != "undefined") {_RecordType("<350,375,12>",(returnedDesc.configurable)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (returnedDesc) != "undefined") {_RecordType("<350,362,12>",(returnedDesc)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (fakeDesc.configurable) != "undefined") {_RecordType("<380,401,12>",(fakeDesc.configurable)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (fakeDesc) != "undefined") {_RecordType("<380,388,12>",(fakeDesc)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (returnedDesc.writable) != "undefined") {_RecordType("<405,426,12>",(returnedDesc.writable)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (returnedDesc) != "undefined") {_RecordType("<405,417,12>",(returnedDesc)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (returnedDesc.enumerable) != "undefined") {_RecordType("<440,463,12>",(returnedDesc.enumerable)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (returnedDesc) != "undefined") {_RecordType("<440,452,12>",(returnedDesc)); Inst25++; } } catch(e) {}
  return returnedDesc.value === fakeDesc.value && returnedDesc.configurable === fakeDesc.configurable && returnedDesc.writable === false && returnedDesc.enumerable === false;
}

try { if (Inst26 <= 1000 && typeof (test) != "undefined") {_RecordType("<483,487,15>",(test)); Inst26++; } } catch(e) {}
if (!test()) {
try { if (Inst27 <= 1000 && typeof (Error) != "undefined") {_RecordType("<505,510,16>",(Error)); Inst27++; } } catch(e) {}
  throw new Error("Test failed");
}

