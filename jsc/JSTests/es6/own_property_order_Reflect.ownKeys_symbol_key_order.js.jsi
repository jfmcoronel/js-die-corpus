var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (test) != "undefined") {_RecordType("<9,13,1>",(test)); Inst0++; } } catch(e) {}
function test() {
try { if (Inst2 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<31,37,2>",(Symbol)); Inst2++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<54,60,3>",(Symbol)); Inst4++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<77,83,4>",(Symbol)); Inst6++; } } catch(e) {}
  var sym1 = Symbol(),
      sym2 = Symbol(),
      sym3 = Symbol();
try { if (Inst1 <= 1000 && typeof (sym1) != "undefined") {_RecordType("<24,28,2>",(sym1)); Inst1++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (sym2) != "undefined") {_RecordType("<47,51,3>",(sym2)); Inst3++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (sym3) != "undefined") {_RecordType("<70,74,4>",(sym3)); Inst5++; } } catch(e) {}
  var obj = {
    1: true,
    A: true
  };
try { if (Inst7 <= 1000 && typeof (obj) != "undefined") {_RecordType("<93,96,5>",(obj)); Inst7++; } } catch(e) {}
  obj.B = true;
try { if (Inst8 <= 1000 && typeof (obj.B) != "undefined") {_RecordType("<133,138,9>",(obj.B)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (obj) != "undefined") {_RecordType("<133,136,9>",(obj)); Inst9++; } } catch(e) {}
  obj[sym1] = true;
try { if (Inst10 <= 1000 && typeof (obj[sym1]) != "undefined") {_RecordType("<149,158,10>",(obj[sym1])); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (obj) != "undefined") {_RecordType("<149,152,10>",(obj)); Inst11++; } } catch(e) {}
  obj[2] = true;
try { if (Inst12 <= 1000 && typeof (obj[2]) != "undefined") {_RecordType("<169,175,11>",(obj[2])); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (obj) != "undefined") {_RecordType("<169,172,11>",(obj)); Inst13++; } } catch(e) {}
  obj[sym2] = true;
try { if (Inst14 <= 1000 && typeof (obj[sym2]) != "undefined") {_RecordType("<186,195,12>",(obj[sym2])); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (obj) != "undefined") {_RecordType("<186,189,12>",(obj)); Inst15++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<206,227,13>",(Object.defineProperty)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Object) != "undefined") {_RecordType("<206,212,13>",(Object)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (obj) != "undefined") {_RecordType("<228,231,13>",(obj)); Inst18++; } } catch(e) {}
  Object.defineProperty(obj, 'C', {
    value: true,
    enumerable: true
  });
try { if (Inst19 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<286,307,17>",(Object.defineProperty)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (Object) != "undefined") {_RecordType("<286,292,17>",(Object)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (obj) != "undefined") {_RecordType("<308,311,17>",(obj)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (sym3) != "undefined") {_RecordType("<313,317,17>",(sym3)); Inst22++; } } catch(e) {}
  Object.defineProperty(obj, sym3, {
    value: true,
    enumerable: true
  });
try { if (Inst23 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<367,388,21>",(Object.defineProperty)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (Object) != "undefined") {_RecordType("<367,373,21>",(Object)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (obj) != "undefined") {_RecordType("<389,392,21>",(obj)); Inst25++; } } catch(e) {}
  Object.defineProperty(obj, 'D', {
    value: true,
    enumerable: true
  });
try { if (Inst27 <= 1000 && typeof (Reflect.ownKeys) != "undefined") {_RecordType("<460,475,25>",(Reflect.ownKeys)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<460,467,25>",(Reflect)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (obj) != "undefined") {_RecordType("<476,479,25>",(obj)); Inst29++; } } catch(e) {}
  var result = Reflect.ownKeys(obj);
try { if (Inst26 <= 1000 && typeof (result) != "undefined") {_RecordType("<451,457,25>",(result)); Inst26++; } } catch(e) {}
try { if (Inst31 <= 1000 && typeof (result.length) != "undefined") {_RecordType("<492,505,26>",(result.length)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (result) != "undefined") {_RecordType("<492,498,26>",(result)); Inst32++; } } catch(e) {}
  var l = result.length;
try { if (Inst30 <= 1000 && typeof (l) != "undefined") {_RecordType("<488,489,26>",(l)); Inst30++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (result[l - 3]) != "undefined") {_RecordType("<516,529,27>",(result[l - 3])); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (result) != "undefined") {_RecordType("<516,522,27>",(result)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (l) != "undefined") {_RecordType("<523,524,27>",(l)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (sym1) != "undefined") {_RecordType("<534,538,27>",(sym1)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (result[l - 2]) != "undefined") {_RecordType("<542,555,27>",(result[l - 2])); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (result) != "undefined") {_RecordType("<542,548,27>",(result)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (l) != "undefined") {_RecordType("<549,550,27>",(l)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (sym2) != "undefined") {_RecordType("<560,564,27>",(sym2)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (result[l - 1]) != "undefined") {_RecordType("<568,581,27>",(result[l - 1])); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (result) != "undefined") {_RecordType("<568,574,27>",(result)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (l) != "undefined") {_RecordType("<575,576,27>",(l)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (sym3) != "undefined") {_RecordType("<586,590,27>",(sym3)); Inst44++; } } catch(e) {}
  return result[l - 3] === sym1 && result[l - 2] === sym2 && result[l - 1] === sym3;
}

try { if (Inst45 <= 1000 && typeof (test) != "undefined") {_RecordType("<600,604,30>",(test)); Inst45++; } } catch(e) {}
if (!test()) {
try { if (Inst46 <= 1000 && typeof (Error) != "undefined") {_RecordType("<622,627,31>",(Error)); Inst46++; } } catch(e) {}
  throw new Error("Test failed");
}

