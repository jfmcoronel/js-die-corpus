var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (test) != "undefined") {_RecordType("<9,13,1>",(test)); Inst0++; } } catch(e) {}
function test() {
  var passed = false;
try { if (Inst1 <= 1000 && typeof (passed) != "undefined") {_RecordType("<24,30,2>",(passed)); Inst1++; } } catch(e) {}

try { if (Inst2 <= 1000 && typeof (asyncTestPassed) != "undefined") {_RecordType("<52,67,4>",(asyncTestPassed)); Inst2++; } } catch(e) {}
  function asyncTestPassed() {
    passed = true;
try { if (Inst3 <= 1000 && typeof (passed) != "undefined") {_RecordType("<76,82,5>",(passed)); Inst3++; } } catch(e) {}
  }

try { if (Inst5 <= 1000 && typeof (Promise) != "undefined") {_RecordType("<111,118,8>",(Promise)); Inst5++; } } catch(e) {}
  var p1 = new Promise(function (resolve, reject) {
try { if (Inst6 <= 1000 && typeof (resolve) != "undefined") {_RecordType("<129,136,8>",(resolve)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (reject) != "undefined") {_RecordType("<138,144,8>",(reject)); Inst7++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (resolve) != "undefined") {_RecordType("<152,159,9>",(resolve)); Inst8++; } } catch(e) {}
    resolve("foo");
  });
try { if (Inst4 <= 1000 && typeof (p1) != "undefined") {_RecordType("<102,104,8>",(p1)); Inst4++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (Promise) != "undefined") {_RecordType("<189,196,11>",(Promise)); Inst10++; } } catch(e) {}
  var p2 = new Promise(function (resolve, reject) {
try { if (Inst11 <= 1000 && typeof (resolve) != "undefined") {_RecordType("<207,214,11>",(resolve)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (reject) != "undefined") {_RecordType("<216,222,11>",(reject)); Inst12++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (reject) != "undefined") {_RecordType("<230,236,12>",(reject)); Inst13++; } } catch(e) {}
    reject("quux");
  });
try { if (Inst9 <= 1000 && typeof (p2) != "undefined") {_RecordType("<180,182,11>",(p2)); Inst9++; } } catch(e) {}
  var score = 0;
try { if (Inst14 <= 1000 && typeof (score) != "undefined") {_RecordType("<258,263,14>",(score)); Inst14++; } } catch(e) {}

try { if (Inst15 <= 1000 && typeof (thenFn) != "undefined") {_RecordType("<281,287,16>",(thenFn)); Inst15++; } } catch(e) {}
  function thenFn(result) {
try { if (Inst16 <= 1000 && typeof (result) != "undefined") {_RecordType("<288,294,16>",(result)); Inst16++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (result) != "undefined") {_RecordType("<311,317,17>",(result)); Inst18++; } } catch(e) {}
    score += result === "foo";
try { if (Inst17 <= 1000 && typeof (score) != "undefined") {_RecordType("<302,307,17>",(score)); Inst17++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (check) != "undefined") {_RecordType("<333,338,18>",(check)); Inst19++; } } catch(e) {}
    check();
  }

try { if (Inst20 <= 1000 && typeof (catchFn) != "undefined") {_RecordType("<358,365,21>",(catchFn)); Inst20++; } } catch(e) {}
  function catchFn(result) {
try { if (Inst21 <= 1000 && typeof (result) != "undefined") {_RecordType("<366,372,21>",(result)); Inst21++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (result) != "undefined") {_RecordType("<389,395,22>",(result)); Inst23++; } } catch(e) {}
    score += result === "quux";
try { if (Inst22 <= 1000 && typeof (score) != "undefined") {_RecordType("<380,385,22>",(score)); Inst22++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (check) != "undefined") {_RecordType("<412,417,23>",(check)); Inst24++; } } catch(e) {}
    check();
  }

try { if (Inst25 <= 1000 && typeof (shouldNotRun) != "undefined") {_RecordType("<437,449,26>",(shouldNotRun)); Inst25++; } } catch(e) {}
  function shouldNotRun(result) {
try { if (Inst26 <= 1000 && typeof (result) != "undefined") {_RecordType("<450,456,26>",(result)); Inst26++; } } catch(e) {}
try { if (Inst28 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<473,481,27>",(Infinity)); Inst28++; } } catch(e) {}
    score = -Infinity;
try { if (Inst27 <= 1000 && typeof (score) != "undefined") {_RecordType("<464,469,27>",(score)); Inst27++; } } catch(e) {}
  }

try { if (Inst29 <= 1000 && typeof (p1.then) != "undefined") {_RecordType("<490,497,30>",(p1.then)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (p1) != "undefined") {_RecordType("<490,492,30>",(p1)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (thenFn) != "undefined") {_RecordType("<498,504,30>",(thenFn)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (shouldNotRun) != "undefined") {_RecordType("<506,518,30>",(shouldNotRun)); Inst32++; } } catch(e) {}
  p1.then(thenFn, shouldNotRun);
try { if (Inst33 <= 1000 && typeof (p2.then) != "undefined") {_RecordType("<523,530,31>",(p2.then)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (p2) != "undefined") {_RecordType("<523,525,31>",(p2)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (shouldNotRun) != "undefined") {_RecordType("<531,543,31>",(shouldNotRun)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (catchFn) != "undefined") {_RecordType("<545,552,31>",(catchFn)); Inst36++; } } catch(e) {}
  p2.then(shouldNotRun, catchFn);
try { if (Inst37 <= 1000 && typeof (p1.catch) != "undefined") {_RecordType("<557,565,32>",(p1.catch)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (p1) != "undefined") {_RecordType("<557,559,32>",(p1)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (shouldNotRun) != "undefined") {_RecordType("<566,578,32>",(shouldNotRun)); Inst39++; } } catch(e) {}
  p1.catch(shouldNotRun);
try { if (Inst40 <= 1000 && typeof (p2.catch) != "undefined") {_RecordType("<583,591,33>",(p2.catch)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (p2) != "undefined") {_RecordType("<583,585,33>",(p2)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (catchFn) != "undefined") {_RecordType("<592,599,33>",(catchFn)); Inst42++; } } catch(e) {}
  p2.catch(catchFn);
try { if (Inst43 <= 1000 && typeof (p1.then) != "undefined") {_RecordType("<604,611,34>",(p1.then)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (p1) != "undefined") {_RecordType("<604,606,34>",(p1)); Inst44++; } } catch(e) {}
  p1.then(function () {
    // Promise.prototype.then() should return a new Promise
try { if (Inst46 <= 1000 && typeof (p1.then) != "undefined") {_RecordType("<699,706,36>",(p1.then)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (p1) != "undefined") {_RecordType("<699,701,36>",(p1)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (p1) != "undefined") {_RecordType("<713,715,36>",(p1)); Inst48++; } } catch(e) {}
    score += p1.then() !== p1;
try { if (Inst45 <= 1000 && typeof (score) != "undefined") {_RecordType("<690,695,36>",(score)); Inst45++; } } catch(e) {}
try { if (Inst49 <= 1000 && typeof (check) != "undefined") {_RecordType("<721,726,37>",(check)); Inst49++; } } catch(e) {}
    check();
  });

try { if (Inst50 <= 1000 && typeof (check) != "undefined") {_RecordType("<748,753,40>",(check)); Inst50++; } } catch(e) {}
  function check() {
try { if (Inst51 <= 1000 && typeof (score) != "undefined") {_RecordType("<766,771,41>",(score)); Inst51++; } } catch(e) {}
    if (score === 4) {
try { if (Inst52 <= 1000 && typeof (asyncTestPassed) != "undefined") {_RecordType("<787,802,42>",(asyncTestPassed)); Inst52++; } } catch(e) {}
      asyncTestPassed();
    }
  }

try { if (Inst53 <= 1000 && typeof (passed) != "undefined") {_RecordType("<826,832,46>",(passed)); Inst53++; } } catch(e) {}
  return passed;
}

try { if (Inst54 <= 1000 && typeof (test) != "undefined") {_RecordType("<837,841,49>",(test)); Inst54++; } } catch(e) {}
test();

