var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (test) != "undefined") {_RecordType("<9,13,1>",(test)); Inst0++; } } catch(e) {}
function test() {
  // Note: only available outside of strict mode.
  if (!this) {
    return false;
  }

try { if (Inst2 <= 1000 && typeof (f) != "undefined") {_RecordType("<121,122,7>",(f)); Inst2++; } } catch(e) {}
  var passed = f() === 1;
try { if (Inst1 <= 1000 && typeof (passed) != "undefined") {_RecordType("<112,118,7>",(passed)); Inst1++; } } catch(e) {}

try { if (Inst3 <= 1000 && typeof (f) != "undefined") {_RecordType("<144,145,9>",(f)); Inst3++; } } catch(e) {}
  function f() {
    return 1;
  }

try { if (Inst5 <= 1000 && typeof (g) != "undefined") {_RecordType("<188,189,13>",(g)); Inst5++; } } catch(e) {}
  passed &= typeof g === 'undefined';
try { if (Inst4 <= 1000 && typeof (passed) != "undefined") {_RecordType("<171,177,13>",(passed)); Inst4++; } } catch(e) {}
  {
try { if (Inst6 <= 1000 && typeof (g) != "undefined") {_RecordType("<224,225,15>",(g)); Inst6++; } } catch(e) {}
    function g() {
      return 1;
    }
  }
try { if (Inst8 <= 1000 && typeof (g) != "undefined") {_RecordType("<268,269,19>",(g)); Inst8++; } } catch(e) {}
  passed &= g() === 1;
try { if (Inst7 <= 1000 && typeof (passed) != "undefined") {_RecordType("<258,264,19>",(passed)); Inst7++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (h) != "undefined") {_RecordType("<291,292,20>",(h)); Inst10++; } } catch(e) {}
  passed &= h() === 2;
try { if (Inst9 <= 1000 && typeof (passed) != "undefined") {_RecordType("<281,287,20>",(passed)); Inst9++; } } catch(e) {}
  {
try { if (Inst11 <= 1000 && typeof (h) != "undefined") {_RecordType("<319,320,22>",(h)); Inst11++; } } catch(e) {}
    function h() {
      return 1;
    }
  }

try { if (Inst12 <= 1000 && typeof (h) != "undefined") {_RecordType("<363,364,27>",(h)); Inst12++; } } catch(e) {}
  function h() {
    return 2;
  }

try { if (Inst14 <= 1000 && typeof (h) != "undefined") {_RecordType("<400,401,31>",(h)); Inst14++; } } catch(e) {}
  passed &= h() === 1;
try { if (Inst13 <= 1000 && typeof (passed) != "undefined") {_RecordType("<390,396,31>",(passed)); Inst13++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (passed) != "undefined") {_RecordType("<420,426,32>",(passed)); Inst15++; } } catch(e) {}
  return passed;
}

try { if (Inst16 <= 1000 && typeof (test) != "undefined") {_RecordType("<436,440,35>",(test)); Inst16++; } } catch(e) {}
if (!test()) {
try { if (Inst17 <= 1000 && typeof (Error) != "undefined") {_RecordType("<458,463,36>",(Error)); Inst17++; } } catch(e) {}
  throw new Error("Test failed");
}

