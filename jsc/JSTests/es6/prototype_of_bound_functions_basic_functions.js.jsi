var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (test) != "undefined") {_RecordType("<9,13,1>",(test)); Inst0++; } } catch(e) {}
function test() {
try { if (Inst1 <= 1000 && typeof (correctProtoBound) != "undefined") {_RecordType("<29,46,2>",(correctProtoBound)); Inst1++; } } catch(e) {}
  function correctProtoBound(proto) {
try { if (Inst2 <= 1000 && typeof (proto) != "undefined") {_RecordType("<47,52,2>",(proto)); Inst2++; } } catch(e) {}
    var f = function () {
      ;
    };
try { if (Inst3 <= 1000 && typeof (f) != "undefined") {_RecordType("<64,65,3>",(f)); Inst3++; } } catch(e) {}

try { if (Inst4 <= 1000 && typeof (Object.setPrototypeOf) != "undefined") {_RecordType("<106,127,7>",(Object.setPrototypeOf)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Object) != "undefined") {_RecordType("<106,112,7>",(Object)); Inst5++; } } catch(e) {}
    if (Object.setPrototypeOf) {
try { if (Inst6 <= 1000 && typeof (Object.setPrototypeOf) != "undefined") {_RecordType("<137,158,8>",(Object.setPrototypeOf)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Object) != "undefined") {_RecordType("<137,143,8>",(Object)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (f) != "undefined") {_RecordType("<159,160,8>",(f)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (proto) != "undefined") {_RecordType("<162,167,8>",(proto)); Inst9++; } } catch(e) {}
      Object.setPrototypeOf(f, proto);
    } else {
try { if (Inst12 <= 1000 && typeof (proto) != "undefined") {_RecordType("<203,208,10>",(proto)); Inst12++; } } catch(e) {}
      f.__proto__ = proto;
try { if (Inst10 <= 1000 && typeof (f.__proto__) != "undefined") {_RecordType("<189,200,10>",(f.__proto__)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (f) != "undefined") {_RecordType("<189,190,10>",(f)); Inst11++; } } catch(e) {}
    }

try { if (Inst14 <= 1000 && typeof (Function.prototype.bind.call) != "undefined") {_RecordType("<234,262,13>",(Function.prototype.bind.call)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Function.prototype.bind) != "undefined") {_RecordType("<234,257,13>",(Function.prototype.bind)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Function.prototype) != "undefined") {_RecordType("<234,252,13>",(Function.prototype)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Function) != "undefined") {_RecordType("<234,242,13>",(Function)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (f) != "undefined") {_RecordType("<263,264,13>",(f)); Inst18++; } } catch(e) {}
    var boundF = Function.prototype.bind.call(f, null);
try { if (Inst13 <= 1000 && typeof (boundF) != "undefined") {_RecordType("<225,231,13>",(boundF)); Inst13++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (Object.getPrototypeOf) != "undefined") {_RecordType("<284,305,14>",(Object.getPrototypeOf)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (Object) != "undefined") {_RecordType("<284,290,14>",(Object)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (boundF) != "undefined") {_RecordType("<306,312,14>",(boundF)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (proto) != "undefined") {_RecordType("<318,323,14>",(proto)); Inst22++; } } catch(e) {}
    return Object.getPrototypeOf(boundF) === proto;
  }

try { if (Inst23 <= 1000 && typeof (correctProtoBound) != "undefined") {_RecordType("<339,356,17>",(correctProtoBound)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (Function.prototype) != "undefined") {_RecordType("<357,375,17>",(Function.prototype)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Function) != "undefined") {_RecordType("<357,365,17>",(Function)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (correctProtoBound) != "undefined") {_RecordType("<380,397,17>",(correctProtoBound)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (correctProtoBound) != "undefined") {_RecordType("<405,422,17>",(correctProtoBound)); Inst27++; } } catch(e) {}
  return correctProtoBound(Function.prototype) && correctProtoBound({}) && correctProtoBound(null);
}

try { if (Inst28 <= 1000 && typeof (test) != "undefined") {_RecordType("<438,442,20>",(test)); Inst28++; } } catch(e) {}
if (!test()) {
try { if (Inst29 <= 1000 && typeof (Error) != "undefined") {_RecordType("<460,465,21>",(Error)); Inst29++; } } catch(e) {}
  throw new Error("Test failed");
}

