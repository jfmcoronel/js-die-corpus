var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (test) != "undefined") {_RecordType("<9,13,1>",(test)); Inst0++; } } catch(e) {}
function test() {
try { if (Inst1 <= 1000 && typeof (correctProtoBound) != "undefined") {_RecordType("<29,46,2>",(correctProtoBound)); Inst1++; } } catch(e) {}
  function correctProtoBound(superclass) {
try { if (Inst2 <= 1000 && typeof (superclass) != "undefined") {_RecordType("<47,57,2>",(superclass)); Inst2++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (superclass) != "undefined") {_RecordType("<81,91,3>",(superclass)); Inst6++; } } catch(e) {}
    class C extends superclass {
      constructor() {
try { if (Inst4 <= 1000 && typeof (Object.create) != "undefined") {_RecordType("<131,144,5>",(Object.create)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Object) != "undefined") {_RecordType("<131,137,5>",(Object)); Inst5++; } } catch(e) {}
        return Object.create(null);
      }

    }
try { if (Inst3 <= 1000 && typeof (C) != "undefined") {_RecordType("<71,72,3>",(C)); Inst3++; } } catch(e) {}

try { if (Inst8 <= 1000 && typeof (Function.prototype.bind.call) != "undefined") {_RecordType("<185,213,10>",(Function.prototype.bind.call)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Function.prototype.bind) != "undefined") {_RecordType("<185,208,10>",(Function.prototype.bind)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Function.prototype) != "undefined") {_RecordType("<185,203,10>",(Function.prototype)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Function) != "undefined") {_RecordType("<185,193,10>",(Function)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (C) != "undefined") {_RecordType("<214,215,10>",(C)); Inst12++; } } catch(e) {}
    var boundF = Function.prototype.bind.call(C, null);
try { if (Inst7 <= 1000 && typeof (boundF) != "undefined") {_RecordType("<176,182,10>",(boundF)); Inst7++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (Object.getPrototypeOf) != "undefined") {_RecordType("<235,256,11>",(Object.getPrototypeOf)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Object) != "undefined") {_RecordType("<235,241,11>",(Object)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (boundF) != "undefined") {_RecordType("<257,263,11>",(boundF)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Object.getPrototypeOf) != "undefined") {_RecordType("<269,290,11>",(Object.getPrototypeOf)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Object) != "undefined") {_RecordType("<269,275,11>",(Object)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (C) != "undefined") {_RecordType("<291,292,11>",(C)); Inst18++; } } catch(e) {}
    return Object.getPrototypeOf(boundF) === Object.getPrototypeOf(C);
  }

try { if (Inst19 <= 1000 && typeof (correctProtoBound) != "undefined") {_RecordType("<309,326,14>",(correctProtoBound)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (correctProtoBound) != "undefined") {_RecordType("<355,372,16>",(correctProtoBound)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Array) != "undefined") {_RecordType("<373,378,16>",(Array)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (correctProtoBound) != "undefined") {_RecordType("<383,400,16>",(correctProtoBound)); Inst22++; } } catch(e) {}
  return correctProtoBound(function () {
    ;
  }) && correctProtoBound(Array) && correctProtoBound(null);
}

try { if (Inst23 <= 1000 && typeof (test) != "undefined") {_RecordType("<416,420,19>",(test)); Inst23++; } } catch(e) {}
if (!test()) {
try { if (Inst24 <= 1000 && typeof (Error) != "undefined") {_RecordType("<438,443,20>",(Error)); Inst24++; } } catch(e) {}
  throw new Error("Test failed");
}

