var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (test) != "undefined") {_RecordType("<9,13,1>",(test)); Inst0++; } } catch(e) {}
function test() {
try { if (Inst2 <= 1000 && typeof (baz) != "undefined") {_RecordType("<86,89,6>",(baz)); Inst2++; } } catch(e) {}
  var o = {
    foo: function () {
      ;
    },
    bar: function baz() {
      ;
    }
  };
try { if (Inst1 <= 1000 && typeof (o) != "undefined") {_RecordType("<24,25,2>",(o)); Inst1++; } } catch(e) {}

  o.qux = function () {
    ;
  };
try { if (Inst3 <= 1000 && typeof (o.qux) != "undefined") {_RecordType("<116,121,11>",(o.qux)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (o) != "undefined") {_RecordType("<116,117,11>",(o)); Inst4++; } } catch(e) {}

try { if (Inst5 <= 1000 && typeof (o.foo.name) != "undefined") {_RecordType("<159,169,15>",(o.foo.name)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (o.foo) != "undefined") {_RecordType("<159,164,15>",(o.foo)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (o) != "undefined") {_RecordType("<159,160,15>",(o)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (o.bar.name) != "undefined") {_RecordType("<183,193,15>",(o.bar.name)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (o.bar) != "undefined") {_RecordType("<183,188,15>",(o.bar)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (o) != "undefined") {_RecordType("<183,184,15>",(o)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (o.qux.name) != "undefined") {_RecordType("<207,217,15>",(o.qux.name)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (o.qux) != "undefined") {_RecordType("<207,212,15>",(o.qux)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (o) != "undefined") {_RecordType("<207,208,15>",(o)); Inst13++; } } catch(e) {}
  return o.foo.name === "foo" && o.bar.name === "baz" && o.qux.name === "";
}

try { if (Inst14 <= 1000 && typeof (test) != "undefined") {_RecordType("<234,238,18>",(test)); Inst14++; } } catch(e) {}
if (!test()) {
try { if (Inst15 <= 1000 && typeof (Error) != "undefined") {_RecordType("<256,261,19>",(Error)); Inst15++; } } catch(e) {}
  throw new Error("Test failed");
}

