var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (test) != "undefined") {_RecordType("<9,13,1>",(test)); Inst0++; } } catch(e) {}
function test() {
try { if (Inst1 <= 1000 && typeof (generatorFn) != "undefined") {_RecordType("<30,41,2>",(generatorFn)); Inst1++; } } catch(e) {}
  function* generatorFn() {
    ;
  }

try { if (Inst3 <= 1000 && typeof (Object.getPrototypeOf) != "undefined") {_RecordType("<74,95,6>",(Object.getPrototypeOf)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Object) != "undefined") {_RecordType("<74,80,6>",(Object)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (generatorFn) != "undefined") {_RecordType("<96,107,6>",(generatorFn)); Inst5++; } } catch(e) {}
  var ownProto = Object.getPrototypeOf(generatorFn());
try { if (Inst2 <= 1000 && typeof (ownProto) != "undefined") {_RecordType("<63,71,6>",(ownProto)); Inst2++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (ownProto) != "undefined") {_RecordType("<127,135,7>",(ownProto)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (generatorFn.prototype) != "undefined") {_RecordType("<140,161,7>",(generatorFn.prototype)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (generatorFn) != "undefined") {_RecordType("<140,151,7>",(generatorFn)); Inst9++; } } catch(e) {}
  var passed = ownProto === generatorFn.prototype;
try { if (Inst6 <= 1000 && typeof (passed) != "undefined") {_RecordType("<118,124,7>",(passed)); Inst6++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (Object.getPrototypeOf) != "undefined") {_RecordType("<183,204,8>",(Object.getPrototypeOf)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Object) != "undefined") {_RecordType("<183,189,8>",(Object)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (ownProto) != "undefined") {_RecordType("<205,213,8>",(ownProto)); Inst13++; } } catch(e) {}
  var sharedProto = Object.getPrototypeOf(ownProto);
try { if (Inst10 <= 1000 && typeof (sharedProto) != "undefined") {_RecordType("<169,180,8>",(sharedProto)); Inst10++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (sharedProto) != "undefined") {_RecordType("<228,239,9>",(sharedProto)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<244,260,9>",(Object.prototype)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Object) != "undefined") {_RecordType("<244,250,9>",(Object)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (sharedProto) != "undefined") {_RecordType("<264,275,9>",(sharedProto)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Object.getPrototypeOf) != "undefined") {_RecordType("<280,301,9>",(Object.getPrototypeOf)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (Object) != "undefined") {_RecordType("<280,286,9>",(Object)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (function* () {
    ;
  }.prototype) != "undefined") {_RecordType("<302,336,9>",(function* () {
    ;
  }.prototype)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (sharedProto.hasOwnProperty) != "undefined") {_RecordType("<341,367,11>",(sharedProto.hasOwnProperty)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (sharedProto) != "undefined") {_RecordType("<341,352,11>",(sharedProto)); Inst23++; } } catch(e) {}
  passed &= sharedProto !== Object.prototype && sharedProto === Object.getPrototypeOf(function* () {
    ;
  }.prototype) && sharedProto.hasOwnProperty('next');
try { if (Inst14 <= 1000 && typeof (passed) != "undefined") {_RecordType("<218,224,9>",(passed)); Inst14++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (passed) != "undefined") {_RecordType("<386,392,12>",(passed)); Inst24++; } } catch(e) {}
  return passed;
}

try { if (Inst25 <= 1000 && typeof (test) != "undefined") {_RecordType("<402,406,15>",(test)); Inst25++; } } catch(e) {}
if (!test()) {
try { if (Inst26 <= 1000 && typeof (Error) != "undefined") {_RecordType("<424,429,16>",(Error)); Inst26++; } } catch(e) {}
  throw new Error("Test failed");
}

