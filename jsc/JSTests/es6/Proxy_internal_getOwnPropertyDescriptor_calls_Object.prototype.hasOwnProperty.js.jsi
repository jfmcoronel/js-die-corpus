var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (test) != "undefined") {_RecordType("<9,13,1>",(test)); Inst0++; } } catch(e) {}
function test() {
  // Object.prototype.hasOwnProperty -> HasOwnProperty -> [[GetOwnProperty]]
  var gopd = [];
try { if (Inst1 <= 1000 && typeof (gopd) != "undefined") {_RecordType("<101,105,3>",(gopd)); Inst1++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<126,131,4>",(Proxy)); Inst3++; } } catch(e) {}
  var p = new Proxy({
    foo: 1,
    bar: 2
  }, {
    getOwnPropertyDescriptor: function (o, v) {
try { if (Inst4 <= 1000 && typeof (o) != "undefined") {_RecordType("<204,205,8>",(o)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (v) != "undefined") {_RecordType("<207,208,8>",(v)); Inst5++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (gopd.push) != "undefined") {_RecordType("<218,227,9>",(gopd.push)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (gopd) != "undefined") {_RecordType("<218,222,9>",(gopd)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (v) != "undefined") {_RecordType("<228,229,9>",(v)); Inst8++; } } catch(e) {}
      gopd.push(v);
try { if (Inst9 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<245,276,10>",(Object.getOwnPropertyDescriptor)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Object) != "undefined") {_RecordType("<245,251,10>",(Object)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (o) != "undefined") {_RecordType("<277,278,10>",(o)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (v) != "undefined") {_RecordType("<280,281,10>",(v)); Inst12++; } } catch(e) {}
      return Object.getOwnPropertyDescriptor(o, v);
    }
  });
try { if (Inst2 <= 1000 && typeof (p) != "undefined") {_RecordType("<118,119,4>",(p)); Inst2++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (p.hasOwnProperty) != "undefined") {_RecordType("<298,314,13>",(p.hasOwnProperty)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (p) != "undefined") {_RecordType("<298,299,13>",(p)); Inst14++; } } catch(e) {}
  p.hasOwnProperty('garply');
try { if (Inst15 <= 1000 && typeof (gopd) != "undefined") {_RecordType("<335,339,14>",(gopd)); Inst15++; } } catch(e) {}
  return gopd + '' === "garply";
}

try { if (Inst16 <= 1000 && typeof (test) != "undefined") {_RecordType("<367,371,17>",(test)); Inst16++; } } catch(e) {}
if (!test()) {
try { if (Inst17 <= 1000 && typeof (Error) != "undefined") {_RecordType("<389,394,18>",(Error)); Inst17++; } } catch(e) {}
  throw new Error("Test failed");
}

