var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (test) != "undefined") {_RecordType("<9,13,1>",(test)); Inst0++; } } catch(e) {}
function test() {
  // SetIntegrityLevel -> DefinePropertyOrThrow -> [[DefineOwnProperty]]
  var def = [];
try { if (Inst1 <= 1000 && typeof (def) != "undefined") {_RecordType("<97,100,3>",(def)); Inst1++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<121,126,4>",(Proxy)); Inst3++; } } catch(e) {}
  var p = new Proxy({
    foo: 1,
    bar: 2
  }, {
    defineProperty: function (o, v, desc) {
try { if (Inst4 <= 1000 && typeof (o) != "undefined") {_RecordType("<189,190,8>",(o)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (v) != "undefined") {_RecordType("<192,193,8>",(v)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (desc) != "undefined") {_RecordType("<195,199,8>",(desc)); Inst6++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (def.push) != "undefined") {_RecordType("<209,217,9>",(def.push)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (def) != "undefined") {_RecordType("<209,212,9>",(def)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (v) != "undefined") {_RecordType("<218,219,9>",(v)); Inst9++; } } catch(e) {}
      def.push(v);
try { if (Inst10 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<228,249,10>",(Object.defineProperty)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Object) != "undefined") {_RecordType("<228,234,10>",(Object)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (o) != "undefined") {_RecordType("<250,251,10>",(o)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (v) != "undefined") {_RecordType("<253,254,10>",(v)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (desc) != "undefined") {_RecordType("<256,260,10>",(desc)); Inst14++; } } catch(e) {}
      Object.defineProperty(o, v, desc);
      return true;
    }
  });
try { if (Inst2 <= 1000 && typeof (p) != "undefined") {_RecordType("<113,114,4>",(p)); Inst2++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (Object.freeze) != "undefined") {_RecordType("<296,309,14>",(Object.freeze)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Object) != "undefined") {_RecordType("<296,302,14>",(Object)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (p) != "undefined") {_RecordType("<310,311,14>",(p)); Inst17++; } } catch(e) {}
  Object.freeze(p);
try { if (Inst18 <= 1000 && typeof (def) != "undefined") {_RecordType("<323,326,15>",(def)); Inst18++; } } catch(e) {}
  return def + '' === "foo,bar";
}

try { if (Inst19 <= 1000 && typeof (test) != "undefined") {_RecordType("<355,359,18>",(test)); Inst19++; } } catch(e) {}
if (!test()) {
try { if (Inst20 <= 1000 && typeof (Error) != "undefined") {_RecordType("<377,382,19>",(Error)); Inst20++; } } catch(e) {}
  throw new Error("Test failed");
}

