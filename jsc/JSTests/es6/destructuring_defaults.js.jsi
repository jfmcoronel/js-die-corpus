var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (test) != "undefined") {_RecordType("<9,13,1>",(test)); Inst0++; } } catch(e) {}
function test() {
try { if (Inst4 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<86,95,8>",(undefined)); Inst4++; } } catch(e) {}
  var {
    a = 1,
    b = 0,
    z: c = 3
  } = {
    b: 2,
    z: undefined
  };
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<30,31,3>",(a)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (b) != "undefined") {_RecordType("<41,42,4>",(b)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (c) != "undefined") {_RecordType("<55,56,5>",(c)); Inst3++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<136,145,10>",(undefined)); Inst8++; } } catch(e) {}
  var [d = 0, e = 5, f = 6] = [4,, undefined];
try { if (Inst5 <= 1000 && typeof (d) != "undefined") {_RecordType("<108,109,10>",(d)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (e) != "undefined") {_RecordType("<115,116,10>",(e)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (f) != "undefined") {_RecordType("<122,123,10>",(f)); Inst7++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (a) != "undefined") {_RecordType("<157,158,11>",(a)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (b) != "undefined") {_RecordType("<168,169,11>",(b)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (c) != "undefined") {_RecordType("<179,180,11>",(c)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (d) != "undefined") {_RecordType("<190,191,11>",(d)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (e) != "undefined") {_RecordType("<201,202,11>",(e)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (f) != "undefined") {_RecordType("<212,213,11>",(f)); Inst14++; } } catch(e) {}
  return a === 1 && b === 2 && c === 3 && d === 4 && e === 5 && f === 6;
}

try { if (Inst15 <= 1000 && typeof (test) != "undefined") {_RecordType("<229,233,14>",(test)); Inst15++; } } catch(e) {}
if (!test()) {
try { if (Inst16 <= 1000 && typeof (Error) != "undefined") {_RecordType("<251,256,15>",(Error)); Inst16++; } } catch(e) {}
  throw new Error("Test failed");
}

