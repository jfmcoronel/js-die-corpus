var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (test) != "undefined") {_RecordType("<9,13,1>",(test)); Inst0++; } } catch(e) {}
function test() {
  var obj = {
    2: true,
    0: true,
    1: true,
    ' ': true,
    9: true,
    D: true,
    B: true,
    '-1': true
  };
try { if (Inst1 <= 1000 && typeof (obj) != "undefined") {_RecordType("<24,27,2>",(obj)); Inst1++; } } catch(e) {}
  obj.A = true;
try { if (Inst2 <= 1000 && typeof (obj.A) != "undefined") {_RecordType("<147,152,12>",(obj.A)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (obj) != "undefined") {_RecordType("<147,150,12>",(obj)); Inst3++; } } catch(e) {}
  obj[3] = true;
try { if (Inst4 <= 1000 && typeof (obj[3]) != "undefined") {_RecordType("<163,169,13>",(obj[3])); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (obj) != "undefined") {_RecordType("<163,166,13>",(obj)); Inst5++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<180,201,14>",(Object.defineProperty)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Object) != "undefined") {_RecordType("<180,186,14>",(Object)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (obj) != "undefined") {_RecordType("<202,205,14>",(obj)); Inst8++; } } catch(e) {}
  Object.defineProperty(obj, 'C', {
    value: true,
    enumerable: true
  });
try { if (Inst9 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<260,281,18>",(Object.defineProperty)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Object) != "undefined") {_RecordType("<260,266,18>",(Object)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (obj) != "undefined") {_RecordType("<282,285,18>",(obj)); Inst11++; } } catch(e) {}
  Object.defineProperty(obj, '4', {
    value: true,
    enumerable: true
  });
try { if (Inst12 <= 1000 && typeof (obj[2]) != "undefined") {_RecordType("<347,353,22>",(obj[2])); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (obj) != "undefined") {_RecordType("<347,350,22>",(obj)); Inst13++; } } catch(e) {}
  delete obj[2];
  obj[2] = true;
try { if (Inst14 <= 1000 && typeof (obj[2]) != "undefined") {_RecordType("<357,363,23>",(obj[2])); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (obj) != "undefined") {_RecordType("<357,360,23>",(obj)); Inst15++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (Object.keys(obj).join) != "undefined") {_RecordType("<381,402,24>",(Object.keys(obj).join)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Object.keys) != "undefined") {_RecordType("<381,392,24>",(Object.keys)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Object) != "undefined") {_RecordType("<381,387,24>",(Object)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (obj) != "undefined") {_RecordType("<393,396,24>",(obj)); Inst19++; } } catch(e) {}
  return Object.keys(obj).join('') === "012349 DB-1AC";
}

try { if (Inst20 <= 1000 && typeof (test) != "undefined") {_RecordType("<436,440,27>",(test)); Inst20++; } } catch(e) {}
if (!test()) {
try { if (Inst21 <= 1000 && typeof (Error) != "undefined") {_RecordType("<458,463,28>",(Error)); Inst21++; } } catch(e) {}
  throw new Error("Test failed");
}

