var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (test) != "undefined") {_RecordType("<9,13,1>",(test)); Inst0++; } } catch(e) {}
function test() {
  var passed = false;
try { if (Inst1 <= 1000 && typeof (passed) != "undefined") {_RecordType("<24,30,2>",(passed)); Inst1++; } } catch(e) {}

try { if (Inst2 <= 1000 && typeof (asyncTestPassed) != "undefined") {_RecordType("<52,67,4>",(asyncTestPassed)); Inst2++; } } catch(e) {}
  function asyncTestPassed() {
    passed = true;
try { if (Inst3 <= 1000 && typeof (passed) != "undefined") {_RecordType("<76,82,5>",(passed)); Inst3++; } } catch(e) {}
  }

try { if (Inst5 <= 1000 && typeof (Promise.all) != "undefined") {_RecordType("<113,124,8>",(Promise.all)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Promise) != "undefined") {_RecordType("<113,120,8>",(Promise)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Promise) != "undefined") {_RecordType("<130,137,8>",(Promise)); Inst7++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Promise) != "undefined") {_RecordType("<206,213,10>",(Promise)); Inst11++; } } catch(e) {}
  var fulfills = Promise.all([new Promise(function (resolve) {
try { if (Inst8 <= 1000 && typeof (resolve) != "undefined") {_RecordType("<148,155,8>",(resolve)); Inst8++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (setTimeout) != "undefined") {_RecordType("<163,173,9>",(setTimeout)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (resolve) != "undefined") {_RecordType("<174,181,9>",(resolve)); Inst10++; } } catch(e) {}
    setTimeout(resolve, 200, "foo");
  }), new Promise(function (resolve) {
try { if (Inst12 <= 1000 && typeof (resolve) != "undefined") {_RecordType("<224,231,10>",(resolve)); Inst12++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (setTimeout) != "undefined") {_RecordType("<239,249,11>",(setTimeout)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (resolve) != "undefined") {_RecordType("<250,257,11>",(resolve)); Inst14++; } } catch(e) {}
    setTimeout(resolve, 100, "bar");
  })]);
try { if (Inst4 <= 1000 && typeof (fulfills) != "undefined") {_RecordType("<102,110,8>",(fulfills)); Inst4++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (Promise.all) != "undefined") {_RecordType("<296,307,13>",(Promise.all)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Promise) != "undefined") {_RecordType("<296,303,13>",(Promise)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Promise) != "undefined") {_RecordType("<313,320,13>",(Promise)); Inst18++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Promise) != "undefined") {_RecordType("<390,397,15>",(Promise)); Inst23++; } } catch(e) {}
  var rejects = Promise.all([new Promise(function (_, reject) {
try { if (Inst19 <= 1000 && typeof (_) != "undefined") {_RecordType("<331,332,13>",(_)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (reject) != "undefined") {_RecordType("<334,340,13>",(reject)); Inst20++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (setTimeout) != "undefined") {_RecordType("<348,358,14>",(setTimeout)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (reject) != "undefined") {_RecordType("<359,365,14>",(reject)); Inst22++; } } catch(e) {}
    setTimeout(reject, 200, "baz");
  }), new Promise(function (_, reject) {
try { if (Inst24 <= 1000 && typeof (_) != "undefined") {_RecordType("<408,409,15>",(_)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (reject) != "undefined") {_RecordType("<411,417,15>",(reject)); Inst25++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (setTimeout) != "undefined") {_RecordType("<425,435,16>",(setTimeout)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (reject) != "undefined") {_RecordType("<436,442,16>",(reject)); Inst27++; } } catch(e) {}
    setTimeout(reject, 100, "qux");
  })]);
try { if (Inst15 <= 1000 && typeof (rejects) != "undefined") {_RecordType("<286,293,13>",(rejects)); Inst15++; } } catch(e) {}
  var score = 0;
try { if (Inst28 <= 1000 && typeof (score) != "undefined") {_RecordType("<471,476,18>",(score)); Inst28++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (fulfills.then) != "undefined") {_RecordType("<484,497,19>",(fulfills.then)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (fulfills) != "undefined") {_RecordType("<484,492,19>",(fulfills)); Inst30++; } } catch(e) {}
  fulfills.then(function (result) {
try { if (Inst31 <= 1000 && typeof (result) != "undefined") {_RecordType("<508,514,19>",(result)); Inst31++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (result) != "undefined") {_RecordType("<531,537,20>",(result)); Inst33++; } } catch(e) {}
    score += result + "" === "foo,bar";
try { if (Inst32 <= 1000 && typeof (score) != "undefined") {_RecordType("<522,527,20>",(score)); Inst32++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof (check) != "undefined") {_RecordType("<562,567,21>",(check)); Inst34++; } } catch(e) {}
    check();
  });
try { if (Inst35 <= 1000 && typeof (rejects.catch) != "undefined") {_RecordType("<579,592,23>",(rejects.catch)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (rejects) != "undefined") {_RecordType("<579,586,23>",(rejects)); Inst36++; } } catch(e) {}
  rejects.catch(function (result) {
try { if (Inst37 <= 1000 && typeof (result) != "undefined") {_RecordType("<603,609,23>",(result)); Inst37++; } } catch(e) {}
try { if (Inst39 <= 1000 && typeof (result) != "undefined") {_RecordType("<626,632,24>",(result)); Inst39++; } } catch(e) {}
    score += result === "qux";
try { if (Inst38 <= 1000 && typeof (score) != "undefined") {_RecordType("<617,622,24>",(score)); Inst38++; } } catch(e) {}
try { if (Inst40 <= 1000 && typeof (check) != "undefined") {_RecordType("<648,653,25>",(check)); Inst40++; } } catch(e) {}
    check();
  });

try { if (Inst41 <= 1000 && typeof (check) != "undefined") {_RecordType("<675,680,28>",(check)); Inst41++; } } catch(e) {}
  function check() {
try { if (Inst42 <= 1000 && typeof (score) != "undefined") {_RecordType("<693,698,29>",(score)); Inst42++; } } catch(e) {}
    if (score === 2) {
try { if (Inst43 <= 1000 && typeof (asyncTestPassed) != "undefined") {_RecordType("<714,729,30>",(asyncTestPassed)); Inst43++; } } catch(e) {}
      asyncTestPassed();
    }
  }

try { if (Inst44 <= 1000 && typeof (passed) != "undefined") {_RecordType("<753,759,34>",(passed)); Inst44++; } } catch(e) {}
  return passed;
}

try { if (Inst45 <= 1000 && typeof (test) != "undefined") {_RecordType("<764,768,37>",(test)); Inst45++; } } catch(e) {}
test();

