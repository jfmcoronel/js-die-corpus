var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2015 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
(function () {
try { if (Inst0 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<184,215,5>",(Object.getOwnPropertyDescriptor)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (Object) != "undefined") {_RecordType("<184,190,5>",(Object)); Inst1++; } } catch(e) {}
  Object.getOwnPropertyDescriptor(null, 'x');
})();

try { if (Inst2 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<235,244,8>",(TypeError)); Inst2++; } } catch(e) {}
TypeError;

(function () {
try { if (Inst3 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<264,295,11>",(Object.getOwnPropertyDescriptor)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Object) != "undefined") {_RecordType("<264,270,11>",(Object)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<296,305,11>",(undefined)); Inst5++; } } catch(e) {}
  Object.getOwnPropertyDescriptor(undefined, 'x');
})();

try { if (Inst6 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<320,329,14>",(TypeError)); Inst6++; } } catch(e) {}
TypeError;
({
  configurable: false,
  enumerable: false,
  value: 3,
  writable: false
});
try { if (Inst7 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<412,443,21>",(Object.getOwnPropertyDescriptor)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Object) != "undefined") {_RecordType("<412,418,21>",(Object)); Inst8++; } } catch(e) {}
Object.getOwnPropertyDescriptor('abc', 'length');
({
  configurable: false,
  enumerable: true,
  value: 'a',
  writable: false
});
try { if (Inst9 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<544,575,28>",(Object.getOwnPropertyDescriptor)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Object) != "undefined") {_RecordType("<544,550,28>",(Object)); Inst10++; } } catch(e) {}
Object.getOwnPropertyDescriptor('abc', 0);
try { if (Inst11 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<587,596,29>",(undefined)); Inst11++; } } catch(e) {}
undefined;
try { if (Inst12 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<598,629,30>",(Object.getOwnPropertyDescriptor)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Object) != "undefined") {_RecordType("<598,604,30>",(Object)); Inst13++; } } catch(e) {}
Object.getOwnPropertyDescriptor(42, 'x');
try { if (Inst14 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<640,649,31>",(undefined)); Inst14++; } } catch(e) {}
undefined;
try { if (Inst15 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<651,682,32>",(Object.getOwnPropertyDescriptor)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Object) != "undefined") {_RecordType("<651,657,32>",(Object)); Inst16++; } } catch(e) {}
Object.getOwnPropertyDescriptor(true, 'x');
try { if (Inst17 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<695,704,33>",(undefined)); Inst17++; } } catch(e) {}
undefined;
try { if (Inst18 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<706,737,34>",(Object.getOwnPropertyDescriptor)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Object) != "undefined") {_RecordType("<706,712,34>",(Object)); Inst19++; } } catch(e) {}
Object.getOwnPropertyDescriptor(false, 'x');
try { if (Inst20 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<751,760,35>",(undefined)); Inst20++; } } catch(e) {}
undefined;
try { if (Inst21 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<762,793,36>",(Object.getOwnPropertyDescriptor)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Object) != "undefined") {_RecordType("<762,768,36>",(Object)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<794,800,36>",(Symbol)); Inst23++; } } catch(e) {}
Object.getOwnPropertyDescriptor(Symbol(), 'x');

