var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
var Inst102 = 0;
var Inst103 = 0;
var Inst104 = 0;
var Inst105 = 0;
var Inst106 = 0;
var Inst107 = 0;
var Inst108 = 0;
var Inst109 = 0;
var Inst110 = 0;
var Inst111 = 0;
var Inst112 = 0;
var Inst113 = 0;
var Inst114 = 0;
var Inst115 = 0;
var Inst116 = 0;
var Inst117 = 0;
var Inst118 = 0;
var Inst119 = 0;
var Inst120 = 0;
var Inst121 = 0;
var Inst122 = 0;
var Inst123 = 0;
var Inst124 = 0;
var Inst125 = 0;
var Inst126 = 0;
var Inst127 = 0;
var Inst128 = 0;
var Inst129 = 0;
var Inst130 = 0;
var Inst131 = 0;
var Inst132 = 0;
var Inst133 = 0;
var Inst134 = 0;
var Inst135 = 0;
var Inst136 = 0;
var Inst137 = 0;
var Inst138 = 0;
var Inst139 = 0;
var Inst140 = 0;
var Inst141 = 0;
var Inst142 = 0;
var Inst143 = 0;
var Inst144 = 0;
var Inst145 = 0;
var Inst146 = 0;
var Inst147 = 0;
var Inst148 = 0;
var Inst149 = 0;
var Inst150 = 0;
var Inst151 = 0;
var Inst152 = 0;
var Inst153 = 0;
var Inst154 = 0;
var Inst155 = 0;
var Inst156 = 0;
var Inst157 = 0;
var Inst158 = 0;
var Inst159 = 0;
var Inst160 = 0;
var Inst161 = 0;
var Inst162 = 0;
var Inst163 = 0;
var Inst164 = 0;
var Inst165 = 0;
var Inst166 = 0;
var Inst167 = 0;
var Inst168 = 0;
var Inst169 = 0;
var Inst170 = 0;
var Inst171 = 0;
var Inst172 = 0;
var Inst173 = 0;
var Inst174 = 0;
var Inst175 = 0;
var Inst176 = 0;
var Inst177 = 0;
var Inst178 = 0;
var Inst179 = 0;
var Inst180 = 0;
var Inst181 = 0;
var Inst182 = 0;
var Inst183 = 0;
var Inst184 = 0;
var Inst185 = 0;
var Inst186 = 0;
var Inst187 = 0;
var Inst188 = 0;
var Inst189 = 0;
var Inst190 = 0;
var Inst191 = 0;
var Inst192 = 0;
var Inst193 = 0;
var Inst194 = 0;
var Inst195 = 0;
var Inst196 = 0;
var Inst197 = 0;
var Inst198 = 0;
var Inst199 = 0;
var Inst200 = 0;
var Inst201 = 0;
var Inst202 = 0;
var Inst203 = 0;
var Inst204 = 0;
var Inst205 = 0;
var Inst206 = 0;
var Inst207 = 0;
var Inst208 = 0;
var Inst209 = 0;
var Inst210 = 0;
var Inst211 = 0;
var Inst212 = 0;
var Inst213 = 0;
var Inst214 = 0;
var Inst215 = 0;
var Inst216 = 0;
var Inst217 = 0;
var Inst218 = 0;
var Inst219 = 0;
var Inst220 = 0;
var Inst221 = 0;
var Inst222 = 0;
var Inst223 = 0;
var Inst224 = 0;
var Inst225 = 0;
var Inst226 = 0;
var Inst227 = 0;
var Inst228 = 0;
var Inst229 = 0;
var Inst230 = 0;
var Inst231 = 0;
var Inst232 = 0;
var Inst233 = 0;
var Inst234 = 0;
var Inst235 = 0;
var Inst236 = 0;
var Inst237 = 0;
var Inst238 = 0;
var Inst239 = 0;
var Inst240 = 0;
var Inst241 = 0;
var Inst242 = 0;
var Inst243 = 0;
var Inst244 = 0;
var Inst245 = 0;
var Inst246 = 0;
var Inst247 = 0;
var Inst248 = 0;
var Inst249 = 0;
var Inst250 = 0;
var Inst251 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2011 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// Flags: --allow-natives-syntax --noalways-opt --opt
// It's nice to run this in other browsers too.
var standalone = false;
try { if (Inst0 <= 1000 && typeof (standalone) != "undefined") {_RecordType("<1703,1713,29>",(standalone)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (standalone) != "undefined") {_RecordType("<1728,1738,31>",(standalone)); Inst1++; } } catch(e) {}
if (standalone) {
  assertTrue = function (val) {
try { if (Inst3 <= 1000 && typeof (val) != "undefined") {_RecordType("<1767,1770,32>",(val)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (val) != "undefined") {_RecordType("<1782,1785,33>",(val)); Inst4++; } } catch(e) {}
    if (val != true) {
try { if (Inst5 <= 1000 && typeof (print) != "undefined") {_RecordType("<1803,1808,34>",(print)); Inst5++; } } catch(e) {}
      print("FAILURE");
    }
  };
try { if (Inst2 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<1744,1754,32>",(assertTrue)); Inst2++; } } catch(e) {}

  assertFalse = function (val) {
try { if (Inst7 <= 1000 && typeof (val) != "undefined") {_RecordType("<1859,1862,38>",(val)); Inst7++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (val) != "undefined") {_RecordType("<1874,1877,39>",(val)); Inst8++; } } catch(e) {}
    if (val != false) {
try { if (Inst9 <= 1000 && typeof (print) != "undefined") {_RecordType("<1896,1901,40>",(print)); Inst9++; } } catch(e) {}
      print("FAILURE");
    }
  };
try { if (Inst6 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<1835,1846,38>",(assertFalse)); Inst6++; } } catch(e) {}

  assertEquals = function (expected, val) {
try { if (Inst11 <= 1000 && typeof (expected) != "undefined") {_RecordType("<1953,1961,44>",(expected)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (val) != "undefined") {_RecordType("<1963,1966,44>",(val)); Inst12++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (expected) != "undefined") {_RecordType("<1978,1986,45>",(expected)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (val) != "undefined") {_RecordType("<1991,1994,45>",(val)); Inst14++; } } catch(e) {}
    if (expected !== val) {
try { if (Inst15 <= 1000 && typeof (print) != "undefined") {_RecordType("<2004,2009,46>",(print)); Inst15++; } } catch(e) {}
      print("FAILURE");
    }
  };
try { if (Inst10 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1928,1940,44>",(assertEquals)); Inst10++; } } catch(e) {}

  empty_func = function (name) {
try { if (Inst17 <= 1000 && typeof (name) != "undefined") {_RecordType("<2059,2063,50>",(name)); Inst17++; } } catch(e) {}
    ;
  };
try { if (Inst16 <= 1000 && typeof (empty_func) != "undefined") {_RecordType("<2036,2046,50>",(empty_func)); Inst16++; } } catch(e) {}

try { if (Inst19 <= 1000 && typeof (empty_func) != "undefined") {_RecordType("<2101,2111,54>",(empty_func)); Inst19++; } } catch(e) {}
  assertUnoptimized = empty_func;
try { if (Inst18 <= 1000 && typeof (assertUnoptimized) != "undefined") {_RecordType("<2081,2098,54>",(assertUnoptimized)); Inst18++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (empty_func) != "undefined") {_RecordType("<2133,2143,55>",(empty_func)); Inst21++; } } catch(e) {}
  assertOptimized = empty_func;
try { if (Inst20 <= 1000 && typeof (assertOptimized) != "undefined") {_RecordType("<2115,2130,55>",(assertOptimized)); Inst20++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (empty_func) != "undefined") {_RecordType("<2158,2168,56>",(empty_func)); Inst23++; } } catch(e) {}
  optimize = empty_func;
try { if (Inst22 <= 1000 && typeof (optimize) != "undefined") {_RecordType("<2147,2155,56>",(optimize)); Inst22++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (empty_func) != "undefined") {_RecordType("<2200,2210,57>",(empty_func)); Inst25++; } } catch(e) {}
  clearFunctionTypeFeedback = empty_func;
try { if (Inst24 <= 1000 && typeof (clearFunctionTypeFeedback) != "undefined") {_RecordType("<2172,2197,57>",(clearFunctionTypeFeedback)); Inst24++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (empty_func) != "undefined") {_RecordType("<2235,2245,58>",(empty_func)); Inst27++; } } catch(e) {}
  deoptimizeFunction = empty_func;
try { if (Inst26 <= 1000 && typeof (deoptimizeFunction) != "undefined") {_RecordType("<2214,2232,58>",(deoptimizeFunction)); Inst26++; } } catch(e) {}
} else {
  optimize = function (name) {
try { if (Inst29 <= 1000 && typeof (name) != "undefined") {_RecordType("<2279,2283,60>",(name)); Inst29++; } } catch(e) {}
    ;
  };
try { if (Inst28 <= 1000 && typeof (optimize) != "undefined") {_RecordType("<2258,2266,60>",(optimize)); Inst28++; } } catch(e) {}

  clearFunctionTypeFeedback = function (name) {
try { if (Inst31 <= 1000 && typeof (name) != "undefined") {_RecordType("<2339,2343,64>",(name)); Inst31++; } } catch(e) {}
    ;
  };
try { if (Inst30 <= 1000 && typeof (clearFunctionTypeFeedback) != "undefined") {_RecordType("<2301,2326,64>",(clearFunctionTypeFeedback)); Inst30++; } } catch(e) {}

  deoptimizeFunction = function (name) {
try { if (Inst33 <= 1000 && typeof (name) != "undefined") {_RecordType("<2392,2396,68>",(name)); Inst33++; } } catch(e) {}
    ;
  };
try { if (Inst32 <= 1000 && typeof (deoptimizeFunction) != "undefined") {_RecordType("<2361,2379,68>",(deoptimizeFunction)); Inst32++; } } catch(e) {}
}

try { if (Inst34 <= 1000 && typeof (base_getter_test) != "undefined") {_RecordType("<2423,2439,73>",(base_getter_test)); Inst34++; } } catch(e) {}
function base_getter_test(create_func) {
try { if (Inst35 <= 1000 && typeof (create_func) != "undefined") {_RecordType("<2440,2451,73>",(create_func)); Inst35++; } } catch(e) {}
  var calls = 0; // Testcase: setter in prototype chain
try { if (Inst36 <= 1000 && typeof (calls) != "undefined") {_RecordType("<2461,2466,74>",(calls)); Inst36++; } } catch(e) {}

  foo = function (a) {
try { if (Inst38 <= 1000 && typeof (a) != "undefined") {_RecordType("<2530,2531,76>",(a)); Inst38++; } } catch(e) {}
try { if (Inst40 <= 1000 && typeof (a[0]) != "undefined") {_RecordType("<2547,2551,77>",(a[0])); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (a) != "undefined") {_RecordType("<2547,2548,77>",(a)); Inst41++; } } catch(e) {}
    var x = a[0];
try { if (Inst39 <= 1000 && typeof (x) != "undefined") {_RecordType("<2543,2544,77>",(x)); Inst39++; } } catch(e) {}
try { if (Inst42 <= 1000 && typeof (x) != "undefined") {_RecordType("<2564,2565,78>",(x)); Inst42++; } } catch(e) {}
    return x + 3;
  };
try { if (Inst37 <= 1000 && typeof (foo) != "undefined") {_RecordType("<2514,2517,76>",(foo)); Inst37++; } } catch(e) {}

try { if (Inst44 <= 1000 && typeof (create_func) != "undefined") {_RecordType("<2587,2598,81>",(create_func)); Inst44++; } } catch(e) {}
  var a = create_func();
try { if (Inst43 <= 1000 && typeof (a) != "undefined") {_RecordType("<2583,2584,81>",(a)); Inst43++; } } catch(e) {}
  var ap = [];
try { if (Inst45 <= 1000 && typeof (ap) != "undefined") {_RecordType("<2608,2610,82>",(ap)); Inst45++; } } catch(e) {}

try { if (Inst46 <= 1000 && typeof (ap.__defineGetter__) != "undefined") {_RecordType("<2620,2639,84>",(ap.__defineGetter__)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (ap) != "undefined") {_RecordType("<2620,2622,84>",(ap)); Inst47++; } } catch(e) {}
  ap.__defineGetter__(0, function () {
try { if (Inst48 <= 1000 && typeof (calls) != "undefined") {_RecordType("<2661,2666,85>",(calls)); Inst48++; } } catch(e) {}
    calls++;
    return 0;
  });

try { if (Inst49 <= 1000 && typeof (foo) != "undefined") {_RecordType("<2693,2696,89>",(foo)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (a) != "undefined") {_RecordType("<2697,2698,89>",(a)); Inst50++; } } catch(e) {}
  foo(a);
try { if (Inst51 <= 1000 && typeof (foo) != "undefined") {_RecordType("<2703,2706,90>",(foo)); Inst51++; } } catch(e) {}
  foo;
  // Smi and Double elements transition the KeyedLoadIC to Generic state
  // here, because they miss twice with the same map when loading the hole.
  // For HOLEY_ELEMENTS, however, the IC knows how to convert the hole
  // to undefined if the prototype is the original array prototype, so it
  // stays monomorphic for now...
try { if (Inst52 <= 1000 && typeof (foo) != "undefined") {_RecordType("<3038,3041,96>",(foo)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (a) != "undefined") {_RecordType("<3042,3043,96>",(a)); Inst53++; } } catch(e) {}
  foo(a);
try { if (Inst54 <= 1000 && typeof (foo) != "undefined") {_RecordType("<3048,3051,97>",(foo)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (a) != "undefined") {_RecordType("<3052,3053,97>",(a)); Inst55++; } } catch(e) {}
  foo(a);
try { if (Inst56 <= 1000 && typeof (a[0]) != "undefined") {_RecordType("<3065,3069,98>",(a[0])); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (a) != "undefined") {_RecordType("<3065,3066,98>",(a)); Inst57++; } } catch(e) {}
  delete a[0];
  0;
try { if (Inst58 <= 1000 && typeof (calls) != "undefined") {_RecordType("<3078,3083,100>",(calls)); Inst58++; } } catch(e) {}
  calls;
try { if (Inst61 <= 1000 && typeof (ap) != "undefined") {_RecordType("<3101,3103,101>",(ap)); Inst61++; } } catch(e) {}
  a.__proto__ = ap; // ...and later becomes polymorphic when it sees a second map. Optimized
try { if (Inst59 <= 1000 && typeof (a.__proto__) != "undefined") {_RecordType("<3087,3098,101>",(a.__proto__)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (a) != "undefined") {_RecordType("<3087,3088,101>",(a)); Inst60++; } } catch(e) {}
  // code will therefore inline the elements access, and deopt right away
  // when it loads the hole from index [0].
  // Possible solutions:
  // - remove the convert_hole_to_undefined flag from the IC, to force it
  //   into generic state for all elements kinds. Cost: slower ICs in code
  //   that doesn't get optimized.
  // - teach Turbofan about the same trick: for holey elements with the
  //   original array prototype, convert hole to undefined inline. Cost:
  //   larger optimized code size, because the loads for different maps with
  //   the same elements kind can no longer be consolidated if they handle
  //   the hole differently.
  // - call "foo" twice after setting a.__proto__ and before optimizing it;
  //   this is the simplest fix so let's do that for now.

try { if (Inst62 <= 1000 && typeof (foo) != "undefined") {_RecordType("<3968,3971,116>",(foo)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (a) != "undefined") {_RecordType("<3972,3973,116>",(a)); Inst63++; } } catch(e) {}
  foo(a);
  1;
try { if (Inst64 <= 1000 && typeof (calls) != "undefined") {_RecordType("<3983,3988,118>",(calls)); Inst64++; } } catch(e) {}
  calls;
try { if (Inst65 <= 1000 && typeof (foo) != "undefined") {_RecordType("<3992,3995,119>",(foo)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (a) != "undefined") {_RecordType("<3996,3997,119>",(a)); Inst66++; } } catch(e) {}
  foo(a);
  2;
try { if (Inst67 <= 1000 && typeof (calls) != "undefined") {_RecordType("<4007,4012,121>",(calls)); Inst67++; } } catch(e) {}
  calls;
try { if (Inst68 <= 1000 && typeof (optimize) != "undefined") {_RecordType("<4016,4024,122>",(optimize)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (foo) != "undefined") {_RecordType("<4025,4028,122>",(foo)); Inst69++; } } catch(e) {}
  optimize(foo);
try { if (Inst70 <= 1000 && typeof (foo) != "undefined") {_RecordType("<4033,4036,123>",(foo)); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (a) != "undefined") {_RecordType("<4037,4038,123>",(a)); Inst71++; } } catch(e) {}
  foo(a);
  3;
try { if (Inst72 <= 1000 && typeof (calls) != "undefined") {_RecordType("<4048,4053,125>",(calls)); Inst72++; } } catch(e) {}
  calls;
try { if (Inst73 <= 1000 && typeof (foo) != "undefined") {_RecordType("<4057,4060,126>",(foo)); Inst73++; } } catch(e) {}
  foo;
  // Testcase: getter "deep" in prototype chain.
try { if (Inst74 <= 1000 && typeof (clearFunctionTypeFeedback) != "undefined") {_RecordType("<4113,4138,128>",(clearFunctionTypeFeedback)); Inst74++; } } catch(e) {}try { if (Inst75 <= 1000 && typeof (foo) != "undefined") {_RecordType("<4139,4142,128>",(foo)); Inst75++; } } catch(e) {}
  clearFunctionTypeFeedback(foo);
try { if (Inst76 <= 1000 && typeof (deoptimizeFunction) != "undefined") {_RecordType("<4147,4165,129>",(deoptimizeFunction)); Inst76++; } } catch(e) {}try { if (Inst77 <= 1000 && typeof (foo) != "undefined") {_RecordType("<4166,4169,129>",(foo)); Inst77++; } } catch(e) {}
  deoptimizeFunction(foo);
try { if (Inst78 <= 1000 && typeof (clearFunctionTypeFeedback) != "undefined") {_RecordType("<4174,4199,130>",(clearFunctionTypeFeedback)); Inst78++; } } catch(e) {}try { if (Inst79 <= 1000 && typeof (foo) != "undefined") {_RecordType("<4200,4203,130>",(foo)); Inst79++; } } catch(e) {}
  clearFunctionTypeFeedback(foo);
  calls = 0;
try { if (Inst80 <= 1000 && typeof (calls) != "undefined") {_RecordType("<4208,4213,131>",(calls)); Inst80++; } } catch(e) {}
try { if (Inst82 <= 1000 && typeof (create_func) != "undefined") {_RecordType("<4225,4236,132>",(create_func)); Inst82++; } } catch(e) {}
  a = create_func();
try { if (Inst81 <= 1000 && typeof (a) != "undefined") {_RecordType("<4221,4222,132>",(a)); Inst81++; } } catch(e) {}
  var ap2 = [];
try { if (Inst83 <= 1000 && typeof (ap2) != "undefined") {_RecordType("<4246,4249,133>",(ap2)); Inst83++; } } catch(e) {}
try { if (Inst86 <= 1000 && typeof (ap2) != "undefined") {_RecordType("<4272,4275,134>",(ap2)); Inst86++; } } catch(e) {}
  a.__proto__ = ap2;
try { if (Inst84 <= 1000 && typeof (a.__proto__) != "undefined") {_RecordType("<4258,4269,134>",(a.__proto__)); Inst84++; } } catch(e) {}try { if (Inst85 <= 1000 && typeof (a) != "undefined") {_RecordType("<4258,4259,134>",(a)); Inst85++; } } catch(e) {}
try { if (Inst87 <= 1000 && typeof (foo) != "undefined") {_RecordType("<4279,4282,135>",(foo)); Inst87++; } } catch(e) {}try { if (Inst88 <= 1000 && typeof (a) != "undefined") {_RecordType("<4283,4284,135>",(a)); Inst88++; } } catch(e) {}
  foo(a);
try { if (Inst89 <= 1000 && typeof (foo) != "undefined") {_RecordType("<4289,4292,136>",(foo)); Inst89++; } } catch(e) {}try { if (Inst90 <= 1000 && typeof (a) != "undefined") {_RecordType("<4293,4294,136>",(a)); Inst90++; } } catch(e) {}
  foo(a);
try { if (Inst91 <= 1000 && typeof (foo) != "undefined") {_RecordType("<4299,4302,137>",(foo)); Inst91++; } } catch(e) {}try { if (Inst92 <= 1000 && typeof (a) != "undefined") {_RecordType("<4303,4304,137>",(a)); Inst92++; } } catch(e) {}
  foo(a);
try { if (Inst93 <= 1000 && typeof (a[0]) != "undefined") {_RecordType("<4316,4320,138>",(a[0])); Inst93++; } } catch(e) {}try { if (Inst94 <= 1000 && typeof (a) != "undefined") {_RecordType("<4316,4317,138>",(a)); Inst94++; } } catch(e) {}
  delete a[0];
  0;
try { if (Inst95 <= 1000 && typeof (calls) != "undefined") {_RecordType("<4329,4334,140>",(calls)); Inst95++; } } catch(e) {}
  calls;
try { if (Inst98 <= 1000 && typeof (ap) != "undefined") {_RecordType("<4354,4356,141>",(ap)); Inst98++; } } catch(e) {}
  ap2.__proto__ = ap; // "sneak" in a callback.
try { if (Inst96 <= 1000 && typeof (ap2.__proto__) != "undefined") {_RecordType("<4338,4351,141>",(ap2.__proto__)); Inst96++; } } catch(e) {}try { if (Inst97 <= 1000 && typeof (ap2) != "undefined") {_RecordType("<4338,4341,141>",(ap2)); Inst97++; } } catch(e) {}
  // The sneak case should be caught by unoptimized code too.

try { if (Inst99 <= 1000 && typeof (foo) != "undefined") {_RecordType("<4449,4452,144>",(foo)); Inst99++; } } catch(e) {}
  foo;
try { if (Inst100 <= 1000 && typeof (foo) != "undefined") {_RecordType("<4456,4459,145>",(foo)); Inst100++; } } catch(e) {}try { if (Inst101 <= 1000 && typeof (a) != "undefined") {_RecordType("<4460,4461,145>",(a)); Inst101++; } } catch(e) {}
  foo(a);
try { if (Inst102 <= 1000 && typeof (foo) != "undefined") {_RecordType("<4466,4469,146>",(foo)); Inst102++; } } catch(e) {}try { if (Inst103 <= 1000 && typeof (a) != "undefined") {_RecordType("<4470,4471,146>",(a)); Inst103++; } } catch(e) {}
  foo(a);
try { if (Inst104 <= 1000 && typeof (foo) != "undefined") {_RecordType("<4476,4479,147>",(foo)); Inst104++; } } catch(e) {}try { if (Inst105 <= 1000 && typeof (a) != "undefined") {_RecordType("<4480,4481,147>",(a)); Inst105++; } } catch(e) {}
  foo(a);
  3;
try { if (Inst106 <= 1000 && typeof (calls) != "undefined") {_RecordType("<4491,4496,149>",(calls)); Inst106++; } } catch(e) {}
  calls;
  // Testcase: getter added after optimization (feedback is monomorphic)
try { if (Inst107 <= 1000 && typeof (clearFunctionTypeFeedback) != "undefined") {_RecordType("<4573,4598,151>",(clearFunctionTypeFeedback)); Inst107++; } } catch(e) {}try { if (Inst108 <= 1000 && typeof (foo) != "undefined") {_RecordType("<4599,4602,151>",(foo)); Inst108++; } } catch(e) {}
  clearFunctionTypeFeedback(foo);
try { if (Inst109 <= 1000 && typeof (deoptimizeFunction) != "undefined") {_RecordType("<4607,4625,152>",(deoptimizeFunction)); Inst109++; } } catch(e) {}try { if (Inst110 <= 1000 && typeof (foo) != "undefined") {_RecordType("<4626,4629,152>",(foo)); Inst110++; } } catch(e) {}
  deoptimizeFunction(foo);
try { if (Inst111 <= 1000 && typeof (clearFunctionTypeFeedback) != "undefined") {_RecordType("<4634,4659,153>",(clearFunctionTypeFeedback)); Inst111++; } } catch(e) {}try { if (Inst112 <= 1000 && typeof (foo) != "undefined") {_RecordType("<4660,4663,153>",(foo)); Inst112++; } } catch(e) {}
  clearFunctionTypeFeedback(foo);
  calls = 0;
try { if (Inst113 <= 1000 && typeof (calls) != "undefined") {_RecordType("<4668,4673,154>",(calls)); Inst113++; } } catch(e) {}
try { if (Inst115 <= 1000 && typeof (create_func) != "undefined") {_RecordType("<4685,4696,155>",(create_func)); Inst115++; } } catch(e) {}
  a = create_func();
try { if (Inst114 <= 1000 && typeof (a) != "undefined") {_RecordType("<4681,4682,155>",(a)); Inst114++; } } catch(e) {}
  ap2 = [];
try { if (Inst116 <= 1000 && typeof (ap2) != "undefined") {_RecordType("<4702,4705,156>",(ap2)); Inst116++; } } catch(e) {}
try { if (Inst119 <= 1000 && typeof (ap2) != "undefined") {_RecordType("<4728,4731,157>",(ap2)); Inst119++; } } catch(e) {}
  a.__proto__ = ap2;
try { if (Inst117 <= 1000 && typeof (a.__proto__) != "undefined") {_RecordType("<4714,4725,157>",(a.__proto__)); Inst117++; } } catch(e) {}try { if (Inst118 <= 1000 && typeof (a) != "undefined") {_RecordType("<4714,4715,157>",(a)); Inst118++; } } catch(e) {}
try { if (Inst120 <= 1000 && typeof (foo) != "undefined") {_RecordType("<4735,4738,158>",(foo)); Inst120++; } } catch(e) {}try { if (Inst121 <= 1000 && typeof (a) != "undefined") {_RecordType("<4739,4740,158>",(a)); Inst121++; } } catch(e) {}
  foo(a);
try { if (Inst122 <= 1000 && typeof (foo) != "undefined") {_RecordType("<4745,4748,159>",(foo)); Inst122++; } } catch(e) {}try { if (Inst123 <= 1000 && typeof (a) != "undefined") {_RecordType("<4749,4750,159>",(a)); Inst123++; } } catch(e) {}
  foo(a);
try { if (Inst124 <= 1000 && typeof (foo) != "undefined") {_RecordType("<4755,4758,160>",(foo)); Inst124++; } } catch(e) {}try { if (Inst125 <= 1000 && typeof (a) != "undefined") {_RecordType("<4759,4760,160>",(a)); Inst125++; } } catch(e) {}
  foo(a);
try { if (Inst126 <= 1000 && typeof (optimize) != "undefined") {_RecordType("<4765,4773,161>",(optimize)); Inst126++; } } catch(e) {}try { if (Inst127 <= 1000 && typeof (foo) != "undefined") {_RecordType("<4774,4777,161>",(foo)); Inst127++; } } catch(e) {}
  optimize(foo);
try { if (Inst128 <= 1000 && typeof (foo) != "undefined") {_RecordType("<4782,4785,162>",(foo)); Inst128++; } } catch(e) {}try { if (Inst129 <= 1000 && typeof (a) != "undefined") {_RecordType("<4786,4787,162>",(a)); Inst129++; } } catch(e) {}
  foo(a);
try { if (Inst130 <= 1000 && typeof (foo) != "undefined") {_RecordType("<4792,4795,163>",(foo)); Inst130++; } } catch(e) {}
  foo;
try { if (Inst131 <= 1000 && typeof (a[0]) != "undefined") {_RecordType("<4806,4810,164>",(a[0])); Inst131++; } } catch(e) {}try { if (Inst132 <= 1000 && typeof (a) != "undefined") {_RecordType("<4806,4807,164>",(a)); Inst132++; } } catch(e) {}
  delete a[0];
try { if (Inst135 <= 1000 && typeof (ap) != "undefined") {_RecordType("<4830,4832,165>",(ap)); Inst135++; } } catch(e) {}
  ap2.__proto__ = ap;
try { if (Inst133 <= 1000 && typeof (ap2.__proto__) != "undefined") {_RecordType("<4814,4827,165>",(ap2.__proto__)); Inst133++; } } catch(e) {}try { if (Inst134 <= 1000 && typeof (ap2) != "undefined") {_RecordType("<4814,4817,165>",(ap2)); Inst134++; } } catch(e) {}
try { if (Inst136 <= 1000 && typeof (foo) != "undefined") {_RecordType("<4836,4839,166>",(foo)); Inst136++; } } catch(e) {}try { if (Inst137 <= 1000 && typeof (a) != "undefined") {_RecordType("<4840,4841,166>",(a)); Inst137++; } } catch(e) {}
  foo(a);
try { if (Inst138 <= 1000 && typeof (foo) != "undefined") {_RecordType("<4846,4849,167>",(foo)); Inst138++; } } catch(e) {}
  foo;
  1;
try { if (Inst139 <= 1000 && typeof (calls) != "undefined") {_RecordType("<4858,4863,169>",(calls)); Inst139++; } } catch(e) {}
  calls;
  // Testcase: adding additional getters to a prototype chain that already has
  // one shouldn't deopt anything.
try { if (Inst140 <= 1000 && typeof (clearFunctionTypeFeedback) != "undefined") {_RecordType("<4981,5006,172>",(clearFunctionTypeFeedback)); Inst140++; } } catch(e) {}try { if (Inst141 <= 1000 && typeof (foo) != "undefined") {_RecordType("<5007,5010,172>",(foo)); Inst141++; } } catch(e) {}
  clearFunctionTypeFeedback(foo);
  calls = 0;
try { if (Inst142 <= 1000 && typeof (calls) != "undefined") {_RecordType("<5015,5020,173>",(calls)); Inst142++; } } catch(e) {}
try { if (Inst144 <= 1000 && typeof (create_func) != "undefined") {_RecordType("<5032,5043,174>",(create_func)); Inst144++; } } catch(e) {}
  a = create_func();
try { if (Inst143 <= 1000 && typeof (a) != "undefined") {_RecordType("<5028,5029,174>",(a)); Inst143++; } } catch(e) {}
try { if (Inst147 <= 1000 && typeof (ap2) != "undefined") {_RecordType("<5063,5066,175>",(ap2)); Inst147++; } } catch(e) {}
  a.__proto__ = ap2;
try { if (Inst145 <= 1000 && typeof (a.__proto__) != "undefined") {_RecordType("<5049,5060,175>",(a.__proto__)); Inst145++; } } catch(e) {}try { if (Inst146 <= 1000 && typeof (a) != "undefined") {_RecordType("<5049,5050,175>",(a)); Inst146++; } } catch(e) {}

  bar = function (a) {
try { if (Inst149 <= 1000 && typeof (a) != "undefined") {_RecordType("<5087,5088,177>",(a)); Inst149++; } } catch(e) {}
try { if (Inst150 <= 1000 && typeof (a[3]) != "undefined") {_RecordType("<5103,5107,178>",(a[3])); Inst150++; } } catch(e) {}try { if (Inst151 <= 1000 && typeof (a) != "undefined") {_RecordType("<5103,5104,178>",(a)); Inst151++; } } catch(e) {}
    return a[3] + 600;
  };
try { if (Inst148 <= 1000 && typeof (bar) != "undefined") {_RecordType("<5071,5074,177>",(bar)); Inst148++; } } catch(e) {}

try { if (Inst152 <= 1000 && typeof (bar) != "undefined") {_RecordType("<5123,5126,181>",(bar)); Inst152++; } } catch(e) {}try { if (Inst153 <= 1000 && typeof (a) != "undefined") {_RecordType("<5127,5128,181>",(a)); Inst153++; } } catch(e) {}
  bar(a);
try { if (Inst154 <= 1000 && typeof (bar) != "undefined") {_RecordType("<5133,5136,182>",(bar)); Inst154++; } } catch(e) {}try { if (Inst155 <= 1000 && typeof (a) != "undefined") {_RecordType("<5137,5138,182>",(a)); Inst155++; } } catch(e) {}
  bar(a);
try { if (Inst156 <= 1000 && typeof (bar) != "undefined") {_RecordType("<5143,5146,183>",(bar)); Inst156++; } } catch(e) {}try { if (Inst157 <= 1000 && typeof (a) != "undefined") {_RecordType("<5147,5148,183>",(a)); Inst157++; } } catch(e) {}
  bar(a);
try { if (Inst158 <= 1000 && typeof (optimize) != "undefined") {_RecordType("<5153,5161,184>",(optimize)); Inst158++; } } catch(e) {}try { if (Inst159 <= 1000 && typeof (bar) != "undefined") {_RecordType("<5162,5165,184>",(bar)); Inst159++; } } catch(e) {}
  optimize(bar);
try { if (Inst160 <= 1000 && typeof (bar) != "undefined") {_RecordType("<5170,5173,185>",(bar)); Inst160++; } } catch(e) {}try { if (Inst161 <= 1000 && typeof (a) != "undefined") {_RecordType("<5174,5175,185>",(a)); Inst161++; } } catch(e) {}
  bar(a);
try { if (Inst162 <= 1000 && typeof (bar) != "undefined") {_RecordType("<5180,5183,186>",(bar)); Inst162++; } } catch(e) {}
  bar;
  0;
try { if (Inst163 <= 1000 && typeof (calls) != "undefined") {_RecordType("<5192,5197,188>",(calls)); Inst163++; } } catch(e) {}
  calls;
try { if (Inst164 <= 1000 && typeof (a[3]) != "undefined") {_RecordType("<5208,5212,189>",(a[3])); Inst164++; } } catch(e) {}try { if (Inst165 <= 1000 && typeof (a) != "undefined") {_RecordType("<5208,5209,189>",(a)); Inst165++; } } catch(e) {}
  delete a[3];

try { if (Inst166 <= 1000 && typeof (ap2.__defineGetter__) != "undefined") {_RecordType("<5217,5237,191>",(ap2.__defineGetter__)); Inst166++; } } catch(e) {}try { if (Inst167 <= 1000 && typeof (ap2) != "undefined") {_RecordType("<5217,5220,191>",(ap2)); Inst167++; } } catch(e) {}
  ap2.__defineGetter__(3, function () {
try { if (Inst168 <= 1000 && typeof (calls) != "undefined") {_RecordType("<5259,5264,192>",(calls)); Inst168++; } } catch(e) {}
    calls++;
    return 0;
  });

try { if (Inst169 <= 1000 && typeof (bar) != "undefined") {_RecordType("<5291,5294,196>",(bar)); Inst169++; } } catch(e) {}try { if (Inst170 <= 1000 && typeof (a) != "undefined") {_RecordType("<5295,5296,196>",(a)); Inst170++; } } catch(e) {}
  bar(a);
try { if (Inst171 <= 1000 && typeof (bar) != "undefined") {_RecordType("<5301,5304,197>",(bar)); Inst171++; } } catch(e) {}
  bar;
  1;
try { if (Inst172 <= 1000 && typeof (calls) != "undefined") {_RecordType("<5313,5318,199>",(calls)); Inst172++; } } catch(e) {}
  calls;
  // Reset the state of foo and bar.
try { if (Inst173 <= 1000 && typeof (clearFunctionTypeFeedback) != "undefined") {_RecordType("<5359,5384,201>",(clearFunctionTypeFeedback)); Inst173++; } } catch(e) {}try { if (Inst174 <= 1000 && typeof (foo) != "undefined") {_RecordType("<5385,5388,201>",(foo)); Inst174++; } } catch(e) {}
  clearFunctionTypeFeedback(foo);
try { if (Inst175 <= 1000 && typeof (deoptimizeFunction) != "undefined") {_RecordType("<5393,5411,202>",(deoptimizeFunction)); Inst175++; } } catch(e) {}try { if (Inst176 <= 1000 && typeof (foo) != "undefined") {_RecordType("<5412,5415,202>",(foo)); Inst176++; } } catch(e) {}
  deoptimizeFunction(foo);
try { if (Inst177 <= 1000 && typeof (clearFunctionTypeFeedback) != "undefined") {_RecordType("<5420,5445,203>",(clearFunctionTypeFeedback)); Inst177++; } } catch(e) {}try { if (Inst178 <= 1000 && typeof (foo) != "undefined") {_RecordType("<5446,5449,203>",(foo)); Inst178++; } } catch(e) {}
  clearFunctionTypeFeedback(foo);
try { if (Inst179 <= 1000 && typeof (clearFunctionTypeFeedback) != "undefined") {_RecordType("<5454,5479,204>",(clearFunctionTypeFeedback)); Inst179++; } } catch(e) {}try { if (Inst180 <= 1000 && typeof (bar) != "undefined") {_RecordType("<5480,5483,204>",(bar)); Inst180++; } } catch(e) {}
  clearFunctionTypeFeedback(bar);
try { if (Inst181 <= 1000 && typeof (deoptimizeFunction) != "undefined") {_RecordType("<5488,5506,205>",(deoptimizeFunction)); Inst181++; } } catch(e) {}try { if (Inst182 <= 1000 && typeof (bar) != "undefined") {_RecordType("<5507,5510,205>",(bar)); Inst182++; } } catch(e) {}
  deoptimizeFunction(bar);
try { if (Inst183 <= 1000 && typeof (clearFunctionTypeFeedback) != "undefined") {_RecordType("<5515,5540,206>",(clearFunctionTypeFeedback)); Inst183++; } } catch(e) {}try { if (Inst184 <= 1000 && typeof (bar) != "undefined") {_RecordType("<5541,5544,206>",(bar)); Inst184++; } } catch(e) {}
  clearFunctionTypeFeedback(bar);
} // Verify that map transitions don't confuse us.


create_func_smi = function () {
  return [,,,,,, 5];
};
try { if (Inst185 <= 1000 && typeof (create_func_smi) != "undefined") {_RecordType("<5600,5615,210>",(create_func_smi)); Inst185++; } } catch(e) {}

create_func_double = function () {
  return [,,,,,, 5.5];
};
try { if (Inst186 <= 1000 && typeof (create_func_double) != "undefined") {_RecordType("<5657,5675,214>",(create_func_double)); Inst186++; } } catch(e) {}

create_func_fast = function () {
  return [,,,,,, true];
};
try { if (Inst187 <= 1000 && typeof (create_func_fast) != "undefined") {_RecordType("<5719,5735,218>",(create_func_fast)); Inst187++; } } catch(e) {}

try { if (Inst189 <= 1000 && typeof (create_func_smi) != "undefined") {_RecordType("<5790,5805,222>",(create_func_smi)); Inst189++; } } catch(e) {}try { if (Inst190 <= 1000 && typeof (create_func_double) != "undefined") {_RecordType("<5807,5825,222>",(create_func_double)); Inst190++; } } catch(e) {}try { if (Inst191 <= 1000 && typeof (create_func_fast) != "undefined") {_RecordType("<5827,5843,222>",(create_func_fast)); Inst191++; } } catch(e) {}
var cf = [create_func_smi, create_func_double, create_func_fast];
try { if (Inst188 <= 1000 && typeof (cf) != "undefined") {_RecordType("<5784,5786,222>",(cf)); Inst188++; } } catch(e) {}

for (var c = 0; c < cf.length; c++) {
try { if (Inst192 <= 1000 && typeof (c) != "undefined") {_RecordType("<5856,5857,224>",(c)); Inst192++; } } catch(e) {}try { if (Inst193 <= 1000 && typeof (c) != "undefined") {_RecordType("<5863,5864,224>",(c)); Inst193++; } } catch(e) {}try { if (Inst194 <= 1000 && typeof (cf.length) != "undefined") {_RecordType("<5867,5876,224>",(cf.length)); Inst194++; } } catch(e) {}try { if (Inst195 <= 1000 && typeof (cf) != "undefined") {_RecordType("<5867,5869,224>",(cf)); Inst195++; } } catch(e) {}try { if (Inst196 <= 1000 && typeof (c) != "undefined") {_RecordType("<5878,5879,224>",(c)); Inst196++; } } catch(e) {}
try { if (Inst197 <= 1000 && typeof (base_getter_test) != "undefined") {_RecordType("<5887,5903,225>",(base_getter_test)); Inst197++; } } catch(e) {}try { if (Inst198 <= 1000 && typeof (cf[c]) != "undefined") {_RecordType("<5904,5909,225>",(cf[c])); Inst198++; } } catch(e) {}try { if (Inst199 <= 1000 && typeof (cf) != "undefined") {_RecordType("<5904,5906,225>",(cf)); Inst199++; } } catch(e) {}
  base_getter_test(cf[c]);
} // A special test for LoadKeyedHoleMode. Ensure that optimized is generated
// which sets ALLOW_RETURN_HOLE, then add a setter on the prototype that should
// cause the function to deoptimize.


var a = [3.5,,, 3.5];
try { if (Inst200 <= 1000 && typeof (a) != "undefined") {_RecordType("<6113,6114,231>",(a)); Inst200++; } } catch(e) {}

fun = function (a) {
try { if (Inst202 <= 1000 && typeof (a) != "undefined") {_RecordType("<6148,6149,233>",(a)); Inst202++; } } catch(e) {}
try { if (Inst203 <= 1000 && typeof (a[0]) != "undefined") {_RecordType("<6162,6166,234>",(a[0])); Inst203++; } } catch(e) {}try { if (Inst204 <= 1000 && typeof (a) != "undefined") {_RecordType("<6162,6163,234>",(a)); Inst204++; } } catch(e) {}
  return a[0] + 5.5;
};
try { if (Inst201 <= 1000 && typeof (fun) != "undefined") {_RecordType("<6132,6135,233>",(fun)); Inst201++; } } catch(e) {}

try { if (Inst205 <= 1000 && typeof (fun) != "undefined") {_RecordType("<6178,6181,237>",(fun)); Inst205++; } } catch(e) {}try { if (Inst206 <= 1000 && typeof (a) != "undefined") {_RecordType("<6182,6183,237>",(a)); Inst206++; } } catch(e) {}
fun(a);
try { if (Inst207 <= 1000 && typeof (fun) != "undefined") {_RecordType("<6186,6189,238>",(fun)); Inst207++; } } catch(e) {}try { if (Inst208 <= 1000 && typeof (a) != "undefined") {_RecordType("<6190,6191,238>",(a)); Inst208++; } } catch(e) {}
fun(a);
try { if (Inst209 <= 1000 && typeof (fun) != "undefined") {_RecordType("<6194,6197,239>",(fun)); Inst209++; } } catch(e) {}try { if (Inst210 <= 1000 && typeof (a) != "undefined") {_RecordType("<6198,6199,239>",(a)); Inst210++; } } catch(e) {}
fun(a); // should have a monomorphic KeyedLoadIC.

try { if (Inst211 <= 1000 && typeof (optimize) != "undefined") {_RecordType("<6245,6253,241>",(optimize)); Inst211++; } } catch(e) {}try { if (Inst212 <= 1000 && typeof (fun) != "undefined") {_RecordType("<6254,6257,241>",(fun)); Inst212++; } } catch(e) {}
optimize(fun);
try { if (Inst213 <= 1000 && typeof (fun) != "undefined") {_RecordType("<6260,6263,242>",(fun)); Inst213++; } } catch(e) {}try { if (Inst214 <= 1000 && typeof (a) != "undefined") {_RecordType("<6264,6265,242>",(a)); Inst214++; } } catch(e) {}
fun(a);
try { if (Inst215 <= 1000 && typeof (fun) != "undefined") {_RecordType("<6268,6271,243>",(fun)); Inst215++; } } catch(e) {}
fun;
// returning undefined shouldn't phase us.
try { if (Inst216 <= 1000 && typeof (a[0]) != "undefined") {_RecordType("<6323,6327,245>",(a[0])); Inst216++; } } catch(e) {}try { if (Inst217 <= 1000 && typeof (a) != "undefined") {_RecordType("<6323,6324,245>",(a)); Inst217++; } } catch(e) {}
delete a[0];
try { if (Inst218 <= 1000 && typeof (fun) != "undefined") {_RecordType("<6329,6332,246>",(fun)); Inst218++; } } catch(e) {}try { if (Inst219 <= 1000 && typeof (a) != "undefined") {_RecordType("<6333,6334,246>",(a)); Inst219++; } } catch(e) {}
fun(a);
try { if (Inst220 <= 1000 && typeof (fun) != "undefined") {_RecordType("<6337,6340,247>",(fun)); Inst220++; } } catch(e) {}
fun;
// but messing up the prototype chain will.
a.__proto__ = [];
try { if (Inst221 <= 1000 && typeof (a.__proto__) != "undefined") {_RecordType("<6386,6397,249>",(a.__proto__)); Inst221++; } } catch(e) {}try { if (Inst222 <= 1000 && typeof (a) != "undefined") {_RecordType("<6386,6387,249>",(a)); Inst222++; } } catch(e) {}
try { if (Inst223 <= 1000 && typeof (fun) != "undefined") {_RecordType("<6404,6407,250>",(fun)); Inst223++; } } catch(e) {}try { if (Inst224 <= 1000 && typeof (a) != "undefined") {_RecordType("<6408,6409,250>",(a)); Inst224++; } } catch(e) {}
fun(a);
try { if (Inst225 <= 1000 && typeof (fun) != "undefined") {_RecordType("<6412,6415,251>",(fun)); Inst225++; } } catch(e) {}
fun;
// Construct a non-trivial prototype chain.
var a = [3.5,,,, 3.5];
try { if (Inst226 <= 1000 && typeof (a) != "undefined") {_RecordType("<6465,6466,253>",(a)); Inst226++; } } catch(e) {}
var ap = [,, 3.5];
try { if (Inst227 <= 1000 && typeof (ap) != "undefined") {_RecordType("<6488,6490,254>",(ap)); Inst227++; } } catch(e) {}
try { if (Inst230 <= 1000 && typeof (a.__proto__) != "undefined") {_RecordType("<6518,6529,255>",(a.__proto__)); Inst230++; } } catch(e) {}try { if (Inst231 <= 1000 && typeof (a) != "undefined") {_RecordType("<6518,6519,255>",(a)); Inst231++; } } catch(e) {}
ap.__proto__ = a.__proto__;
try { if (Inst228 <= 1000 && typeof (ap.__proto__) != "undefined") {_RecordType("<6503,6515,255>",(ap.__proto__)); Inst228++; } } catch(e) {}try { if (Inst229 <= 1000 && typeof (ap) != "undefined") {_RecordType("<6503,6505,255>",(ap)); Inst229++; } } catch(e) {}
try { if (Inst234 <= 1000 && typeof (ap) != "undefined") {_RecordType("<6545,6547,256>",(ap)); Inst234++; } } catch(e) {}
a.__proto__ = ap;
try { if (Inst232 <= 1000 && typeof (a.__proto__) != "undefined") {_RecordType("<6531,6542,256>",(a.__proto__)); Inst232++; } } catch(e) {}try { if (Inst233 <= 1000 && typeof (a) != "undefined") {_RecordType("<6531,6532,256>",(a)); Inst233++; } } catch(e) {}
try { if (Inst235 <= 1000 && typeof (fun) != "undefined") {_RecordType("<6549,6552,257>",(fun)); Inst235++; } } catch(e) {}try { if (Inst236 <= 1000 && typeof (a) != "undefined") {_RecordType("<6553,6554,257>",(a)); Inst236++; } } catch(e) {}
fun(a);
try { if (Inst237 <= 1000 && typeof (optimize) != "undefined") {_RecordType("<6557,6565,258>",(optimize)); Inst237++; } } catch(e) {}try { if (Inst238 <= 1000 && typeof (fun) != "undefined") {_RecordType("<6566,6569,258>",(fun)); Inst238++; } } catch(e) {}
optimize(fun);
try { if (Inst239 <= 1000 && typeof (fun) != "undefined") {_RecordType("<6572,6575,259>",(fun)); Inst239++; } } catch(e) {}try { if (Inst240 <= 1000 && typeof (a) != "undefined") {_RecordType("<6576,6577,259>",(a)); Inst240++; } } catch(e) {}
fun(a);
try { if (Inst241 <= 1000 && typeof (fun) != "undefined") {_RecordType("<6580,6583,260>",(fun)); Inst241++; } } catch(e) {}
fun;
var calls = 0;
try { if (Inst242 <= 1000 && typeof (calls) != "undefined") {_RecordType("<6589,6594,261>",(calls)); Inst242++; } } catch(e) {}
try { if (Inst243 <= 1000 && typeof (a[0]) != "undefined") {_RecordType("<6607,6611,262>",(a[0])); Inst243++; } } catch(e) {}try { if (Inst244 <= 1000 && typeof (a) != "undefined") {_RecordType("<6607,6608,262>",(a)); Inst244++; } } catch(e) {}
delete a[0];

try { if (Inst245 <= 1000 && typeof (ap.__defineGetter__) != "undefined") {_RecordType("<6614,6633,264>",(ap.__defineGetter__)); Inst245++; } } catch(e) {}try { if (Inst246 <= 1000 && typeof (ap) != "undefined") {_RecordType("<6614,6616,264>",(ap)); Inst246++; } } catch(e) {}
ap.__defineGetter__(0, function () {
try { if (Inst247 <= 1000 && typeof (calls) != "undefined") {_RecordType("<6653,6658,265>",(calls)); Inst247++; } } catch(e) {}
  calls++;
  return 0;
});

try { if (Inst248 <= 1000 && typeof (fun) != "undefined") {_RecordType("<6679,6682,269>",(fun)); Inst248++; } } catch(e) {}try { if (Inst249 <= 1000 && typeof (a) != "undefined") {_RecordType("<6683,6684,269>",(a)); Inst249++; } } catch(e) {}
fun(a);
1;
try { if (Inst250 <= 1000 && typeof (calls) != "undefined") {_RecordType("<6690,6695,271>",(calls)); Inst250++; } } catch(e) {}
calls;
try { if (Inst251 <= 1000 && typeof (fun) != "undefined") {_RecordType("<6697,6700,272>",(fun)); Inst251++; } } catch(e) {}
fun;

