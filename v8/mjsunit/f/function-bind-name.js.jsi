var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2015 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
try { if (Inst0 <= 1000 && typeof (f) != "undefined") {_RecordType("<176,177,4>",(f)); Inst0++; } } catch(e) {}
function f() {
  ;
}

try { if (Inst2 <= 1000 && typeof (f.bind) != "undefined") {_RecordType("<198,204,8>",(f.bind)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (f) != "undefined") {_RecordType("<198,199,8>",(f)); Inst3++; } } catch(e) {}
var fb = f.bind({});
try { if (Inst1 <= 1000 && typeof (fb) != "undefined") {_RecordType("<193,195,8>",(fb)); Inst1++; } } catch(e) {}
'bound f';
try { if (Inst4 <= 1000 && typeof (fb.name) != "undefined") {_RecordType("<221,228,10>",(fb.name)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (fb) != "undefined") {_RecordType("<221,223,10>",(fb)); Inst5++; } } catch(e) {}
fb.name;
try { if (Inst6 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<230,251,11>",(Object.defineProperty)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Object) != "undefined") {_RecordType("<230,236,11>",(Object)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (f) != "undefined") {_RecordType("<252,253,11>",(f)); Inst8++; } } catch(e) {}
Object.defineProperty(f, 'name', {
  value: 42
});
try { if (Inst10 <= 1000 && typeof (f.bind) != "undefined") {_RecordType("<291,297,14>",(f.bind)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (f) != "undefined") {_RecordType("<291,292,14>",(f)); Inst11++; } } catch(e) {}
var fb2 = f.bind({});
try { if (Inst9 <= 1000 && typeof (fb2) != "undefined") {_RecordType("<285,288,14>",(fb2)); Inst9++; } } catch(e) {}
'bound ';
try { if (Inst12 <= 1000 && typeof (fb2.name) != "undefined") {_RecordType("<313,321,16>",(fb2.name)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (fb2) != "undefined") {_RecordType("<313,316,16>",(fb2)); Inst13++; } } catch(e) {}
fb2.name;

try { if (Inst14 <= 1000 && typeof (g) != "undefined") {_RecordType("<333,334,18>",(g)); Inst14++; } } catch(e) {}
function g() {
  ;
}

try { if (Inst16 <= 1000 && typeof (g.bind) != "undefined") {_RecordType("<355,361,22>",(g.bind)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (g) != "undefined") {_RecordType("<355,356,22>",(g)); Inst17++; } } catch(e) {}
var gb = g.bind({});
try { if (Inst15 <= 1000 && typeof (gb) != "undefined") {_RecordType("<350,352,22>",(gb)); Inst15++; } } catch(e) {}
'bound g';
try { if (Inst18 <= 1000 && typeof (gb.name) != "undefined") {_RecordType("<378,385,24>",(gb.name)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (gb) != "undefined") {_RecordType("<378,380,24>",(gb)); Inst19++; } } catch(e) {}
gb.name;
'bound f';
try { if (Inst20 <= 1000 && typeof (fb.name) != "undefined") {_RecordType("<398,405,26>",(fb.name)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (fb) != "undefined") {_RecordType("<398,400,26>",(fb)); Inst21++; } } catch(e) {}
fb.name;

