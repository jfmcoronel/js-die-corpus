var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
var Inst102 = 0;
var Inst103 = 0;
var Inst104 = 0;
var Inst105 = 0;
var Inst106 = 0;
var Inst107 = 0;
var Inst108 = 0;
var Inst109 = 0;
var Inst110 = 0;
var Inst111 = 0;
var Inst112 = 0;
var Inst113 = 0;
var Inst114 = 0;
var Inst115 = 0;
var Inst116 = 0;
var Inst117 = 0;
var Inst118 = 0;
var Inst119 = 0;
var Inst120 = 0;
var Inst121 = 0;
var Inst122 = 0;
var Inst123 = 0;
var Inst124 = 0;
var Inst125 = 0;
var Inst126 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2008 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// Test that we can set function prototypes to non-object values.  The
// prototype used for instances in that case should be the initial
// object prototype.  ECMA-262 13.2.2.
try { if (Inst0 <= 1000 && typeof (TestNonObjectPrototype) != "undefined") {_RecordType("<1783,1805,30>",(TestNonObjectPrototype)); Inst0++; } } catch(e) {}
function TestNonObjectPrototype(value) {
try { if (Inst1 <= 1000 && typeof (value) != "undefined") {_RecordType("<1806,1811,30>",(value)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (F) != "undefined") {_RecordType("<1826,1827,31>",(F)); Inst2++; } } catch(e) {}
  function F() {
    ;
  }

  ;
try { if (Inst5 <= 1000 && typeof (value) != "undefined") {_RecordType("<1863,1868,36>",(value)); Inst5++; } } catch(e) {}
  F.prototype = value;
try { if (Inst3 <= 1000 && typeof (F.prototype) != "undefined") {_RecordType("<1849,1860,36>",(F.prototype)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (F) != "undefined") {_RecordType("<1849,1850,36>",(F)); Inst4++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (F) != "undefined") {_RecordType("<1884,1885,37>",(F)); Inst7++; } } catch(e) {}
  var f = new F();
try { if (Inst6 <= 1000 && typeof (f) != "undefined") {_RecordType("<1876,1877,37>",(f)); Inst6++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (value) != "undefined") {_RecordType("<1891,1896,38>",(value)); Inst8++; } } catch(e) {}
  value;
try { if (Inst9 <= 1000 && typeof (F.prototype) != "undefined") {_RecordType("<1900,1911,39>",(F.prototype)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (F) != "undefined") {_RecordType("<1900,1901,39>",(F)); Inst10++; } } catch(e) {}
  F.prototype;
try { if (Inst11 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<1915,1931,40>",(Object.prototype)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1915,1921,40>",(Object)); Inst12++; } } catch(e) {}
  Object.prototype;
try { if (Inst13 <= 1000 && typeof (f.__proto__) != "undefined") {_RecordType("<1935,1946,41>",(f.__proto__)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (f) != "undefined") {_RecordType("<1935,1936,41>",(f)); Inst14++; } } catch(e) {}
  f.__proto__;
  // Test that map transitions don't break anything.
  F.property = "value";
try { if (Inst15 <= 1000 && typeof (F.property) != "undefined") {_RecordType("<2003,2013,43>",(F.property)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (F) != "undefined") {_RecordType("<2003,2004,43>",(F)); Inst16++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (value) != "undefined") {_RecordType("<2027,2032,44>",(value)); Inst17++; } } catch(e) {}
  value;
try { if (Inst18 <= 1000 && typeof (F.prototype) != "undefined") {_RecordType("<2036,2047,45>",(F.prototype)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (F) != "undefined") {_RecordType("<2036,2037,45>",(F)); Inst19++; } } catch(e) {}
  F.prototype;
}

var values = [123, "asdf", true];
try { if (Inst20 <= 1000 && typeof (values) != "undefined") {_RecordType("<2056,2062,48>",(values)); Inst20++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (values.forEach) != "undefined") {_RecordType("<2086,2100,49>",(values.forEach)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (values) != "undefined") {_RecordType("<2086,2092,49>",(values)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (TestNonObjectPrototype) != "undefined") {_RecordType("<2101,2123,49>",(TestNonObjectPrototype)); Inst23++; } } catch(e) {}
values.forEach(TestNonObjectPrototype); // Test moving between non-object and object values.

try { if (Inst24 <= 1000 && typeof (F) != "undefined") {_RecordType("<2189,2190,51>",(F)); Inst24++; } } catch(e) {}
function F() {
  ;
}

;
try { if (Inst26 <= 1000 && typeof (F) != "undefined") {_RecordType("<2216,2217,56>",(F)); Inst26++; } } catch(e) {}
var f = new F();
try { if (Inst25 <= 1000 && typeof (f) != "undefined") {_RecordType("<2208,2209,56>",(f)); Inst25++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (f.__proto__) != "undefined") {_RecordType("<2221,2232,57>",(f.__proto__)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (f) != "undefined") {_RecordType("<2221,2222,57>",(f)); Inst28++; } } catch(e) {}
f.__proto__;
try { if (Inst29 <= 1000 && typeof (F.prototype) != "undefined") {_RecordType("<2234,2245,58>",(F.prototype)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (F) != "undefined") {_RecordType("<2234,2235,58>",(F)); Inst30++; } } catch(e) {}
F.prototype;
F.prototype = 42;
try { if (Inst31 <= 1000 && typeof (F.prototype) != "undefined") {_RecordType("<2247,2258,59>",(F.prototype)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (F) != "undefined") {_RecordType("<2247,2248,59>",(F)); Inst32++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof (F) != "undefined") {_RecordType("<2273,2274,60>",(F)); Inst34++; } } catch(e) {}
f = new F();
try { if (Inst33 <= 1000 && typeof (f) != "undefined") {_RecordType("<2265,2266,60>",(f)); Inst33++; } } catch(e) {}
try { if (Inst35 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<2278,2294,61>",(Object.prototype)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (Object) != "undefined") {_RecordType("<2278,2284,61>",(Object)); Inst36++; } } catch(e) {}
Object.prototype;
try { if (Inst37 <= 1000 && typeof (f.__proto__) != "undefined") {_RecordType("<2296,2307,62>",(f.__proto__)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (f) != "undefined") {_RecordType("<2296,2297,62>",(f)); Inst38++; } } catch(e) {}
f.__proto__;
42;
try { if (Inst39 <= 1000 && typeof (F.prototype) != "undefined") {_RecordType("<2313,2324,64>",(F.prototype)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (F) != "undefined") {_RecordType("<2313,2314,64>",(F)); Inst40++; } } catch(e) {}
F.prototype;
F.prototype = {
  a: 42
};
try { if (Inst41 <= 1000 && typeof (F.prototype) != "undefined") {_RecordType("<2326,2337,65>",(F.prototype)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (F) != "undefined") {_RecordType("<2326,2327,65>",(F)); Inst42++; } } catch(e) {}
try { if (Inst44 <= 1000 && typeof (F) != "undefined") {_RecordType("<2361,2362,68>",(F)); Inst44++; } } catch(e) {}
f = new F();
try { if (Inst43 <= 1000 && typeof (f) != "undefined") {_RecordType("<2353,2354,68>",(f)); Inst43++; } } catch(e) {}
42;
try { if (Inst45 <= 1000 && typeof (F.prototype.a) != "undefined") {_RecordType("<2370,2383,70>",(F.prototype.a)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (F.prototype) != "undefined") {_RecordType("<2370,2381,70>",(F.prototype)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (F) != "undefined") {_RecordType("<2370,2371,70>",(F)); Inst47++; } } catch(e) {}
F.prototype.a;
try { if (Inst48 <= 1000 && typeof (f.__proto__) != "undefined") {_RecordType("<2385,2396,71>",(f.__proto__)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (f) != "undefined") {_RecordType("<2385,2386,71>",(f)); Inst49++; } } catch(e) {}
f.__proto__;
try { if (Inst50 <= 1000 && typeof (F.prototype) != "undefined") {_RecordType("<2398,2409,72>",(F.prototype)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (F) != "undefined") {_RecordType("<2398,2399,72>",(F)); Inst51++; } } catch(e) {}
F.prototype;

// Test that the fast case optimizations can handle non-functions,
// functions with no prototypes (yet), non-object prototypes,
// functions without initial maps, and the fully initialized
// functions.
try { if (Inst52 <= 1000 && typeof (GetPrototypeOf) != "undefined") {_RecordType("<2625,2639,78>",(GetPrototypeOf)); Inst52++; } } catch(e) {}
function GetPrototypeOf(f) {
try { if (Inst53 <= 1000 && typeof (f) != "undefined") {_RecordType("<2640,2641,78>",(f)); Inst53++; } } catch(e) {}
try { if (Inst54 <= 1000 && typeof (f.prototype) != "undefined") {_RecordType("<2654,2665,79>",(f.prototype)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (f) != "undefined") {_RecordType("<2654,2655,79>",(f)); Inst55++; } } catch(e) {}
  return f.prototype;
}

; // Seed the GetPrototypeOf function to enable the fast case
// optimizations.

try { if (Inst57 <= 1000 && typeof (GetPrototypeOf) != "undefined") {_RecordType("<2759,2773,85>",(GetPrototypeOf)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (GetPrototypeOf) != "undefined") {_RecordType("<2774,2788,85>",(GetPrototypeOf)); Inst58++; } } catch(e) {}
var p = GetPrototypeOf(GetPrototypeOf); // Check that getting the prototype of a tagged integer works.
try { if (Inst56 <= 1000 && typeof (p) != "undefined") {_RecordType("<2755,2756,85>",(p)); Inst56++; } } catch(e) {}

try { if (Inst59 <= 1000 && typeof (GetPrototypeOf) != "undefined") {_RecordType("<2862,2876,87>",(GetPrototypeOf)); Inst59++; } } catch(e) {}
typeof GetPrototypeOf(1) == 'undefined';

try { if (Inst60 <= 1000 && typeof (NoPrototypeYet) != "undefined") {_RecordType("<2906,2920,89>",(NoPrototypeYet)); Inst60++; } } catch(e) {}
function NoPrototypeYet() {
  ;
}

try { if (Inst62 <= 1000 && typeof (GetPrototypeOf) != "undefined") {_RecordType("<2940,2954,93>",(GetPrototypeOf)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (NoPrototypeYet) != "undefined") {_RecordType("<2955,2969,93>",(NoPrototypeYet)); Inst63++; } } catch(e) {}
var p = GetPrototypeOf(NoPrototypeYet);
try { if (Inst61 <= 1000 && typeof (p) != "undefined") {_RecordType("<2936,2937,93>",(p)); Inst61++; } } catch(e) {}
try { if (Inst64 <= 1000 && typeof (NoPrototypeYet.prototype) != "undefined") {_RecordType("<2972,2996,94>",(NoPrototypeYet.prototype)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (NoPrototypeYet) != "undefined") {_RecordType("<2972,2986,94>",(NoPrototypeYet)); Inst65++; } } catch(e) {}
NoPrototypeYet.prototype;
try { if (Inst66 <= 1000 && typeof (p) != "undefined") {_RecordType("<2998,2999,95>",(p)); Inst66++; } } catch(e) {}
p;

try { if (Inst67 <= 1000 && typeof (NonObjectPrototype) != "undefined") {_RecordType("<3011,3029,97>",(NonObjectPrototype)); Inst67++; } } catch(e) {}
function NonObjectPrototype() {
  ;
}

NonObjectPrototype.prototype = 42;
try { if (Inst68 <= 1000 && typeof (NonObjectPrototype.prototype) != "undefined") {_RecordType("<3041,3069,101>",(NonObjectPrototype.prototype)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (NonObjectPrototype) != "undefined") {_RecordType("<3041,3059,101>",(NonObjectPrototype)); Inst69++; } } catch(e) {}
42;
try { if (Inst70 <= 1000 && typeof (GetPrototypeOf) != "undefined") {_RecordType("<3080,3094,103>",(GetPrototypeOf)); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (NonObjectPrototype) != "undefined") {_RecordType("<3095,3113,103>",(NonObjectPrototype)); Inst71++; } } catch(e) {}
GetPrototypeOf(NonObjectPrototype);

try { if (Inst72 <= 1000 && typeof (NoInitialMap) != "undefined") {_RecordType("<3126,3138,105>",(NoInitialMap)); Inst72++; } } catch(e) {}
function NoInitialMap() {
  ;
}

try { if (Inst74 <= 1000 && typeof (NoInitialMap.prototype) != "undefined") {_RecordType("<3158,3180,109>",(NoInitialMap.prototype)); Inst74++; } } catch(e) {}try { if (Inst75 <= 1000 && typeof (NoInitialMap) != "undefined") {_RecordType("<3158,3170,109>",(NoInitialMap)); Inst75++; } } catch(e) {}
var p = NoInitialMap.prototype;
try { if (Inst73 <= 1000 && typeof (p) != "undefined") {_RecordType("<3154,3155,109>",(p)); Inst73++; } } catch(e) {}
try { if (Inst76 <= 1000 && typeof (p) != "undefined") {_RecordType("<3182,3183,110>",(p)); Inst76++; } } catch(e) {}
p;
try { if (Inst77 <= 1000 && typeof (GetPrototypeOf) != "undefined") {_RecordType("<3185,3199,111>",(GetPrototypeOf)); Inst77++; } } catch(e) {}try { if (Inst78 <= 1000 && typeof (NoInitialMap) != "undefined") {_RecordType("<3200,3212,111>",(NoInitialMap)); Inst78++; } } catch(e) {}
GetPrototypeOf(NoInitialMap);
try { if (Inst79 <= 1000 && typeof (F.prototype) != "undefined") {_RecordType("<3215,3226,112>",(F.prototype)); Inst79++; } } catch(e) {}try { if (Inst80 <= 1000 && typeof (F) != "undefined") {_RecordType("<3215,3216,112>",(F)); Inst80++; } } catch(e) {}
F.prototype;
try { if (Inst81 <= 1000 && typeof (GetPrototypeOf) != "undefined") {_RecordType("<3228,3242,113>",(GetPrototypeOf)); Inst81++; } } catch(e) {}try { if (Inst82 <= 1000 && typeof (F) != "undefined") {_RecordType("<3243,3244,113>",(F)); Inst82++; } } catch(e) {}
GetPrototypeOf(F);
87;
try { if (Inst83 <= 1000 && typeof (GetPrototypeOf) != "undefined") {_RecordType("<3251,3265,115>",(GetPrototypeOf)); Inst83++; } } catch(e) {}
GetPrototypeOf({
  prototype: 87
});
// Check the prototype is not enumerable, as per ES5 section 15.3.5.2.  Note
// that this is in difference to ES3, which specified that function instances
// would have enumerable prototypes (section 15.3.5.2 also).
try { if (Inst85 <= 1000 && typeof (Function) != "undefined") {_RecordType("<3518,3526,121>",(Function)); Inst85++; } } catch(e) {}
var foo = new Function("return x");
try { if (Inst84 <= 1000 && typeof (foo) != "undefined") {_RecordType("<3508,3511,121>",(foo)); Inst84++; } } catch(e) {}
var result = "";
try { if (Inst86 <= 1000 && typeof (result) != "undefined") {_RecordType("<3544,3550,122>",(result)); Inst86++; } } catch(e) {}

for (var n in foo) {
try { if (Inst87 <= 1000 && typeof (n) != "undefined") {_RecordType("<3567,3568,124>",(n)); Inst87++; } } catch(e) {}try { if (Inst88 <= 1000 && typeof (foo) != "undefined") {_RecordType("<3572,3575,124>",(foo)); Inst88++; } } catch(e) {}
try { if (Inst90 <= 1000 && typeof (n) != "undefined") {_RecordType("<3591,3592,125>",(n)); Inst90++; } } catch(e) {}
  result += n;
try { if (Inst89 <= 1000 && typeof (result) != "undefined") {_RecordType("<3581,3587,125>",(result)); Inst89++; } } catch(e) {}
}

try { if (Inst91 <= 1000 && typeof (result) != "undefined") {_RecordType("<3597,3603,128>",(result)); Inst91++; } } catch(e) {}
result;
"";
try { if (Inst93 <= 1000 && typeof (Function) != "undefined") {_RecordType("<3617,3625,130>",(Function)); Inst93++; } } catch(e) {}
f = new Function('return 1;');
try { if (Inst92 <= 1000 && typeof (f) != "undefined") {_RecordType("<3609,3610,130>",(f)); Inst92++; } } catch(e) {}
try { if (Inst95 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<3651,3682,131>",(Object.getOwnPropertyDescriptor)); Inst95++; } } catch(e) {}try { if (Inst96 <= 1000 && typeof (Object) != "undefined") {_RecordType("<3651,3657,131>",(Object)); Inst96++; } } catch(e) {}try { if (Inst97 <= 1000 && typeof (f) != "undefined") {_RecordType("<3683,3684,131>",(f)); Inst97++; } } catch(e) {}
var desc = Object.getOwnPropertyDescriptor(f, "prototype");
try { if (Inst94 <= 1000 && typeof (desc) != "undefined") {_RecordType("<3644,3648,131>",(desc)); Inst94++; } } catch(e) {}
try { if (Inst98 <= 1000 && typeof (desc.configurable) != "undefined") {_RecordType("<3700,3717,132>",(desc.configurable)); Inst98++; } } catch(e) {}try { if (Inst99 <= 1000 && typeof (desc) != "undefined") {_RecordType("<3700,3704,132>",(desc)); Inst99++; } } catch(e) {}
desc.configurable;
try { if (Inst100 <= 1000 && typeof (desc.enumerable) != "undefined") {_RecordType("<3719,3734,133>",(desc.enumerable)); Inst100++; } } catch(e) {}try { if (Inst101 <= 1000 && typeof (desc) != "undefined") {_RecordType("<3719,3723,133>",(desc)); Inst101++; } } catch(e) {}
desc.enumerable;
try { if (Inst102 <= 1000 && typeof (desc.writable) != "undefined") {_RecordType("<3736,3749,134>",(desc.writable)); Inst102++; } } catch(e) {}try { if (Inst103 <= 1000 && typeof (desc) != "undefined") {_RecordType("<3736,3740,134>",(desc)); Inst103++; } } catch(e) {}
desc.writable;
try { if (Inst105 <= 1000 && typeof (Function) != "undefined") {_RecordType("<3755,3763,135>",(Function)); Inst105++; } } catch(e) {}
f = Function('return 1;');
try { if (Inst104 <= 1000 && typeof (f) != "undefined") {_RecordType("<3751,3752,135>",(f)); Inst104++; } } catch(e) {}
try { if (Inst107 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<3789,3820,136>",(Object.getOwnPropertyDescriptor)); Inst107++; } } catch(e) {}try { if (Inst108 <= 1000 && typeof (Object) != "undefined") {_RecordType("<3789,3795,136>",(Object)); Inst108++; } } catch(e) {}try { if (Inst109 <= 1000 && typeof (f) != "undefined") {_RecordType("<3821,3822,136>",(f)); Inst109++; } } catch(e) {}
var desc = Object.getOwnPropertyDescriptor(f, "prototype");
try { if (Inst106 <= 1000 && typeof (desc) != "undefined") {_RecordType("<3782,3786,136>",(desc)); Inst106++; } } catch(e) {}
try { if (Inst110 <= 1000 && typeof (desc.configurable) != "undefined") {_RecordType("<3838,3855,137>",(desc.configurable)); Inst110++; } } catch(e) {}try { if (Inst111 <= 1000 && typeof (desc) != "undefined") {_RecordType("<3838,3842,137>",(desc)); Inst111++; } } catch(e) {}
desc.configurable;
try { if (Inst112 <= 1000 && typeof (desc.enumerable) != "undefined") {_RecordType("<3857,3872,138>",(desc.enumerable)); Inst112++; } } catch(e) {}try { if (Inst113 <= 1000 && typeof (desc) != "undefined") {_RecordType("<3857,3861,138>",(desc)); Inst113++; } } catch(e) {}
desc.enumerable;
try { if (Inst114 <= 1000 && typeof (desc.writable) != "undefined") {_RecordType("<3874,3887,139>",(desc.writable)); Inst114++; } } catch(e) {}try { if (Inst115 <= 1000 && typeof (desc) != "undefined") {_RecordType("<3874,3878,139>",(desc)); Inst115++; } } catch(e) {}
desc.writable;

f = function () {
  return 1;
};
try { if (Inst116 <= 1000 && typeof (f) != "undefined") {_RecordType("<3890,3891,141>",(f)); Inst116++; } } catch(e) {}

try { if (Inst118 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<3935,3966,145>",(Object.getOwnPropertyDescriptor)); Inst118++; } } catch(e) {}try { if (Inst119 <= 1000 && typeof (Object) != "undefined") {_RecordType("<3935,3941,145>",(Object)); Inst119++; } } catch(e) {}try { if (Inst120 <= 1000 && typeof (f) != "undefined") {_RecordType("<3967,3968,145>",(f)); Inst120++; } } catch(e) {}
var desc = Object.getOwnPropertyDescriptor(f, "prototype");
try { if (Inst117 <= 1000 && typeof (desc) != "undefined") {_RecordType("<3928,3932,145>",(desc)); Inst117++; } } catch(e) {}
try { if (Inst121 <= 1000 && typeof (desc.configurable) != "undefined") {_RecordType("<3984,4001,146>",(desc.configurable)); Inst121++; } } catch(e) {}try { if (Inst122 <= 1000 && typeof (desc) != "undefined") {_RecordType("<3984,3988,146>",(desc)); Inst122++; } } catch(e) {}
desc.configurable;
try { if (Inst123 <= 1000 && typeof (desc.enumerable) != "undefined") {_RecordType("<4003,4018,147>",(desc.enumerable)); Inst123++; } } catch(e) {}try { if (Inst124 <= 1000 && typeof (desc) != "undefined") {_RecordType("<4003,4007,147>",(desc)); Inst124++; } } catch(e) {}
desc.enumerable;
try { if (Inst125 <= 1000 && typeof (desc.writable) != "undefined") {_RecordType("<4020,4033,148>",(desc.writable)); Inst125++; } } catch(e) {}try { if (Inst126 <= 1000 && typeof (desc) != "undefined") {_RecordType("<4020,4024,148>",(desc)); Inst126++; } } catch(e) {}
desc.writable;

