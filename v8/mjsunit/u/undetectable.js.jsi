var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2015 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax
var obj = function () {
  ;
};
try { if (Inst0 <= 1000 && typeof (obj) != "undefined") {_RecordType("<204,207,5>",(obj)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (shouldNotBeTaken) != "undefined") {_RecordType("<241,257,9>",(shouldNotBeTaken)); Inst1++; } } catch(e) {}
function shouldNotBeTaken() {
try { if (Inst2 <= 1000 && typeof (fail) != "undefined") {_RecordType("<264,268,10>",(fail)); Inst2++; } } catch(e) {}
  fail("Undetectable branch should not be taken", "branch was taken");
}

try { if (Inst3 <= 1000 && typeof (shouldBeTaken) != "undefined") {_RecordType("<345,358,13>",(shouldBeTaken)); Inst3++; } } catch(e) {}
function shouldBeTaken() {
try { if (Inst4 <= 1000 && typeof (fail) != "undefined") {_RecordType("<365,369,14>",(fail)); Inst4++; } } catch(e) {}
  fail("Inverted Undetectable branch should be taken", "branch was not taken");
}

try { if (Inst5 <= 1000 && typeof (testCompares) != "undefined") {_RecordType("<455,467,17>",(testCompares)); Inst5++; } } catch(e) {}
function testCompares() {
try { if (Inst6 <= 1000 && typeof (obj) != "undefined") {_RecordType("<475,478,18>",(obj)); Inst6++; } } catch(e) {}
  !obj;
try { if (Inst7 <= 1000 && typeof (obj) != "undefined") {_RecordType("<484,487,19>",(obj)); Inst7++; } } catch(e) {}
  !!obj;
try { if (Inst8 <= 1000 && typeof (obj) != "undefined") {_RecordType("<491,494,20>",(obj)); Inst8++; } } catch(e) {}
  obj == true;
try { if (Inst9 <= 1000 && typeof (obj) != "undefined") {_RecordType("<506,509,21>",(obj)); Inst9++; } } catch(e) {}
  obj == false;
try { if (Inst10 <= 1000 && typeof (obj) != "undefined") {_RecordType("<522,525,22>",(obj)); Inst10++; } } catch(e) {}
  obj === true;
try { if (Inst11 <= 1000 && typeof (obj) != "undefined") {_RecordType("<538,541,23>",(obj)); Inst11++; } } catch(e) {}
  obj === false;
  2;
try { if (Inst12 <= 1000 && typeof (obj) != "undefined") {_RecordType("<560,563,25>",(obj)); Inst12++; } } catch(e) {}
  obj ? 1 : 2;
try { if (Inst13 <= 1000 && typeof (obj) != "undefined") {_RecordType("<575,578,26>",(obj)); Inst13++; } } catch(e) {}
  obj;
try { if (Inst14 <= 1000 && typeof (obj) != "undefined") {_RecordType("<590,593,27>",(obj)); Inst14++; } } catch(e) {}
  true && obj;
try { if (Inst15 <= 1000 && typeof (obj) != "undefined") {_RecordType("<597,600,28>",(obj)); Inst15++; } } catch(e) {}
  obj;
try { if (Inst16 <= 1000 && typeof (obj) != "undefined") {_RecordType("<613,616,29>",(obj)); Inst16++; } } catch(e) {}
  false || obj;
}

try { if (Inst17 <= 1000 && typeof (testIfs) != "undefined") {_RecordType("<630,637,32>",(testIfs)); Inst17++; } } catch(e) {}
function testIfs() {
try { if (Inst18 <= 1000 && typeof (obj) != "undefined") {_RecordType("<648,651,33>",(obj)); Inst18++; } } catch(e) {}
  if (obj) {
try { if (Inst19 <= 1000 && typeof (shouldNotBeTaken) != "undefined") {_RecordType("<659,675,34>",(shouldNotBeTaken)); Inst19++; } } catch(e) {}
    shouldNotBeTaken();
  }

try { if (Inst20 <= 1000 && typeof (obj) != "undefined") {_RecordType("<690,693,37>",(obj)); Inst20++; } } catch(e) {}
  if (obj) {
try { if (Inst21 <= 1000 && typeof (shouldNotBeTaken) != "undefined") {_RecordType("<701,717,38>",(shouldNotBeTaken)); Inst21++; } } catch(e) {}
    shouldNotBeTaken();
  } else {
    // do nothing
    ;
  }

try { if (Inst22 <= 1000 && typeof (obj) != "undefined") {_RecordType("<768,771,44>",(obj)); Inst22++; } } catch(e) {}
  if (!obj) {
    // do nothing
    ;
  } else {
try { if (Inst23 <= 1000 && typeof (shouldBeTaken) != "undefined") {_RecordType("<814,827,48>",(shouldBeTaken)); Inst23++; } } catch(e) {}
    shouldBeTaken();
  }
}

try { if (Inst24 <= 1000 && typeof (testWhiles) != "undefined") {_RecordType("<847,857,52>",(testWhiles)); Inst24++; } } catch(e) {}
function testWhiles() {
try { if (Inst25 <= 1000 && typeof (obj) != "undefined") {_RecordType("<871,874,53>",(obj)); Inst25++; } } catch(e) {}
  while (obj) {
try { if (Inst26 <= 1000 && typeof (shouldNotBeTaken) != "undefined") {_RecordType("<882,898,54>",(shouldNotBeTaken)); Inst26++; } } catch(e) {}
    shouldNotBeTaken();
  }

  var i = 0;
try { if (Inst27 <= 1000 && typeof (i) != "undefined") {_RecordType("<913,914,57>",(i)); Inst27++; } } catch(e) {}

try { if (Inst28 <= 1000 && typeof (obj) != "undefined") {_RecordType("<931,934,59>",(obj)); Inst28++; } } catch(e) {}
  while (!obj) {
try { if (Inst29 <= 1000 && typeof (i) != "undefined") {_RecordType("<942,943,60>",(i)); Inst29++; } } catch(e) {}
    i++;
    break;
  }

  1;
try { if (Inst30 <= 1000 && typeof (i) != "undefined") {_RecordType("<970,971,65>",(i)); Inst30++; } } catch(e) {}
  i;
}

try { if (Inst31 <= 1000 && typeof (testFors) != "undefined") {_RecordType("<985,993,68>",(testFors)); Inst31++; } } catch(e) {}
function testFors() {
  for (var i = 0; obj; i++) {
try { if (Inst32 <= 1000 && typeof (i) != "undefined") {_RecordType("<1009,1010,69>",(i)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (obj) != "undefined") {_RecordType("<1016,1019,69>",(obj)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (i) != "undefined") {_RecordType("<1021,1022,69>",(i)); Inst34++; } } catch(e) {}
try { if (Inst35 <= 1000 && typeof (shouldNotBeTaken) != "undefined") {_RecordType("<1032,1048,70>",(shouldNotBeTaken)); Inst35++; } } catch(e) {}
    shouldNotBeTaken();
  }

  var j = 0;
try { if (Inst36 <= 1000 && typeof (j) != "undefined") {_RecordType("<1063,1064,73>",(j)); Inst36++; } } catch(e) {}

  for (var i = 0; !obj; i++) {
try { if (Inst37 <= 1000 && typeof (i) != "undefined") {_RecordType("<1082,1083,75>",(i)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (obj) != "undefined") {_RecordType("<1090,1093,75>",(obj)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (i) != "undefined") {_RecordType("<1095,1096,75>",(i)); Inst39++; } } catch(e) {}
try { if (Inst40 <= 1000 && typeof (j) != "undefined") {_RecordType("<1106,1107,76>",(j)); Inst40++; } } catch(e) {}
    j++;
    break;
  }

  1;
try { if (Inst41 <= 1000 && typeof (j) != "undefined") {_RecordType("<1134,1135,81>",(j)); Inst41++; } } catch(e) {}
  j;
}

try { if (Inst42 <= 1000 && typeof (testCall) != "undefined") {_RecordType("<1149,1157,84>",(testCall)); Inst42++; } } catch(e) {}
function testCall() {
try { if (Inst43 <= 1000 && typeof (obj) != "undefined") {_RecordType("<1164,1167,85>",(obj)); Inst43++; } } catch(e) {}
  obj();
}

for (var j = 0; j < 5; j++) {
try { if (Inst44 <= 1000 && typeof (j) != "undefined") {_RecordType("<1183,1184,88>",(j)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (j) != "undefined") {_RecordType("<1190,1191,88>",(j)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (j) != "undefined") {_RecordType("<1197,1198,88>",(j)); Inst46++; } } catch(e) {}
try { if (Inst47 <= 1000 && typeof (testCompares) != "undefined") {_RecordType("<1206,1218,89>",(testCompares)); Inst47++; } } catch(e) {}
  testCompares();
try { if (Inst48 <= 1000 && typeof (testIfs) != "undefined") {_RecordType("<1224,1231,90>",(testIfs)); Inst48++; } } catch(e) {}
  testIfs();
try { if (Inst49 <= 1000 && typeof (testWhiles) != "undefined") {_RecordType("<1237,1247,91>",(testWhiles)); Inst49++; } } catch(e) {}
  testWhiles();
try { if (Inst50 <= 1000 && typeof (testFors) != "undefined") {_RecordType("<1253,1261,92>",(testFors)); Inst50++; } } catch(e) {}
  testFors();
try { if (Inst51 <= 1000 && typeof (testCall) != "undefined") {_RecordType("<1267,1275,93>",(testCall)); Inst51++; } } catch(e) {}
  testCall();

try { if (Inst52 <= 1000 && typeof (j) != "undefined") {_RecordType("<1286,1287,95>",(j)); Inst52++; } } catch(e) {}
  if (j == 3) {
    ;
  }
}

