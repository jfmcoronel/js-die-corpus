var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2015 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax
try { if (Inst0 <= 1000 && typeof (Foo) != "undefined") {_RecordType("<209,212,5>",(Foo)); Inst0++; } } catch(e) {}
function Foo(x) {
try { if (Inst1 <= 1000 && typeof (x) != "undefined") {_RecordType("<213,214,5>",(x)); Inst1++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (x) != "undefined") {_RecordType("<229,230,6>",(x)); Inst3++; } } catch(e) {}
  this.x = x;
try { if (Inst2 <= 1000 && typeof (this.x) != "undefined") {_RecordType("<220,226,6>",(this.x)); Inst2++; } } catch(e) {}
}

try { if (Inst5 <= 1000 && typeof (Foo) != "undefined") {_RecordType("<247,250,9>",(Foo)); Inst5++; } } catch(e) {}
var f = new Foo(1.25);
try { if (Inst4 <= 1000 && typeof (f) != "undefined") {_RecordType("<239,240,9>",(f)); Inst4++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (Foo) != "undefined") {_RecordType("<270,273,10>",(Foo)); Inst7++; } } catch(e) {}
var g = new Foo(2.25);
try { if (Inst6 <= 1000 && typeof (g) != "undefined") {_RecordType("<262,263,10>",(g)); Inst6++; } } catch(e) {}

try { if (Inst8 <= 1000 && typeof (add) != "undefined") {_RecordType("<291,294,12>",(add)); Inst8++; } } catch(e) {}
function add(a, b) {
try { if (Inst9 <= 1000 && typeof (a) != "undefined") {_RecordType("<295,296,12>",(a)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (b) != "undefined") {_RecordType("<298,299,12>",(b)); Inst10++; } } catch(e) {}
  var name = "x";
try { if (Inst11 <= 1000 && typeof (name) != "undefined") {_RecordType("<309,313,13>",(name)); Inst11++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (a[name]) != "undefined") {_RecordType("<330,337,14>",(a[name])); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (a) != "undefined") {_RecordType("<330,331,14>",(a)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (b[name]) != "undefined") {_RecordType("<340,347,14>",(b[name])); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (b) != "undefined") {_RecordType("<340,341,14>",(b)); Inst15++; } } catch(e) {}
  return a[name] + b[name];
}

3.5;
try { if (Inst16 <= 1000 && typeof (add) != "undefined") {_RecordType("<357,360,18>",(add)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (f) != "undefined") {_RecordType("<361,362,18>",(f)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (g) != "undefined") {_RecordType("<364,365,18>",(g)); Inst18++; } } catch(e) {}
add(f, g);
3.5;
try { if (Inst19 <= 1000 && typeof (add) != "undefined") {_RecordType("<373,376,20>",(add)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (g) != "undefined") {_RecordType("<377,378,20>",(g)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (f) != "undefined") {_RecordType("<380,381,20>",(f)); Inst21++; } } catch(e) {}
add(g, f);
3.5;
try { if (Inst22 <= 1000 && typeof (add) != "undefined") {_RecordType("<389,392,22>",(add)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (f) != "undefined") {_RecordType("<393,394,22>",(f)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (g) != "undefined") {_RecordType("<396,397,22>",(g)); Inst24++; } } catch(e) {}
add(f, g);
3.5;
try { if (Inst25 <= 1000 && typeof (add) != "undefined") {_RecordType("<405,408,24>",(add)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (g) != "undefined") {_RecordType("<409,410,24>",(g)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (f) != "undefined") {_RecordType("<412,413,24>",(f)); Inst27++; } } catch(e) {}
add(g, f);

