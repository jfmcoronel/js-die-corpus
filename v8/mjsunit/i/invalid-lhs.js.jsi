var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2008 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// Test that we get exceptions for invalid left-hand sides.  The
// exceptions are delayed until runtime.
// Normal assignments:
"12 = 12";
try { if (Inst0 <= 1000 && typeof (ReferenceError) != "undefined") {_RecordType("<1737,1751,31>",(ReferenceError)); Inst0++; } } catch(e) {}
ReferenceError;
"x++ = 12";
try { if (Inst1 <= 1000 && typeof (ReferenceError) != "undefined") {_RecordType("<1765,1779,33>",(ReferenceError)); Inst1++; } } catch(e) {}
ReferenceError;
"eval('var x') = 12";
try { if (Inst2 <= 1000 && typeof (ReferenceError) != "undefined") {_RecordType("<1803,1817,35>",(ReferenceError)); Inst2++; } } catch(e) {}
ReferenceError;
"if (false) 12 = 12";
try { if (Inst3 <= 1000 && typeof (ReferenceError) != "undefined") {_RecordType("<1841,1855,37>",(ReferenceError)); Inst3++; } } catch(e) {}
ReferenceError;
"if (false) eval('var x') = 12";
"12++";
try { if (Inst4 <= 1000 && typeof (ReferenceError) != "undefined") {_RecordType("<1898,1912,40>",(ReferenceError)); Inst4++; } } catch(e) {}
ReferenceError;
"12--";
try { if (Inst5 <= 1000 && typeof (ReferenceError) != "undefined") {_RecordType("<1922,1936,42>",(ReferenceError)); Inst5++; } } catch(e) {}
ReferenceError;
"++12";
try { if (Inst6 <= 1000 && typeof (ReferenceError) != "undefined") {_RecordType("<1946,1960,44>",(ReferenceError)); Inst6++; } } catch(e) {}
ReferenceError;
"--12";
try { if (Inst7 <= 1000 && typeof (ReferenceError) != "undefined") {_RecordType("<1970,1984,46>",(ReferenceError)); Inst7++; } } catch(e) {}
ReferenceError;
"++(eval('12'))";
try { if (Inst8 <= 1000 && typeof (ReferenceError) != "undefined") {_RecordType("<2004,2018,48>",(ReferenceError)); Inst8++; } } catch(e) {}
ReferenceError;
"(eval('12'))++";
try { if (Inst9 <= 1000 && typeof (ReferenceError) != "undefined") {_RecordType("<2038,2052,50>",(ReferenceError)); Inst9++; } } catch(e) {}
ReferenceError;
"if (false) 12++";
try { if (Inst10 <= 1000 && typeof (ReferenceError) != "undefined") {_RecordType("<2073,2087,52>",(ReferenceError)); Inst10++; } } catch(e) {}
ReferenceError;
"if (false) 12--";
try { if (Inst11 <= 1000 && typeof (ReferenceError) != "undefined") {_RecordType("<2108,2122,54>",(ReferenceError)); Inst11++; } } catch(e) {}
ReferenceError;
"if (false) ++12";
try { if (Inst12 <= 1000 && typeof (ReferenceError) != "undefined") {_RecordType("<2143,2157,56>",(ReferenceError)); Inst12++; } } catch(e) {}
ReferenceError;
"if (false) --12";
try { if (Inst13 <= 1000 && typeof (ReferenceError) != "undefined") {_RecordType("<2178,2192,58>",(ReferenceError)); Inst13++; } } catch(e) {}
ReferenceError;
"if (false) ++(eval('12'))";
"if (false) (eval('12'))++";
"for (12 in [1]) print(12);";
try { if (Inst14 <= 1000 && typeof (SyntaxError) != "undefined") {_RecordType("<2282,2293,62>",(SyntaxError)); Inst14++; } } catch(e) {}
SyntaxError;
"for (eval('var x') in [1]) print(12);";
try { if (Inst15 <= 1000 && typeof (ReferenceError) != "undefined") {_RecordType("<2336,2350,64>",(ReferenceError)); Inst15++; } } catch(e) {}
ReferenceError;
"if (false) for (12 in [1]) print(12);";
try { if (Inst16 <= 1000 && typeof (SyntaxError) != "undefined") {_RecordType("<2393,2404,66>",(SyntaxError)); Inst16++; } } catch(e) {}
SyntaxError;
"if (false) for (eval('0') in [1]) print(12);";
"for (12 = 1;;) print(12);";
try { if (Inst17 <= 1000 && typeof (ReferenceError) != "undefined") {_RecordType("<2483,2497,69>",(ReferenceError)); Inst17++; } } catch(e) {}
ReferenceError;
"for (eval('var x') = 1;;) print(12);";
try { if (Inst18 <= 1000 && typeof (ReferenceError) != "undefined") {_RecordType("<2539,2553,71>",(ReferenceError)); Inst18++; } } catch(e) {}
ReferenceError;
"if (false) for (12 = 1;;) print(12);";
try { if (Inst19 <= 1000 && typeof (ReferenceError) != "undefined") {_RecordType("<2595,2609,73>",(ReferenceError)); Inst19++; } } catch(e) {}
ReferenceError;
"if (false) for (eval('var x') = 1;;) print(12);";
"this = 42";
try { if (Inst20 <= 1000 && typeof (ReferenceError) != "undefined") {_RecordType("<2675,2689,76>",(ReferenceError)); Inst20++; } } catch(e) {}
ReferenceError;
"function f() { this = 12; }";
try { if (Inst21 <= 1000 && typeof (ReferenceError) != "undefined") {_RecordType("<2722,2736,78>",(ReferenceError)); Inst21++; } } catch(e) {}
ReferenceError;
"for (this in {x:3, y:4, z:5}) ;";
try { if (Inst22 <= 1000 && typeof (SyntaxError) != "undefined") {_RecordType("<2773,2784,80>",(SyntaxError)); Inst22++; } } catch(e) {}
SyntaxError;
"for (this = 0;;) ;";
try { if (Inst23 <= 1000 && typeof (ReferenceError) != "undefined") {_RecordType("<2808,2822,82>",(ReferenceError)); Inst23++; } } catch(e) {}
ReferenceError;
"this++";
try { if (Inst24 <= 1000 && typeof (ReferenceError) != "undefined") {_RecordType("<2834,2848,84>",(ReferenceError)); Inst24++; } } catch(e) {}
ReferenceError;
"++this";
try { if (Inst25 <= 1000 && typeof (ReferenceError) != "undefined") {_RecordType("<2860,2874,86>",(ReferenceError)); Inst25++; } } catch(e) {}
ReferenceError;
"this--";
try { if (Inst26 <= 1000 && typeof (ReferenceError) != "undefined") {_RecordType("<2886,2900,88>",(ReferenceError)); Inst26++; } } catch(e) {}
ReferenceError;
"--this";
try { if (Inst27 <= 1000 && typeof (ReferenceError) != "undefined") {_RecordType("<2912,2926,90>",(ReferenceError)); Inst27++; } } catch(e) {}
ReferenceError;
"if (false) this = 42";
try { if (Inst28 <= 1000 && typeof (ReferenceError) != "undefined") {_RecordType("<2952,2966,92>",(ReferenceError)); Inst28++; } } catch(e) {}
ReferenceError;
"if (false) this++";
try { if (Inst29 <= 1000 && typeof (ReferenceError) != "undefined") {_RecordType("<2989,3003,94>",(ReferenceError)); Inst29++; } } catch(e) {}
ReferenceError;

