var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2016 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
try { if (Inst0 <= 1000 && typeof (foo) != "undefined") {_RecordType("<176,179,4>",(foo)); Inst0++; } } catch(e) {}
function foo() {
try { if (Inst1 <= 1000 && typeof (this.Worker) != "undefined") {_RecordType("<190,201,5>",(this.Worker)); Inst1++; } } catch(e) {}
  if (this.Worker) {
try { if (Inst2 <= 1000 && typeof (__f_0) != "undefined") {_RecordType("<218,223,6>",(__f_0)); Inst2++; } } catch(e) {}
    function __f_0() {
try { if (Inst4 <= 1000 && typeof (a) != "undefined") {_RecordType("<243,244,7>",(a)); Inst4++; } } catch(e) {}
      this.s = a;
try { if (Inst3 <= 1000 && typeof (this.s) != "undefined") {_RecordType("<234,240,7>",(this.s)); Inst3++; } } catch(e) {}
    }

try { if (Inst5 <= 1000 && typeof (__f_1) != "undefined") {_RecordType("<266,271,10>",(__f_1)); Inst5++; } } catch(e) {}
    function __f_1() {
try { if (Inst7 <= 1000 && typeof (__f_0) != "undefined") {_RecordType("<291,296,11>",(__f_0)); Inst7++; } } catch(e) {}
      this.l = __f_0;
try { if (Inst6 <= 1000 && typeof (this.l) != "undefined") {_RecordType("<282,288,11>",(this.l)); Inst6++; } } catch(e) {}
    }

try { if (Inst8 <= 1000 && typeof (Object) != "undefined") {_RecordType("<326,332,14>",(Object)); Inst8++; } } catch(e) {}
    with (('source', Object)) {
try { if (Inst9 <= 1000 && typeof (__f_0) != "undefined") {_RecordType("<358,363,15>",(__f_0)); Inst9++; } } catch(e) {}
      throw function __f_0(__f_0) {
try { if (Inst10 <= 1000 && typeof (__f_0) != "undefined") {_RecordType("<364,369,15>",(__f_0)); Inst10++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (Worker.__f_0) != "undefined") {_RecordType("<388,400,16>",(Worker.__f_0)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Worker) != "undefined") {_RecordType("<388,394,16>",(Worker)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (__f_0) != "undefined") {_RecordType("<414,419,16>",(__f_0)); Inst13++; } } catch(e) {}
        return Worker.__f_0(-2147483648, __f_0);
      };
    }

try { if (Inst15 <= 1000 && typeof (Worker) != "undefined") {_RecordType("<458,464,20>",(Worker)); Inst15++; } } catch(e) {}
    var __v_9 = new Worker('', {
      type: 'string'
    });
try { if (Inst14 <= 1000 && typeof (__v_9) != "undefined") {_RecordType("<446,451,20>",(__v_9)); Inst14++; } } catch(e) {}

try { if (Inst17 <= 1000 && typeof (Math.s) != "undefined") {_RecordType("<524,530,25>",(Math.s)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Math) != "undefined") {_RecordType("<524,528,25>",(Math)); Inst18++; } } catch(e) {}
    __f_1 = {
      s: Math.s,
      __f_1: true
    };
try { if (Inst16 <= 1000 && typeof (__f_1) != "undefined") {_RecordType("<505,510,24>",(__f_1)); Inst16++; } } catch(e) {}
  }
}

try { if (Inst20 <= 1000 && typeof (e) != "undefined") {_RecordType("<588,589,33>",(e)); Inst20++; } } catch(e) {}
try {
try { if (Inst19 <= 1000 && typeof (foo) != "undefined") {_RecordType("<572,575,32>",(foo)); Inst19++; } } catch(e) {}
  foo();
} catch (e) {
  ;
}

