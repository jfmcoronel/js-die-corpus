var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2017 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax
try { if (Inst0 <= 1000 && typeof (h) != "undefined") {_RecordType("<209,210,5>",(h)); Inst0++; } } catch(e) {}
function h(g) {
try { if (Inst1 <= 1000 && typeof (g) != "undefined") {_RecordType("<211,212,5>",(g)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (g) != "undefined") {_RecordType("<225,226,6>",(g)); Inst2++; } } catch(e) {}
  return g();
}

try { if (Inst3 <= 1000 && typeof (f) != "undefined") {_RecordType("<242,243,9>",(f)); Inst3++; } } catch(e) {}
function f() {
  var g;
try { if (Inst4 <= 1000 && typeof (g) != "undefined") {_RecordType("<254,255,10>",(g)); Inst4++; } } catch(e) {}

  for (var i = 0; i < 10; i++) {
try { if (Inst5 <= 1000 && typeof (i) != "undefined") {_RecordType("<269,270,12>",(i)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<276,277,12>",(i)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<284,285,12>",(i)); Inst7++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<303,304,13>",(i)); Inst9++; } } catch(e) {}
    var y = i;
try { if (Inst8 <= 1000 && typeof (y) != "undefined") {_RecordType("<299,300,13>",(y)); Inst8++; } } catch(e) {}

try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<315,316,15>",(i)); Inst10++; } } catch(e) {}
    if (i === 5) {
      g = function () {
try { if (Inst12 <= 1000 && typeof (y) != "undefined") {_RecordType("<365,366,17>",(y)); Inst12++; } } catch(e) {}
        return y;
      };
try { if (Inst11 <= 1000 && typeof (g) != "undefined") {_RecordType("<332,333,16>",(g)); Inst11++; } } catch(e) {}

      5;
try { if (Inst13 <= 1000 && typeof (h) != "undefined") {_RecordType("<393,394,21>",(h)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (g) != "undefined") {_RecordType("<395,396,21>",(g)); Inst14++; } } catch(e) {}
      h(g);
      5;
try { if (Inst15 <= 1000 && typeof (h) != "undefined") {_RecordType("<414,415,23>",(h)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (g) != "undefined") {_RecordType("<416,417,23>",(g)); Inst16++; } } catch(e) {}
      h(g);
      5;
try { if (Inst17 <= 1000 && typeof (h) != "undefined") {_RecordType("<435,436,25>",(h)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (g) != "undefined") {_RecordType("<437,438,25>",(g)); Inst18++; } } catch(e) {}
      h(g);
    }
  }

try { if (Inst19 <= 1000 && typeof (g) != "undefined") {_RecordType("<461,462,29>",(g)); Inst19++; } } catch(e) {}
  return g;
}

try { if (Inst21 <= 1000 && typeof (f) != "undefined") {_RecordType("<477,478,32>",(f)); Inst21++; } } catch(e) {}
var myg = f();
try { if (Inst20 <= 1000 && typeof (myg) != "undefined") {_RecordType("<471,474,32>",(myg)); Inst20++; } } catch(e) {}
9;
try { if (Inst22 <= 1000 && typeof (h) != "undefined") {_RecordType("<485,486,34>",(h)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (myg) != "undefined") {_RecordType("<487,490,34>",(myg)); Inst23++; } } catch(e) {}
h(myg);

