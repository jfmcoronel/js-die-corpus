var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2011 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// Test that the Number, String and Boolean prototypes are searched
// for indexed properties on value objects.
try { if (Inst0 <= 1000 && typeof (return_one) != "undefined") {_RecordType("<1718,1728,29>",(return_one)); Inst0++; } } catch(e) {}
function return_one() {
  return 1;
}

;

try { if (Inst1 <= 1000 && typeof (test) != "undefined") {_RecordType("<1760,1764,35>",(test)); Inst1++; } } catch(e) {}
function test(value) {
try { if (Inst2 <= 1000 && typeof (value) != "undefined") {_RecordType("<1765,1770,35>",(value)); Inst2++; } } catch(e) {}
  for (var i = 0; i < 10; i++) {
try { if (Inst3 <= 1000 && typeof (i) != "undefined") {_RecordType("<1785,1786,36>",(i)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (i) != "undefined") {_RecordType("<1792,1793,36>",(i)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (i) != "undefined") {_RecordType("<1800,1801,36>",(i)); Inst5++; } } catch(e) {}
    0;
try { if (Inst6 <= 1000 && typeof (value[0]) != "undefined") {_RecordType("<1818,1826,38>",(value[0])); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (value) != "undefined") {_RecordType("<1818,1823,38>",(value)); Inst7++; } } catch(e) {}
    value[0];
    0;
try { if (Inst8 <= 1000 && typeof (value["0"]) != "undefined") {_RecordType("<1839,1849,40>",(value["0"])); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (value) != "undefined") {_RecordType("<1839,1844,40>",(value)); Inst9++; } } catch(e) {}
    value["0"];
try { if (Inst10 <= 1000 && typeof (return_one) != "undefined") {_RecordType("<1855,1865,41>",(return_one)); Inst10++; } } catch(e) {}
    return_one();
try { if (Inst11 <= 1000 && typeof (value[1]) != "undefined") {_RecordType("<1873,1881,42>",(value[1])); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (value) != "undefined") {_RecordType("<1873,1878,42>",(value)); Inst12++; } } catch(e) {}
    value[1];
try { if (Inst13 <= 1000 && typeof (return_one) != "undefined") {_RecordType("<1887,1897,43>",(return_one)); Inst13++; } } catch(e) {}
    return_one();
try { if (Inst14 <= 1000 && typeof (value["1"]) != "undefined") {_RecordType("<1905,1915,44>",(value["1"])); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (value) != "undefined") {_RecordType("<1905,1910,44>",(value)); Inst15++; } } catch(e) {}
    value["1"];
    1;
try { if (Inst16 <= 1000 && typeof (value[1]) != "undefined") {_RecordType("<1928,1936,46>",(value[1])); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (value) != "undefined") {_RecordType("<1928,1933,46>",(value)); Inst17++; } } catch(e) {}
    value[1]();
    1;
try { if (Inst18 <= 1000 && typeof (value["1"]) != "undefined") {_RecordType("<1951,1961,48>",(value["1"])); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (value) != "undefined") {_RecordType("<1951,1956,48>",(value)); Inst19++; } } catch(e) {}
    value["1"]();
  }
}

Number.prototype[0] = 0;
try { if (Inst20 <= 1000 && typeof (Number.prototype[0]) != "undefined") {_RecordType("<1972,1991,52>",(Number.prototype[0])); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Number.prototype) != "undefined") {_RecordType("<1972,1988,52>",(Number.prototype)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Number) != "undefined") {_RecordType("<1972,1978,52>",(Number)); Inst22++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (return_one) != "undefined") {_RecordType("<2019,2029,53>",(return_one)); Inst26++; } } catch(e) {}
Number.prototype[1] = return_one;
try { if (Inst23 <= 1000 && typeof (Number.prototype[1]) != "undefined") {_RecordType("<1997,2016,53>",(Number.prototype[1])); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (Number.prototype) != "undefined") {_RecordType("<1997,2013,53>",(Number.prototype)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Number) != "undefined") {_RecordType("<1997,2003,53>",(Number)); Inst25++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (test) != "undefined") {_RecordType("<2031,2035,54>",(test)); Inst27++; } } catch(e) {}
test(0);
try { if (Inst28 <= 1000 && typeof (test) != "undefined") {_RecordType("<2040,2044,55>",(test)); Inst28++; } } catch(e) {}
test(0.1);
String.prototype[0] = 0;
try { if (Inst29 <= 1000 && typeof (String.prototype[0]) != "undefined") {_RecordType("<2051,2070,56>",(String.prototype[0])); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (String.prototype) != "undefined") {_RecordType("<2051,2067,56>",(String.prototype)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (String) != "undefined") {_RecordType("<2051,2057,56>",(String)); Inst31++; } } catch(e) {}
try { if (Inst35 <= 1000 && typeof (return_one) != "undefined") {_RecordType("<2098,2108,57>",(return_one)); Inst35++; } } catch(e) {}
String.prototype[1] = return_one;
try { if (Inst32 <= 1000 && typeof (String.prototype[1]) != "undefined") {_RecordType("<2076,2095,57>",(String.prototype[1])); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (String.prototype) != "undefined") {_RecordType("<2076,2092,57>",(String.prototype)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (String) != "undefined") {_RecordType("<2076,2082,57>",(String)); Inst34++; } } catch(e) {}
try { if (Inst36 <= 1000 && typeof (test) != "undefined") {_RecordType("<2110,2114,58>",(test)); Inst36++; } } catch(e) {}
test("");
Boolean.prototype[0] = 0;
try { if (Inst37 <= 1000 && typeof (Boolean.prototype[0]) != "undefined") {_RecordType("<2120,2140,59>",(Boolean.prototype[0])); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (Boolean.prototype) != "undefined") {_RecordType("<2120,2137,59>",(Boolean.prototype)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (Boolean) != "undefined") {_RecordType("<2120,2127,59>",(Boolean)); Inst39++; } } catch(e) {}
try { if (Inst43 <= 1000 && typeof (return_one) != "undefined") {_RecordType("<2169,2179,60>",(return_one)); Inst43++; } } catch(e) {}
Boolean.prototype[1] = return_one;
try { if (Inst40 <= 1000 && typeof (Boolean.prototype[1]) != "undefined") {_RecordType("<2146,2166,60>",(Boolean.prototype[1])); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (Boolean.prototype) != "undefined") {_RecordType("<2146,2163,60>",(Boolean.prototype)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (Boolean) != "undefined") {_RecordType("<2146,2153,60>",(Boolean)); Inst42++; } } catch(e) {}
try { if (Inst44 <= 1000 && typeof (test) != "undefined") {_RecordType("<2181,2185,61>",(test)); Inst44++; } } catch(e) {}
test(true);
try { if (Inst45 <= 1000 && typeof (test) != "undefined") {_RecordType("<2193,2197,62>",(test)); Inst45++; } } catch(e) {}
test(false);

