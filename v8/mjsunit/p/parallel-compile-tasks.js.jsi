var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2018 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --compiler-dispatcher --parallel-compile-tasks --use-external-strings
(function (a) {
try { if (Inst0 <= 1000 && typeof (a) != "undefined") {_RecordType("<258,259,5>",(a)); Inst0++; } } catch(e) {}
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<265,266,6>",(a)); Inst1++; } } catch(e) {}
  a;
  "IIFE";
})("IIFE");

(function (a, ...rest) {
try { if (Inst2 <= 1000 && typeof (a) != "undefined") {_RecordType("<302,303,10>",(a)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (rest) != "undefined") {_RecordType("<308,312,10>",(rest)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (a) != "undefined") {_RecordType("<318,319,11>",(a)); Inst4++; } } catch(e) {}
  a;
  1;
try { if (Inst5 <= 1000 && typeof (rest.length) != "undefined") {_RecordType("<328,339,13>",(rest.length)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (rest) != "undefined") {_RecordType("<328,332,13>",(rest)); Inst6++; } } catch(e) {}
  rest.length;
  2;
try { if (Inst7 <= 1000 && typeof (rest[0]) != "undefined") {_RecordType("<348,355,15>",(rest[0])); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (rest) != "undefined") {_RecordType("<348,352,15>",(rest)); Inst8++; } } catch(e) {}
  rest[0];
  2;
try { if (Inst9 <= 1000 && typeof (rest[1]) != "undefined") {_RecordType("<364,371,17>",(rest[1])); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (rest) != "undefined") {_RecordType("<364,368,17>",(rest)); Inst10++; } } catch(e) {}
  rest[1];
  3;
})(1, 2, 3);

var outer_var = 42;
try { if (Inst11 <= 1000 && typeof (outer_var) != "undefined") {_RecordType("<396,405,21>",(outer_var)); Inst11++; } } catch(e) {}

try { if (Inst12 <= 1000 && typeof (lazy_outer) != "undefined") {_RecordType("<422,432,23>",(lazy_outer)); Inst12++; } } catch(e) {}
function lazy_outer() {
  return 42;
}

var eager_outer = function () {
  return 42;
};
try { if (Inst13 <= 1000 && typeof (eager_outer) != "undefined") {_RecordType("<457,468,27>",(eager_outer)); Inst13++; } } catch(e) {}

(function () {
try { if (Inst14 <= 1000 && typeof (outer_var) != "undefined") {_RecordType("<519,528,32>",(outer_var)); Inst14++; } } catch(e) {}
  outer_var;
  42;
try { if (Inst15 <= 1000 && typeof (lazy_outer) != "undefined") {_RecordType("<538,548,34>",(lazy_outer)); Inst15++; } } catch(e) {}
  lazy_outer();
  42;
try { if (Inst16 <= 1000 && typeof (eager_outer) != "undefined") {_RecordType("<560,571,36>",(eager_outer)); Inst16++; } } catch(e) {}
  eager_outer();
  42;
})();

var gen1 = function* () {
  yield 1;
  yield 2;
}();
try { if (Inst17 <= 1000 && typeof (gen1) != "undefined") {_RecordType("<592,596,40>",(gen1)); Inst17++; } } catch(e) {}

try { if (Inst18 <= 1000 && typeof (gen1.next().value) != "undefined") {_RecordType("<642,659,45>",(gen1.next().value)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (gen1.next) != "undefined") {_RecordType("<642,651,45>",(gen1.next)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (gen1) != "undefined") {_RecordType("<642,646,45>",(gen1)); Inst20++; } } catch(e) {}
gen1.next().value;
1;
try { if (Inst21 <= 1000 && typeof (gen1.next().value) != "undefined") {_RecordType("<664,681,47>",(gen1.next().value)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (gen1.next) != "undefined") {_RecordType("<664,673,47>",(gen1.next)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (gen1) != "undefined") {_RecordType("<664,668,47>",(gen1)); Inst23++; } } catch(e) {}
gen1.next().value;
2;

try { if (Inst25 <= 1000 && typeof (recursive) != "undefined") {_RecordType("<709,718,50>",(recursive)); Inst25++; } } catch(e) {}
var result = function recursive(a = 0) {
try { if (Inst26 <= 1000 && typeof (a) != "undefined") {_RecordType("<719,720,50>",(a)); Inst26++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (a) != "undefined") {_RecordType("<734,735,51>",(a)); Inst27++; } } catch(e) {}
  if (a == 1) {
    return 42;
  }

try { if (Inst28 <= 1000 && typeof (recursive) != "undefined") {_RecordType("<773,782,55>",(recursive)); Inst28++; } } catch(e) {}
  return recursive(1);
}();
try { if (Inst24 <= 1000 && typeof (result) != "undefined") {_RecordType("<691,697,50>",(result)); Inst24++; } } catch(e) {}

try { if (Inst29 <= 1000 && typeof (result) != "undefined") {_RecordType("<793,799,58>",(result)); Inst29++; } } catch(e) {}
result;
42;
var a = 42;
try { if (Inst30 <= 1000 && typeof (a) != "undefined") {_RecordType("<809,810,60>",(a)); Inst30++; } } catch(e) {}
var b;
try { if (Inst31 <= 1000 && typeof (b) != "undefined") {_RecordType("<821,822,61>",(b)); Inst31++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (a) != "undefined") {_RecordType("<833,834,62>",(a)); Inst33++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (z) != "undefined") {_RecordType("<849,850,62>",(z)); Inst35++; } } catch(e) {}
var c = (a, b = function z() {
try { if (Inst36 <= 1000 && typeof (a) != "undefined") {_RecordType("<864,865,63>",(a)); Inst36++; } } catch(e) {}
  return a + 1;
}());
try { if (Inst32 <= 1000 && typeof (c) != "undefined") {_RecordType("<828,829,62>",(c)); Inst32++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (b) != "undefined") {_RecordType("<836,837,62>",(b)); Inst34++; } } catch(e) {}
try { if (Inst37 <= 1000 && typeof (b) != "undefined") {_RecordType("<877,878,65>",(b)); Inst37++; } } catch(e) {}
b;
43;
try { if (Inst38 <= 1000 && typeof (c) != "undefined") {_RecordType("<884,885,67>",(c)); Inst38++; } } catch(e) {}
c;
43;

try { if (Inst40 <= 1000 && typeof (a) != "undefined") {_RecordType("<901,902,70>",(a)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (b) != "undefined") {_RecordType("<904,905,70>",(b)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (z) != "undefined") {_RecordType("<917,918,70>",(z)); Inst42++; } } catch(e) {}
var c = (a, b = function z() {
try { if (Inst43 <= 1000 && typeof (a) != "undefined") {_RecordType("<932,933,71>",(a)); Inst43++; } } catch(e) {}
  return a + 1;
}()) => {
try { if (Inst44 <= 1000 && typeof (b) != "undefined") {_RecordType("<958,959,73>",(b)); Inst44++; } } catch(e) {}
  return b;
};
try { if (Inst39 <= 1000 && typeof (c) != "undefined") {_RecordType("<896,897,70>",(c)); Inst39++; } } catch(e) {}

try { if (Inst45 <= 1000 && typeof (c) != "undefined") {_RecordType("<965,966,76>",(c)); Inst45++; } } catch(e) {}
c(314);
315;

// http://crbug.com/898076
(function () {
  class foo {}
try { if (Inst46 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1029,1032,81>",(foo)); Inst46++; } } catch(e) {}

  ;
}); // Don't call IIFE so that it is compiled during idle time
// http://crbug.com/900535


(function () {
  "use asm";

try { if (Inst47 <= 1000 && typeof (bar) != "undefined") {_RecordType("<1173,1176,91>",(bar)); Inst47++; } } catch(e) {}
  function bar(i, j) {
try { if (Inst48 <= 1000 && typeof (i) != "undefined") {_RecordType("<1177,1178,91>",(i)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (j) != "undefined") {_RecordType("<1180,1181,91>",(j)); Inst49++; } } catch(e) {}
try { if (Inst51 <= 1000 && typeof (i) != "undefined") {_RecordType("<1193,1194,92>",(i)); Inst51++; } } catch(e) {}
    i = i | 0;
try { if (Inst50 <= 1000 && typeof (i) != "undefined") {_RecordType("<1189,1190,92>",(i)); Inst50++; } } catch(e) {}
try { if (Inst53 <= 1000 && typeof (j) != "undefined") {_RecordType("<1208,1209,93>",(j)); Inst53++; } } catch(e) {}
    j = j | 0;
try { if (Inst52 <= 1000 && typeof (j) != "undefined") {_RecordType("<1204,1205,93>",(j)); Inst52++; } } catch(e) {}
  }

try { if (Inst54 <= 1000 && typeof (bar) != "undefined") {_RecordType("<1240,1243,97>",(bar)); Inst54++; } } catch(e) {}
  return {
    bar: bar
  };
}); // Don't call IIFE so that it is compiled during idle time

