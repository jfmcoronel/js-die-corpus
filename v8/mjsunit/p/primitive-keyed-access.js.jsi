var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2015 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
try { if (Inst0 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<167,188,4>",(Object.defineProperty)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (Object) != "undefined") {_RecordType("<167,173,4>",(Object)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Number.prototype) != "undefined") {_RecordType("<189,205,4>",(Number.prototype)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Number) != "undefined") {_RecordType("<189,195,4>",(Number)); Inst3++; } } catch(e) {}
Object.defineProperty(Number.prototype, "0", {
  set: function (v) {
try { if (Inst4 <= 1000 && typeof (v) != "undefined") {_RecordType("<231,232,5>",(v)); Inst4++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (v) != "undefined") {_RecordType("<246,247,6>",(v)); Inst6++; } } catch(e) {}
    set = v;
try { if (Inst5 <= 1000 && typeof (set) != "undefined") {_RecordType("<240,243,6>",(set)); Inst5++; } } catch(e) {}
  }
});
try { if (Inst7 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<257,278,9>",(Object.defineProperty)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Object) != "undefined") {_RecordType("<257,263,9>",(Object)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (String.prototype) != "undefined") {_RecordType("<279,295,9>",(String.prototype)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (String) != "undefined") {_RecordType("<279,285,9>",(String)); Inst10++; } } catch(e) {}
Object.defineProperty(String.prototype, "0", {
  set: function (v) {
try { if (Inst11 <= 1000 && typeof (v) != "undefined") {_RecordType("<321,322,10>",(v)); Inst11++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (v) != "undefined") {_RecordType("<336,337,11>",(v)); Inst13++; } } catch(e) {}
    set = v;
try { if (Inst12 <= 1000 && typeof (set) != "undefined") {_RecordType("<330,333,11>",(set)); Inst12++; } } catch(e) {}
  }
});
try { if (Inst14 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<347,368,14>",(Object.defineProperty)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Object) != "undefined") {_RecordType("<347,353,14>",(Object)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (String.prototype) != "undefined") {_RecordType("<369,385,14>",(String.prototype)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (String) != "undefined") {_RecordType("<369,375,14>",(String)); Inst17++; } } catch(e) {}
Object.defineProperty(String.prototype, "3", {
  set: function (v) {
try { if (Inst18 <= 1000 && typeof (v) != "undefined") {_RecordType("<411,412,15>",(v)); Inst18++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (v) != "undefined") {_RecordType("<426,427,16>",(v)); Inst20++; } } catch(e) {}
    set = v;
try { if (Inst19 <= 1000 && typeof (set) != "undefined") {_RecordType("<420,423,16>",(set)); Inst19++; } } catch(e) {}
  }
});
var set;
try { if (Inst21 <= 1000 && typeof (set) != "undefined") {_RecordType("<441,444,19>",(set)); Inst21++; } } catch(e) {}
var n = 1;
try { if (Inst22 <= 1000 && typeof (n) != "undefined") {_RecordType("<450,451,20>",(n)); Inst22++; } } catch(e) {}
set = 0;
try { if (Inst23 <= 1000 && typeof (set) != "undefined") {_RecordType("<457,460,21>",(set)); Inst23++; } } catch(e) {}
n[0] = 100;
try { if (Inst24 <= 1000 && typeof (n[0]) != "undefined") {_RecordType("<466,470,22>",(n[0])); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (n) != "undefined") {_RecordType("<466,467,22>",(n)); Inst25++; } } catch(e) {}
100;
try { if (Inst26 <= 1000 && typeof (set) != "undefined") {_RecordType("<483,486,24>",(set)); Inst26++; } } catch(e) {}
set;
var s = "bla";
try { if (Inst27 <= 1000 && typeof (s) != "undefined") {_RecordType("<492,493,25>",(s)); Inst27++; } } catch(e) {}
s[0] = 200;
try { if (Inst28 <= 1000 && typeof (s[0]) != "undefined") {_RecordType("<503,507,26>",(s[0])); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (s) != "undefined") {_RecordType("<503,504,26>",(s)); Inst29++; } } catch(e) {}
100;
try { if (Inst30 <= 1000 && typeof (set) != "undefined") {_RecordType("<520,523,28>",(set)); Inst30++; } } catch(e) {}
set;
s[3] = 300;
try { if (Inst31 <= 1000 && typeof (s[3]) != "undefined") {_RecordType("<525,529,29>",(s[3])); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (s) != "undefined") {_RecordType("<525,526,29>",(s)); Inst32++; } } catch(e) {}
300;
try { if (Inst33 <= 1000 && typeof (set) != "undefined") {_RecordType("<542,545,31>",(set)); Inst33++; } } catch(e) {}
set;

(function () {
  "use strict";

  var o = "123";
try { if (Inst34 <= 1000 && typeof (o) != "undefined") {_RecordType("<586,587,36>",(o)); Inst34++; } } catch(e) {}
  o[1] = 10;
try { if (Inst35 <= 1000 && typeof (o[1]) != "undefined") {_RecordType("<599,603,37>",(o[1])); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (o) != "undefined") {_RecordType("<599,600,37>",(o)); Inst36++; } } catch(e) {}
})();

(function () {
  "use strict";

  var o = "";
try { if (Inst37 <= 1000 && typeof (o) != "undefined") {_RecordType("<655,656,43>",(o)); Inst37++; } } catch(e) {}
  o[1] = 10;
try { if (Inst38 <= 1000 && typeof (o[1]) != "undefined") {_RecordType("<665,669,44>",(o[1])); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (o) != "undefined") {_RecordType("<665,666,44>",(o)); Inst39++; } } catch(e) {}
})();

(function () {
  "use strict";

  var o = 1;
try { if (Inst40 <= 1000 && typeof (o) != "undefined") {_RecordType("<721,722,50>",(o)); Inst40++; } } catch(e) {}
  o[1] = 10;
try { if (Inst41 <= 1000 && typeof (o[1]) != "undefined") {_RecordType("<730,734,51>",(o[1])); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (o) != "undefined") {_RecordType("<730,731,51>",(o)); Inst42++; } } catch(e) {}
})();

(function () {
  "use strict";

try { if (Inst44 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<792,798,57>",(Symbol)); Inst44++; } } catch(e) {}
  var sym = Symbol('66');
try { if (Inst43 <= 1000 && typeof (sym) != "undefined") {_RecordType("<786,789,57>",(sym)); Inst43++; } } catch(e) {}
  sym.a = 0;
try { if (Inst45 <= 1000 && typeof (sym.a) != "undefined") {_RecordType("<808,813,58>",(sym.a)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (sym) != "undefined") {_RecordType("<808,811,58>",(sym)); Inst46++; } } catch(e) {}
})();

(function () {
  "use strict";

try { if (Inst48 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<870,876,64>",(Symbol)); Inst48++; } } catch(e) {}
  var sym = Symbol('66');
try { if (Inst47 <= 1000 && typeof (sym) != "undefined") {_RecordType("<864,867,64>",(sym)); Inst47++; } } catch(e) {}
  sym['a' + 'b'] = 0;
try { if (Inst49 <= 1000 && typeof (sym['a' + 'b']) != "undefined") {_RecordType("<886,900,65>",(sym['a' + 'b'])); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (sym) != "undefined") {_RecordType("<886,889,65>",(sym)); Inst50++; } } catch(e) {}
})();

(function () {
  "use strict";

try { if (Inst52 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<957,963,71>",(Symbol)); Inst52++; } } catch(e) {}
  var sym = Symbol('66');
try { if (Inst51 <= 1000 && typeof (sym) != "undefined") {_RecordType("<951,954,71>",(sym)); Inst51++; } } catch(e) {}
  sym[62] = 0;
try { if (Inst53 <= 1000 && typeof (sym[62]) != "undefined") {_RecordType("<973,980,72>",(sym[62])); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (sym) != "undefined") {_RecordType("<973,976,72>",(sym)); Inst54++; } } catch(e) {}
})();

(function () {
  "use strict";

  var o = "bla";
try { if (Inst55 <= 1000 && typeof (o) != "undefined") {_RecordType("<1031,1032,78>",(o)); Inst55++; } } catch(e) {}
  o["0"] = 1;
try { if (Inst56 <= 1000 && typeof (o["0"]) != "undefined") {_RecordType("<1044,1050,79>",(o["0"])); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (o) != "undefined") {_RecordType("<1044,1045,79>",(o)); Inst57++; } } catch(e) {}
})();

