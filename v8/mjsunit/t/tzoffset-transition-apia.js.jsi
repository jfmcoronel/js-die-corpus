var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2018 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --icu-timezone-data
// Environment Variables: TZ=Pacific/Apia
// https://www.timeanddate.com/time/zone/samoa/apia
// 2011-09-24T03:00 : UTC-11 => UTC-10
try { if (Inst0 <= 1000 && typeof (Date) != "undefined") {_RecordType("<334,338,8>",(Date)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (Date.UTC) != "undefined") {_RecordType("<339,347,8>",(Date.UTC)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Date) != "undefined") {_RecordType("<339,343,8>",(Date)); Inst2++; } } catch(e) {}
new Date(Date.UTC(2011, 8, 24, 13, 59));
try { if (Inst3 <= 1000 && typeof (Date) != "undefined") {_RecordType("<375,379,9>",(Date)); Inst3++; } } catch(e) {}
new Date(2011, 8, 24, 2, 59);
try { if (Inst4 <= 1000 && typeof (Date) != "undefined") {_RecordType("<405,409,10>",(Date)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Date.UTC) != "undefined") {_RecordType("<410,418,10>",(Date.UTC)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Date) != "undefined") {_RecordType("<410,414,10>",(Date)); Inst6++; } } catch(e) {}
new Date(Date.UTC(2011, 8, 24, 14, 30));
try { if (Inst7 <= 1000 && typeof (Date) != "undefined") {_RecordType("<446,450,11>",(Date)); Inst7++; } } catch(e) {}
new Date(2011, 8, 24, 3, 30);
try { if (Inst8 <= 1000 && typeof (Date) != "undefined") {_RecordType("<476,480,12>",(Date)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Date.UTC) != "undefined") {_RecordType("<481,489,12>",(Date.UTC)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Date) != "undefined") {_RecordType("<481,485,12>",(Date)); Inst10++; } } catch(e) {}
new Date(Date.UTC(2011, 8, 24, 14));
try { if (Inst11 <= 1000 && typeof (Date) != "undefined") {_RecordType("<513,517,13>",(Date)); Inst11++; } } catch(e) {}
new Date(2011, 8, 24, 4);
try { if (Inst12 <= 1000 && typeof (Date) != "undefined") {_RecordType("<539,543,14>",(Date)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Date.UTC) != "undefined") {_RecordType("<544,552,14>",(Date.UTC)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Date) != "undefined") {_RecordType("<544,548,14>",(Date)); Inst14++; } } catch(e) {}
new Date(Date.UTC(2011, 8, 24, 14, 30));
try { if (Inst15 <= 1000 && typeof (Date) != "undefined") {_RecordType("<580,584,15>",(Date)); Inst15++; } } catch(e) {}
new Date(2011, 8, 24, 4, 30);
try { if (Inst16 <= 1000 && typeof (new Date(2011, 8, 24, 4, 30).getTimezoneOffset) != "undefined") {_RecordType("<606,652,16>",(new Date(2011, 8, 24, 4, 30).getTimezoneOffset)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Date) != "undefined") {_RecordType("<610,614,16>",(Date)); Inst17++; } } catch(e) {}
new Date(2011, 8, 24, 4, 30).getTimezoneOffset();
try { if (Inst18 <= 1000 && typeof (new Date(2011, 8, 24, 3, 30).getTimezoneOffset) != "undefined") {_RecordType("<656,702,17>",(new Date(2011, 8, 24, 3, 30).getTimezoneOffset)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Date) != "undefined") {_RecordType("<660,664,17>",(Date)); Inst19++; } } catch(e) {}
new Date(2011, 8, 24, 3, 30).getTimezoneOffset();
try { if (Inst20 <= 1000 && typeof (Date) != "undefined") {_RecordType("<710,714,18>",(Date)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Date.UTC) != "undefined") {_RecordType("<715,723,18>",(Date.UTC)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Date) != "undefined") {_RecordType("<715,719,18>",(Date)); Inst22++; } } catch(e) {}
new Date(Date.UTC(2011, 11, 30, 9, 59));
try { if (Inst23 <= 1000 && typeof (Date) != "undefined") {_RecordType("<751,755,19>",(Date)); Inst23++; } } catch(e) {}
new Date(2011, 11, 29, 23, 59);

for (var h = 0; h < 24; ++h) {
try { if (Inst24 <= 1000 && typeof (h) != "undefined") {_RecordType("<789,790,21>",(h)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (h) != "undefined") {_RecordType("<796,797,21>",(h)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (h) != "undefined") {_RecordType("<806,807,21>",(h)); Inst26++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (Date) != "undefined") {_RecordType("<817,821,22>",(Date)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (Date.UTC) != "undefined") {_RecordType("<822,830,22>",(Date.UTC)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (Date) != "undefined") {_RecordType("<822,826,22>",(Date)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (h) != "undefined") {_RecordType("<845,846,22>",(h)); Inst30++; } } catch(e) {}
  new Date(Date.UTC(2011, 11, 30, h + 10));
try { if (Inst31 <= 1000 && typeof (Date) != "undefined") {_RecordType("<861,865,23>",(Date)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (h) != "undefined") {_RecordType("<880,881,23>",(h)); Inst32++; } } catch(e) {}
  new Date(2011, 11, 30, h);
try { if (Inst33 <= 1000 && typeof (Date) != "undefined") {_RecordType("<890,894,24>",(Date)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (Date.UTC) != "undefined") {_RecordType("<895,903,24>",(Date.UTC)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (Date) != "undefined") {_RecordType("<895,899,24>",(Date)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (h) != "undefined") {_RecordType("<918,919,24>",(h)); Inst36++; } } catch(e) {}
  new Date(Date.UTC(2011, 11, 30, h + 10, 30));
try { if (Inst37 <= 1000 && typeof (Date) != "undefined") {_RecordType("<938,942,25>",(Date)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (h) != "undefined") {_RecordType("<957,958,25>",(h)); Inst38++; } } catch(e) {}
  new Date(2011, 11, 30, h, 30);
try { if (Inst39 <= 1000 && typeof (Date) != "undefined") {_RecordType("<971,975,26>",(Date)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (Date.UTC) != "undefined") {_RecordType("<976,984,26>",(Date.UTC)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (Date) != "undefined") {_RecordType("<976,980,26>",(Date)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (h) != "undefined") {_RecordType("<999,1000,26>",(h)); Inst42++; } } catch(e) {}
  new Date(Date.UTC(2011, 11, 30, h + 10));
try { if (Inst43 <= 1000 && typeof (Date) != "undefined") {_RecordType("<1015,1019,27>",(Date)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (h) != "undefined") {_RecordType("<1034,1035,27>",(h)); Inst44++; } } catch(e) {}
  new Date(2011, 11, 31, h);
try { if (Inst45 <= 1000 && typeof (Date) != "undefined") {_RecordType("<1044,1048,28>",(Date)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (Date.UTC) != "undefined") {_RecordType("<1049,1057,28>",(Date.UTC)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (Date) != "undefined") {_RecordType("<1049,1053,28>",(Date)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (h) != "undefined") {_RecordType("<1072,1073,28>",(h)); Inst48++; } } catch(e) {}
  new Date(Date.UTC(2011, 11, 30, h + 10, 30));
try { if (Inst49 <= 1000 && typeof (Date) != "undefined") {_RecordType("<1092,1096,29>",(Date)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (h) != "undefined") {_RecordType("<1111,1112,29>",(h)); Inst50++; } } catch(e) {}
  new Date(2011, 11, 31, h, 30);
}

try { if (Inst51 <= 1000 && typeof (Date) != "undefined") {_RecordType("<1126,1130,32>",(Date)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (Date.UTC) != "undefined") {_RecordType("<1131,1139,32>",(Date.UTC)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (Date) != "undefined") {_RecordType("<1131,1135,32>",(Date)); Inst53++; } } catch(e) {}
new Date(Date.UTC(2011, 11, 31, 10));
try { if (Inst54 <= 1000 && typeof (Date) != "undefined") {_RecordType("<1164,1168,33>",(Date)); Inst54++; } } catch(e) {}
new Date(2012, 0, 1, 0);
try { if (Inst55 <= 1000 && typeof (Date) != "undefined") {_RecordType("<1189,1193,34>",(Date)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (Date.UTC) != "undefined") {_RecordType("<1194,1202,34>",(Date.UTC)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (Date) != "undefined") {_RecordType("<1194,1198,34>",(Date)); Inst57++; } } catch(e) {}
new Date(Date.UTC(2012, 2, 31, 13));
try { if (Inst58 <= 1000 && typeof (Date) != "undefined") {_RecordType("<1226,1230,35>",(Date)); Inst58++; } } catch(e) {}
new Date(2012, 3, 1, 3);
try { if (Inst59 <= 1000 && typeof (Date) != "undefined") {_RecordType("<1251,1255,36>",(Date)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (Date.UTC) != "undefined") {_RecordType("<1256,1264,36>",(Date.UTC)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (Date) != "undefined") {_RecordType("<1256,1260,36>",(Date)); Inst61++; } } catch(e) {}
new Date(Date.UTC(2012, 2, 31, 13, 30));
try { if (Inst62 <= 1000 && typeof (Date) != "undefined") {_RecordType("<1292,1296,37>",(Date)); Inst62++; } } catch(e) {}
new Date(2012, 3, 1, 3, 30);
try { if (Inst63 <= 1000 && typeof (Date) != "undefined") {_RecordType("<1321,1325,38>",(Date)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (Date.UTC) != "undefined") {_RecordType("<1326,1334,38>",(Date.UTC)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (Date) != "undefined") {_RecordType("<1326,1330,38>",(Date)); Inst65++; } } catch(e) {}
new Date(Date.UTC(2012, 2, 31, 13, 59));
try { if (Inst66 <= 1000 && typeof (Date) != "undefined") {_RecordType("<1362,1366,39>",(Date)); Inst66++; } } catch(e) {}
new Date(2012, 3, 1, 3, 59);
try { if (Inst67 <= 1000 && typeof (Date) != "undefined") {_RecordType("<1391,1395,40>",(Date)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (Date.UTC) != "undefined") {_RecordType("<1396,1404,40>",(Date.UTC)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (Date) != "undefined") {_RecordType("<1396,1400,40>",(Date)); Inst69++; } } catch(e) {}
new Date(Date.UTC(2012, 2, 31, 15));
try { if (Inst70 <= 1000 && typeof (Date) != "undefined") {_RecordType("<1428,1432,41>",(Date)); Inst70++; } } catch(e) {}
new Date(2012, 3, 1, 4);

