var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2011 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// Flags: --allow-natives-syntax
// This is a regression test for overlapping key and value registers.
try { if (Inst1 <= 1000 && typeof (Array) != "undefined") {_RecordType("<1713,1718,29>",(Array)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Int8Array) != "undefined") {_RecordType("<1720,1729,29>",(Int8Array)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Uint8Array) != "undefined") {_RecordType("<1731,1741,29>",(Uint8Array)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Int16Array) != "undefined") {_RecordType("<1743,1753,29>",(Int16Array)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Uint16Array) != "undefined") {_RecordType("<1755,1766,29>",(Uint16Array)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Int32Array) != "undefined") {_RecordType("<1768,1778,29>",(Int32Array)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Uint32Array) != "undefined") {_RecordType("<1780,1791,29>",(Uint32Array)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Uint8ClampedArray) != "undefined") {_RecordType("<1793,1810,29>",(Uint8ClampedArray)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Float32Array) != "undefined") {_RecordType("<1812,1824,29>",(Float32Array)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Float64Array) != "undefined") {_RecordType("<1826,1838,29>",(Float64Array)); Inst10++; } } catch(e) {}
var types = [Array, Int8Array, Uint8Array, Int16Array, Uint16Array, Int32Array, Uint32Array, Uint8ClampedArray, Float32Array, Float64Array];
try { if (Inst0 <= 1000 && typeof (types) != "undefined") {_RecordType("<1704,1709,29>",(types)); Inst0++; } } catch(e) {}
var results1 = [-2, -2, 254, -2, 65534, -2, 4294967294, 0, -2, -2];
try { if (Inst11 <= 1000 && typeof (results1) != "undefined") {_RecordType("<1845,1853,30>",(results1)); Inst11++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<1925,1934,31>",(undefined)); Inst13++; } } catch(e) {}
var results2 = [undefined, -1, 255, -1, 65535, -1, 4294967295, 0, -1, -1];
try { if (Inst12 <= 1000 && typeof (results2) != "undefined") {_RecordType("<1913,1921,31>",(results2)); Inst12++; } } catch(e) {}
var results3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
try { if (Inst14 <= 1000 && typeof (results3) != "undefined") {_RecordType("<1988,1996,32>",(results3)); Inst14++; } } catch(e) {}
var results4 = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
try { if (Inst15 <= 1000 && typeof (results4) != "undefined") {_RecordType("<2035,2043,33>",(results4)); Inst15++; } } catch(e) {}
const kElementCount = 40;
try { if (Inst16 <= 1000 && typeof (kElementCount) != "undefined") {_RecordType("<2084,2097,34>",(kElementCount)); Inst16++; } } catch(e) {}

try { if (Inst17 <= 1000 && typeof (do_slice) != "undefined") {_RecordType("<2114,2122,36>",(do_slice)); Inst17++; } } catch(e) {}
function do_slice(a) {
try { if (Inst18 <= 1000 && typeof (a) != "undefined") {_RecordType("<2123,2124,36>",(a)); Inst18++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (Array.prototype.slice.call) != "undefined") {_RecordType("<2137,2163,37>",(Array.prototype.slice.call)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (Array.prototype.slice) != "undefined") {_RecordType("<2137,2158,37>",(Array.prototype.slice)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<2137,2152,37>",(Array.prototype)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Array) != "undefined") {_RecordType("<2137,2142,37>",(Array)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (a) != "undefined") {_RecordType("<2164,2165,37>",(a)); Inst23++; } } catch(e) {}
  return Array.prototype.slice.call(a, 4, 8);
}

for (var t = 0; t < types.length; t++) {
try { if (Inst24 <= 1000 && typeof (t) != "undefined") {_RecordType("<2186,2187,40>",(t)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (t) != "undefined") {_RecordType("<2193,2194,40>",(t)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (types.length) != "undefined") {_RecordType("<2197,2209,40>",(types.length)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (types) != "undefined") {_RecordType("<2197,2202,40>",(types)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (t) != "undefined") {_RecordType("<2211,2212,40>",(t)); Inst28++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (types[t]) != "undefined") {_RecordType("<2231,2239,41>",(types[t])); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (types) != "undefined") {_RecordType("<2231,2236,41>",(types)); Inst31++; } } catch(e) {}
  var type = types[t];
try { if (Inst29 <= 1000 && typeof (type) != "undefined") {_RecordType("<2224,2228,41>",(type)); Inst29++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (type) != "undefined") {_RecordType("<2255,2259,42>",(type)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (kElementCount) != "undefined") {_RecordType("<2260,2273,42>",(kElementCount)); Inst34++; } } catch(e) {}
  var a = new type(kElementCount);
try { if (Inst32 <= 1000 && typeof (a) != "undefined") {_RecordType("<2247,2248,42>",(a)); Inst32++; } } catch(e) {}

  for (var i = 0; i < kElementCount; ++i) {
try { if (Inst35 <= 1000 && typeof (i) != "undefined") {_RecordType("<2288,2289,44>",(i)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (i) != "undefined") {_RecordType("<2295,2296,44>",(i)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (kElementCount) != "undefined") {_RecordType("<2299,2312,44>",(kElementCount)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (i) != "undefined") {_RecordType("<2316,2317,44>",(i)); Inst38++; } } catch(e) {}
try { if (Inst41 <= 1000 && typeof (i) != "undefined") {_RecordType("<2332,2333,45>",(i)); Inst41++; } } catch(e) {}
    a[i] = i - 6;
try { if (Inst39 <= 1000 && typeof (a[i]) != "undefined") {_RecordType("<2325,2329,45>",(a[i])); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (a) != "undefined") {_RecordType("<2325,2326,45>",(a)); Inst40++; } } catch(e) {}
  }

try { if (Inst42 <= 1000 && typeof (a[5]) != "undefined") {_RecordType("<2353,2357,48>",(a[5])); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (a) != "undefined") {_RecordType("<2353,2354,48>",(a)); Inst43++; } } catch(e) {}
  delete a[5];
try { if (Inst45 <= 1000 && typeof (do_slice) != "undefined") {_RecordType("<2374,2382,49>",(do_slice)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (a) != "undefined") {_RecordType("<2383,2384,49>",(a)); Inst46++; } } catch(e) {}
  var sliced = do_slice(a);
try { if (Inst44 <= 1000 && typeof (sliced) != "undefined") {_RecordType("<2365,2371,49>",(sliced)); Inst44++; } } catch(e) {}
try { if (Inst47 <= 1000 && typeof (results1[t]) != "undefined") {_RecordType("<2389,2400,50>",(results1[t])); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (results1) != "undefined") {_RecordType("<2389,2397,50>",(results1)); Inst48++; } } catch(e) {}
  results1[t];
try { if (Inst49 <= 1000 && typeof (sliced[0]) != "undefined") {_RecordType("<2404,2413,51>",(sliced[0])); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (sliced) != "undefined") {_RecordType("<2404,2410,51>",(sliced)); Inst50++; } } catch(e) {}
  sliced[0];
try { if (Inst51 <= 1000 && typeof (results2[t]) != "undefined") {_RecordType("<2417,2428,52>",(results2[t])); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (results2) != "undefined") {_RecordType("<2417,2425,52>",(results2)); Inst52++; } } catch(e) {}
  results2[t];
try { if (Inst53 <= 1000 && typeof (sliced[1]) != "undefined") {_RecordType("<2432,2441,53>",(sliced[1])); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (sliced) != "undefined") {_RecordType("<2432,2438,53>",(sliced)); Inst54++; } } catch(e) {}
  sliced[1];
try { if (Inst55 <= 1000 && typeof (results3[t]) != "undefined") {_RecordType("<2445,2456,54>",(results3[t])); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (results3) != "undefined") {_RecordType("<2445,2453,54>",(results3)); Inst56++; } } catch(e) {}
  results3[t];
try { if (Inst57 <= 1000 && typeof (sliced[2]) != "undefined") {_RecordType("<2460,2469,55>",(sliced[2])); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (sliced) != "undefined") {_RecordType("<2460,2466,55>",(sliced)); Inst58++; } } catch(e) {}
  sliced[2];
try { if (Inst59 <= 1000 && typeof (results4[t]) != "undefined") {_RecordType("<2473,2484,56>",(results4[t])); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (results4) != "undefined") {_RecordType("<2473,2481,56>",(results4)); Inst60++; } } catch(e) {}
  results4[t];
try { if (Inst61 <= 1000 && typeof (sliced[3]) != "undefined") {_RecordType("<2488,2497,57>",(sliced[3])); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (sliced) != "undefined") {_RecordType("<2488,2494,57>",(sliced)); Inst62++; } } catch(e) {}
  sliced[3];
}

