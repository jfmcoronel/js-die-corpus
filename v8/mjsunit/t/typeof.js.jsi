var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2008 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
'use strict'; // The type of a regular expression should be 'object', including in
// the context of string equality comparisons.

{
try { if (Inst1 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<316,322,8>",(RegExp)); Inst1++; } } catch(e) {}
  const r = new RegExp();
try { if (Inst0 <= 1000 && typeof (r) != "undefined") {_RecordType("<308,309,8>",(r)); Inst0++; } } catch(e) {}
  'object';
try { if (Inst2 <= 1000 && typeof (r) != "undefined") {_RecordType("<347,348,10>",(r)); Inst2++; } } catch(e) {}
  typeof r;
try { if (Inst3 <= 1000 && typeof (r) != "undefined") {_RecordType("<359,360,11>",(r)); Inst3++; } } catch(e) {}
  typeof r == 'object';
try { if (Inst4 <= 1000 && typeof (r) != "undefined") {_RecordType("<383,384,12>",(r)); Inst4++; } } catch(e) {}
  typeof r == 'function';

try { if (Inst5 <= 1000 && typeof (equals) != "undefined") {_RecordType("<412,418,14>",(equals)); Inst5++; } } catch(e) {}
  function equals(x, y) {
try { if (Inst6 <= 1000 && typeof (x) != "undefined") {_RecordType("<419,420,14>",(x)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (y) != "undefined") {_RecordType("<422,423,14>",(y)); Inst7++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (x) != "undefined") {_RecordType("<438,439,15>",(x)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (y) != "undefined") {_RecordType("<443,444,15>",(y)); Inst9++; } } catch(e) {}
    return x == y;
  }

try { if (Inst10 <= 1000 && typeof (equals) != "undefined") {_RecordType("<453,459,18>",(equals)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (r) != "undefined") {_RecordType("<477,478,18>",(r)); Inst11++; } } catch(e) {}
  equals('object', typeof r);
}
typeof null == "undefined";
'undefined';
try { if (Inst12 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<531,540,22>",(undefined)); Inst12++; } } catch(e) {}
typeof undefined;
'object';
typeof null;
'boolean';
typeof true;
'boolean';
typeof false;
'number';
typeof 42.42;
'number';
typeof 42;
'bigint';
typeof 42;
'string';
typeof '42';
'symbol';
try { if (Inst13 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<720,726,38>",(Symbol)); Inst13++; } } catch(e) {}
typeof Symbol(42);
'object';
typeof {};
'object';
typeof [];
'object';
try { if (Inst14 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<795,800,44>",(Proxy)); Inst14++; } } catch(e) {}
typeof new Proxy({}, {});
'object';
try { if (Inst15 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<831,836,46>",(Proxy)); Inst15++; } } catch(e) {}
typeof new Proxy([], {});
'function';
try { if (Inst16 <= 1000 && typeof (_) != "undefined") {_RecordType("<866,867,48>",(_)); Inst16++; } } catch(e) {}
typeof (_ => 42);
'function';
typeof function () {
  ;
};
'function';
typeof function* () {
  ;
};
'function';
typeof async function () {
  ;
};
'function';
typeof async function* () {
  ;
};
'function';
try { if (Inst17 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<1073,1078,66>",(Proxy)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (_) != "undefined") {_RecordType("<1079,1080,66>",(_)); Inst18++; } } catch(e) {}
typeof new Proxy(_ => 42, {});
'function';
typeof class {};
'function';
try { if (Inst19 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1141,1147,70>",(Object)); Inst19++; } } catch(e) {}
typeof Object;

