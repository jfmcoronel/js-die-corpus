var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2009 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// Load ConsArray implementation from <project root>/tools.
// Files: tools/consarray.js
try { if (Inst1 <= 1000 && typeof (Array) != "undefined") {_RecordType("<1701,1706,29>",(Array)); Inst1++; } } catch(e) {}
var arr1 = new Array();
try { if (Inst0 <= 1000 && typeof (arr1) != "undefined") {_RecordType("<1690,1694,29>",(arr1)); Inst0++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (arr1.atEnd) != "undefined") {_RecordType("<1710,1720,30>",(arr1.atEnd)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (arr1) != "undefined") {_RecordType("<1710,1714,30>",(arr1)); Inst3++; } } catch(e) {}
arr1.atEnd();
try { if (Inst4 <= 1000 && typeof (arr1.concat) != "undefined") {_RecordType("<1724,1735,31>",(arr1.concat)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (arr1) != "undefined") {_RecordType("<1724,1728,31>",(arr1)); Inst5++; } } catch(e) {}
arr1.concat([]);
try { if (Inst6 <= 1000 && typeof (arr1.atEnd) != "undefined") {_RecordType("<1741,1751,32>",(arr1.atEnd)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (arr1) != "undefined") {_RecordType("<1741,1745,32>",(arr1)); Inst7++; } } catch(e) {}
arr1.atEnd();
try { if (Inst8 <= 1000 && typeof (arr1.concat) != "undefined") {_RecordType("<1755,1766,33>",(arr1.concat)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (arr1) != "undefined") {_RecordType("<1755,1759,33>",(arr1)); Inst9++; } } catch(e) {}
arr1.concat([1]);
try { if (Inst10 <= 1000 && typeof (arr1.atEnd) != "undefined") {_RecordType("<1773,1783,34>",(arr1.atEnd)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (arr1) != "undefined") {_RecordType("<1773,1777,34>",(arr1)); Inst11++; } } catch(e) {}
arr1.atEnd();
1;
try { if (Inst12 <= 1000 && typeof (arr1.next) != "undefined") {_RecordType("<1790,1799,36>",(arr1.next)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (arr1) != "undefined") {_RecordType("<1790,1794,36>",(arr1)); Inst13++; } } catch(e) {}
arr1.next();
try { if (Inst14 <= 1000 && typeof (arr1.atEnd) != "undefined") {_RecordType("<1803,1813,37>",(arr1.atEnd)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (arr1) != "undefined") {_RecordType("<1803,1807,37>",(arr1)); Inst15++; } } catch(e) {}
arr1.atEnd();
try { if (Inst16 <= 1000 && typeof (arr1.concat) != "undefined") {_RecordType("<1817,1828,38>",(arr1.concat)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (arr1) != "undefined") {_RecordType("<1817,1821,38>",(arr1)); Inst17++; } } catch(e) {}
arr1.concat([2, 3, 4]);
try { if (Inst18 <= 1000 && typeof (arr1.concat) != "undefined") {_RecordType("<1841,1852,39>",(arr1.concat)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (arr1) != "undefined") {_RecordType("<1841,1845,39>",(arr1)); Inst19++; } } catch(e) {}
arr1.concat([5]);
try { if (Inst20 <= 1000 && typeof (arr1.concat) != "undefined") {_RecordType("<1859,1870,40>",(arr1.concat)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (arr1) != "undefined") {_RecordType("<1859,1863,40>",(arr1)); Inst21++; } } catch(e) {}
arr1.concat([]);
try { if (Inst22 <= 1000 && typeof (arr1.concat) != "undefined") {_RecordType("<1876,1887,41>",(arr1.concat)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (arr1) != "undefined") {_RecordType("<1876,1880,41>",(arr1)); Inst23++; } } catch(e) {}
arr1.concat([6, 7]);
try { if (Inst24 <= 1000 && typeof (arr1.atEnd) != "undefined") {_RecordType("<1897,1907,42>",(arr1.atEnd)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (arr1) != "undefined") {_RecordType("<1897,1901,42>",(arr1)); Inst25++; } } catch(e) {}
arr1.atEnd();
2;
try { if (Inst26 <= 1000 && typeof (arr1.next) != "undefined") {_RecordType("<1914,1923,44>",(arr1.next)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (arr1) != "undefined") {_RecordType("<1914,1918,44>",(arr1)); Inst27++; } } catch(e) {}
arr1.next();
try { if (Inst28 <= 1000 && typeof (arr1.atEnd) != "undefined") {_RecordType("<1927,1937,45>",(arr1.atEnd)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (arr1) != "undefined") {_RecordType("<1927,1931,45>",(arr1)); Inst29++; } } catch(e) {}
arr1.atEnd();
3;
try { if (Inst30 <= 1000 && typeof (arr1.next) != "undefined") {_RecordType("<1944,1953,47>",(arr1.next)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (arr1) != "undefined") {_RecordType("<1944,1948,47>",(arr1)); Inst31++; } } catch(e) {}
arr1.next();
try { if (Inst32 <= 1000 && typeof (arr1.atEnd) != "undefined") {_RecordType("<1957,1967,48>",(arr1.atEnd)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (arr1) != "undefined") {_RecordType("<1957,1961,48>",(arr1)); Inst33++; } } catch(e) {}
arr1.atEnd();
4;
try { if (Inst34 <= 1000 && typeof (arr1.next) != "undefined") {_RecordType("<1974,1983,50>",(arr1.next)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (arr1) != "undefined") {_RecordType("<1974,1978,50>",(arr1)); Inst35++; } } catch(e) {}
arr1.next();
try { if (Inst36 <= 1000 && typeof (arr1.atEnd) != "undefined") {_RecordType("<1987,1997,51>",(arr1.atEnd)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (arr1) != "undefined") {_RecordType("<1987,1991,51>",(arr1)); Inst37++; } } catch(e) {}
arr1.atEnd();
5;
try { if (Inst38 <= 1000 && typeof (arr1.next) != "undefined") {_RecordType("<2004,2013,53>",(arr1.next)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (arr1) != "undefined") {_RecordType("<2004,2008,53>",(arr1)); Inst39++; } } catch(e) {}
arr1.next();
try { if (Inst40 <= 1000 && typeof (arr1.atEnd) != "undefined") {_RecordType("<2017,2027,54>",(arr1.atEnd)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (arr1) != "undefined") {_RecordType("<2017,2021,54>",(arr1)); Inst41++; } } catch(e) {}
arr1.atEnd();
6;
try { if (Inst42 <= 1000 && typeof (arr1.next) != "undefined") {_RecordType("<2034,2043,56>",(arr1.next)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (arr1) != "undefined") {_RecordType("<2034,2038,56>",(arr1)); Inst43++; } } catch(e) {}
arr1.next();
try { if (Inst44 <= 1000 && typeof (arr1.atEnd) != "undefined") {_RecordType("<2047,2057,57>",(arr1.atEnd)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (arr1) != "undefined") {_RecordType("<2047,2051,57>",(arr1)); Inst45++; } } catch(e) {}
arr1.atEnd();
7;
try { if (Inst46 <= 1000 && typeof (arr1.next) != "undefined") {_RecordType("<2064,2073,59>",(arr1.next)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (arr1) != "undefined") {_RecordType("<2064,2068,59>",(arr1)); Inst47++; } } catch(e) {}
arr1.next();
try { if (Inst48 <= 1000 && typeof (arr1.atEnd) != "undefined") {_RecordType("<2077,2087,60>",(arr1.atEnd)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (arr1) != "undefined") {_RecordType("<2077,2081,60>",(arr1)); Inst49++; } } catch(e) {}
arr1.atEnd();

