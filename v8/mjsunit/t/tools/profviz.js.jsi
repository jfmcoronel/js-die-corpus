var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2009 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// Load implementations from <project root>/tools.
// Files: tools/csvparser.js tools/splaytree.js tools/codemap.js
// Files: tools/consarray.js tools/profile.js tools/profile_view.js
// Files: tools/logreader.js tools/arguments.js tools/tickprocessor.js
// Files: tools/profviz/composer.js
// Resources: test/mjsunit/tools/profviz-test.log
// Resources: test/mjsunit/tools/profviz-test.default
// Env: TEST_FILE_NAME
'string';
try { if (Inst0 <= 1000 && typeof (TEST_FILE_NAME) != "undefined") {_RecordType("<2032,2046,36>",(TEST_FILE_NAME)); Inst0++; } } catch(e) {}
typeof TEST_FILE_NAME;
try { if (Inst2 <= 1000 && typeof (TEST_FILE_NAME.lastIndexOf) != "undefined") {_RecordType("<2066,2092,37>",(TEST_FILE_NAME.lastIndexOf)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (TEST_FILE_NAME) != "undefined") {_RecordType("<2066,2080,37>",(TEST_FILE_NAME)); Inst3++; } } catch(e) {}
var path_length = TEST_FILE_NAME.lastIndexOf('/');
try { if (Inst1 <= 1000 && typeof (path_length) != "undefined") {_RecordType("<2052,2063,37>",(path_length)); Inst1++; } } catch(e) {}

try { if (Inst4 <= 1000 && typeof (path_length) != "undefined") {_RecordType("<2104,2115,39>",(path_length)); Inst4++; } } catch(e) {}
if (path_length == -1) {
try { if (Inst6 <= 1000 && typeof (TEST_FILE_NAME.lastIndexOf) != "undefined") {_RecordType("<2141,2167,40>",(TEST_FILE_NAME.lastIndexOf)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (TEST_FILE_NAME) != "undefined") {_RecordType("<2141,2155,40>",(TEST_FILE_NAME)); Inst7++; } } catch(e) {}
  path_length = TEST_FILE_NAME.lastIndexOf('\\');
try { if (Inst5 <= 1000 && typeof (path_length) != "undefined") {_RecordType("<2127,2138,40>",(path_length)); Inst5++; } } catch(e) {}
}

try { if (Inst8 <= 1000 && typeof (path_length) != "undefined") {_RecordType("<2178,2189,43>",(path_length)); Inst8++; } } catch(e) {}
path_length != -1;
try { if (Inst10 <= 1000 && typeof (TEST_FILE_NAME.substr) != "undefined") {_RecordType("<2208,2229,44>",(TEST_FILE_NAME.substr)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (TEST_FILE_NAME) != "undefined") {_RecordType("<2208,2222,44>",(TEST_FILE_NAME)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (path_length) != "undefined") {_RecordType("<2233,2244,44>",(path_length)); Inst12++; } } catch(e) {}
var path = TEST_FILE_NAME.substr(0, path_length + 1);
try { if (Inst9 <= 1000 && typeof (path) != "undefined") {_RecordType("<2201,2205,44>",(path)); Inst9++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (path) != "undefined") {_RecordType("<2268,2272,45>",(path)); Inst14++; } } catch(e) {}
var input_file = path + "profviz-test.log";
try { if (Inst13 <= 1000 && typeof (input_file) != "undefined") {_RecordType("<2255,2265,45>",(input_file)); Inst13++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (path) != "undefined") {_RecordType("<2316,2320,46>",(path)); Inst16++; } } catch(e) {}
var reference_file = path + "profviz-test.default";
try { if (Inst15 <= 1000 && typeof (reference_file) != "undefined") {_RecordType("<2299,2313,46>",(reference_file)); Inst15++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (read(input_file).split) != "undefined") {_RecordType("<2367,2389,47>",(read(input_file).split)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (read) != "undefined") {_RecordType("<2367,2371,47>",(read)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (input_file) != "undefined") {_RecordType("<2372,2382,47>",(input_file)); Inst20++; } } catch(e) {}
var content_lines = read(input_file).split("\n");
try { if (Inst17 <= 1000 && typeof (content_lines) != "undefined") {_RecordType("<2351,2364,47>",(content_lines)); Inst17++; } } catch(e) {}
var line_cursor = 0;
try { if (Inst21 <= 1000 && typeof (line_cursor) != "undefined") {_RecordType("<2401,2412,48>",(line_cursor)); Inst21++; } } catch(e) {}
var output_lines = [];
try { if (Inst22 <= 1000 && typeof (output_lines) != "undefined") {_RecordType("<2422,2434,49>",(output_lines)); Inst22++; } } catch(e) {}

try { if (Inst23 <= 1000 && typeof (input) != "undefined") {_RecordType("<2451,2456,51>",(input)); Inst23++; } } catch(e) {}
function input() {
try { if (Inst24 <= 1000 && typeof (content_lines[line_cursor++]) != "undefined") {_RecordType("<2470,2498,52>",(content_lines[line_cursor++])); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (content_lines) != "undefined") {_RecordType("<2470,2483,52>",(content_lines)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (line_cursor) != "undefined") {_RecordType("<2484,2495,52>",(line_cursor)); Inst26++; } } catch(e) {}
  return content_lines[line_cursor++];
}

try { if (Inst27 <= 1000 && typeof (output) != "undefined") {_RecordType("<2512,2518,55>",(output)); Inst27++; } } catch(e) {}
function output(line) {
try { if (Inst28 <= 1000 && typeof (line) != "undefined") {_RecordType("<2519,2523,55>",(line)); Inst28++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (output_lines.push) != "undefined") {_RecordType("<2529,2546,56>",(output_lines.push)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (output_lines) != "undefined") {_RecordType("<2529,2541,56>",(output_lines)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (line) != "undefined") {_RecordType("<2547,2551,56>",(line)); Inst31++; } } catch(e) {}
  output_lines.push(line);
}

try { if (Inst32 <= 1000 && typeof (set_range) != "undefined") {_RecordType("<2566,2575,59>",(set_range)); Inst32++; } } catch(e) {}
function set_range(start, end) {
try { if (Inst33 <= 1000 && typeof (start) != "undefined") {_RecordType("<2576,2581,59>",(start)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (end) != "undefined") {_RecordType("<2583,2586,59>",(end)); Inst34++; } } catch(e) {}
try { if (Inst36 <= 1000 && typeof (start) != "undefined") {_RecordType("<2606,2611,60>",(start)); Inst36++; } } catch(e) {}
  range_start = start;
try { if (Inst35 <= 1000 && typeof (range_start) != "undefined") {_RecordType("<2592,2603,60>",(range_start)); Inst35++; } } catch(e) {}
try { if (Inst38 <= 1000 && typeof (end) != "undefined") {_RecordType("<2627,2630,61>",(end)); Inst38++; } } catch(e) {}
  range_end = end;
try { if (Inst37 <= 1000 && typeof (range_end) != "undefined") {_RecordType("<2615,2624,61>",(range_end)); Inst37++; } } catch(e) {}
}

var distortion = 4500 / 1000000;
try { if (Inst39 <= 1000 && typeof (distortion) != "undefined") {_RecordType("<2639,2649,64>",(distortion)); Inst39++; } } catch(e) {}
var resx = 1600;
try { if (Inst40 <= 1000 && typeof (resx) != "undefined") {_RecordType("<2672,2676,65>",(resx)); Inst40++; } } catch(e) {}
var resy = 600;
try { if (Inst41 <= 1000 && typeof (resy) != "undefined") {_RecordType("<2689,2693,66>",(resy)); Inst41++; } } catch(e) {}
try { if (Inst43 <= 1000 && typeof (PlotScriptComposer) != "undefined") {_RecordType("<2715,2733,67>",(PlotScriptComposer)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (resx) != "undefined") {_RecordType("<2734,2738,67>",(resx)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (resy) != "undefined") {_RecordType("<2740,2744,67>",(resy)); Inst45++; } } catch(e) {}
var psc = new PlotScriptComposer(resx, resy);
try { if (Inst42 <= 1000 && typeof (psc) != "undefined") {_RecordType("<2705,2708,67>",(psc)); Inst42++; } } catch(e) {}
try { if (Inst46 <= 1000 && typeof (psc.collectData) != "undefined") {_RecordType("<2747,2762,68>",(psc.collectData)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (psc) != "undefined") {_RecordType("<2747,2750,68>",(psc)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (input) != "undefined") {_RecordType("<2763,2768,68>",(input)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (distortion) != "undefined") {_RecordType("<2770,2780,68>",(distortion)); Inst49++; } } catch(e) {}
psc.collectData(input, distortion);
try { if (Inst50 <= 1000 && typeof (psc.findPlotRange) != "undefined") {_RecordType("<2783,2800,69>",(psc.findPlotRange)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (psc) != "undefined") {_RecordType("<2783,2786,69>",(psc)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<2801,2810,69>",(undefined)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<2812,2821,69>",(undefined)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (set_range) != "undefined") {_RecordType("<2823,2832,69>",(set_range)); Inst54++; } } catch(e) {}
psc.findPlotRange(undefined, undefined, set_range);
try { if (Inst56 <= 1000 && typeof (psc.assembleOutput) != "undefined") {_RecordType("<2849,2867,70>",(psc.assembleOutput)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (psc) != "undefined") {_RecordType("<2849,2852,70>",(psc)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (output) != "undefined") {_RecordType("<2868,2874,70>",(output)); Inst58++; } } catch(e) {}
var objects = psc.assembleOutput(output);
try { if (Inst55 <= 1000 && typeof (objects) != "undefined") {_RecordType("<2839,2846,70>",(objects)); Inst55++; } } catch(e) {}
try { if (Inst59 <= 1000 && typeof (output) != "undefined") {_RecordType("<2877,2883,71>",(output)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (range_start) != "undefined") {_RecordType("<2898,2909,71>",(range_start)); Inst60++; } } catch(e) {}
output("# start: " + range_start);
try { if (Inst61 <= 1000 && typeof (output) != "undefined") {_RecordType("<2912,2918,72>",(output)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (range_end) != "undefined") {_RecordType("<2931,2940,72>",(range_end)); Inst62++; } } catch(e) {}
output("# end: " + range_end);
try { if (Inst63 <= 1000 && typeof (output) != "undefined") {_RecordType("<2943,2949,73>",(output)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (objects) != "undefined") {_RecordType("<2966,2973,73>",(objects)); Inst64++; } } catch(e) {}
output("# objects: " + objects);
var create_baseline = false;
try { if (Inst65 <= 1000 && typeof (create_baseline) != "undefined") {_RecordType("<2980,2995,74>",(create_baseline)); Inst65++; } } catch(e) {}

try { if (Inst66 <= 1000 && typeof (create_baseline) != "undefined") {_RecordType("<3010,3025,76>",(create_baseline)); Inst66++; } } catch(e) {}
if (create_baseline) {
try { if (Inst67 <= 1000 && typeof (print) != "undefined") {_RecordType("<3031,3036,77>",(print)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (JSON.stringify) != "undefined") {_RecordType("<3037,3051,77>",(JSON.stringify)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<3037,3041,77>",(JSON)); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (output_lines) != "undefined") {_RecordType("<3052,3064,77>",(output_lines)); Inst70++; } } catch(e) {}
  print(JSON.stringify(output_lines, null, 2));
} else {
try { if (Inst71 <= 1000 && typeof (JSON.parse) != "undefined") {_RecordType("<3088,3098,79>",(JSON.parse)); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<3088,3092,79>",(JSON)); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (read) != "undefined") {_RecordType("<3099,3103,79>",(read)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (reference_file) != "undefined") {_RecordType("<3104,3118,79>",(reference_file)); Inst74++; } } catch(e) {}
  JSON.parse(read(reference_file));
try { if (Inst75 <= 1000 && typeof (output_lines) != "undefined") {_RecordType("<3124,3136,80>",(output_lines)); Inst75++; } } catch(e) {}
  output_lines;
}

