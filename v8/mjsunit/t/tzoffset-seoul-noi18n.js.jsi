var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2018 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --no-icu-timezone-data
// Environment Variables: TZ=Asia/Seoul
// Seoul has DST (UTC+10) in 1987 and 1988.
try { if (Inst0 <= 1000 && typeof (Date) != "undefined") {_RecordType("<288,292,7>",(Date)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (Date.UTC) != "undefined") {_RecordType("<293,301,7>",(Date.UTC)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Date) != "undefined") {_RecordType("<293,297,7>",(Date)); Inst2++; } } catch(e) {}
new Date(Date.UTC(1986, 5, 22, 3));
try { if (Inst3 <= 1000 && typeof (Date) != "undefined") {_RecordType("<324,328,8>",(Date)); Inst3++; } } catch(e) {}
new Date(1986, 5, 22, 12);
try { if (Inst4 <= 1000 && typeof (Date) != "undefined") {_RecordType("<351,355,9>",(Date)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Date.UTC) != "undefined") {_RecordType("<356,364,9>",(Date.UTC)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Date) != "undefined") {_RecordType("<356,360,9>",(Date)); Inst6++; } } catch(e) {}
new Date(Date.UTC(1987, 5, 22, 2));
try { if (Inst7 <= 1000 && typeof (Date) != "undefined") {_RecordType("<387,391,10>",(Date)); Inst7++; } } catch(e) {}
new Date(1987, 5, 22, 12);
try { if (Inst8 <= 1000 && typeof (Date) != "undefined") {_RecordType("<414,418,11>",(Date)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Date.UTC) != "undefined") {_RecordType("<419,427,11>",(Date.UTC)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Date) != "undefined") {_RecordType("<419,423,11>",(Date)); Inst10++; } } catch(e) {}
new Date(Date.UTC(1987, 11, 22, 3));
try { if (Inst11 <= 1000 && typeof (Date) != "undefined") {_RecordType("<451,455,12>",(Date)); Inst11++; } } catch(e) {}
new Date(1987, 11, 22, 12);
try { if (Inst12 <= 1000 && typeof (Date) != "undefined") {_RecordType("<479,483,13>",(Date)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Date.UTC) != "undefined") {_RecordType("<484,492,13>",(Date.UTC)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Date) != "undefined") {_RecordType("<484,488,13>",(Date)); Inst14++; } } catch(e) {}
new Date(Date.UTC(1988, 5, 22, 2));
try { if (Inst15 <= 1000 && typeof (Date) != "undefined") {_RecordType("<515,519,14>",(Date)); Inst15++; } } catch(e) {}
new Date(1988, 5, 22, 12);
try { if (Inst16 <= 1000 && typeof (Date) != "undefined") {_RecordType("<542,546,15>",(Date)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Date.UTC) != "undefined") {_RecordType("<547,555,15>",(Date.UTC)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Date) != "undefined") {_RecordType("<547,551,15>",(Date)); Inst18++; } } catch(e) {}
new Date(Date.UTC(1988, 11, 22, 3));
try { if (Inst19 <= 1000 && typeof (Date) != "undefined") {_RecordType("<579,583,16>",(Date)); Inst19++; } } catch(e) {}
new Date(1988, 11, 22, 12);
try { if (Inst20 <= 1000 && typeof (Date) != "undefined") {_RecordType("<607,611,17>",(Date)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Date.UTC) != "undefined") {_RecordType("<612,620,17>",(Date.UTC)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Date) != "undefined") {_RecordType("<612,616,17>",(Date)); Inst22++; } } catch(e) {}
new Date(Date.UTC(1989, 5, 22, 3));
try { if (Inst23 <= 1000 && typeof (Date) != "undefined") {_RecordType("<643,647,18>",(Date)); Inst23++; } } catch(e) {}
new Date(1989, 5, 22, 12);

