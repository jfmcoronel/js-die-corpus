var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2018 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --icu-timezone-data
// Environment Variables: TZ=Australia/Lord_Howe
// 2017-04-02T02:00 : UTC+11 => UTC+1030
try { if (Inst0 <= 1000 && typeof (Date) != "undefined") {_RecordType("<291,295,7>",(Date)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (Date.UTC) != "undefined") {_RecordType("<296,304,7>",(Date.UTC)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Date) != "undefined") {_RecordType("<296,300,7>",(Date)); Inst2++; } } catch(e) {}
new Date(Date.UTC(2017, 3, 1, 14, 29));
try { if (Inst3 <= 1000 && typeof (Date) != "undefined") {_RecordType("<331,335,8>",(Date)); Inst3++; } } catch(e) {}
new Date(2017, 3, 2, 1, 29);
try { if (Inst4 <= 1000 && typeof (Date) != "undefined") {_RecordType("<360,364,9>",(Date)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Date.UTC) != "undefined") {_RecordType("<365,373,9>",(Date.UTC)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Date) != "undefined") {_RecordType("<365,369,9>",(Date)); Inst6++; } } catch(e) {}
new Date(Date.UTC(2017, 3, 1, 14, 30));
try { if (Inst7 <= 1000 && typeof (Date) != "undefined") {_RecordType("<400,404,10>",(Date)); Inst7++; } } catch(e) {}
new Date(2017, 3, 2, 1, 30);
try { if (Inst8 <= 1000 && typeof (Date) != "undefined") {_RecordType("<429,433,11>",(Date)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Date.UTC) != "undefined") {_RecordType("<434,442,11>",(Date.UTC)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Date) != "undefined") {_RecordType("<434,438,11>",(Date)); Inst10++; } } catch(e) {}
new Date(Date.UTC(2017, 3, 1, 14, 45));
try { if (Inst11 <= 1000 && typeof (Date) != "undefined") {_RecordType("<469,473,12>",(Date)); Inst11++; } } catch(e) {}
new Date(2017, 3, 2, 1, 45);
try { if (Inst12 <= 1000 && typeof (Date) != "undefined") {_RecordType("<498,502,13>",(Date)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Date.UTC) != "undefined") {_RecordType("<503,511,13>",(Date.UTC)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Date) != "undefined") {_RecordType("<503,507,13>",(Date)); Inst14++; } } catch(e) {}
new Date(Date.UTC(2017, 3, 1, 14, 59));
try { if (Inst15 <= 1000 && typeof (Date) != "undefined") {_RecordType("<538,542,14>",(Date)); Inst15++; } } catch(e) {}
new Date(2017, 3, 2, 1, 59);
try { if (Inst16 <= 1000 && typeof (Date) != "undefined") {_RecordType("<567,571,15>",(Date)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Date.UTC) != "undefined") {_RecordType("<572,580,15>",(Date.UTC)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Date) != "undefined") {_RecordType("<572,576,15>",(Date)); Inst18++; } } catch(e) {}
new Date(Date.UTC(2017, 3, 1, 15, 30));
try { if (Inst19 <= 1000 && typeof (Date) != "undefined") {_RecordType("<607,611,16>",(Date)); Inst19++; } } catch(e) {}
new Date(2017, 3, 2, 2);
try { if (Inst20 <= 1000 && typeof (Date) != "undefined") {_RecordType("<632,636,17>",(Date)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Date.UTC) != "undefined") {_RecordType("<637,645,17>",(Date.UTC)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Date) != "undefined") {_RecordType("<637,641,17>",(Date)); Inst22++; } } catch(e) {}
new Date(Date.UTC(2017, 3, 1, 15, 31));
try { if (Inst23 <= 1000 && typeof (Date) != "undefined") {_RecordType("<672,676,18>",(Date)); Inst23++; } } catch(e) {}
new Date(2017, 3, 2, 2, 1);
try { if (Inst24 <= 1000 && typeof (Date) != "undefined") {_RecordType("<700,704,19>",(Date)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Date.UTC) != "undefined") {_RecordType("<705,713,19>",(Date.UTC)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Date) != "undefined") {_RecordType("<705,709,19>",(Date)); Inst26++; } } catch(e) {}
new Date(Date.UTC(2017, 8, 30, 15, 29));
try { if (Inst27 <= 1000 && typeof (Date) != "undefined") {_RecordType("<741,745,20>",(Date)); Inst27++; } } catch(e) {}
new Date(2017, 9, 1, 1, 59);
try { if (Inst28 <= 1000 && typeof (Date) != "undefined") {_RecordType("<770,774,21>",(Date)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (Date.UTC) != "undefined") {_RecordType("<775,783,21>",(Date.UTC)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (Date) != "undefined") {_RecordType("<775,779,21>",(Date)); Inst30++; } } catch(e) {}
new Date(Date.UTC(2017, 8, 30, 15, 30));
try { if (Inst31 <= 1000 && typeof (Date) != "undefined") {_RecordType("<811,815,22>",(Date)); Inst31++; } } catch(e) {}
new Date(2017, 9, 1, 2);
try { if (Inst32 <= 1000 && typeof (Date) != "undefined") {_RecordType("<836,840,23>",(Date)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (Date.UTC) != "undefined") {_RecordType("<841,849,23>",(Date.UTC)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (Date) != "undefined") {_RecordType("<841,845,23>",(Date)); Inst34++; } } catch(e) {}
new Date(Date.UTC(2017, 8, 30, 15, 45));
try { if (Inst35 <= 1000 && typeof (Date) != "undefined") {_RecordType("<877,881,24>",(Date)); Inst35++; } } catch(e) {}
new Date(2017, 9, 1, 2, 15);
try { if (Inst36 <= 1000 && typeof (Date) != "undefined") {_RecordType("<906,910,25>",(Date)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (Date.UTC) != "undefined") {_RecordType("<911,919,25>",(Date.UTC)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (Date) != "undefined") {_RecordType("<911,915,25>",(Date)); Inst38++; } } catch(e) {}
new Date(Date.UTC(2017, 8, 30, 15, 30));
try { if (Inst39 <= 1000 && typeof (Date) != "undefined") {_RecordType("<947,951,26>",(Date)); Inst39++; } } catch(e) {}
new Date(2017, 9, 1, 2, 30);
try { if (Inst40 <= 1000 && typeof (Date) != "undefined") {_RecordType("<976,980,27>",(Date)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (Date.UTC) != "undefined") {_RecordType("<981,989,27>",(Date.UTC)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (Date) != "undefined") {_RecordType("<981,985,27>",(Date)); Inst42++; } } catch(e) {}
new Date(Date.UTC(2017, 8, 30, 15, 45));
try { if (Inst43 <= 1000 && typeof (Date) != "undefined") {_RecordType("<1017,1021,28>",(Date)); Inst43++; } } catch(e) {}
new Date(2017, 9, 1, 2, 45);
try { if (Inst44 <= 1000 && typeof (new Date(2017, 9, 1, 2, 45).getTimezoneOffset) != "undefined") {_RecordType("<1042,1087,29>",(new Date(2017, 9, 1, 2, 45).getTimezoneOffset)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (Date) != "undefined") {_RecordType("<1046,1050,29>",(Date)); Inst45++; } } catch(e) {}
new Date(2017, 9, 1, 2, 45).getTimezoneOffset();
try { if (Inst46 <= 1000 && typeof (new Date(2017, 9, 1, 2, 15).getTimezoneOffset) != "undefined") {_RecordType("<1091,1136,30>",(new Date(2017, 9, 1, 2, 15).getTimezoneOffset)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (Date) != "undefined") {_RecordType("<1095,1099,30>",(Date)); Inst47++; } } catch(e) {}
new Date(2017, 9, 1, 2, 15).getTimezoneOffset();

