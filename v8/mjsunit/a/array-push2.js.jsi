var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2014 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
var array = [];
try { if (Inst0 <= 1000 && typeof (array) != "undefined") {_RecordType("<171,176,4>",(array)); Inst0++; } } catch(e) {}
var v = 0;
try { if (Inst1 <= 1000 && typeof (v) != "undefined") {_RecordType("<187,188,5>",(v)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<194,215,6>",(Object.defineProperty)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Object) != "undefined") {_RecordType("<194,200,6>",(Object)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<216,231,6>",(Array.prototype)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Array) != "undefined") {_RecordType("<216,221,6>",(Array)); Inst5++; } } catch(e) {}
Object.defineProperty(Array.prototype, "0", {
  get: function () {
try { if (Inst6 <= 1000 && typeof (v) != "undefined") {_RecordType("<281,282,8>",(v)); Inst6++; } } catch(e) {}
    return "get " + v;
  },
  set: function (value) {
try { if (Inst7 <= 1000 && typeof (value) != "undefined") {_RecordType("<306,311,10>",(value)); Inst7++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (value) != "undefined") {_RecordType("<324,329,11>",(value)); Inst9++; } } catch(e) {}
    v += value;
try { if (Inst8 <= 1000 && typeof (v) != "undefined") {_RecordType("<319,320,11>",(v)); Inst8++; } } catch(e) {}
  }
});
array[0] = 10;
try { if (Inst10 <= 1000 && typeof (array[0]) != "undefined") {_RecordType("<339,347,14>",(array[0])); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (array) != "undefined") {_RecordType("<339,344,14>",(array)); Inst11++; } } catch(e) {}
0;
try { if (Inst12 <= 1000 && typeof (array.length) != "undefined") {_RecordType("<357,369,16>",(array.length)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (array) != "undefined") {_RecordType("<357,362,16>",(array)); Inst13++; } } catch(e) {}
array.length;
10;
try { if (Inst14 <= 1000 && typeof (v) != "undefined") {_RecordType("<375,376,18>",(v)); Inst14++; } } catch(e) {}
v;
"get 10";
try { if (Inst15 <= 1000 && typeof (array[0]) != "undefined") {_RecordType("<388,396,20>",(array[0])); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (array) != "undefined") {_RecordType("<388,393,20>",(array)); Inst16++; } } catch(e) {}
array[0];
try { if (Inst17 <= 1000 && typeof (array.push) != "undefined") {_RecordType("<398,408,21>",(array.push)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (array) != "undefined") {_RecordType("<398,403,21>",(array)); Inst18++; } } catch(e) {}
array.push(100);
1;
try { if (Inst19 <= 1000 && typeof (array.length) != "undefined") {_RecordType("<418,430,23>",(array.length)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (array) != "undefined") {_RecordType("<418,423,23>",(array)); Inst20++; } } catch(e) {}
array.length;
110;
try { if (Inst21 <= 1000 && typeof (v) != "undefined") {_RecordType("<437,438,25>",(v)); Inst21++; } } catch(e) {}
v;
"get 110";
try { if (Inst22 <= 1000 && typeof (array[0]) != "undefined") {_RecordType("<451,459,27>",(array[0])); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (array) != "undefined") {_RecordType("<451,456,27>",(array)); Inst23++; } } catch(e) {}
array[0];

