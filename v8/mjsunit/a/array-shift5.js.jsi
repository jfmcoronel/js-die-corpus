var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2017 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax
(function () {
try { if (Inst0 <= 1000 && typeof (doShift) != "undefined") {_RecordType("<226,233,6>",(doShift)); Inst0++; } } catch(e) {}
  function doShift(a) {
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<234,235,6>",(a)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (a.shift) != "undefined") {_RecordType("<250,257,7>",(a.shift)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (a) != "undefined") {_RecordType("<250,251,7>",(a)); Inst3++; } } catch(e) {}
    return a.shift();
  }

try { if (Inst4 <= 1000 && typeof (test) != "undefined") {_RecordType("<277,281,10>",(test)); Inst4++; } } catch(e) {}
  function test() {
    var a = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16];
try { if (Inst5 <= 1000 && typeof (a) != "undefined") {_RecordType("<294,295,11>",(a)); Inst5++; } } catch(e) {}
    0;
try { if (Inst6 <= 1000 && typeof (doShift) != "undefined") {_RecordType("<369,376,13>",(doShift)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (a) != "undefined") {_RecordType("<377,378,13>",(a)); Inst7++; } } catch(e) {}
    doShift(a);
    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16];
try { if (Inst8 <= 1000 && typeof (a) != "undefined") {_RecordType("<446,447,15>",(a)); Inst8++; } } catch(e) {}
    a;
  }

try { if (Inst9 <= 1000 && typeof (test) != "undefined") {_RecordType("<456,460,18>",(test)); Inst9++; } } catch(e) {}
  test();
try { if (Inst10 <= 1000 && typeof (test) != "undefined") {_RecordType("<466,470,19>",(test)); Inst10++; } } catch(e) {}
  test();
try { if (Inst11 <= 1000 && typeof (test) != "undefined") {_RecordType("<476,480,20>",(test)); Inst11++; } } catch(e) {}
  test();
})();

(function () {
try { if (Inst12 <= 1000 && typeof (doShift) != "undefined") {_RecordType("<517,524,24>",(doShift)); Inst12++; } } catch(e) {}
  function doShift(a) {
try { if (Inst13 <= 1000 && typeof (a) != "undefined") {_RecordType("<525,526,24>",(a)); Inst13++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (a.shift) != "undefined") {_RecordType("<541,548,25>",(a.shift)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (a) != "undefined") {_RecordType("<541,542,25>",(a)); Inst15++; } } catch(e) {}
    return a.shift();
  }

try { if (Inst16 <= 1000 && typeof (test) != "undefined") {_RecordType("<568,572,28>",(test)); Inst16++; } } catch(e) {}
  function test() {
    var a = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16.1];
try { if (Inst17 <= 1000 && typeof (a) != "undefined") {_RecordType("<585,586,29>",(a)); Inst17++; } } catch(e) {}
    0;
try { if (Inst18 <= 1000 && typeof (doShift) != "undefined") {_RecordType("<662,669,31>",(doShift)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (a) != "undefined") {_RecordType("<670,671,31>",(a)); Inst19++; } } catch(e) {}
    doShift(a);
    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16.1];
try { if (Inst20 <= 1000 && typeof (a) != "undefined") {_RecordType("<741,742,33>",(a)); Inst20++; } } catch(e) {}
    a;
  }

try { if (Inst21 <= 1000 && typeof (test) != "undefined") {_RecordType("<751,755,36>",(test)); Inst21++; } } catch(e) {}
  test();
try { if (Inst22 <= 1000 && typeof (test) != "undefined") {_RecordType("<761,765,37>",(test)); Inst22++; } } catch(e) {}
  test();
try { if (Inst23 <= 1000 && typeof (test) != "undefined") {_RecordType("<771,775,38>",(test)); Inst23++; } } catch(e) {}
  test();
})();

(function () {
try { if (Inst24 <= 1000 && typeof (doShift) != "undefined") {_RecordType("<812,819,42>",(doShift)); Inst24++; } } catch(e) {}
  function doShift(a) {
try { if (Inst25 <= 1000 && typeof (a) != "undefined") {_RecordType("<820,821,42>",(a)); Inst25++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (a.shift) != "undefined") {_RecordType("<836,843,43>",(a.shift)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (a) != "undefined") {_RecordType("<836,837,43>",(a)); Inst27++; } } catch(e) {}
    return a.shift();
  }

try { if (Inst28 <= 1000 && typeof (test) != "undefined") {_RecordType("<863,867,46>",(test)); Inst28++; } } catch(e) {}
  function test() {
    var a = [, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16.1];
try { if (Inst29 <= 1000 && typeof (a) != "undefined") {_RecordType("<880,881,47>",(a)); Inst29++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<949,958,48>",(undefined)); Inst30++; } } catch(e) {}
    undefined;
try { if (Inst31 <= 1000 && typeof (doShift) != "undefined") {_RecordType("<964,971,49>",(doShift)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (a) != "undefined") {_RecordType("<972,973,49>",(a)); Inst32++; } } catch(e) {}
    doShift(a);
    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16.1];
try { if (Inst33 <= 1000 && typeof (a) != "undefined") {_RecordType("<1043,1044,51>",(a)); Inst33++; } } catch(e) {}
    a;
  }

try { if (Inst34 <= 1000 && typeof (test) != "undefined") {_RecordType("<1053,1057,54>",(test)); Inst34++; } } catch(e) {}
  test();
try { if (Inst35 <= 1000 && typeof (test) != "undefined") {_RecordType("<1063,1067,55>",(test)); Inst35++; } } catch(e) {}
  test();
try { if (Inst36 <= 1000 && typeof (test) != "undefined") {_RecordType("<1073,1077,56>",(test)); Inst36++; } } catch(e) {}
  test();
})();

(function () {
try { if (Inst37 <= 1000 && typeof (doShift) != "undefined") {_RecordType("<1114,1121,60>",(doShift)); Inst37++; } } catch(e) {}
  function doShift(a) {
try { if (Inst38 <= 1000 && typeof (a) != "undefined") {_RecordType("<1122,1123,60>",(a)); Inst38++; } } catch(e) {}
try { if (Inst39 <= 1000 && typeof (a.shift) != "undefined") {_RecordType("<1138,1145,61>",(a.shift)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (a) != "undefined") {_RecordType("<1138,1139,61>",(a)); Inst40++; } } catch(e) {}
    return a.shift();
  }

try { if (Inst41 <= 1000 && typeof (test) != "undefined") {_RecordType("<1165,1169,64>",(test)); Inst41++; } } catch(e) {}
  function test() {
    var a = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, "16"];
try { if (Inst42 <= 1000 && typeof (a) != "undefined") {_RecordType("<1182,1183,65>",(a)); Inst42++; } } catch(e) {}
    0;
try { if (Inst43 <= 1000 && typeof (doShift) != "undefined") {_RecordType("<1259,1266,67>",(doShift)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (a) != "undefined") {_RecordType("<1267,1268,67>",(a)); Inst44++; } } catch(e) {}
    doShift(a);
    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, "16"];
try { if (Inst45 <= 1000 && typeof (a) != "undefined") {_RecordType("<1338,1339,69>",(a)); Inst45++; } } catch(e) {}
    a;
  }

try { if (Inst46 <= 1000 && typeof (test) != "undefined") {_RecordType("<1348,1352,72>",(test)); Inst46++; } } catch(e) {}
  test();
try { if (Inst47 <= 1000 && typeof (test) != "undefined") {_RecordType("<1358,1362,73>",(test)); Inst47++; } } catch(e) {}
  test();
try { if (Inst48 <= 1000 && typeof (test) != "undefined") {_RecordType("<1368,1372,74>",(test)); Inst48++; } } catch(e) {}
  test();
})();

