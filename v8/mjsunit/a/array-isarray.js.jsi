var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2015 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
try { if (Inst0 <= 1000 && typeof (Array.isArray) != "undefined") {_RecordType("<167,180,4>",(Array.isArray)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (Array) != "undefined") {_RecordType("<167,172,4>",(Array)); Inst1++; } } catch(e) {}
Array.isArray([]);
try { if (Inst2 <= 1000 && typeof (Array.isArray) != "undefined") {_RecordType("<186,199,5>",(Array.isArray)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Array) != "undefined") {_RecordType("<186,191,5>",(Array)); Inst3++; } } catch(e) {}
Array.isArray({});
try { if (Inst4 <= 1000 && typeof (Array.isArray) != "undefined") {_RecordType("<205,218,6>",(Array.isArray)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Array) != "undefined") {_RecordType("<205,210,6>",(Array)); Inst5++; } } catch(e) {}
Array.isArray(null);
try { if (Inst6 <= 1000 && typeof (Array.isArray) != "undefined") {_RecordType("<226,239,7>",(Array.isArray)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Array) != "undefined") {_RecordType("<226,231,7>",(Array)); Inst7++; } } catch(e) {}
Array.isArray(0);
try { if (Inst8 <= 1000 && typeof (Array.isArray) != "undefined") {_RecordType("<244,257,8>",(Array.isArray)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Array) != "undefined") {_RecordType("<244,249,8>",(Array)); Inst9++; } } catch(e) {}
Array.isArray(0.1);
try { if (Inst10 <= 1000 && typeof (Array.isArray) != "undefined") {_RecordType("<264,277,9>",(Array.isArray)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Array) != "undefined") {_RecordType("<264,269,9>",(Array)); Inst11++; } } catch(e) {}
Array.isArray("");
try { if (Inst12 <= 1000 && typeof (Array.isArray) != "undefined") {_RecordType("<283,296,10>",(Array.isArray)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Array) != "undefined") {_RecordType("<283,288,10>",(Array)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<297,306,10>",(undefined)); Inst14++; } } catch(e) {}
Array.isArray(undefined);
try { if (Inst15 <= 1000 && typeof (Array.isArray) != "undefined") {_RecordType("<309,322,11>",(Array.isArray)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Array) != "undefined") {_RecordType("<309,314,11>",(Array)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<327,332,11>",(Proxy)); Inst17++; } } catch(e) {}
Array.isArray(new Proxy([], {}));
try { if (Inst18 <= 1000 && typeof (Array.isArray) != "undefined") {_RecordType("<343,356,12>",(Array.isArray)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Array) != "undefined") {_RecordType("<343,348,12>",(Array)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<361,366,12>",(Proxy)); Inst20++; } } catch(e) {}
Array.isArray(new Proxy({}, {}));
try { if (Inst21 <= 1000 && typeof (Array.isArray) != "undefined") {_RecordType("<377,390,13>",(Array.isArray)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Array) != "undefined") {_RecordType("<377,382,13>",(Array)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<395,400,13>",(Proxy)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<405,410,13>",(Proxy)); Inst24++; } } catch(e) {}
Array.isArray(new Proxy(new Proxy([], {}), {}));
try { if (Inst25 <= 1000 && typeof (Array.isArray) != "undefined") {_RecordType("<426,439,14>",(Array.isArray)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Array) != "undefined") {_RecordType("<426,431,14>",(Array)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<444,449,14>",(Proxy)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<454,459,14>",(Proxy)); Inst28++; } } catch(e) {}
Array.isArray(new Proxy(new Proxy({}, {}), {}));

try { if (Inst29 <= 1000 && typeof (TestIsArrayStackOverflow) != "undefined") {_RecordType("<486,510,16>",(TestIsArrayStackOverflow)); Inst29++; } } catch(e) {}
(function TestIsArrayStackOverflow() {
try { if (Inst31 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<533,538,17>",(Proxy)); Inst31++; } } catch(e) {}
  var proxy = new Proxy([], {});
try { if (Inst30 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<521,526,17>",(proxy)); Inst30++; } } catch(e) {}

  for (var i = 0; i < 200 * 1024; i++) {
try { if (Inst32 <= 1000 && typeof (i) != "undefined") {_RecordType("<560,561,19>",(i)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (i) != "undefined") {_RecordType("<567,568,19>",(i)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (i) != "undefined") {_RecordType("<583,584,19>",(i)); Inst34++; } } catch(e) {}
try { if (Inst36 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<606,611,20>",(Proxy)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<612,617,20>",(proxy)); Inst37++; } } catch(e) {}
    proxy = new Proxy(proxy, {});
try { if (Inst35 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<594,599,20>",(proxy)); Inst35++; } } catch(e) {}
  }

try { if (Inst38 <= 1000 && typeof (Array.isArray) != "undefined") {_RecordType("<638,651,23>",(Array.isArray)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (Array) != "undefined") {_RecordType("<638,643,23>",(Array)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<652,657,23>",(proxy)); Inst40++; } } catch(e) {}
  (() => Array.isArray(proxy))();

try { if (Inst41 <= 1000 && typeof (RangeError) != "undefined") {_RecordType("<666,676,25>",(RangeError)); Inst41++; } } catch(e) {}
  RangeError;
})();

