var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2014 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax
try { if (Inst0 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<200,221,5>",(Object.defineProperty)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (Object) != "undefined") {_RecordType("<200,206,5>",(Object)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<222,237,5>",(Array.prototype)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Array) != "undefined") {_RecordType("<222,227,5>",(Array)); Inst3++; } } catch(e) {}
Object.defineProperty(Array.prototype, "1", {
  get: function () {
    return "element 1";
  },
  set: function (value) {
try { if (Inst4 <= 1000 && typeof (value) != "undefined") {_RecordType("<313,318,9>",(value)); Inst4++; } } catch(e) {}
    ;
  }
});

try { if (Inst5 <= 1000 && typeof (test) != "undefined") {_RecordType("<346,350,14>",(test)); Inst5++; } } catch(e) {}
function test(array) {
try { if (Inst6 <= 1000 && typeof (array) != "undefined") {_RecordType("<351,356,14>",(array)); Inst6++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (array.shift) != "undefined") {_RecordType("<362,373,15>",(array.shift)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (array) != "undefined") {_RecordType("<362,367,15>",(array)); Inst8++; } } catch(e) {}
  array.shift();
try { if (Inst9 <= 1000 && typeof (array) != "undefined") {_RecordType("<386,391,16>",(array)); Inst9++; } } catch(e) {}
  return array;
}

try { if (Inst11 <= 1000 && typeof (test) != "undefined") {_RecordType("<409,413,19>",(test)); Inst11++; } } catch(e) {}
var result = test(["0",, 2]);
try { if (Inst10 <= 1000 && typeof (result) != "undefined") {_RecordType("<400,406,19>",(result)); Inst10++; } } catch(e) {}
["element 1", "element 1"];
try { if (Inst12 <= 1000 && typeof (result) != "undefined") {_RecordType("<454,460,21>",(result)); Inst12++; } } catch(e) {}
result;
try { if (Inst13 <= 1000 && typeof (result.hasOwnProperty) != "undefined") {_RecordType("<462,483,22>",(result.hasOwnProperty)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (result) != "undefined") {_RecordType("<462,468,22>",(result)); Inst14++; } } catch(e) {}
result.hasOwnProperty("0");
try { if (Inst15 <= 1000 && typeof (result.hasOwnProperty) != "undefined") {_RecordType("<490,511,23>",(result.hasOwnProperty)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (result) != "undefined") {_RecordType("<490,496,23>",(result)); Inst16++; } } catch(e) {}
result.hasOwnProperty("1");
try { if (Inst18 <= 1000 && typeof (test) != "undefined") {_RecordType("<527,531,24>",(test)); Inst18++; } } catch(e) {}
result = test([{},, {}]);
try { if (Inst17 <= 1000 && typeof (result) != "undefined") {_RecordType("<518,524,24>",(result)); Inst17++; } } catch(e) {}
["element 1", "element 1"];
try { if (Inst19 <= 1000 && typeof (result) != "undefined") {_RecordType("<572,578,26>",(result)); Inst19++; } } catch(e) {}
result;
try { if (Inst20 <= 1000 && typeof (result.hasOwnProperty) != "undefined") {_RecordType("<580,601,27>",(result.hasOwnProperty)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (result) != "undefined") {_RecordType("<580,586,27>",(result)); Inst21++; } } catch(e) {}
result.hasOwnProperty("0");
try { if (Inst22 <= 1000 && typeof (result.hasOwnProperty) != "undefined") {_RecordType("<608,629,28>",(result.hasOwnProperty)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (result) != "undefined") {_RecordType("<608,614,28>",(result)); Inst23++; } } catch(e) {}
result.hasOwnProperty("1");
try { if (Inst25 <= 1000 && typeof (test) != "undefined") {_RecordType("<645,649,29>",(test)); Inst25++; } } catch(e) {}
result = test([{},, 0]);
try { if (Inst24 <= 1000 && typeof (result) != "undefined") {_RecordType("<636,642,29>",(result)); Inst24++; } } catch(e) {}
["element 1", "element 1"];
try { if (Inst26 <= 1000 && typeof (result) != "undefined") {_RecordType("<689,695,31>",(result)); Inst26++; } } catch(e) {}
result;
try { if (Inst27 <= 1000 && typeof (result.hasOwnProperty) != "undefined") {_RecordType("<697,718,32>",(result.hasOwnProperty)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (result) != "undefined") {_RecordType("<697,703,32>",(result)); Inst28++; } } catch(e) {}
result.hasOwnProperty("0");
try { if (Inst29 <= 1000 && typeof (result.hasOwnProperty) != "undefined") {_RecordType("<725,746,33>",(result.hasOwnProperty)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (result) != "undefined") {_RecordType("<725,731,33>",(result)); Inst30++; } } catch(e) {}
result.hasOwnProperty("1");

