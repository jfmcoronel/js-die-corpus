var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2011 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// Tests to verify proper arguments handling if the arguments
// variable is declared as a parameter or local variable.
try { if (Inst0 <= 1000 && typeof (e) != "undefined") {_RecordType("<1726,1727,29>",(e)); Inst0++; } } catch(e) {}
function e(a) {
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<1728,1729,29>",(a)); Inst1++; } } catch(e) {}
  9;
try { if (Inst2 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<1740,1748,31>",(a.length)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (a) != "undefined") {_RecordType("<1740,1741,31>",(a)); Inst3++; } } catch(e) {}
  a.length;
  "arguments";
try { if (Inst4 <= 1000 && typeof (a) != "undefined") {_RecordType("<1767,1768,33>",(a)); Inst4++; } } catch(e) {}
  a;
}

;
try { if (Inst5 <= 1000 && typeof (e) != "undefined") {_RecordType("<1775,1776,37>",(e)); Inst5++; } } catch(e) {}
e("arguments");

try { if (Inst6 <= 1000 && typeof (f) != "undefined") {_RecordType("<1801,1802,39>",(f)); Inst6++; } } catch(e) {}
function f(arguments) {
try { if (Inst7 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<1803,1812,39>",(arguments)); Inst7++; } } catch(e) {}
  9;
try { if (Inst8 <= 1000 && typeof (arguments.length) != "undefined") {_RecordType("<1823,1839,41>",(arguments.length)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<1823,1832,41>",(arguments)); Inst9++; } } catch(e) {}
  arguments.length;
  "arguments";
try { if (Inst10 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<1858,1867,43>",(arguments)); Inst10++; } } catch(e) {}
  arguments;
}

;
try { if (Inst11 <= 1000 && typeof (f) != "undefined") {_RecordType("<1874,1875,47>",(f)); Inst11++; } } catch(e) {}
f("arguments");

try { if (Inst12 <= 1000 && typeof (g) != "undefined") {_RecordType("<1900,1901,49>",(g)); Inst12++; } } catch(e) {}
function g(x) {
try { if (Inst13 <= 1000 && typeof (x) != "undefined") {_RecordType("<1902,1903,49>",(x)); Inst13++; } } catch(e) {}
  var arguments;
try { if (Inst14 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<1913,1922,50>",(arguments)); Inst14++; } } catch(e) {}
  "arguments";
try { if (Inst15 <= 1000 && typeof (x) != "undefined") {_RecordType("<1941,1942,52>",(x)); Inst15++; } } catch(e) {}
  x;
  1;
try { if (Inst16 <= 1000 && typeof (arguments.length) != "undefined") {_RecordType("<1951,1967,54>",(arguments.length)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<1951,1960,54>",(arguments)); Inst17++; } } catch(e) {}
  arguments.length;
  "[object Arguments]";
try { if (Inst18 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<2000,2009,56>",(arguments)); Inst18++; } } catch(e) {}
  '' + arguments;
}

;
try { if (Inst19 <= 1000 && typeof (g) != "undefined") {_RecordType("<2016,2017,60>",(g)); Inst19++; } } catch(e) {}
g("arguments");

try { if (Inst20 <= 1000 && typeof (h) != "undefined") {_RecordType("<2042,2043,62>",(h)); Inst20++; } } catch(e) {}
function h(x) {
try { if (Inst21 <= 1000 && typeof (x) != "undefined") {_RecordType("<2044,2045,62>",(x)); Inst21++; } } catch(e) {}
  "arguments";
try { if (Inst22 <= 1000 && typeof (x) != "undefined") {_RecordType("<2066,2067,64>",(x)); Inst22++; } } catch(e) {}
  x;
  1;
try { if (Inst23 <= 1000 && typeof (arguments.length) != "undefined") {_RecordType("<2076,2092,66>",(arguments.length)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<2076,2085,66>",(arguments)); Inst24++; } } catch(e) {}
  arguments.length;
  "[object Arguments]";
try { if (Inst25 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<2125,2134,68>",(arguments)); Inst25++; } } catch(e) {}
  '' + arguments;
  var arguments = "foobar";
try { if (Inst26 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<2142,2151,69>",(arguments)); Inst26++; } } catch(e) {}
  "arguments";
try { if (Inst27 <= 1000 && typeof (x) != "undefined") {_RecordType("<2181,2182,71>",(x)); Inst27++; } } catch(e) {}
  x;
  6;
try { if (Inst28 <= 1000 && typeof (arguments.length) != "undefined") {_RecordType("<2191,2207,73>",(arguments.length)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<2191,2200,73>",(arguments)); Inst29++; } } catch(e) {}
  arguments.length;
  "foobar";
try { if (Inst30 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<2228,2237,75>",(arguments)); Inst30++; } } catch(e) {}
  '' + arguments;
}

;
try { if (Inst31 <= 1000 && typeof (h) != "undefined") {_RecordType("<2244,2245,79>",(h)); Inst31++; } } catch(e) {}
h("arguments");

