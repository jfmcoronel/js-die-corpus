var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2012 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// Flags: --allow-natives-syntax
try { if (Inst0 <= 1000 && typeof (ApplyArgumentsDeoptInReceiverMapCheck) != "undefined") {_RecordType("<1640,1677,28>",(ApplyArgumentsDeoptInReceiverMapCheck)); Inst0++; } } catch(e) {}
(function ApplyArgumentsDeoptInReceiverMapCheck() {
try { if (Inst1 <= 1000 && typeof (invoker) != "undefined") {_RecordType("<1693,1700,29>",(invoker)); Inst1++; } } catch(e) {}
  function invoker(h, r) {
try { if (Inst2 <= 1000 && typeof (h) != "undefined") {_RecordType("<1701,1702,29>",(h)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (r) != "undefined") {_RecordType("<1704,1705,29>",(r)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (XXXXX) != "undefined") {_RecordType("<1729,1734,30>",(XXXXX)); Inst4++; } } catch(e) {}
    return function XXXXX() {
try { if (Inst6 <= 1000 && typeof (h.apply) != "undefined") {_RecordType("<1755,1762,31>",(h.apply)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (h) != "undefined") {_RecordType("<1755,1756,31>",(h)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (r) != "undefined") {_RecordType("<1782,1783,32>",(r)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<1799,1808,33>",(arguments)); Inst9++; } } catch(e) {}
      var res = h.apply({
        fffffff: r(this)
      }, arguments);
try { if (Inst5 <= 1000 && typeof (res) != "undefined") {_RecordType("<1749,1752,31>",(res)); Inst5++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (res) != "undefined") {_RecordType("<1824,1827,34>",(res)); Inst10++; } } catch(e) {}
      return res;
    };
  }

try { if (Inst12 <= 1000 && typeof (invoker) != "undefined") {_RecordType("<1851,1858,38>",(invoker)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (m) != "undefined") {_RecordType("<1859,1860,38>",(m)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (selfOf) != "undefined") {_RecordType("<1862,1868,38>",(selfOf)); Inst14++; } } catch(e) {}
  var y = invoker(m, selfOf);
try { if (Inst11 <= 1000 && typeof (y) != "undefined") {_RecordType("<1847,1848,38>",(y)); Inst11++; } } catch(e) {}

try { if (Inst15 <= 1000 && typeof (selfOf) != "undefined") {_RecordType("<1883,1889,40>",(selfOf)); Inst15++; } } catch(e) {}
  function selfOf(c) {
try { if (Inst16 <= 1000 && typeof (c) != "undefined") {_RecordType("<1890,1891,40>",(c)); Inst16++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (c.self_) != "undefined") {_RecordType("<1911,1918,41>",(c.self_)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (c) != "undefined") {_RecordType("<1911,1912,41>",(c)); Inst19++; } } catch(e) {}
    var sssss = c.self_;
try { if (Inst17 <= 1000 && typeof (sssss) != "undefined") {_RecordType("<1903,1908,41>",(sssss)); Inst17++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (sssss) != "undefined") {_RecordType("<1931,1936,42>",(sssss)); Inst20++; } } catch(e) {}
    return sssss;
  }

try { if (Inst21 <= 1000 && typeof (m) != "undefined") {_RecordType("<1954,1955,45>",(m)); Inst21++; } } catch(e) {}
  function m() {
try { if (Inst22 <= 1000 && typeof (this.fffffff) != "undefined") {_RecordType("<1971,1983,46>",(this.fffffff)); Inst22++; } } catch(e) {}
    return this.fffffff;
  }

try { if (Inst23 <= 1000 && typeof (y.apply) != "undefined") {_RecordType("<1992,1999,49>",(y.apply)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (y) != "undefined") {_RecordType("<1992,1993,49>",(y)); Inst24++; } } catch(e) {}
  y.apply({
    self_: 3
  });
try { if (Inst25 <= 1000 && typeof (y.apply) != "undefined") {_RecordType("<2023,2030,52>",(y.apply)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (y) != "undefined") {_RecordType("<2023,2024,52>",(y)); Inst26++; } } catch(e) {}
  y.apply({
    self_: 3
  });
try { if (Inst27 <= 1000 && typeof (y.apply) != "undefined") {_RecordType("<2054,2061,55>",(y.apply)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (y) != "undefined") {_RecordType("<2054,2055,55>",(y)); Inst28++; } } catch(e) {}
  y.apply({
    self_: 3
  });
try { if (Inst29 <= 1000 && typeof (y.apply) != "undefined") {_RecordType("<2085,2092,58>",(y.apply)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (y) != "undefined") {_RecordType("<2085,2086,58>",(y)); Inst30++; } } catch(e) {}
  y.apply({
    self_: 3,
    uuu: 4
  });
  3;
})();

try { if (Inst31 <= 1000 && typeof (ApplyArgumentsDeoptInReceiverExplicit) != "undefined") {_RecordType("<2148,2185,65>",(ApplyArgumentsDeoptInReceiverExplicit)); Inst31++; } } catch(e) {}
(function ApplyArgumentsDeoptInReceiverExplicit() {
try { if (Inst32 <= 1000 && typeof (f) != "undefined") {_RecordType("<2201,2202,66>",(f)); Inst32++; } } catch(e) {}
  function f() {
    return this + 21;
  }

try { if (Inst33 <= 1000 && typeof (deopt) != "undefined") {_RecordType("<2245,2250,70>",(deopt)); Inst33++; } } catch(e) {}
  function deopt() {
    return 21;
  }

try { if (Inst34 <= 1000 && typeof (XXXXX) != "undefined") {_RecordType("<2286,2291,74>",(XXXXX)); Inst34++; } } catch(e) {}
  function XXXXX() {
try { if (Inst35 <= 1000 && typeof (f.apply) != "undefined") {_RecordType("<2307,2314,75>",(f.apply)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (f) != "undefined") {_RecordType("<2307,2308,75>",(f)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (deopt) != "undefined") {_RecordType("<2315,2320,75>",(deopt)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<2324,2333,75>",(arguments)); Inst38++; } } catch(e) {}
    return f.apply(deopt(), arguments);
  }

  ;
try { if (Inst39 <= 1000 && typeof (XXXXX) != "undefined") {_RecordType("<2347,2352,79>",(XXXXX)); Inst39++; } } catch(e) {}
  XXXXX();
try { if (Inst40 <= 1000 && typeof (XXXXX) != "undefined") {_RecordType("<2358,2363,80>",(XXXXX)); Inst40++; } } catch(e) {}
  XXXXX();
try { if (Inst41 <= 1000 && typeof (XXXXX) != "undefined") {_RecordType("<2369,2374,81>",(XXXXX)); Inst41++; } } catch(e) {}
  XXXXX();
  42;
try { if (Inst42 <= 1000 && typeof (XXXXX) != "undefined") {_RecordType("<2386,2391,83>",(XXXXX)); Inst42++; } } catch(e) {}
  XXXXX();
})();

