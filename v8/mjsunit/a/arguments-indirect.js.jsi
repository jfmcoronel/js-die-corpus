var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2008 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
try { if (Inst0 <= 1000 && typeof (f1) != "undefined") {_RecordType("<1606,1608,27>",(f1)); Inst0++; } } catch(e) {}
function f1() {
try { if (Inst1 <= 1000 && typeof (g) != "undefined") {_RecordType("<1615,1616,28>",(g)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (f1) != "undefined") {_RecordType("<1617,1619,28>",(f1)); Inst2++; } } catch(e) {}
  g(f1);
}

try { if (Inst3 <= 1000 && typeof (f2) != "undefined") {_RecordType("<1634,1636,31>",(f2)); Inst3++; } } catch(e) {}
function f2(x) {
try { if (Inst4 <= 1000 && typeof (x) != "undefined") {_RecordType("<1637,1638,31>",(x)); Inst4++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<1652,1661,32>",(arguments)); Inst6++; } } catch(e) {}
  var a = arguments;
try { if (Inst5 <= 1000 && typeof (a) != "undefined") {_RecordType("<1648,1649,32>",(a)); Inst5++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (x) != "undefined") {_RecordType("<1665,1666,33>",(x)); Inst7++; } } catch(e) {}
  x++;
try { if (Inst8 <= 1000 && typeof (g) != "undefined") {_RecordType("<1672,1673,34>",(g)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (f2) != "undefined") {_RecordType("<1674,1676,34>",(f2)); Inst9++; } } catch(e) {}
  g(f2);
}

try { if (Inst10 <= 1000 && typeof (f3) != "undefined") {_RecordType("<1691,1693,37>",(f3)); Inst10++; } } catch(e) {}
function f3(x) {
try { if (Inst11 <= 1000 && typeof (x) != "undefined") {_RecordType("<1694,1695,37>",(x)); Inst11++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<1709,1718,38>",(arguments)); Inst13++; } } catch(e) {}
  var a = arguments;
try { if (Inst12 <= 1000 && typeof (a) != "undefined") {_RecordType("<1705,1706,38>",(a)); Inst12++; } } catch(e) {}

  (function () {
try { if (Inst14 <= 1000 && typeof (x) != "undefined") {_RecordType("<1742,1743,41>",(x)); Inst14++; } } catch(e) {}
    x++;
  })();

try { if (Inst15 <= 1000 && typeof (g) != "undefined") {_RecordType("<1758,1759,44>",(g)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (f3) != "undefined") {_RecordType("<1760,1762,44>",(f3)); Inst16++; } } catch(e) {}
  g(f3);
}

try { if (Inst17 <= 1000 && typeof (g) != "undefined") {_RecordType("<1777,1778,47>",(g)); Inst17++; } } catch(e) {}
function g(f) {
try { if (Inst18 <= 1000 && typeof (f) != "undefined") {_RecordType("<1779,1780,47>",(f)); Inst18++; } } catch(e) {}
  "object";
try { if (Inst19 <= 1000 && typeof (f.arguments) != "undefined") {_RecordType("<1805,1816,49>",(f.arguments)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (f) != "undefined") {_RecordType("<1805,1806,49>",(f)); Inst20++; } } catch(e) {}
  typeof f.arguments;
try { if (Inst21 <= 1000 && typeof (f.arguments) != "undefined") {_RecordType("<1820,1831,50>",(f.arguments)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (f) != "undefined") {_RecordType("<1820,1821,50>",(f)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (f.arguments) != "undefined") {_RecordType("<1836,1847,50>",(f.arguments)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (f) != "undefined") {_RecordType("<1836,1837,50>",(f)); Inst24++; } } catch(e) {}
  f.arguments === f.arguments;
  3;
try { if (Inst25 <= 1000 && typeof (f.arguments.length) != "undefined") {_RecordType("<1856,1874,52>",(f.arguments.length)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (f.arguments) != "undefined") {_RecordType("<1856,1867,52>",(f.arguments)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (f) != "undefined") {_RecordType("<1856,1857,52>",(f)); Inst27++; } } catch(e) {}
  f.arguments.length;
  1;
try { if (Inst28 <= 1000 && typeof (f.arguments[0]) != "undefined") {_RecordType("<1883,1897,54>",(f.arguments[0])); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (f.arguments) != "undefined") {_RecordType("<1883,1894,54>",(f.arguments)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (f) != "undefined") {_RecordType("<1883,1884,54>",(f)); Inst30++; } } catch(e) {}
  f.arguments[0];
  2;
try { if (Inst31 <= 1000 && typeof (f.arguments[1]) != "undefined") {_RecordType("<1906,1920,56>",(f.arguments[1])); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (f.arguments) != "undefined") {_RecordType("<1906,1917,56>",(f.arguments)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (f) != "undefined") {_RecordType("<1906,1907,56>",(f)); Inst33++; } } catch(e) {}
  f.arguments[1];
  3;
try { if (Inst34 <= 1000 && typeof (f.arguments[2]) != "undefined") {_RecordType("<1929,1943,58>",(f.arguments[2])); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (f.arguments) != "undefined") {_RecordType("<1929,1940,58>",(f.arguments)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (f) != "undefined") {_RecordType("<1929,1930,58>",(f)); Inst36++; } } catch(e) {}
  f.arguments[2];
}

try { if (Inst37 <= 1000 && typeof (f1) != "undefined") {_RecordType("<1948,1950,61>",(f1)); Inst37++; } } catch(e) {}
f1(1, 2, 3);
try { if (Inst38 <= 1000 && typeof (f2) != "undefined") {_RecordType("<1961,1963,62>",(f2)); Inst38++; } } catch(e) {}
f2(1, 2, 3);
try { if (Inst39 <= 1000 && typeof (f3) != "undefined") {_RecordType("<1974,1976,63>",(f3)); Inst39++; } } catch(e) {}
f3(1, 2, 3);

