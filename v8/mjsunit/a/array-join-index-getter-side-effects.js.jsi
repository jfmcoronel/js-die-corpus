var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2018 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax
try { if (Inst0 <= 1000 && typeof (Throws) != "undefined") {_RecordType("<210,216,5>",(Throws)); Inst0++; } } catch(e) {}
(function Throws() {
try { if (Inst1 <= 1000 && typeof (TestError) != "undefined") {_RecordType("<232,241,6>",(TestError)); Inst1++; } } catch(e) {}
  function TestError() {
    ;
  }

  let callCount = 0;
try { if (Inst2 <= 1000 && typeof (callCount) != "undefined") {_RecordType("<263,272,10>",(callCount)); Inst2++; } } catch(e) {}
  const a = [0, 1];
try { if (Inst3 <= 1000 && typeof (a) != "undefined") {_RecordType("<286,287,11>",(a)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<300,321,12>",(Object.defineProperty)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Object) != "undefined") {_RecordType("<300,306,12>",(Object)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (a) != "undefined") {_RecordType("<322,323,12>",(a)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (get) != "undefined") {_RecordType("<361,364,15>",(get)); Inst7++; } } catch(e) {}
  Object.defineProperty(a, '0', {
    configurable: true,

    get() {
try { if (Inst8 <= 1000 && typeof (callCount) != "undefined") {_RecordType("<375,384,16>",(callCount)); Inst8++; } } catch(e) {}
      callCount++;
try { if (Inst9 <= 1000 && typeof (TestError) != "undefined") {_RecordType("<404,413,17>",(TestError)); Inst9++; } } catch(e) {}
      throw new TestError();
    }

  });

try { if (Inst10 <= 1000 && typeof (a.join) != "undefined") {_RecordType("<440,446,22>",(a.join)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (a) != "undefined") {_RecordType("<440,441,22>",(a)); Inst11++; } } catch(e) {}
  (() => a.join())();

try { if (Inst12 <= 1000 && typeof (TestError) != "undefined") {_RecordType("<456,465,24>",(TestError)); Inst12++; } } catch(e) {}
  TestError();
  1;
try { if (Inst13 <= 1000 && typeof (callCount) != "undefined") {_RecordType("<476,485,26>",(callCount)); Inst13++; } } catch(e) {}
  callCount;
  // Verifies cycle detection still works properly after thrown error.
try { if (Inst14 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<560,581,28>",(Object.defineProperty)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Object) != "undefined") {_RecordType("<560,566,28>",(Object)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (a) != "undefined") {_RecordType("<582,583,28>",(a)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (get) != "undefined") {_RecordType("<621,624,31>",(get)); Inst17++; } } catch(e) {}
  Object.defineProperty(a, '0', {
    configurable: true,

    get() {
try { if (Inst18 <= 1000 && typeof (callCount) != "undefined") {_RecordType("<635,644,32>",(callCount)); Inst18++; } } catch(e) {}
      callCount++;
      return 777;
    }

  });
  '777,1';
try { if (Inst19 <= 1000 && typeof (a.join) != "undefined") {_RecordType("<692,698,38>",(a.join)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (a) != "undefined") {_RecordType("<692,693,38>",(a)); Inst20++; } } catch(e) {}
  a.join();
  2;
try { if (Inst21 <= 1000 && typeof (callCount) != "undefined") {_RecordType("<709,718,40>",(callCount)); Inst21++; } } catch(e) {}
  callCount;
})();

try { if (Inst22 <= 1000 && typeof (ArrayLengthIncreased) != "undefined") {_RecordType("<737,757,43>",(ArrayLengthIncreased)); Inst22++; } } catch(e) {}
(function ArrayLengthIncreased() {
  let callCount = 0;
try { if (Inst23 <= 1000 && typeof (callCount) != "undefined") {_RecordType("<768,777,44>",(callCount)); Inst23++; } } catch(e) {}
  const a = [1];
try { if (Inst24 <= 1000 && typeof (a) != "undefined") {_RecordType("<791,792,45>",(a)); Inst24++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<802,823,46>",(Object.defineProperty)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Object) != "undefined") {_RecordType("<802,808,46>",(Object)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (a) != "undefined") {_RecordType("<824,825,46>",(a)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (get) != "undefined") {_RecordType("<863,866,49>",(get)); Inst28++; } } catch(e) {}
  Object.defineProperty(a, '0', {
    configurable: true,

    get() {
try { if (Inst29 <= 1000 && typeof (callCount) != "undefined") {_RecordType("<877,886,50>",(callCount)); Inst29++; } } catch(e) {}
      callCount++;
try { if (Inst30 <= 1000 && typeof (a.push) != "undefined") {_RecordType("<896,902,51>",(a.push)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (a) != "undefined") {_RecordType("<896,897,51>",(a)); Inst31++; } } catch(e) {}
      a.push(2);
      return 9;
    }

  });
  '9';
try { if (Inst32 <= 1000 && typeof (a.join) != "undefined") {_RecordType("<945,951,57>",(a.join)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (a) != "undefined") {_RecordType("<945,946,57>",(a)); Inst33++; } } catch(e) {}
  a.join();
  1;
try { if (Inst34 <= 1000 && typeof (callCount) != "undefined") {_RecordType("<962,971,59>",(callCount)); Inst34++; } } catch(e) {}
  callCount;
  '9,2';
try { if (Inst35 <= 1000 && typeof (a.join) != "undefined") {_RecordType("<984,990,61>",(a.join)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (a) != "undefined") {_RecordType("<984,985,61>",(a)); Inst36++; } } catch(e) {}
  a.join();
  2;
try { if (Inst37 <= 1000 && typeof (callCount) != "undefined") {_RecordType("<1001,1010,63>",(callCount)); Inst37++; } } catch(e) {}
  callCount;
})();

try { if (Inst38 <= 1000 && typeof (ArrayLengthIncreasedWithHole) != "undefined") {_RecordType("<1029,1057,66>",(ArrayLengthIncreasedWithHole)); Inst38++; } } catch(e) {}
(function ArrayLengthIncreasedWithHole() {
  let callCount = 0;
try { if (Inst39 <= 1000 && typeof (callCount) != "undefined") {_RecordType("<1068,1077,67>",(callCount)); Inst39++; } } catch(e) {}
  const a = [1,, 2];
try { if (Inst40 <= 1000 && typeof (a) != "undefined") {_RecordType("<1091,1092,68>",(a)); Inst40++; } } catch(e) {}
try { if (Inst41 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<1106,1127,69>",(Object.defineProperty)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1106,1112,69>",(Object)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (a) != "undefined") {_RecordType("<1128,1129,69>",(a)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (get) != "undefined") {_RecordType("<1167,1170,72>",(get)); Inst44++; } } catch(e) {}
  Object.defineProperty(a, '1', {
    configurable: true,

    get() {
try { if (Inst45 <= 1000 && typeof (callCount) != "undefined") {_RecordType("<1181,1190,73>",(callCount)); Inst45++; } } catch(e) {}
      callCount++;
try { if (Inst46 <= 1000 && typeof (a.push) != "undefined") {_RecordType("<1200,1206,74>",(a.push)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (a) != "undefined") {_RecordType("<1200,1201,74>",(a)); Inst47++; } } catch(e) {}
      a.push(3);
    }

  });
  '1,,2';
try { if (Inst48 <= 1000 && typeof (a.join) != "undefined") {_RecordType("<1236,1242,79>",(a.join)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (a) != "undefined") {_RecordType("<1236,1237,79>",(a)); Inst49++; } } catch(e) {}
  a.join();
  1;
try { if (Inst50 <= 1000 && typeof (callCount) != "undefined") {_RecordType("<1253,1262,81>",(callCount)); Inst50++; } } catch(e) {}
  callCount;
  '1,,2,3';
try { if (Inst51 <= 1000 && typeof (a.join) != "undefined") {_RecordType("<1278,1284,83>",(a.join)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (a) != "undefined") {_RecordType("<1278,1279,83>",(a)); Inst52++; } } catch(e) {}
  a.join();
  2;
try { if (Inst53 <= 1000 && typeof (callCount) != "undefined") {_RecordType("<1295,1304,85>",(callCount)); Inst53++; } } catch(e) {}
  callCount;
})();

try { if (Inst54 <= 1000 && typeof (ArrayLengthDecreased) != "undefined") {_RecordType("<1323,1343,88>",(ArrayLengthDecreased)); Inst54++; } } catch(e) {}
(function ArrayLengthDecreased() {
  let callCount = 0;
try { if (Inst55 <= 1000 && typeof (callCount) != "undefined") {_RecordType("<1354,1363,89>",(callCount)); Inst55++; } } catch(e) {}
  const a = [0, 1];
try { if (Inst56 <= 1000 && typeof (a) != "undefined") {_RecordType("<1377,1378,90>",(a)); Inst56++; } } catch(e) {}
try { if (Inst57 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<1391,1412,91>",(Object.defineProperty)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1391,1397,91>",(Object)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (a) != "undefined") {_RecordType("<1413,1414,91>",(a)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (get) != "undefined") {_RecordType("<1452,1455,94>",(get)); Inst60++; } } catch(e) {}
  Object.defineProperty(a, '0', {
    configurable: true,

    get() {
try { if (Inst61 <= 1000 && typeof (callCount) != "undefined") {_RecordType("<1466,1475,95>",(callCount)); Inst61++; } } catch(e) {}
      callCount++;
      a.length = 1;
try { if (Inst62 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<1485,1493,96>",(a.length)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (a) != "undefined") {_RecordType("<1485,1486,96>",(a)); Inst63++; } } catch(e) {}
      return 9;
    }

  });
  '9,';
try { if (Inst64 <= 1000 && typeof (a.join) != "undefined") {_RecordType("<1538,1544,102>",(a.join)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (a) != "undefined") {_RecordType("<1538,1539,102>",(a)); Inst65++; } } catch(e) {}
  a.join();
  1;
try { if (Inst66 <= 1000 && typeof (callCount) != "undefined") {_RecordType("<1555,1564,104>",(callCount)); Inst66++; } } catch(e) {}
  callCount;
  '9';
try { if (Inst67 <= 1000 && typeof (a.join) != "undefined") {_RecordType("<1575,1581,106>",(a.join)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (a) != "undefined") {_RecordType("<1575,1576,106>",(a)); Inst68++; } } catch(e) {}
  a.join();
  2;
try { if (Inst69 <= 1000 && typeof (callCount) != "undefined") {_RecordType("<1592,1601,108>",(callCount)); Inst69++; } } catch(e) {}
  callCount;
})();

try { if (Inst70 <= 1000 && typeof (ElementsKindChangedToHoley) != "undefined") {_RecordType("<1620,1646,111>",(ElementsKindChangedToHoley)); Inst70++; } } catch(e) {}
(function ElementsKindChangedToHoley() {
  let callCount = 0;
try { if (Inst71 <= 1000 && typeof (callCount) != "undefined") {_RecordType("<1657,1666,112>",(callCount)); Inst71++; } } catch(e) {}
  const a = [0, 1];
try { if (Inst72 <= 1000 && typeof (a) != "undefined") {_RecordType("<1680,1681,113>",(a)); Inst72++; } } catch(e) {}
try { if (Inst73 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<1694,1715,114>",(Object.defineProperty)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1694,1700,114>",(Object)); Inst74++; } } catch(e) {}try { if (Inst75 <= 1000 && typeof (a) != "undefined") {_RecordType("<1716,1717,114>",(a)); Inst75++; } } catch(e) {}try { if (Inst76 <= 1000 && typeof (get) != "undefined") {_RecordType("<1755,1758,117>",(get)); Inst76++; } } catch(e) {}
  Object.defineProperty(a, '0', {
    configurable: true,

    get() {
try { if (Inst77 <= 1000 && typeof (callCount) != "undefined") {_RecordType("<1769,1778,118>",(callCount)); Inst77++; } } catch(e) {}
      callCount++;
      a.length = 3;
try { if (Inst78 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<1788,1796,119>",(a.length)); Inst78++; } } catch(e) {}try { if (Inst79 <= 1000 && typeof (a) != "undefined") {_RecordType("<1788,1789,119>",(a)); Inst79++; } } catch(e) {}
      return 9;
    }

  });
  '9,1';
try { if (Inst80 <= 1000 && typeof (a.join) != "undefined") {_RecordType("<1842,1848,125>",(a.join)); Inst80++; } } catch(e) {}try { if (Inst81 <= 1000 && typeof (a) != "undefined") {_RecordType("<1842,1843,125>",(a)); Inst81++; } } catch(e) {}
  a.join();
  1;
try { if (Inst82 <= 1000 && typeof (callCount) != "undefined") {_RecordType("<1859,1868,127>",(callCount)); Inst82++; } } catch(e) {}
  callCount;
  '9,1,';
try { if (Inst83 <= 1000 && typeof (a.join) != "undefined") {_RecordType("<1882,1888,129>",(a.join)); Inst83++; } } catch(e) {}try { if (Inst84 <= 1000 && typeof (a) != "undefined") {_RecordType("<1882,1883,129>",(a)); Inst84++; } } catch(e) {}
  a.join();
  2;
try { if (Inst85 <= 1000 && typeof (callCount) != "undefined") {_RecordType("<1899,1908,131>",(callCount)); Inst85++; } } catch(e) {}
  callCount;
})();

