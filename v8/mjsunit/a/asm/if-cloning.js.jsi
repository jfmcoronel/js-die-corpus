var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2015 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
try { if (Inst1 <= 1000 && typeof (function Module() {
  "use asm";

  function if0(i, j) {
    i = i | 0;
    j = j | 0;

    if ((i | 0) == 0 ? (j | 0) == 0 : 0) {
      return 1;
    }

    return 0;
  }

  return {
    if0: if0
  };
}().if0) != "undefined") {_RecordType("<177,386,4>",(function Module() {
  "use asm";

  function if0(i, j) {
    i = i | 0;
    j = j | 0;

    if ((i | 0) == 0 ? (j | 0) == 0 : 0) {
      return 1;
    }

    return 0;
  }

  return {
    if0: if0
  };
}().if0)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Module) != "undefined") {_RecordType("<186,192,4>",(Module)); Inst2++; } } catch(e) {}
var if0 = function Module() {
  "use asm";

try { if (Inst3 <= 1000 && typeof (if0) != "undefined") {_RecordType("<222,225,7>",(if0)); Inst3++; } } catch(e) {}
  function if0(i, j) {
try { if (Inst4 <= 1000 && typeof (i) != "undefined") {_RecordType("<226,227,7>",(i)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (j) != "undefined") {_RecordType("<229,230,7>",(j)); Inst5++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<242,243,8>",(i)); Inst7++; } } catch(e) {}
    i = i | 0;
try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<238,239,8>",(i)); Inst6++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (j) != "undefined") {_RecordType("<257,258,9>",(j)); Inst9++; } } catch(e) {}
    j = j | 0;
try { if (Inst8 <= 1000 && typeof (j) != "undefined") {_RecordType("<253,254,9>",(j)); Inst8++; } } catch(e) {}

try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<274,275,11>",(i)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (j) != "undefined") {_RecordType("<289,290,11>",(j)); Inst11++; } } catch(e) {}
    if ((i | 0) == 0 ? (j | 0) == 0 : 0) {
      return 1;
    }

    return 0;
  }

try { if (Inst12 <= 1000 && typeof (if0) != "undefined") {_RecordType("<370,373,19>",(if0)); Inst12++; } } catch(e) {}
  return {
    if0: if0
  };
}().if0;
try { if (Inst0 <= 1000 && typeof (if0) != "undefined") {_RecordType("<171,174,4>",(if0)); Inst0++; } } catch(e) {}

1;
try { if (Inst13 <= 1000 && typeof (if0) != "undefined") {_RecordType("<392,395,24>",(if0)); Inst13++; } } catch(e) {}
if0(0, 0);
0;
try { if (Inst14 <= 1000 && typeof (if0) != "undefined") {_RecordType("<406,409,26>",(if0)); Inst14++; } } catch(e) {}
if0(11, 0);
0;
try { if (Inst15 <= 1000 && typeof (if0) != "undefined") {_RecordType("<421,424,28>",(if0)); Inst15++; } } catch(e) {}
if0(0, -1);
0;
try { if (Inst16 <= 1000 && typeof (if0) != "undefined") {_RecordType("<436,439,30>",(if0)); Inst16++; } } catch(e) {}
if0(-1024, 1);

try { if (Inst18 <= 1000 && typeof (function Module() {
  "use asm";

  function if1(i, j) {
    i = i | 0;
    j = j | 0;

    if ((i | 0) == 0 ? (j | 0) == 0 : 1) {
      return 0;
    }

    return 1;
  }

  return {
    if1: if1
  };
}().if1) != "undefined") {_RecordType("<462,671,32>",(function Module() {
  "use asm";

  function if1(i, j) {
    i = i | 0;
    j = j | 0;

    if ((i | 0) == 0 ? (j | 0) == 0 : 1) {
      return 0;
    }

    return 1;
  }

  return {
    if1: if1
  };
}().if1)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Module) != "undefined") {_RecordType("<471,477,32>",(Module)); Inst19++; } } catch(e) {}
var if1 = function Module() {
  "use asm";

try { if (Inst20 <= 1000 && typeof (if1) != "undefined") {_RecordType("<507,510,35>",(if1)); Inst20++; } } catch(e) {}
  function if1(i, j) {
try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<511,512,35>",(i)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (j) != "undefined") {_RecordType("<514,515,35>",(j)); Inst22++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<527,528,36>",(i)); Inst24++; } } catch(e) {}
    i = i | 0;
try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<523,524,36>",(i)); Inst23++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (j) != "undefined") {_RecordType("<542,543,37>",(j)); Inst26++; } } catch(e) {}
    j = j | 0;
try { if (Inst25 <= 1000 && typeof (j) != "undefined") {_RecordType("<538,539,37>",(j)); Inst25++; } } catch(e) {}

try { if (Inst27 <= 1000 && typeof (i) != "undefined") {_RecordType("<559,560,39>",(i)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (j) != "undefined") {_RecordType("<574,575,39>",(j)); Inst28++; } } catch(e) {}
    if ((i | 0) == 0 ? (j | 0) == 0 : 1) {
      return 0;
    }

    return 1;
  }

try { if (Inst29 <= 1000 && typeof (if1) != "undefined") {_RecordType("<655,658,47>",(if1)); Inst29++; } } catch(e) {}
  return {
    if1: if1
  };
}().if1;
try { if (Inst17 <= 1000 && typeof (if1) != "undefined") {_RecordType("<456,459,32>",(if1)); Inst17++; } } catch(e) {}

0;
try { if (Inst30 <= 1000 && typeof (if1) != "undefined") {_RecordType("<677,680,52>",(if1)); Inst30++; } } catch(e) {}
if1(0, 0);
0;
try { if (Inst31 <= 1000 && typeof (if1) != "undefined") {_RecordType("<691,694,54>",(if1)); Inst31++; } } catch(e) {}
if1(11, 0);
1;
try { if (Inst32 <= 1000 && typeof (if1) != "undefined") {_RecordType("<706,709,56>",(if1)); Inst32++; } } catch(e) {}
if1(0, -1);
0;
try { if (Inst33 <= 1000 && typeof (if1) != "undefined") {_RecordType("<721,724,58>",(if1)); Inst33++; } } catch(e) {}
if1(-1024, 9);

