var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2015 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --turbo-splitting
try { if (Inst0 <= 1000 && typeof (module) != "undefined") {_RecordType("<204,210,5>",(module)); Inst0++; } } catch(e) {}
function module(stdlib, foreign, heap) {
try { if (Inst1 <= 1000 && typeof (stdlib) != "undefined") {_RecordType("<211,217,5>",(stdlib)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (foreign) != "undefined") {_RecordType("<219,226,5>",(foreign)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (heap) != "undefined") {_RecordType("<228,232,5>",(heap)); Inst3++; } } catch(e) {}
  "use asm";

try { if (Inst4 <= 1000 && typeof (foo) != "undefined") {_RecordType("<261,264,8>",(foo)); Inst4++; } } catch(e) {}
  function foo(i) {
try { if (Inst5 <= 1000 && typeof (i) != "undefined") {_RecordType("<265,266,8>",(i)); Inst5++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<278,279,9>",(i)); Inst7++; } } catch(e) {}
    i = i | 0;
try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<274,275,9>",(i)); Inst6++; } } catch(e) {}
    var j = 0;
try { if (Inst8 <= 1000 && typeof (j) != "undefined") {_RecordType("<293,294,10>",(j)); Inst8++; } } catch(e) {}

try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<313,314,12>",(i)); Inst9++; } } catch(e) {}
    switch (i | 0) {
      case 0:
try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<348,349,14>",(i)); Inst11++; } } catch(e) {}
        j = i + 1 | 0;
try { if (Inst10 <= 1000 && typeof (j) != "undefined") {_RecordType("<344,345,14>",(j)); Inst10++; } } catch(e) {}
        break;

      case 1:
try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<401,402,18>",(i)); Inst13++; } } catch(e) {}
        j = i + 1 | 0;
try { if (Inst12 <= 1000 && typeof (j) != "undefined") {_RecordType("<397,398,18>",(j)); Inst12++; } } catch(e) {}
        break;

      default:
try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<455,456,22>",(i)); Inst15++; } } catch(e) {}
        j = i;
try { if (Inst14 <= 1000 && typeof (j) != "undefined") {_RecordType("<451,452,22>",(j)); Inst14++; } } catch(e) {}
        break;
    }

try { if (Inst16 <= 1000 && typeof (j) != "undefined") {_RecordType("<491,492,26>",(j)); Inst16++; } } catch(e) {}
    return j | 0;
  }

try { if (Inst17 <= 1000 && typeof (foo) != "undefined") {_RecordType("<523,526,30>",(foo)); Inst17++; } } catch(e) {}
  return {
    foo: foo
  };
}

try { if (Inst19 <= 1000 && typeof (module(this, {}, new ArrayBuffer(64 * 1024)).foo) != "undefined") {_RecordType("<545,593,34>",(module(this, {}, new ArrayBuffer(64 * 1024)).foo)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (module) != "undefined") {_RecordType("<545,551,34>",(module)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (ArrayBuffer) != "undefined") {_RecordType("<566,577,34>",(ArrayBuffer)); Inst21++; } } catch(e) {}
var foo = module(this, {}, new ArrayBuffer(64 * 1024)).foo;
try { if (Inst18 <= 1000 && typeof (foo) != "undefined") {_RecordType("<539,542,34>",(foo)); Inst18++; } } catch(e) {}
2;
try { if (Inst22 <= 1000 && typeof (foo) != "undefined") {_RecordType("<598,601,36>",(foo)); Inst22++; } } catch(e) {}
foo(2);

