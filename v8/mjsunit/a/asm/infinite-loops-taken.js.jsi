var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2014 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
var error = "error";
try { if (Inst0 <= 1000 && typeof (error) != "undefined") {_RecordType("<171,176,4>",(error)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (counter) != "undefined") {_RecordType("<198,205,6>",(counter)); Inst1++; } } catch(e) {}
function counter(x) {
try { if (Inst2 <= 1000 && typeof (x) != "undefined") {_RecordType("<206,207,6>",(x)); Inst2++; } } catch(e) {}
  return function () {
try { if (Inst3 <= 1000 && typeof (x) != "undefined") {_RecordType("<242,243,8>",(x)); Inst3++; } } catch(e) {}
    if (x-- == 0) {
try { if (Inst4 <= 1000 && typeof (error) != "undefined") {_RecordType("<266,271,9>",(error)); Inst4++; } } catch(e) {}
      throw error;
    }
  };
} // TODO(asm): This module is not valid asm.js.


try { if (Inst5 <= 1000 && typeof (Module) != "undefined") {_RecordType("<344,350,15>",(Module)); Inst5++; } } catch(e) {}
function Module() {
  "use asm";

try { if (Inst6 <= 1000 && typeof (w0) != "undefined") {_RecordType("<380,382,18>",(w0)); Inst6++; } } catch(e) {}
  function w0(f) {
try { if (Inst7 <= 1000 && typeof (f) != "undefined") {_RecordType("<383,384,18>",(f)); Inst7++; } } catch(e) {}
    while (1) {
try { if (Inst8 <= 1000 && typeof (f) != "undefined") {_RecordType("<410,411,20>",(f)); Inst8++; } } catch(e) {}
      f();
    }

    return 108;
  }

try { if (Inst9 <= 1000 && typeof (w1) != "undefined") {_RecordType("<454,456,26>",(w1)); Inst9++; } } catch(e) {}
  function w1(f) {
try { if (Inst10 <= 1000 && typeof (f) != "undefined") {_RecordType("<457,458,26>",(f)); Inst10++; } } catch(e) {}
    if (1) {
      while (1) {
try { if (Inst11 <= 1000 && typeof (f) != "undefined") {_RecordType("<501,502,29>",(f)); Inst11++; } } catch(e) {}
        f();
      }
    }

    return 109;
  }

try { if (Inst12 <= 1000 && typeof (w2) != "undefined") {_RecordType("<553,555,36>",(w2)); Inst12++; } } catch(e) {}
  function w2(f) {
try { if (Inst13 <= 1000 && typeof (f) != "undefined") {_RecordType("<556,557,36>",(f)); Inst13++; } } catch(e) {}
    if (1) {
      while (1) {
try { if (Inst14 <= 1000 && typeof (f) != "undefined") {_RecordType("<600,601,39>",(f)); Inst14++; } } catch(e) {}
        f();
      }
    } else {
      while (1) {
try { if (Inst15 <= 1000 && typeof (f) != "undefined") {_RecordType("<652,653,43>",(f)); Inst15++; } } catch(e) {}
        f();
      }
    }

    return 110;
  }

try { if (Inst16 <= 1000 && typeof (w3) != "undefined") {_RecordType("<704,706,50>",(w3)); Inst16++; } } catch(e) {}
  function w3(f) {
try { if (Inst17 <= 1000 && typeof (f) != "undefined") {_RecordType("<707,708,50>",(f)); Inst17++; } } catch(e) {}
    if (0) {
      while (1) {
try { if (Inst18 <= 1000 && typeof (f) != "undefined") {_RecordType("<751,752,53>",(f)); Inst18++; } } catch(e) {}
        f();
      }
    }

    return 111;
  }

try { if (Inst19 <= 1000 && typeof (w0) != "undefined") {_RecordType("<811,813,61>",(w0)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (w1) != "undefined") {_RecordType("<823,825,62>",(w1)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (w2) != "undefined") {_RecordType("<835,837,63>",(w2)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (w3) != "undefined") {_RecordType("<847,849,64>",(w3)); Inst22++; } } catch(e) {}
  return {
    w0: w0,
    w1: w1,
    w2: w2,
    w3: w3
  };
}

try { if (Inst24 <= 1000 && typeof (Module) != "undefined") {_RecordType("<866,872,68>",(Module)); Inst24++; } } catch(e) {}
var m = Module();
try { if (Inst23 <= 1000 && typeof (m) != "undefined") {_RecordType("<862,863,68>",(m)); Inst23++; } } catch(e) {}

(function () {
try { if (Inst25 <= 1000 && typeof (m.w0) != "undefined") {_RecordType("<894,898,71>",(m.w0)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (m) != "undefined") {_RecordType("<894,895,71>",(m)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (counter) != "undefined") {_RecordType("<899,906,71>",(counter)); Inst27++; } } catch(e) {}
  m.w0(counter(5));
})();

try { if (Inst28 <= 1000 && typeof (error) != "undefined") {_RecordType("<919,924,74>",(error)); Inst28++; } } catch(e) {}
error;

(function () {
try { if (Inst29 <= 1000 && typeof (m.w1) != "undefined") {_RecordType("<944,948,77>",(m.w1)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (m) != "undefined") {_RecordType("<944,945,77>",(m)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (counter) != "undefined") {_RecordType("<949,956,77>",(counter)); Inst31++; } } catch(e) {}
  m.w1(counter(5));
})();

try { if (Inst32 <= 1000 && typeof (error) != "undefined") {_RecordType("<969,974,80>",(error)); Inst32++; } } catch(e) {}
error;

(function () {
try { if (Inst33 <= 1000 && typeof (m.w2) != "undefined") {_RecordType("<994,998,83>",(m.w2)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (m) != "undefined") {_RecordType("<994,995,83>",(m)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (counter) != "undefined") {_RecordType("<999,1006,83>",(counter)); Inst35++; } } catch(e) {}
  m.w2(counter(5));
})();

try { if (Inst36 <= 1000 && typeof (error) != "undefined") {_RecordType("<1019,1024,86>",(error)); Inst36++; } } catch(e) {}
error;
111;
try { if (Inst37 <= 1000 && typeof (m.w3) != "undefined") {_RecordType("<1031,1035,88>",(m.w3)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (m) != "undefined") {_RecordType("<1031,1032,88>",(m)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (counter) != "undefined") {_RecordType("<1036,1043,88>",(counter)); Inst39++; } } catch(e) {}
m.w3(counter(5));

