var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2014 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
var stdlib = this;
try { if (Inst0 <= 1000 && typeof (stdlib) != "undefined") {_RecordType("<171,177,4>",(stdlib)); Inst0++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (ArrayBuffer) != "undefined") {_RecordType("<203,214,5>",(ArrayBuffer)); Inst2++; } } catch(e) {}
var buffer = new ArrayBuffer(64 * 1024);
try { if (Inst1 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<190,196,5>",(buffer)); Inst1++; } } catch(e) {}
var foreign = {};
try { if (Inst3 <= 1000 && typeof (foreign) != "undefined") {_RecordType("<231,238,6>",(foreign)); Inst3++; } } catch(e) {}

try { if (Inst5 <= 1000 && typeof (Module) != "undefined") {_RecordType("<263,269,8>",(Module)); Inst5++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (stdlib) != "undefined") {_RecordType("<790,796,43>",(stdlib)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (foreign) != "undefined") {_RecordType("<798,805,43>",(foreign)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<807,813,43>",(buffer)); Inst59++; } } catch(e) {}
var m = function Module(stdlib, foreign, heap) {
try { if (Inst6 <= 1000 && typeof (stdlib) != "undefined") {_RecordType("<270,276,8>",(stdlib)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (foreign) != "undefined") {_RecordType("<278,285,8>",(foreign)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (heap) != "undefined") {_RecordType("<287,291,8>",(heap)); Inst8++; } } catch(e) {}
  "use asm";

try { if (Inst10 <= 1000 && typeof (stdlib.Int16Array) != "undefined") {_RecordType("<327,344,11>",(stdlib.Int16Array)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (stdlib) != "undefined") {_RecordType("<327,333,11>",(stdlib)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (heap) != "undefined") {_RecordType("<345,349,11>",(heap)); Inst12++; } } catch(e) {}
  var MEM16 = new stdlib.Int16Array(heap);
try { if (Inst9 <= 1000 && typeof (MEM16) != "undefined") {_RecordType("<315,320,11>",(MEM16)); Inst9++; } } catch(e) {}

try { if (Inst13 <= 1000 && typeof (load) != "undefined") {_RecordType("<364,368,13>",(load)); Inst13++; } } catch(e) {}
  function load(i) {
try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<369,370,13>",(i)); Inst14++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<382,383,14>",(i)); Inst16++; } } catch(e) {}
    i = i | 0;
try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<378,379,14>",(i)); Inst15++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (MEM16[i >> 1]) != "undefined") {_RecordType("<397,410,15>",(MEM16[i >> 1])); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (MEM16) != "undefined") {_RecordType("<397,402,15>",(MEM16)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<403,404,15>",(i)); Inst20++; } } catch(e) {}
    i = MEM16[i >> 1] | 0;
try { if (Inst17 <= 1000 && typeof (i) != "undefined") {_RecordType("<393,394,15>",(i)); Inst17++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<427,428,16>",(i)); Inst21++; } } catch(e) {}
    return i | 0;
  }

try { if (Inst22 <= 1000 && typeof (store) != "undefined") {_RecordType("<450,455,19>",(store)); Inst22++; } } catch(e) {}
  function store(i, v) {
try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<456,457,19>",(i)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (v) != "undefined") {_RecordType("<459,460,19>",(v)); Inst24++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (i) != "undefined") {_RecordType("<472,473,20>",(i)); Inst26++; } } catch(e) {}
    i = i | 0;
try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<468,469,20>",(i)); Inst25++; } } catch(e) {}
try { if (Inst28 <= 1000 && typeof (v) != "undefined") {_RecordType("<487,488,21>",(v)); Inst28++; } } catch(e) {}
    v = v | 0;
try { if (Inst27 <= 1000 && typeof (v) != "undefined") {_RecordType("<483,484,21>",(v)); Inst27++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (v) != "undefined") {_RecordType("<514,515,22>",(v)); Inst32++; } } catch(e) {}
    MEM16[i >> 1] = v;
try { if (Inst29 <= 1000 && typeof (MEM16[i >> 1]) != "undefined") {_RecordType("<498,511,22>",(MEM16[i >> 1])); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (MEM16) != "undefined") {_RecordType("<498,503,22>",(MEM16)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (i) != "undefined") {_RecordType("<504,505,22>",(i)); Inst31++; } } catch(e) {}
  }

try { if (Inst33 <= 1000 && typeof (load8) != "undefined") {_RecordType("<533,538,25>",(load8)); Inst33++; } } catch(e) {}
  function load8(i) {
try { if (Inst34 <= 1000 && typeof (i) != "undefined") {_RecordType("<539,540,25>",(i)); Inst34++; } } catch(e) {}
try { if (Inst36 <= 1000 && typeof (i) != "undefined") {_RecordType("<552,553,26>",(i)); Inst36++; } } catch(e) {}
    i = i | 0;
try { if (Inst35 <= 1000 && typeof (i) != "undefined") {_RecordType("<548,549,26>",(i)); Inst35++; } } catch(e) {}
try { if (Inst38 <= 1000 && typeof (MEM16[i + 8 >> 1]) != "undefined") {_RecordType("<567,584,27>",(MEM16[i + 8 >> 1])); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (MEM16) != "undefined") {_RecordType("<567,572,27>",(MEM16)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (i) != "undefined") {_RecordType("<573,574,27>",(i)); Inst40++; } } catch(e) {}
    i = MEM16[i + 8 >> 1] | 0;
try { if (Inst37 <= 1000 && typeof (i) != "undefined") {_RecordType("<563,564,27>",(i)); Inst37++; } } catch(e) {}
try { if (Inst41 <= 1000 && typeof (i) != "undefined") {_RecordType("<601,602,28>",(i)); Inst41++; } } catch(e) {}
    return i | 0;
  }

try { if (Inst42 <= 1000 && typeof (store8) != "undefined") {_RecordType("<624,630,31>",(store8)); Inst42++; } } catch(e) {}
  function store8(i, v) {
try { if (Inst43 <= 1000 && typeof (i) != "undefined") {_RecordType("<631,632,31>",(i)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (v) != "undefined") {_RecordType("<634,635,31>",(v)); Inst44++; } } catch(e) {}
try { if (Inst46 <= 1000 && typeof (i) != "undefined") {_RecordType("<647,648,32>",(i)); Inst46++; } } catch(e) {}
    i = i | 0;
try { if (Inst45 <= 1000 && typeof (i) != "undefined") {_RecordType("<643,644,32>",(i)); Inst45++; } } catch(e) {}
try { if (Inst48 <= 1000 && typeof (v) != "undefined") {_RecordType("<662,663,33>",(v)); Inst48++; } } catch(e) {}
    v = v | 0;
try { if (Inst47 <= 1000 && typeof (v) != "undefined") {_RecordType("<658,659,33>",(v)); Inst47++; } } catch(e) {}
try { if (Inst52 <= 1000 && typeof (v) != "undefined") {_RecordType("<693,694,34>",(v)); Inst52++; } } catch(e) {}
    MEM16[i + 8 >> 1] = v;
try { if (Inst49 <= 1000 && typeof (MEM16[i + 8 >> 1]) != "undefined") {_RecordType("<673,690,34>",(MEM16[i + 8 >> 1])); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (MEM16) != "undefined") {_RecordType("<673,678,34>",(MEM16)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (i) != "undefined") {_RecordType("<679,680,34>",(i)); Inst51++; } } catch(e) {}
  }

try { if (Inst53 <= 1000 && typeof (load) != "undefined") {_RecordType("<722,726,38>",(load)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (store) != "undefined") {_RecordType("<739,744,39>",(store)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (load8) != "undefined") {_RecordType("<757,762,40>",(load8)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (store8) != "undefined") {_RecordType("<776,782,41>",(store8)); Inst56++; } } catch(e) {}
  return {
    load: load,
    store: store,
    load8: load8,
    store8: store8
  };
}(stdlib, foreign, buffer);
try { if (Inst4 <= 1000 && typeof (m) != "undefined") {_RecordType("<250,251,8>",(m)); Inst4++; } } catch(e) {}

0;
try { if (Inst60 <= 1000 && typeof (m.load) != "undefined") {_RecordType("<820,826,46>",(m.load)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (m) != "undefined") {_RecordType("<820,821,46>",(m)); Inst61++; } } catch(e) {}
m.load(-8);
0;
try { if (Inst62 <= 1000 && typeof (m.load8) != "undefined") {_RecordType("<835,842,48>",(m.load8)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (m) != "undefined") {_RecordType("<835,836,48>",(m)); Inst63++; } } catch(e) {}
m.load8(-16);
try { if (Inst64 <= 1000 && typeof (m.store) != "undefined") {_RecordType("<849,856,49>",(m.store)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (m) != "undefined") {_RecordType("<849,850,49>",(m)); Inst65++; } } catch(e) {}
m.store(0, 42);
42;
try { if (Inst66 <= 1000 && typeof (m.load8) != "undefined") {_RecordType("<869,876,51>",(m.load8)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (m) != "undefined") {_RecordType("<869,870,51>",(m)); Inst67++; } } catch(e) {}
m.load8(-8);
try { if (Inst68 <= 1000 && typeof (m.store8) != "undefined") {_RecordType("<882,890,52>",(m.store8)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (m) != "undefined") {_RecordType("<882,883,52>",(m)); Inst69++; } } catch(e) {}
m.store8(-8, 99);
99;
try { if (Inst70 <= 1000 && typeof (m.load) != "undefined") {_RecordType("<904,910,54>",(m.load)); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (m) != "undefined") {_RecordType("<904,905,54>",(m)); Inst71++; } } catch(e) {}
m.load(0);
99;
try { if (Inst72 <= 1000 && typeof (m.load8) != "undefined") {_RecordType("<919,926,56>",(m.load8)); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (m) != "undefined") {_RecordType("<919,920,56>",(m)); Inst73++; } } catch(e) {}
m.load8(-8);

