var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
var Inst102 = 0;
var Inst103 = 0;
var Inst104 = 0;
var Inst105 = 0;
var Inst106 = 0;
var Inst107 = 0;
var Inst108 = 0;
var Inst109 = 0;
var Inst110 = 0;
var Inst111 = 0;
var Inst112 = 0;
var Inst113 = 0;
var Inst114 = 0;
var Inst115 = 0;
var Inst116 = 0;
var Inst117 = 0;
var Inst118 = 0;
var Inst119 = 0;
var Inst120 = 0;
var Inst121 = 0;
var Inst122 = 0;
var Inst123 = 0;
var Inst124 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2017 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax --validate-asm
// This file contains test cases that are particularly interesting because they
// omit the usual call-site coercion of function calls that target well-known
// stdlib functions.
try { if (Inst0 <= 1000 && typeof (SuccessStdlibWithoutAnnotation) != "undefined") {_RecordType("<404,434,8>",(SuccessStdlibWithoutAnnotation)); Inst0++; } } catch(e) {}
(function SuccessStdlibWithoutAnnotation() {
try { if (Inst1 <= 1000 && typeof (Module) != "undefined") {_RecordType("<450,456,9>",(Module)); Inst1++; } } catch(e) {}
  function Module(stdlib, imports, heap) {
try { if (Inst2 <= 1000 && typeof (stdlib) != "undefined") {_RecordType("<457,463,9>",(stdlib)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (imports) != "undefined") {_RecordType("<465,472,9>",(imports)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (heap) != "undefined") {_RecordType("<474,478,9>",(heap)); Inst4++; } } catch(e) {}
    "use asm";

try { if (Inst6 <= 1000 && typeof (stdlib.Math.imul) != "undefined") {_RecordType("<513,529,12>",(stdlib.Math.imul)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (stdlib.Math) != "undefined") {_RecordType("<513,524,12>",(stdlib.Math)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (stdlib) != "undefined") {_RecordType("<513,519,12>",(stdlib)); Inst8++; } } catch(e) {}
    var imul = stdlib.Math.imul;
try { if (Inst5 <= 1000 && typeof (imul) != "undefined") {_RecordType("<506,510,12>",(imul)); Inst5++; } } catch(e) {}

try { if (Inst9 <= 1000 && typeof (f) != "undefined") {_RecordType("<545,546,14>",(f)); Inst9++; } } catch(e) {}
    function f(a, b) {
try { if (Inst10 <= 1000 && typeof (a) != "undefined") {_RecordType("<547,548,14>",(a)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (b) != "undefined") {_RecordType("<550,551,14>",(b)); Inst11++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (a) != "undefined") {_RecordType("<565,566,15>",(a)); Inst13++; } } catch(e) {}
      a = a | 0;
try { if (Inst12 <= 1000 && typeof (a) != "undefined") {_RecordType("<561,562,15>",(a)); Inst12++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (b) != "undefined") {_RecordType("<582,583,16>",(b)); Inst15++; } } catch(e) {}
      b = b | 0;
try { if (Inst14 <= 1000 && typeof (b) != "undefined") {_RecordType("<578,579,16>",(b)); Inst14++; } } catch(e) {}
      var r = 0;
try { if (Inst16 <= 1000 && typeof (r) != "undefined") {_RecordType("<599,600,17>",(r)); Inst16++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (imul) != "undefined") {_RecordType("<616,620,18>",(imul)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (a) != "undefined") {_RecordType("<621,622,18>",(a)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (b) != "undefined") {_RecordType("<624,625,18>",(b)); Inst20++; } } catch(e) {}
      r = imul(a, b);
try { if (Inst17 <= 1000 && typeof (r) != "undefined") {_RecordType("<612,613,18>",(r)); Inst17++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (r) != "undefined") {_RecordType("<641,642,19>",(r)); Inst21++; } } catch(e) {}
      return r | 0;
    }

try { if (Inst22 <= 1000 && typeof (f) != "undefined") {_RecordType("<677,678,23>",(f)); Inst22++; } } catch(e) {}
    return {
      f: f
    };
  }

try { if (Inst24 <= 1000 && typeof (Module) != "undefined") {_RecordType("<701,707,27>",(Module)); Inst24++; } } catch(e) {}
  var m = Module(this);
try { if (Inst23 <= 1000 && typeof (m) != "undefined") {_RecordType("<697,698,27>",(m)); Inst23++; } } catch(e) {}
  966;
try { if (Inst25 <= 1000 && typeof (m.f) != "undefined") {_RecordType("<724,727,29>",(m.f)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (m) != "undefined") {_RecordType("<724,725,29>",(m)); Inst26++; } } catch(e) {}
  m.f(23, 42);
  -0x0fffffff;
try { if (Inst27 <= 1000 && typeof (m.f) != "undefined") {_RecordType("<754,757,31>",(m.f)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (m) != "undefined") {_RecordType("<754,755,31>",(m)); Inst28++; } } catch(e) {}
  m.f(0x7ffffff, 0x7ffffff);
})();

try { if (Inst29 <= 1000 && typeof (SuccessStdlibWithoutAnnotationThenRound) != "undefined") {_RecordType("<798,837,34>",(SuccessStdlibWithoutAnnotationThenRound)); Inst29++; } } catch(e) {}
(function SuccessStdlibWithoutAnnotationThenRound() {
try { if (Inst30 <= 1000 && typeof (Module) != "undefined") {_RecordType("<853,859,35>",(Module)); Inst30++; } } catch(e) {}
  function Module(stdlib, imports, heap) {
try { if (Inst31 <= 1000 && typeof (stdlib) != "undefined") {_RecordType("<860,866,35>",(stdlib)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (imports) != "undefined") {_RecordType("<868,875,35>",(imports)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (heap) != "undefined") {_RecordType("<877,881,35>",(heap)); Inst33++; } } catch(e) {}
    "use asm";

try { if (Inst35 <= 1000 && typeof (stdlib.Math.fround) != "undefined") {_RecordType("<918,936,38>",(stdlib.Math.fround)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (stdlib.Math) != "undefined") {_RecordType("<918,929,38>",(stdlib.Math)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (stdlib) != "undefined") {_RecordType("<918,924,38>",(stdlib)); Inst37++; } } catch(e) {}
    var fround = stdlib.Math.fround;
try { if (Inst34 <= 1000 && typeof (fround) != "undefined") {_RecordType("<909,915,38>",(fround)); Inst34++; } } catch(e) {}
try { if (Inst39 <= 1000 && typeof (stdlib.Math.imul) != "undefined") {_RecordType("<953,969,39>",(stdlib.Math.imul)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (stdlib.Math) != "undefined") {_RecordType("<953,964,39>",(stdlib.Math)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (stdlib) != "undefined") {_RecordType("<953,959,39>",(stdlib)); Inst41++; } } catch(e) {}
    var imul = stdlib.Math.imul;
try { if (Inst38 <= 1000 && typeof (imul) != "undefined") {_RecordType("<946,950,39>",(imul)); Inst38++; } } catch(e) {}

try { if (Inst42 <= 1000 && typeof (f) != "undefined") {_RecordType("<985,986,41>",(f)); Inst42++; } } catch(e) {}
    function f(a, b) {
try { if (Inst43 <= 1000 && typeof (a) != "undefined") {_RecordType("<987,988,41>",(a)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (b) != "undefined") {_RecordType("<990,991,41>",(b)); Inst44++; } } catch(e) {}
try { if (Inst46 <= 1000 && typeof (a) != "undefined") {_RecordType("<1005,1006,42>",(a)); Inst46++; } } catch(e) {}
      a = a | 0;
try { if (Inst45 <= 1000 && typeof (a) != "undefined") {_RecordType("<1001,1002,42>",(a)); Inst45++; } } catch(e) {}
try { if (Inst48 <= 1000 && typeof (b) != "undefined") {_RecordType("<1022,1023,43>",(b)); Inst48++; } } catch(e) {}
      b = b | 0;
try { if (Inst47 <= 1000 && typeof (b) != "undefined") {_RecordType("<1018,1019,43>",(b)); Inst47++; } } catch(e) {}
try { if (Inst50 <= 1000 && typeof (fround) != "undefined") {_RecordType("<1043,1049,44>",(fround)); Inst50++; } } catch(e) {}
      var r = fround(0);
try { if (Inst49 <= 1000 && typeof (r) != "undefined") {_RecordType("<1039,1040,44>",(r)); Inst49++; } } catch(e) {}
try { if (Inst52 <= 1000 && typeof (fround) != "undefined") {_RecordType("<1064,1070,45>",(fround)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (imul) != "undefined") {_RecordType("<1071,1075,45>",(imul)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (a) != "undefined") {_RecordType("<1076,1077,45>",(a)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (b) != "undefined") {_RecordType("<1079,1080,45>",(b)); Inst55++; } } catch(e) {}
      r = fround(imul(a, b));
try { if (Inst51 <= 1000 && typeof (r) != "undefined") {_RecordType("<1060,1061,45>",(r)); Inst51++; } } catch(e) {}
try { if (Inst56 <= 1000 && typeof (fround) != "undefined") {_RecordType("<1097,1103,46>",(fround)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (r) != "undefined") {_RecordType("<1104,1105,46>",(r)); Inst57++; } } catch(e) {}
      return fround(r);
    }

try { if (Inst58 <= 1000 && typeof (f) != "undefined") {_RecordType("<1137,1138,50>",(f)); Inst58++; } } catch(e) {}
    return {
      f: f
    };
  }

try { if (Inst60 <= 1000 && typeof (Module) != "undefined") {_RecordType("<1161,1167,54>",(Module)); Inst60++; } } catch(e) {}
  var m = Module(this);
try { if (Inst59 <= 1000 && typeof (m) != "undefined") {_RecordType("<1157,1158,54>",(m)); Inst59++; } } catch(e) {}
  966;
try { if (Inst61 <= 1000 && typeof (m.f) != "undefined") {_RecordType("<1184,1187,56>",(m.f)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (m) != "undefined") {_RecordType("<1184,1185,56>",(m)); Inst62++; } } catch(e) {}
  m.f(23, 42);
  -0x0fffffff - 1;
try { if (Inst63 <= 1000 && typeof (m.f) != "undefined") {_RecordType("<1218,1221,58>",(m.f)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (m) != "undefined") {_RecordType("<1218,1219,58>",(m)); Inst64++; } } catch(e) {}
  m.f(0x7ffffff, 0x7ffffff);
})();

try { if (Inst65 <= 1000 && typeof (FailureStdlibWithoutAnnotationMismatch) != "undefined") {_RecordType("<1262,1300,61>",(FailureStdlibWithoutAnnotationMismatch)); Inst65++; } } catch(e) {}
(function FailureStdlibWithoutAnnotationMismatch() {
try { if (Inst66 <= 1000 && typeof (Module) != "undefined") {_RecordType("<1316,1322,62>",(Module)); Inst66++; } } catch(e) {}
  function Module(stdlib, imports, heap) {
try { if (Inst67 <= 1000 && typeof (stdlib) != "undefined") {_RecordType("<1323,1329,62>",(stdlib)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (imports) != "undefined") {_RecordType("<1331,1338,62>",(imports)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (heap) != "undefined") {_RecordType("<1340,1344,62>",(heap)); Inst69++; } } catch(e) {}
    "use asm";

try { if (Inst71 <= 1000 && typeof (stdlib.Math.fround) != "undefined") {_RecordType("<1381,1399,65>",(stdlib.Math.fround)); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (stdlib.Math) != "undefined") {_RecordType("<1381,1392,65>",(stdlib.Math)); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (stdlib) != "undefined") {_RecordType("<1381,1387,65>",(stdlib)); Inst73++; } } catch(e) {}
    var fround = stdlib.Math.fround;
try { if (Inst70 <= 1000 && typeof (fround) != "undefined") {_RecordType("<1372,1378,65>",(fround)); Inst70++; } } catch(e) {}
try { if (Inst75 <= 1000 && typeof (stdlib.Math.imul) != "undefined") {_RecordType("<1416,1432,66>",(stdlib.Math.imul)); Inst75++; } } catch(e) {}try { if (Inst76 <= 1000 && typeof (stdlib.Math) != "undefined") {_RecordType("<1416,1427,66>",(stdlib.Math)); Inst76++; } } catch(e) {}try { if (Inst77 <= 1000 && typeof (stdlib) != "undefined") {_RecordType("<1416,1422,66>",(stdlib)); Inst77++; } } catch(e) {}
    var imul = stdlib.Math.imul;
try { if (Inst74 <= 1000 && typeof (imul) != "undefined") {_RecordType("<1409,1413,66>",(imul)); Inst74++; } } catch(e) {}

try { if (Inst78 <= 1000 && typeof (f) != "undefined") {_RecordType("<1448,1449,68>",(f)); Inst78++; } } catch(e) {}
    function f(a, b) {
try { if (Inst79 <= 1000 && typeof (a) != "undefined") {_RecordType("<1450,1451,68>",(a)); Inst79++; } } catch(e) {}try { if (Inst80 <= 1000 && typeof (b) != "undefined") {_RecordType("<1453,1454,68>",(b)); Inst80++; } } catch(e) {}
try { if (Inst82 <= 1000 && typeof (a) != "undefined") {_RecordType("<1468,1469,69>",(a)); Inst82++; } } catch(e) {}
      a = a | 0;
try { if (Inst81 <= 1000 && typeof (a) != "undefined") {_RecordType("<1464,1465,69>",(a)); Inst81++; } } catch(e) {}
try { if (Inst84 <= 1000 && typeof (b) != "undefined") {_RecordType("<1485,1486,70>",(b)); Inst84++; } } catch(e) {}
      b = b | 0;
try { if (Inst83 <= 1000 && typeof (b) != "undefined") {_RecordType("<1481,1482,70>",(b)); Inst83++; } } catch(e) {}
try { if (Inst86 <= 1000 && typeof (fround) != "undefined") {_RecordType("<1506,1512,71>",(fround)); Inst86++; } } catch(e) {}
      var r = fround(0);
try { if (Inst85 <= 1000 && typeof (r) != "undefined") {_RecordType("<1502,1503,71>",(r)); Inst85++; } } catch(e) {}
try { if (Inst88 <= 1000 && typeof (imul) != "undefined") {_RecordType("<1527,1531,72>",(imul)); Inst88++; } } catch(e) {}try { if (Inst89 <= 1000 && typeof (a) != "undefined") {_RecordType("<1532,1533,72>",(a)); Inst89++; } } catch(e) {}try { if (Inst90 <= 1000 && typeof (b) != "undefined") {_RecordType("<1535,1536,72>",(b)); Inst90++; } } catch(e) {}
      r = imul(a, b);
try { if (Inst87 <= 1000 && typeof (r) != "undefined") {_RecordType("<1523,1524,72>",(r)); Inst87++; } } catch(e) {}
try { if (Inst91 <= 1000 && typeof (r) != "undefined") {_RecordType("<1552,1553,73>",(r)); Inst91++; } } catch(e) {}
      return r | 0;
    }

try { if (Inst92 <= 1000 && typeof (f) != "undefined") {_RecordType("<1588,1589,77>",(f)); Inst92++; } } catch(e) {}
    return {
      f: f
    };
  }

try { if (Inst94 <= 1000 && typeof (Module) != "undefined") {_RecordType("<1612,1618,81>",(Module)); Inst94++; } } catch(e) {}
  var m = Module(this);
try { if (Inst93 <= 1000 && typeof (m) != "undefined") {_RecordType("<1608,1609,81>",(m)); Inst93++; } } catch(e) {}
  966;
try { if (Inst95 <= 1000 && typeof (m.f) != "undefined") {_RecordType("<1635,1638,83>",(m.f)); Inst95++; } } catch(e) {}try { if (Inst96 <= 1000 && typeof (m) != "undefined") {_RecordType("<1635,1636,83>",(m)); Inst96++; } } catch(e) {}
  m.f(23, 42);
  -0x0fffffff;
try { if (Inst97 <= 1000 && typeof (m.f) != "undefined") {_RecordType("<1665,1668,85>",(m.f)); Inst97++; } } catch(e) {}try { if (Inst98 <= 1000 && typeof (m) != "undefined") {_RecordType("<1665,1666,85>",(m)); Inst98++; } } catch(e) {}
  m.f(0x7ffffff, 0x7ffffff);
})();

try { if (Inst99 <= 1000 && typeof (SuccessStdlibWithoutAnnotationUsedInReturn) != "undefined") {_RecordType("<1709,1751,88>",(SuccessStdlibWithoutAnnotationUsedInReturn)); Inst99++; } } catch(e) {}
(function SuccessStdlibWithoutAnnotationUsedInReturn() {
try { if (Inst100 <= 1000 && typeof (Module) != "undefined") {_RecordType("<1767,1773,89>",(Module)); Inst100++; } } catch(e) {}
  function Module(stdlib, imports, heap) {
try { if (Inst101 <= 1000 && typeof (stdlib) != "undefined") {_RecordType("<1774,1780,89>",(stdlib)); Inst101++; } } catch(e) {}try { if (Inst102 <= 1000 && typeof (imports) != "undefined") {_RecordType("<1782,1789,89>",(imports)); Inst102++; } } catch(e) {}try { if (Inst103 <= 1000 && typeof (heap) != "undefined") {_RecordType("<1791,1795,89>",(heap)); Inst103++; } } catch(e) {}
    "use asm";

try { if (Inst105 <= 1000 && typeof (stdlib.Math.imul) != "undefined") {_RecordType("<1830,1846,92>",(stdlib.Math.imul)); Inst105++; } } catch(e) {}try { if (Inst106 <= 1000 && typeof (stdlib.Math) != "undefined") {_RecordType("<1830,1841,92>",(stdlib.Math)); Inst106++; } } catch(e) {}try { if (Inst107 <= 1000 && typeof (stdlib) != "undefined") {_RecordType("<1830,1836,92>",(stdlib)); Inst107++; } } catch(e) {}
    var imul = stdlib.Math.imul;
try { if (Inst104 <= 1000 && typeof (imul) != "undefined") {_RecordType("<1823,1827,92>",(imul)); Inst104++; } } catch(e) {}

try { if (Inst108 <= 1000 && typeof (f) != "undefined") {_RecordType("<1862,1863,94>",(f)); Inst108++; } } catch(e) {}
    function f(a, b) {
try { if (Inst109 <= 1000 && typeof (a) != "undefined") {_RecordType("<1864,1865,94>",(a)); Inst109++; } } catch(e) {}try { if (Inst110 <= 1000 && typeof (b) != "undefined") {_RecordType("<1867,1868,94>",(b)); Inst110++; } } catch(e) {}
try { if (Inst112 <= 1000 && typeof (a) != "undefined") {_RecordType("<1882,1883,95>",(a)); Inst112++; } } catch(e) {}
      a = a | 0;
try { if (Inst111 <= 1000 && typeof (a) != "undefined") {_RecordType("<1878,1879,95>",(a)); Inst111++; } } catch(e) {}
try { if (Inst114 <= 1000 && typeof (b) != "undefined") {_RecordType("<1899,1900,96>",(b)); Inst114++; } } catch(e) {}
      b = b | 0;
try { if (Inst113 <= 1000 && typeof (b) != "undefined") {_RecordType("<1895,1896,96>",(b)); Inst113++; } } catch(e) {}
try { if (Inst115 <= 1000 && typeof (imul) != "undefined") {_RecordType("<1919,1923,97>",(imul)); Inst115++; } } catch(e) {}try { if (Inst116 <= 1000 && typeof (a) != "undefined") {_RecordType("<1924,1925,97>",(a)); Inst116++; } } catch(e) {}try { if (Inst117 <= 1000 && typeof (b) != "undefined") {_RecordType("<1927,1928,97>",(b)); Inst117++; } } catch(e) {}
      return imul(a, b);
    }

try { if (Inst118 <= 1000 && typeof (f) != "undefined") {_RecordType("<1960,1961,101>",(f)); Inst118++; } } catch(e) {}
    return {
      f: f
    };
  }

try { if (Inst120 <= 1000 && typeof (Module) != "undefined") {_RecordType("<1984,1990,105>",(Module)); Inst120++; } } catch(e) {}
  var m = Module(this);
try { if (Inst119 <= 1000 && typeof (m) != "undefined") {_RecordType("<1980,1981,105>",(m)); Inst119++; } } catch(e) {}
  966;
try { if (Inst121 <= 1000 && typeof (m.f) != "undefined") {_RecordType("<2007,2010,107>",(m.f)); Inst121++; } } catch(e) {}try { if (Inst122 <= 1000 && typeof (m) != "undefined") {_RecordType("<2007,2008,107>",(m)); Inst122++; } } catch(e) {}
  m.f(23, 42);
  -0x0fffffff;
try { if (Inst123 <= 1000 && typeof (m.f) != "undefined") {_RecordType("<2037,2040,109>",(m.f)); Inst123++; } } catch(e) {}try { if (Inst124 <= 1000 && typeof (m) != "undefined") {_RecordType("<2037,2038,109>",(m)); Inst124++; } } catch(e) {}
  m.f(0x7ffffff, 0x7ffffff);
})();

