var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2014 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
try { if (Inst0 <= 1000 && typeof (Module) != "undefined") {_RecordType("<176,182,4>",(Module)); Inst0++; } } catch(e) {}
function Module() {
  "use asm";

try { if (Inst1 <= 1000 && typeof (w0) != "undefined") {_RecordType("<212,214,7>",(w0)); Inst1++; } } catch(e) {}
  function w0(a) {
try { if (Inst2 <= 1000 && typeof (a) != "undefined") {_RecordType("<215,216,7>",(a)); Inst2++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (a) != "undefined") {_RecordType("<228,229,8>",(a)); Inst4++; } } catch(e) {}
    a = a | 0;
try { if (Inst3 <= 1000 && typeof (a) != "undefined") {_RecordType("<224,225,8>",(a)); Inst3++; } } catch(e) {}

try { if (Inst5 <= 1000 && typeof (a) != "undefined") {_RecordType("<244,245,10>",(a)); Inst5++; } } catch(e) {}
    if (a) {
      while (1) {
        ;
      }
    }

    return 42;
  }

try { if (Inst6 <= 1000 && typeof (w1) != "undefined") {_RecordType("<323,325,19>",(w1)); Inst6++; } } catch(e) {}
  function w1(a) {
try { if (Inst7 <= 1000 && typeof (a) != "undefined") {_RecordType("<326,327,19>",(a)); Inst7++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (a) != "undefined") {_RecordType("<339,340,20>",(a)); Inst9++; } } catch(e) {}
    a = a | 0;
try { if (Inst8 <= 1000 && typeof (a) != "undefined") {_RecordType("<335,336,20>",(a)); Inst8++; } } catch(e) {}

    while (1) {
      return 42;
    }

    return 106;
  }

try { if (Inst10 <= 1000 && typeof (d0) != "undefined") {_RecordType("<419,421,29>",(d0)); Inst10++; } } catch(e) {}
  function d0(a) {
try { if (Inst11 <= 1000 && typeof (a) != "undefined") {_RecordType("<422,423,29>",(a)); Inst11++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (a) != "undefined") {_RecordType("<435,436,30>",(a)); Inst13++; } } catch(e) {}
    a = a | 0;
try { if (Inst12 <= 1000 && typeof (a) != "undefined") {_RecordType("<431,432,30>",(a)); Inst12++; } } catch(e) {}

try { if (Inst14 <= 1000 && typeof (a) != "undefined") {_RecordType("<451,452,32>",(a)); Inst14++; } } catch(e) {}
    if (a) {
      do {
        ;
      } while (1);
    }

    return 42;
  }

try { if (Inst15 <= 1000 && typeof (d1) != "undefined") {_RecordType("<534,536,41>",(d1)); Inst15++; } } catch(e) {}
  function d1(a) {
try { if (Inst16 <= 1000 && typeof (a) != "undefined") {_RecordType("<537,538,41>",(a)); Inst16++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (a) != "undefined") {_RecordType("<550,551,42>",(a)); Inst18++; } } catch(e) {}
    a = a | 0;
try { if (Inst17 <= 1000 && typeof (a) != "undefined") {_RecordType("<546,547,42>",(a)); Inst17++; } } catch(e) {}

    do {
      return 42;
    } while (1);

    return 107;
  }

try { if (Inst19 <= 1000 && typeof (f0) != "undefined") {_RecordType("<634,636,51>",(f0)); Inst19++; } } catch(e) {}
  function f0(a) {
try { if (Inst20 <= 1000 && typeof (a) != "undefined") {_RecordType("<637,638,51>",(a)); Inst20++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (a) != "undefined") {_RecordType("<650,651,52>",(a)); Inst22++; } } catch(e) {}
    a = a | 0;
try { if (Inst21 <= 1000 && typeof (a) != "undefined") {_RecordType("<646,647,52>",(a)); Inst21++; } } catch(e) {}

try { if (Inst23 <= 1000 && typeof (a) != "undefined") {_RecordType("<666,667,54>",(a)); Inst23++; } } catch(e) {}
    if (a) {
      for (;;) {
        ;
      }
    }

    return 42;
  }

try { if (Inst24 <= 1000 && typeof (f1) != "undefined") {_RecordType("<744,746,63>",(f1)); Inst24++; } } catch(e) {}
  function f1(a) {
try { if (Inst25 <= 1000 && typeof (a) != "undefined") {_RecordType("<747,748,63>",(a)); Inst25++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (a) != "undefined") {_RecordType("<760,761,64>",(a)); Inst27++; } } catch(e) {}
    a = a | 0;
try { if (Inst26 <= 1000 && typeof (a) != "undefined") {_RecordType("<756,757,64>",(a)); Inst26++; } } catch(e) {}

    for (;;) {
      return 42;
    }

    return 108;
  }

try { if (Inst28 <= 1000 && typeof (w0) != "undefined") {_RecordType("<847,849,74>",(w0)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (w1) != "undefined") {_RecordType("<859,861,75>",(w1)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (d0) != "undefined") {_RecordType("<871,873,76>",(d0)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (d1) != "undefined") {_RecordType("<883,885,77>",(d1)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (f0) != "undefined") {_RecordType("<895,897,78>",(f0)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (f1) != "undefined") {_RecordType("<907,909,79>",(f1)); Inst33++; } } catch(e) {}
  return {
    w0: w0,
    w1: w1,
    d0: d0,
    d1: d1,
    f0: f0,
    f1: f1
  };
}

try { if (Inst35 <= 1000 && typeof (Module) != "undefined") {_RecordType("<926,932,83>",(Module)); Inst35++; } } catch(e) {}
var m = Module();
try { if (Inst34 <= 1000 && typeof (m) != "undefined") {_RecordType("<922,923,83>",(m)); Inst34++; } } catch(e) {}
42;
try { if (Inst36 <= 1000 && typeof (m.w0) != "undefined") {_RecordType("<940,944,85>",(m.w0)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (m) != "undefined") {_RecordType("<940,941,85>",(m)); Inst37++; } } catch(e) {}
m.w0(0);
42;
try { if (Inst38 <= 1000 && typeof (m.w1) != "undefined") {_RecordType("<953,957,87>",(m.w1)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (m) != "undefined") {_RecordType("<953,954,87>",(m)); Inst39++; } } catch(e) {}
m.w1(0);
42;
try { if (Inst40 <= 1000 && typeof (m.d0) != "undefined") {_RecordType("<966,970,89>",(m.d0)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (m) != "undefined") {_RecordType("<966,967,89>",(m)); Inst41++; } } catch(e) {}
m.d0(0);
42;
try { if (Inst42 <= 1000 && typeof (m.d1) != "undefined") {_RecordType("<979,983,91>",(m.d1)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (m) != "undefined") {_RecordType("<979,980,91>",(m)); Inst43++; } } catch(e) {}
m.d1(0);
42;
try { if (Inst44 <= 1000 && typeof (m.f0) != "undefined") {_RecordType("<992,996,93>",(m.f0)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (m) != "undefined") {_RecordType("<992,993,93>",(m)); Inst45++; } } catch(e) {}
m.f0(0);
42;
try { if (Inst46 <= 1000 && typeof (m.f1) != "undefined") {_RecordType("<1005,1009,95>",(m.f1)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (m) != "undefined") {_RecordType("<1005,1006,95>",(m)); Inst47++; } } catch(e) {}
m.f1(0);

