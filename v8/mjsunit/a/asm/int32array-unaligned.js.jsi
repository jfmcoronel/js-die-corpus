var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2014 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
try { if (Inst0 <= 1000 && typeof (Module) != "undefined") {_RecordType("<176,182,4>",(Module)); Inst0++; } } catch(e) {}
function Module(stdlib, foreign, heap) {
try { if (Inst1 <= 1000 && typeof (stdlib) != "undefined") {_RecordType("<183,189,4>",(stdlib)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (foreign) != "undefined") {_RecordType("<191,198,4>",(foreign)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (heap) != "undefined") {_RecordType("<200,204,4>",(heap)); Inst3++; } } catch(e) {}
  "use asm";

try { if (Inst5 <= 1000 && typeof (stdlib.Int32Array) != "undefined") {_RecordType("<240,257,7>",(stdlib.Int32Array)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (stdlib) != "undefined") {_RecordType("<240,246,7>",(stdlib)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (heap) != "undefined") {_RecordType("<258,262,7>",(heap)); Inst7++; } } catch(e) {}
  var MEM32 = new stdlib.Int32Array(heap);
try { if (Inst4 <= 1000 && typeof (MEM32) != "undefined") {_RecordType("<228,233,7>",(MEM32)); Inst4++; } } catch(e) {}

try { if (Inst8 <= 1000 && typeof (load) != "undefined") {_RecordType("<277,281,9>",(load)); Inst8++; } } catch(e) {}
  function load(i) {
try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<282,283,9>",(i)); Inst9++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<295,296,10>",(i)); Inst11++; } } catch(e) {}
    i = i | 0;
try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<291,292,10>",(i)); Inst10++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (MEM32[i >> 2]) != "undefined") {_RecordType("<310,323,11>",(MEM32[i >> 2])); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (MEM32) != "undefined") {_RecordType("<310,315,11>",(MEM32)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<316,317,11>",(i)); Inst15++; } } catch(e) {}
    i = MEM32[i >> 2] | 0;
try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<306,307,11>",(i)); Inst12++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<340,341,12>",(i)); Inst16++; } } catch(e) {}
    return i | 0;
  }

try { if (Inst17 <= 1000 && typeof (store) != "undefined") {_RecordType("<363,368,15>",(store)); Inst17++; } } catch(e) {}
  function store(i, v) {
try { if (Inst18 <= 1000 && typeof (i) != "undefined") {_RecordType("<369,370,15>",(i)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (v) != "undefined") {_RecordType("<372,373,15>",(v)); Inst19++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<385,386,16>",(i)); Inst21++; } } catch(e) {}
    i = i | 0;
try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<381,382,16>",(i)); Inst20++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (v) != "undefined") {_RecordType("<400,401,17>",(v)); Inst23++; } } catch(e) {}
    v = v | 0;
try { if (Inst22 <= 1000 && typeof (v) != "undefined") {_RecordType("<396,397,17>",(v)); Inst22++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (v) != "undefined") {_RecordType("<427,428,18>",(v)); Inst27++; } } catch(e) {}
    MEM32[i >> 2] = v;
try { if (Inst24 <= 1000 && typeof (MEM32[i >> 2]) != "undefined") {_RecordType("<411,424,18>",(MEM32[i >> 2])); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (MEM32) != "undefined") {_RecordType("<411,416,18>",(MEM32)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (i) != "undefined") {_RecordType("<417,418,18>",(i)); Inst26++; } } catch(e) {}
  }

try { if (Inst28 <= 1000 && typeof (load) != "undefined") {_RecordType("<456,460,22>",(load)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (store) != "undefined") {_RecordType("<473,478,23>",(store)); Inst29++; } } catch(e) {}
  return {
    load: load,
    store: store
  };
}

try { if (Inst31 <= 1000 && typeof (Module) != "undefined") {_RecordType("<495,501,27>",(Module)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (ArrayBuffer) != "undefined") {_RecordType("<516,527,27>",(ArrayBuffer)); Inst32++; } } catch(e) {}
var m = Module(this, {}, new ArrayBuffer(1024));
try { if (Inst30 <= 1000 && typeof (m) != "undefined") {_RecordType("<491,492,27>",(m)); Inst30++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (m.store) != "undefined") {_RecordType("<536,543,28>",(m.store)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (m) != "undefined") {_RecordType("<536,537,28>",(m)); Inst34++; } } catch(e) {}
m.store(0, 0x12345678);
try { if (Inst35 <= 1000 && typeof (m.store) != "undefined") {_RecordType("<560,567,29>",(m.store)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (m) != "undefined") {_RecordType("<560,561,29>",(m)); Inst36++; } } catch(e) {}
m.store(4, -1);
try { if (Inst37 <= 1000 && typeof (m.store) != "undefined") {_RecordType("<576,583,30>",(m.store)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (m) != "undefined") {_RecordType("<576,577,30>",(m)); Inst38++; } } catch(e) {}
m.store(8, -1);

for (var i = 0; i < 4; ++i) {
try { if (Inst39 <= 1000 && typeof (i) != "undefined") {_RecordType("<602,603,32>",(i)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (i) != "undefined") {_RecordType("<609,610,32>",(i)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (i) != "undefined") {_RecordType("<618,619,32>",(i)); Inst41++; } } catch(e) {}
  0x12345678;
try { if (Inst42 <= 1000 && typeof (m.load) != "undefined") {_RecordType("<639,645,34>",(m.load)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (m) != "undefined") {_RecordType("<639,640,34>",(m)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (i) != "undefined") {_RecordType("<646,647,34>",(i)); Inst44++; } } catch(e) {}
  m.load(i);
}

for (var i = 4; i < 12; ++i) {
try { if (Inst45 <= 1000 && typeof (i) != "undefined") {_RecordType("<662,663,37>",(i)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (i) != "undefined") {_RecordType("<669,670,37>",(i)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (i) != "undefined") {_RecordType("<679,680,37>",(i)); Inst47++; } } catch(e) {}
  -1;
try { if (Inst48 <= 1000 && typeof (m.load) != "undefined") {_RecordType("<692,698,39>",(m.load)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (m) != "undefined") {_RecordType("<692,693,39>",(m)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (i) != "undefined") {_RecordType("<699,700,39>",(i)); Inst50++; } } catch(e) {}
  m.load(i);
}

for (var j = 4; j < 8; ++j) {
try { if (Inst51 <= 1000 && typeof (j) != "undefined") {_RecordType("<715,716,42>",(j)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (j) != "undefined") {_RecordType("<722,723,42>",(j)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (j) != "undefined") {_RecordType("<731,732,42>",(j)); Inst53++; } } catch(e) {}
try { if (Inst54 <= 1000 && typeof (m.store) != "undefined") {_RecordType("<738,745,43>",(m.store)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (m) != "undefined") {_RecordType("<738,739,43>",(m)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (j) != "undefined") {_RecordType("<746,747,43>",(j)); Inst56++; } } catch(e) {}
  m.store(j, 0x11223344);

  for (var i = 0; i < 4; ++i) {
try { if (Inst57 <= 1000 && typeof (i) != "undefined") {_RecordType("<774,775,45>",(i)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (i) != "undefined") {_RecordType("<781,782,45>",(i)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (i) != "undefined") {_RecordType("<790,791,45>",(i)); Inst59++; } } catch(e) {}
    0x12345678;
try { if (Inst60 <= 1000 && typeof (m.load) != "undefined") {_RecordType("<815,821,47>",(m.load)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (m) != "undefined") {_RecordType("<815,816,47>",(m)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (i) != "undefined") {_RecordType("<822,823,47>",(i)); Inst62++; } } catch(e) {}
    m.load(i);
  }

  for (var i = 4; i < 8; ++i) {
try { if (Inst63 <= 1000 && typeof (i) != "undefined") {_RecordType("<842,843,50>",(i)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (i) != "undefined") {_RecordType("<849,850,50>",(i)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (i) != "undefined") {_RecordType("<858,859,50>",(i)); Inst65++; } } catch(e) {}
    0x11223344;
try { if (Inst66 <= 1000 && typeof (m.load) != "undefined") {_RecordType("<883,889,52>",(m.load)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (m) != "undefined") {_RecordType("<883,884,52>",(m)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (i) != "undefined") {_RecordType("<890,891,52>",(i)); Inst68++; } } catch(e) {}
    m.load(i);
  }

  for (var i = 8; i < 12; ++i) {
try { if (Inst69 <= 1000 && typeof (i) != "undefined") {_RecordType("<910,911,55>",(i)); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (i) != "undefined") {_RecordType("<917,918,55>",(i)); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (i) != "undefined") {_RecordType("<927,928,55>",(i)); Inst71++; } } catch(e) {}
    -1;
try { if (Inst72 <= 1000 && typeof (m.load) != "undefined") {_RecordType("<944,950,57>",(m.load)); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (m) != "undefined") {_RecordType("<944,945,57>",(m)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (i) != "undefined") {_RecordType("<951,952,57>",(i)); Inst74++; } } catch(e) {}
    m.load(i);
  }
}

