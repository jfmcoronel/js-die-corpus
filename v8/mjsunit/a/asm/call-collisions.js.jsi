var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2017 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax
try { if (Inst0 <= 1000 && typeof (CallCollisionFirstTableThenFunction) != "undefined") {_RecordType("<210,245,5>",(CallCollisionFirstTableThenFunction)); Inst0++; } } catch(e) {}
(function CallCollisionFirstTableThenFunction() {
try { if (Inst1 <= 1000 && typeof (Module) != "undefined") {_RecordType("<261,267,6>",(Module)); Inst1++; } } catch(e) {}
  function Module(stdlib, imports, heap) {
try { if (Inst2 <= 1000 && typeof (stdlib) != "undefined") {_RecordType("<268,274,6>",(stdlib)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (imports) != "undefined") {_RecordType("<276,283,6>",(imports)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (heap) != "undefined") {_RecordType("<285,289,6>",(heap)); Inst4++; } } catch(e) {}
    "use asm";

try { if (Inst5 <= 1000 && typeof (f) != "undefined") {_RecordType("<322,323,9>",(f)); Inst5++; } } catch(e) {}
    function f(a) {
try { if (Inst6 <= 1000 && typeof (a) != "undefined") {_RecordType("<324,325,9>",(a)); Inst6++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (a) != "undefined") {_RecordType("<339,340,10>",(a)); Inst8++; } } catch(e) {}
      a = a | 0;
try { if (Inst7 <= 1000 && typeof (a) != "undefined") {_RecordType("<335,336,10>",(a)); Inst7++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (g[a & 0]) != "undefined") {_RecordType("<352,360,11>",(g[a & 0])); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (g) != "undefined") {_RecordType("<352,353,11>",(g)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (a) != "undefined") {_RecordType("<354,355,11>",(a)); Inst11++; } } catch(e) {}
      g[a & 0]();
try { if (Inst12 <= 1000 && typeof (g) != "undefined") {_RecordType("<370,371,12>",(g)); Inst12++; } } catch(e) {}
      g();
    }

try { if (Inst13 <= 1000 && typeof (g) != "undefined") {_RecordType("<395,396,15>",(g)); Inst13++; } } catch(e) {}
    function g() {
      ;
    }

try { if (Inst14 <= 1000 && typeof (f) != "undefined") {_RecordType("<438,439,20>",(f)); Inst14++; } } catch(e) {}
    return {
      f: f
    };
  }

try { if (Inst16 <= 1000 && typeof (Module) != "undefined") {_RecordType("<462,468,24>",(Module)); Inst16++; } } catch(e) {}
  var m = Module(this);
try { if (Inst15 <= 1000 && typeof (m) != "undefined") {_RecordType("<458,459,24>",(m)); Inst15++; } } catch(e) {}

try { if (Inst17 <= 1000 && typeof (m.f) != "undefined") {_RecordType("<486,489,26>",(m.f)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (m) != "undefined") {_RecordType("<486,487,26>",(m)); Inst18++; } } catch(e) {}
  (() => m.f())();

try { if (Inst19 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<499,508,28>",(TypeError)); Inst19++; } } catch(e) {}
  TypeError;
})();

try { if (Inst20 <= 1000 && typeof (CallCollisionFirstFunctionThenTable) != "undefined") {_RecordType("<527,562,31>",(CallCollisionFirstFunctionThenTable)); Inst20++; } } catch(e) {}
(function CallCollisionFirstFunctionThenTable() {
try { if (Inst21 <= 1000 && typeof (Module) != "undefined") {_RecordType("<578,584,32>",(Module)); Inst21++; } } catch(e) {}
  function Module(stdlib, imports, heap) {
try { if (Inst22 <= 1000 && typeof (stdlib) != "undefined") {_RecordType("<585,591,32>",(stdlib)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (imports) != "undefined") {_RecordType("<593,600,32>",(imports)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (heap) != "undefined") {_RecordType("<602,606,32>",(heap)); Inst24++; } } catch(e) {}
    "use asm";

try { if (Inst25 <= 1000 && typeof (f) != "undefined") {_RecordType("<639,640,35>",(f)); Inst25++; } } catch(e) {}
    function f(a) {
try { if (Inst26 <= 1000 && typeof (a) != "undefined") {_RecordType("<641,642,35>",(a)); Inst26++; } } catch(e) {}
try { if (Inst28 <= 1000 && typeof (a) != "undefined") {_RecordType("<656,657,36>",(a)); Inst28++; } } catch(e) {}
      a = a | 0;
try { if (Inst27 <= 1000 && typeof (a) != "undefined") {_RecordType("<652,653,36>",(a)); Inst27++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (g) != "undefined") {_RecordType("<669,670,37>",(g)); Inst29++; } } catch(e) {}
      g();
try { if (Inst30 <= 1000 && typeof (g[a & 0]) != "undefined") {_RecordType("<680,688,38>",(g[a & 0])); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (g) != "undefined") {_RecordType("<680,681,38>",(g)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (a) != "undefined") {_RecordType("<682,683,38>",(a)); Inst32++; } } catch(e) {}
      g[a & 0]();
    }

try { if (Inst33 <= 1000 && typeof (g) != "undefined") {_RecordType("<712,713,41>",(g)); Inst33++; } } catch(e) {}
    function g() {
      ;
    }

try { if (Inst34 <= 1000 && typeof (f) != "undefined") {_RecordType("<755,756,46>",(f)); Inst34++; } } catch(e) {}
    return {
      f: f
    };
  }

try { if (Inst36 <= 1000 && typeof (Module) != "undefined") {_RecordType("<779,785,50>",(Module)); Inst36++; } } catch(e) {}
  var m = Module(this);
try { if (Inst35 <= 1000 && typeof (m) != "undefined") {_RecordType("<775,776,50>",(m)); Inst35++; } } catch(e) {}

try { if (Inst37 <= 1000 && typeof (m.f) != "undefined") {_RecordType("<803,806,52>",(m.f)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (m) != "undefined") {_RecordType("<803,804,52>",(m)); Inst38++; } } catch(e) {}
  (() => m.f())();

try { if (Inst39 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<816,825,54>",(TypeError)); Inst39++; } } catch(e) {}
  TypeError;
})();

try { if (Inst40 <= 1000 && typeof (CallCollisionFunctionAsTable) != "undefined") {_RecordType("<844,872,57>",(CallCollisionFunctionAsTable)); Inst40++; } } catch(e) {}
(function CallCollisionFunctionAsTable() {
try { if (Inst41 <= 1000 && typeof (Module) != "undefined") {_RecordType("<888,894,58>",(Module)); Inst41++; } } catch(e) {}
  function Module(stdlib, imports, heap) {
try { if (Inst42 <= 1000 && typeof (stdlib) != "undefined") {_RecordType("<895,901,58>",(stdlib)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (imports) != "undefined") {_RecordType("<903,910,58>",(imports)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (heap) != "undefined") {_RecordType("<912,916,58>",(heap)); Inst44++; } } catch(e) {}
    "use asm";

try { if (Inst45 <= 1000 && typeof (g) != "undefined") {_RecordType("<949,950,61>",(g)); Inst45++; } } catch(e) {}
    function g() {
      ;
    }

try { if (Inst46 <= 1000 && typeof (f) != "undefined") {_RecordType("<983,984,65>",(f)); Inst46++; } } catch(e) {}
    function f(a) {
try { if (Inst47 <= 1000 && typeof (a) != "undefined") {_RecordType("<985,986,65>",(a)); Inst47++; } } catch(e) {}
try { if (Inst49 <= 1000 && typeof (a) != "undefined") {_RecordType("<1000,1001,66>",(a)); Inst49++; } } catch(e) {}
      a = a | 0;
try { if (Inst48 <= 1000 && typeof (a) != "undefined") {_RecordType("<996,997,66>",(a)); Inst48++; } } catch(e) {}
try { if (Inst50 <= 1000 && typeof (g[a & 0]) != "undefined") {_RecordType("<1013,1021,67>",(g[a & 0])); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (g) != "undefined") {_RecordType("<1013,1014,67>",(g)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (a) != "undefined") {_RecordType("<1015,1016,67>",(a)); Inst52++; } } catch(e) {}
      g[a & 0]();
    }

try { if (Inst53 <= 1000 && typeof (f) != "undefined") {_RecordType("<1054,1055,71>",(f)); Inst53++; } } catch(e) {}
    return {
      f: f
    };
  }

try { if (Inst55 <= 1000 && typeof (Module) != "undefined") {_RecordType("<1078,1084,75>",(Module)); Inst55++; } } catch(e) {}
  var m = Module(this);
try { if (Inst54 <= 1000 && typeof (m) != "undefined") {_RecordType("<1074,1075,75>",(m)); Inst54++; } } catch(e) {}

try { if (Inst56 <= 1000 && typeof (m.f) != "undefined") {_RecordType("<1102,1105,77>",(m.f)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (m) != "undefined") {_RecordType("<1102,1103,77>",(m)); Inst57++; } } catch(e) {}
  (() => m.f())();

try { if (Inst58 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<1115,1124,79>",(TypeError)); Inst58++; } } catch(e) {}
  TypeError;
})();

try { if (Inst59 <= 1000 && typeof (CallCollisionImportAsTable) != "undefined") {_RecordType("<1143,1169,82>",(CallCollisionImportAsTable)); Inst59++; } } catch(e) {}
(function CallCollisionImportAsTable() {
try { if (Inst60 <= 1000 && typeof (Module) != "undefined") {_RecordType("<1185,1191,83>",(Module)); Inst60++; } } catch(e) {}
  function Module(stdlib, imports, heap) {
try { if (Inst61 <= 1000 && typeof (stdlib) != "undefined") {_RecordType("<1192,1198,83>",(stdlib)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (imports) != "undefined") {_RecordType("<1200,1207,83>",(imports)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (heap) != "undefined") {_RecordType("<1209,1213,83>",(heap)); Inst63++; } } catch(e) {}
    "use asm";

try { if (Inst65 <= 1000 && typeof (imports.g) != "undefined") {_RecordType("<1245,1254,86>",(imports.g)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (imports) != "undefined") {_RecordType("<1245,1252,86>",(imports)); Inst66++; } } catch(e) {}
    var g = imports.g;
try { if (Inst64 <= 1000 && typeof (g) != "undefined") {_RecordType("<1241,1242,86>",(g)); Inst64++; } } catch(e) {}

try { if (Inst67 <= 1000 && typeof (f) != "undefined") {_RecordType("<1270,1271,88>",(f)); Inst67++; } } catch(e) {}
    function f(a) {
try { if (Inst68 <= 1000 && typeof (a) != "undefined") {_RecordType("<1272,1273,88>",(a)); Inst68++; } } catch(e) {}
try { if (Inst70 <= 1000 && typeof (a) != "undefined") {_RecordType("<1287,1288,89>",(a)); Inst70++; } } catch(e) {}
      a = a | 0;
try { if (Inst69 <= 1000 && typeof (a) != "undefined") {_RecordType("<1283,1284,89>",(a)); Inst69++; } } catch(e) {}
try { if (Inst71 <= 1000 && typeof (g[a & 0]) != "undefined") {_RecordType("<1300,1308,90>",(g[a & 0])); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (g) != "undefined") {_RecordType("<1300,1301,90>",(g)); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (a) != "undefined") {_RecordType("<1302,1303,90>",(a)); Inst73++; } } catch(e) {}
      g[a & 0]();
    }

try { if (Inst74 <= 1000 && typeof (f) != "undefined") {_RecordType("<1341,1342,94>",(f)); Inst74++; } } catch(e) {}
    return {
      f: f
    };
  }

try { if (Inst76 <= 1000 && typeof (Module) != "undefined") {_RecordType("<1365,1371,98>",(Module)); Inst76++; } } catch(e) {}try { if (Inst77 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1387,1393,99>",(Object)); Inst77++; } } catch(e) {}
  var m = Module(this, {
    g: Object
  });
try { if (Inst75 <= 1000 && typeof (m) != "undefined") {_RecordType("<1361,1362,98>",(m)); Inst75++; } } catch(e) {}

try { if (Inst78 <= 1000 && typeof (m.f) != "undefined") {_RecordType("<1410,1413,102>",(m.f)); Inst78++; } } catch(e) {}try { if (Inst79 <= 1000 && typeof (m) != "undefined") {_RecordType("<1410,1411,102>",(m)); Inst79++; } } catch(e) {}
  (() => m.f())();

try { if (Inst80 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<1423,1432,104>",(TypeError)); Inst80++; } } catch(e) {}
  TypeError;
})();

