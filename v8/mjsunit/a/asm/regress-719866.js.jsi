var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2017 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
try { if (Inst0 <= 1000 && typeof (Module) != "undefined") {_RecordType("<176,182,4>",(Module)); Inst0++; } } catch(e) {}
function Module(stdlib) {
try { if (Inst1 <= 1000 && typeof (stdlib) != "undefined") {_RecordType("<183,189,4>",(stdlib)); Inst1++; } } catch(e) {}
  "use asm";

try { if (Inst2 <= 1000 && typeof (f) != "undefined") {_RecordType("<218,219,7>",(f)); Inst2++; } } catch(e) {}
  function f(a, b, c) {
try { if (Inst3 <= 1000 && typeof (a) != "undefined") {_RecordType("<220,221,7>",(a)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (b) != "undefined") {_RecordType("<223,224,7>",(b)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (c) != "undefined") {_RecordType("<226,227,7>",(c)); Inst5++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (a) != "undefined") {_RecordType("<240,241,8>",(a)); Inst7++; } } catch(e) {}
    a = +a;
try { if (Inst6 <= 1000 && typeof (a) != "undefined") {_RecordType("<235,236,8>",(a)); Inst6++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (b) != "undefined") {_RecordType("<252,253,9>",(b)); Inst9++; } } catch(e) {}
    b = +b;
try { if (Inst8 <= 1000 && typeof (b) != "undefined") {_RecordType("<247,248,9>",(b)); Inst8++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (c) != "undefined") {_RecordType("<264,265,10>",(c)); Inst11++; } } catch(e) {}
    c = +c;
try { if (Inst10 <= 1000 && typeof (c) != "undefined") {_RecordType("<259,260,10>",(c)); Inst10++; } } catch(e) {}
    var r = 0.0;
try { if (Inst12 <= 1000 && typeof (r) != "undefined") {_RecordType("<275,276,11>",(r)); Inst12++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (a) != "undefined") {_RecordType("<292,293,12>",(a)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (b) != "undefined") {_RecordType("<296,297,12>",(b)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (c) != "undefined") {_RecordType("<300,301,12>",(c)); Inst16++; } } catch(e) {}
    r = a / b * c;
try { if (Inst13 <= 1000 && typeof (r) != "undefined") {_RecordType("<288,289,12>",(r)); Inst13++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (r) != "undefined") {_RecordType("<315,316,13>",(r)); Inst17++; } } catch(e) {}
    return +r;
  }

try { if (Inst18 <= 1000 && typeof (f) != "undefined") {_RecordType("<341,342,17>",(f)); Inst18++; } } catch(e) {}
  return {
    f: f
  };
}

try { if (Inst20 <= 1000 && typeof (Module) != "undefined") {_RecordType("<359,365,21>",(Module)); Inst20++; } } catch(e) {}
var m = Module(this);
try { if (Inst19 <= 1000 && typeof (m) != "undefined") {_RecordType("<355,356,21>",(m)); Inst19++; } } catch(e) {}
16;
try { if (Inst21 <= 1000 && typeof (m.f) != "undefined") {_RecordType("<377,380,23>",(m.f)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (m) != "undefined") {_RecordType("<377,378,23>",(m)); Inst22++; } } catch(e) {}
m.f(32, 4, 2);

