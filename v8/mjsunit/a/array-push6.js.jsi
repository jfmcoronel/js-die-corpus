var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2014 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax
try { if (Inst0 <= 1000 && typeof (push_wrapper) != "undefined") {_RecordType("<209,221,5>",(push_wrapper)); Inst0++; } } catch(e) {}
function push_wrapper(array, value) {
try { if (Inst1 <= 1000 && typeof (array) != "undefined") {_RecordType("<222,227,5>",(array)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (value) != "undefined") {_RecordType("<229,234,5>",(value)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (array.push) != "undefined") {_RecordType("<240,250,6>",(array.push)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (array) != "undefined") {_RecordType("<240,245,6>",(array)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (value) != "undefined") {_RecordType("<251,256,6>",(value)); Inst5++; } } catch(e) {}
  array.push(value);
} // Test that optimization of Array.push() for non-Arrays works correctly.


var object = {
  x: 8,
  length: 3
};
try { if (Inst6 <= 1000 && typeof (object) != "undefined") {_RecordType("<341,347,10>",(object)); Inst6++; } } catch(e) {}
object[18] = 5;
try { if (Inst7 <= 1000 && typeof (object[18]) != "undefined") {_RecordType("<375,385,14>",(object[18])); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (object) != "undefined") {_RecordType("<375,381,14>",(object)); Inst8++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<410,425,15>",(Array.prototype)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Array) != "undefined") {_RecordType("<410,415,15>",(Array)); Inst12++; } } catch(e) {}
object.__proto__ = Array.prototype;
try { if (Inst9 <= 1000 && typeof (object.__proto__) != "undefined") {_RecordType("<391,407,15>",(object.__proto__)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (object) != "undefined") {_RecordType("<391,397,15>",(object)); Inst10++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (push_wrapper) != "undefined") {_RecordType("<427,439,16>",(push_wrapper)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (object) != "undefined") {_RecordType("<440,446,16>",(object)); Inst14++; } } catch(e) {}
push_wrapper(object, 1);
try { if (Inst15 <= 1000 && typeof (push_wrapper) != "undefined") {_RecordType("<452,464,17>",(push_wrapper)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (object) != "undefined") {_RecordType("<465,471,17>",(object)); Inst16++; } } catch(e) {}
push_wrapper(object, 1);
5;
try { if (Inst17 <= 1000 && typeof (object.length) != "undefined") {_RecordType("<480,493,19>",(object.length)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (object) != "undefined") {_RecordType("<480,486,19>",(object)); Inst18++; } } catch(e) {}
object.length;
try { if (Inst19 <= 1000 && typeof (push_wrapper) != "undefined") {_RecordType("<495,507,20>",(push_wrapper)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (object) != "undefined") {_RecordType("<508,514,20>",(object)); Inst20++; } } catch(e) {}
push_wrapper(object, 1);
try { if (Inst21 <= 1000 && typeof (push_wrapper) != "undefined") {_RecordType("<520,532,21>",(push_wrapper)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (object) != "undefined") {_RecordType("<533,539,21>",(object)); Inst22++; } } catch(e) {}
push_wrapper(object, 1);
8;
try { if (Inst23 <= 1000 && typeof (object.x) != "undefined") {_RecordType("<548,556,23>",(object.x)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (object) != "undefined") {_RecordType("<548,554,23>",(object)); Inst24++; } } catch(e) {}
object.x;
7;
try { if (Inst25 <= 1000 && typeof (object.length) != "undefined") {_RecordType("<561,574,25>",(object.length)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (object) != "undefined") {_RecordType("<561,567,25>",(object)); Inst26++; } } catch(e) {}
object.length;

