var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2018 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

/* Test behaviors when the prototype has elements */
// forEach
(function () {
  var array = [,];
try { if (Inst0 <= 1000 && typeof (array) != "undefined") {_RecordType("<253,258,8>",(array)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (increment) != "undefined") {_RecordType("<278,287,10>",(increment)); Inst1++; } } catch(e) {}
  function increment(v, k, arr) {
try { if (Inst2 <= 1000 && typeof (v) != "undefined") {_RecordType("<288,289,10>",(v)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (k) != "undefined") {_RecordType("<291,292,10>",(k)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (arr) != "undefined") {_RecordType("<294,297,10>",(arr)); Inst4++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (v) != "undefined") {_RecordType("<314,315,11>",(v)); Inst7++; } } catch(e) {}
    arr[k] = v + 1;
try { if (Inst5 <= 1000 && typeof (arr[k]) != "undefined") {_RecordType("<305,311,11>",(arr[k])); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (arr) != "undefined") {_RecordType("<305,308,11>",(arr)); Inst6++; } } catch(e) {}
  }

try { if (Inst8 <= 1000 && typeof (forEach) != "undefined") {_RecordType("<337,344,14>",(forEach)); Inst8++; } } catch(e) {}
  function forEach() {
try { if (Inst9 <= 1000 && typeof (array.forEach) != "undefined") {_RecordType("<353,366,15>",(array.forEach)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (array) != "undefined") {_RecordType("<353,358,15>",(array)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (increment) != "undefined") {_RecordType("<367,376,15>",(increment)); Inst11++; } } catch(e) {}
    array.forEach(increment);
  }

try { if (Inst12 <= 1000 && typeof (forEach) != "undefined") {_RecordType("<386,393,18>",(forEach)); Inst12++; } } catch(e) {}
  forEach();
try { if (Inst13 <= 1000 && typeof (array) != "undefined") {_RecordType("<399,404,19>",(array)); Inst13++; } } catch(e) {}
  array;
  [,];

  // behavior from the prototype
try { if (Inst14 <= 1000 && typeof (array.__proto__.push) != "undefined") {_RecordType("<449,469,23>",(array.__proto__.push)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (array.__proto__) != "undefined") {_RecordType("<449,464,23>",(array.__proto__)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (array) != "undefined") {_RecordType("<449,454,23>",(array)); Inst16++; } } catch(e) {}
  array.__proto__.push(5);

try { if (Inst17 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<477,508,25>",(Object.getOwnPropertyDescriptor)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Object) != "undefined") {_RecordType("<477,483,25>",(Object)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (array) != "undefined") {_RecordType("<509,514,25>",(array)); Inst19++; } } catch(e) {}
  Object.getOwnPropertyDescriptor(array, 0);
try { if (Inst20 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<522,531,26>",(undefined)); Inst20++; } } catch(e) {}
  undefined;
try { if (Inst21 <= 1000 && typeof (forEach) != "undefined") {_RecordType("<535,542,27>",(forEach)); Inst21++; } } catch(e) {}
  forEach();
try { if (Inst22 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<548,579,28>",(Object.getOwnPropertyDescriptor)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Object) != "undefined") {_RecordType("<548,554,28>",(Object)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (array) != "undefined") {_RecordType("<580,585,28>",(array)); Inst24++; } } catch(e) {}
  Object.getOwnPropertyDescriptor(array, 0);
try { if (Inst25 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<593,602,29>",(undefined)); Inst25++; } } catch(e) {}
  undefined;
try { if (Inst26 <= 1000 && typeof (array[0]) != "undefined") {_RecordType("<606,614,30>",(array[0])); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (array) != "undefined") {_RecordType("<606,611,30>",(array)); Inst27++; } } catch(e) {}
  array[0];
  6;
})();

