var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2016 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
try { if (Inst0 <= 1000 && typeof (__f_17) != "undefined") {_RecordType("<176,182,4>",(__f_17)); Inst0++; } } catch(e) {}
function __f_17(__v_9) {
try { if (Inst1 <= 1000 && typeof (__v_9) != "undefined") {_RecordType("<183,188,4>",(__v_9)); Inst1++; } } catch(e) {}
  for (var count = 0; count < 20000; ++count) {
try { if (Inst2 <= 1000 && typeof (count) != "undefined") {_RecordType("<203,208,5>",(count)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (count) != "undefined") {_RecordType("<214,219,5>",(count)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (count) != "undefined") {_RecordType("<231,236,5>",(count)); Inst4++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (count) != "undefined") {_RecordType("<248,253,6>",(count)); Inst5++; } } catch(e) {}
    if (count < 100) {
try { if (Inst6 <= 1000 && typeof (__v_9.push) != "undefined") {_RecordType("<269,279,7>",(__v_9.push)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (__v_9) != "undefined") {_RecordType("<269,274,7>",(__v_9)); Inst7++; } } catch(e) {}
      __v_9.push(3);
    } else {
try { if (Inst8 <= 1000 && typeof (count) != "undefined") {_RecordType("<307,312,9>",(count)); Inst8++; } } catch(e) {}
      if (count < 2500) {
try { if (Inst9 <= 1000 && typeof (__v_9.push) != "undefined") {_RecordType("<331,341,10>",(__v_9.push)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (__v_9) != "undefined") {_RecordType("<331,336,10>",(__v_9)); Inst10++; } } catch(e) {}
        __v_9.push(2.5);
      } else {
try { if (Inst11 <= 1000 && typeof (__v_9.push) != "undefined") {_RecordType("<371,381,12>",(__v_9.push)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (__v_9) != "undefined") {_RecordType("<371,376,12>",(__v_9)); Inst12++; } } catch(e) {}
        __v_9.push(true);
      }
    }
  }

try { if (Inst13 <= 1000 && typeof (__v_9) != "undefined") {_RecordType("<417,422,17>",(__v_9)); Inst13++; } } catch(e) {}
  return __v_9;
}

try { if (Inst15 <= 1000 && typeof (__f_17) != "undefined") {_RecordType("<435,441,20>",(__f_17)); Inst15++; } } catch(e) {}
let a = __f_17([]);
try { if (Inst14 <= 1000 && typeof (a) != "undefined") {_RecordType("<431,432,20>",(a)); Inst14++; } } catch(e) {}

try { if (Inst16 <= 1000 && typeof (a[0]) != "undefined") {_RecordType("<448,452,22>",(a[0])); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (a) != "undefined") {_RecordType("<448,449,22>",(a)); Inst17++; } } catch(e) {}
a[0];
3;
try { if (Inst18 <= 1000 && typeof (a[10]) != "undefined") {_RecordType("<457,462,24>",(a[10])); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (a) != "undefined") {_RecordType("<457,458,24>",(a)); Inst19++; } } catch(e) {}
a[10];
3;
try { if (Inst20 <= 1000 && typeof (a[2499]) != "undefined") {_RecordType("<467,474,26>",(a[2499])); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (a) != "undefined") {_RecordType("<467,468,26>",(a)); Inst21++; } } catch(e) {}
a[2499];
2.5;
try { if (Inst22 <= 1000 && typeof (a[10000]) != "undefined") {_RecordType("<481,489,28>",(a[10000])); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (a) != "undefined") {_RecordType("<481,482,28>",(a)); Inst23++; } } catch(e) {}
a[10000];
true;

