var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2014 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax --opt --no-always-opt
var v = 0; // Test that elements setters/getters on prototype chain set after the fact are
try { if (Inst0 <= 1000 && typeof (v) != "undefined") {_RecordType("<226,227,5>",(v)); Inst0++; } } catch(e) {}
// property detected and don't lead to overzealous optimization.

var my_array_proto = {};
try { if (Inst1 <= 1000 && typeof (my_array_proto) != "undefined") {_RecordType("<383,397,8>",(my_array_proto)); Inst1++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof ([].__proto__) != "undefined") {_RecordType("<431,443,9>",([].__proto__)); Inst4++; } } catch(e) {}
my_array_proto.__proto__ = [].__proto__;
try { if (Inst2 <= 1000 && typeof (my_array_proto.__proto__) != "undefined") {_RecordType("<404,428,9>",(my_array_proto.__proto__)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (my_array_proto) != "undefined") {_RecordType("<404,418,9>",(my_array_proto)); Inst3++; } } catch(e) {}

try { if (Inst5 <= 1000 && typeof (push_wrapper_2) != "undefined") {_RecordType("<455,469,11>",(push_wrapper_2)); Inst5++; } } catch(e) {}
function push_wrapper_2(array, value) {
try { if (Inst6 <= 1000 && typeof (array) != "undefined") {_RecordType("<470,475,11>",(array)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (value) != "undefined") {_RecordType("<477,482,11>",(value)); Inst7++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (array.push) != "undefined") {_RecordType("<488,498,12>",(array.push)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (array) != "undefined") {_RecordType("<488,493,12>",(array)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (value) != "undefined") {_RecordType("<499,504,12>",(value)); Inst10++; } } catch(e) {}
  array.push(value);
}

array = [];
try { if (Inst11 <= 1000 && typeof (array) != "undefined") {_RecordType("<510,515,15>",(array)); Inst11++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (my_array_proto) != "undefined") {_RecordType("<540,554,16>",(my_array_proto)); Inst14++; } } catch(e) {}
array.__proto__ = my_array_proto;
try { if (Inst12 <= 1000 && typeof (array.__proto__) != "undefined") {_RecordType("<522,537,16>",(array.__proto__)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (array) != "undefined") {_RecordType("<522,527,16>",(array)); Inst13++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (push_wrapper_2) != "undefined") {_RecordType("<556,570,17>",(push_wrapper_2)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (array) != "undefined") {_RecordType("<571,576,17>",(array)); Inst16++; } } catch(e) {}
push_wrapper_2(array, 66);
1;
try { if (Inst17 <= 1000 && typeof (array.length) != "undefined") {_RecordType("<586,598,19>",(array.length)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (array) != "undefined") {_RecordType("<586,591,19>",(array)); Inst18++; } } catch(e) {}
array.length;
0;
try { if (Inst19 <= 1000 && typeof (v) != "undefined") {_RecordType("<603,604,21>",(v)); Inst19++; } } catch(e) {}
v;
66;
try { if (Inst20 <= 1000 && typeof (array[0]) != "undefined") {_RecordType("<610,618,23>",(array[0])); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (array) != "undefined") {_RecordType("<610,615,23>",(array)); Inst21++; } } catch(e) {}
array[0];
try { if (Inst22 <= 1000 && typeof (push_wrapper_2) != "undefined") {_RecordType("<620,634,24>",(push_wrapper_2)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (array) != "undefined") {_RecordType("<635,640,24>",(array)); Inst23++; } } catch(e) {}
push_wrapper_2(array, 77);
2;
try { if (Inst24 <= 1000 && typeof (array.length) != "undefined") {_RecordType("<650,662,26>",(array.length)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (array) != "undefined") {_RecordType("<650,655,26>",(array)); Inst25++; } } catch(e) {}
array.length;
0;
try { if (Inst26 <= 1000 && typeof (v) != "undefined") {_RecordType("<667,668,28>",(v)); Inst26++; } } catch(e) {}
v;
77;
try { if (Inst27 <= 1000 && typeof (array[1]) != "undefined") {_RecordType("<674,682,30>",(array[1])); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (array) != "undefined") {_RecordType("<674,679,30>",(array)); Inst28++; } } catch(e) {}
array[1];
try { if (Inst29 <= 1000 && typeof (push_wrapper_2) != "undefined") {_RecordType("<684,698,31>",(push_wrapper_2)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (array) != "undefined") {_RecordType("<699,704,31>",(array)); Inst30++; } } catch(e) {}
push_wrapper_2(array, 88);
3;
try { if (Inst31 <= 1000 && typeof (array.length) != "undefined") {_RecordType("<714,726,33>",(array.length)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (array) != "undefined") {_RecordType("<714,719,33>",(array)); Inst32++; } } catch(e) {}
array.length;
0;
try { if (Inst33 <= 1000 && typeof (v) != "undefined") {_RecordType("<731,732,35>",(v)); Inst33++; } } catch(e) {}
v;
88;
try { if (Inst34 <= 1000 && typeof (array[2]) != "undefined") {_RecordType("<738,746,37>",(array[2])); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (array) != "undefined") {_RecordType("<738,743,37>",(array)); Inst35++; } } catch(e) {}
array[2];
try { if (Inst36 <= 1000 && typeof (push_wrapper_2) != "undefined") {_RecordType("<748,762,38>",(push_wrapper_2)); Inst36++; } } catch(e) {}
push_wrapper_2();
// Defining accessor should deopt optimized push.
try { if (Inst37 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<816,837,40>",(Object.defineProperty)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (Object) != "undefined") {_RecordType("<816,822,40>",(Object)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (my_array_proto) != "undefined") {_RecordType("<838,852,40>",(my_array_proto)); Inst39++; } } catch(e) {}
Object.defineProperty(my_array_proto, "3", {
  get: function () {
try { if (Inst40 <= 1000 && typeof (v) != "undefined") {_RecordType("<902,903,42>",(v)); Inst40++; } } catch(e) {}
    return "get " + v;
  },
  set: function (value) {
try { if (Inst41 <= 1000 && typeof (value) != "undefined") {_RecordType("<927,932,44>",(value)); Inst41++; } } catch(e) {}
try { if (Inst43 <= 1000 && typeof (value) != "undefined") {_RecordType("<945,950,45>",(value)); Inst43++; } } catch(e) {}
    v += value;
try { if (Inst42 <= 1000 && typeof (v) != "undefined") {_RecordType("<940,941,45>",(v)); Inst42++; } } catch(e) {}
  }
});
try { if (Inst44 <= 1000 && typeof (push_wrapper_2) != "undefined") {_RecordType("<960,974,48>",(push_wrapper_2)); Inst44++; } } catch(e) {}
push_wrapper_2();
try { if (Inst45 <= 1000 && typeof (push_wrapper_2) != "undefined") {_RecordType("<978,992,49>",(push_wrapper_2)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (array) != "undefined") {_RecordType("<993,998,49>",(array)); Inst46++; } } catch(e) {}
push_wrapper_2(array, 99);
4;
try { if (Inst47 <= 1000 && typeof (array.length) != "undefined") {_RecordType("<1008,1020,51>",(array.length)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (array) != "undefined") {_RecordType("<1008,1013,51>",(array)); Inst48++; } } catch(e) {}
array.length;
99;
try { if (Inst49 <= 1000 && typeof (v) != "undefined") {_RecordType("<1026,1027,53>",(v)); Inst49++; } } catch(e) {}
v;
"get 99";
try { if (Inst50 <= 1000 && typeof (array[3]) != "undefined") {_RecordType("<1039,1047,55>",(array[3])); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (array) != "undefined") {_RecordType("<1039,1044,55>",(array)); Inst51++; } } catch(e) {}
array[3];

