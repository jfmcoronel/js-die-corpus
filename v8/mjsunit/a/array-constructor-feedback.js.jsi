var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
var Inst102 = 0;
var Inst103 = 0;
var Inst104 = 0;
var Inst105 = 0;
var Inst106 = 0;
var Inst107 = 0;
var Inst108 = 0;
var Inst109 = 0;
var Inst110 = 0;
var Inst111 = 0;
var Inst112 = 0;
var Inst113 = 0;
var Inst114 = 0;
var Inst115 = 0;
var Inst116 = 0;
var Inst117 = 0;
var Inst118 = 0;
var Inst119 = 0;
var Inst120 = 0;
var Inst121 = 0;
var Inst122 = 0;
var Inst123 = 0;
var Inst124 = 0;
var Inst125 = 0;
var Inst126 = 0;
var Inst127 = 0;
var Inst128 = 0;
var Inst129 = 0;
var Inst130 = 0;
var Inst131 = 0;
var Inst132 = 0;
var Inst133 = 0;
var Inst134 = 0;
var Inst135 = 0;
var Inst136 = 0;
var Inst137 = 0;
var Inst138 = 0;
var Inst139 = 0;
var Inst140 = 0;
var Inst141 = 0;
var Inst142 = 0;
var Inst143 = 0;
var Inst144 = 0;
var Inst145 = 0;
var Inst146 = 0;
var Inst147 = 0;
var Inst148 = 0;
var Inst149 = 0;
var Inst150 = 0;
var Inst151 = 0;
var Inst152 = 0;
var Inst153 = 0;
var Inst154 = 0;
var Inst155 = 0;
var Inst156 = 0;
var Inst157 = 0;
var Inst158 = 0;
var Inst159 = 0;
var Inst160 = 0;
var Inst161 = 0;
var Inst162 = 0;
var Inst163 = 0;
var Inst164 = 0;
var Inst165 = 0;
var Inst166 = 0;
var Inst167 = 0;
var Inst168 = 0;
var Inst169 = 0;
var Inst170 = 0;
var Inst171 = 0;
var Inst172 = 0;
var Inst173 = 0;
var Inst174 = 0;
var Inst175 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2012 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// Flags: --allow-natives-syntax --expose-gc --no-always-opt --opt
// Test element kind of objects.
var elements_kind = {
  fast_smi_only: 'fast smi only elements',
  fast: 'fast elements',
  fast_double: 'fast double elements',
  dictionary: 'dictionary elements',
  external_byte: 'external byte elements',
  external_unsigned_byte: 'external unsigned byte elements',
  external_short: 'external short elements',
  external_unsigned_short: 'external unsigned short elements',
  external_int: 'external int elements',
  external_unsigned_int: 'external unsigned int elements',
  external_float: 'external float elements',
  external_double: 'external double elements',
  external_pixel: 'external pixel elements'
};
try { if (Inst0 <= 1000 && typeof (elements_kind) != "undefined") {_RecordType("<1701,1714,29>",(elements_kind)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (getKind) != "undefined") {_RecordType("<2324,2331,45>",(getKind)); Inst1++; } } catch(e) {}
function getKind(obj) {
try { if (Inst2 <= 1000 && typeof (obj) != "undefined") {_RecordType("<2332,2335,45>",(obj)); Inst2++; } } catch(e) {}
  ;
}

try { if (Inst3 <= 1000 && typeof (isHoley) != "undefined") {_RecordType("<2355,2362,49>",(isHoley)); Inst3++; } } catch(e) {}
function isHoley(obj) {
try { if (Inst4 <= 1000 && typeof (obj) != "undefined") {_RecordType("<2363,2366,49>",(obj)); Inst4++; } } catch(e) {}
  return false;
}

try { if (Inst5 <= 1000 && typeof (assertKind) != "undefined") {_RecordType("<2398,2408,53>",(assertKind)); Inst5++; } } catch(e) {}
function assertKind(expected, obj, name_opt) {
try { if (Inst6 <= 1000 && typeof (expected) != "undefined") {_RecordType("<2409,2417,53>",(expected)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (obj) != "undefined") {_RecordType("<2419,2422,53>",(obj)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (name_opt) != "undefined") {_RecordType("<2424,2432,53>",(name_opt)); Inst8++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (expected) != "undefined") {_RecordType("<2438,2446,54>",(expected)); Inst9++; } } catch(e) {}
  expected;
try { if (Inst10 <= 1000 && typeof (getKind) != "undefined") {_RecordType("<2450,2457,55>",(getKind)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (obj) != "undefined") {_RecordType("<2458,2461,55>",(obj)); Inst11++; } } catch(e) {}
  getKind(obj);
try { if (Inst12 <= 1000 && typeof (name_opt) != "undefined") {_RecordType("<2466,2474,56>",(name_opt)); Inst12++; } } catch(e) {}
  name_opt;
} // Test: ensure that crankshafted array constructor sites are deopted
// if another function is used.


(function () {
try { if (Inst13 <= 1000 && typeof (bar0) != "undefined") {_RecordType("<2608,2612,62>",(bar0)); Inst13++; } } catch(e) {}
  function bar0(t) {
try { if (Inst14 <= 1000 && typeof (t) != "undefined") {_RecordType("<2613,2614,62>",(t)); Inst14++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (t) != "undefined") {_RecordType("<2633,2634,63>",(t)); Inst15++; } } catch(e) {}
    return new t();
  }

try { if (Inst17 <= 1000 && typeof (bar0) != "undefined") {_RecordType("<2649,2653,66>",(bar0)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Array) != "undefined") {_RecordType("<2654,2659,66>",(Array)); Inst18++; } } catch(e) {}
  a = bar0(Array);
try { if (Inst16 <= 1000 && typeof (a) != "undefined") {_RecordType("<2645,2646,66>",(a)); Inst16++; } } catch(e) {}
  a[0] = 3.5;
try { if (Inst19 <= 1000 && typeof (a[0]) != "undefined") {_RecordType("<2664,2668,67>",(a[0])); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (a) != "undefined") {_RecordType("<2664,2665,67>",(a)); Inst20++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (bar0) != "undefined") {_RecordType("<2682,2686,68>",(bar0)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Array) != "undefined") {_RecordType("<2687,2692,68>",(Array)); Inst23++; } } catch(e) {}
  b = bar0(Array);
try { if (Inst21 <= 1000 && typeof (b) != "undefined") {_RecordType("<2678,2679,68>",(b)); Inst21++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (elements_kind.fast_double) != "undefined") {_RecordType("<2697,2722,69>",(elements_kind.fast_double)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (elements_kind) != "undefined") {_RecordType("<2697,2710,69>",(elements_kind)); Inst25++; } } catch(e) {}
  elements_kind.fast_double;
try { if (Inst26 <= 1000 && typeof (b) != "undefined") {_RecordType("<2726,2727,70>",(b)); Inst26++; } } catch(e) {}
  b;
try { if (Inst28 <= 1000 && typeof (bar0) != "undefined") {_RecordType("<2735,2739,71>",(bar0)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (Array) != "undefined") {_RecordType("<2740,2745,71>",(Array)); Inst29++; } } catch(e) {}
  b = bar0(Array);
try { if (Inst27 <= 1000 && typeof (b) != "undefined") {_RecordType("<2731,2732,71>",(b)); Inst27++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (elements_kind.fast_double) != "undefined") {_RecordType("<2750,2775,72>",(elements_kind.fast_double)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (elements_kind) != "undefined") {_RecordType("<2750,2763,72>",(elements_kind)); Inst31++; } } catch(e) {}
  elements_kind.fast_double;
try { if (Inst32 <= 1000 && typeof (b) != "undefined") {_RecordType("<2779,2780,73>",(b)); Inst32++; } } catch(e) {}
  b;
try { if (Inst33 <= 1000 && typeof (bar0) != "undefined") {_RecordType("<2784,2788,74>",(bar0)); Inst33++; } } catch(e) {}
  bar0();
  // bar0 should deopt
try { if (Inst35 <= 1000 && typeof (bar0) != "undefined") {_RecordType("<2821,2825,76>",(bar0)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (Object) != "undefined") {_RecordType("<2826,2832,76>",(Object)); Inst36++; } } catch(e) {}
  b = bar0(Object);
try { if (Inst34 <= 1000 && typeof (b) != "undefined") {_RecordType("<2817,2818,76>",(b)); Inst34++; } } catch(e) {}
try { if (Inst37 <= 1000 && typeof (bar0) != "undefined") {_RecordType("<2837,2841,77>",(bar0)); Inst37++; } } catch(e) {}
  bar0();
  // When it's re-optimized, we should call through the full stub
try { if (Inst38 <= 1000 && typeof (bar0) != "undefined") {_RecordType("<2913,2917,79>",(bar0)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (Array) != "undefined") {_RecordType("<2918,2923,79>",(Array)); Inst39++; } } catch(e) {}
  bar0(Array);
try { if (Inst41 <= 1000 && typeof (bar0) != "undefined") {_RecordType("<2932,2936,80>",(bar0)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (Array) != "undefined") {_RecordType("<2937,2942,80>",(Array)); Inst42++; } } catch(e) {}
  b = bar0(Array); // We also lost our ability to record kind feedback, as the site
try { if (Inst40 <= 1000 && typeof (b) != "undefined") {_RecordType("<2928,2929,80>",(b)); Inst40++; } } catch(e) {}
  // is megamorphic now.

try { if (Inst43 <= 1000 && typeof (elements_kind.fast_smi_only) != "undefined") {_RecordType("<3038,3065,83>",(elements_kind.fast_smi_only)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (elements_kind) != "undefined") {_RecordType("<3038,3051,83>",(elements_kind)); Inst44++; } } catch(e) {}
  elements_kind.fast_smi_only;
try { if (Inst45 <= 1000 && typeof (b) != "undefined") {_RecordType("<3069,3070,84>",(b)); Inst45++; } } catch(e) {}
  b;
try { if (Inst46 <= 1000 && typeof (bar0) != "undefined") {_RecordType("<3074,3078,85>",(bar0)); Inst46++; } } catch(e) {}
  bar0();
  b[0] = 3.5;
try { if (Inst47 <= 1000 && typeof (b[0]) != "undefined") {_RecordType("<3084,3088,86>",(b[0])); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (b) != "undefined") {_RecordType("<3084,3085,86>",(b)); Inst48++; } } catch(e) {}
try { if (Inst50 <= 1000 && typeof (bar0) != "undefined") {_RecordType("<3102,3106,87>",(bar0)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (Array) != "undefined") {_RecordType("<3107,3112,87>",(Array)); Inst51++; } } catch(e) {}
  c = bar0(Array);
try { if (Inst49 <= 1000 && typeof (c) != "undefined") {_RecordType("<3098,3099,87>",(c)); Inst49++; } } catch(e) {}
try { if (Inst52 <= 1000 && typeof (elements_kind.fast_smi_only) != "undefined") {_RecordType("<3117,3144,88>",(elements_kind.fast_smi_only)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (elements_kind) != "undefined") {_RecordType("<3117,3130,88>",(elements_kind)); Inst53++; } } catch(e) {}
  elements_kind.fast_smi_only;
try { if (Inst54 <= 1000 && typeof (c) != "undefined") {_RecordType("<3148,3149,89>",(c)); Inst54++; } } catch(e) {}
  c;
})(); // Test: Ensure that inlined array calls in crankshaft learn from deopts
// based on the move to a dictionary for the array.


(function () {
try { if (Inst55 <= 1000 && typeof (bar) != "undefined") {_RecordType("<3310,3313,95>",(bar)); Inst55++; } } catch(e) {}
  function bar(len) {
try { if (Inst56 <= 1000 && typeof (len) != "undefined") {_RecordType("<3314,3317,95>",(len)); Inst56++; } } catch(e) {}
try { if (Inst57 <= 1000 && typeof (Array) != "undefined") {_RecordType("<3336,3341,96>",(Array)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (len) != "undefined") {_RecordType("<3342,3345,96>",(len)); Inst58++; } } catch(e) {}
    return new Array(len);
  }

try { if (Inst60 <= 1000 && typeof (bar) != "undefined") {_RecordType("<3359,3362,99>",(bar)); Inst60++; } } catch(e) {}
  a = bar(10);
try { if (Inst59 <= 1000 && typeof (a) != "undefined") {_RecordType("<3355,3356,99>",(a)); Inst59++; } } catch(e) {}
  a[0] = "a string";
try { if (Inst61 <= 1000 && typeof (a[0]) != "undefined") {_RecordType("<3370,3374,100>",(a[0])); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (a) != "undefined") {_RecordType("<3370,3371,100>",(a)); Inst62++; } } catch(e) {}
try { if (Inst64 <= 1000 && typeof (bar) != "undefined") {_RecordType("<3395,3398,101>",(bar)); Inst64++; } } catch(e) {}
  a = bar(10);
try { if (Inst63 <= 1000 && typeof (a) != "undefined") {_RecordType("<3391,3392,101>",(a)); Inst63++; } } catch(e) {}
try { if (Inst65 <= 1000 && typeof (elements_kind.fast) != "undefined") {_RecordType("<3406,3424,102>",(elements_kind.fast)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (elements_kind) != "undefined") {_RecordType("<3406,3419,102>",(elements_kind)); Inst66++; } } catch(e) {}
  elements_kind.fast;
try { if (Inst67 <= 1000 && typeof (a) != "undefined") {_RecordType("<3428,3429,103>",(a)); Inst67++; } } catch(e) {}
  a;
try { if (Inst69 <= 1000 && typeof (bar) != "undefined") {_RecordType("<3437,3440,104>",(bar)); Inst69++; } } catch(e) {}
  a = bar(10);
try { if (Inst68 <= 1000 && typeof (a) != "undefined") {_RecordType("<3433,3434,104>",(a)); Inst68++; } } catch(e) {}
try { if (Inst70 <= 1000 && typeof (elements_kind.fast) != "undefined") {_RecordType("<3448,3466,105>",(elements_kind.fast)); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (elements_kind) != "undefined") {_RecordType("<3448,3461,105>",(elements_kind)); Inst71++; } } catch(e) {}
  elements_kind.fast;
try { if (Inst72 <= 1000 && typeof (a) != "undefined") {_RecordType("<3470,3471,106>",(a)); Inst72++; } } catch(e) {}
  a;
try { if (Inst73 <= 1000 && typeof (bar) != "undefined") {_RecordType("<3475,3478,107>",(bar)); Inst73++; } } catch(e) {}
  bar();
try { if (Inst74 <= 1000 && typeof (bar) != "undefined") {_RecordType("<3484,3487,108>",(bar)); Inst74++; } } catch(e) {}
  bar(10000);
try { if (Inst75 <= 1000 && typeof (bar) != "undefined") {_RecordType("<3498,3501,109>",(bar)); Inst75++; } } catch(e) {}
  bar();

try { if (Inst76 <= 1000 && typeof (barn) != "undefined") {_RecordType("<3517,3521,111>",(barn)); Inst76++; } } catch(e) {}
  function barn(one, two, three) {
try { if (Inst77 <= 1000 && typeof (one) != "undefined") {_RecordType("<3522,3525,111>",(one)); Inst77++; } } catch(e) {}try { if (Inst78 <= 1000 && typeof (two) != "undefined") {_RecordType("<3527,3530,111>",(two)); Inst78++; } } catch(e) {}try { if (Inst79 <= 1000 && typeof (three) != "undefined") {_RecordType("<3532,3537,111>",(three)); Inst79++; } } catch(e) {}
try { if (Inst80 <= 1000 && typeof (Array) != "undefined") {_RecordType("<3556,3561,112>",(Array)); Inst80++; } } catch(e) {}try { if (Inst81 <= 1000 && typeof (one) != "undefined") {_RecordType("<3562,3565,112>",(one)); Inst81++; } } catch(e) {}try { if (Inst82 <= 1000 && typeof (two) != "undefined") {_RecordType("<3567,3570,112>",(two)); Inst82++; } } catch(e) {}try { if (Inst83 <= 1000 && typeof (three) != "undefined") {_RecordType("<3572,3577,112>",(three)); Inst83++; } } catch(e) {}
    return new Array(one, two, three);
  }

try { if (Inst85 <= 1000 && typeof (barn) != "undefined") {_RecordType("<3591,3595,115>",(barn)); Inst85++; } } catch(e) {}
  a = barn(1, 2, 3);
try { if (Inst84 <= 1000 && typeof (a) != "undefined") {_RecordType("<3587,3588,115>",(a)); Inst84++; } } catch(e) {}
  a[1] = "a string";
try { if (Inst86 <= 1000 && typeof (a[1]) != "undefined") {_RecordType("<3608,3612,116>",(a[1])); Inst86++; } } catch(e) {}try { if (Inst87 <= 1000 && typeof (a) != "undefined") {_RecordType("<3608,3609,116>",(a)); Inst87++; } } catch(e) {}
try { if (Inst89 <= 1000 && typeof (barn) != "undefined") {_RecordType("<3633,3637,117>",(barn)); Inst89++; } } catch(e) {}
  a = barn(1, 2, 3);
try { if (Inst88 <= 1000 && typeof (a) != "undefined") {_RecordType("<3629,3630,117>",(a)); Inst88++; } } catch(e) {}
try { if (Inst90 <= 1000 && typeof (elements_kind.fast) != "undefined") {_RecordType("<3650,3668,118>",(elements_kind.fast)); Inst90++; } } catch(e) {}try { if (Inst91 <= 1000 && typeof (elements_kind) != "undefined") {_RecordType("<3650,3663,118>",(elements_kind)); Inst91++; } } catch(e) {}
  elements_kind.fast;
try { if (Inst92 <= 1000 && typeof (a) != "undefined") {_RecordType("<3672,3673,119>",(a)); Inst92++; } } catch(e) {}
  a;
try { if (Inst94 <= 1000 && typeof (barn) != "undefined") {_RecordType("<3681,3685,120>",(barn)); Inst94++; } } catch(e) {}
  a = barn(1, 2, 3);
try { if (Inst93 <= 1000 && typeof (a) != "undefined") {_RecordType("<3677,3678,120>",(a)); Inst93++; } } catch(e) {}
try { if (Inst95 <= 1000 && typeof (elements_kind.fast) != "undefined") {_RecordType("<3698,3716,121>",(elements_kind.fast)); Inst95++; } } catch(e) {}try { if (Inst96 <= 1000 && typeof (elements_kind) != "undefined") {_RecordType("<3698,3711,121>",(elements_kind)); Inst96++; } } catch(e) {}
  elements_kind.fast;
try { if (Inst97 <= 1000 && typeof (a) != "undefined") {_RecordType("<3720,3721,122>",(a)); Inst97++; } } catch(e) {}
  a;
try { if (Inst98 <= 1000 && typeof (barn) != "undefined") {_RecordType("<3725,3729,123>",(barn)); Inst98++; } } catch(e) {}
  barn();
try { if (Inst100 <= 1000 && typeof (barn) != "undefined") {_RecordType("<3739,3743,124>",(barn)); Inst100++; } } catch(e) {}
  a = barn(1, "oops", 3);
try { if (Inst99 <= 1000 && typeof (a) != "undefined") {_RecordType("<3735,3736,124>",(a)); Inst99++; } } catch(e) {}
try { if (Inst101 <= 1000 && typeof (barn) != "undefined") {_RecordType("<3761,3765,125>",(barn)); Inst101++; } } catch(e) {}
  barn();
})(); // Test: When a method with array constructor is crankshafted, the type
// feedback for elements kind is baked in. Verify that transitions don't
// change it anymore


(function () {
try { if (Inst102 <= 1000 && typeof (bar) != "undefined") {_RecordType("<3969,3972,132>",(bar)); Inst102++; } } catch(e) {}
  function bar() {
try { if (Inst103 <= 1000 && typeof (Array) != "undefined") {_RecordType("<3992,3997,133>",(Array)); Inst103++; } } catch(e) {}
    return new Array();
  }

try { if (Inst105 <= 1000 && typeof (bar) != "undefined") {_RecordType("<4012,4015,136>",(bar)); Inst105++; } } catch(e) {}
  a = bar();
try { if (Inst104 <= 1000 && typeof (a) != "undefined") {_RecordType("<4008,4009,136>",(a)); Inst104++; } } catch(e) {}
try { if (Inst106 <= 1000 && typeof (bar) != "undefined") {_RecordType("<4021,4024,137>",(bar)); Inst106++; } } catch(e) {}
  bar();
try { if (Inst108 <= 1000 && typeof (bar) != "undefined") {_RecordType("<4034,4037,138>",(bar)); Inst108++; } } catch(e) {}
  b = bar();
try { if (Inst107 <= 1000 && typeof (b) != "undefined") {_RecordType("<4030,4031,138>",(b)); Inst107++; } } catch(e) {}
try { if (Inst109 <= 1000 && typeof (bar) != "undefined") {_RecordType("<4043,4046,139>",(bar)); Inst109++; } } catch(e) {}
  bar();
  b[0] = 3.5;
try { if (Inst110 <= 1000 && typeof (b[0]) != "undefined") {_RecordType("<4052,4056,140>",(b[0])); Inst110++; } } catch(e) {}try { if (Inst111 <= 1000 && typeof (b) != "undefined") {_RecordType("<4052,4053,140>",(b)); Inst111++; } } catch(e) {}
try { if (Inst113 <= 1000 && typeof (bar) != "undefined") {_RecordType("<4070,4073,141>",(bar)); Inst113++; } } catch(e) {}
  c = bar();
try { if (Inst112 <= 1000 && typeof (c) != "undefined") {_RecordType("<4066,4067,141>",(c)); Inst112++; } } catch(e) {}
try { if (Inst114 <= 1000 && typeof (elements_kind.fast_smi_only) != "undefined") {_RecordType("<4079,4106,142>",(elements_kind.fast_smi_only)); Inst114++; } } catch(e) {}try { if (Inst115 <= 1000 && typeof (elements_kind) != "undefined") {_RecordType("<4079,4092,142>",(elements_kind)); Inst115++; } } catch(e) {}
  elements_kind.fast_smi_only;
try { if (Inst116 <= 1000 && typeof (c) != "undefined") {_RecordType("<4110,4111,143>",(c)); Inst116++; } } catch(e) {}
  c;
try { if (Inst117 <= 1000 && typeof (bar) != "undefined") {_RecordType("<4115,4118,144>",(bar)); Inst117++; } } catch(e) {}
  bar();
})(); // Test: create arrays in two contexts, verifying that the correct
// map for Array in that context will be used.


(function () {
try { if (Inst118 <= 1000 && typeof (bar) != "undefined") {_RecordType("<4270,4273,150>",(bar)); Inst118++; } } catch(e) {}
  function bar() {
try { if (Inst119 <= 1000 && typeof (Array) != "undefined") {_RecordType("<4293,4298,151>",(Array)); Inst119++; } } catch(e) {}
    return new Array();
  }

try { if (Inst120 <= 1000 && typeof (bar) != "undefined") {_RecordType("<4309,4312,154>",(bar)); Inst120++; } } catch(e) {}
  bar();
try { if (Inst121 <= 1000 && typeof (bar) != "undefined") {_RecordType("<4318,4321,155>",(bar)); Inst121++; } } catch(e) {}
  bar();
try { if (Inst123 <= 1000 && typeof (bar) != "undefined") {_RecordType("<4331,4334,156>",(bar)); Inst123++; } } catch(e) {}
  a = bar();
try { if (Inst122 <= 1000 && typeof (a) != "undefined") {_RecordType("<4327,4328,156>",(a)); Inst122++; } } catch(e) {}
try { if (Inst124 <= 1000 && typeof (a) != "undefined") {_RecordType("<4340,4341,157>",(a)); Inst124++; } } catch(e) {}try { if (Inst125 <= 1000 && typeof (Array) != "undefined") {_RecordType("<4353,4358,157>",(Array)); Inst125++; } } catch(e) {}
  a instanceof Array;
})(); // Test: create array with packed feedback, then optimize function, which
// should deal with arguments that create holey arrays.


(function () {
try { if (Inst126 <= 1000 && typeof (bar) != "undefined") {_RecordType("<4524,4527,163>",(bar)); Inst126++; } } catch(e) {}
  function bar(len) {
try { if (Inst127 <= 1000 && typeof (len) != "undefined") {_RecordType("<4528,4531,163>",(len)); Inst127++; } } catch(e) {}
try { if (Inst128 <= 1000 && typeof (Array) != "undefined") {_RecordType("<4550,4555,164>",(Array)); Inst128++; } } catch(e) {}try { if (Inst129 <= 1000 && typeof (len) != "undefined") {_RecordType("<4556,4559,164>",(len)); Inst129++; } } catch(e) {}
    return new Array(len);
  }

try { if (Inst130 <= 1000 && typeof (bar) != "undefined") {_RecordType("<4569,4572,167>",(bar)); Inst130++; } } catch(e) {}
  bar(0);
try { if (Inst131 <= 1000 && typeof (bar) != "undefined") {_RecordType("<4579,4582,168>",(bar)); Inst131++; } } catch(e) {}
  bar(0);
try { if (Inst133 <= 1000 && typeof (bar) != "undefined") {_RecordType("<4593,4596,169>",(bar)); Inst133++; } } catch(e) {}
  a = bar(0);
try { if (Inst132 <= 1000 && typeof (a) != "undefined") {_RecordType("<4589,4590,169>",(a)); Inst132++; } } catch(e) {}
try { if (Inst134 <= 1000 && typeof (bar) != "undefined") {_RecordType("<4603,4606,170>",(bar)); Inst134++; } } catch(e) {}
  bar();
try { if (Inst135 <= 1000 && typeof (isHoley) != "undefined") {_RecordType("<4612,4619,171>",(isHoley)); Inst135++; } } catch(e) {}try { if (Inst136 <= 1000 && typeof (a) != "undefined") {_RecordType("<4620,4621,171>",(a)); Inst136++; } } catch(e) {}
  isHoley(a);
try { if (Inst138 <= 1000 && typeof (bar) != "undefined") {_RecordType("<4630,4633,172>",(bar)); Inst138++; } } catch(e) {}
  a = bar(1); // ouch!
try { if (Inst137 <= 1000 && typeof (a) != "undefined") {_RecordType("<4626,4627,172>",(a)); Inst137++; } } catch(e) {}

try { if (Inst139 <= 1000 && typeof (bar) != "undefined") {_RecordType("<4650,4653,174>",(bar)); Inst139++; } } catch(e) {}
  bar();
try { if (Inst140 <= 1000 && typeof (isHoley) != "undefined") {_RecordType("<4659,4666,175>",(isHoley)); Inst140++; } } catch(e) {}try { if (Inst141 <= 1000 && typeof (a) != "undefined") {_RecordType("<4667,4668,175>",(a)); Inst141++; } } catch(e) {}
  isHoley(a);
try { if (Inst143 <= 1000 && typeof (bar) != "undefined") {_RecordType("<4677,4680,176>",(bar)); Inst143++; } } catch(e) {}
  a = bar(100);
try { if (Inst142 <= 1000 && typeof (a) != "undefined") {_RecordType("<4673,4674,176>",(a)); Inst142++; } } catch(e) {}
try { if (Inst144 <= 1000 && typeof (isHoley) != "undefined") {_RecordType("<4689,4696,177>",(isHoley)); Inst144++; } } catch(e) {}try { if (Inst145 <= 1000 && typeof (a) != "undefined") {_RecordType("<4697,4698,177>",(a)); Inst145++; } } catch(e) {}
  isHoley(a);
try { if (Inst147 <= 1000 && typeof (bar) != "undefined") {_RecordType("<4707,4710,178>",(bar)); Inst147++; } } catch(e) {}
  a = bar(0);
try { if (Inst146 <= 1000 && typeof (a) != "undefined") {_RecordType("<4703,4704,178>",(a)); Inst146++; } } catch(e) {}
try { if (Inst148 <= 1000 && typeof (bar) != "undefined") {_RecordType("<4717,4720,179>",(bar)); Inst148++; } } catch(e) {}
  bar();
try { if (Inst149 <= 1000 && typeof (isHoley) != "undefined") {_RecordType("<4726,4733,180>",(isHoley)); Inst149++; } } catch(e) {}try { if (Inst150 <= 1000 && typeof (a) != "undefined") {_RecordType("<4734,4735,180>",(a)); Inst150++; } } catch(e) {}
  isHoley(a);
})(); // Test: Make sure that crankshaft continues with feedback for large arrays.


(function () {
try { if (Inst151 <= 1000 && typeof (bar) != "undefined") {_RecordType("<4849,4852,185>",(bar)); Inst151++; } } catch(e) {}
  function bar(len) {
try { if (Inst152 <= 1000 && typeof (len) != "undefined") {_RecordType("<4853,4856,185>",(len)); Inst152++; } } catch(e) {}
try { if (Inst153 <= 1000 && typeof (Array) != "undefined") {_RecordType("<4875,4880,186>",(Array)); Inst153++; } } catch(e) {}try { if (Inst154 <= 1000 && typeof (len) != "undefined") {_RecordType("<4881,4884,186>",(len)); Inst154++; } } catch(e) {}
    return new Array(len);
  }

  var size = 100001; // Perform a gc, because we are allocating a very large array and if a gc
try { if (Inst155 <= 1000 && typeof (size) != "undefined") {_RecordType("<4898,4902,189>",(size)); Inst155++; } } catch(e) {}
  // happens during the allocation we could lose our memento.

try { if (Inst156 <= 1000 && typeof (gc) != "undefined") {_RecordType("<5052,5054,192>",(gc)); Inst156++; } } catch(e) {}
  gc();
  bar(size)[0] = 'string';
try { if (Inst157 <= 1000 && typeof (bar(size)[0]) != "undefined") {_RecordType("<5060,5072,193>",(bar(size)[0])); Inst157++; } } catch(e) {}try { if (Inst158 <= 1000 && typeof (bar) != "undefined") {_RecordType("<5060,5063,193>",(bar)); Inst158++; } } catch(e) {}try { if (Inst159 <= 1000 && typeof (size) != "undefined") {_RecordType("<5064,5068,193>",(size)); Inst159++; } } catch(e) {}
try { if (Inst161 <= 1000 && typeof (bar) != "undefined") {_RecordType("<5097,5100,194>",(bar)); Inst161++; } } catch(e) {}try { if (Inst162 <= 1000 && typeof (size) != "undefined") {_RecordType("<5101,5105,194>",(size)); Inst162++; } } catch(e) {}
  var res = bar(size);
try { if (Inst160 <= 1000 && typeof (res) != "undefined") {_RecordType("<5091,5094,194>",(res)); Inst160++; } } catch(e) {}
try { if (Inst163 <= 1000 && typeof (elements_kind.fast) != "undefined") {_RecordType("<5110,5128,195>",(elements_kind.fast)); Inst163++; } } catch(e) {}try { if (Inst164 <= 1000 && typeof (elements_kind) != "undefined") {_RecordType("<5110,5123,195>",(elements_kind)); Inst164++; } } catch(e) {}
  elements_kind.fast;
try { if (Inst165 <= 1000 && typeof (bar) != "undefined") {_RecordType("<5132,5135,196>",(bar)); Inst165++; } } catch(e) {}try { if (Inst166 <= 1000 && typeof (size) != "undefined") {_RecordType("<5136,5140,196>",(size)); Inst166++; } } catch(e) {}
  bar(size);
try { if (Inst167 <= 1000 && typeof (elements_kind.fast) != "undefined") {_RecordType("<5145,5163,197>",(elements_kind.fast)); Inst167++; } } catch(e) {}try { if (Inst168 <= 1000 && typeof (elements_kind) != "undefined") {_RecordType("<5145,5158,197>",(elements_kind)); Inst168++; } } catch(e) {}
  elements_kind.fast;
try { if (Inst169 <= 1000 && typeof (bar) != "undefined") {_RecordType("<5167,5170,198>",(bar)); Inst169++; } } catch(e) {}try { if (Inst170 <= 1000 && typeof (size) != "undefined") {_RecordType("<5171,5175,198>",(size)); Inst170++; } } catch(e) {}
  bar(size);
  // But there is a limit, based on the size of the old generation, currently
  // 22937600, but double it to prevent the test being too brittle.
  var large_size = 22937600 * 2;
try { if (Inst171 <= 1000 && typeof (large_size) != "undefined") {_RecordType("<5330,5340,201>",(large_size)); Inst171++; } } catch(e) {}
try { if (Inst172 <= 1000 && typeof (elements_kind.dictionary) != "undefined") {_RecordType("<5359,5383,202>",(elements_kind.dictionary)); Inst172++; } } catch(e) {}try { if (Inst173 <= 1000 && typeof (elements_kind) != "undefined") {_RecordType("<5359,5372,202>",(elements_kind)); Inst173++; } } catch(e) {}
  elements_kind.dictionary;
try { if (Inst174 <= 1000 && typeof (bar) != "undefined") {_RecordType("<5387,5390,203>",(bar)); Inst174++; } } catch(e) {}try { if (Inst175 <= 1000 && typeof (large_size) != "undefined") {_RecordType("<5391,5401,203>",(large_size)); Inst175++; } } catch(e) {}
  bar(large_size);
})();

