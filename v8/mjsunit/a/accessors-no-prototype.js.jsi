var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2014 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
try { if (Inst0 <= 1000 && typeof (TestGetter) != "undefined") {_RecordType("<177,187,4>",(TestGetter)); Inst0++; } } catch(e) {}
(function TestGetter() {
try { if (Inst2 <= 1000 && typeof (x) != "undefined") {_RecordType("<212,213,6>",(x)); Inst2++; } } catch(e) {}
  var o = {
    get x() {
      ;
    }

  };
try { if (Inst1 <= 1000 && typeof (o) != "undefined") {_RecordType("<198,199,5>",(o)); Inst1++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<251,282,11>",(Object.getOwnPropertyDescriptor)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Object) != "undefined") {_RecordType("<251,257,11>",(Object)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (o) != "undefined") {_RecordType("<283,284,11>",(o)); Inst6++; } } catch(e) {}
  var desc = Object.getOwnPropertyDescriptor(o, 'x');
try { if (Inst3 <= 1000 && typeof (desc) != "undefined") {_RecordType("<244,248,11>",(desc)); Inst3++; } } catch(e) {}
  'function';
try { if (Inst7 <= 1000 && typeof (desc.get) != "undefined") {_RecordType("<315,323,13>",(desc.get)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (desc) != "undefined") {_RecordType("<315,319,13>",(desc)); Inst8++; } } catch(e) {}
  typeof desc.get;
try { if (Inst9 <= 1000 && typeof (desc.get) != "undefined") {_RecordType("<342,350,14>",(desc.get)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (desc) != "undefined") {_RecordType("<342,346,14>",(desc)); Inst10++; } } catch(e) {}
  'prototype' in desc.get;

  (function () {
try { if (Inst11 <= 1000 && typeof (desc.get) != "undefined") {_RecordType("<378,386,17>",(desc.get)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (desc) != "undefined") {_RecordType("<378,382,17>",(desc)); Inst12++; } } catch(e) {}
    new desc.get();
  })();

try { if (Inst13 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<401,410,20>",(TypeError)); Inst13++; } } catch(e) {}
  TypeError;
})();

try { if (Inst14 <= 1000 && typeof (TestSetter) != "undefined") {_RecordType("<429,439,23>",(TestSetter)); Inst14++; } } catch(e) {}
(function TestSetter() {
try { if (Inst16 <= 1000 && typeof (x) != "undefined") {_RecordType("<464,465,25>",(x)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (_) != "undefined") {_RecordType("<466,467,25>",(_)); Inst17++; } } catch(e) {}
  var o = {
    set x(_) {
      ;
    }

  };
try { if (Inst15 <= 1000 && typeof (o) != "undefined") {_RecordType("<450,451,24>",(o)); Inst15++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<504,535,30>",(Object.getOwnPropertyDescriptor)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (Object) != "undefined") {_RecordType("<504,510,30>",(Object)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (o) != "undefined") {_RecordType("<536,537,30>",(o)); Inst21++; } } catch(e) {}
  var desc = Object.getOwnPropertyDescriptor(o, 'x');
try { if (Inst18 <= 1000 && typeof (desc) != "undefined") {_RecordType("<497,501,30>",(desc)); Inst18++; } } catch(e) {}
  'function';
try { if (Inst22 <= 1000 && typeof (desc.set) != "undefined") {_RecordType("<568,576,32>",(desc.set)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (desc) != "undefined") {_RecordType("<568,572,32>",(desc)); Inst23++; } } catch(e) {}
  typeof desc.set;
try { if (Inst24 <= 1000 && typeof (desc.set) != "undefined") {_RecordType("<595,603,33>",(desc.set)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (desc) != "undefined") {_RecordType("<595,599,33>",(desc)); Inst25++; } } catch(e) {}
  'prototype' in desc.set;

  (function () {
try { if (Inst26 <= 1000 && typeof (desc.set) != "undefined") {_RecordType("<631,639,36>",(desc.set)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (desc) != "undefined") {_RecordType("<631,635,36>",(desc)); Inst27++; } } catch(e) {}
    new desc.set();
  })();

try { if (Inst28 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<654,663,39>",(TypeError)); Inst28++; } } catch(e) {}
  TypeError;
})();

try { if (Inst29 <= 1000 && typeof (TestBoth) != "undefined") {_RecordType("<682,690,42>",(TestBoth)); Inst29++; } } catch(e) {}
(function TestBoth() {
try { if (Inst31 <= 1000 && typeof (x) != "undefined") {_RecordType("<715,716,44>",(x)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (x) != "undefined") {_RecordType("<745,746,48>",(x)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (_) != "undefined") {_RecordType("<747,748,48>",(_)); Inst33++; } } catch(e) {}
  var o = {
    get x() {
      ;
    },

    set x(_) {
      ;
    }

  };
try { if (Inst30 <= 1000 && typeof (o) != "undefined") {_RecordType("<701,702,43>",(o)); Inst30++; } } catch(e) {}
try { if (Inst35 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<785,816,53>",(Object.getOwnPropertyDescriptor)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (Object) != "undefined") {_RecordType("<785,791,53>",(Object)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (o) != "undefined") {_RecordType("<817,818,53>",(o)); Inst37++; } } catch(e) {}
  var desc = Object.getOwnPropertyDescriptor(o, 'x');
try { if (Inst34 <= 1000 && typeof (desc) != "undefined") {_RecordType("<778,782,53>",(desc)); Inst34++; } } catch(e) {}
  'function';
try { if (Inst38 <= 1000 && typeof (desc.get) != "undefined") {_RecordType("<849,857,55>",(desc.get)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (desc) != "undefined") {_RecordType("<849,853,55>",(desc)); Inst39++; } } catch(e) {}
  typeof desc.get;
  'function';
try { if (Inst40 <= 1000 && typeof (desc.set) != "undefined") {_RecordType("<882,890,57>",(desc.set)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (desc) != "undefined") {_RecordType("<882,886,57>",(desc)); Inst41++; } } catch(e) {}
  typeof desc.set;
try { if (Inst42 <= 1000 && typeof (desc.get) != "undefined") {_RecordType("<909,917,58>",(desc.get)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (desc) != "undefined") {_RecordType("<909,913,58>",(desc)); Inst43++; } } catch(e) {}
  'prototype' in desc.get;
try { if (Inst44 <= 1000 && typeof (desc.set) != "undefined") {_RecordType("<936,944,59>",(desc.set)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (desc) != "undefined") {_RecordType("<936,940,59>",(desc)); Inst45++; } } catch(e) {}
  'prototype' in desc.set;

  (function () {
try { if (Inst46 <= 1000 && typeof (desc.get) != "undefined") {_RecordType("<972,980,62>",(desc.get)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (desc) != "undefined") {_RecordType("<972,976,62>",(desc)); Inst47++; } } catch(e) {}
    new desc.get();
  })();

try { if (Inst48 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<995,1004,65>",(TypeError)); Inst48++; } } catch(e) {}
  TypeError;

  (function () {
try { if (Inst49 <= 1000 && typeof (desc.set) != "undefined") {_RecordType("<1032,1040,68>",(desc.set)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (desc) != "undefined") {_RecordType("<1032,1036,68>",(desc)); Inst50++; } } catch(e) {}
    new desc.set();
  })();

try { if (Inst51 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<1055,1064,71>",(TypeError)); Inst51++; } } catch(e) {}
  TypeError;
})();

