var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2017 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
try { if (Inst0 <= 1000 && typeof (TryParse) != "undefined") {_RecordType("<176,184,4>",(TryParse)); Inst0++; } } catch(e) {}
function TryParse(s, message) {
try { if (Inst1 <= 1000 && typeof (s) != "undefined") {_RecordType("<185,186,4>",(s)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (message) != "undefined") {_RecordType("<188,195,4>",(message)); Inst2++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (e) != "undefined") {_RecordType("<237,238,7>",(e)); Inst6++; } } catch(e) {}
  try {
try { if (Inst3 <= 1000 && typeof (JSON.parse) != "undefined") {_RecordType("<211,221,6>",(JSON.parse)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<211,215,6>",(JSON)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (s) != "undefined") {_RecordType("<222,223,6>",(s)); Inst5++; } } catch(e) {}
    JSON.parse(s);
  } catch (e) {
try { if (Inst7 <= 1000 && typeof (message) != "undefined") {_RecordType("<246,253,8>",(message)); Inst7++; } } catch(e) {}
    message;
try { if (Inst8 <= 1000 && typeof (e.message) != "undefined") {_RecordType("<259,268,9>",(e.message)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (e) != "undefined") {_RecordType("<259,260,9>",(e)); Inst9++; } } catch(e) {}
    e.message;
  }
}

var s = `{"a\\\\b `;
try { if (Inst10 <= 1000 && typeof (s) != "undefined") {_RecordType("<281,282,13>",(s)); Inst10++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (TryParse) != "undefined") {_RecordType("<298,306,14>",(TryParse)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (s) != "undefined") {_RecordType("<307,308,14>",(s)); Inst12++; } } catch(e) {}
TryParse(s, "Unexpected end of JSON input");
var s = `{"a\\\\\u03A9 `;
try { if (Inst13 <= 1000 && typeof (s) != "undefined") {_RecordType("<347,348,15>",(s)); Inst13++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (TryParse) != "undefined") {_RecordType("<369,377,16>",(TryParse)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (s) != "undefined") {_RecordType("<378,379,16>",(s)); Inst15++; } } catch(e) {}
TryParse(s, "Unexpected end of JSON input");
var s = `{"ab `;
try { if (Inst16 <= 1000 && typeof (s) != "undefined") {_RecordType("<418,419,17>",(s)); Inst16++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (TryParse) != "undefined") {_RecordType("<431,439,18>",(TryParse)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (s) != "undefined") {_RecordType("<440,441,18>",(s)); Inst18++; } } catch(e) {}
TryParse(s, "Unexpected end of JSON input");
var s = `{"a\u03A9 `;
try { if (Inst19 <= 1000 && typeof (s) != "undefined") {_RecordType("<480,481,19>",(s)); Inst19++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (TryParse) != "undefined") {_RecordType("<498,506,20>",(TryParse)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (s) != "undefined") {_RecordType("<507,508,20>",(s)); Inst21++; } } catch(e) {}
TryParse(s, "Unexpected end of JSON input");
var s = `{"a\nb":"b"}`;
try { if (Inst22 <= 1000 && typeof (s) != "undefined") {_RecordType("<547,548,21>",(s)); Inst22++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (TryParse) != "undefined") {_RecordType("<567,575,22>",(TryParse)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (s) != "undefined") {_RecordType("<576,577,22>",(s)); Inst24++; } } catch(e) {}
TryParse(s, "Unexpected token \n in JSON at position 3");
var s = `{"a\nb":"b\u03A9"}`;
try { if (Inst25 <= 1000 && typeof (s) != "undefined") {_RecordType("<629,630,23>",(s)); Inst25++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (TryParse) != "undefined") {_RecordType("<655,663,24>",(TryParse)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (s) != "undefined") {_RecordType("<664,665,24>",(s)); Inst27++; } } catch(e) {}
TryParse(s, "Unexpected token \n in JSON at position 3");

