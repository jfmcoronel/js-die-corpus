var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2013 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// Flags: --allow-natives-syntax --no-use-osr
try { if (Inst0 <= 1000 && typeof (foo_smi) != "undefined") {_RecordType("<1652,1659,28>",(foo_smi)); Inst0++; } } catch(e) {}
function foo_smi(a, b) {
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<1660,1661,28>",(a)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (b) != "undefined") {_RecordType("<1663,1664,28>",(b)); Inst2++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (a) != "undefined") {_RecordType("<1683,1684,29>",(a)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (b) != "undefined") {_RecordType("<1687,1688,29>",(b)); Inst5++; } } catch(e) {}
  var result = a * b;
try { if (Inst3 <= 1000 && typeof (result) != "undefined") {_RecordType("<1674,1680,29>",(result)); Inst3++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (a) != "undefined") {_RecordType("<1702,1703,30>",(a)); Inst7++; } } catch(e) {}
  result += a * 35;
try { if (Inst6 <= 1000 && typeof (result) != "undefined") {_RecordType("<1692,1698,30>",(result)); Inst6++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (a) != "undefined") {_RecordType("<1722,1723,31>",(a)); Inst9++; } } catch(e) {}
  result += a * -1;
try { if (Inst8 <= 1000 && typeof (result) != "undefined") {_RecordType("<1712,1718,31>",(result)); Inst8++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (a) != "undefined") {_RecordType("<1742,1743,32>",(a)); Inst11++; } } catch(e) {}
  result += a * 1;
try { if (Inst10 <= 1000 && typeof (result) != "undefined") {_RecordType("<1732,1738,32>",(result)); Inst10++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (a) != "undefined") {_RecordType("<1761,1762,33>",(a)); Inst13++; } } catch(e) {}
  result += a * 0;
try { if (Inst12 <= 1000 && typeof (result) != "undefined") {_RecordType("<1751,1757,33>",(result)); Inst12++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (result) != "undefined") {_RecordType("<1777,1783,34>",(result)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (a) != "undefined") {_RecordType("<1786,1787,34>",(a)); Inst15++; } } catch(e) {}
  return result * a;
}

try { if (Inst16 <= 1000 && typeof (foo_int) != "undefined") {_RecordType("<1801,1808,37>",(foo_int)); Inst16++; } } catch(e) {}
function foo_int(a, b) {
try { if (Inst17 <= 1000 && typeof (a) != "undefined") {_RecordType("<1809,1810,37>",(a)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (b) != "undefined") {_RecordType("<1812,1813,37>",(b)); Inst18++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (a) != "undefined") {_RecordType("<1832,1833,38>",(a)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (b) != "undefined") {_RecordType("<1836,1837,38>",(b)); Inst21++; } } catch(e) {}
  var result = a * b;
try { if (Inst19 <= 1000 && typeof (result) != "undefined") {_RecordType("<1823,1829,38>",(result)); Inst19++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (a) != "undefined") {_RecordType("<1851,1852,39>",(a)); Inst23++; } } catch(e) {}
  result += a * 35;
try { if (Inst22 <= 1000 && typeof (result) != "undefined") {_RecordType("<1841,1847,39>",(result)); Inst22++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (a) != "undefined") {_RecordType("<1871,1872,40>",(a)); Inst25++; } } catch(e) {}
  result += a * -1;
try { if (Inst24 <= 1000 && typeof (result) != "undefined") {_RecordType("<1861,1867,40>",(result)); Inst24++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (a) != "undefined") {_RecordType("<1891,1892,41>",(a)); Inst27++; } } catch(e) {}
  result += a * 1;
try { if (Inst26 <= 1000 && typeof (result) != "undefined") {_RecordType("<1881,1887,41>",(result)); Inst26++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (a) != "undefined") {_RecordType("<1910,1911,42>",(a)); Inst29++; } } catch(e) {}
  result += a * 0;
try { if (Inst28 <= 1000 && typeof (result) != "undefined") {_RecordType("<1900,1906,42>",(result)); Inst28++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (result) != "undefined") {_RecordType("<1926,1932,43>",(result)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (a) != "undefined") {_RecordType("<1935,1936,43>",(a)); Inst31++; } } catch(e) {}
  return result * a;
}

try { if (Inst32 <= 1000 && typeof (foo_smi) != "undefined") {_RecordType("<1941,1948,46>",(foo_smi)); Inst32++; } } catch(e) {}
foo_smi(10, 5);
try { if (Inst34 <= 1000 && typeof (foo_smi) != "undefined") {_RecordType("<1966,1973,47>",(foo_smi)); Inst34++; } } catch(e) {}
var r1 = foo_smi(10, 5);
try { if (Inst33 <= 1000 && typeof (r1) != "undefined") {_RecordType("<1961,1963,47>",(r1)); Inst33++; } } catch(e) {}
try { if (Inst36 <= 1000 && typeof (foo_smi) != "undefined") {_RecordType("<1991,1998,48>",(foo_smi)); Inst36++; } } catch(e) {}
var r2 = foo_smi(10, 5);
try { if (Inst35 <= 1000 && typeof (r2) != "undefined") {_RecordType("<1986,1988,48>",(r2)); Inst35++; } } catch(e) {}
try { if (Inst37 <= 1000 && typeof (r1) != "undefined") {_RecordType("<2007,2009,49>",(r1)); Inst37++; } } catch(e) {}
r1;
try { if (Inst38 <= 1000 && typeof (r2) != "undefined") {_RecordType("<2011,2013,50>",(r2)); Inst38++; } } catch(e) {}
r2;
try { if (Inst39 <= 1000 && typeof (foo_int) != "undefined") {_RecordType("<2015,2022,51>",(foo_int)); Inst39++; } } catch(e) {}
foo_int(10, 21474800);
try { if (Inst41 <= 1000 && typeof (foo_int) != "undefined") {_RecordType("<2047,2054,52>",(foo_int)); Inst41++; } } catch(e) {}
var r3 = foo_int(10, 21474800);
try { if (Inst40 <= 1000 && typeof (r3) != "undefined") {_RecordType("<2042,2044,52>",(r3)); Inst40++; } } catch(e) {}
try { if (Inst43 <= 1000 && typeof (foo_int) != "undefined") {_RecordType("<2079,2086,53>",(foo_int)); Inst43++; } } catch(e) {}
var r4 = foo_int(10, 21474800);
try { if (Inst42 <= 1000 && typeof (r4) != "undefined") {_RecordType("<2074,2076,53>",(r4)); Inst42++; } } catch(e) {}
try { if (Inst44 <= 1000 && typeof (r3) != "undefined") {_RecordType("<2102,2104,54>",(r3)); Inst44++; } } catch(e) {}
r3;
try { if (Inst45 <= 1000 && typeof (r4) != "undefined") {_RecordType("<2106,2108,55>",(r4)); Inst45++; } } catch(e) {}
r4;

// Check overflow with -1 constant.
try { if (Inst46 <= 1000 && typeof (foo2) != "undefined") {_RecordType("<2156,2160,58>",(foo2)); Inst46++; } } catch(e) {}
function foo2(value) {
try { if (Inst47 <= 1000 && typeof (value) != "undefined") {_RecordType("<2161,2166,58>",(value)); Inst47++; } } catch(e) {}
try { if (Inst48 <= 1000 && typeof (value) != "undefined") {_RecordType("<2179,2184,59>",(value)); Inst48++; } } catch(e) {}
  return value * -1;
}

try { if (Inst49 <= 1000 && typeof (foo2) != "undefined") {_RecordType("<2194,2198,62>",(foo2)); Inst49++; } } catch(e) {}
foo2(-2147483600);
try { if (Inst50 <= 1000 && typeof (foo2) != "undefined") {_RecordType("<2213,2217,63>",(foo2)); Inst50++; } } catch(e) {}
foo2(-2147483600);
2147483648;
try { if (Inst51 <= 1000 && typeof (foo2) != "undefined") {_RecordType("<2244,2248,65>",(foo2)); Inst51++; } } catch(e) {}
foo2(-2147483648);

