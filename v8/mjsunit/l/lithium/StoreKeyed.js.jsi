var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2013 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// Flags: --allow-natives-syntax --no-use-osr
try { if (Inst0 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1652,1655,28>",(foo)); Inst0++; } } catch(e) {}
function foo(a, i, v) {
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<1656,1657,28>",(a)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (i) != "undefined") {_RecordType("<1659,1660,28>",(i)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (v) != "undefined") {_RecordType("<1662,1663,28>",(v)); Inst3++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (v) != "undefined") {_RecordType("<1676,1677,29>",(v)); Inst6++; } } catch(e) {}
  a[0] = v;
try { if (Inst4 <= 1000 && typeof (a[0]) != "undefined") {_RecordType("<1669,1673,29>",(a[0])); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (a) != "undefined") {_RecordType("<1669,1670,29>",(a)); Inst5++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (v) != "undefined") {_RecordType("<1688,1689,30>",(v)); Inst9++; } } catch(e) {}
  a[i] = v;
try { if (Inst7 <= 1000 && typeof (a[i]) != "undefined") {_RecordType("<1681,1685,30>",(a[i])); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (a) != "undefined") {_RecordType("<1681,1682,30>",(a)); Inst8++; } } catch(e) {}
}

try { if (Inst10 <= 1000 && typeof (foo_int) != "undefined") {_RecordType("<1703,1710,33>",(foo_int)); Inst10++; } } catch(e) {}
function foo_int(a, i, v) {
try { if (Inst11 <= 1000 && typeof (a) != "undefined") {_RecordType("<1711,1712,33>",(a)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<1714,1715,33>",(i)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (v) != "undefined") {_RecordType("<1717,1718,33>",(v)); Inst13++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (v) != "undefined") {_RecordType("<1731,1732,34>",(v)); Inst16++; } } catch(e) {}
  a[0] = v;
try { if (Inst14 <= 1000 && typeof (a[0]) != "undefined") {_RecordType("<1724,1728,34>",(a[0])); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (a) != "undefined") {_RecordType("<1724,1725,34>",(a)); Inst15++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (v) != "undefined") {_RecordType("<1743,1744,35>",(v)); Inst19++; } } catch(e) {}
  a[i] = v;
try { if (Inst17 <= 1000 && typeof (a[i]) != "undefined") {_RecordType("<1736,1740,35>",(a[i])); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (a) != "undefined") {_RecordType("<1736,1737,35>",(a)); Inst18++; } } catch(e) {}
}

var A1 = [1.2, 2.3];
try { if (Inst20 <= 1000 && typeof (A1) != "undefined") {_RecordType("<1753,1755,38>",(A1)); Inst20++; } } catch(e) {}
var A2 = [1.2, 2.3];
try { if (Inst21 <= 1000 && typeof (A2) != "undefined") {_RecordType("<1774,1776,39>",(A2)); Inst21++; } } catch(e) {}
var A3 = [1.2, 2.3];
try { if (Inst22 <= 1000 && typeof (A3) != "undefined") {_RecordType("<1795,1797,40>",(A3)); Inst22++; } } catch(e) {}
var A1_int = [12, 23];
try { if (Inst23 <= 1000 && typeof (A1_int) != "undefined") {_RecordType("<1816,1822,41>",(A1_int)); Inst23++; } } catch(e) {}
var A2_int = [12, 23];
try { if (Inst24 <= 1000 && typeof (A2_int) != "undefined") {_RecordType("<1839,1845,42>",(A2_int)); Inst24++; } } catch(e) {}
var A3_int = [12, 23];
try { if (Inst25 <= 1000 && typeof (A3_int) != "undefined") {_RecordType("<1862,1868,43>",(A3_int)); Inst25++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1881,1884,44>",(foo)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (A1) != "undefined") {_RecordType("<1885,1887,44>",(A1)); Inst27++; } } catch(e) {}
foo(A1, 1, 3.4);
try { if (Inst28 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1898,1901,45>",(foo)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (A2) != "undefined") {_RecordType("<1902,1904,45>",(A2)); Inst29++; } } catch(e) {}
foo(A2, 1, 3.4);
try { if (Inst30 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1915,1918,46>",(foo)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (A3) != "undefined") {_RecordType("<1919,1921,46>",(A3)); Inst31++; } } catch(e) {}
foo(A3, 1, 3.4);
try { if (Inst32 <= 1000 && typeof (foo_int) != "undefined") {_RecordType("<1932,1939,47>",(foo_int)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (A1_int) != "undefined") {_RecordType("<1940,1946,47>",(A1_int)); Inst33++; } } catch(e) {}
foo_int(A1_int, 1, 34);
try { if (Inst34 <= 1000 && typeof (foo_int) != "undefined") {_RecordType("<1956,1963,48>",(foo_int)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (A2_int) != "undefined") {_RecordType("<1964,1970,48>",(A2_int)); Inst35++; } } catch(e) {}
foo_int(A2_int, 1, 34);
try { if (Inst36 <= 1000 && typeof (foo_int) != "undefined") {_RecordType("<1980,1987,49>",(foo_int)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (A3_int) != "undefined") {_RecordType("<1988,1994,49>",(A3_int)); Inst37++; } } catch(e) {}
foo_int(A3_int, 1, 34);
try { if (Inst38 <= 1000 && typeof (A1[0]) != "undefined") {_RecordType("<2004,2009,50>",(A1[0])); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (A1) != "undefined") {_RecordType("<2004,2006,50>",(A1)); Inst39++; } } catch(e) {}
A1[0];
try { if (Inst40 <= 1000 && typeof (A3[0]) != "undefined") {_RecordType("<2011,2016,51>",(A3[0])); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (A3) != "undefined") {_RecordType("<2011,2013,51>",(A3)); Inst41++; } } catch(e) {}
A3[0];
try { if (Inst42 <= 1000 && typeof (A1[1]) != "undefined") {_RecordType("<2018,2023,52>",(A1[1])); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (A1) != "undefined") {_RecordType("<2018,2020,52>",(A1)); Inst43++; } } catch(e) {}
A1[1];
try { if (Inst44 <= 1000 && typeof (A3[1]) != "undefined") {_RecordType("<2025,2030,53>",(A3[1])); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (A3) != "undefined") {_RecordType("<2025,2027,53>",(A3)); Inst45++; } } catch(e) {}
A3[1];
try { if (Inst46 <= 1000 && typeof (A1_int[0]) != "undefined") {_RecordType("<2032,2041,54>",(A1_int[0])); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (A1_int) != "undefined") {_RecordType("<2032,2038,54>",(A1_int)); Inst47++; } } catch(e) {}
A1_int[0];
try { if (Inst48 <= 1000 && typeof (A3_int[0]) != "undefined") {_RecordType("<2043,2052,55>",(A3_int[0])); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (A3_int) != "undefined") {_RecordType("<2043,2049,55>",(A3_int)); Inst49++; } } catch(e) {}
A3_int[0];
try { if (Inst50 <= 1000 && typeof (A1_int[1]) != "undefined") {_RecordType("<2054,2063,56>",(A1_int[1])); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (A1_int) != "undefined") {_RecordType("<2054,2060,56>",(A1_int)); Inst51++; } } catch(e) {}
A1_int[1];
try { if (Inst52 <= 1000 && typeof (A3_int[1]) != "undefined") {_RecordType("<2065,2074,57>",(A3_int[1])); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (A3_int) != "undefined") {_RecordType("<2065,2071,57>",(A3_int)); Inst53++; } } catch(e) {}
A3_int[1];

