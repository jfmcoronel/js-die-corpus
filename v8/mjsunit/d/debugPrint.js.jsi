var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2017 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax
var largeArray = [];
try { if (Inst0 <= 1000 && typeof (largeArray) != "undefined") {_RecordType("<204,214,5>",(largeArray)); Inst0++; } } catch(e) {}
largeArray[0xFFFF00] = 123;
try { if (Inst1 <= 1000 && typeof (largeArray[0xFFFF00]) != "undefined") {_RecordType("<221,241,6>",(largeArray[0xFFFF00])); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (largeArray) != "undefined") {_RecordType("<221,231,6>",(largeArray)); Inst2++; } } catch(e) {}

try { if (Inst3 <= 1000 && typeof (sloppyArguments) != "undefined") {_RecordType("<259,274,8>",(sloppyArguments)); Inst3++; } } catch(e) {}
function sloppyArguments() {
try { if (Inst4 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<288,297,9>",(arguments)); Inst4++; } } catch(e) {}
  return arguments;
}

try { if (Inst5 <= 1000 && typeof (sloppyArguments2) != "undefined") {_RecordType("<311,327,12>",(sloppyArguments2)); Inst5++; } } catch(e) {}
function sloppyArguments2(a, b) {
try { if (Inst6 <= 1000 && typeof (a) != "undefined") {_RecordType("<328,329,12>",(a)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (b) != "undefined") {_RecordType("<331,332,12>",(b)); Inst7++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<345,354,13>",(arguments)); Inst8++; } } catch(e) {}
  return arguments;
}

try { if (Inst9 <= 1000 && typeof (slowSloppyArguments) != "undefined") {_RecordType("<368,387,16>",(slowSloppyArguments)); Inst9++; } } catch(e) {}
function slowSloppyArguments() {
  arguments[0xFFFFF] = -1;
try { if (Inst10 <= 1000 && typeof (arguments[0xFFFFF]) != "undefined") {_RecordType("<394,412,17>",(arguments[0xFFFFF])); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<394,403,17>",(arguments)); Inst11++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<428,437,18>",(arguments)); Inst12++; } } catch(e) {}
  return arguments;
}

try { if (Inst13 <= 1000 && typeof (slowSloppyArguments2) != "undefined") {_RecordType("<451,471,21>",(slowSloppyArguments2)); Inst13++; } } catch(e) {}
function slowSloppyArguments2(a, b) {
try { if (Inst14 <= 1000 && typeof (a) != "undefined") {_RecordType("<472,473,21>",(a)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (b) != "undefined") {_RecordType("<475,476,21>",(b)); Inst15++; } } catch(e) {}
  arguments[0xFFFFF] = -1;
try { if (Inst16 <= 1000 && typeof (arguments[0xFFFFF]) != "undefined") {_RecordType("<482,500,22>",(arguments[0xFFFFF])); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<482,491,22>",(arguments)); Inst17++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<516,525,23>",(arguments)); Inst18++; } } catch(e) {}
  return arguments;
}

try { if (Inst20 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<570,579,26>",(undefined)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<606,614,26>",(Infinity)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<617,625,26>",(Infinity)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<627,630,26>",(NaN)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (Object.create) != "undefined") {_RecordType("<712,725,33>",(Object.create)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Object) != "undefined") {_RecordType("<712,718,33>",(Object)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (largeArray) != "undefined") {_RecordType("<783,793,33>",(largeArray)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<799,804,33>",(Proxy)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (Date) != "undefined") {_RecordType("<818,822,33>",(Date)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (String) != "undefined") {_RecordType("<830,836,33>",(String)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (Uint8Array) != "undefined") {_RecordType("<848,858,33>",(Uint8Array)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (Float32Array) != "undefined") {_RecordType("<868,880,33>",(Float32Array)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (Uint8ClampedArray) != "undefined") {_RecordType("<900,917,33>",(Uint8ClampedArray)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<937,943,33>",(RegExp)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (Object.create) != "undefined") {_RecordType("<947,960,33>",(Object.create)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (Object) != "undefined") {_RecordType("<947,953,33>",(Object)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (Object) != "undefined") {_RecordType("<962,968,33>",(Object)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (Array) != "undefined") {_RecordType("<970,975,33>",(Array)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<977,992,33>",(Symbol.iterator)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<977,983,33>",(Symbol)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof ([][Symbol.iterator]) != "undefined") {_RecordType("<994,1013,33>",([][Symbol.iterator])); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<997,1012,33>",(Symbol.iterator)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<997,1003,33>",(Symbol)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (Map) != "undefined") {_RecordType("<1021,1024,33>",(Map)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (Set) != "undefined") {_RecordType("<1032,1035,33>",(Set)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (new Map().entries) != "undefined") {_RecordType("<1039,1056,33>",(new Map().entries)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (Map) != "undefined") {_RecordType("<1043,1046,33>",(Map)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (new Set().entries) != "undefined") {_RecordType("<1060,1077,33>",(new Set().entries)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (Set) != "undefined") {_RecordType("<1064,1067,33>",(Set)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (sloppyArguments) != "undefined") {_RecordType("<1081,1096,33>",(sloppyArguments)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (sloppyArguments) != "undefined") {_RecordType("<1100,1115,33>",(sloppyArguments)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (sloppyArguments2) != "undefined") {_RecordType("<1129,1145,33>",(sloppyArguments2)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (sloppyArguments2) != "undefined") {_RecordType("<1149,1165,33>",(sloppyArguments2)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (slowSloppyArguments) != "undefined") {_RecordType("<1179,1198,33>",(slowSloppyArguments)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (slowSloppyArguments) != "undefined") {_RecordType("<1202,1221,33>",(slowSloppyArguments)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (slowSloppyArguments2) != "undefined") {_RecordType("<1235,1255,33>",(slowSloppyArguments2)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (slowSloppyArguments2) != "undefined") {_RecordType("<1259,1279,33>",(slowSloppyArguments2)); Inst56++; } } catch(e) {}
var objects = [this, true, false, null, undefined, 1, -1, 1.1, -2.2, -0, 0, Infinity, -Infinity, NaN, "aasdfasdfasdfasdf", "a" + "b", {}, {
  1: 1
}, {
  a: 1
}, {
  1: 1,
  2: 2
}, Object.create(null), [], [{}, {}], [1, 1, 1], [1.1, 1.1, 1.1, 1.1, 2], largeArray, new Proxy({}, {}), new Date(), new String(" a"), new Uint8Array(12), new Float32Array([1, 2, 4, 5]), new Uint8ClampedArray(2048), /asdf/, new RegExp(), Object.create, Object, Array, Symbol.iterator, [][Symbol.iterator](), new Map(), new Set(), new Map().entries(), new Set().entries(), sloppyArguments(), sloppyArguments(1, 2, 3, 4), sloppyArguments2(), sloppyArguments2(1, 2, 3, 4), slowSloppyArguments(), slowSloppyArguments(1, 2, 3, 4), slowSloppyArguments2(), slowSloppyArguments2(1, 2, 3, 4)];
try { if (Inst19 <= 1000 && typeof (objects) != "undefined") {_RecordType("<534,541,26>",(objects)); Inst19++; } } catch(e) {}

