var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
var Inst102 = 0;
var Inst103 = 0;
var Inst104 = 0;
var Inst105 = 0;
var Inst106 = 0;
var Inst107 = 0;
var Inst108 = 0;
var Inst109 = 0;
var Inst110 = 0;
var Inst111 = 0;
var Inst112 = 0;
var Inst113 = 0;
var Inst114 = 0;
var Inst115 = 0;
var Inst116 = 0;
var Inst117 = 0;
var Inst118 = 0;
var Inst119 = 0;
var Inst120 = 0;
var Inst121 = 0;
var Inst122 = 0;
var Inst123 = 0;
var Inst124 = 0;
var Inst125 = 0;
var Inst126 = 0;
var Inst127 = 0;
var Inst128 = 0;
var Inst129 = 0;
var Inst130 = 0;
var Inst131 = 0;
var Inst132 = 0;
var Inst133 = 0;
var Inst134 = 0;
var Inst135 = 0;
var Inst136 = 0;
var Inst137 = 0;
var Inst138 = 0;
var Inst139 = 0;
var Inst140 = 0;
var Inst141 = 0;
var Inst142 = 0;
var Inst143 = 0;
var Inst144 = 0;
var Inst145 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2018 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
let kMax31BitSmi = (1 << 30) - 1;
try { if (Inst0 <= 1000 && typeof (kMax31BitSmi) != "undefined") {_RecordType("<171,183,4>",(kMax31BitSmi)); Inst0++; } } catch(e) {}
let k1MiB = 1 * 1024 * 1024;
try { if (Inst1 <= 1000 && typeof (k1MiB) != "undefined") {_RecordType("<205,210,5>",(k1MiB)); Inst1++; } } catch(e) {}
let k1GiB = 1 * 1024 * 1024 * 1024;
try { if (Inst2 <= 1000 && typeof (k1GiB) != "undefined") {_RecordType("<234,239,6>",(k1GiB)); Inst2++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (k1GiB) != "undefined") {_RecordType("<282,287,7>",(k1GiB)); Inst4++; } } catch(e) {}
let k4GiB = 4 * k1GiB;
try { if (Inst3 <= 1000 && typeof (k4GiB) != "undefined") {_RecordType("<270,275,7>",(k4GiB)); Inst3++; } } catch(e) {}
let kPageSize = 65536;
try { if (Inst5 <= 1000 && typeof (kPageSize) != "undefined") {_RecordType("<293,302,8>",(kPageSize)); Inst5++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (k1GiB) != "undefined") {_RecordType("<342,347,9>",(k1GiB)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (kPageSize) != "undefined") {_RecordType("<350,359,9>",(kPageSize)); Inst8++; } } catch(e) {}
let kMaxArrayBufferSize = 2 * k1GiB - kPageSize; // TODO(titzer): raise this to 4GiB
try { if (Inst6 <= 1000 && typeof (kMaxArrayBufferSize) != "undefined") {_RecordType("<316,335,9>",(kMaxArrayBufferSize)); Inst6++; } } catch(e) {}

let kStrideLength = 65536;
try { if (Inst9 <= 1000 && typeof (kStrideLength) != "undefined") {_RecordType("<402,415,11>",(kStrideLength)); Inst9++; } } catch(e) {}

try { if (Inst10 <= 1000 && typeof (Test) != "undefined") {_RecordType("<436,440,13>",(Test)); Inst10++; } } catch(e) {}
(function Test() {
  var buffer;
try { if (Inst11 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<451,457,14>",(buffer)); Inst11++; } } catch(e) {}

try { if (Inst15 <= 1000 && typeof (e) != "undefined") {_RecordType("<530,531,18>",(e)); Inst15++; } } catch(e) {}
  try {
try { if (Inst13 <= 1000 && typeof (ArrayBuffer) != "undefined") {_RecordType("<485,496,17>",(ArrayBuffer)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (kMaxArrayBufferSize) != "undefined") {_RecordType("<497,516,17>",(kMaxArrayBufferSize)); Inst14++; } } catch(e) {}
    buffer = new ArrayBuffer(kMaxArrayBufferSize);
try { if (Inst12 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<472,478,17>",(buffer)); Inst12++; } } catch(e) {}
  } catch (e) {
try { if (Inst16 <= 1000 && typeof (print) != "undefined") {_RecordType("<539,544,19>",(print)); Inst16++; } } catch(e) {}
    print("OOM: sorry, best effort max array buffer size test!");
    return;
  }

try { if (Inst17 <= 1000 && typeof (print) != "undefined") {_RecordType("<620,625,23>",(print)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (buffer.byteLength) != "undefined") {_RecordType("<641,658,23>",(buffer.byteLength)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<641,647,23>",(buffer)); Inst19++; } } catch(e) {}
  print("Allocated " + buffer.byteLength + " bytes");
try { if (Inst20 <= 1000 && typeof (kMaxArrayBufferSize) != "undefined") {_RecordType("<674,693,24>",(kMaxArrayBufferSize)); Inst20++; } } catch(e) {}
  kMaxArrayBufferSize;
try { if (Inst21 <= 1000 && typeof (buffer.byteLength) != "undefined") {_RecordType("<697,714,25>",(buffer.byteLength)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<697,703,25>",(buffer)); Inst22++; } } catch(e) {}
  buffer.byteLength;

try { if (Inst23 <= 1000 && typeof (probe) != "undefined") {_RecordType("<728,733,27>",(probe)); Inst23++; } } catch(e) {}
  function probe(view, stride, f) {
try { if (Inst24 <= 1000 && typeof (view) != "undefined") {_RecordType("<734,738,27>",(view)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (stride) != "undefined") {_RecordType("<740,746,27>",(stride)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (f) != "undefined") {_RecordType("<748,749,27>",(f)); Inst26++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (print) != "undefined") {_RecordType("<757,762,28>",(print)); Inst27++; } } catch(e) {}
    print("--------------------");
try { if (Inst29 <= 1000 && typeof (view.length) != "undefined") {_RecordType("<802,813,29>",(view.length)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (view) != "undefined") {_RecordType("<802,806,29>",(view)); Inst30++; } } catch(e) {}
    let max = view.length;
try { if (Inst28 <= 1000 && typeof (max) != "undefined") {_RecordType("<796,799,29>",(max)); Inst28++; } } catch(e) {}

    for (let i = 0; i < max; i += stride) {
try { if (Inst31 <= 1000 && typeof (i) != "undefined") {_RecordType("<829,830,31>",(i)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (i) != "undefined") {_RecordType("<836,837,31>",(i)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (max) != "undefined") {_RecordType("<840,843,31>",(max)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (i) != "undefined") {_RecordType("<845,846,31>",(i)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (stride) != "undefined") {_RecordType("<850,856,31>",(stride)); Inst35++; } } catch(e) {}
try { if (Inst38 <= 1000 && typeof (f) != "undefined") {_RecordType("<876,877,32>",(f)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (i) != "undefined") {_RecordType("<878,879,32>",(i)); Inst39++; } } catch(e) {}
      view[i] = f(i);
try { if (Inst36 <= 1000 && typeof (view[i]) != "undefined") {_RecordType("<866,873,32>",(view[i])); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (view) != "undefined") {_RecordType("<866,870,32>",(view)); Inst37++; } } catch(e) {}
    }

    for (let i = 0; i < max; i += stride) {
try { if (Inst40 <= 1000 && typeof (i) != "undefined") {_RecordType("<902,903,35>",(i)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (i) != "undefined") {_RecordType("<909,910,35>",(i)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (max) != "undefined") {_RecordType("<913,916,35>",(max)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (i) != "undefined") {_RecordType("<918,919,35>",(i)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (stride) != "undefined") {_RecordType("<923,929,35>",(stride)); Inst44++; } } catch(e) {}
      //    print(`${i} = ${f(i)}`);
try { if (Inst45 <= 1000 && typeof (f) != "undefined") {_RecordType("<976,977,37>",(f)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (i) != "undefined") {_RecordType("<978,979,37>",(i)); Inst46++; } } catch(e) {}
      f(i);
try { if (Inst47 <= 1000 && typeof (view[i]) != "undefined") {_RecordType("<988,995,38>",(view[i])); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (view) != "undefined") {_RecordType("<988,992,38>",(view)); Inst48++; } } catch(e) {}
      view[i];
    }
  }

  {
    // Make an uint32 view and probe it.
    let elemSize = 4;
try { if (Inst49 <= 1000 && typeof (elemSize) != "undefined") {_RecordType("<1061,1069,44>",(elemSize)); Inst49++; } } catch(e) {}
try { if (Inst51 <= 1000 && typeof (kMaxArrayBufferSize) != "undefined") {_RecordType("<1094,1113,45>",(kMaxArrayBufferSize)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (elemSize) != "undefined") {_RecordType("<1116,1124,45>",(elemSize)); Inst52++; } } catch(e) {}
    let viewSize = kMaxArrayBufferSize / elemSize; // TODO(titzer): view sizes are limited to 31 bit SMIs. fix.
try { if (Inst50 <= 1000 && typeof (viewSize) != "undefined") {_RecordType("<1083,1091,45>",(viewSize)); Inst50++; } } catch(e) {}

try { if (Inst53 <= 1000 && typeof (viewSize) != "undefined") {_RecordType("<1196,1204,47>",(viewSize)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (kMax31BitSmi) != "undefined") {_RecordType("<1208,1220,47>",(kMax31BitSmi)); Inst54++; } } catch(e) {}
    if (viewSize <= kMax31BitSmi) {
try { if (Inst56 <= 1000 && typeof (Uint32Array) != "undefined") {_RecordType("<1247,1258,48>",(Uint32Array)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<1259,1265,48>",(buffer)); Inst57++; } } catch(e) {}
      let uint32 = new Uint32Array(buffer);
try { if (Inst55 <= 1000 && typeof (uint32) != "undefined") {_RecordType("<1234,1240,48>",(uint32)); Inst55++; } } catch(e) {}
try { if (Inst58 <= 1000 && typeof (kMaxArrayBufferSize) != "undefined") {_RecordType("<1274,1293,49>",(kMaxArrayBufferSize)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (elemSize) != "undefined") {_RecordType("<1296,1304,49>",(elemSize)); Inst59++; } } catch(e) {}
      kMaxArrayBufferSize / elemSize;
try { if (Inst60 <= 1000 && typeof (uint32.length) != "undefined") {_RecordType("<1312,1325,50>",(uint32.length)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (uint32) != "undefined") {_RecordType("<1312,1318,50>",(uint32)); Inst61++; } } catch(e) {}
      uint32.length;
try { if (Inst62 <= 1000 && typeof (probe) != "undefined") {_RecordType("<1333,1338,51>",(probe)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (uint32) != "undefined") {_RecordType("<1339,1345,51>",(uint32)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (kStrideLength) != "undefined") {_RecordType("<1347,1360,51>",(kStrideLength)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (elemSize) != "undefined") {_RecordType("<1363,1371,51>",(elemSize)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (i) != "undefined") {_RecordType("<1373,1374,51>",(i)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (i) != "undefined") {_RecordType("<1393,1394,51>",(i)); Inst67++; } } catch(e) {}
      probe(uint32, kStrideLength / elemSize, i => (0xaabbccee ^ (i >> 11) * 0x110005) >>> 0);
    }
  }
  {
    // Make an uint16 view and probe it.
    let elemSize = 2;
try { if (Inst68 <= 1000 && typeof (elemSize) != "undefined") {_RecordType("<1485,1493,56>",(elemSize)); Inst68++; } } catch(e) {}
try { if (Inst70 <= 1000 && typeof (kMaxArrayBufferSize) != "undefined") {_RecordType("<1518,1537,57>",(kMaxArrayBufferSize)); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (elemSize) != "undefined") {_RecordType("<1540,1548,57>",(elemSize)); Inst71++; } } catch(e) {}
    let viewSize = kMaxArrayBufferSize / elemSize; // TODO(titzer): view sizes are limited to 31 bit SMIs. fix.
try { if (Inst69 <= 1000 && typeof (viewSize) != "undefined") {_RecordType("<1507,1515,57>",(viewSize)); Inst69++; } } catch(e) {}

try { if (Inst72 <= 1000 && typeof (viewSize) != "undefined") {_RecordType("<1620,1628,59>",(viewSize)); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (kMax31BitSmi) != "undefined") {_RecordType("<1632,1644,59>",(kMax31BitSmi)); Inst73++; } } catch(e) {}
    if (viewSize <= kMax31BitSmi) {
try { if (Inst75 <= 1000 && typeof (Uint16Array) != "undefined") {_RecordType("<1671,1682,60>",(Uint16Array)); Inst75++; } } catch(e) {}try { if (Inst76 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<1683,1689,60>",(buffer)); Inst76++; } } catch(e) {}
      let uint16 = new Uint16Array(buffer);
try { if (Inst74 <= 1000 && typeof (uint16) != "undefined") {_RecordType("<1658,1664,60>",(uint16)); Inst74++; } } catch(e) {}
try { if (Inst77 <= 1000 && typeof (kMaxArrayBufferSize) != "undefined") {_RecordType("<1698,1717,61>",(kMaxArrayBufferSize)); Inst77++; } } catch(e) {}try { if (Inst78 <= 1000 && typeof (elemSize) != "undefined") {_RecordType("<1720,1728,61>",(elemSize)); Inst78++; } } catch(e) {}
      kMaxArrayBufferSize / elemSize;
try { if (Inst79 <= 1000 && typeof (uint16.length) != "undefined") {_RecordType("<1736,1749,62>",(uint16.length)); Inst79++; } } catch(e) {}try { if (Inst80 <= 1000 && typeof (uint16) != "undefined") {_RecordType("<1736,1742,62>",(uint16)); Inst80++; } } catch(e) {}
      uint16.length;
try { if (Inst81 <= 1000 && typeof (probe) != "undefined") {_RecordType("<1757,1762,63>",(probe)); Inst81++; } } catch(e) {}try { if (Inst82 <= 1000 && typeof (uint16) != "undefined") {_RecordType("<1763,1769,63>",(uint16)); Inst82++; } } catch(e) {}try { if (Inst83 <= 1000 && typeof (kStrideLength) != "undefined") {_RecordType("<1771,1784,63>",(kStrideLength)); Inst83++; } } catch(e) {}try { if (Inst84 <= 1000 && typeof (elemSize) != "undefined") {_RecordType("<1787,1795,63>",(elemSize)); Inst84++; } } catch(e) {}try { if (Inst85 <= 1000 && typeof (i) != "undefined") {_RecordType("<1797,1798,63>",(i)); Inst85++; } } catch(e) {}try { if (Inst86 <= 1000 && typeof (i) != "undefined") {_RecordType("<1813,1814,63>",(i)); Inst86++; } } catch(e) {}
      probe(uint16, kStrideLength / elemSize, i => (0xccee ^ (i >> 11) * 0x110005) & 0xFFFF);
    }
  }
  {
    // Make an uint8 view and probe it.
    let elemSize = 1;
try { if (Inst87 <= 1000 && typeof (elemSize) != "undefined") {_RecordType("<1907,1915,68>",(elemSize)); Inst87++; } } catch(e) {}
try { if (Inst89 <= 1000 && typeof (kMaxArrayBufferSize) != "undefined") {_RecordType("<1940,1959,69>",(kMaxArrayBufferSize)); Inst89++; } } catch(e) {}try { if (Inst90 <= 1000 && typeof (elemSize) != "undefined") {_RecordType("<1962,1970,69>",(elemSize)); Inst90++; } } catch(e) {}
    let viewSize = kMaxArrayBufferSize / elemSize; // TODO(titzer): view sizes are limited to 31 bit SMIs. fix.
try { if (Inst88 <= 1000 && typeof (viewSize) != "undefined") {_RecordType("<1929,1937,69>",(viewSize)); Inst88++; } } catch(e) {}

try { if (Inst91 <= 1000 && typeof (viewSize) != "undefined") {_RecordType("<2042,2050,71>",(viewSize)); Inst91++; } } catch(e) {}try { if (Inst92 <= 1000 && typeof (kMax31BitSmi) != "undefined") {_RecordType("<2054,2066,71>",(kMax31BitSmi)); Inst92++; } } catch(e) {}
    if (viewSize <= kMax31BitSmi) {
try { if (Inst94 <= 1000 && typeof (Uint8Array) != "undefined") {_RecordType("<2092,2102,72>",(Uint8Array)); Inst94++; } } catch(e) {}try { if (Inst95 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<2103,2109,72>",(buffer)); Inst95++; } } catch(e) {}
      let uint8 = new Uint8Array(buffer);
try { if (Inst93 <= 1000 && typeof (uint8) != "undefined") {_RecordType("<2080,2085,72>",(uint8)); Inst93++; } } catch(e) {}
try { if (Inst96 <= 1000 && typeof (kMaxArrayBufferSize) != "undefined") {_RecordType("<2118,2137,73>",(kMaxArrayBufferSize)); Inst96++; } } catch(e) {}try { if (Inst97 <= 1000 && typeof (elemSize) != "undefined") {_RecordType("<2140,2148,73>",(elemSize)); Inst97++; } } catch(e) {}
      kMaxArrayBufferSize / elemSize;
try { if (Inst98 <= 1000 && typeof (uint8.length) != "undefined") {_RecordType("<2156,2168,74>",(uint8.length)); Inst98++; } } catch(e) {}try { if (Inst99 <= 1000 && typeof (uint8) != "undefined") {_RecordType("<2156,2161,74>",(uint8)); Inst99++; } } catch(e) {}
      uint8.length;
try { if (Inst100 <= 1000 && typeof (probe) != "undefined") {_RecordType("<2176,2181,75>",(probe)); Inst100++; } } catch(e) {}try { if (Inst101 <= 1000 && typeof (uint8) != "undefined") {_RecordType("<2182,2187,75>",(uint8)); Inst101++; } } catch(e) {}try { if (Inst102 <= 1000 && typeof (kStrideLength) != "undefined") {_RecordType("<2189,2202,75>",(kStrideLength)); Inst102++; } } catch(e) {}try { if (Inst103 <= 1000 && typeof (elemSize) != "undefined") {_RecordType("<2205,2213,75>",(elemSize)); Inst103++; } } catch(e) {}try { if (Inst104 <= 1000 && typeof (i) != "undefined") {_RecordType("<2215,2216,75>",(i)); Inst104++; } } catch(e) {}try { if (Inst105 <= 1000 && typeof (i) != "undefined") {_RecordType("<2229,2230,75>",(i)); Inst105++; } } catch(e) {}
      probe(uint8, kStrideLength / elemSize, i => (0xee ^ (i >> 11) * 0x05) & 0xFF);
    }
  }
  {
    // Make a float64 view and probe it.
    let elemSize = 8;
try { if (Inst106 <= 1000 && typeof (elemSize) != "undefined") {_RecordType("<2318,2326,80>",(elemSize)); Inst106++; } } catch(e) {}
try { if (Inst108 <= 1000 && typeof (kMaxArrayBufferSize) != "undefined") {_RecordType("<2351,2370,81>",(kMaxArrayBufferSize)); Inst108++; } } catch(e) {}try { if (Inst109 <= 1000 && typeof (elemSize) != "undefined") {_RecordType("<2373,2381,81>",(elemSize)); Inst109++; } } catch(e) {}
    let viewSize = kMaxArrayBufferSize / elemSize; // TODO(titzer): view sizes are limited to 31 bit SMIs. fix.
try { if (Inst107 <= 1000 && typeof (viewSize) != "undefined") {_RecordType("<2340,2348,81>",(viewSize)); Inst107++; } } catch(e) {}

try { if (Inst110 <= 1000 && typeof (viewSize) != "undefined") {_RecordType("<2453,2461,83>",(viewSize)); Inst110++; } } catch(e) {}try { if (Inst111 <= 1000 && typeof (kMax31BitSmi) != "undefined") {_RecordType("<2465,2477,83>",(kMax31BitSmi)); Inst111++; } } catch(e) {}
    if (viewSize <= kMax31BitSmi) {
try { if (Inst113 <= 1000 && typeof (Float64Array) != "undefined") {_RecordType("<2505,2517,84>",(Float64Array)); Inst113++; } } catch(e) {}try { if (Inst114 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<2518,2524,84>",(buffer)); Inst114++; } } catch(e) {}
      let float64 = new Float64Array(buffer);
try { if (Inst112 <= 1000 && typeof (float64) != "undefined") {_RecordType("<2491,2498,84>",(float64)); Inst112++; } } catch(e) {}
try { if (Inst115 <= 1000 && typeof (kMaxArrayBufferSize) != "undefined") {_RecordType("<2533,2552,85>",(kMaxArrayBufferSize)); Inst115++; } } catch(e) {}try { if (Inst116 <= 1000 && typeof (elemSize) != "undefined") {_RecordType("<2555,2563,85>",(elemSize)); Inst116++; } } catch(e) {}
      kMaxArrayBufferSize / elemSize;
try { if (Inst117 <= 1000 && typeof (float64.length) != "undefined") {_RecordType("<2571,2585,86>",(float64.length)); Inst117++; } } catch(e) {}try { if (Inst118 <= 1000 && typeof (float64) != "undefined") {_RecordType("<2571,2578,86>",(float64)); Inst118++; } } catch(e) {}
      float64.length;
try { if (Inst119 <= 1000 && typeof (probe) != "undefined") {_RecordType("<2593,2598,87>",(probe)); Inst119++; } } catch(e) {}try { if (Inst120 <= 1000 && typeof (float64) != "undefined") {_RecordType("<2599,2606,87>",(float64)); Inst120++; } } catch(e) {}try { if (Inst121 <= 1000 && typeof (kStrideLength) != "undefined") {_RecordType("<2608,2621,87>",(kStrideLength)); Inst121++; } } catch(e) {}try { if (Inst122 <= 1000 && typeof (elemSize) != "undefined") {_RecordType("<2624,2632,87>",(elemSize)); Inst122++; } } catch(e) {}try { if (Inst123 <= 1000 && typeof (i) != "undefined") {_RecordType("<2634,2635,87>",(i)); Inst123++; } } catch(e) {}try { if (Inst124 <= 1000 && typeof (i) != "undefined") {_RecordType("<2653,2654,87>",(i)); Inst124++; } } catch(e) {}
      probe(float64, kStrideLength / elemSize, i => 0xaabbccee ^ (i >> 11) * 0x110005);
    }
  }
  {
    // Make a float32 view and probe it.
    let elemSize = 4;
try { if (Inst125 <= 1000 && typeof (elemSize) != "undefined") {_RecordType("<2738,2746,92>",(elemSize)); Inst125++; } } catch(e) {}
try { if (Inst127 <= 1000 && typeof (kMaxArrayBufferSize) != "undefined") {_RecordType("<2771,2790,93>",(kMaxArrayBufferSize)); Inst127++; } } catch(e) {}try { if (Inst128 <= 1000 && typeof (elemSize) != "undefined") {_RecordType("<2793,2801,93>",(elemSize)); Inst128++; } } catch(e) {}
    let viewSize = kMaxArrayBufferSize / elemSize; // TODO(titzer): view sizes are limited to 31 bit SMIs. fix.
try { if (Inst126 <= 1000 && typeof (viewSize) != "undefined") {_RecordType("<2760,2768,93>",(viewSize)); Inst126++; } } catch(e) {}

try { if (Inst129 <= 1000 && typeof (viewSize) != "undefined") {_RecordType("<2873,2881,95>",(viewSize)); Inst129++; } } catch(e) {}try { if (Inst130 <= 1000 && typeof (kMax31BitSmi) != "undefined") {_RecordType("<2885,2897,95>",(kMax31BitSmi)); Inst130++; } } catch(e) {}
    if (viewSize <= kMax31BitSmi) {
try { if (Inst132 <= 1000 && typeof (Float32Array) != "undefined") {_RecordType("<2925,2937,96>",(Float32Array)); Inst132++; } } catch(e) {}try { if (Inst133 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<2938,2944,96>",(buffer)); Inst133++; } } catch(e) {}
      let float32 = new Float32Array(buffer);
try { if (Inst131 <= 1000 && typeof (float32) != "undefined") {_RecordType("<2911,2918,96>",(float32)); Inst131++; } } catch(e) {}
try { if (Inst134 <= 1000 && typeof (kMaxArrayBufferSize) != "undefined") {_RecordType("<2953,2972,97>",(kMaxArrayBufferSize)); Inst134++; } } catch(e) {}try { if (Inst135 <= 1000 && typeof (elemSize) != "undefined") {_RecordType("<2975,2983,97>",(elemSize)); Inst135++; } } catch(e) {}
      kMaxArrayBufferSize / elemSize;
try { if (Inst136 <= 1000 && typeof (float32.length) != "undefined") {_RecordType("<2991,3005,98>",(float32.length)); Inst136++; } } catch(e) {}try { if (Inst137 <= 1000 && typeof (float32) != "undefined") {_RecordType("<2991,2998,98>",(float32)); Inst137++; } } catch(e) {}
      float32.length;
try { if (Inst138 <= 1000 && typeof (probe) != "undefined") {_RecordType("<3013,3018,99>",(probe)); Inst138++; } } catch(e) {}try { if (Inst139 <= 1000 && typeof (float32) != "undefined") {_RecordType("<3019,3026,99>",(float32)); Inst139++; } } catch(e) {}try { if (Inst140 <= 1000 && typeof (kStrideLength) != "undefined") {_RecordType("<3028,3041,99>",(kStrideLength)); Inst140++; } } catch(e) {}try { if (Inst141 <= 1000 && typeof (elemSize) != "undefined") {_RecordType("<3044,3052,99>",(elemSize)); Inst141++; } } catch(e) {}try { if (Inst142 <= 1000 && typeof (i) != "undefined") {_RecordType("<3054,3055,99>",(i)); Inst142++; } } catch(e) {}try { if (Inst143 <= 1000 && typeof (Math.fround) != "undefined") {_RecordType("<3059,3070,99>",(Math.fround)); Inst143++; } } catch(e) {}try { if (Inst144 <= 1000 && typeof (Math) != "undefined") {_RecordType("<3059,3063,99>",(Math)); Inst144++; } } catch(e) {}try { if (Inst145 <= 1000 && typeof (i) != "undefined") {_RecordType("<3085,3086,99>",(i)); Inst145++; } } catch(e) {}
      probe(float32, kStrideLength / elemSize, i => Math.fround(0xaabbccee ^ (i >> 11) * 0x110005));
    }
  }
})();

