var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2017 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax
var array = [1.7, 1.7, 1.7];
try { if (Inst0 <= 1000 && typeof (array) != "undefined") {_RecordType("<204,209,5>",(array)); Inst0++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (Symbol.toPrimitive) != "undefined") {_RecordType("<248,266,7>",(Symbol.toPrimitive)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<248,254,7>",(Symbol)); Inst3++; } } catch(e) {}
var mutator = {
  [Symbol.toPrimitive]() {
try { if (Inst4 <= 1000 && typeof (Object.defineProperties) != "undefined") {_RecordType("<276,299,8>",(Object.defineProperties)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Object) != "undefined") {_RecordType("<276,282,8>",(Object)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (array) != "undefined") {_RecordType("<300,305,8>",(array)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (get) != "undefined") {_RecordType("<328,331,10>",(get)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (get) != "undefined") {_RecordType("<387,390,16>",(get)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (get) != "undefined") {_RecordType("<446,449,22>",(get)); Inst9++; } } catch(e) {}
    Object.defineProperties(array, {
      0: {
        get() {
          ;
        }

      },
      1: {
        get() {
          ;
        }

      },
      2: {
        get() {
          ;
        }

      }
    });
    return 0;
  }

};
try { if (Inst1 <= 1000 && typeof (mutator) != "undefined") {_RecordType("<233,240,6>",(mutator)); Inst1++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (array.includes) != "undefined") {_RecordType("<515,529,32>",(array.includes)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (array) != "undefined") {_RecordType("<515,520,32>",(array)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<530,539,32>",(undefined)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (mutator) != "undefined") {_RecordType("<541,548,32>",(mutator)); Inst13++; } } catch(e) {}
array.includes(undefined, mutator);

try { if (Inst14 <= 1000 && typeof (search) != "undefined") {_RecordType("<561,567,34>",(search)); Inst14++; } } catch(e) {}
function search(array, searchElement, startIndex) {
try { if (Inst15 <= 1000 && typeof (array) != "undefined") {_RecordType("<568,573,34>",(array)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (searchElement) != "undefined") {_RecordType("<575,588,34>",(searchElement)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (startIndex) != "undefined") {_RecordType("<590,600,34>",(startIndex)); Inst17++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (array.includes) != "undefined") {_RecordType("<613,627,35>",(array.includes)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (array) != "undefined") {_RecordType("<613,618,35>",(array)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (searchElement) != "undefined") {_RecordType("<628,641,35>",(searchElement)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (startIndex) != "undefined") {_RecordType("<643,653,35>",(startIndex)); Inst21++; } } catch(e) {}
  return array.includes(searchElement, startIndex);
}

array = [1.7, 1.7, 1.7];
try { if (Inst22 <= 1000 && typeof (array) != "undefined") {_RecordType("<659,664,38>",(array)); Inst22++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (Symbol.toPrimitive) != "undefined") {_RecordType("<707,725,40>",(Symbol.toPrimitive)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<707,713,40>",(Symbol)); Inst25++; } } catch(e) {}
var not_mutator = {
  [Symbol.toPrimitive]() {
    return 0;
  }

};
try { if (Inst23 <= 1000 && typeof (not_mutator) != "undefined") {_RecordType("<688,699,39>",(not_mutator)); Inst23++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (search) != "undefined") {_RecordType("<753,759,45>",(search)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (array) != "undefined") {_RecordType("<760,765,45>",(array)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<767,776,45>",(undefined)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (not_mutator) != "undefined") {_RecordType("<778,789,45>",(not_mutator)); Inst29++; } } catch(e) {}
search(array, undefined, not_mutator);
try { if (Inst30 <= 1000 && typeof (search) != "undefined") {_RecordType("<792,798,46>",(search)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (array) != "undefined") {_RecordType("<799,804,46>",(array)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<806,815,46>",(undefined)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (not_mutator) != "undefined") {_RecordType("<817,828,46>",(not_mutator)); Inst33++; } } catch(e) {}
search(array, undefined, not_mutator);
try { if (Inst34 <= 1000 && typeof (search) != "undefined") {_RecordType("<831,837,47>",(search)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (array) != "undefined") {_RecordType("<838,843,47>",(array)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<845,854,47>",(undefined)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (mutator) != "undefined") {_RecordType("<856,863,47>",(mutator)); Inst37++; } } catch(e) {}
search(array, undefined, mutator);

