var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2013 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// Flags: --allow-natives-syntax
try { if (Inst0 <= 1000 && typeof (f1) != "undefined") {_RecordType("<1639,1641,28>",(f1)); Inst0++; } } catch(e) {}
function f1(a, i) {
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<1642,1643,28>",(a)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (i) != "undefined") {_RecordType("<1645,1646,28>",(i)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (a[i]) != "undefined") {_RecordType("<1659,1663,29>",(a[i])); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (a) != "undefined") {_RecordType("<1659,1660,29>",(a)); Inst4++; } } catch(e) {}
  return a[i];
}

var a1 = [,,,,,,,,,,,,,,,,,, 0.5];
try { if (Inst5 <= 1000 && typeof (a1) != "undefined") {_RecordType("<1672,1674,32>",(a1)); Inst5++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<1703,1712,33>",(undefined)); Inst6++; } } catch(e) {}
undefined;
try { if (Inst7 <= 1000 && typeof (f1) != "undefined") {_RecordType("<1714,1716,34>",(f1)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (a1) != "undefined") {_RecordType("<1717,1719,34>",(a1)); Inst8++; } } catch(e) {}
f1(a1, 1);
try { if (Inst9 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<1725,1734,35>",(undefined)); Inst9++; } } catch(e) {}
undefined;
try { if (Inst10 <= 1000 && typeof (f1) != "undefined") {_RecordType("<1736,1738,36>",(f1)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (a1) != "undefined") {_RecordType("<1739,1741,36>",(a1)); Inst11++; } } catch(e) {}
f1(a1, 1);
try { if (Inst12 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<1747,1756,37>",(undefined)); Inst12++; } } catch(e) {}
undefined;
try { if (Inst13 <= 1000 && typeof (f1) != "undefined") {_RecordType("<1758,1760,38>",(f1)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (a1) != "undefined") {_RecordType("<1761,1763,38>",(a1)); Inst14++; } } catch(e) {}
f1(a1, 1);
try { if (Inst15 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<1769,1778,39>",(undefined)); Inst15++; } } catch(e) {}
undefined;
try { if (Inst16 <= 1000 && typeof (f1) != "undefined") {_RecordType("<1780,1782,40>",(f1)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (a1) != "undefined") {_RecordType("<1783,1785,40>",(a1)); Inst17++; } } catch(e) {}
f1(a1, 1);

try { if (Inst18 <= 1000 && typeof (f2) != "undefined") {_RecordType("<1801,1803,42>",(f2)); Inst18++; } } catch(e) {}
function f2(a, i) {
try { if (Inst19 <= 1000 && typeof (a) != "undefined") {_RecordType("<1804,1805,42>",(a)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<1807,1808,42>",(i)); Inst20++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (a[i]) != "undefined") {_RecordType("<1821,1825,43>",(a[i])); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (a) != "undefined") {_RecordType("<1821,1822,43>",(a)); Inst22++; } } catch(e) {}
  return a[i] + 0.5;
}

var a2_b = [0.0,,];
try { if (Inst23 <= 1000 && typeof (a2_b) != "undefined") {_RecordType("<1840,1844,46>",(a2_b)); Inst23++; } } catch(e) {}
0.5;
try { if (Inst24 <= 1000 && typeof (f2) != "undefined") {_RecordType("<1861,1863,48>",(f2)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (a2_b) != "undefined") {_RecordType("<1864,1868,48>",(a2_b)); Inst25++; } } catch(e) {}
f2(a2_b, 0);
0.5;
try { if (Inst26 <= 1000 && typeof (f2) != "undefined") {_RecordType("<1879,1881,50>",(f2)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (a2_b) != "undefined") {_RecordType("<1882,1886,50>",(a2_b)); Inst27++; } } catch(e) {}
f2(a2_b, 0);
0.5;
try { if (Inst28 <= 1000 && typeof (f2) != "undefined") {_RecordType("<1897,1899,52>",(f2)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (a2_b) != "undefined") {_RecordType("<1900,1904,52>",(a2_b)); Inst29++; } } catch(e) {}
f2(a2_b, 0);
try { if (Inst30 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<1910,1913,53>",(NaN)); Inst30++; } } catch(e) {}
NaN;
try { if (Inst31 <= 1000 && typeof (f2) != "undefined") {_RecordType("<1915,1917,54>",(f2)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (a2_b) != "undefined") {_RecordType("<1918,1922,54>",(a2_b)); Inst32++; } } catch(e) {}
f2(a2_b, 1);
a2_b.__proto__ = [1.5, 1.5, 1.5];
try { if (Inst33 <= 1000 && typeof (a2_b.__proto__) != "undefined") {_RecordType("<1928,1942,55>",(a2_b.__proto__)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (a2_b) != "undefined") {_RecordType("<1928,1932,55>",(a2_b)); Inst34++; } } catch(e) {}
2;
try { if (Inst35 <= 1000 && typeof (f2) != "undefined") {_RecordType("<1965,1967,57>",(f2)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (a2_b) != "undefined") {_RecordType("<1968,1972,57>",(a2_b)); Inst36++; } } catch(e) {}
f2(a2_b, 1);
0.5;
try { if (Inst37 <= 1000 && typeof (f2) != "undefined") {_RecordType("<1983,1985,59>",(f2)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (a2_b) != "undefined") {_RecordType("<1986,1990,59>",(a2_b)); Inst38++; } } catch(e) {}
f2(a2_b, 0);

