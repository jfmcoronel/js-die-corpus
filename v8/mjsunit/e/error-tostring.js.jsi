var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2011 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// Test default string representation of an Error object.
try { if (Inst1 <= 1000 && typeof (Error) != "undefined") {_RecordType("<1667,1672,28>",(Error)); Inst1++; } } catch(e) {}
var e = new Error();
try { if (Inst0 <= 1000 && typeof (e) != "undefined") {_RecordType("<1659,1660,28>",(e)); Inst0++; } } catch(e) {}
'Error';
try { if (Inst2 <= 1000 && typeof (e.toString) != "undefined") {_RecordType("<1685,1695,30>",(e.toString)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (e) != "undefined") {_RecordType("<1685,1686,30>",(e)); Inst3++; } } catch(e) {}
e.toString();
// Test printing of cyclic errors which return the empty string for
// compatibility with Safari and Firefox.
try { if (Inst5 <= 1000 && typeof (Error) != "undefined") {_RecordType("<1817,1822,33>",(Error)); Inst5++; } } catch(e) {}
e = new Error();
try { if (Inst4 <= 1000 && typeof (e) != "undefined") {_RecordType("<1809,1810,33>",(e)); Inst4++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (e) != "undefined") {_RecordType("<1835,1836,34>",(e)); Inst8++; } } catch(e) {}
e.name = e;
try { if (Inst6 <= 1000 && typeof (e.name) != "undefined") {_RecordType("<1826,1832,34>",(e.name)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (e) != "undefined") {_RecordType("<1826,1827,34>",(e)); Inst7++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (e) != "undefined") {_RecordType("<1850,1851,35>",(e)); Inst11++; } } catch(e) {}
e.message = e;
try { if (Inst9 <= 1000 && typeof (e.message) != "undefined") {_RecordType("<1838,1847,35>",(e.message)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (e) != "undefined") {_RecordType("<1838,1839,35>",(e)); Inst10++; } } catch(e) {}
e.stack = "Does not occur in output";
try { if (Inst12 <= 1000 && typeof (e.stack) != "undefined") {_RecordType("<1853,1860,36>",(e.stack)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (e) != "undefined") {_RecordType("<1853,1854,36>",(e)); Inst13++; } } catch(e) {}
e.arguments = "Does not occur in output";
try { if (Inst14 <= 1000 && typeof (e.arguments) != "undefined") {_RecordType("<1891,1902,37>",(e.arguments)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (e) != "undefined") {_RecordType("<1891,1892,37>",(e)); Inst15++; } } catch(e) {}
e.type = "Does not occur in output";
try { if (Inst16 <= 1000 && typeof (e.type) != "undefined") {_RecordType("<1933,1939,38>",(e.type)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (e) != "undefined") {_RecordType("<1933,1934,38>",(e)); Inst17++; } } catch(e) {}

try { if (Inst18 <= 1000 && typeof (e.toString) != "undefined") {_RecordType("<1978,1988,40>",(e.toString)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (e) != "undefined") {_RecordType("<1978,1979,40>",(e)); Inst19++; } } catch(e) {}
(() => e.toString())();

try { if (Inst20 <= 1000 && typeof (RangeError) != "undefined") {_RecordType("<1996,2006,42>",(RangeError)); Inst20++; } } catch(e) {}
RangeError;
try { if (Inst22 <= 1000 && typeof (Error) != "undefined") {_RecordType("<2016,2021,43>",(Error)); Inst22++; } } catch(e) {}
e = new Error();
try { if (Inst21 <= 1000 && typeof (e) != "undefined") {_RecordType("<2008,2009,43>",(e)); Inst21++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (e) != "undefined") {_RecordType("<2035,2036,44>",(e)); Inst25++; } } catch(e) {}
e.name = [e];
try { if (Inst23 <= 1000 && typeof (e.name) != "undefined") {_RecordType("<2025,2031,44>",(e.name)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (e) != "undefined") {_RecordType("<2025,2026,44>",(e)); Inst24++; } } catch(e) {}
try { if (Inst28 <= 1000 && typeof (e) != "undefined") {_RecordType("<2052,2053,45>",(e)); Inst28++; } } catch(e) {}
e.message = [e];
try { if (Inst26 <= 1000 && typeof (e.message) != "undefined") {_RecordType("<2039,2048,45>",(e.message)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (e) != "undefined") {_RecordType("<2039,2040,45>",(e)); Inst27++; } } catch(e) {}
e.stack = "Does not occur in output";
try { if (Inst29 <= 1000 && typeof (e.stack) != "undefined") {_RecordType("<2056,2063,46>",(e.stack)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (e) != "undefined") {_RecordType("<2056,2057,46>",(e)); Inst30++; } } catch(e) {}
e.arguments = "Does not occur in output";
try { if (Inst31 <= 1000 && typeof (e.arguments) != "undefined") {_RecordType("<2094,2105,47>",(e.arguments)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (e) != "undefined") {_RecordType("<2094,2095,47>",(e)); Inst32++; } } catch(e) {}
e.type = "Does not occur in output";
try { if (Inst33 <= 1000 && typeof (e.type) != "undefined") {_RecordType("<2136,2142,48>",(e.type)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (e) != "undefined") {_RecordType("<2136,2137,48>",(e)); Inst34++; } } catch(e) {}
'';
try { if (Inst35 <= 1000 && typeof (e.toString) != "undefined") {_RecordType("<2177,2187,50>",(e.toString)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (e) != "undefined") {_RecordType("<2177,2178,50>",(e)); Inst36++; } } catch(e) {}
e.toString();

// Test the sequence in which getters and toString operations are called
// on a given Error object.  Verify the produced string representation.
try { if (Inst37 <= 1000 && typeof (testErrorToString) != "undefined") {_RecordType("<2346,2363,54>",(testErrorToString)); Inst37++; } } catch(e) {}
function testErrorToString(nameValue, messageValue) {
try { if (Inst38 <= 1000 && typeof (nameValue) != "undefined") {_RecordType("<2364,2373,54>",(nameValue)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (messageValue) != "undefined") {_RecordType("<2375,2387,54>",(messageValue)); Inst39++; } } catch(e) {}
  var seq = [];
try { if (Inst40 <= 1000 && typeof (seq) != "undefined") {_RecordType("<2397,2400,55>",(seq)); Inst40++; } } catch(e) {}
try { if (Inst42 <= 1000 && typeof (name) != "undefined") {_RecordType("<2427,2431,57>",(name)); Inst42++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (message) != "undefined") {_RecordType("<2626,2633,67>",(message)); Inst51++; } } catch(e) {}
  var e = {
    get name() {
try { if (Inst43 <= 1000 && typeof (seq.push) != "undefined") {_RecordType("<2442,2450,58>",(seq.push)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (seq) != "undefined") {_RecordType("<2442,2445,58>",(seq)); Inst44++; } } catch(e) {}
      seq.push(1);
try { if (Inst45 <= 1000 && typeof (nameValue) != "undefined") {_RecordType("<2468,2477,59>",(nameValue)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<2482,2491,59>",(undefined)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (nameValue) != "undefined") {_RecordType("<2494,2503,59>",(nameValue)); Inst47++; } } catch(e) {}
      return nameValue === undefined ? nameValue : {
        toString: function () {
try { if (Inst48 <= 1000 && typeof (seq.push) != "undefined") {_RecordType("<2550,2558,61>",(seq.push)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (seq) != "undefined") {_RecordType("<2550,2553,61>",(seq)); Inst49++; } } catch(e) {}
          seq.push(2);
try { if (Inst50 <= 1000 && typeof (nameValue) != "undefined") {_RecordType("<2580,2589,62>",(nameValue)); Inst50++; } } catch(e) {}
          return nameValue;
        }
      };
    },

    get message() {
try { if (Inst52 <= 1000 && typeof (seq.push) != "undefined") {_RecordType("<2644,2652,68>",(seq.push)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (seq) != "undefined") {_RecordType("<2644,2647,68>",(seq)); Inst53++; } } catch(e) {}
      seq.push(3);
try { if (Inst54 <= 1000 && typeof (messageValue) != "undefined") {_RecordType("<2670,2682,69>",(messageValue)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<2687,2696,69>",(undefined)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (messageValue) != "undefined") {_RecordType("<2699,2711,69>",(messageValue)); Inst56++; } } catch(e) {}
      return messageValue === undefined ? messageValue : {
        toString: function () {
try { if (Inst57 <= 1000 && typeof (seq.push) != "undefined") {_RecordType("<2758,2766,71>",(seq.push)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (seq) != "undefined") {_RecordType("<2758,2761,71>",(seq)); Inst58++; } } catch(e) {}
          seq.push(4);
try { if (Inst59 <= 1000 && typeof (messageValue) != "undefined") {_RecordType("<2788,2800,72>",(messageValue)); Inst59++; } } catch(e) {}
          return messageValue;
        }
      };
    }

  };
try { if (Inst41 <= 1000 && typeof (e) != "undefined") {_RecordType("<2413,2414,56>",(e)); Inst41++; } } catch(e) {}
try { if (Inst61 <= 1000 && typeof (Error.prototype.toString.call) != "undefined") {_RecordType("<2848,2877,78>",(Error.prototype.toString.call)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (Error.prototype.toString) != "undefined") {_RecordType("<2848,2872,78>",(Error.prototype.toString)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (Error.prototype) != "undefined") {_RecordType("<2848,2863,78>",(Error.prototype)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (Error) != "undefined") {_RecordType("<2848,2853,78>",(Error)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (e) != "undefined") {_RecordType("<2878,2879,78>",(e)); Inst65++; } } catch(e) {}
  var string = Error.prototype.toString.call(e);
try { if (Inst60 <= 1000 && typeof (string) != "undefined") {_RecordType("<2839,2845,78>",(string)); Inst60++; } } catch(e) {}
try { if (Inst66 <= 1000 && typeof (string) != "undefined") {_RecordType("<2892,2898,79>",(string)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (seq) != "undefined") {_RecordType("<2900,2903,79>",(seq)); Inst67++; } } catch(e) {}
  return [string, seq];
}

["Error", [1, 3]];
try { if (Inst68 <= 1000 && typeof (testErrorToString) != "undefined") {_RecordType("<2928,2945,83>",(testErrorToString)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<2946,2955,83>",(undefined)); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<2957,2966,83>",(undefined)); Inst70++; } } catch(e) {}
testErrorToString(undefined, undefined);
["e1", [1, 2, 3]];
try { if (Inst71 <= 1000 && typeof (testErrorToString) != "undefined") {_RecordType("<2988,3005,85>",(testErrorToString)); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<3012,3021,85>",(undefined)); Inst72++; } } catch(e) {}
testErrorToString("e1", undefined);
["e1: null", [1, 2, 3, 4]];
try { if (Inst73 <= 1000 && typeof (testErrorToString) != "undefined") {_RecordType("<3052,3069,87>",(testErrorToString)); Inst73++; } } catch(e) {}
testErrorToString("e1", null);
["e1", [1, 2, 3, 4]];
try { if (Inst74 <= 1000 && typeof (testErrorToString) != "undefined") {_RecordType("<3105,3122,89>",(testErrorToString)); Inst74++; } } catch(e) {}
testErrorToString("e1", "");
["Error: e2", [1, 3, 4]];
try { if (Inst75 <= 1000 && typeof (testErrorToString) != "undefined") {_RecordType("<3160,3177,91>",(testErrorToString)); Inst75++; } } catch(e) {}try { if (Inst76 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<3178,3187,91>",(undefined)); Inst76++; } } catch(e) {}
testErrorToString(undefined, "e2");
["null: e2", [1, 2, 3, 4]];
try { if (Inst77 <= 1000 && typeof (testErrorToString) != "undefined") {_RecordType("<3224,3241,93>",(testErrorToString)); Inst77++; } } catch(e) {}
testErrorToString(null, "e2");
["e2", [1, 2, 3, 4]];
try { if (Inst78 <= 1000 && typeof (testErrorToString) != "undefined") {_RecordType("<3277,3294,95>",(testErrorToString)); Inst78++; } } catch(e) {}
testErrorToString("", "e2");
["e1: e2", [1, 2, 3, 4]];
try { if (Inst79 <= 1000 && typeof (testErrorToString) != "undefined") {_RecordType("<3332,3349,97>",(testErrorToString)); Inst79++; } } catch(e) {}
testErrorToString("e1", "e2");
try { if (Inst81 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<3381,3392,99>",(constructor)); Inst81++; } } catch(e) {}
var obj = {
  get constructor() {}

};
try { if (Inst80 <= 1000 && typeof (obj) != "undefined") {_RecordType("<3367,3370,98>",(obj)); Inst80++; } } catch(e) {}

(function () {
try { if (Inst82 <= 1000 && typeof (obj.x) != "undefined") {_RecordType("<3420,3425,104>",(obj.x)); Inst82++; } } catch(e) {}try { if (Inst83 <= 1000 && typeof (obj) != "undefined") {_RecordType("<3420,3423,104>",(obj)); Inst83++; } } catch(e) {}
  obj.x();
})();

