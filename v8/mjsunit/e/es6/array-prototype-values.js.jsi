var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2016 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Functionality of the values iterator is tested elsewhere; this test
// merely verifies that the 'values' property is set up correctly.
try { if (Inst1 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<322,353,6>",(Object.getOwnPropertyDescriptor)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Object) != "undefined") {_RecordType("<322,328,6>",(Object)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<354,369,6>",(Array.prototype)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Array) != "undefined") {_RecordType("<354,359,6>",(Array)); Inst4++; } } catch(e) {}
var valuesDesc = Object.getOwnPropertyDescriptor(Array.prototype, 'values');
try { if (Inst0 <= 1000 && typeof (valuesDesc) != "undefined") {_RecordType("<309,319,6>",(valuesDesc)); Inst0++; } } catch(e) {}
'object';
try { if (Inst5 <= 1000 && typeof (valuesDesc) != "undefined") {_RecordType("<399,409,8>",(valuesDesc)); Inst5++; } } catch(e) {}
typeof valuesDesc;
try { if (Inst6 <= 1000 && typeof (Array.prototype[Symbol.iterator]) != "undefined") {_RecordType("<411,443,9>",(Array.prototype[Symbol.iterator])); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<411,426,9>",(Array.prototype)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Array) != "undefined") {_RecordType("<411,416,9>",(Array)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<427,442,9>",(Symbol.iterator)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<427,433,9>",(Symbol)); Inst10++; } } catch(e) {}
Array.prototype[Symbol.iterator];
try { if (Inst11 <= 1000 && typeof (valuesDesc.value) != "undefined") {_RecordType("<445,461,10>",(valuesDesc.value)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (valuesDesc) != "undefined") {_RecordType("<445,455,10>",(valuesDesc)); Inst12++; } } catch(e) {}
valuesDesc.value;
try { if (Inst13 <= 1000 && typeof (valuesDesc.configurable) != "undefined") {_RecordType("<463,486,11>",(valuesDesc.configurable)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (valuesDesc) != "undefined") {_RecordType("<463,473,11>",(valuesDesc)); Inst14++; } } catch(e) {}
valuesDesc.configurable;
try { if (Inst15 <= 1000 && typeof (valuesDesc.writable) != "undefined") {_RecordType("<488,507,12>",(valuesDesc.writable)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (valuesDesc) != "undefined") {_RecordType("<488,498,12>",(valuesDesc)); Inst16++; } } catch(e) {}
valuesDesc.writable;
try { if (Inst17 <= 1000 && typeof (valuesDesc.enumerable) != "undefined") {_RecordType("<509,530,13>",(valuesDesc.enumerable)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (valuesDesc) != "undefined") {_RecordType("<509,519,13>",(valuesDesc)); Inst18++; } } catch(e) {}
valuesDesc.enumerable;
try { if (Inst19 <= 1000 && typeof (Array.prototype[Symbol.unscopables].values) != "undefined") {_RecordType("<532,574,14>",(Array.prototype[Symbol.unscopables].values)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (Array.prototype[Symbol.unscopables]) != "undefined") {_RecordType("<532,567,14>",(Array.prototype[Symbol.unscopables])); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<532,547,14>",(Array.prototype)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Array) != "undefined") {_RecordType("<532,537,14>",(Array)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Symbol.unscopables) != "undefined") {_RecordType("<548,566,14>",(Symbol.unscopables)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<548,554,14>",(Symbol)); Inst24++; } } catch(e) {}
Array.prototype[Symbol.unscopables].values;

try { if (Inst25 <= 1000 && typeof (Array.prototype[Symbol.iterator]) != "undefined") {_RecordType("<588,620,16>",(Array.prototype[Symbol.iterator])); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<588,603,16>",(Array.prototype)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (Array) != "undefined") {_RecordType("<588,593,16>",(Array)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<604,619,16>",(Symbol.iterator)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<604,610,16>",(Symbol)); Inst29++; } } catch(e) {}
(() => new Array.prototype[Symbol.iterator]())();

try { if (Inst30 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<628,637,18>",(TypeError)); Inst30++; } } catch(e) {}
TypeError;

