var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2017 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax
try { if (Inst0 <= 1000 && typeof (modifyArrayIterator) != "undefined") {_RecordType("<210,229,5>",(modifyArrayIterator)); Inst0++; } } catch(e) {}
(function modifyArrayIterator() {
  'use strict';

  class Point {
    constructor(x, y) {
try { if (Inst2 <= 1000 && typeof (x) != "undefined") {_RecordType("<283,284,9>",(x)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (y) != "undefined") {_RecordType("<286,287,9>",(y)); Inst3++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (x) != "undefined") {_RecordType("<306,307,10>",(x)); Inst5++; } } catch(e) {}
      this.x = x;
try { if (Inst4 <= 1000 && typeof (this.x) != "undefined") {_RecordType("<297,303,10>",(this.x)); Inst4++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (y) != "undefined") {_RecordType("<324,325,11>",(y)); Inst7++; } } catch(e) {}
      this.y = y;
try { if (Inst6 <= 1000 && typeof (this.y) != "undefined") {_RecordType("<315,321,11>",(this.y)); Inst6++; } } catch(e) {}
    }

  }
try { if (Inst1 <= 1000 && typeof (Point) != "undefined") {_RecordType("<259,264,8>",(Point)); Inst1++; } } catch(e) {}

try { if (Inst11 <= 1000 && typeof (Point) != "undefined") {_RecordType("<365,370,16>",(Point)); Inst11++; } } catch(e) {}
  class RestPoint extends Point {
    constructor(...args) {
try { if (Inst9 <= 1000 && typeof (args) != "undefined") {_RecordType("<392,396,17>",(args)); Inst9++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (args) != "undefined") {_RecordType("<415,419,18>",(args)); Inst10++; } } catch(e) {}
      super(...args);
    }

  }
try { if (Inst8 <= 1000 && typeof (RestPoint) != "undefined") {_RecordType("<347,356,16>",(RestPoint)); Inst8++; } } catch(e) {}

try { if (Inst12 <= 1000 && typeof (testRestPoint) != "undefined") {_RecordType("<445,458,23>",(testRestPoint)); Inst12++; } } catch(e) {}
  function testRestPoint(x, y) {
try { if (Inst13 <= 1000 && typeof (x) != "undefined") {_RecordType("<459,460,23>",(x)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (y) != "undefined") {_RecordType("<462,463,23>",(y)); Inst14++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (RestPoint) != "undefined") {_RecordType("<482,491,24>",(RestPoint)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (x) != "undefined") {_RecordType("<492,493,24>",(x)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (y) != "undefined") {_RecordType("<495,496,24>",(y)); Inst17++; } } catch(e) {}
    return new RestPoint(x, y);
  }

try { if (Inst18 <= 1000 && typeof (testRestPoint) != "undefined") {_RecordType("<506,519,27>",(testRestPoint)); Inst18++; } } catch(e) {}
  testRestPoint(1, 2);
try { if (Inst19 <= 1000 && typeof (testRestPoint) != "undefined") {_RecordType("<529,542,28>",(testRestPoint)); Inst19++; } } catch(e) {}
  testRestPoint(1, 2);
try { if (Inst21 <= 1000 && typeof (testRestPoint) != "undefined") {_RecordType("<560,573,29>",(testRestPoint)); Inst21++; } } catch(e) {}
  var r = testRestPoint(1, 2);
try { if (Inst20 <= 1000 && typeof (r) != "undefined") {_RecordType("<556,557,29>",(r)); Inst20++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (r) != "undefined") {_RecordType("<583,584,30>",(r)); Inst22++; } } catch(e) {}
  r;
try { if (Inst23 <= 1000 && typeof (RestPoint) != "undefined") {_RecordType("<588,597,31>",(RestPoint)); Inst23++; } } catch(e) {}
  RestPoint;
try { if (Inst24 <= 1000 && typeof (r) != "undefined") {_RecordType("<601,602,32>",(r)); Inst24++; } } catch(e) {}
  r;
try { if (Inst25 <= 1000 && typeof (Point) != "undefined") {_RecordType("<606,611,33>",(Point)); Inst25++; } } catch(e) {}
  Point;
  1;
try { if (Inst26 <= 1000 && typeof (r.x) != "undefined") {_RecordType("<620,623,35>",(r.x)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (r) != "undefined") {_RecordType("<620,621,35>",(r)); Inst27++; } } catch(e) {}
  r.x;
  2;
try { if (Inst28 <= 1000 && typeof (r.y) != "undefined") {_RecordType("<632,635,37>",(r.y)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (r) != "undefined") {_RecordType("<632,633,37>",(r)); Inst29++; } } catch(e) {}
  r.y;
try { if (Inst30 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<639,660,38>",(Object.defineProperty)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (Object) != "undefined") {_RecordType("<639,645,38>",(Object)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<661,676,38>",(Array.prototype)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (Array) != "undefined") {_RecordType("<661,666,38>",(Array)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<678,693,38>",(Symbol.iterator)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<678,684,38>",(Symbol)); Inst35++; } } catch(e) {}
  Object.defineProperty(Array.prototype, Symbol.iterator, {
    value: function* () {
      yield 3;
      yield 4;
    },
    configurable: true
  });
try { if (Inst37 <= 1000 && typeof (testRestPoint) != "undefined") {_RecordType("<800,813,45>",(testRestPoint)); Inst37++; } } catch(e) {}
  var r2 = testRestPoint(1, 2);
try { if (Inst36 <= 1000 && typeof (r2) != "undefined") {_RecordType("<795,797,45>",(r2)); Inst36++; } } catch(e) {}
try { if (Inst38 <= 1000 && typeof (r2) != "undefined") {_RecordType("<823,825,46>",(r2)); Inst38++; } } catch(e) {}
  r2;
try { if (Inst39 <= 1000 && typeof (RestPoint) != "undefined") {_RecordType("<829,838,47>",(RestPoint)); Inst39++; } } catch(e) {}
  RestPoint;
try { if (Inst40 <= 1000 && typeof (r2) != "undefined") {_RecordType("<842,844,48>",(r2)); Inst40++; } } catch(e) {}
  r2;
try { if (Inst41 <= 1000 && typeof (Point) != "undefined") {_RecordType("<848,853,49>",(Point)); Inst41++; } } catch(e) {}
  Point;
  3;
try { if (Inst42 <= 1000 && typeof (r2.x) != "undefined") {_RecordType("<862,866,51>",(r2.x)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (r2) != "undefined") {_RecordType("<862,864,51>",(r2)); Inst43++; } } catch(e) {}
  r2.x;
  4;
try { if (Inst44 <= 1000 && typeof (r2.y) != "undefined") {_RecordType("<875,879,53>",(r2.y)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (r2) != "undefined") {_RecordType("<875,877,53>",(r2)); Inst45++; } } catch(e) {}
  r2.y;
})();

