var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
var Inst102 = 0;
var Inst103 = 0;
var Inst104 = 0;
var Inst105 = 0;
var Inst106 = 0;
var Inst107 = 0;
var Inst108 = 0;
var Inst109 = 0;
var Inst110 = 0;
var Inst111 = 0;
var Inst112 = 0;
var Inst113 = 0;
var Inst114 = 0;
var Inst115 = 0;
var Inst116 = 0;
var Inst117 = 0;
var Inst118 = 0;
var Inst119 = 0;
var Inst120 = 0;
var Inst121 = 0;
var Inst122 = 0;
var Inst123 = 0;
var Inst124 = 0;
var Inst125 = 0;
var Inst126 = 0;
var Inst127 = 0;
var Inst128 = 0;
var Inst129 = 0;
var Inst130 = 0;
var Inst131 = 0;
var Inst132 = 0;
var Inst133 = 0;
var Inst134 = 0;
var Inst135 = 0;
var Inst136 = 0;
var Inst137 = 0;
var Inst138 = 0;
var Inst139 = 0;
var Inst140 = 0;
var Inst141 = 0;
var Inst142 = 0;
var Inst143 = 0;
var Inst144 = 0;
var Inst145 = 0;
var Inst146 = 0;
var Inst147 = 0;
var Inst148 = 0;
var Inst149 = 0;
var Inst150 = 0;
var Inst151 = 0;
var Inst152 = 0;
var Inst153 = 0;
var Inst154 = 0;
var Inst155 = 0;
var Inst156 = 0;
var Inst157 = 0;
var Inst158 = 0;
var Inst159 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2015 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
var r1 = /abc/gi;
try { if (Inst0 <= 1000 && typeof (r1) != "undefined") {_RecordType("<171,173,4>",(r1)); Inst0++; } } catch(e) {}
"abc";
try { if (Inst1 <= 1000 && typeof (r1.source) != "undefined") {_RecordType("<192,201,6>",(r1.source)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (r1) != "undefined") {_RecordType("<192,194,6>",(r1)); Inst2++; } } catch(e) {}
r1.source;
try { if (Inst3 <= 1000 && typeof (r1.global) != "undefined") {_RecordType("<203,212,7>",(r1.global)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (r1) != "undefined") {_RecordType("<203,205,7>",(r1)); Inst4++; } } catch(e) {}
r1.global;
try { if (Inst5 <= 1000 && typeof (r1.ignoreCase) != "undefined") {_RecordType("<214,227,8>",(r1.ignoreCase)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (r1) != "undefined") {_RecordType("<214,216,8>",(r1)); Inst6++; } } catch(e) {}
r1.ignoreCase;
try { if (Inst7 <= 1000 && typeof (r1.multiline) != "undefined") {_RecordType("<229,241,9>",(r1.multiline)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (r1) != "undefined") {_RecordType("<229,231,9>",(r1)); Inst8++; } } catch(e) {}
r1.multiline;
try { if (Inst9 <= 1000 && typeof (r1.sticky) != "undefined") {_RecordType("<243,252,10>",(r1.sticky)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (r1) != "undefined") {_RecordType("<243,245,10>",(r1)); Inst10++; } } catch(e) {}
r1.sticky;
try { if (Inst11 <= 1000 && typeof (r1.unicode) != "undefined") {_RecordType("<254,264,11>",(r1.unicode)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (r1) != "undefined") {_RecordType("<254,256,11>",(r1)); Inst12++; } } catch(e) {}
r1.unicode;
// Internal slot of prototype is not read.
try { if (Inst14 <= 1000 && typeof (r1) != "undefined") {_RecordType("<333,335,14>",(r1)); Inst14++; } } catch(e) {}
var r2 = {
  __proto__: r1
};
try { if (Inst13 <= 1000 && typeof (r2) != "undefined") {_RecordType("<313,315,13>",(r2)); Inst13++; } } catch(e) {}

(function () {
try { if (Inst15 <= 1000 && typeof (r2.source) != "undefined") {_RecordType("<357,366,18>",(r2.source)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (r2) != "undefined") {_RecordType("<357,359,18>",(r2)); Inst16++; } } catch(e) {}
  r2.source;
})();

try { if (Inst17 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<375,384,21>",(TypeError)); Inst17++; } } catch(e) {}
TypeError;

(function () {
try { if (Inst18 <= 1000 && typeof (r2.global) != "undefined") {_RecordType("<404,413,24>",(r2.global)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (r2) != "undefined") {_RecordType("<404,406,24>",(r2)); Inst19++; } } catch(e) {}
  r2.global;
})();

try { if (Inst20 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<422,431,27>",(TypeError)); Inst20++; } } catch(e) {}
TypeError;

(function () {
try { if (Inst21 <= 1000 && typeof (r2.ignoreCase) != "undefined") {_RecordType("<451,464,30>",(r2.ignoreCase)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (r2) != "undefined") {_RecordType("<451,453,30>",(r2)); Inst22++; } } catch(e) {}
  r2.ignoreCase;
})();

try { if (Inst23 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<473,482,33>",(TypeError)); Inst23++; } } catch(e) {}
TypeError;

(function () {
try { if (Inst24 <= 1000 && typeof (r2.multiline) != "undefined") {_RecordType("<502,514,36>",(r2.multiline)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (r2) != "undefined") {_RecordType("<502,504,36>",(r2)); Inst25++; } } catch(e) {}
  r2.multiline;
})();

try { if (Inst26 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<523,532,39>",(TypeError)); Inst26++; } } catch(e) {}
TypeError;

(function () {
try { if (Inst27 <= 1000 && typeof (r2.sticky) != "undefined") {_RecordType("<552,561,42>",(r2.sticky)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (r2) != "undefined") {_RecordType("<552,554,42>",(r2)); Inst28++; } } catch(e) {}
  r2.sticky;
})();

try { if (Inst29 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<570,579,45>",(TypeError)); Inst29++; } } catch(e) {}
TypeError;

(function () {
try { if (Inst30 <= 1000 && typeof (r2.unicode) != "undefined") {_RecordType("<599,609,48>",(r2.unicode)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (r2) != "undefined") {_RecordType("<599,601,48>",(r2)); Inst31++; } } catch(e) {}
  r2.unicode;
})();

try { if (Inst32 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<618,627,51>",(TypeError)); Inst32++; } } catch(e) {}
TypeError;
var r3 = /I/;
try { if (Inst33 <= 1000 && typeof (r3) != "undefined") {_RecordType("<633,635,52>",(r3)); Inst33++; } } catch(e) {}
var string = "iIiIi";
try { if (Inst34 <= 1000 && typeof (string) != "undefined") {_RecordType("<647,653,53>",(string)); Inst34++; } } catch(e) {}
var expected = "iXiIi";
try { if (Inst35 <= 1000 && typeof (expected) != "undefined") {_RecordType("<669,677,54>",(expected)); Inst35++; } } catch(e) {}
try { if (Inst36 <= 1000 && typeof (r3.global) != "undefined") {_RecordType("<689,698,55>",(r3.global)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (r3) != "undefined") {_RecordType("<689,691,55>",(r3)); Inst37++; } } catch(e) {}
r3.global;
try { if (Inst38 <= 1000 && typeof (r3.ignoreCase) != "undefined") {_RecordType("<700,713,56>",(r3.ignoreCase)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (r3) != "undefined") {_RecordType("<700,702,56>",(r3)); Inst39++; } } catch(e) {}
r3.ignoreCase;
"";
try { if (Inst40 <= 1000 && typeof (r3.flags) != "undefined") {_RecordType("<719,727,58>",(r3.flags)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (r3) != "undefined") {_RecordType("<719,721,58>",(r3)); Inst41++; } } catch(e) {}
r3.flags;
try { if (Inst42 <= 1000 && typeof (expected) != "undefined") {_RecordType("<729,737,59>",(expected)); Inst42++; } } catch(e) {}
expected;
try { if (Inst43 <= 1000 && typeof (string.replace) != "undefined") {_RecordType("<739,753,60>",(string.replace)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (string) != "undefined") {_RecordType("<739,745,60>",(string)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (r3) != "undefined") {_RecordType("<754,756,60>",(r3)); Inst45++; } } catch(e) {}
string.replace(r3, "X");
var get_count = 0;
try { if (Inst46 <= 1000 && typeof (get_count) != "undefined") {_RecordType("<768,777,61>",(get_count)); Inst46++; } } catch(e) {}
try { if (Inst47 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<783,804,62>",(Object.defineProperty)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (Object) != "undefined") {_RecordType("<783,789,62>",(Object)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (r3) != "undefined") {_RecordType("<805,807,62>",(r3)); Inst49++; } } catch(e) {}
Object.defineProperty(r3, "global", {
  get: function () {
try { if (Inst50 <= 1000 && typeof (get_count) != "undefined") {_RecordType("<846,855,64>",(get_count)); Inst50++; } } catch(e) {}
    get_count++;
    return true;
  }
});
try { if (Inst51 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<884,905,68>",(Object.defineProperty)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (Object) != "undefined") {_RecordType("<884,890,68>",(Object)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (r3) != "undefined") {_RecordType("<906,908,68>",(r3)); Inst53++; } } catch(e) {}
Object.defineProperty(r3, "ignoreCase", {
  get: function () {
try { if (Inst54 <= 1000 && typeof (get_count) != "undefined") {_RecordType("<951,960,70>",(get_count)); Inst54++; } } catch(e) {}
    get_count++;
    return true;
  }
});
try { if (Inst55 <= 1000 && typeof (r3.global) != "undefined") {_RecordType("<989,998,74>",(r3.global)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (r3) != "undefined") {_RecordType("<989,991,74>",(r3)); Inst56++; } } catch(e) {}
r3.global;
1;
try { if (Inst57 <= 1000 && typeof (get_count) != "undefined") {_RecordType("<1003,1012,76>",(get_count)); Inst57++; } } catch(e) {}
get_count;
try { if (Inst58 <= 1000 && typeof (r3.ignoreCase) != "undefined") {_RecordType("<1014,1027,77>",(r3.ignoreCase)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (r3) != "undefined") {_RecordType("<1014,1016,77>",(r3)); Inst59++; } } catch(e) {}
r3.ignoreCase;
2;
try { if (Inst60 <= 1000 && typeof (get_count) != "undefined") {_RecordType("<1032,1041,79>",(get_count)); Inst60++; } } catch(e) {}
get_count;
"gi";
try { if (Inst61 <= 1000 && typeof (r3.flags) != "undefined") {_RecordType("<1049,1057,81>",(r3.flags)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (r3) != "undefined") {_RecordType("<1049,1051,81>",(r3)); Inst62++; } } catch(e) {}
r3.flags;
4;
try { if (Inst63 <= 1000 && typeof (get_count) != "undefined") {_RecordType("<1062,1071,83>",(get_count)); Inst63++; } } catch(e) {}
get_count;

// Overridden flag getters affect string.replace
// TODO(adamk): Add more tests here once we've switched
// to use [[OriginalFlags]] in more cases.
// TODO(jgruber): This exact case actually causes an infinite loop in the spec
// (@@replace sees global = true while BuiltinExec sees global = false).
// Comment the test for now and remove / fix once this has been resolved on
// the spec side.
//assertEquals(expected, string.replace(r3, "X"));
//assertEquals(5, get_count);
try { if (Inst64 <= 1000 && typeof (testName) != "undefined") {_RecordType("<1558,1566,94>",(testName)); Inst64++; } } catch(e) {}
function testName(name) {
try { if (Inst65 <= 1000 && typeof (name) != "undefined") {_RecordType("<1567,1571,94>",(name)); Inst65++; } } catch(e) {}
  // Test for ES2017 RegExp web compatibility semantics
  // https://github.com/tc39/ecma262/pull/511
try { if (Inst66 <= 1000 && typeof (name) != "undefined") {_RecordType("<1679,1683,97>",(name)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<1708,1717,97>",(undefined)); Inst67++; } } catch(e) {}
  name === "source" ? "(?:)" : undefined;
try { if (Inst68 <= 1000 && typeof (RegExp.prototype[name]) != "undefined") {_RecordType("<1721,1743,98>",(RegExp.prototype[name])); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (RegExp.prototype) != "undefined") {_RecordType("<1721,1737,98>",(RegExp.prototype)); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<1721,1727,98>",(RegExp)); Inst70++; } } catch(e) {}
  RegExp.prototype[name];
try { if (Inst71 <= 1000 && typeof (name) != "undefined") {_RecordType("<1756,1760,99>",(name)); Inst71++; } } catch(e) {}
  "get " + name;
try { if (Inst72 <= 1000 && typeof (Object.getOwnPropertyDescriptor(RegExp.prototype, name).get.name) != "undefined") {_RecordType("<1764,1828,100>",(Object.getOwnPropertyDescriptor(RegExp.prototype, name).get.name)); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (Object.getOwnPropertyDescriptor(RegExp.prototype, name).get) != "undefined") {_RecordType("<1764,1823,100>",(Object.getOwnPropertyDescriptor(RegExp.prototype, name).get)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<1764,1795,100>",(Object.getOwnPropertyDescriptor)); Inst74++; } } catch(e) {}try { if (Inst75 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1764,1770,100>",(Object)); Inst75++; } } catch(e) {}try { if (Inst76 <= 1000 && typeof (RegExp.prototype) != "undefined") {_RecordType("<1796,1812,100>",(RegExp.prototype)); Inst76++; } } catch(e) {}try { if (Inst77 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<1796,1802,100>",(RegExp)); Inst77++; } } catch(e) {}try { if (Inst78 <= 1000 && typeof (name) != "undefined") {_RecordType("<1814,1818,100>",(name)); Inst78++; } } catch(e) {}
  Object.getOwnPropertyDescriptor(RegExp.prototype, name).get.name;
}

try { if (Inst79 <= 1000 && typeof (testName) != "undefined") {_RecordType("<1833,1841,103>",(testName)); Inst79++; } } catch(e) {}
testName("global");
try { if (Inst80 <= 1000 && typeof (testName) != "undefined") {_RecordType("<1853,1861,104>",(testName)); Inst80++; } } catch(e) {}
testName("ignoreCase");
try { if (Inst81 <= 1000 && typeof (testName) != "undefined") {_RecordType("<1877,1885,105>",(testName)); Inst81++; } } catch(e) {}
testName("multiline");
try { if (Inst82 <= 1000 && typeof (testName) != "undefined") {_RecordType("<1900,1908,106>",(testName)); Inst82++; } } catch(e) {}
testName("source");
try { if (Inst83 <= 1000 && typeof (testName) != "undefined") {_RecordType("<1920,1928,107>",(testName)); Inst83++; } } catch(e) {}
testName("sticky");
try { if (Inst84 <= 1000 && typeof (testName) != "undefined") {_RecordType("<1940,1948,108>",(testName)); Inst84++; } } catch(e) {}
testName("unicode");
RegExp.prototype.flags = 'setter should be undefined';
try { if (Inst85 <= 1000 && typeof (RegExp.prototype.flags) != "undefined") {_RecordType("<1961,1983,109>",(RegExp.prototype.flags)); Inst85++; } } catch(e) {}try { if (Inst86 <= 1000 && typeof (RegExp.prototype) != "undefined") {_RecordType("<1961,1977,109>",(RegExp.prototype)); Inst86++; } } catch(e) {}try { if (Inst87 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<1961,1967,109>",(RegExp)); Inst87++; } } catch(e) {}
'';
try { if (Inst88 <= 1000 && typeof (RegExp('').flags) != "undefined") {_RecordType("<2020,2036,111>",(RegExp('').flags)); Inst88++; } } catch(e) {}try { if (Inst89 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<2020,2026,111>",(RegExp)); Inst89++; } } catch(e) {}
RegExp('').flags;
'';
try { if (Inst90 <= 1000 && typeof (/./.flags) != "undefined") {_RecordType("<2042,2051,113>",(/./.flags)); Inst90++; } } catch(e) {}
/./.flags;
'gimuy';
try { if (Inst91 <= 1000 && typeof (RegExp('', 'yugmi').flags) != "undefined") {_RecordType("<2062,2087,115>",(RegExp('', 'yugmi').flags)); Inst91++; } } catch(e) {}try { if (Inst92 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<2062,2068,115>",(RegExp)); Inst92++; } } catch(e) {}
RegExp('', 'yugmi').flags;
'gimuy';
try { if (Inst93 <= 1000 && typeof (/foo/yumig.flags) != "undefined") {_RecordType("<2098,2114,117>",(/foo/yumig.flags)); Inst93++; } } catch(e) {}
/foo/yumig.flags;
try { if (Inst95 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<2133,2164,118>",(Object.getOwnPropertyDescriptor)); Inst95++; } } catch(e) {}try { if (Inst96 <= 1000 && typeof (Object) != "undefined") {_RecordType("<2133,2139,118>",(Object)); Inst96++; } } catch(e) {}try { if (Inst97 <= 1000 && typeof (RegExp.prototype) != "undefined") {_RecordType("<2165,2181,118>",(RegExp.prototype)); Inst97++; } } catch(e) {}try { if (Inst98 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<2165,2171,118>",(RegExp)); Inst98++; } } catch(e) {}
var descriptor = Object.getOwnPropertyDescriptor(RegExp.prototype, 'flags');
try { if (Inst94 <= 1000 && typeof (descriptor) != "undefined") {_RecordType("<2120,2130,118>",(descriptor)); Inst94++; } } catch(e) {}
try { if (Inst99 <= 1000 && typeof (descriptor.configurable) != "undefined") {_RecordType("<2193,2216,119>",(descriptor.configurable)); Inst99++; } } catch(e) {}try { if (Inst100 <= 1000 && typeof (descriptor) != "undefined") {_RecordType("<2193,2203,119>",(descriptor)); Inst100++; } } catch(e) {}
descriptor.configurable;
try { if (Inst101 <= 1000 && typeof (descriptor.enumerable) != "undefined") {_RecordType("<2218,2239,120>",(descriptor.enumerable)); Inst101++; } } catch(e) {}try { if (Inst102 <= 1000 && typeof (descriptor) != "undefined") {_RecordType("<2218,2228,120>",(descriptor)); Inst102++; } } catch(e) {}
descriptor.enumerable;
try { if (Inst103 <= 1000 && typeof (descriptor.get) != "undefined") {_RecordType("<2241,2255,121>",(descriptor.get)); Inst103++; } } catch(e) {}try { if (Inst104 <= 1000 && typeof (descriptor) != "undefined") {_RecordType("<2241,2251,121>",(descriptor)); Inst104++; } } catch(e) {}
descriptor.get;
try { if (Inst105 <= 1000 && typeof (Function) != "undefined") {_RecordType("<2257,2265,122>",(Function)); Inst105++; } } catch(e) {}
Function;
try { if (Inst106 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<2267,2276,123>",(undefined)); Inst106++; } } catch(e) {}
undefined;
try { if (Inst107 <= 1000 && typeof (descriptor.set) != "undefined") {_RecordType("<2278,2292,124>",(descriptor.set)); Inst107++; } } catch(e) {}try { if (Inst108 <= 1000 && typeof (descriptor) != "undefined") {_RecordType("<2278,2288,124>",(descriptor)); Inst108++; } } catch(e) {}
descriptor.set;

try { if (Inst109 <= 1000 && typeof (testGenericFlags) != "undefined") {_RecordType("<2304,2320,126>",(testGenericFlags)); Inst109++; } } catch(e) {}
function testGenericFlags(object) {
try { if (Inst110 <= 1000 && typeof (object) != "undefined") {_RecordType("<2321,2327,126>",(object)); Inst110++; } } catch(e) {}
try { if (Inst111 <= 1000 && typeof (descriptor.get.call) != "undefined") {_RecordType("<2340,2359,127>",(descriptor.get.call)); Inst111++; } } catch(e) {}try { if (Inst112 <= 1000 && typeof (descriptor.get) != "undefined") {_RecordType("<2340,2354,127>",(descriptor.get)); Inst112++; } } catch(e) {}try { if (Inst113 <= 1000 && typeof (descriptor) != "undefined") {_RecordType("<2340,2350,127>",(descriptor)); Inst113++; } } catch(e) {}try { if (Inst114 <= 1000 && typeof (object) != "undefined") {_RecordType("<2360,2366,127>",(object)); Inst114++; } } catch(e) {}
  return descriptor.get.call(object);
}

'';
try { if (Inst115 <= 1000 && typeof (testGenericFlags) != "undefined") {_RecordType("<2376,2392,131>",(testGenericFlags)); Inst115++; } } catch(e) {}
testGenericFlags({});
'i';
try { if (Inst116 <= 1000 && typeof (testGenericFlags) != "undefined") {_RecordType("<2403,2419,133>",(testGenericFlags)); Inst116++; } } catch(e) {}
testGenericFlags({
  ignoreCase: true
});
'uy';
try { if (Inst117 <= 1000 && typeof (testGenericFlags) != "undefined") {_RecordType("<2451,2467,137>",(testGenericFlags)); Inst117++; } } catch(e) {}
testGenericFlags({
  global: 0,
  sticky: 1,
  unicode: 1
});
'm';
try { if (Inst118 <= 1000 && typeof (testGenericFlags) != "undefined") {_RecordType("<2518,2534,143>",(testGenericFlags)); Inst118++; } } catch(e) {}
testGenericFlags({
  __proto__: {
    multiline: true
  }
});

(function () {
try { if (Inst119 <= 1000 && typeof (testGenericFlags) != "undefined") {_RecordType("<2598,2614,150>",(testGenericFlags)); Inst119++; } } catch(e) {}
  testGenericFlags();
})();

try { if (Inst120 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<2625,2634,153>",(TypeError)); Inst120++; } } catch(e) {}
TypeError;

(function () {
try { if (Inst121 <= 1000 && typeof (testGenericFlags) != "undefined") {_RecordType("<2654,2670,156>",(testGenericFlags)); Inst121++; } } catch(e) {}try { if (Inst122 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<2671,2680,156>",(undefined)); Inst122++; } } catch(e) {}
  testGenericFlags(undefined);
})();

try { if (Inst123 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<2690,2699,159>",(TypeError)); Inst123++; } } catch(e) {}
TypeError;

(function () {
try { if (Inst124 <= 1000 && typeof (testGenericFlags) != "undefined") {_RecordType("<2719,2735,162>",(testGenericFlags)); Inst124++; } } catch(e) {}
  testGenericFlags(null);
})();

try { if (Inst125 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<2750,2759,165>",(TypeError)); Inst125++; } } catch(e) {}
TypeError;

(function () {
try { if (Inst126 <= 1000 && typeof (testGenericFlags) != "undefined") {_RecordType("<2779,2795,168>",(testGenericFlags)); Inst126++; } } catch(e) {}
  testGenericFlags(true);
})();

try { if (Inst127 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<2810,2819,171>",(TypeError)); Inst127++; } } catch(e) {}
TypeError;

(function () {
try { if (Inst128 <= 1000 && typeof (testGenericFlags) != "undefined") {_RecordType("<2839,2855,174>",(testGenericFlags)); Inst128++; } } catch(e) {}
  testGenericFlags(false);
})();

try { if (Inst129 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<2871,2880,177>",(TypeError)); Inst129++; } } catch(e) {}
TypeError;

(function () {
try { if (Inst130 <= 1000 && typeof (testGenericFlags) != "undefined") {_RecordType("<2900,2916,180>",(testGenericFlags)); Inst130++; } } catch(e) {}
  testGenericFlags('');
})();

try { if (Inst131 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<2929,2938,183>",(TypeError)); Inst131++; } } catch(e) {}
TypeError;

(function () {
try { if (Inst132 <= 1000 && typeof (testGenericFlags) != "undefined") {_RecordType("<2958,2974,186>",(testGenericFlags)); Inst132++; } } catch(e) {}
  testGenericFlags(42);
})();

try { if (Inst133 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<2987,2996,189>",(TypeError)); Inst133++; } } catch(e) {}
TypeError;
var counter = 0;
try { if (Inst134 <= 1000 && typeof (counter) != "undefined") {_RecordType("<3002,3009,190>",(counter)); Inst134++; } } catch(e) {}
var map = {};
try { if (Inst135 <= 1000 && typeof (map) != "undefined") {_RecordType("<3019,3022,191>",(map)); Inst135++; } } catch(e) {}
try { if (Inst137 <= 1000 && typeof (global) != "undefined") {_RecordType("<3050,3056,193>",(global)); Inst137++; } } catch(e) {}try { if (Inst141 <= 1000 && typeof (ignoreCase) != "undefined") {_RecordType("<3096,3106,197>",(ignoreCase)); Inst141++; } } catch(e) {}try { if (Inst145 <= 1000 && typeof (multiline) != "undefined") {_RecordType("<3146,3155,201>",(multiline)); Inst145++; } } catch(e) {}try { if (Inst149 <= 1000 && typeof (unicode) != "undefined") {_RecordType("<3195,3202,205>",(unicode)); Inst149++; } } catch(e) {}try { if (Inst153 <= 1000 && typeof (sticky) != "undefined") {_RecordType("<3242,3248,209>",(sticky)); Inst153++; } } catch(e) {}
var object = {
  get global() {
try { if (Inst140 <= 1000 && typeof (counter) != "undefined") {_RecordType("<3073,3080,194>",(counter)); Inst140++; } } catch(e) {}
    map.g = counter++;
try { if (Inst138 <= 1000 && typeof (map.g) != "undefined") {_RecordType("<3065,3070,194>",(map.g)); Inst138++; } } catch(e) {}try { if (Inst139 <= 1000 && typeof (map) != "undefined") {_RecordType("<3065,3068,194>",(map)); Inst139++; } } catch(e) {}
  },

  get ignoreCase() {
try { if (Inst144 <= 1000 && typeof (counter) != "undefined") {_RecordType("<3123,3130,198>",(counter)); Inst144++; } } catch(e) {}
    map.i = counter++;
try { if (Inst142 <= 1000 && typeof (map.i) != "undefined") {_RecordType("<3115,3120,198>",(map.i)); Inst142++; } } catch(e) {}try { if (Inst143 <= 1000 && typeof (map) != "undefined") {_RecordType("<3115,3118,198>",(map)); Inst143++; } } catch(e) {}
  },

  get multiline() {
try { if (Inst148 <= 1000 && typeof (counter) != "undefined") {_RecordType("<3172,3179,202>",(counter)); Inst148++; } } catch(e) {}
    map.m = counter++;
try { if (Inst146 <= 1000 && typeof (map.m) != "undefined") {_RecordType("<3164,3169,202>",(map.m)); Inst146++; } } catch(e) {}try { if (Inst147 <= 1000 && typeof (map) != "undefined") {_RecordType("<3164,3167,202>",(map)); Inst147++; } } catch(e) {}
  },

  get unicode() {
try { if (Inst152 <= 1000 && typeof (counter) != "undefined") {_RecordType("<3219,3226,206>",(counter)); Inst152++; } } catch(e) {}
    map.u = counter++;
try { if (Inst150 <= 1000 && typeof (map.u) != "undefined") {_RecordType("<3211,3216,206>",(map.u)); Inst150++; } } catch(e) {}try { if (Inst151 <= 1000 && typeof (map) != "undefined") {_RecordType("<3211,3214,206>",(map)); Inst151++; } } catch(e) {}
  },

  get sticky() {
try { if (Inst156 <= 1000 && typeof (counter) != "undefined") {_RecordType("<3265,3272,210>",(counter)); Inst156++; } } catch(e) {}
    map.y = counter++;
try { if (Inst154 <= 1000 && typeof (map.y) != "undefined") {_RecordType("<3257,3262,210>",(map.y)); Inst154++; } } catch(e) {}try { if (Inst155 <= 1000 && typeof (map) != "undefined") {_RecordType("<3257,3260,210>",(map)); Inst155++; } } catch(e) {}
  }

};
try { if (Inst136 <= 1000 && typeof (object) != "undefined") {_RecordType("<3033,3039,192>",(object)); Inst136++; } } catch(e) {}
try { if (Inst157 <= 1000 && typeof (testGenericFlags) != "undefined") {_RecordType("<3284,3300,214>",(testGenericFlags)); Inst157++; } } catch(e) {}try { if (Inst158 <= 1000 && typeof (object) != "undefined") {_RecordType("<3301,3307,214>",(object)); Inst158++; } } catch(e) {}
testGenericFlags(object);
({
  g: 0,
  i: 1,
  m: 2,
  u: 3,
  y: 4
});
try { if (Inst159 <= 1000 && typeof (map) != "undefined") {_RecordType("<3356,3359,222>",(map)); Inst159++; } } catch(e) {}
map;

