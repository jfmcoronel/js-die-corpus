var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2014 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
'use strict'; // Top-level code

let s = 0;
try { if (Inst0 <= 1000 && typeof (s) != "undefined") {_RecordType("<204,205,6>",(s)); Inst0++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<221,230,7>",(undefined)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<232,241,7>",(undefined)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<243,252,7>",(undefined)); Inst4++; } } catch(e) {}
let ff = [undefined, undefined, undefined];
try { if (Inst1 <= 1000 && typeof (ff) != "undefined") {_RecordType("<215,217,7>",(ff)); Inst1++; } } catch(e) {}

for (const x of [1, 2, 3]) {
try { if (Inst5 <= 1000 && typeof (x) != "undefined") {_RecordType("<267,268,9>",(x)); Inst5++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (x) != "undefined") {_RecordType("<292,293,10>",(x)); Inst7++; } } catch(e) {}
  s += x;
try { if (Inst6 <= 1000 && typeof (s) != "undefined") {_RecordType("<287,288,10>",(s)); Inst6++; } } catch(e) {}

  ff[x - 1] = function () {
try { if (Inst11 <= 1000 && typeof (x) != "undefined") {_RecordType("<335,336,13>",(x)); Inst11++; } } catch(e) {}
    return x;
  };
try { if (Inst8 <= 1000 && typeof (ff[x - 1]) != "undefined") {_RecordType("<298,307,12>",(ff[x - 1])); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (ff) != "undefined") {_RecordType("<298,300,12>",(ff)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (x) != "undefined") {_RecordType("<301,302,12>",(x)); Inst10++; } } catch(e) {}
}

6;
try { if (Inst12 <= 1000 && typeof (s) != "undefined") {_RecordType("<349,350,18>",(s)); Inst12++; } } catch(e) {}
s;
1;
try { if (Inst13 <= 1000 && typeof (ff[0]) != "undefined") {_RecordType("<355,360,20>",(ff[0])); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (ff) != "undefined") {_RecordType("<355,357,20>",(ff)); Inst14++; } } catch(e) {}
ff[0]();
2;
try { if (Inst15 <= 1000 && typeof (ff[1]) != "undefined") {_RecordType("<367,372,22>",(ff[1])); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (ff) != "undefined") {_RecordType("<367,369,22>",(ff)); Inst16++; } } catch(e) {}
ff[1]();
3;
try { if (Inst17 <= 1000 && typeof (ff[2]) != "undefined") {_RecordType("<379,384,24>",(ff[2])); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (ff) != "undefined") {_RecordType("<379,381,24>",(ff)); Inst18++; } } catch(e) {}
ff[2]();
let x = 1;
try { if (Inst19 <= 1000 && typeof (x) != "undefined") {_RecordType("<392,393,25>",(x)); Inst19++; } } catch(e) {}
s = 0;
try { if (Inst20 <= 1000 && typeof (s) != "undefined") {_RecordType("<399,400,26>",(s)); Inst20++; } } catch(e) {}

for (const z of [x, x + 1, x + 2]) {
try { if (Inst21 <= 1000 && typeof (z) != "undefined") {_RecordType("<418,419,28>",(z)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (x) != "undefined") {_RecordType("<424,425,28>",(x)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (x) != "undefined") {_RecordType("<427,428,28>",(x)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (x) != "undefined") {_RecordType("<434,435,28>",(x)); Inst24++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (z) != "undefined") {_RecordType("<451,452,29>",(z)); Inst26++; } } catch(e) {}
  s += z;
try { if (Inst25 <= 1000 && typeof (s) != "undefined") {_RecordType("<446,447,29>",(s)); Inst25++; } } catch(e) {}
}

6;
try { if (Inst27 <= 1000 && typeof (s) != "undefined") {_RecordType("<460,461,33>",(s)); Inst27++; } } catch(e) {}
s;
s = 0;
try { if (Inst28 <= 1000 && typeof (s) != "undefined") {_RecordType("<463,464,34>",(s)); Inst28++; } } catch(e) {}
var q = 1;
try { if (Inst29 <= 1000 && typeof (q) != "undefined") {_RecordType("<474,475,35>",(q)); Inst29++; } } catch(e) {}

for (const x of [q, q + 1, q + 2]) {
try { if (Inst30 <= 1000 && typeof (x) != "undefined") {_RecordType("<493,494,37>",(x)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (q) != "undefined") {_RecordType("<499,500,37>",(q)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (q) != "undefined") {_RecordType("<502,503,37>",(q)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (q) != "undefined") {_RecordType("<509,510,37>",(q)); Inst33++; } } catch(e) {}
try { if (Inst35 <= 1000 && typeof (x) != "undefined") {_RecordType("<526,527,38>",(x)); Inst35++; } } catch(e) {}
  s += x;
try { if (Inst34 <= 1000 && typeof (s) != "undefined") {_RecordType("<521,522,38>",(s)); Inst34++; } } catch(e) {}
}

6;
try { if (Inst36 <= 1000 && typeof (s) != "undefined") {_RecordType("<535,536,42>",(s)); Inst36++; } } catch(e) {}
s;
let z = 1;
try { if (Inst37 <= 1000 && typeof (z) != "undefined") {_RecordType("<542,543,43>",(z)); Inst37++; } } catch(e) {}
s = 0;
try { if (Inst38 <= 1000 && typeof (s) != "undefined") {_RecordType("<549,550,44>",(s)); Inst38++; } } catch(e) {}

for (const x = 1; z < 2; z++) {
try { if (Inst39 <= 1000 && typeof (x) != "undefined") {_RecordType("<568,569,46>",(x)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (z) != "undefined") {_RecordType("<575,576,46>",(z)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (z) != "undefined") {_RecordType("<582,583,46>",(z)); Inst41++; } } catch(e) {}
try { if (Inst43 <= 1000 && typeof (x) != "undefined") {_RecordType("<596,597,47>",(x)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (z) != "undefined") {_RecordType("<600,601,47>",(z)); Inst44++; } } catch(e) {}
  s += x + z;
try { if (Inst42 <= 1000 && typeof (s) != "undefined") {_RecordType("<591,592,47>",(s)); Inst42++; } } catch(e) {}
}

2;
try { if (Inst45 <= 1000 && typeof (s) != "undefined") {_RecordType("<609,610,51>",(s)); Inst45++; } } catch(e) {}
s;
s = "";
try { if (Inst46 <= 1000 && typeof (s) != "undefined") {_RecordType("<612,613,52>",(s)); Inst46++; } } catch(e) {}

for (const x in [1, 2, 3]) {
try { if (Inst47 <= 1000 && typeof (x) != "undefined") {_RecordType("<632,633,54>",(x)); Inst47++; } } catch(e) {}
try { if (Inst49 <= 1000 && typeof (x) != "undefined") {_RecordType("<657,658,55>",(x)); Inst49++; } } catch(e) {}
  s += x;
try { if (Inst48 <= 1000 && typeof (s) != "undefined") {_RecordType("<652,653,55>",(s)); Inst48++; } } catch(e) {}
}

"012";
try { if (Inst50 <= 1000 && typeof (s) != "undefined") {_RecordType("<670,671,59>",(s)); Inst50++; } } catch(e) {}
s;
"'use strict'; for (const x in [1,2,3]) { x++ }";
try { if (Inst51 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<723,732,61>",(TypeError)); Inst51++; } } catch(e) {}
TypeError;

// Function scope
(function () {
  let s = 0;
try { if (Inst52 <= 1000 && typeof (s) != "undefined") {_RecordType("<774,775,65>",(s)); Inst52++; } } catch(e) {}

  for (const x of [1, 2, 3]) {
try { if (Inst53 <= 1000 && typeof (x) != "undefined") {_RecordType("<795,796,67>",(x)); Inst53++; } } catch(e) {}
try { if (Inst55 <= 1000 && typeof (x) != "undefined") {_RecordType("<822,823,68>",(x)); Inst55++; } } catch(e) {}
    s += x;
try { if (Inst54 <= 1000 && typeof (s) != "undefined") {_RecordType("<817,818,68>",(s)); Inst54++; } } catch(e) {}
  }

  6;
try { if (Inst56 <= 1000 && typeof (s) != "undefined") {_RecordType("<837,838,72>",(s)); Inst56++; } } catch(e) {}
  s;
  let x = 1;
try { if (Inst57 <= 1000 && typeof (x) != "undefined") {_RecordType("<846,847,73>",(x)); Inst57++; } } catch(e) {}
  s = 0;
try { if (Inst58 <= 1000 && typeof (s) != "undefined") {_RecordType("<855,856,74>",(s)); Inst58++; } } catch(e) {}

  for (const q of [x, x + 1, x + 2]) {
try { if (Inst59 <= 1000 && typeof (q) != "undefined") {_RecordType("<876,877,76>",(q)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (x) != "undefined") {_RecordType("<882,883,76>",(x)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (x) != "undefined") {_RecordType("<885,886,76>",(x)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (x) != "undefined") {_RecordType("<892,893,76>",(x)); Inst62++; } } catch(e) {}
try { if (Inst64 <= 1000 && typeof (q) != "undefined") {_RecordType("<911,912,77>",(q)); Inst64++; } } catch(e) {}
    s += q;
try { if (Inst63 <= 1000 && typeof (s) != "undefined") {_RecordType("<906,907,77>",(s)); Inst63++; } } catch(e) {}
  }

  6;
try { if (Inst65 <= 1000 && typeof (s) != "undefined") {_RecordType("<926,927,81>",(s)); Inst65++; } } catch(e) {}
  s;
  s = 0;
try { if (Inst66 <= 1000 && typeof (s) != "undefined") {_RecordType("<931,932,82>",(s)); Inst66++; } } catch(e) {}
  var q = 1;
try { if (Inst67 <= 1000 && typeof (q) != "undefined") {_RecordType("<944,945,83>",(q)); Inst67++; } } catch(e) {}

  for (const x of [q, q + 1, q + 2]) {
try { if (Inst68 <= 1000 && typeof (x) != "undefined") {_RecordType("<965,966,85>",(x)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (q) != "undefined") {_RecordType("<971,972,85>",(q)); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (q) != "undefined") {_RecordType("<974,975,85>",(q)); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (q) != "undefined") {_RecordType("<981,982,85>",(q)); Inst71++; } } catch(e) {}
try { if (Inst73 <= 1000 && typeof (x) != "undefined") {_RecordType("<1000,1001,86>",(x)); Inst73++; } } catch(e) {}
    s += x;
try { if (Inst72 <= 1000 && typeof (s) != "undefined") {_RecordType("<995,996,86>",(s)); Inst72++; } } catch(e) {}
  }

  6;
try { if (Inst74 <= 1000 && typeof (s) != "undefined") {_RecordType("<1015,1016,90>",(s)); Inst74++; } } catch(e) {}
  s;
  s = "";
try { if (Inst75 <= 1000 && typeof (s) != "undefined") {_RecordType("<1020,1021,91>",(s)); Inst75++; } } catch(e) {}

  for (const x in [1, 2, 3]) {
try { if (Inst76 <= 1000 && typeof (x) != "undefined") {_RecordType("<1042,1043,93>",(x)); Inst76++; } } catch(e) {}
try { if (Inst78 <= 1000 && typeof (x) != "undefined") {_RecordType("<1069,1070,94>",(x)); Inst78++; } } catch(e) {}
    s += x;
try { if (Inst77 <= 1000 && typeof (s) != "undefined") {_RecordType("<1064,1065,94>",(s)); Inst77++; } } catch(e) {}
  }

  "012";
try { if (Inst79 <= 1000 && typeof (s) != "undefined") {_RecordType("<1088,1089,98>",(s)); Inst79++; } } catch(e) {}
  s;
})();

