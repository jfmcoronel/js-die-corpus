var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2016 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
try { if (Inst1 <= 1000 && typeof (Array) != "undefined") {_RecordType("<183,188,4>",(Array)); Inst1++; } } catch(e) {}
let array = new Array(0xFFFFFFFF);
try { if (Inst0 <= 1000 && typeof (array) != "undefined") {_RecordType("<171,176,4>",(array)); Inst0++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (array.keys) != "undefined") {_RecordType("<211,221,5>",(array.keys)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (array) != "undefined") {_RecordType("<211,216,5>",(array)); Inst4++; } } catch(e) {}
let it = array.keys();
try { if (Inst2 <= 1000 && typeof (it) != "undefined") {_RecordType("<206,208,5>",(it)); Inst2++; } } catch(e) {}
({
  value: 0,
  done: false
});
try { if (Inst5 <= 1000 && typeof (it.next) != "undefined") {_RecordType("<258,265,10>",(it.next)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (it) != "undefined") {_RecordType("<258,260,10>",(it)); Inst6++; } } catch(e) {}
it.next();
try { if (Inst8 <= 1000 && typeof (array.entries) != "undefined") {_RecordType("<274,287,11>",(array.entries)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (array) != "undefined") {_RecordType("<274,279,11>",(array)); Inst9++; } } catch(e) {}
it = array.entries();
try { if (Inst7 <= 1000 && typeof (it) != "undefined") {_RecordType("<269,271,11>",(it)); Inst7++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<307,316,13>",(undefined)); Inst10++; } } catch(e) {}
({
  value: [0, undefined],
  done: false
});
try { if (Inst11 <= 1000 && typeof (it.next) != "undefined") {_RecordType("<337,344,16>",(it.next)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (it) != "undefined") {_RecordType("<337,339,16>",(it)); Inst12++; } } catch(e) {}
it.next();
try { if (Inst14 <= 1000 && typeof (array[Symbol.iterator]) != "undefined") {_RecordType("<353,375,17>",(array[Symbol.iterator])); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (array) != "undefined") {_RecordType("<353,358,17>",(array)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<359,374,17>",(Symbol.iterator)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<359,365,17>",(Symbol)); Inst17++; } } catch(e) {}
it = array[Symbol.iterator]();
try { if (Inst13 <= 1000 && typeof (it) != "undefined") {_RecordType("<348,350,17>",(it)); Inst13++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<391,400,19>",(undefined)); Inst18++; } } catch(e) {}
({
  value: undefined,
  done: false
});
try { if (Inst19 <= 1000 && typeof (it.next) != "undefined") {_RecordType("<420,427,22>",(it.next)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (it) != "undefined") {_RecordType("<420,422,22>",(it)); Inst20++; } } catch(e) {}
it.next();

