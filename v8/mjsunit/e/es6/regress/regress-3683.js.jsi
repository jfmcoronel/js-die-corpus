var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2014 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
"use strict"; // Simplest case

var count = 0;
try { if (Inst0 <= 1000 && typeof (count) != "undefined") {_RecordType("<203,208,6>",(count)); Inst0++; } } catch(e) {}

for (let x = 0; x < 10;) {
try { if (Inst1 <= 1000 && typeof (x) != "undefined") {_RecordType("<224,225,8>",(x)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (x) != "undefined") {_RecordType("<231,232,8>",(x)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (x) != "undefined") {_RecordType("<244,245,9>",(x)); Inst3++; } } catch(e) {}
  x++;
try { if (Inst4 <= 1000 && typeof (count) != "undefined") {_RecordType("<251,256,10>",(count)); Inst4++; } } catch(e) {}
  count++;
  continue;
}

10;
try { if (Inst5 <= 1000 && typeof (count) != "undefined") {_RecordType("<279,284,15>",(count)); Inst5++; } } catch(e) {}
count;
// Labeled
count = 0;
try { if (Inst6 <= 1000 && typeof (count) != "undefined") {_RecordType("<297,302,17>",(count)); Inst6++; } } catch(e) {}

try { if (Inst7 <= 1000 && typeof (label) != "undefined") {_RecordType("<309,314,19>",(label)); Inst7++; } } catch(e) {}
label: for (let x = 0; x < 10;) {
try { if (Inst8 <= 1000 && typeof (x) != "undefined") {_RecordType("<325,326,19>",(x)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (x) != "undefined") {_RecordType("<332,333,19>",(x)); Inst9++; } } catch(e) {}
  while (true) {
try { if (Inst10 <= 1000 && typeof (x) != "undefined") {_RecordType("<364,365,21>",(x)); Inst10++; } } catch(e) {}
    x++;
try { if (Inst11 <= 1000 && typeof (count) != "undefined") {_RecordType("<373,378,22>",(count)); Inst11++; } } catch(e) {}
    count++;
try { if (Inst12 <= 1000 && typeof (label) != "undefined") {_RecordType("<395,400,23>",(label)); Inst12++; } } catch(e) {}
    continue label;
  }
}

10;
try { if (Inst13 <= 1000 && typeof (count) != "undefined") {_RecordType("<413,418,28>",(count)); Inst13++; } } catch(e) {}
count;
// Simple and labeled
count = 0;
try { if (Inst14 <= 1000 && typeof (count) != "undefined") {_RecordType("<442,447,30>",(count)); Inst14++; } } catch(e) {}

try { if (Inst15 <= 1000 && typeof (label) != "undefined") {_RecordType("<454,459,32>",(label)); Inst15++; } } catch(e) {}
label: for (let x = 0; x < 10;) {
try { if (Inst16 <= 1000 && typeof (x) != "undefined") {_RecordType("<470,471,32>",(x)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (x) != "undefined") {_RecordType("<477,478,32>",(x)); Inst17++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (x) != "undefined") {_RecordType("<490,491,33>",(x)); Inst18++; } } catch(e) {}
  x++;
try { if (Inst19 <= 1000 && typeof (count) != "undefined") {_RecordType("<497,502,34>",(count)); Inst19++; } } catch(e) {}
  count++;
try { if (Inst20 <= 1000 && typeof (label) != "undefined") {_RecordType("<517,522,35>",(label)); Inst20++; } } catch(e) {}
  continue label;
}

10;
try { if (Inst21 <= 1000 && typeof (count) != "undefined") {_RecordType("<531,536,39>",(count)); Inst21++; } } catch(e) {}
count;
// Shadowing loop variable in same scope as continue
count = 0;
try { if (Inst22 <= 1000 && typeof (count) != "undefined") {_RecordType("<591,596,41>",(count)); Inst22++; } } catch(e) {}

for (let x = 0; x < 10;) {
try { if (Inst23 <= 1000 && typeof (x) != "undefined") {_RecordType("<612,613,43>",(x)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (x) != "undefined") {_RecordType("<619,620,43>",(x)); Inst24++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (x) != "undefined") {_RecordType("<632,633,44>",(x)); Inst25++; } } catch(e) {}
  x++;
try { if (Inst26 <= 1000 && typeof (count) != "undefined") {_RecordType("<639,644,45>",(count)); Inst26++; } } catch(e) {}
  count++;
  {
    let x = "hello";
try { if (Inst27 <= 1000 && typeof (x) != "undefined") {_RecordType("<660,661,47>",(x)); Inst27++; } } catch(e) {}
    continue;
  }
}

10;
try { if (Inst28 <= 1000 && typeof (count) != "undefined") {_RecordType("<698,703,53>",(count)); Inst28++; } } catch(e) {}
count;
// Nested let-bound for loops, inner continue
count = 0;
try { if (Inst29 <= 1000 && typeof (count) != "undefined") {_RecordType("<751,756,55>",(count)); Inst29++; } } catch(e) {}

for (let x = 0; x < 10;) {
try { if (Inst30 <= 1000 && typeof (x) != "undefined") {_RecordType("<772,773,57>",(x)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (x) != "undefined") {_RecordType("<779,780,57>",(x)); Inst31++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (x) != "undefined") {_RecordType("<792,793,58>",(x)); Inst32++; } } catch(e) {}
  x++;

  for (let y = 0; y < 2;) {
try { if (Inst33 <= 1000 && typeof (y) != "undefined") {_RecordType("<809,810,60>",(y)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (y) != "undefined") {_RecordType("<816,817,60>",(y)); Inst34++; } } catch(e) {}
try { if (Inst35 <= 1000 && typeof (y) != "undefined") {_RecordType("<830,831,61>",(y)); Inst35++; } } catch(e) {}
    y++;
try { if (Inst36 <= 1000 && typeof (count) != "undefined") {_RecordType("<839,844,62>",(count)); Inst36++; } } catch(e) {}
    count++;
    continue;
  }
}

20;
try { if (Inst37 <= 1000 && typeof (count) != "undefined") {_RecordType("<873,878,68>",(count)); Inst37++; } } catch(e) {}
count;
// Nested let-bound for loops, outer continue
count = 0;
try { if (Inst38 <= 1000 && typeof (count) != "undefined") {_RecordType("<926,931,70>",(count)); Inst38++; } } catch(e) {}

for (let x = 0; x < 10;) {
try { if (Inst39 <= 1000 && typeof (x) != "undefined") {_RecordType("<947,948,72>",(x)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (x) != "undefined") {_RecordType("<954,955,72>",(x)); Inst40++; } } catch(e) {}
try { if (Inst41 <= 1000 && typeof (x) != "undefined") {_RecordType("<967,968,73>",(x)); Inst41++; } } catch(e) {}
  x++;

  for (let y = 0; y < 2;) {
try { if (Inst42 <= 1000 && typeof (y) != "undefined") {_RecordType("<984,985,75>",(y)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (y) != "undefined") {_RecordType("<991,992,75>",(y)); Inst43++; } } catch(e) {}
try { if (Inst44 <= 1000 && typeof (y) != "undefined") {_RecordType("<1005,1006,76>",(y)); Inst44++; } } catch(e) {}
    y++;
try { if (Inst45 <= 1000 && typeof (count) != "undefined") {_RecordType("<1014,1019,77>",(count)); Inst45++; } } catch(e) {}
    count++;
  }

  continue;
}

20;
try { if (Inst46 <= 1000 && typeof (count) != "undefined") {_RecordType("<1047,1052,84>",(count)); Inst46++; } } catch(e) {}
count;
// Nested let-bound for loops, labeled continue
count = 0;
try { if (Inst47 <= 1000 && typeof (count) != "undefined") {_RecordType("<1102,1107,86>",(count)); Inst47++; } } catch(e) {}

try { if (Inst48 <= 1000 && typeof (outer) != "undefined") {_RecordType("<1114,1119,88>",(outer)); Inst48++; } } catch(e) {}
outer: for (let x = 0; x < 10;) {
try { if (Inst49 <= 1000 && typeof (x) != "undefined") {_RecordType("<1130,1131,88>",(x)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (x) != "undefined") {_RecordType("<1137,1138,88>",(x)); Inst50++; } } catch(e) {}
try { if (Inst51 <= 1000 && typeof (x) != "undefined") {_RecordType("<1150,1151,89>",(x)); Inst51++; } } catch(e) {}
  x++;

  for (let y = 0; y < 2;) {
try { if (Inst52 <= 1000 && typeof (y) != "undefined") {_RecordType("<1167,1168,91>",(y)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (y) != "undefined") {_RecordType("<1174,1175,91>",(y)); Inst53++; } } catch(e) {}
try { if (Inst54 <= 1000 && typeof (y) != "undefined") {_RecordType("<1188,1189,92>",(y)); Inst54++; } } catch(e) {}
    y++;
try { if (Inst55 <= 1000 && typeof (count) != "undefined") {_RecordType("<1197,1202,93>",(count)); Inst55++; } } catch(e) {}
    count++;

try { if (Inst56 <= 1000 && typeof (y) != "undefined") {_RecordType("<1215,1216,95>",(y)); Inst56++; } } catch(e) {}
    if (y == 2) {
try { if (Inst57 <= 1000 && typeof (outer) != "undefined") {_RecordType("<1240,1245,96>",(outer)); Inst57++; } } catch(e) {}
      continue outer;
    }
  }
}

20;
try { if (Inst58 <= 1000 && typeof (count) != "undefined") {_RecordType("<1264,1269,102>",(count)); Inst58++; } } catch(e) {}
count;

