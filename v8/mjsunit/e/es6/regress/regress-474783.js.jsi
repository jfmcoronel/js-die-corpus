var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2015 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
"use strict";

class Base {}
try { if (Inst0 <= 1000 && typeof (Base) != "undefined") {_RecordType("<188,192,6>",(Base)); Inst0++; } } catch(e) {}

try { if (Inst7 <= 1000 && typeof (Base) != "undefined") {_RecordType("<220,224,8>",(Base)); Inst7++; } } catch(e) {}
class Subclass extends Base {
  constructor(a, b, c) {
try { if (Inst2 <= 1000 && typeof (a) != "undefined") {_RecordType("<241,242,9>",(a)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (b) != "undefined") {_RecordType("<244,245,9>",(b)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (c) != "undefined") {_RecordType("<247,248,9>",(c)); Inst4++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (arguments[1]) != "undefined") {_RecordType("<256,268,10>",(arguments[1])); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<256,265,10>",(arguments)); Inst6++; } } catch(e) {}
    arguments[1];
  }

}
try { if (Inst1 <= 1000 && typeof (Subclass) != "undefined") {_RecordType("<203,211,8>",(Subclass)); Inst1++; } } catch(e) {}

(function () {
try { if (Inst8 <= 1000 && typeof (Subclass) != "undefined") {_RecordType("<295,303,16>",(Subclass)); Inst8++; } } catch(e) {}
  Subclass();
})();

try { if (Inst9 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<314,323,19>",(TypeError)); Inst9++; } } catch(e) {}
TypeError;

(function () {
try { if (Inst10 <= 1000 && typeof (Subclass) != "undefined") {_RecordType("<343,351,22>",(Subclass)); Inst10++; } } catch(e) {}
  Subclass(1);
})();

try { if (Inst11 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<363,372,25>",(TypeError)); Inst11++; } } catch(e) {}
TypeError;

(function () {
try { if (Inst12 <= 1000 && typeof (Subclass) != "undefined") {_RecordType("<392,400,28>",(Subclass)); Inst12++; } } catch(e) {}
  Subclass(1, 2);
})();

try { if (Inst13 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<415,424,31>",(TypeError)); Inst13++; } } catch(e) {}
TypeError;

(function () {
try { if (Inst14 <= 1000 && typeof (Subclass) != "undefined") {_RecordType("<444,452,34>",(Subclass)); Inst14++; } } catch(e) {}
  Subclass(1, 2, 3);
})();

try { if (Inst15 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<470,479,37>",(TypeError)); Inst15++; } } catch(e) {}
TypeError;

(function () {
try { if (Inst16 <= 1000 && typeof (Subclass) != "undefined") {_RecordType("<499,507,40>",(Subclass)); Inst16++; } } catch(e) {}
  Subclass(1, 2, 3, 4);
})();

try { if (Inst17 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<528,537,43>",(TypeError)); Inst17++; } } catch(e) {}
TypeError;

(function () {
try { if (Inst18 <= 1000 && typeof (Subclass.call) != "undefined") {_RecordType("<557,570,46>",(Subclass.call)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Subclass) != "undefined") {_RecordType("<557,565,46>",(Subclass)); Inst19++; } } catch(e) {}
  Subclass.call();
})();

try { if (Inst20 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<581,590,49>",(TypeError)); Inst20++; } } catch(e) {}
TypeError;

(function () {
try { if (Inst21 <= 1000 && typeof (Subclass.call) != "undefined") {_RecordType("<610,623,52>",(Subclass.call)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Subclass) != "undefined") {_RecordType("<610,618,52>",(Subclass)); Inst22++; } } catch(e) {}
  Subclass.call({});
})();

try { if (Inst23 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<636,645,55>",(TypeError)); Inst23++; } } catch(e) {}
TypeError;

(function () {
try { if (Inst24 <= 1000 && typeof (Subclass.call) != "undefined") {_RecordType("<665,678,58>",(Subclass.call)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Subclass) != "undefined") {_RecordType("<665,673,58>",(Subclass)); Inst25++; } } catch(e) {}
  Subclass.call({}, 1);
})();

try { if (Inst26 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<694,703,61>",(TypeError)); Inst26++; } } catch(e) {}
TypeError;

(function () {
try { if (Inst27 <= 1000 && typeof (Subclass.call) != "undefined") {_RecordType("<723,736,64>",(Subclass.call)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (Subclass) != "undefined") {_RecordType("<723,731,64>",(Subclass)); Inst28++; } } catch(e) {}
  Subclass.call({}, 1, 2);
})();

try { if (Inst29 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<755,764,67>",(TypeError)); Inst29++; } } catch(e) {}
TypeError;

(function () {
try { if (Inst30 <= 1000 && typeof (Subclass.call) != "undefined") {_RecordType("<784,797,70>",(Subclass.call)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (Subclass) != "undefined") {_RecordType("<784,792,70>",(Subclass)); Inst31++; } } catch(e) {}
  Subclass.call({}, 1, 2, 3, 4);
})();

try { if (Inst32 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<822,831,73>",(TypeError)); Inst32++; } } catch(e) {}
TypeError;

