var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2014 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
try { if (Inst0 <= 1000 && typeof (testRestrictedPropertiesStrict) != "undefined") {_RecordType("<177,207,4>",(testRestrictedPropertiesStrict)); Inst0++; } } catch(e) {}
(function testRestrictedPropertiesStrict() {
try { if (Inst1 <= 1000 && typeof (generator) != "undefined") {_RecordType("<224,233,5>",(generator)); Inst1++; } } catch(e) {}
  function* generator() {
    "use strict";

    ;
  }

try { if (Inst2 <= 1000 && typeof (generator.hasOwnProperty) != "undefined") {_RecordType("<270,294,11>",(generator.hasOwnProperty)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (generator) != "undefined") {_RecordType("<270,279,11>",(generator)); Inst3++; } } catch(e) {}
  generator.hasOwnProperty("arguments");

  (function () {
try { if (Inst4 <= 1000 && typeof (generator.arguments) != "undefined") {_RecordType("<338,357,14>",(generator.arguments)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (generator) != "undefined") {_RecordType("<338,347,14>",(generator)); Inst5++; } } catch(e) {}
    return generator.arguments;
  })();

try { if (Inst6 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<370,379,17>",(TypeError)); Inst6++; } } catch(e) {}
  TypeError;

  (function () {
    return generator.arguments = {};
try { if (Inst7 <= 1000 && typeof (generator.arguments) != "undefined") {_RecordType("<410,429,20>",(generator.arguments)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (generator) != "undefined") {_RecordType("<410,419,20>",(generator)); Inst8++; } } catch(e) {}
  })();

try { if (Inst9 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<447,456,23>",(TypeError)); Inst9++; } } catch(e) {}
  TypeError;
try { if (Inst10 <= 1000 && typeof (generator.hasOwnProperty) != "undefined") {_RecordType("<460,484,24>",(generator.hasOwnProperty)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (generator) != "undefined") {_RecordType("<460,469,24>",(generator)); Inst11++; } } catch(e) {}
  generator.hasOwnProperty("caller");

  (function () {
try { if (Inst12 <= 1000 && typeof (generator.caller) != "undefined") {_RecordType("<525,541,27>",(generator.caller)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (generator) != "undefined") {_RecordType("<525,534,27>",(generator)); Inst13++; } } catch(e) {}
    return generator.caller;
  })();

try { if (Inst14 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<554,563,30>",(TypeError)); Inst14++; } } catch(e) {}
  TypeError;

  (function () {
    return generator.caller = {};
try { if (Inst15 <= 1000 && typeof (generator.caller) != "undefined") {_RecordType("<594,610,33>",(generator.caller)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (generator) != "undefined") {_RecordType("<594,603,33>",(generator)); Inst16++; } } catch(e) {}
  })();

try { if (Inst17 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<628,637,36>",(TypeError)); Inst17++; } } catch(e) {}
  TypeError;
})();

try { if (Inst18 <= 1000 && typeof (testRestrictedPropertiesSloppy) != "undefined") {_RecordType("<656,686,39>",(testRestrictedPropertiesSloppy)); Inst18++; } } catch(e) {}
(function testRestrictedPropertiesSloppy() {
try { if (Inst19 <= 1000 && typeof (generator) != "undefined") {_RecordType("<703,712,40>",(generator)); Inst19++; } } catch(e) {}
  function* generator() {
    ;
  }

try { if (Inst20 <= 1000 && typeof (generator.hasOwnProperty) != "undefined") {_RecordType("<730,754,44>",(generator.hasOwnProperty)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (generator) != "undefined") {_RecordType("<730,739,44>",(generator)); Inst21++; } } catch(e) {}
  generator.hasOwnProperty("arguments");

  (function () {
try { if (Inst22 <= 1000 && typeof (generator.arguments) != "undefined") {_RecordType("<798,817,47>",(generator.arguments)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (generator) != "undefined") {_RecordType("<798,807,47>",(generator)); Inst23++; } } catch(e) {}
    return generator.arguments;
  })();

try { if (Inst24 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<830,839,50>",(TypeError)); Inst24++; } } catch(e) {}
  TypeError;

  (function () {
    return generator.arguments = {};
try { if (Inst25 <= 1000 && typeof (generator.arguments) != "undefined") {_RecordType("<870,889,53>",(generator.arguments)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (generator) != "undefined") {_RecordType("<870,879,53>",(generator)); Inst26++; } } catch(e) {}
  })();

try { if (Inst27 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<907,916,56>",(TypeError)); Inst27++; } } catch(e) {}
  TypeError;
try { if (Inst28 <= 1000 && typeof (generator.hasOwnProperty) != "undefined") {_RecordType("<920,944,57>",(generator.hasOwnProperty)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (generator) != "undefined") {_RecordType("<920,929,57>",(generator)); Inst29++; } } catch(e) {}
  generator.hasOwnProperty("caller");

  (function () {
try { if (Inst30 <= 1000 && typeof (generator.caller) != "undefined") {_RecordType("<985,1001,60>",(generator.caller)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (generator) != "undefined") {_RecordType("<985,994,60>",(generator)); Inst31++; } } catch(e) {}
    return generator.caller;
  })();

try { if (Inst32 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<1014,1023,63>",(TypeError)); Inst32++; } } catch(e) {}
  TypeError;

  (function () {
    return generator.caller = {};
try { if (Inst33 <= 1000 && typeof (generator.caller) != "undefined") {_RecordType("<1054,1070,66>",(generator.caller)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (generator) != "undefined") {_RecordType("<1054,1063,66>",(generator)); Inst34++; } } catch(e) {}
  })();

try { if (Inst35 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<1088,1097,69>",(TypeError)); Inst35++; } } catch(e) {}
  TypeError;
})();

try { if (Inst36 <= 1000 && typeof (assertIteratorResult) != "undefined") {_RecordType("<1115,1135,72>",(assertIteratorResult)); Inst36++; } } catch(e) {}
function assertIteratorResult(value, done, result) {
try { if (Inst37 <= 1000 && typeof (value) != "undefined") {_RecordType("<1136,1141,72>",(value)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (done) != "undefined") {_RecordType("<1143,1147,72>",(done)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (result) != "undefined") {_RecordType("<1149,1155,72>",(result)); Inst39++; } } catch(e) {}
try { if (Inst40 <= 1000 && typeof (value) != "undefined") {_RecordType("<1175,1180,74>",(value)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (done) != "undefined") {_RecordType("<1192,1196,75>",(done)); Inst41++; } } catch(e) {}
  ({
    value: value,
    done: done
  });
try { if (Inst42 <= 1000 && typeof (result) != "undefined") {_RecordType("<1205,1211,77>",(result)); Inst42++; } } catch(e) {}
  result;
}

try { if (Inst43 <= 1000 && typeof (testIteratorResultStrict) != "undefined") {_RecordType("<1226,1250,80>",(testIteratorResultStrict)); Inst43++; } } catch(e) {}
(function testIteratorResultStrict() {
try { if (Inst44 <= 1000 && typeof (generator) != "undefined") {_RecordType("<1267,1276,81>",(generator)); Inst44++; } } catch(e) {}
  function* generator() {
    "use strict";

    ;
  }

try { if (Inst45 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<1313,1322,87>",(undefined)); Inst45++; } } catch(e) {}
  undefined;
  true;
try { if (Inst46 <= 1000 && typeof (generator().next) != "undefined") {_RecordType("<1334,1350,89>",(generator().next)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (generator) != "undefined") {_RecordType("<1334,1343,89>",(generator)); Inst47++; } } catch(e) {}
  generator().next();
})();

try { if (Inst48 <= 1000 && typeof (testIteratorResultSloppy) != "undefined") {_RecordType("<1371,1395,92>",(testIteratorResultSloppy)); Inst48++; } } catch(e) {}
(function testIteratorResultSloppy() {
try { if (Inst49 <= 1000 && typeof (generator) != "undefined") {_RecordType("<1412,1421,93>",(generator)); Inst49++; } } catch(e) {}
  function* generator() {
    ;
  }

try { if (Inst50 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<1439,1448,97>",(undefined)); Inst50++; } } catch(e) {}
  undefined;
  true;
try { if (Inst51 <= 1000 && typeof (generator().next) != "undefined") {_RecordType("<1460,1476,99>",(generator().next)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (generator) != "undefined") {_RecordType("<1460,1469,99>",(generator)); Inst52++; } } catch(e) {}
  generator().next();
})();

