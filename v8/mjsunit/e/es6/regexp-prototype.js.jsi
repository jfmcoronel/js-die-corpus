var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2015 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// ES6 21.2.4.1
try { if (Inst1 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<200,231,5>",(Object.getOwnPropertyDescriptor)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Object) != "undefined") {_RecordType("<200,206,5>",(Object)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<232,238,5>",(RegExp)); Inst3++; } } catch(e) {}
var proto_desc = Object.getOwnPropertyDescriptor(RegExp, "prototype");
try { if (Inst0 <= 1000 && typeof (proto_desc) != "undefined") {_RecordType("<187,197,5>",(proto_desc)); Inst0++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (proto_desc.writable) != "undefined") {_RecordType("<254,273,6>",(proto_desc.writable)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (proto_desc) != "undefined") {_RecordType("<254,264,6>",(proto_desc)); Inst5++; } } catch(e) {}
proto_desc.writable;
try { if (Inst6 <= 1000 && typeof (proto_desc.enumerable) != "undefined") {_RecordType("<275,296,7>",(proto_desc.enumerable)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (proto_desc) != "undefined") {_RecordType("<275,285,7>",(proto_desc)); Inst7++; } } catch(e) {}
proto_desc.enumerable;
try { if (Inst8 <= 1000 && typeof (proto_desc.configurable) != "undefined") {_RecordType("<298,321,8>",(proto_desc.configurable)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (proto_desc) != "undefined") {_RecordType("<298,308,8>",(proto_desc)); Inst9++; } } catch(e) {}
proto_desc.configurable;
// ES6 21.2.5.1
try { if (Inst11 <= 1000 && typeof (proto_desc.value) != "undefined") {_RecordType("<351,367,10>",(proto_desc.value)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (proto_desc) != "undefined") {_RecordType("<351,361,10>",(proto_desc)); Inst12++; } } catch(e) {}
var proto = proto_desc.value;
try { if (Inst10 <= 1000 && typeof (proto) != "undefined") {_RecordType("<343,348,10>",(proto)); Inst10++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (proto) != "undefined") {_RecordType("<369,374,11>",(proto)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<386,392,11>",(RegExp)); Inst14++; } } catch(e) {}
proto instanceof RegExp;
try { if (Inst15 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<394,403,12>",(undefined)); Inst15++; } } catch(e) {}
undefined;
try { if (Inst16 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<405,436,13>",(Object.getOwnPropertyDescriptor)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Object) != "undefined") {_RecordType("<405,411,13>",(Object)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (proto) != "undefined") {_RecordType("<437,442,13>",(proto)); Inst18++; } } catch(e) {}
Object.getOwnPropertyDescriptor(proto, "valueOf");
try { if (Inst19 <= 1000 && typeof (proto.valueOf) != "undefined") {_RecordType("<456,469,14>",(proto.valueOf)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (proto) != "undefined") {_RecordType("<456,461,14>",(proto)); Inst20++; } } catch(e) {}
proto.valueOf;
try { if (Inst21 <= 1000 && typeof (Object.prototype.valueOf) != "undefined") {_RecordType("<471,495,15>",(Object.prototype.valueOf)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<471,487,15>",(Object.prototype)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Object) != "undefined") {_RecordType("<471,477,15>",(Object)); Inst23++; } } catch(e) {}
Object.prototype.valueOf();
try { if (Inst25 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<518,549,16>",(Object.getOwnPropertyDescriptor)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Object) != "undefined") {_RecordType("<518,524,16>",(Object)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (proto) != "undefined") {_RecordType("<550,555,16>",(proto)); Inst27++; } } catch(e) {}
var proto_constr = Object.getOwnPropertyDescriptor(proto, "constructor");
try { if (Inst24 <= 1000 && typeof (proto_constr) != "undefined") {_RecordType("<503,515,16>",(proto_constr)); Inst24++; } } catch(e) {}
try { if (Inst28 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<573,579,17>",(RegExp)); Inst28++; } } catch(e) {}
RegExp;
try { if (Inst29 <= 1000 && typeof (proto_constr.value) != "undefined") {_RecordType("<581,599,18>",(proto_constr.value)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (proto_constr) != "undefined") {_RecordType("<581,593,18>",(proto_constr)); Inst30++; } } catch(e) {}
proto_constr.value;

