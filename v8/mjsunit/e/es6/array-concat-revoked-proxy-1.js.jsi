var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2016 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
try { if (Inst0 <= 1000 && typeof (testConcatRevokedProxyToArrayInPrototype) != "undefined") {_RecordType("<177,217,4>",(testConcatRevokedProxyToArrayInPrototype)); Inst0++; } } catch(e) {}
(function testConcatRevokedProxyToArrayInPrototype() {
  "use strict";

try { if (Inst2 <= 1000 && typeof (get) != "undefined") {_RecordType("<261,264,8>",(get)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (_) != "undefined") {_RecordType("<265,266,8>",(_)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (name) != "undefined") {_RecordType("<268,272,8>",(name)); Inst4++; } } catch(e) {}
  var handler = {
    get(_, name) {
try { if (Inst5 <= 1000 && typeof (name) != "undefined") {_RecordType("<286,290,9>",(name)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Symbol.isConcatSpreadable) != "undefined") {_RecordType("<295,320,9>",(Symbol.isConcatSpreadable)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<295,301,9>",(Symbol)); Inst7++; } } catch(e) {}
      if (name === Symbol.isConcatSpreadable) {
try { if (Inst8 <= 1000 && typeof (p.revoke) != "undefined") {_RecordType("<332,340,10>",(p.revoke)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (p) != "undefined") {_RecordType("<332,333,10>",(p)); Inst9++; } } catch(e) {}
        p.revoke();
      }

try { if (Inst10 <= 1000 && typeof (target[name]) != "undefined") {_RecordType("<366,378,13>",(target[name])); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (target) != "undefined") {_RecordType("<366,372,13>",(target)); Inst11++; } } catch(e) {}
      return target[name];
    }

  };
try { if (Inst1 <= 1000 && typeof (handler) != "undefined") {_RecordType("<245,252,7>",(handler)); Inst1++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (Proxy.revocable) != "undefined") {_RecordType("<402,417,17>",(Proxy.revocable)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<402,407,17>",(Proxy)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (handler) != "undefined") {_RecordType("<422,429,17>",(handler)); Inst15++; } } catch(e) {}
  var p = Proxy.revocable([], handler);
try { if (Inst12 <= 1000 && typeof (p) != "undefined") {_RecordType("<398,399,17>",(p)); Inst12++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (p.proxy) != "undefined") {_RecordType("<464,471,19>",(p.proxy)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (p) != "undefined") {_RecordType("<464,465,19>",(p)); Inst18++; } } catch(e) {}
  var target = {
    __proto__: p.proxy
  };
try { if (Inst16 <= 1000 && typeof (target) != "undefined") {_RecordType("<438,444,18>",(target)); Inst16++; } } catch(e) {}

  (function () {
try { if (Inst19 <= 1000 && typeof ([].concat) != "undefined") {_RecordType("<499,508,23>",([].concat)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (target) != "undefined") {_RecordType("<509,515,23>",(target)); Inst20++; } } catch(e) {}
    [].concat(target);
  })();

try { if (Inst21 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<529,538,26>",(TypeError)); Inst21++; } } catch(e) {}
  TypeError;
})();

