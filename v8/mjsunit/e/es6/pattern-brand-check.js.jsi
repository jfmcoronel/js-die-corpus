var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2016 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
try { if (Inst0 <= 1000 && typeof (createNonRegExp) != "undefined") {_RecordType("<176,191,4>",(createNonRegExp)); Inst0++; } } catch(e) {}
function createNonRegExp(calls) {
try { if (Inst1 <= 1000 && typeof (calls) != "undefined") {_RecordType("<192,197,4>",(calls)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (Symbol.match) != "undefined") {_RecordType("<221,233,6>",(Symbol.match)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<221,227,6>",(Symbol)); Inst3++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Symbol.replace) != "undefined") {_RecordType("<309,323,11>",(Symbol.replace)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<309,315,11>",(Symbol)); Inst8++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Symbol.search) != "undefined") {_RecordType("<401,414,16>",(Symbol.search)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<401,407,16>",(Symbol)); Inst13++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Symbol.split) != "undefined") {_RecordType("<491,503,21>",(Symbol.split)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<491,497,21>",(Symbol)); Inst18++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Symbol.toPrimitive) != "undefined") {_RecordType("<575,593,26>",(Symbol.toPrimitive)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<575,581,26>",(Symbol)); Inst23++; } } catch(e) {}
  return {
    get [Symbol.match]() {
try { if (Inst4 <= 1000 && typeof (calls.push) != "undefined") {_RecordType("<245,255,7>",(calls.push)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (calls) != "undefined") {_RecordType("<245,250,7>",(calls)); Inst5++; } } catch(e) {}
      calls.push("@@match");
try { if (Inst6 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<281,290,8>",(undefined)); Inst6++; } } catch(e) {}
      return undefined;
    },

    get [Symbol.replace]() {
try { if (Inst9 <= 1000 && typeof (calls.push) != "undefined") {_RecordType("<335,345,12>",(calls.push)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (calls) != "undefined") {_RecordType("<335,340,12>",(calls)); Inst10++; } } catch(e) {}
      calls.push("@@replace");
try { if (Inst11 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<373,382,13>",(undefined)); Inst11++; } } catch(e) {}
      return undefined;
    },

    get [Symbol.search]() {
try { if (Inst14 <= 1000 && typeof (calls.push) != "undefined") {_RecordType("<426,436,17>",(calls.push)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (calls) != "undefined") {_RecordType("<426,431,17>",(calls)); Inst15++; } } catch(e) {}
      calls.push("@@search");
try { if (Inst16 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<463,472,18>",(undefined)); Inst16++; } } catch(e) {}
      return undefined;
    },

    get [Symbol.split]() {
try { if (Inst19 <= 1000 && typeof (calls.push) != "undefined") {_RecordType("<515,525,22>",(calls.push)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (calls) != "undefined") {_RecordType("<515,520,22>",(calls)); Inst20++; } } catch(e) {}
      calls.push("@@split");
try { if (Inst21 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<551,560,23>",(undefined)); Inst21++; } } catch(e) {}
      return undefined;
    },

    [Symbol.toPrimitive]() {
try { if (Inst24 <= 1000 && typeof (calls.push) != "undefined") {_RecordType("<605,615,27>",(calls.push)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (calls) != "undefined") {_RecordType("<605,610,27>",(calls)); Inst25++; } } catch(e) {}
      calls.push("@@toPrimitive");
      return "";
    }

  };
}

try { if (Inst26 <= 1000 && typeof (testStringMatchBrandCheck) != "undefined") {_RecordType("<676,701,34>",(testStringMatchBrandCheck)); Inst26++; } } catch(e) {}
(function testStringMatchBrandCheck() {
  var calls = [];
try { if (Inst27 <= 1000 && typeof (calls) != "undefined") {_RecordType("<712,717,35>",(calls)); Inst27++; } } catch(e) {}
try { if (Inst28 <= 1000 && typeof ("".match) != "undefined") {_RecordType("<726,734,36>",("".match)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (createNonRegExp) != "undefined") {_RecordType("<735,750,36>",(createNonRegExp)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (calls) != "undefined") {_RecordType("<751,756,36>",(calls)); Inst30++; } } catch(e) {}
  "".match(createNonRegExp(calls));
  ["@@match", "@@toPrimitive"];
try { if (Inst31 <= 1000 && typeof (calls) != "undefined") {_RecordType("<794,799,38>",(calls)); Inst31++; } } catch(e) {}
  calls;
})();

try { if (Inst32 <= 1000 && typeof (testStringSearchBrandCheck) != "undefined") {_RecordType("<818,844,41>",(testStringSearchBrandCheck)); Inst32++; } } catch(e) {}
(function testStringSearchBrandCheck() {
  var calls = [];
try { if (Inst33 <= 1000 && typeof (calls) != "undefined") {_RecordType("<855,860,42>",(calls)); Inst33++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof ("".search) != "undefined") {_RecordType("<869,878,43>",("".search)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (createNonRegExp) != "undefined") {_RecordType("<879,894,43>",(createNonRegExp)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (calls) != "undefined") {_RecordType("<895,900,43>",(calls)); Inst36++; } } catch(e) {}
  "".search(createNonRegExp(calls));
  ["@@search", "@@toPrimitive"];
try { if (Inst37 <= 1000 && typeof (calls) != "undefined") {_RecordType("<939,944,45>",(calls)); Inst37++; } } catch(e) {}
  calls;
})();

try { if (Inst38 <= 1000 && typeof (testStringSplitBrandCheck) != "undefined") {_RecordType("<963,988,48>",(testStringSplitBrandCheck)); Inst38++; } } catch(e) {}
(function testStringSplitBrandCheck() {
  var calls = [];
try { if (Inst39 <= 1000 && typeof (calls) != "undefined") {_RecordType("<999,1004,49>",(calls)); Inst39++; } } catch(e) {}
try { if (Inst40 <= 1000 && typeof ("".split) != "undefined") {_RecordType("<1013,1021,50>",("".split)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (createNonRegExp) != "undefined") {_RecordType("<1022,1037,50>",(createNonRegExp)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (calls) != "undefined") {_RecordType("<1038,1043,50>",(calls)); Inst42++; } } catch(e) {}
  "".split(createNonRegExp(calls));
  ["@@split", "@@toPrimitive"];
try { if (Inst43 <= 1000 && typeof (calls) != "undefined") {_RecordType("<1081,1086,52>",(calls)); Inst43++; } } catch(e) {}
  calls;
})();

try { if (Inst44 <= 1000 && typeof (testStringReplaceBrandCheck) != "undefined") {_RecordType("<1105,1132,55>",(testStringReplaceBrandCheck)); Inst44++; } } catch(e) {}
(function testStringReplaceBrandCheck() {
  var calls = [];
try { if (Inst45 <= 1000 && typeof (calls) != "undefined") {_RecordType("<1143,1148,56>",(calls)); Inst45++; } } catch(e) {}
try { if (Inst46 <= 1000 && typeof ("".replace) != "undefined") {_RecordType("<1157,1167,57>",("".replace)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (createNonRegExp) != "undefined") {_RecordType("<1168,1183,57>",(createNonRegExp)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (calls) != "undefined") {_RecordType("<1184,1189,57>",(calls)); Inst48++; } } catch(e) {}
  "".replace(createNonRegExp(calls), "");
  ["@@replace", "@@toPrimitive"];
try { if (Inst49 <= 1000 && typeof (calls) != "undefined") {_RecordType("<1233,1238,59>",(calls)); Inst49++; } } catch(e) {}
  calls;
})();

