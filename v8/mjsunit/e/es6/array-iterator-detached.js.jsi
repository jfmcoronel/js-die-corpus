var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2017 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax
try { if (Inst0 <= 1000 && typeof (Baseline) != "undefined") {_RecordType("<209,217,5>",(Baseline)); Inst0++; } } catch(e) {}
function Baseline() {
try { if (Inst2 <= 1000 && typeof (Uint8Array) != "undefined") {_RecordType("<240,250,6>",(Uint8Array)); Inst2++; } } catch(e) {}
  let array = new Uint8Array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);
try { if (Inst1 <= 1000 && typeof (array) != "undefined") {_RecordType("<228,233,6>",(array)); Inst1++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (array[Symbol.iterator]) != "undefined") {_RecordType("<295,317,7>",(array[Symbol.iterator])); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (array) != "undefined") {_RecordType("<295,300,7>",(array)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<301,316,7>",(Symbol.iterator)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<301,307,7>",(Symbol)); Inst7++; } } catch(e) {}
  let it = array[Symbol.iterator]();
try { if (Inst3 <= 1000 && typeof (it) != "undefined") {_RecordType("<290,292,7>",(it)); Inst3++; } } catch(e) {}
  0;
try { if (Inst8 <= 1000 && typeof (it.next().value) != "undefined") {_RecordType("<328,343,9>",(it.next().value)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (it.next) != "undefined") {_RecordType("<328,335,9>",(it.next)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (it) != "undefined") {_RecordType("<328,330,9>",(it)); Inst10++; } } catch(e) {}
  it.next().value;
  1;
try { if (Inst11 <= 1000 && typeof (it.next().value) != "undefined") {_RecordType("<352,367,11>",(it.next().value)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (it.next) != "undefined") {_RecordType("<352,359,11>",(it.next)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (it) != "undefined") {_RecordType("<352,354,11>",(it)); Inst13++; } } catch(e) {}
  it.next().value;
  2;
try { if (Inst14 <= 1000 && typeof (it.next().value) != "undefined") {_RecordType("<376,391,13>",(it.next().value)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (it.next) != "undefined") {_RecordType("<376,383,13>",(it.next)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (it) != "undefined") {_RecordType("<376,378,13>",(it)); Inst16++; } } catch(e) {}
  it.next().value;
try { if (Inst17 <= 1000 && typeof (it.next) != "undefined") {_RecordType("<395,402,14>",(it.next)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (it) != "undefined") {_RecordType("<395,397,14>",(it)); Inst18++; } } catch(e) {}
  it.next();
}

;
try { if (Inst19 <= 1000 && typeof (Baseline) != "undefined") {_RecordType("<411,419,18>",(Baseline)); Inst19++; } } catch(e) {}
Baseline();
try { if (Inst20 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<423,432,19>",(TypeError)); Inst20++; } } catch(e) {}
TypeError;
"Cannot perform Array Iterator.prototype.next on a neutered ArrayBuffer";

try { if (Inst21 <= 1000 && typeof (Turbo) != "undefined") {_RecordType("<518,523,22>",(Turbo)); Inst21++; } } catch(e) {}
function Turbo(count = 10000) {
try { if (Inst22 <= 1000 && typeof (count) != "undefined") {_RecordType("<524,529,22>",(count)); Inst22++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (Array) != "undefined") {_RecordType("<555,560,23>",(Array)); Inst24++; } } catch(e) {}
  let array = Array(10000);
try { if (Inst23 <= 1000 && typeof (array) != "undefined") {_RecordType("<547,552,23>",(array)); Inst23++; } } catch(e) {}

  for (let i = 0; i < 10000; ++i) {
try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<581,582,25>",(i)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (i) != "undefined") {_RecordType("<588,589,25>",(i)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (i) != "undefined") {_RecordType("<601,602,25>",(i)); Inst27++; } } catch(e) {}
    array[i] = 254;
try { if (Inst28 <= 1000 && typeof (array[i]) != "undefined") {_RecordType("<610,618,26>",(array[i])); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (array) != "undefined") {_RecordType("<610,615,26>",(array)); Inst29++; } } catch(e) {}
  }

  array[5000] = 255;
try { if (Inst30 <= 1000 && typeof (array[5000]) != "undefined") {_RecordType("<633,644,29>",(array[5000])); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (array) != "undefined") {_RecordType("<633,638,29>",(array)); Inst31++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (Uint8Array) != "undefined") {_RecordType("<666,676,30>",(Uint8Array)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (array) != "undefined") {_RecordType("<677,682,30>",(array)); Inst34++; } } catch(e) {}
  array = new Uint8Array(array);
try { if (Inst32 <= 1000 && typeof (array) != "undefined") {_RecordType("<654,659,30>",(array)); Inst32++; } } catch(e) {}
  let sum = 0;
try { if (Inst35 <= 1000 && typeof (sum) != "undefined") {_RecordType("<691,694,31>",(sum)); Inst35++; } } catch(e) {}
try { if (Inst37 <= 1000 && typeof (array[Symbol.iterator]) != "undefined") {_RecordType("<711,733,32>",(array[Symbol.iterator])); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (array) != "undefined") {_RecordType("<711,716,32>",(array)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<717,732,32>",(Symbol.iterator)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<717,723,32>",(Symbol)); Inst40++; } } catch(e) {}
  let it = array[Symbol.iterator]();
try { if (Inst36 <= 1000 && typeof (it) != "undefined") {_RecordType("<706,708,32>",(it)); Inst36++; } } catch(e) {}

  for (let i = 0; i < count; ++i) {
try { if (Inst41 <= 1000 && typeof (i) != "undefined") {_RecordType("<749,750,34>",(i)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (i) != "undefined") {_RecordType("<756,757,34>",(i)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (count) != "undefined") {_RecordType("<760,765,34>",(count)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (i) != "undefined") {_RecordType("<769,770,34>",(i)); Inst44++; } } catch(e) {}
try { if (Inst46 <= 1000 && typeof (it.next) != "undefined") {_RecordType("<791,798,35>",(it.next)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (it) != "undefined") {_RecordType("<791,793,35>",(it)); Inst47++; } } catch(e) {}
    let result = it.next();
try { if (Inst45 <= 1000 && typeof (result) != "undefined") {_RecordType("<782,788,35>",(result)); Inst45++; } } catch(e) {}

try { if (Inst48 <= 1000 && typeof (result.value) != "undefined") {_RecordType("<811,823,37>",(result.value)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (result) != "undefined") {_RecordType("<811,817,37>",(result)); Inst49++; } } catch(e) {}
    if (result.value === 255) {
      ;
    }

try { if (Inst51 <= 1000 && typeof (result.value) != "undefined") {_RecordType("<861,873,41>",(result.value)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (result) != "undefined") {_RecordType("<861,867,41>",(result)); Inst52++; } } catch(e) {}
    sum += result.value;
try { if (Inst50 <= 1000 && typeof (sum) != "undefined") {_RecordType("<854,857,41>",(sum)); Inst50++; } } catch(e) {}
  }

try { if (Inst53 <= 1000 && typeof (sum) != "undefined") {_RecordType("<889,892,44>",(sum)); Inst53++; } } catch(e) {}
  return sum;
}

try { if (Inst54 <= 1000 && typeof (Turbo) != "undefined") {_RecordType("<897,902,47>",(Turbo)); Inst54++; } } catch(e) {}
Turbo(10);
try { if (Inst55 <= 1000 && typeof (Turbo) != "undefined") {_RecordType("<908,913,48>",(Turbo)); Inst55++; } } catch(e) {}
Turbo(10);
try { if (Inst56 <= 1000 && typeof (Turbo) != "undefined") {_RecordType("<919,924,49>",(Turbo)); Inst56++; } } catch(e) {}
Turbo();
try { if (Inst57 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<928,937,50>",(TypeError)); Inst57++; } } catch(e) {}
TypeError;
"Cannot perform Array Iterator.prototype.next on a neutered ArrayBuffer";

