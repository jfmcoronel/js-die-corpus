var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2018 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax
try { if (Inst0 <= 1000 && typeof (TestPrototypeSetter2) != "undefined") {_RecordType("<210,230,5>",(TestPrototypeSetter2)); Inst0++; } } catch(e) {}
(function TestPrototypeSetter2() {
try { if (Inst1 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<237,258,6>",(Object.defineProperty)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Object) != "undefined") {_RecordType("<237,243,6>",(Object)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Array.prototype.__proto__) != "undefined") {_RecordType("<259,284,6>",(Array.prototype.__proto__)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<259,274,6>",(Array.prototype)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Array) != "undefined") {_RecordType("<259,264,6>",(Array)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (set) != "undefined") {_RecordType("<295,298,7>",(set)); Inst6++; } } catch(e) {}
  Object.defineProperty(Array.prototype.__proto__, 3, {
    set() {
      throw 666;
    }

  });
try { if (Inst7 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<335,356,12>",(Object.defineProperty)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Object) != "undefined") {_RecordType("<335,341,12>",(Object)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Array.prototype.__proto__) != "undefined") {_RecordType("<357,382,12>",(Array.prototype.__proto__)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<357,372,12>",(Array.prototype)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Array) != "undefined") {_RecordType("<357,362,12>",(Array)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (set) != "undefined") {_RecordType("<393,396,13>",(set)); Inst12++; } } catch(e) {}
  Object.defineProperty(Array.prototype.__proto__, 4, {
    set() {
      throw 666;
    }

  });

try { if (Inst13 <= 1000 && typeof (f) != "undefined") {_RecordType("<443,444,19>",(f)); Inst13++; } } catch(e) {}
  function f() {
    return ['a', ...['b', 'c', 'd'], 'e'];
  }

  ['a', 'b', 'c', 'd', 'e'];
try { if (Inst14 <= 1000 && typeof (f) != "undefined") {_RecordType("<528,529,24>",(f)); Inst14++; } } catch(e) {}
  f();
  ['a', 'b', 'c', 'd', 'e'];
try { if (Inst15 <= 1000 && typeof (f) != "undefined") {_RecordType("<564,565,26>",(f)); Inst15++; } } catch(e) {}
  f();
try { if (Inst16 <= 1000 && typeof (Array.prototype.__proto__[3]) != "undefined") {_RecordType("<578,606,27>",(Array.prototype.__proto__[3])); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Array.prototype.__proto__) != "undefined") {_RecordType("<578,603,27>",(Array.prototype.__proto__)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<578,593,27>",(Array.prototype)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Array) != "undefined") {_RecordType("<578,583,27>",(Array)); Inst19++; } } catch(e) {}
  delete Array.prototype.__proto__[3];
try { if (Inst20 <= 1000 && typeof (Array.prototype.__proto__[4]) != "undefined") {_RecordType("<617,645,28>",(Array.prototype.__proto__[4])); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Array.prototype.__proto__) != "undefined") {_RecordType("<617,642,28>",(Array.prototype.__proto__)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<617,632,28>",(Array.prototype)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Array) != "undefined") {_RecordType("<617,622,28>",(Array)); Inst23++; } } catch(e) {}
  delete Array.prototype.__proto__[4];
})();

