var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2015 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// ArrayBuffer.prototype.slice makes subclass and checks length
try { if (Inst1 <= 1000 && typeof (ArrayBuffer) != "undefined") {_RecordType("<259,270,5>",(ArrayBuffer)); Inst1++; } } catch(e) {}
class MyArrayBuffer extends ArrayBuffer {}
try { if (Inst0 <= 1000 && typeof (MyArrayBuffer) != "undefined") {_RecordType("<237,250,5>",(MyArrayBuffer)); Inst0++; } } catch(e) {}

try { if (Inst2 <= 1000 && typeof (MyArrayBuffer) != "undefined") {_RecordType("<275,288,7>",(MyArrayBuffer)); Inst2++; } } catch(e) {}
MyArrayBuffer;
try { if (Inst3 <= 1000 && typeof (new MyArrayBuffer(0).slice().constructor) != "undefined") {_RecordType("<290,330,8>",(new MyArrayBuffer(0).slice().constructor)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (new MyArrayBuffer(0).slice) != "undefined") {_RecordType("<290,316,8>",(new MyArrayBuffer(0).slice)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (MyArrayBuffer) != "undefined") {_RecordType("<294,307,8>",(MyArrayBuffer)); Inst5++; } } catch(e) {}
new MyArrayBuffer(0).slice().constructor;

try { if (Inst9 <= 1000 && typeof (ArrayBuffer) != "undefined") {_RecordType("<366,377,10>",(ArrayBuffer)); Inst9++; } } catch(e) {}
class MyShortArrayBuffer extends ArrayBuffer {
  constructor(length) {
try { if (Inst7 <= 1000 && typeof (length) != "undefined") {_RecordType("<394,400,11>",(length)); Inst7++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (length) != "undefined") {_RecordType("<414,420,12>",(length)); Inst8++; } } catch(e) {}
    super(length - 1);
  }

}
try { if (Inst6 <= 1000 && typeof (MyShortArrayBuffer) != "undefined") {_RecordType("<339,357,10>",(MyShortArrayBuffer)); Inst6++; } } catch(e) {}

try { if (Inst10 <= 1000 && typeof (new MyShortArrayBuffer(5).slice) != "undefined") {_RecordType("<442,473,17>",(new MyShortArrayBuffer(5).slice)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (MyShortArrayBuffer) != "undefined") {_RecordType("<446,464,17>",(MyShortArrayBuffer)); Inst11++; } } catch(e) {}
(() => new MyShortArrayBuffer(5).slice(0, 4))();

try { if (Inst12 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<485,494,19>",(TypeError)); Inst12++; } } catch(e) {}
TypeError;

try { if (Inst22 <= 1000 && typeof (ArrayBuffer) != "undefined") {_RecordType("<532,543,21>",(ArrayBuffer)); Inst22++; } } catch(e) {}
class SingletonArrayBuffer extends ArrayBuffer {
  constructor(...args) {
try { if (Inst14 <= 1000 && typeof (args) != "undefined") {_RecordType("<563,567,22>",(args)); Inst14++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (SingletonArrayBuffer.cached) != "undefined") {_RecordType("<579,606,23>",(SingletonArrayBuffer.cached)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (SingletonArrayBuffer) != "undefined") {_RecordType("<579,599,23>",(SingletonArrayBuffer)); Inst16++; } } catch(e) {}
    if (SingletonArrayBuffer.cached) {
try { if (Inst17 <= 1000 && typeof (SingletonArrayBuffer.cached) != "undefined") {_RecordType("<623,650,24>",(SingletonArrayBuffer.cached)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (SingletonArrayBuffer) != "undefined") {_RecordType("<623,643,24>",(SingletonArrayBuffer)); Inst18++; } } catch(e) {}
      return SingletonArrayBuffer.cached;
    }

try { if (Inst19 <= 1000 && typeof (args) != "undefined") {_RecordType("<672,676,27>",(args)); Inst19++; } } catch(e) {}
    super(...args);
    SingletonArrayBuffer.cached = this;
try { if (Inst20 <= 1000 && typeof (SingletonArrayBuffer.cached) != "undefined") {_RecordType("<683,710,28>",(SingletonArrayBuffer.cached)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (SingletonArrayBuffer) != "undefined") {_RecordType("<683,703,28>",(SingletonArrayBuffer)); Inst21++; } } catch(e) {}
  }

}
try { if (Inst13 <= 1000 && typeof (SingletonArrayBuffer) != "undefined") {_RecordType("<503,523,21>",(SingletonArrayBuffer)); Inst13++; } } catch(e) {}

try { if (Inst23 <= 1000 && typeof (new SingletonArrayBuffer(5).slice) != "undefined") {_RecordType("<734,767,33>",(new SingletonArrayBuffer(5).slice)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (SingletonArrayBuffer) != "undefined") {_RecordType("<738,758,33>",(SingletonArrayBuffer)); Inst24++; } } catch(e) {}
(() => new SingletonArrayBuffer(5).slice(0, 4))();

try { if (Inst25 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<779,788,35>",(TypeError)); Inst25++; } } catch(e) {}
TypeError;

try { if (Inst27 <= 1000 && typeof (ArrayBuffer) != "undefined") {_RecordType("<820,831,37>",(ArrayBuffer)); Inst27++; } } catch(e) {}
class NonArrayBuffer extends ArrayBuffer {
  constructor() {
    return {};
  }

}
try { if (Inst26 <= 1000 && typeof (NonArrayBuffer) != "undefined") {_RecordType("<797,811,37>",(NonArrayBuffer)); Inst26++; } } catch(e) {}

try { if (Inst28 <= 1000 && typeof (new NonArrayBuffer(5).slice) != "undefined") {_RecordType("<882,909,44>",(new NonArrayBuffer(5).slice)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (NonArrayBuffer) != "undefined") {_RecordType("<886,900,44>",(NonArrayBuffer)); Inst29++; } } catch(e) {}
(() => new NonArrayBuffer(5).slice(0, 4))();

try { if (Inst30 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<921,930,46>",(TypeError)); Inst30++; } } catch(e) {}
TypeError;

// Species fallback is ArrayBuffer
try { if (Inst32 <= 1000 && typeof (ArrayBuffer) != "undefined") {_RecordType("<1003,1014,49>",(ArrayBuffer)); Inst32++; } } catch(e) {}
class UndefinedArrayBuffer extends ArrayBuffer {}
try { if (Inst31 <= 1000 && typeof (UndefinedArrayBuffer) != "undefined") {_RecordType("<974,994,49>",(UndefinedArrayBuffer)); Inst31++; } } catch(e) {}

try { if (Inst36 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<1064,1073,51>",(undefined)); Inst36++; } } catch(e) {}
UndefinedArrayBuffer.prototype.constructor = undefined;
try { if (Inst33 <= 1000 && typeof (UndefinedArrayBuffer.prototype.constructor) != "undefined") {_RecordType("<1019,1061,51>",(UndefinedArrayBuffer.prototype.constructor)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (UndefinedArrayBuffer.prototype) != "undefined") {_RecordType("<1019,1049,51>",(UndefinedArrayBuffer.prototype)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (UndefinedArrayBuffer) != "undefined") {_RecordType("<1019,1039,51>",(UndefinedArrayBuffer)); Inst35++; } } catch(e) {}
try { if (Inst37 <= 1000 && typeof (ArrayBuffer) != "undefined") {_RecordType("<1075,1086,52>",(ArrayBuffer)); Inst37++; } } catch(e) {}
ArrayBuffer;
try { if (Inst38 <= 1000 && typeof (new UndefinedArrayBuffer(0).slice().constructor) != "undefined") {_RecordType("<1088,1135,53>",(new UndefinedArrayBuffer(0).slice().constructor)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (new UndefinedArrayBuffer(0).slice) != "undefined") {_RecordType("<1088,1121,53>",(new UndefinedArrayBuffer(0).slice)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (UndefinedArrayBuffer) != "undefined") {_RecordType("<1092,1112,53>",(UndefinedArrayBuffer)); Inst40++; } } catch(e) {}
new UndefinedArrayBuffer(0).slice().constructor;

