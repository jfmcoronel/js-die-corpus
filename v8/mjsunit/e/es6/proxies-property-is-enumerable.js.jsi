var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2015 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
var handler = {};
try { if (Inst0 <= 1000 && typeof (handler) != "undefined") {_RecordType("<171,178,4>",(handler)); Inst0++; } } catch(e) {}
var target = {
  a: 1
};
try { if (Inst1 <= 1000 && typeof (target) != "undefined") {_RecordType("<189,195,5>",(target)); Inst1++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<226,231,8>",(Proxy)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (target) != "undefined") {_RecordType("<232,238,8>",(target)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (handler) != "undefined") {_RecordType("<240,247,8>",(handler)); Inst5++; } } catch(e) {}
var proxy = new Proxy(target, handler);
try { if (Inst2 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<214,219,8>",(proxy)); Inst2++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (target.propertyIsEnumerable) != "undefined") {_RecordType("<250,277,9>",(target.propertyIsEnumerable)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (target) != "undefined") {_RecordType("<250,256,9>",(target)); Inst7++; } } catch(e) {}
target.propertyIsEnumerable('a');
try { if (Inst8 <= 1000 && typeof (proxy.propertyIsEnumerable) != "undefined") {_RecordType("<284,310,10>",(proxy.propertyIsEnumerable)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<284,289,10>",(proxy)); Inst9++; } } catch(e) {}
proxy.propertyIsEnumerable('a');
try { if (Inst10 <= 1000 && typeof (target.propertyIsEnumerable) != "undefined") {_RecordType("<317,344,11>",(target.propertyIsEnumerable)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (target) != "undefined") {_RecordType("<317,323,11>",(target)); Inst11++; } } catch(e) {}
target.propertyIsEnumerable('b');
try { if (Inst12 <= 1000 && typeof (proxy.propertyIsEnumerable) != "undefined") {_RecordType("<351,377,12>",(proxy.propertyIsEnumerable)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<351,356,12>",(proxy)); Inst13++; } } catch(e) {}
proxy.propertyIsEnumerable('b');

handler.getOwnPropertyDescriptor = function (target, prop) {
try { if (Inst16 <= 1000 && typeof (target) != "undefined") {_RecordType("<430,436,14>",(target)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (prop) != "undefined") {_RecordType("<438,442,14>",(prop)); Inst17++; } } catch(e) {}
  return {
    configurable: true,
    enumerable: true,
    value: 10
  };
};
try { if (Inst14 <= 1000 && typeof (handler.getOwnPropertyDescriptor) != "undefined") {_RecordType("<385,417,14>",(handler.getOwnPropertyDescriptor)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (handler) != "undefined") {_RecordType("<385,392,14>",(handler)); Inst15++; } } catch(e) {}

try { if (Inst18 <= 1000 && typeof (target.propertyIsEnumerable) != "undefined") {_RecordType("<526,553,22>",(target.propertyIsEnumerable)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (target) != "undefined") {_RecordType("<526,532,22>",(target)); Inst19++; } } catch(e) {}
target.propertyIsEnumerable('a');
try { if (Inst20 <= 1000 && typeof (proxy.propertyIsEnumerable) != "undefined") {_RecordType("<560,586,23>",(proxy.propertyIsEnumerable)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<560,565,23>",(proxy)); Inst21++; } } catch(e) {}
proxy.propertyIsEnumerable('a');
try { if (Inst22 <= 1000 && typeof (target.propertyIsEnumerable) != "undefined") {_RecordType("<593,620,24>",(target.propertyIsEnumerable)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (target) != "undefined") {_RecordType("<593,599,24>",(target)); Inst23++; } } catch(e) {}
target.propertyIsEnumerable('b');
try { if (Inst24 <= 1000 && typeof (proxy.propertyIsEnumerable) != "undefined") {_RecordType("<627,653,25>",(proxy.propertyIsEnumerable)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<627,632,25>",(proxy)); Inst25++; } } catch(e) {}
proxy.propertyIsEnumerable('b');

handler.getOwnPropertyDescriptor = function (target, prop) {
try { if (Inst28 <= 1000 && typeof (target) != "undefined") {_RecordType("<706,712,27>",(target)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (prop) != "undefined") {_RecordType("<714,718,27>",(prop)); Inst29++; } } catch(e) {}
  return {
    configurable: true,
    enumerable: false,
    value: 10
  };
};
try { if (Inst26 <= 1000 && typeof (handler.getOwnPropertyDescriptor) != "undefined") {_RecordType("<661,693,27>",(handler.getOwnPropertyDescriptor)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (handler) != "undefined") {_RecordType("<661,668,27>",(handler)); Inst27++; } } catch(e) {}

try { if (Inst30 <= 1000 && typeof (target.propertyIsEnumerable) != "undefined") {_RecordType("<803,830,35>",(target.propertyIsEnumerable)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (target) != "undefined") {_RecordType("<803,809,35>",(target)); Inst31++; } } catch(e) {}
target.propertyIsEnumerable('a');
try { if (Inst32 <= 1000 && typeof (proxy.propertyIsEnumerable) != "undefined") {_RecordType("<837,863,36>",(proxy.propertyIsEnumerable)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<837,842,36>",(proxy)); Inst33++; } } catch(e) {}
proxy.propertyIsEnumerable('a');
try { if (Inst34 <= 1000 && typeof (target.propertyIsEnumerable) != "undefined") {_RecordType("<870,897,37>",(target.propertyIsEnumerable)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (target) != "undefined") {_RecordType("<870,876,37>",(target)); Inst35++; } } catch(e) {}
target.propertyIsEnumerable('b');
try { if (Inst36 <= 1000 && typeof (proxy.propertyIsEnumerable) != "undefined") {_RecordType("<904,930,38>",(proxy.propertyIsEnumerable)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<904,909,38>",(proxy)); Inst37++; } } catch(e) {}
proxy.propertyIsEnumerable('b');

