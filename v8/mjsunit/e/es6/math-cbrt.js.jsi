var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2014 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
try { if (Inst0 <= 1000 && typeof (isNaN) != "undefined") {_RecordType("<167,172,4>",(isNaN)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (Math.cbrt) != "undefined") {_RecordType("<173,182,4>",(Math.cbrt)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Math) != "undefined") {_RecordType("<173,177,4>",(Math)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<183,186,4>",(NaN)); Inst3++; } } catch(e) {}
isNaN(Math.cbrt(NaN));
try { if (Inst4 <= 1000 && typeof (isNaN) != "undefined") {_RecordType("<190,195,5>",(isNaN)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Math.cbrt) != "undefined") {_RecordType("<196,205,5>",(Math.cbrt)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Math) != "undefined") {_RecordType("<196,200,5>",(Math)); Inst6++; } } catch(e) {}
isNaN(Math.cbrt(function () {
  ;
}));
try { if (Inst7 <= 1000 && typeof (isNaN) != "undefined") {_RecordType("<229,234,8>",(isNaN)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Math.cbrt) != "undefined") {_RecordType("<235,244,8>",(Math.cbrt)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Math) != "undefined") {_RecordType("<235,239,8>",(Math)); Inst9++; } } catch(e) {}
isNaN(Math.cbrt({
  toString: function () {
try { if (Inst10 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<284,287,10>",(NaN)); Inst10++; } } catch(e) {}
    return NaN;
  }
}));
try { if (Inst11 <= 1000 && typeof (isNaN) != "undefined") {_RecordType("<298,303,13>",(isNaN)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Math.cbrt) != "undefined") {_RecordType("<304,313,13>",(Math.cbrt)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Math) != "undefined") {_RecordType("<304,308,13>",(Math)); Inst13++; } } catch(e) {}
isNaN(Math.cbrt({
  valueOf: function () {
    return "abc";
  }
}));
"Infinity";
try { if (Inst14 <= 1000 && typeof (String) != "undefined") {_RecordType("<380,386,19>",(String)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Math.cbrt) != "undefined") {_RecordType("<391,400,19>",(Math.cbrt)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Math) != "undefined") {_RecordType("<391,395,19>",(Math)); Inst16++; } } catch(e) {}
String(1 / Math.cbrt(0));
"-Infinity";
try { if (Inst17 <= 1000 && typeof (String) != "undefined") {_RecordType("<419,425,21>",(String)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Math.cbrt) != "undefined") {_RecordType("<430,439,21>",(Math.cbrt)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Math) != "undefined") {_RecordType("<430,434,21>",(Math)); Inst19++; } } catch(e) {}
String(1 / Math.cbrt(-0));
"Infinity";
try { if (Inst20 <= 1000 && typeof (String) != "undefined") {_RecordType("<458,464,23>",(String)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Math.cbrt) != "undefined") {_RecordType("<465,474,23>",(Math.cbrt)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Math) != "undefined") {_RecordType("<465,469,23>",(Math)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<475,483,23>",(Infinity)); Inst23++; } } catch(e) {}
String(Math.cbrt(Infinity));
"-Infinity";
try { if (Inst24 <= 1000 && typeof (String) != "undefined") {_RecordType("<500,506,25>",(String)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Math.cbrt) != "undefined") {_RecordType("<507,516,25>",(Math.cbrt)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Math) != "undefined") {_RecordType("<507,511,25>",(Math)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<518,526,25>",(Infinity)); Inst27++; } } catch(e) {}
String(Math.cbrt(-Infinity));

for (var i = 1E-100; i < 1E100; i *= Math.PI) {
try { if (Inst28 <= 1000 && typeof (i) != "undefined") {_RecordType("<540,541,27>",(i)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (i) != "undefined") {_RecordType("<552,553,27>",(i)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (i) != "undefined") {_RecordType("<563,564,27>",(i)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (Math.PI) != "undefined") {_RecordType("<568,575,27>",(Math.PI)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (Math) != "undefined") {_RecordType("<568,572,27>",(Math)); Inst32++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (i) != "undefined") {_RecordType("<581,582,28>",(i)); Inst33++; } } catch(e) {}
  i;
try { if (Inst34 <= 1000 && typeof (Math.cbrt) != "undefined") {_RecordType("<586,595,29>",(Math.cbrt)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (Math) != "undefined") {_RecordType("<586,590,29>",(Math)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (i) != "undefined") {_RecordType("<596,597,29>",(i)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (i) != "undefined") {_RecordType("<600,601,29>",(i)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (i) != "undefined") {_RecordType("<604,605,29>",(i)); Inst38++; } } catch(e) {}
  Math.cbrt(i * i * i);
try { if (Inst39 <= 1000 && typeof (i) != "undefined") {_RecordType("<610,611,30>",(i)); Inst39++; } } catch(e) {}
  i * 1E-15;
}

for (var i = -1E-100; i > -1E100; i *= Math.E) {
try { if (Inst40 <= 1000 && typeof (i) != "undefined") {_RecordType("<633,634,33>",(i)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (i) != "undefined") {_RecordType("<646,647,33>",(i)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (i) != "undefined") {_RecordType("<658,659,33>",(i)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (Math.E) != "undefined") {_RecordType("<663,669,33>",(Math.E)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (Math) != "undefined") {_RecordType("<663,667,33>",(Math)); Inst44++; } } catch(e) {}
try { if (Inst45 <= 1000 && typeof (i) != "undefined") {_RecordType("<675,676,34>",(i)); Inst45++; } } catch(e) {}
  i;
try { if (Inst46 <= 1000 && typeof (Math.cbrt) != "undefined") {_RecordType("<680,689,35>",(Math.cbrt)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (Math) != "undefined") {_RecordType("<680,684,35>",(Math)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (i) != "undefined") {_RecordType("<690,691,35>",(i)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (i) != "undefined") {_RecordType("<694,695,35>",(i)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (i) != "undefined") {_RecordType("<698,699,35>",(i)); Inst50++; } } catch(e) {}
  Math.cbrt(i * i * i);
try { if (Inst51 <= 1000 && typeof (i) != "undefined") {_RecordType("<705,706,36>",(i)); Inst51++; } } catch(e) {}
  -i * 1E-15;
} // Let's be exact at least for small integers.


for (var i = 2; i < 10000; i++) {
try { if (Inst52 <= 1000 && typeof (i) != "undefined") {_RecordType("<776,777,40>",(i)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (i) != "undefined") {_RecordType("<783,784,40>",(i)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (i) != "undefined") {_RecordType("<794,795,40>",(i)); Inst54++; } } catch(e) {}
try { if (Inst55 <= 1000 && typeof (i) != "undefined") {_RecordType("<803,804,41>",(i)); Inst55++; } } catch(e) {}
  i;
try { if (Inst56 <= 1000 && typeof (Math.cbrt) != "undefined") {_RecordType("<808,817,42>",(Math.cbrt)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (Math) != "undefined") {_RecordType("<808,812,42>",(Math)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (i) != "undefined") {_RecordType("<818,819,42>",(i)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (i) != "undefined") {_RecordType("<822,823,42>",(i)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (i) != "undefined") {_RecordType("<826,827,42>",(i)); Inst60++; } } catch(e) {}
  Math.cbrt(i * i * i);
}

