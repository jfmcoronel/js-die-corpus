var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2015 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
try { if (Inst0 <= 1000 && typeof (Method) != "undefined") {_RecordType("<177,183,4>",(Method)); Inst0++; } } catch(e) {}
(function Method() {
  class C {
    eval() {
      return 1;
    }

    arguments() {
      return 2;
    }

    static eval() {
      return 3;
    }

    static arguments() {
      return 4;
    }

  }
try { if (Inst1 <= 1000 && typeof (C) != "undefined") {_RecordType("<196,197,5>",(C)); Inst1++; } } catch(e) {}

  ;
  1;
try { if (Inst2 <= 1000 && typeof (new C().eval) != "undefined") {_RecordType("<384,396,26>",(new C().eval)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (C) != "undefined") {_RecordType("<388,389,26>",(C)); Inst3++; } } catch(e) {}
  new C().eval();
  2;
try { if (Inst4 <= 1000 && typeof (new C().arguments) != "undefined") {_RecordType("<407,424,28>",(new C().arguments)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (C) != "undefined") {_RecordType("<411,412,28>",(C)); Inst5++; } } catch(e) {}
  new C().arguments();
  3;
try { if (Inst6 <= 1000 && typeof (C.eval) != "undefined") {_RecordType("<435,441,30>",(C.eval)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (C) != "undefined") {_RecordType("<435,436,30>",(C)); Inst7++; } } catch(e) {}
  C.eval();
  4;
try { if (Inst8 <= 1000 && typeof (C.arguments) != "undefined") {_RecordType("<452,463,32>",(C.arguments)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (C) != "undefined") {_RecordType("<452,453,32>",(C)); Inst9++; } } catch(e) {}
  C.arguments();
})();

try { if (Inst10 <= 1000 && typeof (Getters) != "undefined") {_RecordType("<484,491,35>",(Getters)); Inst10++; } } catch(e) {}
(function Getters() {
  class C {
    get eval() {
      return 1;
    }

    get arguments() {
      return 2;
    }

    static get eval() {
      return 3;
    }

    static get arguments() {
      return 4;
    }

  }
try { if (Inst11 <= 1000 && typeof (C) != "undefined") {_RecordType("<504,505,36>",(C)); Inst11++; } } catch(e) {}

  ;
  1;
try { if (Inst12 <= 1000 && typeof (new C().eval) != "undefined") {_RecordType("<708,720,57>",(new C().eval)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (C) != "undefined") {_RecordType("<712,713,57>",(C)); Inst13++; } } catch(e) {}
  new C().eval;
  2;
try { if (Inst14 <= 1000 && typeof (new C().arguments) != "undefined") {_RecordType("<729,746,59>",(new C().arguments)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (C) != "undefined") {_RecordType("<733,734,59>",(C)); Inst15++; } } catch(e) {}
  new C().arguments;
  3;
try { if (Inst16 <= 1000 && typeof (C.eval) != "undefined") {_RecordType("<755,761,61>",(C.eval)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (C) != "undefined") {_RecordType("<755,756,61>",(C)); Inst17++; } } catch(e) {}
  C.eval;
  4;
try { if (Inst18 <= 1000 && typeof (C.arguments) != "undefined") {_RecordType("<770,781,63>",(C.arguments)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (C) != "undefined") {_RecordType("<770,771,63>",(C)); Inst19++; } } catch(e) {}
  C.arguments;
})();

try { if (Inst20 <= 1000 && typeof (Setters) != "undefined") {_RecordType("<800,807,66>",(Setters)); Inst20++; } } catch(e) {}
(function Setters() {
  var x = 0;
try { if (Inst21 <= 1000 && typeof (x) != "undefined") {_RecordType("<818,819,67>",(x)); Inst21++; } } catch(e) {}

  class C {
    set eval(v) {
try { if (Inst23 <= 1000 && typeof (v) != "undefined") {_RecordType("<851,852,70>",(v)); Inst23++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (v) != "undefined") {_RecordType("<866,867,71>",(v)); Inst25++; } } catch(e) {}
      x = v;
try { if (Inst24 <= 1000 && typeof (x) != "undefined") {_RecordType("<862,863,71>",(x)); Inst24++; } } catch(e) {}
    }

    set arguments(v) {
try { if (Inst26 <= 1000 && typeof (v) != "undefined") {_RecordType("<894,895,74>",(v)); Inst26++; } } catch(e) {}
try { if (Inst28 <= 1000 && typeof (v) != "undefined") {_RecordType("<909,910,75>",(v)); Inst28++; } } catch(e) {}
      x = v;
try { if (Inst27 <= 1000 && typeof (x) != "undefined") {_RecordType("<905,906,75>",(x)); Inst27++; } } catch(e) {}
    }

    static set eval(v) {
try { if (Inst29 <= 1000 && typeof (v) != "undefined") {_RecordType("<939,940,78>",(v)); Inst29++; } } catch(e) {}
try { if (Inst31 <= 1000 && typeof (v) != "undefined") {_RecordType("<954,955,79>",(v)); Inst31++; } } catch(e) {}
      x = v;
try { if (Inst30 <= 1000 && typeof (x) != "undefined") {_RecordType("<950,951,79>",(x)); Inst30++; } } catch(e) {}
    }

    static set arguments(v) {
try { if (Inst32 <= 1000 && typeof (v) != "undefined") {_RecordType("<989,990,82>",(v)); Inst32++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof (v) != "undefined") {_RecordType("<1004,1005,83>",(v)); Inst34++; } } catch(e) {}
      x = v;
try { if (Inst33 <= 1000 && typeof (x) != "undefined") {_RecordType("<1000,1001,83>",(x)); Inst33++; } } catch(e) {}
    }

  }
try { if (Inst22 <= 1000 && typeof (C) != "undefined") {_RecordType("<834,835,69>",(C)); Inst22++; } } catch(e) {}

  ;
  new C().eval = 1;
try { if (Inst35 <= 1000 && typeof (new C().eval) != "undefined") {_RecordType("<1025,1037,89>",(new C().eval)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (C) != "undefined") {_RecordType("<1029,1030,89>",(C)); Inst36++; } } catch(e) {}
  1;
try { if (Inst37 <= 1000 && typeof (x) != "undefined") {_RecordType("<1050,1051,91>",(x)); Inst37++; } } catch(e) {}
  x;
  new C().arguments = 2;
try { if (Inst38 <= 1000 && typeof (new C().arguments) != "undefined") {_RecordType("<1055,1072,92>",(new C().arguments)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (C) != "undefined") {_RecordType("<1059,1060,92>",(C)); Inst39++; } } catch(e) {}
  2;
try { if (Inst40 <= 1000 && typeof (x) != "undefined") {_RecordType("<1085,1086,94>",(x)); Inst40++; } } catch(e) {}
  x;
  C.eval = 3;
try { if (Inst41 <= 1000 && typeof (C.eval) != "undefined") {_RecordType("<1090,1096,95>",(C.eval)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (C) != "undefined") {_RecordType("<1090,1091,95>",(C)); Inst42++; } } catch(e) {}
  3;
try { if (Inst43 <= 1000 && typeof (x) != "undefined") {_RecordType("<1109,1110,97>",(x)); Inst43++; } } catch(e) {}
  x;
  C.arguments = 4;
try { if (Inst44 <= 1000 && typeof (C.arguments) != "undefined") {_RecordType("<1114,1125,98>",(C.arguments)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (C) != "undefined") {_RecordType("<1114,1115,98>",(C)); Inst45++; } } catch(e) {}
  4;
try { if (Inst46 <= 1000 && typeof (x) != "undefined") {_RecordType("<1138,1139,100>",(x)); Inst46++; } } catch(e) {}
  x;
})();

