var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2012 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// Flags: --allow-natives-syntax
var ordering = [];
try { if (Inst0 <= 1000 && typeof (ordering) != "undefined") {_RecordType("<1634,1642,28>",(ordering)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (reset) != "undefined") {_RecordType("<1659,1664,30>",(reset)); Inst1++; } } catch(e) {}
function reset() {
  ordering = [];
try { if (Inst2 <= 1000 && typeof (ordering) != "undefined") {_RecordType("<1671,1679,31>",(ordering)); Inst2++; } } catch(e) {}
}

try { if (Inst3 <= 1000 && typeof (assertArrayValues) != "undefined") {_RecordType("<1698,1715,34>",(assertArrayValues)); Inst3++; } } catch(e) {}
function assertArrayValues(expected, actual) {
try { if (Inst4 <= 1000 && typeof (expected) != "undefined") {_RecordType("<1716,1724,34>",(expected)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1726,1732,34>",(actual)); Inst5++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (expected.length) != "undefined") {_RecordType("<1738,1753,35>",(expected.length)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (expected) != "undefined") {_RecordType("<1738,1746,35>",(expected)); Inst7++; } } catch(e) {}
  expected.length;
try { if (Inst8 <= 1000 && typeof (actual.length) != "undefined") {_RecordType("<1757,1770,36>",(actual.length)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1757,1763,36>",(actual)); Inst9++; } } catch(e) {}
  actual.length;

  for (var i = 0; i < expected.length; i++) {
try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<1784,1785,38>",(i)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<1791,1792,38>",(i)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (expected.length) != "undefined") {_RecordType("<1795,1810,38>",(expected.length)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (expected) != "undefined") {_RecordType("<1795,1803,38>",(expected)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<1812,1813,38>",(i)); Inst14++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (expected[i]) != "undefined") {_RecordType("<1823,1834,39>",(expected[i])); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (expected) != "undefined") {_RecordType("<1823,1831,39>",(expected)); Inst16++; } } catch(e) {}
    expected[i];
try { if (Inst17 <= 1000 && typeof (actual[i]) != "undefined") {_RecordType("<1840,1849,40>",(actual[i])); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1840,1846,40>",(actual)); Inst18++; } } catch(e) {}
    actual[i];
  }
}

try { if (Inst19 <= 1000 && typeof (assertOrdering) != "undefined") {_RecordType("<1867,1881,44>",(assertOrdering)); Inst19++; } } catch(e) {}
function assertOrdering(expected) {
try { if (Inst20 <= 1000 && typeof (expected) != "undefined") {_RecordType("<1882,1890,44>",(expected)); Inst20++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (expected) != "undefined") {_RecordType("<1896,1904,45>",(expected)); Inst21++; } } catch(e) {}
  expected;
try { if (Inst22 <= 1000 && typeof (ordering) != "undefined") {_RecordType("<1908,1916,46>",(ordering)); Inst22++; } } catch(e) {}
  ordering;
}

try { if (Inst23 <= 1000 && typeof (newPromise) != "undefined") {_RecordType("<1930,1940,49>",(newPromise)); Inst23++; } } catch(e) {}
function newPromise(id, fn) {
try { if (Inst24 <= 1000 && typeof (id) != "undefined") {_RecordType("<1941,1943,49>",(id)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (fn) != "undefined") {_RecordType("<1945,1947,49>",(fn)); Inst25++; } } catch(e) {}
  var r;
try { if (Inst26 <= 1000 && typeof (r) != "undefined") {_RecordType("<1957,1958,50>",(r)); Inst26++; } } catch(e) {}
  var t = 1;
try { if (Inst27 <= 1000 && typeof (t) != "undefined") {_RecordType("<1966,1967,51>",(t)); Inst27++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (Promise) != "undefined") {_RecordType("<1993,2000,52>",(Promise)); Inst29++; } } catch(e) {}
  var promise = new Promise(function (resolve) {
try { if (Inst30 <= 1000 && typeof (resolve) != "undefined") {_RecordType("<2011,2018,52>",(resolve)); Inst30++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (resolve) != "undefined") {_RecordType("<2030,2037,53>",(resolve)); Inst32++; } } catch(e) {}
    r = resolve;
try { if (Inst31 <= 1000 && typeof (r) != "undefined") {_RecordType("<2026,2027,53>",(r)); Inst31++; } } catch(e) {}

try { if (Inst33 <= 1000 && typeof (fn) != "undefined") {_RecordType("<2048,2050,55>",(fn)); Inst33++; } } catch(e) {}
    if (fn) {
try { if (Inst34 <= 1000 && typeof (fn) != "undefined") {_RecordType("<2060,2062,56>",(fn)); Inst34++; } } catch(e) {}
      fn();
    }
  });
try { if (Inst28 <= 1000 && typeof (promise) != "undefined") {_RecordType("<1979,1986,52>",(promise)); Inst28++; } } catch(e) {}
try { if (Inst36 <= 1000 && typeof (promise.then) != "undefined") {_RecordType("<2091,2103,59>",(promise.then)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (promise) != "undefined") {_RecordType("<2091,2098,59>",(promise)); Inst37++; } } catch(e) {}
  var next = promise.then(function (value) {
try { if (Inst38 <= 1000 && typeof (value) != "undefined") {_RecordType("<2114,2119,59>",(value)); Inst38++; } } catch(e) {}
try { if (Inst39 <= 1000 && typeof (ordering.push) != "undefined") {_RecordType("<2127,2140,60>",(ordering.push)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (ordering) != "undefined") {_RecordType("<2127,2135,60>",(ordering)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (id) != "undefined") {_RecordType("<2147,2149,60>",(id)); Inst41++; } } catch(e) {}
    ordering.push('p' + id);
try { if (Inst42 <= 1000 && typeof (value) != "undefined") {_RecordType("<2163,2168,61>",(value)); Inst42++; } } catch(e) {}
    return value;
  });
try { if (Inst35 <= 1000 && typeof (next) != "undefined") {_RecordType("<2084,2088,59>",(next)); Inst35++; } } catch(e) {}
try { if (Inst43 <= 1000 && typeof (r) != "undefined") {_RecordType("<2200,2201,64>",(r)); Inst43++; } } catch(e) {}
  return {
    resolve: r,
    then: function (fn) {
try { if (Inst44 <= 1000 && typeof (fn) != "undefined") {_RecordType("<2223,2225,65>",(fn)); Inst44++; } } catch(e) {}
try { if (Inst46 <= 1000 && typeof (next.then) != "undefined") {_RecordType("<2242,2251,66>",(next.then)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (next) != "undefined") {_RecordType("<2242,2246,66>",(next)); Inst47++; } } catch(e) {}
      next = next.then(function (value) {
try { if (Inst48 <= 1000 && typeof (value) != "undefined") {_RecordType("<2262,2267,66>",(value)); Inst48++; } } catch(e) {}
try { if (Inst49 <= 1000 && typeof (ordering.push) != "undefined") {_RecordType("<2279,2292,67>",(ordering.push)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (ordering) != "undefined") {_RecordType("<2279,2287,67>",(ordering)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (id) != "undefined") {_RecordType("<2299,2301,67>",(id)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (t) != "undefined") {_RecordType("<2310,2311,67>",(t)); Inst52++; } } catch(e) {}
        ordering.push('p' + id + ':' + t++);
try { if (Inst53 <= 1000 && typeof (fn) != "undefined") {_RecordType("<2331,2333,68>",(fn)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (fn) != "undefined") {_RecordType("<2336,2338,68>",(fn)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (value) != "undefined") {_RecordType("<2339,2344,68>",(value)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (value) != "undefined") {_RecordType("<2348,2353,68>",(value)); Inst56++; } } catch(e) {}
        return fn ? fn(value) : value;
      });
try { if (Inst45 <= 1000 && typeof (next) != "undefined") {_RecordType("<2235,2239,66>",(next)); Inst45++; } } catch(e) {}
      return this;
    }
  };
}

try { if (Inst57 <= 1000 && typeof (PromiseThens) != "undefined") {_RecordType("<2408,2420,75>",(PromiseThens)); Inst57++; } } catch(e) {}
(function PromiseThens() {
try { if (Inst58 <= 1000 && typeof (reset) != "undefined") {_RecordType("<2427,2432,76>",(reset)); Inst58++; } } catch(e) {}
  reset();
try { if (Inst60 <= 1000 && typeof (newPromise(1).then) != "undefined") {_RecordType("<2447,2465,77>",(newPromise(1).then)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (newPromise) != "undefined") {_RecordType("<2447,2457,77>",(newPromise)); Inst61++; } } catch(e) {}
  var p1 = newPromise(1).then();
try { if (Inst59 <= 1000 && typeof (p1) != "undefined") {_RecordType("<2442,2444,77>",(p1)); Inst59++; } } catch(e) {}
try { if (Inst63 <= 1000 && typeof (newPromise(2).then) != "undefined") {_RecordType("<2480,2498,78>",(newPromise(2).then)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (newPromise) != "undefined") {_RecordType("<2480,2490,78>",(newPromise)); Inst64++; } } catch(e) {}
  var p2 = newPromise(2).then();
try { if (Inst62 <= 1000 && typeof (p2) != "undefined") {_RecordType("<2475,2477,78>",(p2)); Inst62++; } } catch(e) {}
try { if (Inst65 <= 1000 && typeof (p1.resolve) != "undefined") {_RecordType("<2504,2514,79>",(p1.resolve)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (p1) != "undefined") {_RecordType("<2504,2506,79>",(p1)); Inst66++; } } catch(e) {}
  p1.resolve();
try { if (Inst67 <= 1000 && typeof (p2.resolve) != "undefined") {_RecordType("<2520,2530,80>",(p2.resolve)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (p2) != "undefined") {_RecordType("<2520,2522,80>",(p2)); Inst68++; } } catch(e) {}
  p2.resolve();
  ['p1', 'p2', 'p1:1', 'p2:1'];
})();

