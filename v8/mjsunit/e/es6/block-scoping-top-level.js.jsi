var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2015 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
'use strict';

let xxx = 1;
try { if (Inst0 <= 1000 && typeof (xxx) != "undefined") {_RecordType("<186,189,6>",(xxx)); Inst0++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<204,213,7>",(undefined)); Inst2++; } } catch(e) {}
let ff = undefined;
try { if (Inst1 <= 1000 && typeof (ff) != "undefined") {_RecordType("<199,201,7>",(ff)); Inst1++; } } catch(e) {}
{
try { if (Inst4 <= 1000 && typeof (xxx) != "undefined") {_RecordType("<233,236,9>",(xxx)); Inst4++; } } catch(e) {}
  let inner_x = xxx;
try { if (Inst3 <= 1000 && typeof (inner_x) != "undefined") {_RecordType("<223,230,9>",(inner_x)); Inst3++; } } catch(e) {}

  ff = function () {
try { if (Inst6 <= 1000 && typeof (inner_x) != "undefined") {_RecordType("<271,278,12>",(inner_x)); Inst6++; } } catch(e) {}
    return inner_x;
  };
try { if (Inst5 <= 1000 && typeof (ff) != "undefined") {_RecordType("<241,243,11>",(ff)); Inst5++; } } catch(e) {}
}
1;
try { if (Inst7 <= 1000 && typeof (ff) != "undefined") {_RecordType("<290,292,16>",(ff)); Inst7++; } } catch(e) {}
ff();
xxx = 42;
try { if (Inst8 <= 1000 && typeof (xxx) != "undefined") {_RecordType("<296,299,17>",(xxx)); Inst8++; } } catch(e) {}
{
  ff = function () {
try { if (Inst10 <= 1000 && typeof (inner_x1) != "undefined") {_RecordType("<340,348,20>",(inner_x1)); Inst10++; } } catch(e) {}
    return inner_x1;
  };
try { if (Inst9 <= 1000 && typeof (ff) != "undefined") {_RecordType("<310,312,19>",(ff)); Inst9++; } } catch(e) {}

try { if (Inst12 <= 1000 && typeof (xxx) != "undefined") {_RecordType("<373,376,23>",(xxx)); Inst12++; } } catch(e) {}
  let inner_x1 = xxx;
try { if (Inst11 <= 1000 && typeof (inner_x1) != "undefined") {_RecordType("<362,370,23>",(inner_x1)); Inst11++; } } catch(e) {}
}
42;
try { if (Inst13 <= 1000 && typeof (ff) != "undefined") {_RecordType("<384,386,26>",(ff)); Inst13++; } } catch(e) {}
ff();
xxx = 31;
try { if (Inst14 <= 1000 && typeof (xxx) != "undefined") {_RecordType("<390,393,27>",(xxx)); Inst14++; } } catch(e) {}
{
try { if (Inst16 <= 1000 && typeof (xxx) != "undefined") {_RecordType("<419,422,29>",(xxx)); Inst16++; } } catch(e) {}
  let inner_x1 = xxx;
try { if (Inst15 <= 1000 && typeof (inner_x1) != "undefined") {_RecordType("<408,416,29>",(inner_x1)); Inst15++; } } catch(e) {}

try { if (Inst18 <= 1000 && typeof (e) != "undefined") {_RecordType("<467,468,33>",(e)); Inst18++; } } catch(e) {}
  try {
try { if (Inst17 <= 1000 && typeof (Error) != "undefined") {_RecordType("<447,452,32>",(Error)); Inst17++; } } catch(e) {}
    throw new Error();
  } catch (e) {
    ff = function () {
try { if (Inst20 <= 1000 && typeof (inner_x1) != "undefined") {_RecordType("<508,516,35>",(inner_x1)); Inst20++; } } catch(e) {}
      return inner_x1;
    };
try { if (Inst19 <= 1000 && typeof (ff) != "undefined") {_RecordType("<476,478,34>",(ff)); Inst19++; } } catch(e) {}
  }
}
31;
try { if (Inst21 <= 1000 && typeof (ff) != "undefined") {_RecordType("<535,537,40>",(ff)); Inst21++; } } catch(e) {}
ff();

