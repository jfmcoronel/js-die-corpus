var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2018 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
try { if (Inst1 <= 1000 && typeof (Float64Array) != "undefined") {_RecordType("<197,209,4>",(Float64Array)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Float32Array) != "undefined") {_RecordType("<211,223,4>",(Float32Array)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Uint32Array) != "undefined") {_RecordType("<225,236,4>",(Uint32Array)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Int32Array) != "undefined") {_RecordType("<238,248,4>",(Int32Array)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Uint16Array) != "undefined") {_RecordType("<250,261,4>",(Uint16Array)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Int16Array) != "undefined") {_RecordType("<263,273,4>",(Int16Array)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Uint8Array) != "undefined") {_RecordType("<275,285,4>",(Uint8Array)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Uint8ClampedArray) != "undefined") {_RecordType("<287,304,4>",(Uint8ClampedArray)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Int8Array) != "undefined") {_RecordType("<306,315,4>",(Int8Array)); Inst9++; } } catch(e) {}
let TypedArrayConstructors = [Float64Array, Float32Array, Uint32Array, Int32Array, Uint16Array, Int16Array, Uint8Array, Uint8ClampedArray, Int8Array]; // Test KeyedStore in uninitialized and monomorphic states.
try { if (Inst0 <= 1000 && typeof (TypedArrayConstructors) != "undefined") {_RecordType("<171,193,4>",(TypedArrayConstructors)); Inst0++; } } catch(e) {}

for (let C of TypedArrayConstructors) {
try { if (Inst10 <= 1000 && typeof (C) != "undefined") {_RecordType("<388,389,6>",(C)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (TypedArrayConstructors) != "undefined") {_RecordType("<393,415,6>",(TypedArrayConstructors)); Inst11++; } } catch(e) {}
  let keyedSta = function (array) {
try { if (Inst13 <= 1000 && typeof (array) != "undefined") {_RecordType("<446,451,7>",(array)); Inst13++; } } catch(e) {}
    var didRun = false;
try { if (Inst14 <= 1000 && typeof (didRun) != "undefined") {_RecordType("<463,469,8>",(didRun)); Inst14++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (valueOf) != "undefined") {_RecordType("<502,509,10>",(valueOf)); Inst17++; } } catch(e) {}
    array[0] = {
      valueOf() {
        didRun = true;
try { if (Inst18 <= 1000 && typeof (didRun) != "undefined") {_RecordType("<522,528,11>",(didRun)); Inst18++; } } catch(e) {}
        return 42;
      }

    };
try { if (Inst15 <= 1000 && typeof (array[0]) != "undefined") {_RecordType("<483,491,9>",(array[0])); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (array) != "undefined") {_RecordType("<483,488,9>",(array)); Inst16++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (didRun) != "undefined") {_RecordType("<591,597,17>",(didRun)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (array) != "undefined") {_RecordType("<605,610,18>",(array)); Inst20++; } } catch(e) {}
    return {
      didRun,
      array
    };
  };
try { if (Inst12 <= 1000 && typeof (keyedSta) != "undefined") {_RecordType("<425,433,7>",(keyedSta)); Inst12++; } } catch(e) {}

  for (var i = 0; i < 3; ++i) {
try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<635,636,22>",(i)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<642,643,22>",(i)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<651,652,22>",(i)); Inst23++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (keyedSta) != "undefined") {_RecordType("<700,708,26>",(keyedSta)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (C) != "undefined") {_RecordType("<713,714,26>",(C)); Inst27++; } } catch(e) {}
    var {
      didRun,
      array
    } = keyedSta(new C(1));
try { if (Inst24 <= 1000 && typeof (didRun) != "undefined") {_RecordType("<672,678,24>",(didRun)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (array) != "undefined") {_RecordType("<686,691,25>",(array)); Inst25++; } } catch(e) {}
try { if (Inst28 <= 1000 && typeof (didRun) != "undefined") {_RecordType("<724,730,27>",(didRun)); Inst28++; } } catch(e) {}
    didRun;
try { if (Inst29 <= 1000 && typeof (array[0]) != "undefined") {_RecordType("<736,744,28>",(array[0])); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (array) != "undefined") {_RecordType("<736,741,28>",(array)); Inst30++; } } catch(e) {}
    array[0];
    42;
    // OOB store
    // FIXME: Throw a TypeError when storing OOB in a TypedArray.
try { if (Inst32 <= 1000 && typeof (keyedSta) != "undefined") {_RecordType("<868,876,34>",(keyedSta)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (C) != "undefined") {_RecordType("<881,882,34>",(C)); Inst33++; } } catch(e) {}
    var {
      didRun
    } = keyedSta(new C());
try { if (Inst31 <= 1000 && typeof (didRun) != "undefined") {_RecordType("<853,859,33>",(didRun)); Inst31++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof (didRun) != "undefined") {_RecordType("<891,897,35>",(didRun)); Inst34++; } } catch(e) {}
    didRun;
  }
} // Test KeyedStore in polymorphic and megamorphic states.


do {
  let keyedSta = function (array) {
try { if (Inst36 <= 1000 && typeof (array) != "undefined") {_RecordType("<997,1002,41>",(array)); Inst36++; } } catch(e) {}
    var didRun = false;
try { if (Inst37 <= 1000 && typeof (didRun) != "undefined") {_RecordType("<1014,1020,42>",(didRun)); Inst37++; } } catch(e) {}
try { if (Inst40 <= 1000 && typeof (valueOf) != "undefined") {_RecordType("<1053,1060,44>",(valueOf)); Inst40++; } } catch(e) {}
    array[0] = {
      valueOf() {
        didRun = true;
try { if (Inst41 <= 1000 && typeof (didRun) != "undefined") {_RecordType("<1073,1079,45>",(didRun)); Inst41++; } } catch(e) {}
        return 42;
      }

    };
try { if (Inst38 <= 1000 && typeof (array[0]) != "undefined") {_RecordType("<1034,1042,43>",(array[0])); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (array) != "undefined") {_RecordType("<1034,1039,43>",(array)); Inst39++; } } catch(e) {}
try { if (Inst42 <= 1000 && typeof (didRun) != "undefined") {_RecordType("<1142,1148,51>",(didRun)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (array) != "undefined") {_RecordType("<1156,1161,52>",(array)); Inst43++; } } catch(e) {}
    return {
      didRun,
      array
    };
  };
try { if (Inst35 <= 1000 && typeof (keyedSta) != "undefined") {_RecordType("<976,984,41>",(keyedSta)); Inst35++; } } catch(e) {}

  for (var i = 0; i < 3; ++i) {
try { if (Inst44 <= 1000 && typeof (i) != "undefined") {_RecordType("<1186,1187,56>",(i)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (i) != "undefined") {_RecordType("<1193,1194,56>",(i)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (i) != "undefined") {_RecordType("<1202,1203,56>",(i)); Inst46++; } } catch(e) {}
    for (var C of TypedArrayConstructors) {
try { if (Inst47 <= 1000 && typeof (C) != "undefined") {_RecordType("<1220,1221,57>",(C)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (TypedArrayConstructors) != "undefined") {_RecordType("<1225,1247,57>",(TypedArrayConstructors)); Inst48++; } } catch(e) {}
try { if (Inst51 <= 1000 && typeof (keyedSta) != "undefined") {_RecordType("<1303,1311,61>",(keyedSta)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (C) != "undefined") {_RecordType("<1316,1317,61>",(C)); Inst52++; } } catch(e) {}
      var {
        didRun,
        array
      } = keyedSta(new C(1));
try { if (Inst49 <= 1000 && typeof (didRun) != "undefined") {_RecordType("<1271,1277,59>",(didRun)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (array) != "undefined") {_RecordType("<1287,1292,60>",(array)); Inst50++; } } catch(e) {}
try { if (Inst53 <= 1000 && typeof (didRun) != "undefined") {_RecordType("<1329,1335,62>",(didRun)); Inst53++; } } catch(e) {}
      didRun;
try { if (Inst54 <= 1000 && typeof (array[0]) != "undefined") {_RecordType("<1343,1351,63>",(array[0])); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (array) != "undefined") {_RecordType("<1343,1348,63>",(array)); Inst55++; } } catch(e) {}
      array[0];
      42;
      // OOB store
      // FIXME: Throw a TypeError when storing OOB in a TypedArray.
try { if (Inst57 <= 1000 && typeof (keyedSta) != "undefined") {_RecordType("<1487,1495,69>",(keyedSta)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (C) != "undefined") {_RecordType("<1500,1501,69>",(C)); Inst58++; } } catch(e) {}
      var {
        didRun
      } = keyedSta(new C());
try { if (Inst56 <= 1000 && typeof (didRun) != "undefined") {_RecordType("<1470,1476,68>",(didRun)); Inst56++; } } catch(e) {}
try { if (Inst59 <= 1000 && typeof (didRun) != "undefined") {_RecordType("<1512,1518,70>",(didRun)); Inst59++; } } catch(e) {}
      didRun;
    }
  }
} while (false);

