var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2016 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax
// Overwriting Array[Symbol.species] updates the protector
let x = [];
try { if (Inst0 <= 1000 && typeof (x) != "undefined") {_RecordType("<263,264,6>",(x)); Inst0++; } } catch(e) {}
try { if (Inst1 <= 1000 && typeof (Array) != "undefined") {_RecordType("<271,276,7>",(Array)); Inst1++; } } catch(e) {}
Array;
try { if (Inst2 <= 1000 && typeof (x.map(() => {
  ;
}).constructor) != "undefined") {_RecordType("<278,310,8>",(x.map(() => {
  ;
}).constructor)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (x.map) != "undefined") {_RecordType("<278,283,8>",(x.map)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (x) != "undefined") {_RecordType("<278,279,8>",(x)); Inst4++; } } catch(e) {}
x.map(() => {
  ;
}).constructor;
try { if (Inst5 <= 1000 && typeof (Array) != "undefined") {_RecordType("<312,317,11>",(Array)); Inst5++; } } catch(e) {}
Array;
try { if (Inst6 <= 1000 && typeof (x.filter(() => {
  ;
}).constructor) != "undefined") {_RecordType("<319,354,12>",(x.filter(() => {
  ;
}).constructor)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (x.filter) != "undefined") {_RecordType("<319,327,12>",(x.filter)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (x) != "undefined") {_RecordType("<319,320,12>",(x)); Inst8++; } } catch(e) {}
x.filter(() => {
  ;
}).constructor;
try { if (Inst9 <= 1000 && typeof (Array) != "undefined") {_RecordType("<356,361,15>",(Array)); Inst9++; } } catch(e) {}
Array;
try { if (Inst10 <= 1000 && typeof (x.slice().constructor) != "undefined") {_RecordType("<363,384,16>",(x.slice().constructor)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (x.slice) != "undefined") {_RecordType("<363,370,16>",(x.slice)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (x) != "undefined") {_RecordType("<363,364,16>",(x)); Inst12++; } } catch(e) {}
x.slice().constructor;
try { if (Inst13 <= 1000 && typeof (Array) != "undefined") {_RecordType("<386,391,17>",(Array)); Inst13++; } } catch(e) {}
Array;
try { if (Inst14 <= 1000 && typeof (x.splice().constructor) != "undefined") {_RecordType("<393,415,18>",(x.splice().constructor)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (x.splice) != "undefined") {_RecordType("<393,401,18>",(x.splice)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (x) != "undefined") {_RecordType("<393,394,18>",(x)); Inst16++; } } catch(e) {}
x.splice().constructor;
try { if (Inst17 <= 1000 && typeof (Array) != "undefined") {_RecordType("<417,422,19>",(Array)); Inst17++; } } catch(e) {}
Array;
try { if (Inst18 <= 1000 && typeof (x.concat([1]).constructor) != "undefined") {_RecordType("<424,449,20>",(x.concat([1]).constructor)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (x.concat) != "undefined") {_RecordType("<424,432,20>",(x.concat)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (x) != "undefined") {_RecordType("<424,425,20>",(x)); Inst20++; } } catch(e) {}
x.concat([1]).constructor;
1;
try { if (Inst21 <= 1000 && typeof (x.concat([1])[0]) != "undefined") {_RecordType("<454,470,22>",(x.concat([1])[0])); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (x.concat) != "undefined") {_RecordType("<454,462,22>",(x.concat)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (x) != "undefined") {_RecordType("<454,455,22>",(x)); Inst23++; } } catch(e) {}
x.concat([1])[0];

try { if (Inst25 <= 1000 && typeof (Array) != "undefined") {_RecordType("<495,500,24>",(Array)); Inst25++; } } catch(e) {}
class MyArray extends Array {}
try { if (Inst24 <= 1000 && typeof (MyArray) != "undefined") {_RecordType("<479,486,24>",(MyArray)); Inst24++; } } catch(e) {}

try { if (Inst26 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<505,526,26>",(Object.defineProperty)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (Object) != "undefined") {_RecordType("<505,511,26>",(Object)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (Array) != "undefined") {_RecordType("<527,532,26>",(Array)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (Symbol.species) != "undefined") {_RecordType("<534,548,26>",(Symbol.species)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<534,540,26>",(Symbol)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (MyArray) != "undefined") {_RecordType("<561,568,27>",(MyArray)); Inst31++; } } catch(e) {}
Object.defineProperty(Array, Symbol.species, {
  value: MyArray
});
try { if (Inst32 <= 1000 && typeof (MyArray) != "undefined") {_RecordType("<573,580,29>",(MyArray)); Inst32++; } } catch(e) {}
MyArray;
try { if (Inst33 <= 1000 && typeof (x.map(() => {
  ;
}).constructor) != "undefined") {_RecordType("<582,614,30>",(x.map(() => {
  ;
}).constructor)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (x.map) != "undefined") {_RecordType("<582,587,30>",(x.map)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (x) != "undefined") {_RecordType("<582,583,30>",(x)); Inst35++; } } catch(e) {}
x.map(() => {
  ;
}).constructor;
try { if (Inst36 <= 1000 && typeof (MyArray) != "undefined") {_RecordType("<616,623,33>",(MyArray)); Inst36++; } } catch(e) {}
MyArray;
try { if (Inst37 <= 1000 && typeof (x.filter(() => {
  ;
}).constructor) != "undefined") {_RecordType("<625,660,34>",(x.filter(() => {
  ;
}).constructor)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (x.filter) != "undefined") {_RecordType("<625,633,34>",(x.filter)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (x) != "undefined") {_RecordType("<625,626,34>",(x)); Inst39++; } } catch(e) {}
x.filter(() => {
  ;
}).constructor;
try { if (Inst40 <= 1000 && typeof (MyArray) != "undefined") {_RecordType("<662,669,37>",(MyArray)); Inst40++; } } catch(e) {}
MyArray;
try { if (Inst41 <= 1000 && typeof (x.slice().constructor) != "undefined") {_RecordType("<671,692,38>",(x.slice().constructor)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (x.slice) != "undefined") {_RecordType("<671,678,38>",(x.slice)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (x) != "undefined") {_RecordType("<671,672,38>",(x)); Inst43++; } } catch(e) {}
x.slice().constructor;
try { if (Inst44 <= 1000 && typeof (MyArray) != "undefined") {_RecordType("<694,701,39>",(MyArray)); Inst44++; } } catch(e) {}
MyArray;
try { if (Inst45 <= 1000 && typeof (x.splice().constructor) != "undefined") {_RecordType("<703,725,40>",(x.splice().constructor)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (x.splice) != "undefined") {_RecordType("<703,711,40>",(x.splice)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (x) != "undefined") {_RecordType("<703,704,40>",(x)); Inst47++; } } catch(e) {}
x.splice().constructor;
try { if (Inst48 <= 1000 && typeof (MyArray) != "undefined") {_RecordType("<727,734,41>",(MyArray)); Inst48++; } } catch(e) {}
MyArray;
try { if (Inst49 <= 1000 && typeof (x.concat([1]).constructor) != "undefined") {_RecordType("<736,761,42>",(x.concat([1]).constructor)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (x.concat) != "undefined") {_RecordType("<736,744,42>",(x.concat)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (x) != "undefined") {_RecordType("<736,737,42>",(x)); Inst51++; } } catch(e) {}
x.concat([1]).constructor;
1;
try { if (Inst52 <= 1000 && typeof (x.concat([1])[0]) != "undefined") {_RecordType("<766,782,44>",(x.concat([1])[0])); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (x.concat) != "undefined") {_RecordType("<766,774,44>",(x.concat)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (x) != "undefined") {_RecordType("<766,767,44>",(x)); Inst54++; } } catch(e) {}
x.concat([1])[0];

