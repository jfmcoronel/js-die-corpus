var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2018 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax --opt
try { if (Inst0 <= 1000 && typeof (TestMapConstructorEntrySideEffect) != "undefined") {_RecordType("<215,248,5>",(TestMapConstructorEntrySideEffect)); Inst0++; } } catch(e) {}
function TestMapConstructorEntrySideEffect(ctor) {
try { if (Inst1 <= 1000 && typeof (ctor) != "undefined") {_RecordType("<249,253,5>",(ctor)); Inst1++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (ctor.prototype.set) != "undefined") {_RecordType("<288,306,6>",(ctor.prototype.set)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (ctor.prototype) != "undefined") {_RecordType("<288,302,6>",(ctor.prototype)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (ctor) != "undefined") {_RecordType("<288,292,6>",(ctor)); Inst5++; } } catch(e) {}
  const originalPrototypeSet = ctor.prototype.set;
try { if (Inst2 <= 1000 && typeof (originalPrototypeSet) != "undefined") {_RecordType("<265,285,6>",(originalPrototypeSet)); Inst2++; } } catch(e) {}
  const k1 = {};
try { if (Inst6 <= 1000 && typeof (k1) != "undefined") {_RecordType("<316,318,7>",(k1)); Inst6++; } } catch(e) {}
  const k2 = {};
try { if (Inst7 <= 1000 && typeof (k2) != "undefined") {_RecordType("<333,335,8>",(k2)); Inst7++; } } catch(e) {}
  let callCount = 0;
try { if (Inst8 <= 1000 && typeof (callCount) != "undefined") {_RecordType("<348,357,9>",(callCount)); Inst8++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<380,401,10>",(Object.defineProperty)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Object) != "undefined") {_RecordType("<380,386,10>",(Object)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (get) != "undefined") {_RecordType("<420,423,11>",(get)); Inst12++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (k2) != "undefined") {_RecordType("<584,586,20>",(k2)); Inst18++; } } catch(e) {}
  const input = [Object.defineProperty([, 1], "0", {
    get() {
      // Verify continuation retains original set function
      ctor.prototype.set = () => {
try { if (Inst16 <= 1000 && typeof (callCount) != "undefined") {_RecordType("<530,539,14>",(callCount)); Inst16++; } } catch(e) {}
        callCount++;
      };
try { if (Inst13 <= 1000 && typeof (ctor.prototype.set) != "undefined") {_RecordType("<493,511,13>",(ctor.prototype.set)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (ctor.prototype) != "undefined") {_RecordType("<493,507,13>",(ctor.prototype)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (ctor) != "undefined") {_RecordType("<493,497,13>",(ctor)); Inst15++; } } catch(e) {}

try { if (Inst17 <= 1000 && typeof (k1) != "undefined") {_RecordType("<566,568,17>",(k1)); Inst17++; } } catch(e) {}
      return k1;
    }

  }), [k2, 2]];
try { if (Inst9 <= 1000 && typeof (input) != "undefined") {_RecordType("<371,376,10>",(input)); Inst9++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (ctor) != "undefined") {_RecordType("<611,615,21>",(ctor)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (input) != "undefined") {_RecordType("<616,621,21>",(input)); Inst21++; } } catch(e) {}
  const col = new ctor(input);
try { if (Inst19 <= 1000 && typeof (col) != "undefined") {_RecordType("<601,604,21>",(col)); Inst19++; } } catch(e) {}
  0;
try { if (Inst22 <= 1000 && typeof (callCount) != "undefined") {_RecordType("<631,640,23>",(callCount)); Inst22++; } } catch(e) {}
  callCount;

try { if (Inst23 <= 1000 && typeof (col) != "undefined") {_RecordType("<659,662,25>",(col)); Inst23++; } } catch(e) {}
  if ('size' in col) {
    2;
try { if (Inst24 <= 1000 && typeof (col.size) != "undefined") {_RecordType("<677,685,27>",(col.size)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (col) != "undefined") {_RecordType("<677,680,27>",(col)); Inst25++; } } catch(e) {}
    col.size;
  }

try { if (Inst26 <= 1000 && typeof (col.has) != "undefined") {_RecordType("<694,701,30>",(col.has)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (col) != "undefined") {_RecordType("<694,697,30>",(col)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (k1) != "undefined") {_RecordType("<702,704,30>",(k1)); Inst28++; } } catch(e) {}
  col.has(k1);
try { if (Inst29 <= 1000 && typeof (col.has) != "undefined") {_RecordType("<709,716,31>",(col.has)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (col) != "undefined") {_RecordType("<709,712,31>",(col)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (k2) != "undefined") {_RecordType("<717,719,31>",(k2)); Inst31++; } } catch(e) {}
  col.has(k2);
try { if (Inst33 <= 1000 && typeof (ctor) != "undefined") {_RecordType("<741,745,32>",(ctor)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (input) != "undefined") {_RecordType("<746,751,32>",(input)); Inst34++; } } catch(e) {}
  const col2 = new ctor(input);
try { if (Inst32 <= 1000 && typeof (col2) != "undefined") {_RecordType("<730,734,32>",(col2)); Inst32++; } } catch(e) {}
  2;
try { if (Inst35 <= 1000 && typeof (callCount) != "undefined") {_RecordType("<761,770,34>",(callCount)); Inst35++; } } catch(e) {}
  callCount;

try { if (Inst36 <= 1000 && typeof (col) != "undefined") {_RecordType("<789,792,36>",(col)); Inst36++; } } catch(e) {}
  if ('size' in col) {
    0;
try { if (Inst37 <= 1000 && typeof (col2.size) != "undefined") {_RecordType("<807,816,38>",(col2.size)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (col2) != "undefined") {_RecordType("<807,811,38>",(col2)); Inst38++; } } catch(e) {}
    col2.size;
  }

try { if (Inst39 <= 1000 && typeof (col2.has) != "undefined") {_RecordType("<825,833,41>",(col2.has)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (col2) != "undefined") {_RecordType("<825,829,41>",(col2)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (k1) != "undefined") {_RecordType("<834,836,41>",(k1)); Inst41++; } } catch(e) {}
  col2.has(k1);
try { if (Inst42 <= 1000 && typeof (col2.has) != "undefined") {_RecordType("<841,849,42>",(col2.has)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (col2) != "undefined") {_RecordType("<841,845,42>",(col2)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (k2) != "undefined") {_RecordType("<850,852,42>",(k2)); Inst44++; } } catch(e) {}
  col2.has(k2);
try { if (Inst48 <= 1000 && typeof (originalPrototypeSet) != "undefined") {_RecordType("<878,898,43>",(originalPrototypeSet)); Inst48++; } } catch(e) {}
  ctor.prototype.set = originalPrototypeSet;
try { if (Inst45 <= 1000 && typeof (ctor.prototype.set) != "undefined") {_RecordType("<857,875,43>",(ctor.prototype.set)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (ctor.prototype) != "undefined") {_RecordType("<857,871,43>",(ctor.prototype)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (ctor) != "undefined") {_RecordType("<857,861,43>",(ctor)); Inst47++; } } catch(e) {}
}

try { if (Inst49 <= 1000 && typeof (TestMapConstructorEntrySideEffect) != "undefined") {_RecordType("<903,936,46>",(TestMapConstructorEntrySideEffect)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (Map) != "undefined") {_RecordType("<937,940,46>",(Map)); Inst50++; } } catch(e) {}
TestMapConstructorEntrySideEffect(Map);
try { if (Inst51 <= 1000 && typeof (TestMapConstructorEntrySideEffect) != "undefined") {_RecordType("<943,976,47>",(TestMapConstructorEntrySideEffect)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (Map) != "undefined") {_RecordType("<977,980,47>",(Map)); Inst52++; } } catch(e) {}
TestMapConstructorEntrySideEffect(Map);
try { if (Inst53 <= 1000 && typeof (TestMapConstructorEntrySideEffect) != "undefined") {_RecordType("<983,1016,48>",(TestMapConstructorEntrySideEffect)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (Map) != "undefined") {_RecordType("<1017,1020,48>",(Map)); Inst54++; } } catch(e) {}
TestMapConstructorEntrySideEffect(Map);
try { if (Inst55 <= 1000 && typeof (TestMapConstructorEntrySideEffect) != "undefined") {_RecordType("<1023,1056,49>",(TestMapConstructorEntrySideEffect)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (Map) != "undefined") {_RecordType("<1057,1060,49>",(Map)); Inst56++; } } catch(e) {}
TestMapConstructorEntrySideEffect(Map);
try { if (Inst57 <= 1000 && typeof (TestMapConstructorEntrySideEffect) != "undefined") {_RecordType("<1063,1096,50>",(TestMapConstructorEntrySideEffect)); Inst57++; } } catch(e) {}
TestMapConstructorEntrySideEffect();
try { if (Inst58 <= 1000 && typeof (TestMapConstructorEntrySideEffect) != "undefined") {_RecordType("<1100,1133,51>",(TestMapConstructorEntrySideEffect)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (WeakMap) != "undefined") {_RecordType("<1134,1141,51>",(WeakMap)); Inst59++; } } catch(e) {}
TestMapConstructorEntrySideEffect(WeakMap);
try { if (Inst60 <= 1000 && typeof (TestMapConstructorEntrySideEffect) != "undefined") {_RecordType("<1144,1177,52>",(TestMapConstructorEntrySideEffect)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (WeakMap) != "undefined") {_RecordType("<1178,1185,52>",(WeakMap)); Inst61++; } } catch(e) {}
TestMapConstructorEntrySideEffect(WeakMap);
try { if (Inst62 <= 1000 && typeof (TestMapConstructorEntrySideEffect) != "undefined") {_RecordType("<1188,1221,53>",(TestMapConstructorEntrySideEffect)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (WeakMap) != "undefined") {_RecordType("<1222,1229,53>",(WeakMap)); Inst63++; } } catch(e) {}
TestMapConstructorEntrySideEffect(WeakMap);
try { if (Inst64 <= 1000 && typeof (TestMapConstructorEntrySideEffect) != "undefined") {_RecordType("<1232,1265,54>",(TestMapConstructorEntrySideEffect)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (WeakMap) != "undefined") {_RecordType("<1266,1273,54>",(WeakMap)); Inst65++; } } catch(e) {}
TestMapConstructorEntrySideEffect(WeakMap);
try { if (Inst66 <= 1000 && typeof (TestMapConstructorEntrySideEffect) != "undefined") {_RecordType("<1276,1309,55>",(TestMapConstructorEntrySideEffect)); Inst66++; } } catch(e) {}
TestMapConstructorEntrySideEffect();

