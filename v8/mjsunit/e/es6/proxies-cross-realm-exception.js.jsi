var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2015 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax
// Do not read out the prototype from a cross-realm object.
__proto__ = {};
try { if (Inst0 <= 1000 && typeof (__proto__) != "undefined") {_RecordType("<260,269,6>",(__proto__)); Inst0++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<292,297,7>",(Proxy)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (getPrototypeOf) != "undefined") {_RecordType("<306,320,8>",(getPrototypeOf)); Inst3++; } } catch(e) {}
__proto__ = new Proxy({}, {
  getPrototypeOf() {}

}); // Test that the instannceof check works in optimized code.
try { if (Inst1 <= 1000 && typeof (__proto__) != "undefined") {_RecordType("<276,285,7>",(__proto__)); Inst1++; } } catch(e) {}

try { if (Inst4 <= 1000 && typeof (test) != "undefined") {_RecordType("<392,396,12>",(test)); Inst4++; } } catch(e) {}
test();
try { if (Inst5 <= 1000 && typeof (test) != "undefined") {_RecordType("<400,404,13>",(test)); Inst5++; } } catch(e) {}
test();
try { if (Inst6 <= 1000 && typeof (test) != "undefined") {_RecordType("<408,412,14>",(test)); Inst6++; } } catch(e) {}
test();
try { if (Inst7 <= 1000 && typeof (test) != "undefined") {_RecordType("<416,420,15>",(test)); Inst7++; } } catch(e) {}
test();
__proto__ = {};
try { if (Inst8 <= 1000 && typeof (__proto__) != "undefined") {_RecordType("<424,433,16>",(__proto__)); Inst8++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<456,461,17>",(Proxy)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (get) != "undefined") {_RecordType("<470,473,18>",(get)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (t) != "undefined") {_RecordType("<474,475,18>",(t)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (p) != "undefined") {_RecordType("<477,478,18>",(p)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (r) != "undefined") {_RecordType("<480,481,18>",(r)); Inst14++; } } catch(e) {}
__proto__ = new Proxy({}, {
  get(t, p, r) {}

});
try { if (Inst9 <= 1000 && typeof (__proto__) != "undefined") {_RecordType("<440,449,17>",(__proto__)); Inst9++; } } catch(e) {}
__proto__ = {};
try { if (Inst15 <= 1000 && typeof (__proto__) != "undefined") {_RecordType("<491,500,21>",(__proto__)); Inst15++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<533,538,22>",(Proxy)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (getPrototypeOf) != "undefined") {_RecordType("<547,561,23>",(getPrototypeOf)); Inst19++; } } catch(e) {}
__proto__.__proto__ = new Proxy({}, {
  getPrototypeOf() {}

}); // 2-level proxy indirection
try { if (Inst16 <= 1000 && typeof (__proto__.__proto__) != "undefined") {_RecordType("<507,526,22>",(__proto__.__proto__)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (__proto__) != "undefined") {_RecordType("<507,516,22>",(__proto__)); Inst17++; } } catch(e) {}

__proto__ = {};
try { if (Inst20 <= 1000 && typeof (__proto__) != "undefined") {_RecordType("<602,611,27>",(__proto__)); Inst20++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<634,639,28>",(Proxy)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<648,653,28>",(Proxy)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (get) != "undefined") {_RecordType("<662,665,29>",(get)); Inst24++; } } catch(e) {}
__proto__ = new Proxy({}, new Proxy({}, {
  get() {}

}));
try { if (Inst21 <= 1000 && typeof (__proto__) != "undefined") {_RecordType("<618,627,28>",(__proto__)); Inst21++; } } catch(e) {}

