var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
var Inst102 = 0;
var Inst103 = 0;
var Inst104 = 0;
var Inst105 = 0;
var Inst106 = 0;
var Inst107 = 0;
var Inst108 = 0;
var Inst109 = 0;
var Inst110 = 0;
var Inst111 = 0;
var Inst112 = 0;
var Inst113 = 0;
var Inst114 = 0;
var Inst115 = 0;
var Inst116 = 0;
var Inst117 = 0;
var Inst118 = 0;
var Inst119 = 0;
var Inst120 = 0;
var Inst121 = 0;
var Inst122 = 0;
var Inst123 = 0;
var Inst124 = 0;
var Inst125 = 0;
var Inst126 = 0;
var Inst127 = 0;
var Inst128 = 0;
var Inst129 = 0;
var Inst130 = 0;
var Inst131 = 0;
var Inst132 = 0;
var Inst133 = 0;
var Inst134 = 0;
var Inst135 = 0;
var Inst136 = 0;
var Inst137 = 0;
var Inst138 = 0;
var Inst139 = 0;
var Inst140 = 0;
var Inst141 = 0;
var Inst142 = 0;
var Inst143 = 0;
var Inst144 = 0;
var Inst145 = 0;
var Inst146 = 0;
var Inst147 = 0;
var Inst148 = 0;
var Inst149 = 0;
var Inst150 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2015 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Array's toString should call the object's own join method, if one exists and
// is callable. Otherwise, just use the original Object.toString function.
// Flags: --allow-natives-syntax
try { if (Inst1 <= 1000 && typeof (Uint8Array) != "undefined") {_RecordType("<385,395,7>",(Uint8Array)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Int8Array) != "undefined") {_RecordType("<397,406,7>",(Int8Array)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Uint16Array) != "undefined") {_RecordType("<408,419,7>",(Uint16Array)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Int16Array) != "undefined") {_RecordType("<421,431,7>",(Int16Array)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Uint32Array) != "undefined") {_RecordType("<433,444,7>",(Uint32Array)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Int32Array) != "undefined") {_RecordType("<446,456,7>",(Int32Array)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Uint8ClampedArray) != "undefined") {_RecordType("<458,475,7>",(Uint8ClampedArray)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Float32Array) != "undefined") {_RecordType("<477,489,7>",(Float32Array)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Float64Array) != "undefined") {_RecordType("<491,503,7>",(Float64Array)); Inst9++; } } catch(e) {}
var typedArrayConstructors = [Uint8Array, Int8Array, Uint16Array, Int16Array, Uint32Array, Int32Array, Uint8ClampedArray, Float32Array, Float64Array];
try { if (Inst0 <= 1000 && typeof (typedArrayConstructors) != "undefined") {_RecordType("<359,381,7>",(typedArrayConstructors)); Inst0++; } } catch(e) {}

for (var constructor of typedArrayConstructors) {
try { if (Inst10 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<516,527,9>",(constructor)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (typedArrayConstructors) != "undefined") {_RecordType("<531,553,9>",(typedArrayConstructors)); Inst11++; } } catch(e) {}
  var success = "[test success]";
try { if (Inst12 <= 1000 && typeof (success) != "undefined") {_RecordType("<563,570,10>",(success)); Inst12++; } } catch(e) {}
  var expectedThis;
try { if (Inst13 <= 1000 && typeof (expectedThis) != "undefined") {_RecordType("<597,609,11>",(expectedThis)); Inst13++; } } catch(e) {}

try { if (Inst14 <= 1000 && typeof (testJoin) != "undefined") {_RecordType("<623,631,13>",(testJoin)); Inst14++; } } catch(e) {}
  function testJoin() {
    0;
try { if (Inst15 <= 1000 && typeof (arguments.length) != "undefined") {_RecordType("<647,663,15>",(arguments.length)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<647,656,15>",(arguments)); Inst16++; } } catch(e) {}
    arguments.length;
try { if (Inst17 <= 1000 && typeof (expectedThis) != "undefined") {_RecordType("<669,681,16>",(expectedThis)); Inst17++; } } catch(e) {}
    expectedThis;
    this;
try { if (Inst18 <= 1000 && typeof (success) != "undefined") {_RecordType("<704,711,18>",(success)); Inst18++; } } catch(e) {}
    return success;
  } // On an Array object.
  // Default case.


try { if (Inst20 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<776,787,23>",(constructor)); Inst20++; } } catch(e) {}
  var a1 = new constructor([1, 2, 3]);
try { if (Inst19 <= 1000 && typeof (a1) != "undefined") {_RecordType("<767,769,23>",(a1)); Inst19++; } } catch(e) {}
  "1,2,3";
try { if (Inst21 <= 1000 && typeof (a1.toString) != "undefined") {_RecordType("<813,824,25>",(a1.toString)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (a1) != "undefined") {_RecordType("<813,815,25>",(a1)); Inst22++; } } catch(e) {}
  a1.toString();
  "1,2,3";
try { if (Inst23 <= 1000 && typeof (a1.join) != "undefined") {_RecordType("<841,848,27>",(a1.join)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (a1) != "undefined") {_RecordType("<841,843,27>",(a1)); Inst24++; } } catch(e) {}
  a1.join();
  "1,2,3";
try { if (Inst25 <= 1000 && typeof (a1.toLocaleString) != "undefined") {_RecordType("<865,882,29>",(a1.toLocaleString)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (a1) != "undefined") {_RecordType("<865,867,29>",(a1)); Inst26++; } } catch(e) {}
  a1.toLocaleString();
  // Non-standard "join" function is called correctly.
try { if (Inst28 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<956,967,31>",(constructor)); Inst28++; } } catch(e) {}
  var a2 = new constructor([1, 2, 3]);
try { if (Inst27 <= 1000 && typeof (a2) != "undefined") {_RecordType("<947,949,31>",(a2)); Inst27++; } } catch(e) {}
try { if (Inst31 <= 1000 && typeof (testJoin) != "undefined") {_RecordType("<992,1000,32>",(testJoin)); Inst31++; } } catch(e) {}
  a2.join = testJoin;
try { if (Inst29 <= 1000 && typeof (a2.join) != "undefined") {_RecordType("<982,989,32>",(a2.join)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (a2) != "undefined") {_RecordType("<982,984,32>",(a2)); Inst30++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (a2) != "undefined") {_RecordType("<1019,1021,33>",(a2)); Inst33++; } } catch(e) {}
  expectedThis = a2;
try { if (Inst32 <= 1000 && typeof (expectedThis) != "undefined") {_RecordType("<1004,1016,33>",(expectedThis)); Inst32++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof (success) != "undefined") {_RecordType("<1025,1032,34>",(success)); Inst34++; } } catch(e) {}
  success;
try { if (Inst35 <= 1000 && typeof (a2.toString) != "undefined") {_RecordType("<1036,1047,35>",(a2.toString)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (a2) != "undefined") {_RecordType("<1036,1038,35>",(a2)); Inst36++; } } catch(e) {}
  a2.toString();
try { if (Inst37 <= 1000 && typeof (success) != "undefined") {_RecordType("<1053,1060,36>",(success)); Inst37++; } } catch(e) {}
  success;
try { if (Inst38 <= 1000 && typeof (a2.join) != "undefined") {_RecordType("<1064,1071,37>",(a2.join)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (a2) != "undefined") {_RecordType("<1064,1066,37>",(a2)); Inst39++; } } catch(e) {}
  a2.join();
  "1,2,3";
try { if (Inst40 <= 1000 && typeof (a2.toLocaleString) != "undefined") {_RecordType("<1088,1105,39>",(a2.toLocaleString)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (a2) != "undefined") {_RecordType("<1088,1090,39>",(a2)); Inst41++; } } catch(e) {}
  a2.toLocaleString();
  // Non-callable join function is ignored and Object.prototype.toString is
  // used instead.
try { if (Inst43 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<1219,1230,42>",(constructor)); Inst43++; } } catch(e) {}
  var a3 = new constructor([1, 2, 3]);
try { if (Inst42 <= 1000 && typeof (a3) != "undefined") {_RecordType("<1210,1212,42>",(a3)); Inst42++; } } catch(e) {}
  a3.join = "not callable";
try { if (Inst44 <= 1000 && typeof (a3.join) != "undefined") {_RecordType("<1245,1252,43>",(a3.join)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (a3) != "undefined") {_RecordType("<1245,1247,43>",(a3)); Inst45++; } } catch(e) {}
  0;
try { if (Inst46 <= 1000 && typeof (a3.toString().search) != "undefined") {_RecordType("<1278,1298,45>",(a3.toString().search)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (a3.toString) != "undefined") {_RecordType("<1278,1289,45>",(a3.toString)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (a3) != "undefined") {_RecordType("<1278,1280,45>",(a3)); Inst48++; } } catch(e) {}
  a3.toString().search(/\[object .+Array\]/);
  // Non-existing join function is treated same as non-callable.
try { if (Inst50 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<1402,1413,47>",(constructor)); Inst50++; } } catch(e) {}
  var a4 = new constructor([1, 2, 3]);
try { if (Inst49 <= 1000 && typeof (a4) != "undefined") {_RecordType("<1393,1395,47>",(a4)); Inst49++; } } catch(e) {}
try { if (Inst53 <= 1000 && typeof (constructor.prototype.toString) != "undefined") {_RecordType("<1459,1489,49>",(constructor.prototype.toString)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (constructor.prototype) != "undefined") {_RecordType("<1459,1480,49>",(constructor.prototype)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<1459,1470,49>",(constructor)); Inst55++; } } catch(e) {}
  a4.__proto__ = {
    toString: constructor.prototype.toString
  }; // No join on Array.
try { if (Inst51 <= 1000 && typeof (a4.__proto__) != "undefined") {_RecordType("<1428,1440,48>",(a4.__proto__)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (a4) != "undefined") {_RecordType("<1428,1430,48>",(a4)); Inst52++; } } catch(e) {}

  0;
try { if (Inst56 <= 1000 && typeof (a3.toString().search) != "undefined") {_RecordType("<1524,1544,53>",(a3.toString().search)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (a3.toString) != "undefined") {_RecordType("<1524,1535,53>",(a3.toString)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (a3) != "undefined") {_RecordType("<1524,1526,53>",(a3)); Inst58++; } } catch(e) {}
  a3.toString().search(/\[object .+Array\]/);
  // On a non-Array object, throws.
try { if (Inst60 <= 1000 && typeof (constructor.prototype.toString) != "undefined") {_RecordType("<1676,1706,60>",(constructor.prototype.toString)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (constructor.prototype) != "undefined") {_RecordType("<1676,1697,60>",(constructor.prototype)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<1676,1687,60>",(constructor)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (constructor.prototype.join) != "undefined") {_RecordType("<1718,1744,61>",(constructor.prototype.join)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (constructor.prototype) != "undefined") {_RecordType("<1718,1739,61>",(constructor.prototype)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<1718,1729,61>",(constructor)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (constructor.prototype.toLocaleString) != "undefined") {_RecordType("<1766,1802,62>",(constructor.prototype.toLocaleString)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (constructor.prototype) != "undefined") {_RecordType("<1766,1787,62>",(constructor.prototype)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<1766,1777,62>",(constructor)); Inst68++; } } catch(e) {}
  var o1 = {
    length: 3,
    0: 1,
    1: 2,
    2: 3,
    toString: constructor.prototype.toString,
    join: constructor.prototype.join,
    toLocaleString: constructor.prototype.toLocaleString
  };
try { if (Inst59 <= 1000 && typeof (o1) != "undefined") {_RecordType("<1610,1612,55>",(o1)); Inst59++; } } catch(e) {}

  (function () {
try { if (Inst69 <= 1000 && typeof (o1.join) != "undefined") {_RecordType("<1830,1837,66>",(o1.join)); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (o1) != "undefined") {_RecordType("<1830,1832,66>",(o1)); Inst70++; } } catch(e) {}
    o1.join();
  })();

try { if (Inst71 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<1852,1861,69>",(TypeError)); Inst71++; } } catch(e) {}
  TypeError;

  (function () {
try { if (Inst72 <= 1000 && typeof (o1.toString) != "undefined") {_RecordType("<1885,1896,72>",(o1.toString)); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (o1) != "undefined") {_RecordType("<1885,1887,72>",(o1)); Inst73++; } } catch(e) {}
    o1.toString();
  })();

try { if (Inst74 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<1911,1920,75>",(TypeError)); Inst74++; } } catch(e) {}
  TypeError;

  (function () {
try { if (Inst75 <= 1000 && typeof (o1.toLocaleString) != "undefined") {_RecordType("<1944,1961,78>",(o1.toLocaleString)); Inst75++; } } catch(e) {}try { if (Inst76 <= 1000 && typeof (o1) != "undefined") {_RecordType("<1944,1946,78>",(o1)); Inst76++; } } catch(e) {}
    o1.toLocaleString();
  })();

try { if (Inst77 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<1976,1985,81>",(TypeError)); Inst77++; } } catch(e) {}
  TypeError;
  // toString is OK if join not from here:
try { if (Inst80 <= 1000 && typeof (Array.prototype.join) != "undefined") {_RecordType("<2042,2062,83>",(Array.prototype.join)); Inst80++; } } catch(e) {}try { if (Inst81 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<2042,2057,83>",(Array.prototype)); Inst81++; } } catch(e) {}try { if (Inst82 <= 1000 && typeof (Array) != "undefined") {_RecordType("<2042,2047,83>",(Array)); Inst82++; } } catch(e) {}
  o1.join = Array.prototype.join;
try { if (Inst78 <= 1000 && typeof (o1.join) != "undefined") {_RecordType("<2032,2039,83>",(o1.join)); Inst78++; } } catch(e) {}try { if (Inst79 <= 1000 && typeof (o1) != "undefined") {_RecordType("<2032,2034,83>",(o1)); Inst79++; } } catch(e) {}
  "1,2,3";
try { if (Inst83 <= 1000 && typeof (o1.join) != "undefined") {_RecordType("<2077,2084,85>",(o1.join)); Inst83++; } } catch(e) {}try { if (Inst84 <= 1000 && typeof (o1) != "undefined") {_RecordType("<2077,2079,85>",(o1)); Inst84++; } } catch(e) {}
  o1.join();
  "1,2,3";
try { if (Inst85 <= 1000 && typeof (o1.toString) != "undefined") {_RecordType("<2101,2112,87>",(o1.toString)); Inst85++; } } catch(e) {}try { if (Inst86 <= 1000 && typeof (o1) != "undefined") {_RecordType("<2101,2103,87>",(o1)); Inst86++; } } catch(e) {}
  o1.toString();

  (function () {
try { if (Inst87 <= 1000 && typeof (o1.toLocaleString) != "undefined") {_RecordType("<2138,2155,90>",(o1.toLocaleString)); Inst87++; } } catch(e) {}try { if (Inst88 <= 1000 && typeof (o1) != "undefined") {_RecordType("<2138,2140,90>",(o1)); Inst88++; } } catch(e) {}
    o1.toLocaleString();
  })();

try { if (Inst89 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<2170,2179,93>",(TypeError)); Inst89++; } } catch(e) {}
  TypeError;
  // TODO(littledan): Use the same function for TypedArray as for
  // Array, as the spec says (but Firefox doesn't do either).
  // Currently, using the same method leads to a bootstrap failure.
  // assertEquals(o1.toString, Array.prototype.toString);
  // Redefining length does not change result
try { if (Inst91 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<2496,2507,99>",(constructor)); Inst91++; } } catch(e) {}
  var a5 = new constructor([1, 2, 3]);
try { if (Inst90 <= 1000 && typeof (a5) != "undefined") {_RecordType("<2487,2489,99>",(a5)); Inst90++; } } catch(e) {}
try { if (Inst92 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<2522,2543,100>",(Object.defineProperty)); Inst92++; } } catch(e) {}try { if (Inst93 <= 1000 && typeof (Object) != "undefined") {_RecordType("<2522,2528,100>",(Object)); Inst93++; } } catch(e) {}try { if (Inst94 <= 1000 && typeof (a5) != "undefined") {_RecordType("<2544,2546,100>",(a5)); Inst94++; } } catch(e) {}
  Object.defineProperty(a5, 'length', {
    value: 2
  });
  "1,2,3";
try { if (Inst95 <= 1000 && typeof (a5.join) != "undefined") {_RecordType("<2592,2599,104>",(a5.join)); Inst95++; } } catch(e) {}try { if (Inst96 <= 1000 && typeof (a5) != "undefined") {_RecordType("<2592,2594,104>",(a5)); Inst96++; } } catch(e) {}
  a5.join();
  "1,2,3";
try { if (Inst97 <= 1000 && typeof (a5.toString) != "undefined") {_RecordType("<2616,2627,106>",(a5.toString)); Inst97++; } } catch(e) {}try { if (Inst98 <= 1000 && typeof (a5) != "undefined") {_RecordType("<2616,2618,106>",(a5)); Inst98++; } } catch(e) {}
  a5.toString();
  "1,2,3";
try { if (Inst99 <= 1000 && typeof (a5.toLocaleString) != "undefined") {_RecordType("<2644,2661,108>",(a5.toLocaleString)); Inst99++; } } catch(e) {}try { if (Inst100 <= 1000 && typeof (a5) != "undefined") {_RecordType("<2644,2646,108>",(a5)); Inst100++; } } catch(e) {}
  a5.toLocaleString();
  "1,2";
try { if (Inst101 <= 1000 && typeof (Array.prototype.join.call) != "undefined") {_RecordType("<2676,2701,110>",(Array.prototype.join.call)); Inst101++; } } catch(e) {}try { if (Inst102 <= 1000 && typeof (Array.prototype.join) != "undefined") {_RecordType("<2676,2696,110>",(Array.prototype.join)); Inst102++; } } catch(e) {}try { if (Inst103 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<2676,2691,110>",(Array.prototype)); Inst103++; } } catch(e) {}try { if (Inst104 <= 1000 && typeof (Array) != "undefined") {_RecordType("<2676,2681,110>",(Array)); Inst104++; } } catch(e) {}try { if (Inst105 <= 1000 && typeof (a5) != "undefined") {_RecordType("<2702,2704,110>",(a5)); Inst105++; } } catch(e) {}
  Array.prototype.join.call(a5);
  "1,2,3";
try { if (Inst106 <= 1000 && typeof (Array.prototype.toString.call) != "undefined") {_RecordType("<2720,2749,112>",(Array.prototype.toString.call)); Inst106++; } } catch(e) {}try { if (Inst107 <= 1000 && typeof (Array.prototype.toString) != "undefined") {_RecordType("<2720,2744,112>",(Array.prototype.toString)); Inst107++; } } catch(e) {}try { if (Inst108 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<2720,2735,112>",(Array.prototype)); Inst108++; } } catch(e) {}try { if (Inst109 <= 1000 && typeof (Array) != "undefined") {_RecordType("<2720,2725,112>",(Array)); Inst109++; } } catch(e) {}try { if (Inst110 <= 1000 && typeof (a5) != "undefined") {_RecordType("<2750,2752,112>",(a5)); Inst110++; } } catch(e) {}
  Array.prototype.toString.call(a5);
  "1,2";
try { if (Inst111 <= 1000 && typeof (Array.prototype.toLocaleString.call) != "undefined") {_RecordType("<2766,2801,114>",(Array.prototype.toLocaleString.call)); Inst111++; } } catch(e) {}try { if (Inst112 <= 1000 && typeof (Array.prototype.toLocaleString) != "undefined") {_RecordType("<2766,2796,114>",(Array.prototype.toLocaleString)); Inst112++; } } catch(e) {}try { if (Inst113 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<2766,2781,114>",(Array.prototype)); Inst113++; } } catch(e) {}try { if (Inst114 <= 1000 && typeof (Array) != "undefined") {_RecordType("<2766,2771,114>",(Array)); Inst114++; } } catch(e) {}try { if (Inst115 <= 1000 && typeof (a5) != "undefined") {_RecordType("<2802,2804,114>",(a5)); Inst115++; } } catch(e) {}
  Array.prototype.toLocaleString.call(a5);

try { if (Inst116 <= 1000 && typeof (TestToLocaleStringCalls) != "undefined") {_RecordType("<2820,2843,116>",(TestToLocaleStringCalls)); Inst116++; } } catch(e) {}
  (function TestToLocaleStringCalls() {
    let log = [];
try { if (Inst117 <= 1000 && typeof (log) != "undefined") {_RecordType("<2856,2859,117>",(log)); Inst117++; } } catch(e) {}

try { if (Inst119 <= 1000 && typeof (label) != "undefined") {_RecordType("<2886,2891,119>",(label)); Inst119++; } } catch(e) {}try { if (Inst120 <= 1000 && typeof (args) != "undefined") {_RecordType("<2899,2903,119>",(args)); Inst120++; } } catch(e) {}try { if (Inst121 <= 1000 && typeof (log.push) != "undefined") {_RecordType("<2908,2916,119>",(log.push)); Inst121++; } } catch(e) {}try { if (Inst122 <= 1000 && typeof (log) != "undefined") {_RecordType("<2908,2911,119>",(log)); Inst122++; } } catch(e) {}try { if (Inst123 <= 1000 && typeof (label) != "undefined") {_RecordType("<2917,2922,119>",(label)); Inst123++; } } catch(e) {}try { if (Inst124 <= 1000 && typeof (args) != "undefined") {_RecordType("<2924,2928,119>",(args)); Inst124++; } } catch(e) {}
    let pushArgs = label => (...args) => log.push(label, args);
try { if (Inst118 <= 1000 && typeof (pushArgs) != "undefined") {_RecordType("<2875,2883,119>",(pushArgs)); Inst118++; } } catch(e) {}

try { if (Inst126 <= 1000 && typeof (Number.prototype.toLocaleString) != "undefined") {_RecordType("<2963,2994,121>",(Number.prototype.toLocaleString)); Inst126++; } } catch(e) {}try { if (Inst127 <= 1000 && typeof (Number.prototype) != "undefined") {_RecordType("<2963,2979,121>",(Number.prototype)); Inst127++; } } catch(e) {}try { if (Inst128 <= 1000 && typeof (Number) != "undefined") {_RecordType("<2963,2969,121>",(Number)); Inst128++; } } catch(e) {}
    let NumberToLocaleString = Number.prototype.toLocaleString;
try { if (Inst125 <= 1000 && typeof (NumberToLocaleString) != "undefined") {_RecordType("<2940,2960,121>",(NumberToLocaleString)); Inst125++; } } catch(e) {}
try { if (Inst132 <= 1000 && typeof (pushArgs) != "undefined") {_RecordType("<3034,3042,122>",(pushArgs)); Inst132++; } } catch(e) {}
    Number.prototype.toLocaleString = pushArgs("Number");
try { if (Inst129 <= 1000 && typeof (Number.prototype.toLocaleString) != "undefined") {_RecordType("<3000,3031,122>",(Number.prototype.toLocaleString)); Inst129++; } } catch(e) {}try { if (Inst130 <= 1000 && typeof (Number.prototype) != "undefined") {_RecordType("<3000,3016,122>",(Number.prototype)); Inst130++; } } catch(e) {}try { if (Inst131 <= 1000 && typeof (Number) != "undefined") {_RecordType("<3000,3006,122>",(Number)); Inst131++; } } catch(e) {}
try { if (Inst133 <= 1000 && typeof (new constructor([1, 2]).toLocaleString) != "undefined") {_RecordType("<3058,3096,123>",(new constructor([1, 2]).toLocaleString)); Inst133++; } } catch(e) {}try { if (Inst134 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<3062,3073,123>",(constructor)); Inst134++; } } catch(e) {}
    new constructor([1, 2]).toLocaleString();
    ["Number", [], "Number", []];
try { if (Inst135 <= 1000 && typeof (log) != "undefined") {_RecordType("<3138,3141,125>",(log)); Inst135++; } } catch(e) {}
    log;
try { if (Inst139 <= 1000 && typeof (NumberToLocaleString) != "undefined") {_RecordType("<3181,3201,126>",(NumberToLocaleString)); Inst139++; } } catch(e) {}
    Number.prototype.toLocaleString = NumberToLocaleString;
try { if (Inst136 <= 1000 && typeof (Number.prototype.toLocaleString) != "undefined") {_RecordType("<3147,3178,126>",(Number.prototype.toLocaleString)); Inst136++; } } catch(e) {}try { if (Inst137 <= 1000 && typeof (Number.prototype) != "undefined") {_RecordType("<3147,3163,126>",(Number.prototype)); Inst137++; } } catch(e) {}try { if (Inst138 <= 1000 && typeof (Number) != "undefined") {_RecordType("<3147,3153,126>",(Number)); Inst138++; } } catch(e) {}
  })(); // Detached Operation


try { if (Inst141 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<3253,3264,130>",(constructor)); Inst141++; } } catch(e) {}
  var array = new constructor([1, 2, 3]);
try { if (Inst140 <= 1000 && typeof (array) != "undefined") {_RecordType("<3241,3246,130>",(array)); Inst140++; } } catch(e) {}

try { if (Inst142 <= 1000 && typeof (array.join) != "undefined") {_RecordType("<3287,3297,132>",(array.join)); Inst142++; } } catch(e) {}try { if (Inst143 <= 1000 && typeof (array) != "undefined") {_RecordType("<3287,3292,132>",(array)); Inst143++; } } catch(e) {}
  (() => array.join())();

try { if (Inst144 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<3307,3316,134>",(TypeError)); Inst144++; } } catch(e) {}
  TypeError;

try { if (Inst145 <= 1000 && typeof (array.toLocalString) != "undefined") {_RecordType("<3328,3347,136>",(array.toLocalString)); Inst145++; } } catch(e) {}try { if (Inst146 <= 1000 && typeof (array) != "undefined") {_RecordType("<3328,3333,136>",(array)); Inst146++; } } catch(e) {}
  (() => array.toLocalString())();

try { if (Inst147 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<3357,3366,138>",(TypeError)); Inst147++; } } catch(e) {}
  TypeError;

try { if (Inst148 <= 1000 && typeof (array.toString) != "undefined") {_RecordType("<3378,3392,140>",(array.toString)); Inst148++; } } catch(e) {}try { if (Inst149 <= 1000 && typeof (array) != "undefined") {_RecordType("<3378,3383,140>",(array)); Inst149++; } } catch(e) {}
  (() => array.toString())();

try { if (Inst150 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<3402,3411,142>",(TypeError)); Inst150++; } } catch(e) {}
  TypeError;
}

