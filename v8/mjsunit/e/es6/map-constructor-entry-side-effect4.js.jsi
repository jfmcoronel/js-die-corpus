var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2018 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax --opt
try { if (Inst0 <= 1000 && typeof (TestMapConstructorEntrySideEffect) != "undefined") {_RecordType("<215,248,5>",(TestMapConstructorEntrySideEffect)); Inst0++; } } catch(e) {}
function TestMapConstructorEntrySideEffect(ctor) {
try { if (Inst1 <= 1000 && typeof (ctor) != "undefined") {_RecordType("<249,253,5>",(ctor)); Inst1++; } } catch(e) {}
  const k1 = {};
try { if (Inst2 <= 1000 && typeof (k1) != "undefined") {_RecordType("<265,267,6>",(k1)); Inst2++; } } catch(e) {}
  const k2 = {};
try { if (Inst3 <= 1000 && typeof (k2) != "undefined") {_RecordType("<282,284,7>",(k2)); Inst3++; } } catch(e) {}
  const k3 = {};
try { if (Inst4 <= 1000 && typeof (k3) != "undefined") {_RecordType("<299,301,8>",(k3)); Inst4++; } } catch(e) {}
  let firstEntryCallCount = 0;
try { if (Inst5 <= 1000 && typeof (firstEntryCallCount) != "undefined") {_RecordType("<314,333,9>",(firstEntryCallCount)); Inst5++; } } catch(e) {}
  let lastEntryCallCount = 0;
try { if (Inst6 <= 1000 && typeof (lastEntryCallCount) != "undefined") {_RecordType("<345,363,10>",(lastEntryCallCount)); Inst6++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<386,407,11>",(Object.defineProperty)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Object) != "undefined") {_RecordType("<386,392,11>",(Object)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (get) != "undefined") {_RecordType("<426,429,12>",(get)); Inst10++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (k2) != "undefined") {_RecordType("<579,581,19>",(k2)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<587,608,19>",(Object.defineProperty)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Object) != "undefined") {_RecordType("<587,593,19>",(Object)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (k3) != "undefined") {_RecordType("<610,612,19>",(k3)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (get) != "undefined") {_RecordType("<626,629,20>",(get)); Inst19++; } } catch(e) {}
  const input = [Object.defineProperty([, 1], "0", {
    get() {
      // Verify handling of a non-Smi array length
      input.length = 2 ** 32 - 2;
try { if (Inst11 <= 1000 && typeof (input.length) != "undefined") {_RecordType("<491,503,14>",(input.length)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (input) != "undefined") {_RecordType("<491,496,14>",(input)); Inst12++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (firstEntryCallCount) != "undefined") {_RecordType("<525,544,15>",(firstEntryCallCount)); Inst13++; } } catch(e) {}
      firstEntryCallCount++;
try { if (Inst14 <= 1000 && typeof (k1) != "undefined") {_RecordType("<561,563,16>",(k1)); Inst14++; } } catch(e) {}
      return k1;
    }

  }), [k2, 2], Object.defineProperty([k3], "1", {
    get() {
      input.length = 1;
try { if (Inst20 <= 1000 && typeof (input.length) != "undefined") {_RecordType("<640,652,21>",(input.length)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (input) != "undefined") {_RecordType("<640,645,21>",(input)); Inst21++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (lastEntryCallCount) != "undefined") {_RecordType("<664,682,22>",(lastEntryCallCount)); Inst22++; } } catch(e) {}
      lastEntryCallCount++;
      return 3;
    }

  })];
try { if (Inst7 <= 1000 && typeof (input) != "undefined") {_RecordType("<377,382,11>",(input)); Inst7++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (ctor) != "undefined") {_RecordType("<734,738,27>",(ctor)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (input) != "undefined") {_RecordType("<739,744,27>",(input)); Inst25++; } } catch(e) {}
  const col = new ctor(input);
try { if (Inst23 <= 1000 && typeof (col) != "undefined") {_RecordType("<724,727,27>",(col)); Inst23++; } } catch(e) {}
  1;
try { if (Inst26 <= 1000 && typeof (firstEntryCallCount) != "undefined") {_RecordType("<754,773,29>",(firstEntryCallCount)); Inst26++; } } catch(e) {}
  firstEntryCallCount;
  1;
try { if (Inst27 <= 1000 && typeof (lastEntryCallCount) != "undefined") {_RecordType("<782,800,31>",(lastEntryCallCount)); Inst27++; } } catch(e) {}
  lastEntryCallCount;

try { if (Inst28 <= 1000 && typeof (col) != "undefined") {_RecordType("<819,822,33>",(col)); Inst28++; } } catch(e) {}
  if ('size' in col) {
    3;
try { if (Inst29 <= 1000 && typeof (col.size) != "undefined") {_RecordType("<837,845,35>",(col.size)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (col) != "undefined") {_RecordType("<837,840,35>",(col)); Inst30++; } } catch(e) {}
    col.size;
  }

  1;
try { if (Inst31 <= 1000 && typeof (col.get) != "undefined") {_RecordType("<859,866,39>",(col.get)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (col) != "undefined") {_RecordType("<859,862,39>",(col)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (k1) != "undefined") {_RecordType("<867,869,39>",(k1)); Inst33++; } } catch(e) {}
  col.get(k1);
  2;
try { if (Inst34 <= 1000 && typeof (col.get) != "undefined") {_RecordType("<879,886,41>",(col.get)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (col) != "undefined") {_RecordType("<879,882,41>",(col)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (k2) != "undefined") {_RecordType("<887,889,41>",(k2)); Inst36++; } } catch(e) {}
  col.get(k2);
  3;
try { if (Inst37 <= 1000 && typeof (col.get) != "undefined") {_RecordType("<899,906,43>",(col.get)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (col) != "undefined") {_RecordType("<899,902,43>",(col)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (k3) != "undefined") {_RecordType("<907,909,43>",(k3)); Inst39++; } } catch(e) {}
  col.get(k3);
}

try { if (Inst40 <= 1000 && typeof (TestMapConstructorEntrySideEffect) != "undefined") {_RecordType("<915,948,46>",(TestMapConstructorEntrySideEffect)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (Map) != "undefined") {_RecordType("<949,952,46>",(Map)); Inst41++; } } catch(e) {}
TestMapConstructorEntrySideEffect(Map);
try { if (Inst42 <= 1000 && typeof (TestMapConstructorEntrySideEffect) != "undefined") {_RecordType("<955,988,47>",(TestMapConstructorEntrySideEffect)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (Map) != "undefined") {_RecordType("<989,992,47>",(Map)); Inst43++; } } catch(e) {}
TestMapConstructorEntrySideEffect(Map);
try { if (Inst44 <= 1000 && typeof (TestMapConstructorEntrySideEffect) != "undefined") {_RecordType("<995,1028,48>",(TestMapConstructorEntrySideEffect)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (Map) != "undefined") {_RecordType("<1029,1032,48>",(Map)); Inst45++; } } catch(e) {}
TestMapConstructorEntrySideEffect(Map);
try { if (Inst46 <= 1000 && typeof (TestMapConstructorEntrySideEffect) != "undefined") {_RecordType("<1035,1068,49>",(TestMapConstructorEntrySideEffect)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (Map) != "undefined") {_RecordType("<1069,1072,49>",(Map)); Inst47++; } } catch(e) {}
TestMapConstructorEntrySideEffect(Map);
try { if (Inst48 <= 1000 && typeof (TestMapConstructorEntrySideEffect) != "undefined") {_RecordType("<1075,1108,50>",(TestMapConstructorEntrySideEffect)); Inst48++; } } catch(e) {}
TestMapConstructorEntrySideEffect();
try { if (Inst49 <= 1000 && typeof (TestMapConstructorEntrySideEffect) != "undefined") {_RecordType("<1112,1145,51>",(TestMapConstructorEntrySideEffect)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (WeakMap) != "undefined") {_RecordType("<1146,1153,51>",(WeakMap)); Inst50++; } } catch(e) {}
TestMapConstructorEntrySideEffect(WeakMap);
try { if (Inst51 <= 1000 && typeof (TestMapConstructorEntrySideEffect) != "undefined") {_RecordType("<1156,1189,52>",(TestMapConstructorEntrySideEffect)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (WeakMap) != "undefined") {_RecordType("<1190,1197,52>",(WeakMap)); Inst52++; } } catch(e) {}
TestMapConstructorEntrySideEffect(WeakMap);
try { if (Inst53 <= 1000 && typeof (TestMapConstructorEntrySideEffect) != "undefined") {_RecordType("<1200,1233,53>",(TestMapConstructorEntrySideEffect)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (WeakMap) != "undefined") {_RecordType("<1234,1241,53>",(WeakMap)); Inst54++; } } catch(e) {}
TestMapConstructorEntrySideEffect(WeakMap);
try { if (Inst55 <= 1000 && typeof (TestMapConstructorEntrySideEffect) != "undefined") {_RecordType("<1244,1277,54>",(TestMapConstructorEntrySideEffect)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (WeakMap) != "undefined") {_RecordType("<1278,1285,54>",(WeakMap)); Inst56++; } } catch(e) {}
TestMapConstructorEntrySideEffect(WeakMap);
try { if (Inst57 <= 1000 && typeof (TestMapConstructorEntrySideEffect) != "undefined") {_RecordType("<1288,1321,55>",(TestMapConstructorEntrySideEffect)); Inst57++; } } catch(e) {}
TestMapConstructorEntrySideEffect();

