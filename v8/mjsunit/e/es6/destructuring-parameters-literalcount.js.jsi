var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2015 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// Flags: --allow-natives-syntax
var t1 = [1];
try { if (Inst0 <= 1000 && typeof (t1) != "undefined") {_RecordType("<207,209,6>",(t1)); Inst0++; } } catch(e) {}
var t2 = [2];
try { if (Inst1 <= 1000 && typeof (t2) != "undefined") {_RecordType("<221,223,7>",(t2)); Inst1++; } } catch(e) {}
var t3 = [3];
try { if (Inst2 <= 1000 && typeof (t3) != "undefined") {_RecordType("<235,237,8>",(t3)); Inst2++; } } catch(e) {}
var t4 = [4];
try { if (Inst3 <= 1000 && typeof (t4) != "undefined") {_RecordType("<249,251,9>",(t4)); Inst3++; } } catch(e) {}
var t5 = [5];
try { if (Inst4 <= 1000 && typeof (t5) != "undefined") {_RecordType("<263,265,10>",(t5)); Inst4++; } } catch(e) {}

try { if (Inst5 <= 1000 && typeof (g) != "undefined") {_RecordType("<283,284,12>",(g)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (x) != "undefined") {_RecordType("<289,290,13>",(x)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (y) != "undefined") {_RecordType("<327,328,18>",(y)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (n) != "undefined") {_RecordType("<344,345,19>",(n)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (p) != "undefined") {_RecordType("<354,355,20>",(p)); Inst9++; } } catch(e) {}
function g({
  x = {
    a: 10,
    b: 20
  }
}, {
  y = [1, 2, 3],
  n = [],
  p = /abc/
}) {
  10;
try { if (Inst10 <= 1000 && typeof (x.a) != "undefined") {_RecordType("<377,380,23>",(x.a)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (x) != "undefined") {_RecordType("<377,378,23>",(x)); Inst11++; } } catch(e) {}
  x.a;
  20;
try { if (Inst12 <= 1000 && typeof (x.b) != "undefined") {_RecordType("<390,393,25>",(x.b)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (x) != "undefined") {_RecordType("<390,391,25>",(x)); Inst13++; } } catch(e) {}
  x.b;
  2;
try { if (Inst14 <= 1000 && typeof (y[1]) != "undefined") {_RecordType("<402,406,27>",(y[1])); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (y) != "undefined") {_RecordType("<402,403,27>",(y)); Inst15++; } } catch(e) {}
  y[1];
  0;
try { if (Inst16 <= 1000 && typeof (n.length) != "undefined") {_RecordType("<415,423,29>",(n.length)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (n) != "undefined") {_RecordType("<415,416,29>",(n)); Inst17++; } } catch(e) {}
  n.length;
try { if (Inst18 <= 1000 && typeof (p.test) != "undefined") {_RecordType("<427,433,30>",(p.test)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (p) != "undefined") {_RecordType("<427,428,30>",(p)); Inst19++; } } catch(e) {}
  p.test("abc");
}

try { if (Inst20 <= 1000 && typeof (g) != "undefined") {_RecordType("<445,446,33>",(g)); Inst20++; } } catch(e) {}
g({}, {});
try { if (Inst21 <= 1000 && typeof (g) != "undefined") {_RecordType("<456,457,34>",(g)); Inst21++; } } catch(e) {}
g({}, {});

try { if (Inst23 <= 1000 && typeof (x) != "undefined") {_RecordType("<481,482,37>",(x)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (y) != "undefined") {_RecordType("<519,520,42>",(y)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (n) != "undefined") {_RecordType("<536,537,43>",(n)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (p) != "undefined") {_RecordType("<546,547,44>",(p)); Inst26++; } } catch(e) {}
var h = ({
  x = {
    a: 10,
    b: 20
  }
}, {
  y = [1, 2, 3],
  n = [],
  p = /abc/
}) => {
  10;
try { if (Inst27 <= 1000 && typeof (x.a) != "undefined") {_RecordType("<572,575,47>",(x.a)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (x) != "undefined") {_RecordType("<572,573,47>",(x)); Inst28++; } } catch(e) {}
  x.a;
  20;
try { if (Inst29 <= 1000 && typeof (x.b) != "undefined") {_RecordType("<585,588,49>",(x.b)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (x) != "undefined") {_RecordType("<585,586,49>",(x)); Inst30++; } } catch(e) {}
  x.b;
  2;
try { if (Inst31 <= 1000 && typeof (y[1]) != "undefined") {_RecordType("<597,601,51>",(y[1])); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (y) != "undefined") {_RecordType("<597,598,51>",(y)); Inst32++; } } catch(e) {}
  y[1];
  0;
try { if (Inst33 <= 1000 && typeof (n.length) != "undefined") {_RecordType("<610,618,53>",(n.length)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (n) != "undefined") {_RecordType("<610,611,53>",(n)); Inst34++; } } catch(e) {}
  n.length;
try { if (Inst35 <= 1000 && typeof (p.test) != "undefined") {_RecordType("<622,628,54>",(p.test)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (p) != "undefined") {_RecordType("<622,623,54>",(p)); Inst36++; } } catch(e) {}
  p.test("abc");
};
try { if (Inst22 <= 1000 && typeof (h) != "undefined") {_RecordType("<472,473,36>",(h)); Inst22++; } } catch(e) {}

try { if (Inst37 <= 1000 && typeof (h) != "undefined") {_RecordType("<641,642,57>",(h)); Inst37++; } } catch(e) {}
h({}, {});
try { if (Inst38 <= 1000 && typeof (h) != "undefined") {_RecordType("<652,653,58>",(h)); Inst38++; } } catch(e) {}
h({}, {});

