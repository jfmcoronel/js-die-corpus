var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2015 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
try { if (Inst0 <= 1000 && typeof (TestForOfName) != "undefined") {_RecordType("<177,190,4>",(TestForOfName)); Inst0++; } } catch(e) {}
(function TestForOfName() {
  var result = 0;
try { if (Inst1 <= 1000 && typeof (result) != "undefined") {_RecordType("<201,207,5>",(result)); Inst1++; } } catch(e) {}
  var index;
try { if (Inst2 <= 1000 && typeof (index) != "undefined") {_RecordType("<219,224,6>",(index)); Inst2++; } } catch(e) {}

  for (index of [1, 2, 3, 4, 5]) {
try { if (Inst3 <= 1000 && typeof (index) != "undefined") {_RecordType("<234,239,8>",(index)); Inst3++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (index) != "undefined") {_RecordType("<276,281,9>",(index)); Inst5++; } } catch(e) {}
    result += index;
try { if (Inst4 <= 1000 && typeof (result) != "undefined") {_RecordType("<266,272,9>",(result)); Inst4++; } } catch(e) {}
  }

try { if (Inst6 <= 1000 && typeof (result) != "undefined") {_RecordType("<290,296,12>",(result)); Inst6++; } } catch(e) {}
  result;
  15;
try { if (Inst7 <= 1000 && typeof (index) != "undefined") {_RecordType("<306,311,14>",(index)); Inst7++; } } catch(e) {}
  index;
  5;
})();

try { if (Inst8 <= 1000 && typeof (TestForOfProperty) != "undefined") {_RecordType("<335,352,18>",(TestForOfProperty)); Inst8++; } } catch(e) {}
(function TestForOfProperty() {
  var O = {};
try { if (Inst9 <= 1000 && typeof (O) != "undefined") {_RecordType("<363,364,19>",(O)); Inst9++; } } catch(e) {}
  var result = 0;
try { if (Inst10 <= 1000 && typeof (result) != "undefined") {_RecordType("<377,383,20>",(result)); Inst10++; } } catch(e) {}

  for (O.index of [1, 2, 3, 4, 5]) {
try { if (Inst11 <= 1000 && typeof (O.index) != "undefined") {_RecordType("<397,404,22>",(O.index)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (O) != "undefined") {_RecordType("<397,398,22>",(O)); Inst12++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (O.index) != "undefined") {_RecordType("<441,448,23>",(O.index)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (O) != "undefined") {_RecordType("<441,442,23>",(O)); Inst15++; } } catch(e) {}
    result += O.index;
try { if (Inst13 <= 1000 && typeof (result) != "undefined") {_RecordType("<431,437,23>",(result)); Inst13++; } } catch(e) {}
  }

try { if (Inst16 <= 1000 && typeof (result) != "undefined") {_RecordType("<457,463,26>",(result)); Inst16++; } } catch(e) {}
  result;
  15;
try { if (Inst17 <= 1000 && typeof (O.index) != "undefined") {_RecordType("<473,480,28>",(O.index)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (O) != "undefined") {_RecordType("<473,474,28>",(O)); Inst18++; } } catch(e) {}
  O.index;
  5;
})();

