var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2018 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax --opt
var global;
try { if (Inst0 <= 1000 && typeof (global) != "undefined") {_RecordType("<210,216,5>",(global)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (TestSetWithCustomIterator) != "undefined") {_RecordType("<228,253,7>",(TestSetWithCustomIterator)); Inst1++; } } catch(e) {}
function TestSetWithCustomIterator(ctor) {
try { if (Inst2 <= 1000 && typeof (ctor) != "undefined") {_RecordType("<254,258,7>",(ctor)); Inst2++; } } catch(e) {}
  const k1 = {};
try { if (Inst3 <= 1000 && typeof (k1) != "undefined") {_RecordType("<270,272,8>",(k1)); Inst3++; } } catch(e) {}
  const k2 = {};
try { if (Inst4 <= 1000 && typeof (k2) != "undefined") {_RecordType("<287,289,9>",(k2)); Inst4++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (k1) != "undefined") {_RecordType("<315,317,10>",(k1)); Inst6++; } } catch(e) {}
  const entries = [k1];
try { if (Inst5 <= 1000 && typeof (entries) != "undefined") {_RecordType("<304,311,10>",(entries)); Inst5++; } } catch(e) {}
  let callCount = 0;
try { if (Inst7 <= 1000 && typeof (callCount) != "undefined") {_RecordType("<326,335,11>",(callCount)); Inst7++; } } catch(e) {}

try { if (Inst12 <= 1000 && typeof (callCount) != "undefined") {_RecordType("<396,405,14>",(callCount)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (k2) != "undefined") {_RecordType("<431,433,15>",(k2)); Inst13++; } } catch(e) {}
  entries[Symbol.iterator] = () => ({
    next: () => callCount++ === 0 ? {
      value: k2,
      done: false
    } : {
      done: true
    }
  });
try { if (Inst8 <= 1000 && typeof (entries[Symbol.iterator]) != "undefined") {_RecordType("<344,368,13>",(entries[Symbol.iterator])); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (entries) != "undefined") {_RecordType("<344,351,13>",(entries)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<352,367,13>",(Symbol.iterator)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<352,358,13>",(Symbol)); Inst11++; } } catch(e) {}

try { if (Inst15 <= 1000 && typeof (ctor) != "undefined") {_RecordType("<511,515,22>",(ctor)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (entries) != "undefined") {_RecordType("<516,523,22>",(entries)); Inst16++; } } catch(e) {}
  const set = new ctor(entries);
try { if (Inst14 <= 1000 && typeof (set) != "undefined") {_RecordType("<501,504,22>",(set)); Inst14++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (set.has) != "undefined") {_RecordType("<528,535,23>",(set.has)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (set) != "undefined") {_RecordType("<528,531,23>",(set)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (k1) != "undefined") {_RecordType("<536,538,23>",(k1)); Inst19++; } } catch(e) {}
  set.has(k1);
try { if (Inst20 <= 1000 && typeof (set.has) != "undefined") {_RecordType("<543,550,24>",(set.has)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (set) != "undefined") {_RecordType("<543,546,24>",(set)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (k2) != "undefined") {_RecordType("<551,553,24>",(k2)); Inst22++; } } catch(e) {}
  set.has(k2);
  2;
try { if (Inst23 <= 1000 && typeof (callCount) != "undefined") {_RecordType("<563,572,26>",(callCount)); Inst23++; } } catch(e) {}
  callCount;
  // Keep entries alive to avoid collection of the weakly held map in optimized
  // code which causes the code to deopt.
try { if (Inst25 <= 1000 && typeof (entries) != "undefined") {_RecordType("<707,714,29>",(entries)); Inst25++; } } catch(e) {}
  global = entries;
try { if (Inst24 <= 1000 && typeof (global) != "undefined") {_RecordType("<698,704,29>",(global)); Inst24++; } } catch(e) {}
}

try { if (Inst26 <= 1000 && typeof (TestSetWithCustomIterator) != "undefined") {_RecordType("<719,744,32>",(TestSetWithCustomIterator)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (Set) != "undefined") {_RecordType("<745,748,32>",(Set)); Inst27++; } } catch(e) {}
TestSetWithCustomIterator(Set);
try { if (Inst28 <= 1000 && typeof (TestSetWithCustomIterator) != "undefined") {_RecordType("<751,776,33>",(TestSetWithCustomIterator)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (Set) != "undefined") {_RecordType("<777,780,33>",(Set)); Inst29++; } } catch(e) {}
TestSetWithCustomIterator(Set);
try { if (Inst30 <= 1000 && typeof (TestSetWithCustomIterator) != "undefined") {_RecordType("<783,808,34>",(TestSetWithCustomIterator)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (Set) != "undefined") {_RecordType("<809,812,34>",(Set)); Inst31++; } } catch(e) {}
TestSetWithCustomIterator(Set);
try { if (Inst32 <= 1000 && typeof (TestSetWithCustomIterator) != "undefined") {_RecordType("<815,840,35>",(TestSetWithCustomIterator)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (Set) != "undefined") {_RecordType("<841,844,35>",(Set)); Inst33++; } } catch(e) {}
TestSetWithCustomIterator(Set);
try { if (Inst34 <= 1000 && typeof (TestSetWithCustomIterator) != "undefined") {_RecordType("<847,872,36>",(TestSetWithCustomIterator)); Inst34++; } } catch(e) {}
TestSetWithCustomIterator();
try { if (Inst35 <= 1000 && typeof (TestSetWithCustomIterator) != "undefined") {_RecordType("<876,901,37>",(TestSetWithCustomIterator)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (WeakSet) != "undefined") {_RecordType("<902,909,37>",(WeakSet)); Inst36++; } } catch(e) {}
TestSetWithCustomIterator(WeakSet);
try { if (Inst37 <= 1000 && typeof (TestSetWithCustomIterator) != "undefined") {_RecordType("<912,937,38>",(TestSetWithCustomIterator)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (WeakSet) != "undefined") {_RecordType("<938,945,38>",(WeakSet)); Inst38++; } } catch(e) {}
TestSetWithCustomIterator(WeakSet);
try { if (Inst39 <= 1000 && typeof (TestSetWithCustomIterator) != "undefined") {_RecordType("<948,973,39>",(TestSetWithCustomIterator)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (WeakSet) != "undefined") {_RecordType("<974,981,39>",(WeakSet)); Inst40++; } } catch(e) {}
TestSetWithCustomIterator(WeakSet);
try { if (Inst41 <= 1000 && typeof (TestSetWithCustomIterator) != "undefined") {_RecordType("<984,1009,40>",(TestSetWithCustomIterator)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (WeakSet) != "undefined") {_RecordType("<1010,1017,40>",(WeakSet)); Inst42++; } } catch(e) {}
TestSetWithCustomIterator(WeakSet);
try { if (Inst43 <= 1000 && typeof (TestSetWithCustomIterator) != "undefined") {_RecordType("<1020,1045,41>",(TestSetWithCustomIterator)); Inst43++; } } catch(e) {}
TestSetWithCustomIterator();

try { if (Inst44 <= 1000 && typeof (TestMapWithCustomIterator) != "undefined") {_RecordType("<1059,1084,43>",(TestMapWithCustomIterator)); Inst44++; } } catch(e) {}
function TestMapWithCustomIterator(ctor) {
try { if (Inst45 <= 1000 && typeof (ctor) != "undefined") {_RecordType("<1085,1089,43>",(ctor)); Inst45++; } } catch(e) {}
  const k1 = {};
try { if (Inst46 <= 1000 && typeof (k1) != "undefined") {_RecordType("<1101,1103,44>",(k1)); Inst46++; } } catch(e) {}
  const k2 = {};
try { if (Inst47 <= 1000 && typeof (k2) != "undefined") {_RecordType("<1118,1120,45>",(k2)); Inst47++; } } catch(e) {}
try { if (Inst49 <= 1000 && typeof (k1) != "undefined") {_RecordType("<1147,1149,46>",(k1)); Inst49++; } } catch(e) {}
  const entries = [[k1, 1]];
try { if (Inst48 <= 1000 && typeof (entries) != "undefined") {_RecordType("<1135,1142,46>",(entries)); Inst48++; } } catch(e) {}
  let callCount = 0;
try { if (Inst50 <= 1000 && typeof (callCount) != "undefined") {_RecordType("<1162,1171,47>",(callCount)); Inst50++; } } catch(e) {}

try { if (Inst55 <= 1000 && typeof (callCount) != "undefined") {_RecordType("<1232,1241,50>",(callCount)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (k2) != "undefined") {_RecordType("<1268,1270,51>",(k2)); Inst56++; } } catch(e) {}
  entries[Symbol.iterator] = () => ({
    next: () => callCount++ === 0 ? {
      value: [k2, 2],
      done: false
    } : {
      done: true
    }
  });
try { if (Inst51 <= 1000 && typeof (entries[Symbol.iterator]) != "undefined") {_RecordType("<1180,1204,49>",(entries[Symbol.iterator])); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (entries) != "undefined") {_RecordType("<1180,1187,49>",(entries)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<1188,1203,49>",(Symbol.iterator)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<1188,1194,49>",(Symbol)); Inst54++; } } catch(e) {}

try { if (Inst58 <= 1000 && typeof (ctor) != "undefined") {_RecordType("<1352,1356,58>",(ctor)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (entries) != "undefined") {_RecordType("<1357,1364,58>",(entries)); Inst59++; } } catch(e) {}
  const map = new ctor(entries);
try { if (Inst57 <= 1000 && typeof (map) != "undefined") {_RecordType("<1342,1345,58>",(map)); Inst57++; } } catch(e) {}
try { if (Inst60 <= 1000 && typeof (map.has) != "undefined") {_RecordType("<1369,1376,59>",(map.has)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (map) != "undefined") {_RecordType("<1369,1372,59>",(map)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (k1) != "undefined") {_RecordType("<1377,1379,59>",(k1)); Inst62++; } } catch(e) {}
  map.has(k1);
  2;
try { if (Inst63 <= 1000 && typeof (map.get) != "undefined") {_RecordType("<1389,1396,61>",(map.get)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (map) != "undefined") {_RecordType("<1389,1392,61>",(map)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (k2) != "undefined") {_RecordType("<1397,1399,61>",(k2)); Inst65++; } } catch(e) {}
  map.get(k2);
  2;
try { if (Inst66 <= 1000 && typeof (callCount) != "undefined") {_RecordType("<1409,1418,63>",(callCount)); Inst66++; } } catch(e) {}
  callCount;
  // Keep entries alive to avoid collection of the weakly held map in optimized
  // code which causes the code to deopt.
try { if (Inst68 <= 1000 && typeof (entries) != "undefined") {_RecordType("<1553,1560,66>",(entries)); Inst68++; } } catch(e) {}
  global = entries;
try { if (Inst67 <= 1000 && typeof (global) != "undefined") {_RecordType("<1544,1550,66>",(global)); Inst67++; } } catch(e) {}
}

try { if (Inst69 <= 1000 && typeof (TestMapWithCustomIterator) != "undefined") {_RecordType("<1565,1590,69>",(TestMapWithCustomIterator)); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (Map) != "undefined") {_RecordType("<1591,1594,69>",(Map)); Inst70++; } } catch(e) {}
TestMapWithCustomIterator(Map);
try { if (Inst71 <= 1000 && typeof (TestMapWithCustomIterator) != "undefined") {_RecordType("<1597,1622,70>",(TestMapWithCustomIterator)); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (Map) != "undefined") {_RecordType("<1623,1626,70>",(Map)); Inst72++; } } catch(e) {}
TestMapWithCustomIterator(Map);
try { if (Inst73 <= 1000 && typeof (TestMapWithCustomIterator) != "undefined") {_RecordType("<1629,1654,71>",(TestMapWithCustomIterator)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (Map) != "undefined") {_RecordType("<1655,1658,71>",(Map)); Inst74++; } } catch(e) {}
TestMapWithCustomIterator(Map);
try { if (Inst75 <= 1000 && typeof (TestMapWithCustomIterator) != "undefined") {_RecordType("<1661,1686,72>",(TestMapWithCustomIterator)); Inst75++; } } catch(e) {}try { if (Inst76 <= 1000 && typeof (Map) != "undefined") {_RecordType("<1687,1690,72>",(Map)); Inst76++; } } catch(e) {}
TestMapWithCustomIterator(Map);
try { if (Inst77 <= 1000 && typeof (TestMapWithCustomIterator) != "undefined") {_RecordType("<1693,1718,73>",(TestMapWithCustomIterator)); Inst77++; } } catch(e) {}
TestMapWithCustomIterator();
try { if (Inst78 <= 1000 && typeof (TestMapWithCustomIterator) != "undefined") {_RecordType("<1722,1747,74>",(TestMapWithCustomIterator)); Inst78++; } } catch(e) {}try { if (Inst79 <= 1000 && typeof (WeakMap) != "undefined") {_RecordType("<1748,1755,74>",(WeakMap)); Inst79++; } } catch(e) {}
TestMapWithCustomIterator(WeakMap);
try { if (Inst80 <= 1000 && typeof (TestMapWithCustomIterator) != "undefined") {_RecordType("<1758,1783,75>",(TestMapWithCustomIterator)); Inst80++; } } catch(e) {}try { if (Inst81 <= 1000 && typeof (WeakMap) != "undefined") {_RecordType("<1784,1791,75>",(WeakMap)); Inst81++; } } catch(e) {}
TestMapWithCustomIterator(WeakMap);
try { if (Inst82 <= 1000 && typeof (TestMapWithCustomIterator) != "undefined") {_RecordType("<1794,1819,76>",(TestMapWithCustomIterator)); Inst82++; } } catch(e) {}try { if (Inst83 <= 1000 && typeof (WeakMap) != "undefined") {_RecordType("<1820,1827,76>",(WeakMap)); Inst83++; } } catch(e) {}
TestMapWithCustomIterator(WeakMap);
try { if (Inst84 <= 1000 && typeof (TestMapWithCustomIterator) != "undefined") {_RecordType("<1830,1855,77>",(TestMapWithCustomIterator)); Inst84++; } } catch(e) {}try { if (Inst85 <= 1000 && typeof (WeakMap) != "undefined") {_RecordType("<1856,1863,77>",(WeakMap)); Inst85++; } } catch(e) {}
TestMapWithCustomIterator(WeakMap);
try { if (Inst86 <= 1000 && typeof (TestMapWithCustomIterator) != "undefined") {_RecordType("<1866,1891,78>",(TestMapWithCustomIterator)); Inst86++; } } catch(e) {}
TestMapWithCustomIterator();

