var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
var Inst102 = 0;
var Inst103 = 0;
var Inst104 = 0;
var Inst105 = 0;
var Inst106 = 0;
var Inst107 = 0;
var Inst108 = 0;
var Inst109 = 0;
var Inst110 = 0;
var Inst111 = 0;
var Inst112 = 0;
var Inst113 = 0;
var Inst114 = 0;
var Inst115 = 0;
var Inst116 = 0;
var Inst117 = 0;
var Inst118 = 0;
var Inst119 = 0;
var Inst120 = 0;
var Inst121 = 0;
var Inst122 = 0;
var Inst123 = 0;
var Inst124 = 0;
var Inst125 = 0;
var Inst126 = 0;
var Inst127 = 0;
var Inst128 = 0;
var Inst129 = 0;
var Inst130 = 0;
var Inst131 = 0;
var Inst132 = 0;
var Inst133 = 0;
var Inst134 = 0;
var Inst135 = 0;
var Inst136 = 0;
var Inst137 = 0;
var Inst138 = 0;
var Inst139 = 0;
var Inst140 = 0;
var Inst141 = 0;
var Inst142 = 0;
var Inst143 = 0;
var Inst144 = 0;
var Inst145 = 0;
var Inst146 = 0;
var Inst147 = 0;
var Inst148 = 0;
var Inst149 = 0;
var Inst150 = 0;
var Inst151 = 0;
var Inst152 = 0;
var Inst153 = 0;
var Inst154 = 0;
var Inst155 = 0;
var Inst156 = 0;
var Inst157 = 0;
var Inst158 = 0;
var Inst159 = 0;
var Inst160 = 0;
var Inst161 = 0;
var Inst162 = 0;
var Inst163 = 0;
var Inst164 = 0;
var Inst165 = 0;
var Inst166 = 0;
var Inst167 = 0;
var Inst168 = 0;
var Inst169 = 0;
var Inst170 = 0;
var Inst171 = 0;
var Inst172 = 0;
var Inst173 = 0;
var Inst174 = 0;
var Inst175 = 0;
var Inst176 = 0;
var Inst177 = 0;
var Inst178 = 0;
var Inst179 = 0;
var Inst180 = 0;
var Inst181 = 0;
var Inst182 = 0;
var Inst183 = 0;
var Inst184 = 0;
var Inst185 = 0;
var Inst186 = 0;
var Inst187 = 0;
var Inst188 = 0;
var Inst189 = 0;
var Inst190 = 0;
var Inst191 = 0;
var Inst192 = 0;
var Inst193 = 0;
var Inst194 = 0;
var Inst195 = 0;
var Inst196 = 0;
var Inst197 = 0;
var Inst198 = 0;
var Inst199 = 0;
var Inst200 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2009 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// Test operations that involve one or more constants.
// The code generator now handles compile-time constants specially.
// Test the code generated when operands are known at compile time
// Test count operations involving constants
try { if (Inst0 <= 1000 && typeof (test_count) != "undefined") {_RecordType("<1841,1851,31>",(test_count)); Inst0++; } } catch(e) {}
function test_count() {
  var x = "foo";
try { if (Inst1 <= 1000 && typeof (x) != "undefined") {_RecordType("<1862,1863,32>",(x)); Inst1++; } } catch(e) {}
  var y = "3";
try { if (Inst2 <= 1000 && typeof (y) != "undefined") {_RecordType("<1879,1880,33>",(y)); Inst2++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (x) != "undefined") {_RecordType("<1895,1896,34>",(x)); Inst4++; } } catch(e) {}
  x += x++; // ++ and -- apply ToNumber to their operand, even for postfix.
try { if (Inst3 <= 1000 && typeof (x) != "undefined") {_RecordType("<1890,1891,34>",(x)); Inst3++; } } catch(e) {}

try { if (Inst5 <= 1000 && typeof (x) != "undefined") {_RecordType("<1967,1968,36>",(x)); Inst5++; } } catch(e) {}
  x;
  "fooNaN";
  "fooNaN test";
  x = "luft";
try { if (Inst6 <= 1000 && typeof (x) != "undefined") {_RecordType("<2001,2002,39>",(x)); Inst6++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (x) != "undefined") {_RecordType("<2022,2023,40>",(x)); Inst8++; } } catch(e) {}
  x += ++x;
try { if (Inst7 <= 1000 && typeof (x) != "undefined") {_RecordType("<2015,2016,40>",(x)); Inst7++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (x) != "undefined") {_RecordType("<2027,2028,41>",(x)); Inst9++; } } catch(e) {}
  x;
  "luftNaN";
  "luftNaN test";
try { if (Inst10 <= 1000 && typeof (y) != "undefined") {_RecordType("<2063,2064,44>",(y)); Inst10++; } } catch(e) {}
  y++ === 3;
  "y++ === 3, where y = \"3\"";
  y = 3;
try { if (Inst11 <= 1000 && typeof (y) != "undefined") {_RecordType("<2108,2109,46>",(y)); Inst11++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (y) != "undefined") {_RecordType("<2117,2118,47>",(y)); Inst12++; } } catch(e) {}
  y++;
  3;
  "y++ == 3, where y = 3";
  y = "7.1";
try { if (Inst13 <= 1000 && typeof (y) != "undefined") {_RecordType("<2156,2157,50>",(y)); Inst13++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (y) != "undefined") {_RecordType("<2169,2170,51>",(y)); Inst14++; } } catch(e) {}
  y++ === 7.1;
  "y++ === 7.1, where y = \"7.1\"";
  var z = y = x = "9";
try { if (Inst15 <= 1000 && typeof (z) != "undefined") {_RecordType("<2224,2225,53>",(z)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (y) != "undefined") {_RecordType("<2228,2229,53>",(y)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (x) != "undefined") {_RecordType("<2232,2233,53>",(x)); Inst17++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (z) != "undefined") {_RecordType("<2243,2244,54>",(z)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (y) != "undefined") {_RecordType("<2251,2252,54>",(y)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (x) != "undefined") {_RecordType("<2255,2256,54>",(x)); Inst20++; } } catch(e) {}
  z++ + ++y + x++;
  28;
  "z++ + (++y) + x++ == 28";
  z = y = x = 13;
try { if (Inst21 <= 1000 && typeof (z) != "undefined") {_RecordType("<2297,2298,57>",(z)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (y) != "undefined") {_RecordType("<2301,2302,57>",(y)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (x) != "undefined") {_RecordType("<2305,2306,57>",(x)); Inst23++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (z) != "undefined") {_RecordType("<2315,2316,58>",(z)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (y) != "undefined") {_RecordType("<2323,2324,58>",(y)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (x) != "undefined") {_RecordType("<2327,2328,58>",(x)); Inst26++; } } catch(e) {}
  z++ + ++y + x++;
  40;
  "z++ + (++y) + x++ == 40";
  z = y = x = -5.5;
try { if (Inst27 <= 1000 && typeof (z) != "undefined") {_RecordType("<2369,2370,61>",(z)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (y) != "undefined") {_RecordType("<2373,2374,61>",(y)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (x) != "undefined") {_RecordType("<2377,2378,61>",(x)); Inst29++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (z) != "undefined") {_RecordType("<2389,2390,62>",(z)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (y) != "undefined") {_RecordType("<2397,2398,62>",(y)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (x) != "undefined") {_RecordType("<2401,2402,62>",(x)); Inst32++; } } catch(e) {}
  z++ + ++y + x++;
  -15.5;
  "z++ + (++y) + x++ == -15.5";
try { if (Inst33 <= 1000 && typeof (y) != "undefined") {_RecordType("<2449,2450,65>",(y)); Inst33++; } } catch(e) {}
  y;
  -4.5;
try { if (Inst35 <= 1000 && typeof (y) != "undefined") {_RecordType("<2466,2467,67>",(y)); Inst35++; } } catch(e) {}
  z = y;
try { if (Inst34 <= 1000 && typeof (z) != "undefined") {_RecordType("<2462,2463,67>",(z)); Inst34++; } } catch(e) {}
try { if (Inst36 <= 1000 && typeof (z) != "undefined") {_RecordType("<2471,2472,68>",(z)); Inst36++; } } catch(e) {}
  z++;
try { if (Inst37 <= 1000 && typeof (y) != "undefined") {_RecordType("<2478,2479,69>",(y)); Inst37++; } } catch(e) {}
  y;
  -4.5;
try { if (Inst39 <= 1000 && typeof (y) != "undefined") {_RecordType("<2495,2496,71>",(y)); Inst39++; } } catch(e) {}
  z = y;
try { if (Inst38 <= 1000 && typeof (z) != "undefined") {_RecordType("<2491,2492,71>",(z)); Inst38++; } } catch(e) {}
try { if (Inst40 <= 1000 && typeof (y) != "undefined") {_RecordType("<2500,2501,72>",(y)); Inst40++; } } catch(e) {}
  y++;
try { if (Inst41 <= 1000 && typeof (z) != "undefined") {_RecordType("<2507,2508,73>",(z)); Inst41++; } } catch(e) {}
  z;
  -4.5;
  y = 20;
try { if (Inst42 <= 1000 && typeof (y) != "undefined") {_RecordType("<2520,2521,75>",(y)); Inst42++; } } catch(e) {}
try { if (Inst44 <= 1000 && typeof (y) != "undefined") {_RecordType("<2534,2535,76>",(y)); Inst44++; } } catch(e) {}
  z = y;
try { if (Inst43 <= 1000 && typeof (z) != "undefined") {_RecordType("<2530,2531,76>",(z)); Inst43++; } } catch(e) {}
try { if (Inst45 <= 1000 && typeof (z) != "undefined") {_RecordType("<2539,2540,77>",(z)); Inst45++; } } catch(e) {}
  z++;
try { if (Inst46 <= 1000 && typeof (y) != "undefined") {_RecordType("<2546,2547,78>",(y)); Inst46++; } } catch(e) {}
  y;
  20;
try { if (Inst48 <= 1000 && typeof (y) != "undefined") {_RecordType("<2561,2562,80>",(y)); Inst48++; } } catch(e) {}
  z = y;
try { if (Inst47 <= 1000 && typeof (z) != "undefined") {_RecordType("<2557,2558,80>",(z)); Inst47++; } } catch(e) {}
try { if (Inst49 <= 1000 && typeof (y) != "undefined") {_RecordType("<2566,2567,81>",(y)); Inst49++; } } catch(e) {}
  y++;
try { if (Inst50 <= 1000 && typeof (z) != "undefined") {_RecordType("<2573,2574,82>",(z)); Inst50++; } } catch(e) {}
  z;
  20;
}

try { if (Inst51 <= 1000 && typeof (test_count) != "undefined") {_RecordType("<2585,2595,86>",(test_count)); Inst51++; } } catch(e) {}
test_count(); // Test comparison operations that involve one or two constant smis.

try { if (Inst52 <= 1000 && typeof (test) != "undefined") {_RecordType("<2678,2682,88>",(test)); Inst52++; } } catch(e) {}
function test() {
  var i = 5;
try { if (Inst53 <= 1000 && typeof (i) != "undefined") {_RecordType("<2693,2694,89>",(i)); Inst53++; } } catch(e) {}
  var j = 3;
try { if (Inst54 <= 1000 && typeof (j) != "undefined") {_RecordType("<2706,2707,90>",(j)); Inst54++; } } catch(e) {}
try { if (Inst55 <= 1000 && typeof (j) != "undefined") {_RecordType("<2715,2716,91>",(j)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (i) != "undefined") {_RecordType("<2719,2720,91>",(i)); Inst56++; } } catch(e) {}
  j < i;
  i = 5;
try { if (Inst57 <= 1000 && typeof (i) != "undefined") {_RecordType("<2724,2725,92>",(i)); Inst57++; } } catch(e) {}
  j = 3;
try { if (Inst58 <= 1000 && typeof (j) != "undefined") {_RecordType("<2733,2734,93>",(j)); Inst58++; } } catch(e) {}
try { if (Inst59 <= 1000 && typeof (j) != "undefined") {_RecordType("<2742,2743,94>",(j)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (i) != "undefined") {_RecordType("<2747,2748,94>",(i)); Inst60++; } } catch(e) {}
  j <= i;
  i = 5;
try { if (Inst61 <= 1000 && typeof (i) != "undefined") {_RecordType("<2752,2753,95>",(i)); Inst61++; } } catch(e) {}
  j = 3;
try { if (Inst62 <= 1000 && typeof (j) != "undefined") {_RecordType("<2761,2762,96>",(j)); Inst62++; } } catch(e) {}
try { if (Inst63 <= 1000 && typeof (i) != "undefined") {_RecordType("<2770,2771,97>",(i)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (j) != "undefined") {_RecordType("<2774,2775,97>",(j)); Inst64++; } } catch(e) {}
  i > j;
  i = 5;
try { if (Inst65 <= 1000 && typeof (i) != "undefined") {_RecordType("<2779,2780,98>",(i)); Inst65++; } } catch(e) {}
  j = 3;
try { if (Inst66 <= 1000 && typeof (j) != "undefined") {_RecordType("<2788,2789,99>",(j)); Inst66++; } } catch(e) {}
try { if (Inst67 <= 1000 && typeof (i) != "undefined") {_RecordType("<2797,2798,100>",(i)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (j) != "undefined") {_RecordType("<2802,2803,100>",(j)); Inst68++; } } catch(e) {}
  i >= j;
  i = 5;
try { if (Inst69 <= 1000 && typeof (i) != "undefined") {_RecordType("<2807,2808,101>",(i)); Inst69++; } } catch(e) {}
  j = 3;
try { if (Inst70 <= 1000 && typeof (j) != "undefined") {_RecordType("<2816,2817,102>",(j)); Inst70++; } } catch(e) {}
try { if (Inst71 <= 1000 && typeof (i) != "undefined") {_RecordType("<2825,2826,103>",(i)); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (j) != "undefined") {_RecordType("<2830,2831,103>",(j)); Inst72++; } } catch(e) {}
  i != j;
  i = 5;
try { if (Inst73 <= 1000 && typeof (i) != "undefined") {_RecordType("<2835,2836,104>",(i)); Inst73++; } } catch(e) {}
  j = 3;
try { if (Inst74 <= 1000 && typeof (j) != "undefined") {_RecordType("<2844,2845,105>",(j)); Inst74++; } } catch(e) {}
try { if (Inst75 <= 1000 && typeof (i) != "undefined") {_RecordType("<2853,2854,106>",(i)); Inst75++; } } catch(e) {}try { if (Inst76 <= 1000 && typeof (i) != "undefined") {_RecordType("<2858,2859,106>",(i)); Inst76++; } } catch(e) {}
  i == i;
  i = 5;
try { if (Inst77 <= 1000 && typeof (i) != "undefined") {_RecordType("<2863,2864,107>",(i)); Inst77++; } } catch(e) {}
  j = 3;
try { if (Inst78 <= 1000 && typeof (j) != "undefined") {_RecordType("<2872,2873,108>",(j)); Inst78++; } } catch(e) {}
try { if (Inst79 <= 1000 && typeof (i) != "undefined") {_RecordType("<2881,2882,109>",(i)); Inst79++; } } catch(e) {}try { if (Inst80 <= 1000 && typeof (j) != "undefined") {_RecordType("<2885,2886,109>",(j)); Inst80++; } } catch(e) {}
  i < j;
  i = 5;
try { if (Inst81 <= 1000 && typeof (i) != "undefined") {_RecordType("<2890,2891,110>",(i)); Inst81++; } } catch(e) {}
  j = 3;
try { if (Inst82 <= 1000 && typeof (j) != "undefined") {_RecordType("<2899,2900,111>",(j)); Inst82++; } } catch(e) {}
try { if (Inst83 <= 1000 && typeof (i) != "undefined") {_RecordType("<2908,2909,112>",(i)); Inst83++; } } catch(e) {}try { if (Inst84 <= 1000 && typeof (j) != "undefined") {_RecordType("<2913,2914,112>",(j)); Inst84++; } } catch(e) {}
  i <= j;
  i = 5;
try { if (Inst85 <= 1000 && typeof (i) != "undefined") {_RecordType("<2918,2919,113>",(i)); Inst85++; } } catch(e) {}
  j = 3;
try { if (Inst86 <= 1000 && typeof (j) != "undefined") {_RecordType("<2927,2928,114>",(j)); Inst86++; } } catch(e) {}
try { if (Inst87 <= 1000 && typeof (j) != "undefined") {_RecordType("<2936,2937,115>",(j)); Inst87++; } } catch(e) {}try { if (Inst88 <= 1000 && typeof (i) != "undefined") {_RecordType("<2940,2941,115>",(i)); Inst88++; } } catch(e) {}
  j > i;
  i = 5;
try { if (Inst89 <= 1000 && typeof (i) != "undefined") {_RecordType("<2945,2946,116>",(i)); Inst89++; } } catch(e) {}
  j = 3;
try { if (Inst90 <= 1000 && typeof (j) != "undefined") {_RecordType("<2954,2955,117>",(j)); Inst90++; } } catch(e) {}
try { if (Inst91 <= 1000 && typeof (j) != "undefined") {_RecordType("<2963,2964,118>",(j)); Inst91++; } } catch(e) {}try { if (Inst92 <= 1000 && typeof (i) != "undefined") {_RecordType("<2968,2969,118>",(i)); Inst92++; } } catch(e) {}
  j >= i;
  i = 5;
try { if (Inst93 <= 1000 && typeof (i) != "undefined") {_RecordType("<2973,2974,119>",(i)); Inst93++; } } catch(e) {}
  j = 3;
try { if (Inst94 <= 1000 && typeof (j) != "undefined") {_RecordType("<2982,2983,120>",(j)); Inst94++; } } catch(e) {}
try { if (Inst95 <= 1000 && typeof (j) != "undefined") {_RecordType("<2991,2992,121>",(j)); Inst95++; } } catch(e) {}try { if (Inst96 <= 1000 && typeof (i) != "undefined") {_RecordType("<2996,2997,121>",(i)); Inst96++; } } catch(e) {}
  j == i;
  i = 5;
try { if (Inst97 <= 1000 && typeof (i) != "undefined") {_RecordType("<3001,3002,122>",(i)); Inst97++; } } catch(e) {}
  j = 3;
try { if (Inst98 <= 1000 && typeof (j) != "undefined") {_RecordType("<3010,3011,123>",(j)); Inst98++; } } catch(e) {}
try { if (Inst99 <= 1000 && typeof (i) != "undefined") {_RecordType("<3019,3020,124>",(i)); Inst99++; } } catch(e) {}try { if (Inst100 <= 1000 && typeof (i) != "undefined") {_RecordType("<3024,3025,124>",(i)); Inst100++; } } catch(e) {}
  i != i;
  i = 10 * 10;
try { if (Inst101 <= 1000 && typeof (i) != "undefined") {_RecordType("<3029,3030,125>",(i)); Inst101++; } } catch(e) {}

try { if (Inst102 <= 1000 && typeof (i) != "undefined") {_RecordType("<3052,3053,127>",(i)); Inst102++; } } catch(e) {}
  while (i < 107) {
try { if (Inst103 <= 1000 && typeof (i) != "undefined") {_RecordType("<3069,3070,128>",(i)); Inst103++; } } catch(e) {}
    ++i;
  }

  j = 21;
try { if (Inst104 <= 1000 && typeof (j) != "undefined") {_RecordType("<3079,3080,131>",(j)); Inst104++; } } catch(e) {}
try { if (Inst105 <= 1000 && typeof (j) != "undefined") {_RecordType("<3089,3090,132>",(j)); Inst105++; } } catch(e) {}try { if (Inst106 <= 1000 && typeof (i) != "undefined") {_RecordType("<3093,3094,132>",(i)); Inst106++; } } catch(e) {}
  j < i;
  j = 21;
try { if (Inst107 <= 1000 && typeof (j) != "undefined") {_RecordType("<3098,3099,133>",(j)); Inst107++; } } catch(e) {}
try { if (Inst108 <= 1000 && typeof (j) != "undefined") {_RecordType("<3108,3109,134>",(j)); Inst108++; } } catch(e) {}try { if (Inst109 <= 1000 && typeof (i) != "undefined") {_RecordType("<3113,3114,134>",(i)); Inst109++; } } catch(e) {}
  j <= i;
  j = 21;
try { if (Inst110 <= 1000 && typeof (j) != "undefined") {_RecordType("<3118,3119,135>",(j)); Inst110++; } } catch(e) {}
try { if (Inst111 <= 1000 && typeof (i) != "undefined") {_RecordType("<3128,3129,136>",(i)); Inst111++; } } catch(e) {}try { if (Inst112 <= 1000 && typeof (j) != "undefined") {_RecordType("<3132,3133,136>",(j)); Inst112++; } } catch(e) {}
  i > j;
  j = 21;
try { if (Inst113 <= 1000 && typeof (j) != "undefined") {_RecordType("<3137,3138,137>",(j)); Inst113++; } } catch(e) {}
try { if (Inst114 <= 1000 && typeof (i) != "undefined") {_RecordType("<3147,3148,138>",(i)); Inst114++; } } catch(e) {}try { if (Inst115 <= 1000 && typeof (j) != "undefined") {_RecordType("<3152,3153,138>",(j)); Inst115++; } } catch(e) {}
  i >= j;
  j = 21;
try { if (Inst116 <= 1000 && typeof (j) != "undefined") {_RecordType("<3157,3158,139>",(j)); Inst116++; } } catch(e) {}
try { if (Inst117 <= 1000 && typeof (i) != "undefined") {_RecordType("<3167,3168,140>",(i)); Inst117++; } } catch(e) {}try { if (Inst118 <= 1000 && typeof (j) != "undefined") {_RecordType("<3172,3173,140>",(j)); Inst118++; } } catch(e) {}
  i != j;
  j = 21;
try { if (Inst119 <= 1000 && typeof (j) != "undefined") {_RecordType("<3177,3178,141>",(j)); Inst119++; } } catch(e) {}
try { if (Inst120 <= 1000 && typeof (i) != "undefined") {_RecordType("<3187,3188,142>",(i)); Inst120++; } } catch(e) {}try { if (Inst121 <= 1000 && typeof (i) != "undefined") {_RecordType("<3192,3193,142>",(i)); Inst121++; } } catch(e) {}
  i == i;
  j = 21;
try { if (Inst122 <= 1000 && typeof (j) != "undefined") {_RecordType("<3197,3198,143>",(j)); Inst122++; } } catch(e) {}
try { if (Inst123 <= 1000 && typeof (i) != "undefined") {_RecordType("<3207,3208,144>",(i)); Inst123++; } } catch(e) {}try { if (Inst124 <= 1000 && typeof (j) != "undefined") {_RecordType("<3211,3212,144>",(j)); Inst124++; } } catch(e) {}
  i < j;
  j = 21;
try { if (Inst125 <= 1000 && typeof (j) != "undefined") {_RecordType("<3216,3217,145>",(j)); Inst125++; } } catch(e) {}
try { if (Inst126 <= 1000 && typeof (i) != "undefined") {_RecordType("<3226,3227,146>",(i)); Inst126++; } } catch(e) {}try { if (Inst127 <= 1000 && typeof (j) != "undefined") {_RecordType("<3231,3232,146>",(j)); Inst127++; } } catch(e) {}
  i <= j;
  j = 21;
try { if (Inst128 <= 1000 && typeof (j) != "undefined") {_RecordType("<3236,3237,147>",(j)); Inst128++; } } catch(e) {}
try { if (Inst129 <= 1000 && typeof (j) != "undefined") {_RecordType("<3246,3247,148>",(j)); Inst129++; } } catch(e) {}try { if (Inst130 <= 1000 && typeof (i) != "undefined") {_RecordType("<3250,3251,148>",(i)); Inst130++; } } catch(e) {}
  j > i;
  j = 21;
try { if (Inst131 <= 1000 && typeof (j) != "undefined") {_RecordType("<3255,3256,149>",(j)); Inst131++; } } catch(e) {}
try { if (Inst132 <= 1000 && typeof (j) != "undefined") {_RecordType("<3265,3266,150>",(j)); Inst132++; } } catch(e) {}try { if (Inst133 <= 1000 && typeof (i) != "undefined") {_RecordType("<3270,3271,150>",(i)); Inst133++; } } catch(e) {}
  j >= i;
  j = 21;
try { if (Inst134 <= 1000 && typeof (j) != "undefined") {_RecordType("<3275,3276,151>",(j)); Inst134++; } } catch(e) {}
try { if (Inst135 <= 1000 && typeof (j) != "undefined") {_RecordType("<3285,3286,152>",(j)); Inst135++; } } catch(e) {}try { if (Inst136 <= 1000 && typeof (i) != "undefined") {_RecordType("<3290,3291,152>",(i)); Inst136++; } } catch(e) {}
  j == i;
  j = 21;
try { if (Inst137 <= 1000 && typeof (j) != "undefined") {_RecordType("<3295,3296,153>",(j)); Inst137++; } } catch(e) {}
try { if (Inst138 <= 1000 && typeof (i) != "undefined") {_RecordType("<3305,3306,154>",(i)); Inst138++; } } catch(e) {}try { if (Inst139 <= 1000 && typeof (i) != "undefined") {_RecordType("<3310,3311,154>",(i)); Inst139++; } } catch(e) {}
  i != i;
  j = 21;
try { if (Inst140 <= 1000 && typeof (j) != "undefined") {_RecordType("<3315,3316,155>",(j)); Inst140++; } } catch(e) {}
try { if (Inst141 <= 1000 && typeof (j) != "undefined") {_RecordType("<3325,3326,156>",(j)); Inst141++; } } catch(e) {}try { if (Inst142 <= 1000 && typeof (j) != "undefined") {_RecordType("<3330,3331,156>",(j)); Inst142++; } } catch(e) {}
  j == j;
  j = 21;
try { if (Inst143 <= 1000 && typeof (j) != "undefined") {_RecordType("<3335,3336,157>",(j)); Inst143++; } } catch(e) {}
try { if (Inst144 <= 1000 && typeof (j) != "undefined") {_RecordType("<3345,3346,158>",(j)); Inst144++; } } catch(e) {}try { if (Inst145 <= 1000 && typeof (j) != "undefined") {_RecordType("<3350,3351,158>",(j)); Inst145++; } } catch(e) {}
  j != j;
  100 > 99;
  101 >= 90;
  11111 > -234;
  -888 <= -20;

  while (234 > 456) {
try { if (Inst147 <= 1000 && typeof (i) != "undefined") {_RecordType("<3440,3441,165>",(i)); Inst147++; } } catch(e) {}
    i = i + 1;
try { if (Inst146 <= 1000 && typeof (i) != "undefined") {_RecordType("<3436,3437,165>",(i)); Inst146++; } } catch(e) {}
  }

  switch (3) {
    case 5:
      break;

    case 3:
      j = 13;
try { if (Inst148 <= 1000 && typeof (j) != "undefined") {_RecordType("<3511,3512,173>",(j)); Inst148++; } } catch(e) {}

    default:
      i = 2;
try { if (Inst149 <= 1000 && typeof (i) != "undefined") {_RecordType("<3539,3540,176>",(i)); Inst149++; } } catch(e) {}

    case 7:
      j = 17;
try { if (Inst150 <= 1000 && typeof (j) != "undefined") {_RecordType("<3565,3566,179>",(j)); Inst150++; } } catch(e) {}
      break;

    case 9:
      j = 19;
try { if (Inst151 <= 1000 && typeof (j) != "undefined") {_RecordType("<3605,3606,183>",(j)); Inst151++; } } catch(e) {}
      break;
  }

  17;
try { if (Inst152 <= 1000 && typeof (j) != "undefined") {_RecordType("<3639,3640,188>",(j)); Inst152++; } } catch(e) {}
  j;
  "switch with constant value";
}

try { if (Inst153 <= 1000 && typeof (TrueToString) != "undefined") {_RecordType("<3686,3698,192>",(TrueToString)); Inst153++; } } catch(e) {}
function TrueToString() {
try { if (Inst154 <= 1000 && typeof (true.toString) != "undefined") {_RecordType("<3712,3725,193>",(true.toString)); Inst154++; } } catch(e) {}
  return true.toString();
}

try { if (Inst155 <= 1000 && typeof (FalseToString) != "undefined") {_RecordType("<3741,3754,196>",(FalseToString)); Inst155++; } } catch(e) {}
function FalseToString() {
try { if (Inst156 <= 1000 && typeof (false.toString) != "undefined") {_RecordType("<3768,3782,197>",(false.toString)); Inst156++; } } catch(e) {}
  return false.toString();
}

try { if (Inst157 <= 1000 && typeof (BoolTest) != "undefined") {_RecordType("<3798,3806,200>",(BoolTest)); Inst157++; } } catch(e) {}
function BoolTest() {
  "true";
try { if (Inst158 <= 1000 && typeof (TrueToString) != "undefined") {_RecordType("<3823,3835,202>",(TrueToString)); Inst158++; } } catch(e) {}
  TrueToString();
  "true";
try { if (Inst159 <= 1000 && typeof (TrueToString) != "undefined") {_RecordType("<3851,3863,204>",(TrueToString)); Inst159++; } } catch(e) {}
  TrueToString();
  "true";
try { if (Inst160 <= 1000 && typeof (TrueToString) != "undefined") {_RecordType("<3879,3891,206>",(TrueToString)); Inst160++; } } catch(e) {}
  TrueToString();
  "false";
try { if (Inst161 <= 1000 && typeof (FalseToString) != "undefined") {_RecordType("<3908,3921,208>",(FalseToString)); Inst161++; } } catch(e) {}
  FalseToString();
  "false";
try { if (Inst162 <= 1000 && typeof (FalseToString) != "undefined") {_RecordType("<3938,3951,210>",(FalseToString)); Inst162++; } } catch(e) {}
  FalseToString();
  "false";
try { if (Inst163 <= 1000 && typeof (FalseToString) != "undefined") {_RecordType("<3968,3981,212>",(FalseToString)); Inst163++; } } catch(e) {}
  FalseToString();

  Boolean.prototype.toString = function () {
    return "foo";
  };
try { if (Inst164 <= 1000 && typeof (Boolean.prototype.toString) != "undefined") {_RecordType("<3988,4014,214>",(Boolean.prototype.toString)); Inst164++; } } catch(e) {}try { if (Inst165 <= 1000 && typeof (Boolean.prototype) != "undefined") {_RecordType("<3988,4005,214>",(Boolean.prototype)); Inst165++; } } catch(e) {}try { if (Inst166 <= 1000 && typeof (Boolean) != "undefined") {_RecordType("<3988,3995,214>",(Boolean)); Inst166++; } } catch(e) {}

  "foo";
try { if (Inst167 <= 1000 && typeof (TrueToString) != "undefined") {_RecordType("<4066,4078,219>",(TrueToString)); Inst167++; } } catch(e) {}
  TrueToString();
  "foo";
try { if (Inst168 <= 1000 && typeof (FalseToString) != "undefined") {_RecordType("<4093,4106,221>",(FalseToString)); Inst168++; } } catch(e) {}
  FalseToString();
} // Some tests of shifts that get into the corners in terms of coverage.
// We generate different code for the case where the operand is a constant.


try { if (Inst169 <= 1000 && typeof (ShiftTest) != "undefined") {_RecordType("<4271,4280,226>",(ShiftTest)); Inst169++; } } catch(e) {}
function ShiftTest() {
  var x = 123;
try { if (Inst170 <= 1000 && typeof (x) != "undefined") {_RecordType("<4291,4292,227>",(x)); Inst170++; } } catch(e) {}
try { if (Inst171 <= 1000 && typeof (x) != "undefined") {_RecordType("<4302,4303,228>",(x)); Inst171++; } } catch(e) {}
  x;
try { if (Inst172 <= 1000 && typeof (x) != "undefined") {_RecordType("<4307,4308,229>",(x)); Inst172++; } } catch(e) {}
  x >> 0;
try { if (Inst173 <= 1000 && typeof (x) != "undefined") {_RecordType("<4317,4318,230>",(x)); Inst173++; } } catch(e) {}
  x;
try { if (Inst174 <= 1000 && typeof (x) != "undefined") {_RecordType("<4322,4323,231>",(x)); Inst174++; } } catch(e) {}
  x << 0;
try { if (Inst175 <= 1000 && typeof (x) != "undefined") {_RecordType("<4332,4333,232>",(x)); Inst175++; } } catch(e) {}
  x;
try { if (Inst176 <= 1000 && typeof (x) != "undefined") {_RecordType("<4337,4338,233>",(x)); Inst176++; } } catch(e) {}
  x >>> 0;
  61;
try { if (Inst177 <= 1000 && typeof (x) != "undefined") {_RecordType("<4354,4355,235>",(x)); Inst177++; } } catch(e) {}
  x >> 1;
  246;
try { if (Inst178 <= 1000 && typeof (x) != "undefined") {_RecordType("<4371,4372,237>",(x)); Inst178++; } } catch(e) {}
  x << 1;
  61;
try { if (Inst179 <= 1000 && typeof (x) != "undefined") {_RecordType("<4387,4388,239>",(x)); Inst179++; } } catch(e) {}
  x >>> 1;
  x = -123;
try { if (Inst180 <= 1000 && typeof (x) != "undefined") {_RecordType("<4398,4399,240>",(x)); Inst180++; } } catch(e) {}
try { if (Inst181 <= 1000 && typeof (x) != "undefined") {_RecordType("<4410,4411,241>",(x)); Inst181++; } } catch(e) {}
  x;
try { if (Inst182 <= 1000 && typeof (x) != "undefined") {_RecordType("<4415,4416,242>",(x)); Inst182++; } } catch(e) {}
  x >> 0;
try { if (Inst183 <= 1000 && typeof (x) != "undefined") {_RecordType("<4425,4426,243>",(x)); Inst183++; } } catch(e) {}
  x;
try { if (Inst184 <= 1000 && typeof (x) != "undefined") {_RecordType("<4430,4431,244>",(x)); Inst184++; } } catch(e) {}
  x << 0;
try { if (Inst185 <= 1000 && typeof (x) != "undefined") {_RecordType("<4460,4461,245>",(x)); Inst185++; } } catch(e) {}
  0x10000 * 0x10000 + x;
try { if (Inst186 <= 1000 && typeof (x) != "undefined") {_RecordType("<4465,4466,246>",(x)); Inst186++; } } catch(e) {}
  x >>> 0;
  -62;
try { if (Inst187 <= 1000 && typeof (x) != "undefined") {_RecordType("<4483,4484,248>",(x)); Inst187++; } } catch(e) {}
  x >> 1;
  -246;
try { if (Inst188 <= 1000 && typeof (x) != "undefined") {_RecordType("<4501,4502,250>",(x)); Inst188++; } } catch(e) {}
  x << 1;
  0x10000 * 0x8000 - 62;
try { if (Inst189 <= 1000 && typeof (x) != "undefined") {_RecordType("<4536,4537,252>",(x)); Inst189++; } } catch(e) {}
  x >>> 1;
  -0x40000001;
  -0x3fffffff - 2;
  x = 123;
try { if (Inst190 <= 1000 && typeof (x) != "undefined") {_RecordType("<4581,4582,255>",(x)); Inst190++; } } catch(e) {}
  0;
try { if (Inst191 <= 1000 && typeof (x) != "undefined") {_RecordType("<4597,4598,257>",(x)); Inst191++; } } catch(e) {}
  x & 0;
  // Answer is non-smi and lhs of << is a temporary heap number that we can
  // overwrite.
  x = 123.0001;
try { if (Inst192 <= 1000 && typeof (x) != "undefined") {_RecordType("<4698,4699,260>",(x)); Inst192++; } } catch(e) {}
  1073741824;
try { if (Inst193 <= 1000 && typeof (x) != "undefined") {_RecordType("<4728,4729,262>",(x)); Inst193++; } } catch(e) {}try { if (Inst194 <= 1000 && typeof (x) != "undefined") {_RecordType("<4732,4733,262>",(x)); Inst194++; } } catch(e) {}
  x * x << 30;
  x = 123; // Answer is non-smi and lhs of << is a temporary heap number that we think
try { if (Inst195 <= 1000 && typeof (x) != "undefined") {_RecordType("<4743,4744,263>",(x)); Inst195++; } } catch(e) {}
  // we can overwrite (but we can't because it's a Smi).

  1073741824;
try { if (Inst196 <= 1000 && typeof (x) != "undefined") {_RecordType("<4902,4903,267>",(x)); Inst196++; } } catch(e) {}try { if (Inst197 <= 1000 && typeof (x) != "undefined") {_RecordType("<4906,4907,267>",(x)); Inst197++; } } catch(e) {}
  x * x << 30;
}

try { if (Inst198 <= 1000 && typeof (test) != "undefined") {_RecordType("<4918,4922,270>",(test)); Inst198++; } } catch(e) {}
test();
try { if (Inst199 <= 1000 && typeof (BoolTest) != "undefined") {_RecordType("<4926,4934,271>",(BoolTest)); Inst199++; } } catch(e) {}
BoolTest();
try { if (Inst200 <= 1000 && typeof (ShiftTest) != "undefined") {_RecordType("<4938,4947,272>",(ShiftTest)); Inst200++; } } catch(e) {}
ShiftTest();

