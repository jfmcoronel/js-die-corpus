var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2008 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// Test the optimized implementation of comparison with single-character
// strings.
try { if (Inst1 <= 1000 && typeof (String.fromCharCode) != "undefined") {_RecordType("<1695,1714,29>",(String.fromCharCode)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (String) != "undefined") {_RecordType("<1695,1701,29>",(String)); Inst2++; } } catch(e) {}
var a = ['', String.fromCharCode(0), ' ', 'e', 'erik', 'f', 'foo', 'g', 'goo', -1, 0, 1, 1.2, -7.9, true, false, 'foo', '0', 'NaN'];
try { if (Inst0 <= 1000 && typeof (a) != "undefined") {_RecordType("<1686,1687,29>",(a)); Inst0++; } } catch(e) {}

for (var i in a) {
try { if (Inst3 <= 1000 && typeof (i) != "undefined") {_RecordType("<1825,1826,31>",(i)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (a) != "undefined") {_RecordType("<1830,1831,31>",(a)); Inst4++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (a[i]) != "undefined") {_RecordType("<1845,1849,32>",(a[i])); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (a) != "undefined") {_RecordType("<1845,1846,32>",(a)); Inst7++; } } catch(e) {}
  var x = a[i];
try { if (Inst5 <= 1000 && typeof (x) != "undefined") {_RecordType("<1841,1842,32>",(x)); Inst5++; } } catch(e) {}
  var f = 'f';
try { if (Inst8 <= 1000 && typeof (f) != "undefined") {_RecordType("<1857,1858,33>",(f)); Inst8++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (x) != "undefined") {_RecordType("<1868,1869,34>",(x)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (f) != "undefined") {_RecordType("<1873,1874,34>",(f)); Inst10++; } } catch(e) {}
  x == f;
try { if (Inst11 <= 1000 && typeof (x) != "undefined") {_RecordType("<1878,1879,35>",(x)); Inst11++; } } catch(e) {}
  x == 'f';
try { if (Inst12 <= 1000 && typeof (x) != "undefined") {_RecordType("<1897,1898,36>",(x)); Inst12++; } } catch(e) {}
  "==" + x;
try { if (Inst13 <= 1000 && typeof (x) != "undefined") {_RecordType("<1902,1903,37>",(x)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (f) != "undefined") {_RecordType("<1908,1909,37>",(f)); Inst14++; } } catch(e) {}
  x === f;
try { if (Inst15 <= 1000 && typeof (x) != "undefined") {_RecordType("<1913,1914,38>",(x)); Inst15++; } } catch(e) {}
  x === 'f';
try { if (Inst16 <= 1000 && typeof (x) != "undefined") {_RecordType("<1934,1935,39>",(x)); Inst16++; } } catch(e) {}
  "===" + x;
try { if (Inst17 <= 1000 && typeof (x) != "undefined") {_RecordType("<1939,1940,40>",(x)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (f) != "undefined") {_RecordType("<1943,1944,40>",(f)); Inst18++; } } catch(e) {}
  x < f;
try { if (Inst19 <= 1000 && typeof (x) != "undefined") {_RecordType("<1948,1949,41>",(x)); Inst19++; } } catch(e) {}
  x < 'f';
try { if (Inst20 <= 1000 && typeof (x) != "undefined") {_RecordType("<1965,1966,42>",(x)); Inst20++; } } catch(e) {}
  "<" + x;
try { if (Inst21 <= 1000 && typeof (x) != "undefined") {_RecordType("<1970,1971,43>",(x)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (f) != "undefined") {_RecordType("<1975,1976,43>",(f)); Inst22++; } } catch(e) {}
  x <= f;
try { if (Inst23 <= 1000 && typeof (x) != "undefined") {_RecordType("<1980,1981,44>",(x)); Inst23++; } } catch(e) {}
  x <= 'f';
try { if (Inst24 <= 1000 && typeof (x) != "undefined") {_RecordType("<1999,2000,45>",(x)); Inst24++; } } catch(e) {}
  "<=" + x;
try { if (Inst25 <= 1000 && typeof (x) != "undefined") {_RecordType("<2004,2005,46>",(x)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (f) != "undefined") {_RecordType("<2008,2009,46>",(f)); Inst26++; } } catch(e) {}
  x > f;
try { if (Inst27 <= 1000 && typeof (x) != "undefined") {_RecordType("<2013,2014,47>",(x)); Inst27++; } } catch(e) {}
  x > 'f';
try { if (Inst28 <= 1000 && typeof (x) != "undefined") {_RecordType("<2030,2031,48>",(x)); Inst28++; } } catch(e) {}
  ">" + x;
try { if (Inst29 <= 1000 && typeof (x) != "undefined") {_RecordType("<2035,2036,49>",(x)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (f) != "undefined") {_RecordType("<2040,2041,49>",(f)); Inst30++; } } catch(e) {}
  x >= f;
try { if (Inst31 <= 1000 && typeof (x) != "undefined") {_RecordType("<2045,2046,50>",(x)); Inst31++; } } catch(e) {}
  x >= 'f';
try { if (Inst32 <= 1000 && typeof (x) != "undefined") {_RecordType("<2064,2065,51>",(x)); Inst32++; } } catch(e) {}
  ">=" + x;
try { if (Inst33 <= 1000 && typeof (f) != "undefined") {_RecordType("<2069,2070,52>",(f)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (x) != "undefined") {_RecordType("<2074,2075,52>",(x)); Inst34++; } } catch(e) {}
  f == x;
try { if (Inst35 <= 1000 && typeof (x) != "undefined") {_RecordType("<2086,2087,53>",(x)); Inst35++; } } catch(e) {}
  'f' == x;
try { if (Inst36 <= 1000 && typeof (x) != "undefined") {_RecordType("<2099,2100,54>",(x)); Inst36++; } } catch(e) {}
  "==r" + x;
try { if (Inst37 <= 1000 && typeof (f) != "undefined") {_RecordType("<2104,2105,55>",(f)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (x) != "undefined") {_RecordType("<2110,2111,55>",(x)); Inst38++; } } catch(e) {}
  f === x;
try { if (Inst39 <= 1000 && typeof (x) != "undefined") {_RecordType("<2123,2124,56>",(x)); Inst39++; } } catch(e) {}
  'f' === x;
try { if (Inst40 <= 1000 && typeof (x) != "undefined") {_RecordType("<2137,2138,57>",(x)); Inst40++; } } catch(e) {}
  "===r" + x;
try { if (Inst41 <= 1000 && typeof (f) != "undefined") {_RecordType("<2142,2143,58>",(f)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (x) != "undefined") {_RecordType("<2146,2147,58>",(x)); Inst42++; } } catch(e) {}
  f > x;
try { if (Inst43 <= 1000 && typeof (x) != "undefined") {_RecordType("<2157,2158,59>",(x)); Inst43++; } } catch(e) {}
  'f' > x;
try { if (Inst44 <= 1000 && typeof (x) != "undefined") {_RecordType("<2169,2170,60>",(x)); Inst44++; } } catch(e) {}
  "<r" + x;
try { if (Inst45 <= 1000 && typeof (f) != "undefined") {_RecordType("<2174,2175,61>",(f)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (x) != "undefined") {_RecordType("<2179,2180,61>",(x)); Inst46++; } } catch(e) {}
  f >= x;
try { if (Inst47 <= 1000 && typeof (x) != "undefined") {_RecordType("<2191,2192,62>",(x)); Inst47++; } } catch(e) {}
  'f' >= x;
try { if (Inst48 <= 1000 && typeof (x) != "undefined") {_RecordType("<2204,2205,63>",(x)); Inst48++; } } catch(e) {}
  "<=r" + x;
try { if (Inst49 <= 1000 && typeof (f) != "undefined") {_RecordType("<2209,2210,64>",(f)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (x) != "undefined") {_RecordType("<2213,2214,64>",(x)); Inst50++; } } catch(e) {}
  f < x;
try { if (Inst51 <= 1000 && typeof (x) != "undefined") {_RecordType("<2224,2225,65>",(x)); Inst51++; } } catch(e) {}
  'f' < x;
try { if (Inst52 <= 1000 && typeof (x) != "undefined") {_RecordType("<2236,2237,66>",(x)); Inst52++; } } catch(e) {}
  ">r" + x;
try { if (Inst53 <= 1000 && typeof (f) != "undefined") {_RecordType("<2241,2242,67>",(f)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (x) != "undefined") {_RecordType("<2246,2247,67>",(x)); Inst54++; } } catch(e) {}
  f <= x;
try { if (Inst55 <= 1000 && typeof (x) != "undefined") {_RecordType("<2258,2259,68>",(x)); Inst55++; } } catch(e) {}
  'f' <= x;
try { if (Inst56 <= 1000 && typeof (x) != "undefined") {_RecordType("<2271,2272,69>",(x)); Inst56++; } } catch(e) {}
  ">=r" + x;
}

