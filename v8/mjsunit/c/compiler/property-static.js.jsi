var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2013 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// Flags: --allow-natives-syntax
// Test usage of static type information for loads that would otherwise
// turn into polymorphic or generic loads.
// Prepare a highly polymorphic load to be used by all tests.
Object.prototype.load = function () {
try { if (Inst3 <= 1000 && typeof (this.property) != "undefined") {_RecordType("<1854,1867,32>",(this.property)); Inst3++; } } catch(e) {}
  return this.property;
};
try { if (Inst0 <= 1000 && typeof (Object.prototype.load) != "undefined") {_RecordType("<1807,1828,31>",(Object.prototype.load)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<1807,1823,31>",(Object.prototype)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1807,1813,31>",(Object)); Inst2++; } } catch(e) {}

try { if (Inst4 <= 1000 && typeof (Object.prototype.load.call) != "undefined") {_RecordType("<1873,1899,35>",(Object.prototype.load.call)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Object.prototype.load) != "undefined") {_RecordType("<1873,1894,35>",(Object.prototype.load)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<1873,1889,35>",(Object.prototype)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1873,1879,35>",(Object)); Inst7++; } } catch(e) {}
Object.prototype.load.call({
  A: 0,
  property: 10
});
try { if (Inst8 <= 1000 && typeof (Object.prototype.load.call) != "undefined") {_RecordType("<1929,1955,39>",(Object.prototype.load.call)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Object.prototype.load) != "undefined") {_RecordType("<1929,1950,39>",(Object.prototype.load)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<1929,1945,39>",(Object.prototype)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1929,1935,39>",(Object)); Inst11++; } } catch(e) {}
Object.prototype.load.call({
  A: 0,
  B: 0,
  property: 11
});
try { if (Inst12 <= 1000 && typeof (Object.prototype.load.call) != "undefined") {_RecordType("<1993,2019,44>",(Object.prototype.load.call)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Object.prototype.load) != "undefined") {_RecordType("<1993,2014,44>",(Object.prototype.load)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<1993,2009,44>",(Object.prototype)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1993,1999,44>",(Object)); Inst15++; } } catch(e) {}
Object.prototype.load.call({
  A: 0,
  B: 0,
  C: 0,
  property: 12
});
try { if (Inst16 <= 1000 && typeof (Object.prototype.load.call) != "undefined") {_RecordType("<2065,2091,50>",(Object.prototype.load.call)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Object.prototype.load) != "undefined") {_RecordType("<2065,2086,50>",(Object.prototype.load)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<2065,2081,50>",(Object.prototype)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Object) != "undefined") {_RecordType("<2065,2071,50>",(Object)); Inst19++; } } catch(e) {}
Object.prototype.load.call({
  A: 0,
  B: 0,
  C: 0,
  D: 0,
  property: 13
});
try { if (Inst20 <= 1000 && typeof (Object.prototype.load.call) != "undefined") {_RecordType("<2145,2171,57>",(Object.prototype.load.call)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Object.prototype.load) != "undefined") {_RecordType("<2145,2166,57>",(Object.prototype.load)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<2145,2161,57>",(Object.prototype)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Object) != "undefined") {_RecordType("<2145,2151,57>",(Object)); Inst23++; } } catch(e) {}
Object.prototype.load.call({
  A: 0,
  B: 0,
  C: 0,
  D: 0,
  E: 0,
  property: 14
});
try { if (Inst24 <= 1000 && typeof (Object.prototype.load.call) != "undefined") {_RecordType("<2233,2259,65>",(Object.prototype.load.call)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Object.prototype.load) != "undefined") {_RecordType("<2233,2254,65>",(Object.prototype.load)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<2233,2249,65>",(Object.prototype)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (Object) != "undefined") {_RecordType("<2233,2239,65>",(Object)); Inst27++; } } catch(e) {}
Object.prototype.load.call({
  A: 0,
  B: 0,
  C: 0,
  D: 0,
  E: 0,
  F: 0,
  property: 15
}); // Test for object literals.

(function () {
try { if (Inst28 <= 1000 && typeof (f) != "undefined") {_RecordType("<2385,2386,76>",(f)); Inst28++; } } catch(e) {}
  function f(x) {
try { if (Inst29 <= 1000 && typeof (x) != "undefined") {_RecordType("<2387,2388,76>",(x)); Inst29++; } } catch(e) {}
try { if (Inst31 <= 1000 && typeof (x) != "undefined") {_RecordType("<2427,2428,78>",(x)); Inst31++; } } catch(e) {}
    var object = {
      property: x
    };
try { if (Inst30 <= 1000 && typeof (object) != "undefined") {_RecordType("<2400,2406,77>",(object)); Inst30++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (object.load) != "undefined") {_RecordType("<2447,2458,80>",(object.load)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (object) != "undefined") {_RecordType("<2447,2453,80>",(object)); Inst33++; } } catch(e) {}
    return object.load();
  }

  1;
try { if (Inst34 <= 1000 && typeof (f) != "undefined") {_RecordType("<2474,2475,84>",(f)); Inst34++; } } catch(e) {}
  f(1);
  2;
try { if (Inst35 <= 1000 && typeof (f) != "undefined") {_RecordType("<2487,2488,86>",(f)); Inst35++; } } catch(e) {}
  f(2);
  3;
try { if (Inst36 <= 1000 && typeof (f) != "undefined") {_RecordType("<2500,2501,88>",(f)); Inst36++; } } catch(e) {}
  f(3);
})(); // Test for inlined constructors.


(function () {
try { if (Inst37 <= 1000 && typeof (c) != "undefined") {_RecordType("<2574,2575,93>",(c)); Inst37++; } } catch(e) {}
  function c(x) {
try { if (Inst38 <= 1000 && typeof (x) != "undefined") {_RecordType("<2576,2577,93>",(x)); Inst38++; } } catch(e) {}
try { if (Inst40 <= 1000 && typeof (x) != "undefined") {_RecordType("<2601,2602,94>",(x)); Inst40++; } } catch(e) {}
    this.property = x;
try { if (Inst39 <= 1000 && typeof (this.property) != "undefined") {_RecordType("<2585,2598,94>",(this.property)); Inst39++; } } catch(e) {}
  }

try { if (Inst41 <= 1000 && typeof (f) != "undefined") {_RecordType("<2620,2621,97>",(f)); Inst41++; } } catch(e) {}
  function f(x) {
try { if (Inst42 <= 1000 && typeof (x) != "undefined") {_RecordType("<2622,2623,97>",(x)); Inst42++; } } catch(e) {}
try { if (Inst44 <= 1000 && typeof (c) != "undefined") {_RecordType("<2648,2649,98>",(c)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (x) != "undefined") {_RecordType("<2650,2651,98>",(x)); Inst45++; } } catch(e) {}
    var object = new c(x);
try { if (Inst43 <= 1000 && typeof (object) != "undefined") {_RecordType("<2635,2641,98>",(object)); Inst43++; } } catch(e) {}
try { if (Inst46 <= 1000 && typeof (object.load) != "undefined") {_RecordType("<2665,2676,99>",(object.load)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (object) != "undefined") {_RecordType("<2665,2671,99>",(object)); Inst47++; } } catch(e) {}
    return object.load();
  }

  1;
try { if (Inst48 <= 1000 && typeof (f) != "undefined") {_RecordType("<2692,2693,103>",(f)); Inst48++; } } catch(e) {}
  f(1);
  2;
try { if (Inst49 <= 1000 && typeof (f) != "undefined") {_RecordType("<2705,2706,105>",(f)); Inst49++; } } catch(e) {}
  f(2);
  3;
try { if (Inst50 <= 1000 && typeof (f) != "undefined") {_RecordType("<2718,2719,107>",(f)); Inst50++; } } catch(e) {}
  f(3);
})();

