var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2015 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax
try { if (Inst0 <= 1000 && typeof (foo) != "undefined") {_RecordType("<209,212,5>",(foo)); Inst0++; } } catch(e) {}
function foo(x) {
try { if (Inst1 <= 1000 && typeof (x) != "undefined") {_RecordType("<213,214,5>",(x)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (x) != "undefined") {_RecordType("<227,228,6>",(x)); Inst2++; } } catch(e) {}
  return x;
}

try { if (Inst3 <= 1000 && typeof (run) != "undefined") {_RecordType("<242,245,9>",(run)); Inst3++; } } catch(e) {}
function run() {
try { if (Inst5 <= 1000 && typeof (Array) != "undefined") {_RecordType("<267,272,10>",(Array)); Inst5++; } } catch(e) {}
  var line = new Array(2);
try { if (Inst4 <= 1000 && typeof (line) != "undefined") {_RecordType("<256,260,10>",(line)); Inst4++; } } catch(e) {}

  for (var n = 3; n > 0; n = n - 1) {
try { if (Inst6 <= 1000 && typeof (n) != "undefined") {_RecordType("<289,290,12>",(n)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (n) != "undefined") {_RecordType("<296,297,12>",(n)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (n) != "undefined") {_RecordType("<303,304,12>",(n)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (n) != "undefined") {_RecordType("<307,308,12>",(n)); Inst9++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (n) != "undefined") {_RecordType("<324,325,13>",(n)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (foo) != "undefined") {_RecordType("<328,331,13>",(foo)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (line.length) != "undefined") {_RecordType("<332,343,13>",(line.length)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (line) != "undefined") {_RecordType("<332,336,13>",(line)); Inst13++; } } catch(e) {}
    if (n < foo(line.length)) {
try { if (Inst15 <= 1000 && typeof (Array) != "undefined") {_RecordType("<365,370,14>",(Array)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (n) != "undefined") {_RecordType("<371,372,14>",(n)); Inst16++; } } catch(e) {}
      line = new Array(n);
try { if (Inst14 <= 1000 && typeof (line) != "undefined") {_RecordType("<354,358,14>",(line)); Inst14++; } } catch(e) {}
    }

try { if (Inst19 <= 1000 && typeof (n) != "undefined") {_RecordType("<396,397,17>",(n)); Inst19++; } } catch(e) {}
    line[0] = n;
try { if (Inst17 <= 1000 && typeof (line[0]) != "undefined") {_RecordType("<386,393,17>",(line[0])); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (line) != "undefined") {_RecordType("<386,390,17>",(line)); Inst18++; } } catch(e) {}
  }
}

void 0;
try { if (Inst20 <= 1000 && typeof (run) != "undefined") {_RecordType("<414,417,22>",(run)); Inst20++; } } catch(e) {}
run();
void 0;
try { if (Inst21 <= 1000 && typeof (run) != "undefined") {_RecordType("<429,432,24>",(run)); Inst21++; } } catch(e) {}
run();

