var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2010 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// Flags: --allow-natives-syntax
// Test stack traces with method calls.
try { if (Inst0 <= 1000 && typeof (Hest) != "undefined") {_RecordType("<1679,1683,29>",(Hest)); Inst0++; } } catch(e) {}
function Hest() {
  ;
}

try { if (Inst1 <= 1000 && typeof (Svin) != "undefined") {_RecordType("<1704,1708,33>",(Svin)); Inst1++; } } catch(e) {}
function Svin() {
  ;
}

Svin.prototype.two = function () {
  /* xxxxxxx */
try { if (Inst5 <= 1000 && typeof (o.three) != "undefined") {_RecordType("<1773,1780,39>",(o.three)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (o) != "undefined") {_RecordType("<1773,1774,39>",(o)); Inst6++; } } catch(e) {}
  o.three();
};
try { if (Inst2 <= 1000 && typeof (Svin.prototype.two) != "undefined") {_RecordType("<1720,1738,37>",(Svin.prototype.two)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Svin.prototype) != "undefined") {_RecordType("<1720,1734,37>",(Svin.prototype)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Svin) != "undefined") {_RecordType("<1720,1724,37>",(Svin)); Inst4++; } } catch(e) {}

Hest.prototype.one = function (x) {
try { if (Inst10 <= 1000 && typeof (x) != "undefined") {_RecordType("<1819,1820,42>",(x)); Inst10++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (x.two) != "undefined") {_RecordType("<1826,1831,43>",(x.two)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (x) != "undefined") {_RecordType("<1826,1827,43>",(x)); Inst12++; } } catch(e) {}
  x.two();
};
try { if (Inst7 <= 1000 && typeof (Hest.prototype.one) != "undefined") {_RecordType("<1788,1806,42>",(Hest.prototype.one)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Hest.prototype) != "undefined") {_RecordType("<1788,1802,42>",(Hest.prototype)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Hest) != "undefined") {_RecordType("<1788,1792,42>",(Hest)); Inst9++; } } catch(e) {}

Hest.prototype.three = function () {
try { if (Inst16 <= 1000 && typeof (v) != "undefined") {_RecordType("<1882,1883,47>",(v)); Inst16++; } } catch(e) {}
  if (v == 42) {
try { if (Inst17 <= 1000 && typeof (Error) != "undefined") {_RecordType("<1907,1912,48>",(Error)); Inst17++; } } catch(e) {}
    throw new Error("urg");
  }
};
try { if (Inst13 <= 1000 && typeof (Hest.prototype.three) != "undefined") {_RecordType("<1839,1859,46>",(Hest.prototype.three)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Hest.prototype) != "undefined") {_RecordType("<1839,1853,46>",(Hest.prototype)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Hest) != "undefined") {_RecordType("<1839,1843,46>",(Hest)); Inst15++; } } catch(e) {}

try { if (Inst19 <= 1000 && typeof (Hest) != "undefined") {_RecordType("<1941,1945,52>",(Hest)); Inst19++; } } catch(e) {}
var o = new Hest();
try { if (Inst18 <= 1000 && typeof (o) != "undefined") {_RecordType("<1933,1934,52>",(o)); Inst18++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (Svin) != "undefined") {_RecordType("<1961,1965,53>",(Svin)); Inst21++; } } catch(e) {}
var s = new Svin();
try { if (Inst20 <= 1000 && typeof (s) != "undefined") {_RecordType("<1953,1954,53>",(s)); Inst20++; } } catch(e) {}
var v = 0;
try { if (Inst22 <= 1000 && typeof (v) != "undefined") {_RecordType("<1973,1974,54>",(v)); Inst22++; } } catch(e) {}

for (var i = 0; i < 5; i++) {
try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<1990,1991,56>",(i)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<1997,1998,56>",(i)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<2004,2005,56>",(i)); Inst25++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (o.one) != "undefined") {_RecordType("<2013,2018,57>",(o.one)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (o) != "undefined") {_RecordType("<2013,2014,57>",(o)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (s) != "undefined") {_RecordType("<2019,2020,57>",(s)); Inst28++; } } catch(e) {}
  o.one(s);
}

try { if (Inst29 <= 1000 && typeof (o.one) != "undefined") {_RecordType("<2026,2031,60>",(o.one)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (o) != "undefined") {_RecordType("<2026,2027,60>",(o)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (s) != "undefined") {_RecordType("<2032,2033,60>",(s)); Inst31++; } } catch(e) {}
o.one(s);
v = 42;
try { if (Inst32 <= 1000 && typeof (v) != "undefined") {_RecordType("<2036,2037,61>",(v)); Inst32++; } } catch(e) {}

try { if (Inst36 <= 1000 && typeof (e) != "undefined") {_RecordType("<2072,2073,65>",(e)); Inst36++; } } catch(e) {}
try {
try { if (Inst33 <= 1000 && typeof (o.one) != "undefined") {_RecordType("<2053,2058,64>",(o.one)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (o) != "undefined") {_RecordType("<2053,2054,64>",(o)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (s) != "undefined") {_RecordType("<2059,2060,64>",(s)); Inst35++; } } catch(e) {}
  o.one(s);
} catch (e) {
try { if (Inst38 <= 1000 && typeof (e.stack.toString) != "undefined") {_RecordType("<2091,2107,66>",(e.stack.toString)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (e.stack) != "undefined") {_RecordType("<2091,2098,66>",(e.stack)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (e) != "undefined") {_RecordType("<2091,2092,66>",(e)); Inst40++; } } catch(e) {}
  var stack = e.stack.toString();
try { if (Inst37 <= 1000 && typeof (stack) != "undefined") {_RecordType("<2083,2088,66>",(stack)); Inst37++; } } catch(e) {}
try { if (Inst42 <= 1000 && typeof (stack.indexOf) != "undefined") {_RecordType("<2122,2135,67>",(stack.indexOf)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (stack) != "undefined") {_RecordType("<2122,2127,67>",(stack)); Inst43++; } } catch(e) {}
  var p3 = stack.indexOf("at Hest.three");
try { if (Inst41 <= 1000 && typeof (p3) != "undefined") {_RecordType("<2117,2119,67>",(p3)); Inst41++; } } catch(e) {}
try { if (Inst45 <= 1000 && typeof (stack.indexOf) != "undefined") {_RecordType("<2165,2178,68>",(stack.indexOf)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (stack) != "undefined") {_RecordType("<2165,2170,68>",(stack)); Inst46++; } } catch(e) {}
  var p2 = stack.indexOf("at Svin.two");
try { if (Inst44 <= 1000 && typeof (p2) != "undefined") {_RecordType("<2160,2162,68>",(p2)); Inst44++; } } catch(e) {}
try { if (Inst48 <= 1000 && typeof (stack.indexOf) != "undefined") {_RecordType("<2206,2219,69>",(stack.indexOf)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (stack) != "undefined") {_RecordType("<2206,2211,69>",(stack)); Inst49++; } } catch(e) {}
  var p1 = stack.indexOf("at Hest.one");
try { if (Inst47 <= 1000 && typeof (p1) != "undefined") {_RecordType("<2201,2203,69>",(p1)); Inst47++; } } catch(e) {}
try { if (Inst50 <= 1000 && typeof (p3) != "undefined") {_RecordType("<2238,2240,70>",(p3)); Inst50++; } } catch(e) {}
  p3 != -1;
try { if (Inst51 <= 1000 && typeof (p2) != "undefined") {_RecordType("<2250,2252,71>",(p2)); Inst51++; } } catch(e) {}
  p2 != -1;
try { if (Inst52 <= 1000 && typeof (p1) != "undefined") {_RecordType("<2262,2264,72>",(p1)); Inst52++; } } catch(e) {}
  p1 != -1;
try { if (Inst53 <= 1000 && typeof (p3) != "undefined") {_RecordType("<2274,2276,73>",(p3)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (p2) != "undefined") {_RecordType("<2279,2281,73>",(p2)); Inst54++; } } catch(e) {}
  p3 < p2;
try { if (Inst55 <= 1000 && typeof (p2) != "undefined") {_RecordType("<2285,2287,74>",(p2)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (p1) != "undefined") {_RecordType("<2290,2292,74>",(p1)); Inst56++; } } catch(e) {}
  p2 < p1;
try { if (Inst57 <= 1000 && typeof (stack.indexOf) != "undefined") {_RecordType("<2296,2309,75>",(stack.indexOf)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (stack) != "undefined") {_RecordType("<2296,2301,75>",(stack)); Inst58++; } } catch(e) {}
  stack.indexOf("38:56") != -1;
try { if (Inst59 <= 1000 && typeof (stack.indexOf) != "undefined") {_RecordType("<2328,2341,76>",(stack.indexOf)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (stack) != "undefined") {_RecordType("<2328,2333,76>",(stack)); Inst60++; } } catch(e) {}
  stack.indexOf("34:51") != -1;
try { if (Inst61 <= 1000 && typeof (stack.indexOf) != "undefined") {_RecordType("<2360,2373,77>",(stack.indexOf)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (stack) != "undefined") {_RecordType("<2360,2365,77>",(stack)); Inst62++; } } catch(e) {}
  stack.indexOf("36:38") != -1;
try { if (Inst63 <= 1000 && typeof (stack.indexOf) != "undefined") {_RecordType("<2392,2405,78>",(stack.indexOf)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (stack) != "undefined") {_RecordType("<2392,2397,78>",(stack)); Inst64++; } } catch(e) {}
  stack.indexOf("54:5") != -1;
}

