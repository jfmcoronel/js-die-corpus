var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2017 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax
(function () {
  var x = 1;
try { if (Inst0 <= 1000 && typeof (x) != "undefined") {_RecordType("<221,222,6>",(x)); Inst0++; } } catch(e) {}

  x.__proto__.f = function () {
    return 1;
  };
try { if (Inst1 <= 1000 && typeof (x.__proto__.f) != "undefined") {_RecordType("<231,244,8>",(x.__proto__.f)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (x.__proto__) != "undefined") {_RecordType("<231,242,8>",(x.__proto__)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (x) != "undefined") {_RecordType("<231,232,8>",(x)); Inst3++; } } catch(e) {}

try { if (Inst4 <= 1000 && typeof (g) != "undefined") {_RecordType("<292,293,12>",(g)); Inst4++; } } catch(e) {}
  function g() {
    ;
  }

  g.prototype.f = function () {
    return 3;
  };
try { if (Inst5 <= 1000 && typeof (g.prototype.f) != "undefined") {_RecordType("<311,324,16>",(g.prototype.f)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (g.prototype) != "undefined") {_RecordType("<311,322,16>",(g.prototype)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (g) != "undefined") {_RecordType("<311,312,16>",(g)); Inst7++; } } catch(e) {}

try { if (Inst9 <= 1000 && typeof (g) != "undefined") {_RecordType("<375,376,20>",(g)); Inst9++; } } catch(e) {}
  var y = new g();
try { if (Inst8 <= 1000 && typeof (y) != "undefined") {_RecordType("<367,368,20>",(y)); Inst8++; } } catch(e) {}

try { if (Inst10 <= 1000 && typeof (f) != "undefined") {_RecordType("<392,393,22>",(f)); Inst10++; } } catch(e) {}
  function f(obj) {
try { if (Inst11 <= 1000 && typeof (obj) != "undefined") {_RecordType("<394,397,22>",(obj)); Inst11++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (obj.f) != "undefined") {_RecordType("<412,417,23>",(obj.f)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (obj) != "undefined") {_RecordType("<412,415,23>",(obj)); Inst13++; } } catch(e) {}
    return obj.f();
  }

try { if (Inst14 <= 1000 && typeof (f) != "undefined") {_RecordType("<428,429,26>",(f)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (x) != "undefined") {_RecordType("<430,431,26>",(x)); Inst15++; } } catch(e) {}
  f(x);
try { if (Inst16 <= 1000 && typeof (f) != "undefined") {_RecordType("<436,437,27>",(f)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (y) != "undefined") {_RecordType("<438,439,27>",(y)); Inst17++; } } catch(e) {}
  f(y);
try { if (Inst18 <= 1000 && typeof (f) != "undefined") {_RecordType("<444,445,28>",(f)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (x) != "undefined") {_RecordType("<446,447,28>",(x)); Inst19++; } } catch(e) {}
  f(x);
try { if (Inst20 <= 1000 && typeof (f) != "undefined") {_RecordType("<452,453,29>",(f)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (y) != "undefined") {_RecordType("<454,455,29>",(y)); Inst21++; } } catch(e) {}
  f(y);
  1;
try { if (Inst22 <= 1000 && typeof (f) != "undefined") {_RecordType("<465,466,31>",(f)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (x) != "undefined") {_RecordType("<467,468,31>",(x)); Inst23++; } } catch(e) {}
  f(x);
  3;
try { if (Inst24 <= 1000 && typeof (f) != "undefined") {_RecordType("<478,479,33>",(f)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (y) != "undefined") {_RecordType("<480,481,33>",(y)); Inst25++; } } catch(e) {}
  f(y);
})();

(function () {
try { if (Inst26 <= 1000 && typeof (f) != "undefined") {_RecordType("<517,518,37>",(f)); Inst26++; } } catch(e) {}
  function f() {
    return 1;
  }

try { if (Inst27 <= 1000 && typeof (g) != "undefined") {_RecordType("<553,554,41>",(g)); Inst27++; } } catch(e) {}
  function g() {
    return 2;
  }

  var global;
try { if (Inst28 <= 1000 && typeof (global) != "undefined") {_RecordType("<584,590,45>",(global)); Inst28++; } } catch(e) {}

try { if (Inst29 <= 1000 && typeof (h) != "undefined") {_RecordType("<604,605,47>",(h)); Inst29++; } } catch(e) {}
  function h(s) {
try { if (Inst30 <= 1000 && typeof (s) != "undefined") {_RecordType("<606,607,47>",(s)); Inst30++; } } catch(e) {}
    var fg;
try { if (Inst31 <= 1000 && typeof (fg) != "undefined") {_RecordType("<619,621,48>",(fg)); Inst31++; } } catch(e) {}
    var a = 0;
try { if (Inst32 <= 1000 && typeof (a) != "undefined") {_RecordType("<631,632,49>",(a)); Inst32++; } } catch(e) {}

try { if (Inst33 <= 1000 && typeof (s) != "undefined") {_RecordType("<647,648,51>",(s)); Inst33++; } } catch(e) {}
    if (s) {
      global = 0;
try { if (Inst34 <= 1000 && typeof (global) != "undefined") {_RecordType("<658,664,52>",(global)); Inst34++; } } catch(e) {}
      a = 1;
try { if (Inst35 <= 1000 && typeof (a) != "undefined") {_RecordType("<676,677,53>",(a)); Inst35++; } } catch(e) {}
try { if (Inst37 <= 1000 && typeof (f) != "undefined") {_RecordType("<694,695,54>",(f)); Inst37++; } } catch(e) {}
      fg = f;
try { if (Inst36 <= 1000 && typeof (fg) != "undefined") {_RecordType("<689,691,54>",(fg)); Inst36++; } } catch(e) {}
    } else {
      global = 1;
try { if (Inst38 <= 1000 && typeof (global) != "undefined") {_RecordType("<716,722,56>",(global)); Inst38++; } } catch(e) {}
try { if (Inst40 <= 1000 && typeof (g) != "undefined") {_RecordType("<739,740,57>",(g)); Inst40++; } } catch(e) {}
      fg = g;
try { if (Inst39 <= 1000 && typeof (fg) != "undefined") {_RecordType("<734,736,57>",(fg)); Inst39++; } } catch(e) {}
    }

try { if (Inst41 <= 1000 && typeof (fg) != "undefined") {_RecordType("<760,762,60>",(fg)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (a) != "undefined") {_RecordType("<767,768,60>",(a)); Inst42++; } } catch(e) {}
    return fg() + a;
  }

try { if (Inst43 <= 1000 && typeof (h) != "undefined") {_RecordType("<777,778,63>",(h)); Inst43++; } } catch(e) {}
  h(0);
try { if (Inst44 <= 1000 && typeof (h) != "undefined") {_RecordType("<785,786,64>",(h)); Inst44++; } } catch(e) {}
  h(0);
try { if (Inst45 <= 1000 && typeof (h) != "undefined") {_RecordType("<793,794,65>",(h)); Inst45++; } } catch(e) {}
  h(1);
try { if (Inst46 <= 1000 && typeof (h) != "undefined") {_RecordType("<801,802,66>",(h)); Inst46++; } } catch(e) {}
  h(1);
  2;
try { if (Inst47 <= 1000 && typeof (h) != "undefined") {_RecordType("<814,815,68>",(h)); Inst47++; } } catch(e) {}
  h(0);
})();

