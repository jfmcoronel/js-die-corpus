var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2016 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax
try { if (Inst1 <= 1000 && typeof (Array.prototype.pop) != "undefined") {_RecordType("<210,229,5>",(Array.prototype.pop)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<210,225,5>",(Array.prototype)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Array) != "undefined") {_RecordType("<210,215,5>",(Array)); Inst3++; } } catch(e) {}
var pop = Array.prototype.pop;
try { if (Inst0 <= 1000 && typeof (pop) != "undefined") {_RecordType("<204,207,5>",(pop)); Inst0++; } } catch(e) {}

try { if (Inst4 <= 1000 && typeof (foo) != "undefined") {_RecordType("<241,244,7>",(foo)); Inst4++; } } catch(e) {}
function foo(a) {
try { if (Inst5 <= 1000 && typeof (a) != "undefined") {_RecordType("<245,246,7>",(a)); Inst5++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<252,260,8>",(a.length)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (a) != "undefined") {_RecordType("<252,253,8>",(a)); Inst7++; } } catch(e) {}
  a.length;
try { if (Inst8 <= 1000 && typeof (pop.call) != "undefined") {_RecordType("<271,279,9>",(pop.call)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (pop) != "undefined") {_RecordType("<271,274,9>",(pop)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (a) != "undefined") {_RecordType("<280,281,9>",(a)); Inst10++; } } catch(e) {}
  return pop.call(a);
}

try { if (Inst12 <= 1000 && typeof (Array) != "undefined") {_RecordType("<299,304,12>",(Array)); Inst12++; } } catch(e) {}
var a = new Array(4);
try { if (Inst11 <= 1000 && typeof (a) != "undefined") {_RecordType("<291,292,12>",(a)); Inst11++; } } catch(e) {}
var o = {};
try { if (Inst13 <= 1000 && typeof (o) != "undefined") {_RecordType("<313,314,13>",(o)); Inst13++; } } catch(e) {}

try { if (Inst14 <= 1000 && typeof (o.__defineGetter__) != "undefined") {_RecordType("<322,340,15>",(o.__defineGetter__)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (o) != "undefined") {_RecordType("<322,323,15>",(o)); Inst15++; } } catch(e) {}
o.__defineGetter__(0, function () {
  return 1;
});

try { if (Inst16 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<375,384,19>",(undefined)); Inst16++; } } catch(e) {}
undefined;
try { if (Inst17 <= 1000 && typeof (foo) != "undefined") {_RecordType("<386,389,20>",(foo)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (a) != "undefined") {_RecordType("<390,391,20>",(a)); Inst18++; } } catch(e) {}
foo(a);
try { if (Inst19 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<394,403,21>",(undefined)); Inst19++; } } catch(e) {}
undefined;
try { if (Inst20 <= 1000 && typeof (foo) != "undefined") {_RecordType("<405,408,22>",(foo)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (a) != "undefined") {_RecordType("<409,410,22>",(a)); Inst21++; } } catch(e) {}
foo(a);
try { if (Inst22 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<413,422,23>",(undefined)); Inst22++; } } catch(e) {}
undefined;
try { if (Inst23 <= 1000 && typeof (foo) != "undefined") {_RecordType("<424,427,24>",(foo)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (a) != "undefined") {_RecordType("<428,429,24>",(a)); Inst24++; } } catch(e) {}
foo(a);
try { if (Inst28 <= 1000 && typeof (o) != "undefined") {_RecordType("<460,461,25>",(o)); Inst28++; } } catch(e) {}
Array.prototype.__proto__ = o;
try { if (Inst25 <= 1000 && typeof (Array.prototype.__proto__) != "undefined") {_RecordType("<432,457,25>",(Array.prototype.__proto__)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<432,447,25>",(Array.prototype)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (Array) != "undefined") {_RecordType("<432,437,25>",(Array)); Inst27++; } } catch(e) {}
1;
try { if (Inst29 <= 1000 && typeof (foo) != "undefined") {_RecordType("<466,469,27>",(foo)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (a) != "undefined") {_RecordType("<470,471,27>",(a)); Inst30++; } } catch(e) {}
foo(a);

