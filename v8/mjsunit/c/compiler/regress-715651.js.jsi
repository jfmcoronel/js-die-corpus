var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2017 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax
try { if (Inst0 <= 1000 && typeof (f) != "undefined") {_RecordType("<209,210,5>",(f)); Inst0++; } } catch(e) {}
function f() {
  this.x = 1;
try { if (Inst1 <= 1000 && typeof (this.x) != "undefined") {_RecordType("<217,223,6>",(this.x)); Inst1++; } } catch(e) {}
}

var a = []; // Create enough objects to trigger slack tracking.
try { if (Inst2 <= 1000 && typeof (a) != "undefined") {_RecordType("<236,237,9>",(a)); Inst2++; } } catch(e) {}

for (let i = 0; i < 100; i++) {
try { if (Inst3 <= 1000 && typeof (i) != "undefined") {_RecordType("<306,307,11>",(i)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (i) != "undefined") {_RecordType("<313,314,11>",(i)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (i) != "undefined") {_RecordType("<322,323,11>",(i)); Inst5++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (f) != "undefined") {_RecordType("<335,336,12>",(f)); Inst6++; } } catch(e) {}
  new f();
}

try { if (Inst7 <= 1000 && typeof (h) != "undefined") {_RecordType("<352,353,15>",(h)); Inst7++; } } catch(e) {}
function h() {
  // Create a new object and add an out-of-object property 'y'.
try { if (Inst9 <= 1000 && typeof (f) != "undefined") {_RecordType("<436,437,17>",(f)); Inst9++; } } catch(e) {}
  var o = new f();
try { if (Inst8 <= 1000 && typeof (o) != "undefined") {_RecordType("<428,429,17>",(o)); Inst8++; } } catch(e) {}
  o.y = 1.5;
try { if (Inst10 <= 1000 && typeof (o.y) != "undefined") {_RecordType("<443,446,18>",(o.y)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (o) != "undefined") {_RecordType("<443,444,18>",(o)); Inst11++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (o) != "undefined") {_RecordType("<463,464,19>",(o)); Inst12++; } } catch(e) {}
  return o;
}

try { if (Inst13 <= 1000 && typeof (g) != "undefined") {_RecordType("<478,479,22>",(g)); Inst13++; } } catch(e) {}
function g(o) {
try { if (Inst14 <= 1000 && typeof (o) != "undefined") {_RecordType("<480,481,22>",(o)); Inst14++; } } catch(e) {}
  // Add more properties so that we trigger extension of out-ot-object
  // property store.
  o.u = 1.1;
try { if (Inst15 <= 1000 && typeof (o.u) != "undefined") {_RecordType("<579,582,25>",(o.u)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (o) != "undefined") {_RecordType("<579,580,25>",(o)); Inst16++; } } catch(e) {}
  o.v = 1.2;
try { if (Inst17 <= 1000 && typeof (o.v) != "undefined") {_RecordType("<592,595,26>",(o.v)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (o) != "undefined") {_RecordType("<592,593,26>",(o)); Inst18++; } } catch(e) {}
  o.z = 1.3; // Return a field from the out-of-object-property store.
try { if (Inst19 <= 1000 && typeof (o.z) != "undefined") {_RecordType("<605,608,27>",(o.z)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (o) != "undefined") {_RecordType("<605,606,27>",(o)); Inst20++; } } catch(e) {}

try { if (Inst21 <= 1000 && typeof (o.y) != "undefined") {_RecordType("<683,686,29>",(o.y)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (o) != "undefined") {_RecordType("<683,684,29>",(o)); Inst22++; } } catch(e) {}
  return o.y;
}

try { if (Inst23 <= 1000 && typeof (g) != "undefined") {_RecordType("<691,692,32>",(g)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (h) != "undefined") {_RecordType("<693,694,32>",(h)); Inst24++; } } catch(e) {}
g(h());
try { if (Inst25 <= 1000 && typeof (g) != "undefined") {_RecordType("<699,700,33>",(g)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (h) != "undefined") {_RecordType("<701,702,33>",(h)); Inst26++; } } catch(e) {}
g(h());
1.5;
try { if (Inst27 <= 1000 && typeof (g) != "undefined") {_RecordType("<712,713,35>",(g)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (h) != "undefined") {_RecordType("<714,715,35>",(h)); Inst28++; } } catch(e) {}
g(h());

