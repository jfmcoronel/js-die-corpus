var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2016 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax
(function () {
try { if (Inst0 <= 1000 && typeof (foo) != "undefined") {_RecordType("<226,229,6>",(foo)); Inst0++; } } catch(e) {}
  function foo(x) {
try { if (Inst1 <= 1000 && typeof (x) != "undefined") {_RecordType("<230,231,6>",(x)); Inst1++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (x) != "undefined") {_RecordType("<243,244,7>",(x)); Inst3++; } } catch(e) {}
    x = x | 0;
try { if (Inst2 <= 1000 && typeof (x) != "undefined") {_RecordType("<239,240,7>",(x)); Inst2++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (Number.parseInt) != "undefined") {_RecordType("<261,276,8>",(Number.parseInt)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Number) != "undefined") {_RecordType("<261,267,8>",(Number)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (x) != "undefined") {_RecordType("<277,278,8>",(x)); Inst6++; } } catch(e) {}
    return Number.parseInt(x + 1);
  }

  1;
try { if (Inst7 <= 1000 && typeof (foo) != "undefined") {_RecordType("<297,300,12>",(foo)); Inst7++; } } catch(e) {}
  foo(0);
  2;
try { if (Inst8 <= 1000 && typeof (foo) != "undefined") {_RecordType("<312,315,14>",(foo)); Inst8++; } } catch(e) {}
  foo(1);
try { if (Inst9 <= 1000 && typeof (Math.pow) != "undefined") {_RecordType("<322,330,15>",(Math.pow)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Math) != "undefined") {_RecordType("<322,326,15>",(Math)); Inst10++; } } catch(e) {}
  Math.pow(2, 31);
try { if (Inst11 <= 1000 && typeof (foo) != "undefined") {_RecordType("<341,344,16>",(foo)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Math.pow) != "undefined") {_RecordType("<345,353,16>",(Math.pow)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Math) != "undefined") {_RecordType("<345,349,16>",(Math)); Inst13++; } } catch(e) {}
  foo(Math.pow(2, 31) - 1);
})();

(function () {
try { if (Inst14 <= 1000 && typeof (foo) != "undefined") {_RecordType("<400,403,20>",(foo)); Inst14++; } } catch(e) {}
  function foo(x) {
try { if (Inst15 <= 1000 && typeof (x) != "undefined") {_RecordType("<404,405,20>",(x)); Inst15++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (x) != "undefined") {_RecordType("<417,418,21>",(x)); Inst17++; } } catch(e) {}
    x = x | 0;
try { if (Inst16 <= 1000 && typeof (x) != "undefined") {_RecordType("<413,414,21>",(x)); Inst16++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (Number.parseInt) != "undefined") {_RecordType("<435,450,22>",(Number.parseInt)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Number) != "undefined") {_RecordType("<435,441,22>",(Number)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (x) != "undefined") {_RecordType("<451,452,22>",(x)); Inst20++; } } catch(e) {}
    return Number.parseInt(x + 1, 0);
  }

  1;
try { if (Inst21 <= 1000 && typeof (foo) != "undefined") {_RecordType("<474,477,26>",(foo)); Inst21++; } } catch(e) {}
  foo(0);
  2;
try { if (Inst22 <= 1000 && typeof (foo) != "undefined") {_RecordType("<489,492,28>",(foo)); Inst22++; } } catch(e) {}
  foo(1);
try { if (Inst23 <= 1000 && typeof (Math.pow) != "undefined") {_RecordType("<499,507,29>",(Math.pow)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (Math) != "undefined") {_RecordType("<499,503,29>",(Math)); Inst24++; } } catch(e) {}
  Math.pow(2, 31);
try { if (Inst25 <= 1000 && typeof (foo) != "undefined") {_RecordType("<518,521,30>",(foo)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Math.pow) != "undefined") {_RecordType("<522,530,30>",(Math.pow)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (Math) != "undefined") {_RecordType("<522,526,30>",(Math)); Inst27++; } } catch(e) {}
  foo(Math.pow(2, 31) - 1);
})();

(function () {
try { if (Inst28 <= 1000 && typeof (foo) != "undefined") {_RecordType("<577,580,34>",(foo)); Inst28++; } } catch(e) {}
  function foo(x) {
try { if (Inst29 <= 1000 && typeof (x) != "undefined") {_RecordType("<581,582,34>",(x)); Inst29++; } } catch(e) {}
try { if (Inst31 <= 1000 && typeof (x) != "undefined") {_RecordType("<594,595,35>",(x)); Inst31++; } } catch(e) {}
    x = x | 0;
try { if (Inst30 <= 1000 && typeof (x) != "undefined") {_RecordType("<590,591,35>",(x)); Inst30++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (Number.parseInt) != "undefined") {_RecordType("<612,627,36>",(Number.parseInt)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (Number) != "undefined") {_RecordType("<612,618,36>",(Number)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (x) != "undefined") {_RecordType("<628,629,36>",(x)); Inst34++; } } catch(e) {}
    return Number.parseInt(x + 1, 10);
  }

  1;
try { if (Inst35 <= 1000 && typeof (foo) != "undefined") {_RecordType("<652,655,40>",(foo)); Inst35++; } } catch(e) {}
  foo(0);
  2;
try { if (Inst36 <= 1000 && typeof (foo) != "undefined") {_RecordType("<667,670,42>",(foo)); Inst36++; } } catch(e) {}
  foo(1);
try { if (Inst37 <= 1000 && typeof (Math.pow) != "undefined") {_RecordType("<677,685,43>",(Math.pow)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (Math) != "undefined") {_RecordType("<677,681,43>",(Math)); Inst38++; } } catch(e) {}
  Math.pow(2, 31);
try { if (Inst39 <= 1000 && typeof (foo) != "undefined") {_RecordType("<696,699,44>",(foo)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (Math.pow) != "undefined") {_RecordType("<700,708,44>",(Math.pow)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (Math) != "undefined") {_RecordType("<700,704,44>",(Math)); Inst41++; } } catch(e) {}
  foo(Math.pow(2, 31) - 1);
})();

(function () {
try { if (Inst42 <= 1000 && typeof (foo) != "undefined") {_RecordType("<755,758,48>",(foo)); Inst42++; } } catch(e) {}
  function foo(x) {
try { if (Inst43 <= 1000 && typeof (x) != "undefined") {_RecordType("<759,760,48>",(x)); Inst43++; } } catch(e) {}
try { if (Inst45 <= 1000 && typeof (x) != "undefined") {_RecordType("<772,773,49>",(x)); Inst45++; } } catch(e) {}
    x = x | 0;
try { if (Inst44 <= 1000 && typeof (x) != "undefined") {_RecordType("<768,769,49>",(x)); Inst44++; } } catch(e) {}
try { if (Inst46 <= 1000 && typeof (Number.parseInt) != "undefined") {_RecordType("<790,805,50>",(Number.parseInt)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (Number) != "undefined") {_RecordType("<790,796,50>",(Number)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (x) != "undefined") {_RecordType("<806,807,50>",(x)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<813,822,50>",(undefined)); Inst49++; } } catch(e) {}
    return Number.parseInt(x + 1, undefined);
  }

  1;
try { if (Inst50 <= 1000 && typeof (foo) != "undefined") {_RecordType("<837,840,54>",(foo)); Inst50++; } } catch(e) {}
  foo(0);
  2;
try { if (Inst51 <= 1000 && typeof (foo) != "undefined") {_RecordType("<852,855,56>",(foo)); Inst51++; } } catch(e) {}
  foo(1);
try { if (Inst52 <= 1000 && typeof (Math.pow) != "undefined") {_RecordType("<862,870,57>",(Math.pow)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (Math) != "undefined") {_RecordType("<862,866,57>",(Math)); Inst53++; } } catch(e) {}
  Math.pow(2, 31);
try { if (Inst54 <= 1000 && typeof (foo) != "undefined") {_RecordType("<881,884,58>",(foo)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (Math.pow) != "undefined") {_RecordType("<885,893,58>",(Math.pow)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (Math) != "undefined") {_RecordType("<885,889,58>",(Math)); Inst56++; } } catch(e) {}
  foo(Math.pow(2, 31) - 1);
})();

