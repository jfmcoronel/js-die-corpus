var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2013 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// Flags: --allow-natives-syntax
// Test loading a constant function on the prototype chain.
try { if (Inst1 <= 1000 && typeof (Object.create) != "undefined") {_RecordType("<1698,1711,29>",(Object.create)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1698,1704,29>",(Object)); Inst2++; } } catch(e) {}
var c = Object.create;
try { if (Inst0 <= 1000 && typeof (c) != "undefined") {_RecordType("<1694,1695,29>",(c)); Inst0++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (c) != "undefined") {_RecordType("<1724,1725,30>",(c)); Inst4++; } } catch(e) {}
var obj4 = c(null, {
  f4: {
    value: function () {
      return 4;
    },
    writable: true
  }
});
try { if (Inst3 <= 1000 && typeof (obj4) != "undefined") {_RecordType("<1717,1721,30>",(obj4)); Inst3++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (c) != "undefined") {_RecordType("<1828,1829,38>",(c)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (obj4) != "undefined") {_RecordType("<1830,1834,38>",(obj4)); Inst7++; } } catch(e) {}
var obj3 = c(obj4, {
  f3: {
    value: function () {
      return 3;
    },
    writable: true
  }
});
try { if (Inst5 <= 1000 && typeof (obj3) != "undefined") {_RecordType("<1821,1825,38>",(obj3)); Inst5++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (c) != "undefined") {_RecordType("<1932,1933,46>",(c)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (obj3) != "undefined") {_RecordType("<1934,1938,46>",(obj3)); Inst10++; } } catch(e) {}
var obj2 = c(obj3, {
  f2: {
    value: function () {
      return 2;
    },
    writable: true
  }
});
try { if (Inst8 <= 1000 && typeof (obj2) != "undefined") {_RecordType("<1925,1929,46>",(obj2)); Inst8++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (c) != "undefined") {_RecordType("<2036,2037,54>",(c)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (obj2) != "undefined") {_RecordType("<2038,2042,54>",(obj2)); Inst13++; } } catch(e) {}
var obj1 = c(obj2, {
  f1: {
    value: function () {
      return 1;
    },
    writable: true
  }
});
try { if (Inst11 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<2029,2033,54>",(obj1)); Inst11++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (c) != "undefined") {_RecordType("<2140,2141,62>",(c)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<2142,2146,62>",(obj1)); Inst16++; } } catch(e) {}
var obj0 = c(obj1, {
  f0: {
    value: function () {
      return 0;
    },
    writable: true
  }
});
try { if (Inst14 <= 1000 && typeof (obj0) != "undefined") {_RecordType("<2133,2137,62>",(obj0)); Inst14++; } } catch(e) {}

try { if (Inst17 <= 1000 && typeof (get4) != "undefined") {_RecordType("<2243,2247,71>",(get4)); Inst17++; } } catch(e) {}
function get4(obj) {
try { if (Inst18 <= 1000 && typeof (obj) != "undefined") {_RecordType("<2248,2251,71>",(obj)); Inst18++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (obj.f4) != "undefined") {_RecordType("<2264,2270,72>",(obj.f4)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (obj) != "undefined") {_RecordType("<2264,2267,72>",(obj)); Inst20++; } } catch(e) {}
  return obj.f4;
}

4;
try { if (Inst21 <= 1000 && typeof (get4) != "undefined") {_RecordType("<2278,2282,76>",(get4)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (obj0) != "undefined") {_RecordType("<2283,2287,76>",(obj0)); Inst22++; } } catch(e) {}
get4(obj0)();
4;
try { if (Inst23 <= 1000 && typeof (get4) != "undefined") {_RecordType("<2295,2299,78>",(get4)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (obj0) != "undefined") {_RecordType("<2300,2304,78>",(obj0)); Inst24++; } } catch(e) {}
get4(obj0)();
4;
try { if (Inst25 <= 1000 && typeof (get4) != "undefined") {_RecordType("<2312,2316,80>",(get4)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (obj0) != "undefined") {_RecordType("<2317,2321,80>",(obj0)); Inst26++; } } catch(e) {}
get4(obj0)();

obj4.f4 = function () {
  return 5;
};
try { if (Inst27 <= 1000 && typeof (obj4.f4) != "undefined") {_RecordType("<2327,2334,82>",(obj4.f4)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (obj4) != "undefined") {_RecordType("<2327,2331,82>",(obj4)); Inst28++; } } catch(e) {}

5;
try { if (Inst29 <= 1000 && typeof (get4) != "undefined") {_RecordType("<2370,2374,87>",(get4)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (obj0) != "undefined") {_RecordType("<2375,2379,87>",(obj0)); Inst30++; } } catch(e) {}
get4(obj0)();

try { if (Inst31 <= 1000 && typeof (get3) != "undefined") {_RecordType("<2394,2398,89>",(get3)); Inst31++; } } catch(e) {}
function get3(obj) {
try { if (Inst32 <= 1000 && typeof (obj) != "undefined") {_RecordType("<2399,2402,89>",(obj)); Inst32++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (obj.f3) != "undefined") {_RecordType("<2415,2421,90>",(obj.f3)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (obj) != "undefined") {_RecordType("<2415,2418,90>",(obj)); Inst34++; } } catch(e) {}
  return obj.f3;
}

3;
try { if (Inst35 <= 1000 && typeof (get3) != "undefined") {_RecordType("<2429,2433,94>",(get3)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (obj0) != "undefined") {_RecordType("<2434,2438,94>",(obj0)); Inst36++; } } catch(e) {}
get3(obj0)();
3;
try { if (Inst37 <= 1000 && typeof (get3) != "undefined") {_RecordType("<2446,2450,96>",(get3)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (obj0) != "undefined") {_RecordType("<2451,2455,96>",(obj0)); Inst38++; } } catch(e) {}
get3(obj0)();
3;
try { if (Inst39 <= 1000 && typeof (get3) != "undefined") {_RecordType("<2463,2467,98>",(get3)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (obj0) != "undefined") {_RecordType("<2468,2472,98>",(obj0)); Inst40++; } } catch(e) {}
get3(obj0)();

obj2.f3 = function () {
  return 6;
};
try { if (Inst41 <= 1000 && typeof (obj2.f3) != "undefined") {_RecordType("<2478,2485,100>",(obj2.f3)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (obj2) != "undefined") {_RecordType("<2478,2482,100>",(obj2)); Inst42++; } } catch(e) {}

6;
try { if (Inst43 <= 1000 && typeof (get3) != "undefined") {_RecordType("<2521,2525,105>",(get3)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (obj0) != "undefined") {_RecordType("<2526,2530,105>",(obj0)); Inst44++; } } catch(e) {}
get3(obj0)();

