var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2015 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --use-osr
try { if (Inst0 <= 1000 && typeof (f) != "undefined") {_RecordType("<196,197,5>",(f)); Inst0++; } } catch(e) {}
function f(a) {
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<198,199,5>",(a)); Inst1++; } } catch(e) {}
  var sum = 0;
try { if (Inst2 <= 1000 && typeof (sum) != "undefined") {_RecordType("<209,212,6>",(sum)); Inst2++; } } catch(e) {}

  for (var j in a) {
try { if (Inst3 <= 1000 && typeof (j) != "undefined") {_RecordType("<230,231,8>",(j)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (a) != "undefined") {_RecordType("<235,236,8>",(a)); Inst4++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (a[j]) != "undefined") {_RecordType("<252,256,9>",(a[j])); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (a) != "undefined") {_RecordType("<252,253,9>",(a)); Inst7++; } } catch(e) {}
    var i = a[j];
try { if (Inst5 <= 1000 && typeof (i) != "undefined") {_RecordType("<248,249,9>",(i)); Inst5++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<270,271,10>",(i)); Inst9++; } } catch(e) {}
    var x = i + 2;
try { if (Inst8 <= 1000 && typeof (x) != "undefined") {_RecordType("<266,267,10>",(x)); Inst8++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (x) != "undefined") {_RecordType("<289,290,11>",(x)); Inst11++; } } catch(e) {}
    var y = x + 5;
try { if (Inst10 <= 1000 && typeof (y) != "undefined") {_RecordType("<285,286,11>",(y)); Inst10++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (y) != "undefined") {_RecordType("<308,309,12>",(y)); Inst13++; } } catch(e) {}
    var z = y + 3;
try { if (Inst12 <= 1000 && typeof (z) != "undefined") {_RecordType("<304,305,12>",(z)); Inst12++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (z) != "undefined") {_RecordType("<326,327,13>",(z)); Inst15++; } } catch(e) {}
    sum += z;
try { if (Inst14 <= 1000 && typeof (sum) != "undefined") {_RecordType("<319,322,13>",(sum)); Inst14++; } } catch(e) {}
  }

try { if (Inst16 <= 1000 && typeof (sum) != "undefined") {_RecordType("<343,346,16>",(sum)); Inst16++; } } catch(e) {}
  return sum;
}

try { if (Inst18 <= 1000 && typeof (Array) != "undefined") {_RecordType("<363,368,19>",(Array)); Inst18++; } } catch(e) {}
var a = new Array(10000);
try { if (Inst17 <= 1000 && typeof (a) != "undefined") {_RecordType("<355,356,19>",(a)); Inst17++; } } catch(e) {}

for (var i = 0; i < 10000; i++) {
try { if (Inst19 <= 1000 && typeof (i) != "undefined") {_RecordType("<387,388,21>",(i)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<394,395,21>",(i)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<405,406,21>",(i)); Inst21++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<421,422,22>",(i)); Inst24++; } } catch(e) {}
  a[i] = i * 999 % 77;
try { if (Inst22 <= 1000 && typeof (a[i]) != "undefined") {_RecordType("<414,418,22>",(a[i])); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (a) != "undefined") {_RecordType("<414,415,22>",(a)); Inst23++; } } catch(e) {}
}

for (var i = 0; i < 3; i++) {
try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<447,448,25>",(i)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (i) != "undefined") {_RecordType("<454,455,25>",(i)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (i) != "undefined") {_RecordType("<461,462,25>",(i)); Inst27++; } } catch(e) {}
  480270;
try { if (Inst28 <= 1000 && typeof (f) != "undefined") {_RecordType("<480,481,27>",(f)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (a) != "undefined") {_RecordType("<482,483,27>",(a)); Inst29++; } } catch(e) {}
  f(a);
}

