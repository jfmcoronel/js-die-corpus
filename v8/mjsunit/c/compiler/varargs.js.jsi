var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2017 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
x = "a";
try { if (Inst0 <= 1000 && typeof (x) != "undefined") {_RecordType("<167,168,4>",(x)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (test_varargs) != "undefined") {_RecordType("<186,198,6>",(test_varargs)); Inst1++; } } catch(e) {}
function test_varargs(...args) {
try { if (Inst2 <= 1000 && typeof (args) != "undefined") {_RecordType("<202,206,6>",(args)); Inst2++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (this.x) != "undefined") {_RecordType("<222,228,7>",(this.x)); Inst4++; } } catch(e) {}
  var sum = this.x;
try { if (Inst3 <= 1000 && typeof (sum) != "undefined") {_RecordType("<216,219,7>",(sum)); Inst3++; } } catch(e) {}

  for (i in args) {
try { if (Inst5 <= 1000 && typeof (i) != "undefined") {_RecordType("<238,239,9>",(i)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (args) != "undefined") {_RecordType("<243,247,9>",(args)); Inst6++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (args[i]) != "undefined") {_RecordType("<268,275,10>",(args[i])); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (args) != "undefined") {_RecordType("<268,272,10>",(args)); Inst9++; } } catch(e) {}
    sum += "," + args[i];
try { if (Inst7 <= 1000 && typeof (sum) != "undefined") {_RecordType("<255,258,10>",(sum)); Inst7++; } } catch(e) {}
  }

try { if (Inst10 <= 1000 && typeof (sum) != "undefined") {_RecordType("<291,294,13>",(sum)); Inst10++; } } catch(e) {}
  return sum;
}

"a";
try { if (Inst11 <= 1000 && typeof (test_varargs) != "undefined") {_RecordType("<304,316,17>",(test_varargs)); Inst11++; } } catch(e) {}
test_varargs();
"a,b";
try { if (Inst12 <= 1000 && typeof (test_varargs) != "undefined") {_RecordType("<327,339,19>",(test_varargs)); Inst12++; } } catch(e) {}
test_varargs("b");
"a,b,c";
try { if (Inst13 <= 1000 && typeof (test_varargs) != "undefined") {_RecordType("<355,367,21>",(test_varargs)); Inst13++; } } catch(e) {}
test_varargs("b", "c");
"a,b,c,d";
try { if (Inst14 <= 1000 && typeof (test_varargs) != "undefined") {_RecordType("<390,402,23>",(test_varargs)); Inst14++; } } catch(e) {}
test_varargs("b", "c", "d");
"a,b,c,d,e";
try { if (Inst15 <= 1000 && typeof (test_varargs) != "undefined") {_RecordType("<432,444,25>",(test_varargs)); Inst15++; } } catch(e) {}
test_varargs("b", "c", "d", "e");

try { if (Inst16 <= 1000 && typeof (forward_varargs) != "undefined") {_RecordType("<476,491,27>",(forward_varargs)); Inst16++; } } catch(e) {}
function forward_varargs(...args) {
try { if (Inst17 <= 1000 && typeof (args) != "undefined") {_RecordType("<495,499,27>",(args)); Inst17++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (test_varargs) != "undefined") {_RecordType("<512,524,28>",(test_varargs)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (args) != "undefined") {_RecordType("<528,532,28>",(args)); Inst19++; } } catch(e) {}
  return test_varargs(...args);
}

"a";
try { if (Inst20 <= 1000 && typeof (forward_varargs) != "undefined") {_RecordType("<543,558,32>",(forward_varargs)); Inst20++; } } catch(e) {}
forward_varargs();
"a,b";
try { if (Inst21 <= 1000 && typeof (forward_varargs) != "undefined") {_RecordType("<569,584,34>",(forward_varargs)); Inst21++; } } catch(e) {}
forward_varargs("b");
"a,b,c";
try { if (Inst22 <= 1000 && typeof (forward_varargs) != "undefined") {_RecordType("<600,615,36>",(forward_varargs)); Inst22++; } } catch(e) {}
forward_varargs("b", "c");
"a,b,c,d";
try { if (Inst23 <= 1000 && typeof (forward_varargs) != "undefined") {_RecordType("<638,653,38>",(forward_varargs)); Inst23++; } } catch(e) {}
forward_varargs("b", "c", "d");
"a,b,c,d,e";
try { if (Inst24 <= 1000 && typeof (forward_varargs) != "undefined") {_RecordType("<683,698,40>",(forward_varargs)); Inst24++; } } catch(e) {}
forward_varargs("b", "c", "d", "e");

try { if (Inst25 <= 1000 && typeof (forward_varargs_one_arg) != "undefined") {_RecordType("<730,753,42>",(forward_varargs_one_arg)); Inst25++; } } catch(e) {}
function forward_varargs_one_arg(x, ...args) {
try { if (Inst26 <= 1000 && typeof (x) != "undefined") {_RecordType("<754,755,42>",(x)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (args) != "undefined") {_RecordType("<760,764,42>",(args)); Inst27++; } } catch(e) {}
try { if (Inst28 <= 1000 && typeof (test_varargs) != "undefined") {_RecordType("<777,789,43>",(test_varargs)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (x) != "undefined") {_RecordType("<790,791,43>",(x)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (args) != "undefined") {_RecordType("<796,800,43>",(args)); Inst30++; } } catch(e) {}
  return test_varargs(x, ...args);
}

"a,undefined";
try { if (Inst31 <= 1000 && typeof (forward_varargs_one_arg) != "undefined") {_RecordType("<821,844,47>",(forward_varargs_one_arg)); Inst31++; } } catch(e) {}
forward_varargs_one_arg();
"a,b";
try { if (Inst32 <= 1000 && typeof (forward_varargs_one_arg) != "undefined") {_RecordType("<855,878,49>",(forward_varargs_one_arg)); Inst32++; } } catch(e) {}
forward_varargs_one_arg("b");
"a,b,c";
try { if (Inst33 <= 1000 && typeof (forward_varargs_one_arg) != "undefined") {_RecordType("<894,917,51>",(forward_varargs_one_arg)); Inst33++; } } catch(e) {}
forward_varargs_one_arg("b", "c");
"a,b,c,d";
try { if (Inst34 <= 1000 && typeof (forward_varargs_one_arg) != "undefined") {_RecordType("<940,963,53>",(forward_varargs_one_arg)); Inst34++; } } catch(e) {}
forward_varargs_one_arg("b", "c", "d");
"a,b,c,d,e";
try { if (Inst35 <= 1000 && typeof (forward_varargs_one_arg) != "undefined") {_RecordType("<993,1016,55>",(forward_varargs_one_arg)); Inst35++; } } catch(e) {}
forward_varargs_one_arg("b", "c", "d", "e");

try { if (Inst36 <= 1000 && typeof (forward_varargs_two_args) != "undefined") {_RecordType("<1048,1072,57>",(forward_varargs_two_args)); Inst36++; } } catch(e) {}
function forward_varargs_two_args(x, y, ...args) {
try { if (Inst37 <= 1000 && typeof (x) != "undefined") {_RecordType("<1073,1074,57>",(x)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (y) != "undefined") {_RecordType("<1076,1077,57>",(y)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (args) != "undefined") {_RecordType("<1082,1086,57>",(args)); Inst39++; } } catch(e) {}
try { if (Inst40 <= 1000 && typeof (test_varargs) != "undefined") {_RecordType("<1099,1111,58>",(test_varargs)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (x) != "undefined") {_RecordType("<1112,1113,58>",(x)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (y) != "undefined") {_RecordType("<1115,1116,58>",(y)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (args) != "undefined") {_RecordType("<1121,1125,58>",(args)); Inst43++; } } catch(e) {}
  return test_varargs(x, y, ...args);
}

"a,undefined,undefined";
try { if (Inst44 <= 1000 && typeof (forward_varargs_two_args) != "undefined") {_RecordType("<1156,1180,62>",(forward_varargs_two_args)); Inst44++; } } catch(e) {}
forward_varargs_two_args();
"a,b,undefined";
try { if (Inst45 <= 1000 && typeof (forward_varargs_two_args) != "undefined") {_RecordType("<1201,1225,64>",(forward_varargs_two_args)); Inst45++; } } catch(e) {}
forward_varargs_two_args("b");
"a,b,c";
try { if (Inst46 <= 1000 && typeof (forward_varargs_two_args) != "undefined") {_RecordType("<1241,1265,66>",(forward_varargs_two_args)); Inst46++; } } catch(e) {}
forward_varargs_two_args("b", "c");
"a,b,c,d";
try { if (Inst47 <= 1000 && typeof (forward_varargs_two_args) != "undefined") {_RecordType("<1288,1312,68>",(forward_varargs_two_args)); Inst47++; } } catch(e) {}
forward_varargs_two_args("b", "c", "d");
"a,b,c,d,e";
try { if (Inst48 <= 1000 && typeof (forward_varargs_two_args) != "undefined") {_RecordType("<1342,1366,70>",(forward_varargs_two_args)); Inst48++; } } catch(e) {}
forward_varargs_two_args("b", "c", "d", "e");

