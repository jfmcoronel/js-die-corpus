var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2015 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --use-osr
try { if (Inst0 <= 1000 && typeof (id) != "undefined") {_RecordType("<196,198,5>",(id)); Inst0++; } } catch(e) {}
function id(f) {
try { if (Inst1 <= 1000 && typeof (f) != "undefined") {_RecordType("<199,200,5>",(f)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (f) != "undefined") {_RecordType("<213,214,6>",(f)); Inst2++; } } catch(e) {}
  return f;
}

try { if (Inst4 <= 1000 && typeof (foo) != "undefined") {_RecordType("<236,239,9>",(foo)); Inst4++; } } catch(e) {}
var x = function foo() {
  var sum = 0;
try { if (Inst5 <= 1000 && typeof (sum) != "undefined") {_RecordType("<250,253,10>",(sum)); Inst5++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (id) != "undefined") {_RecordType("<269,271,11>",(id)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (foo) != "undefined") {_RecordType("<272,275,11>",(foo)); Inst8++; } } catch(e) {}
  var r = id(foo);
try { if (Inst6 <= 1000 && typeof (r) != "undefined") {_RecordType("<265,266,11>",(r)); Inst6++; } } catch(e) {}

  for (var i = 0; i < 100000; i++) {
try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<290,291,13>",(i)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<297,298,13>",(i)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<309,310,13>",(i)); Inst11++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<327,328,14>",(i)); Inst13++; } } catch(e) {}
    sum += i;
try { if (Inst12 <= 1000 && typeof (sum) != "undefined") {_RecordType("<320,323,14>",(sum)); Inst12++; } } catch(e) {}
  }

try { if (Inst14 <= 1000 && typeof (foo) != "undefined") {_RecordType("<344,347,17>",(foo)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (r) != "undefined") {_RecordType("<351,352,17>",(r)); Inst15++; } } catch(e) {}
  return foo == r;
}();
try { if (Inst3 <= 1000 && typeof (x) != "undefined") {_RecordType("<223,224,9>",(x)); Inst3++; } } catch(e) {}

true;
try { if (Inst16 <= 1000 && typeof (x) != "undefined") {_RecordType("<366,367,21>",(x)); Inst16++; } } catch(e) {}
x;

try { if (Inst18 <= 1000 && typeof (bar) != "undefined") {_RecordType("<387,390,23>",(bar)); Inst18++; } } catch(e) {}
var x = function bar() {
  var sum = 0;
try { if (Inst19 <= 1000 && typeof (sum) != "undefined") {_RecordType("<401,404,24>",(sum)); Inst19++; } } catch(e) {}

  for (var i = 0; i < 90000; i++) {
try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<422,423,26>",(i)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<429,430,26>",(i)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<440,441,26>",(i)); Inst22++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<458,459,27>",(i)); Inst24++; } } catch(e) {}
    sum += i;
try { if (Inst23 <= 1000 && typeof (sum) != "undefined") {_RecordType("<451,454,27>",(sum)); Inst23++; } } catch(e) {}
  }

try { if (Inst25 <= 1000 && typeof (bar) != "undefined") {_RecordType("<475,478,30>",(bar)); Inst25++; } } catch(e) {}
  return bar;
}();
try { if (Inst17 <= 1000 && typeof (x) != "undefined") {_RecordType("<374,375,23>",(x)); Inst17++; } } catch(e) {}

"function";
try { if (Inst26 <= 1000 && typeof (x) != "undefined") {_RecordType("<505,506,34>",(x)); Inst26++; } } catch(e) {}
typeof x;

