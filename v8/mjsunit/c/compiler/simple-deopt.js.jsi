var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2010 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// Flags: --allow-natives-syntax
try { if (Inst0 <= 1000 && typeof (f) != "undefined") {_RecordType("<1639,1640,28>",(f)); Inst0++; } } catch(e) {}
function f(x) {
try { if (Inst1 <= 1000 && typeof (x) != "undefined") {_RecordType("<1641,1642,28>",(x)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (x) != "undefined") {_RecordType("<1656,1657,29>",(x)); Inst2++; } } catch(e) {}
  return ~x;
}

try { if (Inst3 <= 1000 && typeof (f) != "undefined") {_RecordType("<1662,1663,32>",(f)); Inst3++; } } catch(e) {}
f(42);
~12;
try { if (Inst4 <= 1000 && typeof (f) != "undefined") {_RecordType("<1674,1675,34>",(f)); Inst4++; } } catch(e) {}
f(12.45);
~42;
try { if (Inst5 <= 1000 && typeof (f) != "undefined") {_RecordType("<1689,1690,36>",(f)); Inst5++; } } catch(e) {}
f(42.87);
var a = 1,
    b = 2,
    c = 4,
    d = 8;
try { if (Inst6 <= 1000 && typeof (a) != "undefined") {_RecordType("<1703,1704,37>",(a)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (b) != "undefined") {_RecordType("<1714,1715,38>",(b)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (c) != "undefined") {_RecordType("<1725,1726,39>",(c)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (d) != "undefined") {_RecordType("<1736,1737,40>",(d)); Inst9++; } } catch(e) {}

try { if (Inst10 <= 1000 && typeof (g) != "undefined") {_RecordType("<1753,1754,42>",(g)); Inst10++; } } catch(e) {}
function g() {
try { if (Inst11 <= 1000 && typeof (a) != "undefined") {_RecordType("<1768,1769,43>",(a)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (b) != "undefined") {_RecordType("<1773,1774,43>",(b)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (c) != "undefined") {_RecordType("<1778,1779,43>",(c)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (d) != "undefined") {_RecordType("<1782,1783,43>",(d)); Inst14++; } } catch(e) {}
  return a | (b | (c | d));
}

try { if (Inst15 <= 1000 && typeof (g) != "undefined") {_RecordType("<1790,1791,46>",(g)); Inst15++; } } catch(e) {}
g();
c = "16";
try { if (Inst16 <= 1000 && typeof (c) != "undefined") {_RecordType("<1795,1796,47>",(c)); Inst16++; } } catch(e) {}
1 | 2 | 16 | 8;
try { if (Inst17 <= 1000 && typeof (g) != "undefined") {_RecordType("<1821,1822,49>",(g)); Inst17++; } } catch(e) {}
g();

// Test deopt when global function changes.
try { if (Inst18 <= 1000 && typeof (h) != "undefined") {_RecordType("<1880,1881,52>",(h)); Inst18++; } } catch(e) {}
function h() {
try { if (Inst19 <= 1000 && typeof (g) != "undefined") {_RecordType("<1895,1896,53>",(g)); Inst19++; } } catch(e) {}
  return g();
}

1 | 2 | 16 | 8;
try { if (Inst20 <= 1000 && typeof (h) != "undefined") {_RecordType("<1919,1920,57>",(h)); Inst20++; } } catch(e) {}
h();

g = function () {
  return 42;
};
try { if (Inst21 <= 1000 && typeof (g) != "undefined") {_RecordType("<1925,1926,59>",(g)); Inst21++; } } catch(e) {}

42;
try { if (Inst22 <= 1000 && typeof (h) != "undefined") {_RecordType("<1964,1965,64>",(h)); Inst22++; } } catch(e) {}
h();
// Test deopt when map changes.
var obj = {};
try { if (Inst23 <= 1000 && typeof (obj) != "undefined") {_RecordType("<2005,2008,66>",(obj)); Inst23++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (g) != "undefined") {_RecordType("<2023,2024,67>",(g)); Inst26++; } } catch(e) {}
obj.g = g;
try { if (Inst24 <= 1000 && typeof (obj.g) != "undefined") {_RecordType("<2015,2020,67>",(obj.g)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (obj) != "undefined") {_RecordType("<2015,2018,67>",(obj)); Inst25++; } } catch(e) {}

try { if (Inst27 <= 1000 && typeof (k) != "undefined") {_RecordType("<2036,2037,69>",(k)); Inst27++; } } catch(e) {}
function k(o) {
try { if (Inst28 <= 1000 && typeof (o) != "undefined") {_RecordType("<2038,2039,69>",(o)); Inst28++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (o.g) != "undefined") {_RecordType("<2052,2055,70>",(o.g)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (o) != "undefined") {_RecordType("<2052,2053,70>",(o)); Inst30++; } } catch(e) {}
  return o.g();
}

for (var i = 0; i < 5; i++) {
try { if (Inst31 <= 1000 && typeof (i) != "undefined") {_RecordType("<2071,2072,73>",(i)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (i) != "undefined") {_RecordType("<2078,2079,73>",(i)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (i) != "undefined") {_RecordType("<2085,2086,73>",(i)); Inst33++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof (k) != "undefined") {_RecordType("<2094,2095,74>",(k)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (obj) != "undefined") {_RecordType("<2096,2099,74>",(obj)); Inst35++; } } catch(e) {}
  k(obj);
}

try { if (Inst36 <= 1000 && typeof (k) != "undefined") {_RecordType("<2105,2106,77>",(k)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (obj) != "undefined") {_RecordType("<2107,2110,77>",(obj)); Inst37++; } } catch(e) {}
k(obj);
42;
try { if (Inst38 <= 1000 && typeof (k) != "undefined") {_RecordType("<2117,2118,79>",(k)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (obj) != "undefined") {_RecordType("<2119,2122,79>",(obj)); Inst39++; } } catch(e) {}
k(obj);
87;
try { if (Inst40 <= 1000 && typeof (k) != "undefined") {_RecordType("<2129,2130,81>",(k)); Inst40++; } } catch(e) {}
k({
  g: function () {
    return 87;
  }
});

// Test deopt with assignments to parameters.
try { if (Inst41 <= 1000 && typeof (p) != "undefined") {_RecordType("<2231,2232,88>",(p)); Inst41++; } } catch(e) {}
function p(x, y) {
try { if (Inst42 <= 1000 && typeof (x) != "undefined") {_RecordType("<2233,2234,88>",(x)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (y) != "undefined") {_RecordType("<2236,2237,88>",(y)); Inst43++; } } catch(e) {}
  x = 42;
try { if (Inst44 <= 1000 && typeof (x) != "undefined") {_RecordType("<2243,2244,89>",(x)); Inst44++; } } catch(e) {}
  y = 1;
try { if (Inst45 <= 1000 && typeof (y) != "undefined") {_RecordType("<2253,2254,90>",(y)); Inst45++; } } catch(e) {}
try { if (Inst47 <= 1000 && typeof (y) != "undefined") {_RecordType("<2266,2267,91>",(y)); Inst47++; } } catch(e) {}
  y = y << "0";
try { if (Inst46 <= 1000 && typeof (y) != "undefined") {_RecordType("<2262,2263,91>",(y)); Inst46++; } } catch(e) {}
try { if (Inst48 <= 1000 && typeof (x) != "undefined") {_RecordType("<2285,2286,92>",(x)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (y) != "undefined") {_RecordType("<2289,2290,92>",(y)); Inst49++; } } catch(e) {}
  return x | y;
}

43;
try { if (Inst50 <= 1000 && typeof (p) != "undefined") {_RecordType("<2299,2300,96>",(p)); Inst50++; } } catch(e) {}
p(0, 0);

// Test deopt with literals on the expression stack.
try { if (Inst51 <= 1000 && typeof (LiteralToStack) != "undefined") {_RecordType("<2371,2385,99>",(LiteralToStack)); Inst51++; } } catch(e) {}
function LiteralToStack(x) {
try { if (Inst52 <= 1000 && typeof (x) != "undefined") {_RecordType("<2386,2387,99>",(x)); Inst52++; } } catch(e) {}
try { if (Inst53 <= 1000 && typeof (x) != "undefined") {_RecordType("<2410,2411,100>",(x)); Inst53++; } } catch(e) {}
  return 'lit[' + (x + ']');
}

'lit[-87]';
try { if (Inst54 <= 1000 && typeof (LiteralToStack) != "undefined") {_RecordType("<2435,2449,104>",(LiteralToStack)); Inst54++; } } catch(e) {}
LiteralToStack(-87);
'lit[0]';
try { if (Inst55 <= 1000 && typeof (LiteralToStack) != "undefined") {_RecordType("<2466,2480,106>",(LiteralToStack)); Inst55++; } } catch(e) {}
LiteralToStack(0);
'lit[42]';
try { if (Inst56 <= 1000 && typeof (LiteralToStack) != "undefined") {_RecordType("<2496,2510,108>",(LiteralToStack)); Inst56++; } } catch(e) {}
LiteralToStack(42);
// Test deopt before call.
var str = "abc";
try { if (Inst57 <= 1000 && typeof (str) != "undefined") {_RecordType("<2547,2550,110>",(str)); Inst57++; } } catch(e) {}
var r;
try { if (Inst58 <= 1000 && typeof (r) != "undefined") {_RecordType("<2564,2565,111>",(r)); Inst58++; } } catch(e) {}

try { if (Inst59 <= 1000 && typeof (CallCharAt) != "undefined") {_RecordType("<2577,2587,113>",(CallCharAt)); Inst59++; } } catch(e) {}
function CallCharAt(n) {
try { if (Inst60 <= 1000 && typeof (n) != "undefined") {_RecordType("<2588,2589,113>",(n)); Inst60++; } } catch(e) {}
try { if (Inst61 <= 1000 && typeof (str.charAt) != "undefined") {_RecordType("<2602,2612,114>",(str.charAt)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (str) != "undefined") {_RecordType("<2602,2605,114>",(str)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (n) != "undefined") {_RecordType("<2613,2614,114>",(n)); Inst63++; } } catch(e) {}
  return str.charAt(n);
}

for (var i = 0; i < 5; i++) {
try { if (Inst64 <= 1000 && typeof (i) != "undefined") {_RecordType("<2629,2630,117>",(i)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (i) != "undefined") {_RecordType("<2636,2637,117>",(i)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (i) != "undefined") {_RecordType("<2643,2644,117>",(i)); Inst66++; } } catch(e) {}
try { if (Inst68 <= 1000 && typeof (CallCharAt) != "undefined") {_RecordType("<2656,2666,118>",(CallCharAt)); Inst68++; } } catch(e) {}
  r = CallCharAt(0);
try { if (Inst67 <= 1000 && typeof (r) != "undefined") {_RecordType("<2652,2653,118>",(r)); Inst67++; } } catch(e) {}
}

try { if (Inst70 <= 1000 && typeof (CallCharAt) != "undefined") {_RecordType("<2678,2688,121>",(CallCharAt)); Inst70++; } } catch(e) {}
r = CallCharAt(0);
try { if (Inst69 <= 1000 && typeof (r) != "undefined") {_RecordType("<2674,2675,121>",(r)); Inst69++; } } catch(e) {}
"a";
try { if (Inst71 <= 1000 && typeof (r) != "undefined") {_RecordType("<2698,2699,123>",(r)); Inst71++; } } catch(e) {}
r;

// Test of deopt in presence of spilling.
try { if (Inst72 <= 1000 && typeof (add4) != "undefined") {_RecordType("<2753,2757,126>",(add4)); Inst72++; } } catch(e) {}
function add4(a, b, c, d) {
try { if (Inst73 <= 1000 && typeof (a) != "undefined") {_RecordType("<2758,2759,126>",(a)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (b) != "undefined") {_RecordType("<2761,2762,126>",(b)); Inst74++; } } catch(e) {}try { if (Inst75 <= 1000 && typeof (c) != "undefined") {_RecordType("<2764,2765,126>",(c)); Inst75++; } } catch(e) {}try { if (Inst76 <= 1000 && typeof (d) != "undefined") {_RecordType("<2767,2768,126>",(d)); Inst76++; } } catch(e) {}
try { if (Inst77 <= 1000 && typeof (a) != "undefined") {_RecordType("<2781,2782,127>",(a)); Inst77++; } } catch(e) {}try { if (Inst78 <= 1000 && typeof (b) != "undefined") {_RecordType("<2785,2786,127>",(b)); Inst78++; } } catch(e) {}try { if (Inst79 <= 1000 && typeof (c) != "undefined") {_RecordType("<2789,2790,127>",(c)); Inst79++; } } catch(e) {}try { if (Inst80 <= 1000 && typeof (d) != "undefined") {_RecordType("<2793,2794,127>",(d)); Inst80++; } } catch(e) {}
  return a + b + c + d;
}

0x40000003;
try { if (Inst81 <= 1000 && typeof (add4) != "undefined") {_RecordType("<2811,2815,131>",(add4)); Inst81++; } } catch(e) {}
add4(1, 1, 2, 0x3fffffff);

