var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2015 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax
try { if (Inst0 <= 1000 && typeof (fastaRandom) != "undefined") {_RecordType("<209,220,5>",(fastaRandom)); Inst0++; } } catch(e) {}
function fastaRandom(n, table) {
try { if (Inst1 <= 1000 && typeof (n) != "undefined") {_RecordType("<221,222,5>",(n)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (table) != "undefined") {_RecordType("<224,229,5>",(table)); Inst2++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (Array) != "undefined") {_RecordType("<250,255,6>",(Array)); Inst4++; } } catch(e) {}
  var line = new Array(5);
try { if (Inst3 <= 1000 && typeof (line) != "undefined") {_RecordType("<239,243,6>",(line)); Inst3++; } } catch(e) {}

try { if (Inst5 <= 1000 && typeof (n) != "undefined") {_RecordType("<270,271,8>",(n)); Inst5++; } } catch(e) {}
  while (n > 0) {
try { if (Inst6 <= 1000 && typeof (n) != "undefined") {_RecordType("<287,288,9>",(n)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (line.length) != "undefined") {_RecordType("<291,302,9>",(line.length)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (line) != "undefined") {_RecordType("<291,295,9>",(line)); Inst8++; } } catch(e) {}
    if (n < line.length) {
try { if (Inst10 <= 1000 && typeof (Array) != "undefined") {_RecordType("<323,328,10>",(Array)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (n) != "undefined") {_RecordType("<329,330,10>",(n)); Inst11++; } } catch(e) {}
      line = new Array(n);
try { if (Inst9 <= 1000 && typeof (line) != "undefined") {_RecordType("<312,316,10>",(line)); Inst9++; } } catch(e) {}
    }

try { if (Inst14 <= 1000 && typeof (n) != "undefined") {_RecordType("<354,355,13>",(n)); Inst14++; } } catch(e) {}
    line[0] = n;
try { if (Inst12 <= 1000 && typeof (line[0]) != "undefined") {_RecordType("<344,351,13>",(line[0])); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (line) != "undefined") {_RecordType("<344,348,13>",(line)); Inst13++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (n) != "undefined") {_RecordType("<361,362,14>",(n)); Inst15++; } } catch(e) {}
    n--;
  }
}

try { if (Inst16 <= 1000 && typeof (print) != "undefined") {_RecordType("<373,378,18>",(print)); Inst16++; } } catch(e) {}
print("---BEGIN 1");
try { if (Inst17 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<394,403,19>",(undefined)); Inst17++; } } catch(e) {}
undefined;
try { if (Inst18 <= 1000 && typeof (fastaRandom) != "undefined") {_RecordType("<405,416,20>",(fastaRandom)); Inst18++; } } catch(e) {}
fastaRandom(6, null);
try { if (Inst19 <= 1000 && typeof (print) != "undefined") {_RecordType("<427,432,21>",(print)); Inst19++; } } catch(e) {}
print("---BEGIN 2");
try { if (Inst20 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<448,457,22>",(undefined)); Inst20++; } } catch(e) {}
undefined;
try { if (Inst21 <= 1000 && typeof (fastaRandom) != "undefined") {_RecordType("<459,470,23>",(fastaRandom)); Inst21++; } } catch(e) {}
fastaRandom(6, null);
try { if (Inst22 <= 1000 && typeof (print) != "undefined") {_RecordType("<481,486,24>",(print)); Inst22++; } } catch(e) {}
print("---END");

