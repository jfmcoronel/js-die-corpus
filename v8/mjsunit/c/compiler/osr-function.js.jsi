var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2015 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --use-osr
try { if (Inst0 <= 1000 && typeof (foo) != "undefined") {_RecordType("<196,199,5>",(foo)); Inst0++; } } catch(e) {}
function foo() {
  var sum = 0;
try { if (Inst1 <= 1000 && typeof (sum) != "undefined") {_RecordType("<210,213,6>",(sum)); Inst1++; } } catch(e) {}

  for (var i = 0; i < 100000; i++) {
try { if (Inst2 <= 1000 && typeof (i) != "undefined") {_RecordType("<231,232,8>",(i)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (i) != "undefined") {_RecordType("<238,239,8>",(i)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (i) != "undefined") {_RecordType("<250,251,8>",(i)); Inst4++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<268,269,9>",(i)); Inst6++; } } catch(e) {}
    sum += i;
try { if (Inst5 <= 1000 && typeof (sum) != "undefined") {_RecordType("<261,264,9>",(sum)); Inst5++; } } catch(e) {}
  }

  return function () {
try { if (Inst7 <= 1000 && typeof (sum) != "undefined") {_RecordType("<310,313,13>",(sum)); Inst7++; } } catch(e) {}
    return sum;
  };
}

4999950000;
try { if (Inst8 <= 1000 && typeof (foo) != "undefined") {_RecordType("<335,338,18>",(foo)); Inst8++; } } catch(e) {}
foo()();
4999950000;
try { if (Inst9 <= 1000 && typeof (foo) != "undefined") {_RecordType("<356,359,20>",(foo)); Inst9++; } } catch(e) {}
foo()();
4999950000;
try { if (Inst10 <= 1000 && typeof (foo) != "undefined") {_RecordType("<377,380,22>",(foo)); Inst10++; } } catch(e) {}
foo()();

try { if (Inst11 <= 1000 && typeof (bar) != "undefined") {_RecordType("<396,399,24>",(bar)); Inst11++; } } catch(e) {}
function bar() {
  var sum = 0;
try { if (Inst12 <= 1000 && typeof (sum) != "undefined") {_RecordType("<410,413,25>",(sum)); Inst12++; } } catch(e) {}
  var ret = 0;
try { if (Inst13 <= 1000 && typeof (ret) != "undefined") {_RecordType("<425,428,26>",(ret)); Inst13++; } } catch(e) {}

  for (var i = 0; i < 90000; i++) {
try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<446,447,28>",(i)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<453,454,28>",(i)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<464,465,28>",(i)); Inst16++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (i) != "undefined") {_RecordType("<482,483,29>",(i)); Inst18++; } } catch(e) {}
    sum += i;
try { if (Inst17 <= 1000 && typeof (sum) != "undefined") {_RecordType("<475,478,29>",(sum)); Inst17++; } } catch(e) {}

try { if (Inst19 <= 1000 && typeof (i) != "undefined") {_RecordType("<494,495,31>",(i)); Inst19++; } } catch(e) {}
    if (i == 0) {
      ret = function () {
try { if (Inst21 <= 1000 && typeof (sum) != "undefined") {_RecordType("<545,548,33>",(sum)); Inst21++; } } catch(e) {}
        return sum;
      };
try { if (Inst20 <= 1000 && typeof (ret) != "undefined") {_RecordType("<510,513,32>",(ret)); Inst20++; } } catch(e) {}
    }
  }

try { if (Inst22 <= 1000 && typeof (ret) != "undefined") {_RecordType("<579,582,38>",(ret)); Inst22++; } } catch(e) {}
  return ret;
}

4049955000;
try { if (Inst23 <= 1000 && typeof (bar) != "undefined") {_RecordType("<599,602,42>",(bar)); Inst23++; } } catch(e) {}
bar()();
4049955000;
try { if (Inst24 <= 1000 && typeof (bar) != "undefined") {_RecordType("<620,623,44>",(bar)); Inst24++; } } catch(e) {}
bar()();
4049955000;
try { if (Inst25 <= 1000 && typeof (bar) != "undefined") {_RecordType("<641,644,46>",(bar)); Inst25++; } } catch(e) {}
bar()();

