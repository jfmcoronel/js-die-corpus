var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2017 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax --turbo-escape
try { if (Inst0 <= 1000 && typeof (g) != "undefined") {_RecordType("<224,225,5>",(g)); Inst0++; } } catch(e) {}
function g(o) {
try { if (Inst1 <= 1000 && typeof (o) != "undefined") {_RecordType("<226,227,5>",(o)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (o) != "undefined") {_RecordType("<249,250,7>",(o)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (o) != "undefined") {_RecordType("<270,271,9>",(o)); Inst3++; } } catch(e) {}
  return {
    a: o,
    b: 42,
    c: o
  };
}

try { if (Inst4 <= 1000 && typeof (f) != "undefined") {_RecordType("<289,290,13>",(f)); Inst4++; } } catch(e) {}
function f() {
  var o = {
    a: {},
    b: 43
  };
try { if (Inst5 <= 1000 && typeof (o) != "undefined") {_RecordType("<301,302,14>",(o)); Inst5++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (g) != "undefined") {_RecordType("<341,342,18>",(g)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (g) != "undefined") {_RecordType("<343,344,18>",(g)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (o) != "undefined") {_RecordType("<345,346,18>",(o)); Inst10++; } } catch(e) {}
  o.a = g(g(o));
try { if (Inst6 <= 1000 && typeof (o.a) != "undefined") {_RecordType("<335,338,18>",(o.a)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (o) != "undefined") {_RecordType("<335,336,18>",(o)); Inst7++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (o.a.c) != "undefined") {_RecordType("<358,363,19>",(o.a.c)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (o.a) != "undefined") {_RecordType("<358,361,19>",(o.a)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (o) != "undefined") {_RecordType("<358,359,19>",(o)); Inst15++; } } catch(e) {}
  o.c = o.a.c;
try { if (Inst11 <= 1000 && typeof (o.c) != "undefined") {_RecordType("<352,355,19>",(o.c)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (o) != "undefined") {_RecordType("<352,353,19>",(o)); Inst12++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (o.c.a.c.a.c.a.c.b) != "undefined") {_RecordType("<374,391,20>",(o.c.a.c.a.c.a.c.b)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (o.c.a.c.a.c.a.c) != "undefined") {_RecordType("<374,389,20>",(o.c.a.c.a.c.a.c)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (o.c.a.c.a.c.a) != "undefined") {_RecordType("<374,387,20>",(o.c.a.c.a.c.a)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (o.c.a.c.a.c) != "undefined") {_RecordType("<374,385,20>",(o.c.a.c.a.c)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (o.c.a.c.a) != "undefined") {_RecordType("<374,383,20>",(o.c.a.c.a)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (o.c.a.c) != "undefined") {_RecordType("<374,381,20>",(o.c.a.c)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (o.c.a) != "undefined") {_RecordType("<374,379,20>",(o.c.a)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (o.c) != "undefined") {_RecordType("<374,377,20>",(o.c)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (o) != "undefined") {_RecordType("<374,375,20>",(o)); Inst24++; } } catch(e) {}
  return o.c.a.c.a.c.a.c.b;
}

42;
try { if (Inst25 <= 1000 && typeof (f) != "undefined") {_RecordType("<400,401,24>",(f)); Inst25++; } } catch(e) {}
f();
42;
try { if (Inst26 <= 1000 && typeof (f) != "undefined") {_RecordType("<409,410,26>",(f)); Inst26++; } } catch(e) {}
f();
42;
try { if (Inst27 <= 1000 && typeof (f) != "undefined") {_RecordType("<418,419,28>",(f)); Inst27++; } } catch(e) {}
f();

