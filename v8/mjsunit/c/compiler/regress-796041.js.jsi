var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2018 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax
'use strict';

try { if (Inst0 <= 1000 && typeof (f) != "undefined") {_RecordType("<224,225,7>",(f)); Inst0++; } } catch(e) {}
function f(abort, n, a, b) {
try { if (Inst1 <= 1000 && typeof (abort) != "undefined") {_RecordType("<226,231,7>",(abort)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (n) != "undefined") {_RecordType("<233,234,7>",(n)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (a) != "undefined") {_RecordType("<236,237,7>",(a)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (b) != "undefined") {_RecordType("<239,240,7>",(b)); Inst4++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (abort) != "undefined") {_RecordType("<250,255,8>",(abort)); Inst5++; } } catch(e) {}
  if (abort) {
    return;
  }

try { if (Inst7 <= 1000 && typeof (a) != "undefined") {_RecordType("<286,287,12>",(a)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (a) != "undefined") {_RecordType("<302,303,12>",(a)); Inst8++; } } catch(e) {}
  var x = a ? true : "" + a;
try { if (Inst6 <= 1000 && typeof (x) != "undefined") {_RecordType("<282,283,12>",(x)); Inst6++; } } catch(e) {}

try { if (Inst9 <= 1000 && typeof (a) != "undefined") {_RecordType("<313,314,14>",(a)); Inst9++; } } catch(e) {}
  if (!a) {
try { if (Inst11 <= 1000 && typeof (n) != "undefined") {_RecordType("<333,334,15>",(n)); Inst11++; } } catch(e) {}
    var dead = n + 1 + 1;
try { if (Inst10 <= 1000 && typeof (dead) != "undefined") {_RecordType("<326,330,15>",(dead)); Inst10++; } } catch(e) {}

try { if (Inst12 <= 1000 && typeof (b) != "undefined") {_RecordType("<354,355,17>",(b)); Inst12++; } } catch(e) {}
    if (!b) {
try { if (Inst14 <= 1000 && typeof (dead) != "undefined") {_RecordType("<369,373,18>",(dead)); Inst14++; } } catch(e) {}
      x = dead;
try { if (Inst13 <= 1000 && typeof (x) != "undefined") {_RecordType("<365,366,18>",(x)); Inst13++; } } catch(e) {}
    }

try { if (Inst15 <= 1000 && typeof (x) != "undefined") {_RecordType("<390,391,21>",(x)); Inst15++; } } catch(e) {}
    if (x) {
      x = false;
try { if (Inst16 <= 1000 && typeof (x) != "undefined") {_RecordType("<401,402,22>",(x)); Inst16++; } } catch(e) {}
    }

try { if (Inst17 <= 1000 && typeof (b) != "undefined") {_RecordType("<427,428,25>",(b)); Inst17++; } } catch(e) {}
    if (b) {
      x = false;
try { if (Inst18 <= 1000 && typeof (x) != "undefined") {_RecordType("<438,439,26>",(x)); Inst18++; } } catch(e) {}
    }
  }

try { if (Inst19 <= 1000 && typeof (x) != "undefined") {_RecordType("<469,470,30>",(x)); Inst19++; } } catch(e) {}
  return x + 1;
}

try { if (Inst20 <= 1000 && typeof (f) != "undefined") {_RecordType("<479,480,33>",(f)); Inst20++; } } catch(e) {}
f(false, 5);
try { if (Inst21 <= 1000 && typeof (f) != "undefined") {_RecordType("<492,493,34>",(f)); Inst21++; } } catch(e) {}
f(false, 6);
try { if (Inst22 <= 1000 && typeof (f) != "undefined") {_RecordType("<505,506,35>",(f)); Inst22++; } } catch(e) {}
f(false, 7);
try { if (Inst23 <= 1000 && typeof (f) != "undefined") {_RecordType("<518,519,36>",(f)); Inst23++; } } catch(e) {}
f(false, 8);

try { if (Inst24 <= 1000 && typeof (g) != "undefined") {_RecordType("<541,542,38>",(g)); Inst24++; } } catch(e) {}
function g(abort, a, b) {
try { if (Inst25 <= 1000 && typeof (abort) != "undefined") {_RecordType("<543,548,38>",(abort)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (a) != "undefined") {_RecordType("<550,551,38>",(a)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (b) != "undefined") {_RecordType("<553,554,38>",(b)); Inst27++; } } catch(e) {}
try { if (Inst28 <= 1000 && typeof (f) != "undefined") {_RecordType("<567,568,39>",(f)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (abort) != "undefined") {_RecordType("<569,574,39>",(abort)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (a) != "undefined") {_RecordType("<583,584,39>",(a)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (b) != "undefined") {_RecordType("<586,587,39>",(b)); Inst31++; } } catch(e) {}
  return f(abort, "abc", a, b);
}

try { if (Inst32 <= 1000 && typeof (g) != "undefined") {_RecordType("<593,594,42>",(g)); Inst32++; } } catch(e) {}
g(true);
try { if (Inst33 <= 1000 && typeof (g) != "undefined") {_RecordType("<602,603,43>",(g)); Inst33++; } } catch(e) {}
g(true);
try { if (Inst34 <= 1000 && typeof (g) != "undefined") {_RecordType("<611,612,44>",(g)); Inst34++; } } catch(e) {}
g(true);
try { if (Inst35 <= 1000 && typeof (g) != "undefined") {_RecordType("<620,621,45>",(g)); Inst35++; } } catch(e) {}
g(true);
try { if (Inst36 <= 1000 && typeof (g) != "undefined") {_RecordType("<629,630,46>",(g)); Inst36++; } } catch(e) {}
g(false);

