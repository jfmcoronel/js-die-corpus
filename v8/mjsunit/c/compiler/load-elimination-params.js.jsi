var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2013 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// Flags: --allow-natives-syntax --load-elimination
// Test local load elimination of redundant loads and stores.
try { if (Inst0 <= 1000 && typeof (B) != "undefined") {_RecordType("<1720,1721,29>",(B)); Inst0++; } } catch(e) {}
function B(x, y) {
try { if (Inst1 <= 1000 && typeof (x) != "undefined") {_RecordType("<1722,1723,29>",(x)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (y) != "undefined") {_RecordType("<1725,1726,29>",(y)); Inst2++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (x) != "undefined") {_RecordType("<1741,1742,30>",(x)); Inst4++; } } catch(e) {}
  this.x = x;
try { if (Inst3 <= 1000 && typeof (this.x) != "undefined") {_RecordType("<1732,1738,30>",(this.x)); Inst3++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (y) != "undefined") {_RecordType("<1755,1756,31>",(y)); Inst6++; } } catch(e) {}
  this.y = y;
try { if (Inst5 <= 1000 && typeof (this.y) != "undefined") {_RecordType("<1746,1752,31>",(this.y)); Inst5++; } } catch(e) {}
  return this;
}

try { if (Inst7 <= 1000 && typeof (test_params1) != "undefined") {_RecordType("<1785,1797,35>",(test_params1)); Inst7++; } } catch(e) {}
function test_params1(a, b) {
try { if (Inst8 <= 1000 && typeof (a) != "undefined") {_RecordType("<1798,1799,35>",(a)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (b) != "undefined") {_RecordType("<1801,1802,35>",(b)); Inst9++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (a.x) != "undefined") {_RecordType("<1816,1819,36>",(a.x)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (a) != "undefined") {_RecordType("<1816,1817,36>",(a)); Inst12++; } } catch(e) {}
  var i = a.x;
try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<1812,1813,36>",(i)); Inst10++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (a.x) != "undefined") {_RecordType("<1831,1834,37>",(a.x)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (a) != "undefined") {_RecordType("<1831,1832,37>",(a)); Inst15++; } } catch(e) {}
  var j = a.x;
try { if (Inst13 <= 1000 && typeof (j) != "undefined") {_RecordType("<1827,1828,37>",(j)); Inst13++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (b.x) != "undefined") {_RecordType("<1846,1849,38>",(b.x)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (b) != "undefined") {_RecordType("<1846,1847,38>",(b)); Inst18++; } } catch(e) {}
  var k = b.x;
try { if (Inst16 <= 1000 && typeof (k) != "undefined") {_RecordType("<1842,1843,38>",(k)); Inst16++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (b.x) != "undefined") {_RecordType("<1861,1864,39>",(b.x)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (b) != "undefined") {_RecordType("<1861,1862,39>",(b)); Inst21++; } } catch(e) {}
  var l = b.x;
try { if (Inst19 <= 1000 && typeof (l) != "undefined") {_RecordType("<1857,1858,39>",(l)); Inst19++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<1875,1876,40>",(i)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (j) != "undefined") {_RecordType("<1879,1880,40>",(j)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (k) != "undefined") {_RecordType("<1883,1884,40>",(k)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (l) != "undefined") {_RecordType("<1887,1888,40>",(l)); Inst25++; } } catch(e) {}
  return i + j + k + l;
}

14;
try { if (Inst26 <= 1000 && typeof (test_params1) != "undefined") {_RecordType("<1897,1909,44>",(test_params1)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (B) != "undefined") {_RecordType("<1914,1915,44>",(B)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (B) != "undefined") {_RecordType("<1927,1928,44>",(B)); Inst28++; } } catch(e) {}
test_params1(new B(3, 4), new B(4, 5));
110;
try { if (Inst29 <= 1000 && typeof (test_params1) != "undefined") {_RecordType("<1942,1954,46>",(test_params1)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (B) != "undefined") {_RecordType("<1959,1960,46>",(B)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (B) != "undefined") {_RecordType("<1973,1974,46>",(B)); Inst31++; } } catch(e) {}
test_params1(new B(11, 7), new B(44, 8));
6;
try { if (Inst32 <= 1000 && typeof (test_params1) != "undefined") {_RecordType("<1987,1999,48>",(test_params1)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (B) != "undefined") {_RecordType("<2004,2005,48>",(B)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (B) != "undefined") {_RecordType("<2017,2018,48>",(B)); Inst34++; } } catch(e) {}
test_params1(new B(1, 7), new B(2, 8));

try { if (Inst35 <= 1000 && typeof (test_params2) != "undefined") {_RecordType("<2037,2049,50>",(test_params2)); Inst35++; } } catch(e) {}
function test_params2(a, b) {
try { if (Inst36 <= 1000 && typeof (a) != "undefined") {_RecordType("<2050,2051,50>",(a)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (b) != "undefined") {_RecordType("<2053,2054,50>",(b)); Inst37++; } } catch(e) {}
try { if (Inst39 <= 1000 && typeof (B) != "undefined") {_RecordType("<2072,2073,51>",(B)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (a) != "undefined") {_RecordType("<2074,2075,51>",(a)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (b) != "undefined") {_RecordType("<2081,2082,51>",(b)); Inst41++; } } catch(e) {}
  var o = new B(a + 1, b);
try { if (Inst38 <= 1000 && typeof (o) != "undefined") {_RecordType("<2064,2065,51>",(o)); Inst38++; } } catch(e) {}
try { if (Inst44 <= 1000 && typeof (a) != "undefined") {_RecordType("<2093,2094,52>",(a)); Inst44++; } } catch(e) {}
  o.x = a;
try { if (Inst42 <= 1000 && typeof (o.x) != "undefined") {_RecordType("<2087,2090,52>",(o.x)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (o) != "undefined") {_RecordType("<2087,2088,52>",(o)); Inst43++; } } catch(e) {}
try { if (Inst46 <= 1000 && typeof (o.x) != "undefined") {_RecordType("<2106,2109,53>",(o.x)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (o) != "undefined") {_RecordType("<2106,2107,53>",(o)); Inst47++; } } catch(e) {}
  var i = o.x;
try { if (Inst45 <= 1000 && typeof (i) != "undefined") {_RecordType("<2102,2103,53>",(i)); Inst45++; } } catch(e) {}
try { if (Inst50 <= 1000 && typeof (a) != "undefined") {_RecordType("<2119,2120,54>",(a)); Inst50++; } } catch(e) {}
  o.x = a;
try { if (Inst48 <= 1000 && typeof (o.x) != "undefined") {_RecordType("<2113,2116,54>",(o.x)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (o) != "undefined") {_RecordType("<2113,2114,54>",(o)); Inst49++; } } catch(e) {}
try { if (Inst52 <= 1000 && typeof (o.x) != "undefined") {_RecordType("<2132,2135,55>",(o.x)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (o) != "undefined") {_RecordType("<2132,2133,55>",(o)); Inst53++; } } catch(e) {}
  var j = o.x;
try { if (Inst51 <= 1000 && typeof (j) != "undefined") {_RecordType("<2128,2129,55>",(j)); Inst51++; } } catch(e) {}
try { if (Inst56 <= 1000 && typeof (b) != "undefined") {_RecordType("<2145,2146,56>",(b)); Inst56++; } } catch(e) {}
  o.x = b;
try { if (Inst54 <= 1000 && typeof (o.x) != "undefined") {_RecordType("<2139,2142,56>",(o.x)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (o) != "undefined") {_RecordType("<2139,2140,56>",(o)); Inst55++; } } catch(e) {}
try { if (Inst58 <= 1000 && typeof (o.x) != "undefined") {_RecordType("<2158,2161,57>",(o.x)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (o) != "undefined") {_RecordType("<2158,2159,57>",(o)); Inst59++; } } catch(e) {}
  var k = o.x;
try { if (Inst57 <= 1000 && typeof (k) != "undefined") {_RecordType("<2154,2155,57>",(k)); Inst57++; } } catch(e) {}
try { if (Inst62 <= 1000 && typeof (b) != "undefined") {_RecordType("<2171,2172,58>",(b)); Inst62++; } } catch(e) {}
  o.x = b;
try { if (Inst60 <= 1000 && typeof (o.x) != "undefined") {_RecordType("<2165,2168,58>",(o.x)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (o) != "undefined") {_RecordType("<2165,2166,58>",(o)); Inst61++; } } catch(e) {}
try { if (Inst64 <= 1000 && typeof (o.x) != "undefined") {_RecordType("<2184,2187,59>",(o.x)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (o) != "undefined") {_RecordType("<2184,2185,59>",(o)); Inst65++; } } catch(e) {}
  var l = o.x;
try { if (Inst63 <= 1000 && typeof (l) != "undefined") {_RecordType("<2180,2181,59>",(l)); Inst63++; } } catch(e) {}
try { if (Inst66 <= 1000 && typeof (i) != "undefined") {_RecordType("<2198,2199,60>",(i)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (j) != "undefined") {_RecordType("<2202,2203,60>",(j)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (k) != "undefined") {_RecordType("<2206,2207,60>",(k)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (l) != "undefined") {_RecordType("<2210,2211,60>",(l)); Inst69++; } } catch(e) {}
  return i + j + k + l;
}

14;
try { if (Inst70 <= 1000 && typeof (test_params2) != "undefined") {_RecordType("<2220,2232,64>",(test_params2)); Inst70++; } } catch(e) {}
test_params2(3, 4);
110;
try { if (Inst71 <= 1000 && typeof (test_params2) != "undefined") {_RecordType("<2245,2257,66>",(test_params2)); Inst71++; } } catch(e) {}
test_params2(11, 44);
6;
try { if (Inst72 <= 1000 && typeof (test_params2) != "undefined") {_RecordType("<2270,2282,68>",(test_params2)); Inst72++; } } catch(e) {}
test_params2(1, 2);

