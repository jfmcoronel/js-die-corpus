var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2018 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax
(function () {
try { if (Inst0 <= 1000 && typeof (foo) != "undefined") {_RecordType("<226,229,6>",(foo)); Inst0++; } } catch(e) {}
  function foo(p) {
try { if (Inst1 <= 1000 && typeof (p) != "undefined") {_RecordType("<230,231,6>",(p)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (p.catch) != "undefined") {_RecordType("<246,253,7>",(p.catch)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (p) != "undefined") {_RecordType("<246,247,7>",(p)); Inst3++; } } catch(e) {}
    return p.catch();
  }

try { if (Inst4 <= 1000 && typeof (foo) != "undefined") {_RecordType("<264,267,10>",(foo)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Promise.resolve) != "undefined") {_RecordType("<268,283,10>",(Promise.resolve)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Promise) != "undefined") {_RecordType("<268,275,10>",(Promise)); Inst6++; } } catch(e) {}
  foo(Promise.resolve(1));
try { if (Inst7 <= 1000 && typeof (foo) != "undefined") {_RecordType("<291,294,11>",(foo)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Promise.resolve) != "undefined") {_RecordType("<295,310,11>",(Promise.resolve)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Promise) != "undefined") {_RecordType("<295,302,11>",(Promise)); Inst9++; } } catch(e) {}
  foo(Promise.resolve(1));
try { if (Inst10 <= 1000 && typeof (foo) != "undefined") {_RecordType("<318,321,12>",(foo)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Promise.resolve) != "undefined") {_RecordType("<322,337,12>",(Promise.resolve)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Promise) != "undefined") {_RecordType("<322,329,12>",(Promise)); Inst12++; } } catch(e) {}
  foo(Promise.resolve(1));
})();

(function () {
try { if (Inst13 <= 1000 && typeof (foo) != "undefined") {_RecordType("<376,379,16>",(foo)); Inst13++; } } catch(e) {}
  function foo(p) {
try { if (Inst14 <= 1000 && typeof (p) != "undefined") {_RecordType("<380,381,16>",(p)); Inst14++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (p.catch) != "undefined") {_RecordType("<396,403,17>",(p.catch)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (p) != "undefined") {_RecordType("<396,397,17>",(p)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (foo) != "undefined") {_RecordType("<404,407,17>",(foo)); Inst17++; } } catch(e) {}
    return p.catch(foo);
  }

try { if (Inst18 <= 1000 && typeof (foo) != "undefined") {_RecordType("<417,420,20>",(foo)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Promise.resolve) != "undefined") {_RecordType("<421,436,20>",(Promise.resolve)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (Promise) != "undefined") {_RecordType("<421,428,20>",(Promise)); Inst20++; } } catch(e) {}
  foo(Promise.resolve(1));
try { if (Inst21 <= 1000 && typeof (foo) != "undefined") {_RecordType("<444,447,21>",(foo)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Promise.resolve) != "undefined") {_RecordType("<448,463,21>",(Promise.resolve)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Promise) != "undefined") {_RecordType("<448,455,21>",(Promise)); Inst23++; } } catch(e) {}
  foo(Promise.resolve(1));
try { if (Inst24 <= 1000 && typeof (foo) != "undefined") {_RecordType("<471,474,22>",(foo)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Promise.resolve) != "undefined") {_RecordType("<475,490,22>",(Promise.resolve)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Promise) != "undefined") {_RecordType("<475,482,22>",(Promise)); Inst26++; } } catch(e) {}
  foo(Promise.resolve(1));
})();

(function () {
try { if (Inst27 <= 1000 && typeof (foo) != "undefined") {_RecordType("<529,532,26>",(foo)); Inst27++; } } catch(e) {}
  function foo(p) {
try { if (Inst28 <= 1000 && typeof (p) != "undefined") {_RecordType("<533,534,26>",(p)); Inst28++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (p.catch) != "undefined") {_RecordType("<549,556,27>",(p.catch)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (p) != "undefined") {_RecordType("<549,550,27>",(p)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (foo) != "undefined") {_RecordType("<557,560,27>",(foo)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<562,571,27>",(undefined)); Inst32++; } } catch(e) {}
    return p.catch(foo, undefined);
  }

try { if (Inst33 <= 1000 && typeof (foo) != "undefined") {_RecordType("<581,584,30>",(foo)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (Promise.resolve) != "undefined") {_RecordType("<585,600,30>",(Promise.resolve)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (Promise) != "undefined") {_RecordType("<585,592,30>",(Promise)); Inst35++; } } catch(e) {}
  foo(Promise.resolve(1));
try { if (Inst36 <= 1000 && typeof (foo) != "undefined") {_RecordType("<608,611,31>",(foo)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (Promise.resolve) != "undefined") {_RecordType("<612,627,31>",(Promise.resolve)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (Promise) != "undefined") {_RecordType("<612,619,31>",(Promise)); Inst38++; } } catch(e) {}
  foo(Promise.resolve(1));
try { if (Inst39 <= 1000 && typeof (foo) != "undefined") {_RecordType("<635,638,32>",(foo)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (Promise.resolve) != "undefined") {_RecordType("<639,654,32>",(Promise.resolve)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (Promise) != "undefined") {_RecordType("<639,646,32>",(Promise)); Inst41++; } } catch(e) {}
  foo(Promise.resolve(1));
})();

