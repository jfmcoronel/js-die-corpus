var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
var Inst102 = 0;
var Inst103 = 0;
var Inst104 = 0;
var Inst105 = 0;
var Inst106 = 0;
var Inst107 = 0;
var Inst108 = 0;
var Inst109 = 0;
var Inst110 = 0;
var Inst111 = 0;
var Inst112 = 0;
var Inst113 = 0;
var Inst114 = 0;
var Inst115 = 0;
var Inst116 = 0;
var Inst117 = 0;
var Inst118 = 0;
var Inst119 = 0;
var Inst120 = 0;
var Inst121 = 0;
var Inst122 = 0;
var Inst123 = 0;
var Inst124 = 0;
var Inst125 = 0;
var Inst126 = 0;
var Inst127 = 0;
var Inst128 = 0;
var Inst129 = 0;
var Inst130 = 0;
var Inst131 = 0;
var Inst132 = 0;
var Inst133 = 0;
var Inst134 = 0;
var Inst135 = 0;
var Inst136 = 0;
var Inst137 = 0;
var Inst138 = 0;
var Inst139 = 0;
var Inst140 = 0;
var Inst141 = 0;
var Inst142 = 0;
var Inst143 = 0;
var Inst144 = 0;
var Inst145 = 0;
var Inst146 = 0;
var Inst147 = 0;
var Inst148 = 0;
var Inst149 = 0;
var Inst150 = 0;
var Inst151 = 0;
var Inst152 = 0;
var Inst153 = 0;
var Inst154 = 0;
var Inst155 = 0;
var Inst156 = 0;
var Inst157 = 0;
var Inst158 = 0;
var Inst159 = 0;
var Inst160 = 0;
var Inst161 = 0;
var Inst162 = 0;
var Inst163 = 0;
var Inst164 = 0;
var Inst165 = 0;
var Inst166 = 0;
var Inst167 = 0;
var Inst168 = 0;
var Inst169 = 0;
var Inst170 = 0;
var Inst171 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2018 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax --opt
// Test the RedundancyElimination::ReduceSpeculativeNumberOperation()
// TurboFan optimization for the case of SpeculativeNumberAdd with
// Number feedback.
(function () {
try { if (Inst0 <= 1000 && typeof (bar) != "undefined") {_RecordType("<389,392,9>",(bar)); Inst0++; } } catch(e) {}
  function bar(i) {
try { if (Inst1 <= 1000 && typeof (i) != "undefined") {_RecordType("<393,394,9>",(i)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (i) != "undefined") {_RecordType("<411,412,10>",(i)); Inst2++; } } catch(e) {}
    return ++i;
  }

try { if (Inst3 <= 1000 && typeof (bar) != "undefined") {_RecordType("<421,424,13>",(bar)); Inst3++; } } catch(e) {}
  bar(0.1);

try { if (Inst4 <= 1000 && typeof (foo) != "undefined") {_RecordType("<443,446,15>",(foo)); Inst4++; } } catch(e) {}
  function foo(a, i) {
try { if (Inst5 <= 1000 && typeof (a) != "undefined") {_RecordType("<447,448,15>",(a)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<450,451,15>",(i)); Inst6++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (a[i]) != "undefined") {_RecordType("<469,473,16>",(a[i])); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (a) != "undefined") {_RecordType("<469,470,16>",(a)); Inst9++; } } catch(e) {}
    const x = a[i];
try { if (Inst7 <= 1000 && typeof (x) != "undefined") {_RecordType("<465,466,16>",(x)); Inst7++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (a[bar(i)]) != "undefined") {_RecordType("<489,498,17>",(a[bar(i)])); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (a) != "undefined") {_RecordType("<489,490,17>",(a)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (bar) != "undefined") {_RecordType("<491,494,17>",(bar)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<495,496,17>",(i)); Inst14++; } } catch(e) {}
    const y = a[bar(i)];
try { if (Inst10 <= 1000 && typeof (y) != "undefined") {_RecordType("<485,486,17>",(y)); Inst10++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (x) != "undefined") {_RecordType("<511,512,18>",(x)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (y) != "undefined") {_RecordType("<515,516,18>",(y)); Inst16++; } } catch(e) {}
    return x + y;
  }

  3;
try { if (Inst17 <= 1000 && typeof (foo) != "undefined") {_RecordType("<530,533,22>",(foo)); Inst17++; } } catch(e) {}
  foo([1, 2], 0);
  3;
try { if (Inst18 <= 1000 && typeof (foo) != "undefined") {_RecordType("<553,556,24>",(foo)); Inst18++; } } catch(e) {}
  foo([1, 2], 0);
  3;
try { if (Inst19 <= 1000 && typeof (foo) != "undefined") {_RecordType("<576,579,26>",(foo)); Inst19++; } } catch(e) {}
  foo([1, 2], 0);
})(); // Test the RedundancyElimination::ReduceSpeculativeNumberOperation()
// TurboFan optimization for the case of SpeculativeNumberAdd with
// NumberOrOddball feedback.


(function () {
try { if (Inst20 <= 1000 && typeof (bar) != "undefined") {_RecordType("<792,795,33>",(bar)); Inst20++; } } catch(e) {}
  function bar(i) {
try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<796,797,33>",(i)); Inst21++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<814,815,34>",(i)); Inst22++; } } catch(e) {}
    return ++i;
  }

try { if (Inst23 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<824,827,37>",(NaN)); Inst23++; } } catch(e) {}
  NaN;
try { if (Inst24 <= 1000 && typeof (bar) != "undefined") {_RecordType("<831,834,38>",(bar)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<835,844,38>",(undefined)); Inst25++; } } catch(e) {}
  bar(undefined);

try { if (Inst26 <= 1000 && typeof (foo) != "undefined") {_RecordType("<859,862,40>",(foo)); Inst26++; } } catch(e) {}
  function foo(a, i) {
try { if (Inst27 <= 1000 && typeof (a) != "undefined") {_RecordType("<863,864,40>",(a)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (i) != "undefined") {_RecordType("<866,867,40>",(i)); Inst28++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (a[i]) != "undefined") {_RecordType("<885,889,41>",(a[i])); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (a) != "undefined") {_RecordType("<885,886,41>",(a)); Inst31++; } } catch(e) {}
    const x = a[i];
try { if (Inst29 <= 1000 && typeof (x) != "undefined") {_RecordType("<881,882,41>",(x)); Inst29++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (a[bar(i)]) != "undefined") {_RecordType("<905,914,42>",(a[bar(i)])); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (a) != "undefined") {_RecordType("<905,906,42>",(a)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (bar) != "undefined") {_RecordType("<907,910,42>",(bar)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (i) != "undefined") {_RecordType("<911,912,42>",(i)); Inst36++; } } catch(e) {}
    const y = a[bar(i)];
try { if (Inst32 <= 1000 && typeof (y) != "undefined") {_RecordType("<901,902,42>",(y)); Inst32++; } } catch(e) {}
try { if (Inst37 <= 1000 && typeof (x) != "undefined") {_RecordType("<927,928,43>",(x)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (y) != "undefined") {_RecordType("<931,932,43>",(y)); Inst38++; } } catch(e) {}
    return x + y;
  }

  3;
try { if (Inst39 <= 1000 && typeof (foo) != "undefined") {_RecordType("<946,949,47>",(foo)); Inst39++; } } catch(e) {}
  foo([1, 2], 0);
  3;
try { if (Inst40 <= 1000 && typeof (foo) != "undefined") {_RecordType("<969,972,49>",(foo)); Inst40++; } } catch(e) {}
  foo([1, 2], 0);
  3;
try { if (Inst41 <= 1000 && typeof (foo) != "undefined") {_RecordType("<992,995,51>",(foo)); Inst41++; } } catch(e) {}
  foo([1, 2], 0);
})(); // Test the RedundancyElimination::ReduceSpeculativeNumberOperation()
// TurboFan optimization for the case of SpeculativeNumberSubtract with
// Number feedback.


(function () {
try { if (Inst42 <= 1000 && typeof (bar) != "undefined") {_RecordType("<1204,1207,58>",(bar)); Inst42++; } } catch(e) {}
  function bar(i) {
try { if (Inst43 <= 1000 && typeof (i) != "undefined") {_RecordType("<1208,1209,58>",(i)); Inst43++; } } catch(e) {}
try { if (Inst44 <= 1000 && typeof (i) != "undefined") {_RecordType("<1226,1227,59>",(i)); Inst44++; } } catch(e) {}
    return --i;
  }

  -0.9;
try { if (Inst45 <= 1000 && typeof (bar) != "undefined") {_RecordType("<1244,1247,63>",(bar)); Inst45++; } } catch(e) {}
  bar(0.1);

try { if (Inst46 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1266,1269,65>",(foo)); Inst46++; } } catch(e) {}
  function foo(a, i) {
try { if (Inst47 <= 1000 && typeof (a) != "undefined") {_RecordType("<1270,1271,65>",(a)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (i) != "undefined") {_RecordType("<1273,1274,65>",(i)); Inst48++; } } catch(e) {}
try { if (Inst50 <= 1000 && typeof (a[i]) != "undefined") {_RecordType("<1292,1296,66>",(a[i])); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (a) != "undefined") {_RecordType("<1292,1293,66>",(a)); Inst51++; } } catch(e) {}
    const x = a[i];
try { if (Inst49 <= 1000 && typeof (x) != "undefined") {_RecordType("<1288,1289,66>",(x)); Inst49++; } } catch(e) {}
try { if (Inst53 <= 1000 && typeof (a[bar(i)]) != "undefined") {_RecordType("<1312,1321,67>",(a[bar(i)])); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (a) != "undefined") {_RecordType("<1312,1313,67>",(a)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (bar) != "undefined") {_RecordType("<1314,1317,67>",(bar)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (i) != "undefined") {_RecordType("<1318,1319,67>",(i)); Inst56++; } } catch(e) {}
    const y = a[bar(i)];
try { if (Inst52 <= 1000 && typeof (y) != "undefined") {_RecordType("<1308,1309,67>",(y)); Inst52++; } } catch(e) {}
try { if (Inst57 <= 1000 && typeof (x) != "undefined") {_RecordType("<1334,1335,68>",(x)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (y) != "undefined") {_RecordType("<1338,1339,68>",(y)); Inst58++; } } catch(e) {}
    return x + y;
  }

  3;
try { if (Inst59 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1353,1356,72>",(foo)); Inst59++; } } catch(e) {}
  foo([1, 2], 1);
  3;
try { if (Inst60 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1376,1379,74>",(foo)); Inst60++; } } catch(e) {}
  foo([1, 2], 1);
  3;
try { if (Inst61 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1399,1402,76>",(foo)); Inst61++; } } catch(e) {}
  foo([1, 2], 1);
})(); // Test the RedundancyElimination::ReduceSpeculativeNumberOperation()
// TurboFan optimization for the case of SpeculativeNumberSubtract with
// NumberOrOddball feedback.


(function () {
try { if (Inst62 <= 1000 && typeof (bar) != "undefined") {_RecordType("<1620,1623,83>",(bar)); Inst62++; } } catch(e) {}
  function bar(i) {
try { if (Inst63 <= 1000 && typeof (i) != "undefined") {_RecordType("<1624,1625,83>",(i)); Inst63++; } } catch(e) {}
try { if (Inst64 <= 1000 && typeof (i) != "undefined") {_RecordType("<1642,1643,84>",(i)); Inst64++; } } catch(e) {}
    return --i;
  }

try { if (Inst65 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<1652,1655,87>",(NaN)); Inst65++; } } catch(e) {}
  NaN;
try { if (Inst66 <= 1000 && typeof (bar) != "undefined") {_RecordType("<1659,1662,88>",(bar)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<1663,1672,88>",(undefined)); Inst67++; } } catch(e) {}
  bar(undefined);

try { if (Inst68 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1687,1690,90>",(foo)); Inst68++; } } catch(e) {}
  function foo(a, i) {
try { if (Inst69 <= 1000 && typeof (a) != "undefined") {_RecordType("<1691,1692,90>",(a)); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (i) != "undefined") {_RecordType("<1694,1695,90>",(i)); Inst70++; } } catch(e) {}
try { if (Inst72 <= 1000 && typeof (a[i]) != "undefined") {_RecordType("<1713,1717,91>",(a[i])); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (a) != "undefined") {_RecordType("<1713,1714,91>",(a)); Inst73++; } } catch(e) {}
    const x = a[i];
try { if (Inst71 <= 1000 && typeof (x) != "undefined") {_RecordType("<1709,1710,91>",(x)); Inst71++; } } catch(e) {}
try { if (Inst75 <= 1000 && typeof (a[bar(i)]) != "undefined") {_RecordType("<1733,1742,92>",(a[bar(i)])); Inst75++; } } catch(e) {}try { if (Inst76 <= 1000 && typeof (a) != "undefined") {_RecordType("<1733,1734,92>",(a)); Inst76++; } } catch(e) {}try { if (Inst77 <= 1000 && typeof (bar) != "undefined") {_RecordType("<1735,1738,92>",(bar)); Inst77++; } } catch(e) {}try { if (Inst78 <= 1000 && typeof (i) != "undefined") {_RecordType("<1739,1740,92>",(i)); Inst78++; } } catch(e) {}
    const y = a[bar(i)];
try { if (Inst74 <= 1000 && typeof (y) != "undefined") {_RecordType("<1729,1730,92>",(y)); Inst74++; } } catch(e) {}
try { if (Inst79 <= 1000 && typeof (x) != "undefined") {_RecordType("<1755,1756,93>",(x)); Inst79++; } } catch(e) {}try { if (Inst80 <= 1000 && typeof (y) != "undefined") {_RecordType("<1759,1760,93>",(y)); Inst80++; } } catch(e) {}
    return x + y;
  }

  3;
try { if (Inst81 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1774,1777,97>",(foo)); Inst81++; } } catch(e) {}
  foo([1, 2], 1);
  3;
try { if (Inst82 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1797,1800,99>",(foo)); Inst82++; } } catch(e) {}
  foo([1, 2], 1);
  3;
try { if (Inst83 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1820,1823,101>",(foo)); Inst83++; } } catch(e) {}
  foo([1, 2], 1);
})(); // Test the RedundancyElimination::ReduceSpeculativeNumberOperation()
// TurboFan optimization for the case of SpeculativeToNumber.


(function () {
try { if (Inst84 <= 1000 && typeof (foo) != "undefined") {_RecordType("<2002,2005,107>",(foo)); Inst84++; } } catch(e) {}
  function foo(a, i) {
try { if (Inst85 <= 1000 && typeof (a) != "undefined") {_RecordType("<2006,2007,107>",(a)); Inst85++; } } catch(e) {}try { if (Inst86 <= 1000 && typeof (i) != "undefined") {_RecordType("<2009,2010,107>",(i)); Inst86++; } } catch(e) {}
try { if (Inst88 <= 1000 && typeof (a[i]) != "undefined") {_RecordType("<2028,2032,108>",(a[i])); Inst88++; } } catch(e) {}try { if (Inst89 <= 1000 && typeof (a) != "undefined") {_RecordType("<2028,2029,108>",(a)); Inst89++; } } catch(e) {}
    const x = a[i];
try { if (Inst87 <= 1000 && typeof (x) != "undefined") {_RecordType("<2024,2025,108>",(x)); Inst87++; } } catch(e) {}
try { if (Inst91 <= 1000 && typeof (i) != "undefined") {_RecordType("<2048,2049,109>",(i)); Inst91++; } } catch(e) {}
    const y = i++;
try { if (Inst90 <= 1000 && typeof (y) != "undefined") {_RecordType("<2044,2045,109>",(y)); Inst90++; } } catch(e) {}
try { if (Inst92 <= 1000 && typeof (x) != "undefined") {_RecordType("<2064,2065,110>",(x)); Inst92++; } } catch(e) {}try { if (Inst93 <= 1000 && typeof (y) != "undefined") {_RecordType("<2068,2069,110>",(y)); Inst93++; } } catch(e) {}
    return x + y;
  }

  1;
try { if (Inst94 <= 1000 && typeof (foo) != "undefined") {_RecordType("<2083,2086,114>",(foo)); Inst94++; } } catch(e) {}
  foo([1, 2], 0);
  1;
try { if (Inst95 <= 1000 && typeof (foo) != "undefined") {_RecordType("<2106,2109,116>",(foo)); Inst95++; } } catch(e) {}
  foo([1, 2], 0);
  1;
try { if (Inst96 <= 1000 && typeof (foo) != "undefined") {_RecordType("<2129,2132,118>",(foo)); Inst96++; } } catch(e) {}
  foo([1, 2], 0);
})(); // Test the RedundancyElimination::ReduceSpeculativeNumberOperation()
// TurboFan optimization for the case of SpeculativeSafeIntegerAdd.


(function () {
try { if (Inst97 <= 1000 && typeof (foo) != "undefined") {_RecordType("<2317,2320,124>",(foo)); Inst97++; } } catch(e) {}
  function foo(a, i) {
try { if (Inst98 <= 1000 && typeof (a) != "undefined") {_RecordType("<2321,2322,124>",(a)); Inst98++; } } catch(e) {}try { if (Inst99 <= 1000 && typeof (i) != "undefined") {_RecordType("<2324,2325,124>",(i)); Inst99++; } } catch(e) {}
try { if (Inst101 <= 1000 && typeof (a[i]) != "undefined") {_RecordType("<2343,2347,125>",(a[i])); Inst101++; } } catch(e) {}try { if (Inst102 <= 1000 && typeof (a) != "undefined") {_RecordType("<2343,2344,125>",(a)); Inst102++; } } catch(e) {}
    const x = a[i];
try { if (Inst100 <= 1000 && typeof (x) != "undefined") {_RecordType("<2339,2340,125>",(x)); Inst100++; } } catch(e) {}
try { if (Inst104 <= 1000 && typeof (a[++i]) != "undefined") {_RecordType("<2363,2369,126>",(a[++i])); Inst104++; } } catch(e) {}try { if (Inst105 <= 1000 && typeof (a) != "undefined") {_RecordType("<2363,2364,126>",(a)); Inst105++; } } catch(e) {}try { if (Inst106 <= 1000 && typeof (i) != "undefined") {_RecordType("<2367,2368,126>",(i)); Inst106++; } } catch(e) {}
    const y = a[++i];
try { if (Inst103 <= 1000 && typeof (y) != "undefined") {_RecordType("<2359,2360,126>",(y)); Inst103++; } } catch(e) {}
try { if (Inst107 <= 1000 && typeof (x) != "undefined") {_RecordType("<2382,2383,127>",(x)); Inst107++; } } catch(e) {}try { if (Inst108 <= 1000 && typeof (y) != "undefined") {_RecordType("<2386,2387,127>",(y)); Inst108++; } } catch(e) {}
    return x + y;
  }

  3;
try { if (Inst109 <= 1000 && typeof (foo) != "undefined") {_RecordType("<2401,2404,131>",(foo)); Inst109++; } } catch(e) {}
  foo([1, 2], 0);
  3;
try { if (Inst110 <= 1000 && typeof (foo) != "undefined") {_RecordType("<2424,2427,133>",(foo)); Inst110++; } } catch(e) {}
  foo([1, 2], 0);
  3;
try { if (Inst111 <= 1000 && typeof (foo) != "undefined") {_RecordType("<2447,2450,135>",(foo)); Inst111++; } } catch(e) {}
  foo([1, 2], 0);
})(); // Test the RedundancyElimination::ReduceSpeculativeNumberOperation()
// TurboFan optimization for the case of SpeculativeSafeIntegerSubtract.


(function () {
try { if (Inst112 <= 1000 && typeof (foo) != "undefined") {_RecordType("<2640,2643,141>",(foo)); Inst112++; } } catch(e) {}
  function foo(a, i) {
try { if (Inst113 <= 1000 && typeof (a) != "undefined") {_RecordType("<2644,2645,141>",(a)); Inst113++; } } catch(e) {}try { if (Inst114 <= 1000 && typeof (i) != "undefined") {_RecordType("<2647,2648,141>",(i)); Inst114++; } } catch(e) {}
try { if (Inst116 <= 1000 && typeof (a[i]) != "undefined") {_RecordType("<2666,2670,142>",(a[i])); Inst116++; } } catch(e) {}try { if (Inst117 <= 1000 && typeof (a) != "undefined") {_RecordType("<2666,2667,142>",(a)); Inst117++; } } catch(e) {}
    const x = a[i];
try { if (Inst115 <= 1000 && typeof (x) != "undefined") {_RecordType("<2662,2663,142>",(x)); Inst115++; } } catch(e) {}
try { if (Inst119 <= 1000 && typeof (a[--i]) != "undefined") {_RecordType("<2686,2692,143>",(a[--i])); Inst119++; } } catch(e) {}try { if (Inst120 <= 1000 && typeof (a) != "undefined") {_RecordType("<2686,2687,143>",(a)); Inst120++; } } catch(e) {}try { if (Inst121 <= 1000 && typeof (i) != "undefined") {_RecordType("<2690,2691,143>",(i)); Inst121++; } } catch(e) {}
    const y = a[--i];
try { if (Inst118 <= 1000 && typeof (y) != "undefined") {_RecordType("<2682,2683,143>",(y)); Inst118++; } } catch(e) {}
try { if (Inst122 <= 1000 && typeof (x) != "undefined") {_RecordType("<2705,2706,144>",(x)); Inst122++; } } catch(e) {}try { if (Inst123 <= 1000 && typeof (y) != "undefined") {_RecordType("<2709,2710,144>",(y)); Inst123++; } } catch(e) {}
    return x + y;
  }

  3;
try { if (Inst124 <= 1000 && typeof (foo) != "undefined") {_RecordType("<2724,2727,148>",(foo)); Inst124++; } } catch(e) {}
  foo([1, 2], 1);
  3;
try { if (Inst125 <= 1000 && typeof (foo) != "undefined") {_RecordType("<2747,2750,150>",(foo)); Inst125++; } } catch(e) {}
  foo([1, 2], 1);
  3;
try { if (Inst126 <= 1000 && typeof (foo) != "undefined") {_RecordType("<2770,2773,152>",(foo)); Inst126++; } } catch(e) {}
  foo([1, 2], 1);
})(); // Test the RedundancyElimination::ReduceSpeculativeNumberComparison()
// TurboFan optimization for the case of SpeculativeNumberEqual.


(function () {
try { if (Inst127 <= 1000 && typeof (foo) != "undefined") {_RecordType("<2956,2959,158>",(foo)); Inst127++; } } catch(e) {}
  function foo(a, i) {
try { if (Inst128 <= 1000 && typeof (a) != "undefined") {_RecordType("<2960,2961,158>",(a)); Inst128++; } } catch(e) {}try { if (Inst129 <= 1000 && typeof (i) != "undefined") {_RecordType("<2963,2964,158>",(i)); Inst129++; } } catch(e) {}
try { if (Inst131 <= 1000 && typeof (a[i]) != "undefined") {_RecordType("<2982,2986,159>",(a[i])); Inst131++; } } catch(e) {}try { if (Inst132 <= 1000 && typeof (a) != "undefined") {_RecordType("<2982,2983,159>",(a)); Inst132++; } } catch(e) {}
    const x = a[i];
try { if (Inst130 <= 1000 && typeof (x) != "undefined") {_RecordType("<2978,2979,159>",(x)); Inst130++; } } catch(e) {}

try { if (Inst133 <= 1000 && typeof (i) != "undefined") {_RecordType("<2997,2998,161>",(i)); Inst133++; } } catch(e) {}
    if (i === 0) {
try { if (Inst134 <= 1000 && typeof (x) != "undefined") {_RecordType("<3021,3022,162>",(x)); Inst134++; } } catch(e) {}
      return x;
    }

try { if (Inst135 <= 1000 && typeof (i) != "undefined") {_RecordType("<3042,3043,165>",(i)); Inst135++; } } catch(e) {}
    return i;
  }

  1;
try { if (Inst136 <= 1000 && typeof (foo) != "undefined") {_RecordType("<3057,3060,169>",(foo)); Inst136++; } } catch(e) {}
  foo([1, 2], 0);
  1;
try { if (Inst137 <= 1000 && typeof (foo) != "undefined") {_RecordType("<3080,3083,171>",(foo)); Inst137++; } } catch(e) {}
  foo([1, 2], 1);
  1;
try { if (Inst138 <= 1000 && typeof (foo) != "undefined") {_RecordType("<3103,3106,173>",(foo)); Inst138++; } } catch(e) {}
  foo([1, 2], 0);
  1;
try { if (Inst139 <= 1000 && typeof (foo) != "undefined") {_RecordType("<3126,3129,175>",(foo)); Inst139++; } } catch(e) {}
  foo([1, 2], 1);
  9;
try { if (Inst140 <= 1000 && typeof (foo) != "undefined") {_RecordType("<3149,3152,177>",(foo)); Inst140++; } } catch(e) {}
  foo([9, 2], -0);
try { if (Inst141 <= 1000 && typeof (foo) != "undefined") {_RecordType("<3168,3171,178>",(foo)); Inst141++; } } catch(e) {}
  foo();
})(); // Test the RedundancyElimination::ReduceSpeculativeNumberComparison()
// TurboFan optimization for the case of SpeculativeNumberLessThan.


(function () {
try { if (Inst142 <= 1000 && typeof (foo) != "undefined") {_RecordType("<3348,3351,184>",(foo)); Inst142++; } } catch(e) {}
  function foo(a, i) {
try { if (Inst143 <= 1000 && typeof (a) != "undefined") {_RecordType("<3352,3353,184>",(a)); Inst143++; } } catch(e) {}try { if (Inst144 <= 1000 && typeof (i) != "undefined") {_RecordType("<3355,3356,184>",(i)); Inst144++; } } catch(e) {}
try { if (Inst146 <= 1000 && typeof (a[i]) != "undefined") {_RecordType("<3374,3378,185>",(a[i])); Inst146++; } } catch(e) {}try { if (Inst147 <= 1000 && typeof (a) != "undefined") {_RecordType("<3374,3375,185>",(a)); Inst147++; } } catch(e) {}
    const x = a[i];
try { if (Inst145 <= 1000 && typeof (x) != "undefined") {_RecordType("<3370,3371,185>",(x)); Inst145++; } } catch(e) {}

try { if (Inst148 <= 1000 && typeof (i) != "undefined") {_RecordType("<3389,3390,187>",(i)); Inst148++; } } catch(e) {}
    if (i < 1) {
try { if (Inst149 <= 1000 && typeof (x) != "undefined") {_RecordType("<3411,3412,188>",(x)); Inst149++; } } catch(e) {}
      return x;
    }

try { if (Inst150 <= 1000 && typeof (i) != "undefined") {_RecordType("<3432,3433,191>",(i)); Inst150++; } } catch(e) {}
    return i;
  }

  1;
try { if (Inst151 <= 1000 && typeof (foo) != "undefined") {_RecordType("<3447,3450,195>",(foo)); Inst151++; } } catch(e) {}
  foo([1, 2], 0);
  1;
try { if (Inst152 <= 1000 && typeof (foo) != "undefined") {_RecordType("<3470,3473,197>",(foo)); Inst152++; } } catch(e) {}
  foo([1, 2], 1);
  1;
try { if (Inst153 <= 1000 && typeof (foo) != "undefined") {_RecordType("<3493,3496,199>",(foo)); Inst153++; } } catch(e) {}
  foo([1, 2], 0);
  1;
try { if (Inst154 <= 1000 && typeof (foo) != "undefined") {_RecordType("<3516,3519,201>",(foo)); Inst154++; } } catch(e) {}
  foo([1, 2], 1);
  9;
try { if (Inst155 <= 1000 && typeof (foo) != "undefined") {_RecordType("<3539,3542,203>",(foo)); Inst155++; } } catch(e) {}
  foo([9, 2], -0);
try { if (Inst156 <= 1000 && typeof (foo) != "undefined") {_RecordType("<3558,3561,204>",(foo)); Inst156++; } } catch(e) {}
  foo();
})(); // Test the RedundancyElimination::ReduceSpeculativeNumberComparison()
// TurboFan optimization for the case of SpeculativeNumberLessThanOrEqual.


(function () {
try { if (Inst157 <= 1000 && typeof (foo) != "undefined") {_RecordType("<3745,3748,210>",(foo)); Inst157++; } } catch(e) {}
  function foo(a, i) {
try { if (Inst158 <= 1000 && typeof (a) != "undefined") {_RecordType("<3749,3750,210>",(a)); Inst158++; } } catch(e) {}try { if (Inst159 <= 1000 && typeof (i) != "undefined") {_RecordType("<3752,3753,210>",(i)); Inst159++; } } catch(e) {}
try { if (Inst161 <= 1000 && typeof (a[i]) != "undefined") {_RecordType("<3771,3775,211>",(a[i])); Inst161++; } } catch(e) {}try { if (Inst162 <= 1000 && typeof (a) != "undefined") {_RecordType("<3771,3772,211>",(a)); Inst162++; } } catch(e) {}
    const x = a[i];
try { if (Inst160 <= 1000 && typeof (x) != "undefined") {_RecordType("<3767,3768,211>",(x)); Inst160++; } } catch(e) {}

try { if (Inst163 <= 1000 && typeof (i) != "undefined") {_RecordType("<3786,3787,213>",(i)); Inst163++; } } catch(e) {}
    if (i <= 0) {
try { if (Inst164 <= 1000 && typeof (x) != "undefined") {_RecordType("<3809,3810,214>",(x)); Inst164++; } } catch(e) {}
      return x;
    }

try { if (Inst165 <= 1000 && typeof (i) != "undefined") {_RecordType("<3830,3831,217>",(i)); Inst165++; } } catch(e) {}
    return i;
  }

  1;
try { if (Inst166 <= 1000 && typeof (foo) != "undefined") {_RecordType("<3845,3848,221>",(foo)); Inst166++; } } catch(e) {}
  foo([1, 2], 0);
  1;
try { if (Inst167 <= 1000 && typeof (foo) != "undefined") {_RecordType("<3868,3871,223>",(foo)); Inst167++; } } catch(e) {}
  foo([1, 2], 1);
  1;
try { if (Inst168 <= 1000 && typeof (foo) != "undefined") {_RecordType("<3891,3894,225>",(foo)); Inst168++; } } catch(e) {}
  foo([1, 2], 0);
  1;
try { if (Inst169 <= 1000 && typeof (foo) != "undefined") {_RecordType("<3914,3917,227>",(foo)); Inst169++; } } catch(e) {}
  foo([1, 2], 1);
  9;
try { if (Inst170 <= 1000 && typeof (foo) != "undefined") {_RecordType("<3937,3940,229>",(foo)); Inst170++; } } catch(e) {}
  foo([9, 2], -0);
try { if (Inst171 <= 1000 && typeof (foo) != "undefined") {_RecordType("<3956,3959,230>",(foo)); Inst171++; } } catch(e) {}
  foo();
})();

