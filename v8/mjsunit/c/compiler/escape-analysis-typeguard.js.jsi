var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2017 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax --turbo-escape
class C {
  constructor(x) {
try { if (Inst1 <= 1000 && typeof (x) != "undefined") {_RecordType("<239,240,6>",(x)); Inst1++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (x) != "undefined") {_RecordType("<257,258,7>",(x)); Inst3++; } } catch(e) {}
    this.a = x;
try { if (Inst2 <= 1000 && typeof (this.a) != "undefined") {_RecordType("<248,254,7>",(this.a)); Inst2++; } } catch(e) {}
  }

}
try { if (Inst0 <= 1000 && typeof (C) != "undefined") {_RecordType("<221,222,5>",(C)); Inst0++; } } catch(e) {}

;

class D {
  constructor(x) {
try { if (Inst5 <= 1000 && typeof (x) != "undefined") {_RecordType("<295,296,15>",(x)); Inst5++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (x) != "undefined") {_RecordType("<313,314,16>",(x)); Inst7++; } } catch(e) {}
    this.a = x;
try { if (Inst6 <= 1000 && typeof (this.a) != "undefined") {_RecordType("<304,310,16>",(this.a)); Inst6++; } } catch(e) {}
  }

}
try { if (Inst4 <= 1000 && typeof (D) != "undefined") {_RecordType("<277,278,14>",(D)); Inst4++; } } catch(e) {}

;

try { if (Inst8 <= 1000 && typeof (foo) != "undefined") {_RecordType("<336,339,23>",(foo)); Inst8++; } } catch(e) {}
function foo() {
try { if (Inst10 <= 1000 && typeof (C) != "undefined") {_RecordType("<358,359,24>",(C)); Inst10++; } } catch(e) {}
  var x = new C(7);
try { if (Inst9 <= 1000 && typeof (x) != "undefined") {_RecordType("<350,351,24>",(x)); Inst9++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (D) != "undefined") {_RecordType("<378,379,25>",(D)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (x) != "undefined") {_RecordType("<380,381,25>",(x)); Inst13++; } } catch(e) {}
  var y = new D(x);
try { if (Inst11 <= 1000 && typeof (y) != "undefined") {_RecordType("<370,371,25>",(y)); Inst11++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (y.a) != "undefined") {_RecordType("<394,397,26>",(y.a)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (y) != "undefined") {_RecordType("<394,395,26>",(y)); Inst16++; } } catch(e) {}
  var z = y.a;
try { if (Inst14 <= 1000 && typeof (z) != "undefined") {_RecordType("<390,391,26>",(z)); Inst14++; } } catch(e) {}
  7;
try { if (Inst17 <= 1000 && typeof (z.a) != "undefined") {_RecordType("<406,409,28>",(z.a)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (z) != "undefined") {_RecordType("<406,407,28>",(z)); Inst18++; } } catch(e) {}
  z.a;
}

try { if (Inst19 <= 1000 && typeof (foo) != "undefined") {_RecordType("<414,417,31>",(foo)); Inst19++; } } catch(e) {}
foo();
try { if (Inst20 <= 1000 && typeof (foo) != "undefined") {_RecordType("<421,424,32>",(foo)); Inst20++; } } catch(e) {}
foo();
try { if (Inst21 <= 1000 && typeof (foo) != "undefined") {_RecordType("<428,431,33>",(foo)); Inst21++; } } catch(e) {}
foo();
try { if (Inst22 <= 1000 && typeof (foo) != "undefined") {_RecordType("<435,438,34>",(foo)); Inst22++; } } catch(e) {}
foo();
try { if (Inst23 <= 1000 && typeof (foo) != "undefined") {_RecordType("<442,445,35>",(foo)); Inst23++; } } catch(e) {}
foo();

