var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2013 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// Flags: --allow-natives-syntax
// Presents negative opportunities for dead loop removal.
try { if (Inst0 <= 1000 && typeof (loop1) != "undefined") {_RecordType("<1697,1702,29>",(loop1)); Inst0++; } } catch(e) {}
function loop1() {
  while (true) {
    return;
  }
}

try { if (Inst1 <= 1000 && typeof (loop2) != "undefined") {_RecordType("<1752,1757,35>",(loop2)); Inst1++; } } catch(e) {}
function loop2() {
  var i = 0;
try { if (Inst2 <= 1000 && typeof (i) != "undefined") {_RecordType("<1768,1769,36>",(i)); Inst2++; } } catch(e) {}

try { if (Inst3 <= 1000 && typeof (i) != "undefined") {_RecordType("<1785,1786,38>",(i)); Inst3++; } } catch(e) {}
  while (i++ < 10) {
    ;
  }

try { if (Inst4 <= 1000 && typeof (i) != "undefined") {_RecordType("<1817,1818,42>",(i)); Inst4++; } } catch(e) {}
  return i; // value of {i} escapes.
  // can only remove the loop with induction variable analysis.
}

try { if (Inst5 <= 1000 && typeof (loop3) != "undefined") {_RecordType("<1921,1926,46>",(loop3)); Inst5++; } } catch(e) {}
function loop3() {
  var i = 0;
try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<1937,1938,47>",(i)); Inst6++; } } catch(e) {}

  for (; i < 10; i++) {
try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<1954,1955,49>",(i)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<1962,1963,49>",(i)); Inst8++; } } catch(e) {}
    ;
  }

try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<1989,1990,53>",(i)); Inst9++; } } catch(e) {}
  return i; // value of {i} escapes.
  // can only remove the loop with induction variable analysis.
}

try { if (Inst10 <= 1000 && typeof (loop4) != "undefined") {_RecordType("<2093,2098,57>",(loop4)); Inst10++; } } catch(e) {}
function loop4() {
  var a = 0;
try { if (Inst11 <= 1000 && typeof (a) != "undefined") {_RecordType("<2109,2110,58>",(a)); Inst11++; } } catch(e) {}

  for (var i = 0; i < 10; i++) {
try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<2128,2129,60>",(i)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<2135,2136,60>",(i)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<2143,2144,60>",(i)); Inst14++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (a) != "undefined") {_RecordType("<2154,2155,61>",(a)); Inst15++; } } catch(e) {}
    a++;
  }

try { if (Inst16 <= 1000 && typeof (a) != "undefined") {_RecordType("<2173,2174,64>",(a)); Inst16++; } } catch(e) {}
  return a; // value of {a} escapes.
  // can only remove the loop with induction variable analysis.
}

try { if (Inst17 <= 1000 && typeof (loop5) != "undefined") {_RecordType("<2277,2282,68>",(loop5)); Inst17++; } } catch(e) {}
function loop5() {
try { if (Inst19 <= 1000 && typeof (Int32Array) != "undefined") {_RecordType("<2301,2311,69>",(Int32Array)); Inst19++; } } catch(e) {}
  var a = new Int32Array(4),
      sum = 0;
try { if (Inst18 <= 1000 && typeof (a) != "undefined") {_RecordType("<2293,2294,69>",(a)); Inst18++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (sum) != "undefined") {_RecordType("<2322,2325,70>",(sum)); Inst20++; } } catch(e) {}

  for (var i = 0; i < a.length; i++) {
try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<2343,2344,72>",(i)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<2350,2351,72>",(i)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<2354,2362,72>",(a.length)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (a) != "undefined") {_RecordType("<2354,2355,72>",(a)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<2364,2365,72>",(i)); Inst25++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (a[i]) != "undefined") {_RecordType("<2382,2386,73>",(a[i])); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (a) != "undefined") {_RecordType("<2382,2383,73>",(a)); Inst28++; } } catch(e) {}
    sum += a[i];
try { if (Inst26 <= 1000 && typeof (sum) != "undefined") {_RecordType("<2375,2378,73>",(sum)); Inst26++; } } catch(e) {}
  }

try { if (Inst29 <= 1000 && typeof (sum) != "undefined") {_RecordType("<2402,2405,76>",(sum)); Inst29++; } } catch(e) {}
  return sum; // {sum} escapes.
  // can only remove the loop by figuring out that all elements of {a} are 0.
}

try { if (Inst30 <= 1000 && typeof (loop6) != "undefined") {_RecordType("<2515,2520,80>",(loop6)); Inst30++; } } catch(e) {}
function loop6(a) {
try { if (Inst31 <= 1000 && typeof (a) != "undefined") {_RecordType("<2521,2522,80>",(a)); Inst31++; } } catch(e) {}
  for (var i = 0; i < a; i++) {
try { if (Inst32 <= 1000 && typeof (i) != "undefined") {_RecordType("<2537,2538,81>",(i)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (i) != "undefined") {_RecordType("<2544,2545,81>",(i)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (a) != "undefined") {_RecordType("<2548,2549,81>",(a)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (i) != "undefined") {_RecordType("<2551,2552,81>",(i)); Inst35++; } } catch(e) {}
    ;
  } // implicit a.valueOf().
  // can only remove the loop by guarding on the type of a.

}

try { if (Inst36 <= 1000 && typeof (loop7) != "undefined") {_RecordType("<2666,2671,88>",(loop7)); Inst36++; } } catch(e) {}
function loop7(a) {
try { if (Inst37 <= 1000 && typeof (a) != "undefined") {_RecordType("<2672,2673,88>",(a)); Inst37++; } } catch(e) {}
  for (var i = 0; i < 10; i++) {
try { if (Inst38 <= 1000 && typeof (i) != "undefined") {_RecordType("<2688,2689,89>",(i)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (i) != "undefined") {_RecordType("<2695,2696,89>",(i)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (i) != "undefined") {_RecordType("<2703,2704,89>",(i)); Inst40++; } } catch(e) {}
try { if (Inst41 <= 1000 && typeof (a.toString) != "undefined") {_RecordType("<2714,2724,90>",(a.toString)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (a) != "undefined") {_RecordType("<2714,2715,90>",(a)); Inst42++; } } catch(e) {}
    a.toString();
  } // unknown side-effect on a.
  // can only remove the loop by guarding on the type of a.

}

try { if (Inst43 <= 1000 && typeof (loop8) != "undefined") {_RecordType("<2834,2839,96>",(loop8)); Inst43++; } } catch(e) {}
function loop8(a) {
try { if (Inst44 <= 1000 && typeof (a) != "undefined") {_RecordType("<2840,2841,96>",(a)); Inst44++; } } catch(e) {}
  for (var i = 0; i < 10; i++) {
try { if (Inst45 <= 1000 && typeof (i) != "undefined") {_RecordType("<2856,2857,97>",(i)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (i) != "undefined") {_RecordType("<2863,2864,97>",(i)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (i) != "undefined") {_RecordType("<2871,2872,97>",(i)); Inst47++; } } catch(e) {}
try { if (Inst48 <= 1000 && typeof (a.valueOf) != "undefined") {_RecordType("<2882,2891,98>",(a.valueOf)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (a) != "undefined") {_RecordType("<2882,2883,98>",(a)); Inst49++; } } catch(e) {}
    a.valueOf();
  } // unknown side-effect on a.
  // can only remove the loop by guarding on the type of a.

}

try { if (Inst51 <= 1000 && typeof (loop1) != "undefined") {_RecordType("<3015,3020,104>",(loop1)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (loop2) != "undefined") {_RecordType("<3022,3027,104>",(loop2)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (loop3) != "undefined") {_RecordType("<3029,3034,104>",(loop3)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (loop4) != "undefined") {_RecordType("<3036,3041,104>",(loop4)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (loop5) != "undefined") {_RecordType("<3043,3048,104>",(loop5)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (loop6) != "undefined") {_RecordType("<3050,3055,104>",(loop6)); Inst56++; } } catch(e) {}
var no_params_loops = [loop1, loop2, loop3, loop4, loop5, loop6];
try { if (Inst50 <= 1000 && typeof (no_params_loops) != "undefined") {_RecordType("<2996,3011,104>",(no_params_loops)); Inst50++; } } catch(e) {}
try { if (Inst58 <= 1000 && typeof (loop6) != "undefined") {_RecordType("<3078,3083,105>",(loop6)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (loop7) != "undefined") {_RecordType("<3085,3090,105>",(loop7)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (loop8) != "undefined") {_RecordType("<3092,3097,105>",(loop8)); Inst60++; } } catch(e) {}
var params_loops = [loop6, loop7, loop8];
try { if (Inst57 <= 1000 && typeof (params_loops) != "undefined") {_RecordType("<3062,3074,105>",(params_loops)); Inst57++; } } catch(e) {}

for (var i = 0; i < no_params_loops.length; i++) {
try { if (Inst61 <= 1000 && typeof (i) != "undefined") {_RecordType("<3110,3111,107>",(i)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (i) != "undefined") {_RecordType("<3117,3118,107>",(i)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (no_params_loops.length) != "undefined") {_RecordType("<3121,3143,107>",(no_params_loops.length)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (no_params_loops) != "undefined") {_RecordType("<3121,3136,107>",(no_params_loops)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (i) != "undefined") {_RecordType("<3145,3146,107>",(i)); Inst65++; } } catch(e) {}
try { if (Inst67 <= 1000 && typeof (no_params_loops[i]) != "undefined") {_RecordType("<3162,3180,108>",(no_params_loops[i])); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (no_params_loops) != "undefined") {_RecordType("<3162,3177,108>",(no_params_loops)); Inst68++; } } catch(e) {}
  var f = no_params_loops[i];
try { if (Inst66 <= 1000 && typeof (f) != "undefined") {_RecordType("<3158,3159,108>",(f)); Inst66++; } } catch(e) {}
try { if (Inst69 <= 1000 && typeof (f) != "undefined") {_RecordType("<3184,3185,109>",(f)); Inst69++; } } catch(e) {}
  f();
try { if (Inst70 <= 1000 && typeof (f) != "undefined") {_RecordType("<3191,3192,110>",(f)); Inst70++; } } catch(e) {}
  f();
try { if (Inst71 <= 1000 && typeof (f) != "undefined") {_RecordType("<3198,3199,111>",(f)); Inst71++; } } catch(e) {}
  f();
try { if (Inst72 <= 1000 && typeof (f) != "undefined") {_RecordType("<3205,3206,112>",(f)); Inst72++; } } catch(e) {}
  f();
}

for (var i = 0; i < params_loops.length; i++) {
try { if (Inst73 <= 1000 && typeof (i) != "undefined") {_RecordType("<3222,3223,115>",(i)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (i) != "undefined") {_RecordType("<3229,3230,115>",(i)); Inst74++; } } catch(e) {}try { if (Inst75 <= 1000 && typeof (params_loops.length) != "undefined") {_RecordType("<3233,3252,115>",(params_loops.length)); Inst75++; } } catch(e) {}try { if (Inst76 <= 1000 && typeof (params_loops) != "undefined") {_RecordType("<3233,3245,115>",(params_loops)); Inst76++; } } catch(e) {}try { if (Inst77 <= 1000 && typeof (i) != "undefined") {_RecordType("<3254,3255,115>",(i)); Inst77++; } } catch(e) {}
try { if (Inst79 <= 1000 && typeof (params_loops[i]) != "undefined") {_RecordType("<3271,3286,116>",(params_loops[i])); Inst79++; } } catch(e) {}try { if (Inst80 <= 1000 && typeof (params_loops) != "undefined") {_RecordType("<3271,3283,116>",(params_loops)); Inst80++; } } catch(e) {}
  var f = params_loops[i];
try { if (Inst78 <= 1000 && typeof (f) != "undefined") {_RecordType("<3267,3268,116>",(f)); Inst78++; } } catch(e) {}
try { if (Inst81 <= 1000 && typeof (f) != "undefined") {_RecordType("<3290,3291,117>",(f)); Inst81++; } } catch(e) {}
  f(3);
try { if (Inst82 <= 1000 && typeof (f) != "undefined") {_RecordType("<3298,3299,118>",(f)); Inst82++; } } catch(e) {}
  f(7);
try { if (Inst83 <= 1000 && typeof (f) != "undefined") {_RecordType("<3306,3307,119>",(f)); Inst83++; } } catch(e) {}
  f(11);
try { if (Inst84 <= 1000 && typeof (f) != "undefined") {_RecordType("<3315,3316,120>",(f)); Inst84++; } } catch(e) {}
  f(9);
}

