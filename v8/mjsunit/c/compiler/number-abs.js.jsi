var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2018 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax --opt
// Test that NumberAbs correctly deals with PositiveInteger \/ MinusZero
// and turns the -0 into a 0.
(function () {
try { if (Inst0 <= 1000 && typeof (foo) != "undefined") {_RecordType("<335,338,8>",(foo)); Inst0++; } } catch(e) {}
  function foo(x) {
try { if (Inst1 <= 1000 && typeof (x) != "undefined") {_RecordType("<339,340,8>",(x)); Inst1++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (Math.floor) != "undefined") {_RecordType("<352,362,9>",(Math.floor)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Math) != "undefined") {_RecordType("<352,356,9>",(Math)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (x) != "undefined") {_RecordType("<363,364,9>",(x)); Inst5++; } } catch(e) {}
    x = Math.floor(x);
try { if (Inst2 <= 1000 && typeof (x) != "undefined") {_RecordType("<348,349,9>",(x)); Inst2++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (Math.max) != "undefined") {_RecordType("<375,383,10>",(Math.max)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Math) != "undefined") {_RecordType("<375,379,10>",(Math)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (x) != "undefined") {_RecordType("<384,385,10>",(x)); Inst9++; } } catch(e) {}
    x = Math.max(x, -0);
try { if (Inst6 <= 1000 && typeof (x) != "undefined") {_RecordType("<371,372,10>",(x)); Inst6++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (Math.abs) != "undefined") {_RecordType("<407,415,11>",(Math.abs)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Math) != "undefined") {_RecordType("<407,411,11>",(Math)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (x) != "undefined") {_RecordType("<416,417,11>",(x)); Inst12++; } } catch(e) {}
    return 1 / Math.abs(x);
  }

try { if (Inst13 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<427,435,14>",(Infinity)); Inst13++; } } catch(e) {}
  Infinity;
try { if (Inst14 <= 1000 && typeof (foo) != "undefined") {_RecordType("<439,442,15>",(foo)); Inst14++; } } catch(e) {}
  foo(-0);
try { if (Inst15 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<450,458,16>",(Infinity)); Inst15++; } } catch(e) {}
  Infinity;
try { if (Inst16 <= 1000 && typeof (foo) != "undefined") {_RecordType("<462,465,17>",(foo)); Inst16++; } } catch(e) {}
  foo(-0);
try { if (Inst17 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<473,481,18>",(Infinity)); Inst17++; } } catch(e) {}
  Infinity;
try { if (Inst18 <= 1000 && typeof (foo) != "undefined") {_RecordType("<485,488,19>",(foo)); Inst18++; } } catch(e) {}
  foo(-0);
})(); // Test that NumberAbs properly passes the kIdentifyZeros truncation
// for Signed32 \/ MinusZero inputs.


(function () {
try { if (Inst19 <= 1000 && typeof (foo) != "undefined") {_RecordType("<634,637,25>",(foo)); Inst19++; } } catch(e) {}
  function foo(x) {
try { if (Inst20 <= 1000 && typeof (x) != "undefined") {_RecordType("<638,639,25>",(x)); Inst20++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (Math.abs) != "undefined") {_RecordType("<654,662,26>",(Math.abs)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Math) != "undefined") {_RecordType("<654,658,26>",(Math)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (x) != "undefined") {_RecordType("<663,664,26>",(x)); Inst23++; } } catch(e) {}
    return Math.abs(x * -2);
  }

  2;
try { if (Inst24 <= 1000 && typeof (foo) != "undefined") {_RecordType("<684,687,30>",(foo)); Inst24++; } } catch(e) {}
  foo(-1);
  4;
try { if (Inst25 <= 1000 && typeof (foo) != "undefined") {_RecordType("<700,703,32>",(foo)); Inst25++; } } catch(e) {}
  foo(-2);
  2;
try { if (Inst26 <= 1000 && typeof (foo) != "undefined") {_RecordType("<716,719,34>",(foo)); Inst26++; } } catch(e) {}
  foo(-1);
  4;
try { if (Inst27 <= 1000 && typeof (foo) != "undefined") {_RecordType("<732,735,36>",(foo)); Inst27++; } } catch(e) {}
  foo(-2);
try { if (Inst28 <= 1000 && typeof (foo) != "undefined") {_RecordType("<743,746,37>",(foo)); Inst28++; } } catch(e) {}
  foo();
  0;
try { if (Inst29 <= 1000 && typeof (foo) != "undefined") {_RecordType("<757,760,39>",(foo)); Inst29++; } } catch(e) {}
  foo(0);
try { if (Inst30 <= 1000 && typeof (foo) != "undefined") {_RecordType("<767,770,40>",(foo)); Inst30++; } } catch(e) {}
  foo();
})(); // Test that NumberAbs properly passes the kIdentifyZeros truncation
// for Unsigned32 \/ MinusZero inputs.


(function () {
try { if (Inst31 <= 1000 && typeof (foo) != "undefined") {_RecordType("<916,919,46>",(foo)); Inst31++; } } catch(e) {}
  function foo(x) {
try { if (Inst32 <= 1000 && typeof (x) != "undefined") {_RecordType("<920,921,46>",(x)); Inst32++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof (x) != "undefined") {_RecordType("<933,934,47>",(x)); Inst34++; } } catch(e) {}
    x = x | 0;
try { if (Inst33 <= 1000 && typeof (x) != "undefined") {_RecordType("<929,930,47>",(x)); Inst33++; } } catch(e) {}
try { if (Inst35 <= 1000 && typeof (Math.abs) != "undefined") {_RecordType("<951,959,48>",(Math.abs)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (Math) != "undefined") {_RecordType("<951,955,48>",(Math)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (Math.max) != "undefined") {_RecordType("<960,968,48>",(Math.max)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (Math) != "undefined") {_RecordType("<960,964,48>",(Math)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (x) != "undefined") {_RecordType("<969,970,48>",(x)); Inst39++; } } catch(e) {}
    return Math.abs(Math.max(x * -2, 0));
  }

  2;
try { if (Inst40 <= 1000 && typeof (foo) != "undefined") {_RecordType("<994,997,52>",(foo)); Inst40++; } } catch(e) {}
  foo(-1);
  4;
try { if (Inst41 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1010,1013,54>",(foo)); Inst41++; } } catch(e) {}
  foo(-2);
  2;
try { if (Inst42 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1026,1029,56>",(foo)); Inst42++; } } catch(e) {}
  foo(-1);
  4;
try { if (Inst43 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1042,1045,58>",(foo)); Inst43++; } } catch(e) {}
  foo(-2);
try { if (Inst44 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1053,1056,59>",(foo)); Inst44++; } } catch(e) {}
  foo();
  0;
try { if (Inst45 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1067,1070,61>",(foo)); Inst45++; } } catch(e) {}
  foo(0);
try { if (Inst46 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1077,1080,62>",(foo)); Inst46++; } } catch(e) {}
  foo();
})(); // Test that NumberAbs properly passes the kIdentifyZeros truncation
// for OrderedNumber inputs.


(function () {
try { if (Inst47 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1216,1219,68>",(foo)); Inst47++; } } catch(e) {}
  function foo(x) {
try { if (Inst48 <= 1000 && typeof (x) != "undefined") {_RecordType("<1220,1221,68>",(x)); Inst48++; } } catch(e) {}
try { if (Inst50 <= 1000 && typeof (x) != "undefined") {_RecordType("<1233,1234,69>",(x)); Inst50++; } } catch(e) {}
    x = x | 0;
try { if (Inst49 <= 1000 && typeof (x) != "undefined") {_RecordType("<1229,1230,69>",(x)); Inst49++; } } catch(e) {}
try { if (Inst51 <= 1000 && typeof (Math.abs) != "undefined") {_RecordType("<1251,1259,70>",(Math.abs)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1251,1255,70>",(Math)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (Math.min) != "undefined") {_RecordType("<1260,1268,70>",(Math.min)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1260,1264,70>",(Math)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (x) != "undefined") {_RecordType("<1269,1270,70>",(x)); Inst55++; } } catch(e) {}
    return Math.abs(Math.min(x * -2, 2 ** 32));
  }

  2;
try { if (Inst56 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1300,1303,74>",(foo)); Inst56++; } } catch(e) {}
  foo(-1);
  4;
try { if (Inst57 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1316,1319,76>",(foo)); Inst57++; } } catch(e) {}
  foo(-2);
  2;
try { if (Inst58 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1332,1335,78>",(foo)); Inst58++; } } catch(e) {}
  foo(-1);
  4;
try { if (Inst59 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1348,1351,80>",(foo)); Inst59++; } } catch(e) {}
  foo(-2);
try { if (Inst60 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1359,1362,81>",(foo)); Inst60++; } } catch(e) {}
  foo();
  0;
try { if (Inst61 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1373,1376,83>",(foo)); Inst61++; } } catch(e) {}
  foo(0);
try { if (Inst62 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1383,1386,84>",(foo)); Inst62++; } } catch(e) {}
  foo();
})();

