var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2015 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax
try { if (Inst0 <= 1000 && typeof (ShiftRightLogicalWithDeoptUsage) != "undefined") {_RecordType("<210,241,5>",(ShiftRightLogicalWithDeoptUsage)); Inst0++; } } catch(e) {}
(function ShiftRightLogicalWithDeoptUsage() {
try { if (Inst1 <= 1000 && typeof (g) != "undefined") {_RecordType("<257,258,6>",(g)); Inst1++; } } catch(e) {}
  function g() {
    ;
  }

try { if (Inst2 <= 1000 && typeof (f) != "undefined") {_RecordType("<285,286,10>",(f)); Inst2++; } } catch(e) {}
  function f() {
    var tmp = 1264475713;
try { if (Inst3 <= 1000 && typeof (tmp) != "undefined") {_RecordType("<299,302,11>",(tmp)); Inst3++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (tmp) != "undefined") {_RecordType("<332,335,12>",(tmp)); Inst5++; } } catch(e) {}
    var tmp1 = tmp - -913041544;
try { if (Inst4 <= 1000 && typeof (tmp1) != "undefined") {_RecordType("<325,329,12>",(tmp1)); Inst4++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (g) != "undefined") {_RecordType("<354,355,13>",(g)); Inst6++; } } catch(e) {}
    g();
try { if (Inst7 <= 1000 && typeof (tmp1) != "undefined") {_RecordType("<376,380,14>",(tmp1)); Inst7++; } } catch(e) {}
    return 1 >>> tmp1;
  }

  0;
try { if (Inst8 <= 1000 && typeof (f) != "undefined") {_RecordType("<394,395,18>",(f)); Inst8++; } } catch(e) {}
  f();
})();

try { if (Inst9 <= 1000 && typeof (ShiftRightLogicalWithCallUsage) != "undefined") {_RecordType("<416,446,21>",(ShiftRightLogicalWithCallUsage)); Inst9++; } } catch(e) {}
(function ShiftRightLogicalWithCallUsage() {
  var f = function () {
    "use asm"; // This is not a valid asm.js, we use the "use asm" here to
    // trigger Turbofan without deoptimization support.

try { if (Inst11 <= 1000 && typeof (g) != "undefined") {_RecordType("<620,621,26>",(g)); Inst11++; } } catch(e) {}
    function g(x) {
try { if (Inst12 <= 1000 && typeof (x) != "undefined") {_RecordType("<622,623,26>",(x)); Inst12++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (x) != "undefined") {_RecordType("<640,641,27>",(x)); Inst13++; } } catch(e) {}
      return x;
    }

try { if (Inst14 <= 1000 && typeof (f) != "undefined") {_RecordType("<663,664,30>",(f)); Inst14++; } } catch(e) {}
    function f() {
      var tmp = 1264475713;
try { if (Inst15 <= 1000 && typeof (tmp) != "undefined") {_RecordType("<679,682,31>",(tmp)); Inst15++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (tmp) != "undefined") {_RecordType("<714,717,32>",(tmp)); Inst17++; } } catch(e) {}
      var tmp1 = tmp - -913041544;
try { if (Inst16 <= 1000 && typeof (tmp1) != "undefined") {_RecordType("<707,711,32>",(tmp1)); Inst16++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (g) != "undefined") {_RecordType("<745,746,33>",(g)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (tmp1) != "undefined") {_RecordType("<753,757,33>",(tmp1)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (tmp1) != "undefined") {_RecordType("<759,763,33>",(tmp1)); Inst20++; } } catch(e) {}
      return g(1 >>> tmp1, tmp1);
    }

try { if (Inst21 <= 1000 && typeof (f) != "undefined") {_RecordType("<784,785,36>",(f)); Inst21++; } } catch(e) {}
    return f;
  }();
try { if (Inst10 <= 1000 && typeof (f) != "undefined") {_RecordType("<457,458,22>",(f)); Inst10++; } } catch(e) {}

  0;
try { if (Inst22 <= 1000 && typeof (f) != "undefined") {_RecordType("<802,803,40>",(f)); Inst22++; } } catch(e) {}
  f();
})();

