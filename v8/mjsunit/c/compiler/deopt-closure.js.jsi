var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2017 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax
try { if (Inst0 <= 1000 && typeof (TestMaterializeTargetOfInterpretedFrame) != "undefined") {_RecordType("<210,249,5>",(TestMaterializeTargetOfInterpretedFrame)); Inst0++; } } catch(e) {}
(function TestMaterializeTargetOfInterpretedFrame() {
try { if (Inst1 <= 1000 && typeof (f) != "undefined") {_RecordType("<265,266,6>",(f)); Inst1++; } } catch(e) {}
  function f(x) {
try { if (Inst2 <= 1000 && typeof (x) != "undefined") {_RecordType("<267,268,6>",(x)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (g) != "undefined") {_RecordType("<285,286,7>",(g)); Inst3++; } } catch(e) {}
    function g() {
try { if (Inst4 <= 1000 && typeof (x) != "undefined") {_RecordType("<304,305,8>",(x)); Inst4++; } } catch(e) {}
      return x + 1;
    }

try { if (Inst5 <= 1000 && typeof (g) != "undefined") {_RecordType("<329,330,11>",(g)); Inst5++; } } catch(e) {}
    return g();
  }

  24;
try { if (Inst6 <= 1000 && typeof (f) != "undefined") {_RecordType("<347,348,15>",(f)); Inst6++; } } catch(e) {}
  f(23);
  43;
try { if (Inst7 <= 1000 && typeof (f) != "undefined") {_RecordType("<362,363,17>",(f)); Inst7++; } } catch(e) {}
  f(42);
  66;
try { if (Inst8 <= 1000 && typeof (f) != "undefined") {_RecordType("<377,378,19>",(f)); Inst8++; } } catch(e) {}
  f(65);
})();

try { if (Inst9 <= 1000 && typeof (TestMaterializeTargetOfArgumentsAdaptorFrame) != "undefined") {_RecordType("<401,445,22>",(TestMaterializeTargetOfArgumentsAdaptorFrame)); Inst9++; } } catch(e) {}
(function TestMaterializeTargetOfArgumentsAdaptorFrame() {
try { if (Inst10 <= 1000 && typeof (f) != "undefined") {_RecordType("<461,462,23>",(f)); Inst10++; } } catch(e) {}
  function f(x) {
try { if (Inst11 <= 1000 && typeof (x) != "undefined") {_RecordType("<463,464,23>",(x)); Inst11++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (g) != "undefined") {_RecordType("<481,482,24>",(g)); Inst12++; } } catch(e) {}
    function g(a, b, c) {
try { if (Inst13 <= 1000 && typeof (a) != "undefined") {_RecordType("<483,484,24>",(a)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (b) != "undefined") {_RecordType("<486,487,24>",(b)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (c) != "undefined") {_RecordType("<489,490,24>",(c)); Inst15++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (x) != "undefined") {_RecordType("<507,508,25>",(x)); Inst16++; } } catch(e) {}
      return x + 1;
    }

try { if (Inst17 <= 1000 && typeof (g) != "undefined") {_RecordType("<532,533,28>",(g)); Inst17++; } } catch(e) {}
    return g();
  }

  24;
try { if (Inst18 <= 1000 && typeof (f) != "undefined") {_RecordType("<550,551,32>",(f)); Inst18++; } } catch(e) {}
  f(23);
  43;
try { if (Inst19 <= 1000 && typeof (f) != "undefined") {_RecordType("<565,566,34>",(f)); Inst19++; } } catch(e) {}
  f(42);
  66;
try { if (Inst20 <= 1000 && typeof (f) != "undefined") {_RecordType("<580,581,36>",(f)); Inst20++; } } catch(e) {}
  f(65);
})();

try { if (Inst21 <= 1000 && typeof (TestMaterializeTargetOfConstructStubFrame) != "undefined") {_RecordType("<604,645,39>",(TestMaterializeTargetOfConstructStubFrame)); Inst21++; } } catch(e) {}
(function TestMaterializeTargetOfConstructStubFrame() {
try { if (Inst22 <= 1000 && typeof (f) != "undefined") {_RecordType("<661,662,40>",(f)); Inst22++; } } catch(e) {}
  function f(x) {
try { if (Inst23 <= 1000 && typeof (x) != "undefined") {_RecordType("<663,664,40>",(x)); Inst23++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (g) != "undefined") {_RecordType("<681,682,41>",(g)); Inst24++; } } catch(e) {}
    function g() {
try { if (Inst26 <= 1000 && typeof (x) != "undefined") {_RecordType("<704,705,42>",(x)); Inst26++; } } catch(e) {}
      this.val = x + 1;
try { if (Inst25 <= 1000 && typeof (this.val) != "undefined") {_RecordType("<693,701,42>",(this.val)); Inst25++; } } catch(e) {}
    }

try { if (Inst27 <= 1000 && typeof (g) != "undefined") {_RecordType("<733,734,45>",(g)); Inst27++; } } catch(e) {}
    return new g();
  }

  ({
    val: 24
  });
try { if (Inst28 <= 1000 && typeof (f) != "undefined") {_RecordType("<768,769,51>",(f)); Inst28++; } } catch(e) {}
  f(23);
  ({
    val: 43
  });
try { if (Inst29 <= 1000 && typeof (f) != "undefined") {_RecordType("<800,801,55>",(f)); Inst29++; } } catch(e) {}
  f(42);
  ({
    val: 66
  });
try { if (Inst30 <= 1000 && typeof (f) != "undefined") {_RecordType("<832,833,59>",(f)); Inst30++; } } catch(e) {}
  f(65);
})();

