var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2013 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// Flags: --allow-natives-syntax --load-elimination
// Test global load elimination in the presence of OSR compilation.
try { if (Inst0 <= 1000 && typeof (It) != "undefined") {_RecordType("<1726,1728,29>",(It)); Inst0++; } } catch(e) {}
function It(x, y) {
try { if (Inst1 <= 1000 && typeof (x) != "undefined") {_RecordType("<1729,1730,29>",(x)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (y) != "undefined") {_RecordType("<1732,1733,29>",(y)); Inst2++; } } catch(e) {}
  ;
}

try { if (Inst3 <= 1000 && typeof (foo_osr) != "undefined") {_RecordType("<1753,1760,33>",(foo_osr)); Inst3++; } } catch(e) {}
function foo_osr(x, limit) {
try { if (Inst4 <= 1000 && typeof (x) != "undefined") {_RecordType("<1761,1762,33>",(x)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (limit) != "undefined") {_RecordType("<1764,1769,33>",(limit)); Inst5++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (It) != "undefined") {_RecordType("<1787,1789,34>",(It)); Inst7++; } } catch(e) {}
  var o = new It();
try { if (Inst6 <= 1000 && typeof (o) != "undefined") {_RecordType("<1779,1780,34>",(o)); Inst6++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (x) != "undefined") {_RecordType("<1801,1802,35>",(x)); Inst10++; } } catch(e) {}
  o.x = x;
try { if (Inst8 <= 1000 && typeof (o.x) != "undefined") {_RecordType("<1795,1798,35>",(o.x)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (o) != "undefined") {_RecordType("<1795,1796,35>",(o)); Inst9++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (x) != "undefined") {_RecordType("<1812,1813,36>",(x)); Inst13++; } } catch(e) {}
  o.y = x;
try { if (Inst11 <= 1000 && typeof (o.y) != "undefined") {_RecordType("<1806,1809,36>",(o.y)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (o) != "undefined") {_RecordType("<1806,1807,36>",(o)); Inst12++; } } catch(e) {}

  for (var i = 0; i < limit; i++) {
try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<1827,1828,38>",(i)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<1834,1835,38>",(i)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (limit) != "undefined") {_RecordType("<1838,1843,38>",(limit)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (i) != "undefined") {_RecordType("<1845,1846,38>",(i)); Inst17++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (o.x) != "undefined") {_RecordType("<1863,1866,39>",(o.x)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (o) != "undefined") {_RecordType("<1863,1864,39>",(o)); Inst21++; } } catch(e) {}
    o.y += o.x; // Load of x cannot be hoisted due to OSR.
try { if (Inst18 <= 1000 && typeof (o.y) != "undefined") {_RecordType("<1856,1859,39>",(o.y)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (o) != "undefined") {_RecordType("<1856,1857,39>",(o)); Inst19++; } } catch(e) {}
  }

try { if (Inst22 <= 1000 && typeof (o.y) != "undefined") {_RecordType("<1925,1928,42>",(o.y)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (o) != "undefined") {_RecordType("<1925,1926,42>",(o)); Inst23++; } } catch(e) {}
  return o.y;
}

22;
try { if (Inst24 <= 1000 && typeof (foo_osr) != "undefined") {_RecordType("<1937,1944,46>",(foo_osr)); Inst24++; } } catch(e) {}
foo_osr(11, 1);
24;
try { if (Inst25 <= 1000 && typeof (foo_osr) != "undefined") {_RecordType("<1957,1964,48>",(foo_osr)); Inst25++; } } catch(e) {}
foo_osr(12, 1);
1300013;
try { if (Inst26 <= 1000 && typeof (foo_osr) != "undefined") {_RecordType("<1982,1989,50>",(foo_osr)); Inst26++; } } catch(e) {}
foo_osr(13, 100000);

try { if (Inst27 <= 1000 && typeof (foo_hot) != "undefined") {_RecordType("<2013,2020,52>",(foo_hot)); Inst27++; } } catch(e) {}
function foo_hot(x, limit) {
try { if (Inst28 <= 1000 && typeof (x) != "undefined") {_RecordType("<2021,2022,52>",(x)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (limit) != "undefined") {_RecordType("<2024,2029,52>",(limit)); Inst29++; } } catch(e) {}
try { if (Inst31 <= 1000 && typeof (It) != "undefined") {_RecordType("<2047,2049,53>",(It)); Inst31++; } } catch(e) {}
  var o = new It();
try { if (Inst30 <= 1000 && typeof (o) != "undefined") {_RecordType("<2039,2040,53>",(o)); Inst30++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof (x) != "undefined") {_RecordType("<2061,2062,54>",(x)); Inst34++; } } catch(e) {}
  o.x = x;
try { if (Inst32 <= 1000 && typeof (o.x) != "undefined") {_RecordType("<2055,2058,54>",(o.x)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (o) != "undefined") {_RecordType("<2055,2056,54>",(o)); Inst33++; } } catch(e) {}
try { if (Inst37 <= 1000 && typeof (x) != "undefined") {_RecordType("<2072,2073,55>",(x)); Inst37++; } } catch(e) {}
  o.y = x;
try { if (Inst35 <= 1000 && typeof (o.y) != "undefined") {_RecordType("<2066,2069,55>",(o.y)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (o) != "undefined") {_RecordType("<2066,2067,55>",(o)); Inst36++; } } catch(e) {}

  for (var i = 0; i < limit; i++) {
try { if (Inst38 <= 1000 && typeof (i) != "undefined") {_RecordType("<2087,2088,57>",(i)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (i) != "undefined") {_RecordType("<2094,2095,57>",(i)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (limit) != "undefined") {_RecordType("<2098,2103,57>",(limit)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (i) != "undefined") {_RecordType("<2105,2106,57>",(i)); Inst41++; } } catch(e) {}
try { if (Inst44 <= 1000 && typeof (o.x) != "undefined") {_RecordType("<2123,2126,58>",(o.x)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (o) != "undefined") {_RecordType("<2123,2124,58>",(o)); Inst45++; } } catch(e) {}
    o.y += o.x; // Load of x can be hoisted without OSR.
try { if (Inst42 <= 1000 && typeof (o.y) != "undefined") {_RecordType("<2116,2119,58>",(o.y)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (o) != "undefined") {_RecordType("<2116,2117,58>",(o)); Inst43++; } } catch(e) {}
  }

try { if (Inst46 <= 1000 && typeof (o.y) != "undefined") {_RecordType("<2183,2186,61>",(o.y)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (o) != "undefined") {_RecordType("<2183,2184,61>",(o)); Inst47++; } } catch(e) {}
  return o.y;
}

22;
try { if (Inst48 <= 1000 && typeof (foo_hot) != "undefined") {_RecordType("<2195,2202,65>",(foo_hot)); Inst48++; } } catch(e) {}
foo_hot(11, 1);
24;
try { if (Inst49 <= 1000 && typeof (foo_hot) != "undefined") {_RecordType("<2215,2222,67>",(foo_hot)); Inst49++; } } catch(e) {}
foo_hot(12, 1);
32;
try { if (Inst50 <= 1000 && typeof (foo_hot) != "undefined") {_RecordType("<2235,2242,69>",(foo_hot)); Inst50++; } } catch(e) {}
foo_hot(16, 1);
1300013;
try { if (Inst51 <= 1000 && typeof (foo_hot) != "undefined") {_RecordType("<2260,2267,71>",(foo_hot)); Inst51++; } } catch(e) {}
foo_hot(13, 100000);

