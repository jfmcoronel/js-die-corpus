var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2010 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// Values in distinct spans.
try { if (Inst0 <= 1000 && typeof (or_test0) != "undefined") {_RecordType("<1635,1643,28>",(or_test0)); Inst0++; } } catch(e) {}
function or_test0(x, y) {
try { if (Inst1 <= 1000 && typeof (x) != "undefined") {_RecordType("<1644,1645,28>",(x)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (y) != "undefined") {_RecordType("<1647,1648,28>",(y)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (x) != "undefined") {_RecordType("<1661,1662,29>",(x)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (y) != "undefined") {_RecordType("<1665,1666,29>",(y)); Inst4++; } } catch(e) {}
  return x | y;
}

try { if (Inst5 <= 1000 && typeof (and_test0) != "undefined") {_RecordType("<1680,1689,32>",(and_test0)); Inst5++; } } catch(e) {}
function and_test0(x, y) {
try { if (Inst6 <= 1000 && typeof (x) != "undefined") {_RecordType("<1690,1691,32>",(x)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (y) != "undefined") {_RecordType("<1693,1694,32>",(y)); Inst7++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (x) != "undefined") {_RecordType("<1707,1708,33>",(x)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (y) != "undefined") {_RecordType("<1711,1712,33>",(y)); Inst9++; } } catch(e) {}
  return x & y;
}

try { if (Inst10 <= 1000 && typeof (add_test0) != "undefined") {_RecordType("<1726,1735,36>",(add_test0)); Inst10++; } } catch(e) {}
function add_test0(x, y) {
try { if (Inst11 <= 1000 && typeof (x) != "undefined") {_RecordType("<1736,1737,36>",(x)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (y) != "undefined") {_RecordType("<1739,1740,36>",(y)); Inst12++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (x) != "undefined") {_RecordType("<1753,1754,37>",(x)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (y) != "undefined") {_RecordType("<1757,1758,37>",(y)); Inst14++; } } catch(e) {}
  return x + y;
}

3;
try { if (Inst15 <= 1000 && typeof (or_test0) != "undefined") {_RecordType("<1766,1774,41>",(or_test0)); Inst15++; } } catch(e) {}
or_test0(1, 2);
2;
try { if (Inst16 <= 1000 && typeof (and_test0) != "undefined") {_RecordType("<1785,1794,43>",(and_test0)); Inst16++; } } catch(e) {}
and_test0(3, 6);
5;
try { if (Inst17 <= 1000 && typeof (add_test0) != "undefined") {_RecordType("<1805,1814,45>",(add_test0)); Inst17++; } } catch(e) {}
add_test0(2, 3);

// 2 + 3
// Values in the same span.
try { if (Inst18 <= 1000 && typeof (or_test1) != "undefined") {_RecordType("<1869,1877,49>",(or_test1)); Inst18++; } } catch(e) {}
function or_test1(x, y) {
try { if (Inst19 <= 1000 && typeof (x) != "undefined") {_RecordType("<1878,1879,49>",(x)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (y) != "undefined") {_RecordType("<1881,1882,49>",(y)); Inst20++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (x) != "undefined") {_RecordType("<1895,1896,50>",(x)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (x) != "undefined") {_RecordType("<1899,1900,50>",(x)); Inst22++; } } catch(e) {}
  return x | x;
}

try { if (Inst23 <= 1000 && typeof (and_test1) != "undefined") {_RecordType("<1914,1923,53>",(and_test1)); Inst23++; } } catch(e) {}
function and_test1(x, y) {
try { if (Inst24 <= 1000 && typeof (x) != "undefined") {_RecordType("<1924,1925,53>",(x)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (y) != "undefined") {_RecordType("<1927,1928,53>",(y)); Inst25++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (x) != "undefined") {_RecordType("<1941,1942,54>",(x)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (x) != "undefined") {_RecordType("<1945,1946,54>",(x)); Inst27++; } } catch(e) {}
  return x & x;
}

try { if (Inst28 <= 1000 && typeof (add_test1) != "undefined") {_RecordType("<1960,1969,57>",(add_test1)); Inst28++; } } catch(e) {}
function add_test1(x, y) {
try { if (Inst29 <= 1000 && typeof (x) != "undefined") {_RecordType("<1970,1971,57>",(x)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (y) != "undefined") {_RecordType("<1973,1974,57>",(y)); Inst30++; } } catch(e) {}
try { if (Inst31 <= 1000 && typeof (x) != "undefined") {_RecordType("<1987,1988,58>",(x)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (x) != "undefined") {_RecordType("<1991,1992,58>",(x)); Inst32++; } } catch(e) {}
  return x + x;
}

1;
try { if (Inst33 <= 1000 && typeof (or_test1) != "undefined") {_RecordType("<2000,2008,62>",(or_test1)); Inst33++; } } catch(e) {}
or_test1(1, 2);
3;
try { if (Inst34 <= 1000 && typeof (and_test1) != "undefined") {_RecordType("<2019,2028,64>",(and_test1)); Inst34++; } } catch(e) {}
and_test1(3, 6);
4;
try { if (Inst35 <= 1000 && typeof (add_test1) != "undefined") {_RecordType("<2039,2048,66>",(add_test1)); Inst35++; } } catch(e) {}
add_test1(2, 3);

// 2 + 2
// Values in distinct spans that alias.
try { if (Inst36 <= 1000 && typeof (or_test2) != "undefined") {_RecordType("<2115,2123,70>",(or_test2)); Inst36++; } } catch(e) {}
function or_test2(x, y) {
try { if (Inst37 <= 1000 && typeof (x) != "undefined") {_RecordType("<2124,2125,70>",(x)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (y) != "undefined") {_RecordType("<2127,2128,70>",(y)); Inst38++; } } catch(e) {}
try { if (Inst40 <= 1000 && typeof (y) != "undefined") {_RecordType("<2138,2139,71>",(y)); Inst40++; } } catch(e) {}
  x = y;
try { if (Inst39 <= 1000 && typeof (x) != "undefined") {_RecordType("<2134,2135,71>",(x)); Inst39++; } } catch(e) {}
try { if (Inst41 <= 1000 && typeof (x) != "undefined") {_RecordType("<2150,2151,72>",(x)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (y) != "undefined") {_RecordType("<2154,2155,72>",(y)); Inst42++; } } catch(e) {}
  return x | y;
}

try { if (Inst43 <= 1000 && typeof (and_test2) != "undefined") {_RecordType("<2169,2178,75>",(and_test2)); Inst43++; } } catch(e) {}
function and_test2(x, y) {
try { if (Inst44 <= 1000 && typeof (x) != "undefined") {_RecordType("<2179,2180,75>",(x)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (y) != "undefined") {_RecordType("<2182,2183,75>",(y)); Inst45++; } } catch(e) {}
try { if (Inst47 <= 1000 && typeof (y) != "undefined") {_RecordType("<2193,2194,76>",(y)); Inst47++; } } catch(e) {}
  x = y;
try { if (Inst46 <= 1000 && typeof (x) != "undefined") {_RecordType("<2189,2190,76>",(x)); Inst46++; } } catch(e) {}
try { if (Inst48 <= 1000 && typeof (x) != "undefined") {_RecordType("<2205,2206,77>",(x)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (y) != "undefined") {_RecordType("<2209,2210,77>",(y)); Inst49++; } } catch(e) {}
  return x & y;
}

try { if (Inst50 <= 1000 && typeof (add_test2) != "undefined") {_RecordType("<2224,2233,80>",(add_test2)); Inst50++; } } catch(e) {}
function add_test2(x, y) {
try { if (Inst51 <= 1000 && typeof (x) != "undefined") {_RecordType("<2234,2235,80>",(x)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (y) != "undefined") {_RecordType("<2237,2238,80>",(y)); Inst52++; } } catch(e) {}
try { if (Inst54 <= 1000 && typeof (y) != "undefined") {_RecordType("<2248,2249,81>",(y)); Inst54++; } } catch(e) {}
  x = y;
try { if (Inst53 <= 1000 && typeof (x) != "undefined") {_RecordType("<2244,2245,81>",(x)); Inst53++; } } catch(e) {}
try { if (Inst55 <= 1000 && typeof (x) != "undefined") {_RecordType("<2260,2261,82>",(x)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (y) != "undefined") {_RecordType("<2264,2265,82>",(y)); Inst56++; } } catch(e) {}
  return x + y;
}

2;
try { if (Inst57 <= 1000 && typeof (or_test2) != "undefined") {_RecordType("<2273,2281,86>",(or_test2)); Inst57++; } } catch(e) {}
or_test2(1, 2);
6;
try { if (Inst58 <= 1000 && typeof (and_test2) != "undefined") {_RecordType("<2292,2301,88>",(and_test2)); Inst58++; } } catch(e) {}
and_test2(3, 6);
6;
try { if (Inst59 <= 1000 && typeof (add_test2) != "undefined") {_RecordType("<2312,2321,90>",(add_test2)); Inst59++; } } catch(e) {}
add_test2(2, 3);

