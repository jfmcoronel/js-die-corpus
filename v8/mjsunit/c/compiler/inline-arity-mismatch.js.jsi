var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2012 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// Flags: --allow-natives-syntax
// Test inlining at call sites with mismatched arity.
try { if (Inst0 <= 1000 && typeof (f) != "undefined") {_RecordType("<1693,1694,29>",(f)); Inst0++; } } catch(e) {}
function f(a) {
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<1695,1696,29>",(a)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (a.x) != "undefined") {_RecordType("<1709,1712,30>",(a.x)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (a) != "undefined") {_RecordType("<1709,1710,30>",(a)); Inst3++; } } catch(e) {}
  return a.x;
}

try { if (Inst4 <= 1000 && typeof (g) != "undefined") {_RecordType("<1726,1727,33>",(g)); Inst4++; } } catch(e) {}
function g(a, b) {
try { if (Inst5 <= 1000 && typeof (a) != "undefined") {_RecordType("<1728,1729,33>",(a)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (b) != "undefined") {_RecordType("<1731,1732,33>",(b)); Inst6++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (a.x) != "undefined") {_RecordType("<1745,1748,34>",(a.x)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (a) != "undefined") {_RecordType("<1745,1746,34>",(a)); Inst8++; } } catch(e) {}
  return a.x;
}

try { if (Inst9 <= 1000 && typeof (h1) != "undefined") {_RecordType("<1762,1764,37>",(h1)); Inst9++; } } catch(e) {}
function h1(a, b) {
try { if (Inst10 <= 1000 && typeof (a) != "undefined") {_RecordType("<1765,1766,37>",(a)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (b) != "undefined") {_RecordType("<1768,1769,37>",(b)); Inst11++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (f) != "undefined") {_RecordType("<1782,1783,38>",(f)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (a) != "undefined") {_RecordType("<1784,1785,38>",(a)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (a) != "undefined") {_RecordType("<1787,1788,38>",(a)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (g) != "undefined") {_RecordType("<1792,1793,38>",(g)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (b) != "undefined") {_RecordType("<1794,1795,38>",(b)); Inst16++; } } catch(e) {}
  return f(a, a) * g(b);
}

try { if (Inst17 <= 1000 && typeof (h2) != "undefined") {_RecordType("<1810,1812,41>",(h2)); Inst17++; } } catch(e) {}
function h2(a, b) {
try { if (Inst18 <= 1000 && typeof (a) != "undefined") {_RecordType("<1813,1814,41>",(a)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (b) != "undefined") {_RecordType("<1816,1817,41>",(b)); Inst19++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (f) != "undefined") {_RecordType("<1830,1831,42>",(f)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (a) != "undefined") {_RecordType("<1832,1833,42>",(a)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (a) != "undefined") {_RecordType("<1835,1836,42>",(a)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (g) != "undefined") {_RecordType("<1840,1841,42>",(g)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (b) != "undefined") {_RecordType("<1842,1843,42>",(b)); Inst24++; } } catch(e) {}
  return f(a, a) * g(b);
}

var o = {
  x: 2
};
try { if (Inst25 <= 1000 && typeof (o) != "undefined") {_RecordType("<1853,1854,45>",(o)); Inst25++; } } catch(e) {}
4;
try { if (Inst26 <= 1000 && typeof (h1) != "undefined") {_RecordType("<1872,1874,49>",(h1)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (o) != "undefined") {_RecordType("<1875,1876,49>",(o)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (o) != "undefined") {_RecordType("<1878,1879,49>",(o)); Inst28++; } } catch(e) {}
h1(o, o);
4;
try { if (Inst29 <= 1000 && typeof (h1) != "undefined") {_RecordType("<1885,1887,51>",(h1)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (o) != "undefined") {_RecordType("<1888,1889,51>",(o)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (o) != "undefined") {_RecordType("<1891,1892,51>",(o)); Inst31++; } } catch(e) {}
h1(o, o);
4;
try { if (Inst32 <= 1000 && typeof (h2) != "undefined") {_RecordType("<1898,1900,53>",(h2)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (o) != "undefined") {_RecordType("<1901,1902,53>",(o)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (o) != "undefined") {_RecordType("<1904,1905,53>",(o)); Inst34++; } } catch(e) {}
h2(o, o);
4;
try { if (Inst35 <= 1000 && typeof (h2) != "undefined") {_RecordType("<1911,1913,55>",(h2)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (o) != "undefined") {_RecordType("<1914,1915,55>",(o)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (o) != "undefined") {_RecordType("<1917,1918,55>",(o)); Inst37++; } } catch(e) {}
h2(o, o);
4;
try { if (Inst38 <= 1000 && typeof (h1) != "undefined") {_RecordType("<1924,1926,57>",(h1)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (o) != "undefined") {_RecordType("<1927,1928,57>",(o)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (o) != "undefined") {_RecordType("<1930,1931,57>",(o)); Inst40++; } } catch(e) {}
h1(o, o);
4;
try { if (Inst41 <= 1000 && typeof (h2) != "undefined") {_RecordType("<1937,1939,59>",(h2)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (o) != "undefined") {_RecordType("<1940,1941,59>",(o)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (o) != "undefined") {_RecordType("<1943,1944,59>",(o)); Inst43++; } } catch(e) {}
h2(o, o);
var u = {
  y: 0,
  x: 1
};
try { if (Inst44 <= 1000 && typeof (u) != "undefined") {_RecordType("<1951,1952,60>",(u)); Inst44++; } } catch(e) {}
2;
try { if (Inst45 <= 1000 && typeof (h1) != "undefined") {_RecordType("<1978,1980,65>",(h1)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (u) != "undefined") {_RecordType("<1981,1982,65>",(u)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (o) != "undefined") {_RecordType("<1984,1985,65>",(o)); Inst47++; } } catch(e) {}
h1(u, o);
2;
try { if (Inst48 <= 1000 && typeof (h2) != "undefined") {_RecordType("<1991,1993,67>",(h2)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (o) != "undefined") {_RecordType("<1994,1995,67>",(o)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (u) != "undefined") {_RecordType("<1997,1998,67>",(u)); Inst50++; } } catch(e) {}
h2(o, u);

