var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2017 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax
try { if (Inst0 <= 1000 && typeof (Rest0Params) != "undefined") {_RecordType("<210,221,5>",(Rest0Params)); Inst0++; } } catch(e) {}
(function Rest0Params() {
try { if (Inst1 <= 1000 && typeof (f) != "undefined") {_RecordType("<237,238,6>",(f)); Inst1++; } } catch(e) {}
  function f(x, y) {
try { if (Inst2 <= 1000 && typeof (x) != "undefined") {_RecordType("<239,240,6>",(x)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (y) != "undefined") {_RecordType("<242,243,6>",(y)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (x) != "undefined") {_RecordType("<258,259,7>",(x)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (y) != "undefined") {_RecordType("<262,263,7>",(y)); Inst5++; } } catch(e) {}
    return x + y;
  }

try { if (Inst6 <= 1000 && typeof (test) != "undefined") {_RecordType("<281,285,10>",(test)); Inst6++; } } catch(e) {}
  function test(...rest) {
try { if (Inst7 <= 1000 && typeof (rest) != "undefined") {_RecordType("<289,293,10>",(rest)); Inst7++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (rest) != "undefined") {_RecordType("<309,313,11>",(rest)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (f.apply) != "undefined") {_RecordType("<315,322,11>",(f.apply)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (f) != "undefined") {_RecordType("<315,316,11>",(f)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (rest) != "undefined") {_RecordType("<329,333,11>",(rest)); Inst11++; } } catch(e) {}
    return [rest, f.apply(null, rest)];
  }

try { if (Inst12 <= 1000 && typeof (test) != "undefined") {_RecordType("<344,348,14>",(test)); Inst12++; } } catch(e) {}
  test();
try { if (Inst13 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<359,362,15>",(NaN)); Inst13++; } } catch(e) {}
  [[], NaN];
try { if (Inst14 <= 1000 && typeof (test) != "undefined") {_RecordType("<367,371,16>",(test)); Inst14++; } } catch(e) {}
  test(1);
try { if (Inst15 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<384,387,17>",(NaN)); Inst15++; } } catch(e) {}
  [[1], NaN];
try { if (Inst16 <= 1000 && typeof (test) != "undefined") {_RecordType("<392,396,18>",(test)); Inst16++; } } catch(e) {}
  test(1, 2);
  [[1, 2], 3];
try { if (Inst17 <= 1000 && typeof (test) != "undefined") {_RecordType("<421,425,20>",(test)); Inst17++; } } catch(e) {}
  test(1, 2, 3);
  [[1, 2, 3], 3];
try { if (Inst18 <= 1000 && typeof (test) != "undefined") {_RecordType("<456,460,22>",(test)); Inst18++; } } catch(e) {}
  test();
try { if (Inst19 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<471,474,23>",(NaN)); Inst19++; } } catch(e) {}
  [[], NaN];
try { if (Inst20 <= 1000 && typeof (test) != "undefined") {_RecordType("<479,483,24>",(test)); Inst20++; } } catch(e) {}
  test(1);
try { if (Inst21 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<496,499,25>",(NaN)); Inst21++; } } catch(e) {}
  [[1], NaN];
try { if (Inst22 <= 1000 && typeof (test) != "undefined") {_RecordType("<504,508,26>",(test)); Inst22++; } } catch(e) {}
  test(1, 2);
  [[1, 2], 3];
try { if (Inst23 <= 1000 && typeof (test) != "undefined") {_RecordType("<533,537,28>",(test)); Inst23++; } } catch(e) {}
  test(1, 2, 3);
  [[1, 2, 3], 3];
})();

try { if (Inst24 <= 1000 && typeof (Rest1Params) != "undefined") {_RecordType("<583,594,32>",(Rest1Params)); Inst24++; } } catch(e) {}
(function Rest1Params() {
try { if (Inst25 <= 1000 && typeof (f) != "undefined") {_RecordType("<610,611,33>",(f)); Inst25++; } } catch(e) {}
  function f(x, y) {
try { if (Inst26 <= 1000 && typeof (x) != "undefined") {_RecordType("<612,613,33>",(x)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (y) != "undefined") {_RecordType("<615,616,33>",(y)); Inst27++; } } catch(e) {}
try { if (Inst28 <= 1000 && typeof (x) != "undefined") {_RecordType("<631,632,34>",(x)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (y) != "undefined") {_RecordType("<635,636,34>",(y)); Inst29++; } } catch(e) {}
    return x + y;
  }

try { if (Inst30 <= 1000 && typeof (test) != "undefined") {_RecordType("<654,658,37>",(test)); Inst30++; } } catch(e) {}
  function test(a, ...rest) {
try { if (Inst31 <= 1000 && typeof (a) != "undefined") {_RecordType("<659,660,37>",(a)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (rest) != "undefined") {_RecordType("<665,669,37>",(rest)); Inst32++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (rest) != "undefined") {_RecordType("<685,689,38>",(rest)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (a) != "undefined") {_RecordType("<691,692,38>",(a)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (f.apply) != "undefined") {_RecordType("<694,701,38>",(f.apply)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (f) != "undefined") {_RecordType("<694,695,38>",(f)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (rest) != "undefined") {_RecordType("<708,712,38>",(rest)); Inst37++; } } catch(e) {}
    return [rest, a, f.apply(null, rest)];
  }

try { if (Inst38 <= 1000 && typeof (test) != "undefined") {_RecordType("<723,727,41>",(test)); Inst38++; } } catch(e) {}
  test();
try { if (Inst39 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<738,747,42>",(undefined)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<749,752,42>",(NaN)); Inst40++; } } catch(e) {}
  [[], undefined, NaN];
try { if (Inst41 <= 1000 && typeof (test) != "undefined") {_RecordType("<757,761,43>",(test)); Inst41++; } } catch(e) {}
  test(1);
try { if (Inst42 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<776,779,44>",(NaN)); Inst42++; } } catch(e) {}
  [[], 1, NaN];
try { if (Inst43 <= 1000 && typeof (test) != "undefined") {_RecordType("<784,788,45>",(test)); Inst43++; } } catch(e) {}
  test(1, 2);
try { if (Inst44 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<807,810,46>",(NaN)); Inst44++; } } catch(e) {}
  [[2], 1, NaN];
try { if (Inst45 <= 1000 && typeof (test) != "undefined") {_RecordType("<815,819,47>",(test)); Inst45++; } } catch(e) {}
  test(1, 2, 3);
  [[2, 3], 1, 5];
try { if (Inst46 <= 1000 && typeof (test) != "undefined") {_RecordType("<850,854,49>",(test)); Inst46++; } } catch(e) {}
  test(1, 2, 3, 4);
  [[2, 3, 4], 1, 5];
try { if (Inst47 <= 1000 && typeof (test) != "undefined") {_RecordType("<891,895,51>",(test)); Inst47++; } } catch(e) {}
  test();
try { if (Inst48 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<906,915,52>",(undefined)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<917,920,52>",(NaN)); Inst49++; } } catch(e) {}
  [[], undefined, NaN];
try { if (Inst50 <= 1000 && typeof (test) != "undefined") {_RecordType("<925,929,53>",(test)); Inst50++; } } catch(e) {}
  test(1);
try { if (Inst51 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<944,947,54>",(NaN)); Inst51++; } } catch(e) {}
  [[], 1, NaN];
try { if (Inst52 <= 1000 && typeof (test) != "undefined") {_RecordType("<952,956,55>",(test)); Inst52++; } } catch(e) {}
  test(1, 2);
try { if (Inst53 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<975,978,56>",(NaN)); Inst53++; } } catch(e) {}
  [[2], 1, NaN];
try { if (Inst54 <= 1000 && typeof (test) != "undefined") {_RecordType("<983,987,57>",(test)); Inst54++; } } catch(e) {}
  test(1, 2, 3);
  [[2, 3], 1, 5];
try { if (Inst55 <= 1000 && typeof (test) != "undefined") {_RecordType("<1018,1022,59>",(test)); Inst55++; } } catch(e) {}
  test(1, 2, 3, 4);
  [[2, 3, 4], 1, 5];
})();

