var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2012 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// Flags: --allow-natives-syntax --expose-gc
// Flags: --concurrent-recompilation --block-concurrent-recompilation
// Flags: --opt --no-always-opt
try { if (Inst0 <= 1000 && typeof (f0) != "undefined") {_RecordType("<1749,1751,30>",(f0)); Inst0++; } } catch(e) {}
if (!f0()) {
try { if (Inst1 <= 1000 && typeof (print) != "undefined") {_RecordType("<1759,1764,31>",(print)); Inst1++; } } catch(e) {}
  print("Concurrent recompilation is disabled. Skipping this test.");
try { if (Inst2 <= 1000 && typeof (quit) != "undefined") {_RecordType("<1829,1833,32>",(quit)); Inst2++; } } catch(e) {}
  quit();
}

try { if (Inst3 <= 1000 && typeof (f) != "undefined") {_RecordType("<1849,1850,35>",(f)); Inst3++; } } catch(e) {}
function f(x) {
try { if (Inst4 <= 1000 && typeof (x) != "undefined") {_RecordType("<1851,1852,35>",(x)); Inst4++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (x) != "undefined") {_RecordType("<1867,1868,36>",(x)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (x) != "undefined") {_RecordType("<1871,1872,36>",(x)); Inst7++; } } catch(e) {}
  var xx = x * x;
try { if (Inst5 <= 1000 && typeof (xx) != "undefined") {_RecordType("<1862,1864,36>",(xx)); Inst5++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (xx.toString) != "undefined") {_RecordType("<1888,1899,37>",(xx.toString)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (xx) != "undefined") {_RecordType("<1888,1890,37>",(xx)); Inst10++; } } catch(e) {}
  var xxstr = xx.toString();
try { if (Inst8 <= 1000 && typeof (xxstr) != "undefined") {_RecordType("<1880,1885,37>",(xxstr)); Inst8++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (xxstr.length) != "undefined") {_RecordType("<1912,1924,38>",(xxstr.length)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (xxstr) != "undefined") {_RecordType("<1912,1917,38>",(xxstr)); Inst12++; } } catch(e) {}
  return xxstr.length;
}

try { if (Inst13 <= 1000 && typeof (g) != "undefined") {_RecordType("<1938,1939,41>",(g)); Inst13++; } } catch(e) {}
function g(x) {
try { if (Inst14 <= 1000 && typeof (x) != "undefined") {_RecordType("<1940,1941,41>",(x)); Inst14++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (Math.sqrt) != "undefined") {_RecordType("<1957,1966,42>",(Math.sqrt)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1957,1961,42>",(Math)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (x) != "undefined") {_RecordType("<1967,1968,42>",(x)); Inst18++; } } catch(e) {}
  var xxx = Math.sqrt(x) | 0;
try { if (Inst15 <= 1000 && typeof (xxx) != "undefined") {_RecordType("<1951,1954,42>",(xxx)); Inst15++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (xxx.toString) != "undefined") {_RecordType("<1990,2002,43>",(xxx.toString)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (xxx) != "undefined") {_RecordType("<1990,1993,43>",(xxx)); Inst21++; } } catch(e) {}
  var xxxstr = xxx.toString();
try { if (Inst19 <= 1000 && typeof (xxxstr) != "undefined") {_RecordType("<1981,1987,43>",(xxxstr)); Inst19++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (xxxstr.length) != "undefined") {_RecordType("<2015,2028,44>",(xxxstr.length)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (xxxstr) != "undefined") {_RecordType("<2015,2021,44>",(xxxstr)); Inst23++; } } catch(e) {}
  return xxxstr.length;
}

try { if (Inst24 <= 1000 && typeof (k) != "undefined") {_RecordType("<2042,2043,47>",(k)); Inst24++; } } catch(e) {}
function k(x) {
try { if (Inst25 <= 1000 && typeof (x) != "undefined") {_RecordType("<2044,2045,47>",(x)); Inst25++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (x) != "undefined") {_RecordType("<2058,2059,48>",(x)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (x) != "undefined") {_RecordType("<2062,2063,48>",(x)); Inst27++; } } catch(e) {}
  return x * x;
}

try { if (Inst28 <= 1000 && typeof (f) != "undefined") {_RecordType("<2068,2069,51>",(f)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (g) != "undefined") {_RecordType("<2070,2071,51>",(g)); Inst29++; } } catch(e) {}
f(g(1));
try { if (Inst30 <= 1000 && typeof (f) != "undefined") {_RecordType("<2077,2078,52>",(f)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (g) != "undefined") {_RecordType("<2079,2080,52>",(g)); Inst31++; } } catch(e) {}
f(g(2));
try { if (Inst32 <= 1000 && typeof (f) != "undefined") {_RecordType("<2086,2087,53>",(f)); Inst32++; } } catch(e) {}
f();
try { if (Inst33 <= 1000 && typeof (g) != "undefined") {_RecordType("<2091,2092,54>",(g)); Inst33++; } } catch(e) {}
g();
try { if (Inst34 <= 1000 && typeof (f) != "undefined") {_RecordType("<2096,2097,55>",(f)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (g) != "undefined") {_RecordType("<2098,2099,55>",(g)); Inst35++; } } catch(e) {}
f(g(3)); // Kick off recompilation.

try { if (Inst36 <= 1000 && typeof (f) != "undefined") {_RecordType("<2133,2134,57>",(f)); Inst36++; } } catch(e) {}
f();
"no sync";
try { if (Inst37 <= 1000 && typeof (g) != "undefined") {_RecordType("<2149,2150,59>",(g)); Inst37++; } } catch(e) {}
g();
"no sync";
try { if (Inst38 <= 1000 && typeof (f) != "undefined") {_RecordType("<2165,2166,61>",(f)); Inst38++; } } catch(e) {}
f();
"sync";
try { if (Inst39 <= 1000 && typeof (g) != "undefined") {_RecordType("<2178,2179,63>",(g)); Inst39++; } } catch(e) {}
g();
"sync";

