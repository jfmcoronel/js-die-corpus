var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2010 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// Flags: --allow-natives-syntax
// Test that we can inline a call with a parameter.
try { if (Inst0 <= 1000 && typeof (TestInlineOneParam) != "undefined") {_RecordType("<1691,1709,29>",(TestInlineOneParam)); Inst0++; } } catch(e) {}
function TestInlineOneParam(o, p) {
try { if (Inst1 <= 1000 && typeof (o) != "undefined") {_RecordType("<1710,1711,29>",(o)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (p) != "undefined") {_RecordType("<1713,1714,29>",(p)); Inst2++; } } catch(e) {}
  // Effect context.
try { if (Inst3 <= 1000 && typeof (o.f) != "undefined") {_RecordType("<1741,1744,31>",(o.f)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (o) != "undefined") {_RecordType("<1741,1742,31>",(o)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (p) != "undefined") {_RecordType("<1745,1746,31>",(p)); Inst5++; } } catch(e) {}
  o.f(p); // Value context.

try { if (Inst7 <= 1000 && typeof (o.f) != "undefined") {_RecordType("<1778,1781,33>",(o.f)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (o) != "undefined") {_RecordType("<1778,1779,33>",(o)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (p) != "undefined") {_RecordType("<1782,1783,33>",(p)); Inst9++; } } catch(e) {}
  var x = o.f(p);
try { if (Inst6 <= 1000 && typeof (x) != "undefined") {_RecordType("<1774,1775,33>",(x)); Inst6++; } } catch(e) {}
  42;
try { if (Inst10 <= 1000 && typeof (x) != "undefined") {_RecordType("<1794,1795,35>",(x)); Inst10++; } } catch(e) {}
  x;
  42;
try { if (Inst11 <= 1000 && typeof (o.f) != "undefined") {_RecordType("<1805,1808,37>",(o.f)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (o) != "undefined") {_RecordType("<1805,1806,37>",(o)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (p) != "undefined") {_RecordType("<1809,1810,37>",(p)); Inst13++; } } catch(e) {}
  o.f(p);

  // Test context.
try { if (Inst14 <= 1000 && typeof (o.f) != "undefined") {_RecordType("<1840,1843,40>",(o.f)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (o) != "undefined") {_RecordType("<1840,1841,40>",(o)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (p) != "undefined") {_RecordType("<1844,1845,40>",(p)); Inst16++; } } catch(e) {}
  if (!o.f(p)) {
    false;
  }
}

var obj = {
  x: 42
};
try { if (Inst17 <= 1000 && typeof (obj) != "undefined") {_RecordType("<1872,1875,45>",(obj)); Inst17++; } } catch(e) {}
var o1 = {};
try { if (Inst18 <= 1000 && typeof (o1) != "undefined") {_RecordType("<1895,1897,48>",(o1)); Inst18++; } } catch(e) {}

o1.f = function (o) {
try { if (Inst21 <= 1000 && typeof (o) != "undefined") {_RecordType("<1922,1923,50>",(o)); Inst21++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (o.x) != "undefined") {_RecordType("<1936,1939,51>",(o.x)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (o) != "undefined") {_RecordType("<1936,1937,51>",(o)); Inst23++; } } catch(e) {}
  return o.x;
};
try { if (Inst19 <= 1000 && typeof (o1.f) != "undefined") {_RecordType("<1905,1909,50>",(o1.f)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (o1) != "undefined") {_RecordType("<1905,1907,50>",(o1)); Inst20++; } } catch(e) {}

for (var i = 0; i < 5; i++) {
try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<1954,1955,54>",(i)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<1961,1962,54>",(i)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (i) != "undefined") {_RecordType("<1968,1969,54>",(i)); Inst26++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (TestInlineOneParam) != "undefined") {_RecordType("<1977,1995,55>",(TestInlineOneParam)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (o1) != "undefined") {_RecordType("<1996,1998,55>",(o1)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (obj) != "undefined") {_RecordType("<2000,2003,55>",(obj)); Inst29++; } } catch(e) {}
  TestInlineOneParam(o1, obj);
}

try { if (Inst30 <= 1000 && typeof (TestInlineOneParam) != "undefined") {_RecordType("<2009,2027,58>",(TestInlineOneParam)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (o1) != "undefined") {_RecordType("<2028,2030,58>",(o1)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (obj) != "undefined") {_RecordType("<2032,2035,58>",(obj)); Inst32++; } } catch(e) {}
TestInlineOneParam(o1, obj);
try { if (Inst33 <= 1000 && typeof (TestInlineOneParam) != "undefined") {_RecordType("<2038,2056,59>",(TestInlineOneParam)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (o1.f) != "undefined") {_RecordType("<2064,2068,60>",(o1.f)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (o1) != "undefined") {_RecordType("<2064,2066,60>",(o1)); Inst35++; } } catch(e) {}
TestInlineOneParam({
  f: o1.f
}, {
  x: 42
});

try { if (Inst36 <= 1000 && typeof (TestInlineTwoParams) != "undefined") {_RecordType("<2096,2115,65>",(TestInlineTwoParams)); Inst36++; } } catch(e) {}
function TestInlineTwoParams(o, p) {
try { if (Inst37 <= 1000 && typeof (o) != "undefined") {_RecordType("<2116,2117,65>",(o)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (p) != "undefined") {_RecordType("<2119,2120,65>",(p)); Inst38++; } } catch(e) {}
  var y = 43; // Effect context.
try { if (Inst39 <= 1000 && typeof (y) != "undefined") {_RecordType("<2130,2131,66>",(y)); Inst39++; } } catch(e) {}

try { if (Inst40 <= 1000 && typeof (o.h) != "undefined") {_RecordType("<2160,2163,68>",(o.h)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (o) != "undefined") {_RecordType("<2160,2161,68>",(o)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (y) != "undefined") {_RecordType("<2164,2165,68>",(y)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (y) != "undefined") {_RecordType("<2167,2168,68>",(y)); Inst43++; } } catch(e) {}
  o.h(y, y); // Value context.

try { if (Inst45 <= 1000 && typeof (o.h) != "undefined") {_RecordType("<2200,2203,70>",(o.h)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (o) != "undefined") {_RecordType("<2200,2201,70>",(o)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (p) != "undefined") {_RecordType("<2204,2205,70>",(p)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (y) != "undefined") {_RecordType("<2207,2208,70>",(y)); Inst48++; } } catch(e) {}
  var x = o.h(p, y);
try { if (Inst44 <= 1000 && typeof (x) != "undefined") {_RecordType("<2196,2197,70>",(x)); Inst44++; } } catch(e) {}
  true;
try { if (Inst49 <= 1000 && typeof (x) != "undefined") {_RecordType("<2221,2222,72>",(x)); Inst49++; } } catch(e) {}
  x;
  false;
try { if (Inst50 <= 1000 && typeof (o.h) != "undefined") {_RecordType("<2235,2238,74>",(o.h)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (o) != "undefined") {_RecordType("<2235,2236,74>",(o)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (y) != "undefined") {_RecordType("<2239,2240,74>",(y)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (p) != "undefined") {_RecordType("<2242,2243,74>",(p)); Inst53++; } } catch(e) {}
  o.h(y, p);

  // Test context.
try { if (Inst54 <= 1000 && typeof (o.h) != "undefined") {_RecordType("<2273,2276,77>",(o.h)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (o) != "undefined") {_RecordType("<2273,2274,77>",(o)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (p) != "undefined") {_RecordType("<2277,2278,77>",(p)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (y) != "undefined") {_RecordType("<2280,2281,77>",(y)); Inst57++; } } catch(e) {}
  if (!o.h(p, y)) {
    false;
  } // Perform the same tests again, but this time with non-trivial
  // expressions as the parameters.
  // Effect context.


try { if (Inst58 <= 1000 && typeof (o.h) != "undefined") {_RecordType("<2426,2429,84>",(o.h)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (o) != "undefined") {_RecordType("<2426,2427,84>",(o)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (y) != "undefined") {_RecordType("<2430,2431,84>",(y)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (y) != "undefined") {_RecordType("<2437,2438,84>",(y)); Inst61++; } } catch(e) {}
  o.h(y + 1, y + 1); // Value context.

try { if (Inst63 <= 1000 && typeof (o.h) != "undefined") {_RecordType("<2474,2477,86>",(o.h)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (o) != "undefined") {_RecordType("<2474,2475,86>",(o)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (p) != "undefined") {_RecordType("<2478,2479,86>",(p)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (y) != "undefined") {_RecordType("<2485,2486,86>",(y)); Inst66++; } } catch(e) {}
  var x = o.h(p + 1, y + 1);
try { if (Inst62 <= 1000 && typeof (x) != "undefined") {_RecordType("<2470,2471,86>",(x)); Inst62++; } } catch(e) {}
  true;
try { if (Inst67 <= 1000 && typeof (x) != "undefined") {_RecordType("<2503,2504,88>",(x)); Inst67++; } } catch(e) {}
  x;
  false;
try { if (Inst68 <= 1000 && typeof (o.h) != "undefined") {_RecordType("<2517,2520,90>",(o.h)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (o) != "undefined") {_RecordType("<2517,2518,90>",(o)); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (y) != "undefined") {_RecordType("<2521,2522,90>",(y)); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (p) != "undefined") {_RecordType("<2528,2529,90>",(p)); Inst71++; } } catch(e) {}
  o.h(y + 1, p + 1);

  // Test context.
try { if (Inst72 <= 1000 && typeof (o.h) != "undefined") {_RecordType("<2563,2566,93>",(o.h)); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (o) != "undefined") {_RecordType("<2563,2564,93>",(o)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (p) != "undefined") {_RecordType("<2567,2568,93>",(p)); Inst74++; } } catch(e) {}try { if (Inst75 <= 1000 && typeof (y) != "undefined") {_RecordType("<2574,2575,93>",(y)); Inst75++; } } catch(e) {}
  if (!o.h(p + 1, y + 1)) {
    false;
  }
}

var o2 = {};
try { if (Inst76 <= 1000 && typeof (o2) != "undefined") {_RecordType("<2606,2608,98>",(o2)); Inst76++; } } catch(e) {}

o2.h = function (i, j) {
try { if (Inst79 <= 1000 && typeof (i) != "undefined") {_RecordType("<2633,2634,100>",(i)); Inst79++; } } catch(e) {}try { if (Inst80 <= 1000 && typeof (j) != "undefined") {_RecordType("<2636,2637,100>",(j)); Inst80++; } } catch(e) {}
try { if (Inst81 <= 1000 && typeof (i) != "undefined") {_RecordType("<2650,2651,101>",(i)); Inst81++; } } catch(e) {}try { if (Inst82 <= 1000 && typeof (j) != "undefined") {_RecordType("<2654,2655,101>",(j)); Inst82++; } } catch(e) {}
  return i < j;
};
try { if (Inst77 <= 1000 && typeof (o2.h) != "undefined") {_RecordType("<2616,2620,100>",(o2.h)); Inst77++; } } catch(e) {}try { if (Inst78 <= 1000 && typeof (o2) != "undefined") {_RecordType("<2616,2618,100>",(o2)); Inst78++; } } catch(e) {}

for (var i = 0; i < 5; i++) {
try { if (Inst83 <= 1000 && typeof (i) != "undefined") {_RecordType("<2670,2671,104>",(i)); Inst83++; } } catch(e) {}try { if (Inst84 <= 1000 && typeof (i) != "undefined") {_RecordType("<2677,2678,104>",(i)); Inst84++; } } catch(e) {}try { if (Inst85 <= 1000 && typeof (i) != "undefined") {_RecordType("<2684,2685,104>",(i)); Inst85++; } } catch(e) {}
try { if (Inst86 <= 1000 && typeof (TestInlineTwoParams) != "undefined") {_RecordType("<2693,2712,105>",(TestInlineTwoParams)); Inst86++; } } catch(e) {}try { if (Inst87 <= 1000 && typeof (o2) != "undefined") {_RecordType("<2713,2715,105>",(o2)); Inst87++; } } catch(e) {}
  TestInlineTwoParams(o2, 42);
}

try { if (Inst88 <= 1000 && typeof (TestInlineTwoParams) != "undefined") {_RecordType("<2725,2744,108>",(TestInlineTwoParams)); Inst88++; } } catch(e) {}try { if (Inst89 <= 1000 && typeof (o2) != "undefined") {_RecordType("<2745,2747,108>",(o2)); Inst89++; } } catch(e) {}
TestInlineTwoParams(o2, 42);
try { if (Inst90 <= 1000 && typeof (TestInlineTwoParams) != "undefined") {_RecordType("<2754,2773,109>",(TestInlineTwoParams)); Inst90++; } } catch(e) {}try { if (Inst91 <= 1000 && typeof (o2.h) != "undefined") {_RecordType("<2781,2785,110>",(o2.h)); Inst91++; } } catch(e) {}try { if (Inst92 <= 1000 && typeof (o2) != "undefined") {_RecordType("<2781,2783,110>",(o2)); Inst92++; } } catch(e) {}
TestInlineTwoParams({
  h: o2.h
}, 42);

