var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2015 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax --use-osr
try { if (Inst0 <= 1000 && typeof (foo) != "undefined") {_RecordType("<219,222,5>",(foo)); Inst0++; } } catch(e) {}
function foo(a) {
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<223,224,5>",(a)); Inst1++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (a) != "undefined") {_RecordType("<238,239,6>",(a)); Inst3++; } } catch(e) {}
  var i = a | 0;
try { if (Inst2 <= 1000 && typeof (i) != "undefined") {_RecordType("<234,235,6>",(i)); Inst2++; } } catch(e) {}

  while (true) {
try { if (Inst4 <= 1000 && typeof (i) != "undefined") {_RecordType("<271,272,9>",(i)); Inst4++; } } catch(e) {}
    if (i == 0) {
      i = 1;
try { if (Inst5 <= 1000 && typeof (i) != "undefined") {_RecordType("<287,288,10>",(i)); Inst5++; } } catch(e) {}
      continue;
    }

try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<325,326,14>",(i)); Inst6++; } } catch(e) {}
    if (i == 1) {
      i = 2;
try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<341,342,15>",(i)); Inst7++; } } catch(e) {}
      continue;
    }

try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<379,380,19>",(i)); Inst8++; } } catch(e) {}
    if (i == 2) {
      i = 3;
try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<395,396,20>",(i)); Inst9++; } } catch(e) {}
      continue;
    }

try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<433,434,24>",(i)); Inst10++; } } catch(e) {}
    if (i == 3) {
      i = 4;
try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<449,450,25>",(i)); Inst11++; } } catch(e) {}
      continue;
    }

try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<487,488,29>",(i)); Inst12++; } } catch(e) {}
    if (i == 4) {
      i = 5;
try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<503,504,30>",(i)); Inst13++; } } catch(e) {}
      continue;
    }

try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<541,542,34>",(i)); Inst14++; } } catch(e) {}
    if (i == 5) {
      i = 6;
try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<557,558,35>",(i)); Inst15++; } } catch(e) {}
      continue;
    }

try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<595,596,39>",(i)); Inst16++; } } catch(e) {}
    if (i == 6) {
      i = 7;
try { if (Inst17 <= 1000 && typeof (i) != "undefined") {_RecordType("<611,612,40>",(i)); Inst17++; } } catch(e) {}
      continue;
    }

try { if (Inst18 <= 1000 && typeof (i) != "undefined") {_RecordType("<649,650,44>",(i)); Inst18++; } } catch(e) {}
    if (i == 7) {
      i = 8;
try { if (Inst19 <= 1000 && typeof (i) != "undefined") {_RecordType("<665,666,45>",(i)); Inst19++; } } catch(e) {}
      continue;
    }

    break;
  }

try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<720,721,52>",(i)); Inst20++; } } catch(e) {}
  return i;
}

try { if (Inst21 <= 1000 && typeof (test) != "undefined") {_RecordType("<735,739,55>",(test)); Inst21++; } } catch(e) {}
function test(func, tv, fv) {
try { if (Inst22 <= 1000 && typeof (func) != "undefined") {_RecordType("<740,744,55>",(func)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (tv) != "undefined") {_RecordType("<746,748,55>",(tv)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (fv) != "undefined") {_RecordType("<750,752,55>",(fv)); Inst24++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (tv) != "undefined") {_RecordType("<758,760,56>",(tv)); Inst25++; } } catch(e) {}
  tv;
try { if (Inst26 <= 1000 && typeof (func) != "undefined") {_RecordType("<764,768,57>",(func)); Inst26++; } } catch(e) {}
  func(0);
try { if (Inst27 <= 1000 && typeof (tv) != "undefined") {_RecordType("<775,777,58>",(tv)); Inst27++; } } catch(e) {}
  tv;
try { if (Inst28 <= 1000 && typeof (func) != "undefined") {_RecordType("<781,785,59>",(func)); Inst28++; } } catch(e) {}
  func(0);
try { if (Inst29 <= 1000 && typeof (fv) != "undefined") {_RecordType("<792,794,60>",(fv)); Inst29++; } } catch(e) {}
  fv;
try { if (Inst30 <= 1000 && typeof (func) != "undefined") {_RecordType("<798,802,61>",(func)); Inst30++; } } catch(e) {}
  func(9);
try { if (Inst31 <= 1000 && typeof (fv) != "undefined") {_RecordType("<809,811,62>",(fv)); Inst31++; } } catch(e) {}
  fv;
try { if (Inst32 <= 1000 && typeof (func) != "undefined") {_RecordType("<815,819,63>",(func)); Inst32++; } } catch(e) {}
  func(9);
}

try { if (Inst33 <= 1000 && typeof (test) != "undefined") {_RecordType("<827,831,66>",(test)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (foo) != "undefined") {_RecordType("<832,835,66>",(foo)); Inst34++; } } catch(e) {}
test(foo, 10, 10);

