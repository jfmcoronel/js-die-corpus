var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2010 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// Flags: --allow-natives-syntax --use-osr
try { if (Inst0 <= 1000 && typeof (f1) != "undefined") {_RecordType("<1649,1651,28>",(f1)); Inst0++; } } catch(e) {}
function f1() {
  var sum = 0;
try { if (Inst1 <= 1000 && typeof (sum) != "undefined") {_RecordType("<1662,1665,29>",(sum)); Inst1++; } } catch(e) {}

  for (var i = 0; i < 1000; i++) {
try { if (Inst2 <= 1000 && typeof (i) != "undefined") {_RecordType("<1683,1684,31>",(i)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (i) != "undefined") {_RecordType("<1690,1691,31>",(i)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (i) != "undefined") {_RecordType("<1700,1701,31>",(i)); Inst4++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<1719,1720,32>",(i)); Inst6++; } } catch(e) {}
    var x = i + 2;
try { if (Inst5 <= 1000 && typeof (x) != "undefined") {_RecordType("<1715,1716,32>",(x)); Inst5++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (x) != "undefined") {_RecordType("<1738,1739,33>",(x)); Inst8++; } } catch(e) {}
    var y = x + 5;
try { if (Inst7 <= 1000 && typeof (y) != "undefined") {_RecordType("<1734,1735,33>",(y)); Inst7++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (y) != "undefined") {_RecordType("<1757,1758,34>",(y)); Inst10++; } } catch(e) {}
    var z = y + 3;
try { if (Inst9 <= 1000 && typeof (z) != "undefined") {_RecordType("<1753,1754,34>",(z)); Inst9++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (z) != "undefined") {_RecordType("<1775,1776,35>",(z)); Inst12++; } } catch(e) {}
    sum += z;
try { if (Inst11 <= 1000 && typeof (sum) != "undefined") {_RecordType("<1768,1771,35>",(sum)); Inst11++; } } catch(e) {}
  }

try { if (Inst13 <= 1000 && typeof (sum) != "undefined") {_RecordType("<1792,1795,38>",(sum)); Inst13++; } } catch(e) {}
  return sum;
}

try { if (Inst14 <= 1000 && typeof (f2) != "undefined") {_RecordType("<1809,1811,41>",(f2)); Inst14++; } } catch(e) {}
function f2() {
  var sum = 0;
try { if (Inst15 <= 1000 && typeof (sum) != "undefined") {_RecordType("<1822,1825,42>",(sum)); Inst15++; } } catch(e) {}

  for (var i = 0; i < 1000; i++) {
try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<1843,1844,44>",(i)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (i) != "undefined") {_RecordType("<1850,1851,44>",(i)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (i) != "undefined") {_RecordType("<1860,1861,44>",(i)); Inst18++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<1879,1880,45>",(i)); Inst20++; } } catch(e) {}
    var x = i + 2;
try { if (Inst19 <= 1000 && typeof (x) != "undefined") {_RecordType("<1875,1876,45>",(x)); Inst19++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (x) != "undefined") {_RecordType("<1898,1899,46>",(x)); Inst22++; } } catch(e) {}
    var y = x + 5;
try { if (Inst21 <= 1000 && typeof (y) != "undefined") {_RecordType("<1894,1895,46>",(y)); Inst21++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (y) != "undefined") {_RecordType("<1917,1918,47>",(y)); Inst24++; } } catch(e) {}
    var z = y + 3;
try { if (Inst23 <= 1000 && typeof (z) != "undefined") {_RecordType("<1913,1914,47>",(z)); Inst23++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (z) != "undefined") {_RecordType("<1935,1936,48>",(z)); Inst26++; } } catch(e) {}
    sum += z;
try { if (Inst25 <= 1000 && typeof (sum) != "undefined") {_RecordType("<1928,1931,48>",(sum)); Inst25++; } } catch(e) {}
  }

try { if (Inst27 <= 1000 && typeof (sum) != "undefined") {_RecordType("<1952,1955,51>",(sum)); Inst27++; } } catch(e) {}
  return sum;
}

try { if (Inst28 <= 1000 && typeof (f3) != "undefined") {_RecordType("<1969,1971,54>",(f3)); Inst28++; } } catch(e) {}
function f3() {
  var sum = 0;
try { if (Inst29 <= 1000 && typeof (sum) != "undefined") {_RecordType("<1982,1985,55>",(sum)); Inst29++; } } catch(e) {}

  for (var i = 0; i < 1000; i++) {
try { if (Inst30 <= 1000 && typeof (i) != "undefined") {_RecordType("<2003,2004,57>",(i)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (i) != "undefined") {_RecordType("<2010,2011,57>",(i)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (i) != "undefined") {_RecordType("<2020,2021,57>",(i)); Inst32++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof (i) != "undefined") {_RecordType("<2039,2040,58>",(i)); Inst34++; } } catch(e) {}
    var x = i + 2;
try { if (Inst33 <= 1000 && typeof (x) != "undefined") {_RecordType("<2035,2036,58>",(x)); Inst33++; } } catch(e) {}
try { if (Inst36 <= 1000 && typeof (x) != "undefined") {_RecordType("<2058,2059,59>",(x)); Inst36++; } } catch(e) {}
    var y = x + 5;
try { if (Inst35 <= 1000 && typeof (y) != "undefined") {_RecordType("<2054,2055,59>",(y)); Inst35++; } } catch(e) {}
try { if (Inst38 <= 1000 && typeof (y) != "undefined") {_RecordType("<2077,2078,60>",(y)); Inst38++; } } catch(e) {}
    var z = y + 3;
try { if (Inst37 <= 1000 && typeof (z) != "undefined") {_RecordType("<2073,2074,60>",(z)); Inst37++; } } catch(e) {}
try { if (Inst40 <= 1000 && typeof (z) != "undefined") {_RecordType("<2095,2096,61>",(z)); Inst40++; } } catch(e) {}
    sum += z;
try { if (Inst39 <= 1000 && typeof (sum) != "undefined") {_RecordType("<2088,2091,61>",(sum)); Inst39++; } } catch(e) {}
  }

try { if (Inst41 <= 1000 && typeof (sum) != "undefined") {_RecordType("<2112,2115,64>",(sum)); Inst41++; } } catch(e) {}
  return sum;
}

try { if (Inst42 <= 1000 && typeof (test1) != "undefined") {_RecordType("<2129,2134,67>",(test1)); Inst42++; } } catch(e) {}
function test1() {
  var j = 11;
try { if (Inst43 <= 1000 && typeof (j) != "undefined") {_RecordType("<2145,2146,68>",(j)); Inst43++; } } catch(e) {}

  for (var i = 0; i < 2; i++) {
try { if (Inst44 <= 1000 && typeof (i) != "undefined") {_RecordType("<2165,2166,70>",(i)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (i) != "undefined") {_RecordType("<2172,2173,70>",(i)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (i) != "undefined") {_RecordType("<2179,2180,70>",(i)); Inst46++; } } catch(e) {}
    509500;
try { if (Inst47 <= 1000 && typeof (f1) != "undefined") {_RecordType("<2202,2204,72>",(f1)); Inst47++; } } catch(e) {}
    f1();
  }
}

try { if (Inst48 <= 1000 && typeof (test2) != "undefined") {_RecordType("<2224,2229,76>",(test2)); Inst48++; } } catch(e) {}
function test2() {
  for (var i = 0; i < 2; i++) {
try { if (Inst49 <= 1000 && typeof (i) != "undefined") {_RecordType("<2245,2246,77>",(i)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (i) != "undefined") {_RecordType("<2252,2253,77>",(i)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (i) != "undefined") {_RecordType("<2259,2260,77>",(i)); Inst51++; } } catch(e) {}
    var j = 11,
        k = 12;
try { if (Inst52 <= 1000 && typeof (j) != "undefined") {_RecordType("<2274,2275,78>",(j)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (k) != "undefined") {_RecordType("<2290,2291,79>",(k)); Inst53++; } } catch(e) {}
    509500;
try { if (Inst54 <= 1000 && typeof (f2) != "undefined") {_RecordType("<2314,2316,81>",(f2)); Inst54++; } } catch(e) {}
    f2();
  }
}

try { if (Inst55 <= 1000 && typeof (test3) != "undefined") {_RecordType("<2336,2341,85>",(test3)); Inst55++; } } catch(e) {}
function test3() {
  for (var i = 0; i < 2; i++) {
try { if (Inst56 <= 1000 && typeof (i) != "undefined") {_RecordType("<2357,2358,86>",(i)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (i) != "undefined") {_RecordType("<2364,2365,86>",(i)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (i) != "undefined") {_RecordType("<2371,2372,86>",(i)); Inst58++; } } catch(e) {}
    var j = 11,
        k = 13,
        m = 14;
try { if (Inst59 <= 1000 && typeof (j) != "undefined") {_RecordType("<2386,2387,87>",(j)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (k) != "undefined") {_RecordType("<2402,2403,88>",(k)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (m) != "undefined") {_RecordType("<2418,2419,89>",(m)); Inst61++; } } catch(e) {}
    509500;
try { if (Inst62 <= 1000 && typeof (f3) != "undefined") {_RecordType("<2442,2444,91>",(f3)); Inst62++; } } catch(e) {}
    f3();
  }
}

try { if (Inst63 <= 1000 && typeof (test1) != "undefined") {_RecordType("<2455,2460,95>",(test1)); Inst63++; } } catch(e) {}
test1();
try { if (Inst64 <= 1000 && typeof (test2) != "undefined") {_RecordType("<2464,2469,96>",(test2)); Inst64++; } } catch(e) {}
test2();
try { if (Inst65 <= 1000 && typeof (test3) != "undefined") {_RecordType("<2473,2478,97>",(test3)); Inst65++; } } catch(e) {}
test3();

