var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2018 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax
(function () {
try { if (Inst1 <= 1000 && typeof (Promise.resolve) != "undefined") {_RecordType("<227,242,6>",(Promise.resolve)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Promise) != "undefined") {_RecordType("<227,234,6>",(Promise)); Inst2++; } } catch(e) {}
  const p = Promise.resolve(1);
try { if (Inst0 <= 1000 && typeof (p) != "undefined") {_RecordType("<223,224,6>",(p)); Inst0++; } } catch(e) {}

try { if (Inst3 <= 1000 && typeof (foo) != "undefined") {_RecordType("<259,262,8>",(foo)); Inst3++; } } catch(e) {}
  function foo(p) {
try { if (Inst4 <= 1000 && typeof (p) != "undefined") {_RecordType("<263,264,8>",(p)); Inst4++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (p.finally) != "undefined") {_RecordType("<279,288,9>",(p.finally)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (p) != "undefined") {_RecordType("<279,280,9>",(p)); Inst6++; } } catch(e) {}
    return p.finally();
  }

try { if (Inst7 <= 1000 && typeof (foo) != "undefined") {_RecordType("<299,302,12>",(foo)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (p) != "undefined") {_RecordType("<303,304,12>",(p)); Inst8++; } } catch(e) {}
  foo(p);
try { if (Inst9 <= 1000 && typeof (foo) != "undefined") {_RecordType("<309,312,13>",(foo)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (p) != "undefined") {_RecordType("<313,314,13>",(p)); Inst10++; } } catch(e) {}
  foo(p);
try { if (Inst11 <= 1000 && typeof (foo) != "undefined") {_RecordType("<319,322,14>",(foo)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (p) != "undefined") {_RecordType("<323,324,14>",(p)); Inst12++; } } catch(e) {}
  foo(p);
})();

(function () {
try { if (Inst14 <= 1000 && typeof (Promise.resolve) != "undefined") {_RecordType("<361,376,18>",(Promise.resolve)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Promise) != "undefined") {_RecordType("<361,368,18>",(Promise)); Inst15++; } } catch(e) {}
  const p = Promise.resolve(1);
try { if (Inst13 <= 1000 && typeof (p) != "undefined") {_RecordType("<357,358,18>",(p)); Inst13++; } } catch(e) {}

try { if (Inst16 <= 1000 && typeof (foo) != "undefined") {_RecordType("<393,396,20>",(foo)); Inst16++; } } catch(e) {}
  function foo(p) {
try { if (Inst17 <= 1000 && typeof (p) != "undefined") {_RecordType("<397,398,20>",(p)); Inst17++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (p.finally) != "undefined") {_RecordType("<413,422,21>",(p.finally)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (p) != "undefined") {_RecordType("<413,414,21>",(p)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (x) != "undefined") {_RecordType("<423,424,21>",(x)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (x) != "undefined") {_RecordType("<428,429,21>",(x)); Inst21++; } } catch(e) {}
    return p.finally(x => x);
  }

try { if (Inst22 <= 1000 && typeof (foo) != "undefined") {_RecordType("<439,442,24>",(foo)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (p) != "undefined") {_RecordType("<443,444,24>",(p)); Inst23++; } } catch(e) {}
  foo(p);
try { if (Inst24 <= 1000 && typeof (foo) != "undefined") {_RecordType("<449,452,25>",(foo)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (p) != "undefined") {_RecordType("<453,454,25>",(p)); Inst25++; } } catch(e) {}
  foo(p);
try { if (Inst26 <= 1000 && typeof (foo) != "undefined") {_RecordType("<459,462,26>",(foo)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (p) != "undefined") {_RecordType("<463,464,26>",(p)); Inst27++; } } catch(e) {}
  foo(p);
})();

(function () {
try { if (Inst29 <= 1000 && typeof (Promise.resolve) != "undefined") {_RecordType("<501,516,30>",(Promise.resolve)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (Promise) != "undefined") {_RecordType("<501,508,30>",(Promise)); Inst30++; } } catch(e) {}
  const p = Promise.resolve(1);
try { if (Inst28 <= 1000 && typeof (p) != "undefined") {_RecordType("<497,498,30>",(p)); Inst28++; } } catch(e) {}

try { if (Inst31 <= 1000 && typeof (foo) != "undefined") {_RecordType("<533,536,32>",(foo)); Inst31++; } } catch(e) {}
  function foo(p, f) {
try { if (Inst32 <= 1000 && typeof (p) != "undefined") {_RecordType("<537,538,32>",(p)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (f) != "undefined") {_RecordType("<540,541,32>",(f)); Inst33++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof (p.finally) != "undefined") {_RecordType("<556,565,33>",(p.finally)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (p) != "undefined") {_RecordType("<556,557,33>",(p)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (f) != "undefined") {_RecordType("<566,567,33>",(f)); Inst36++; } } catch(e) {}
    return p.finally(f);
  }

try { if (Inst37 <= 1000 && typeof (foo) != "undefined") {_RecordType("<577,580,36>",(foo)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (p) != "undefined") {_RecordType("<581,582,36>",(p)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (x) != "undefined") {_RecordType("<584,585,36>",(x)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (x) != "undefined") {_RecordType("<589,590,36>",(x)); Inst40++; } } catch(e) {}
  foo(p, x => x);
try { if (Inst41 <= 1000 && typeof (foo) != "undefined") {_RecordType("<595,598,37>",(foo)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (p) != "undefined") {_RecordType("<599,600,37>",(p)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (x) != "undefined") {_RecordType("<602,603,37>",(x)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (x) != "undefined") {_RecordType("<607,608,37>",(x)); Inst44++; } } catch(e) {}
  foo(p, x => x);
try { if (Inst45 <= 1000 && typeof (foo) != "undefined") {_RecordType("<613,616,38>",(foo)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (p) != "undefined") {_RecordType("<617,618,38>",(p)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (x) != "undefined") {_RecordType("<620,621,38>",(x)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (x) != "undefined") {_RecordType("<625,626,38>",(x)); Inst48++; } } catch(e) {}
  foo(p, x => x);
})();

(function () {
try { if (Inst50 <= 1000 && typeof (Promise.resolve) != "undefined") {_RecordType("<663,678,42>",(Promise.resolve)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (Promise) != "undefined") {_RecordType("<663,670,42>",(Promise)); Inst51++; } } catch(e) {}
  const p = Promise.resolve(1);
try { if (Inst49 <= 1000 && typeof (p) != "undefined") {_RecordType("<659,660,42>",(p)); Inst49++; } } catch(e) {}

try { if (Inst52 <= 1000 && typeof (foo) != "undefined") {_RecordType("<695,698,44>",(foo)); Inst52++; } } catch(e) {}
  function foo(p, f) {
try { if (Inst53 <= 1000 && typeof (p) != "undefined") {_RecordType("<699,700,44>",(p)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (f) != "undefined") {_RecordType("<702,703,44>",(f)); Inst54++; } } catch(e) {}
try { if (Inst55 <= 1000 && typeof (p.finally(f).finally) != "undefined") {_RecordType("<718,738,45>",(p.finally(f).finally)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (p.finally) != "undefined") {_RecordType("<718,727,45>",(p.finally)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (p) != "undefined") {_RecordType("<718,719,45>",(p)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (f) != "undefined") {_RecordType("<728,729,45>",(f)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (f) != "undefined") {_RecordType("<739,740,45>",(f)); Inst59++; } } catch(e) {}
    return p.finally(f).finally(f);
  }

try { if (Inst60 <= 1000 && typeof (foo) != "undefined") {_RecordType("<750,753,48>",(foo)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (p) != "undefined") {_RecordType("<754,755,48>",(p)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (x) != "undefined") {_RecordType("<757,758,48>",(x)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (x) != "undefined") {_RecordType("<762,763,48>",(x)); Inst63++; } } catch(e) {}
  foo(p, x => x);
try { if (Inst64 <= 1000 && typeof (foo) != "undefined") {_RecordType("<768,771,49>",(foo)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (p) != "undefined") {_RecordType("<772,773,49>",(p)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (x) != "undefined") {_RecordType("<775,776,49>",(x)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (x) != "undefined") {_RecordType("<780,781,49>",(x)); Inst67++; } } catch(e) {}
  foo(p, x => x);
try { if (Inst68 <= 1000 && typeof (foo) != "undefined") {_RecordType("<786,789,50>",(foo)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (p) != "undefined") {_RecordType("<790,791,50>",(p)); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (x) != "undefined") {_RecordType("<793,794,50>",(x)); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (x) != "undefined") {_RecordType("<798,799,50>",(x)); Inst71++; } } catch(e) {}
  foo(p, x => x);
})();

