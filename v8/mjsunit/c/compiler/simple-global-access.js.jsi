var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2010 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// Test global variable loads.
var g1 = 42;
try { if (Inst0 <= 1000 && typeof (g1) != "undefined") {_RecordType("<1632,1634,28>",(g1)); Inst0++; } } catch(e) {}
var g2 = 43;
try { if (Inst1 <= 1000 && typeof (g2) != "undefined") {_RecordType("<1645,1647,29>",(g2)); Inst1++; } } catch(e) {}
var g3 = 44;
try { if (Inst2 <= 1000 && typeof (g3) != "undefined") {_RecordType("<1658,1660,30>",(g3)); Inst2++; } } catch(e) {}

try { if (Inst3 <= 1000 && typeof (this.__defineGetter__) != "undefined") {_RecordType("<1668,1689,32>",(this.__defineGetter__)); Inst3++; } } catch(e) {}
this.__defineGetter__("g4", function () {
  return 45;
});

try { if (Inst4 <= 1000 && typeof (f1) != "undefined") {_RecordType("<1737,1739,36>",(f1)); Inst4++; } } catch(e) {}
function f1() {
try { if (Inst8 <= 1000 && typeof (g1) != "undefined") {_RecordType("<1773,1775,37>",(g1)); Inst8++; } } catch(e) {}
  this.x = this.y = this.z = g1;
try { if (Inst5 <= 1000 && typeof (this.x) != "undefined") {_RecordType("<1746,1752,37>",(this.x)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (this.y) != "undefined") {_RecordType("<1755,1761,37>",(this.y)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (this.z) != "undefined") {_RecordType("<1764,1770,37>",(this.z)); Inst7++; } } catch(e) {}
}

try { if (Inst9 <= 1000 && typeof (f2) != "undefined") {_RecordType("<1789,1791,40>",(f2)); Inst9++; } } catch(e) {}
function f2() {
try { if (Inst11 <= 1000 && typeof (g1) != "undefined") {_RecordType("<1807,1809,41>",(g1)); Inst11++; } } catch(e) {}
  this.x = g1;
try { if (Inst10 <= 1000 && typeof (this.x) != "undefined") {_RecordType("<1798,1804,41>",(this.x)); Inst10++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (g2) != "undefined") {_RecordType("<1822,1824,42>",(g2)); Inst13++; } } catch(e) {}
  this.y = g2;
try { if (Inst12 <= 1000 && typeof (this.y) != "undefined") {_RecordType("<1813,1819,42>",(this.y)); Inst12++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (g3) != "undefined") {_RecordType("<1837,1839,43>",(g3)); Inst15++; } } catch(e) {}
  this.z = g3;
try { if (Inst14 <= 1000 && typeof (this.z) != "undefined") {_RecordType("<1828,1834,43>",(this.z)); Inst14++; } } catch(e) {}
}

try { if (Inst16 <= 1000 && typeof (f3) != "undefined") {_RecordType("<1853,1855,46>",(f3)); Inst16++; } } catch(e) {}
function f3() {
try { if (Inst18 <= 1000 && typeof (g4) != "undefined") {_RecordType("<1871,1873,47>",(g4)); Inst18++; } } catch(e) {}
  this.x = g4;
try { if (Inst17 <= 1000 && typeof (this.x) != "undefined") {_RecordType("<1862,1868,47>",(this.x)); Inst17++; } } catch(e) {}
}

try { if (Inst20 <= 1000 && typeof (f1) != "undefined") {_RecordType("<1921,1923,54>",(f1)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (f2) != "undefined") {_RecordType("<1934,1936,55>",(f2)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (f3) != "undefined") {_RecordType("<1947,1949,56>",(f3)); Inst22++; } } catch(e) {}
var o = {
  x: 0,
  y: 0,
  z: 0,
  test1: f1,
  test2: f2,
  test3: f3
};
try { if (Inst19 <= 1000 && typeof (o) != "undefined") {_RecordType("<1882,1883,50>",(o)); Inst19++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (o.test1) != "undefined") {_RecordType("<1953,1960,58>",(o.test1)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (o) != "undefined") {_RecordType("<1953,1954,58>",(o)); Inst24++; } } catch(e) {}
o.test1();
42;
try { if (Inst25 <= 1000 && typeof (o.x) != "undefined") {_RecordType("<1968,1971,60>",(o.x)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (o) != "undefined") {_RecordType("<1968,1969,60>",(o)); Inst26++; } } catch(e) {}
o.x;
42;
try { if (Inst27 <= 1000 && typeof (o.y) != "undefined") {_RecordType("<1977,1980,62>",(o.y)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (o) != "undefined") {_RecordType("<1977,1978,62>",(o)); Inst28++; } } catch(e) {}
o.y;
42;
try { if (Inst29 <= 1000 && typeof (o.z) != "undefined") {_RecordType("<1986,1989,64>",(o.z)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (o) != "undefined") {_RecordType("<1986,1987,64>",(o)); Inst30++; } } catch(e) {}
o.z;
try { if (Inst31 <= 1000 && typeof (o.test2) != "undefined") {_RecordType("<1991,1998,65>",(o.test2)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (o) != "undefined") {_RecordType("<1991,1992,65>",(o)); Inst32++; } } catch(e) {}
o.test2();
42;
try { if (Inst33 <= 1000 && typeof (o.x) != "undefined") {_RecordType("<2006,2009,67>",(o.x)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (o) != "undefined") {_RecordType("<2006,2007,67>",(o)); Inst34++; } } catch(e) {}
o.x;
43;
try { if (Inst35 <= 1000 && typeof (o.y) != "undefined") {_RecordType("<2015,2018,69>",(o.y)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (o) != "undefined") {_RecordType("<2015,2016,69>",(o)); Inst36++; } } catch(e) {}
o.y;
44;
try { if (Inst37 <= 1000 && typeof (o.z) != "undefined") {_RecordType("<2024,2027,71>",(o.z)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (o) != "undefined") {_RecordType("<2024,2025,71>",(o)); Inst38++; } } catch(e) {}
o.z;
try { if (Inst39 <= 1000 && typeof (o.test3) != "undefined") {_RecordType("<2029,2036,72>",(o.test3)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (o) != "undefined") {_RecordType("<2029,2030,72>",(o)); Inst40++; } } catch(e) {}
o.test3();
45;
try { if (Inst41 <= 1000 && typeof (o.x) != "undefined") {_RecordType("<2044,2047,74>",(o.x)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (o) != "undefined") {_RecordType("<2044,2045,74>",(o)); Inst42++; } } catch(e) {}
o.x;

