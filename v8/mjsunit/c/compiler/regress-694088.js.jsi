var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2017 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
try { if (Inst0 <= 1000 && typeof (is_little_endian) != "undefined") {_RecordType("<176,192,4>",(is_little_endian)); Inst0++; } } catch(e) {}
function is_little_endian() {
try { if (Inst2 <= 1000 && typeof (ArrayBuffer) != "undefined") {_RecordType("<216,227,5>",(ArrayBuffer)); Inst2++; } } catch(e) {}
  var buffer = new ArrayBuffer(4);
try { if (Inst1 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<203,209,5>",(buffer)); Inst1++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (Int32Array) != "undefined") {_RecordType("<247,257,6>",(Int32Array)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<258,264,6>",(buffer)); Inst5++; } } catch(e) {}
  HEAP32 = new Int32Array(buffer);
try { if (Inst3 <= 1000 && typeof (HEAP32) != "undefined") {_RecordType("<234,240,6>",(HEAP32)); Inst3++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (Uint8Array) != "undefined") {_RecordType("<282,292,7>",(Uint8Array)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<293,299,7>",(buffer)); Inst8++; } } catch(e) {}
  HEAPU8 = new Uint8Array(buffer);
try { if (Inst6 <= 1000 && typeof (HEAPU8) != "undefined") {_RecordType("<269,275,7>",(HEAPU8)); Inst6++; } } catch(e) {}
  HEAP32[0] = 255;
try { if (Inst9 <= 1000 && typeof (HEAP32[0]) != "undefined") {_RecordType("<304,313,8>",(HEAP32[0])); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (HEAP32) != "undefined") {_RecordType("<304,310,8>",(HEAP32)); Inst10++; } } catch(e) {}

try { if (Inst11 <= 1000 && typeof (HEAPU8[0]) != "undefined") {_RecordType("<328,337,10>",(HEAPU8[0])); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (HEAPU8) != "undefined") {_RecordType("<328,334,10>",(HEAPU8)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (HEAPU8[3]) != "undefined") {_RecordType("<349,358,10>",(HEAPU8[3])); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (HEAPU8) != "undefined") {_RecordType("<349,355,10>",(HEAPU8)); Inst14++; } } catch(e) {}
  if (HEAPU8[0] === 255 && HEAPU8[3] === 0) {
    return true;
  } else {
    return false;
  }
}

(function () {
try { if (Inst16 <= 1000 && typeof (ArrayBuffer) != "undefined") {_RecordType("<455,466,18>",(ArrayBuffer)); Inst16++; } } catch(e) {}
  var buffer = new ArrayBuffer(8);
try { if (Inst15 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<442,448,18>",(buffer)); Inst15++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (Int32Array) != "undefined") {_RecordType("<487,497,19>",(Int32Array)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<498,504,19>",(buffer)); Inst19++; } } catch(e) {}
  var i32 = new Int32Array(buffer);
try { if (Inst17 <= 1000 && typeof (i32) != "undefined") {_RecordType("<477,480,19>",(i32)); Inst17++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (Float64Array) != "undefined") {_RecordType("<523,535,20>",(Float64Array)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<536,542,20>",(buffer)); Inst22++; } } catch(e) {}
  var f64 = new Float64Array(buffer);
try { if (Inst20 <= 1000 && typeof (f64) != "undefined") {_RecordType("<513,516,20>",(f64)); Inst20++; } } catch(e) {}

try { if (Inst23 <= 1000 && typeof (foo) != "undefined") {_RecordType("<557,560,22>",(foo)); Inst23++; } } catch(e) {}
  function foo() {
    f64[0] = 1;
try { if (Inst24 <= 1000 && typeof (f64[0]) != "undefined") {_RecordType("<569,575,23>",(f64[0])); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (f64) != "undefined") {_RecordType("<569,572,23>",(f64)); Inst25++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (f64[0]) != "undefined") {_RecordType("<593,599,24>",(f64[0])); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (f64) != "undefined") {_RecordType("<593,596,24>",(f64)); Inst28++; } } catch(e) {}
    var x = f64[0];
try { if (Inst26 <= 1000 && typeof (x) != "undefined") {_RecordType("<589,590,24>",(x)); Inst26++; } } catch(e) {}

try { if (Inst29 <= 1000 && typeof (is_little_endian) != "undefined") {_RecordType("<610,626,26>",(is_little_endian)); Inst29++; } } catch(e) {}
    if (is_little_endian()) {
try { if (Inst30 <= 1000 && typeof (i32[0]) != "undefined") {_RecordType("<645,651,27>",(i32[0])); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (i32) != "undefined") {_RecordType("<645,648,27>",(i32)); Inst31++; } } catch(e) {}
      return i32[0];
    } else {
try { if (Inst32 <= 1000 && typeof (i32[1]) != "undefined") {_RecordType("<679,685,29>",(i32[1])); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (i32) != "undefined") {_RecordType("<679,682,29>",(i32)); Inst33++; } } catch(e) {}
      return i32[1];
    }
  }

  0;
try { if (Inst34 <= 1000 && typeof (foo) != "undefined") {_RecordType("<705,708,34>",(foo)); Inst34++; } } catch(e) {}
  foo();
})();

(function () {
try { if (Inst36 <= 1000 && typeof (ArrayBuffer) != "undefined") {_RecordType("<753,764,38>",(ArrayBuffer)); Inst36++; } } catch(e) {}
  var buffer = new ArrayBuffer(8);
try { if (Inst35 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<740,746,38>",(buffer)); Inst35++; } } catch(e) {}
try { if (Inst38 <= 1000 && typeof (Int16Array) != "undefined") {_RecordType("<785,795,39>",(Int16Array)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<796,802,39>",(buffer)); Inst39++; } } catch(e) {}
  var i16 = new Int16Array(buffer);
try { if (Inst37 <= 1000 && typeof (i16) != "undefined") {_RecordType("<775,778,39>",(i16)); Inst37++; } } catch(e) {}
try { if (Inst41 <= 1000 && typeof (Int32Array) != "undefined") {_RecordType("<821,831,40>",(Int32Array)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<832,838,40>",(buffer)); Inst42++; } } catch(e) {}
  var i32 = new Int32Array(buffer);
try { if (Inst40 <= 1000 && typeof (i32) != "undefined") {_RecordType("<811,814,40>",(i32)); Inst40++; } } catch(e) {}

try { if (Inst43 <= 1000 && typeof (foo) != "undefined") {_RecordType("<853,856,42>",(foo)); Inst43++; } } catch(e) {}
  function foo() {
    i32[0] = 0x20001;
try { if (Inst44 <= 1000 && typeof (i32[0]) != "undefined") {_RecordType("<865,871,43>",(i32[0])); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (i32) != "undefined") {_RecordType("<865,868,43>",(i32)); Inst45++; } } catch(e) {}
try { if (Inst47 <= 1000 && typeof (i32[0]) != "undefined") {_RecordType("<895,901,44>",(i32[0])); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (i32) != "undefined") {_RecordType("<895,898,44>",(i32)); Inst48++; } } catch(e) {}
    var x = i32[0];
try { if (Inst46 <= 1000 && typeof (x) != "undefined") {_RecordType("<891,892,44>",(x)); Inst46++; } } catch(e) {}

try { if (Inst49 <= 1000 && typeof (is_little_endian) != "undefined") {_RecordType("<912,928,46>",(is_little_endian)); Inst49++; } } catch(e) {}
    if (is_little_endian()) {
try { if (Inst50 <= 1000 && typeof (i16[0]) != "undefined") {_RecordType("<947,953,47>",(i16[0])); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (i16) != "undefined") {_RecordType("<947,950,47>",(i16)); Inst51++; } } catch(e) {}
      return i16[0];
    } else {
try { if (Inst52 <= 1000 && typeof (i16[1]) != "undefined") {_RecordType("<981,987,49>",(i16[1])); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (i16) != "undefined") {_RecordType("<981,984,49>",(i16)); Inst53++; } } catch(e) {}
      return i16[1];
    }
  }

  1;
try { if (Inst54 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1007,1010,54>",(foo)); Inst54++; } } catch(e) {}
  foo();
})();

