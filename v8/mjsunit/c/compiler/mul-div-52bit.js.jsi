var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2015 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax
try { if (Inst0 <= 1000 && typeof (mul) != "undefined") {_RecordType("<209,212,5>",(mul)); Inst0++; } } catch(e) {}
function mul(a, b) {
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<213,214,5>",(a)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (b) != "undefined") {_RecordType("<216,217,5>",(b)); Inst2++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (a) != "undefined") {_RecordType("<233,234,6>",(a)); Inst4++; } } catch(e) {}
  const l = a & 0x3ffffff;
try { if (Inst3 <= 1000 && typeof (l) != "undefined") {_RecordType("<229,230,6>",(l)); Inst3++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (b) != "undefined") {_RecordType("<260,261,7>",(b)); Inst6++; } } catch(e) {}
  const h = b & 0x3ffffff;
try { if (Inst5 <= 1000 && typeof (h) != "undefined") {_RecordType("<256,257,7>",(h)); Inst5++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (l) != "undefined") {_RecordType("<284,285,8>",(l)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (h) != "undefined") {_RecordType("<288,289,8>",(h)); Inst8++; } } catch(e) {}
  return l * h >>> 0;
}

try { if (Inst9 <= 1000 && typeof (mulAndDiv) != "undefined") {_RecordType("<309,318,11>",(mulAndDiv)); Inst9++; } } catch(e) {}
function mulAndDiv(a, b) {
try { if (Inst10 <= 1000 && typeof (a) != "undefined") {_RecordType("<319,320,11>",(a)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (b) != "undefined") {_RecordType("<322,323,11>",(b)); Inst11++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (a) != "undefined") {_RecordType("<339,340,12>",(a)); Inst13++; } } catch(e) {}
  const l = a & 0x3ffffff;
try { if (Inst12 <= 1000 && typeof (l) != "undefined") {_RecordType("<335,336,12>",(l)); Inst12++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (b) != "undefined") {_RecordType("<366,367,13>",(b)); Inst15++; } } catch(e) {}
  const h = b & 0x3ffffff;
try { if (Inst14 <= 1000 && typeof (h) != "undefined") {_RecordType("<362,363,13>",(h)); Inst14++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (l) != "undefined") {_RecordType("<393,394,14>",(l)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (h) != "undefined") {_RecordType("<397,398,14>",(h)); Inst18++; } } catch(e) {}
  const m = l * h;
try { if (Inst16 <= 1000 && typeof (m) != "undefined") {_RecordType("<389,390,14>",(m)); Inst16++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (m) != "undefined") {_RecordType("<413,414,15>",(m)); Inst20++; } } catch(e) {}
  const rl = m & 0x3ffffff;
try { if (Inst19 <= 1000 && typeof (rl) != "undefined") {_RecordType("<408,410,15>",(rl)); Inst19++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (m) != "undefined") {_RecordType("<441,442,16>",(m)); Inst22++; } } catch(e) {}
  const rh = m / 0x4000000 >>> 0;
try { if (Inst21 <= 1000 && typeof (rh) != "undefined") {_RecordType("<436,438,16>",(rh)); Inst21++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (rl) != "undefined") {_RecordType("<471,473,17>",(rl)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (rh) != "undefined") {_RecordType("<476,478,17>",(rh)); Inst24++; } } catch(e) {}
  return rl | rh;
}

try { if (Inst25 <= 1000 && typeof (overflowMul) != "undefined") {_RecordType("<492,503,20>",(overflowMul)); Inst25++; } } catch(e) {}
function overflowMul(a, b) {
try { if (Inst26 <= 1000 && typeof (a) != "undefined") {_RecordType("<504,505,20>",(a)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (b) != "undefined") {_RecordType("<507,508,20>",(b)); Inst27++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (a) != "undefined") {_RecordType("<524,525,21>",(a)); Inst29++; } } catch(e) {}
  const l = a | 0;
try { if (Inst28 <= 1000 && typeof (l) != "undefined") {_RecordType("<520,521,21>",(l)); Inst28++; } } catch(e) {}
try { if (Inst31 <= 1000 && typeof (b) != "undefined") {_RecordType("<543,544,22>",(b)); Inst31++; } } catch(e) {}
  const h = b | 0;
try { if (Inst30 <= 1000 && typeof (h) != "undefined") {_RecordType("<539,540,22>",(h)); Inst30++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (l) != "undefined") {_RecordType("<559,560,23>",(l)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (h) != "undefined") {_RecordType("<563,564,23>",(h)); Inst33++; } } catch(e) {}
  return l * h >>> 0;
}

try { if (Inst34 <= 1000 && typeof (overflowDiv) != "undefined") {_RecordType("<584,595,26>",(overflowDiv)); Inst34++; } } catch(e) {}
function overflowDiv(a, b) {
try { if (Inst35 <= 1000 && typeof (a) != "undefined") {_RecordType("<596,597,26>",(a)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (b) != "undefined") {_RecordType("<599,600,26>",(b)); Inst36++; } } catch(e) {}
try { if (Inst38 <= 1000 && typeof (a) != "undefined") {_RecordType("<616,617,27>",(a)); Inst38++; } } catch(e) {}
  const l = a & 0x3ffffff;
try { if (Inst37 <= 1000 && typeof (l) != "undefined") {_RecordType("<612,613,27>",(l)); Inst37++; } } catch(e) {}
try { if (Inst40 <= 1000 && typeof (b) != "undefined") {_RecordType("<643,644,28>",(b)); Inst40++; } } catch(e) {}
  const h = b & 0x3ffffff;
try { if (Inst39 <= 1000 && typeof (h) != "undefined") {_RecordType("<639,640,28>",(h)); Inst39++; } } catch(e) {}
try { if (Inst42 <= 1000 && typeof (l) != "undefined") {_RecordType("<670,671,29>",(l)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (h) != "undefined") {_RecordType("<674,675,29>",(h)); Inst43++; } } catch(e) {}
  const m = l * h;
try { if (Inst41 <= 1000 && typeof (m) != "undefined") {_RecordType("<666,667,29>",(m)); Inst41++; } } catch(e) {}
try { if (Inst44 <= 1000 && typeof (m) != "undefined") {_RecordType("<686,687,30>",(m)); Inst44++; } } catch(e) {}
  return m / 0x10 >>> 0;
}

try { if (Inst45 <= 1000 && typeof (nonPowerOfTwoDiv) != "undefined") {_RecordType("<714,730,33>",(nonPowerOfTwoDiv)); Inst45++; } } catch(e) {}
function nonPowerOfTwoDiv(a, b) {
try { if (Inst46 <= 1000 && typeof (a) != "undefined") {_RecordType("<731,732,33>",(a)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (b) != "undefined") {_RecordType("<734,735,33>",(b)); Inst47++; } } catch(e) {}
try { if (Inst49 <= 1000 && typeof (a) != "undefined") {_RecordType("<751,752,34>",(a)); Inst49++; } } catch(e) {}
  const l = a & 0x3ffffff;
try { if (Inst48 <= 1000 && typeof (l) != "undefined") {_RecordType("<747,748,34>",(l)); Inst48++; } } catch(e) {}
try { if (Inst51 <= 1000 && typeof (b) != "undefined") {_RecordType("<778,779,35>",(b)); Inst51++; } } catch(e) {}
  const h = b & 0x3ffffff;
try { if (Inst50 <= 1000 && typeof (h) != "undefined") {_RecordType("<774,775,35>",(h)); Inst50++; } } catch(e) {}
try { if (Inst53 <= 1000 && typeof (l) != "undefined") {_RecordType("<805,806,36>",(l)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (h) != "undefined") {_RecordType("<809,810,36>",(h)); Inst54++; } } catch(e) {}
  const m = l * h;
try { if (Inst52 <= 1000 && typeof (m) != "undefined") {_RecordType("<801,802,36>",(m)); Inst52++; } } catch(e) {}
try { if (Inst55 <= 1000 && typeof (m) != "undefined") {_RecordType("<821,822,37>",(m)); Inst55++; } } catch(e) {}
  return m / 0x4000001 >>> 0;
}

try { if (Inst56 <= 1000 && typeof (test) != "undefined") {_RecordType("<854,858,40>",(test)); Inst56++; } } catch(e) {}
function test(fn, a, b, sets) {
try { if (Inst57 <= 1000 && typeof (fn) != "undefined") {_RecordType("<859,861,40>",(fn)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (a) != "undefined") {_RecordType("<863,864,40>",(a)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (b) != "undefined") {_RecordType("<866,867,40>",(b)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (sets) != "undefined") {_RecordType("<869,873,40>",(sets)); Inst60++; } } catch(e) {}
try { if (Inst62 <= 1000 && typeof (fn) != "undefined") {_RecordType("<896,898,41>",(fn)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (a) != "undefined") {_RecordType("<899,900,41>",(a)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (b) != "undefined") {_RecordType("<902,903,41>",(b)); Inst64++; } } catch(e) {}
  const expected = fn(a, b);
try { if (Inst61 <= 1000 && typeof (expected) != "undefined") {_RecordType("<885,893,41>",(expected)); Inst61++; } } catch(e) {}
try { if (Inst65 <= 1000 && typeof (fn) != "undefined") {_RecordType("<908,910,42>",(fn)); Inst65++; } } catch(e) {}
  fn(1, 2);
try { if (Inst66 <= 1000 && typeof (fn) != "undefined") {_RecordType("<920,922,43>",(fn)); Inst66++; } } catch(e) {}
  fn(0, 0);
try { if (Inst68 <= 1000 && typeof (fn) != "undefined") {_RecordType("<947,949,44>",(fn)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (a) != "undefined") {_RecordType("<950,951,44>",(a)); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (b) != "undefined") {_RecordType("<953,954,44>",(b)); Inst70++; } } catch(e) {}
  const actual = fn(a, b);
try { if (Inst67 <= 1000 && typeof (actual) != "undefined") {_RecordType("<938,944,44>",(actual)); Inst67++; } } catch(e) {}
try { if (Inst71 <= 1000 && typeof (expected) != "undefined") {_RecordType("<959,967,45>",(expected)); Inst71++; } } catch(e) {}
  expected;
try { if (Inst72 <= 1000 && typeof (actual) != "undefined") {_RecordType("<971,977,46>",(actual)); Inst72++; } } catch(e) {}
  actual;
try { if (Inst73 <= 1000 && typeof (sets.forEach) != "undefined") {_RecordType("<981,993,47>",(sets.forEach)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (sets) != "undefined") {_RecordType("<981,985,47>",(sets)); Inst74++; } } catch(e) {}
  sets.forEach(function (set, i) {
try { if (Inst75 <= 1000 && typeof (set) != "undefined") {_RecordType("<1004,1007,47>",(set)); Inst75++; } } catch(e) {}try { if (Inst76 <= 1000 && typeof (i) != "undefined") {_RecordType("<1009,1010,47>",(i)); Inst76++; } } catch(e) {}
try { if (Inst77 <= 1000 && typeof (set.expected) != "undefined") {_RecordType("<1018,1030,48>",(set.expected)); Inst77++; } } catch(e) {}try { if (Inst78 <= 1000 && typeof (set) != "undefined") {_RecordType("<1018,1021,48>",(set)); Inst78++; } } catch(e) {}
    set.expected;
try { if (Inst79 <= 1000 && typeof (fn) != "undefined") {_RecordType("<1036,1038,49>",(fn)); Inst79++; } } catch(e) {}try { if (Inst80 <= 1000 && typeof (set.a) != "undefined") {_RecordType("<1039,1044,49>",(set.a)); Inst80++; } } catch(e) {}try { if (Inst81 <= 1000 && typeof (set) != "undefined") {_RecordType("<1039,1042,49>",(set)); Inst81++; } } catch(e) {}try { if (Inst82 <= 1000 && typeof (set.b) != "undefined") {_RecordType("<1046,1051,49>",(set.b)); Inst82++; } } catch(e) {}try { if (Inst83 <= 1000 && typeof (set) != "undefined") {_RecordType("<1046,1049,49>",(set)); Inst83++; } } catch(e) {}
    fn(set.a, set.b);
try { if (Inst84 <= 1000 && typeof (fn.name) != "undefined") {_RecordType("<1058,1065,50>",(fn.name)); Inst84++; } } catch(e) {}try { if (Inst85 <= 1000 && typeof (fn) != "undefined") {_RecordType("<1058,1060,50>",(fn)); Inst85++; } } catch(e) {}try { if (Inst86 <= 1000 && typeof (i) != "undefined") {_RecordType("<1080,1081,50>",(i)); Inst86++; } } catch(e) {}
    fn.name + ', set #' + i;
  });
}

try { if (Inst87 <= 1000 && typeof (test) != "undefined") {_RecordType("<1092,1096,54>",(test)); Inst87++; } } catch(e) {}try { if (Inst88 <= 1000 && typeof (mul) != "undefined") {_RecordType("<1097,1100,54>",(mul)); Inst88++; } } catch(e) {}
test(mul, 0x3ffffff, 0x3ffffff, [{
  a: 0,
  b: 0,
  expected: 0
}, {
  a: 0xdead,
  b: 0xbeef,
  expected: 0xa6144983
}, {
  a: 0x1aa1dea,
  b: 0x2badead,
  expected: 0x35eb2322
}]);
try { if (Inst89 <= 1000 && typeof (test) != "undefined") {_RecordType("<1276,1280,67>",(test)); Inst89++; } } catch(e) {}try { if (Inst90 <= 1000 && typeof (mulAndDiv) != "undefined") {_RecordType("<1281,1290,67>",(mulAndDiv)); Inst90++; } } catch(e) {}
test(mulAndDiv, 0x3ffffff, 0x3ffffff, [{
  a: 0,
  b: 0,
  expected: 0
}, {
  a: 0xdead,
  b: 0xbeef,
  expected: 0x21449ab
}, {
  a: 0x1aa1dea,
  b: 0x2badead,
  expected: 0x1ebf32f
}]);
try { if (Inst91 <= 1000 && typeof (test) != "undefined") {_RecordType("<1464,1468,80>",(test)); Inst91++; } } catch(e) {}try { if (Inst92 <= 1000 && typeof (overflowMul) != "undefined") {_RecordType("<1469,1480,80>",(overflowMul)); Inst92++; } } catch(e) {}
test(overflowMul, 0x4ffffff, 0x4ffffff, [{
  a: 0,
  b: 0,
  expected: 0
}, {
  a: 0xdead,
  b: 0xbeef,
  expected: 0xa6144983
}, {
  a: 0x1aa1dea,
  b: 0x2badead,
  expected: 0x35eb2322
}]);
try { if (Inst93 <= 1000 && typeof (test) != "undefined") {_RecordType("<1656,1660,93>",(test)); Inst93++; } } catch(e) {}try { if (Inst94 <= 1000 && typeof (overflowDiv) != "undefined") {_RecordType("<1661,1672,93>",(overflowDiv)); Inst94++; } } catch(e) {}
test(overflowDiv, 0x3ffffff, 0x3ffffff, [{
  a: 0,
  b: 0,
  expected: 0
}, {
  a: 0xdead,
  b: 0xbeef,
  expected: 0xa614498
}, {
  a: 0x1aa1dea,
  b: 0x2badead,
  expected: 0x835eb232
}]);
try { if (Inst95 <= 1000 && typeof (test) != "undefined") {_RecordType("<1847,1851,106>",(test)); Inst95++; } } catch(e) {}try { if (Inst96 <= 1000 && typeof (nonPowerOfTwoDiv) != "undefined") {_RecordType("<1852,1868,106>",(nonPowerOfTwoDiv)); Inst96++; } } catch(e) {}
test(nonPowerOfTwoDiv, 0x3ffffff, 0x3ffffff, [{
  a: 0,
  b: 0,
  expected: 0
}, {
  a: 0xdead,
  b: 0xbeef,
  expected: 0x29
}, {
  a: 0x1aa1dea,
  b: 0x2badead,
  expected: 0x122d20d
}]);

