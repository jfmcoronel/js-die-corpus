var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2018 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax
(function () {
  var resolve, value;
try { if (Inst0 <= 1000 && typeof (resolve) != "undefined") {_RecordType("<221,228,6>",(resolve)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (value) != "undefined") {_RecordType("<230,235,6>",(value)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (new Promise(r => resolve = r).then) != "undefined") {_RecordType("<239,273,7>",(new Promise(r => resolve = r).then)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Promise) != "undefined") {_RecordType("<243,250,7>",(Promise)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (r) != "undefined") {_RecordType("<251,252,7>",(r)); Inst4++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (r) != "undefined") {_RecordType("<266,267,7>",(r)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (v) != "undefined") {_RecordType("<274,275,7>",(v)); Inst7++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (v) != "undefined") {_RecordType("<287,288,7>",(v)); Inst9++; } } catch(e) {}
  new Promise(r => resolve = r).then(v => value = v);
try { if (Inst5 <= 1000 && typeof (resolve) != "undefined") {_RecordType("<256,263,7>",(resolve)); Inst5++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (value) != "undefined") {_RecordType("<279,284,7>",(value)); Inst8++; } } catch(e) {}

try { if (Inst10 <= 1000 && typeof (foo) != "undefined") {_RecordType("<303,306,9>",(foo)); Inst10++; } } catch(e) {}
  function foo() {
try { if (Inst11 <= 1000 && typeof (resolve) != "undefined") {_RecordType("<315,322,10>",(resolve)); Inst11++; } } catch(e) {}
    resolve(1);
  }

try { if (Inst12 <= 1000 && typeof (foo) != "undefined") {_RecordType("<334,337,13>",(foo)); Inst12++; } } catch(e) {}
  foo();
try { if (Inst13 <= 1000 && typeof (foo) != "undefined") {_RecordType("<343,346,14>",(foo)); Inst13++; } } catch(e) {}
  foo();
try { if (Inst14 <= 1000 && typeof (foo) != "undefined") {_RecordType("<352,355,15>",(foo)); Inst14++; } } catch(e) {}
  foo();
})();

(function () {
  var reject, value;
try { if (Inst15 <= 1000 && typeof (reject) != "undefined") {_RecordType("<387,393,19>",(reject)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (value) != "undefined") {_RecordType("<395,400,19>",(value)); Inst16++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (new Promise((_, r) => reject = r).catch) != "undefined") {_RecordType("<404,443,20>",(new Promise((_, r) => reject = r).catch)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Promise) != "undefined") {_RecordType("<408,415,20>",(Promise)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (_) != "undefined") {_RecordType("<417,418,20>",(_)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (r) != "undefined") {_RecordType("<420,421,20>",(r)); Inst20++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (r) != "undefined") {_RecordType("<435,436,20>",(r)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (v) != "undefined") {_RecordType("<444,445,20>",(v)); Inst23++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (v) != "undefined") {_RecordType("<457,458,20>",(v)); Inst25++; } } catch(e) {}
  new Promise((_, r) => reject = r).catch(v => value = v);
try { if (Inst21 <= 1000 && typeof (reject) != "undefined") {_RecordType("<426,432,20>",(reject)); Inst21++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (value) != "undefined") {_RecordType("<449,454,20>",(value)); Inst24++; } } catch(e) {}

try { if (Inst26 <= 1000 && typeof (foo) != "undefined") {_RecordType("<473,476,22>",(foo)); Inst26++; } } catch(e) {}
  function foo() {
try { if (Inst27 <= 1000 && typeof (reject) != "undefined") {_RecordType("<485,491,23>",(reject)); Inst27++; } } catch(e) {}
    reject(1);
  }

try { if (Inst28 <= 1000 && typeof (foo) != "undefined") {_RecordType("<503,506,26>",(foo)); Inst28++; } } catch(e) {}
  foo();
try { if (Inst29 <= 1000 && typeof (foo) != "undefined") {_RecordType("<512,515,27>",(foo)); Inst29++; } } catch(e) {}
  foo();
try { if (Inst30 <= 1000 && typeof (foo) != "undefined") {_RecordType("<521,524,28>",(foo)); Inst30++; } } catch(e) {}
  foo();
})();

(function () {
  var value;
try { if (Inst31 <= 1000 && typeof (value) != "undefined") {_RecordType("<556,561,32>",(value)); Inst31++; } } catch(e) {}

try { if (Inst32 <= 1000 && typeof (foo) != "undefined") {_RecordType("<575,578,34>",(foo)); Inst32++; } } catch(e) {}
  function foo(x) {
try { if (Inst33 <= 1000 && typeof (x) != "undefined") {_RecordType("<579,580,34>",(x)); Inst33++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof (Promise) != "undefined") {_RecordType("<599,606,35>",(Promise)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (resolve) != "undefined") {_RecordType("<608,615,35>",(resolve)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (reject) != "undefined") {_RecordType("<617,623,35>",(reject)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (resolve) != "undefined") {_RecordType("<628,635,35>",(resolve)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (x) != "undefined") {_RecordType("<636,637,35>",(x)); Inst38++; } } catch(e) {}
    return new Promise((resolve, reject) => resolve(x));
  }

try { if (Inst39 <= 1000 && typeof (foo) != "undefined") {_RecordType("<648,651,38>",(foo)); Inst39++; } } catch(e) {}
  foo(1);
try { if (Inst40 <= 1000 && typeof (foo) != "undefined") {_RecordType("<658,661,39>",(foo)); Inst40++; } } catch(e) {}
  foo(1);
try { if (Inst41 <= 1000 && typeof (foo(1).then) != "undefined") {_RecordType("<668,679,40>",(foo(1).then)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (foo) != "undefined") {_RecordType("<668,671,40>",(foo)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (v) != "undefined") {_RecordType("<680,681,40>",(v)); Inst43++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (v) != "undefined") {_RecordType("<693,694,40>",(v)); Inst45++; } } catch(e) {}
  foo(1).then(v => value = v);
try { if (Inst44 <= 1000 && typeof (value) != "undefined") {_RecordType("<685,690,40>",(value)); Inst44++; } } catch(e) {}
})();

(function () {
  var value;
try { if (Inst46 <= 1000 && typeof (value) != "undefined") {_RecordType("<725,730,44>",(value)); Inst46++; } } catch(e) {}

try { if (Inst47 <= 1000 && typeof (foo) != "undefined") {_RecordType("<744,747,46>",(foo)); Inst47++; } } catch(e) {}
  function foo(x) {
try { if (Inst48 <= 1000 && typeof (x) != "undefined") {_RecordType("<748,749,46>",(x)); Inst48++; } } catch(e) {}
try { if (Inst49 <= 1000 && typeof (Promise) != "undefined") {_RecordType("<768,775,47>",(Promise)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (resolve) != "undefined") {_RecordType("<777,784,47>",(resolve)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (reject) != "undefined") {_RecordType("<786,792,47>",(reject)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (reject) != "undefined") {_RecordType("<797,803,47>",(reject)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (x) != "undefined") {_RecordType("<804,805,47>",(x)); Inst53++; } } catch(e) {}
    return new Promise((resolve, reject) => reject(x));
  }

try { if (Inst54 <= 1000 && typeof (foo) != "undefined") {_RecordType("<816,819,50>",(foo)); Inst54++; } } catch(e) {}
  foo(1);
try { if (Inst55 <= 1000 && typeof (foo) != "undefined") {_RecordType("<826,829,51>",(foo)); Inst55++; } } catch(e) {}
  foo(1);
try { if (Inst56 <= 1000 && typeof (foo(1).catch) != "undefined") {_RecordType("<836,848,52>",(foo(1).catch)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (foo) != "undefined") {_RecordType("<836,839,52>",(foo)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (v) != "undefined") {_RecordType("<849,850,52>",(v)); Inst58++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (v) != "undefined") {_RecordType("<862,863,52>",(v)); Inst60++; } } catch(e) {}
  foo(1).catch(v => value = v);
try { if (Inst59 <= 1000 && typeof (value) != "undefined") {_RecordType("<854,859,52>",(value)); Inst59++; } } catch(e) {}
})();

