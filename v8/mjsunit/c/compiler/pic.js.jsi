var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2010 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// Flags: --allow-natives-syntax
try { if (Inst0 <= 1000 && typeof (GetX) != "undefined") {_RecordType("<1639,1643,28>",(GetX)); Inst0++; } } catch(e) {}
function GetX(o) {
try { if (Inst1 <= 1000 && typeof (o) != "undefined") {_RecordType("<1644,1645,28>",(o)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (o.x) != "undefined") {_RecordType("<1658,1661,29>",(o.x)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (o) != "undefined") {_RecordType("<1658,1659,29>",(o)); Inst3++; } } catch(e) {}
  return o.x;
}

try { if (Inst4 <= 1000 && typeof (CallF) != "undefined") {_RecordType("<1675,1680,32>",(CallF)); Inst4++; } } catch(e) {}
function CallF(o) {
try { if (Inst5 <= 1000 && typeof (o) != "undefined") {_RecordType("<1681,1682,32>",(o)); Inst5++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (o.f) != "undefined") {_RecordType("<1695,1698,33>",(o.f)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (o) != "undefined") {_RecordType("<1695,1696,33>",(o)); Inst7++; } } catch(e) {}
  return o.f();
}

try { if (Inst8 <= 1000 && typeof (SetX) != "undefined") {_RecordType("<1714,1718,36>",(SetX)); Inst8++; } } catch(e) {}
function SetX(o) {
try { if (Inst9 <= 1000 && typeof (o) != "undefined") {_RecordType("<1719,1720,36>",(o)); Inst9++; } } catch(e) {}
  o.x = 42;
try { if (Inst10 <= 1000 && typeof (o.x) != "undefined") {_RecordType("<1726,1729,37>",(o.x)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (o) != "undefined") {_RecordType("<1726,1727,37>",(o)); Inst11++; } } catch(e) {}
}

try { if (Inst12 <= 1000 && typeof (SetXY) != "undefined") {_RecordType("<1748,1753,40>",(SetXY)); Inst12++; } } catch(e) {}
function SetXY(o, y) {
try { if (Inst13 <= 1000 && typeof (o) != "undefined") {_RecordType("<1754,1755,40>",(o)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (y) != "undefined") {_RecordType("<1757,1758,40>",(y)); Inst14++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (y) != "undefined") {_RecordType("<1777,1778,41>",(y)); Inst17++; } } catch(e) {}
  return o.x = y;
try { if (Inst15 <= 1000 && typeof (o.x) != "undefined") {_RecordType("<1771,1774,41>",(o.x)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (o) != "undefined") {_RecordType("<1771,1772,41>",(o)); Inst16++; } } catch(e) {}
}

try { if (Inst18 <= 1000 && typeof (Test) != "undefined") {_RecordType("<1792,1796,44>",(Test)); Inst18++; } } catch(e) {}
function Test(o) {
try { if (Inst19 <= 1000 && typeof (o) != "undefined") {_RecordType("<1797,1798,44>",(o)); Inst19++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (SetX) != "undefined") {_RecordType("<1804,1808,45>",(SetX)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (o) != "undefined") {_RecordType("<1809,1810,45>",(o)); Inst21++; } } catch(e) {}
  SetX(o);
  42;
try { if (Inst22 <= 1000 && typeof (GetX) != "undefined") {_RecordType("<1821,1825,47>",(GetX)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (o) != "undefined") {_RecordType("<1826,1827,47>",(o)); Inst23++; } } catch(e) {}
  GetX(o);
  87;
try { if (Inst24 <= 1000 && typeof (SetXY) != "undefined") {_RecordType("<1838,1843,49>",(SetXY)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (o) != "undefined") {_RecordType("<1844,1845,49>",(o)); Inst25++; } } catch(e) {}
  SetXY(o, 87);
  87;
try { if (Inst26 <= 1000 && typeof (GetX) != "undefined") {_RecordType("<1860,1864,51>",(GetX)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (o) != "undefined") {_RecordType("<1865,1866,51>",(o)); Inst27++; } } catch(e) {}
  GetX(o);
try { if (Inst28 <= 1000 && typeof (SetXY) != "undefined") {_RecordType("<1871,1876,52>",(SetXY)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (o) != "undefined") {_RecordType("<1877,1878,52>",(o)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (o) != "undefined") {_RecordType("<1880,1881,52>",(o)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (o) != "undefined") {_RecordType("<1887,1888,52>",(o)); Inst31++; } } catch(e) {}
  SetXY(o, o) === o;
try { if (Inst32 <= 1000 && typeof (o) != "undefined") {_RecordType("<1892,1893,53>",(o)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (GetX) != "undefined") {_RecordType("<1898,1902,53>",(GetX)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (o) != "undefined") {_RecordType("<1903,1904,53>",(o)); Inst34++; } } catch(e) {}
  o === GetX(o);
  "o === GetX(o)";
  "hest";
try { if (Inst35 <= 1000 && typeof (SetXY) != "undefined") {_RecordType("<1938,1943,56>",(SetXY)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (o) != "undefined") {_RecordType("<1944,1945,56>",(o)); Inst36++; } } catch(e) {}
  SetXY(o, "hest");
  "hest";
try { if (Inst37 <= 1000 && typeof (GetX) != "undefined") {_RecordType("<1968,1972,58>",(GetX)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (o) != "undefined") {_RecordType("<1973,1974,58>",(o)); Inst38++; } } catch(e) {}
  GetX(o);
try { if (Inst39 <= 1000 && typeof (SetXY) != "undefined") {_RecordType("<1979,1984,59>",(SetXY)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (o) != "undefined") {_RecordType("<1985,1986,59>",(o)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (Test) != "undefined") {_RecordType("<1988,1992,59>",(Test)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (Test) != "undefined") {_RecordType("<1998,2002,59>",(Test)); Inst42++; } } catch(e) {}
  SetXY(o, Test) === Test;
try { if (Inst43 <= 1000 && typeof (Test) != "undefined") {_RecordType("<2006,2010,60>",(Test)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (GetX) != "undefined") {_RecordType("<2015,2019,60>",(GetX)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (o) != "undefined") {_RecordType("<2020,2021,60>",(o)); Inst45++; } } catch(e) {}
  Test === GetX(o);
  "Test === GetX(o)";
  99;
try { if (Inst46 <= 1000 && typeof (CallF) != "undefined") {_RecordType("<2054,2059,63>",(CallF)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (o) != "undefined") {_RecordType("<2060,2061,63>",(o)); Inst47++; } } catch(e) {}
  CallF(o);
} // Create a bunch of objects with different layouts.


var o1 = {
  x: 0,
  y: 1
};
try { if (Inst48 <= 1000 && typeof (o1) != "undefined") {_RecordType("<2125,2127,67>",(o1)); Inst48++; } } catch(e) {}
var o2 = {
  y: 1,
  x: 0
};
try { if (Inst49 <= 1000 && typeof (o2) != "undefined") {_RecordType("<2154,2156,71>",(o2)); Inst49++; } } catch(e) {}
var o3 = {
  y: 1,
  z: 2,
  x: 0
};
try { if (Inst50 <= 1000 && typeof (o3) != "undefined") {_RecordType("<2183,2185,75>",(o3)); Inst50++; } } catch(e) {}

o1.f = o2.f = o3.f = function () {
  return 99;
}; // Run the test until we're fairly sure we've optimized the
try { if (Inst51 <= 1000 && typeof (o1.f) != "undefined") {_RecordType("<2217,2221,81>",(o1.f)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (o1) != "undefined") {_RecordType("<2217,2219,81>",(o1)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (o2.f) != "undefined") {_RecordType("<2224,2228,81>",(o2.f)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (o2) != "undefined") {_RecordType("<2224,2226,81>",(o2)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (o3.f) != "undefined") {_RecordType("<2231,2235,81>",(o3.f)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (o3) != "undefined") {_RecordType("<2231,2233,81>",(o3)); Inst56++; } } catch(e) {}
// polymorphic property access.


for (var i = 0; i < 5; i++) {
try { if (Inst57 <= 1000 && typeof (i) != "undefined") {_RecordType("<2371,2372,87>",(i)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (i) != "undefined") {_RecordType("<2378,2379,87>",(i)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (i) != "undefined") {_RecordType("<2385,2386,87>",(i)); Inst59++; } } catch(e) {}
try { if (Inst60 <= 1000 && typeof (Test) != "undefined") {_RecordType("<2394,2398,88>",(Test)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (o1) != "undefined") {_RecordType("<2399,2401,88>",(o1)); Inst61++; } } catch(e) {}
  Test(o1);
try { if (Inst62 <= 1000 && typeof (Test) != "undefined") {_RecordType("<2406,2410,89>",(Test)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (o2) != "undefined") {_RecordType("<2411,2413,89>",(o2)); Inst63++; } } catch(e) {}
  Test(o2);
try { if (Inst64 <= 1000 && typeof (Test) != "undefined") {_RecordType("<2418,2422,90>",(Test)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (o3) != "undefined") {_RecordType("<2423,2425,90>",(o3)); Inst65++; } } catch(e) {}
  Test(o3);
}

try { if (Inst66 <= 1000 && typeof (Test) != "undefined") {_RecordType("<2431,2435,93>",(Test)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (o1) != "undefined") {_RecordType("<2436,2438,93>",(o1)); Inst67++; } } catch(e) {}
Test(o1);
try { if (Inst68 <= 1000 && typeof (Test) != "undefined") {_RecordType("<2441,2445,94>",(Test)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (o2) != "undefined") {_RecordType("<2446,2448,94>",(o2)); Inst69++; } } catch(e) {}
Test(o2);
try { if (Inst70 <= 1000 && typeof (Test) != "undefined") {_RecordType("<2451,2455,95>",(Test)); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (o3) != "undefined") {_RecordType("<2456,2458,95>",(o3)); Inst71++; } } catch(e) {}
Test(o3); // Make sure that the following doesn't crash.

try { if (Inst72 <= 1000 && typeof (GetX) != "undefined") {_RecordType("<2509,2513,97>",(GetX)); Inst72++; } } catch(e) {}
GetX(0);
try { if (Inst73 <= 1000 && typeof (SetX) != "undefined") {_RecordType("<2518,2522,98>",(SetX)); Inst73++; } } catch(e) {}
SetX(0);
try { if (Inst74 <= 1000 && typeof (SetXY) != "undefined") {_RecordType("<2527,2532,99>",(SetXY)); Inst74++; } } catch(e) {}
SetXY(0, 0);
"CallF(0)";
try { if (Inst75 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<2552,2561,101>",(TypeError)); Inst75++; } } catch(e) {}
TypeError;

