var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2018 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax
(function () {
try { if (Inst0 <= 1000 && typeof (f) != "undefined") {_RecordType("<226,227,6>",(f)); Inst0++; } } catch(e) {}
  function f(o) {
try { if (Inst1 <= 1000 && typeof (o) != "undefined") {_RecordType("<228,229,6>",(o)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (o.x) != "undefined") {_RecordType("<237,240,7>",(o.x)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (o) != "undefined") {_RecordType("<237,238,7>",(o)); Inst3++; } } catch(e) {}
    o.x;
try { if (Inst4 <= 1000 && typeof (Object.create) != "undefined") {_RecordType("<246,259,8>",(Object.create)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Object) != "undefined") {_RecordType("<246,252,8>",(Object)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (o) != "undefined") {_RecordType("<260,261,8>",(o)); Inst6++; } } catch(e) {}
    Object.create(o);
try { if (Inst7 <= 1000 && typeof (o.y.a) != "undefined") {_RecordType("<275,280,9>",(o.y.a)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (o.y) != "undefined") {_RecordType("<275,278,9>",(o.y)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (o) != "undefined") {_RecordType("<275,276,9>",(o)); Inst9++; } } catch(e) {}
    return o.y.a;
  }

try { if (Inst10 <= 1000 && typeof (f) != "undefined") {_RecordType("<289,290,12>",(f)); Inst10++; } } catch(e) {}
  f({
    x: 0,
    y: {
      a: 1
    }
  });
try { if (Inst11 <= 1000 && typeof (f) != "undefined") {_RecordType("<337,338,18>",(f)); Inst11++; } } catch(e) {}
  f({
    x: 0,
    y: {
      a: 2
    }
  });
  3;
try { if (Inst12 <= 1000 && typeof (f) != "undefined") {_RecordType("<390,391,25>",(f)); Inst12++; } } catch(e) {}
  f({
    x: 0,
    y: {
      a: 3
    }
  });
})();

(function () {
try { if (Inst13 <= 1000 && typeof (f) != "undefined") {_RecordType("<469,470,34>",(f)); Inst13++; } } catch(e) {}
  function f(o) {
try { if (Inst14 <= 1000 && typeof (o) != "undefined") {_RecordType("<471,472,34>",(o)); Inst14++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (o.y) != "undefined") {_RecordType("<488,491,35>",(o.y)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (o) != "undefined") {_RecordType("<488,489,35>",(o)); Inst17++; } } catch(e) {}
    let a = o.y;
try { if (Inst15 <= 1000 && typeof (a) != "undefined") {_RecordType("<484,485,35>",(a)); Inst15++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (Object.create) != "undefined") {_RecordType("<497,510,36>",(Object.create)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Object) != "undefined") {_RecordType("<497,503,36>",(Object)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (o) != "undefined") {_RecordType("<511,512,36>",(o)); Inst20++; } } catch(e) {}
    Object.create(o);
try { if (Inst21 <= 1000 && typeof (o.x) != "undefined") {_RecordType("<526,529,37>",(o.x)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (o) != "undefined") {_RecordType("<526,527,37>",(o)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (a) != "undefined") {_RecordType("<532,533,37>",(a)); Inst23++; } } catch(e) {}
    return o.x + a;
  }

try { if (Inst24 <= 1000 && typeof (f) != "undefined") {_RecordType("<542,543,40>",(f)); Inst24++; } } catch(e) {}
  f({
    x: 42,
    y: 21
  });
try { if (Inst25 <= 1000 && typeof (f) != "undefined") {_RecordType("<575,576,44>",(f)); Inst25++; } } catch(e) {}
  f({
    x: 42,
    y: 21
  });
  63;
try { if (Inst26 <= 1000 && typeof (f) != "undefined") {_RecordType("<614,615,49>",(f)); Inst26++; } } catch(e) {}
  f({
    x: 42,
    y: 21
  });
})();

