var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2018 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax
try { if (Inst0 <= 1000 && typeof (foo) != "undefined") {_RecordType("<209,212,5>",(foo)); Inst0++; } } catch(e) {}
function foo(p) {
try { if (Inst1 <= 1000 && typeof (p) != "undefined") {_RecordType("<213,214,5>",(p)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (p.catch) != "undefined") {_RecordType("<227,234,6>",(p.catch)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (p) != "undefined") {_RecordType("<227,228,6>",(p)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (x) != "undefined") {_RecordType("<235,236,6>",(x)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (x) != "undefined") {_RecordType("<240,241,6>",(x)); Inst5++; } } catch(e) {}
  return p.catch(x => x);
}

try { if (Inst7 <= 1000 && typeof (Promise.resolve) != "undefined") {_RecordType("<257,272,9>",(Promise.resolve)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Promise) != "undefined") {_RecordType("<257,264,9>",(Promise)); Inst8++; } } catch(e) {}
const a = Promise.resolve(1);
try { if (Inst6 <= 1000 && typeof (a) != "undefined") {_RecordType("<253,254,9>",(a)); Inst6++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (foo) != "undefined") {_RecordType("<277,280,10>",(foo)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (a) != "undefined") {_RecordType("<281,282,10>",(a)); Inst10++; } } catch(e) {}
foo(a);
try { if (Inst11 <= 1000 && typeof (foo) != "undefined") {_RecordType("<285,288,11>",(foo)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (a) != "undefined") {_RecordType("<289,290,11>",(a)); Inst12++; } } catch(e) {}
foo(a);
try { if (Inst13 <= 1000 && typeof (foo) != "undefined") {_RecordType("<293,296,12>",(foo)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (a) != "undefined") {_RecordType("<297,298,12>",(a)); Inst14++; } } catch(e) {}
foo(a);
let custom_then_called = false;
try { if (Inst15 <= 1000 && typeof (custom_then_called) != "undefined") {_RecordType("<305,323,13>",(custom_then_called)); Inst15++; } } catch(e) {}

a.then = function () {
  custom_then_called = true;
try { if (Inst18 <= 1000 && typeof (custom_then_called) != "undefined") {_RecordType("<359,377,16>",(custom_then_called)); Inst18++; } } catch(e) {}
};
try { if (Inst16 <= 1000 && typeof (a.then) != "undefined") {_RecordType("<334,340,15>",(a.then)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (a) != "undefined") {_RecordType("<334,335,15>",(a)); Inst17++; } } catch(e) {}

try { if (Inst19 <= 1000 && typeof (foo) != "undefined") {_RecordType("<390,393,19>",(foo)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (a) != "undefined") {_RecordType("<394,395,19>",(a)); Inst20++; } } catch(e) {}
foo(a);
try { if (Inst21 <= 1000 && typeof (custom_then_called) != "undefined") {_RecordType("<398,416,20>",(custom_then_called)); Inst21++; } } catch(e) {}
custom_then_called;

