var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2015 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax --use-osr
try { if (Inst0 <= 1000 && typeof (bar) != "undefined") {_RecordType("<219,222,5>",(bar)); Inst0++; } } catch(e) {}
function bar(goal) {
try { if (Inst1 <= 1000 && typeof (goal) != "undefined") {_RecordType("<223,227,5>",(goal)); Inst1++; } } catch(e) {}
  var count = 0;
try { if (Inst2 <= 1000 && typeof (count) != "undefined") {_RecordType("<237,242,6>",(count)); Inst2++; } } catch(e) {}
  var sum = 11;
try { if (Inst3 <= 1000 && typeof (sum) != "undefined") {_RecordType("<254,257,7>",(sum)); Inst3++; } } catch(e) {}
  var i = 35;
try { if (Inst4 <= 1000 && typeof (i) != "undefined") {_RecordType("<270,271,8>",(i)); Inst4++; } } catch(e) {}

try { if (Inst5 <= 1000 && typeof (i) != "undefined") {_RecordType("<288,289,10>",(i)); Inst5++; } } catch(e) {}
  while (i-- > 33) {
try { if (Inst7 <= 1000 && typeof (sum) != "undefined") {_RecordType("<310,313,11>",(sum)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<316,317,11>",(i)); Inst8++; } } catch(e) {}
    sum = sum + i;
try { if (Inst6 <= 1000 && typeof (sum) != "undefined") {_RecordType("<304,307,11>",(sum)); Inst6++; } } catch(e) {}
  }

try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<333,334,14>",(i)); Inst9++; } } catch(e) {}
  while (i-- > 31) {
    j = 9;
try { if (Inst10 <= 1000 && typeof (j) != "undefined") {_RecordType("<349,350,15>",(j)); Inst10++; } } catch(e) {}

try { if (Inst11 <= 1000 && typeof (j) != "undefined") {_RecordType("<368,369,17>",(j)); Inst11++; } } catch(e) {}
    while (j-- > 7) {
try { if (Inst13 <= 1000 && typeof (sum) != "undefined") {_RecordType("<391,394,18>",(sum)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (j) != "undefined") {_RecordType("<397,398,18>",(j)); Inst14++; } } catch(e) {}
      sum = sum + j * 3;
try { if (Inst12 <= 1000 && typeof (sum) != "undefined") {_RecordType("<385,388,18>",(sum)); Inst12++; } } catch(e) {}
    }

try { if (Inst15 <= 1000 && typeof (j) != "undefined") {_RecordType("<422,423,21>",(j)); Inst15++; } } catch(e) {}
    while (j-- > 5) {
try { if (Inst17 <= 1000 && typeof (sum) != "undefined") {_RecordType("<445,448,22>",(sum)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (j) != "undefined") {_RecordType("<451,452,22>",(j)); Inst18++; } } catch(e) {}
      sum = sum + j * 5;
try { if (Inst16 <= 1000 && typeof (sum) != "undefined") {_RecordType("<439,442,22>",(sum)); Inst16++; } } catch(e) {}
    }
  }

try { if (Inst19 <= 1000 && typeof (i) != "undefined") {_RecordType("<478,479,26>",(i)); Inst19++; } } catch(e) {}
  while (i-- > 29) {
try { if (Inst20 <= 1000 && typeof (j) != "undefined") {_RecordType("<501,502,27>",(j)); Inst20++; } } catch(e) {}
    while (j-- > 3) {
      var k = 10;
try { if (Inst21 <= 1000 && typeof (k) != "undefined") {_RecordType("<522,523,28>",(k)); Inst21++; } } catch(e) {}

try { if (Inst22 <= 1000 && typeof (k) != "undefined") {_RecordType("<544,545,30>",(k)); Inst22++; } } catch(e) {}
      while (k-- > 8) {
try { if (Inst24 <= 1000 && typeof (sum) != "undefined") {_RecordType("<569,572,31>",(sum)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (k) != "undefined") {_RecordType("<575,576,31>",(k)); Inst25++; } } catch(e) {}
        sum = sum + k * 11;
try { if (Inst23 <= 1000 && typeof (sum) != "undefined") {_RecordType("<563,566,31>",(sum)); Inst23++; } } catch(e) {}
      }
    }

try { if (Inst26 <= 1000 && typeof (j) != "undefined") {_RecordType("<609,610,35>",(j)); Inst26++; } } catch(e) {}
    while (j-- > 1) {
try { if (Inst27 <= 1000 && typeof (k) != "undefined") {_RecordType("<633,634,36>",(k)); Inst27++; } } catch(e) {}
      while (k-- > 6) {
try { if (Inst29 <= 1000 && typeof (sum) != "undefined") {_RecordType("<658,661,37>",(sum)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (j) != "undefined") {_RecordType("<664,665,37>",(j)); Inst30++; } } catch(e) {}
        sum = sum + j * 13;
try { if (Inst28 <= 1000 && typeof (sum) != "undefined") {_RecordType("<652,655,37>",(sum)); Inst28++; } } catch(e) {}
      }
    }
  }

try { if (Inst31 <= 1000 && typeof (sum) != "undefined") {_RecordType("<700,703,42>",(sum)); Inst31++; } } catch(e) {}
  return sum;
}

for (var i = 0; i < 13; i++) {
try { if (Inst32 <= 1000 && typeof (i) != "undefined") {_RecordType("<717,718,45>",(i)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (i) != "undefined") {_RecordType("<724,725,45>",(i)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (i) != "undefined") {_RecordType("<732,733,45>",(i)); Inst34++; } } catch(e) {}
  348;
try { if (Inst35 <= 1000 && typeof (bar) != "undefined") {_RecordType("<748,751,47>",(bar)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (i) != "undefined") {_RecordType("<752,753,47>",(i)); Inst36++; } } catch(e) {}
  bar(i);
}

