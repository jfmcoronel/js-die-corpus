var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2016 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax
try { if (Inst0 <= 1000 && typeof (AddSubtractSmis) != "undefined") {_RecordType("<210,225,5>",(AddSubtractSmis)); Inst0++; } } catch(e) {}
(function AddSubtractSmis() {
try { if (Inst1 <= 1000 && typeof (f0) != "undefined") {_RecordType("<241,243,6>",(f0)); Inst1++; } } catch(e) {}
  function f0(a, b, c) {
try { if (Inst2 <= 1000 && typeof (a) != "undefined") {_RecordType("<244,245,6>",(a)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (b) != "undefined") {_RecordType("<247,248,6>",(b)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (c) != "undefined") {_RecordType("<250,251,6>",(c)); Inst4++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (a) != "undefined") {_RecordType("<266,267,7>",(a)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (b) != "undefined") {_RecordType("<270,271,7>",(b)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (c) != "undefined") {_RecordType("<274,275,7>",(c)); Inst7++; } } catch(e) {}
    return a + b - c;
  }

  4;
try { if (Inst8 <= 1000 && typeof (f0) != "undefined") {_RecordType("<289,291,11>",(f0)); Inst8++; } } catch(e) {}
  f0(3, 2, 1);
  4;
try { if (Inst9 <= 1000 && typeof (f0) != "undefined") {_RecordType("<309,311,13>",(f0)); Inst9++; } } catch(e) {}
  f0(3, 2, 1);
  4;
try { if (Inst10 <= 1000 && typeof (f0) != "undefined") {_RecordType("<329,331,15>",(f0)); Inst10++; } } catch(e) {}
  f0(3, 2, 1);
})();

try { if (Inst11 <= 1000 && typeof (AddSubtractDoubles) != "undefined") {_RecordType("<359,377,18>",(AddSubtractDoubles)); Inst11++; } } catch(e) {}
(function AddSubtractDoubles() {
try { if (Inst12 <= 1000 && typeof (f1) != "undefined") {_RecordType("<393,395,19>",(f1)); Inst12++; } } catch(e) {}
  function f1(a, b, c) {
try { if (Inst13 <= 1000 && typeof (a) != "undefined") {_RecordType("<396,397,19>",(a)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (b) != "undefined") {_RecordType("<399,400,19>",(b)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (c) != "undefined") {_RecordType("<402,403,19>",(c)); Inst15++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (a) != "undefined") {_RecordType("<418,419,20>",(a)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (b) != "undefined") {_RecordType("<422,423,20>",(b)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (c) != "undefined") {_RecordType("<426,427,20>",(c)); Inst18++; } } catch(e) {}
    return a + b - c;
  }

  4.5;
try { if (Inst19 <= 1000 && typeof (f1) != "undefined") {_RecordType("<443,445,24>",(f1)); Inst19++; } } catch(e) {}
  f1(3.5, 2.5, 1.5);
  4.5;
try { if (Inst20 <= 1000 && typeof (f1) != "undefined") {_RecordType("<471,473,26>",(f1)); Inst20++; } } catch(e) {}
  f1(3.5, 2.5, 1.5);
  4.5;
try { if (Inst21 <= 1000 && typeof (f1) != "undefined") {_RecordType("<499,501,28>",(f1)); Inst21++; } } catch(e) {}
  f1(3.5, 2.5, 1.5);
  4;
try { if (Inst22 <= 1000 && typeof (f1) != "undefined") {_RecordType("<525,527,30>",(f1)); Inst22++; } } catch(e) {}
  f1(3, 2, 1);
try { if (Inst23 <= 1000 && typeof (isNaN) != "undefined") {_RecordType("<540,545,31>",(isNaN)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (f1) != "undefined") {_RecordType("<546,548,31>",(f1)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<555,564,31>",(undefined)); Inst25++; } } catch(e) {}
  isNaN(f1(3, 2, undefined));
try { if (Inst26 <= 1000 && typeof (isNaN) != "undefined") {_RecordType("<570,575,32>",(isNaN)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (f1) != "undefined") {_RecordType("<576,578,32>",(f1)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<582,591,32>",(undefined)); Inst28++; } } catch(e) {}
  isNaN(f1(3, undefined, 1));
})();

try { if (Inst29 <= 1000 && typeof (CheckUint32ToInt32Conv) != "undefined") {_RecordType("<615,637,35>",(CheckUint32ToInt32Conv)); Inst29++; } } catch(e) {}
(function CheckUint32ToInt32Conv() {
try { if (Inst30 <= 1000 && typeof (f2) != "undefined") {_RecordType("<653,655,36>",(f2)); Inst30++; } } catch(e) {}
  function f2(a) {
try { if (Inst31 <= 1000 && typeof (a) != "undefined") {_RecordType("<656,657,36>",(a)); Inst31++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (a) != "undefined") {_RecordType("<673,674,37>",(a)); Inst32++; } } catch(e) {}
    return (a >>> 0) + 1;
  }

  1;
try { if (Inst33 <= 1000 && typeof (f2) != "undefined") {_RecordType("<699,701,41>",(f2)); Inst33++; } } catch(e) {}
  f2(0);
  1;
try { if (Inst34 <= 1000 && typeof (f2) != "undefined") {_RecordType("<713,715,43>",(f2)); Inst34++; } } catch(e) {}
  f2(0);
  1;
try { if (Inst35 <= 1000 && typeof (f2) != "undefined") {_RecordType("<727,729,45>",(f2)); Inst35++; } } catch(e) {}
  f2(0);
  4294967295;
try { if (Inst36 <= 1000 && typeof (f2) != "undefined") {_RecordType("<750,752,47>",(f2)); Inst36++; } } catch(e) {}
  f2(-2);
})();

try { if (Inst37 <= 1000 && typeof (CheckFloat64ToInt32Conv) != "undefined") {_RecordType("<775,798,50>",(CheckFloat64ToInt32Conv)); Inst37++; } } catch(e) {}
(function CheckFloat64ToInt32Conv() {
try { if (Inst38 <= 1000 && typeof (f3) != "undefined") {_RecordType("<814,816,51>",(f3)); Inst38++; } } catch(e) {}
  function f3(a, b) {
try { if (Inst39 <= 1000 && typeof (a) != "undefined") {_RecordType("<817,818,51>",(a)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (b) != "undefined") {_RecordType("<820,821,51>",(b)); Inst40++; } } catch(e) {}
    var x = 0;
try { if (Inst41 <= 1000 && typeof (x) != "undefined") {_RecordType("<833,834,52>",(x)); Inst41++; } } catch(e) {}

try { if (Inst42 <= 1000 && typeof (a) != "undefined") {_RecordType("<849,850,54>",(a)); Inst42++; } } catch(e) {}
    if (a) {
      x = 0.5;
try { if (Inst43 <= 1000 && typeof (x) != "undefined") {_RecordType("<860,861,55>",(x)); Inst43++; } } catch(e) {}
    }

try { if (Inst44 <= 1000 && typeof (x) != "undefined") {_RecordType("<887,888,58>",(x)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (b) != "undefined") {_RecordType("<891,892,58>",(b)); Inst45++; } } catch(e) {}
    return x + b;
  }

  1;
try { if (Inst46 <= 1000 && typeof (f3) != "undefined") {_RecordType("<906,908,62>",(f3)); Inst46++; } } catch(e) {}
  f3(0, 1);
  1;
try { if (Inst47 <= 1000 && typeof (f3) != "undefined") {_RecordType("<923,925,64>",(f3)); Inst47++; } } catch(e) {}
  f3(0, 1);
  1;
try { if (Inst48 <= 1000 && typeof (f3) != "undefined") {_RecordType("<940,942,66>",(f3)); Inst48++; } } catch(e) {}
  f3(0, 1);
  1.5;
try { if (Inst49 <= 1000 && typeof (f3) != "undefined") {_RecordType("<959,961,68>",(f3)); Inst49++; } } catch(e) {}
  f3(1, 1);
})();

try { if (Inst50 <= 1000 && typeof (ShiftLeftSmis) != "undefined") {_RecordType("<986,999,71>",(ShiftLeftSmis)); Inst50++; } } catch(e) {}
(function ShiftLeftSmis() {
try { if (Inst51 <= 1000 && typeof (f4) != "undefined") {_RecordType("<1015,1017,72>",(f4)); Inst51++; } } catch(e) {}
  function f4(a, b) {
try { if (Inst52 <= 1000 && typeof (a) != "undefined") {_RecordType("<1018,1019,72>",(a)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (b) != "undefined") {_RecordType("<1021,1022,72>",(b)); Inst53++; } } catch(e) {}
try { if (Inst54 <= 1000 && typeof (a) != "undefined") {_RecordType("<1037,1038,73>",(a)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (b) != "undefined") {_RecordType("<1042,1043,73>",(b)); Inst55++; } } catch(e) {}
    return a << b;
  }

  24;
try { if (Inst56 <= 1000 && typeof (f4) != "undefined") {_RecordType("<1058,1060,77>",(f4)); Inst56++; } } catch(e) {}
  f4(3, 3);
  40;
try { if (Inst57 <= 1000 && typeof (f4) != "undefined") {_RecordType("<1076,1078,79>",(f4)); Inst57++; } } catch(e) {}
  f4(5, 3);
  64;
try { if (Inst58 <= 1000 && typeof (f4) != "undefined") {_RecordType("<1094,1096,81>",(f4)); Inst58++; } } catch(e) {}
  f4(4, 4);
})();

try { if (Inst59 <= 1000 && typeof (ShiftLeftNumbers) != "undefined") {_RecordType("<1121,1137,84>",(ShiftLeftNumbers)); Inst59++; } } catch(e) {}
(function ShiftLeftNumbers() {
try { if (Inst60 <= 1000 && typeof (f5) != "undefined") {_RecordType("<1153,1155,85>",(f5)); Inst60++; } } catch(e) {}
  function f5(a, b) {
try { if (Inst61 <= 1000 && typeof (a) != "undefined") {_RecordType("<1156,1157,85>",(a)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (b) != "undefined") {_RecordType("<1159,1160,85>",(b)); Inst62++; } } catch(e) {}
try { if (Inst63 <= 1000 && typeof (a) != "undefined") {_RecordType("<1175,1176,86>",(a)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (b) != "undefined") {_RecordType("<1180,1181,86>",(b)); Inst64++; } } catch(e) {}
    return a << b;
  }

  24;
try { if (Inst65 <= 1000 && typeof (f5) != "undefined") {_RecordType("<1196,1198,90>",(f5)); Inst65++; } } catch(e) {}
  f5(3.3, 3.4);
  40;
try { if (Inst66 <= 1000 && typeof (f5) != "undefined") {_RecordType("<1218,1220,92>",(f5)); Inst66++; } } catch(e) {}
  f5(5.1, 3.9);
  64;
try { if (Inst67 <= 1000 && typeof (f5) != "undefined") {_RecordType("<1240,1242,94>",(f5)); Inst67++; } } catch(e) {}
  f5(4.9, 4.1);
})();

try { if (Inst68 <= 1000 && typeof (ShiftRightNumbers) != "undefined") {_RecordType("<1271,1288,97>",(ShiftRightNumbers)); Inst68++; } } catch(e) {}
(function ShiftRightNumbers() {
try { if (Inst69 <= 1000 && typeof (f6) != "undefined") {_RecordType("<1304,1306,98>",(f6)); Inst69++; } } catch(e) {}
  function f6(a, b) {
try { if (Inst70 <= 1000 && typeof (a) != "undefined") {_RecordType("<1307,1308,98>",(a)); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (b) != "undefined") {_RecordType("<1310,1311,98>",(b)); Inst71++; } } catch(e) {}
try { if (Inst72 <= 1000 && typeof (a) != "undefined") {_RecordType("<1326,1327,99>",(a)); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (b) != "undefined") {_RecordType("<1331,1332,99>",(b)); Inst73++; } } catch(e) {}
    return a >> b;
  }

  1;
try { if (Inst74 <= 1000 && typeof (f6) != "undefined") {_RecordType("<1346,1348,103>",(f6)); Inst74++; } } catch(e) {}
  f6(8.3, 3.4);
  -2;
try { if (Inst75 <= 1000 && typeof (f6) != "undefined") {_RecordType("<1368,1370,105>",(f6)); Inst75++; } } catch(e) {}
  f6(-16.1, 3.9);
  0;
try { if (Inst76 <= 1000 && typeof (f6) != "undefined") {_RecordType("<1391,1393,107>",(f6)); Inst76++; } } catch(e) {}
  f6(16.2, 5.1);
})();

try { if (Inst77 <= 1000 && typeof (ShiftRightLogicalNumbers) != "undefined") {_RecordType("<1423,1447,110>",(ShiftRightLogicalNumbers)); Inst77++; } } catch(e) {}
(function ShiftRightLogicalNumbers() {
try { if (Inst78 <= 1000 && typeof (f7) != "undefined") {_RecordType("<1463,1465,111>",(f7)); Inst78++; } } catch(e) {}
  function f7(a, b) {
try { if (Inst79 <= 1000 && typeof (a) != "undefined") {_RecordType("<1466,1467,111>",(a)); Inst79++; } } catch(e) {}try { if (Inst80 <= 1000 && typeof (b) != "undefined") {_RecordType("<1469,1470,111>",(b)); Inst80++; } } catch(e) {}
try { if (Inst81 <= 1000 && typeof (a) != "undefined") {_RecordType("<1485,1486,112>",(a)); Inst81++; } } catch(e) {}try { if (Inst82 <= 1000 && typeof (b) != "undefined") {_RecordType("<1491,1492,112>",(b)); Inst82++; } } catch(e) {}
    return a >>> b;
  }

  1;
try { if (Inst83 <= 1000 && typeof (f7) != "undefined") {_RecordType("<1506,1508,116>",(f7)); Inst83++; } } catch(e) {}
  f7(8.3, 3.4);
  536870910;
try { if (Inst84 <= 1000 && typeof (f7) != "undefined") {_RecordType("<1535,1537,118>",(f7)); Inst84++; } } catch(e) {}
  f7(-16.1, 3.9);
  0;
try { if (Inst85 <= 1000 && typeof (f7) != "undefined") {_RecordType("<1558,1560,120>",(f7)); Inst85++; } } catch(e) {}
  f7(16.2, 5.1);
})();

