var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2015 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax
try { if (Inst0 <= 1000 && typeof (test) != "undefined") {_RecordType("<209,213,5>",(test)); Inst0++; } } catch(e) {}
function test(e, f, v) {
try { if (Inst1 <= 1000 && typeof (e) != "undefined") {_RecordType("<214,215,5>",(e)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (f) != "undefined") {_RecordType("<217,218,5>",(f)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (v) != "undefined") {_RecordType("<220,221,5>",(v)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (e) != "undefined") {_RecordType("<227,228,6>",(e)); Inst4++; } } catch(e) {}
  e;
try { if (Inst5 <= 1000 && typeof (f) != "undefined") {_RecordType("<232,233,7>",(f)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (v) != "undefined") {_RecordType("<234,235,7>",(v)); Inst6++; } } catch(e) {}
  f(v);
try { if (Inst7 <= 1000 && typeof (e) != "undefined") {_RecordType("<240,241,8>",(e)); Inst7++; } } catch(e) {}
  e;
try { if (Inst8 <= 1000 && typeof (f) != "undefined") {_RecordType("<245,246,9>",(f)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (v) != "undefined") {_RecordType("<247,248,9>",(v)); Inst9++; } } catch(e) {}
  f(v);
try { if (Inst10 <= 1000 && typeof (e) != "undefined") {_RecordType("<253,254,10>",(e)); Inst10++; } } catch(e) {}
  e;
try { if (Inst11 <= 1000 && typeof (f) != "undefined") {_RecordType("<258,259,11>",(f)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (v) != "undefined") {_RecordType("<260,261,11>",(v)); Inst12++; } } catch(e) {}
  f(v);
}

try { if (Inst13 <= 1000 && typeof (foo) != "undefined") {_RecordType("<276,279,14>",(foo)); Inst13++; } } catch(e) {}
function foo(t) {
try { if (Inst14 <= 1000 && typeof (t) != "undefined") {_RecordType("<280,281,14>",(t)); Inst14++; } } catch(e) {}
  for (var x in t) {
try { if (Inst15 <= 1000 && typeof (x) != "undefined") {_RecordType("<296,297,15>",(x)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (t) != "undefined") {_RecordType("<301,302,15>",(t)); Inst16++; } } catch(e) {}
    for (var i = 0; i < 2; i++) {
try { if (Inst17 <= 1000 && typeof (i) != "undefined") {_RecordType("<319,320,16>",(i)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (i) != "undefined") {_RecordType("<326,327,16>",(i)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (i) != "undefined") {_RecordType("<333,334,16>",(i)); Inst19++; } } catch(e) {}
      ;
    }
  }

  return 5;
}

try { if (Inst20 <= 1000 && typeof (test) != "undefined") {_RecordType("<374,378,24>",(test)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (foo) != "undefined") {_RecordType("<382,385,24>",(foo)); Inst21++; } } catch(e) {}
test(5, foo, {
  x: 20
});

try { if (Inst22 <= 1000 && typeof (bar) != "undefined") {_RecordType("<411,414,28>",(bar)); Inst22++; } } catch(e) {}
function bar(t) {
try { if (Inst23 <= 1000 && typeof (t) != "undefined") {_RecordType("<415,416,28>",(t)); Inst23++; } } catch(e) {}
  var sum = 0;
try { if (Inst24 <= 1000 && typeof (sum) != "undefined") {_RecordType("<426,429,29>",(sum)); Inst24++; } } catch(e) {}

  for (var x in t) {
try { if (Inst25 <= 1000 && typeof (x) != "undefined") {_RecordType("<447,448,31>",(x)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (t) != "undefined") {_RecordType("<452,453,31>",(t)); Inst26++; } } catch(e) {}
    for (var i = 0; i < 2; i++) {
try { if (Inst27 <= 1000 && typeof (i) != "undefined") {_RecordType("<470,471,32>",(i)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (i) != "undefined") {_RecordType("<477,478,32>",(i)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (i) != "undefined") {_RecordType("<484,485,32>",(i)); Inst29++; } } catch(e) {}
try { if (Inst31 <= 1000 && typeof (t[x]) != "undefined") {_RecordType("<504,508,33>",(t[x])); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (t) != "undefined") {_RecordType("<504,505,33>",(t)); Inst32++; } } catch(e) {}
      sum += t[x];
try { if (Inst30 <= 1000 && typeof (sum) != "undefined") {_RecordType("<497,500,33>",(sum)); Inst30++; } } catch(e) {}
    }
  }

try { if (Inst33 <= 1000 && typeof (sum) != "undefined") {_RecordType("<530,533,37>",(sum)); Inst33++; } } catch(e) {}
  return sum;
}

try { if (Inst34 <= 1000 && typeof (test) != "undefined") {_RecordType("<538,542,40>",(test)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (bar) != "undefined") {_RecordType("<547,550,40>",(bar)); Inst35++; } } catch(e) {}
test(62, bar, {
  x: 20,
  y: 11
});

