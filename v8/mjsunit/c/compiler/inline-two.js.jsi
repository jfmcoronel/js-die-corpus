var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
var Inst102 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2010 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// Flags: --allow-natives-syntax
// Test that we can inline a function that calls another function.
try { if (Inst0 <= 1000 && typeof (TestInlineX) != "undefined") {_RecordType("<1706,1717,29>",(TestInlineX)); Inst0++; } } catch(e) {}
function TestInlineX(o) {
try { if (Inst1 <= 1000 && typeof (o) != "undefined") {_RecordType("<1718,1719,29>",(o)); Inst1++; } } catch(e) {}
  // Effect context.
try { if (Inst2 <= 1000 && typeof (o.g) != "undefined") {_RecordType("<1746,1749,31>",(o.g)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (o) != "undefined") {_RecordType("<1746,1747,31>",(o)); Inst3++; } } catch(e) {}
  o.g(); // Value context.

try { if (Inst5 <= 1000 && typeof (o.g) != "undefined") {_RecordType("<1782,1785,33>",(o.g)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (o) != "undefined") {_RecordType("<1782,1783,33>",(o)); Inst6++; } } catch(e) {}
  var x = o.g();
try { if (Inst4 <= 1000 && typeof (x) != "undefined") {_RecordType("<1778,1779,33>",(x)); Inst4++; } } catch(e) {}
  42;
try { if (Inst7 <= 1000 && typeof (x) != "undefined") {_RecordType("<1797,1798,35>",(x)); Inst7++; } } catch(e) {}
  x;
  42;
try { if (Inst8 <= 1000 && typeof (o.g) != "undefined") {_RecordType("<1808,1811,37>",(o.g)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (o) != "undefined") {_RecordType("<1808,1809,37>",(o)); Inst9++; } } catch(e) {}
  o.g();

  // Test context.
try { if (Inst10 <= 1000 && typeof (o.g) != "undefined") {_RecordType("<1842,1845,40>",(o.g)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (o) != "undefined") {_RecordType("<1842,1843,40>",(o)); Inst11++; } } catch(e) {}
  if (!o.g()) {
    false;
  }
}

var o2 = {};
try { if (Inst12 <= 1000 && typeof (o2) != "undefined") {_RecordType("<1873,1875,45>",(o2)); Inst12++; } } catch(e) {}

o2.size = function () {
  return 42;
};
try { if (Inst13 <= 1000 && typeof (o2.size) != "undefined") {_RecordType("<1883,1890,47>",(o2.size)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (o2) != "undefined") {_RecordType("<1883,1885,47>",(o2)); Inst14++; } } catch(e) {}

o2.g = function () {
try { if (Inst17 <= 1000 && typeof (this.size) != "undefined") {_RecordType("<1954,1963,52>",(this.size)); Inst17++; } } catch(e) {}
  return this.size();
};
try { if (Inst15 <= 1000 && typeof (o2.g) != "undefined") {_RecordType("<1924,1928,51>",(o2.g)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (o2) != "undefined") {_RecordType("<1924,1926,51>",(o2)); Inst16++; } } catch(e) {}

for (var i = 0; i < 5; i++) {
try { if (Inst18 <= 1000 && typeof (i) != "undefined") {_RecordType("<1980,1981,55>",(i)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (i) != "undefined") {_RecordType("<1987,1988,55>",(i)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<1994,1995,55>",(i)); Inst20++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (TestInlineX) != "undefined") {_RecordType("<2003,2014,56>",(TestInlineX)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (o2) != "undefined") {_RecordType("<2015,2017,56>",(o2)); Inst22++; } } catch(e) {}
  TestInlineX(o2);
}

try { if (Inst23 <= 1000 && typeof (TestInlineX) != "undefined") {_RecordType("<2023,2034,59>",(TestInlineX)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (o2) != "undefined") {_RecordType("<2035,2037,59>",(o2)); Inst24++; } } catch(e) {}
TestInlineX(o2);
try { if (Inst25 <= 1000 && typeof (TestInlineX) != "undefined") {_RecordType("<2040,2051,60>",(TestInlineX)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (o2.g) != "undefined") {_RecordType("<2059,2063,61>",(o2.g)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (o2) != "undefined") {_RecordType("<2059,2061,61>",(o2)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (o2.size) != "undefined") {_RecordType("<2073,2080,62>",(o2.size)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (o2) != "undefined") {_RecordType("<2073,2075,62>",(o2)); Inst29++; } } catch(e) {}
TestInlineX({
  g: o2.g,
  size: o2.size
}); // Test that we can inline a call on a non-variable receiver.

try { if (Inst30 <= 1000 && typeof (TestInlineX2) != "undefined") {_RecordType("<2157,2169,65>",(TestInlineX2)); Inst30++; } } catch(e) {}
function TestInlineX2(o) {
try { if (Inst31 <= 1000 && typeof (o) != "undefined") {_RecordType("<2170,2171,65>",(o)); Inst31++; } } catch(e) {}
  // Effect context.
try { if (Inst32 <= 1000 && typeof (o.h) != "undefined") {_RecordType("<2198,2201,67>",(o.h)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (o) != "undefined") {_RecordType("<2198,2199,67>",(o)); Inst33++; } } catch(e) {}
  o.h(); // Value context.

try { if (Inst35 <= 1000 && typeof (o.h) != "undefined") {_RecordType("<2234,2237,69>",(o.h)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (o) != "undefined") {_RecordType("<2234,2235,69>",(o)); Inst36++; } } catch(e) {}
  var x = o.h();
try { if (Inst34 <= 1000 && typeof (x) != "undefined") {_RecordType("<2230,2231,69>",(x)); Inst34++; } } catch(e) {}
  42;
try { if (Inst37 <= 1000 && typeof (x) != "undefined") {_RecordType("<2249,2250,71>",(x)); Inst37++; } } catch(e) {}
  x;
  42;
try { if (Inst38 <= 1000 && typeof (o.h) != "undefined") {_RecordType("<2260,2263,73>",(o.h)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (o) != "undefined") {_RecordType("<2260,2261,73>",(o)); Inst39++; } } catch(e) {}
  o.h();

  // Test context.
try { if (Inst40 <= 1000 && typeof (o.h) != "undefined") {_RecordType("<2294,2297,76>",(o.h)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (o) != "undefined") {_RecordType("<2294,2295,76>",(o)); Inst41++; } } catch(e) {}
  if (!o.h()) {
    false;
  }
}

var obj = {};
try { if (Inst42 <= 1000 && typeof (obj) != "undefined") {_RecordType("<2325,2328,81>",(obj)); Inst42++; } } catch(e) {}

obj.foo = function () {
  return 42;
};
try { if (Inst43 <= 1000 && typeof (obj.foo) != "undefined") {_RecordType("<2336,2343,83>",(obj.foo)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (obj) != "undefined") {_RecordType("<2336,2339,83>",(obj)); Inst44++; } } catch(e) {}

var o3 = {};
try { if (Inst45 <= 1000 && typeof (o3) != "undefined") {_RecordType("<2381,2383,87>",(o3)); Inst45++; } } catch(e) {}
try { if (Inst48 <= 1000 && typeof (obj) != "undefined") {_RecordType("<2397,2400,88>",(obj)); Inst48++; } } catch(e) {}
o3.v = obj;
try { if (Inst46 <= 1000 && typeof (o3.v) != "undefined") {_RecordType("<2390,2394,88>",(o3.v)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (o3) != "undefined") {_RecordType("<2390,2392,88>",(o3)); Inst47++; } } catch(e) {}

o3.h = function () {
try { if (Inst51 <= 1000 && typeof (this.v.foo) != "undefined") {_RecordType("<2433,2443,91>",(this.v.foo)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (this.v) != "undefined") {_RecordType("<2433,2439,91>",(this.v)); Inst52++; } } catch(e) {}
  return this.v.foo();
};
try { if (Inst49 <= 1000 && typeof (o3.h) != "undefined") {_RecordType("<2403,2407,90>",(o3.h)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (o3) != "undefined") {_RecordType("<2403,2405,90>",(o3)); Inst50++; } } catch(e) {}

for (var i = 0; i < 5; i++) {
try { if (Inst53 <= 1000 && typeof (i) != "undefined") {_RecordType("<2460,2461,94>",(i)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (i) != "undefined") {_RecordType("<2467,2468,94>",(i)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (i) != "undefined") {_RecordType("<2474,2475,94>",(i)); Inst55++; } } catch(e) {}
try { if (Inst56 <= 1000 && typeof (TestInlineX2) != "undefined") {_RecordType("<2483,2495,95>",(TestInlineX2)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (o3) != "undefined") {_RecordType("<2496,2498,95>",(o3)); Inst57++; } } catch(e) {}
  TestInlineX2(o3);
}

try { if (Inst58 <= 1000 && typeof (TestInlineX2) != "undefined") {_RecordType("<2504,2516,98>",(TestInlineX2)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (o3) != "undefined") {_RecordType("<2517,2519,98>",(o3)); Inst59++; } } catch(e) {}
TestInlineX2(o3);
try { if (Inst60 <= 1000 && typeof (TestInlineX2) != "undefined") {_RecordType("<2522,2534,99>",(TestInlineX2)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (o3.h) != "undefined") {_RecordType("<2542,2546,100>",(o3.h)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (o3) != "undefined") {_RecordType("<2542,2544,100>",(o3)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (obj) != "undefined") {_RecordType("<2553,2556,101>",(obj)); Inst63++; } } catch(e) {}
TestInlineX2({
  h: o3.h,
  v: obj
}); // Test that we can inline a call on a non-variable receiver.

try { if (Inst64 <= 1000 && typeof (TestInlineFG) != "undefined") {_RecordType("<2633,2645,104>",(TestInlineFG)); Inst64++; } } catch(e) {}
function TestInlineFG(o) {
try { if (Inst65 <= 1000 && typeof (o) != "undefined") {_RecordType("<2646,2647,104>",(o)); Inst65++; } } catch(e) {}
  // Effect context.
try { if (Inst66 <= 1000 && typeof (o.h) != "undefined") {_RecordType("<2674,2677,106>",(o.h)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (o) != "undefined") {_RecordType("<2674,2675,106>",(o)); Inst67++; } } catch(e) {}
  o.h(); // Value context.

try { if (Inst69 <= 1000 && typeof (o.h) != "undefined") {_RecordType("<2710,2713,108>",(o.h)); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (o) != "undefined") {_RecordType("<2710,2711,108>",(o)); Inst70++; } } catch(e) {}
  var x = o.h();
try { if (Inst68 <= 1000 && typeof (x) != "undefined") {_RecordType("<2706,2707,108>",(x)); Inst68++; } } catch(e) {}
  42;
try { if (Inst71 <= 1000 && typeof (x) != "undefined") {_RecordType("<2725,2726,110>",(x)); Inst71++; } } catch(e) {}
  x;
  42;
try { if (Inst72 <= 1000 && typeof (o.h) != "undefined") {_RecordType("<2736,2739,112>",(o.h)); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (o) != "undefined") {_RecordType("<2736,2737,112>",(o)); Inst73++; } } catch(e) {}
  o.h();

  // Test context.
try { if (Inst74 <= 1000 && typeof (o.h) != "undefined") {_RecordType("<2770,2773,115>",(o.h)); Inst74++; } } catch(e) {}try { if (Inst75 <= 1000 && typeof (o) != "undefined") {_RecordType("<2770,2771,115>",(o)); Inst75++; } } catch(e) {}
  if (!o.h()) {
    false;
  }
}

var obj = {};
try { if (Inst76 <= 1000 && typeof (obj) != "undefined") {_RecordType("<2801,2804,120>",(obj)); Inst76++; } } catch(e) {}

obj.g = function () {
  return 42;
};
try { if (Inst77 <= 1000 && typeof (obj.g) != "undefined") {_RecordType("<2812,2817,122>",(obj.g)); Inst77++; } } catch(e) {}try { if (Inst78 <= 1000 && typeof (obj) != "undefined") {_RecordType("<2812,2815,122>",(obj)); Inst78++; } } catch(e) {}

var o3 = {};
try { if (Inst79 <= 1000 && typeof (o3) != "undefined") {_RecordType("<2855,2857,126>",(o3)); Inst79++; } } catch(e) {}
try { if (Inst82 <= 1000 && typeof (obj) != "undefined") {_RecordType("<2871,2874,127>",(obj)); Inst82++; } } catch(e) {}
o3.v = obj;
try { if (Inst80 <= 1000 && typeof (o3.v) != "undefined") {_RecordType("<2864,2868,127>",(o3.v)); Inst80++; } } catch(e) {}try { if (Inst81 <= 1000 && typeof (o3) != "undefined") {_RecordType("<2864,2866,127>",(o3)); Inst81++; } } catch(e) {}

o3.f = function () {
try { if (Inst85 <= 1000 && typeof (this.v) != "undefined") {_RecordType("<2907,2913,130>",(this.v)); Inst85++; } } catch(e) {}
  return this.v;
};
try { if (Inst83 <= 1000 && typeof (o3.f) != "undefined") {_RecordType("<2877,2881,129>",(o3.f)); Inst83++; } } catch(e) {}try { if (Inst84 <= 1000 && typeof (o3) != "undefined") {_RecordType("<2877,2879,129>",(o3)); Inst84++; } } catch(e) {}

o3.h = function () {
try { if (Inst88 <= 1000 && typeof (this.f().g) != "undefined") {_RecordType("<2949,2959,134>",(this.f().g)); Inst88++; } } catch(e) {}try { if (Inst89 <= 1000 && typeof (this.f) != "undefined") {_RecordType("<2949,2955,134>",(this.f)); Inst89++; } } catch(e) {}
  return this.f().g();
};
try { if (Inst86 <= 1000 && typeof (o3.h) != "undefined") {_RecordType("<2919,2923,133>",(o3.h)); Inst86++; } } catch(e) {}try { if (Inst87 <= 1000 && typeof (o3) != "undefined") {_RecordType("<2919,2921,133>",(o3)); Inst87++; } } catch(e) {}

for (var i = 0; i < 5; i++) {
try { if (Inst90 <= 1000 && typeof (i) != "undefined") {_RecordType("<2976,2977,137>",(i)); Inst90++; } } catch(e) {}try { if (Inst91 <= 1000 && typeof (i) != "undefined") {_RecordType("<2983,2984,137>",(i)); Inst91++; } } catch(e) {}try { if (Inst92 <= 1000 && typeof (i) != "undefined") {_RecordType("<2990,2991,137>",(i)); Inst92++; } } catch(e) {}
try { if (Inst93 <= 1000 && typeof (TestInlineFG) != "undefined") {_RecordType("<2999,3011,138>",(TestInlineFG)); Inst93++; } } catch(e) {}try { if (Inst94 <= 1000 && typeof (o3) != "undefined") {_RecordType("<3012,3014,138>",(o3)); Inst94++; } } catch(e) {}
  TestInlineFG(o3);
}

try { if (Inst95 <= 1000 && typeof (TestInlineFG) != "undefined") {_RecordType("<3020,3032,141>",(TestInlineFG)); Inst95++; } } catch(e) {}try { if (Inst96 <= 1000 && typeof (o3) != "undefined") {_RecordType("<3033,3035,141>",(o3)); Inst96++; } } catch(e) {}
TestInlineFG(o3);
try { if (Inst97 <= 1000 && typeof (TestInlineFG) != "undefined") {_RecordType("<3038,3050,142>",(TestInlineFG)); Inst97++; } } catch(e) {}try { if (Inst98 <= 1000 && typeof (o3.h) != "undefined") {_RecordType("<3058,3062,143>",(o3.h)); Inst98++; } } catch(e) {}try { if (Inst99 <= 1000 && typeof (o3) != "undefined") {_RecordType("<3058,3060,143>",(o3)); Inst99++; } } catch(e) {}try { if (Inst100 <= 1000 && typeof (o3.f) != "undefined") {_RecordType("<3069,3073,144>",(o3.f)); Inst100++; } } catch(e) {}try { if (Inst101 <= 1000 && typeof (o3) != "undefined") {_RecordType("<3069,3071,144>",(o3)); Inst101++; } } catch(e) {}try { if (Inst102 <= 1000 && typeof (obj) != "undefined") {_RecordType("<3080,3083,145>",(obj)); Inst102++; } } catch(e) {}
TestInlineFG({
  h: o3.h,
  f: o3.f,
  v: obj
});

