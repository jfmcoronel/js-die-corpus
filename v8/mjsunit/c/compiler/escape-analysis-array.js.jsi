var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2018 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax
// Test variable index access to array with 1 element.
try { if (Inst0 <= 1000 && typeof (testOneElementArrayVariableIndex) != "undefined") {_RecordType("<265,297,6>",(testOneElementArrayVariableIndex)); Inst0++; } } catch(e) {}
(function testOneElementArrayVariableIndex() {
try { if (Inst1 <= 1000 && typeof (f) != "undefined") {_RecordType("<313,314,7>",(f)); Inst1++; } } catch(e) {}
  function f(i) {
try { if (Inst2 <= 1000 && typeof (i) != "undefined") {_RecordType("<315,316,7>",(i)); Inst2++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (Array) != "undefined") {_RecordType("<338,343,8>",(Array)); Inst4++; } } catch(e) {}
    const a = new Array("first");
try { if (Inst3 <= 1000 && typeof (a) != "undefined") {_RecordType("<330,331,8>",(a)); Inst3++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (a[i]) != "undefined") {_RecordType("<365,369,9>",(a[i])); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (a) != "undefined") {_RecordType("<365,366,9>",(a)); Inst6++; } } catch(e) {}
    return a[i];
  }

  "first";
try { if (Inst7 <= 1000 && typeof (f) != "undefined") {_RecordType("<389,390,13>",(f)); Inst7++; } } catch(e) {}
  f(0);
  "first";
try { if (Inst8 <= 1000 && typeof (f) != "undefined") {_RecordType("<408,409,15>",(f)); Inst8++; } } catch(e) {}
  f(0);
  "first";
try { if (Inst9 <= 1000 && typeof (f) != "undefined") {_RecordType("<427,428,17>",(f)); Inst9++; } } catch(e) {}
  f(0);
})(); // Test variable index access to array with 2 elements.


try { if (Inst10 <= 1000 && typeof (testTwoElementArrayVariableIndex) != "undefined") {_RecordType("<507,539,21>",(testTwoElementArrayVariableIndex)); Inst10++; } } catch(e) {}
(function testTwoElementArrayVariableIndex() {
try { if (Inst11 <= 1000 && typeof (f) != "undefined") {_RecordType("<555,556,22>",(f)); Inst11++; } } catch(e) {}
  function f(i) {
try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<557,558,22>",(i)); Inst12++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (Array) != "undefined") {_RecordType("<580,585,23>",(Array)); Inst14++; } } catch(e) {}
    const a = new Array("first", "second");
try { if (Inst13 <= 1000 && typeof (a) != "undefined") {_RecordType("<572,573,23>",(a)); Inst13++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (a[i]) != "undefined") {_RecordType("<617,621,24>",(a[i])); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (a) != "undefined") {_RecordType("<617,618,24>",(a)); Inst16++; } } catch(e) {}
    return a[i];
  }

  "first";
try { if (Inst17 <= 1000 && typeof (f) != "undefined") {_RecordType("<641,642,28>",(f)); Inst17++; } } catch(e) {}
  f(0);
  "second";
try { if (Inst18 <= 1000 && typeof (f) != "undefined") {_RecordType("<661,662,30>",(f)); Inst18++; } } catch(e) {}
  f(1);
  "first";
try { if (Inst19 <= 1000 && typeof (f) != "undefined") {_RecordType("<680,681,32>",(f)); Inst19++; } } catch(e) {}
  f(0);
  "second";
try { if (Inst20 <= 1000 && typeof (f) != "undefined") {_RecordType("<700,701,34>",(f)); Inst20++; } } catch(e) {}
  f(1);
})();

