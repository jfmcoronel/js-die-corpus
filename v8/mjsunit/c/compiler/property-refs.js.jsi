var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2010 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// Flags: --allow-natives-syntax
try { if (Inst0 <= 1000 && typeof (Load) != "undefined") {_RecordType("<1639,1643,28>",(Load)); Inst0++; } } catch(e) {}
function Load(o) {
try { if (Inst1 <= 1000 && typeof (o) != "undefined") {_RecordType("<1644,1645,28>",(o)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (o.outer.x) != "undefined") {_RecordType("<1658,1667,29>",(o.outer.x)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (o.outer) != "undefined") {_RecordType("<1658,1665,29>",(o.outer)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (o) != "undefined") {_RecordType("<1658,1659,29>",(o)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (o.outer.inner.y) != "undefined") {_RecordType("<1670,1685,29>",(o.outer.inner.y)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (o.outer.inner) != "undefined") {_RecordType("<1670,1683,29>",(o.outer.inner)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (o.outer) != "undefined") {_RecordType("<1670,1677,29>",(o.outer)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (o) != "undefined") {_RecordType("<1670,1671,29>",(o)); Inst8++; } } catch(e) {}
  return o.outer.x | o.outer.inner.y;
}

try { if (Inst9 <= 1000 && typeof (StoreXY) != "undefined") {_RecordType("<1699,1706,32>",(StoreXY)); Inst9++; } } catch(e) {}
function StoreXY(o, x, y) {
try { if (Inst10 <= 1000 && typeof (o) != "undefined") {_RecordType("<1707,1708,32>",(o)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (x) != "undefined") {_RecordType("<1710,1711,32>",(x)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (y) != "undefined") {_RecordType("<1713,1714,32>",(y)); Inst12++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (x) != "undefined") {_RecordType("<1732,1733,33>",(x)); Inst16++; } } catch(e) {}
  o.outer.x = x;
try { if (Inst13 <= 1000 && typeof (o.outer.x) != "undefined") {_RecordType("<1720,1729,33>",(o.outer.x)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (o.outer) != "undefined") {_RecordType("<1720,1727,33>",(o.outer)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (o) != "undefined") {_RecordType("<1720,1721,33>",(o)); Inst15++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (y) != "undefined") {_RecordType("<1755,1756,34>",(y)); Inst21++; } } catch(e) {}
  o.outer.inner.y = y;
try { if (Inst17 <= 1000 && typeof (o.outer.inner.y) != "undefined") {_RecordType("<1737,1752,34>",(o.outer.inner.y)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (o.outer.inner) != "undefined") {_RecordType("<1737,1750,34>",(o.outer.inner)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (o.outer) != "undefined") {_RecordType("<1737,1744,34>",(o.outer)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (o) != "undefined") {_RecordType("<1737,1738,34>",(o)); Inst20++; } } catch(e) {}
}

try { if (Inst22 <= 1000 && typeof (LoadXY) != "undefined") {_RecordType("<1770,1776,37>",(LoadXY)); Inst22++; } } catch(e) {}
function LoadXY(x, y) {
try { if (Inst23 <= 1000 && typeof (x) != "undefined") {_RecordType("<1777,1778,37>",(x)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (y) != "undefined") {_RecordType("<1780,1781,37>",(y)); Inst24++; } } catch(e) {}
  var object = {
    outer: {
      x: 0,
      inner: {
        y: 0
      }
    }
  };
try { if (Inst25 <= 1000 && typeof (object) != "undefined") {_RecordType("<1791,1797,38>",(object)); Inst25++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (StoreXY) != "undefined") {_RecordType("<1876,1883,46>",(StoreXY)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (object) != "undefined") {_RecordType("<1884,1890,46>",(object)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (x) != "undefined") {_RecordType("<1892,1893,46>",(x)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (y) != "undefined") {_RecordType("<1895,1896,46>",(y)); Inst29++; } } catch(e) {}
  StoreXY(object, x, y);
try { if (Inst30 <= 1000 && typeof (Load) != "undefined") {_RecordType("<1908,1912,47>",(Load)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (object) != "undefined") {_RecordType("<1913,1919,47>",(object)); Inst31++; } } catch(e) {}
  return Load(object);
}

for (var i = 0; i < 5; i++) {
try { if (Inst32 <= 1000 && typeof (i) != "undefined") {_RecordType("<1934,1935,50>",(i)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (i) != "undefined") {_RecordType("<1941,1942,50>",(i)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (i) != "undefined") {_RecordType("<1948,1949,50>",(i)); Inst34++; } } catch(e) {}
try { if (Inst35 <= 1000 && typeof (LoadXY) != "undefined") {_RecordType("<1957,1963,51>",(LoadXY)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (i) != "undefined") {_RecordType("<1964,1965,51>",(i)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (i) != "undefined") {_RecordType("<1967,1968,51>",(i)); Inst37++; } } catch(e) {}
  LoadXY(i, i);
}

try { if (Inst38 <= 1000 && typeof (LoadXY) != "undefined") {_RecordType("<1974,1980,54>",(LoadXY)); Inst38++; } } catch(e) {}
LoadXY(6, 6);
42 | 87;
try { if (Inst39 <= 1000 && typeof (LoadXY) != "undefined") {_RecordType("<1997,2003,56>",(LoadXY)); Inst39++; } } catch(e) {}
LoadXY(42, 87);
42 | 87;
try { if (Inst40 <= 1000 && typeof (LoadXY) != "undefined") {_RecordType("<2022,2028,58>",(LoadXY)); Inst40++; } } catch(e) {}
LoadXY(42, 87);
42 | 99;
try { if (Inst41 <= 1000 && typeof (LoadXY) != "undefined") {_RecordType("<2047,2053,60>",(LoadXY)); Inst41++; } } catch(e) {}
LoadXY(42, "99");

