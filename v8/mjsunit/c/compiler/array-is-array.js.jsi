var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2018 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax
// Test JSObjectIsArray in JSTypedLowering for the case that the
// input value is known to be an Array literal.
(function () {
try { if (Inst0 <= 1000 && typeof (foo) != "undefined") {_RecordType("<339,342,8>",(foo)); Inst0++; } } catch(e) {}
  function foo() {
try { if (Inst1 <= 1000 && typeof (Array.isArray) != "undefined") {_RecordType("<358,371,9>",(Array.isArray)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Array) != "undefined") {_RecordType("<358,363,9>",(Array)); Inst2++; } } catch(e) {}
    return Array.isArray([]);
  }

try { if (Inst3 <= 1000 && typeof (foo) != "undefined") {_RecordType("<384,387,12>",(foo)); Inst3++; } } catch(e) {}
  foo();
try { if (Inst4 <= 1000 && typeof (foo) != "undefined") {_RecordType("<393,396,13>",(foo)); Inst4++; } } catch(e) {}
  foo();
try { if (Inst5 <= 1000 && typeof (foo) != "undefined") {_RecordType("<402,405,14>",(foo)); Inst5++; } } catch(e) {}
  foo();
})(); // Test JSObjectIsArray in JSTypedLowering for the case that the
// input value is known to be a Proxy for an Array literal.


(function () {
try { if (Inst6 <= 1000 && typeof (foo) != "undefined") {_RecordType("<568,571,20>",(foo)); Inst6++; } } catch(e) {}
  function foo() {
try { if (Inst7 <= 1000 && typeof (Array.isArray) != "undefined") {_RecordType("<587,600,21>",(Array.isArray)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Array) != "undefined") {_RecordType("<587,592,21>",(Array)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<605,610,21>",(Proxy)); Inst9++; } } catch(e) {}
    return Array.isArray(new Proxy([], {}));
  }

try { if (Inst10 <= 1000 && typeof (foo) != "undefined") {_RecordType("<628,631,24>",(foo)); Inst10++; } } catch(e) {}
  foo();
try { if (Inst11 <= 1000 && typeof (foo) != "undefined") {_RecordType("<637,640,25>",(foo)); Inst11++; } } catch(e) {}
  foo();
try { if (Inst12 <= 1000 && typeof (foo) != "undefined") {_RecordType("<646,649,26>",(foo)); Inst12++; } } catch(e) {}
  foo();
})(); // Test JSObjectIsArray in JSTypedLowering for the case that the
// input value is known to be an Object literal.


(function () {
try { if (Inst13 <= 1000 && typeof (foo) != "undefined") {_RecordType("<801,804,32>",(foo)); Inst13++; } } catch(e) {}
  function foo() {
try { if (Inst14 <= 1000 && typeof (Array.isArray) != "undefined") {_RecordType("<820,833,33>",(Array.isArray)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Array) != "undefined") {_RecordType("<820,825,33>",(Array)); Inst15++; } } catch(e) {}
    return Array.isArray({});
  }

try { if (Inst16 <= 1000 && typeof (foo) != "undefined") {_RecordType("<846,849,36>",(foo)); Inst16++; } } catch(e) {}
  foo();
try { if (Inst17 <= 1000 && typeof (foo) != "undefined") {_RecordType("<855,858,37>",(foo)); Inst17++; } } catch(e) {}
  foo();
try { if (Inst18 <= 1000 && typeof (foo) != "undefined") {_RecordType("<864,867,38>",(foo)); Inst18++; } } catch(e) {}
  foo();
})(); // Test JSObjectIsArray in JSTypedLowering for the case that the
// input value is known to be a Proxy for an Object literal.


(function () {
try { if (Inst19 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1031,1034,44>",(foo)); Inst19++; } } catch(e) {}
  function foo() {
try { if (Inst20 <= 1000 && typeof (Array.isArray) != "undefined") {_RecordType("<1050,1063,45>",(Array.isArray)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Array) != "undefined") {_RecordType("<1050,1055,45>",(Array)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<1068,1073,45>",(Proxy)); Inst22++; } } catch(e) {}
    return Array.isArray(new Proxy({}, {}));
  }

try { if (Inst23 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1091,1094,48>",(foo)); Inst23++; } } catch(e) {}
  foo();
try { if (Inst24 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1100,1103,49>",(foo)); Inst24++; } } catch(e) {}
  foo();
try { if (Inst25 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1109,1112,50>",(foo)); Inst25++; } } catch(e) {}
  foo();
})(); // Test JSObjectIsArray in JSTypedLowering for the case that
// TurboFan doesn't know anything about the input value.


(function () {
try { if (Inst26 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1268,1271,56>",(foo)); Inst26++; } } catch(e) {}
  function foo(x) {
try { if (Inst27 <= 1000 && typeof (x) != "undefined") {_RecordType("<1272,1273,56>",(x)); Inst27++; } } catch(e) {}
try { if (Inst28 <= 1000 && typeof (Array.isArray) != "undefined") {_RecordType("<1288,1301,57>",(Array.isArray)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (Array) != "undefined") {_RecordType("<1288,1293,57>",(Array)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (x) != "undefined") {_RecordType("<1302,1303,57>",(x)); Inst30++; } } catch(e) {}
    return Array.isArray(x);
  }

try { if (Inst31 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1313,1316,60>",(foo)); Inst31++; } } catch(e) {}
  foo({});
try { if (Inst32 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1324,1327,61>",(foo)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<1332,1337,61>",(Proxy)); Inst33++; } } catch(e) {}
  foo(new Proxy({}, {}));
try { if (Inst34 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1350,1353,62>",(foo)); Inst34++; } } catch(e) {}
  foo([]);
try { if (Inst35 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1361,1364,63>",(foo)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<1369,1374,63>",(Proxy)); Inst36++; } } catch(e) {}
  foo(new Proxy([], {}));

  (() => {
try { if (Inst39 <= 1000 && typeof (Proxy.revocable) != "undefined") {_RecordType("<1443,1458,69>",(Proxy.revocable)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<1443,1448,69>",(Proxy)); Inst40++; } } catch(e) {}
    const {
      proxy,
      revoke
    } = Proxy.revocable([], {});
try { if (Inst37 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<1415,1420,67>",(proxy)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (revoke) != "undefined") {_RecordType("<1428,1434,68>",(revoke)); Inst38++; } } catch(e) {}
try { if (Inst41 <= 1000 && typeof (revoke) != "undefined") {_RecordType("<1472,1478,70>",(revoke)); Inst41++; } } catch(e) {}
    revoke();
try { if (Inst42 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1486,1489,71>",(foo)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<1490,1495,71>",(proxy)); Inst43++; } } catch(e) {}
    foo(proxy);
  })();

try { if (Inst44 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<1509,1518,74>",(TypeError)); Inst44++; } } catch(e) {}
  TypeError;
try { if (Inst45 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1522,1525,75>",(foo)); Inst45++; } } catch(e) {}
  foo({});
try { if (Inst46 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1533,1536,76>",(foo)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<1541,1546,76>",(Proxy)); Inst47++; } } catch(e) {}
  foo(new Proxy({}, {}));
try { if (Inst48 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1559,1562,77>",(foo)); Inst48++; } } catch(e) {}
  foo([]);
try { if (Inst49 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1570,1573,78>",(foo)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<1578,1583,78>",(Proxy)); Inst50++; } } catch(e) {}
  foo(new Proxy([], {}));

  (() => {
try { if (Inst53 <= 1000 && typeof (Proxy.revocable) != "undefined") {_RecordType("<1652,1667,84>",(Proxy.revocable)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<1652,1657,84>",(Proxy)); Inst54++; } } catch(e) {}
    const {
      proxy,
      revoke
    } = Proxy.revocable([], {});
try { if (Inst51 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<1624,1629,82>",(proxy)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (revoke) != "undefined") {_RecordType("<1637,1643,83>",(revoke)); Inst52++; } } catch(e) {}
try { if (Inst55 <= 1000 && typeof (revoke) != "undefined") {_RecordType("<1681,1687,85>",(revoke)); Inst55++; } } catch(e) {}
    revoke();
try { if (Inst56 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1695,1698,86>",(foo)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<1699,1704,86>",(proxy)); Inst57++; } } catch(e) {}
    foo(proxy);
  })();

try { if (Inst58 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<1718,1727,89>",(TypeError)); Inst58++; } } catch(e) {}
  TypeError;
})(); // Test JSObjectIsArray in JSTypedLowering for the case that
// we pass a revoked proxy and catch the exception locally.


(function () {
try { if (Inst59 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1884,1887,95>",(foo)); Inst59++; } } catch(e) {}
  function foo(x) {
try { if (Inst60 <= 1000 && typeof (x) != "undefined") {_RecordType("<1888,1889,95>",(x)); Inst60++; } } catch(e) {}
try { if (Inst63 <= 1000 && typeof (Proxy.revocable) != "undefined") {_RecordType("<1939,1954,99>",(Proxy.revocable)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<1939,1944,99>",(Proxy)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (x) != "undefined") {_RecordType("<1955,1956,99>",(x)); Inst65++; } } catch(e) {}
    const {
      proxy,
      revoke
    } = Proxy.revocable(x, {});
try { if (Inst61 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<1911,1916,97>",(proxy)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (revoke) != "undefined") {_RecordType("<1924,1930,98>",(revoke)); Inst62++; } } catch(e) {}
try { if (Inst66 <= 1000 && typeof (revoke) != "undefined") {_RecordType("<1967,1973,100>",(revoke)); Inst66++; } } catch(e) {}
    revoke();

try { if (Inst70 <= 1000 && typeof (e) != "undefined") {_RecordType("<2036,2037,104>",(e)); Inst70++; } } catch(e) {}
    try {
try { if (Inst67 <= 1000 && typeof (Array.isArray) != "undefined") {_RecordType("<2001,2014,103>",(Array.isArray)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (Array) != "undefined") {_RecordType("<2001,2006,103>",(Array)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<2015,2020,103>",(proxy)); Inst69++; } } catch(e) {}
      return Array.isArray(proxy);
    } catch (e) {
try { if (Inst71 <= 1000 && typeof (e) != "undefined") {_RecordType("<2054,2055,105>",(e)); Inst71++; } } catch(e) {}
      return e;
    }
  }

try { if (Inst72 <= 1000 && typeof (foo) != "undefined") {_RecordType("<2070,2073,109>",(foo)); Inst72++; } } catch(e) {}
  foo([]);
try { if (Inst73 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<2081,2090,110>",(TypeError)); Inst73++; } } catch(e) {}
  TypeError;
try { if (Inst74 <= 1000 && typeof (foo) != "undefined") {_RecordType("<2094,2097,111>",(foo)); Inst74++; } } catch(e) {}
  foo({});
try { if (Inst75 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<2105,2114,112>",(TypeError)); Inst75++; } } catch(e) {}
  TypeError;
try { if (Inst76 <= 1000 && typeof (foo) != "undefined") {_RecordType("<2118,2121,113>",(foo)); Inst76++; } } catch(e) {}
  foo([]);
try { if (Inst77 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<2129,2138,114>",(TypeError)); Inst77++; } } catch(e) {}
  TypeError;
try { if (Inst78 <= 1000 && typeof (foo) != "undefined") {_RecordType("<2142,2145,115>",(foo)); Inst78++; } } catch(e) {}
  foo({});
try { if (Inst79 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<2153,2162,116>",(TypeError)); Inst79++; } } catch(e) {}
  TypeError;
})();

