var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2017 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax --opt
// Test side effects on arguments evaluation.
(function () {
  const a = [];
try { if (Inst0 <= 1000 && typeof (a) != "undefined") {_RecordType("<275,276,7>",(a)); Inst0++; } } catch(e) {}

try { if (Inst2 <= 1000 && typeof (x) != "undefined") {_RecordType("<298,299,9>",(x)); Inst2++; } } catch(e) {}
  const bar = x => {
try { if (Inst3 <= 1000 && typeof (a.push) != "undefined") {_RecordType("<309,315,10>",(a.push)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (a) != "undefined") {_RecordType("<309,310,10>",(a)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (x) != "undefined") {_RecordType("<316,317,10>",(x)); Inst5++; } } catch(e) {}
    a.push(x);
try { if (Inst6 <= 1000 && typeof (x) != "undefined") {_RecordType("<331,332,11>",(x)); Inst6++; } } catch(e) {}
    return x;
  };
try { if (Inst1 <= 1000 && typeof (bar) != "undefined") {_RecordType("<292,295,9>",(bar)); Inst1++; } } catch(e) {}

try { if (Inst8 <= 1000 && typeof (x) != "undefined") {_RecordType("<354,355,14>",(x)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (a.push) != "undefined") {_RecordType("<359,365,14>",(a.push)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (a) != "undefined") {_RecordType("<359,360,14>",(a)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (bar) != "undefined") {_RecordType("<366,369,14>",(bar)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (x) != "undefined") {_RecordType("<370,371,14>",(x)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (bar) != "undefined") {_RecordType("<374,377,14>",(bar)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (x) != "undefined") {_RecordType("<378,379,14>",(x)); Inst14++; } } catch(e) {}
  const foo = x => a.push(bar(x), bar(x));
try { if (Inst7 <= 1000 && typeof (foo) != "undefined") {_RecordType("<348,351,14>",(foo)); Inst7++; } } catch(e) {}

try { if (Inst15 <= 1000 && typeof (foo) != "undefined") {_RecordType("<386,389,16>",(foo)); Inst15++; } } catch(e) {}
  foo(1);
try { if (Inst16 <= 1000 && typeof (foo) != "undefined") {_RecordType("<396,399,17>",(foo)); Inst16++; } } catch(e) {}
  foo(2);
try { if (Inst17 <= 1000 && typeof (foo) != "undefined") {_RecordType("<406,409,18>",(foo)); Inst17++; } } catch(e) {}
  foo(3);
  [1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3];
try { if (Inst18 <= 1000 && typeof (a) != "undefined") {_RecordType("<456,457,20>",(a)); Inst18++; } } catch(e) {}
  a;
})(); // Test invalidation on arguments evaluation.


(function () {
  let y = 1;
try { if (Inst19 <= 1000 && typeof (y) != "undefined") {_RecordType("<534,535,25>",(y)); Inst19++; } } catch(e) {}
  const a = [];
try { if (Inst20 <= 1000 && typeof (a) != "undefined") {_RecordType("<549,550,26>",(a)); Inst20++; } } catch(e) {}

try { if (Inst22 <= 1000 && typeof (x) != "undefined") {_RecordType("<572,573,28>",(x)); Inst22++; } } catch(e) {}
  const bar = x => {
try { if (Inst23 <= 1000 && typeof (a.push) != "undefined") {_RecordType("<583,589,29>",(a.push)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (a) != "undefined") {_RecordType("<583,584,29>",(a)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (y) != "undefined") {_RecordType("<590,591,29>",(y)); Inst25++; } } catch(e) {}
    a.push(y);
try { if (Inst26 <= 1000 && typeof (x) != "undefined") {_RecordType("<605,606,30>",(x)); Inst26++; } } catch(e) {}
    return x;
  };
try { if (Inst21 <= 1000 && typeof (bar) != "undefined") {_RecordType("<566,569,28>",(bar)); Inst21++; } } catch(e) {}

try { if (Inst28 <= 1000 && typeof (x) != "undefined") {_RecordType("<628,629,33>",(x)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (a.push) != "undefined") {_RecordType("<633,639,33>",(a.push)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (a) != "undefined") {_RecordType("<633,634,33>",(a)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (bar) != "undefined") {_RecordType("<640,643,33>",(bar)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (x) != "undefined") {_RecordType("<644,645,33>",(x)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (bar) != "undefined") {_RecordType("<648,651,33>",(bar)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (x) != "undefined") {_RecordType("<652,653,33>",(x)); Inst34++; } } catch(e) {}
  const foo = x => a.push(bar(x), bar(x));
try { if (Inst27 <= 1000 && typeof (foo) != "undefined") {_RecordType("<622,625,33>",(foo)); Inst27++; } } catch(e) {}

try { if (Inst35 <= 1000 && typeof (foo) != "undefined") {_RecordType("<660,663,35>",(foo)); Inst35++; } } catch(e) {}
  foo(1);
  y = 2;
try { if (Inst36 <= 1000 && typeof (y) != "undefined") {_RecordType("<670,671,36>",(y)); Inst36++; } } catch(e) {}
try { if (Inst37 <= 1000 && typeof (foo) != "undefined") {_RecordType("<679,682,37>",(foo)); Inst37++; } } catch(e) {}
  foo(2);
  y = 3;
try { if (Inst38 <= 1000 && typeof (y) != "undefined") {_RecordType("<689,690,38>",(y)); Inst38++; } } catch(e) {}
try { if (Inst39 <= 1000 && typeof (foo) != "undefined") {_RecordType("<698,701,39>",(foo)); Inst39++; } } catch(e) {}
  foo(3);
try { if (Inst40 <= 1000 && typeof (foo) != "undefined") {_RecordType("<708,711,40>",(foo)); Inst40++; } } catch(e) {}
  foo;
  y = 4.4;
try { if (Inst41 <= 1000 && typeof (y) != "undefined") {_RecordType("<715,716,41>",(y)); Inst41++; } } catch(e) {}
try { if (Inst42 <= 1000 && typeof (foo) != "undefined") {_RecordType("<726,729,42>",(foo)); Inst42++; } } catch(e) {}
  foo(4);
  [1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4.4, 4.4, 4, 4];
try { if (Inst43 <= 1000 && typeof (a) != "undefined") {_RecordType("<792,793,44>",(a)); Inst43++; } } catch(e) {}
  a;
})();

(function () {
  let y = 1;
try { if (Inst44 <= 1000 && typeof (y) != "undefined") {_RecordType("<823,824,48>",(y)); Inst44++; } } catch(e) {}
  const a = [0.5];
try { if (Inst45 <= 1000 && typeof (a) != "undefined") {_RecordType("<838,839,49>",(a)); Inst45++; } } catch(e) {}

try { if (Inst47 <= 1000 && typeof (x) != "undefined") {_RecordType("<864,865,51>",(x)); Inst47++; } } catch(e) {}
  const bar = x => {
try { if (Inst48 <= 1000 && typeof (a.push) != "undefined") {_RecordType("<875,881,52>",(a.push)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (a) != "undefined") {_RecordType("<875,876,52>",(a)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (y) != "undefined") {_RecordType("<882,883,52>",(y)); Inst50++; } } catch(e) {}
    a.push(y);
try { if (Inst51 <= 1000 && typeof (x) != "undefined") {_RecordType("<897,898,53>",(x)); Inst51++; } } catch(e) {}
    return x;
  };
try { if (Inst46 <= 1000 && typeof (bar) != "undefined") {_RecordType("<858,861,51>",(bar)); Inst46++; } } catch(e) {}

try { if (Inst53 <= 1000 && typeof (x) != "undefined") {_RecordType("<920,921,56>",(x)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (a.push) != "undefined") {_RecordType("<925,931,56>",(a.push)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (a) != "undefined") {_RecordType("<925,926,56>",(a)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (bar) != "undefined") {_RecordType("<932,935,56>",(bar)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (x) != "undefined") {_RecordType("<936,937,56>",(x)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (bar) != "undefined") {_RecordType("<940,943,56>",(bar)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (x) != "undefined") {_RecordType("<944,945,56>",(x)); Inst59++; } } catch(e) {}
  const foo = x => a.push(bar(x), bar(x));
try { if (Inst52 <= 1000 && typeof (foo) != "undefined") {_RecordType("<914,917,56>",(foo)); Inst52++; } } catch(e) {}

try { if (Inst60 <= 1000 && typeof (foo) != "undefined") {_RecordType("<952,955,58>",(foo)); Inst60++; } } catch(e) {}
  foo(1);
  y = 2;
try { if (Inst61 <= 1000 && typeof (y) != "undefined") {_RecordType("<962,963,59>",(y)); Inst61++; } } catch(e) {}
try { if (Inst62 <= 1000 && typeof (foo) != "undefined") {_RecordType("<971,974,60>",(foo)); Inst62++; } } catch(e) {}
  foo(2);
  y = 3;
try { if (Inst63 <= 1000 && typeof (y) != "undefined") {_RecordType("<981,982,61>",(y)); Inst63++; } } catch(e) {}
try { if (Inst64 <= 1000 && typeof (foo) != "undefined") {_RecordType("<990,993,62>",(foo)); Inst64++; } } catch(e) {}
  foo(3);
try { if (Inst65 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1000,1003,63>",(foo)); Inst65++; } } catch(e) {}
  foo;
  y = '4';
try { if (Inst66 <= 1000 && typeof (y) != "undefined") {_RecordType("<1007,1008,64>",(y)); Inst66++; } } catch(e) {}
try { if (Inst67 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1018,1021,65>",(foo)); Inst67++; } } catch(e) {}
  foo(4);
  [0.5, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, '4', '4', 4, 4];
try { if (Inst68 <= 1000 && typeof (a) != "undefined") {_RecordType("<1089,1090,67>",(a)); Inst68++; } } catch(e) {}
  a;
})();

