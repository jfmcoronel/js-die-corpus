var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2014 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax --turbo-filter=test2
try { if (Inst0 <= 1000 && typeof (test) != "undefined") {_RecordType("<230,234,5>",(test)); Inst0++; } } catch(e) {}
function test(n) {
try { if (Inst1 <= 1000 && typeof (n) != "undefined") {_RecordType("<235,236,5>",(n)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (Array) != "undefined") {_RecordType("<249,254,6>",(Array)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (n) != "undefined") {_RecordType("<255,256,6>",(n)); Inst3++; } } catch(e) {}
  return Array(n);
}

try { if (Inst4 <= 1000 && typeof (test2) != "undefined") {_RecordType("<271,276,9>",(test2)); Inst4++; } } catch(e) {}
function test2() {
try { if (Inst5 <= 1000 && typeof (test) != "undefined") {_RecordType("<290,294,10>",(test)); Inst5++; } } catch(e) {}
  return test(2);
}

try { if (Inst6 <= 1000 && typeof (test3) != "undefined") {_RecordType("<311,316,13>",(test3)); Inst6++; } } catch(e) {}
function test3(a) {
try { if (Inst7 <= 1000 && typeof (a) != "undefined") {_RecordType("<317,318,13>",(a)); Inst7++; } } catch(e) {}
  a[0] = 1;
try { if (Inst8 <= 1000 && typeof (a[0]) != "undefined") {_RecordType("<324,328,14>",(a[0])); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (a) != "undefined") {_RecordType("<324,325,14>",(a)); Inst9++; } } catch(e) {}
}

try { if (Inst10 <= 1000 && typeof (test) != "undefined") {_RecordType("<337,341,17>",(test)); Inst10++; } } catch(e) {}
test(0);
var smi_array = [1, 2];
try { if (Inst11 <= 1000 && typeof (smi_array) != "undefined") {_RecordType("<350,359,18>",(smi_array)); Inst11++; } } catch(e) {}
smi_array[2] = 3;
try { if (Inst12 <= 1000 && typeof (smi_array[2]) != "undefined") {_RecordType("<370,382,19>",(smi_array[2])); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (smi_array) != "undefined") {_RecordType("<370,379,19>",(smi_array)); Inst13++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (test3) != "undefined") {_RecordType("<388,393,20>",(test3)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (smi_array) != "undefined") {_RecordType("<394,403,20>",(smi_array)); Inst15++; } } catch(e) {}
test3(smi_array);
try { if (Inst17 <= 1000 && typeof (test2) != "undefined") {_RecordType("<425,430,21>",(test2)); Inst17++; } } catch(e) {}
var broken_array = test2();
try { if (Inst16 <= 1000 && typeof (broken_array) != "undefined") {_RecordType("<410,422,21>",(broken_array)); Inst16++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (test3) != "undefined") {_RecordType("<434,439,22>",(test3)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (broken_array) != "undefined") {_RecordType("<440,452,22>",(broken_array)); Inst19++; } } catch(e) {}
test3(broken_array);
try { if (Inst20 <= 1000 && typeof (broken_array[0]) != "undefined") {_RecordType("<459,474,23>",(broken_array[0])); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (broken_array) != "undefined") {_RecordType("<459,471,23>",(broken_array)); Inst21++; } } catch(e) {}
1 + broken_array[0];

