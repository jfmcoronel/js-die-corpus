var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2018 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax --opt
// Test the extreme case where -0 is produced by rounding errors.
(function () {
try { if (Inst0 <= 1000 && typeof (bar) != "undefined") {_RecordType("<298,301,7>",(bar)); Inst0++; } } catch(e) {}
  function bar(x) {
try { if (Inst1 <= 1000 && typeof (x) != "undefined") {_RecordType("<302,303,7>",(x)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (x) != "undefined") {_RecordType("<327,328,8>",(x)); Inst2++; } } catch(e) {}
    return 1e-308 * x;
  }

try { if (Inst3 <= 1000 && typeof (bar) != "undefined") {_RecordType("<337,340,11>",(bar)); Inst3++; } } catch(e) {}
  bar(1);

try { if (Inst4 <= 1000 && typeof (foo) != "undefined") {_RecordType("<357,360,13>",(foo)); Inst4++; } } catch(e) {}
  function foo() {
try { if (Inst5 <= 1000 && typeof (Object.is) != "undefined") {_RecordType("<376,385,14>",(Object.is)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Object) != "undefined") {_RecordType("<376,382,14>",(Object)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (bar) != "undefined") {_RecordType("<390,393,14>",(bar)); Inst7++; } } catch(e) {}
    return Object.is(-0, bar(-1e-308));
  }

try { if (Inst8 <= 1000 && typeof (foo) != "undefined") {_RecordType("<412,415,17>",(foo)); Inst8++; } } catch(e) {}
  foo();
try { if (Inst9 <= 1000 && typeof (foo) != "undefined") {_RecordType("<421,424,18>",(foo)); Inst9++; } } catch(e) {}
  foo();
try { if (Inst10 <= 1000 && typeof (foo) != "undefined") {_RecordType("<430,433,19>",(foo)); Inst10++; } } catch(e) {}
  foo();
})(); // Test that multiplication of integer by 0 produces the correct results.


(function () {
try { if (Inst11 <= 1000 && typeof (foo) != "undefined") {_RecordType("<545,548,24>",(foo)); Inst11++; } } catch(e) {}
  function foo(x) {
try { if (Inst12 <= 1000 && typeof (x) != "undefined") {_RecordType("<549,550,24>",(x)); Inst12++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (Math.round) != "undefined") {_RecordType("<569,579,25>",(Math.round)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Math) != "undefined") {_RecordType("<569,573,25>",(Math)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (x) != "undefined") {_RecordType("<580,581,25>",(x)); Inst15++; } } catch(e) {}
    return 0 * Math.round(x);
  }

  0;
try { if (Inst16 <= 1000 && typeof (foo) != "undefined") {_RecordType("<596,599,29>",(foo)); Inst16++; } } catch(e) {}
  foo(0.1);
  -0;
try { if (Inst17 <= 1000 && typeof (foo) != "undefined") {_RecordType("<614,617,31>",(foo)); Inst17++; } } catch(e) {}
  foo(-0.1);
try { if (Inst18 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<627,630,32>",(NaN)); Inst18++; } } catch(e) {}
  NaN;
try { if (Inst19 <= 1000 && typeof (foo) != "undefined") {_RecordType("<634,637,33>",(foo)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<638,641,33>",(NaN)); Inst20++; } } catch(e) {}
  foo(NaN);
try { if (Inst21 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<646,649,34>",(NaN)); Inst21++; } } catch(e) {}
  NaN;
try { if (Inst22 <= 1000 && typeof (foo) != "undefined") {_RecordType("<653,656,35>",(foo)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<657,665,35>",(Infinity)); Inst23++; } } catch(e) {}
  foo(Infinity);
try { if (Inst24 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<670,673,36>",(NaN)); Inst24++; } } catch(e) {}
  NaN;
try { if (Inst25 <= 1000 && typeof (foo) != "undefined") {_RecordType("<677,680,37>",(foo)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<682,690,37>",(Infinity)); Inst26++; } } catch(e) {}
  foo(-Infinity);
  0;
try { if (Inst27 <= 1000 && typeof (foo) != "undefined") {_RecordType("<700,703,39>",(foo)); Inst27++; } } catch(e) {}
  foo(0.1);
  -0;
try { if (Inst28 <= 1000 && typeof (foo) != "undefined") {_RecordType("<718,721,41>",(foo)); Inst28++; } } catch(e) {}
  foo(-0.1);
try { if (Inst29 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<731,734,42>",(NaN)); Inst29++; } } catch(e) {}
  NaN;
try { if (Inst30 <= 1000 && typeof (foo) != "undefined") {_RecordType("<738,741,43>",(foo)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<742,745,43>",(NaN)); Inst31++; } } catch(e) {}
  foo(NaN);
try { if (Inst32 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<750,753,44>",(NaN)); Inst32++; } } catch(e) {}
  NaN;
try { if (Inst33 <= 1000 && typeof (foo) != "undefined") {_RecordType("<757,760,45>",(foo)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<761,769,45>",(Infinity)); Inst34++; } } catch(e) {}
  foo(Infinity);
try { if (Inst35 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<774,777,46>",(NaN)); Inst35++; } } catch(e) {}
  NaN;
try { if (Inst36 <= 1000 && typeof (foo) != "undefined") {_RecordType("<781,784,47>",(foo)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<786,794,47>",(Infinity)); Inst37++; } } catch(e) {}
  foo(-Infinity);
})(); // Test that multiplication properly preserves -0 and NaN, and doesn't
// cut it short incorrectly.


(function () {
try { if (Inst38 <= 1000 && typeof (foo) != "undefined") {_RecordType("<931,934,53>",(foo)); Inst38++; } } catch(e) {}
  function foo(x, y) {
try { if (Inst39 <= 1000 && typeof (x) != "undefined") {_RecordType("<935,936,53>",(x)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (y) != "undefined") {_RecordType("<938,939,53>",(y)); Inst40++; } } catch(e) {}
try { if (Inst42 <= 1000 && typeof (Math.sign) != "undefined") {_RecordType("<951,960,54>",(Math.sign)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (Math) != "undefined") {_RecordType("<951,955,54>",(Math)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (x) != "undefined") {_RecordType("<961,962,54>",(x)); Inst44++; } } catch(e) {}
    x = Math.sign(x);
try { if (Inst41 <= 1000 && typeof (x) != "undefined") {_RecordType("<947,948,54>",(x)); Inst41++; } } catch(e) {}
try { if (Inst46 <= 1000 && typeof (Math.sign) != "undefined") {_RecordType("<973,982,55>",(Math.sign)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (Math) != "undefined") {_RecordType("<973,977,55>",(Math)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (y) != "undefined") {_RecordType("<983,984,55>",(y)); Inst48++; } } catch(e) {}
    y = Math.sign(y);
try { if (Inst45 <= 1000 && typeof (y) != "undefined") {_RecordType("<969,970,55>",(y)); Inst45++; } } catch(e) {}
try { if (Inst49 <= 1000 && typeof (Math.min) != "undefined") {_RecordType("<998,1006,56>",(Math.min)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (Math) != "undefined") {_RecordType("<998,1002,56>",(Math)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (x) != "undefined") {_RecordType("<1007,1008,56>",(x)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (y) != "undefined") {_RecordType("<1011,1012,56>",(y)); Inst52++; } } catch(e) {}
    return Math.min(x * y, 0);
  }

  0;
try { if (Inst53 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1030,1033,60>",(foo)); Inst53++; } } catch(e) {}
  foo(1, 0);
  -0;
try { if (Inst54 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1049,1052,62>",(foo)); Inst54++; } } catch(e) {}
  foo(1, -0);
try { if (Inst55 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<1063,1066,63>",(NaN)); Inst55++; } } catch(e) {}
  NaN;
try { if (Inst56 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1070,1073,64>",(foo)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<1074,1077,64>",(NaN)); Inst57++; } } catch(e) {}
  foo(NaN, -0);
  0;
try { if (Inst58 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1091,1094,66>",(foo)); Inst58++; } } catch(e) {}
  foo(1, 0);
  -0;
try { if (Inst59 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1110,1113,68>",(foo)); Inst59++; } } catch(e) {}
  foo(1, -0);
try { if (Inst60 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<1124,1127,69>",(NaN)); Inst60++; } } catch(e) {}
  NaN;
try { if (Inst61 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1131,1134,70>",(foo)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<1135,1138,70>",(NaN)); Inst62++; } } catch(e) {}
  foo(NaN, -0);
})();

