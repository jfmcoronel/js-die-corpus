var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2015 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax
0;
try { if (Inst0 <= 1000 && typeof ("".length) != "undefined") {_RecordType("<203,212,6>",("".length)); Inst0++; } } catch(e) {}
"".length;
1;
try { if (Inst1 <= 1000 && typeof ("a".length) != "undefined") {_RecordType("<217,227,8>",("a".length)); Inst1++; } } catch(e) {}
"a".length;
2;
try { if (Inst2 <= 1000 && typeof (("a" + "b").length) != "undefined") {_RecordType("<232,250,10>",(("a" + "b").length)); Inst2++; } } catch(e) {}
("a" + "b").length;

try { if (Inst3 <= 1000 && typeof (id) != "undefined") {_RecordType("<262,264,12>",(id)); Inst3++; } } catch(e) {}
function id(x) {
try { if (Inst4 <= 1000 && typeof (x) != "undefined") {_RecordType("<265,266,12>",(x)); Inst4++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (x) != "undefined") {_RecordType("<279,280,13>",(x)); Inst5++; } } catch(e) {}
  return x;
}

try { if (Inst6 <= 1000 && typeof (f1) != "undefined") {_RecordType("<294,296,16>",(f1)); Inst6++; } } catch(e) {}
function f1(x) {
try { if (Inst7 <= 1000 && typeof (x) != "undefined") {_RecordType("<297,298,16>",(x)); Inst7++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (x.length) != "undefined") {_RecordType("<311,319,17>",(x.length)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (x) != "undefined") {_RecordType("<311,312,17>",(x)); Inst9++; } } catch(e) {}
  return x.length;
}

0;
try { if (Inst10 <= 1000 && typeof (f1) != "undefined") {_RecordType("<327,329,21>",(f1)); Inst10++; } } catch(e) {}
f1("");
1;
try { if (Inst11 <= 1000 && typeof (f1) != "undefined") {_RecordType("<338,340,23>",(f1)); Inst11++; } } catch(e) {}
f1("a");
2;
try { if (Inst12 <= 1000 && typeof (f1) != "undefined") {_RecordType("<350,352,25>",(f1)); Inst12++; } } catch(e) {}
f1("a" + "b");
3;
try { if (Inst13 <= 1000 && typeof (f1) != "undefined") {_RecordType("<368,370,27>",(f1)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (id) != "undefined") {_RecordType("<371,373,27>",(id)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (id) != "undefined") {_RecordType("<381,383,27>",(id)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (id) != "undefined") {_RecordType("<390,392,27>",(id)); Inst16++; } } catch(e) {}
f1(id("a") + id("b" + id("c")));

try { if (Inst17 <= 1000 && typeof (f2) != "undefined") {_RecordType("<411,413,29>",(f2)); Inst17++; } } catch(e) {}
function f2(x, y, z) {
try { if (Inst18 <= 1000 && typeof (x) != "undefined") {_RecordType("<414,415,29>",(x)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (y) != "undefined") {_RecordType("<417,418,29>",(y)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (z) != "undefined") {_RecordType("<420,421,29>",(z)); Inst20++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (x) != "undefined") {_RecordType("<431,432,30>",(x)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (y) != "undefined") {_RecordType("<440,441,30>",(y)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (z) != "undefined") {_RecordType("<449,450,30>",(z)); Inst24++; } } catch(e) {}
  x = x ? "" + y : "" + z;
try { if (Inst21 <= 1000 && typeof (x) != "undefined") {_RecordType("<427,428,30>",(x)); Inst21++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (x.length) != "undefined") {_RecordType("<461,469,31>",(x.length)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (x) != "undefined") {_RecordType("<461,462,31>",(x)); Inst26++; } } catch(e) {}
  return x.length;
}

0;
try { if (Inst27 <= 1000 && typeof (f2) != "undefined") {_RecordType("<477,479,35>",(f2)); Inst27++; } } catch(e) {}
f2(true, "", "a");
1;
try { if (Inst28 <= 1000 && typeof (f2) != "undefined") {_RecordType("<499,501,37>",(f2)); Inst28++; } } catch(e) {}
f2(false, "", "a");
0;
try { if (Inst29 <= 1000 && typeof (f2) != "undefined") {_RecordType("<522,524,39>",(f2)); Inst29++; } } catch(e) {}
f2(true, "", "a");
1;
try { if (Inst30 <= 1000 && typeof (f2) != "undefined") {_RecordType("<544,546,41>",(f2)); Inst30++; } } catch(e) {}
f2(false, "", "a");
3;
try { if (Inst31 <= 1000 && typeof (f2) != "undefined") {_RecordType("<567,569,43>",(f2)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (id) != "undefined") {_RecordType("<576,578,43>",(id)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (id) != "undefined") {_RecordType("<586,588,43>",(id)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (id) != "undefined") {_RecordType("<595,597,43>",(id)); Inst34++; } } catch(e) {}
f2(true, id("a") + id("b" + id("c")), "");

