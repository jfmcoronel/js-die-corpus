var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2016 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax
try { if (Inst0 <= 1000 && typeof (StoreHoleBitPattern) != "undefined") {_RecordType("<210,229,5>",(StoreHoleBitPattern)); Inst0++; } } catch(e) {}
(function StoreHoleBitPattern() {
try { if (Inst1 <= 1000 && typeof (g) != "undefined") {_RecordType("<245,246,6>",(g)); Inst1++; } } catch(e) {}
  function g(src, dst, i) {
try { if (Inst2 <= 1000 && typeof (src) != "undefined") {_RecordType("<247,250,6>",(src)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (dst) != "undefined") {_RecordType("<252,255,6>",(dst)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (i) != "undefined") {_RecordType("<257,258,6>",(i)); Inst4++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (src[i]) != "undefined") {_RecordType("<275,281,7>",(src[i])); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (src) != "undefined") {_RecordType("<275,278,7>",(src)); Inst8++; } } catch(e) {}
    dst[i] = src[i];
try { if (Inst5 <= 1000 && typeof (dst[i]) != "undefined") {_RecordType("<266,272,7>",(dst[i])); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (dst) != "undefined") {_RecordType("<266,269,7>",(dst)); Inst6++; } } catch(e) {}
  }

try { if (Inst10 <= 1000 && typeof (ArrayBuffer) != "undefined") {_RecordType("<302,313,10>",(ArrayBuffer)); Inst10++; } } catch(e) {}
  var b = new ArrayBuffer(16);
try { if (Inst9 <= 1000 && typeof (b) != "undefined") {_RecordType("<294,295,10>",(b)); Inst9++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (Int32Array) != "undefined") {_RecordType("<335,345,11>",(Int32Array)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (b) != "undefined") {_RecordType("<346,347,11>",(b)); Inst13++; } } catch(e) {}
  var i32 = new Int32Array(b);
try { if (Inst11 <= 1000 && typeof (i32) != "undefined") {_RecordType("<325,328,11>",(i32)); Inst11++; } } catch(e) {}
  i32[0] = 0xFFF7FFFF;
try { if (Inst14 <= 1000 && typeof (i32[0]) != "undefined") {_RecordType("<352,358,12>",(i32[0])); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (i32) != "undefined") {_RecordType("<352,355,12>",(i32)); Inst15++; } } catch(e) {}
  i32[1] = 0xFFF7FFFF;
try { if (Inst16 <= 1000 && typeof (i32[1]) != "undefined") {_RecordType("<375,381,13>",(i32[1])); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (i32) != "undefined") {_RecordType("<375,378,13>",(i32)); Inst17++; } } catch(e) {}
  i32[3] = 0xFFF7FFFF;
try { if (Inst18 <= 1000 && typeof (i32[3]) != "undefined") {_RecordType("<398,404,14>",(i32[3])); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (i32) != "undefined") {_RecordType("<398,401,14>",(i32)); Inst19++; } } catch(e) {}
  i32[4] = 0xFFF7FFFF;
try { if (Inst20 <= 1000 && typeof (i32[4]) != "undefined") {_RecordType("<421,427,15>",(i32[4])); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (i32) != "undefined") {_RecordType("<421,424,15>",(i32)); Inst21++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (Float64Array) != "undefined") {_RecordType("<458,470,16>",(Float64Array)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (b) != "undefined") {_RecordType("<471,472,16>",(b)); Inst24++; } } catch(e) {}
  var f64 = new Float64Array(b);
try { if (Inst22 <= 1000 && typeof (f64) != "undefined") {_RecordType("<448,451,16>",(f64)); Inst22++; } } catch(e) {}
  var a = [, 0.1];
try { if (Inst25 <= 1000 && typeof (a) != "undefined") {_RecordType("<481,482,17>",(a)); Inst25++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (g) != "undefined") {_RecordType("<496,497,18>",(g)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (f64) != "undefined") {_RecordType("<498,501,18>",(f64)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (a) != "undefined") {_RecordType("<503,504,18>",(a)); Inst28++; } } catch(e) {}
  g(f64, a, 1);
try { if (Inst29 <= 1000 && typeof (g) != "undefined") {_RecordType("<512,513,19>",(g)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (f64) != "undefined") {_RecordType("<514,517,19>",(f64)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (a) != "undefined") {_RecordType("<519,520,19>",(a)); Inst31++; } } catch(e) {}
  g(f64, a, 1);
try { if (Inst32 <= 1000 && typeof (g) != "undefined") {_RecordType("<528,529,20>",(g)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (f64) != "undefined") {_RecordType("<530,533,20>",(f64)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (a) != "undefined") {_RecordType("<535,536,20>",(a)); Inst34++; } } catch(e) {}
  g(f64, a, 0);
try { if (Inst35 <= 1000 && typeof (Number.isNaN) != "undefined") {_RecordType("<544,556,21>",(Number.isNaN)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (Number) != "undefined") {_RecordType("<544,550,21>",(Number)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (a[0]) != "undefined") {_RecordType("<557,561,21>",(a[0])); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (a) != "undefined") {_RecordType("<557,558,21>",(a)); Inst38++; } } catch(e) {}
  Number.isNaN(a[0]);
})();

try { if (Inst39 <= 1000 && typeof (ConvertHoleToNumberAndStore) != "undefined") {_RecordType("<581,608,24>",(ConvertHoleToNumberAndStore)); Inst39++; } } catch(e) {}
(function ConvertHoleToNumberAndStore() {
try { if (Inst40 <= 1000 && typeof (g) != "undefined") {_RecordType("<624,625,25>",(g)); Inst40++; } } catch(e) {}
  function g(a, i) {
try { if (Inst41 <= 1000 && typeof (a) != "undefined") {_RecordType("<626,627,25>",(a)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (i) != "undefined") {_RecordType("<629,630,25>",(i)); Inst42++; } } catch(e) {}
try { if (Inst44 <= 1000 && typeof (a[i]) != "undefined") {_RecordType("<646,650,26>",(a[i])); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (a) != "undefined") {_RecordType("<646,647,26>",(a)); Inst45++; } } catch(e) {}
    var x = a[i];
try { if (Inst43 <= 1000 && typeof (x) != "undefined") {_RecordType("<642,643,26>",(x)); Inst43++; } } catch(e) {}
try { if (Inst48 <= 1000 && typeof (x) != "undefined") {_RecordType("<664,665,27>",(x)); Inst48++; } } catch(e) {}
    a[i] = +x;
try { if (Inst46 <= 1000 && typeof (a[i]) != "undefined") {_RecordType("<656,660,27>",(a[i])); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (a) != "undefined") {_RecordType("<656,657,27>",(a)); Inst47++; } } catch(e) {}
  }

  var a = [, 0.1];
try { if (Inst49 <= 1000 && typeof (a) != "undefined") {_RecordType("<678,679,30>",(a)); Inst49++; } } catch(e) {}
try { if (Inst50 <= 1000 && typeof (g) != "undefined") {_RecordType("<693,694,31>",(g)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (a) != "undefined") {_RecordType("<695,696,31>",(a)); Inst51++; } } catch(e) {}
  g(a, 1);
try { if (Inst52 <= 1000 && typeof (g) != "undefined") {_RecordType("<704,705,32>",(g)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (a) != "undefined") {_RecordType("<706,707,32>",(a)); Inst53++; } } catch(e) {}
  g(a, 1);
try { if (Inst54 <= 1000 && typeof (g) != "undefined") {_RecordType("<715,716,33>",(g)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (a) != "undefined") {_RecordType("<717,718,33>",(a)); Inst55++; } } catch(e) {}
  g(a, 0);
try { if (Inst56 <= 1000 && typeof (Number.isNaN) != "undefined") {_RecordType("<726,738,34>",(Number.isNaN)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (Number) != "undefined") {_RecordType("<726,732,34>",(Number)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (a[0]) != "undefined") {_RecordType("<739,743,34>",(a[0])); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (a) != "undefined") {_RecordType("<739,740,34>",(a)); Inst59++; } } catch(e) {}
  Number.isNaN(a[0]);
})();

