var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2018 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license
// that can be found in the LICENSE file.
// Flags: --allow-natives-syntax --opt --no-always-opt
(() => {
try { if (Inst0 <= 1000 && typeof (f) != "undefined") {_RecordType("<242,243,6>",(f)); Inst0++; } } catch(e) {}
  function f(a) {
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<244,245,6>",(a)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (Math.abs) != "undefined") {_RecordType("<260,268,7>",(Math.abs)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Math) != "undefined") {_RecordType("<260,264,7>",(Math)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (a) != "undefined") {_RecordType("<269,270,7>",(a)); Inst4++; } } catch(e) {}
    return Math.abs(a);
  }

try { if (Inst5 <= 1000 && typeof (f) != "undefined") {_RecordType("<280,281,10>",(f)); Inst5++; } } catch(e) {}
  f(1);
try { if (Inst6 <= 1000 && typeof (f) != "undefined") {_RecordType("<288,289,11>",(f)); Inst6++; } } catch(e) {}
  f(1);
try { if (Inst7 <= 1000 && typeof (f) != "undefined") {_RecordType("<296,297,12>",(f)); Inst7++; } } catch(e) {}
  f("100");
try { if (Inst8 <= 1000 && typeof (f) != "undefined") {_RecordType("<308,309,13>",(f)); Inst8++; } } catch(e) {}
  f("100");
try { if (Inst9 <= 1000 && typeof (f) != "undefined") {_RecordType("<320,321,14>",(f)); Inst9++; } } catch(e) {}
  f();
})();

(() => {
try { if (Inst10 <= 1000 && typeof (f) != "undefined") {_RecordType("<352,353,18>",(f)); Inst10++; } } catch(e) {}
  function f(a) {
try { if (Inst11 <= 1000 && typeof (a) != "undefined") {_RecordType("<354,355,18>",(a)); Inst11++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (Math.min) != "undefined") {_RecordType("<370,378,19>",(Math.min)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Math) != "undefined") {_RecordType("<370,374,19>",(Math)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (a) != "undefined") {_RecordType("<382,383,19>",(a)); Inst14++; } } catch(e) {}
    return Math.min(1, a);
  }

try { if (Inst15 <= 1000 && typeof (f) != "undefined") {_RecordType("<393,394,22>",(f)); Inst15++; } } catch(e) {}
  f(1);
try { if (Inst16 <= 1000 && typeof (f) != "undefined") {_RecordType("<401,402,23>",(f)); Inst16++; } } catch(e) {}
  f(1);
try { if (Inst17 <= 1000 && typeof (f) != "undefined") {_RecordType("<409,410,24>",(f)); Inst17++; } } catch(e) {}
  f("100");
try { if (Inst18 <= 1000 && typeof (f) != "undefined") {_RecordType("<421,422,25>",(f)); Inst18++; } } catch(e) {}
  f("100");
try { if (Inst19 <= 1000 && typeof (f) != "undefined") {_RecordType("<433,434,26>",(f)); Inst19++; } } catch(e) {}
  f();
})();

(() => {
try { if (Inst20 <= 1000 && typeof (f) != "undefined") {_RecordType("<465,466,30>",(f)); Inst20++; } } catch(e) {}
  function f(a) {
try { if (Inst21 <= 1000 && typeof (a) != "undefined") {_RecordType("<467,468,30>",(a)); Inst21++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (Math.pow) != "undefined") {_RecordType("<483,491,31>",(Math.pow)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Math) != "undefined") {_RecordType("<483,487,31>",(Math)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (a) != "undefined") {_RecordType("<492,493,31>",(a)); Inst24++; } } catch(e) {}
    return Math.pow(a, 10);
  }

try { if (Inst25 <= 1000 && typeof (f) != "undefined") {_RecordType("<507,508,34>",(f)); Inst25++; } } catch(e) {}
  f(1);
try { if (Inst26 <= 1000 && typeof (f) != "undefined") {_RecordType("<515,516,35>",(f)); Inst26++; } } catch(e) {}
  f(1);
try { if (Inst27 <= 1000 && typeof (f) != "undefined") {_RecordType("<523,524,36>",(f)); Inst27++; } } catch(e) {}
  f("100");
try { if (Inst28 <= 1000 && typeof (f) != "undefined") {_RecordType("<535,536,37>",(f)); Inst28++; } } catch(e) {}
  f("100");
try { if (Inst29 <= 1000 && typeof (f) != "undefined") {_RecordType("<547,548,38>",(f)); Inst29++; } } catch(e) {}
  f();
})();

(() => {
try { if (Inst30 <= 1000 && typeof (f) != "undefined") {_RecordType("<579,580,42>",(f)); Inst30++; } } catch(e) {}
  function f(a) {
try { if (Inst31 <= 1000 && typeof (a) != "undefined") {_RecordType("<581,582,42>",(a)); Inst31++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (Math.clz32) != "undefined") {_RecordType("<597,607,43>",(Math.clz32)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (Math) != "undefined") {_RecordType("<597,601,43>",(Math)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (a) != "undefined") {_RecordType("<608,609,43>",(a)); Inst34++; } } catch(e) {}
    return Math.clz32(a);
  }

try { if (Inst35 <= 1000 && typeof (f) != "undefined") {_RecordType("<619,620,46>",(f)); Inst35++; } } catch(e) {}
  f(1);
try { if (Inst36 <= 1000 && typeof (f) != "undefined") {_RecordType("<627,628,47>",(f)); Inst36++; } } catch(e) {}
  f(1);
try { if (Inst37 <= 1000 && typeof (f) != "undefined") {_RecordType("<635,636,48>",(f)); Inst37++; } } catch(e) {}
  f("100");
try { if (Inst38 <= 1000 && typeof (f) != "undefined") {_RecordType("<647,648,49>",(f)); Inst38++; } } catch(e) {}
  f("100");
try { if (Inst39 <= 1000 && typeof (f) != "undefined") {_RecordType("<659,660,50>",(f)); Inst39++; } } catch(e) {}
  f();
})();

(() => {
try { if (Inst40 <= 1000 && typeof (f) != "undefined") {_RecordType("<691,692,54>",(f)); Inst40++; } } catch(e) {}
  function f(a) {
try { if (Inst41 <= 1000 && typeof (a) != "undefined") {_RecordType("<693,694,54>",(a)); Inst41++; } } catch(e) {}
try { if (Inst42 <= 1000 && typeof (Math.imul) != "undefined") {_RecordType("<709,718,55>",(Math.imul)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (Math) != "undefined") {_RecordType("<709,713,55>",(Math)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (a) != "undefined") {_RecordType("<719,720,55>",(a)); Inst44++; } } catch(e) {}
    return Math.imul(a, 10);
  }

try { if (Inst45 <= 1000 && typeof (f) != "undefined") {_RecordType("<734,735,58>",(f)); Inst45++; } } catch(e) {}
  f(1);
try { if (Inst46 <= 1000 && typeof (f) != "undefined") {_RecordType("<742,743,59>",(f)); Inst46++; } } catch(e) {}
  f(1);
try { if (Inst47 <= 1000 && typeof (f) != "undefined") {_RecordType("<750,751,60>",(f)); Inst47++; } } catch(e) {}
  f("100");
try { if (Inst48 <= 1000 && typeof (f) != "undefined") {_RecordType("<762,763,61>",(f)); Inst48++; } } catch(e) {}
  f("100");
try { if (Inst49 <= 1000 && typeof (f) != "undefined") {_RecordType("<774,775,62>",(f)); Inst49++; } } catch(e) {}
  f();
})();

