var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
var Inst102 = 0;
var Inst103 = 0;
var Inst104 = 0;
var Inst105 = 0;
var Inst106 = 0;
var Inst107 = 0;
var Inst108 = 0;
var Inst109 = 0;
var Inst110 = 0;
var Inst111 = 0;
var Inst112 = 0;
var Inst113 = 0;
var Inst114 = 0;
var Inst115 = 0;
var Inst116 = 0;
var Inst117 = 0;
var Inst118 = 0;
var Inst119 = 0;
var Inst120 = 0;
var Inst121 = 0;
var Inst122 = 0;
var Inst123 = 0;
var Inst124 = 0;
var Inst125 = 0;
var Inst126 = 0;
var Inst127 = 0;
var Inst128 = 0;
var Inst129 = 0;
var Inst130 = 0;
var Inst131 = 0;
var Inst132 = 0;
var Inst133 = 0;
var Inst134 = 0;
var Inst135 = 0;
var Inst136 = 0;
var Inst137 = 0;
var Inst138 = 0;
var Inst139 = 0;
var Inst140 = 0;
var Inst141 = 0;
var Inst142 = 0;
var Inst143 = 0;
var Inst144 = 0;
var Inst145 = 0;
var Inst146 = 0;
var Inst147 = 0;
var Inst148 = 0;
var Inst149 = 0;
var Inst150 = 0;
var Inst151 = 0;
var Inst152 = 0;
var Inst153 = 0;
var Inst154 = 0;
var Inst155 = 0;
var Inst156 = 0;
var Inst157 = 0;
var Inst158 = 0;
var Inst159 = 0;
var Inst160 = 0;
var Inst161 = 0;
var Inst162 = 0;
var Inst163 = 0;
var Inst164 = 0;
var Inst165 = 0;
var Inst166 = 0;
var Inst167 = 0;
var Inst168 = 0;
var Inst169 = 0;
var Inst170 = 0;
var Inst171 = 0;
var Inst172 = 0;
var Inst173 = 0;
var Inst174 = 0;
var Inst175 = 0;
var Inst176 = 0;
var Inst177 = 0;
var Inst178 = 0;
var Inst179 = 0;
var Inst180 = 0;
var Inst181 = 0;
var Inst182 = 0;
var Inst183 = 0;
var Inst184 = 0;
var Inst185 = 0;
var Inst186 = 0;
var Inst187 = 0;
var Inst188 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2010 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// Flags: --max-semi-space-size=1 --allow-natives-syntax
try { if (Inst0 <= 1000 && typeof (zero) != "undefined") {_RecordType("<1663,1667,28>",(zero)); Inst0++; } } catch(e) {}
function zero() {
  var x = 0.5;
try { if (Inst1 <= 1000 && typeof (x) != "undefined") {_RecordType("<1678,1679,29>",(x)); Inst1++; } } catch(e) {}
  return function () {
try { if (Inst2 <= 1000 && typeof (x) != "undefined") {_RecordType("<1721,1722,31>",(x)); Inst2++; } } catch(e) {}
    return x - 0.5;
  }();
}

try { if (Inst3 <= 1000 && typeof (test) != "undefined") {_RecordType("<1749,1753,35>",(test)); Inst3++; } } catch(e) {}
function test() {
  0;
try { if (Inst4 <= 1000 && typeof (Math.abs) != "undefined") {_RecordType("<1765,1773,37>",(Math.abs)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1765,1769,37>",(Math)); Inst5++; } } catch(e) {}
  Math.abs(0);
  0;
try { if (Inst6 <= 1000 && typeof (Math.abs) != "undefined") {_RecordType("<1785,1793,39>",(Math.abs)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1785,1789,39>",(Math)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (zero) != "undefined") {_RecordType("<1794,1798,39>",(zero)); Inst8++; } } catch(e) {}
  Math.abs(zero());
  0;
try { if (Inst9 <= 1000 && typeof (Math.abs) != "undefined") {_RecordType("<1810,1818,41>",(Math.abs)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1810,1814,41>",(Math)); Inst10++; } } catch(e) {}
  Math.abs(-0);
try { if (Inst11 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<1826,1834,42>",(Infinity)); Inst11++; } } catch(e) {}
  Infinity;
try { if (Inst12 <= 1000 && typeof (Math.abs) != "undefined") {_RecordType("<1838,1846,43>",(Math.abs)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1838,1842,43>",(Math)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<1847,1855,43>",(Infinity)); Inst14++; } } catch(e) {}
  Math.abs(Infinity);
try { if (Inst15 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<1860,1868,44>",(Infinity)); Inst15++; } } catch(e) {}
  Infinity;
try { if (Inst16 <= 1000 && typeof (Math.abs) != "undefined") {_RecordType("<1872,1880,45>",(Math.abs)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1872,1876,45>",(Math)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<1882,1890,45>",(Infinity)); Inst18++; } } catch(e) {}
  Math.abs(-Infinity);
try { if (Inst19 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<1895,1898,46>",(NaN)); Inst19++; } } catch(e) {}
  NaN;
try { if (Inst20 <= 1000 && typeof (Math.abs) != "undefined") {_RecordType("<1902,1910,47>",(Math.abs)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1902,1906,47>",(Math)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<1911,1914,47>",(NaN)); Inst22++; } } catch(e) {}
  Math.abs(NaN);
try { if (Inst23 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<1919,1922,48>",(NaN)); Inst23++; } } catch(e) {}
  NaN;
try { if (Inst24 <= 1000 && typeof (Math.abs) != "undefined") {_RecordType("<1926,1934,49>",(Math.abs)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1926,1930,49>",(Math)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<1936,1939,49>",(NaN)); Inst26++; } } catch(e) {}
  Math.abs(-NaN);
  'Infinity';
try { if (Inst27 <= 1000 && typeof (Math.abs(Number('+Infinity')).toString) != "undefined") {_RecordType("<1958,1996,51>",(Math.abs(Number('+Infinity')).toString)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (Math.abs) != "undefined") {_RecordType("<1958,1966,51>",(Math.abs)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1958,1962,51>",(Math)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (Number) != "undefined") {_RecordType("<1967,1973,51>",(Number)); Inst30++; } } catch(e) {}
  Math.abs(Number('+Infinity')).toString();
  'Infinity';
try { if (Inst31 <= 1000 && typeof (Math.abs(Number('-Infinity')).toString) != "undefined") {_RecordType("<2016,2054,53>",(Math.abs(Number('-Infinity')).toString)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (Math.abs) != "undefined") {_RecordType("<2016,2024,53>",(Math.abs)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (Math) != "undefined") {_RecordType("<2016,2020,53>",(Math)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (Number) != "undefined") {_RecordType("<2025,2031,53>",(Number)); Inst34++; } } catch(e) {}
  Math.abs(Number('-Infinity')).toString();
  'NaN';
try { if (Inst35 <= 1000 && typeof (Math.abs(NaN).toString) != "undefined") {_RecordType("<2069,2091,55>",(Math.abs(NaN).toString)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (Math.abs) != "undefined") {_RecordType("<2069,2077,55>",(Math.abs)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (Math) != "undefined") {_RecordType("<2069,2073,55>",(Math)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<2078,2081,55>",(NaN)); Inst38++; } } catch(e) {}
  Math.abs(NaN).toString();
  'NaN';
try { if (Inst39 <= 1000 && typeof (Math.abs(-NaN).toString) != "undefined") {_RecordType("<2106,2129,57>",(Math.abs(-NaN).toString)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (Math.abs) != "undefined") {_RecordType("<2106,2114,57>",(Math.abs)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (Math) != "undefined") {_RecordType("<2106,2110,57>",(Math)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<2116,2119,57>",(NaN)); Inst42++; } } catch(e) {}
  Math.abs(-NaN).toString();
  0.1;
try { if (Inst43 <= 1000 && typeof (Math.abs) != "undefined") {_RecordType("<2142,2150,59>",(Math.abs)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (Math) != "undefined") {_RecordType("<2142,2146,59>",(Math)); Inst44++; } } catch(e) {}
  Math.abs(0.1);
  0.5;
try { if (Inst45 <= 1000 && typeof (Math.abs) != "undefined") {_RecordType("<2166,2174,61>",(Math.abs)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (Math) != "undefined") {_RecordType("<2166,2170,61>",(Math)); Inst46++; } } catch(e) {}
  Math.abs(0.5);
  0.1;
try { if (Inst47 <= 1000 && typeof (Math.abs) != "undefined") {_RecordType("<2190,2198,63>",(Math.abs)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (Math) != "undefined") {_RecordType("<2190,2194,63>",(Math)); Inst48++; } } catch(e) {}
  Math.abs(-0.1);
  0.5;
try { if (Inst49 <= 1000 && typeof (Math.abs) != "undefined") {_RecordType("<2215,2223,65>",(Math.abs)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (Math) != "undefined") {_RecordType("<2215,2219,65>",(Math)); Inst50++; } } catch(e) {}
  Math.abs(-0.5);
  1;
try { if (Inst51 <= 1000 && typeof (Math.abs) != "undefined") {_RecordType("<2238,2246,67>",(Math.abs)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (Math) != "undefined") {_RecordType("<2238,2242,67>",(Math)); Inst52++; } } catch(e) {}
  Math.abs(1);
  1.1;
try { if (Inst53 <= 1000 && typeof (Math.abs) != "undefined") {_RecordType("<2260,2268,69>",(Math.abs)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (Math) != "undefined") {_RecordType("<2260,2264,69>",(Math)); Inst54++; } } catch(e) {}
  Math.abs(1.1);
  1.5;
try { if (Inst55 <= 1000 && typeof (Math.abs) != "undefined") {_RecordType("<2284,2292,71>",(Math.abs)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (Math) != "undefined") {_RecordType("<2284,2288,71>",(Math)); Inst56++; } } catch(e) {}
  Math.abs(1.5);
  1;
try { if (Inst57 <= 1000 && typeof (Math.abs) != "undefined") {_RecordType("<2306,2314,73>",(Math.abs)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (Math) != "undefined") {_RecordType("<2306,2310,73>",(Math)); Inst58++; } } catch(e) {}
  Math.abs(-1);
  1.1;
try { if (Inst59 <= 1000 && typeof (Math.abs) != "undefined") {_RecordType("<2329,2337,75>",(Math.abs)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (Math) != "undefined") {_RecordType("<2329,2333,75>",(Math)); Inst60++; } } catch(e) {}
  Math.abs(-1.1);
  1.5;
try { if (Inst61 <= 1000 && typeof (Math.abs) != "undefined") {_RecordType("<2354,2362,77>",(Math.abs)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (Math) != "undefined") {_RecordType("<2354,2358,77>",(Math)); Inst62++; } } catch(e) {}
  Math.abs(-1.5);
try { if (Inst63 <= 1000 && typeof (Number.MIN_VALUE) != "undefined") {_RecordType("<2372,2388,78>",(Number.MIN_VALUE)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (Number) != "undefined") {_RecordType("<2372,2378,78>",(Number)); Inst64++; } } catch(e) {}
  Number.MIN_VALUE;
try { if (Inst65 <= 1000 && typeof (Math.abs) != "undefined") {_RecordType("<2392,2400,79>",(Math.abs)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (Math) != "undefined") {_RecordType("<2392,2396,79>",(Math)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (Number.MIN_VALUE) != "undefined") {_RecordType("<2401,2417,79>",(Number.MIN_VALUE)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (Number) != "undefined") {_RecordType("<2401,2407,79>",(Number)); Inst68++; } } catch(e) {}
  Math.abs(Number.MIN_VALUE);
try { if (Inst69 <= 1000 && typeof (Number.MIN_VALUE) != "undefined") {_RecordType("<2422,2438,80>",(Number.MIN_VALUE)); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (Number) != "undefined") {_RecordType("<2422,2428,80>",(Number)); Inst70++; } } catch(e) {}
  Number.MIN_VALUE;
try { if (Inst71 <= 1000 && typeof (Math.abs) != "undefined") {_RecordType("<2442,2450,81>",(Math.abs)); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (Math) != "undefined") {_RecordType("<2442,2446,81>",(Math)); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (Number.MIN_VALUE) != "undefined") {_RecordType("<2452,2468,81>",(Number.MIN_VALUE)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (Number) != "undefined") {_RecordType("<2452,2458,81>",(Number)); Inst74++; } } catch(e) {}
  Math.abs(-Number.MIN_VALUE);
try { if (Inst75 <= 1000 && typeof (Number.MAX_VALUE) != "undefined") {_RecordType("<2473,2489,82>",(Number.MAX_VALUE)); Inst75++; } } catch(e) {}try { if (Inst76 <= 1000 && typeof (Number) != "undefined") {_RecordType("<2473,2479,82>",(Number)); Inst76++; } } catch(e) {}
  Number.MAX_VALUE;
try { if (Inst77 <= 1000 && typeof (Math.abs) != "undefined") {_RecordType("<2493,2501,83>",(Math.abs)); Inst77++; } } catch(e) {}try { if (Inst78 <= 1000 && typeof (Math) != "undefined") {_RecordType("<2493,2497,83>",(Math)); Inst78++; } } catch(e) {}try { if (Inst79 <= 1000 && typeof (Number.MAX_VALUE) != "undefined") {_RecordType("<2502,2518,83>",(Number.MAX_VALUE)); Inst79++; } } catch(e) {}try { if (Inst80 <= 1000 && typeof (Number) != "undefined") {_RecordType("<2502,2508,83>",(Number)); Inst80++; } } catch(e) {}
  Math.abs(Number.MAX_VALUE);
try { if (Inst81 <= 1000 && typeof (Number.MAX_VALUE) != "undefined") {_RecordType("<2523,2539,84>",(Number.MAX_VALUE)); Inst81++; } } catch(e) {}try { if (Inst82 <= 1000 && typeof (Number) != "undefined") {_RecordType("<2523,2529,84>",(Number)); Inst82++; } } catch(e) {}
  Number.MAX_VALUE;
try { if (Inst83 <= 1000 && typeof (Math.abs) != "undefined") {_RecordType("<2543,2551,85>",(Math.abs)); Inst83++; } } catch(e) {}try { if (Inst84 <= 1000 && typeof (Math) != "undefined") {_RecordType("<2543,2547,85>",(Math)); Inst84++; } } catch(e) {}try { if (Inst85 <= 1000 && typeof (Number.MAX_VALUE) != "undefined") {_RecordType("<2553,2569,85>",(Number.MAX_VALUE)); Inst85++; } } catch(e) {}try { if (Inst86 <= 1000 && typeof (Number) != "undefined") {_RecordType("<2553,2559,85>",(Number)); Inst86++; } } catch(e) {}
  Math.abs(-Number.MAX_VALUE);
  // 2^30 is a smi boundary on arm and ia32.
  var two_30 = 1 << 30;
try { if (Inst87 <= 1000 && typeof (two_30) != "undefined") {_RecordType("<2623,2629,87>",(two_30)); Inst87++; } } catch(e) {}
try { if (Inst88 <= 1000 && typeof (two_30) != "undefined") {_RecordType("<2643,2649,88>",(two_30)); Inst88++; } } catch(e) {}
  two_30;
try { if (Inst89 <= 1000 && typeof (Math.abs) != "undefined") {_RecordType("<2653,2661,89>",(Math.abs)); Inst89++; } } catch(e) {}try { if (Inst90 <= 1000 && typeof (Math) != "undefined") {_RecordType("<2653,2657,89>",(Math)); Inst90++; } } catch(e) {}try { if (Inst91 <= 1000 && typeof (two_30) != "undefined") {_RecordType("<2662,2668,89>",(two_30)); Inst91++; } } catch(e) {}
  Math.abs(two_30);
try { if (Inst92 <= 1000 && typeof (two_30) != "undefined") {_RecordType("<2673,2679,90>",(two_30)); Inst92++; } } catch(e) {}
  two_30;
try { if (Inst93 <= 1000 && typeof (Math.abs) != "undefined") {_RecordType("<2683,2691,91>",(Math.abs)); Inst93++; } } catch(e) {}try { if (Inst94 <= 1000 && typeof (Math) != "undefined") {_RecordType("<2683,2687,91>",(Math)); Inst94++; } } catch(e) {}try { if (Inst95 <= 1000 && typeof (two_30) != "undefined") {_RecordType("<2693,2699,91>",(two_30)); Inst95++; } } catch(e) {}
  Math.abs(-two_30);
try { if (Inst96 <= 1000 && typeof (two_30) != "undefined") {_RecordType("<2704,2710,92>",(two_30)); Inst96++; } } catch(e) {}
  two_30 + 1;
try { if (Inst97 <= 1000 && typeof (Math.abs) != "undefined") {_RecordType("<2718,2726,93>",(Math.abs)); Inst97++; } } catch(e) {}try { if (Inst98 <= 1000 && typeof (Math) != "undefined") {_RecordType("<2718,2722,93>",(Math)); Inst98++; } } catch(e) {}try { if (Inst99 <= 1000 && typeof (two_30) != "undefined") {_RecordType("<2727,2733,93>",(two_30)); Inst99++; } } catch(e) {}
  Math.abs(two_30 + 1);
try { if (Inst100 <= 1000 && typeof (two_30) != "undefined") {_RecordType("<2742,2748,94>",(two_30)); Inst100++; } } catch(e) {}
  two_30 + 1;
try { if (Inst101 <= 1000 && typeof (Math.abs) != "undefined") {_RecordType("<2756,2764,95>",(Math.abs)); Inst101++; } } catch(e) {}try { if (Inst102 <= 1000 && typeof (Math) != "undefined") {_RecordType("<2756,2760,95>",(Math)); Inst102++; } } catch(e) {}try { if (Inst103 <= 1000 && typeof (two_30) != "undefined") {_RecordType("<2766,2772,95>",(two_30)); Inst103++; } } catch(e) {}
  Math.abs(-two_30 - 1);
try { if (Inst104 <= 1000 && typeof (two_30) != "undefined") {_RecordType("<2781,2787,96>",(two_30)); Inst104++; } } catch(e) {}
  two_30 - 1;
try { if (Inst105 <= 1000 && typeof (Math.abs) != "undefined") {_RecordType("<2795,2803,97>",(Math.abs)); Inst105++; } } catch(e) {}try { if (Inst106 <= 1000 && typeof (Math) != "undefined") {_RecordType("<2795,2799,97>",(Math)); Inst106++; } } catch(e) {}try { if (Inst107 <= 1000 && typeof (two_30) != "undefined") {_RecordType("<2804,2810,97>",(two_30)); Inst107++; } } catch(e) {}
  Math.abs(two_30 - 1);
try { if (Inst108 <= 1000 && typeof (two_30) != "undefined") {_RecordType("<2819,2825,98>",(two_30)); Inst108++; } } catch(e) {}
  two_30 - 1;
try { if (Inst109 <= 1000 && typeof (Math.abs) != "undefined") {_RecordType("<2833,2841,99>",(Math.abs)); Inst109++; } } catch(e) {}try { if (Inst110 <= 1000 && typeof (Math) != "undefined") {_RecordType("<2833,2837,99>",(Math)); Inst110++; } } catch(e) {}try { if (Inst111 <= 1000 && typeof (two_30) != "undefined") {_RecordType("<2843,2849,99>",(two_30)); Inst111++; } } catch(e) {}
  Math.abs(-two_30 + 1);
  // 2^31 is a smi boundary on x64.
try { if (Inst113 <= 1000 && typeof (two_30) != "undefined") {_RecordType("<2911,2917,101>",(two_30)); Inst113++; } } catch(e) {}
  var two_31 = 2 * two_30;
try { if (Inst112 <= 1000 && typeof (two_31) != "undefined") {_RecordType("<2898,2904,101>",(two_31)); Inst112++; } } catch(e) {}
try { if (Inst114 <= 1000 && typeof (two_31) != "undefined") {_RecordType("<2921,2927,102>",(two_31)); Inst114++; } } catch(e) {}
  two_31;
try { if (Inst115 <= 1000 && typeof (Math.abs) != "undefined") {_RecordType("<2931,2939,103>",(Math.abs)); Inst115++; } } catch(e) {}try { if (Inst116 <= 1000 && typeof (Math) != "undefined") {_RecordType("<2931,2935,103>",(Math)); Inst116++; } } catch(e) {}try { if (Inst117 <= 1000 && typeof (two_31) != "undefined") {_RecordType("<2940,2946,103>",(two_31)); Inst117++; } } catch(e) {}
  Math.abs(two_31);
try { if (Inst118 <= 1000 && typeof (two_31) != "undefined") {_RecordType("<2951,2957,104>",(two_31)); Inst118++; } } catch(e) {}
  two_31;
try { if (Inst119 <= 1000 && typeof (Math.abs) != "undefined") {_RecordType("<2961,2969,105>",(Math.abs)); Inst119++; } } catch(e) {}try { if (Inst120 <= 1000 && typeof (Math) != "undefined") {_RecordType("<2961,2965,105>",(Math)); Inst120++; } } catch(e) {}try { if (Inst121 <= 1000 && typeof (two_31) != "undefined") {_RecordType("<2971,2977,105>",(two_31)); Inst121++; } } catch(e) {}
  Math.abs(-two_31);
try { if (Inst122 <= 1000 && typeof (two_31) != "undefined") {_RecordType("<2982,2988,106>",(two_31)); Inst122++; } } catch(e) {}
  two_31 + 1;
try { if (Inst123 <= 1000 && typeof (Math.abs) != "undefined") {_RecordType("<2996,3004,107>",(Math.abs)); Inst123++; } } catch(e) {}try { if (Inst124 <= 1000 && typeof (Math) != "undefined") {_RecordType("<2996,3000,107>",(Math)); Inst124++; } } catch(e) {}try { if (Inst125 <= 1000 && typeof (two_31) != "undefined") {_RecordType("<3005,3011,107>",(two_31)); Inst125++; } } catch(e) {}
  Math.abs(two_31 + 1);
try { if (Inst126 <= 1000 && typeof (two_31) != "undefined") {_RecordType("<3020,3026,108>",(two_31)); Inst126++; } } catch(e) {}
  two_31 + 1;
try { if (Inst127 <= 1000 && typeof (Math.abs) != "undefined") {_RecordType("<3034,3042,109>",(Math.abs)); Inst127++; } } catch(e) {}try { if (Inst128 <= 1000 && typeof (Math) != "undefined") {_RecordType("<3034,3038,109>",(Math)); Inst128++; } } catch(e) {}try { if (Inst129 <= 1000 && typeof (two_31) != "undefined") {_RecordType("<3044,3050,109>",(two_31)); Inst129++; } } catch(e) {}
  Math.abs(-two_31 - 1);
try { if (Inst130 <= 1000 && typeof (two_31) != "undefined") {_RecordType("<3059,3065,110>",(two_31)); Inst130++; } } catch(e) {}
  two_31 - 1;
try { if (Inst131 <= 1000 && typeof (Math.abs) != "undefined") {_RecordType("<3073,3081,111>",(Math.abs)); Inst131++; } } catch(e) {}try { if (Inst132 <= 1000 && typeof (Math) != "undefined") {_RecordType("<3073,3077,111>",(Math)); Inst132++; } } catch(e) {}try { if (Inst133 <= 1000 && typeof (two_31) != "undefined") {_RecordType("<3082,3088,111>",(two_31)); Inst133++; } } catch(e) {}
  Math.abs(two_31 - 1);
try { if (Inst134 <= 1000 && typeof (two_31) != "undefined") {_RecordType("<3097,3103,112>",(two_31)); Inst134++; } } catch(e) {}
  two_31 - 1;
try { if (Inst135 <= 1000 && typeof (Math.abs) != "undefined") {_RecordType("<3111,3119,113>",(Math.abs)); Inst135++; } } catch(e) {}try { if (Inst136 <= 1000 && typeof (Math) != "undefined") {_RecordType("<3111,3115,113>",(Math)); Inst136++; } } catch(e) {}try { if (Inst137 <= 1000 && typeof (two_31) != "undefined") {_RecordType("<3121,3127,113>",(two_31)); Inst137++; } } catch(e) {}
  Math.abs(-two_31 + 1);
try { if (Inst138 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<3136,3139,114>",(NaN)); Inst138++; } } catch(e) {}
  NaN;
try { if (Inst139 <= 1000 && typeof (Math.abs) != "undefined") {_RecordType("<3143,3151,115>",(Math.abs)); Inst139++; } } catch(e) {}try { if (Inst140 <= 1000 && typeof (Math) != "undefined") {_RecordType("<3143,3147,115>",(Math)); Inst140++; } } catch(e) {}
  Math.abs("not a number");
try { if (Inst141 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<3171,3174,116>",(NaN)); Inst141++; } } catch(e) {}
  NaN;
try { if (Inst142 <= 1000 && typeof (Math.abs) != "undefined") {_RecordType("<3178,3186,117>",(Math.abs)); Inst142++; } } catch(e) {}try { if (Inst143 <= 1000 && typeof (Math) != "undefined") {_RecordType("<3178,3182,117>",(Math)); Inst143++; } } catch(e) {}
  Math.abs([1, 2, 3]);
  42;
try { if (Inst144 <= 1000 && typeof (Math.abs) != "undefined") {_RecordType("<3207,3215,119>",(Math.abs)); Inst144++; } } catch(e) {}try { if (Inst145 <= 1000 && typeof (Math) != "undefined") {_RecordType("<3207,3211,119>",(Math)); Inst145++; } } catch(e) {}
  Math.abs({
    valueOf: function () {
      return 42;
    }
  });
  42;
try { if (Inst146 <= 1000 && typeof (Math.abs) != "undefined") {_RecordType("<3282,3290,125>",(Math.abs)); Inst146++; } } catch(e) {}try { if (Inst147 <= 1000 && typeof (Math) != "undefined") {_RecordType("<3282,3286,125>",(Math)); Inst147++; } } catch(e) {}
  Math.abs({
    valueOf: function () {
      return -42;
    }
  });
} // Test in a loop to cover the custom IC and GC-related issues.


for (var i = 0; i < 500; i++) {
try { if (Inst148 <= 1000 && typeof (i) != "undefined") {_RecordType("<3427,3428,133>",(i)); Inst148++; } } catch(e) {}try { if (Inst149 <= 1000 && typeof (i) != "undefined") {_RecordType("<3434,3435,133>",(i)); Inst149++; } } catch(e) {}try { if (Inst150 <= 1000 && typeof (i) != "undefined") {_RecordType("<3443,3444,133>",(i)); Inst150++; } } catch(e) {}
try { if (Inst151 <= 1000 && typeof (test) != "undefined") {_RecordType("<3452,3456,134>",(test)); Inst151++; } } catch(e) {}
  test();
} // Regression test for optimized version of Math.abs, see:
// http://codereview.chromium.org/6875002.


try { if (Inst152 <= 1000 && typeof (foo) != "undefined") {_RecordType("<3575,3578,139>",(foo)); Inst152++; } } catch(e) {}
function foo(x) {
try { if (Inst153 <= 1000 && typeof (x) != "undefined") {_RecordType("<3579,3580,139>",(x)); Inst153++; } } catch(e) {}
try { if (Inst154 <= 1000 && typeof (Math.abs) != "undefined") {_RecordType("<3593,3601,140>",(Math.abs)); Inst154++; } } catch(e) {}try { if (Inst155 <= 1000 && typeof (Math) != "undefined") {_RecordType("<3593,3597,140>",(Math)); Inst155++; } } catch(e) {}try { if (Inst156 <= 1000 && typeof (x) != "undefined") {_RecordType("<3602,3603,140>",(x)); Inst156++; } } catch(e) {}
  return Math.abs(x);
} // Get some smi type feedback.


for (var i = 0; i < 1000; i++) {
try { if (Inst157 <= 1000 && typeof (i) != "undefined") {_RecordType("<3650,3651,144>",(i)); Inst157++; } } catch(e) {}try { if (Inst158 <= 1000 && typeof (i) != "undefined") {_RecordType("<3657,3658,144>",(i)); Inst158++; } } catch(e) {}try { if (Inst159 <= 1000 && typeof (i) != "undefined") {_RecordType("<3667,3668,144>",(i)); Inst159++; } } catch(e) {}
try { if (Inst160 <= 1000 && typeof (foo) != "undefined") {_RecordType("<3676,3679,145>",(foo)); Inst160++; } } catch(e) {}try { if (Inst161 <= 1000 && typeof (i) != "undefined") {_RecordType("<3681,3682,145>",(i)); Inst161++; } } catch(e) {}
  foo(-i);
}

42;
try { if (Inst162 <= 1000 && typeof (foo) != "undefined") {_RecordType("<3692,3695,149>",(foo)); Inst162++; } } catch(e) {}
foo(-42);
42;
try { if (Inst163 <= 1000 && typeof (foo) != "undefined") {_RecordType("<3706,3709,151>",(foo)); Inst163++; } } catch(e) {}
foo(-42);
// Regression test for SMI input of Math.abs on X64, see:
// https://codereview.chromium.org/21180004/
var a = [-1, -2];
try { if (Inst164 <= 1000 && typeof (a) != "undefined") {_RecordType("<3823,3824,154>",(a)); Inst164++; } } catch(e) {}

try { if (Inst165 <= 1000 && typeof (foo2) != "undefined") {_RecordType("<3847,3851,156>",(foo2)); Inst165++; } } catch(e) {}
function foo2() {
try { if (Inst166 <= 1000 && typeof (Math.abs) != "undefined") {_RecordType("<3865,3873,157>",(Math.abs)); Inst166++; } } catch(e) {}try { if (Inst167 <= 1000 && typeof (Math) != "undefined") {_RecordType("<3865,3869,157>",(Math)); Inst167++; } } catch(e) {}try { if (Inst168 <= 1000 && typeof (a[0]) != "undefined") {_RecordType("<3874,3878,157>",(a[0])); Inst168++; } } catch(e) {}try { if (Inst169 <= 1000 && typeof (a) != "undefined") {_RecordType("<3874,3875,157>",(a)); Inst169++; } } catch(e) {}
  return Math.abs(a[0]);
}

1;
try { if (Inst170 <= 1000 && typeof (foo2) != "undefined") {_RecordType("<3887,3891,161>",(foo2)); Inst170++; } } catch(e) {}
foo2();
1;
try { if (Inst171 <= 1000 && typeof (foo2) != "undefined") {_RecordType("<3898,3902,163>",(foo2)); Inst171++; } } catch(e) {}
foo2();
1;
try { if (Inst172 <= 1000 && typeof (foo2) != "undefined") {_RecordType("<3909,3913,165>",(foo2)); Inst172++; } } catch(e) {}
foo2();

// Regression test for Integer input of Math.abs on mips64.
try { if (Inst173 <= 1000 && typeof (absHalf) != "undefined") {_RecordType("<3987,3994,168>",(absHalf)); Inst173++; } } catch(e) {}
function absHalf(bits) {
try { if (Inst174 <= 1000 && typeof (bits) != "undefined") {_RecordType("<3995,3999,168>",(bits)); Inst174++; } } catch(e) {}
try { if (Inst176 <= 1000 && typeof (bits) != "undefined") {_RecordType("<4018,4022,169>",(bits)); Inst176++; } } catch(e) {}
  var x = 1 << bits - 1;
try { if (Inst175 <= 1000 && typeof (x) != "undefined") {_RecordType("<4009,4010,169>",(x)); Inst175++; } } catch(e) {}
try { if (Inst178 <= 1000 && typeof (Math.abs) != "undefined") {_RecordType("<4041,4049,170>",(Math.abs)); Inst178++; } } catch(e) {}try { if (Inst179 <= 1000 && typeof (Math) != "undefined") {_RecordType("<4041,4045,170>",(Math)); Inst179++; } } catch(e) {}try { if (Inst180 <= 1000 && typeof (x) != "undefined") {_RecordType("<4050,4051,170>",(x)); Inst180++; } } catch(e) {}
  var half = Math.abs(x);
try { if (Inst177 <= 1000 && typeof (half) != "undefined") {_RecordType("<4034,4038,170>",(half)); Inst177++; } } catch(e) {}
try { if (Inst181 <= 1000 && typeof (half) != "undefined") {_RecordType("<4063,4067,171>",(half)); Inst181++; } } catch(e) {}
  return half;
} // Create minimum integer input for abs() using bitwise operations
// that should overflow.


bits = 32;
try { if (Inst182 <= 1000 && typeof (bits) != "undefined") {_RecordType("<4165,4169,176>",(bits)); Inst182++; } } catch(e) {}
2147483648;
try { if (Inst183 <= 1000 && typeof (absHalf) != "undefined") {_RecordType("<4188,4195,178>",(absHalf)); Inst183++; } } catch(e) {}try { if (Inst184 <= 1000 && typeof (bits) != "undefined") {_RecordType("<4196,4200,178>",(bits)); Inst184++; } } catch(e) {}
absHalf(bits);
2147483648;
try { if (Inst185 <= 1000 && typeof (absHalf) != "undefined") {_RecordType("<4215,4222,180>",(absHalf)); Inst185++; } } catch(e) {}try { if (Inst186 <= 1000 && typeof (bits) != "undefined") {_RecordType("<4223,4227,180>",(bits)); Inst186++; } } catch(e) {}
absHalf(bits);
2147483648;
try { if (Inst187 <= 1000 && typeof (absHalf) != "undefined") {_RecordType("<4242,4249,182>",(absHalf)); Inst187++; } } catch(e) {}try { if (Inst188 <= 1000 && typeof (bits) != "undefined") {_RecordType("<4250,4254,182>",(bits)); Inst188++; } } catch(e) {}
absHalf(bits);

