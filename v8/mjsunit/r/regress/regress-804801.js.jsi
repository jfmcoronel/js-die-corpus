var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2018 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
try { if (Inst0 <= 1000 && typeof (f) != "undefined") {_RecordType("<176,177,4>",(f)); Inst0++; } } catch(e) {}
function f() {
  return 42;
}

try { if (Inst2 <= 1000 && typeof (f.bind) != "undefined") {_RecordType("<221,227,8>",(f.bind)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (f) != "undefined") {_RecordType("<221,222,8>",(f)); Inst3++; } } catch(e) {}
const bound_function = f.bind();
try { if (Inst1 <= 1000 && typeof (bound_function) != "undefined") {_RecordType("<204,218,8>",(bound_function)); Inst1++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<258,263,9>",(Proxy)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (function () {
  ;
}.__proto__) != "undefined") {_RecordType("<264,293,9>",(function () {
  ;
}.__proto__)); Inst6++; } } catch(e) {}
const callable_proxy = new Proxy(function () {
  ;
}.__proto__, {});
try { if (Inst4 <= 1000 && typeof (callable_proxy) != "undefined") {_RecordType("<237,251,9>",(callable_proxy)); Inst4++; } } catch(e) {}

try { if (Inst7 <= 1000 && typeof (testSet) != "undefined") {_RecordType("<310,317,13>",(testSet)); Inst7++; } } catch(e) {}
function testSet(ctor) {
try { if (Inst8 <= 1000 && typeof (ctor) != "undefined") {_RecordType("<318,322,13>",(ctor)); Inst8++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (ctor) != "undefined") {_RecordType("<332,336,14>",(ctor)); Inst9++; } } catch(e) {}
  new ctor([]);
try { if (Inst10 <= 1000 && typeof (ctor) != "undefined") {_RecordType("<348,352,15>",(ctor)); Inst10++; } } catch(e) {}
  new ctor([{}, {}]);
}

try { if (Inst11 <= 1000 && typeof (testMap) != "undefined") {_RecordType("<376,383,18>",(testMap)); Inst11++; } } catch(e) {}
function testMap(ctor) {
try { if (Inst12 <= 1000 && typeof (ctor) != "undefined") {_RecordType("<384,388,18>",(ctor)); Inst12++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (ctor) != "undefined") {_RecordType("<398,402,19>",(ctor)); Inst13++; } } catch(e) {}
  new ctor([]);
try { if (Inst14 <= 1000 && typeof (ctor) != "undefined") {_RecordType("<414,418,20>",(ctor)); Inst14++; } } catch(e) {}
  new ctor([[{}, {}], [{}, {}]]);
}

try { if (Inst15 <= 1000 && typeof (testAllVariants) != "undefined") {_RecordType("<454,469,23>",(testAllVariants)); Inst15++; } } catch(e) {}
function testAllVariants(set_or_add_function) {
try { if (Inst16 <= 1000 && typeof (set_or_add_function) != "undefined") {_RecordType("<470,489,23>",(set_or_add_function)); Inst16++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (set_or_add_function) != "undefined") {_RecordType("<515,534,24>",(set_or_add_function)); Inst20++; } } catch(e) {}
  Set.prototype.add = set_or_add_function;
try { if (Inst17 <= 1000 && typeof (Set.prototype.add) != "undefined") {_RecordType("<495,512,24>",(Set.prototype.add)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Set.prototype) != "undefined") {_RecordType("<495,508,24>",(Set.prototype)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Set) != "undefined") {_RecordType("<495,498,24>",(Set)); Inst19++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (testSet) != "undefined") {_RecordType("<538,545,25>",(testSet)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Set) != "undefined") {_RecordType("<546,549,25>",(Set)); Inst22++; } } catch(e) {}
  testSet(Set);
try { if (Inst26 <= 1000 && typeof (set_or_add_function) != "undefined") {_RecordType("<578,597,26>",(set_or_add_function)); Inst26++; } } catch(e) {}
  WeakSet.prototype.add = set_or_add_function;
try { if (Inst23 <= 1000 && typeof (WeakSet.prototype.add) != "undefined") {_RecordType("<554,575,26>",(WeakSet.prototype.add)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (WeakSet.prototype) != "undefined") {_RecordType("<554,571,26>",(WeakSet.prototype)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (WeakSet) != "undefined") {_RecordType("<554,561,26>",(WeakSet)); Inst25++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (testSet) != "undefined") {_RecordType("<601,608,27>",(testSet)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (WeakSet) != "undefined") {_RecordType("<609,616,27>",(WeakSet)); Inst28++; } } catch(e) {}
  testSet(WeakSet);
try { if (Inst32 <= 1000 && typeof (set_or_add_function) != "undefined") {_RecordType("<641,660,28>",(set_or_add_function)); Inst32++; } } catch(e) {}
  Map.prototype.set = set_or_add_function;
try { if (Inst29 <= 1000 && typeof (Map.prototype.set) != "undefined") {_RecordType("<621,638,28>",(Map.prototype.set)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (Map.prototype) != "undefined") {_RecordType("<621,634,28>",(Map.prototype)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (Map) != "undefined") {_RecordType("<621,624,28>",(Map)); Inst31++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (testMap) != "undefined") {_RecordType("<664,671,29>",(testMap)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (Map) != "undefined") {_RecordType("<672,675,29>",(Map)); Inst34++; } } catch(e) {}
  testMap(Map);
try { if (Inst38 <= 1000 && typeof (set_or_add_function) != "undefined") {_RecordType("<704,723,30>",(set_or_add_function)); Inst38++; } } catch(e) {}
  WeakMap.prototype.set = set_or_add_function;
try { if (Inst35 <= 1000 && typeof (WeakMap.prototype.set) != "undefined") {_RecordType("<680,701,30>",(WeakMap.prototype.set)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (WeakMap.prototype) != "undefined") {_RecordType("<680,697,30>",(WeakMap.prototype)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (WeakMap) != "undefined") {_RecordType("<680,687,30>",(WeakMap)); Inst37++; } } catch(e) {}
try { if (Inst39 <= 1000 && typeof (testMap) != "undefined") {_RecordType("<727,734,31>",(testMap)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (WeakMap) != "undefined") {_RecordType("<735,742,31>",(WeakMap)); Inst40++; } } catch(e) {}
  testMap(WeakMap);
}

try { if (Inst41 <= 1000 && typeof (testAllVariants) != "undefined") {_RecordType("<748,763,34>",(testAllVariants)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (bound_function) != "undefined") {_RecordType("<764,778,34>",(bound_function)); Inst42++; } } catch(e) {}
testAllVariants(bound_function);
try { if (Inst43 <= 1000 && typeof (testAllVariants) != "undefined") {_RecordType("<781,796,35>",(testAllVariants)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (callable_proxy) != "undefined") {_RecordType("<797,811,35>",(callable_proxy)); Inst44++; } } catch(e) {}
testAllVariants(callable_proxy);

