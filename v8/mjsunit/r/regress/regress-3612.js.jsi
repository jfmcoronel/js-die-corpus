var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2014 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
var a = [1];
try { if (Inst0 <= 1000 && typeof (a) != "undefined") {_RecordType("<171,172,4>",(a)); Inst0++; } } catch(e) {}
var getterValue = 2;
try { if (Inst1 <= 1000 && typeof (getterValue) != "undefined") {_RecordType("<184,195,5>",(getterValue)); Inst1++; } } catch(e) {}
var endIndex = 0xffff;
try { if (Inst2 <= 1000 && typeof (endIndex) != "undefined") {_RecordType("<205,213,6>",(endIndex)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<224,245,7>",(Object.defineProperty)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Object) != "undefined") {_RecordType("<224,230,7>",(Object)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (a) != "undefined") {_RecordType("<246,247,7>",(a)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (endIndex) != "undefined") {_RecordType("<249,257,7>",(endIndex)); Inst6++; } } catch(e) {}
Object.defineProperty(a, endIndex, {
  get: function () {
    this[1] = 3;
try { if (Inst7 <= 1000 && typeof (this[1]) != "undefined") {_RecordType("<286,293,9>",(this[1])); Inst7++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (getterValue) != "undefined") {_RecordType("<310,321,10>",(getterValue)); Inst8++; } } catch(e) {}
    return getterValue;
  },
  set: function (val) {
try { if (Inst9 <= 1000 && typeof (val) != "undefined") {_RecordType("<345,348,12>",(val)); Inst9++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (val) != "undefined") {_RecordType("<370,373,13>",(val)); Inst11++; } } catch(e) {}
    getterValue = val;
try { if (Inst10 <= 1000 && typeof (getterValue) != "undefined") {_RecordType("<356,367,13>",(getterValue)); Inst10++; } } catch(e) {}
  },
  configurable: true,
  enumerable: true
});
try { if (Inst12 <= 1000 && typeof (a.reverse) != "undefined") {_RecordType("<425,434,18>",(a.reverse)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (a) != "undefined") {_RecordType("<425,426,18>",(a)); Inst13++; } } catch(e) {}
a.reverse();
try { if (Inst14 <= 1000 && typeof (a.hasOwnProperty) != "undefined") {_RecordType("<438,454,19>",(a.hasOwnProperty)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (a) != "undefined") {_RecordType("<438,439,19>",(a)); Inst15++; } } catch(e) {}
a.hasOwnProperty(1);
3;
try { if (Inst16 <= 1000 && typeof (a[endIndex - 1]) != "undefined") {_RecordType("<462,477,21>",(a[endIndex - 1])); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (a) != "undefined") {_RecordType("<462,463,21>",(a)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (endIndex) != "undefined") {_RecordType("<464,472,21>",(endIndex)); Inst18++; } } catch(e) {}
a[endIndex - 1];

