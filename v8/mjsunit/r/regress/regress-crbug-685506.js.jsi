var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2017 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax --noconcurrent-recompilation
var a = {};
try { if (Inst0 <= 1000 && typeof (a) != "undefined") {_RecordType("<233,234,5>",(a)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (init) != "undefined") {_RecordType("<251,255,7>",(init)); Inst1++; } } catch(e) {}
function init() {
  a = [];
try { if (Inst2 <= 1000 && typeof (a) != "undefined") {_RecordType("<262,263,8>",(a)); Inst2++; } } catch(e) {}

  for (var __v_1 = 0; __v_1 < 10016; __v_1++) {
try { if (Inst3 <= 1000 && typeof (__v_1) != "undefined") {_RecordType("<282,287,10>",(__v_1)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (__v_1) != "undefined") {_RecordType("<293,298,10>",(__v_1)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (__v_1) != "undefined") {_RecordType("<308,313,10>",(__v_1)); Inst5++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (a.push) != "undefined") {_RecordType("<323,329,11>",(a.push)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (a) != "undefined") {_RecordType("<323,324,11>",(a)); Inst7++; } } catch(e) {}
    a.push({});
  }

try { if (Inst8 <= 1000 && typeof (a.map) != "undefined") {_RecordType("<342,347,14>",(a.map)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (a) != "undefined") {_RecordType("<342,343,14>",(a)); Inst9++; } } catch(e) {}
  a.map(function () {
    ;
  }) + "";
}

try { if (Inst10 <= 1000 && typeof (init) != "undefined") {_RecordType("<382,386,19>",(init)); Inst10++; } } catch(e) {}
init();

try { if (Inst11 <= 1000 && typeof (foo) != "undefined") {_RecordType("<400,403,21>",(foo)); Inst11++; } } catch(e) {}
function foo() {
try { if (Inst12 <= 1000 && typeof (a.push) != "undefined") {_RecordType("<410,416,22>",(a.push)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (a) != "undefined") {_RecordType("<410,411,22>",(a)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (a) != "undefined") {_RecordType("<418,419,22>",(a)); Inst14++; } } catch(e) {}
  a.push((a + "!", 23));
try { if (Inst15 <= 1000 && typeof (a) != "undefined") {_RecordType("<442,443,23>",(a)); Inst15++; } } catch(e) {}
  return a;
}

23;
try { if (Inst16 <= 1000 && typeof (foo()[10016]) != "undefined") {_RecordType("<452,464,27>",(foo()[10016])); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (foo) != "undefined") {_RecordType("<452,455,27>",(foo)); Inst17++; } } catch(e) {}
foo()[10016];
23;
try { if (Inst18 <= 1000 && typeof (foo()[10017]) != "undefined") {_RecordType("<470,482,29>",(foo()[10017])); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (foo) != "undefined") {_RecordType("<470,473,29>",(foo)); Inst19++; } } catch(e) {}
foo()[10017];
23;
try { if (Inst20 <= 1000 && typeof (foo()[10018]) != "undefined") {_RecordType("<488,500,31>",(foo()[10018])); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (foo) != "undefined") {_RecordType("<488,491,31>",(foo)); Inst21++; } } catch(e) {}
foo()[10018];
23;
try { if (Inst22 <= 1000 && typeof (foo()[10019]) != "undefined") {_RecordType("<506,518,33>",(foo()[10019])); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (foo) != "undefined") {_RecordType("<506,509,33>",(foo)); Inst23++; } } catch(e) {}
foo()[10019];

