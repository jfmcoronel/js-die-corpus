var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2015 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax --expose-gc
try { if (Inst1 <= 1000 && typeof (Array) != "undefined") {_RecordType("<228,233,5>",(Array)); Inst1++; } } catch(e) {}
var inner = new Array();
try { if (Inst0 <= 1000 && typeof (inner) != "undefined") {_RecordType("<216,221,5>",(inner)); Inst0++; } } catch(e) {}
inner.a = {
  x: 1
};
try { if (Inst2 <= 1000 && typeof (inner.a) != "undefined") {_RecordType("<237,244,6>",(inner.a)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (inner) != "undefined") {_RecordType("<237,242,6>",(inner)); Inst3++; } } catch(e) {}
inner[0] = 1.5;
try { if (Inst4 <= 1000 && typeof (inner[0]) != "undefined") {_RecordType("<259,267,9>",(inner[0])); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (inner) != "undefined") {_RecordType("<259,264,9>",(inner)); Inst5++; } } catch(e) {}
inner.b = {
  x: 2
};
try { if (Inst6 <= 1000 && typeof (inner.b) != "undefined") {_RecordType("<275,282,10>",(inner.b)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (inner) != "undefined") {_RecordType("<275,280,10>",(inner)); Inst7++; } } catch(e) {}

try { if (Inst8 <= 1000 && typeof (foo) != "undefined") {_RecordType("<307,310,14>",(foo)); Inst8++; } } catch(e) {}
function foo(o) {
try { if (Inst9 <= 1000 && typeof (o) != "undefined") {_RecordType("<311,312,14>",(o)); Inst9++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (o.field.b.x) != "undefined") {_RecordType("<325,336,15>",(o.field.b.x)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (o.field.b) != "undefined") {_RecordType("<325,334,15>",(o.field.b)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (o.field) != "undefined") {_RecordType("<325,332,15>",(o.field)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (o) != "undefined") {_RecordType("<325,326,15>",(o)); Inst13++; } } catch(e) {}
  return o.field.b.x;
}

var outer = {};
try { if (Inst14 <= 1000 && typeof (outer) != "undefined") {_RecordType("<345,350,18>",(outer)); Inst14++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (inner) != "undefined") {_RecordType("<371,376,19>",(inner)); Inst17++; } } catch(e) {}
outer.field = inner;
try { if (Inst15 <= 1000 && typeof (outer.field) != "undefined") {_RecordType("<357,368,19>",(outer.field)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (outer) != "undefined") {_RecordType("<357,362,19>",(outer)); Inst16++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (foo) != "undefined") {_RecordType("<378,381,20>",(foo)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (outer) != "undefined") {_RecordType("<382,387,20>",(outer)); Inst19++; } } catch(e) {}
foo(outer);
try { if (Inst20 <= 1000 && typeof (foo) != "undefined") {_RecordType("<390,393,21>",(foo)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (outer) != "undefined") {_RecordType("<394,399,21>",(outer)); Inst21++; } } catch(e) {}
foo(outer);
try { if (Inst22 <= 1000 && typeof (foo) != "undefined") {_RecordType("<402,405,22>",(foo)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (outer) != "undefined") {_RecordType("<406,411,22>",(outer)); Inst23++; } } catch(e) {}
foo(outer);
try { if (Inst24 <= 1000 && typeof (foo) != "undefined") {_RecordType("<414,417,23>",(foo)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (outer) != "undefined") {_RecordType("<418,423,23>",(outer)); Inst25++; } } catch(e) {}
foo(outer); // Generalize representation of field "b" of inner object.

try { if (Inst27 <= 1000 && typeof (x) != "undefined") {_RecordType("<502,503,26>",(x)); Inst27++; } } catch(e) {}
var v = {
  get x() {
    return 0x7fffffff;
  }

};
try { if (Inst26 <= 1000 && typeof (v) != "undefined") {_RecordType("<490,491,25>",(v)); Inst26++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (v) != "undefined") {_RecordType("<549,550,31>",(v)); Inst30++; } } catch(e) {}
inner.b = v;
try { if (Inst28 <= 1000 && typeof (inner.b) != "undefined") {_RecordType("<539,546,31>",(inner.b)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (inner) != "undefined") {_RecordType("<539,544,31>",(inner)); Inst29++; } } catch(e) {}
try { if (Inst31 <= 1000 && typeof (gc) != "undefined") {_RecordType("<552,554,32>",(gc)); Inst31++; } } catch(e) {}
gc();
try { if (Inst33 <= 1000 && typeof (foo) != "undefined") {_RecordType("<569,572,33>",(foo)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (outer) != "undefined") {_RecordType("<573,578,33>",(outer)); Inst34++; } } catch(e) {}
var boom = foo(outer);
try { if (Inst32 <= 1000 && typeof (boom) != "undefined") {_RecordType("<562,566,33>",(boom)); Inst32++; } } catch(e) {}
try { if (Inst35 <= 1000 && typeof (print) != "undefined") {_RecordType("<581,586,34>",(print)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (boom) != "undefined") {_RecordType("<587,591,34>",(boom)); Inst36++; } } catch(e) {}
print(boom);
0x7fffffff;
try { if (Inst37 <= 1000 && typeof (boom) != "undefined") {_RecordType("<606,610,36>",(boom)); Inst37++; } } catch(e) {}
boom;

