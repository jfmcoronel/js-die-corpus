var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2017 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --verify-heap --allow-natives-syntax --expose-gc
let constant = {
  a: 1
};
try { if (Inst0 <= 1000 && typeof (constant) != "undefined") {_RecordType("<230,238,5>",(constant)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (update_array) != "undefined") {_RecordType("<263,275,9>",(update_array)); Inst1++; } } catch(e) {}
function update_array(array) {
try { if (Inst2 <= 1000 && typeof (array) != "undefined") {_RecordType("<276,281,9>",(array)); Inst2++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (constant) != "undefined") {_RecordType("<297,305,10>",(constant)); Inst5++; } } catch(e) {}
  array.x = constant;
try { if (Inst3 <= 1000 && typeof (array.x) != "undefined") {_RecordType("<287,294,10>",(array.x)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (array) != "undefined") {_RecordType("<287,292,10>",(array)); Inst4++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<320,329,11>",(undefined)); Inst8++; } } catch(e) {}
  array[0] = undefined;
try { if (Inst6 <= 1000 && typeof (array[0]) != "undefined") {_RecordType("<309,317,11>",(array[0])); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (array) != "undefined") {_RecordType("<309,314,11>",(array)); Inst7++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (array) != "undefined") {_RecordType("<340,345,12>",(array)); Inst9++; } } catch(e) {}
  return array;
}

let ar1 = [1];
try { if (Inst10 <= 1000 && typeof (ar1) != "undefined") {_RecordType("<354,357,15>",(ar1)); Inst10++; } } catch(e) {}
let ar2 = [2];
try { if (Inst11 <= 1000 && typeof (ar2) != "undefined") {_RecordType("<369,372,16>",(ar2)); Inst11++; } } catch(e) {}
let ar3 = [3];
try { if (Inst12 <= 1000 && typeof (ar3) != "undefined") {_RecordType("<384,387,17>",(ar3)); Inst12++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (gc) != "undefined") {_RecordType("<395,397,18>",(gc)); Inst13++; } } catch(e) {}
gc();
try { if (Inst14 <= 1000 && typeof (gc) != "undefined") {_RecordType("<401,403,19>",(gc)); Inst14++; } } catch(e) {}
gc();
try { if (Inst15 <= 1000 && typeof (update_array) != "undefined") {_RecordType("<407,419,20>",(update_array)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (ar1) != "undefined") {_RecordType("<420,423,20>",(ar1)); Inst16++; } } catch(e) {}
update_array(ar1);
try { if (Inst18 <= 1000 && typeof (update_array) != "undefined") {_RecordType("<437,449,21>",(update_array)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (ar2) != "undefined") {_RecordType("<450,453,21>",(ar2)); Inst19++; } } catch(e) {}
constant = update_array(ar2);
try { if (Inst17 <= 1000 && typeof (constant) != "undefined") {_RecordType("<426,434,21>",(constant)); Inst17++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (update_array) != "undefined") {_RecordType("<456,468,22>",(update_array)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (ar3) != "undefined") {_RecordType("<469,472,22>",(ar3)); Inst21++; } } catch(e) {}
update_array(ar3);

