var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2018 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax --expose-gc
for (var i = 0; i < 3; i++) {
try { if (Inst0 <= 1000 && typeof (i) != "undefined") {_RecordType("<221,222,5>",(i)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (i) != "undefined") {_RecordType("<228,229,5>",(i)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (i) != "undefined") {_RecordType("<235,236,5>",(i)); Inst2++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (BigInt64Array) != "undefined") {_RecordType("<260,273,6>",(BigInt64Array)); Inst4++; } } catch(e) {}
  var array = new BigInt64Array(200);
try { if (Inst3 <= 1000 && typeof (array) != "undefined") {_RecordType("<248,253,6>",(array)); Inst3++; } } catch(e) {}

try { if (Inst5 <= 1000 && typeof (evil_callback) != "undefined") {_RecordType("<292,305,8>",(evil_callback)); Inst5++; } } catch(e) {}
  function evil_callback() {
try { if (Inst6 <= 1000 && typeof (gc) != "undefined") {_RecordType("<314,316,9>",(gc)); Inst6++; } } catch(e) {}
    gc();
    return 1094795585;
  }

try { if (Inst8 <= 1000 && typeof (evil_callback) != "undefined") {_RecordType("<383,396,14>",(evil_callback)); Inst8++; } } catch(e) {}
  var evil_object = {
    valueOf: evil_callback
  };
try { if (Inst7 <= 1000 && typeof (evil_object) != "undefined") {_RecordType("<354,365,13>",(evil_object)); Inst7++; } } catch(e) {}
  var root;
try { if (Inst9 <= 1000 && typeof (root) != "undefined") {_RecordType("<408,412,16>",(root)); Inst9++; } } catch(e) {}

try { if (Inst16 <= 1000 && typeof (e) != "undefined") {_RecordType("<522,523,22>",(e)); Inst16++; } } catch(e) {}
  try {
try { if (Inst11 <= 1000 && typeof (BigInt64Array.of.call) != "undefined") {_RecordType("<434,455,19>",(BigInt64Array.of.call)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (BigInt64Array.of) != "undefined") {_RecordType("<434,450,19>",(BigInt64Array.of)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (BigInt64Array) != "undefined") {_RecordType("<434,447,19>",(BigInt64Array)); Inst13++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (evil_object) != "undefined") {_RecordType("<497,508,21>",(evil_object)); Inst15++; } } catch(e) {}
    root = BigInt64Array.of.call(function () {
try { if (Inst14 <= 1000 && typeof (array) != "undefined") {_RecordType("<483,488,20>",(array)); Inst14++; } } catch(e) {}
      return array;
    }, evil_object);
try { if (Inst10 <= 1000 && typeof (root) != "undefined") {_RecordType("<427,431,19>",(root)); Inst10++; } } catch(e) {}
  } catch (e) {
    ;
  }

try { if (Inst17 <= 1000 && typeof (gc) != "undefined") {_RecordType("<540,542,26>",(gc)); Inst17++; } } catch(e) {}
  gc();
}

