var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2017 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax
try { if (Inst0 <= 1000 && typeof (TestNonCallableForEach) != "undefined") {_RecordType("<210,232,5>",(TestNonCallableForEach)); Inst0++; } } catch(e) {}
(function TestNonCallableForEach() {
try { if (Inst1 <= 1000 && typeof (foo) != "undefined") {_RecordType("<248,251,6>",(foo)); Inst1++; } } catch(e) {}
  function foo() {
try { if (Inst2 <= 1000 && typeof ([].forEach) != "undefined") {_RecordType("<260,270,7>",([].forEach)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<271,280,7>",(undefined)); Inst3++; } } catch(e) {}
    [].forEach(undefined);
  }

try { if (Inst4 <= 1000 && typeof (foo) != "undefined") {_RecordType("<290,293,10>",(foo)); Inst4++; } } catch(e) {}
  foo();
try { if (Inst5 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<299,308,11>",(TypeError)); Inst5++; } } catch(e) {}
  TypeError;
try { if (Inst6 <= 1000 && typeof (foo) != "undefined") {_RecordType("<312,315,12>",(foo)); Inst6++; } } catch(e) {}
  foo();
try { if (Inst7 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<321,330,13>",(TypeError)); Inst7++; } } catch(e) {}
  TypeError;
try { if (Inst8 <= 1000 && typeof (foo) != "undefined") {_RecordType("<334,337,14>",(foo)); Inst8++; } } catch(e) {}
  foo();
try { if (Inst9 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<343,352,15>",(TypeError)); Inst9++; } } catch(e) {}
  TypeError;
})();

try { if (Inst10 <= 1000 && typeof (TestNonCallableForEachCaught) != "undefined") {_RecordType("<371,399,18>",(TestNonCallableForEachCaught)); Inst10++; } } catch(e) {}
(function TestNonCallableForEachCaught() {
try { if (Inst11 <= 1000 && typeof (foo) != "undefined") {_RecordType("<415,418,19>",(foo)); Inst11++; } } catch(e) {}
  function foo() {
try { if (Inst14 <= 1000 && typeof (e) != "undefined") {_RecordType("<475,476,22>",(e)); Inst14++; } } catch(e) {}
    try {
try { if (Inst12 <= 1000 && typeof ([].forEach) != "undefined") {_RecordType("<439,449,21>",([].forEach)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<450,459,21>",(undefined)); Inst13++; } } catch(e) {}
      [].forEach(undefined);
    } catch (e) {
try { if (Inst15 <= 1000 && typeof (e) != "undefined") {_RecordType("<493,494,23>",(e)); Inst15++; } } catch(e) {}
      return e;
    }
  }

try { if (Inst16 <= 1000 && typeof (foo) != "undefined") {_RecordType("<509,512,27>",(foo)); Inst16++; } } catch(e) {}
  foo();
try { if (Inst17 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<518,527,28>",(TypeError)); Inst17++; } } catch(e) {}
  TypeError;
try { if (Inst18 <= 1000 && typeof (foo) != "undefined") {_RecordType("<531,534,29>",(foo)); Inst18++; } } catch(e) {}
  foo();
try { if (Inst19 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<540,549,30>",(TypeError)); Inst19++; } } catch(e) {}
  TypeError;
try { if (Inst20 <= 1000 && typeof (foo) != "undefined") {_RecordType("<553,556,31>",(foo)); Inst20++; } } catch(e) {}
  foo();
try { if (Inst21 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<562,571,32>",(TypeError)); Inst21++; } } catch(e) {}
  TypeError;
})();

try { if (Inst22 <= 1000 && typeof (TestNonCallableMap) != "undefined") {_RecordType("<590,608,35>",(TestNonCallableMap)); Inst22++; } } catch(e) {}
(function TestNonCallableMap() {
try { if (Inst23 <= 1000 && typeof (foo) != "undefined") {_RecordType("<624,627,36>",(foo)); Inst23++; } } catch(e) {}
  function foo() {
try { if (Inst24 <= 1000 && typeof ([].map) != "undefined") {_RecordType("<636,642,37>",([].map)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<643,652,37>",(undefined)); Inst25++; } } catch(e) {}
    [].map(undefined);
  }

try { if (Inst26 <= 1000 && typeof (foo) != "undefined") {_RecordType("<662,665,40>",(foo)); Inst26++; } } catch(e) {}
  foo();
try { if (Inst27 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<671,680,41>",(TypeError)); Inst27++; } } catch(e) {}
  TypeError;
try { if (Inst28 <= 1000 && typeof (foo) != "undefined") {_RecordType("<684,687,42>",(foo)); Inst28++; } } catch(e) {}
  foo();
try { if (Inst29 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<693,702,43>",(TypeError)); Inst29++; } } catch(e) {}
  TypeError;
try { if (Inst30 <= 1000 && typeof (foo) != "undefined") {_RecordType("<706,709,44>",(foo)); Inst30++; } } catch(e) {}
  foo();
try { if (Inst31 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<715,724,45>",(TypeError)); Inst31++; } } catch(e) {}
  TypeError;
})();

try { if (Inst32 <= 1000 && typeof (TestNonCallableMapCaught) != "undefined") {_RecordType("<743,767,48>",(TestNonCallableMapCaught)); Inst32++; } } catch(e) {}
(function TestNonCallableMapCaught() {
try { if (Inst33 <= 1000 && typeof (foo) != "undefined") {_RecordType("<783,786,49>",(foo)); Inst33++; } } catch(e) {}
  function foo() {
try { if (Inst36 <= 1000 && typeof (e) != "undefined") {_RecordType("<839,840,52>",(e)); Inst36++; } } catch(e) {}
    try {
try { if (Inst34 <= 1000 && typeof ([].map) != "undefined") {_RecordType("<807,813,51>",([].map)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<814,823,51>",(undefined)); Inst35++; } } catch(e) {}
      [].map(undefined);
    } catch (e) {
try { if (Inst37 <= 1000 && typeof (e) != "undefined") {_RecordType("<857,858,53>",(e)); Inst37++; } } catch(e) {}
      return e;
    }
  }

try { if (Inst38 <= 1000 && typeof (foo) != "undefined") {_RecordType("<873,876,57>",(foo)); Inst38++; } } catch(e) {}
  foo();
try { if (Inst39 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<882,891,58>",(TypeError)); Inst39++; } } catch(e) {}
  TypeError;
try { if (Inst40 <= 1000 && typeof (foo) != "undefined") {_RecordType("<895,898,59>",(foo)); Inst40++; } } catch(e) {}
  foo();
try { if (Inst41 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<904,913,60>",(TypeError)); Inst41++; } } catch(e) {}
  TypeError;
try { if (Inst42 <= 1000 && typeof (foo) != "undefined") {_RecordType("<917,920,61>",(foo)); Inst42++; } } catch(e) {}
  foo();
try { if (Inst43 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<926,935,62>",(TypeError)); Inst43++; } } catch(e) {}
  TypeError;
})();

try { if (Inst44 <= 1000 && typeof (TestNonCallableFilter) != "undefined") {_RecordType("<954,975,65>",(TestNonCallableFilter)); Inst44++; } } catch(e) {}
(function TestNonCallableFilter() {
try { if (Inst45 <= 1000 && typeof (foo) != "undefined") {_RecordType("<991,994,66>",(foo)); Inst45++; } } catch(e) {}
  function foo() {
try { if (Inst46 <= 1000 && typeof ([].filter) != "undefined") {_RecordType("<1003,1012,67>",([].filter)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<1013,1022,67>",(undefined)); Inst47++; } } catch(e) {}
    [].filter(undefined);
  }

try { if (Inst48 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1032,1035,70>",(foo)); Inst48++; } } catch(e) {}
  foo();
try { if (Inst49 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<1041,1050,71>",(TypeError)); Inst49++; } } catch(e) {}
  TypeError;
try { if (Inst50 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1054,1057,72>",(foo)); Inst50++; } } catch(e) {}
  foo();
try { if (Inst51 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<1063,1072,73>",(TypeError)); Inst51++; } } catch(e) {}
  TypeError;
try { if (Inst52 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1076,1079,74>",(foo)); Inst52++; } } catch(e) {}
  foo();
try { if (Inst53 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<1085,1094,75>",(TypeError)); Inst53++; } } catch(e) {}
  TypeError;
})();

try { if (Inst54 <= 1000 && typeof (TestNonCallableFilterCaught) != "undefined") {_RecordType("<1113,1140,78>",(TestNonCallableFilterCaught)); Inst54++; } } catch(e) {}
(function TestNonCallableFilterCaught() {
try { if (Inst55 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1156,1159,79>",(foo)); Inst55++; } } catch(e) {}
  function foo() {
try { if (Inst58 <= 1000 && typeof (e) != "undefined") {_RecordType("<1215,1216,82>",(e)); Inst58++; } } catch(e) {}
    try {
try { if (Inst56 <= 1000 && typeof ([].filter) != "undefined") {_RecordType("<1180,1189,81>",([].filter)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<1190,1199,81>",(undefined)); Inst57++; } } catch(e) {}
      [].filter(undefined);
    } catch (e) {
try { if (Inst59 <= 1000 && typeof (e) != "undefined") {_RecordType("<1233,1234,83>",(e)); Inst59++; } } catch(e) {}
      return e;
    }
  }

try { if (Inst60 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1249,1252,87>",(foo)); Inst60++; } } catch(e) {}
  foo();
try { if (Inst61 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<1258,1267,88>",(TypeError)); Inst61++; } } catch(e) {}
  TypeError;
try { if (Inst62 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1271,1274,89>",(foo)); Inst62++; } } catch(e) {}
  foo();
try { if (Inst63 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<1280,1289,90>",(TypeError)); Inst63++; } } catch(e) {}
  TypeError;
try { if (Inst64 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1293,1296,91>",(foo)); Inst64++; } } catch(e) {}
  foo();
try { if (Inst65 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<1302,1311,92>",(TypeError)); Inst65++; } } catch(e) {}
  TypeError;
})();

