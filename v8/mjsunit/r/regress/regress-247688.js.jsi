var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2013 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// Flags: --allow-natives-syntax
var a = {};
try { if (Inst0 <= 1000 && typeof (a) != "undefined") {_RecordType("<1634,1635,28>",(a)); Inst0++; } } catch(e) {}
a.x = 1;
try { if (Inst1 <= 1000 && typeof (a.x) != "undefined") {_RecordType("<1642,1645,29>",(a.x)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (a) != "undefined") {_RecordType("<1642,1643,29>",(a)); Inst2++; } } catch(e) {}
a.y = 1.5;
try { if (Inst3 <= 1000 && typeof (a.y) != "undefined") {_RecordType("<1651,1654,30>",(a.y)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (a) != "undefined") {_RecordType("<1651,1652,30>",(a)); Inst4++; } } catch(e) {}
var b = {};
try { if (Inst5 <= 1000 && typeof (b) != "undefined") {_RecordType("<1666,1667,31>",(b)); Inst5++; } } catch(e) {}
b.x = 1.5;
try { if (Inst6 <= 1000 && typeof (b.x) != "undefined") {_RecordType("<1674,1677,32>",(b.x)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (b) != "undefined") {_RecordType("<1674,1675,32>",(b)); Inst7++; } } catch(e) {}
b.y = 1;
try { if (Inst8 <= 1000 && typeof (b.y) != "undefined") {_RecordType("<1685,1688,33>",(b.y)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (b) != "undefined") {_RecordType("<1685,1686,33>",(b)); Inst9++; } } catch(e) {}
var c = {};
try { if (Inst10 <= 1000 && typeof (c) != "undefined") {_RecordType("<1698,1699,34>",(c)); Inst10++; } } catch(e) {}
c.x = 1.5;
try { if (Inst11 <= 1000 && typeof (c.x) != "undefined") {_RecordType("<1706,1709,35>",(c.x)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (c) != "undefined") {_RecordType("<1706,1707,35>",(c)); Inst12++; } } catch(e) {}
var d = {};
try { if (Inst13 <= 1000 && typeof (d) != "undefined") {_RecordType("<1721,1722,36>",(d)); Inst13++; } } catch(e) {}
d.x = 1.5;
try { if (Inst14 <= 1000 && typeof (d.x) != "undefined") {_RecordType("<1729,1732,37>",(d.x)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (d) != "undefined") {_RecordType("<1729,1730,37>",(d)); Inst15++; } } catch(e) {}
var e = {};
try { if (Inst16 <= 1000 && typeof (e) != "undefined") {_RecordType("<1744,1745,38>",(e)); Inst16++; } } catch(e) {}
e.x = 1.5;
try { if (Inst17 <= 1000 && typeof (e.x) != "undefined") {_RecordType("<1752,1755,39>",(e.x)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (e) != "undefined") {_RecordType("<1752,1753,39>",(e)); Inst18++; } } catch(e) {}
var f = {};
try { if (Inst19 <= 1000 && typeof (f) != "undefined") {_RecordType("<1767,1768,40>",(f)); Inst19++; } } catch(e) {}
f.x = 1.5;
try { if (Inst20 <= 1000 && typeof (f.x) != "undefined") {_RecordType("<1775,1778,41>",(f.x)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (f) != "undefined") {_RecordType("<1775,1776,41>",(f)); Inst21++; } } catch(e) {}
var g = {};
try { if (Inst22 <= 1000 && typeof (g) != "undefined") {_RecordType("<1790,1791,42>",(g)); Inst22++; } } catch(e) {}
g.x = 1.5;
try { if (Inst23 <= 1000 && typeof (g.x) != "undefined") {_RecordType("<1798,1801,43>",(g.x)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (g) != "undefined") {_RecordType("<1798,1799,43>",(g)); Inst24++; } } catch(e) {}
var h = {};
try { if (Inst25 <= 1000 && typeof (h) != "undefined") {_RecordType("<1813,1814,44>",(h)); Inst25++; } } catch(e) {}
h.x = 1.5;
try { if (Inst26 <= 1000 && typeof (h.x) != "undefined") {_RecordType("<1821,1824,45>",(h.x)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (h) != "undefined") {_RecordType("<1821,1822,45>",(h)); Inst27++; } } catch(e) {}
var i = {};
try { if (Inst28 <= 1000 && typeof (i) != "undefined") {_RecordType("<1836,1837,46>",(i)); Inst28++; } } catch(e) {}
i.x = 1.5;
try { if (Inst29 <= 1000 && typeof (i.x) != "undefined") {_RecordType("<1844,1847,47>",(i.x)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (i) != "undefined") {_RecordType("<1844,1845,47>",(i)); Inst30++; } } catch(e) {}
var o = {};
try { if (Inst31 <= 1000 && typeof (o) != "undefined") {_RecordType("<1859,1860,48>",(o)); Inst31++; } } catch(e) {}
var p = {
  y: 10,
  z: 1
};
try { if (Inst32 <= 1000 && typeof (p) != "undefined") {_RecordType("<1871,1872,49>",(p)); Inst32++; } } catch(e) {}
try { if (Inst35 <= 1000 && typeof (p) != "undefined") {_RecordType("<1910,1911,53>",(p)); Inst35++; } } catch(e) {}
o.__proto__ = p;
try { if (Inst33 <= 1000 && typeof (o.__proto__) != "undefined") {_RecordType("<1896,1907,53>",(o.__proto__)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (o) != "undefined") {_RecordType("<1896,1897,53>",(o)); Inst34++; } } catch(e) {}
try { if (Inst36 <= 1000 && typeof (p.z) != "undefined") {_RecordType("<1920,1923,54>",(p.z)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (p) != "undefined") {_RecordType("<1920,1921,54>",(p)); Inst37++; } } catch(e) {}
delete p.z;

try { if (Inst38 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1935,1938,56>",(foo)); Inst38++; } } catch(e) {}
function foo(v, w) {
try { if (Inst39 <= 1000 && typeof (v) != "undefined") {_RecordType("<1939,1940,56>",(v)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (w) != "undefined") {_RecordType("<1942,1943,56>",(w)); Inst40++; } } catch(e) {}
  // Make load via IC in optimized code. Its target will get overwritten by
  // lazy deopt patch for the stack check.
try { if (Inst41 <= 1000 && typeof (v.y) != "undefined") {_RecordType("<2068,2071,59>",(v.y)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (v) != "undefined") {_RecordType("<2068,2069,59>",(v)); Inst42++; } } catch(e) {}
  v.y; // Make store with transition to make this code dependent on the map.

  w.y = 1;
try { if (Inst43 <= 1000 && typeof (w.y) != "undefined") {_RecordType("<2146,2149,61>",(w.y)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (w) != "undefined") {_RecordType("<2146,2147,61>",(w)); Inst44++; } } catch(e) {}
try { if (Inst45 <= 1000 && typeof (b.y) != "undefined") {_RecordType("<2164,2167,62>",(b.y)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (b) != "undefined") {_RecordType("<2164,2165,62>",(b)); Inst46++; } } catch(e) {}
  return b.y;
}

try { if (Inst47 <= 1000 && typeof (foo) != "undefined") {_RecordType("<2172,2175,65>",(foo)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (o) != "undefined") {_RecordType("<2176,2177,65>",(o)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (c) != "undefined") {_RecordType("<2179,2180,65>",(c)); Inst49++; } } catch(e) {}
foo(o, c);
try { if (Inst50 <= 1000 && typeof (foo) != "undefined") {_RecordType("<2183,2186,66>",(foo)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (o) != "undefined") {_RecordType("<2187,2188,66>",(o)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (d) != "undefined") {_RecordType("<2190,2191,66>",(d)); Inst52++; } } catch(e) {}
foo(o, d);
try { if (Inst53 <= 1000 && typeof (foo) != "undefined") {_RecordType("<2194,2197,67>",(foo)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (o) != "undefined") {_RecordType("<2198,2199,67>",(o)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (e) != "undefined") {_RecordType("<2201,2202,67>",(e)); Inst55++; } } catch(e) {}
foo(o, e);
try { if (Inst56 <= 1000 && typeof (foo) != "undefined") {_RecordType("<2205,2208,68>",(foo)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (b) != "undefined") {_RecordType("<2209,2210,68>",(b)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (f) != "undefined") {_RecordType("<2212,2213,68>",(f)); Inst58++; } } catch(e) {}
foo(b, f);
try { if (Inst59 <= 1000 && typeof (foo) != "undefined") {_RecordType("<2216,2219,69>",(foo)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (b) != "undefined") {_RecordType("<2220,2221,69>",(b)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (g) != "undefined") {_RecordType("<2223,2224,69>",(g)); Inst61++; } } catch(e) {}
foo(b, g);
try { if (Inst62 <= 1000 && typeof (foo) != "undefined") {_RecordType("<2227,2230,70>",(foo)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (b) != "undefined") {_RecordType("<2231,2232,70>",(b)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (h) != "undefined") {_RecordType("<2234,2235,70>",(h)); Inst64++; } } catch(e) {}
foo(b, h);
try { if (Inst65 <= 1000 && typeof (foo) != "undefined") {_RecordType("<2238,2241,71>",(foo)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (a) != "undefined") {_RecordType("<2242,2243,71>",(a)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (i) != "undefined") {_RecordType("<2245,2246,71>",(i)); Inst67++; } } catch(e) {}
foo(a, i);

