var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2018 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
{
  const x = [, 1];
try { if (Inst0 <= 1000 && typeof (x) != "undefined") {_RecordType("<177,178,5>",(x)); Inst0++; } } catch(e) {}
  x.__proto__ = [42];
try { if (Inst1 <= 1000 && typeof (x.__proto__) != "undefined") {_RecordType("<190,201,6>",(x.__proto__)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (x) != "undefined") {_RecordType("<190,191,6>",(x)); Inst2++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (x) != "undefined") {_RecordType("<226,227,7>",(x)); Inst4++; } } catch(e) {}
  const y = [...x];
try { if (Inst3 <= 1000 && typeof (y) != "undefined") {_RecordType("<218,219,7>",(y)); Inst3++; } } catch(e) {}
  [42, 1];
try { if (Inst5 <= 1000 && typeof (y) != "undefined") {_RecordType("<243,244,9>",(y)); Inst5++; } } catch(e) {}
  y;
try { if (Inst6 <= 1000 && typeof (y.hasOwnProperty) != "undefined") {_RecordType("<248,264,10>",(y.hasOwnProperty)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (y) != "undefined") {_RecordType("<248,249,10>",(y)); Inst7++; } } catch(e) {}
  y.hasOwnProperty(0);
}
{
  const x = [, 1];
try { if (Inst8 <= 1000 && typeof (x) != "undefined") {_RecordType("<281,282,13>",(x)); Inst8++; } } catch(e) {}
  x.__proto__ = [42];
try { if (Inst9 <= 1000 && typeof (x.__proto__) != "undefined") {_RecordType("<294,305,14>",(x.__proto__)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (x) != "undefined") {_RecordType("<294,295,14>",(x)); Inst10++; } } catch(e) {}
  42;
try { if (Inst11 <= 1000 && typeof (x[Symbol.iterator]().next().value) != "undefined") {_RecordType("<322,355,16>",(x[Symbol.iterator]().next().value)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (x[Symbol.iterator]().next) != "undefined") {_RecordType("<322,347,16>",(x[Symbol.iterator]().next)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (x[Symbol.iterator]) != "undefined") {_RecordType("<322,340,16>",(x[Symbol.iterator])); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (x) != "undefined") {_RecordType("<322,323,16>",(x)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<324,339,16>",(Symbol.iterator)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<324,330,16>",(Symbol)); Inst16++; } } catch(e) {}
  x[Symbol.iterator]().next().value;
}
{
try { if (Inst18 <= 1000 && typeof ([].__proto__) != "undefined") {_RecordType("<387,399,19>",([].__proto__)); Inst18++; } } catch(e) {}
  const array_prototype = [].__proto__;
try { if (Inst17 <= 1000 && typeof (array_prototype) != "undefined") {_RecordType("<369,384,19>",(array_prototype)); Inst17++; } } catch(e) {}
  array_prototype[0] = 42;
try { if (Inst19 <= 1000 && typeof (array_prototype[0]) != "undefined") {_RecordType("<403,421,20>",(array_prototype[0])); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (array_prototype) != "undefined") {_RecordType("<403,418,20>",(array_prototype)); Inst20++; } } catch(e) {}
  const x = [, 1];
try { if (Inst21 <= 1000 && typeof (x) != "undefined") {_RecordType("<436,437,21>",(x)); Inst21++; } } catch(e) {}
  42;
try { if (Inst22 <= 1000 && typeof (x[Symbol.iterator]().next().value) != "undefined") {_RecordType("<455,488,23>",(x[Symbol.iterator]().next().value)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (x[Symbol.iterator]().next) != "undefined") {_RecordType("<455,480,23>",(x[Symbol.iterator]().next)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (x[Symbol.iterator]) != "undefined") {_RecordType("<455,473,23>",(x[Symbol.iterator])); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (x) != "undefined") {_RecordType("<455,456,23>",(x)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<457,472,23>",(Symbol.iterator)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<457,463,23>",(Symbol)); Inst27++; } } catch(e) {}
  x[Symbol.iterator]().next().value;
try { if (Inst28 <= 1000 && typeof (array_prototype[0]) != "undefined") {_RecordType("<499,517,24>",(array_prototype[0])); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (array_prototype) != "undefined") {_RecordType("<499,514,24>",(array_prototype)); Inst29++; } } catch(e) {}
  delete array_prototype[0];
}

