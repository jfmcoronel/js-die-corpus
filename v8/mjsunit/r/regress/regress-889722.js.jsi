var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2018 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
var o = {};
try { if (Inst0 <= 1000 && typeof (o) != "undefined") {_RecordType("<171,172,4>",(o)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (getRandomProperty) != "undefined") {_RecordType("<189,206,6>",(getRandomProperty)); Inst1++; } } catch(e) {}
function getRandomProperty(v, rand) {
try { if (Inst2 <= 1000 && typeof (v) != "undefined") {_RecordType("<207,208,6>",(v)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (rand) != "undefined") {_RecordType("<210,214,6>",(rand)); Inst3++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (Object.getOwnPropertyNames) != "undefined") {_RecordType("<237,263,7>",(Object.getOwnPropertyNames)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Object) != "undefined") {_RecordType("<237,243,7>",(Object)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (v) != "undefined") {_RecordType("<264,265,7>",(v)); Inst7++; } } catch(e) {}
  var properties = Object.getOwnPropertyNames(v);
try { if (Inst4 <= 1000 && typeof (properties) != "undefined") {_RecordType("<224,234,7>",(properties)); Inst4++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (properties[rand % properties.length]) != "undefined") {_RecordType("<277,313,8>",(properties[rand % properties.length])); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (properties) != "undefined") {_RecordType("<277,287,8>",(properties)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (rand) != "undefined") {_RecordType("<288,292,8>",(rand)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (properties.length) != "undefined") {_RecordType("<295,312,8>",(properties.length)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (properties) != "undefined") {_RecordType("<295,305,8>",(properties)); Inst12++; } } catch(e) {}
  return properties[rand % properties.length];
}

try { if (Inst15 <= 1000 && typeof (o[getRandomProperty(o, 211203344)]) != "undefined") {_RecordType("<336,370,11>",(o[getRandomProperty(o, 211203344)])); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (o) != "undefined") {_RecordType("<336,337,11>",(o)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (getRandomProperty) != "undefined") {_RecordType("<338,355,11>",(getRandomProperty)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (o) != "undefined") {_RecordType("<356,357,11>",(o)); Inst18++; } } catch(e) {}
o.__p_211203344 = o[getRandomProperty(o, 211203344)];
try { if (Inst13 <= 1000 && typeof (o.__p_211203344) != "undefined") {_RecordType("<318,333,11>",(o.__p_211203344)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (o) != "undefined") {_RecordType("<318,319,11>",(o)); Inst14++; } } catch(e) {}

