var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2013 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// Flags: --allow-natives-syntax
var a = {
  x: 1
};
try { if (Inst0 <= 1000 && typeof (a) != "undefined") {_RecordType("<1634,1635,28>",(a)); Inst0++; } } catch(e) {}
var a_deprecate = {
  x: 1
};
try { if (Inst1 <= 1000 && typeof (a_deprecate) != "undefined") {_RecordType("<1654,1665,31>",(a_deprecate)); Inst1++; } } catch(e) {}
a_deprecate.x = 1.5;
try { if (Inst2 <= 1000 && typeof (a_deprecate.x) != "undefined") {_RecordType("<1680,1693,34>",(a_deprecate.x)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (a_deprecate) != "undefined") {_RecordType("<1680,1691,34>",(a_deprecate)); Inst3++; } } catch(e) {}

try { if (Inst4 <= 1000 && typeof (create) != "undefined") {_RecordType("<1711,1717,36>",(create)); Inst4++; } } catch(e) {}
function create() {
try { if (Inst5 <= 1000 && typeof (a) != "undefined") {_RecordType("<1748,1749,38>",(a)); Inst5++; } } catch(e) {}
  return {
    __proto__: a,
    y: 1
  };
}

try { if (Inst7 <= 1000 && typeof (create) != "undefined") {_RecordType("<1777,1783,43>",(create)); Inst7++; } } catch(e) {}
var b1 = create();
try { if (Inst6 <= 1000 && typeof (b1) != "undefined") {_RecordType("<1772,1774,43>",(b1)); Inst6++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (create) != "undefined") {_RecordType("<1796,1802,44>",(create)); Inst9++; } } catch(e) {}
var b2 = create();
try { if (Inst8 <= 1000 && typeof (b2) != "undefined") {_RecordType("<1791,1793,44>",(b2)); Inst8++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (create) != "undefined") {_RecordType("<1815,1821,45>",(create)); Inst11++; } } catch(e) {}
var b3 = create();
try { if (Inst10 <= 1000 && typeof (b3) != "undefined") {_RecordType("<1810,1812,45>",(b3)); Inst10++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (create) != "undefined") {_RecordType("<1834,1840,46>",(create)); Inst13++; } } catch(e) {}
var b4 = create();
try { if (Inst12 <= 1000 && typeof (b4) != "undefined") {_RecordType("<1829,1831,46>",(b4)); Inst12++; } } catch(e) {}

try { if (Inst14 <= 1000 && typeof (set) != "undefined") {_RecordType("<1854,1857,48>",(set)); Inst14++; } } catch(e) {}
function set(b) {
try { if (Inst15 <= 1000 && typeof (b) != "undefined") {_RecordType("<1858,1859,48>",(b)); Inst15++; } } catch(e) {}
  b.x = 5;
try { if (Inst16 <= 1000 && typeof (b.x) != "undefined") {_RecordType("<1865,1868,49>",(b.x)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (b) != "undefined") {_RecordType("<1865,1866,49>",(b)); Inst17++; } } catch(e) {}
  b.z = 10;
try { if (Inst18 <= 1000 && typeof (b.z) != "undefined") {_RecordType("<1876,1879,50>",(b.z)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (b) != "undefined") {_RecordType("<1876,1877,50>",(b)); Inst19++; } } catch(e) {}
}

try { if (Inst20 <= 1000 && typeof (set) != "undefined") {_RecordType("<1889,1892,53>",(set)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (b1) != "undefined") {_RecordType("<1893,1895,53>",(b1)); Inst21++; } } catch(e) {}
set(b1);
try { if (Inst22 <= 1000 && typeof (set) != "undefined") {_RecordType("<1898,1901,54>",(set)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (b2) != "undefined") {_RecordType("<1902,1904,54>",(b2)); Inst23++; } } catch(e) {}
set(b2);
try { if (Inst24 <= 1000 && typeof (set) != "undefined") {_RecordType("<1907,1910,55>",(set)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (b3) != "undefined") {_RecordType("<1911,1913,55>",(b3)); Inst25++; } } catch(e) {}
set(b3);
var called = false;
try { if (Inst26 <= 1000 && typeof (called) != "undefined") {_RecordType("<1920,1926,56>",(called)); Inst26++; } } catch(e) {}
a.x = 1.5;
try { if (Inst27 <= 1000 && typeof (a.x) != "undefined") {_RecordType("<1936,1939,57>",(a.x)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (a) != "undefined") {_RecordType("<1936,1937,57>",(a)); Inst28++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<1947,1968,58>",(Object.defineProperty)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1947,1953,58>",(Object)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (a) != "undefined") {_RecordType("<1969,1970,58>",(a)); Inst31++; } } catch(e) {}
Object.defineProperty(a, "z", {
  set: function (v) {
try { if (Inst32 <= 1000 && typeof (v) != "undefined") {_RecordType("<1996,1997,59>",(v)); Inst32++; } } catch(e) {}
    called = true;
try { if (Inst33 <= 1000 && typeof (called) != "undefined") {_RecordType("<2005,2011,60>",(called)); Inst33++; } } catch(e) {}
  }
});
try { if (Inst34 <= 1000 && typeof (set) != "undefined") {_RecordType("<2028,2031,63>",(set)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (b4) != "undefined") {_RecordType("<2032,2034,63>",(b4)); Inst35++; } } catch(e) {}
set(b4);
try { if (Inst36 <= 1000 && typeof (called) != "undefined") {_RecordType("<2037,2043,64>",(called)); Inst36++; } } catch(e) {}
called;
try { if (Inst37 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<2045,2054,65>",(undefined)); Inst37++; } } catch(e) {}
undefined;
try { if (Inst38 <= 1000 && typeof (b4.z) != "undefined") {_RecordType("<2056,2060,66>",(b4.z)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (b4) != "undefined") {_RecordType("<2056,2058,66>",(b4)); Inst39++; } } catch(e) {}
b4.z;

