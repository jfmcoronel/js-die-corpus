var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2016 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax
var f1 = function () {
  while (1) {
    ;
  }
};
try { if (Inst0 <= 1000 && typeof (f1) != "undefined") {_RecordType("<204,206,5>",(f1)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (g1) != "undefined") {_RecordType("<260,262,11>",(g1)); Inst1++; } } catch(e) {}
function g1() {
  var s = "hey";
try { if (Inst2 <= 1000 && typeof (s) != "undefined") {_RecordType("<273,274,12>",(s)); Inst2++; } } catch(e) {}

  f1 = function () {
    return true;
  };
try { if (Inst3 <= 1000 && typeof (f1) != "undefined") {_RecordType("<287,289,14>",(f1)); Inst3++; } } catch(e) {}

try { if (Inst4 <= 1000 && typeof (f1) != "undefined") {_RecordType("<335,337,18>",(f1)); Inst4++; } } catch(e) {}
  if (f1()) {
try { if (Inst5 <= 1000 && typeof (s) != "undefined") {_RecordType("<354,355,19>",(s)); Inst5++; } } catch(e) {}
    return s;
  }
}

"hey";
try { if (Inst6 <= 1000 && typeof (g1) != "undefined") {_RecordType("<371,373,24>",(g1)); Inst6++; } } catch(e) {}
g1();

var f2 = function () {
  do {
    ;
  } while (1);
};
try { if (Inst7 <= 1000 && typeof (f2) != "undefined") {_RecordType("<382,384,26>",(f2)); Inst7++; } } catch(e) {}

try { if (Inst8 <= 1000 && typeof (g2) != "undefined") {_RecordType("<442,444,32>",(g2)); Inst8++; } } catch(e) {}
function g2() {
  var s = "hey";
try { if (Inst9 <= 1000 && typeof (s) != "undefined") {_RecordType("<455,456,33>",(s)); Inst9++; } } catch(e) {}

  f2 = function () {
    return true;
  };
try { if (Inst10 <= 1000 && typeof (f2) != "undefined") {_RecordType("<469,471,35>",(f2)); Inst10++; } } catch(e) {}

try { if (Inst11 <= 1000 && typeof (f2) != "undefined") {_RecordType("<517,519,39>",(f2)); Inst11++; } } catch(e) {}
  if (f2()) {
try { if (Inst12 <= 1000 && typeof (s) != "undefined") {_RecordType("<536,537,40>",(s)); Inst12++; } } catch(e) {}
    return s;
  }
}

"hey";
try { if (Inst13 <= 1000 && typeof (g2) != "undefined") {_RecordType("<553,555,45>",(g2)); Inst13++; } } catch(e) {}
g2();

var f3 = function () {
  for (;;) {
    ;
  }
};
try { if (Inst14 <= 1000 && typeof (f3) != "undefined") {_RecordType("<564,566,47>",(f3)); Inst14++; } } catch(e) {}

try { if (Inst15 <= 1000 && typeof (g3) != "undefined") {_RecordType("<619,621,53>",(g3)); Inst15++; } } catch(e) {}
function g3() {
  var s = "hey";
try { if (Inst16 <= 1000 && typeof (s) != "undefined") {_RecordType("<632,633,54>",(s)); Inst16++; } } catch(e) {}

  f3 = function () {
    return true;
  };
try { if (Inst17 <= 1000 && typeof (f3) != "undefined") {_RecordType("<646,648,56>",(f3)); Inst17++; } } catch(e) {}

try { if (Inst18 <= 1000 && typeof (f3) != "undefined") {_RecordType("<694,696,60>",(f3)); Inst18++; } } catch(e) {}
  if (f3()) {
try { if (Inst19 <= 1000 && typeof (s) != "undefined") {_RecordType("<713,714,61>",(s)); Inst19++; } } catch(e) {}
    return s;
  }
}

"hey";
try { if (Inst20 <= 1000 && typeof (g3) != "undefined") {_RecordType("<730,732,66>",(g3)); Inst20++; } } catch(e) {}
g3();

var f4 = function () {
  for (;;) {
    ;
  }
};
try { if (Inst21 <= 1000 && typeof (f4) != "undefined") {_RecordType("<741,743,68>",(f4)); Inst21++; } } catch(e) {}

try { if (Inst22 <= 1000 && typeof (g4) != "undefined") {_RecordType("<796,798,74>",(g4)); Inst22++; } } catch(e) {}
function g4() {
  var s = "hey";
try { if (Inst23 <= 1000 && typeof (s) != "undefined") {_RecordType("<809,810,75>",(s)); Inst23++; } } catch(e) {}

  f4 = function () {
    return true;
  };
try { if (Inst24 <= 1000 && typeof (f4) != "undefined") {_RecordType("<823,825,77>",(f4)); Inst24++; } } catch(e) {}

try { if (Inst25 <= 1000 && typeof (f4) != "undefined") {_RecordType("<874,876,81>",(f4)); Inst25++; } } catch(e) {}
  while (f4()) {
try { if (Inst26 <= 1000 && typeof (s) != "undefined") {_RecordType("<893,894,82>",(s)); Inst26++; } } catch(e) {}
    return s;
  }
}

"hey";
try { if (Inst27 <= 1000 && typeof (g4) != "undefined") {_RecordType("<910,912,87>",(g4)); Inst27++; } } catch(e) {}
g4();

