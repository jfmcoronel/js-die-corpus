var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2017 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
try { if (Inst0 <= 1000 && typeof (f) != "undefined") {_RecordType("<176,177,4>",(f)); Inst0++; } } catch(e) {}
function f(a, i, v) {
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<178,179,4>",(a)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (i) != "undefined") {_RecordType("<181,182,4>",(i)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (v) != "undefined") {_RecordType("<184,185,4>",(v)); Inst3++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (v) != "undefined") {_RecordType("<198,199,5>",(v)); Inst6++; } } catch(e) {}
  a[i] = v;
try { if (Inst4 <= 1000 && typeof (a[i]) != "undefined") {_RecordType("<191,195,5>",(a[i])); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (a) != "undefined") {_RecordType("<191,192,5>",(a)); Inst5++; } } catch(e) {}
}

try { if (Inst7 <= 1000 && typeof (f) != "undefined") {_RecordType("<204,205,8>",(f)); Inst7++; } } catch(e) {}
f("make it generic", 0, 0);
try { if (Inst9 <= 1000 && typeof (Array) != "undefined") {_RecordType("<244,249,9>",(Array)); Inst9++; } } catch(e) {}
var a = new Array();
try { if (Inst8 <= 1000 && typeof (a) != "undefined") {_RecordType("<236,237,9>",(a)); Inst8++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<253,274,10>",(Object.defineProperty)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Object) != "undefined") {_RecordType("<253,259,10>",(Object)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (a) != "undefined") {_RecordType("<275,276,10>",(a)); Inst12++; } } catch(e) {}
Object.defineProperty(a, "length", {
  value: 3,
  writable: false
});
try { if (Inst13 <= 1000 && typeof (print) != "undefined") {_RecordType("<324,329,14>",(print)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (JSON.stringify) != "undefined") {_RecordType("<330,344,14>",(JSON.stringify)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<330,334,14>",(JSON)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<345,376,14>",(Object.getOwnPropertyDescriptor)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Object) != "undefined") {_RecordType("<345,351,14>",(Object)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (a) != "undefined") {_RecordType("<377,378,14>",(a)); Inst18++; } } catch(e) {}
print(JSON.stringify(Object.getOwnPropertyDescriptor(a, "length")));
3;
try { if (Inst19 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<396,404,16>",(a.length)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (a) != "undefined") {_RecordType("<396,397,16>",(a)); Inst20++; } } catch(e) {}
a.length;
try { if (Inst21 <= 1000 && typeof (f) != "undefined") {_RecordType("<406,407,17>",(f)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (a) != "undefined") {_RecordType("<408,409,17>",(a)); Inst22++; } } catch(e) {}
f(a, 3, 3);
try { if (Inst23 <= 1000 && typeof (Object.getOwnPropertyDescriptor(a, "length").writable) != "undefined") {_RecordType("<418,471,18>",(Object.getOwnPropertyDescriptor(a, "length").writable)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<418,449,18>",(Object.getOwnPropertyDescriptor)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Object) != "undefined") {_RecordType("<418,424,18>",(Object)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (a) != "undefined") {_RecordType("<450,451,18>",(a)); Inst26++; } } catch(e) {}
Object.getOwnPropertyDescriptor(a, "length").writable;
3;
try { if (Inst27 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<476,484,20>",(a.length)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (a) != "undefined") {_RecordType("<476,477,20>",(a)); Inst28++; } } catch(e) {}
a.length;
try { if (Inst30 <= 1000 && typeof (Array) != "undefined") {_RecordType("<498,503,21>",(Array)); Inst30++; } } catch(e) {}
var b = new Array();
try { if (Inst29 <= 1000 && typeof (b) != "undefined") {_RecordType("<490,491,21>",(b)); Inst29++; } } catch(e) {}
b.length = 3;
try { if (Inst31 <= 1000 && typeof (b.length) != "undefined") {_RecordType("<507,515,22>",(b.length)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (b) != "undefined") {_RecordType("<507,508,22>",(b)); Inst32++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (Object.freeze) != "undefined") {_RecordType("<521,534,23>",(Object.freeze)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (Object) != "undefined") {_RecordType("<521,527,23>",(Object)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (b) != "undefined") {_RecordType("<535,536,23>",(b)); Inst35++; } } catch(e) {}
Object.freeze(b);
3;
try { if (Inst36 <= 1000 && typeof (b.length) != "undefined") {_RecordType("<542,550,25>",(b.length)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (b) != "undefined") {_RecordType("<542,543,25>",(b)); Inst37++; } } catch(e) {}
b.length;
try { if (Inst38 <= 1000 && typeof (f) != "undefined") {_RecordType("<552,553,26>",(f)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (b) != "undefined") {_RecordType("<554,555,26>",(b)); Inst39++; } } catch(e) {}
f(b, 3, 3);
3;
try { if (Inst40 <= 1000 && typeof (b.length) != "undefined") {_RecordType("<567,575,28>",(b.length)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (b) != "undefined") {_RecordType("<567,568,28>",(b)); Inst41++; } } catch(e) {}
b.length;

