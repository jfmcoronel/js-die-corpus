var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2010 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// See: http://code.google.com/p/v8/issues/detail?id=1015
// Object and array literals should be created using DefineOwnProperty, and
// therefore not hit setters in the prototype.
try { if (Inst0 <= 1000 && typeof (mkFail) != "undefined") {_RecordType("<1787,1793,30>",(mkFail)); Inst0++; } } catch(e) {}
function mkFail(message) {
try { if (Inst1 <= 1000 && typeof (message) != "undefined") {_RecordType("<1794,1801,30>",(message)); Inst1++; } } catch(e) {}
  return function () {
try { if (Inst2 <= 1000 && typeof (message) != "undefined") {_RecordType("<1832,1839,32>",(message)); Inst2++; } } catch(e) {}
    message;
  };
}

try { if (Inst3 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<1849,1870,36>",(Object.defineProperty)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1849,1855,36>",(Object)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<1871,1887,36>",(Object.prototype)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1871,1877,36>",(Object)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (mkFail) != "undefined") {_RecordType("<1905,1911,37>",(mkFail)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (mkFail) != "undefined") {_RecordType("<1928,1934,38>",(mkFail)); Inst8++; } } catch(e) {}
Object.defineProperty(Object.prototype, "foo", {
  get: mkFail("oget"),
  set: mkFail("oset")
});
try { if (Inst9 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<1947,1968,40>",(Object.defineProperty)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1947,1953,40>",(Object)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<1969,1984,40>",(Array.prototype)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Array) != "undefined") {_RecordType("<1969,1974,40>",(Array)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (mkFail) != "undefined") {_RecordType("<2000,2006,41>",(mkFail)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (mkFail) != "undefined") {_RecordType("<2023,2029,42>",(mkFail)); Inst14++; } } catch(e) {}
Object.defineProperty(Array.prototype, "2", {
  get: mkFail("aget"),
  set: mkFail("aset")
});

try { if (Inst15 <= 1000 && typeof (inFunction) != "undefined") {_RecordType("<2052,2062,45>",(inFunction)); Inst15++; } } catch(e) {}
function inFunction() {
  for (var i = 0; i < 10; i++) {
try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<2078,2079,46>",(i)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (i) != "undefined") {_RecordType("<2085,2086,46>",(i)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (i) != "undefined") {_RecordType("<2093,2094,46>",(i)); Inst18++; } } catch(e) {}
    // in loop.
try { if (Inst20 <= 1000 && typeof (JSON.parse) != "undefined") {_RecordType("<2129,2139,48>",(JSON.parse)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<2129,2133,48>",(JSON)); Inst21++; } } catch(e) {}
    var ja = JSON.parse('[1,2,3,4]');
try { if (Inst19 <= 1000 && typeof (ja) != "undefined") {_RecordType("<2124,2126,48>",(ja)); Inst19++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (JSON.parse) != "undefined") {_RecordType("<2167,2177,49>",(JSON.parse)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<2167,2171,49>",(JSON)); Inst24++; } } catch(e) {}
    var jo = JSON.parse('{"bar": 10, "foo": 20}');
try { if (Inst22 <= 1000 && typeof (jo) != "undefined") {_RecordType("<2162,2164,49>",(jo)); Inst22++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (JSON.parse) != "undefined") {_RecordType("<2219,2229,50>",(JSON.parse)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<2219,2223,50>",(JSON)); Inst27++; } } catch(e) {}
    var jop = JSON.parse('{"bar": 10, "__proto__": { }, "foo": 20}');
try { if (Inst25 <= 1000 && typeof (jop) != "undefined") {_RecordType("<2213,2216,50>",(jop)); Inst25++; } } catch(e) {}
    var a = [1, 2, 3, 4];
try { if (Inst28 <= 1000 && typeof (a) != "undefined") {_RecordType("<2283,2284,51>",(a)); Inst28++; } } catch(e) {}
    var o = {
      bar: 10,
      foo: 20
    };
try { if (Inst29 <= 1000 && typeof (o) != "undefined") {_RecordType("<2309,2310,52>",(o)); Inst29++; } } catch(e) {}
try { if (Inst31 <= 1000 && typeof (bar) != "undefined") {_RecordType("<2397,2400,58>",(bar)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (v) != "undefined") {_RecordType("<2401,2402,58>",(v)); Inst32++; } } catch(e) {}
    var op = {
      __proto__: {
        set bar(v) {
          "bset";
        }

      },
      bar: 10
    };
try { if (Inst30 <= 1000 && typeof (op) != "undefined") {_RecordType("<2359,2361,56>",(op)); Inst30++; } } catch(e) {}
  }
}

for (var i = 0; i < 10; i++) {
try { if (Inst33 <= 1000 && typeof (i) != "undefined") {_RecordType("<2481,2482,68>",(i)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (i) != "undefined") {_RecordType("<2488,2489,68>",(i)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (i) != "undefined") {_RecordType("<2496,2497,68>",(i)); Inst35++; } } catch(e) {}
  // In global scope.
try { if (Inst37 <= 1000 && typeof (JSON.parse) != "undefined") {_RecordType("<2536,2546,70>",(JSON.parse)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<2536,2540,70>",(JSON)); Inst38++; } } catch(e) {}
  var ja = JSON.parse('[1,2,3,4]');
try { if (Inst36 <= 1000 && typeof (ja) != "undefined") {_RecordType("<2531,2533,70>",(ja)); Inst36++; } } catch(e) {}
try { if (Inst40 <= 1000 && typeof (JSON.parse) != "undefined") {_RecordType("<2572,2582,71>",(JSON.parse)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<2572,2576,71>",(JSON)); Inst41++; } } catch(e) {}
  var jo = JSON.parse('{"bar": 10, "foo": 20}');
try { if (Inst39 <= 1000 && typeof (jo) != "undefined") {_RecordType("<2567,2569,71>",(jo)); Inst39++; } } catch(e) {}
try { if (Inst43 <= 1000 && typeof (JSON.parse) != "undefined") {_RecordType("<2622,2632,72>",(JSON.parse)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<2622,2626,72>",(JSON)); Inst44++; } } catch(e) {}
  var jop = JSON.parse('{"bar": 10, "__proto__": { }, "foo": 20}');
try { if (Inst42 <= 1000 && typeof (jop) != "undefined") {_RecordType("<2616,2619,72>",(jop)); Inst42++; } } catch(e) {}
  var a = [1, 2, 3, 4];
try { if (Inst45 <= 1000 && typeof (a) != "undefined") {_RecordType("<2684,2685,73>",(a)); Inst45++; } } catch(e) {}
  var o = {
    bar: 10,
    foo: 20
  };
try { if (Inst46 <= 1000 && typeof (o) != "undefined") {_RecordType("<2708,2709,74>",(o)); Inst46++; } } catch(e) {}
try { if (Inst48 <= 1000 && typeof (bar) != "undefined") {_RecordType("<2784,2787,80>",(bar)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (v) != "undefined") {_RecordType("<2788,2789,80>",(v)); Inst49++; } } catch(e) {}
  var op = {
    __proto__: {
      set bar(v) {
        "bset";
      }

    },
    bar: 10
  }; // In function scope.
try { if (Inst47 <= 1000 && typeof (op) != "undefined") {_RecordType("<2750,2752,78>",(op)); Inst47++; } } catch(e) {}

try { if (Inst50 <= 1000 && typeof (inFunction) != "undefined") {_RecordType("<2867,2877,88>",(inFunction)); Inst50++; } } catch(e) {}
  inFunction();
}

