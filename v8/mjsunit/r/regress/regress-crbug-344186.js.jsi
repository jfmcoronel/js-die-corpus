var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2014 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax
try { if (Inst1 <= 1000 && typeof (Int32Array) != "undefined") {_RecordType("<216,226,5>",(Int32Array)); Inst1++; } } catch(e) {}
var dummy = new Int32Array(100);
try { if (Inst0 <= 1000 && typeof (dummy) != "undefined") {_RecordType("<204,209,5>",(dummy)); Inst0++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (Int32Array) != "undefined") {_RecordType("<249,259,6>",(Int32Array)); Inst3++; } } catch(e) {}
var array = new Int32Array(128);
try { if (Inst2 <= 1000 && typeof (array) != "undefined") {_RecordType("<237,242,6>",(array)); Inst2++; } } catch(e) {}

try { if (Inst4 <= 1000 && typeof (fun) != "undefined") {_RecordType("<276,279,8>",(fun)); Inst4++; } } catch(e) {}
function fun(base) {
try { if (Inst5 <= 1000 && typeof (base) != "undefined") {_RecordType("<280,284,8>",(base)); Inst5++; } } catch(e) {}
  array[base - 95] = 1;
try { if (Inst6 <= 1000 && typeof (array[base - 95]) != "undefined") {_RecordType("<290,306,9>",(array[base - 95])); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (array) != "undefined") {_RecordType("<290,295,9>",(array)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (base) != "undefined") {_RecordType("<296,300,9>",(base)); Inst8++; } } catch(e) {}
  array[base - 99] = 2;
try { if (Inst9 <= 1000 && typeof (array[base - 99]) != "undefined") {_RecordType("<314,330,10>",(array[base - 99])); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (array) != "undefined") {_RecordType("<314,319,10>",(array)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (base) != "undefined") {_RecordType("<320,324,10>",(base)); Inst11++; } } catch(e) {}
  array[base + 4] = 3;
try { if (Inst12 <= 1000 && typeof (array[base + 4]) != "undefined") {_RecordType("<338,353,11>",(array[base + 4])); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (array) != "undefined") {_RecordType("<338,343,11>",(array)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (base) != "undefined") {_RecordType("<344,348,11>",(base)); Inst14++; } } catch(e) {}
}

try { if (Inst15 <= 1000 && typeof (fun) != "undefined") {_RecordType("<362,365,14>",(fun)); Inst15++; } } catch(e) {}
fun(100);
try { if (Inst16 <= 1000 && typeof (fun) != "undefined") {_RecordType("<372,375,15>",(fun)); Inst16++; } } catch(e) {}
fun(0);

for (var i = 0; i < dummy.length; i++) {
try { if (Inst17 <= 1000 && typeof (i) != "undefined") {_RecordType("<390,391,17>",(i)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (i) != "undefined") {_RecordType("<397,398,17>",(i)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (dummy.length) != "undefined") {_RecordType("<401,413,17>",(dummy.length)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (dummy) != "undefined") {_RecordType("<401,406,17>",(dummy)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<415,416,17>",(i)); Inst21++; } } catch(e) {}
  0;
try { if (Inst22 <= 1000 && typeof (dummy[i]) != "undefined") {_RecordType("<429,437,19>",(dummy[i])); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (dummy) != "undefined") {_RecordType("<429,434,19>",(dummy)); Inst23++; } } catch(e) {}
  dummy[i];
}

