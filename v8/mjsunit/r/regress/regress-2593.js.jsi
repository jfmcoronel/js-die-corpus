var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2013 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// Flags: --expose-gc
p1 = {};
try { if (Inst0 <= 1000 && typeof (p1) != "undefined") {_RecordType("<1619,1621,28>",(p1)); Inst0++; } } catch(e) {}
p2 = {};
try { if (Inst1 <= 1000 && typeof (p2) != "undefined") {_RecordType("<1628,1630,29>",(p2)); Inst1++; } } catch(e) {}
p3 = {
  x: 1
};
try { if (Inst2 <= 1000 && typeof (p3) != "undefined") {_RecordType("<1637,1639,30>",(p3)); Inst2++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (p3) != "undefined") {_RecordType("<1669,1671,33>",(p3)); Inst5++; } } catch(e) {}
p2.__proto__ = p3;
try { if (Inst3 <= 1000 && typeof (p2.__proto__) != "undefined") {_RecordType("<1654,1666,33>",(p2.__proto__)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (p2) != "undefined") {_RecordType("<1654,1656,33>",(p2)); Inst4++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (p2) != "undefined") {_RecordType("<1688,1690,34>",(p2)); Inst8++; } } catch(e) {}
p1.__proto__ = p2; // Normalize p1.
try { if (Inst6 <= 1000 && typeof (p1.__proto__) != "undefined") {_RecordType("<1673,1685,34>",(p1.__proto__)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (p1) != "undefined") {_RecordType("<1673,1675,34>",(p1)); Inst7++; } } catch(e) {}

p1.z = 1;
try { if (Inst9 <= 1000 && typeof (p1.z) != "undefined") {_RecordType("<1710,1714,36>",(p1.z)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (p1) != "undefined") {_RecordType("<1710,1712,36>",(p1)); Inst10++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (p1.z) != "undefined") {_RecordType("<1727,1731,37>",(p1.z)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (p1) != "undefined") {_RecordType("<1727,1729,37>",(p1)); Inst12++; } } catch(e) {}
delete p1.z; // Make sure all objects are in old space.

for (var i = 0; i < 10; i++) {
try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<1786,1787,39>",(i)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<1793,1794,39>",(i)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<1801,1802,39>",(i)); Inst15++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (gc) != "undefined") {_RecordType("<1810,1812,40>",(gc)); Inst16++; } } catch(e) {}
  gc();
}

try { if (Inst17 <= 1000 && typeof (f2) != "undefined") {_RecordType("<1828,1830,43>",(f2)); Inst17++; } } catch(e) {}
function f2() {
try { if (Inst18 <= 1000 && typeof (p2.x) != "undefined") {_RecordType("<1837,1841,44>",(p2.x)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (p2) != "undefined") {_RecordType("<1837,1839,44>",(p2)); Inst19++; } } catch(e) {}
  p2.x;
}

try { if (Inst20 <= 1000 && typeof (f1) != "undefined") {_RecordType("<1855,1857,47>",(f1)); Inst20++; } } catch(e) {}
function f1() {
try { if (Inst21 <= 1000 && typeof (p1.x) != "undefined") {_RecordType("<1871,1875,48>",(p1.x)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (p1) != "undefined") {_RecordType("<1871,1873,48>",(p1)); Inst22++; } } catch(e) {}
  return p1.x;
} // Create load stub in p2.


for (var i = 0; i < 10; i++) {
try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<1917,1918,52>",(i)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<1924,1925,52>",(i)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<1932,1933,52>",(i)); Inst25++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (f2) != "undefined") {_RecordType("<1941,1943,53>",(f2)); Inst26++; } } catch(e) {}
  f2();
} // Create load stub in p2 for p1.


for (var i = 0; i < 10; i++) {
try { if (Inst27 <= 1000 && typeof (i) != "undefined") {_RecordType("<1994,1995,57>",(i)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (i) != "undefined") {_RecordType("<2001,2002,57>",(i)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (i) != "undefined") {_RecordType("<2009,2010,57>",(i)); Inst29++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (f1) != "undefined") {_RecordType("<2018,2020,58>",(f1)); Inst30++; } } catch(e) {}
  f1();
}

1;
try { if (Inst31 <= 1000 && typeof (f1) != "undefined") {_RecordType("<2030,2032,62>",(f1)); Inst31++; } } catch(e) {}
f1();
p2.x = 2;
try { if (Inst32 <= 1000 && typeof (p2.x) != "undefined") {_RecordType("<2036,2040,63>",(p2.x)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (p2) != "undefined") {_RecordType("<2036,2038,63>",(p2)); Inst33++; } } catch(e) {}
2;
try { if (Inst34 <= 1000 && typeof (f1) != "undefined") {_RecordType("<2049,2051,65>",(f1)); Inst34++; } } catch(e) {}
f1();

