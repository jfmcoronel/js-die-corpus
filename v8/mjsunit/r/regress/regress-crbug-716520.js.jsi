var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2017 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
var __v_0 = {};
try { if (Inst0 <= 1000 && typeof (__v_0) != "undefined") {_RecordType("<171,176,4>",(__v_0)); Inst0++; } } catch(e) {}

var __v_8 = this;
try { if (Inst1 <= 1000 && typeof (__v_8) != "undefined") {_RecordType("<188,193,6>",(__v_8)); Inst1++; } } catch(e) {}

var __v_11 = -1073741825;
try { if (Inst2 <= 1000 && typeof (__v_11) != "undefined") {_RecordType("<207,213,8>",(__v_11)); Inst2++; } } catch(e) {}

__v_1 = this;
try { if (Inst3 <= 1000 && typeof (__v_1) != "undefined") {_RecordType("<230,235,10>",(__v_1)); Inst3++; } } catch(e) {}

try { if (Inst4 <= 1000 && typeof (e) != "undefined") {_RecordType("<264,265,14>",(e)); Inst4++; } } catch(e) {}
try {
  ;
} catch (e) {
  ;
}

try { if (Inst5 <= 1000 && typeof (__f_4) != "undefined") {_RecordType("<285,290,18>",(__f_4)); Inst5++; } } catch(e) {}
function __f_4() {
  ;
}

try { if (Inst8 <= 1000 && typeof (__v_0) != "undefined") {_RecordType("<320,325,22>",(__v_0)); Inst8++; } } catch(e) {}
__f_4.prototype = __v_0;
try { if (Inst6 <= 1000 && typeof (__f_4.prototype) != "undefined") {_RecordType("<302,317,22>",(__f_4.prototype)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (__f_4) != "undefined") {_RecordType("<302,307,22>",(__f_4)); Inst7++; } } catch(e) {}

try { if (Inst9 <= 1000 && typeof (__f_9) != "undefined") {_RecordType("<337,342,24>",(__f_9)); Inst9++; } } catch(e) {}
function __f_9() {
try { if (Inst10 <= 1000 && typeof (new __f_4().v) != "undefined") {_RecordType("<356,369,25>",(new __f_4().v)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (__f_4) != "undefined") {_RecordType("<360,365,25>",(__f_4)); Inst11++; } } catch(e) {}
  return new __f_4().v;
}

try { if (Inst12 <= 1000 && typeof (__f_9) != "undefined") {_RecordType("<374,379,28>",(__f_9)); Inst12++; } } catch(e) {}
__f_9();

try { if (Inst13 <= 1000 && typeof (__f_9) != "undefined") {_RecordType("<384,389,30>",(__f_9)); Inst13++; } } catch(e) {}
__f_9();

try { if (Inst14 <= 1000 && typeof (e) != "undefined") {_RecordType("<440,441,36>",(e)); Inst14++; } } catch(e) {}
try {
  (function () {
    ;
  })();
} catch (e) {
  ;
}

try { if (Inst15 <= 1000 && typeof (Object.assign) != "undefined") {_RecordType("<452,465,40>",(Object.assign)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Object) != "undefined") {_RecordType("<452,458,40>",(Object)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (__v_0) != "undefined") {_RecordType("<466,471,40>",(__v_0)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (__v_1) != "undefined") {_RecordType("<473,478,40>",(__v_1)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (__v_0) != "undefined") {_RecordType("<480,485,40>",(__v_0)); Inst19++; } } catch(e) {}
Object.assign(__v_0, __v_1, __v_0);

(function () {
  ;
})();

