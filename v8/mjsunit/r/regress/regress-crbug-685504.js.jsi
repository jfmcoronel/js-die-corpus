var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2017 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
var v2 = 1073741823;
try { if (Inst0 <= 1000 && typeof (v2) != "undefined") {_RecordType("<171,173,4>",(v2)); Inst0++; } } catch(e) {}
var v13 = {};
try { if (Inst1 <= 1000 && typeof (v13) != "undefined") {_RecordType("<192,195,5>",(v13)); Inst1++; } } catch(e) {}

try { if (Inst2 <= 1000 && typeof (f1) != "undefined") {_RecordType("<212,214,7>",(f1)); Inst2++; } } catch(e) {}
function f1(a, b) {
try { if (Inst3 <= 1000 && typeof (a) != "undefined") {_RecordType("<215,216,7>",(a)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (b) != "undefined") {_RecordType("<218,219,7>",(b)); Inst4++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (a) != "undefined") {_RecordType("<234,235,8>",(a)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (b) != "undefined") {_RecordType("<238,239,8>",(b)); Inst7++; } } catch(e) {}
  var v4 = a + b;
try { if (Inst5 <= 1000 && typeof (v4) != "undefined") {_RecordType("<229,231,8>",(v4)); Inst5++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (v4.substring) != "undefined") {_RecordType("<252,264,9>",(v4.substring)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (v4) != "undefined") {_RecordType("<252,254,9>",(v4)); Inst10++; } } catch(e) {}
  var v1 = v4.substring(20);
try { if (Inst8 <= 1000 && typeof (v1) != "undefined") {_RecordType("<247,249,9>",(v1)); Inst8++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (v2[v4]) != "undefined") {_RecordType("<272,278,10>",(v2[v4])); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (v2) != "undefined") {_RecordType("<272,274,10>",(v2)); Inst12++; } } catch(e) {}
  v2[v4];
try { if (Inst13 <= 1000 && typeof (v1) != "undefined") {_RecordType("<289,291,11>",(v1)); Inst13++; } } catch(e) {}
  return v1;
}

try { if (Inst15 <= 1000 && typeof (f1) != "undefined") {_RecordType("<301,303,14>",(f1)); Inst15++; } } catch(e) {}
v5 = f1("abcdefghijklmnopqrstuvwxyz", "abcdefghijklmnopqrstuvwxyz");
try { if (Inst14 <= 1000 && typeof (v5) != "undefined") {_RecordType("<296,298,14>",(v5)); Inst14++; } } catch(e) {}

try { if (Inst16 <= 1000 && typeof (f8) != "undefined") {_RecordType("<375,377,16>",(f8)); Inst16++; } } catch(e) {}
function f8(name, input, regexp) {
try { if (Inst17 <= 1000 && typeof (name) != "undefined") {_RecordType("<378,382,16>",(name)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (input) != "undefined") {_RecordType("<384,389,16>",(input)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (regexp) != "undefined") {_RecordType("<391,397,16>",(regexp)); Inst19++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (input.match) != "undefined") {_RecordType("<413,424,17>",(input.match)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (input) != "undefined") {_RecordType("<413,418,17>",(input)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (regexp) != "undefined") {_RecordType("<425,431,17>",(regexp)); Inst23++; } } catch(e) {}
  var v14 = input.match(regexp);
try { if (Inst20 <= 1000 && typeof (v14) != "undefined") {_RecordType("<407,410,17>",(v14)); Inst20++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (RegExp["$'"]) != "undefined") {_RecordType("<436,448,18>",(RegExp["$'"])); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<436,442,18>",(RegExp)); Inst25++; } } catch(e) {}
  RegExp["$'"];
}

try { if (Inst26 <= 1000 && typeof (f8) != "undefined") {_RecordType("<453,455,21>",(f8)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (v5) != "undefined") {_RecordType("<473,475,21>",(v5)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (v13) != "undefined") {_RecordType("<477,480,21>",(v13)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof ([]["anama"]) != "undefined") {_RecordType("<482,493,21>",([]["anama"])); Inst29++; } } catch(e) {}
f8("CaptureGlobal", v5, v13, []["anama"]);

