var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2016 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax
try { if (Inst0 <= 1000 && typeof (TestDeoptFromComputedNameInObjectLiteral) != "undefined") {_RecordType("<210,250,5>",(TestDeoptFromComputedNameInObjectLiteral)); Inst0++; } } catch(e) {}
(function TestDeoptFromComputedNameInObjectLiteral() {
try { if (Inst1 <= 1000 && typeof (f) != "undefined") {_RecordType("<266,267,6>",(f)); Inst1++; } } catch(e) {}
  function f() {
    var o = {
      toString: function () {
        return "x";
      }
    };
try { if (Inst2 <= 1000 && typeof (o) != "undefined") {_RecordType("<280,281,7>",(o)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (o) != "undefined") {_RecordType("<371,372,13>",(o)); Inst3++; } } catch(e) {}
    return {
      [o]() {
        return 23;
      }

    };
  }

  23;
try { if (Inst4 <= 1000 && typeof (f().x) != "undefined") {_RecordType("<426,431,21>",(f().x)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (f) != "undefined") {_RecordType("<426,427,21>",(f)); Inst5++; } } catch(e) {}
  f().x();
  23;
try { if (Inst6 <= 1000 && typeof (f().x) != "undefined") {_RecordType("<443,448,23>",(f().x)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (f) != "undefined") {_RecordType("<443,444,23>",(f)); Inst7++; } } catch(e) {}
  f().x();
  23;
try { if (Inst8 <= 1000 && typeof (f().x) != "undefined") {_RecordType("<460,465,25>",(f().x)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (f) != "undefined") {_RecordType("<460,461,25>",(f)); Inst9++; } } catch(e) {}
  f().x();
})();

try { if (Inst10 <= 1000 && typeof (TestDeoptFromComputedNameInObjectLiteralWithModifiedPrototype) != "undefined") {_RecordType("<486,547,28>",(TestDeoptFromComputedNameInObjectLiteralWithModifiedPrototype)); Inst10++; } } catch(e) {}
(function TestDeoptFromComputedNameInObjectLiteralWithModifiedPrototype() {
  // The prototype chain should not be used if the definition
  // happens in the object literal.
try { if (Inst11 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<652,673,31>",(Object.defineProperty)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Object) != "undefined") {_RecordType("<652,658,31>",(Object)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<674,690,31>",(Object.prototype)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Object) != "undefined") {_RecordType("<674,680,31>",(Object)); Inst14++; } } catch(e) {}
  Object.defineProperty(Object.prototype, 'x_proto', {
    get: function () {
      return 21;
    },
    set: function () {
      ;
    }
  });

try { if (Inst15 <= 1000 && typeof (f) != "undefined") {_RecordType("<807,808,40>",(f)); Inst15++; } } catch(e) {}
  function f() {
    var o = {
      toString: function () {
        return "x_proto";
      }
    };
try { if (Inst16 <= 1000 && typeof (o) != "undefined") {_RecordType("<821,822,41>",(o)); Inst16++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (o) != "undefined") {_RecordType("<918,919,47>",(o)); Inst17++; } } catch(e) {}
    return {
      [o]() {
        return 23;
      }

    };
  }

  23;
try { if (Inst18 <= 1000 && typeof (f().x_proto) != "undefined") {_RecordType("<973,984,55>",(f().x_proto)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (f) != "undefined") {_RecordType("<973,974,55>",(f)); Inst19++; } } catch(e) {}
  f().x_proto();
  23;
try { if (Inst20 <= 1000 && typeof (f().x_proto) != "undefined") {_RecordType("<996,1007,57>",(f().x_proto)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (f) != "undefined") {_RecordType("<996,997,57>",(f)); Inst21++; } } catch(e) {}
  f().x_proto();
  23;
try { if (Inst22 <= 1000 && typeof (f().x_proto) != "undefined") {_RecordType("<1019,1030,59>",(f().x_proto)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (f) != "undefined") {_RecordType("<1019,1020,59>",(f)); Inst23++; } } catch(e) {}
  f().x_proto();
try { if (Inst24 <= 1000 && typeof (Object.prototype.c) != "undefined") {_RecordType("<1043,1061,60>",(Object.prototype.c)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<1043,1059,60>",(Object.prototype)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1043,1049,60>",(Object)); Inst26++; } } catch(e) {}
  delete Object.prototype.c;
})();

try { if (Inst27 <= 1000 && typeof (TestDeoptFromComputedNameInClassLiteral) != "undefined") {_RecordType("<1080,1119,63>",(TestDeoptFromComputedNameInClassLiteral)); Inst27++; } } catch(e) {}
(function TestDeoptFromComputedNameInClassLiteral() {
try { if (Inst28 <= 1000 && typeof (g) != "undefined") {_RecordType("<1135,1136,64>",(g)); Inst28++; } } catch(e) {}
  function g() {
    var o = {
      toString: function () {
        return "y";
      }
    };
try { if (Inst29 <= 1000 && typeof (o) != "undefined") {_RecordType("<1149,1150,65>",(o)); Inst29++; } } catch(e) {}

    class C {
      [o]() {
        return 42;
      }

    }
try { if (Inst30 <= 1000 && typeof (C) != "undefined") {_RecordType("<1231,1232,71>",(C)); Inst30++; } } catch(e) {}

try { if (Inst31 <= 1000 && typeof (C) != "undefined") {_RecordType("<1299,1300,78>",(C)); Inst31++; } } catch(e) {}
    return new C();
  }

  42;
try { if (Inst32 <= 1000 && typeof (g().y) != "undefined") {_RecordType("<1317,1322,82>",(g().y)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (g) != "undefined") {_RecordType("<1317,1318,82>",(g)); Inst33++; } } catch(e) {}
  g().y();
  42;
try { if (Inst34 <= 1000 && typeof (g().y) != "undefined") {_RecordType("<1334,1339,84>",(g().y)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (g) != "undefined") {_RecordType("<1334,1335,84>",(g)); Inst35++; } } catch(e) {}
  g().y();
  42;
try { if (Inst36 <= 1000 && typeof (g().y) != "undefined") {_RecordType("<1351,1356,86>",(g().y)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (g) != "undefined") {_RecordType("<1351,1352,86>",(g)); Inst37++; } } catch(e) {}
  g().y();
})();

