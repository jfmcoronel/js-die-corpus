var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2015 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
try { if (Inst0 <= 1000 && typeof (counter) != "undefined") {_RecordType("<176,183,4>",(counter)); Inst0++; } } catch(e) {}
function counter() {
  var i = 10000;
try { if (Inst1 <= 1000 && typeof (i) != "undefined") {_RecordType("<194,195,5>",(i)); Inst1++; } } catch(e) {}
  return function () {
try { if (Inst2 <= 1000 && typeof (i) != "undefined") {_RecordType("<236,237,7>",(i)); Inst2++; } } catch(e) {}
    if (i-- > 0) {
try { if (Inst3 <= 1000 && typeof (i) != "undefined") {_RecordType("<260,261,8>",(i)); Inst3++; } } catch(e) {}
      return i;
    }

    throw "done";
  };
}

var f = function () {
  "use asm";

try { if (Inst5 <= 1000 && typeof (f) != "undefined") {_RecordType("<350,351,18>",(f)); Inst5++; } } catch(e) {}
  return function f(i, c1, c2) {
try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<352,353,18>",(i)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (c1) != "undefined") {_RecordType("<355,357,18>",(c1)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (c2) != "undefined") {_RecordType("<359,361,18>",(c2)); Inst8++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<373,374,19>",(i)); Inst10++; } } catch(e) {}
    i = i | 0;
try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<369,370,19>",(i)); Inst9++; } } catch(e) {}

    do {
try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<400,401,22>",(i)); Inst11++; } } catch(e) {}
      if (i > 0) {
        while (0 ? this : this) {
try { if (Inst12 <= 1000 && typeof (c1) != "undefined") {_RecordType("<453,455,24>",(c1)); Inst12++; } } catch(e) {}
          c1();
        }
      } else {
try { if (Inst13 <= 1000 && typeof (c2) != "undefined") {_RecordType("<492,494,27>",(c2)); Inst13++; } } catch(e) {}
        c2();
      }
    } while (true);
  };
}();
try { if (Inst4 <= 1000 && typeof (f) != "undefined") {_RecordType("<300,301,15>",(f)); Inst4++; } } catch(e) {}

(function () {
try { if (Inst14 <= 1000 && typeof (f) != "undefined") {_RecordType("<554,555,34>",(f)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (counter) != "undefined") {_RecordType("<559,566,34>",(counter)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (counter) != "undefined") {_RecordType("<570,577,34>",(counter)); Inst16++; } } catch(e) {}
  f(0, counter(), counter());
})();

(function () {
try { if (Inst17 <= 1000 && typeof (f) != "undefined") {_RecordType("<606,607,38>",(f)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (counter) != "undefined") {_RecordType("<611,618,38>",(counter)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (counter) != "undefined") {_RecordType("<622,629,38>",(counter)); Inst19++; } } catch(e) {}
  f(1, counter(), counter());
})();

