var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2014 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
Array.prototype[0] = 777;
try { if (Inst0 <= 1000 && typeof (Array.prototype[0]) != "undefined") {_RecordType("<167,185,4>",(Array.prototype[0])); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<167,182,4>",(Array.prototype)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Array) != "undefined") {_RecordType("<167,172,4>",(Array)); Inst2++; } } catch(e) {}
var kElements = 10;
try { if (Inst3 <= 1000 && typeof (kElements) != "undefined") {_RecordType("<197,206,5>",(kElements)); Inst3++; } } catch(e) {}
var input_array = [];
try { if (Inst4 <= 1000 && typeof (input_array) != "undefined") {_RecordType("<217,228,6>",(input_array)); Inst4++; } } catch(e) {}

for (var i = 1; i < kElements; i++) {
try { if (Inst5 <= 1000 && typeof (i) != "undefined") {_RecordType("<245,246,8>",(i)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<252,253,8>",(i)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (kElements) != "undefined") {_RecordType("<256,265,8>",(kElements)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<267,268,8>",(i)); Inst8++; } } catch(e) {}
  input_array[i] = 0.5;
try { if (Inst9 <= 1000 && typeof (input_array[i]) != "undefined") {_RecordType("<276,290,9>",(input_array[i])); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (input_array) != "undefined") {_RecordType("<276,287,9>",(input_array)); Inst10++; } } catch(e) {}
}

try { if (Inst12 <= 1000 && typeof (input_array.concat) != "undefined") {_RecordType("<320,338,12>",(input_array.concat)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (input_array) != "undefined") {_RecordType("<320,331,12>",(input_array)); Inst13++; } } catch(e) {}
var output_array = input_array.concat(0.5);
try { if (Inst11 <= 1000 && typeof (output_array) != "undefined") {_RecordType("<305,317,12>",(output_array)); Inst11++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (kElements) != "undefined") {_RecordType("<345,354,13>",(kElements)); Inst14++; } } catch(e) {}
kElements + 1;
try { if (Inst15 <= 1000 && typeof (output_array.length) != "undefined") {_RecordType("<360,379,14>",(output_array.length)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (output_array) != "undefined") {_RecordType("<360,372,14>",(output_array)); Inst16++; } } catch(e) {}
output_array.length;
777;
try { if (Inst17 <= 1000 && typeof (output_array[0]) != "undefined") {_RecordType("<386,401,16>",(output_array[0])); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (output_array) != "undefined") {_RecordType("<386,398,16>",(output_array)); Inst18++; } } catch(e) {}
output_array[0];

for (var j = 1; j < kElements; j++) {
try { if (Inst19 <= 1000 && typeof (j) != "undefined") {_RecordType("<413,414,18>",(j)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (j) != "undefined") {_RecordType("<420,421,18>",(j)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (kElements) != "undefined") {_RecordType("<424,433,18>",(kElements)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (j) != "undefined") {_RecordType("<435,436,18>",(j)); Inst22++; } } catch(e) {}
  0.5;
try { if (Inst23 <= 1000 && typeof (output_array[j]) != "undefined") {_RecordType("<451,466,20>",(output_array[j])); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (output_array) != "undefined") {_RecordType("<451,463,20>",(output_array)); Inst24++; } } catch(e) {}
  output_array[j];
}

