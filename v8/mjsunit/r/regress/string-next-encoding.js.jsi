var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2018 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --opt --allow-natives-syntax
try { if (Inst0 <= 1000 && typeof (f) != "undefined") {_RecordType("<215,216,5>",(f)); Inst0++; } } catch(e) {}
function f() {
  var s = "√§œ†ÔøΩùåÜ";
try { if (Inst1 <= 1000 && typeof (s) != "undefined") {_RecordType("<227,228,6>",(s)); Inst1++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (s[Symbol.iterator]) != "undefined") {_RecordType("<250,268,7>",(s[Symbol.iterator])); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (s) != "undefined") {_RecordType("<250,251,7>",(s)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<252,267,7>",(Symbol.iterator)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<252,258,7>",(Symbol)); Inst6++; } } catch(e) {}
  var i = s[Symbol.iterator]();
try { if (Inst2 <= 1000 && typeof (i) != "undefined") {_RecordType("<246,247,7>",(i)); Inst2++; } } catch(e) {}
  "√§";
try { if (Inst7 <= 1000 && typeof (i.next().value) != "undefined") {_RecordType("<281,295,9>",(i.next().value)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (i.next) != "undefined") {_RecordType("<281,287,9>",(i.next)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<281,282,9>",(i)); Inst9++; } } catch(e) {}
  i.next().value;
  "œ†";
try { if (Inst10 <= 1000 && typeof (i.next().value) != "undefined") {_RecordType("<306,320,11>",(i.next().value)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (i.next) != "undefined") {_RecordType("<306,312,11>",(i.next)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<306,307,11>",(i)); Inst12++; } } catch(e) {}
  i.next().value;
  "ÔøΩ";
try { if (Inst13 <= 1000 && typeof (i.next().value) != "undefined") {_RecordType("<331,345,13>",(i.next().value)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (i.next) != "undefined") {_RecordType("<331,337,13>",(i.next)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<331,332,13>",(i)); Inst15++; } } catch(e) {}
  i.next().value;
  "ùåÜ";
try { if (Inst16 <= 1000 && typeof (i.next().value) != "undefined") {_RecordType("<357,371,15>",(i.next().value)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (i.next) != "undefined") {_RecordType("<357,363,15>",(i.next)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (i) != "undefined") {_RecordType("<357,358,15>",(i)); Inst18++; } } catch(e) {}
  i.next().value;
try { if (Inst19 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<375,384,16>",(undefined)); Inst19++; } } catch(e) {}
  undefined;
try { if (Inst20 <= 1000 && typeof (i.next().value) != "undefined") {_RecordType("<388,402,17>",(i.next().value)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (i.next) != "undefined") {_RecordType("<388,394,17>",(i.next)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<388,389,17>",(i)); Inst22++; } } catch(e) {}
  i.next().value;
}

try { if (Inst23 <= 1000 && typeof (f) != "undefined") {_RecordType("<407,408,20>",(f)); Inst23++; } } catch(e) {}
f();
try { if (Inst24 <= 1000 && typeof (f) != "undefined") {_RecordType("<412,413,21>",(f)); Inst24++; } } catch(e) {}
f();
try { if (Inst25 <= 1000 && typeof (f) != "undefined") {_RecordType("<417,418,22>",(f)); Inst25++; } } catch(e) {}
f();

