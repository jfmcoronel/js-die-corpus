var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2014 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//   * Redistributions of source code must retain the above copyright
//     notice, this list of conditions and the following disclaimer.
//   * Redistributions in binary form must reproduce the above
//     copyright notice, this list of conditions and the following
//     disclaimer in the documentation and/or other materials provided
//     with the distribution.
//   * Neither the name of Google Inc. nor the names of its
//     contributors may be used to endorse or promote products derived
//     from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// Flags: --allow-natives-syntax --opt --no-always-opt
var calls = 0;
try { if (Inst0 <= 1000 && typeof (calls) != "undefined") {_RecordType("<1638,1643,28>",(calls)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (callsFReceiver) != "undefined") {_RecordType("<1659,1673,30>",(callsFReceiver)); Inst1++; } } catch(e) {}
function callsFReceiver(o) {
try { if (Inst2 <= 1000 && typeof (o) != "undefined") {_RecordType("<1674,1675,30>",(o)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof ([].f.call) != "undefined") {_RecordType("<1688,1697,31>",([].f.call)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof ([].f) != "undefined") {_RecordType("<1688,1692,31>",([].f)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Number) != "undefined") {_RecordType("<1702,1708,31>",(Number)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (o.m) != "undefined") {_RecordType("<1709,1712,31>",(o.m)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (o) != "undefined") {_RecordType("<1709,1710,31>",(o)); Inst7++; } } catch(e) {}
  return [].f.call(new Number(o.m), 1, 2, 3);
} // For the HConstant


Array.prototype.f = function () {
try { if (Inst11 <= 1000 && typeof (calls) != "undefined") {_RecordType("<1786,1791,36>",(calls)); Inst11++; } } catch(e) {}
  calls++;
  return +this;
};
try { if (Inst8 <= 1000 && typeof (Array.prototype.f) != "undefined") {_RecordType("<1750,1767,35>",(Array.prototype.f)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<1750,1765,35>",(Array.prototype)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Array) != "undefined") {_RecordType("<1750,1755,35>",(Array)); Inst10++; } } catch(e) {}

var o1 = {
  m: 1
};
try { if (Inst12 <= 1000 && typeof (o1) != "undefined") {_RecordType("<1819,1821,40>",(o1)); Inst12++; } } catch(e) {}
var o2 = {
  a: 0,
  m: 1
};
try { if (Inst13 <= 1000 && typeof (o2) != "undefined") {_RecordType("<1840,1842,43>",(o2)); Inst13++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (callsFReceiver) != "undefined") {_RecordType("<1874,1888,47>",(callsFReceiver)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (o1) != "undefined") {_RecordType("<1889,1891,47>",(o1)); Inst16++; } } catch(e) {}
var r1 = callsFReceiver(o1);
try { if (Inst14 <= 1000 && typeof (r1) != "undefined") {_RecordType("<1869,1871,47>",(r1)); Inst14++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (callsFReceiver) != "undefined") {_RecordType("<1894,1908,48>",(callsFReceiver)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (o1) != "undefined") {_RecordType("<1909,1911,48>",(o1)); Inst18++; } } catch(e) {}
callsFReceiver(o1);
try { if (Inst20 <= 1000 && typeof (callsFReceiver) != "undefined") {_RecordType("<1923,1937,49>",(callsFReceiver)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (o1) != "undefined") {_RecordType("<1938,1940,49>",(o1)); Inst21++; } } catch(e) {}
var r2 = callsFReceiver(o1);
try { if (Inst19 <= 1000 && typeof (r2) != "undefined") {_RecordType("<1918,1920,49>",(r2)); Inst19++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (callsFReceiver) != "undefined") {_RecordType("<1943,1957,50>",(callsFReceiver)); Inst22++; } } catch(e) {}
callsFReceiver();
try { if (Inst23 <= 1000 && typeof (callsFReceiver) != "undefined") {_RecordType("<1961,1975,51>",(callsFReceiver)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (o2) != "undefined") {_RecordType("<1976,1978,51>",(o2)); Inst24++; } } catch(e) {}
callsFReceiver(o2);
try { if (Inst25 <= 1000 && typeof (callsFReceiver) != "undefined") {_RecordType("<1981,1995,52>",(callsFReceiver)); Inst25++; } } catch(e) {}
callsFReceiver();
try { if (Inst27 <= 1000 && typeof (callsFReceiver) != "undefined") {_RecordType("<2008,2022,53>",(callsFReceiver)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (o1) != "undefined") {_RecordType("<2023,2025,53>",(o1)); Inst28++; } } catch(e) {}
var r3 = callsFReceiver(o1);
try { if (Inst26 <= 1000 && typeof (r3) != "undefined") {_RecordType("<2003,2005,53>",(r3)); Inst26++; } } catch(e) {}
1;
try { if (Inst29 <= 1000 && typeof (r1) != "undefined") {_RecordType("<2031,2033,55>",(r1)); Inst29++; } } catch(e) {}
r1;
try { if (Inst30 <= 1000 && typeof (r1) != "undefined") {_RecordType("<2035,2037,56>",(r1)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (r2) != "undefined") {_RecordType("<2042,2044,56>",(r2)); Inst31++; } } catch(e) {}
r1 === r2;
try { if (Inst32 <= 1000 && typeof (r2) != "undefined") {_RecordType("<2046,2048,57>",(r2)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (r3) != "undefined") {_RecordType("<2053,2055,57>",(r3)); Inst33++; } } catch(e) {}
r2 === r3;
try { if (Inst35 <= 1000 && typeof (callsFReceiver) != "undefined") {_RecordType("<2062,2076,58>",(callsFReceiver)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (o1) != "undefined") {_RecordType("<2077,2079,58>",(o1)); Inst36++; } } catch(e) {}
r1 = callsFReceiver(o1);
try { if (Inst34 <= 1000 && typeof (r1) != "undefined") {_RecordType("<2057,2059,58>",(r1)); Inst34++; } } catch(e) {}
try { if (Inst37 <= 1000 && typeof (callsFReceiver) != "undefined") {_RecordType("<2082,2096,59>",(callsFReceiver)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (o1) != "undefined") {_RecordType("<2097,2099,59>",(o1)); Inst38++; } } catch(e) {}
callsFReceiver(o1);
try { if (Inst40 <= 1000 && typeof (callsFReceiver) != "undefined") {_RecordType("<2107,2121,60>",(callsFReceiver)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (o1) != "undefined") {_RecordType("<2122,2124,60>",(o1)); Inst41++; } } catch(e) {}
r2 = callsFReceiver(o1);
try { if (Inst39 <= 1000 && typeof (r2) != "undefined") {_RecordType("<2102,2104,60>",(r2)); Inst39++; } } catch(e) {}
try { if (Inst42 <= 1000 && typeof (callsFReceiver) != "undefined") {_RecordType("<2127,2141,61>",(callsFReceiver)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (o2) != "undefined") {_RecordType("<2142,2144,61>",(o2)); Inst43++; } } catch(e) {}
callsFReceiver(o2);
try { if (Inst45 <= 1000 && typeof (callsFReceiver) != "undefined") {_RecordType("<2152,2166,62>",(callsFReceiver)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (o1) != "undefined") {_RecordType("<2167,2169,62>",(o1)); Inst46++; } } catch(e) {}
r3 = callsFReceiver(o1);
try { if (Inst44 <= 1000 && typeof (r3) != "undefined") {_RecordType("<2147,2149,62>",(r3)); Inst44++; } } catch(e) {}
1;
try { if (Inst47 <= 1000 && typeof (r1) != "undefined") {_RecordType("<2175,2177,64>",(r1)); Inst47++; } } catch(e) {}
r1;
try { if (Inst48 <= 1000 && typeof (r1) != "undefined") {_RecordType("<2179,2181,65>",(r1)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (r2) != "undefined") {_RecordType("<2186,2188,65>",(r2)); Inst49++; } } catch(e) {}
r1 === r2;
try { if (Inst50 <= 1000 && typeof (r2) != "undefined") {_RecordType("<2190,2192,66>",(r2)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (r3) != "undefined") {_RecordType("<2197,2199,66>",(r3)); Inst51++; } } catch(e) {}
r2 === r3;
10;
try { if (Inst52 <= 1000 && typeof (calls) != "undefined") {_RecordType("<2205,2210,68>",(calls)); Inst52++; } } catch(e) {}
calls;

