var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2016 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
var a = {
  "33": true,
  "-1": true
};
try { if (Inst0 <= 1000 && typeof (a) != "undefined") {_RecordType("<171,172,4>",(a)); Inst0++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (Object.keys(a).map) != "undefined") {_RecordType("<221,239,8>",(Object.keys(a).map)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Object.keys) != "undefined") {_RecordType("<221,232,8>",(Object.keys)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Object) != "undefined") {_RecordType("<221,227,8>",(Object)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (a) != "undefined") {_RecordType("<233,234,8>",(a)); Inst5++; } } catch(e) {}
var strkeys = Object.keys(a).map(function (k) {
try { if (Inst6 <= 1000 && typeof (k) != "undefined") {_RecordType("<250,251,8>",(k)); Inst6++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (k) != "undefined") {_RecordType("<269,270,9>",(k)); Inst7++; } } catch(e) {}
  return "" + k;
});
try { if (Inst1 <= 1000 && typeof (strkeys) != "undefined") {_RecordType("<211,218,8>",(strkeys)); Inst1++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (Object.keys(a).map) != "undefined") {_RecordType("<290,308,11>",(Object.keys(a).map)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Object.keys) != "undefined") {_RecordType("<290,301,11>",(Object.keys)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Object) != "undefined") {_RecordType("<290,296,11>",(Object)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (a) != "undefined") {_RecordType("<302,303,11>",(a)); Inst12++; } } catch(e) {}
var numkeys = Object.keys(a).map(function (k) {
try { if (Inst13 <= 1000 && typeof (k) != "undefined") {_RecordType("<319,320,11>",(k)); Inst13++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (k) != "undefined") {_RecordType("<334,335,12>",(k)); Inst14++; } } catch(e) {}
  return +k;
});
try { if (Inst8 <= 1000 && typeof (numkeys) != "undefined") {_RecordType("<280,287,11>",(numkeys)); Inst8++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (strkeys.concat) != "undefined") {_RecordType("<352,366,14>",(strkeys.concat)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (strkeys) != "undefined") {_RecordType("<352,359,14>",(strkeys)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (numkeys) != "undefined") {_RecordType("<367,374,14>",(numkeys)); Inst18++; } } catch(e) {}
var keys = strkeys.concat(numkeys);
try { if (Inst15 <= 1000 && typeof (keys) != "undefined") {_RecordType("<345,349,14>",(keys)); Inst15++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (keys.forEach) != "undefined") {_RecordType("<377,389,15>",(keys.forEach)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (keys) != "undefined") {_RecordType("<377,381,15>",(keys)); Inst20++; } } catch(e) {}
keys.forEach(function (k) {
try { if (Inst21 <= 1000 && typeof (k) != "undefined") {_RecordType("<400,401,15>",(k)); Inst21++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (a.hasOwnProperty) != "undefined") {_RecordType("<407,423,16>",(a.hasOwnProperty)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (a) != "undefined") {_RecordType("<407,408,16>",(a)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (k) != "undefined") {_RecordType("<424,425,16>",(k)); Inst24++; } } catch(e) {}
  a.hasOwnProperty(k);
try { if (Inst25 <= 1000 && typeof (k) != "undefined") {_RecordType("<455,456,17>",(k)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (k) != "undefined") {_RecordType("<472,473,17>",(k)); Inst26++; } } catch(e) {}
  "property not found: " + k + "(" + typeof k + ")";
});
var b = {};
try { if (Inst27 <= 1000 && typeof (b) != "undefined") {_RecordType("<489,490,19>",(b)); Inst27++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (a) != "undefined") {_RecordType("<511,512,20>",(a)); Inst30++; } } catch(e) {}
b.__proto__ = a;
try { if (Inst28 <= 1000 && typeof (b.__proto__) != "undefined") {_RecordType("<497,508,20>",(b.__proto__)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (b) != "undefined") {_RecordType("<497,498,20>",(b)); Inst29++; } } catch(e) {}
try { if (Inst31 <= 1000 && typeof (keys.forEach) != "undefined") {_RecordType("<514,526,21>",(keys.forEach)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (keys) != "undefined") {_RecordType("<514,518,21>",(keys)); Inst32++; } } catch(e) {}
keys.forEach(function (k) {
try { if (Inst33 <= 1000 && typeof (k) != "undefined") {_RecordType("<537,538,21>",(k)); Inst33++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof (k) != "undefined") {_RecordType("<544,545,22>",(k)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (b) != "undefined") {_RecordType("<549,550,22>",(b)); Inst35++; } } catch(e) {}
  k in b;
try { if (Inst36 <= 1000 && typeof (k) != "undefined") {_RecordType("<579,580,23>",(k)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (k) != "undefined") {_RecordType("<596,597,23>",(k)); Inst37++; } } catch(e) {}
  "property not found: " + k + "(" + typeof k + ")";
});

