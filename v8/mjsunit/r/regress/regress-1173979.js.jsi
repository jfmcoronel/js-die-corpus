var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2008 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// Ensure that null only equals null and undefined, also for variables.
var null_var = null;
try { if (Inst0 <= 1000 && typeof (null_var) != "undefined") {_RecordType("<1673,1681,28>",(null_var)); Inst0++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof ([][0]) != "undefined") {_RecordType("<1706,1711,29>",([][0])); Inst2++; } } catch(e) {}
var undef_var = [][0];
try { if (Inst1 <= 1000 && typeof (undef_var) != "undefined") {_RecordType("<1694,1703,29>",(undef_var)); Inst1++; } } catch(e) {}
var boolean_var = false;
try { if (Inst3 <= 1000 && typeof (boolean_var) != "undefined") {_RecordType("<1717,1728,30>",(boolean_var)); Inst3++; } } catch(e) {}
var number_var = 0;
try { if (Inst4 <= 1000 && typeof (number_var) != "undefined") {_RecordType("<1742,1752,31>",(number_var)); Inst4++; } } catch(e) {}
var string_var = "";
try { if (Inst5 <= 1000 && typeof (string_var) != "undefined") {_RecordType("<1762,1772,32>",(string_var)); Inst5++; } } catch(e) {}
var object_var = {
  foo: 0
};
try { if (Inst6 <= 1000 && typeof (object_var) != "undefined") {_RecordType("<1783,1793,33>",(object_var)); Inst6++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (null_var) != "undefined") {_RecordType("<1810,1818,36>",(null_var)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (null_var) != "undefined") {_RecordType("<1822,1830,36>",(null_var)); Inst8++; } } catch(e) {}
null_var == null_var;
try { if (Inst9 <= 1000 && typeof (null_var) != "undefined") {_RecordType("<1832,1840,37>",(null_var)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (undef_var) != "undefined") {_RecordType("<1844,1853,37>",(undef_var)); Inst10++; } } catch(e) {}
null_var == undef_var;
try { if (Inst11 <= 1000 && typeof (null_var) != "undefined") {_RecordType("<1855,1863,38>",(null_var)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (boolean_var) != "undefined") {_RecordType("<1867,1878,38>",(boolean_var)); Inst12++; } } catch(e) {}
null_var != boolean_var;
try { if (Inst13 <= 1000 && typeof (null_var) != "undefined") {_RecordType("<1880,1888,39>",(null_var)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (number_var) != "undefined") {_RecordType("<1892,1902,39>",(number_var)); Inst14++; } } catch(e) {}
null_var != number_var;
try { if (Inst15 <= 1000 && typeof (null_var) != "undefined") {_RecordType("<1904,1912,40>",(null_var)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (string_var) != "undefined") {_RecordType("<1916,1926,40>",(string_var)); Inst16++; } } catch(e) {}
null_var != string_var;
try { if (Inst17 <= 1000 && typeof (null_var) != "undefined") {_RecordType("<1928,1936,41>",(null_var)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (object_var) != "undefined") {_RecordType("<1940,1950,41>",(object_var)); Inst18++; } } catch(e) {}
null_var != object_var;
try { if (Inst19 <= 1000 && typeof (undef_var) != "undefined") {_RecordType("<1952,1961,42>",(undef_var)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (null_var) != "undefined") {_RecordType("<1965,1973,42>",(null_var)); Inst20++; } } catch(e) {}
undef_var == null_var;
try { if (Inst21 <= 1000 && typeof (boolean_var) != "undefined") {_RecordType("<1975,1986,43>",(boolean_var)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (null_var) != "undefined") {_RecordType("<1990,1998,43>",(null_var)); Inst22++; } } catch(e) {}
boolean_var != null_var;
try { if (Inst23 <= 1000 && typeof (number_var) != "undefined") {_RecordType("<2000,2010,44>",(number_var)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (null_var) != "undefined") {_RecordType("<2014,2022,44>",(null_var)); Inst24++; } } catch(e) {}
number_var != null_var;
try { if (Inst25 <= 1000 && typeof (string_var) != "undefined") {_RecordType("<2024,2034,45>",(string_var)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (null_var) != "undefined") {_RecordType("<2038,2046,45>",(null_var)); Inst26++; } } catch(e) {}
string_var != null_var;
try { if (Inst27 <= 1000 && typeof (object_var) != "undefined") {_RecordType("<2048,2058,46>",(object_var)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (null_var) != "undefined") {_RecordType("<2062,2070,46>",(null_var)); Inst28++; } } catch(e) {}
object_var != null_var;

