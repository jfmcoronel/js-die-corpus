var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2017 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
try { if (Inst1 <= 1000 && typeof (new Int8Array(20).map((v, i) => i).buffer) != "undefined") {_RecordType("<176,217,4>",(new Int8Array(20).map((v, i) => i).buffer)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (new Int8Array(20).map) != "undefined") {_RecordType("<176,197,4>",(new Int8Array(20).map)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Int8Array) != "undefined") {_RecordType("<180,189,4>",(Int8Array)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (v) != "undefined") {_RecordType("<199,200,4>",(v)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (i) != "undefined") {_RecordType("<202,203,4>",(i)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<208,209,4>",(i)); Inst6++; } } catch(e) {}
var ab = new Int8Array(20).map((v, i) => i).buffer;
try { if (Inst0 <= 1000 && typeof (ab) != "undefined") {_RecordType("<171,173,4>",(ab)); Inst0++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (Int8Array) != "undefined") {_RecordType("<232,241,5>",(Int8Array)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (ab) != "undefined") {_RecordType("<242,244,5>",(ab)); Inst9++; } } catch(e) {}
var ta = new Int8Array(ab, 0, 10);
try { if (Inst7 <= 1000 && typeof (ta) != "undefined") {_RecordType("<223,225,5>",(ta)); Inst7++; } } catch(e) {}
var seen_length = -1;
try { if (Inst10 <= 1000 && typeof (seen_length) != "undefined") {_RecordType("<258,269,6>",(seen_length)); Inst10++; } } catch(e) {}
ta.constructor = {
  [Symbol.species]: function (len) {
try { if (Inst13 <= 1000 && typeof (len) != "undefined") {_RecordType("<325,328,8>",(len)); Inst13++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (len) != "undefined") {_RecordType("<350,353,9>",(len)); Inst15++; } } catch(e) {}
    seen_length = len;
try { if (Inst14 <= 1000 && typeof (seen_length) != "undefined") {_RecordType("<336,347,9>",(seen_length)); Inst14++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (Int8Array) != "undefined") {_RecordType("<370,379,10>",(Int8Array)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (ab) != "undefined") {_RecordType("<380,382,10>",(ab)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (len) != "undefined") {_RecordType("<387,390,10>",(len)); Inst18++; } } catch(e) {}
    return new Int8Array(ab, 1, len);
  }
};
try { if (Inst11 <= 1000 && typeof (ta.constructor) != "undefined") {_RecordType("<276,290,7>",(ta.constructor)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (ta) != "undefined") {_RecordType("<276,278,7>",(ta)); Inst12++; } } catch(e) {}
-1;
try { if (Inst19 <= 1000 && typeof (seen_length) != "undefined") {_RecordType("<404,415,14>",(seen_length)); Inst19++; } } catch(e) {}
seen_length;
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9];
try { if (Inst20 <= 1000 && typeof (ta) != "undefined") {_RecordType("<449,451,16>",(ta)); Inst20++; } } catch(e) {}
ta;
try { if (Inst22 <= 1000 && typeof (ta.slice) != "undefined") {_RecordType("<462,470,17>",(ta.slice)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (ta) != "undefined") {_RecordType("<462,464,17>",(ta)); Inst23++; } } catch(e) {}
var tb = ta.slice();
try { if (Inst21 <= 1000 && typeof (tb) != "undefined") {_RecordType("<457,459,17>",(tb)); Inst21++; } } catch(e) {}
10;
try { if (Inst24 <= 1000 && typeof (seen_length) != "undefined") {_RecordType("<478,489,19>",(seen_length)); Inst24++; } } catch(e) {}
seen_length;
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
try { if (Inst25 <= 1000 && typeof (ta) != "undefined") {_RecordType("<523,525,21>",(ta)); Inst25++; } } catch(e) {}
ta;
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
try { if (Inst26 <= 1000 && typeof (tb) != "undefined") {_RecordType("<559,561,23>",(tb)); Inst26++; } } catch(e) {}
tb;

