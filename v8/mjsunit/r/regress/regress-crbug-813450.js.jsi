var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2018 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax
try { if (Inst1 <= 1000 && typeof (Array) != "undefined") {_RecordType("<226,231,5>",(Array)); Inst1++; } } catch(e) {}
var constructorArgs = new Array(0x10100);
try { if (Inst0 <= 1000 && typeof (constructorArgs) != "undefined") {_RecordType("<204,219,5>",(constructorArgs)); Inst0++; } } catch(e) {}

var constructor = function () {
  ;
};
try { if (Inst2 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<247,258,7>",(constructor)); Inst2++; } } catch(e) {}

try { if (Inst4 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<300,305,11>",(Proxy)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<306,317,11>",(constructor)); Inst5++; } } catch(e) {}
var target = new Proxy(constructor, {
  construct: function () {
    ;
  }
});
try { if (Inst3 <= 1000 && typeof (target) != "undefined") {_RecordType("<287,293,11>",(target)); Inst3++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<378,383,16>",(Proxy)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (target) != "undefined") {_RecordType("<384,390,16>",(target)); Inst8++; } } catch(e) {}
var proxy = new Proxy(target, {
  construct: function (newTarget, args) {
try { if (Inst9 <= 1000 && typeof (newTarget) != "undefined") {_RecordType("<417,426,17>",(newTarget)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (args) != "undefined") {_RecordType("<428,432,17>",(args)); Inst10++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (Reflect.construct) != "undefined") {_RecordType("<447,464,18>",(Reflect.construct)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<447,454,18>",(Reflect)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<465,476,18>",(constructor)); Inst13++; } } catch(e) {}
    return Reflect.construct(constructor, []);
  }
});
try { if (Inst6 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<366,371,16>",(proxy)); Inst6++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<510,515,21>",(proxy)); Inst15++; } } catch(e) {}
var instance = new proxy();
try { if (Inst14 <= 1000 && typeof (instance) != "undefined") {_RecordType("<495,503,21>",(instance)); Inst14++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (Reflect.construct) != "undefined") {_RecordType("<535,552,22>",(Reflect.construct)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<535,542,22>",(Reflect)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<553,558,22>",(proxy)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (constructorArgs) != "undefined") {_RecordType("<560,575,22>",(constructorArgs)); Inst20++; } } catch(e) {}
var instance2 = Reflect.construct(proxy, constructorArgs);
try { if (Inst16 <= 1000 && typeof (instance2) != "undefined") {_RecordType("<523,532,22>",(instance2)); Inst16++; } } catch(e) {}

