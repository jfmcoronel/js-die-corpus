var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2016 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
Error.prepareStackTrace = function (e, frames) {
try { if (Inst2 <= 1000 && typeof (e) != "undefined") {_RecordType("<203,204,4>",(e)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (frames) != "undefined") {_RecordType("<206,212,4>",(frames)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (frames) != "undefined") {_RecordType("<225,231,5>",(frames)); Inst4++; } } catch(e) {}
  return frames;
};
try { if (Inst0 <= 1000 && typeof (Error.prepareStackTrace) != "undefined") {_RecordType("<167,190,4>",(Error.prepareStackTrace)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (Error) != "undefined") {_RecordType("<167,172,4>",(Error)); Inst1++; } } catch(e) {}

try { if (Inst5 <= 1000 && typeof (new Error().stack[0].getMethodName.call) != "undefined") {_RecordType("<244,283,8>",(new Error().stack[0].getMethodName.call)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (new Error().stack[0].getMethodName) != "undefined") {_RecordType("<244,278,8>",(new Error().stack[0].getMethodName)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (new Error().stack[0]) != "undefined") {_RecordType("<244,264,8>",(new Error().stack[0])); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (new Error().stack) != "undefined") {_RecordType("<244,261,8>",(new Error().stack)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Error) != "undefined") {_RecordType("<248,253,8>",(Error)); Inst9++; } } catch(e) {}
(() => new Error().stack[0].getMethodName.call({}))();

try { if (Inst10 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<293,302,10>",(TypeError)); Inst10++; } } catch(e) {}
TypeError;

Error.prepareStackTrace = function (e, frames) {
try { if (Inst13 <= 1000 && typeof (e) != "undefined") {_RecordType("<341,342,12>",(e)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (frames) != "undefined") {_RecordType("<344,350,12>",(frames)); Inst14++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (frames.map) != "undefined") {_RecordType("<363,373,13>",(frames.map)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (frames) != "undefined") {_RecordType("<363,369,13>",(frames)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (frame) != "undefined") {_RecordType("<374,379,13>",(frame)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<387,392,13>",(Proxy)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (frame) != "undefined") {_RecordType("<393,398,13>",(frame)); Inst19++; } } catch(e) {}
  return frames.map(frame => new Proxy(frame, {}));
};
try { if (Inst11 <= 1000 && typeof (Error.prepareStackTrace) != "undefined") {_RecordType("<305,328,12>",(Error.prepareStackTrace)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Error) != "undefined") {_RecordType("<305,310,12>",(Error)); Inst12++; } } catch(e) {}

try { if (Inst20 <= 1000 && typeof (new Error().stack[0].getMethodName) != "undefined") {_RecordType("<417,451,16>",(new Error().stack[0].getMethodName)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (new Error().stack[0]) != "undefined") {_RecordType("<417,437,16>",(new Error().stack[0])); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (new Error().stack) != "undefined") {_RecordType("<417,434,16>",(new Error().stack)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Error) != "undefined") {_RecordType("<421,426,16>",(Error)); Inst23++; } } catch(e) {}
(() => new Error().stack[0].getMethodName())();

try { if (Inst24 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<459,468,18>",(TypeError)); Inst24++; } } catch(e) {}
TypeError;

Error.prepareStackTrace = function (e, frames) {
try { if (Inst27 <= 1000 && typeof (e) != "undefined") {_RecordType("<507,508,20>",(e)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (frames) != "undefined") {_RecordType("<510,516,20>",(frames)); Inst28++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (frames) != "undefined") {_RecordType("<529,535,21>",(frames)); Inst29++; } } catch(e) {}
  return frames;
};
try { if (Inst25 <= 1000 && typeof (Error.prepareStackTrace) != "undefined") {_RecordType("<471,494,20>",(Error.prepareStackTrace)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Error) != "undefined") {_RecordType("<471,476,20>",(Error)); Inst26++; } } catch(e) {}

null;
try { if (Inst30 <= 1000 && typeof (new Error().stack[0].getMethodName) != "undefined") {_RecordType("<547,581,25>",(new Error().stack[0].getMethodName)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (new Error().stack[0]) != "undefined") {_RecordType("<547,567,25>",(new Error().stack[0])); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (new Error().stack) != "undefined") {_RecordType("<547,564,25>",(new Error().stack)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (Error) != "undefined") {_RecordType("<551,556,25>",(Error)); Inst33++; } } catch(e) {}
new Error().stack[0].getMethodName();

