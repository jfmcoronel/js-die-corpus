var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2014 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// Flags: --typed-array-max-size-in-heap=64
try { if (Inst0 <= 1000 && typeof (TestArray) != "undefined") {_RecordType("<223,232,6>",(TestArray)); Inst0++; } } catch(e) {}
function TestArray(constructor) {
try { if (Inst1 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<233,244,6>",(constructor)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (Check) != "undefined") {_RecordType("<259,264,7>",(Check)); Inst2++; } } catch(e) {}
  function Check(a) {
try { if (Inst3 <= 1000 && typeof (a) != "undefined") {_RecordType("<265,266,7>",(a)); Inst3++; } } catch(e) {}
    a[0] = "";
try { if (Inst4 <= 1000 && typeof (a[0]) != "undefined") {_RecordType("<274,278,8>",(a[0])); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (a) != "undefined") {_RecordType("<274,275,8>",(a)); Inst5++; } } catch(e) {}
    0;
try { if (Inst6 <= 1000 && typeof (a[0]) != "undefined") {_RecordType("<296,300,10>",(a[0])); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (a) != "undefined") {_RecordType("<296,297,10>",(a)); Inst7++; } } catch(e) {}
    a[0];
    a[0] = {};
try { if (Inst8 <= 1000 && typeof (a[0]) != "undefined") {_RecordType("<306,310,11>",(a[0])); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (a) != "undefined") {_RecordType("<306,307,11>",(a)); Inst9++; } } catch(e) {}
    0;
try { if (Inst10 <= 1000 && typeof (a[0]) != "undefined") {_RecordType("<328,332,13>",(a[0])); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (a) != "undefined") {_RecordType("<328,329,13>",(a)); Inst11++; } } catch(e) {}
    a[0];
    a[0] = {
      valueOf: function () {
        return 27;
      }
    };
try { if (Inst12 <= 1000 && typeof (a[0]) != "undefined") {_RecordType("<338,342,14>",(a[0])); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (a) != "undefined") {_RecordType("<338,339,14>",(a)); Inst13++; } } catch(e) {}
    27;
try { if (Inst14 <= 1000 && typeof (a[0]) != "undefined") {_RecordType("<422,426,20>",(a[0])); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (a) != "undefined") {_RecordType("<422,423,20>",(a)); Inst15++; } } catch(e) {}
    a[0];
  }

try { if (Inst16 <= 1000 && typeof (Check) != "undefined") {_RecordType("<435,440,23>",(Check)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<445,456,23>",(constructor)); Inst17++; } } catch(e) {}
  Check(new constructor(1));
try { if (Inst18 <= 1000 && typeof (Check) != "undefined") {_RecordType("<464,469,24>",(Check)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<474,485,24>",(constructor)); Inst19++; } } catch(e) {}
  Check(new constructor(100));
}

try { if (Inst20 <= 1000 && typeof (TestArray) != "undefined") {_RecordType("<496,505,27>",(TestArray)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Uint8Array) != "undefined") {_RecordType("<506,516,27>",(Uint8Array)); Inst21++; } } catch(e) {}
TestArray(Uint8Array);

