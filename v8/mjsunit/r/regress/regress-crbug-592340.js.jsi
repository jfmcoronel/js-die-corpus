var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2016 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
try { if (Inst1 <= 1000 && typeof (Array) != "undefined") {_RecordType("<189,194,4>",(Array)); Inst1++; } } catch(e) {}
class MyArray extends Array {}
try { if (Inst0 <= 1000 && typeof (MyArray) != "undefined") {_RecordType("<173,180,4>",(MyArray)); Inst0++; } } catch(e) {}

try { if (Inst7 <= 1000 && typeof (MyArray) != "undefined") {_RecordType("<234,241,6>",(MyArray)); Inst7++; } } catch(e) {}
Object.prototype[Symbol.species] = MyArray;
try { if (Inst2 <= 1000 && typeof (Object.prototype[Symbol.species]) != "undefined") {_RecordType("<199,231,6>",(Object.prototype[Symbol.species])); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<199,215,6>",(Object.prototype)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Object) != "undefined") {_RecordType("<199,205,6>",(Object)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Symbol.species) != "undefined") {_RecordType("<216,230,6>",(Symbol.species)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<216,222,6>",(Symbol)); Inst6++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (Array[Symbol.species]) != "undefined") {_RecordType("<250,271,7>",(Array[Symbol.species])); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Array) != "undefined") {_RecordType("<250,255,7>",(Array)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Symbol.species) != "undefined") {_RecordType("<256,270,7>",(Symbol.species)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<256,262,7>",(Symbol)); Inst11++; } } catch(e) {}
delete Array[Symbol.species];
try { if (Inst13 <= 1000 && typeof (Math.pow) != "undefined") {_RecordType("<281,289,8>",(Math.pow)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Math) != "undefined") {_RecordType("<281,285,8>",(Math)); Inst14++; } } catch(e) {}
__v_1 = Math.pow(2, 31);
try { if (Inst12 <= 1000 && typeof (__v_1) != "undefined") {_RecordType("<273,278,8>",(__v_1)); Inst12++; } } catch(e) {}
__v_2 = [];
try { if (Inst15 <= 1000 && typeof (__v_2) != "undefined") {_RecordType("<298,303,9>",(__v_2)); Inst15++; } } catch(e) {}
__v_2[__v_1] = 31;
try { if (Inst16 <= 1000 && typeof (__v_2[__v_1]) != "undefined") {_RecordType("<310,322,10>",(__v_2[__v_1])); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (__v_2) != "undefined") {_RecordType("<310,315,10>",(__v_2)); Inst17++; } } catch(e) {}
__v_4 = [];
try { if (Inst18 <= 1000 && typeof (__v_4) != "undefined") {_RecordType("<329,334,11>",(__v_4)); Inst18++; } } catch(e) {}
__v_4[__v_1 - 2] = 33;
try { if (Inst19 <= 1000 && typeof (__v_4[__v_1 - 2]) != "undefined") {_RecordType("<341,357,12>",(__v_4[__v_1 - 2])); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (__v_4) != "undefined") {_RecordType("<341,346,12>",(__v_4)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (__v_1) != "undefined") {_RecordType("<347,352,12>",(__v_1)); Inst21++; } } catch(e) {}

try { if (Inst22 <= 1000 && typeof (__v_2.concat) != "undefined") {_RecordType("<372,384,14>",(__v_2.concat)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (__v_2) != "undefined") {_RecordType("<372,377,14>",(__v_2)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (__v_4) != "undefined") {_RecordType("<385,390,14>",(__v_4)); Inst24++; } } catch(e) {}
(() => __v_2.concat(__v_4))();

try { if (Inst25 <= 1000 && typeof (RangeError) != "undefined") {_RecordType("<397,407,16>",(RangeError)); Inst25++; } } catch(e) {}
RangeError;

