var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2012 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// Flags: --allow-natives-syntax
try { if (Inst0 <= 1000 && typeof (array_fun) != "undefined") {_RecordType("<1639,1648,28>",(array_fun)); Inst0++; } } catch(e) {}
function array_fun() {
  for (var i = 0; i < 2; i++) {
try { if (Inst1 <= 1000 && typeof (i) != "undefined") {_RecordType("<1664,1665,29>",(i)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (i) != "undefined") {_RecordType("<1671,1672,29>",(i)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (i) != "undefined") {_RecordType("<1678,1679,29>",(i)); Inst3++; } } catch(e) {}
    var a = [1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8];
try { if (Inst4 <= 1000 && typeof (a) != "undefined") {_RecordType("<1693,1694,30>",(a)); Inst4++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (Array) != "undefined") {_RecordType("<1755,1760,31>",(Array)); Inst6++; } } catch(e) {}
    var x = new Array();
try { if (Inst5 <= 1000 && typeof (x) != "undefined") {_RecordType("<1747,1748,31>",(x)); Inst5++; } } catch(e) {}
    x.fixed$length = true;
try { if (Inst7 <= 1000 && typeof (x.fixed$length) != "undefined") {_RecordType("<1768,1782,32>",(x.fixed$length)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (x) != "undefined") {_RecordType("<1768,1769,32>",(x)); Inst8++; } } catch(e) {}

    for (var j = 0; j < a.length; j++) {
try { if (Inst9 <= 1000 && typeof (j) != "undefined") {_RecordType("<1805,1806,34>",(j)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (j) != "undefined") {_RecordType("<1812,1813,34>",(j)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<1816,1824,34>",(a.length)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (a) != "undefined") {_RecordType("<1816,1817,34>",(a)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (j) != "undefined") {_RecordType("<1826,1827,34>",(j)); Inst13++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (x.push) != "undefined") {_RecordType("<1839,1845,35>",(x.push)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (x) != "undefined") {_RecordType("<1839,1840,35>",(x)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (a[j]) != "undefined") {_RecordType("<1846,1850,35>",(a[j])); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (a) != "undefined") {_RecordType("<1846,1847,35>",(a)); Inst17++; } } catch(e) {}
      x.push(a[j]);
    }

    for (var j = 0; j < x.length; j++) {
try { if (Inst18 <= 1000 && typeof (j) != "undefined") {_RecordType("<1873,1874,38>",(j)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (j) != "undefined") {_RecordType("<1880,1881,38>",(j)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (x.length) != "undefined") {_RecordType("<1884,1892,38>",(x.length)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (x) != "undefined") {_RecordType("<1884,1885,38>",(x)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (j) != "undefined") {_RecordType("<1894,1895,38>",(j)); Inst22++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (x[j]) != "undefined") {_RecordType("<1918,1922,39>",(x[j])); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (x) != "undefined") {_RecordType("<1918,1919,39>",(x)); Inst24++; } } catch(e) {}
      if (typeof x[j] != 'number') {
        throw "foo";
      }

try { if (Inst27 <= 1000 && typeof (x[j]) != "undefined") {_RecordType("<1981,1985,43>",(x[j])); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (x) != "undefined") {_RecordType("<1981,1982,43>",(x)); Inst28++; } } catch(e) {}
      x[j] = x[j];
try { if (Inst25 <= 1000 && typeof (x[j]) != "undefined") {_RecordType("<1974,1978,43>",(x[j])); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (x) != "undefined") {_RecordType("<1974,1975,43>",(x)); Inst26++; } } catch(e) {}
    }
  }
}

try { if (Inst37 <= 1000 && typeof (e) != "undefined") {_RecordType("<2124,2125,56>",(e)); Inst37++; } } catch(e) {}
try {
  for (var i = 0; i < 10; ++i) {
try { if (Inst29 <= 1000 && typeof (i) != "undefined") {_RecordType("<2017,2018,49>",(i)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (i) != "undefined") {_RecordType("<2024,2025,49>",(i)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (i) != "undefined") {_RecordType("<2034,2035,49>",(i)); Inst31++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (array_fun) != "undefined") {_RecordType("<2043,2052,50>",(array_fun)); Inst32++; } } catch(e) {}
    array_fun();
  }

  for (var i = 0; i < 10; ++i) {
try { if (Inst33 <= 1000 && typeof (i) != "undefined") {_RecordType("<2072,2073,53>",(i)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (i) != "undefined") {_RecordType("<2079,2080,53>",(i)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (i) != "undefined") {_RecordType("<2089,2090,53>",(i)); Inst35++; } } catch(e) {}
try { if (Inst36 <= 1000 && typeof (array_fun) != "undefined") {_RecordType("<2098,2107,54>",(array_fun)); Inst36++; } } catch(e) {}
    array_fun();
  }
} catch (e) {}

