var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2016 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --ignition-osr --allow-natives-syntax
try { if (Inst0 <= 1000 && typeof (g) != "undefined") {_RecordType("<224,225,5>",(g)); Inst0++; } } catch(e) {}
function g() {
  return 23;
}

try { if (Inst1 <= 1000 && typeof (h) != "undefined") {_RecordType("<255,256,9>",(h)); Inst1++; } } catch(e) {}
function h() {
  return 42;
}

try { if (Inst2 <= 1000 && typeof (boom) != "undefined") {_RecordType("<286,290,13>",(boom)); Inst2++; } } catch(e) {}
function boom(o) {
try { if (Inst3 <= 1000 && typeof (o) != "undefined") {_RecordType("<291,292,13>",(o)); Inst3++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (h) != "undefined") {_RecordType("<304,305,14>",(h)); Inst6++; } } catch(e) {}
  o.g = h;
try { if (Inst4 <= 1000 && typeof (o.g) != "undefined") {_RecordType("<298,301,14>",(o.g)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (o) != "undefined") {_RecordType("<298,299,14>",(o)); Inst5++; } } catch(e) {}
}

try { if (Inst7 <= 1000 && typeof (f) != "undefined") {_RecordType("<319,320,17>",(f)); Inst7++; } } catch(e) {}
function f(osr_and_recurse) {
try { if (Inst8 <= 1000 && typeof (osr_and_recurse) != "undefined") {_RecordType("<321,336,17>",(osr_and_recurse)); Inst8++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (osr_and_recurse) != "undefined") {_RecordType("<346,361,18>",(osr_and_recurse)); Inst9++; } } catch(e) {}
  if (osr_and_recurse) {
    for (var i = 0; i < 3; ++i) {
try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<378,379,19>",(i)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<385,386,19>",(i)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<394,395,19>",(i)); Inst12++; } } catch(e) {}
      ;
    }

try { if (Inst13 <= 1000 && typeof (f) != "undefined") {_RecordType("<418,419,23>",(f)); Inst13++; } } catch(e) {}
    f(false); // Trigger tier-up due to recursive call.

try { if (Inst14 <= 1000 && typeof (boom) != "undefined") {_RecordType("<475,479,25>",(boom)); Inst14++; } } catch(e) {}
    boom(this); // Causes a deopt due to below dependency.

try { if (Inst16 <= 1000 && typeof (g) != "undefined") {_RecordType("<543,544,27>",(g)); Inst16++; } } catch(e) {}
    var x = g(); // Install dependency on the {g} function.
try { if (Inst15 <= 1000 && typeof (x) != "undefined") {_RecordType("<539,540,27>",(x)); Inst15++; } } catch(e) {}

try { if (Inst17 <= 1000 && typeof (x) != "undefined") {_RecordType("<603,604,29>",(x)); Inst17++; } } catch(e) {}
    return x;
  }

  return 65;
}

65;
try { if (Inst18 <= 1000 && typeof (f) != "undefined") {_RecordType("<631,632,36>",(f)); Inst18++; } } catch(e) {}
f(false);
65;
try { if (Inst19 <= 1000 && typeof (f) != "undefined") {_RecordType("<645,646,38>",(f)); Inst19++; } } catch(e) {}
f(false);
42;
try { if (Inst20 <= 1000 && typeof (f) != "undefined") {_RecordType("<659,660,40>",(f)); Inst20++; } } catch(e) {}
f(true);

