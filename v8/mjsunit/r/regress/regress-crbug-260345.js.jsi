var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2013 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
var steps = 100000;
try { if (Inst0 <= 1000 && typeof (steps) != "undefined") {_RecordType("<1601,1606,27>",(steps)); Inst0++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<1641,1650,28>",(undefined)); Inst2++; } } catch(e) {}
var undefined_values = [undefined, "go on"];
try { if (Inst1 <= 1000 && typeof (undefined_values) != "undefined") {_RecordType("<1621,1637,28>",(undefined_values)); Inst1++; } } catch(e) {}
var null_values = [null, "go on"];
try { if (Inst3 <= 1000 && typeof (null_values) != "undefined") {_RecordType("<1666,1677,29>",(null_values)); Inst3++; } } catch(e) {}

try { if (Inst4 <= 1000 && typeof (get_undefined_object) != "undefined") {_RecordType("<1707,1727,31>",(get_undefined_object)); Inst4++; } } catch(e) {}
function get_undefined_object(i) {
try { if (Inst5 <= 1000 && typeof (i) != "undefined") {_RecordType("<1728,1729,31>",(i)); Inst5++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (undefined_values[i / steps | 0]) != "undefined") {_RecordType("<1742,1773,32>",(undefined_values[i / steps | 0])); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (undefined_values) != "undefined") {_RecordType("<1742,1758,32>",(undefined_values)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<1759,1760,32>",(i)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (steps) != "undefined") {_RecordType("<1763,1768,32>",(steps)); Inst9++; } } catch(e) {}
  return undefined_values[i / steps | 0];
}

try { if (Inst10 <= 1000 && typeof (test_undefined) != "undefined") {_RecordType("<1787,1801,35>",(test_undefined)); Inst10++; } } catch(e) {}
function test_undefined() {
  var objects = 0;
try { if (Inst11 <= 1000 && typeof (objects) != "undefined") {_RecordType("<1812,1819,36>",(objects)); Inst11++; } } catch(e) {}

  for (var i = 0; i < 2 * steps; i++) {
try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<1837,1838,38>",(i)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<1844,1845,38>",(i)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (steps) != "undefined") {_RecordType("<1852,1857,38>",(steps)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<1859,1860,38>",(i)); Inst15++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<1870,1879,39>",(undefined)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (get_undefined_object) != "undefined") {_RecordType("<1883,1903,39>",(get_undefined_object)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (i) != "undefined") {_RecordType("<1904,1905,39>",(i)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (objects) != "undefined") {_RecordType("<1910,1917,39>",(objects)); Inst19++; } } catch(e) {}
    undefined == get_undefined_object(i) && objects++;
  }

try { if (Inst20 <= 1000 && typeof (objects) != "undefined") {_RecordType("<1935,1942,42>",(objects)); Inst20++; } } catch(e) {}
  return objects;
}

try { if (Inst21 <= 1000 && typeof (steps) != "undefined") {_RecordType("<1947,1952,45>",(steps)); Inst21++; } } catch(e) {}
steps;
try { if (Inst22 <= 1000 && typeof (test_undefined) != "undefined") {_RecordType("<1954,1968,46>",(test_undefined)); Inst22++; } } catch(e) {}
test_undefined();

try { if (Inst23 <= 1000 && typeof (get_null_object) != "undefined") {_RecordType("<1982,1997,48>",(get_null_object)); Inst23++; } } catch(e) {}
function get_null_object(i) {
try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<1998,1999,48>",(i)); Inst24++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (null_values[i / steps | 0]) != "undefined") {_RecordType("<2012,2038,49>",(null_values[i / steps | 0])); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (null_values) != "undefined") {_RecordType("<2012,2023,49>",(null_values)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (i) != "undefined") {_RecordType("<2024,2025,49>",(i)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (steps) != "undefined") {_RecordType("<2028,2033,49>",(steps)); Inst28++; } } catch(e) {}
  return null_values[i / steps | 0];
}

try { if (Inst29 <= 1000 && typeof (test_null) != "undefined") {_RecordType("<2052,2061,52>",(test_null)); Inst29++; } } catch(e) {}
function test_null() {
  var objects = 0;
try { if (Inst30 <= 1000 && typeof (objects) != "undefined") {_RecordType("<2072,2079,53>",(objects)); Inst30++; } } catch(e) {}

  for (var i = 0; i < 2 * steps; i++) {
try { if (Inst31 <= 1000 && typeof (i) != "undefined") {_RecordType("<2097,2098,55>",(i)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (i) != "undefined") {_RecordType("<2104,2105,55>",(i)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (steps) != "undefined") {_RecordType("<2112,2117,55>",(steps)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (i) != "undefined") {_RecordType("<2119,2120,55>",(i)); Inst34++; } } catch(e) {}
try { if (Inst35 <= 1000 && typeof (get_null_object) != "undefined") {_RecordType("<2138,2153,56>",(get_null_object)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (i) != "undefined") {_RecordType("<2154,2155,56>",(i)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (objects) != "undefined") {_RecordType("<2160,2167,56>",(objects)); Inst37++; } } catch(e) {}
    null == get_null_object(i) && objects++;
  }

try { if (Inst38 <= 1000 && typeof (objects) != "undefined") {_RecordType("<2185,2192,59>",(objects)); Inst38++; } } catch(e) {}
  return objects;
}

try { if (Inst39 <= 1000 && typeof (steps) != "undefined") {_RecordType("<2197,2202,62>",(steps)); Inst39++; } } catch(e) {}
steps;
try { if (Inst40 <= 1000 && typeof (test_null) != "undefined") {_RecordType("<2204,2213,63>",(test_null)); Inst40++; } } catch(e) {}
test_null();

