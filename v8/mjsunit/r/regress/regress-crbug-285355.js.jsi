var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2013 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// Flags: --allow-natives-syntax
try { if (Inst0 <= 1000 && typeof (inverted_index) != "undefined") {_RecordType("<1639,1653,28>",(inverted_index)); Inst0++; } } catch(e) {}
function inverted_index() {
  return ~1;
}

try { if (Inst1 <= 1000 && typeof (crash) != "undefined") {_RecordType("<1683,1688,32>",(crash)); Inst1++; } } catch(e) {}
function crash(array) {
try { if (Inst2 <= 1000 && typeof (array) != "undefined") {_RecordType("<1689,1694,32>",(array)); Inst2++; } } catch(e) {}
  return array[~inverted_index()] = 2;
try { if (Inst3 <= 1000 && typeof (array[~inverted_index()]) != "undefined") {_RecordType("<1707,1731,33>",(array[~inverted_index()])); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (array) != "undefined") {_RecordType("<1707,1712,33>",(array)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (inverted_index) != "undefined") {_RecordType("<1714,1728,33>",(inverted_index)); Inst5++; } } catch(e) {}
}

2;
try { if (Inst6 <= 1000 && typeof (crash) != "undefined") {_RecordType("<1743,1748,37>",(crash)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Array) != "undefined") {_RecordType("<1753,1758,37>",(Array)); Inst7++; } } catch(e) {}
crash(new Array(1));
2;
try { if (Inst8 <= 1000 && typeof (crash) != "undefined") {_RecordType("<1767,1772,39>",(crash)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Array) != "undefined") {_RecordType("<1777,1782,39>",(Array)); Inst9++; } } catch(e) {}
crash(new Array(1));
2;
try { if (Inst10 <= 1000 && typeof (crash) != "undefined") {_RecordType("<1791,1796,41>",(crash)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Array) != "undefined") {_RecordType("<1801,1806,41>",(Array)); Inst11++; } } catch(e) {}
crash(new Array(1));

