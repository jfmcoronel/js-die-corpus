var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2018 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
var sparse_array = [];
try { if (Inst0 <= 1000 && typeof (sparse_array) != "undefined") {_RecordType("<171,183,4>",(sparse_array)); Inst0++; } } catch(e) {}
sparse_array[100] = 3;
try { if (Inst1 <= 1000 && typeof (sparse_array[100]) != "undefined") {_RecordType("<190,207,5>",(sparse_array[100])); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (sparse_array) != "undefined") {_RecordType("<190,202,5>",(sparse_array)); Inst2++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<233,242,6>",(undefined)); Inst5++; } } catch(e) {}
sparse_array[200] = undefined;
try { if (Inst3 <= 1000 && typeof (sparse_array[200]) != "undefined") {_RecordType("<213,230,6>",(sparse_array[200])); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (sparse_array) != "undefined") {_RecordType("<213,225,6>",(sparse_array)); Inst4++; } } catch(e) {}
sparse_array[300] = 4;
try { if (Inst6 <= 1000 && typeof (sparse_array[300]) != "undefined") {_RecordType("<244,261,7>",(sparse_array[300])); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (sparse_array) != "undefined") {_RecordType("<244,256,7>",(sparse_array)); Inst7++; } } catch(e) {}
sparse_array[400] = 5;
try { if (Inst8 <= 1000 && typeof (sparse_array[400]) != "undefined") {_RecordType("<267,284,8>",(sparse_array[400])); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (sparse_array) != "undefined") {_RecordType("<267,279,8>",(sparse_array)); Inst9++; } } catch(e) {}
sparse_array[500] = 6;
try { if (Inst10 <= 1000 && typeof (sparse_array[500]) != "undefined") {_RecordType("<290,307,9>",(sparse_array[500])); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (sparse_array) != "undefined") {_RecordType("<290,302,9>",(sparse_array)); Inst11++; } } catch(e) {}
sparse_array[600] = 5;
try { if (Inst12 <= 1000 && typeof (sparse_array[600]) != "undefined") {_RecordType("<313,330,10>",(sparse_array[600])); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (sparse_array) != "undefined") {_RecordType("<313,325,10>",(sparse_array)); Inst13++; } } catch(e) {}
sparse_array[700] = 4;
try { if (Inst14 <= 1000 && typeof (sparse_array[700]) != "undefined") {_RecordType("<336,353,11>",(sparse_array[700])); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (sparse_array) != "undefined") {_RecordType("<336,348,11>",(sparse_array)); Inst15++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<379,388,12>",(undefined)); Inst18++; } } catch(e) {}
sparse_array[800] = undefined;
try { if (Inst16 <= 1000 && typeof (sparse_array[800]) != "undefined") {_RecordType("<359,376,12>",(sparse_array[800])); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (sparse_array) != "undefined") {_RecordType("<359,371,12>",(sparse_array)); Inst17++; } } catch(e) {}
sparse_array[900] = 3;
try { if (Inst19 <= 1000 && typeof (sparse_array[900]) != "undefined") {_RecordType("<390,407,13>",(sparse_array[900])); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (sparse_array) != "undefined") {_RecordType("<390,402,13>",(sparse_array)); Inst20++; } } catch(e) {}
sparse_array[41999] = "filler";
try { if (Inst21 <= 1000 && typeof (sparse_array[41999]) != "undefined") {_RecordType("<413,432,14>",(sparse_array[41999])); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (sparse_array) != "undefined") {_RecordType("<413,425,14>",(sparse_array)); Inst22++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (sparse_array.lastIndexOf) != "undefined") {_RecordType("<445,469,15>",(sparse_array.lastIndexOf)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (sparse_array) != "undefined") {_RecordType("<445,457,15>",(sparse_array)); Inst24++; } } catch(e) {}
sparse_array.lastIndexOf(3, 99);

