var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2012 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
a = {};
try { if (Inst0 <= 1000 && typeof (a) != "undefined") {_RecordType("<1597,1598,27>",(a)); Inst0++; } } catch(e) {}
a.b = 42;
try { if (Inst1 <= 1000 && typeof (a.b) != "undefined") {_RecordType("<1605,1608,28>",(a.b)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (a) != "undefined") {_RecordType("<1605,1606,28>",(a)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (a) != "undefined") {_RecordType("<1621,1622,29>",(a)); Inst3++; } } catch(e) {}
with (a) {
try { if (Inst6 <= 1000 && typeof (f1) != "undefined") {_RecordType("<1643,1645,30>",(f1)); Inst6++; } } catch(e) {}
  a.f = function f1() {
try { if (Inst7 <= 1000 && typeof (f2) != "undefined") {_RecordType("<1663,1665,31>",(f2)); Inst7++; } } catch(e) {}
    function f2() {
try { if (Inst8 <= 1000 && typeof (b) != "undefined") {_RecordType("<1683,1684,32>",(b)); Inst8++; } } catch(e) {}
      return b;
    }

    ;
try { if (Inst9 <= 1000 && typeof (f2) != "undefined") {_RecordType("<1710,1712,36>",(f2)); Inst9++; } } catch(e) {}
    return f2;
  }();
try { if (Inst4 <= 1000 && typeof (a.f) != "undefined") {_RecordType("<1628,1631,30>",(a.f)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (a) != "undefined") {_RecordType("<1628,1629,30>",(a)); Inst5++; } } catch(e) {}
}

for (var i = 0; i < 10000; i++) {
try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<1733,1734,40>",(i)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<1740,1741,40>",(i)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<1751,1752,40>",(i)); Inst12++; } } catch(e) {}
  42;
try { if (Inst13 <= 1000 && typeof (a.f) != "undefined") {_RecordType("<1766,1769,42>",(a.f)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (a) != "undefined") {_RecordType("<1766,1767,42>",(a)); Inst14++; } } catch(e) {}
  a.f();
}

try { if (Inst15 <= 1000 && typeof (a) != "undefined") {_RecordType("<1782,1783,45>",(a)); Inst15++; } } catch(e) {}
with (a) {
try { if (Inst18 <= 1000 && typeof (f1) != "undefined") {_RecordType("<1804,1806,46>",(f1)); Inst18++; } } catch(e) {}
  a.g = function f1() {
try { if (Inst19 <= 1000 && typeof (f2) != "undefined") {_RecordType("<1824,1826,47>",(f2)); Inst19++; } } catch(e) {}
    function f2() {
try { if (Inst20 <= 1000 && typeof (f3) != "undefined") {_RecordType("<1846,1848,48>",(f3)); Inst20++; } } catch(e) {}
      function f3() {
try { if (Inst21 <= 1000 && typeof (b) != "undefined") {_RecordType("<1868,1869,49>",(b)); Inst21++; } } catch(e) {}
        return b;
      }

try { if (Inst22 <= 1000 && typeof (f3) != "undefined") {_RecordType("<1893,1895,52>",(f3)); Inst22++; } } catch(e) {}
      return f3;
    }

    ;
try { if (Inst23 <= 1000 && typeof (f2) != "undefined") {_RecordType("<1921,1923,56>",(f2)); Inst23++; } } catch(e) {}
    return f2();
  }();
try { if (Inst16 <= 1000 && typeof (a.g) != "undefined") {_RecordType("<1789,1792,46>",(a.g)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (a) != "undefined") {_RecordType("<1789,1790,46>",(a)); Inst17++; } } catch(e) {}
}

for (var i = 0; i < 10000; i++) {
try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<1946,1947,60>",(i)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<1953,1954,60>",(i)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (i) != "undefined") {_RecordType("<1964,1965,60>",(i)); Inst26++; } } catch(e) {}
  42;
try { if (Inst27 <= 1000 && typeof (a.g) != "undefined") {_RecordType("<1979,1982,62>",(a.g)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (a) != "undefined") {_RecordType("<1979,1980,62>",(a)); Inst28++; } } catch(e) {}
  a.g();
}

try { if (Inst29 <= 1000 && typeof (outer) != "undefined") {_RecordType("<1998,2003,65>",(outer)); Inst29++; } } catch(e) {}
function outer() {
try { if (Inst30 <= 1000 && typeof (a) != "undefined") {_RecordType("<2016,2017,66>",(a)); Inst30++; } } catch(e) {}
  with (a) {
try { if (Inst33 <= 1000 && typeof (f1) != "undefined") {_RecordType("<2040,2042,67>",(f1)); Inst33++; } } catch(e) {}
    a.h = function f1() {
try { if (Inst34 <= 1000 && typeof (f2) != "undefined") {_RecordType("<2062,2064,68>",(f2)); Inst34++; } } catch(e) {}
      function f2() {
try { if (Inst35 <= 1000 && typeof (f3) != "undefined") {_RecordType("<2086,2088,69>",(f3)); Inst35++; } } catch(e) {}
        function f3() {
try { if (Inst36 <= 1000 && typeof (b) != "undefined") {_RecordType("<2110,2111,70>",(b)); Inst36++; } } catch(e) {}
          return b;
        }

try { if (Inst37 <= 1000 && typeof (f3) != "undefined") {_RecordType("<2139,2141,73>",(f3)); Inst37++; } } catch(e) {}
        return f3;
      }

      ;
try { if (Inst38 <= 1000 && typeof (f2) != "undefined") {_RecordType("<2173,2175,77>",(f2)); Inst38++; } } catch(e) {}
      return f2();
    }();
try { if (Inst31 <= 1000 && typeof (a.h) != "undefined") {_RecordType("<2025,2028,67>",(a.h)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (a) != "undefined") {_RecordType("<2025,2026,67>",(a)); Inst32++; } } catch(e) {}
  }
}

;
try { if (Inst39 <= 1000 && typeof (outer) != "undefined") {_RecordType("<2197,2202,83>",(outer)); Inst39++; } } catch(e) {}
outer();

for (var i = 0; i < 10000; i++) {
try { if (Inst40 <= 1000 && typeof (i) != "undefined") {_RecordType("<2216,2217,85>",(i)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (i) != "undefined") {_RecordType("<2223,2224,85>",(i)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (i) != "undefined") {_RecordType("<2234,2235,85>",(i)); Inst42++; } } catch(e) {}
  42;
try { if (Inst43 <= 1000 && typeof (a.h) != "undefined") {_RecordType("<2249,2252,87>",(a.h)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (a) != "undefined") {_RecordType("<2249,2250,87>",(a)); Inst44++; } } catch(e) {}
  a.h();
}

