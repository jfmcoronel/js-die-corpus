var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2014 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax
try { if (Inst1 <= 1000 && typeof (Int32Array) != "undefined") {_RecordType("<216,226,5>",(Int32Array)); Inst1++; } } catch(e) {}
var dummy = new Int32Array(100);
try { if (Inst0 <= 1000 && typeof (dummy) != "undefined") {_RecordType("<204,209,5>",(dummy)); Inst0++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (Int32Array) != "undefined") {_RecordType("<245,255,6>",(Int32Array)); Inst3++; } } catch(e) {}
array = new Int32Array(100);
try { if (Inst2 <= 1000 && typeof (array) != "undefined") {_RecordType("<233,238,6>",(array)); Inst2++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (Int32Array) != "undefined") {_RecordType("<279,289,7>",(Int32Array)); Inst5++; } } catch(e) {}
var dummy2 = new Int32Array(100);
try { if (Inst4 <= 1000 && typeof (dummy2) != "undefined") {_RecordType("<266,272,7>",(dummy2)); Inst4++; } } catch(e) {}
array[-17] = 0;
try { if (Inst6 <= 1000 && typeof (array[-17]) != "undefined") {_RecordType("<296,306,8>",(array[-17])); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (array) != "undefined") {_RecordType("<296,301,8>",(array)); Inst7++; } } catch(e) {}

try { if (Inst8 <= 1000 && typeof (fun) != "undefined") {_RecordType("<322,325,10>",(fun)); Inst8++; } } catch(e) {}
function fun(base, cond) {
try { if (Inst9 <= 1000 && typeof (base) != "undefined") {_RecordType("<326,330,10>",(base)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (cond) != "undefined") {_RecordType("<332,336,10>",(cond)); Inst10++; } } catch(e) {}
  array[base - 1] = 1;
try { if (Inst11 <= 1000 && typeof (array[base - 1]) != "undefined") {_RecordType("<342,357,11>",(array[base - 1])); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (array) != "undefined") {_RecordType("<342,347,11>",(array)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (base) != "undefined") {_RecordType("<348,352,11>",(base)); Inst13++; } } catch(e) {}
  array[base - 2] = 2;
try { if (Inst14 <= 1000 && typeof (array[base - 2]) != "undefined") {_RecordType("<365,380,12>",(array[base - 2])); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (array) != "undefined") {_RecordType("<365,370,12>",(array)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (base) != "undefined") {_RecordType("<371,375,12>",(base)); Inst16++; } } catch(e) {}

try { if (Inst17 <= 1000 && typeof (cond) != "undefined") {_RecordType("<393,397,14>",(cond)); Inst17++; } } catch(e) {}
  if (cond) {
    array[base - 4] = 3;
try { if (Inst18 <= 1000 && typeof (array[base - 4]) != "undefined") {_RecordType("<405,420,15>",(array[base - 4])); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (array) != "undefined") {_RecordType("<405,410,15>",(array)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (base) != "undefined") {_RecordType("<411,415,15>",(base)); Inst20++; } } catch(e) {}
    array[base - 5] = 4;
try { if (Inst21 <= 1000 && typeof (array[base - 5]) != "undefined") {_RecordType("<430,445,16>",(array[base - 5])); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (array) != "undefined") {_RecordType("<430,435,16>",(array)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (base) != "undefined") {_RecordType("<436,440,16>",(base)); Inst23++; } } catch(e) {}
  } else {
    array[base - 6] = 5;
try { if (Inst24 <= 1000 && typeof (array[base - 6]) != "undefined") {_RecordType("<466,481,18>",(array[base - 6])); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (array) != "undefined") {_RecordType("<466,471,18>",(array)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (base) != "undefined") {_RecordType("<472,476,18>",(base)); Inst26++; } } catch(e) {}
    array[base - 100] = 777;
try { if (Inst27 <= 1000 && typeof (array[base - 100]) != "undefined") {_RecordType("<491,508,19>",(array[base - 100])); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (array) != "undefined") {_RecordType("<491,496,19>",(array)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (base) != "undefined") {_RecordType("<497,501,19>",(base)); Inst29++; } } catch(e) {}
  }
}

try { if (Inst30 <= 1000 && typeof (fun) != "undefined") {_RecordType("<523,526,23>",(fun)); Inst30++; } } catch(e) {}
fun(5, true);
try { if (Inst31 <= 1000 && typeof (fun) != "undefined") {_RecordType("<537,540,24>",(fun)); Inst31++; } } catch(e) {}
fun(7, false);
try { if (Inst32 <= 1000 && typeof (fun) != "undefined") {_RecordType("<552,555,25>",(fun)); Inst32++; } } catch(e) {}
fun(7, false);

for (var i = 0; i < dummy.length; i++) {
try { if (Inst33 <= 1000 && typeof (i) != "undefined") {_RecordType("<577,578,27>",(i)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (i) != "undefined") {_RecordType("<584,585,27>",(i)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (dummy.length) != "undefined") {_RecordType("<588,600,27>",(dummy.length)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (dummy) != "undefined") {_RecordType("<588,593,27>",(dummy)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (i) != "undefined") {_RecordType("<602,603,27>",(i)); Inst37++; } } catch(e) {}
  0;
try { if (Inst38 <= 1000 && typeof (dummy[i]) != "undefined") {_RecordType("<616,624,29>",(dummy[i])); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (dummy) != "undefined") {_RecordType("<616,621,29>",(dummy)); Inst39++; } } catch(e) {}
  dummy[i];
}

for (var i = 0; i < dummy2.length; i++) {
try { if (Inst40 <= 1000 && typeof (i) != "undefined") {_RecordType("<638,639,32>",(i)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (i) != "undefined") {_RecordType("<645,646,32>",(i)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (dummy2.length) != "undefined") {_RecordType("<649,662,32>",(dummy2.length)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (dummy2) != "undefined") {_RecordType("<649,655,32>",(dummy2)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (i) != "undefined") {_RecordType("<664,665,32>",(i)); Inst44++; } } catch(e) {}
  0;
try { if (Inst45 <= 1000 && typeof (dummy2[i]) != "undefined") {_RecordType("<678,687,34>",(dummy2[i])); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (dummy2) != "undefined") {_RecordType("<678,684,34>",(dummy2)); Inst46++; } } catch(e) {}
  dummy2[i];
}

