var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2013 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// Flags: --allow-natives-syntax
try { if (Inst0 <= 1000 && typeof (f) != "undefined") {_RecordType("<1639,1640,28>",(f)); Inst0++; } } catch(e) {}
function f(o) {
try { if (Inst1 <= 1000 && typeof (o) != "undefined") {_RecordType("<1641,1642,28>",(o)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (Math.floor) != "undefined") {_RecordType("<1655,1665,29>",(Math.floor)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1655,1659,29>",(Math)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (o.x_smi) != "undefined") {_RecordType("<1666,1673,29>",(o.x_smi)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (o) != "undefined") {_RecordType("<1666,1667,29>",(o)); Inst5++; } } catch(e) {}
  return Math.floor(o.x_smi) + 1;
}

2;
try { if (Inst6 <= 1000 && typeof (f) != "undefined") {_RecordType("<1686,1687,33>",(f)); Inst6++; } } catch(e) {}
f({
  x_smi: 1
});
2;
try { if (Inst7 <= 1000 && typeof (f) != "undefined") {_RecordType("<1708,1709,37>",(f)); Inst7++; } } catch(e) {}
f({
  x_smi: 1
});
2;
try { if (Inst8 <= 1000 && typeof (f) != "undefined") {_RecordType("<1730,1731,41>",(f)); Inst8++; } } catch(e) {}
f({
  x_smi: 1
});

try { if (Inst9 <= 1000 && typeof (f2) != "undefined") {_RecordType("<1759,1761,45>",(f2)); Inst9++; } } catch(e) {}
function f2(o) {
try { if (Inst10 <= 1000 && typeof (o) != "undefined") {_RecordType("<1762,1763,45>",(o)); Inst10++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (Math.floor) != "undefined") {_RecordType("<1776,1786,46>",(Math.floor)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1776,1780,46>",(Math)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (o.x_tagged) != "undefined") {_RecordType("<1787,1797,46>",(o.x_tagged)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (o) != "undefined") {_RecordType("<1787,1788,46>",(o)); Inst14++; } } catch(e) {}
  return Math.floor(o.x_tagged) + 1;
}

var o = {
  x_tagged: {}
};
try { if (Inst15 <= 1000 && typeof (o) != "undefined") {_RecordType("<1811,1812,49>",(o)); Inst15++; } } catch(e) {}
o.x_tagged = 1.4;
try { if (Inst16 <= 1000 && typeof (o.x_tagged) != "undefined") {_RecordType("<1835,1845,52>",(o.x_tagged)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (o) != "undefined") {_RecordType("<1835,1836,52>",(o)); Inst17++; } } catch(e) {}
2;
try { if (Inst18 <= 1000 && typeof (f2) != "undefined") {_RecordType("<1856,1858,54>",(f2)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (o) != "undefined") {_RecordType("<1859,1860,54>",(o)); Inst19++; } } catch(e) {}
f2(o);
2;
try { if (Inst20 <= 1000 && typeof (f2) != "undefined") {_RecordType("<1866,1868,56>",(f2)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (o) != "undefined") {_RecordType("<1869,1870,56>",(o)); Inst21++; } } catch(e) {}
f2(o);
2;
try { if (Inst22 <= 1000 && typeof (f2) != "undefined") {_RecordType("<1876,1878,58>",(f2)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (o) != "undefined") {_RecordType("<1879,1880,58>",(o)); Inst23++; } } catch(e) {}
f2(o);

try { if (Inst24 <= 1000 && typeof (f3) != "undefined") {_RecordType("<1893,1895,60>",(f3)); Inst24++; } } catch(e) {}
function f3(o) {
try { if (Inst25 <= 1000 && typeof (o) != "undefined") {_RecordType("<1896,1897,60>",(o)); Inst25++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (Math.round) != "undefined") {_RecordType("<1910,1920,61>",(Math.round)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1910,1914,61>",(Math)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (o.x_smi) != "undefined") {_RecordType("<1921,1928,61>",(o.x_smi)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (o) != "undefined") {_RecordType("<1921,1922,61>",(o)); Inst29++; } } catch(e) {}
  return Math.round(o.x_smi) + 1;
}

2;
try { if (Inst30 <= 1000 && typeof (f3) != "undefined") {_RecordType("<1941,1943,65>",(f3)); Inst30++; } } catch(e) {}
f3({
  x_smi: 1
});
2;
try { if (Inst31 <= 1000 && typeof (f3) != "undefined") {_RecordType("<1964,1966,69>",(f3)); Inst31++; } } catch(e) {}
f3({
  x_smi: 1
});
2;
try { if (Inst32 <= 1000 && typeof (f3) != "undefined") {_RecordType("<1987,1989,73>",(f3)); Inst32++; } } catch(e) {}
f3({
  x_smi: 1
});

try { if (Inst33 <= 1000 && typeof (f4) != "undefined") {_RecordType("<2017,2019,77>",(f4)); Inst33++; } } catch(e) {}
function f4(o) {
try { if (Inst34 <= 1000 && typeof (o) != "undefined") {_RecordType("<2020,2021,77>",(o)); Inst34++; } } catch(e) {}
try { if (Inst35 <= 1000 && typeof (Math.round) != "undefined") {_RecordType("<2034,2044,78>",(Math.round)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (Math) != "undefined") {_RecordType("<2034,2038,78>",(Math)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (o.x_tagged) != "undefined") {_RecordType("<2045,2055,78>",(o.x_tagged)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (o) != "undefined") {_RecordType("<2045,2046,78>",(o)); Inst38++; } } catch(e) {}
  return Math.round(o.x_tagged) + 1;
}

2;
try { if (Inst39 <= 1000 && typeof (f4) != "undefined") {_RecordType("<2068,2070,82>",(f4)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (o) != "undefined") {_RecordType("<2071,2072,82>",(o)); Inst40++; } } catch(e) {}
f4(o);
2;
try { if (Inst41 <= 1000 && typeof (f4) != "undefined") {_RecordType("<2078,2080,84>",(f4)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (o) != "undefined") {_RecordType("<2081,2082,84>",(o)); Inst42++; } } catch(e) {}
f4(o);
2;
try { if (Inst43 <= 1000 && typeof (f4) != "undefined") {_RecordType("<2088,2090,86>",(f4)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (o) != "undefined") {_RecordType("<2091,2092,86>",(o)); Inst44++; } } catch(e) {}
f4(o);

