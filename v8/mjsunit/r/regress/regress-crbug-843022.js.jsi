var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2018 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Produce an fast, but empty result.
try { if (Inst1 <= 1000 && typeof (/./g.exec) != "undefined") {_RecordType("<232,241,5>",(/./g.exec)); Inst1++; } } catch(e) {}
const fast_regexp_result = /./g.exec("a");
try { if (Inst0 <= 1000 && typeof (fast_regexp_result) != "undefined") {_RecordType("<211,229,5>",(fast_regexp_result)); Inst0++; } } catch(e) {}
fast_regexp_result.length = 0;
try { if (Inst2 <= 1000 && typeof (fast_regexp_result.length) != "undefined") {_RecordType("<248,273,6>",(fast_regexp_result.length)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (fast_regexp_result) != "undefined") {_RecordType("<248,266,6>",(fast_regexp_result)); Inst3++; } } catch(e) {}

try { if (Inst9 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<315,321,8>",(RegExp)); Inst9++; } } catch(e) {}
class RegExpWithFastResult extends RegExp {
  constructor() {
    super(".", "g");
    this.number_of_runs = 0;
try { if (Inst5 <= 1000 && typeof (this.number_of_runs) != "undefined") {_RecordType("<367,386,11>",(this.number_of_runs)); Inst5++; } } catch(e) {}
  }

  exec(str) {
try { if (Inst6 <= 1000 && typeof (str) != "undefined") {_RecordType("<404,407,14>",(str)); Inst6++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (this.number_of_runs) != "undefined") {_RecordType("<422,441,15>",(this.number_of_runs)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (fast_regexp_result) != "undefined") {_RecordType("<451,469,15>",(fast_regexp_result)); Inst8++; } } catch(e) {}
    return this.number_of_runs++ == 0 ? fast_regexp_result : null;
  }

} // A slow empty result.
try { if (Inst4 <= 1000 && typeof (RegExpWithFastResult) != "undefined") {_RecordType("<286,306,8>",(RegExpWithFastResult)); Inst4++; } } catch(e) {}


const slow_regexp_result = [];
try { if (Inst10 <= 1000 && typeof (slow_regexp_result) != "undefined") {_RecordType("<517,535,21>",(slow_regexp_result)); Inst10++; } } catch(e) {}

try { if (Inst16 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<578,584,23>",(RegExp)); Inst16++; } } catch(e) {}
class RegExpWithSlowResult extends RegExp {
  constructor() {
    super(".", "g");
    this.number_of_runs = 0;
try { if (Inst12 <= 1000 && typeof (this.number_of_runs) != "undefined") {_RecordType("<630,649,26>",(this.number_of_runs)); Inst12++; } } catch(e) {}
  }

  exec(str) {
try { if (Inst13 <= 1000 && typeof (str) != "undefined") {_RecordType("<667,670,29>",(str)); Inst13++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (this.number_of_runs) != "undefined") {_RecordType("<685,704,30>",(this.number_of_runs)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (slow_regexp_result) != "undefined") {_RecordType("<714,732,30>",(slow_regexp_result)); Inst15++; } } catch(e) {}
    return this.number_of_runs++ == 0 ? slow_regexp_result : null;
  }

}
try { if (Inst11 <= 1000 && typeof (RegExpWithSlowResult) != "undefined") {_RecordType("<549,569,23>",(RegExpWithSlowResult)); Inst11++; } } catch(e) {}

["undefined"];
try { if (Inst17 <= 1000 && typeof ("a".match) != "undefined") {_RecordType("<764,773,36>",("a".match)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (RegExpWithFastResult) != "undefined") {_RecordType("<778,798,36>",(RegExpWithFastResult)); Inst18++; } } catch(e) {}
"a".match(new RegExpWithFastResult());
["undefined"];
try { if (Inst19 <= 1000 && typeof ("a".match) != "undefined") {_RecordType("<818,827,38>",("a".match)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (RegExpWithSlowResult) != "undefined") {_RecordType("<832,852,38>",(RegExpWithSlowResult)); Inst20++; } } catch(e) {}
"a".match(new RegExpWithSlowResult());

