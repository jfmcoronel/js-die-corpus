var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2016 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax --deopt-every-n-times=55
try { if (Inst0 <= 1000 && typeof (f) != "undefined") {_RecordType("<234,235,5>",(f)); Inst0++; } } catch(e) {}
function f(t) {
try { if (Inst1 <= 1000 && typeof (t) != "undefined") {_RecordType("<236,237,5>",(t)); Inst1++; } } catch(e) {}
  var result = [];
try { if (Inst2 <= 1000 && typeof (result) != "undefined") {_RecordType("<247,253,6>",(result)); Inst2++; } } catch(e) {}

  for (var i in t) {
try { if (Inst3 <= 1000 && typeof (i) != "undefined") {_RecordType("<272,273,8>",(i)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (t) != "undefined") {_RecordType("<277,278,8>",(t)); Inst4++; } } catch(e) {}
    for (var j in t) {
try { if (Inst5 <= 1000 && typeof (j) != "undefined") {_RecordType("<295,296,9>",(j)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (t) != "undefined") {_RecordType("<300,301,9>",(t)); Inst6++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (result.push) != "undefined") {_RecordType("<311,322,10>",(result.push)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (result) != "undefined") {_RecordType("<311,317,10>",(result)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<323,324,10>",(i)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (j) != "undefined") {_RecordType("<327,328,10>",(j)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (t[i]) != "undefined") {_RecordType("<331,335,10>",(t[i])); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (t) != "undefined") {_RecordType("<331,332,10>",(t)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (t[j]) != "undefined") {_RecordType("<338,342,10>",(t[j])); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (t) != "undefined") {_RecordType("<338,339,10>",(t)); Inst14++; } } catch(e) {}
      result.push(i + j + t[i] + t[j]);
      continue;
    }
  }

try { if (Inst15 <= 1000 && typeof (result.join) != "undefined") {_RecordType("<381,392,15>",(result.join)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (result) != "undefined") {_RecordType("<381,387,15>",(result)); Inst16++; } } catch(e) {}
  return result.join('');
}

var t = {
  a: "1",
  b: "2"
};
try { if (Inst17 <= 1000 && typeof (t) != "undefined") {_RecordType("<405,406,18>",(t)); Inst17++; } } catch(e) {}
"aa11ab12ba21bb22";
try { if (Inst18 <= 1000 && typeof (f) != "undefined") {_RecordType("<453,454,23>",(f)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (t) != "undefined") {_RecordType("<455,456,23>",(t)); Inst19++; } } catch(e) {}
f(t);
"aa11ab12ba21bb22";
try { if (Inst20 <= 1000 && typeof (f) != "undefined") {_RecordType("<479,480,25>",(f)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (t) != "undefined") {_RecordType("<481,482,25>",(t)); Inst21++; } } catch(e) {}
f(t);

