var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2013 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
try { if (Inst0 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<1597,1618,27>",(Object.defineProperty)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1597,1603,27>",(Object)); Inst1++; } } catch(e) {}
Object.defineProperty(this, "x", {
  writable: true
});

try { if (Inst2 <= 1000 && typeof (s) != "undefined") {_RecordType("<1663,1664,31>",(s)); Inst2++; } } catch(e) {}
function s(v) {
try { if (Inst3 <= 1000 && typeof (v) != "undefined") {_RecordType("<1665,1666,31>",(v)); Inst3++; } } catch(e) {}
  v.x = 1;
try { if (Inst4 <= 1000 && typeof (v.x) != "undefined") {_RecordType("<1672,1675,32>",(v.x)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (v) != "undefined") {_RecordType("<1672,1673,32>",(v)); Inst5++; } } catch(e) {}
}

try { if (Inst6 <= 1000 && typeof (s_strict) != "undefined") {_RecordType("<1693,1701,35>",(s_strict)); Inst6++; } } catch(e) {}
function s_strict(v) {
try { if (Inst7 <= 1000 && typeof (v) != "undefined") {_RecordType("<1702,1703,35>",(v)); Inst7++; } } catch(e) {}
  "use strict";

  v.x = 1;
try { if (Inst8 <= 1000 && typeof (v.x) != "undefined") {_RecordType("<1726,1729,38>",(v.x)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (v) != "undefined") {_RecordType("<1726,1727,38>",(v)); Inst9++; } } catch(e) {}
}

try { if (Inst10 <= 1000 && typeof (c) != "undefined") {_RecordType("<1747,1748,41>",(c)); Inst10++; } } catch(e) {}
function c(p) {
try { if (Inst11 <= 1000 && typeof (p) != "undefined") {_RecordType("<1749,1750,41>",(p)); Inst11++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (p) != "undefined") {_RecordType("<1780,1781,43>",(p)); Inst12++; } } catch(e) {}
  return {
    __proto__: p
  };
}

try { if (Inst14 <= 1000 && typeof (c) != "undefined") {_RecordType("<1799,1800,47>",(c)); Inst14++; } } catch(e) {}
var o1 = c(this);
try { if (Inst13 <= 1000 && typeof (o1) != "undefined") {_RecordType("<1794,1796,47>",(o1)); Inst13++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (c) != "undefined") {_RecordType("<1817,1818,48>",(c)); Inst16++; } } catch(e) {}
var o2 = c(this); // Initialize the store IC.
try { if (Inst15 <= 1000 && typeof (o2) != "undefined") {_RecordType("<1812,1814,48>",(o2)); Inst15++; } } catch(e) {}

try { if (Inst17 <= 1000 && typeof (s) != "undefined") {_RecordType("<1855,1856,50>",(s)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (c) != "undefined") {_RecordType("<1857,1858,50>",(c)); Inst18++; } } catch(e) {}
s(c(this));
try { if (Inst19 <= 1000 && typeof (s) != "undefined") {_RecordType("<1867,1868,51>",(s)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (c) != "undefined") {_RecordType("<1869,1870,51>",(c)); Inst20++; } } catch(e) {}
s(c(this));
try { if (Inst21 <= 1000 && typeof (s_strict) != "undefined") {_RecordType("<1879,1887,52>",(s_strict)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (c) != "undefined") {_RecordType("<1888,1889,52>",(c)); Inst22++; } } catch(e) {}
s_strict(c(this));
try { if (Inst23 <= 1000 && typeof (s_strict) != "undefined") {_RecordType("<1898,1906,53>",(s_strict)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (c) != "undefined") {_RecordType("<1907,1908,53>",(c)); Inst24++; } } catch(e) {}
s_strict(c(this)); // Make x non-writable.

try { if (Inst25 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<1942,1963,55>",(Object.defineProperty)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1942,1948,55>",(Object)); Inst26++; } } catch(e) {}
Object.defineProperty(this, "x", {
  writable: false,
  value: 5
}); // Verify that direct setting fails.

o1.x = 20;
try { if (Inst27 <= 1000 && typeof (o1.x) != "undefined") {_RecordType("<2049,2053,60>",(o1.x)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (o1) != "undefined") {_RecordType("<2049,2051,60>",(o1)); Inst28++; } } catch(e) {}
5;
try { if (Inst29 <= 1000 && typeof (o1.x) != "undefined") {_RecordType("<2063,2067,62>",(o1.x)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (o1) != "undefined") {_RecordType("<2063,2065,62>",(o1)); Inst30++; } } catch(e) {}
o1.x;
// Verify that setting through the IC fails.
try { if (Inst31 <= 1000 && typeof (s) != "undefined") {_RecordType("<2114,2115,64>",(s)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (o2) != "undefined") {_RecordType("<2116,2118,64>",(o2)); Inst32++; } } catch(e) {}
s(o2);
5;
try { if (Inst33 <= 1000 && typeof (o2.x) != "undefined") {_RecordType("<2124,2128,66>",(o2.x)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (o2) != "undefined") {_RecordType("<2124,2126,66>",(o2)); Inst34++; } } catch(e) {}
o2.x;
"s_strict(o2);";
try { if (Inst35 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<2147,2156,68>",(TypeError)); Inst35++; } } catch(e) {}
TypeError;

