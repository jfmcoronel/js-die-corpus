var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2014 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax
try { if (Inst0 <= 1000 && typeof (mod1) != "undefined") {_RecordType("<209,213,5>",(mod1)); Inst0++; } } catch(e) {}
function mod1() {
  var v_1 = 1;
try { if (Inst1 <= 1000 && typeof (v_1) != "undefined") {_RecordType("<224,227,6>",(v_1)); Inst1++; } } catch(e) {}
  var v_2 = 1;
try { if (Inst2 <= 1000 && typeof (v_2) != "undefined") {_RecordType("<239,242,7>",(v_2)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (v_1) != "undefined") {_RecordType("<250,253,8>",(v_1)); Inst3++; } } catch(e) {}
  v_1++;
  v_2 = {
    valueOf: function () {
      throw "gagh";
    }
  };
try { if (Inst4 <= 1000 && typeof (v_2) != "undefined") {_RecordType("<259,262,9>",(v_2)); Inst4++; } } catch(e) {}

try { if (Inst5 <= 1000 && typeof (bug1) != "undefined") {_RecordType("<337,341,15>",(bug1)); Inst5++; } } catch(e) {}
  function bug1() {
    for (var i = 0; i < 1; v_2++) {
try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<359,360,16>",(i)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<366,367,16>",(i)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (v_2) != "undefined") {_RecordType("<373,376,16>",(v_2)); Inst8++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (v_1) != "undefined") {_RecordType("<392,395,17>",(v_1)); Inst9++; } } catch(e) {}
      if (v_1 == 1) {
        ;
      }
    }
  }

try { if (Inst10 <= 1000 && typeof (bug1) != "undefined") {_RecordType("<442,446,23>",(bug1)); Inst10++; } } catch(e) {}
  return bug1;
}

try { if (Inst12 <= 1000 && typeof (mod1) != "undefined") {_RecordType("<459,463,26>",(mod1)); Inst12++; } } catch(e) {}
var f = mod1();
try { if (Inst11 <= 1000 && typeof (f) != "undefined") {_RecordType("<455,456,26>",(f)); Inst11++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (f) != "undefined") {_RecordType("<467,468,27>",(f)); Inst13++; } } catch(e) {}
f;
try { if (Inst14 <= 1000 && typeof (f) != "undefined") {_RecordType("<470,471,28>",(f)); Inst14++; } } catch(e) {}
f;
var v_3 = 1;
try { if (Inst15 <= 1000 && typeof (v_3) != "undefined") {_RecordType("<477,480,29>",(v_3)); Inst15++; } } catch(e) {}
var v_4 = 1;
try { if (Inst16 <= 1000 && typeof (v_4) != "undefined") {_RecordType("<490,493,30>",(v_4)); Inst16++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (v_3) != "undefined") {_RecordType("<499,502,31>",(v_3)); Inst17++; } } catch(e) {}
v_3++;
v_4 = {
  valueOf: function () {
    throw "gagh";
  }
};
try { if (Inst18 <= 1000 && typeof (v_4) != "undefined") {_RecordType("<506,509,32>",(v_4)); Inst18++; } } catch(e) {}

try { if (Inst19 <= 1000 && typeof (bug2) != "undefined") {_RecordType("<574,578,38>",(bug2)); Inst19++; } } catch(e) {}
function bug2() {
  for (var i = 0; i < 1; v_4++) {
try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<594,595,39>",(i)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<601,602,39>",(i)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (v_4) != "undefined") {_RecordType("<608,611,39>",(v_4)); Inst22++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (v_3) != "undefined") {_RecordType("<625,628,40>",(v_3)); Inst23++; } } catch(e) {}
    if (v_3 == 1) {
      ;
    }
  }
}

try { if (Inst24 <= 1000 && typeof (bug2) != "undefined") {_RecordType("<658,662,46>",(bug2)); Inst24++; } } catch(e) {}
bug2();
try { if (Inst25 <= 1000 && typeof (bug2) != "undefined") {_RecordType("<666,670,47>",(bug2)); Inst25++; } } catch(e) {}
bug2();

