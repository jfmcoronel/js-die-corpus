var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2015 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
try { if (Inst1 <= 1000 && typeof (Date) != "undefined") {_RecordType("<182,186,4>",(Date)); Inst1++; } } catch(e) {}
var date = new Date("2016/01/02 10:00 GMT-8");
try { if (Inst0 <= 1000 && typeof (date) != "undefined") {_RecordType("<171,175,4>",(date)); Inst0++; } } catch(e) {}
0;
try { if (Inst2 <= 1000 && typeof (date.getMinutes) != "undefined") {_RecordType("<217,232,6>",(date.getMinutes)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (date) != "undefined") {_RecordType("<217,221,6>",(date)); Inst3++; } } catch(e) {}
date.getMinutes();
18;
try { if (Inst4 <= 1000 && typeof (date.getUTCHours) != "undefined") {_RecordType("<240,256,8>",(date.getUTCHours)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (date) != "undefined") {_RecordType("<240,244,8>",(date)); Inst5++; } } catch(e) {}
date.getUTCHours();
try { if (Inst7 <= 1000 && typeof (Date) != "undefined") {_RecordType("<271,275,9>",(Date)); Inst7++; } } catch(e) {}
date = new Date("2016/01/02 10:00 GMT-12");
try { if (Inst6 <= 1000 && typeof (date) != "undefined") {_RecordType("<260,264,9>",(date)); Inst6++; } } catch(e) {}
0;
try { if (Inst8 <= 1000 && typeof (date.getMinutes) != "undefined") {_RecordType("<307,322,11>",(date.getMinutes)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (date) != "undefined") {_RecordType("<307,311,11>",(date)); Inst9++; } } catch(e) {}
date.getMinutes();
22;
try { if (Inst10 <= 1000 && typeof (date.getUTCHours) != "undefined") {_RecordType("<330,346,13>",(date.getUTCHours)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (date) != "undefined") {_RecordType("<330,334,13>",(date)); Inst11++; } } catch(e) {}
date.getUTCHours();
try { if (Inst13 <= 1000 && typeof (Date) != "undefined") {_RecordType("<361,365,14>",(Date)); Inst13++; } } catch(e) {}
date = new Date("2016/01/02 10:00 GMT-123");
try { if (Inst12 <= 1000 && typeof (date) != "undefined") {_RecordType("<350,354,14>",(date)); Inst12++; } } catch(e) {}
23;
try { if (Inst14 <= 1000 && typeof (date.getMinutes) != "undefined") {_RecordType("<399,414,16>",(date.getMinutes)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (date) != "undefined") {_RecordType("<399,403,16>",(date)); Inst15++; } } catch(e) {}
date.getMinutes();
11;
try { if (Inst16 <= 1000 && typeof (date.getUTCHours) != "undefined") {_RecordType("<422,438,18>",(date.getUTCHours)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (date) != "undefined") {_RecordType("<422,426,18>",(date)); Inst17++; } } catch(e) {}
date.getUTCHours();
try { if (Inst19 <= 1000 && typeof (Date) != "undefined") {_RecordType("<453,457,19>",(Date)); Inst19++; } } catch(e) {}
date = new Date("2016/01/02 10:00 GMT-0856");
try { if (Inst18 <= 1000 && typeof (date) != "undefined") {_RecordType("<442,446,19>",(date)); Inst18++; } } catch(e) {}
56;
try { if (Inst20 <= 1000 && typeof (date.getMinutes) != "undefined") {_RecordType("<492,507,21>",(date.getMinutes)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (date) != "undefined") {_RecordType("<492,496,21>",(date)); Inst21++; } } catch(e) {}
date.getMinutes();
18;
try { if (Inst22 <= 1000 && typeof (date.getUTCHours) != "undefined") {_RecordType("<515,531,23>",(date.getUTCHours)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (date) != "undefined") {_RecordType("<515,519,23>",(date)); Inst23++; } } catch(e) {}
date.getUTCHours();
try { if (Inst25 <= 1000 && typeof (Date) != "undefined") {_RecordType("<546,550,24>",(Date)); Inst25++; } } catch(e) {}
date = new Date("2016/01/02 10:00 GMT-08000");
try { if (Inst24 <= 1000 && typeof (date) != "undefined") {_RecordType("<535,539,24>",(date)); Inst24++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<582,585,25>",(NaN)); Inst26++; } } catch(e) {}
NaN;
try { if (Inst27 <= 1000 && typeof (date.getMinutes) != "undefined") {_RecordType("<587,602,26>",(date.getMinutes)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (date) != "undefined") {_RecordType("<587,591,26>",(date)); Inst28++; } } catch(e) {}
date.getMinutes();
try { if (Inst29 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<606,609,27>",(NaN)); Inst29++; } } catch(e) {}
NaN;
try { if (Inst30 <= 1000 && typeof (date.getUTCHours) != "undefined") {_RecordType("<611,627,28>",(date.getUTCHours)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (date) != "undefined") {_RecordType("<611,615,28>",(date)); Inst31++; } } catch(e) {}
date.getUTCHours();

