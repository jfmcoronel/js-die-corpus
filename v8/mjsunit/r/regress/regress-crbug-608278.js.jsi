var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2016 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax --stress-inline
"use strict";

try { if (Inst0 <= 1000 && typeof (h) != "undefined") {_RecordType("<240,241,7>",(h)); Inst0++; } } catch(e) {}
function h() {
try { if (Inst2 <= 1000 && typeof (new Error("boom").stack) != "undefined") {_RecordType("<260,283,8>",(new Error("boom").stack)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Error) != "undefined") {_RecordType("<264,269,8>",(Error)); Inst3++; } } catch(e) {}
  var stack = new Error("boom").stack;
try { if (Inst1 <= 1000 && typeof (stack) != "undefined") {_RecordType("<252,257,8>",(stack)); Inst1++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (print) != "undefined") {_RecordType("<287,292,9>",(print)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (stack) != "undefined") {_RecordType("<293,298,9>",(stack)); Inst5++; } } catch(e) {}
  print(stack);
  return 1;
}

try { if (Inst6 <= 1000 && typeof (g) != "undefined") {_RecordType("<325,326,13>",(g)); Inst6++; } } catch(e) {}
function g(v) {
try { if (Inst7 <= 1000 && typeof (v) != "undefined") {_RecordType("<327,328,13>",(v)); Inst7++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (h) != "undefined") {_RecordType("<341,342,14>",(h)); Inst8++; } } catch(e) {}
  return h();
}

try { if (Inst9 <= 1000 && typeof (f1) != "undefined") {_RecordType("<358,360,17>",(f1)); Inst9++; } } catch(e) {}
function f1() {
  var o = {};
try { if (Inst10 <= 1000 && typeof (o) != "undefined") {_RecordType("<371,372,18>",(o)); Inst10++; } } catch(e) {}

try { if (Inst11 <= 1000 && typeof (o.__defineGetter__) != "undefined") {_RecordType("<382,400,20>",(o.__defineGetter__)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (o) != "undefined") {_RecordType("<382,383,20>",(o)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (g) != "undefined") {_RecordType("<406,407,20>",(g)); Inst13++; } } catch(e) {}
  o.__defineGetter__('p', g);

try { if (Inst14 <= 1000 && typeof (o.p) != "undefined") {_RecordType("<413,416,22>",(o.p)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (o) != "undefined") {_RecordType("<413,414,22>",(o)); Inst15++; } } catch(e) {}
  o.p;
}

try { if (Inst16 <= 1000 && typeof (f1) != "undefined") {_RecordType("<421,423,25>",(f1)); Inst16++; } } catch(e) {}
f1();
try { if (Inst17 <= 1000 && typeof (f1) != "undefined") {_RecordType("<427,429,26>",(f1)); Inst17++; } } catch(e) {}
f1();
try { if (Inst18 <= 1000 && typeof (f1) != "undefined") {_RecordType("<433,435,27>",(f1)); Inst18++; } } catch(e) {}
f1();

try { if (Inst19 <= 1000 && typeof (f2) != "undefined") {_RecordType("<449,451,29>",(f2)); Inst19++; } } catch(e) {}
function f2() {
  var o = {};
try { if (Inst20 <= 1000 && typeof (o) != "undefined") {_RecordType("<462,463,30>",(o)); Inst20++; } } catch(e) {}

try { if (Inst21 <= 1000 && typeof (o.__defineSetter__) != "undefined") {_RecordType("<473,491,32>",(o.__defineSetter__)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (o) != "undefined") {_RecordType("<473,474,32>",(o)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (g) != "undefined") {_RecordType("<497,498,32>",(g)); Inst23++; } } catch(e) {}
  o.__defineSetter__('q', g);

  o.q = 1;
try { if (Inst24 <= 1000 && typeof (o.q) != "undefined") {_RecordType("<504,507,34>",(o.q)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (o) != "undefined") {_RecordType("<504,505,34>",(o)); Inst25++; } } catch(e) {}
}

try { if (Inst26 <= 1000 && typeof (f2) != "undefined") {_RecordType("<516,518,37>",(f2)); Inst26++; } } catch(e) {}
f2();
try { if (Inst27 <= 1000 && typeof (f2) != "undefined") {_RecordType("<522,524,38>",(f2)); Inst27++; } } catch(e) {}
f2();
try { if (Inst28 <= 1000 && typeof (f2) != "undefined") {_RecordType("<528,530,39>",(f2)); Inst28++; } } catch(e) {}
f2();

try { if (Inst29 <= 1000 && typeof (A) != "undefined") {_RecordType("<544,545,41>",(A)); Inst29++; } } catch(e) {}
function A() {
try { if (Inst30 <= 1000 && typeof (h) != "undefined") {_RecordType("<559,560,42>",(h)); Inst30++; } } catch(e) {}
  return h();
}

try { if (Inst31 <= 1000 && typeof (f3) != "undefined") {_RecordType("<576,578,45>",(f3)); Inst31++; } } catch(e) {}
function f3() {
try { if (Inst32 <= 1000 && typeof (A) != "undefined") {_RecordType("<589,590,46>",(A)); Inst32++; } } catch(e) {}
  new A();
}

try { if (Inst33 <= 1000 && typeof (f3) != "undefined") {_RecordType("<597,599,49>",(f3)); Inst33++; } } catch(e) {}
f3();
try { if (Inst34 <= 1000 && typeof (f3) != "undefined") {_RecordType("<603,605,50>",(f3)); Inst34++; } } catch(e) {}
f3();
try { if (Inst35 <= 1000 && typeof (f3) != "undefined") {_RecordType("<609,611,51>",(f3)); Inst35++; } } catch(e) {}
f3();

