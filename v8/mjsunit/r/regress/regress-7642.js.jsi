var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2018 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --harmony-public-fields
const a = [2];
try { if (Inst0 <= 1000 && typeof (a) != "undefined") {_RecordType("<207,208,5>",(a)); Inst0++; } } catch(e) {}
const b = [4];
try { if (Inst1 <= 1000 && typeof (b) != "undefined") {_RecordType("<222,223,6>",(b)); Inst1++; } } catch(e) {}
let log;
try { if (Inst2 <= 1000 && typeof (log) != "undefined") {_RecordType("<235,238,7>",(log)); Inst2++; } } catch(e) {}

class C {
  constructor(...args) {
try { if (Inst4 <= 1000 && typeof (args) != "undefined") {_RecordType("<268,272,10>",(args)); Inst4++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (args) != "undefined") {_RecordType("<286,290,11>",(args)); Inst6++; } } catch(e) {}
    log = args;
try { if (Inst5 <= 1000 && typeof (log) != "undefined") {_RecordType("<280,283,11>",(log)); Inst5++; } } catch(e) {}
  }

}
try { if (Inst3 <= 1000 && typeof (C) != "undefined") {_RecordType("<247,248,9>",(C)); Inst3++; } } catch(e) {}

try { if (Inst8 <= 1000 && typeof (field) != "undefined") {_RecordType("<322,327,17>",(field)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (C) != "undefined") {_RecordType("<316,317,16>",(C)); Inst9++; } } catch(e) {}
class D extends C {
  field = 42;

  constructor() {
    super(1);
  }

}
try { if (Inst7 <= 1000 && typeof (D) != "undefined") {_RecordType("<306,307,16>",(D)); Inst7++; } } catch(e) {}

42;
try { if (Inst10 <= 1000 && typeof (new D().field) != "undefined") {_RecordType("<379,392,26>",(new D().field)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (D) != "undefined") {_RecordType("<383,384,26>",(D)); Inst11++; } } catch(e) {}
new D().field;
[1];
try { if (Inst12 <= 1000 && typeof (log) != "undefined") {_RecordType("<399,402,28>",(log)); Inst12++; } } catch(e) {}
log;

try { if (Inst14 <= 1000 && typeof (field) != "undefined") {_RecordType("<427,432,31>",(field)); Inst14++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (C) != "undefined") {_RecordType("<421,422,30>",(C)); Inst16++; } } catch(e) {}
class E extends C {
  field = 42;

  constructor() {
try { if (Inst15 <= 1000 && typeof (a) != "undefined") {_RecordType("<471,472,34>",(a)); Inst15++; } } catch(e) {}
    super(...a);
  }

}
try { if (Inst13 <= 1000 && typeof (E) != "undefined") {_RecordType("<411,412,30>",(E)); Inst13++; } } catch(e) {}

42;
try { if (Inst17 <= 1000 && typeof (new E().field) != "undefined") {_RecordType("<487,500,40>",(new E().field)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (E) != "undefined") {_RecordType("<491,492,40>",(E)); Inst18++; } } catch(e) {}
new E().field;
[2];
try { if (Inst19 <= 1000 && typeof (log) != "undefined") {_RecordType("<507,510,42>",(log)); Inst19++; } } catch(e) {}
log;

try { if (Inst21 <= 1000 && typeof (field) != "undefined") {_RecordType("<535,540,45>",(field)); Inst21++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (C) != "undefined") {_RecordType("<529,530,44>",(C)); Inst23++; } } catch(e) {}
class F extends C {
  field = 42;

  constructor() {
try { if (Inst22 <= 1000 && typeof (a) != "undefined") {_RecordType("<582,583,48>",(a)); Inst22++; } } catch(e) {}
    super(1, ...a);
  }

}
try { if (Inst20 <= 1000 && typeof (F) != "undefined") {_RecordType("<519,520,44>",(F)); Inst20++; } } catch(e) {}

42;
try { if (Inst24 <= 1000 && typeof (new F().field) != "undefined") {_RecordType("<598,611,54>",(new F().field)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (F) != "undefined") {_RecordType("<602,603,54>",(F)); Inst25++; } } catch(e) {}
new F().field;
[1, 2];
try { if (Inst26 <= 1000 && typeof (log) != "undefined") {_RecordType("<621,624,56>",(log)); Inst26++; } } catch(e) {}
log;

try { if (Inst28 <= 1000 && typeof (field) != "undefined") {_RecordType("<649,654,59>",(field)); Inst28++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (C) != "undefined") {_RecordType("<643,644,58>",(C)); Inst30++; } } catch(e) {}
class G extends C {
  field = 42;

  constructor() {
try { if (Inst29 <= 1000 && typeof (a) != "undefined") {_RecordType("<696,697,62>",(a)); Inst29++; } } catch(e) {}
    super(1, ...a, 3);
  }

}
try { if (Inst27 <= 1000 && typeof (G) != "undefined") {_RecordType("<633,634,58>",(G)); Inst27++; } } catch(e) {}

42;
try { if (Inst31 <= 1000 && typeof (new G().field) != "undefined") {_RecordType("<715,728,68>",(new G().field)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (G) != "undefined") {_RecordType("<719,720,68>",(G)); Inst32++; } } catch(e) {}
new G().field;
[1, 2, 3];
try { if (Inst33 <= 1000 && typeof (log) != "undefined") {_RecordType("<741,744,70>",(log)); Inst33++; } } catch(e) {}
log;

try { if (Inst35 <= 1000 && typeof (field) != "undefined") {_RecordType("<769,774,73>",(field)); Inst35++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (C) != "undefined") {_RecordType("<763,764,72>",(C)); Inst38++; } } catch(e) {}
class H extends C {
  field = 42;

  constructor() {
try { if (Inst36 <= 1000 && typeof (a) != "undefined") {_RecordType("<816,817,76>",(a)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (b) != "undefined") {_RecordType("<825,826,76>",(b)); Inst37++; } } catch(e) {}
    super(1, ...a, 3, ...b);
  }

}
try { if (Inst34 <= 1000 && typeof (H) != "undefined") {_RecordType("<753,754,72>",(H)); Inst34++; } } catch(e) {}

42;
try { if (Inst39 <= 1000 && typeof (new H().field) != "undefined") {_RecordType("<841,854,82>",(new H().field)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (H) != "undefined") {_RecordType("<845,846,82>",(H)); Inst40++; } } catch(e) {}
new H().field;
[1, 2, 3, 4];
try { if (Inst41 <= 1000 && typeof (log) != "undefined") {_RecordType("<870,873,84>",(log)); Inst41++; } } catch(e) {}
log;

try { if (Inst43 <= 1000 && typeof (field) != "undefined") {_RecordType("<898,903,87>",(field)); Inst43++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (C) != "undefined") {_RecordType("<892,893,86>",(C)); Inst46++; } } catch(e) {}
class I extends C {
  field = 42;

  constructor() {
try { if (Inst44 <= 1000 && typeof (a) != "undefined") {_RecordType("<945,946,90>",(a)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (b) != "undefined") {_RecordType("<954,955,90>",(b)); Inst45++; } } catch(e) {}
    super(1, ...a, 3, ...b, 5);
  }

}
try { if (Inst42 <= 1000 && typeof (I) != "undefined") {_RecordType("<882,883,86>",(I)); Inst42++; } } catch(e) {}

42;
try { if (Inst47 <= 1000 && typeof (new I().field) != "undefined") {_RecordType("<973,986,96>",(new I().field)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (I) != "undefined") {_RecordType("<977,978,96>",(I)); Inst48++; } } catch(e) {}
new I().field;
[1, 2, 3, 4, 5];
try { if (Inst49 <= 1000 && typeof (log) != "undefined") {_RecordType("<1005,1008,98>",(log)); Inst49++; } } catch(e) {}
log;

