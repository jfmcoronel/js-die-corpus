var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2017 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
var v11 = {};
try { if (Inst0 <= 1000 && typeof (v11) != "undefined") {_RecordType("<174,177,5>",(v11)); Inst0++; } } catch(e) {}
try { if (Inst1 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<184,205,6>",(Object.defineProperty)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Object) != "undefined") {_RecordType("<184,190,6>",(Object)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (v11.__proto__) != "undefined") {_RecordType("<206,219,6>",(v11.__proto__)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (v11) != "undefined") {_RecordType("<206,209,6>",(v11)); Inst4++; } } catch(e) {}
Object.defineProperty(v11.__proto__, 0, {
  get: function () {
    ;
  },
  set: function () {
try { if (Inst9 <= 1000 && typeof (e) != "undefined") {_RecordType("<353,354,14>",(e)); Inst9++; } } catch(e) {}
    try {
try { if (Inst5 <= 1000 && typeof (WebAssembly.instantiate) != "undefined") {_RecordType("<295,318,12>",(WebAssembly.instantiate)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (WebAssembly) != "undefined") {_RecordType("<295,306,12>",(WebAssembly)); Inst6++; } } catch(e) {}
      WebAssembly.instantiate();
      v11[0] = 0;
try { if (Inst7 <= 1000 && typeof (v11[0]) != "undefined") {_RecordType("<328,334,13>",(v11[0])); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (v11) != "undefined") {_RecordType("<328,331,13>",(v11)); Inst8++; } } catch(e) {}
    } catch (e) {
try { if (Inst10 <= 1000 && typeof (e) != "undefined") {_RecordType("<364,365,15>",(e)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (RangeError) != "undefined") {_RecordType("<377,387,15>",(RangeError)); Inst11++; } } catch(e) {}
      e instanceof RangeError;
    }
  }
});
try { if (Inst13 <= 1000 && typeof (Array) != "undefined") {_RecordType("<413,418,19>",(Array)); Inst13++; } } catch(e) {}
v66 = new Array();
try { if (Inst12 <= 1000 && typeof (v66) != "undefined") {_RecordType("<403,406,19>",(v66)); Inst12++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (v66) != "undefined") {_RecordType("<427,430,20>",(v66)); Inst15++; } } catch(e) {}
cv = v66;
try { if (Inst14 <= 1000 && typeof (cv) != "undefined") {_RecordType("<422,424,20>",(cv)); Inst14++; } } catch(e) {}
cv[0] = 0.1;
try { if (Inst16 <= 1000 && typeof (cv[0]) != "undefined") {_RecordType("<432,437,21>",(cv[0])); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (cv) != "undefined") {_RecordType("<432,434,21>",(cv)); Inst17++; } } catch(e) {}
cv[2] = 0.2;
try { if (Inst18 <= 1000 && typeof (cv[2]) != "undefined") {_RecordType("<445,450,22>",(cv[2])); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (cv) != "undefined") {_RecordType("<445,447,22>",(cv)); Inst19++; } } catch(e) {}

