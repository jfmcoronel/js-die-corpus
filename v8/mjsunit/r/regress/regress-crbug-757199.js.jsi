var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/// Copyright 2017 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax
var obj1 = {};
try { if (Inst0 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<205,209,5>",(obj1)); Inst0++; } } catch(e) {}
var obj2 = {};
try { if (Inst1 <= 1000 && typeof (obj2) != "undefined") {_RecordType("<220,224,6>",(obj2)); Inst1++; } } catch(e) {}

try { if (Inst2 <= 1000 && typeof (h) != "undefined") {_RecordType("<241,242,8>",(h)); Inst2++; } } catch(e) {}
function h() {
  ;
}

try { if (Inst5 <= 1000 && typeof (obj2) != "undefined") {_RecordType("<268,272,12>",(obj2)); Inst5++; } } catch(e) {}
h.prototype = obj2;
try { if (Inst3 <= 1000 && typeof (h.prototype) != "undefined") {_RecordType("<254,265,12>",(h.prototype)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (h) != "undefined") {_RecordType("<254,255,12>",(h)); Inst4++; } } catch(e) {}

try { if (Inst6 <= 1000 && typeof (g) != "undefined") {_RecordType("<284,285,14>",(g)); Inst6++; } } catch(e) {}
function g(v) {
try { if (Inst7 <= 1000 && typeof (v) != "undefined") {_RecordType("<286,287,14>",(v)); Inst7++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (v.constructor) != "undefined") {_RecordType("<293,306,15>",(v.constructor)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (v) != "undefined") {_RecordType("<293,294,15>",(v)); Inst9++; } } catch(e) {}
  v.constructor;
}

try { if (Inst10 <= 1000 && typeof (f) != "undefined") {_RecordType("<320,321,18>",(f)); Inst10++; } } catch(e) {}
function f() {
try { if (Inst11 <= 1000 && typeof (g) != "undefined") {_RecordType("<328,329,19>",(g)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<330,334,19>",(obj1)); Inst12++; } } catch(e) {}
  g(obj1);
}

obj1.x = 0;
try { if (Inst13 <= 1000 && typeof (obj1.x) != "undefined") {_RecordType("<340,346,22>",(obj1.x)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<340,344,22>",(obj1)); Inst14++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (f) != "undefined") {_RecordType("<352,353,23>",(f)); Inst15++; } } catch(e) {}
f();

try { if (Inst16 <= 1000 && typeof (obj1.__defineGetter__) != "undefined") {_RecordType("<358,379,25>",(obj1.__defineGetter__)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<358,362,25>",(obj1)); Inst17++; } } catch(e) {}
obj1.__defineGetter__("x", function () {
  ;
});

try { if (Inst18 <= 1000 && typeof (g) != "undefined") {_RecordType("<408,409,29>",(g)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (obj2) != "undefined") {_RecordType("<410,414,29>",(obj2)); Inst19++; } } catch(e) {}
g(obj2);
obj2.y = 0;
try { if (Inst20 <= 1000 && typeof (obj2.y) != "undefined") {_RecordType("<417,423,30>",(obj2.y)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (obj2) != "undefined") {_RecordType("<417,421,30>",(obj2)); Inst21++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (f) != "undefined") {_RecordType("<429,430,31>",(f)); Inst22++; } } catch(e) {}
f();

