var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2014 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax --gc-interval=439 --random-seed=-423594851
var __v_3;
try { if (Inst0 <= 1000 && typeof (__v_3) != "undefined") {_RecordType("<247,252,5>",(__v_3)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (__f_2) != "undefined") {_RecordType("<264,269,7>",(__f_2)); Inst1++; } } catch(e) {}
function __f_2() {
try { if (Inst3 <= 1000 && typeof (Array) != "undefined") {_RecordType("<292,297,8>",(Array)); Inst3++; } } catch(e) {}
  var __v_1 = new Array(3);
try { if (Inst2 <= 1000 && typeof (__v_1) != "undefined") {_RecordType("<280,285,8>",(__v_1)); Inst2++; } } catch(e) {}

  __v_1[0] = 10;
try { if (Inst4 <= 1000 && typeof (__v_1[0]) != "undefined") {_RecordType("<305,313,10>",(__v_1[0])); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (__v_1) != "undefined") {_RecordType("<305,310,10>",(__v_1)); Inst5++; } } catch(e) {}
  __v_1[1] = 15.5;
try { if (Inst6 <= 1000 && typeof (__v_1[1]) != "undefined") {_RecordType("<322,330,11>",(__v_1[1])); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (__v_1) != "undefined") {_RecordType("<322,327,11>",(__v_1)); Inst7++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (__f_2) != "undefined") {_RecordType("<349,354,12>",(__f_2)); Inst9++; } } catch(e) {}
  __v_3 = __f_2();
try { if (Inst8 <= 1000 && typeof (__v_3) != "undefined") {_RecordType("<341,346,12>",(__v_3)); Inst8++; } } catch(e) {}
  __v_1[2] = 20;
try { if (Inst10 <= 1000 && typeof (__v_1[2]) != "undefined") {_RecordType("<360,368,13>",(__v_1[2])); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (__v_1) != "undefined") {_RecordType("<360,365,13>",(__v_1)); Inst11++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (__v_1) != "undefined") {_RecordType("<384,389,14>",(__v_1)); Inst12++; } } catch(e) {}
  return __v_1;
}

try { if (Inst18 <= 1000 && typeof (e) != "undefined") {_RecordType("<478,479,21>",(e)); Inst18++; } } catch(e) {}
try {
  for (var __v_2 = 0; __v_2 < 3; ++__v_2) {
try { if (Inst13 <= 1000 && typeof (__v_2) != "undefined") {_RecordType("<411,416,18>",(__v_2)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (__v_2) != "undefined") {_RecordType("<422,427,18>",(__v_2)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (__v_2) != "undefined") {_RecordType("<435,440,18>",(__v_2)); Inst15++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (__f_2) != "undefined") {_RecordType("<456,461,19>",(__f_2)); Inst17++; } } catch(e) {}
    __v_3 = __f_2();
try { if (Inst16 <= 1000 && typeof (__v_3) != "undefined") {_RecordType("<448,453,19>",(__v_3)); Inst16++; } } catch(e) {}
  }
} catch (e) {
  ;
}

