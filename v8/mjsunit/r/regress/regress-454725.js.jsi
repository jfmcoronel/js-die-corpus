var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2015 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// Flags: --expose-gc
var __v_9 = {};
try { if (Inst0 <= 1000 && typeof (__v_9) != "undefined") {_RecordType("<196,201,6>",(__v_9)); Inst0++; } } catch(e) {}
var depth = 15;
try { if (Inst1 <= 1000 && typeof (depth) != "undefined") {_RecordType("<212,217,7>",(depth)); Inst1++; } } catch(e) {}
var current = 0;
try { if (Inst2 <= 1000 && typeof (current) != "undefined") {_RecordType("<228,235,8>",(current)); Inst2++; } } catch(e) {}

try { if (Inst3 <= 1000 && typeof (__f_15) != "undefined") {_RecordType("<251,257,10>",(__f_15)); Inst3++; } } catch(e) {}
function __f_15(__v_3) {
try { if (Inst4 <= 1000 && typeof (__v_3) != "undefined") {_RecordType("<258,263,10>",(__v_3)); Inst4++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (__v_3) != "undefined") {_RecordType("<273,278,11>",(__v_3)); Inst5++; } } catch(e) {}
  if (__v_3 % 50 != 0) {
try { if (Inst6 <= 1000 && typeof (__v_3) != "undefined") {_RecordType("<303,308,12>",(__v_3)); Inst6++; } } catch(e) {}
    return __v_3;
  } else {
try { if (Inst7 <= 1000 && typeof (__v_9) != "undefined") {_RecordType("<332,337,14>",(__v_9)); Inst7++; } } catch(e) {}
    return __v_9 + 0.5;
  }
}

try { if (Inst8 <= 1000 && typeof (__f_13) != "undefined") {_RecordType("<361,367,18>",(__f_13)); Inst8++; } } catch(e) {}
function __f_13(a) {
try { if (Inst9 <= 1000 && typeof (a) != "undefined") {_RecordType("<368,369,18>",(a)); Inst9++; } } catch(e) {}
  a[100000 - 2] = 1;
try { if (Inst10 <= 1000 && typeof (a[100000 - 2]) != "undefined") {_RecordType("<375,388,19>",(a[100000 - 2])); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (a) != "undefined") {_RecordType("<375,376,19>",(a)); Inst11++; } } catch(e) {}

  for (var __v_3 = 0; __v_3 < 70000; ++__v_3) {
try { if (Inst12 <= 1000 && typeof (__v_3) != "undefined") {_RecordType("<406,411,21>",(__v_3)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (__v_3) != "undefined") {_RecordType("<417,422,21>",(__v_3)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (__v_3) != "undefined") {_RecordType("<434,439,21>",(__v_3)); Inst14++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (__f_15) != "undefined") {_RecordType("<458,464,22>",(__f_15)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (__v_3) != "undefined") {_RecordType("<465,470,22>",(__v_3)); Inst18++; } } catch(e) {}
    a[__v_3] = __f_15(__v_3);
try { if (Inst15 <= 1000 && typeof (a[__v_3]) != "undefined") {_RecordType("<447,455,22>",(a[__v_3])); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (a) != "undefined") {_RecordType("<447,448,22>",(a)); Inst16++; } } catch(e) {}
  }
}

try { if (Inst19 <= 1000 && typeof (__f_2) != "undefined") {_RecordType("<489,494,26>",(__f_2)); Inst19++; } } catch(e) {}
function __f_2(size) {
try { if (Inst20 <= 1000 && typeof (size) != "undefined") {_RecordType("<495,499,26>",(size)); Inst20++; } } catch(e) {}
  ;
}

var tmp;
try { if (Inst21 <= 1000 && typeof (tmp) != "undefined") {_RecordType("<514,517,30>",(tmp)); Inst21++; } } catch(e) {}

try { if (Inst22 <= 1000 && typeof (__f_18) != "undefined") {_RecordType("<529,535,32>",(__f_18)); Inst22++; } } catch(e) {}
function __f_18(allocator) {
try { if (Inst23 <= 1000 && typeof (allocator) != "undefined") {_RecordType("<536,545,32>",(allocator)); Inst23++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (current) != "undefined") {_RecordType("<551,558,33>",(current)); Inst24++; } } catch(e) {}
  current++;

try { if (Inst25 <= 1000 && typeof (current) != "undefined") {_RecordType("<569,576,35>",(current)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (depth) != "undefined") {_RecordType("<580,585,35>",(depth)); Inst26++; } } catch(e) {}
  if (current == depth) {
    return;
  }

try { if (Inst28 <= 1000 && typeof (allocator) != "undefined") {_RecordType("<624,633,39>",(allocator)); Inst28++; } } catch(e) {}
  var __v_7 = new allocator(100000);
try { if (Inst27 <= 1000 && typeof (__v_7) != "undefined") {_RecordType("<612,617,39>",(__v_7)); Inst27++; } } catch(e) {}

try { if (Inst29 <= 1000 && typeof (__f_13) != "undefined") {_RecordType("<646,652,41>",(__f_13)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (__v_7) != "undefined") {_RecordType("<653,658,41>",(__v_7)); Inst30++; } } catch(e) {}
  __f_13(__v_7);

  var __v_4 = 6;
try { if (Inst31 <= 1000 && typeof (__v_4) != "undefined") {_RecordType("<668,673,43>",(__v_4)); Inst31++; } } catch(e) {}

  for (var __v_3 = 0; __v_3 < 70000; __v_3 += 501) {
try { if (Inst32 <= 1000 && typeof (__v_3) != "undefined") {_RecordType("<691,696,45>",(__v_3)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (__v_3) != "undefined") {_RecordType("<702,707,45>",(__v_3)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (__v_3) != "undefined") {_RecordType("<717,722,45>",(__v_3)); Inst34++; } } catch(e) {}
try { if (Inst36 <= 1000 && typeof (__v_3) != "undefined") {_RecordType("<744,749,46>",(__v_3)); Inst36++; } } catch(e) {}
    tmp += __v_3;
try { if (Inst35 <= 1000 && typeof (tmp) != "undefined") {_RecordType("<737,740,46>",(tmp)); Inst35++; } } catch(e) {}
  }

try { if (Inst37 <= 1000 && typeof (__f_18) != "undefined") {_RecordType("<758,764,49>",(__f_18)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (Array) != "undefined") {_RecordType("<765,770,49>",(Array)); Inst38++; } } catch(e) {}
  __f_18(Array);

try { if (Inst39 <= 1000 && typeof (current) != "undefined") {_RecordType("<776,783,51>",(current)); Inst39++; } } catch(e) {}
  current--;
}

try { if (Inst40 <= 1000 && typeof (gc) != "undefined") {_RecordType("<790,792,54>",(gc)); Inst40++; } } catch(e) {}
gc();

try { if (Inst41 <= 1000 && typeof (__f_18) != "undefined") {_RecordType("<797,803,56>",(__f_18)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (__f_2) != "undefined") {_RecordType("<804,809,56>",(__f_2)); Inst42++; } } catch(e) {}
__f_18(__f_2);

