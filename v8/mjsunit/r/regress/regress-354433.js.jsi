var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2014 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// Flags: --allow-natives-syntax
var __v_0 = {};
try { if (Inst0 <= 1000 && typeof (__v_0) != "undefined") {_RecordType("<1634,1639,28>",(__v_0)); Inst0++; } } catch(e) {}
var __v_5 = {};
try { if (Inst1 <= 1000 && typeof (__v_5) != "undefined") {_RecordType("<1650,1655,29>",(__v_5)); Inst1++; } } catch(e) {}

try { if (Inst2 <= 1000 && typeof (__f_2) != "undefined") {_RecordType("<1672,1677,31>",(__f_2)); Inst2++; } } catch(e) {}
function __f_2() {
try { if (Inst3 <= 1000 && typeof (this.__defineGetter__) != "undefined") {_RecordType("<1684,1705,32>",(this.__defineGetter__)); Inst3++; } } catch(e) {}
  this.__defineGetter__('str', function () {
try { if (Inst4 <= 1000 && typeof (__f_2) != "undefined") {_RecordType("<1738,1743,33>",(__f_2)); Inst4++; } } catch(e) {}
    return __f_2(this);
  });

  this.str = "1";
try { if (Inst5 <= 1000 && typeof (this.str) != "undefined") {_RecordType("<1760,1768,36>",(this.str)); Inst5++; } } catch(e) {}

  this.toString = function () {
try { if (Inst7 <= 1000 && typeof (this.str) != "undefined") {_RecordType("<1820,1828,39>",(this.str)); Inst7++; } } catch(e) {}
    return this.str;
  };
try { if (Inst6 <= 1000 && typeof (this.toString) != "undefined") {_RecordType("<1779,1792,38>",(this.toString)); Inst6++; } } catch(e) {}
}

;
try { if (Inst9 <= 1000 && typeof (__f_2) != "undefined") {_RecordType("<1852,1857,44>",(__f_2)); Inst9++; } } catch(e) {}
__v_5 = new __f_2();
try { if (Inst8 <= 1000 && typeof (__v_5) != "undefined") {_RecordType("<1840,1845,44>",(__v_5)); Inst8++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (__f_2) != "undefined") {_RecordType("<1873,1878,45>",(__f_2)); Inst11++; } } catch(e) {}
__v_0 = new __f_2();
try { if (Inst10 <= 1000 && typeof (__v_0) != "undefined") {_RecordType("<1861,1866,45>",(__v_0)); Inst10++; } } catch(e) {}

try { if (Inst12 <= 1000 && typeof (__f_5) != "undefined") {_RecordType("<1892,1897,47>",(__f_5)); Inst12++; } } catch(e) {}
function __f_5(fun, a, b) {
try { if (Inst13 <= 1000 && typeof (fun) != "undefined") {_RecordType("<1898,1901,47>",(fun)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (a) != "undefined") {_RecordType("<1903,1904,47>",(a)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (b) != "undefined") {_RecordType("<1906,1907,47>",(b)); Inst15++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (a) != "undefined") {_RecordType("<1925,1926,48>",(a)); Inst18++; } } catch(e) {}
  __v_5.str = a;
try { if (Inst16 <= 1000 && typeof (__v_5.str) != "undefined") {_RecordType("<1913,1922,48>",(__v_5.str)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (__v_5) != "undefined") {_RecordType("<1913,1918,48>",(__v_5)); Inst17++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (b) != "undefined") {_RecordType("<1942,1943,49>",(b)); Inst21++; } } catch(e) {}
  __v_0.str = b;
try { if (Inst19 <= 1000 && typeof (__v_0.str) != "undefined") {_RecordType("<1930,1939,49>",(__v_0.str)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (__v_0) != "undefined") {_RecordType("<1930,1935,49>",(__v_0)); Inst20++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (fun) != "undefined") {_RecordType("<1947,1950,50>",(fun)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (__v_5) != "undefined") {_RecordType("<1951,1956,50>",(__v_5)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (__v_0) != "undefined") {_RecordType("<1958,1963,50>",(__v_0)); Inst24++; } } catch(e) {}
  fun(__v_5, __v_0);
}

try { if (Inst25 <= 1000 && typeof (__f_8) != "undefined") {_RecordType("<1978,1983,53>",(__f_8)); Inst25++; } } catch(e) {}
function __f_8(a, b) {
try { if (Inst26 <= 1000 && typeof (a) != "undefined") {_RecordType("<1984,1985,53>",(a)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (b) != "undefined") {_RecordType("<1987,1988,53>",(b)); Inst27++; } } catch(e) {}
try { if (Inst28 <= 1000 && typeof (a) != "undefined") {_RecordType("<2001,2002,54>",(a)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (b) != "undefined") {_RecordType("<2005,2006,54>",(b)); Inst29++; } } catch(e) {}
  return a % b;
}

;

try { if (Inst30 <= 1000 && typeof (__f_5) != "undefined") {_RecordType("<2014,2019,59>",(__f_5)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (__f_8) != "undefined") {_RecordType("<2020,2025,59>",(__f_8)); Inst31++; } } catch(e) {}
__f_5(__f_8, 1 << 30, 1);

try { if (Inst32 <= 1000 && typeof (__f_5) != "undefined") {_RecordType("<2041,2046,61>",(__f_5)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (__f_8) != "undefined") {_RecordType("<2047,2052,61>",(__f_8)); Inst33++; } } catch(e) {}
__f_5(__f_8, 1, 1 << 30);

try { if (Inst34 <= 1000 && typeof (__f_5) != "undefined") {_RecordType("<2068,2073,63>",(__f_5)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (__f_8) != "undefined") {_RecordType("<2074,2079,63>",(__f_8)); Inst35++; } } catch(e) {}
__f_5(__f_8, 1, 1 << 30);

