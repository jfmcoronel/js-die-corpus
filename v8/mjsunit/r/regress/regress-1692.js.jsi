var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2011 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// Test that Object.prototype.propertyIsEnumerable handles array indices
// correctly.
try { if (Inst1 <= 1000 && typeof (Object.create) != "undefined") {_RecordType("<1692,1705,29>",(Object.create)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1692,1698,29>",(Object)); Inst2++; } } catch(e) {}
var p = Object.create({}, {
  a: {
    value: 42,
    enumerable: true
  },
  b: {
    value: 42,
    enumerable: false
  },
  1: {
    value: 42,
    enumerable: true
  },
  2: {
    value: 42,
    enumerable: false
  },
  f: {
    get: function () {
      ;
    },
    enumerable: true
  },
  g: {
    get: function () {
      ;
    },
    enumerable: false
  },
  11: {
    get: function () {
      ;
    },
    enumerable: true
  },
  12: {
    get: function () {
      ;
    },
    enumerable: false
  }
});
try { if (Inst0 <= 1000 && typeof (p) != "undefined") {_RecordType("<1688,1689,29>",(p)); Inst0++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (Object.create) != "undefined") {_RecordType("<2205,2218,71>",(Object.create)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Object) != "undefined") {_RecordType("<2205,2211,71>",(Object)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (p) != "undefined") {_RecordType("<2219,2220,71>",(p)); Inst6++; } } catch(e) {}
var o = Object.create(p, {
  c: {
    value: 42,
    enumerable: true
  },
  d: {
    value: 42,
    enumerable: false
  },
  3: {
    value: 42,
    enumerable: true
  },
  4: {
    value: 42,
    enumerable: false
  },
  h: {
    get: function () {
      ;
    },
    enumerable: true
  },
  k: {
    get: function () {
      ;
    },
    enumerable: false
  },
  13: {
    get: function () {
      ;
    },
    enumerable: true
  },
  14: {
    get: function () {
      ;
    },
    enumerable: false
  }
}); // Inherited properties are ignored.
try { if (Inst3 <= 1000 && typeof (o) != "undefined") {_RecordType("<2201,2202,71>",(o)); Inst3++; } } catch(e) {}

try { if (Inst7 <= 1000 && typeof (o.propertyIsEnumerable) != "undefined") {_RecordType("<2747,2769,114>",(o.propertyIsEnumerable)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (o) != "undefined") {_RecordType("<2747,2748,114>",(o)); Inst8++; } } catch(e) {}
o.propertyIsEnumerable("a");
try { if (Inst9 <= 1000 && typeof (o.propertyIsEnumerable) != "undefined") {_RecordType("<2776,2798,115>",(o.propertyIsEnumerable)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (o) != "undefined") {_RecordType("<2776,2777,115>",(o)); Inst10++; } } catch(e) {}
o.propertyIsEnumerable("b");
try { if (Inst11 <= 1000 && typeof (o.propertyIsEnumerable) != "undefined") {_RecordType("<2805,2827,116>",(o.propertyIsEnumerable)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (o) != "undefined") {_RecordType("<2805,2806,116>",(o)); Inst12++; } } catch(e) {}
o.propertyIsEnumerable("1");
try { if (Inst13 <= 1000 && typeof (o.propertyIsEnumerable) != "undefined") {_RecordType("<2834,2856,117>",(o.propertyIsEnumerable)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (o) != "undefined") {_RecordType("<2834,2835,117>",(o)); Inst14++; } } catch(e) {}
o.propertyIsEnumerable("2");
try { if (Inst15 <= 1000 && typeof (o.propertyIsEnumerable) != "undefined") {_RecordType("<2863,2885,118>",(o.propertyIsEnumerable)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (o) != "undefined") {_RecordType("<2863,2864,118>",(o)); Inst16++; } } catch(e) {}
o.propertyIsEnumerable("c");
try { if (Inst17 <= 1000 && typeof (o.propertyIsEnumerable) != "undefined") {_RecordType("<2892,2914,119>",(o.propertyIsEnumerable)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (o) != "undefined") {_RecordType("<2892,2893,119>",(o)); Inst18++; } } catch(e) {}
o.propertyIsEnumerable("d");
try { if (Inst19 <= 1000 && typeof (o.propertyIsEnumerable) != "undefined") {_RecordType("<2921,2943,120>",(o.propertyIsEnumerable)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (o) != "undefined") {_RecordType("<2921,2922,120>",(o)); Inst20++; } } catch(e) {}
o.propertyIsEnumerable("3");
try { if (Inst21 <= 1000 && typeof (o.propertyIsEnumerable) != "undefined") {_RecordType("<2950,2972,121>",(o.propertyIsEnumerable)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (o) != "undefined") {_RecordType("<2950,2951,121>",(o)); Inst22++; } } catch(e) {}
o.propertyIsEnumerable("4");
try { if (Inst23 <= 1000 && typeof (o.propertyIsEnumerable) != "undefined") {_RecordType("<2979,3001,122>",(o.propertyIsEnumerable)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (o) != "undefined") {_RecordType("<2979,2980,122>",(o)); Inst24++; } } catch(e) {}
o.propertyIsEnumerable("f");
try { if (Inst25 <= 1000 && typeof (o.propertyIsEnumerable) != "undefined") {_RecordType("<3008,3030,123>",(o.propertyIsEnumerable)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (o) != "undefined") {_RecordType("<3008,3009,123>",(o)); Inst26++; } } catch(e) {}
o.propertyIsEnumerable("g");
try { if (Inst27 <= 1000 && typeof (o.propertyIsEnumerable) != "undefined") {_RecordType("<3037,3059,124>",(o.propertyIsEnumerable)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (o) != "undefined") {_RecordType("<3037,3038,124>",(o)); Inst28++; } } catch(e) {}
o.propertyIsEnumerable("11");
try { if (Inst29 <= 1000 && typeof (o.propertyIsEnumerable) != "undefined") {_RecordType("<3067,3089,125>",(o.propertyIsEnumerable)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (o) != "undefined") {_RecordType("<3067,3068,125>",(o)); Inst30++; } } catch(e) {}
o.propertyIsEnumerable("12");
try { if (Inst31 <= 1000 && typeof (o.propertyIsEnumerable) != "undefined") {_RecordType("<3097,3119,126>",(o.propertyIsEnumerable)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (o) != "undefined") {_RecordType("<3097,3098,126>",(o)); Inst32++; } } catch(e) {}
o.propertyIsEnumerable("h");
try { if (Inst33 <= 1000 && typeof (o.propertyIsEnumerable) != "undefined") {_RecordType("<3126,3148,127>",(o.propertyIsEnumerable)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (o) != "undefined") {_RecordType("<3126,3127,127>",(o)); Inst34++; } } catch(e) {}
o.propertyIsEnumerable("k");
try { if (Inst35 <= 1000 && typeof (o.propertyIsEnumerable) != "undefined") {_RecordType("<3155,3177,128>",(o.propertyIsEnumerable)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (o) != "undefined") {_RecordType("<3155,3156,128>",(o)); Inst36++; } } catch(e) {}
o.propertyIsEnumerable("13");
try { if (Inst37 <= 1000 && typeof (o.propertyIsEnumerable) != "undefined") {_RecordType("<3185,3207,129>",(o.propertyIsEnumerable)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (o) != "undefined") {_RecordType("<3185,3186,129>",(o)); Inst38++; } } catch(e) {}
o.propertyIsEnumerable("14");
try { if (Inst39 <= 1000 && typeof (o.propertyIsEnumerable) != "undefined") {_RecordType("<3215,3237,130>",(o.propertyIsEnumerable)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (o) != "undefined") {_RecordType("<3215,3216,130>",(o)); Inst40++; } } catch(e) {}
o.propertyIsEnumerable("xxx");
try { if (Inst41 <= 1000 && typeof (o.propertyIsEnumerable) != "undefined") {_RecordType("<3246,3268,131>",(o.propertyIsEnumerable)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (o) != "undefined") {_RecordType("<3246,3247,131>",(o)); Inst42++; } } catch(e) {}
o.propertyIsEnumerable("999");
// String object properties.
try { if (Inst44 <= 1000 && typeof (Object) != "undefined") {_RecordType("<3314,3320,133>",(Object)); Inst44++; } } catch(e) {}
var o = Object("string"); // Non-string property on String object.
try { if (Inst43 <= 1000 && typeof (o) != "undefined") {_RecordType("<3310,3311,133>",(o)); Inst43++; } } catch(e) {}

o[10] = 42;
try { if (Inst45 <= 1000 && typeof (o[10]) != "undefined") {_RecordType("<3374,3379,135>",(o[10])); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (o) != "undefined") {_RecordType("<3374,3375,135>",(o)); Inst46++; } } catch(e) {}
try { if (Inst47 <= 1000 && typeof (o.propertyIsEnumerable) != "undefined") {_RecordType("<3386,3408,136>",(o.propertyIsEnumerable)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (o) != "undefined") {_RecordType("<3386,3387,136>",(o)); Inst48++; } } catch(e) {}
o.propertyIsEnumerable(10);
try { if (Inst49 <= 1000 && typeof (o.propertyIsEnumerable) != "undefined") {_RecordType("<3414,3436,137>",(o.propertyIsEnumerable)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (o) != "undefined") {_RecordType("<3414,3415,137>",(o)); Inst50++; } } catch(e) {}
o.propertyIsEnumerable(0);
// Fast elements.
var o = [1, 2, 3, 4, 5];
try { if (Inst51 <= 1000 && typeof (o) != "undefined") {_RecordType("<3463,3464,139>",(o)); Inst51++; } } catch(e) {}
try { if (Inst52 <= 1000 && typeof (o.propertyIsEnumerable) != "undefined") {_RecordType("<3484,3506,140>",(o.propertyIsEnumerable)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (o) != "undefined") {_RecordType("<3484,3485,140>",(o)); Inst53++; } } catch(e) {}
o.propertyIsEnumerable(3);

