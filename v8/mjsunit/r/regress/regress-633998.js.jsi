var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2015 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
var err_str_1 = "apply was called on , which is a object and not a function";
try { if (Inst0 <= 1000 && typeof (err_str_1) != "undefined") {_RecordType("<171,180,4>",(err_str_1)); Inst0++; } } catch(e) {}
var err_str_2 = "apply was called on Error, which is a object and not a function";
try { if (Inst1 <= 1000 && typeof (err_str_2) != "undefined") {_RecordType("<249,258,5>",(err_str_2)); Inst1++; } } catch(e) {}
var reached = false;
try { if (Inst2 <= 1000 && typeof (reached) != "undefined") {_RecordType("<332,339,6>",(reached)); Inst2++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (Error) != "undefined") {_RecordType("<365,370,7>",(Error)); Inst4++; } } catch(e) {}
var error = new Error();
try { if (Inst3 <= 1000 && typeof (error) != "undefined") {_RecordType("<353,358,7>",(error)); Inst3++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (error) != "undefined") {_RecordType("<387,392,8>",(error)); Inst7++; } } catch(e) {}
error.name = error;
try { if (Inst5 <= 1000 && typeof (error.name) != "undefined") {_RecordType("<374,384,8>",(error.name)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (error) != "undefined") {_RecordType("<374,379,8>",(error)); Inst6++; } } catch(e) {}

try { if (Inst12 <= 1000 && typeof (e) != "undefined") {_RecordType("<452,453,13>",(e)); Inst12++; } } catch(e) {}
try {
try { if (Inst8 <= 1000 && typeof (Reflect.apply) != "undefined") {_RecordType("<403,416,11>",(Reflect.apply)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<403,410,11>",(Reflect)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (error) != "undefined") {_RecordType("<417,422,11>",(error)); Inst10++; } } catch(e) {}
  Reflect.apply(error);
  reached = true;
try { if (Inst11 <= 1000 && typeof (reached) != "undefined") {_RecordType("<427,434,12>",(reached)); Inst11++; } } catch(e) {}
} catch (e) {
try { if (Inst13 <= 1000 && typeof (e.stack.indexOf) != "undefined") {_RecordType("<459,474,14>",(e.stack.indexOf)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (e.stack) != "undefined") {_RecordType("<459,466,14>",(e.stack)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (e) != "undefined") {_RecordType("<459,460,14>",(e)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (err_str_1) != "undefined") {_RecordType("<475,484,14>",(err_str_1)); Inst16++; } } catch(e) {}
  e.stack.indexOf(err_str_1) != -1;
} finally {
try { if (Inst17 <= 1000 && typeof (reached) != "undefined") {_RecordType("<507,514,16>",(reached)); Inst17++; } } catch(e) {}
  reached;
}

reached = false;
try { if (Inst18 <= 1000 && typeof (reached) != "undefined") {_RecordType("<519,526,19>",(reached)); Inst18++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (Error) != "undefined") {_RecordType("<548,553,20>",(Error)); Inst20++; } } catch(e) {}
error = new Error();
try { if (Inst19 <= 1000 && typeof (error) != "undefined") {_RecordType("<536,541,20>",(error)); Inst19++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (error) != "undefined") {_RecordType("<569,574,21>",(error)); Inst23++; } } catch(e) {}
error.msg = error;
try { if (Inst21 <= 1000 && typeof (error.msg) != "undefined") {_RecordType("<557,566,21>",(error.msg)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (error) != "undefined") {_RecordType("<557,562,21>",(error)); Inst22++; } } catch(e) {}

try { if (Inst28 <= 1000 && typeof (e) != "undefined") {_RecordType("<634,635,26>",(e)); Inst28++; } } catch(e) {}
try {
try { if (Inst24 <= 1000 && typeof (Reflect.apply) != "undefined") {_RecordType("<585,598,24>",(Reflect.apply)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<585,592,24>",(Reflect)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (error) != "undefined") {_RecordType("<599,604,24>",(error)); Inst26++; } } catch(e) {}
  Reflect.apply(error);
  reached = true;
try { if (Inst27 <= 1000 && typeof (reached) != "undefined") {_RecordType("<609,616,25>",(reached)); Inst27++; } } catch(e) {}
} catch (e) {
try { if (Inst29 <= 1000 && typeof (e.stack.indexOf) != "undefined") {_RecordType("<641,656,27>",(e.stack.indexOf)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (e.stack) != "undefined") {_RecordType("<641,648,27>",(e.stack)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (e) != "undefined") {_RecordType("<641,642,27>",(e)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (err_str_2) != "undefined") {_RecordType("<657,666,27>",(err_str_2)); Inst32++; } } catch(e) {}
  e.stack.indexOf(err_str_2) != -1;
} finally {
try { if (Inst33 <= 1000 && typeof (reached) != "undefined") {_RecordType("<689,696,29>",(reached)); Inst33++; } } catch(e) {}
  reached;
}

reached = false;
try { if (Inst34 <= 1000 && typeof (reached) != "undefined") {_RecordType("<701,708,32>",(reached)); Inst34++; } } catch(e) {}
try { if (Inst36 <= 1000 && typeof (Error) != "undefined") {_RecordType("<730,735,33>",(Error)); Inst36++; } } catch(e) {}
error = new Error();
try { if (Inst35 <= 1000 && typeof (error) != "undefined") {_RecordType("<718,723,33>",(error)); Inst35++; } } catch(e) {}
try { if (Inst39 <= 1000 && typeof (error) != "undefined") {_RecordType("<752,757,34>",(error)); Inst39++; } } catch(e) {}
error.name = error;
try { if (Inst37 <= 1000 && typeof (error.name) != "undefined") {_RecordType("<739,749,34>",(error.name)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (error) != "undefined") {_RecordType("<739,744,34>",(error)); Inst38++; } } catch(e) {}
try { if (Inst42 <= 1000 && typeof (error) != "undefined") {_RecordType("<771,776,35>",(error)); Inst42++; } } catch(e) {}
error.msg = error;
try { if (Inst40 <= 1000 && typeof (error.msg) != "undefined") {_RecordType("<759,768,35>",(error.msg)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (error) != "undefined") {_RecordType("<759,764,35>",(error)); Inst41++; } } catch(e) {}

try { if (Inst47 <= 1000 && typeof (e) != "undefined") {_RecordType("<836,837,40>",(e)); Inst47++; } } catch(e) {}
try {
try { if (Inst43 <= 1000 && typeof (Reflect.apply) != "undefined") {_RecordType("<787,800,38>",(Reflect.apply)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<787,794,38>",(Reflect)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (error) != "undefined") {_RecordType("<801,806,38>",(error)); Inst45++; } } catch(e) {}
  Reflect.apply(error);
  reached = true;
try { if (Inst46 <= 1000 && typeof (reached) != "undefined") {_RecordType("<811,818,39>",(reached)); Inst46++; } } catch(e) {}
} catch (e) {
try { if (Inst48 <= 1000 && typeof (e.stack.indexOf) != "undefined") {_RecordType("<843,858,41>",(e.stack.indexOf)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (e.stack) != "undefined") {_RecordType("<843,850,41>",(e.stack)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (e) != "undefined") {_RecordType("<843,844,41>",(e)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (err_str_1) != "undefined") {_RecordType("<859,868,41>",(err_str_1)); Inst51++; } } catch(e) {}
  e.stack.indexOf(err_str_1) != -1;
} finally {
try { if (Inst52 <= 1000 && typeof (reached) != "undefined") {_RecordType("<891,898,43>",(reached)); Inst52++; } } catch(e) {}
  reached;
}

