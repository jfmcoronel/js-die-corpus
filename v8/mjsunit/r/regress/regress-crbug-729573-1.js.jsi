var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2017 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax
(function () {
try { if (Inst0 <= 1000 && typeof (foo) != "undefined") {_RecordType("<226,229,6>",(foo)); Inst0++; } } catch(e) {}
  function foo() {
try { if (Inst2 <= 1000 && typeof (foo.bind) != "undefined") {_RecordType("<246,254,7>",(foo.bind)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (foo) != "undefined") {_RecordType("<246,249,7>",(foo)); Inst3++; } } catch(e) {}
    var a = foo.bind(this);
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<242,243,7>",(a)); Inst1++; } } catch(e) {}

try { if (Inst4 <= 1000 && typeof (a) != "undefined") {_RecordType("<272,273,9>",(a)); Inst4++; } } catch(e) {}
    if (!a) {
try { if (Inst5 <= 1000 && typeof (a) != "undefined") {_RecordType("<290,291,10>",(a)); Inst5++; } } catch(e) {}
      return a;
    }

    return 0;
  }

  0;
try { if (Inst6 <= 1000 && typeof (foo) != "undefined") {_RecordType("<326,329,17>",(foo)); Inst6++; } } catch(e) {}
  foo();
  0;
try { if (Inst7 <= 1000 && typeof (foo) != "undefined") {_RecordType("<340,343,19>",(foo)); Inst7++; } } catch(e) {}
  foo();
  0;
try { if (Inst8 <= 1000 && typeof (foo) != "undefined") {_RecordType("<354,357,21>",(foo)); Inst8++; } } catch(e) {}
  foo();
})();

(function () {
  "use strict";

try { if (Inst9 <= 1000 && typeof (foo) != "undefined") {_RecordType("<411,414,27>",(foo)); Inst9++; } } catch(e) {}
  function foo() {
try { if (Inst11 <= 1000 && typeof (foo.bind) != "undefined") {_RecordType("<431,439,28>",(foo.bind)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (foo) != "undefined") {_RecordType("<431,434,28>",(foo)); Inst12++; } } catch(e) {}
    var a = foo.bind(this);
try { if (Inst10 <= 1000 && typeof (a) != "undefined") {_RecordType("<427,428,28>",(a)); Inst10++; } } catch(e) {}

try { if (Inst13 <= 1000 && typeof (a) != "undefined") {_RecordType("<457,458,30>",(a)); Inst13++; } } catch(e) {}
    if (!a) {
try { if (Inst14 <= 1000 && typeof (a) != "undefined") {_RecordType("<475,476,31>",(a)); Inst14++; } } catch(e) {}
      return a;
    }

    return 0;
  }

  0;
try { if (Inst15 <= 1000 && typeof (foo) != "undefined") {_RecordType("<511,514,38>",(foo)); Inst15++; } } catch(e) {}
  foo();
  0;
try { if (Inst16 <= 1000 && typeof (foo) != "undefined") {_RecordType("<525,528,40>",(foo)); Inst16++; } } catch(e) {}
  foo();
  0;
try { if (Inst17 <= 1000 && typeof (foo) != "undefined") {_RecordType("<539,542,42>",(foo)); Inst17++; } } catch(e) {}
  foo();
})();

(function () {
try { if (Inst18 <= 1000 && typeof (foo) != "undefined") {_RecordType("<579,582,46>",(foo)); Inst18++; } } catch(e) {}
  function foo() {
try { if (Inst20 <= 1000 && typeof (foo.bind) != "undefined") {_RecordType("<599,607,47>",(foo.bind)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (foo) != "undefined") {_RecordType("<599,602,47>",(foo)); Inst21++; } } catch(e) {}
    var a = foo.bind(this);
try { if (Inst19 <= 1000 && typeof (a) != "undefined") {_RecordType("<595,596,47>",(a)); Inst19++; } } catch(e) {}

try { if (Inst22 <= 1000 && typeof (a) != "undefined") {_RecordType("<625,626,49>",(a)); Inst22++; } } catch(e) {}
    if (!a) {
try { if (Inst23 <= 1000 && typeof (a) != "undefined") {_RecordType("<643,644,50>",(a)); Inst23++; } } catch(e) {}
      return a;
    }

    return 0;
  }

  foo.prototype = {
    custom: "prototype"
  };
try { if (Inst24 <= 1000 && typeof (foo.prototype) != "undefined") {_RecordType("<674,687,56>",(foo.prototype)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (foo) != "undefined") {_RecordType("<674,677,56>",(foo)); Inst25++; } } catch(e) {}
  0;
try { if (Inst26 <= 1000 && typeof (foo) != "undefined") {_RecordType("<728,731,60>",(foo)); Inst26++; } } catch(e) {}
  foo();
  0;
try { if (Inst27 <= 1000 && typeof (foo) != "undefined") {_RecordType("<742,745,62>",(foo)); Inst27++; } } catch(e) {}
  foo();
  0;
try { if (Inst28 <= 1000 && typeof (foo) != "undefined") {_RecordType("<756,759,64>",(foo)); Inst28++; } } catch(e) {}
  foo();
})();

(function () {
  "use strict";

try { if (Inst29 <= 1000 && typeof (foo) != "undefined") {_RecordType("<813,816,70>",(foo)); Inst29++; } } catch(e) {}
  function foo() {
try { if (Inst31 <= 1000 && typeof (foo.bind) != "undefined") {_RecordType("<833,841,71>",(foo.bind)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (foo) != "undefined") {_RecordType("<833,836,71>",(foo)); Inst32++; } } catch(e) {}
    var a = foo.bind(this);
try { if (Inst30 <= 1000 && typeof (a) != "undefined") {_RecordType("<829,830,71>",(a)); Inst30++; } } catch(e) {}

try { if (Inst33 <= 1000 && typeof (a) != "undefined") {_RecordType("<859,860,73>",(a)); Inst33++; } } catch(e) {}
    if (!a) {
try { if (Inst34 <= 1000 && typeof (a) != "undefined") {_RecordType("<877,878,74>",(a)); Inst34++; } } catch(e) {}
      return a;
    }

    return 0;
  }

  foo.prototype = {
    custom: "prototype"
  };
try { if (Inst35 <= 1000 && typeof (foo.prototype) != "undefined") {_RecordType("<908,921,80>",(foo.prototype)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (foo) != "undefined") {_RecordType("<908,911,80>",(foo)); Inst36++; } } catch(e) {}
  0;
try { if (Inst37 <= 1000 && typeof (foo) != "undefined") {_RecordType("<962,965,84>",(foo)); Inst37++; } } catch(e) {}
  foo();
  0;
try { if (Inst38 <= 1000 && typeof (foo) != "undefined") {_RecordType("<976,979,86>",(foo)); Inst38++; } } catch(e) {}
  foo();
  0;
try { if (Inst39 <= 1000 && typeof (foo) != "undefined") {_RecordType("<990,993,88>",(foo)); Inst39++; } } catch(e) {}
  foo();
})();

