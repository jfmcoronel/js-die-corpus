var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2016 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax
try { if (Inst0 <= 1000 && typeof (sloppyPackedArguments) != "undefined") {_RecordType("<210,231,5>",(sloppyPackedArguments)); Inst0++; } } catch(e) {}
(function sloppyPackedArguments() {
try { if (Inst1 <= 1000 && typeof (f) != "undefined") {_RecordType("<247,248,6>",(f)); Inst1++; } } catch(e) {}
  function f(a) {
try { if (Inst2 <= 1000 && typeof (a) != "undefined") {_RecordType("<249,250,6>",(a)); Inst2++; } } catch(e) {}
    for (var i = 0; i < 2; i++) {
try { if (Inst3 <= 1000 && typeof (i) != "undefined") {_RecordType("<267,268,7>",(i)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (i) != "undefined") {_RecordType("<274,275,7>",(i)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (i) != "undefined") {_RecordType("<281,282,7>",(i)); Inst5++; } } catch(e) {}
      a[i] = 0;
try { if (Inst6 <= 1000 && typeof (a[i]) != "undefined") {_RecordType("<294,298,8>",(a[i])); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (a) != "undefined") {_RecordType("<294,295,8>",(a)); Inst7++; } } catch(e) {}
    }
  }

  var boom;
try { if (Inst8 <= 1000 && typeof (boom) != "undefined") {_RecordType("<321,325,12>",(boom)); Inst8++; } } catch(e) {}

try { if (Inst9 <= 1000 && typeof (g) != "undefined") {_RecordType("<339,340,14>",(g)); Inst9++; } } catch(e) {}
  function g() {
try { if (Inst11 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<357,366,15>",(arguments)); Inst11++; } } catch(e) {}
    var a = arguments;
try { if (Inst10 <= 1000 && typeof (a) != "undefined") {_RecordType("<353,354,15>",(a)); Inst10++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (f) != "undefined") {_RecordType("<372,373,16>",(f)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (a) != "undefined") {_RecordType("<374,375,16>",(a)); Inst13++; } } catch(e) {}
    f(a);
try { if (Inst15 <= 1000 && typeof (a[5]) != "undefined") {_RecordType("<389,393,17>",(a[5])); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (a) != "undefined") {_RecordType("<389,390,17>",(a)); Inst16++; } } catch(e) {}
    boom = a[5];
try { if (Inst14 <= 1000 && typeof (boom) != "undefined") {_RecordType("<382,386,17>",(boom)); Inst14++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<399,408,18>",(undefined)); Inst17++; } } catch(e) {}
    undefined;
try { if (Inst18 <= 1000 && typeof (boom) != "undefined") {_RecordType("<414,418,19>",(boom)); Inst18++; } } catch(e) {}
    boom;
  }

try { if (Inst19 <= 1000 && typeof (f) != "undefined") {_RecordType("<427,428,22>",(f)); Inst19++; } } catch(e) {}
  f([]);
try { if (Inst20 <= 1000 && typeof (g) != "undefined") {_RecordType("<436,437,23>",(g)); Inst20++; } } catch(e) {}
  g(1);
})();

try { if (Inst21 <= 1000 && typeof (strictPackedArguments) != "undefined") {_RecordType("<459,480,26>",(strictPackedArguments)); Inst21++; } } catch(e) {}
(function strictPackedArguments() {
  "use strict";

try { if (Inst22 <= 1000 && typeof (f) != "undefined") {_RecordType("<513,514,29>",(f)); Inst22++; } } catch(e) {}
  function f(a) {
try { if (Inst23 <= 1000 && typeof (a) != "undefined") {_RecordType("<515,516,29>",(a)); Inst23++; } } catch(e) {}
    for (var i = 0; i < 2; i++) {
try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<533,534,30>",(i)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<540,541,30>",(i)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (i) != "undefined") {_RecordType("<547,548,30>",(i)); Inst26++; } } catch(e) {}
      a[i] = 0;
try { if (Inst27 <= 1000 && typeof (a[i]) != "undefined") {_RecordType("<560,564,31>",(a[i])); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (a) != "undefined") {_RecordType("<560,561,31>",(a)); Inst28++; } } catch(e) {}
    }
  }

  var boom;
try { if (Inst29 <= 1000 && typeof (boom) != "undefined") {_RecordType("<587,591,35>",(boom)); Inst29++; } } catch(e) {}

try { if (Inst30 <= 1000 && typeof (g) != "undefined") {_RecordType("<605,606,37>",(g)); Inst30++; } } catch(e) {}
  function g() {
try { if (Inst32 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<623,632,38>",(arguments)); Inst32++; } } catch(e) {}
    var a = arguments;
try { if (Inst31 <= 1000 && typeof (a) != "undefined") {_RecordType("<619,620,38>",(a)); Inst31++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (f) != "undefined") {_RecordType("<638,639,39>",(f)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (a) != "undefined") {_RecordType("<640,641,39>",(a)); Inst34++; } } catch(e) {}
    f(a);
try { if (Inst36 <= 1000 && typeof (a[5]) != "undefined") {_RecordType("<655,659,40>",(a[5])); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (a) != "undefined") {_RecordType("<655,656,40>",(a)); Inst37++; } } catch(e) {}
    boom = a[5];
try { if (Inst35 <= 1000 && typeof (boom) != "undefined") {_RecordType("<648,652,40>",(boom)); Inst35++; } } catch(e) {}
try { if (Inst38 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<665,674,41>",(undefined)); Inst38++; } } catch(e) {}
    undefined;
try { if (Inst39 <= 1000 && typeof (boom) != "undefined") {_RecordType("<680,684,42>",(boom)); Inst39++; } } catch(e) {}
    boom;
  }

try { if (Inst40 <= 1000 && typeof (f) != "undefined") {_RecordType("<693,694,45>",(f)); Inst40++; } } catch(e) {}
  f([]);
try { if (Inst41 <= 1000 && typeof (g) != "undefined") {_RecordType("<702,703,46>",(g)); Inst41++; } } catch(e) {}
  g(1);
})();

