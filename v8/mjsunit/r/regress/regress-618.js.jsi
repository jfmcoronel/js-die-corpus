var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2010 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// Simple class using inline constructor.
try { if (Inst0 <= 1000 && typeof (C1) != "undefined") {_RecordType("<1648,1650,28>",(C1)); Inst0++; } } catch(e) {}
function C1() {
  this.x = 23;
try { if (Inst1 <= 1000 && typeof (this.x) != "undefined") {_RecordType("<1657,1663,29>",(this.x)); Inst1++; } } catch(e) {}
}

;
try { if (Inst3 <= 1000 && typeof (C1) != "undefined") {_RecordType("<1688,1690,33>",(C1)); Inst3++; } } catch(e) {}
var c1 = new C1();
try { if (Inst2 <= 1000 && typeof (c1) != "undefined") {_RecordType("<1679,1681,33>",(c1)); Inst2++; } } catch(e) {}
23;
try { if (Inst4 <= 1000 && typeof (c1.x) != "undefined") {_RecordType("<1698,1702,35>",(c1.x)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (c1) != "undefined") {_RecordType("<1698,1700,35>",(c1)); Inst5++; } } catch(e) {}
c1.x;
"undefined";
try { if (Inst6 <= 1000 && typeof (c1.y) != "undefined") {_RecordType("<1724,1728,37>",(c1.y)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (c1) != "undefined") {_RecordType("<1724,1726,37>",(c1)); Inst7++; } } catch(e) {}
typeof c1.y;
// Add setter somewhere on the prototype chain after having constructed the
// first instance.
try { if (Inst10 <= 1000 && typeof (x) != "undefined") {_RecordType("<1848,1849,41>",(x)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (value) != "undefined") {_RecordType("<1850,1855,41>",(value)); Inst11++; } } catch(e) {}
C1.prototype = {
  set x(value) {
    this.y = 23;
try { if (Inst12 <= 1000 && typeof (this.y) != "undefined") {_RecordType("<1863,1869,42>",(this.y)); Inst12++; } } catch(e) {}
  }

};
try { if (Inst8 <= 1000 && typeof (C1.prototype) != "undefined") {_RecordType("<1825,1837,40>",(C1.prototype)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (C1) != "undefined") {_RecordType("<1825,1827,40>",(C1)); Inst9++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (C1) != "undefined") {_RecordType("<1897,1899,46>",(C1)); Inst14++; } } catch(e) {}
var c1 = new C1();
try { if (Inst13 <= 1000 && typeof (c1) != "undefined") {_RecordType("<1888,1890,46>",(c1)); Inst13++; } } catch(e) {}
"undefined";
try { if (Inst15 <= 1000 && typeof (c1.x) != "undefined") {_RecordType("<1923,1927,48>",(c1.x)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (c1) != "undefined") {_RecordType("<1923,1925,48>",(c1)); Inst16++; } } catch(e) {}
typeof c1.x;
23;
try { if (Inst17 <= 1000 && typeof (c1.y) != "undefined") {_RecordType("<1933,1937,50>",(c1.y)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (c1) != "undefined") {_RecordType("<1933,1935,50>",(c1)); Inst18++; } } catch(e) {}
c1.y;

// Simple class using inline constructor.
try { if (Inst19 <= 1000 && typeof (C2) != "undefined") {_RecordType("<1991,1993,53>",(C2)); Inst19++; } } catch(e) {}
function C2() {
  this.x = 23;
try { if (Inst20 <= 1000 && typeof (this.x) != "undefined") {_RecordType("<2000,2006,54>",(this.x)); Inst20++; } } catch(e) {}
}

;
try { if (Inst22 <= 1000 && typeof (C2) != "undefined") {_RecordType("<2031,2033,58>",(C2)); Inst22++; } } catch(e) {}
var c2 = new C2();
try { if (Inst21 <= 1000 && typeof (c2) != "undefined") {_RecordType("<2022,2024,58>",(c2)); Inst21++; } } catch(e) {}
23;
try { if (Inst23 <= 1000 && typeof (c2.x) != "undefined") {_RecordType("<2041,2045,60>",(c2.x)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (c2) != "undefined") {_RecordType("<2041,2043,60>",(c2)); Inst24++; } } catch(e) {}
c2.x;
"undefined";
try { if (Inst25 <= 1000 && typeof (c2.y) != "undefined") {_RecordType("<2067,2071,62>",(c2.y)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (c2) != "undefined") {_RecordType("<2067,2069,62>",(c2)); Inst26++; } } catch(e) {}
typeof c2.y;
// Add setter somewhere on the prototype chain after having constructed the
// first instance.
try { if (Inst30 <= 1000 && typeof (x) != "undefined") {_RecordType("<2201,2202,66>",(x)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (value) != "undefined") {_RecordType("<2203,2208,66>",(value)); Inst31++; } } catch(e) {}
C2.prototype.__proto__ = {
  set x(value) {
    this.y = 23;
try { if (Inst32 <= 1000 && typeof (this.y) != "undefined") {_RecordType("<2216,2222,67>",(this.y)); Inst32++; } } catch(e) {}
  }

};
try { if (Inst27 <= 1000 && typeof (C2.prototype.__proto__) != "undefined") {_RecordType("<2168,2190,65>",(C2.prototype.__proto__)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (C2.prototype) != "undefined") {_RecordType("<2168,2180,65>",(C2.prototype)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (C2) != "undefined") {_RecordType("<2168,2170,65>",(C2)); Inst29++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof (C2) != "undefined") {_RecordType("<2250,2252,71>",(C2)); Inst34++; } } catch(e) {}
var c2 = new C2();
try { if (Inst33 <= 1000 && typeof (c2) != "undefined") {_RecordType("<2241,2243,71>",(c2)); Inst33++; } } catch(e) {}
"undefined";
try { if (Inst35 <= 1000 && typeof (c2.x) != "undefined") {_RecordType("<2276,2280,73>",(c2.x)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (c2) != "undefined") {_RecordType("<2276,2278,73>",(c2)); Inst36++; } } catch(e) {}
typeof c2.x;
23;
try { if (Inst37 <= 1000 && typeof (c2.y) != "undefined") {_RecordType("<2286,2290,75>",(c2.y)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (c2) != "undefined") {_RecordType("<2286,2288,75>",(c2)); Inst38++; } } catch(e) {}
c2.y;

// Simple class using inline constructor.
try { if (Inst39 <= 1000 && typeof (C3) != "undefined") {_RecordType("<2344,2346,78>",(C3)); Inst39++; } } catch(e) {}
function C3() {
  this.x = 23;
try { if (Inst40 <= 1000 && typeof (this.x) != "undefined") {_RecordType("<2353,2359,79>",(this.x)); Inst40++; } } catch(e) {}
}

;
try { if (Inst42 <= 1000 && typeof (C3) != "undefined") {_RecordType("<2384,2386,83>",(C3)); Inst42++; } } catch(e) {}
var c3 = new C3();
try { if (Inst41 <= 1000 && typeof (c3) != "undefined") {_RecordType("<2375,2377,83>",(c3)); Inst41++; } } catch(e) {}
23;
try { if (Inst43 <= 1000 && typeof (c3.x) != "undefined") {_RecordType("<2394,2398,85>",(c3.x)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (c3) != "undefined") {_RecordType("<2394,2396,85>",(c3)); Inst44++; } } catch(e) {}
c3.x;
"undefined";
try { if (Inst45 <= 1000 && typeof (c3.y) != "undefined") {_RecordType("<2420,2424,87>",(c3.y)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (c3) != "undefined") {_RecordType("<2420,2422,87>",(c3)); Inst46++; } } catch(e) {}
typeof c3.y;

// Add setter somewhere on the prototype chain after having constructed the
// first instance.
try { if (Inst47 <= 1000 && typeof (C3.prototype.__defineSetter__) != "undefined") {_RecordType("<2522,2551,91>",(C3.prototype.__defineSetter__)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (C3.prototype) != "undefined") {_RecordType("<2522,2534,91>",(C3.prototype)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (C3) != "undefined") {_RecordType("<2522,2524,91>",(C3)); Inst49++; } } catch(e) {}
C3.prototype.__defineSetter__('x', function (value) {
try { if (Inst50 <= 1000 && typeof (value) != "undefined") {_RecordType("<2567,2572,91>",(value)); Inst50++; } } catch(e) {}
  this.y = 23;
try { if (Inst51 <= 1000 && typeof (this.y) != "undefined") {_RecordType("<2578,2584,92>",(this.y)); Inst51++; } } catch(e) {}
});

try { if (Inst53 <= 1000 && typeof (C3) != "undefined") {_RecordType("<2609,2611,95>",(C3)); Inst53++; } } catch(e) {}
var c3 = new C3();
try { if (Inst52 <= 1000 && typeof (c3) != "undefined") {_RecordType("<2600,2602,95>",(c3)); Inst52++; } } catch(e) {}
"undefined";
try { if (Inst54 <= 1000 && typeof (c3.x) != "undefined") {_RecordType("<2635,2639,97>",(c3.x)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (c3) != "undefined") {_RecordType("<2635,2637,97>",(c3)); Inst55++; } } catch(e) {}
typeof c3.x;
23;
try { if (Inst56 <= 1000 && typeof (c3.y) != "undefined") {_RecordType("<2645,2649,99>",(c3.y)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (c3) != "undefined") {_RecordType("<2645,2647,99>",(c3)); Inst57++; } } catch(e) {}
c3.y;

// Simple class using inline constructor.
try { if (Inst58 <= 1000 && typeof (C4) != "undefined") {_RecordType("<2703,2705,102>",(C4)); Inst58++; } } catch(e) {}
function C4() {
  this.x = 23;
try { if (Inst59 <= 1000 && typeof (this.x) != "undefined") {_RecordType("<2712,2718,103>",(this.x)); Inst59++; } } catch(e) {}
}

;
try { if (Inst61 <= 1000 && typeof (C4) != "undefined") {_RecordType("<2743,2745,107>",(C4)); Inst61++; } } catch(e) {}
var c4 = new C4();
try { if (Inst60 <= 1000 && typeof (c4) != "undefined") {_RecordType("<2734,2736,107>",(c4)); Inst60++; } } catch(e) {}
23;
try { if (Inst62 <= 1000 && typeof (c4.x) != "undefined") {_RecordType("<2753,2757,109>",(c4.x)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (c4) != "undefined") {_RecordType("<2753,2755,109>",(c4)); Inst63++; } } catch(e) {}
c4.x;
"undefined";
try { if (Inst64 <= 1000 && typeof (c4.y) != "undefined") {_RecordType("<2779,2783,111>",(c4.y)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (c4) != "undefined") {_RecordType("<2779,2781,111>",(c4)); Inst65++; } } catch(e) {}
typeof c4.y;

// Add setter somewhere on the prototype chain after having constructed the
// first instance.
try { if (Inst66 <= 1000 && typeof (C4.prototype.__proto__.__defineSetter__) != "undefined") {_RecordType("<2881,2920,115>",(C4.prototype.__proto__.__defineSetter__)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (C4.prototype.__proto__) != "undefined") {_RecordType("<2881,2903,115>",(C4.prototype.__proto__)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (C4.prototype) != "undefined") {_RecordType("<2881,2893,115>",(C4.prototype)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (C4) != "undefined") {_RecordType("<2881,2883,115>",(C4)); Inst69++; } } catch(e) {}
C4.prototype.__proto__.__defineSetter__('x', function (value) {
try { if (Inst70 <= 1000 && typeof (value) != "undefined") {_RecordType("<2936,2941,115>",(value)); Inst70++; } } catch(e) {}
  this.y = 23;
try { if (Inst71 <= 1000 && typeof (this.y) != "undefined") {_RecordType("<2947,2953,116>",(this.y)); Inst71++; } } catch(e) {}
});

try { if (Inst73 <= 1000 && typeof (C4) != "undefined") {_RecordType("<2978,2980,119>",(C4)); Inst73++; } } catch(e) {}
var c4 = new C4();
try { if (Inst72 <= 1000 && typeof (c4) != "undefined") {_RecordType("<2969,2971,119>",(c4)); Inst72++; } } catch(e) {}
"undefined";
try { if (Inst74 <= 1000 && typeof (c4.x) != "undefined") {_RecordType("<3004,3008,121>",(c4.x)); Inst74++; } } catch(e) {}try { if (Inst75 <= 1000 && typeof (c4) != "undefined") {_RecordType("<3004,3006,121>",(c4)); Inst75++; } } catch(e) {}
typeof c4.x;
23;
try { if (Inst76 <= 1000 && typeof (c4.y) != "undefined") {_RecordType("<3014,3018,123>",(c4.y)); Inst76++; } } catch(e) {}try { if (Inst77 <= 1000 && typeof (c4) != "undefined") {_RecordType("<3014,3016,123>",(c4)); Inst77++; } } catch(e) {}
c4.y;

