var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2016 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --expose-gc --allow-natives-syntax
try { if (Inst0 <= 1000 && typeof (getRandomProperty) != "undefined") {_RecordType("<221,238,5>",(getRandomProperty)); Inst0++; } } catch(e) {}
function getRandomProperty(v, rand) {
try { if (Inst1 <= 1000 && typeof (v) != "undefined") {_RecordType("<239,240,5>",(v)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (rand) != "undefined") {_RecordType("<242,246,5>",(rand)); Inst2++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (Object.getOwnPropertyNames) != "undefined") {_RecordType("<269,295,6>",(Object.getOwnPropertyNames)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Object) != "undefined") {_RecordType("<269,275,6>",(Object)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (v) != "undefined") {_RecordType("<296,297,6>",(v)); Inst6++; } } catch(e) {}
  var properties = Object.getOwnPropertyNames(v);
try { if (Inst3 <= 1000 && typeof (properties) != "undefined") {_RecordType("<256,266,6>",(properties)); Inst3++; } } catch(e) {}

try { if (Inst7 <= 1000 && typeof (v.constructor.hasOwnProperty) != "undefined") {_RecordType("<324,352,8>",(v.constructor.hasOwnProperty)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (v.constructor) != "undefined") {_RecordType("<324,337,8>",(v.constructor)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (v) != "undefined") {_RecordType("<324,325,8>",(v)); Inst9++; } } catch(e) {}
  if ("constructor" && v.constructor.hasOwnProperty()) {
    ;
  }

try { if (Inst10 <= 1000 && typeof (properties.length) != "undefined") {_RecordType("<375,392,12>",(properties.length)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (properties) != "undefined") {_RecordType("<375,385,12>",(properties)); Inst11++; } } catch(e) {}
  if (properties.length == 0) {
    return "0";
  }

try { if (Inst12 <= 1000 && typeof (properties[rand % properties.length]) != "undefined") {_RecordType("<431,467,16>",(properties[rand % properties.length])); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (properties) != "undefined") {_RecordType("<431,441,16>",(properties)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (rand) != "undefined") {_RecordType("<442,446,16>",(rand)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (properties.length) != "undefined") {_RecordType("<449,466,16>",(properties.length)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (properties) != "undefined") {_RecordType("<449,459,16>",(properties)); Inst16++; } } catch(e) {}
  return properties[rand % properties.length];
}

try { if (Inst20 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<527,530,21>",(NaN)); Inst20++; } } catch(e) {}
var args = function (b) {
try { if (Inst18 <= 1000 && typeof (b) != "undefined") {_RecordType("<493,494,19>",(b)); Inst18++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<507,516,20>",(arguments)); Inst19++; } } catch(e) {}
  return arguments;
}("foo", NaN, "bar");
try { if (Inst17 <= 1000 && typeof (args) != "undefined") {_RecordType("<476,480,19>",(args)); Inst17++; } } catch(e) {}

args.__p_293850326 = "foo";
try { if (Inst21 <= 1000 && typeof (args.__p_293850326) != "undefined") {_RecordType("<541,559,23>",(args.__p_293850326)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (args) != "undefined") {_RecordType("<541,545,23>",(args)); Inst22++; } } catch(e) {}

try { if (Inst23 <= 1000 && typeof (args.__defineGetter__) != "undefined") {_RecordType("<570,591,25>",(args.__defineGetter__)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (args) != "undefined") {_RecordType("<570,574,25>",(args)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (getRandomProperty) != "undefined") {_RecordType("<592,609,25>",(getRandomProperty)); Inst25++; } } catch(e) {}
args.__defineGetter__(getRandomProperty(990787501), function () {
try { if (Inst26 <= 1000 && typeof (gc) != "undefined") {_RecordType("<638,640,26>",(gc)); Inst26++; } } catch(e) {}
  gc();
try { if (Inst27 <= 1000 && typeof (args.__p_293850326) != "undefined") {_RecordType("<653,671,27>",(args.__p_293850326)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (args) != "undefined") {_RecordType("<653,657,27>",(args)); Inst28++; } } catch(e) {}
  return args.__p_293850326;
});

try { if (Inst29 <= 1000 && typeof (Array.prototype.indexOf.call) != "undefined") {_RecordType("<678,706,30>",(Array.prototype.indexOf.call)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (Array.prototype.indexOf) != "undefined") {_RecordType("<678,701,30>",(Array.prototype.indexOf)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<678,693,30>",(Array.prototype)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (Array) != "undefined") {_RecordType("<678,683,30>",(Array)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (args) != "undefined") {_RecordType("<707,711,30>",(args)); Inst33++; } } catch(e) {}
Array.prototype.indexOf.call(args);

