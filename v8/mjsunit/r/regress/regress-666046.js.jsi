var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2016 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax --expose-gc
try { if (Inst0 <= 1000 && typeof (P) != "undefined") {_RecordType("<221,222,5>",(P)); Inst0++; } } catch(e) {}
function P() {
  this.a0 = {};
try { if (Inst1 <= 1000 && typeof (this.a0) != "undefined") {_RecordType("<229,236,6>",(this.a0)); Inst1++; } } catch(e) {}
  this.a1 = {};
try { if (Inst2 <= 1000 && typeof (this.a1) != "undefined") {_RecordType("<245,252,7>",(this.a1)); Inst2++; } } catch(e) {}
  this.a2 = {};
try { if (Inst3 <= 1000 && typeof (this.a2) != "undefined") {_RecordType("<261,268,8>",(this.a2)); Inst3++; } } catch(e) {}
  this.a3 = {};
try { if (Inst4 <= 1000 && typeof (this.a3) != "undefined") {_RecordType("<277,284,9>",(this.a3)); Inst4++; } } catch(e) {}
  this.a4 = {};
try { if (Inst5 <= 1000 && typeof (this.a4) != "undefined") {_RecordType("<293,300,10>",(this.a4)); Inst5++; } } catch(e) {}
}

try { if (Inst6 <= 1000 && typeof (A) != "undefined") {_RecordType("<319,320,13>",(A)); Inst6++; } } catch(e) {}
function A() {
  ;
}

try { if (Inst8 <= 1000 && typeof (P) != "undefined") {_RecordType("<348,349,17>",(P)); Inst8++; } } catch(e) {}
var proto = new P();
try { if (Inst7 <= 1000 && typeof (proto) != "undefined") {_RecordType("<336,341,17>",(proto)); Inst7++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (proto) != "undefined") {_RecordType("<367,372,18>",(proto)); Inst11++; } } catch(e) {}
A.prototype = proto;
try { if (Inst9 <= 1000 && typeof (A.prototype) != "undefined") {_RecordType("<353,364,18>",(A.prototype)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (A) != "undefined") {_RecordType("<353,354,18>",(A)); Inst10++; } } catch(e) {}

try { if (Inst12 <= 1000 && typeof (foo) != "undefined") {_RecordType("<384,387,20>",(foo)); Inst12++; } } catch(e) {}
function foo(o) {
try { if (Inst13 <= 1000 && typeof (o) != "undefined") {_RecordType("<388,389,20>",(o)); Inst13++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (o.a0) != "undefined") {_RecordType("<402,406,21>",(o.a0)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (o) != "undefined") {_RecordType("<402,403,21>",(o)); Inst15++; } } catch(e) {}
  return o.a0;
} // Ensure |proto| is in old space.


try { if (Inst16 <= 1000 && typeof (gc) != "undefined") {_RecordType("<447,449,25>",(gc)); Inst16++; } } catch(e) {}
gc();
try { if (Inst17 <= 1000 && typeof (gc) != "undefined") {_RecordType("<453,455,26>",(gc)); Inst17++; } } catch(e) {}
gc();
try { if (Inst18 <= 1000 && typeof (gc) != "undefined") {_RecordType("<459,461,27>",(gc)); Inst18++; } } catch(e) {}
gc(); // Ensure |proto| is marked as "should be fast".

try { if (Inst20 <= 1000 && typeof (A) != "undefined") {_RecordType("<527,528,29>",(A)); Inst20++; } } catch(e) {}
var o = new A();
try { if (Inst19 <= 1000 && typeof (o) != "undefined") {_RecordType("<519,520,29>",(o)); Inst19++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (foo) != "undefined") {_RecordType("<532,535,30>",(foo)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (o) != "undefined") {_RecordType("<536,537,30>",(o)); Inst22++; } } catch(e) {}
foo(o);
try { if (Inst23 <= 1000 && typeof (foo) != "undefined") {_RecordType("<540,543,31>",(foo)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (o) != "undefined") {_RecordType("<544,545,31>",(o)); Inst24++; } } catch(e) {}
foo(o);
try { if (Inst25 <= 1000 && typeof (foo) != "undefined") {_RecordType("<548,551,32>",(foo)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (o) != "undefined") {_RecordType("<552,553,32>",(o)); Inst26++; } } catch(e) {}
foo(o); // Contruct a double value that looks like a tagged pointer.

try { if (Inst28 <= 1000 && typeof (ArrayBuffer) != "undefined") {_RecordType("<635,646,34>",(ArrayBuffer)); Inst28++; } } catch(e) {}
var buffer = new ArrayBuffer(8);
try { if (Inst27 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<622,628,34>",(buffer)); Inst27++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (Int32Array) != "undefined") {_RecordType("<671,681,35>",(Int32Array)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<682,688,35>",(buffer)); Inst31++; } } catch(e) {}
var int32view = new Int32Array(buffer);
try { if (Inst29 <= 1000 && typeof (int32view) != "undefined") {_RecordType("<655,664,35>",(int32view)); Inst29++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (Float64Array) != "undefined") {_RecordType("<713,725,36>",(Float64Array)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<726,732,36>",(buffer)); Inst34++; } } catch(e) {}
var float64view = new Float64Array(buffer);
try { if (Inst32 <= 1000 && typeof (float64view) != "undefined") {_RecordType("<695,706,36>",(float64view)); Inst32++; } } catch(e) {}
int32view[0] = int32view[1] = 0x40000001;
try { if (Inst35 <= 1000 && typeof (int32view[0]) != "undefined") {_RecordType("<735,747,37>",(int32view[0])); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (int32view) != "undefined") {_RecordType("<735,744,37>",(int32view)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (int32view[1]) != "undefined") {_RecordType("<750,762,37>",(int32view[1])); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (int32view) != "undefined") {_RecordType("<750,759,37>",(int32view)); Inst38++; } } catch(e) {}
try { if (Inst40 <= 1000 && typeof (float64view[0]) != "undefined") {_RecordType("<788,802,38>",(float64view[0])); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (float64view) != "undefined") {_RecordType("<788,799,38>",(float64view)); Inst41++; } } catch(e) {}
var boom = float64view[0]; // Write new space object.
try { if (Inst39 <= 1000 && typeof (boom) != "undefined") {_RecordType("<781,785,38>",(boom)); Inst39++; } } catch(e) {}

proto.a4 = {
  a: 0
}; // Immediately delete the field.
try { if (Inst42 <= 1000 && typeof (proto.a4) != "undefined") {_RecordType("<832,840,40>",(proto.a4)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (proto) != "undefined") {_RecordType("<832,837,40>",(proto)); Inst43++; } } catch(e) {}

try { if (Inst44 <= 1000 && typeof (proto.a4) != "undefined") {_RecordType("<896,904,44>",(proto.a4)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (proto) != "undefined") {_RecordType("<896,901,44>",(proto)); Inst45++; } } catch(e) {}
delete proto.a4; // |proto| must sill be fast.
// Add a double field instead of deleted a4 that looks like a tagged pointer.

try { if (Inst48 <= 1000 && typeof (boom) != "undefined") {_RecordType("<1028,1032,47>",(boom)); Inst48++; } } catch(e) {}
proto.boom = boom; // Boom!
try { if (Inst46 <= 1000 && typeof (proto.boom) != "undefined") {_RecordType("<1015,1025,47>",(proto.boom)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (proto) != "undefined") {_RecordType("<1015,1020,47>",(proto)); Inst47++; } } catch(e) {}

try { if (Inst49 <= 1000 && typeof (gc) != "undefined") {_RecordType("<1044,1046,49>",(gc)); Inst49++; } } catch(e) {}
gc();

