var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
var Inst102 = 0;
var Inst103 = 0;
var Inst104 = 0;
var Inst105 = 0;
var Inst106 = 0;
var Inst107 = 0;
var Inst108 = 0;
var Inst109 = 0;
var Inst110 = 0;
var Inst111 = 0;
var Inst112 = 0;
var Inst113 = 0;
var Inst114 = 0;
var Inst115 = 0;
var Inst116 = 0;
var Inst117 = 0;
var Inst118 = 0;
var Inst119 = 0;
var Inst120 = 0;
var Inst121 = 0;
var Inst122 = 0;
var Inst123 = 0;
var Inst124 = 0;
var Inst125 = 0;
var Inst126 = 0;
var Inst127 = 0;
var Inst128 = 0;
var Inst129 = 0;
var Inst130 = 0;
var Inst131 = 0;
var Inst132 = 0;
var Inst133 = 0;
var Inst134 = 0;
var Inst135 = 0;
var Inst136 = 0;
var Inst137 = 0;
var Inst138 = 0;
var Inst139 = 0;
var Inst140 = 0;
var Inst141 = 0;
var Inst142 = 0;
var Inst143 = 0;
var Inst144 = 0;
var Inst145 = 0;
var Inst146 = 0;
var Inst147 = 0;
var Inst148 = 0;
var Inst149 = 0;
var Inst150 = 0;
var Inst151 = 0;
var Inst152 = 0;
var Inst153 = 0;
var Inst154 = 0;
var Inst155 = 0;
var Inst156 = 0;
var Inst157 = 0;
var Inst158 = 0;
var Inst159 = 0;
var Inst160 = 0;
var Inst161 = 0;
var Inst162 = 0;
var Inst163 = 0;
var Inst164 = 0;
var Inst165 = 0;
var Inst166 = 0;
var Inst167 = 0;
var Inst168 = 0;
var Inst169 = 0;
var Inst170 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2012 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// Summary of the spec: lastIndex is reset to 0 if
// - a global or sticky regexp fails to match.
// - a global regexp is used in a function that returns multiple results,
//   such as String.prototype.replace or String.prototype.match, since it
//   repeats the regexp until it fails to match.
// Otherwise lastIndex is only set when a global regexp matches, to the index
// after the match.
// Test Regexp.prototype.exec
r = /a/;
try { if (Inst0 <= 1000 && typeof (r) != "undefined") {_RecordType("<2020,2021,35>",(r)); Inst0++; } } catch(e) {}
r.lastIndex = 1;
try { if (Inst1 <= 1000 && typeof (r.lastIndex) != "undefined") {_RecordType("<2029,2040,36>",(r.lastIndex)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (r) != "undefined") {_RecordType("<2029,2030,36>",(r)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (r.exec) != "undefined") {_RecordType("<2046,2052,37>",(r.exec)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (r) != "undefined") {_RecordType("<2046,2047,37>",(r)); Inst4++; } } catch(e) {}
r.exec("zzzz");
1;
try { if (Inst5 <= 1000 && typeof (r.lastIndex) != "undefined") {_RecordType("<2065,2076,39>",(r.lastIndex)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (r) != "undefined") {_RecordType("<2065,2066,39>",(r)); Inst6++; } } catch(e) {}
r.lastIndex;
// Test Regexp.prototype.test
r = /a/;
try { if (Inst7 <= 1000 && typeof (r) != "undefined") {_RecordType("<2108,2109,41>",(r)); Inst7++; } } catch(e) {}
r.lastIndex = 1;
try { if (Inst8 <= 1000 && typeof (r.lastIndex) != "undefined") {_RecordType("<2117,2128,42>",(r.lastIndex)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (r) != "undefined") {_RecordType("<2117,2118,42>",(r)); Inst9++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (r.test) != "undefined") {_RecordType("<2134,2140,43>",(r.test)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (r) != "undefined") {_RecordType("<2134,2135,43>",(r)); Inst11++; } } catch(e) {}
r.test("zzzz");
1;
try { if (Inst12 <= 1000 && typeof (r.lastIndex) != "undefined") {_RecordType("<2153,2164,45>",(r.lastIndex)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (r) != "undefined") {_RecordType("<2153,2154,45>",(r)); Inst13++; } } catch(e) {}
r.lastIndex;
// Test String.prototype.match
r = /a/;
try { if (Inst14 <= 1000 && typeof (r) != "undefined") {_RecordType("<2197,2198,47>",(r)); Inst14++; } } catch(e) {}
r.lastIndex = 1;
try { if (Inst15 <= 1000 && typeof (r.lastIndex) != "undefined") {_RecordType("<2206,2217,48>",(r.lastIndex)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (r) != "undefined") {_RecordType("<2206,2207,48>",(r)); Inst16++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof ("zzzz".match) != "undefined") {_RecordType("<2223,2235,49>",("zzzz".match)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (r) != "undefined") {_RecordType("<2236,2237,49>",(r)); Inst18++; } } catch(e) {}
"zzzz".match(r);
1;
try { if (Inst19 <= 1000 && typeof (r.lastIndex) != "undefined") {_RecordType("<2243,2254,51>",(r.lastIndex)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (r) != "undefined") {_RecordType("<2243,2244,51>",(r)); Inst20++; } } catch(e) {}
r.lastIndex;
// Test String.prototype.replace with atomic regexp and empty string.
r = /a/;
try { if (Inst21 <= 1000 && typeof (r) != "undefined") {_RecordType("<2326,2327,53>",(r)); Inst21++; } } catch(e) {}
r.lastIndex = 1;
try { if (Inst22 <= 1000 && typeof (r.lastIndex) != "undefined") {_RecordType("<2335,2346,54>",(r.lastIndex)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (r) != "undefined") {_RecordType("<2335,2336,54>",(r)); Inst23++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof ("zzzz".replace) != "undefined") {_RecordType("<2352,2366,55>",("zzzz".replace)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (r) != "undefined") {_RecordType("<2367,2368,55>",(r)); Inst25++; } } catch(e) {}
"zzzz".replace(r, "");
1;
try { if (Inst26 <= 1000 && typeof (r.lastIndex) != "undefined") {_RecordType("<2378,2389,57>",(r.lastIndex)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (r) != "undefined") {_RecordType("<2378,2379,57>",(r)); Inst27++; } } catch(e) {}
r.lastIndex;
// Test String.prototype.replace with non-atomic regexp and empty string.
r = /\d/;
try { if (Inst28 <= 1000 && typeof (r) != "undefined") {_RecordType("<2465,2466,59>",(r)); Inst28++; } } catch(e) {}
r.lastIndex = 1;
try { if (Inst29 <= 1000 && typeof (r.lastIndex) != "undefined") {_RecordType("<2475,2486,60>",(r.lastIndex)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (r) != "undefined") {_RecordType("<2475,2476,60>",(r)); Inst30++; } } catch(e) {}
try { if (Inst31 <= 1000 && typeof ("zzzz".replace) != "undefined") {_RecordType("<2492,2506,61>",("zzzz".replace)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (r) != "undefined") {_RecordType("<2507,2508,61>",(r)); Inst32++; } } catch(e) {}
"zzzz".replace(r, "");
1;
try { if (Inst33 <= 1000 && typeof (r.lastIndex) != "undefined") {_RecordType("<2518,2529,63>",(r.lastIndex)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (r) != "undefined") {_RecordType("<2518,2519,63>",(r)); Inst34++; } } catch(e) {}
r.lastIndex;
// Test String.prototype.replace with atomic regexp and non-empty string.
r = /a/;
try { if (Inst35 <= 1000 && typeof (r) != "undefined") {_RecordType("<2605,2606,65>",(r)); Inst35++; } } catch(e) {}
r.lastIndex = 1;
try { if (Inst36 <= 1000 && typeof (r.lastIndex) != "undefined") {_RecordType("<2614,2625,66>",(r.lastIndex)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (r) != "undefined") {_RecordType("<2614,2615,66>",(r)); Inst37++; } } catch(e) {}
try { if (Inst38 <= 1000 && typeof ("zzzz".replace) != "undefined") {_RecordType("<2631,2645,67>",("zzzz".replace)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (r) != "undefined") {_RecordType("<2646,2647,67>",(r)); Inst39++; } } catch(e) {}
"zzzz".replace(r, "a");
1;
try { if (Inst40 <= 1000 && typeof (r.lastIndex) != "undefined") {_RecordType("<2658,2669,69>",(r.lastIndex)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (r) != "undefined") {_RecordType("<2658,2659,69>",(r)); Inst41++; } } catch(e) {}
r.lastIndex;
// Test String.prototype.replace with non-atomic regexp and non-empty string.
r = /\d/;
try { if (Inst42 <= 1000 && typeof (r) != "undefined") {_RecordType("<2749,2750,71>",(r)); Inst42++; } } catch(e) {}
r.lastIndex = 1;
try { if (Inst43 <= 1000 && typeof (r.lastIndex) != "undefined") {_RecordType("<2759,2770,72>",(r.lastIndex)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (r) != "undefined") {_RecordType("<2759,2760,72>",(r)); Inst44++; } } catch(e) {}
try { if (Inst45 <= 1000 && typeof ("zzzz".replace) != "undefined") {_RecordType("<2776,2790,73>",("zzzz".replace)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (r) != "undefined") {_RecordType("<2791,2792,73>",(r)); Inst46++; } } catch(e) {}
"zzzz".replace(r, "a");
1;
try { if (Inst47 <= 1000 && typeof (r.lastIndex) != "undefined") {_RecordType("<2803,2814,75>",(r.lastIndex)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (r) != "undefined") {_RecordType("<2803,2804,75>",(r)); Inst48++; } } catch(e) {}
r.lastIndex;
// Test String.prototype.replace with replacement function
r = /a/;
try { if (Inst49 <= 1000 && typeof (r) != "undefined") {_RecordType("<2875,2876,77>",(r)); Inst49++; } } catch(e) {}
r.lastIndex = 1;
try { if (Inst50 <= 1000 && typeof (r.lastIndex) != "undefined") {_RecordType("<2884,2895,78>",(r.lastIndex)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (r) != "undefined") {_RecordType("<2884,2885,78>",(r)); Inst51++; } } catch(e) {}
try { if (Inst52 <= 1000 && typeof ("zzzz".replace) != "undefined") {_RecordType("<2901,2915,79>",("zzzz".replace)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (r) != "undefined") {_RecordType("<2916,2917,79>",(r)); Inst53++; } } catch(e) {}
"zzzz".replace(r, function () {
  return "";
});
1;
try { if (Inst54 <= 1000 && typeof (r.lastIndex) != "undefined") {_RecordType("<2953,2964,83>",(r.lastIndex)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (r) != "undefined") {_RecordType("<2953,2954,83>",(r)); Inst55++; } } catch(e) {}
r.lastIndex;
// Regexp functions that returns multiple results:
// A global regexp always resets lastIndex regardless of whether it matches.
r = /a/g;
try { if (Inst56 <= 1000 && typeof (r) != "undefined") {_RecordType("<3094,3095,86>",(r)); Inst56++; } } catch(e) {}
r.lastIndex = -1;
try { if (Inst57 <= 1000 && typeof (r.lastIndex) != "undefined") {_RecordType("<3104,3115,87>",(r.lastIndex)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (r) != "undefined") {_RecordType("<3104,3105,87>",(r)); Inst58++; } } catch(e) {}
try { if (Inst59 <= 1000 && typeof ("0123abcd".replace) != "undefined") {_RecordType("<3122,3140,88>",("0123abcd".replace)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (r) != "undefined") {_RecordType("<3141,3142,88>",(r)); Inst60++; } } catch(e) {}
"0123abcd".replace(r, "x");
0;
try { if (Inst61 <= 1000 && typeof (r.lastIndex) != "undefined") {_RecordType("<3153,3164,90>",(r.lastIndex)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (r) != "undefined") {_RecordType("<3153,3154,90>",(r)); Inst62++; } } catch(e) {}
r.lastIndex;
r.lastIndex = -1;
try { if (Inst63 <= 1000 && typeof (r.lastIndex) != "undefined") {_RecordType("<3166,3177,91>",(r.lastIndex)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (r) != "undefined") {_RecordType("<3166,3167,91>",(r)); Inst64++; } } catch(e) {}
try { if (Inst65 <= 1000 && typeof ("01234567".replace) != "undefined") {_RecordType("<3184,3202,92>",("01234567".replace)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (r) != "undefined") {_RecordType("<3203,3204,92>",(r)); Inst66++; } } catch(e) {}
"01234567".replace(r, "x");
0;
try { if (Inst67 <= 1000 && typeof (r.lastIndex) != "undefined") {_RecordType("<3215,3226,94>",(r.lastIndex)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (r) != "undefined") {_RecordType("<3215,3216,94>",(r)); Inst68++; } } catch(e) {}
r.lastIndex;
r.lastIndex = -1;
try { if (Inst69 <= 1000 && typeof (r.lastIndex) != "undefined") {_RecordType("<3228,3239,95>",(r.lastIndex)); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (r) != "undefined") {_RecordType("<3228,3229,95>",(r)); Inst70++; } } catch(e) {}
try { if (Inst71 <= 1000 && typeof ("0123abcd".match) != "undefined") {_RecordType("<3246,3262,96>",("0123abcd".match)); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (r) != "undefined") {_RecordType("<3263,3264,96>",(r)); Inst72++; } } catch(e) {}
"0123abcd".match(r);
0;
try { if (Inst73 <= 1000 && typeof (r.lastIndex) != "undefined") {_RecordType("<3270,3281,98>",(r.lastIndex)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (r) != "undefined") {_RecordType("<3270,3271,98>",(r)); Inst74++; } } catch(e) {}
r.lastIndex;
r.lastIndex = -1;
try { if (Inst75 <= 1000 && typeof (r.lastIndex) != "undefined") {_RecordType("<3283,3294,99>",(r.lastIndex)); Inst75++; } } catch(e) {}try { if (Inst76 <= 1000 && typeof (r) != "undefined") {_RecordType("<3283,3284,99>",(r)); Inst76++; } } catch(e) {}
try { if (Inst77 <= 1000 && typeof ("01234567".match) != "undefined") {_RecordType("<3301,3317,100>",("01234567".match)); Inst77++; } } catch(e) {}try { if (Inst78 <= 1000 && typeof (r) != "undefined") {_RecordType("<3318,3319,100>",(r)); Inst78++; } } catch(e) {}
"01234567".match(r);
0;
try { if (Inst79 <= 1000 && typeof (r.lastIndex) != "undefined") {_RecordType("<3325,3336,102>",(r.lastIndex)); Inst79++; } } catch(e) {}try { if (Inst80 <= 1000 && typeof (r) != "undefined") {_RecordType("<3325,3326,102>",(r)); Inst80++; } } catch(e) {}
r.lastIndex;
// A non-global regexp resets lastIndex iff it is sticky.
r = /a/;
try { if (Inst81 <= 1000 && typeof (r) != "undefined") {_RecordType("<3396,3397,104>",(r)); Inst81++; } } catch(e) {}
r.lastIndex = -1;
try { if (Inst82 <= 1000 && typeof (r.lastIndex) != "undefined") {_RecordType("<3405,3416,105>",(r.lastIndex)); Inst82++; } } catch(e) {}try { if (Inst83 <= 1000 && typeof (r) != "undefined") {_RecordType("<3405,3406,105>",(r)); Inst83++; } } catch(e) {}
try { if (Inst84 <= 1000 && typeof ("0123abcd".replace) != "undefined") {_RecordType("<3423,3441,106>",("0123abcd".replace)); Inst84++; } } catch(e) {}try { if (Inst85 <= 1000 && typeof (r) != "undefined") {_RecordType("<3442,3443,106>",(r)); Inst85++; } } catch(e) {}
"0123abcd".replace(r, "x");
-1;
try { if (Inst86 <= 1000 && typeof (r.lastIndex) != "undefined") {_RecordType("<3455,3466,108>",(r.lastIndex)); Inst86++; } } catch(e) {}try { if (Inst87 <= 1000 && typeof (r) != "undefined") {_RecordType("<3455,3456,108>",(r)); Inst87++; } } catch(e) {}
r.lastIndex;
r.lastIndex = -1;
try { if (Inst88 <= 1000 && typeof (r.lastIndex) != "undefined") {_RecordType("<3468,3479,109>",(r.lastIndex)); Inst88++; } } catch(e) {}try { if (Inst89 <= 1000 && typeof (r) != "undefined") {_RecordType("<3468,3469,109>",(r)); Inst89++; } } catch(e) {}
try { if (Inst90 <= 1000 && typeof ("01234567".replace) != "undefined") {_RecordType("<3486,3504,110>",("01234567".replace)); Inst90++; } } catch(e) {}try { if (Inst91 <= 1000 && typeof (r) != "undefined") {_RecordType("<3505,3506,110>",(r)); Inst91++; } } catch(e) {}
"01234567".replace(r, "x");
-1;
try { if (Inst92 <= 1000 && typeof (r.lastIndex) != "undefined") {_RecordType("<3518,3529,112>",(r.lastIndex)); Inst92++; } } catch(e) {}try { if (Inst93 <= 1000 && typeof (r) != "undefined") {_RecordType("<3518,3519,112>",(r)); Inst93++; } } catch(e) {}
r.lastIndex;
r.lastIndex = -1;
try { if (Inst94 <= 1000 && typeof (r.lastIndex) != "undefined") {_RecordType("<3531,3542,113>",(r.lastIndex)); Inst94++; } } catch(e) {}try { if (Inst95 <= 1000 && typeof (r) != "undefined") {_RecordType("<3531,3532,113>",(r)); Inst95++; } } catch(e) {}
try { if (Inst96 <= 1000 && typeof ("0123abcd".match) != "undefined") {_RecordType("<3549,3565,114>",("0123abcd".match)); Inst96++; } } catch(e) {}try { if (Inst97 <= 1000 && typeof (r) != "undefined") {_RecordType("<3566,3567,114>",(r)); Inst97++; } } catch(e) {}
"0123abcd".match(r);
-1;
try { if (Inst98 <= 1000 && typeof (r.lastIndex) != "undefined") {_RecordType("<3574,3585,116>",(r.lastIndex)); Inst98++; } } catch(e) {}try { if (Inst99 <= 1000 && typeof (r) != "undefined") {_RecordType("<3574,3575,116>",(r)); Inst99++; } } catch(e) {}
r.lastIndex;
r.lastIndex = -1;
try { if (Inst100 <= 1000 && typeof (r.lastIndex) != "undefined") {_RecordType("<3587,3598,117>",(r.lastIndex)); Inst100++; } } catch(e) {}try { if (Inst101 <= 1000 && typeof (r) != "undefined") {_RecordType("<3587,3588,117>",(r)); Inst101++; } } catch(e) {}
try { if (Inst102 <= 1000 && typeof ("01234567".match) != "undefined") {_RecordType("<3605,3621,118>",("01234567".match)); Inst102++; } } catch(e) {}try { if (Inst103 <= 1000 && typeof (r) != "undefined") {_RecordType("<3622,3623,118>",(r)); Inst103++; } } catch(e) {}
"01234567".match(r);
-1;
try { if (Inst104 <= 1000 && typeof (r.lastIndex) != "undefined") {_RecordType("<3630,3641,120>",(r.lastIndex)); Inst104++; } } catch(e) {}try { if (Inst105 <= 1000 && typeof (r) != "undefined") {_RecordType("<3630,3631,120>",(r)); Inst105++; } } catch(e) {}
r.lastIndex;
r = /a/y;
try { if (Inst106 <= 1000 && typeof (r) != "undefined") {_RecordType("<3643,3644,121>",(r)); Inst106++; } } catch(e) {}
r.lastIndex = -1;
try { if (Inst107 <= 1000 && typeof (r.lastIndex) != "undefined") {_RecordType("<3653,3664,122>",(r.lastIndex)); Inst107++; } } catch(e) {}try { if (Inst108 <= 1000 && typeof (r) != "undefined") {_RecordType("<3653,3654,122>",(r)); Inst108++; } } catch(e) {}
try { if (Inst109 <= 1000 && typeof ("0123abcd".replace) != "undefined") {_RecordType("<3671,3689,123>",("0123abcd".replace)); Inst109++; } } catch(e) {}try { if (Inst110 <= 1000 && typeof (r) != "undefined") {_RecordType("<3690,3691,123>",(r)); Inst110++; } } catch(e) {}
"0123abcd".replace(r, "x");
0;
try { if (Inst111 <= 1000 && typeof (r.lastIndex) != "undefined") {_RecordType("<3702,3713,125>",(r.lastIndex)); Inst111++; } } catch(e) {}try { if (Inst112 <= 1000 && typeof (r) != "undefined") {_RecordType("<3702,3703,125>",(r)); Inst112++; } } catch(e) {}
r.lastIndex;
r.lastIndex = -1;
try { if (Inst113 <= 1000 && typeof (r.lastIndex) != "undefined") {_RecordType("<3715,3726,126>",(r.lastIndex)); Inst113++; } } catch(e) {}try { if (Inst114 <= 1000 && typeof (r) != "undefined") {_RecordType("<3715,3716,126>",(r)); Inst114++; } } catch(e) {}
try { if (Inst115 <= 1000 && typeof ("01234567".replace) != "undefined") {_RecordType("<3733,3751,127>",("01234567".replace)); Inst115++; } } catch(e) {}try { if (Inst116 <= 1000 && typeof (r) != "undefined") {_RecordType("<3752,3753,127>",(r)); Inst116++; } } catch(e) {}
"01234567".replace(r, "x");
0;
try { if (Inst117 <= 1000 && typeof (r.lastIndex) != "undefined") {_RecordType("<3764,3775,129>",(r.lastIndex)); Inst117++; } } catch(e) {}try { if (Inst118 <= 1000 && typeof (r) != "undefined") {_RecordType("<3764,3765,129>",(r)); Inst118++; } } catch(e) {}
r.lastIndex;
// Also test RegExp.prototype.exec and RegExp.prototype.test
r = /a/g;
try { if (Inst119 <= 1000 && typeof (r) != "undefined") {_RecordType("<3838,3839,131>",(r)); Inst119++; } } catch(e) {}
r.lastIndex = 1;
try { if (Inst120 <= 1000 && typeof (r.lastIndex) != "undefined") {_RecordType("<3848,3859,132>",(r.lastIndex)); Inst120++; } } catch(e) {}try { if (Inst121 <= 1000 && typeof (r) != "undefined") {_RecordType("<3848,3849,132>",(r)); Inst121++; } } catch(e) {}
try { if (Inst122 <= 1000 && typeof (r.exec) != "undefined") {_RecordType("<3865,3871,133>",(r.exec)); Inst122++; } } catch(e) {}try { if (Inst123 <= 1000 && typeof (r) != "undefined") {_RecordType("<3865,3866,133>",(r)); Inst123++; } } catch(e) {}
r.exec("01234567");
0;
try { if (Inst124 <= 1000 && typeof (r.lastIndex) != "undefined") {_RecordType("<3888,3899,135>",(r.lastIndex)); Inst124++; } } catch(e) {}try { if (Inst125 <= 1000 && typeof (r) != "undefined") {_RecordType("<3888,3889,135>",(r)); Inst125++; } } catch(e) {}
r.lastIndex;
r.lastIndex = 1;
try { if (Inst126 <= 1000 && typeof (r.lastIndex) != "undefined") {_RecordType("<3901,3912,136>",(r.lastIndex)); Inst126++; } } catch(e) {}try { if (Inst127 <= 1000 && typeof (r) != "undefined") {_RecordType("<3901,3902,136>",(r)); Inst127++; } } catch(e) {}
try { if (Inst128 <= 1000 && typeof (r.exec) != "undefined") {_RecordType("<3918,3924,137>",(r.exec)); Inst128++; } } catch(e) {}try { if (Inst129 <= 1000 && typeof (r) != "undefined") {_RecordType("<3918,3919,137>",(r)); Inst129++; } } catch(e) {}
r.exec("0123abcd");
5;
try { if (Inst130 <= 1000 && typeof (r.lastIndex) != "undefined") {_RecordType("<3941,3952,139>",(r.lastIndex)); Inst130++; } } catch(e) {}try { if (Inst131 <= 1000 && typeof (r) != "undefined") {_RecordType("<3941,3942,139>",(r)); Inst131++; } } catch(e) {}
r.lastIndex;
r = /a/;
try { if (Inst132 <= 1000 && typeof (r) != "undefined") {_RecordType("<3954,3955,140>",(r)); Inst132++; } } catch(e) {}
r.lastIndex = 1;
try { if (Inst133 <= 1000 && typeof (r.lastIndex) != "undefined") {_RecordType("<3963,3974,141>",(r.lastIndex)); Inst133++; } } catch(e) {}try { if (Inst134 <= 1000 && typeof (r) != "undefined") {_RecordType("<3963,3964,141>",(r)); Inst134++; } } catch(e) {}
try { if (Inst135 <= 1000 && typeof (r.exec) != "undefined") {_RecordType("<3980,3986,142>",(r.exec)); Inst135++; } } catch(e) {}try { if (Inst136 <= 1000 && typeof (r) != "undefined") {_RecordType("<3980,3981,142>",(r)); Inst136++; } } catch(e) {}
r.exec("01234567");
1;
try { if (Inst137 <= 1000 && typeof (r.lastIndex) != "undefined") {_RecordType("<4003,4014,144>",(r.lastIndex)); Inst137++; } } catch(e) {}try { if (Inst138 <= 1000 && typeof (r) != "undefined") {_RecordType("<4003,4004,144>",(r)); Inst138++; } } catch(e) {}
r.lastIndex;
r.lastIndex = 1;
try { if (Inst139 <= 1000 && typeof (r.lastIndex) != "undefined") {_RecordType("<4016,4027,145>",(r.lastIndex)); Inst139++; } } catch(e) {}try { if (Inst140 <= 1000 && typeof (r) != "undefined") {_RecordType("<4016,4017,145>",(r)); Inst140++; } } catch(e) {}
try { if (Inst141 <= 1000 && typeof (r.exec) != "undefined") {_RecordType("<4033,4039,146>",(r.exec)); Inst141++; } } catch(e) {}try { if (Inst142 <= 1000 && typeof (r) != "undefined") {_RecordType("<4033,4034,146>",(r)); Inst142++; } } catch(e) {}
r.exec("0123abcd");
1;
try { if (Inst143 <= 1000 && typeof (r.lastIndex) != "undefined") {_RecordType("<4056,4067,148>",(r.lastIndex)); Inst143++; } } catch(e) {}try { if (Inst144 <= 1000 && typeof (r) != "undefined") {_RecordType("<4056,4057,148>",(r)); Inst144++; } } catch(e) {}
r.lastIndex;
r = /a/g;
try { if (Inst145 <= 1000 && typeof (r) != "undefined") {_RecordType("<4069,4070,149>",(r)); Inst145++; } } catch(e) {}
r.lastIndex = 1;
try { if (Inst146 <= 1000 && typeof (r.lastIndex) != "undefined") {_RecordType("<4079,4090,150>",(r.lastIndex)); Inst146++; } } catch(e) {}try { if (Inst147 <= 1000 && typeof (r) != "undefined") {_RecordType("<4079,4080,150>",(r)); Inst147++; } } catch(e) {}
try { if (Inst148 <= 1000 && typeof (r.test) != "undefined") {_RecordType("<4096,4102,151>",(r.test)); Inst148++; } } catch(e) {}try { if (Inst149 <= 1000 && typeof (r) != "undefined") {_RecordType("<4096,4097,151>",(r)); Inst149++; } } catch(e) {}
r.test("01234567");
0;
try { if (Inst150 <= 1000 && typeof (r.lastIndex) != "undefined") {_RecordType("<4119,4130,153>",(r.lastIndex)); Inst150++; } } catch(e) {}try { if (Inst151 <= 1000 && typeof (r) != "undefined") {_RecordType("<4119,4120,153>",(r)); Inst151++; } } catch(e) {}
r.lastIndex;
r.lastIndex = 1;
try { if (Inst152 <= 1000 && typeof (r.lastIndex) != "undefined") {_RecordType("<4132,4143,154>",(r.lastIndex)); Inst152++; } } catch(e) {}try { if (Inst153 <= 1000 && typeof (r) != "undefined") {_RecordType("<4132,4133,154>",(r)); Inst153++; } } catch(e) {}
try { if (Inst154 <= 1000 && typeof (r.test) != "undefined") {_RecordType("<4149,4155,155>",(r.test)); Inst154++; } } catch(e) {}try { if (Inst155 <= 1000 && typeof (r) != "undefined") {_RecordType("<4149,4150,155>",(r)); Inst155++; } } catch(e) {}
r.test("0123abcd");
5;
try { if (Inst156 <= 1000 && typeof (r.lastIndex) != "undefined") {_RecordType("<4172,4183,157>",(r.lastIndex)); Inst156++; } } catch(e) {}try { if (Inst157 <= 1000 && typeof (r) != "undefined") {_RecordType("<4172,4173,157>",(r)); Inst157++; } } catch(e) {}
r.lastIndex;
r = /a/;
try { if (Inst158 <= 1000 && typeof (r) != "undefined") {_RecordType("<4185,4186,158>",(r)); Inst158++; } } catch(e) {}
r.lastIndex = 1;
try { if (Inst159 <= 1000 && typeof (r.lastIndex) != "undefined") {_RecordType("<4194,4205,159>",(r.lastIndex)); Inst159++; } } catch(e) {}try { if (Inst160 <= 1000 && typeof (r) != "undefined") {_RecordType("<4194,4195,159>",(r)); Inst160++; } } catch(e) {}
try { if (Inst161 <= 1000 && typeof (r.test) != "undefined") {_RecordType("<4211,4217,160>",(r.test)); Inst161++; } } catch(e) {}try { if (Inst162 <= 1000 && typeof (r) != "undefined") {_RecordType("<4211,4212,160>",(r)); Inst162++; } } catch(e) {}
r.test("01234567");
1;
try { if (Inst163 <= 1000 && typeof (r.lastIndex) != "undefined") {_RecordType("<4234,4245,162>",(r.lastIndex)); Inst163++; } } catch(e) {}try { if (Inst164 <= 1000 && typeof (r) != "undefined") {_RecordType("<4234,4235,162>",(r)); Inst164++; } } catch(e) {}
r.lastIndex;
r.lastIndex = 1;
try { if (Inst165 <= 1000 && typeof (r.lastIndex) != "undefined") {_RecordType("<4247,4258,163>",(r.lastIndex)); Inst165++; } } catch(e) {}try { if (Inst166 <= 1000 && typeof (r) != "undefined") {_RecordType("<4247,4248,163>",(r)); Inst166++; } } catch(e) {}
try { if (Inst167 <= 1000 && typeof (r.test) != "undefined") {_RecordType("<4264,4270,164>",(r.test)); Inst167++; } } catch(e) {}try { if (Inst168 <= 1000 && typeof (r) != "undefined") {_RecordType("<4264,4265,164>",(r)); Inst168++; } } catch(e) {}
r.test("0123abcd");
1;
try { if (Inst169 <= 1000 && typeof (r.lastIndex) != "undefined") {_RecordType("<4287,4298,166>",(r.lastIndex)); Inst169++; } } catch(e) {}try { if (Inst170 <= 1000 && typeof (r) != "undefined") {_RecordType("<4287,4288,166>",(r)); Inst170++; } } catch(e) {}
r.lastIndex;

