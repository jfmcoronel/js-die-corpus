var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2013 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// Flags: --allow-natives-syntax
try { if (Inst0 <= 1000 && typeof (Bb) != "undefined") {_RecordType("<1639,1641,28>",(Bb)); Inst0++; } } catch(e) {}
function Bb(w) {
try { if (Inst1 <= 1000 && typeof (w) != "undefined") {_RecordType("<1642,1643,28>",(w)); Inst1++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (w) != "undefined") {_RecordType("<1662,1663,29>",(w)); Inst3++; } } catch(e) {}
  this.width = w;
try { if (Inst2 <= 1000 && typeof (this.width) != "undefined") {_RecordType("<1649,1659,29>",(this.width)); Inst2++; } } catch(e) {}
}

try { if (Inst4 <= 1000 && typeof (ce) != "undefined") {_RecordType("<1677,1679,32>",(ce)); Inst4++; } } catch(e) {}
function ce(a, b) {
try { if (Inst5 <= 1000 && typeof (a) != "undefined") {_RecordType("<1680,1681,32>",(a)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (b) != "undefined") {_RecordType("<1683,1684,32>",(b)); Inst6++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (a) != "undefined") {_RecordType("<1709,1710,33>",(a)); Inst7++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (b) != "undefined") {_RecordType("<1720,1721,33>",(b)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Math.round) != "undefined") {_RecordType("<1724,1734,33>",(Math.round)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1724,1728,33>",(Math)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (a) != "undefined") {_RecordType("<1735,1736,33>",(a)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (a) != "undefined") {_RecordType("<1740,1741,33>",(a)); Inst13++; } } catch(e) {}
  "number" == typeof a && (a = (b ? Math.round(a) : a) + "px");
try { if (Inst8 <= 1000 && typeof (a) != "undefined") {_RecordType("<1715,1716,33>",(a)); Inst8++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (a) != "undefined") {_RecordType("<1761,1762,34>",(a)); Inst14++; } } catch(e) {}
  return a;
}

try { if (Inst15 <= 1000 && typeof (pe) != "undefined") {_RecordType("<1776,1778,37>",(pe)); Inst15++; } } catch(e) {}
function pe(a, b, c) {
try { if (Inst16 <= 1000 && typeof (a) != "undefined") {_RecordType("<1779,1780,37>",(a)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (b) != "undefined") {_RecordType("<1782,1783,37>",(b)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (c) != "undefined") {_RecordType("<1785,1786,37>",(c)); Inst18++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (b) != "undefined") {_RecordType("<1796,1797,38>",(b)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (Bb) != "undefined") {_RecordType("<1809,1811,38>",(Bb)); Inst20++; } } catch(e) {}
  if (b instanceof Bb) {
try { if (Inst22 <= 1000 && typeof (b.width) != "undefined") {_RecordType("<1823,1830,39>",(b.width)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (b) != "undefined") {_RecordType("<1823,1824,39>",(b)); Inst23++; } } catch(e) {}
    b = b.width;
try { if (Inst21 <= 1000 && typeof (b) != "undefined") {_RecordType("<1819,1820,39>",(b)); Inst21++; } } catch(e) {}
  }

try { if (Inst26 <= 1000 && typeof (ce) != "undefined") {_RecordType("<1849,1851,42>",(ce)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (b) != "undefined") {_RecordType("<1852,1853,42>",(b)); Inst27++; } } catch(e) {}
  a.width = ce(b, !0);
try { if (Inst24 <= 1000 && typeof (a.width) != "undefined") {_RecordType("<1839,1846,42>",(a.width)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (a) != "undefined") {_RecordType("<1839,1840,42>",(a)); Inst25++; } } catch(e) {}
}

try { if (Inst29 <= 1000 && typeof (Bb) != "undefined") {_RecordType("<1875,1877,45>",(Bb)); Inst29++; } } catch(e) {}
var a = new Bb(1);
try { if (Inst28 <= 1000 && typeof (a) != "undefined") {_RecordType("<1867,1868,45>",(a)); Inst28++; } } catch(e) {}
try { if (Inst31 <= 1000 && typeof (Bb) != "undefined") {_RecordType("<1894,1896,46>",(Bb)); Inst31++; } } catch(e) {}
var b = new Bb(5);
try { if (Inst30 <= 1000 && typeof (b) != "undefined") {_RecordType("<1886,1887,46>",(b)); Inst30++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (pe) != "undefined") {_RecordType("<1901,1903,47>",(pe)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (a) != "undefined") {_RecordType("<1904,1905,47>",(a)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (b) != "undefined") {_RecordType("<1907,1908,47>",(b)); Inst34++; } } catch(e) {}
pe(a, b, 0);
try { if (Inst35 <= 1000 && typeof (pe) != "undefined") {_RecordType("<1914,1916,48>",(pe)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (a) != "undefined") {_RecordType("<1917,1918,48>",(a)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (b) != "undefined") {_RecordType("<1920,1921,48>",(b)); Inst37++; } } catch(e) {}
pe(a, b, 0);
try { if (Inst38 <= 1000 && typeof (pe) != "undefined") {_RecordType("<1927,1929,49>",(pe)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (a) != "undefined") {_RecordType("<1930,1931,49>",(a)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (b) != "undefined") {_RecordType("<1933,1934,49>",(b)); Inst40++; } } catch(e) {}
pe(a, b, 0);

