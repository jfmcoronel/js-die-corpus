var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2011 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// Flags: --allow-natives-syntax --expose-gc
try { if (Inst0 <= 1000 && typeof (mkCOWArray) != "undefined") {_RecordType("<1651,1661,28>",(mkCOWArray)); Inst0++; } } catch(e) {}
function mkCOWArray() {
  var a = [''];
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<1672,1673,29>",(a)); Inst1++; } } catch(e) {}
  '';
try { if (Inst2 <= 1000 && typeof (a[0]) != "undefined") {_RecordType("<1690,1694,31>",(a[0])); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (a) != "undefined") {_RecordType("<1690,1691,31>",(a)); Inst3++; } } catch(e) {}
  a[0];
try { if (Inst4 <= 1000 && typeof (a) != "undefined") {_RecordType("<1705,1706,32>",(a)); Inst4++; } } catch(e) {}
  return a;
}

try { if (Inst5 <= 1000 && typeof (mkArray) != "undefined") {_RecordType("<1720,1727,35>",(mkArray)); Inst5++; } } catch(e) {}
function mkArray() {
  var a = [];
try { if (Inst6 <= 1000 && typeof (a) != "undefined") {_RecordType("<1738,1739,36>",(a)); Inst6++; } } catch(e) {}
  a[0] = '';
try { if (Inst7 <= 1000 && typeof (a[0]) != "undefined") {_RecordType("<1748,1752,37>",(a[0])); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (a) != "undefined") {_RecordType("<1748,1749,37>",(a)); Inst8++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (a) != "undefined") {_RecordType("<1768,1769,38>",(a)); Inst9++; } } catch(e) {}
  return a;
}

try { if (Inst10 <= 1000 && typeof (mkNumberDictionary) != "undefined") {_RecordType("<1783,1801,41>",(mkNumberDictionary)); Inst10++; } } catch(e) {}
function mkNumberDictionary() {
try { if (Inst12 <= 1000 && typeof (Array) != "undefined") {_RecordType("<1820,1825,42>",(Array)); Inst12++; } } catch(e) {}
  var a = new Array();
try { if (Inst11 <= 1000 && typeof (a) != "undefined") {_RecordType("<1812,1813,42>",(a)); Inst11++; } } catch(e) {}
  a[0] = '';
try { if (Inst13 <= 1000 && typeof (a[0]) != "undefined") {_RecordType("<1831,1835,43>",(a[0])); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (a) != "undefined") {_RecordType("<1831,1832,43>",(a)); Inst14++; } } catch(e) {}
  a[100000] = '';
try { if (Inst15 <= 1000 && typeof (a[100000]) != "undefined") {_RecordType("<1844,1853,44>",(a[100000])); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (a) != "undefined") {_RecordType("<1844,1845,44>",(a)); Inst16++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (a) != "undefined") {_RecordType("<1869,1870,45>",(a)); Inst17++; } } catch(e) {}
  return a;
}

try { if (Inst18 <= 1000 && typeof (write) != "undefined") {_RecordType("<1884,1889,48>",(write)); Inst18++; } } catch(e) {}
function write(a, i) {
try { if (Inst19 <= 1000 && typeof (a) != "undefined") {_RecordType("<1890,1891,48>",(a)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<1893,1894,48>",(i)); Inst20++; } } catch(e) {}
  a[i] = "bazinga!";
try { if (Inst21 <= 1000 && typeof (a[i]) != "undefined") {_RecordType("<1900,1904,49>",(a[i])); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (a) != "undefined") {_RecordType("<1900,1901,49>",(a)); Inst22++; } } catch(e) {}
}

try { if (Inst23 <= 1000 && typeof (test) != "undefined") {_RecordType("<1931,1935,52>",(test)); Inst23++; } } catch(e) {}
function test(factories, w) {
try { if (Inst24 <= 1000 && typeof (factories) != "undefined") {_RecordType("<1936,1945,52>",(factories)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (w) != "undefined") {_RecordType("<1947,1948,52>",(w)); Inst25++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (factories.forEach) != "undefined") {_RecordType("<1954,1971,53>",(factories.forEach)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (factories) != "undefined") {_RecordType("<1954,1963,53>",(factories)); Inst27++; } } catch(e) {}
  factories.forEach(function (f) {
try { if (Inst28 <= 1000 && typeof (f) != "undefined") {_RecordType("<1982,1983,53>",(f)); Inst28++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (w) != "undefined") {_RecordType("<1991,1992,54>",(w)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (f) != "undefined") {_RecordType("<1993,1994,54>",(f)); Inst30++; } } catch(e) {}
    w(f(), 0);
  });
try { if (Inst31 <= 1000 && typeof (factories.forEach) != "undefined") {_RecordType("<2010,2027,56>",(factories.forEach)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (factories) != "undefined") {_RecordType("<2010,2019,56>",(factories)); Inst32++; } } catch(e) {}
  factories.forEach(function (f) {
try { if (Inst33 <= 1000 && typeof (f) != "undefined") {_RecordType("<2038,2039,56>",(f)); Inst33++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof (w) != "undefined") {_RecordType("<2047,2048,57>",(w)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (f) != "undefined") {_RecordType("<2049,2050,57>",(f)); Inst35++; } } catch(e) {}
    w(f(), 0);
  });
try { if (Inst36 <= 1000 && typeof (factories.forEach) != "undefined") {_RecordType("<2066,2083,59>",(factories.forEach)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (factories) != "undefined") {_RecordType("<2066,2075,59>",(factories)); Inst37++; } } catch(e) {}
  factories.forEach(function (f) {
try { if (Inst38 <= 1000 && typeof (f) != "undefined") {_RecordType("<2094,2095,59>",(f)); Inst38++; } } catch(e) {}
try { if (Inst39 <= 1000 && typeof (w) != "undefined") {_RecordType("<2103,2104,60>",(w)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (f) != "undefined") {_RecordType("<2105,2106,60>",(f)); Inst40++; } } catch(e) {}
    w(f(), 0);
  });
} // Monomorphic case.


for (var i = 0; i < 5; i++) {
try { if (Inst41 <= 1000 && typeof (i) != "undefined") {_RecordType("<2154,2155,65>",(i)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (i) != "undefined") {_RecordType("<2161,2162,65>",(i)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (i) != "undefined") {_RecordType("<2168,2169,65>",(i)); Inst43++; } } catch(e) {}
try { if (Inst44 <= 1000 && typeof (write) != "undefined") {_RecordType("<2177,2182,66>",(write)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (mkArray) != "undefined") {_RecordType("<2183,2190,66>",(mkArray)); Inst45++; } } catch(e) {}
  write(mkArray(), 0);
}

try { if (Inst46 <= 1000 && typeof (write) != "undefined") {_RecordType("<2201,2206,69>",(write)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (mkCOWArray) != "undefined") {_RecordType("<2207,2217,69>",(mkCOWArray)); Inst47++; } } catch(e) {}
write(mkCOWArray(), 0);
try { if (Inst49 <= 1000 && typeof (mkCOWArray) != "undefined") {_RecordType("<2239,2249,70>",(mkCOWArray)); Inst49++; } } catch(e) {}
var failure = mkCOWArray(); // Cleanup, then polymorphic case.
try { if (Inst48 <= 1000 && typeof (failure) != "undefined") {_RecordType("<2229,2236,70>",(failure)); Inst48++; } } catch(e) {}

try { if (Inst50 <= 1000 && typeof (gc) != "undefined") {_RecordType("<2289,2291,72>",(gc)); Inst50++; } } catch(e) {}
gc();
try { if (Inst51 <= 1000 && typeof (test) != "undefined") {_RecordType("<2295,2299,73>",(test)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (mkArray) != "undefined") {_RecordType("<2301,2308,73>",(mkArray)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (mkNumberDictionary) != "undefined") {_RecordType("<2310,2328,73>",(mkNumberDictionary)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (write) != "undefined") {_RecordType("<2331,2336,73>",(write)); Inst54++; } } catch(e) {}
test([mkArray, mkNumberDictionary], write);
try { if (Inst55 <= 1000 && typeof (test) != "undefined") {_RecordType("<2339,2343,74>",(test)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (mkArray) != "undefined") {_RecordType("<2345,2352,74>",(mkArray)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (mkNumberDictionary) != "undefined") {_RecordType("<2354,2372,74>",(mkNumberDictionary)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (mkCOWArray) != "undefined") {_RecordType("<2374,2384,74>",(mkCOWArray)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (write) != "undefined") {_RecordType("<2387,2392,74>",(write)); Inst59++; } } catch(e) {}
test([mkArray, mkNumberDictionary, mkCOWArray], write);

