var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2018 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Tests if class declarations in parameter list are correctly handled.
try { if (Inst0 <= 1000 && typeof (v_2) != "undefined") {_RecordType("<248,251,5>",(v_2)); Inst0++; } } catch(e) {}
function v_2(v_3 = class v_4 {
  get [[] = ';']() {
    ;
  }

}) {
try { if (Inst1 <= 1000 && typeof (v_3) != "undefined") {_RecordType("<252,255,5>",(v_3)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (v_4) != "undefined") {_RecordType("<264,267,5>",(v_4)); Inst2++; } } catch(e) {}
  ;
}

try { if (Inst3 <= 1000 && typeof (v_2) != "undefined") {_RecordType("<314,317,14>",(v_2)); Inst3++; } } catch(e) {}
v_2(); // Test object inside a class in a parameter list

try { if (Inst4 <= 1000 && typeof (f) != "undefined") {_RecordType("<382,383,16>",(f)); Inst4++; } } catch(e) {}
(function f(v_3 = class v_4 {
  get [({} = ';')]() {
    ;
  }

}) {
try { if (Inst5 <= 1000 && typeof (v_3) != "undefined") {_RecordType("<384,387,16>",(v_3)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (v_4) != "undefined") {_RecordType("<396,399,16>",(v_4)); Inst6++; } } catch(e) {}
  ;
})(); // Test destructuring of class in parameters


try { if (Inst7 <= 1000 && typeof (f) != "undefined") {_RecordType("<508,509,26>",(f)); Inst7++; } } catch(e) {}
(function f({
  p,
  q
} = class C {
  get [[] = ';']() {
    ;
  }

}) {
try { if (Inst8 <= 1000 && typeof (p) != "undefined") {_RecordType("<514,515,27>",(p)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (q) != "undefined") {_RecordType("<519,520,28>",(q)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (C) != "undefined") {_RecordType("<531,532,29>",(C)); Inst10++; } } catch(e) {}
  ;
})(); // Test array destructuring of class in parameters


class C {}
try { if (Inst11 <= 1000 && typeof (C) != "undefined") {_RecordType("<641,642,39>",(C)); Inst11++; } } catch(e) {}

;

C[Symbol.iterator] = function () {
  return {
    next: function () {
      return {
        done: true
      };
    },
    _first: true
  };
};
try { if (Inst12 <= 1000 && typeof (C[Symbol.iterator]) != "undefined") {_RecordType("<650,668,43>",(C[Symbol.iterator])); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (C) != "undefined") {_RecordType("<650,651,43>",(C)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<652,667,43>",(Symbol.iterator)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<652,658,43>",(Symbol)); Inst15++; } } catch(e) {}

try { if (Inst16 <= 1000 && typeof (f1) != "undefined") {_RecordType("<806,808,54>",(f1)); Inst16++; } } catch(e) {}
(function f1([p, q] = class D extends C {
  get [[]]() {
    ;
  }

}) {
try { if (Inst17 <= 1000 && typeof (p) != "undefined") {_RecordType("<810,811,54>",(p)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (q) != "undefined") {_RecordType("<813,814,54>",(q)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (D) != "undefined") {_RecordType("<824,825,54>",(D)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (C) != "undefined") {_RecordType("<834,835,54>",(C)); Inst20++; } } catch(e) {}
  ;
})();

