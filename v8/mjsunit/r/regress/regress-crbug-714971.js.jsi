var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2017 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax
try { if (Inst0 <= 1000 && typeof (Module) != "undefined") {_RecordType("<209,215,5>",(Module)); Inst0++; } } catch(e) {}
function Module(stdlib, foreign, heap) {
try { if (Inst1 <= 1000 && typeof (stdlib) != "undefined") {_RecordType("<216,222,5>",(stdlib)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (foreign) != "undefined") {_RecordType("<224,231,5>",(foreign)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (heap) != "undefined") {_RecordType("<233,237,5>",(heap)); Inst3++; } } catch(e) {}
  "use asm";

try { if (Inst5 <= 1000 && typeof (stdlib.Int16Array) != "undefined") {_RecordType("<269,286,8>",(stdlib.Int16Array)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (stdlib) != "undefined") {_RecordType("<269,275,8>",(stdlib)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (heap) != "undefined") {_RecordType("<287,291,8>",(heap)); Inst7++; } } catch(e) {}
  var a = new stdlib.Int16Array(heap);
try { if (Inst4 <= 1000 && typeof (a) != "undefined") {_RecordType("<261,262,8>",(a)); Inst4++; } } catch(e) {}

try { if (Inst8 <= 1000 && typeof (f) != "undefined") {_RecordType("<306,307,10>",(f)); Inst8++; } } catch(e) {}
  function f() {
try { if (Inst9 <= 1000 && typeof (a[23 >> -1]) != "undefined") {_RecordType("<323,334,11>",(a[23 >> -1])); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (a) != "undefined") {_RecordType("<323,324,11>",(a)); Inst10++; } } catch(e) {}
    return a[23 >> -1];
  }

try { if (Inst11 <= 1000 && typeof (f) != "undefined") {_RecordType("<359,360,15>",(f)); Inst11++; } } catch(e) {}
  return {
    f: f
  };
}

try { if (Inst13 <= 1000 && typeof (ArrayBuffer) != "undefined") {_RecordType("<381,392,19>",(ArrayBuffer)); Inst13++; } } catch(e) {}
var b = new ArrayBuffer(1024);
try { if (Inst12 <= 1000 && typeof (b) != "undefined") {_RecordType("<373,374,19>",(b)); Inst12++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (Module) != "undefined") {_RecordType("<408,414,20>",(Module)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (b) != "undefined") {_RecordType("<425,426,20>",(b)); Inst16++; } } catch(e) {}
var m = Module(this, {}, b);
try { if (Inst14 <= 1000 && typeof (m) != "undefined") {_RecordType("<404,405,20>",(m)); Inst14++; } } catch(e) {}
new Int16Array(b)[0] = 42;
try { if (Inst17 <= 1000 && typeof (new Int16Array(b)[0]) != "undefined") {_RecordType("<429,449,21>",(new Int16Array(b)[0])); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Int16Array) != "undefined") {_RecordType("<433,443,21>",(Int16Array)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (b) != "undefined") {_RecordType("<444,445,21>",(b)); Inst19++; } } catch(e) {}
42;
try { if (Inst20 <= 1000 && typeof (m.f) != "undefined") {_RecordType("<460,463,23>",(m.f)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (m) != "undefined") {_RecordType("<460,461,23>",(m)); Inst21++; } } catch(e) {}
m.f();

