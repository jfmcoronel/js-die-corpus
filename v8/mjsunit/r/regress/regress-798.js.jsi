var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2010 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
var x = {}; // Add property a with getter/setter.
try { if (Inst0 <= 1000 && typeof (x) != "undefined") {_RecordType("<1601,1602,27>",(x)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (x.__defineGetter__) != "undefined") {_RecordType("<1648,1666,29>",(x.__defineGetter__)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (x) != "undefined") {_RecordType("<1648,1649,29>",(x)); Inst2++; } } catch(e) {}
x.__defineGetter__("a", function () {
try { if (Inst5 <= 1000 && typeof (e) != "undefined") {_RecordType("<1719,1720,32>",(e)); Inst5++; } } catch(e) {}
  try {
    y.x = 40;
try { if (Inst3 <= 1000 && typeof (y.x) != "undefined") {_RecordType("<1698,1701,31>",(y.x)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (y) != "undefined") {_RecordType("<1698,1699,31>",(y)); Inst4++; } } catch(e) {}
  } catch (e) {
    3;
try { if (Inst6 <= 1000 && typeof (e.stack.split('\n').length) != "undefined") {_RecordType("<1735,1761,34>",(e.stack.split('\n').length)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (e.stack.split) != "undefined") {_RecordType("<1735,1748,34>",(e.stack.split)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (e.stack) != "undefined") {_RecordType("<1735,1742,34>",(e.stack)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (e) != "undefined") {_RecordType("<1735,1736,34>",(e)); Inst9++; } } catch(e) {}
    e.stack.split('\n').length;
  }

  return 40;
});

try { if (Inst10 <= 1000 && typeof (x.__defineSetter__) != "undefined") {_RecordType("<1786,1804,40>",(x.__defineSetter__)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (x) != "undefined") {_RecordType("<1786,1787,40>",(x)); Inst11++; } } catch(e) {}
x.__defineSetter__("a", function (val) {
try { if (Inst12 <= 1000 && typeof (val) != "undefined") {_RecordType("<1820,1823,40>",(val)); Inst12++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (e) != "undefined") {_RecordType("<1860,1861,43>",(e)); Inst15++; } } catch(e) {}
  try {
    y.x = 40;
try { if (Inst13 <= 1000 && typeof (y.x) != "undefined") {_RecordType("<1839,1842,42>",(y.x)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (y) != "undefined") {_RecordType("<1839,1840,42>",(y)); Inst14++; } } catch(e) {}
  } catch (e) {
    3;
try { if (Inst16 <= 1000 && typeof (e.stack.split('\n').length) != "undefined") {_RecordType("<1876,1902,45>",(e.stack.split('\n').length)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (e.stack.split) != "undefined") {_RecordType("<1876,1889,45>",(e.stack.split)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (e.stack) != "undefined") {_RecordType("<1876,1883,45>",(e.stack)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (e) != "undefined") {_RecordType("<1876,1877,45>",(e)); Inst19++; } } catch(e) {}
    e.stack.split('\n').length;
  }
}); // Add property b with getter/setter.


try { if (Inst20 <= 1000 && typeof (getB) != "undefined") {_RecordType("<1961,1965,50>",(getB)); Inst20++; } } catch(e) {}
function getB() {
try { if (Inst23 <= 1000 && typeof (e) != "undefined") {_RecordType("<2003,2004,53>",(e)); Inst23++; } } catch(e) {}
  try {
    y.x = 30;
try { if (Inst21 <= 1000 && typeof (y.x) != "undefined") {_RecordType("<1982,1985,52>",(y.x)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (y) != "undefined") {_RecordType("<1982,1983,52>",(y)); Inst22++; } } catch(e) {}
  } catch (e) {
    3;
try { if (Inst24 <= 1000 && typeof (e.stack.split('\n').length) != "undefined") {_RecordType("<2019,2045,55>",(e.stack.split('\n').length)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (e.stack.split) != "undefined") {_RecordType("<2019,2032,55>",(e.stack.split)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (e.stack) != "undefined") {_RecordType("<2019,2026,55>",(e.stack)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (e) != "undefined") {_RecordType("<2019,2020,55>",(e)); Inst27++; } } catch(e) {}
    e.stack.split('\n').length;
  }

  return 30;
}

try { if (Inst28 <= 1000 && typeof (setB) != "undefined") {_RecordType("<2077,2081,61>",(setB)); Inst28++; } } catch(e) {}
function setB(val) {
try { if (Inst29 <= 1000 && typeof (val) != "undefined") {_RecordType("<2082,2085,61>",(val)); Inst29++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (e) != "undefined") {_RecordType("<2122,2123,64>",(e)); Inst32++; } } catch(e) {}
  try {
    y.x = 30;
try { if (Inst30 <= 1000 && typeof (y.x) != "undefined") {_RecordType("<2101,2104,63>",(y.x)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (y) != "undefined") {_RecordType("<2101,2102,63>",(y)); Inst31++; } } catch(e) {}
  } catch (e) {
    3;
try { if (Inst33 <= 1000 && typeof (e.stack.split('\n').length) != "undefined") {_RecordType("<2138,2164,66>",(e.stack.split('\n').length)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (e.stack.split) != "undefined") {_RecordType("<2138,2151,66>",(e.stack.split)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (e.stack) != "undefined") {_RecordType("<2138,2145,66>",(e.stack)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (e) != "undefined") {_RecordType("<2138,2139,66>",(e)); Inst36++; } } catch(e) {}
    e.stack.split('\n').length;
  }
}

try { if (Inst37 <= 1000 && typeof (x.__defineGetter__) != "undefined") {_RecordType("<2173,2191,70>",(x.__defineGetter__)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (x) != "undefined") {_RecordType("<2173,2174,70>",(x)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (getB) != "undefined") {_RecordType("<2197,2201,70>",(getB)); Inst39++; } } catch(e) {}
x.__defineGetter__("b", getB);

try { if (Inst40 <= 1000 && typeof (x.__defineSetter__) != "undefined") {_RecordType("<2205,2223,72>",(x.__defineSetter__)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (x) != "undefined") {_RecordType("<2205,2206,72>",(x)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (setB) != "undefined") {_RecordType("<2229,2233,72>",(setB)); Inst42++; } } catch(e) {}
x.__defineSetter__("b", setB); // Add property c with getter/setter.


var descriptor = {
  get: function () {
try { if (Inst46 <= 1000 && typeof (e) != "undefined") {_RecordType("<2355,2356,79>",(e)); Inst46++; } } catch(e) {}
    try {
      y.x = 40;
try { if (Inst44 <= 1000 && typeof (y.x) != "undefined") {_RecordType("<2332,2335,78>",(y.x)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (y) != "undefined") {_RecordType("<2332,2333,78>",(y)); Inst45++; } } catch(e) {}
    } catch (e) {
      3;
try { if (Inst47 <= 1000 && typeof (e.stack.split('\n').length) != "undefined") {_RecordType("<2375,2401,81>",(e.stack.split('\n').length)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (e.stack.split) != "undefined") {_RecordType("<2375,2388,81>",(e.stack.split)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (e.stack) != "undefined") {_RecordType("<2375,2382,81>",(e.stack)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (e) != "undefined") {_RecordType("<2375,2376,81>",(e)); Inst50++; } } catch(e) {}
      e.stack.split('\n').length;
    }

    return 40;
  },
  set: function (val) {
try { if (Inst51 <= 1000 && typeof (val) != "undefined") {_RecordType("<2447,2450,86>",(val)); Inst51++; } } catch(e) {}
try { if (Inst54 <= 1000 && typeof (e) != "undefined") {_RecordType("<2493,2494,89>",(e)); Inst54++; } } catch(e) {}
    try {
      y.x = 40;
try { if (Inst52 <= 1000 && typeof (y.x) != "undefined") {_RecordType("<2470,2473,88>",(y.x)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (y) != "undefined") {_RecordType("<2470,2471,88>",(y)); Inst53++; } } catch(e) {}
    } catch (e) {
      3;
try { if (Inst55 <= 1000 && typeof (e.stack.split('\n').length) != "undefined") {_RecordType("<2513,2539,91>",(e.stack.split('\n').length)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (e.stack.split) != "undefined") {_RecordType("<2513,2526,91>",(e.stack.split)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (e.stack) != "undefined") {_RecordType("<2513,2520,91>",(e.stack)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (e) != "undefined") {_RecordType("<2513,2514,91>",(e)); Inst58++; } } catch(e) {}
      e.stack.split('\n').length;
    }
  }
};
try { if (Inst43 <= 1000 && typeof (descriptor) != "undefined") {_RecordType("<2280,2290,75>",(descriptor)); Inst43++; } } catch(e) {}
try { if (Inst59 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<2554,2575,95>",(Object.defineProperty)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (Object) != "undefined") {_RecordType("<2554,2560,95>",(Object)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (x) != "undefined") {_RecordType("<2576,2577,95>",(x)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (descriptor) != "undefined") {_RecordType("<2584,2594,95>",(descriptor)); Inst62++; } } catch(e) {}
Object.defineProperty(x, 'c', descriptor); // Check that the stack for an exception in a getter and setter produce the
// expected stack height.

try { if (Inst63 <= 1000 && typeof (x.a) != "undefined") {_RecordType("<2700,2703,98>",(x.a)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (x) != "undefined") {_RecordType("<2700,2701,98>",(x)); Inst64++; } } catch(e) {}
x.a;
try { if (Inst65 <= 1000 && typeof (x.b) != "undefined") {_RecordType("<2705,2708,99>",(x.b)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (x) != "undefined") {_RecordType("<2705,2706,99>",(x)); Inst66++; } } catch(e) {}
x.b;
try { if (Inst67 <= 1000 && typeof (x.c) != "undefined") {_RecordType("<2710,2713,100>",(x.c)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (x) != "undefined") {_RecordType("<2710,2711,100>",(x)); Inst68++; } } catch(e) {}
x.c;
x.a = 1;
try { if (Inst69 <= 1000 && typeof (x.a) != "undefined") {_RecordType("<2715,2718,101>",(x.a)); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (x) != "undefined") {_RecordType("<2715,2716,101>",(x)); Inst70++; } } catch(e) {}
x.b = 1;
try { if (Inst71 <= 1000 && typeof (x.b) != "undefined") {_RecordType("<2724,2727,102>",(x.b)); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (x) != "undefined") {_RecordType("<2724,2725,102>",(x)); Inst72++; } } catch(e) {}
x.c = 1; // Do the same with the getters/setters on the a prototype object.
try { if (Inst73 <= 1000 && typeof (x.c) != "undefined") {_RecordType("<2733,2736,103>",(x.c)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (x) != "undefined") {_RecordType("<2733,2734,103>",(x)); Inst74++; } } catch(e) {}

xx = {};
try { if (Inst75 <= 1000 && typeof (xx) != "undefined") {_RecordType("<2810,2812,105>",(xx)); Inst75++; } } catch(e) {}
try { if (Inst78 <= 1000 && typeof (x) != "undefined") {_RecordType("<2834,2835,106>",(x)); Inst78++; } } catch(e) {}
xx.__proto__ = x;
try { if (Inst76 <= 1000 && typeof (xx.__proto__) != "undefined") {_RecordType("<2819,2831,106>",(xx.__proto__)); Inst76++; } } catch(e) {}try { if (Inst77 <= 1000 && typeof (xx) != "undefined") {_RecordType("<2819,2821,106>",(xx)); Inst77++; } } catch(e) {}
try { if (Inst79 <= 1000 && typeof (xx.a) != "undefined") {_RecordType("<2837,2841,107>",(xx.a)); Inst79++; } } catch(e) {}try { if (Inst80 <= 1000 && typeof (xx) != "undefined") {_RecordType("<2837,2839,107>",(xx)); Inst80++; } } catch(e) {}
xx.a;
try { if (Inst81 <= 1000 && typeof (xx.b) != "undefined") {_RecordType("<2843,2847,108>",(xx.b)); Inst81++; } } catch(e) {}try { if (Inst82 <= 1000 && typeof (xx) != "undefined") {_RecordType("<2843,2845,108>",(xx)); Inst82++; } } catch(e) {}
xx.b;
try { if (Inst83 <= 1000 && typeof (xx.c) != "undefined") {_RecordType("<2849,2853,109>",(xx.c)); Inst83++; } } catch(e) {}try { if (Inst84 <= 1000 && typeof (xx) != "undefined") {_RecordType("<2849,2851,109>",(xx)); Inst84++; } } catch(e) {}
xx.c;
xx.a = 1;
try { if (Inst85 <= 1000 && typeof (xx.a) != "undefined") {_RecordType("<2855,2859,110>",(xx.a)); Inst85++; } } catch(e) {}try { if (Inst86 <= 1000 && typeof (xx) != "undefined") {_RecordType("<2855,2857,110>",(xx)); Inst86++; } } catch(e) {}
xx.b = 1;
try { if (Inst87 <= 1000 && typeof (xx.b) != "undefined") {_RecordType("<2865,2869,111>",(xx.b)); Inst87++; } } catch(e) {}try { if (Inst88 <= 1000 && typeof (xx) != "undefined") {_RecordType("<2865,2867,111>",(xx)); Inst88++; } } catch(e) {}
xx.c = 1;
try { if (Inst89 <= 1000 && typeof (xx.c) != "undefined") {_RecordType("<2875,2879,112>",(xx.c)); Inst89++; } } catch(e) {}try { if (Inst90 <= 1000 && typeof (xx) != "undefined") {_RecordType("<2875,2877,112>",(xx)); Inst90++; } } catch(e) {}

