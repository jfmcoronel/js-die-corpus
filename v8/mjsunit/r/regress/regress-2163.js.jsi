var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2012 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// Flags: --expose-gc
// Handy abbreviation.
try { if (Inst1 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<1651,1672,29>",(Object.defineProperty)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1651,1657,29>",(Object)); Inst2++; } } catch(e) {}
var dp = Object.defineProperty;
try { if (Inst0 <= 1000 && typeof (dp) != "undefined") {_RecordType("<1646,1648,29>",(dp)); Inst0++; } } catch(e) {}

try { if (Inst3 <= 1000 && typeof (getter) != "undefined") {_RecordType("<1684,1690,31>",(getter)); Inst3++; } } catch(e) {}
function getter() {
  return 111;
}

try { if (Inst4 <= 1000 && typeof (setter) != "undefined") {_RecordType("<1721,1727,35>",(setter)); Inst4++; } } catch(e) {}
function setter(x) {
try { if (Inst5 <= 1000 && typeof (x) != "undefined") {_RecordType("<1728,1729,35>",(x)); Inst5++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (print) != "undefined") {_RecordType("<1735,1740,36>",(print)); Inst6++; } } catch(e) {}
  print(222);
}

try { if (Inst7 <= 1000 && typeof (anotherGetter) != "undefined") {_RecordType("<1759,1772,39>",(anotherGetter)); Inst7++; } } catch(e) {}
function anotherGetter() {
  return 333;
}

try { if (Inst8 <= 1000 && typeof (anotherSetter) != "undefined") {_RecordType("<1803,1816,43>",(anotherSetter)); Inst8++; } } catch(e) {}
function anotherSetter(x) {
try { if (Inst9 <= 1000 && typeof (x) != "undefined") {_RecordType("<1817,1818,43>",(x)); Inst9++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (print) != "undefined") {_RecordType("<1824,1829,44>",(print)); Inst10++; } } catch(e) {}
  print(444);
}

var obj1, obj2; // obj1 and obj2 share the getter accessor.
try { if (Inst11 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<1843,1847,47>",(obj1)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (obj2) != "undefined") {_RecordType("<1849,1853,47>",(obj2)); Inst12++; } } catch(e) {}

obj1 = {};
try { if (Inst13 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<1900,1904,49>",(obj1)); Inst13++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (dp) != "undefined") {_RecordType("<1911,1913,50>",(dp)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<1914,1918,50>",(obj1)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (getter) != "undefined") {_RecordType("<1938,1944,51>",(getter)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (setter) != "undefined") {_RecordType("<1953,1959,52>",(setter)); Inst17++; } } catch(e) {}
dp(obj1, "alpha", {
  get: getter,
  set: setter
});
obj2 = {};
try { if (Inst18 <= 1000 && typeof (obj2) != "undefined") {_RecordType("<1964,1968,54>",(obj2)); Inst18++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (dp) != "undefined") {_RecordType("<1975,1977,55>",(dp)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (obj2) != "undefined") {_RecordType("<1978,1982,55>",(obj2)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (getter) != "undefined") {_RecordType("<2002,2008,56>",(getter)); Inst21++; } } catch(e) {}
dp(obj2, "alpha", {
  get: getter
});
obj1 = {};
try { if (Inst22 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<2013,2017,58>",(obj1)); Inst22++; } } catch(e) {}
111;
try { if (Inst23 <= 1000 && typeof (obj2.alpha) != "undefined") {_RecordType("<2029,2039,60>",(obj2.alpha)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (obj2) != "undefined") {_RecordType("<2029,2033,60>",(obj2)); Inst24++; } } catch(e) {}
obj2.alpha;
try { if (Inst25 <= 1000 && typeof (gc) != "undefined") {_RecordType("<2041,2043,61>",(gc)); Inst25++; } } catch(e) {}
gc();
111;
try { if (Inst26 <= 1000 && typeof (obj2.alpha) != "undefined") {_RecordType("<2052,2062,63>",(obj2.alpha)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (obj2) != "undefined") {_RecordType("<2052,2056,63>",(obj2)); Inst27++; } } catch(e) {}
obj2.alpha;
// obj1, obj2, and obj3 share the getter accessor.
obj1 = {};
try { if (Inst28 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<2115,2119,65>",(obj1)); Inst28++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (dp) != "undefined") {_RecordType("<2126,2128,66>",(dp)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<2129,2133,66>",(obj1)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (getter) != "undefined") {_RecordType("<2153,2159,67>",(getter)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (setter) != "undefined") {_RecordType("<2168,2174,68>",(setter)); Inst32++; } } catch(e) {}
dp(obj1, "alpha", {
  get: getter,
  set: setter
});
obj2 = {};
try { if (Inst33 <= 1000 && typeof (obj2) != "undefined") {_RecordType("<2179,2183,70>",(obj2)); Inst33++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof (dp) != "undefined") {_RecordType("<2190,2192,71>",(dp)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (obj2) != "undefined") {_RecordType("<2193,2197,71>",(obj2)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (getter) != "undefined") {_RecordType("<2217,2223,72>",(getter)); Inst36++; } } catch(e) {}
dp(obj2, "alpha", {
  get: getter
});
obj1 = {};
try { if (Inst37 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<2228,2232,74>",(obj1)); Inst37++; } } catch(e) {}
try { if (Inst38 <= 1000 && typeof (gc) != "undefined") {_RecordType("<2239,2241,75>",(gc)); Inst38++; } } catch(e) {}
gc();
obj3 = {};
try { if (Inst39 <= 1000 && typeof (obj3) != "undefined") {_RecordType("<2245,2249,76>",(obj3)); Inst39++; } } catch(e) {}
try { if (Inst40 <= 1000 && typeof (dp) != "undefined") {_RecordType("<2256,2258,77>",(dp)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (obj3) != "undefined") {_RecordType("<2259,2263,77>",(obj3)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (getter) != "undefined") {_RecordType("<2283,2289,78>",(getter)); Inst42++; } } catch(e) {}
dp(obj3, "alpha", {
  get: getter
}); // obj1 and obj2 share the getter and setter accessor.

obj1 = {};
try { if (Inst43 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<2350,2354,81>",(obj1)); Inst43++; } } catch(e) {}
try { if (Inst44 <= 1000 && typeof (dp) != "undefined") {_RecordType("<2361,2363,82>",(dp)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<2364,2368,82>",(obj1)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (getter) != "undefined") {_RecordType("<2388,2394,83>",(getter)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (setter) != "undefined") {_RecordType("<2403,2409,84>",(setter)); Inst47++; } } catch(e) {}
dp(obj1, "alpha", {
  get: getter,
  set: setter
});
obj1.beta = 10;
try { if (Inst48 <= 1000 && typeof (obj1.beta) != "undefined") {_RecordType("<2414,2423,86>",(obj1.beta)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<2414,2418,86>",(obj1)); Inst49++; } } catch(e) {}
obj2 = {};
try { if (Inst50 <= 1000 && typeof (obj2) != "undefined") {_RecordType("<2430,2434,87>",(obj2)); Inst50++; } } catch(e) {}
try { if (Inst51 <= 1000 && typeof (dp) != "undefined") {_RecordType("<2441,2443,88>",(dp)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (obj2) != "undefined") {_RecordType("<2444,2448,88>",(obj2)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (getter) != "undefined") {_RecordType("<2468,2474,89>",(getter)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (setter) != "undefined") {_RecordType("<2483,2489,90>",(setter)); Inst54++; } } catch(e) {}
dp(obj2, "alpha", {
  get: getter,
  set: setter
});
obj1 = {};
try { if (Inst55 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<2494,2498,92>",(obj1)); Inst55++; } } catch(e) {}
111;
try { if (Inst56 <= 1000 && typeof (obj2.alpha) != "undefined") {_RecordType("<2510,2520,94>",(obj2.alpha)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (obj2) != "undefined") {_RecordType("<2510,2514,94>",(obj2)); Inst57++; } } catch(e) {}
obj2.alpha;
try { if (Inst58 <= 1000 && typeof (gc) != "undefined") {_RecordType("<2522,2524,95>",(gc)); Inst58++; } } catch(e) {}
gc();
obj2.alpha = 100;
try { if (Inst59 <= 1000 && typeof (obj2.alpha) != "undefined") {_RecordType("<2528,2538,96>",(obj2.alpha)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (obj2) != "undefined") {_RecordType("<2528,2532,96>",(obj2)); Inst60++; } } catch(e) {}
111;
try { if (Inst61 <= 1000 && typeof (obj2.alpha) != "undefined") {_RecordType("<2551,2561,98>",(obj2.alpha)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (obj2) != "undefined") {_RecordType("<2551,2555,98>",(obj2)); Inst62++; } } catch(e) {}
obj2.alpha;

