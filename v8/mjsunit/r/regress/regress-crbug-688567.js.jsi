var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2017 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
{
try { if (Inst0 <= 1000 && typeof (a) != "undefined") {_RecordType("<180,181,5>",(a)); Inst0++; } } catch(e) {}
  function a() {
    ;
  }

try { if (Inst1 <= 1000 && typeof (b) != "undefined") {_RecordType("<208,209,9>",(b)); Inst1++; } } catch(e) {}
  function b() {
    ;
  }

try { if (Inst2 <= 1000 && typeof (c) != "undefined") {_RecordType("<236,237,13>",(c)); Inst2++; } } catch(e) {}
  function c() {
    ;
  }

try { if (Inst3 <= 1000 && typeof (d) != "undefined") {_RecordType("<264,265,17>",(d)); Inst3++; } } catch(e) {}
  function d() {
    ;
  }

try { if (Inst4 <= 1000 && typeof (e) != "undefined") {_RecordType("<292,293,21>",(e)); Inst4++; } } catch(e) {}
  function e() {
    ;
  }

try { if (Inst5 <= 1000 && typeof (f) != "undefined") {_RecordType("<320,321,25>",(f)); Inst5++; } } catch(e) {}
  function f() {
    ;
  }

try { if (Inst6 <= 1000 && typeof (g) != "undefined") {_RecordType("<348,349,29>",(g)); Inst6++; } } catch(e) {}
  function g() {
    ;
  }

try { if (Inst7 <= 1000 && typeof (h) != "undefined") {_RecordType("<376,377,33>",(h)); Inst7++; } } catch(e) {}
  function h() {
    ;
  }
}
try { if (Inst9 <= 1000 && typeof (Object.getOwnPropertyNames) != "undefined") {_RecordType("<406,432,37>",(Object.getOwnPropertyNames)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Object) != "undefined") {_RecordType("<406,412,37>",(Object)); Inst10++; } } catch(e) {}
var names = Object.getOwnPropertyNames(this);
try { if (Inst8 <= 1000 && typeof (names) != "undefined") {_RecordType("<398,403,37>",(names)); Inst8++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (names.filter) != "undefined") {_RecordType("<448,460,38>",(names.filter)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (names) != "undefined") {_RecordType("<448,453,38>",(names)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (n) != "undefined") {_RecordType("<461,462,38>",(n)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Array.prototype.includes.call) != "undefined") {_RecordType("<466,495,38>",(Array.prototype.includes.call)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Array.prototype.includes) != "undefined") {_RecordType("<466,490,38>",(Array.prototype.includes)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<466,481,38>",(Array.prototype)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Array) != "undefined") {_RecordType("<466,471,38>",(Array)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (n) != "undefined") {_RecordType("<508,509,38>",(n)); Inst19++; } } catch(e) {}
names = names.filter(n => Array.prototype.includes.call("abcdefgh", n));
try { if (Inst11 <= 1000 && typeof (names) != "undefined") {_RecordType("<440,445,38>",(names)); Inst11++; } } catch(e) {}
"a,b,c,d,e,f,g,h";
try { if (Inst20 <= 1000 && typeof (names.join) != "undefined") {_RecordType("<532,542,40>",(names.join)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (names) != "undefined") {_RecordType("<532,537,40>",(names)); Inst21++; } } catch(e) {}
names.join();
{
  {
    let j;
try { if (Inst22 <= 1000 && typeof (j) != "undefined") {_RecordType("<560,561,43>",(j)); Inst22++; } } catch(e) {}
    {
      // This j will not be hoisted
try { if (Inst23 <= 1000 && typeof (j) != "undefined") {_RecordType("<620,621,46>",(j)); Inst23++; } } catch(e) {}
      function j() {
        ;
      }
    }
  }

try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<666,667,52>",(i)); Inst24++; } } catch(e) {}
  function i() {
    ;
  } // but this j will be.


try { if (Inst25 <= 1000 && typeof (j) != "undefined") {_RecordType("<718,719,57>",(j)); Inst25++; } } catch(e) {}
  function j() {
    ;
  }
}
try { if (Inst27 <= 1000 && typeof (Object.getOwnPropertyNames) != "undefined") {_RecordType("<748,774,61>",(Object.getOwnPropertyNames)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (Object) != "undefined") {_RecordType("<748,754,61>",(Object)); Inst28++; } } catch(e) {}
var names = Object.getOwnPropertyNames(this);
try { if (Inst26 <= 1000 && typeof (names) != "undefined") {_RecordType("<740,745,61>",(names)); Inst26++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (names.filter) != "undefined") {_RecordType("<790,802,62>",(names.filter)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (names) != "undefined") {_RecordType("<790,795,62>",(names)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (n) != "undefined") {_RecordType("<803,804,62>",(n)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (Array.prototype.includes.call) != "undefined") {_RecordType("<808,837,62>",(Array.prototype.includes.call)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (Array.prototype.includes) != "undefined") {_RecordType("<808,832,62>",(Array.prototype.includes)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<808,823,62>",(Array.prototype)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (Array) != "undefined") {_RecordType("<808,813,62>",(Array)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (n) != "undefined") {_RecordType("<844,845,62>",(n)); Inst37++; } } catch(e) {}
names = names.filter(n => Array.prototype.includes.call("ij", n));
try { if (Inst29 <= 1000 && typeof (names) != "undefined") {_RecordType("<782,787,62>",(names)); Inst29++; } } catch(e) {}
"i,j";
try { if (Inst38 <= 1000 && typeof (names.join) != "undefined") {_RecordType("<856,866,64>",(names.join)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (names) != "undefined") {_RecordType("<856,861,64>",(names)); Inst39++; } } catch(e) {}
names.join();

