var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2017 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax --opt --no-always-opt
try { if (Inst0 <= 1000 && typeof (foo) != "undefined") {_RecordType("<231,234,5>",(foo)); Inst0++; } } catch(e) {}
function foo(s) {
try { if (Inst1 <= 1000 && typeof (s) != "undefined") {_RecordType("<235,236,5>",(s)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (s[5]) != "undefined") {_RecordType("<249,253,6>",(s[5])); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (s) != "undefined") {_RecordType("<249,250,6>",(s)); Inst3++; } } catch(e) {}
  return s[5];
}

"f";
try { if (Inst4 <= 1000 && typeof (foo) != "undefined") {_RecordType("<263,266,10>",(foo)); Inst4++; } } catch(e) {}
foo("abcdef");
try { if (Inst5 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<278,287,11>",(undefined)); Inst5++; } } catch(e) {}
undefined;
try { if (Inst6 <= 1000 && typeof (foo) != "undefined") {_RecordType("<289,292,12>",(foo)); Inst6++; } } catch(e) {}
foo("a");
"f";
try { if (Inst7 <= 1000 && typeof (foo) != "undefined") {_RecordType("<304,307,14>",(foo)); Inst7++; } } catch(e) {}
foo("abcdef");
try { if (Inst8 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<319,328,15>",(undefined)); Inst8++; } } catch(e) {}
undefined;
try { if (Inst9 <= 1000 && typeof (foo) != "undefined") {_RecordType("<330,333,16>",(foo)); Inst9++; } } catch(e) {}
foo("a");
try { if (Inst10 <= 1000 && typeof (foo) != "undefined") {_RecordType("<340,343,17>",(foo)); Inst10++; } } catch(e) {}
foo();
// Now mess with the String.prototype.
try { if (Inst14 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<419,424,19>",(Proxy)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (String.prototype.__proto__) != "undefined") {_RecordType("<425,451,19>",(String.prototype.__proto__)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (String.prototype) != "undefined") {_RecordType("<425,441,19>",(String.prototype)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (String) != "undefined") {_RecordType("<425,431,19>",(String)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (get) != "undefined") {_RecordType("<457,460,20>",(get)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (target) != "undefined") {_RecordType("<461,467,20>",(target)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (property) != "undefined") {_RecordType("<469,477,20>",(property)); Inst20++; } } catch(e) {}
String.prototype.__proto__ = new Proxy(String.prototype.__proto__, {
  get(target, property) {
    return "5";
  }

});
try { if (Inst11 <= 1000 && typeof (String.prototype.__proto__) != "undefined") {_RecordType("<386,412,19>",(String.prototype.__proto__)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (String.prototype) != "undefined") {_RecordType("<386,402,19>",(String.prototype)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (String) != "undefined") {_RecordType("<386,392,19>",(String)); Inst13++; } } catch(e) {}
"f";
try { if (Inst21 <= 1000 && typeof (foo) != "undefined") {_RecordType("<511,514,26>",(foo)); Inst21++; } } catch(e) {}
foo("abcdef");
"5";
try { if (Inst22 <= 1000 && typeof (foo) != "undefined") {_RecordType("<531,534,28>",(foo)); Inst22++; } } catch(e) {}
foo("a");
"f";
try { if (Inst23 <= 1000 && typeof (foo) != "undefined") {_RecordType("<546,549,30>",(foo)); Inst23++; } } catch(e) {}
foo("abcdef");
"5";
try { if (Inst24 <= 1000 && typeof (foo) != "undefined") {_RecordType("<566,569,32>",(foo)); Inst24++; } } catch(e) {}
foo("a");
try { if (Inst25 <= 1000 && typeof (foo) != "undefined") {_RecordType("<576,579,33>",(foo)); Inst25++; } } catch(e) {}
foo();

