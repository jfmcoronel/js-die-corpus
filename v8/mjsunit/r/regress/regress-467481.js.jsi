var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2015 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax
try { if (Inst0 <= 1000 && typeof (f) != "undefined") {_RecordType("<209,210,5>",(f)); Inst0++; } } catch(e) {}
function f(a1, a2) {
try { if (Inst1 <= 1000 && typeof (a1) != "undefined") {_RecordType("<211,213,5>",(a1)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (a2) != "undefined") {_RecordType("<215,217,5>",(a2)); Inst2++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (a2[0]) != "undefined") {_RecordType("<232,237,6>",(a2[0])); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (a2) != "undefined") {_RecordType("<232,234,6>",(a2)); Inst5++; } } catch(e) {}
  var v7 = a2[0];
try { if (Inst3 <= 1000 && typeof (v7) != "undefined") {_RecordType("<227,229,6>",(v7)); Inst3++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (a1[0]) != "undefined") {_RecordType("<250,255,7>",(a1[0])); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (a1) != "undefined") {_RecordType("<250,252,7>",(a1)); Inst8++; } } catch(e) {}
  var v8 = a1[0];
try { if (Inst6 <= 1000 && typeof (v8) != "undefined") {_RecordType("<245,247,7>",(v8)); Inst6++; } } catch(e) {}
  a2[0] = 0.3;
try { if (Inst9 <= 1000 && typeof (a2[0]) != "undefined") {_RecordType("<259,264,8>",(a2[0])); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (a2) != "undefined") {_RecordType("<259,261,8>",(a2)); Inst10++; } } catch(e) {}
}

try { if (Inst12 <= 1000 && typeof (Array) != "undefined") {_RecordType("<284,289,11>",(Array)); Inst12++; } } catch(e) {}
v6 = new Array(1);
try { if (Inst11 <= 1000 && typeof (v6) != "undefined") {_RecordType("<275,277,11>",(v6)); Inst11++; } } catch(e) {}
v6[0] = "tagged";
try { if (Inst13 <= 1000 && typeof (v6[0]) != "undefined") {_RecordType("<294,299,12>",(v6[0])); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (v6) != "undefined") {_RecordType("<294,296,12>",(v6)); Inst14++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (f) != "undefined") {_RecordType("<312,313,13>",(f)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (v6) != "undefined") {_RecordType("<314,316,13>",(v6)); Inst16++; } } catch(e) {}
f(v6, [1]);
try { if (Inst18 <= 1000 && typeof (Array) != "undefined") {_RecordType("<333,338,14>",(Array)); Inst18++; } } catch(e) {}
v5 = new Array(1);
try { if (Inst17 <= 1000 && typeof (v5) != "undefined") {_RecordType("<324,326,14>",(v5)); Inst17++; } } catch(e) {}
v5[0] = 0.1;
try { if (Inst19 <= 1000 && typeof (v5[0]) != "undefined") {_RecordType("<343,348,15>",(v5[0])); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (v5) != "undefined") {_RecordType("<343,345,15>",(v5)); Inst20++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (f) != "undefined") {_RecordType("<356,357,16>",(f)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (v5) != "undefined") {_RecordType("<358,360,16>",(v5)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (v5) != "undefined") {_RecordType("<362,364,16>",(v5)); Inst23++; } } catch(e) {}
f(v5, v5);
try { if (Inst25 <= 1000 && typeof (Array) != "undefined") {_RecordType("<376,381,17>",(Array)); Inst25++; } } catch(e) {}
v5 = new Array(10);
try { if (Inst24 <= 1000 && typeof (v5) != "undefined") {_RecordType("<367,369,17>",(v5)); Inst24++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (f) != "undefined") {_RecordType("<387,388,18>",(f)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (v5) != "undefined") {_RecordType("<389,391,18>",(v5)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (v5) != "undefined") {_RecordType("<393,395,18>",(v5)); Inst28++; } } catch(e) {}
f(v5, v5);
try { if (Inst29 <= 1000 && typeof (f) != "undefined") {_RecordType("<398,399,19>",(f)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (v5) != "undefined") {_RecordType("<400,402,19>",(v5)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (v5) != "undefined") {_RecordType("<404,406,19>",(v5)); Inst31++; } } catch(e) {}
f(v5, v5);
try { if (Inst32 <= 1000 && typeof (v5[0]) != "undefined") {_RecordType("<409,414,20>",(v5[0])); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (v5) != "undefined") {_RecordType("<409,411,20>",(v5)); Inst33++; } } catch(e) {}
v5[0];

