var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2012 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// Flags: --allow-natives-syntax
try { if (Inst0 <= 1000 && typeof (crash) != "undefined") {_RecordType("<1639,1644,28>",(crash)); Inst0++; } } catch(e) {}
function crash(obj) {
try { if (Inst1 <= 1000 && typeof (obj) != "undefined") {_RecordType("<1645,1648,28>",(obj)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (obj.foo) != "undefined") {_RecordType("<1661,1668,29>",(obj.foo)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (obj) != "undefined") {_RecordType("<1661,1664,29>",(obj)); Inst3++; } } catch(e) {}
  return obj.foo;
}

try { if (Inst4 <= 1000 && typeof (base) != "undefined") {_RecordType("<1682,1686,32>",(base)); Inst4++; } } catch(e) {}
function base(number_of_properties) {
try { if (Inst5 <= 1000 && typeof (number_of_properties) != "undefined") {_RecordType("<1687,1707,32>",(number_of_properties)); Inst5++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (Array) != "undefined") {_RecordType("<1730,1735,33>",(Array)); Inst7++; } } catch(e) {}
  var result = new Array();
try { if (Inst6 <= 1000 && typeof (result) != "undefined") {_RecordType("<1717,1723,33>",(result)); Inst6++; } } catch(e) {}

  for (var i = 0; i < number_of_properties; i++) {
try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<1751,1752,35>",(i)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<1758,1759,35>",(i)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (number_of_properties) != "undefined") {_RecordType("<1762,1782,35>",(number_of_properties)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<1784,1785,35>",(i)); Inst11++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<1830,1831,36>",(i)); Inst15++; } } catch(e) {}
    result["property" + i] = "value" + i;
try { if (Inst12 <= 1000 && typeof (result["property" + i]) != "undefined") {_RecordType("<1795,1817,36>",(result["property" + i])); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (result) != "undefined") {_RecordType("<1795,1801,36>",(result)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<1815,1816,36>",(i)); Inst14++; } } catch(e) {}
  }

try { if (Inst18 <= 1000 && typeof (number_of_properties) != "undefined") {_RecordType("<1853,1873,39>",(number_of_properties)); Inst18++; } } catch(e) {}
  result.foo = number_of_properties;
try { if (Inst16 <= 1000 && typeof (result.foo) != "undefined") {_RecordType("<1840,1850,39>",(result.foo)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (result) != "undefined") {_RecordType("<1840,1846,39>",(result)); Inst17++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (result) != "undefined") {_RecordType("<1884,1890,40>",(result)); Inst19++; } } catch(e) {}
  return result;
}

try { if (Inst21 <= 1000 && typeof (base) != "undefined") {_RecordType("<1903,1907,43>",(base)); Inst21++; } } catch(e) {}
var a = base(12);
try { if (Inst20 <= 1000 && typeof (a) != "undefined") {_RecordType("<1899,1900,43>",(a)); Inst20++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (base) != "undefined") {_RecordType("<1921,1925,44>",(base)); Inst23++; } } catch(e) {}
var b = base(13);
try { if (Inst22 <= 1000 && typeof (b) != "undefined") {_RecordType("<1917,1918,44>",(b)); Inst22++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (base) != "undefined") {_RecordType("<1939,1943,45>",(base)); Inst25++; } } catch(e) {}
var c = base(14);
try { if (Inst24 <= 1000 && typeof (c) != "undefined") {_RecordType("<1935,1936,45>",(c)); Inst24++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (base) != "undefined") {_RecordType("<1957,1961,46>",(base)); Inst27++; } } catch(e) {}
var d = base(15);
try { if (Inst26 <= 1000 && typeof (d) != "undefined") {_RecordType("<1953,1954,46>",(d)); Inst26++; } } catch(e) {}
try { if (Inst28 <= 1000 && typeof (crash) != "undefined") {_RecordType("<1967,1972,47>",(crash)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (a) != "undefined") {_RecordType("<1973,1974,47>",(a)); Inst29++; } } catch(e) {}
crash(a); // Premonomorphic.

try { if (Inst30 <= 1000 && typeof (crash) != "undefined") {_RecordType("<1997,2002,49>",(crash)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (a) != "undefined") {_RecordType("<2003,2004,49>",(a)); Inst31++; } } catch(e) {}
crash(a);
try { if (Inst32 <= 1000 && typeof (crash) != "undefined") {_RecordType("<2007,2012,50>",(crash)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (b) != "undefined") {_RecordType("<2013,2014,50>",(b)); Inst33++; } } catch(e) {}
crash(b);
try { if (Inst34 <= 1000 && typeof (crash) != "undefined") {_RecordType("<2017,2022,51>",(crash)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (c) != "undefined") {_RecordType("<2023,2024,51>",(c)); Inst35++; } } catch(e) {}
crash(c);
try { if (Inst36 <= 1000 && typeof (crash) != "undefined") {_RecordType("<2027,2032,52>",(crash)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (d) != "undefined") {_RecordType("<2033,2034,52>",(d)); Inst37++; } } catch(e) {}
crash(d); // Polymorphic, degree 4.
//Prepare ElementsKind transition map chain.

try { if (Inst39 <= 1000 && typeof (base) != "undefined") {_RecordType("<2117,2121,55>",(base)); Inst39++; } } catch(e) {}
var x = base(13);
try { if (Inst38 <= 1000 && typeof (x) != "undefined") {_RecordType("<2113,2114,55>",(x)); Inst38++; } } catch(e) {}
x[0] = "object";
try { if (Inst40 <= 1000 && typeof (x[0]) != "undefined") {_RecordType("<2127,2131,56>",(x[0])); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (x) != "undefined") {_RecordType("<2127,2128,56>",(x)); Inst41++; } } catch(e) {}
try { if (Inst43 <= 1000 && typeof (base) != "undefined") {_RecordType("<2148,2152,57>",(base)); Inst43++; } } catch(e) {}
x = base(14);
try { if (Inst42 <= 1000 && typeof (x) != "undefined") {_RecordType("<2144,2145,57>",(x)); Inst42++; } } catch(e) {}
x[0] = "object";
try { if (Inst44 <= 1000 && typeof (x[0]) != "undefined") {_RecordType("<2158,2162,58>",(x[0])); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (x) != "undefined") {_RecordType("<2158,2159,58>",(x)); Inst45++; } } catch(e) {}
try { if (Inst47 <= 1000 && typeof (base) != "undefined") {_RecordType("<2179,2183,59>",(base)); Inst47++; } } catch(e) {}
x = base(15);
try { if (Inst46 <= 1000 && typeof (x) != "undefined") {_RecordType("<2175,2176,59>",(x)); Inst46++; } } catch(e) {}
x[0] = "object";
try { if (Inst48 <= 1000 && typeof (x[0]) != "undefined") {_RecordType("<2189,2193,60>",(x[0])); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (x) != "undefined") {_RecordType("<2189,2190,60>",(x)); Inst49++; } } catch(e) {}
try { if (Inst50 <= 1000 && typeof (crash) != "undefined") {_RecordType("<2206,2211,61>",(crash)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (a) != "undefined") {_RecordType("<2212,2213,61>",(a)); Inst51++; } } catch(e) {}
crash(a);

