var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2018 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
oobArray = [];
try { if (Inst0 <= 1000 && typeof (oobArray) != "undefined") {_RecordType("<167,175,4>",(oobArray)); Inst0++; } } catch(e) {}
try { if (Inst1 <= 1000 && typeof (oobArray.__proto__[Symbol.iterator]) != "undefined") {_RecordType("<189,224,5>",(oobArray.__proto__[Symbol.iterator])); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (oobArray.__proto__) != "undefined") {_RecordType("<189,207,5>",(oobArray.__proto__)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (oobArray) != "undefined") {_RecordType("<189,197,5>",(oobArray)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<208,223,5>",(Symbol.iterator)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<208,214,5>",(Symbol)); Inst5++; } } catch(e) {}
delete oobArray.__proto__[Symbol.iterator];

for (let i = 0; i < 1e5; ++i) {
try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<236,237,7>",(i)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<243,244,7>",(i)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<254,255,7>",(i)); Inst8++; } } catch(e) {}
  oobArray[i] = 1.1;
try { if (Inst9 <= 1000 && typeof (oobArray[i]) != "undefined") {_RecordType("<261,272,8>",(oobArray[i])); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (oobArray) != "undefined") {_RecordType("<261,269,8>",(oobArray)); Inst10++; } } catch(e) {}
}

try { if (Inst12 <= 1000 && typeof (Float64Array) != "undefined") {_RecordType("<300,312,11>",(Float64Array)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (oobArray.length) != "undefined") {_RecordType("<313,328,11>",(oobArray.length)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (oobArray) != "undefined") {_RecordType("<313,321,11>",(oobArray)); Inst14++; } } catch(e) {}
floatArray = new Float64Array(oobArray.length);
try { if (Inst11 <= 1000 && typeof (floatArray) != "undefined") {_RecordType("<283,293,11>",(floatArray)); Inst11++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (Float64Array.from.call) != "undefined") {_RecordType("<331,353,12>",(Float64Array.from.call)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Float64Array.from) != "undefined") {_RecordType("<331,348,12>",(Float64Array.from)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Float64Array) != "undefined") {_RecordType("<331,343,12>",(Float64Array)); Inst17++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (oobArray) != "undefined") {_RecordType("<421,429,15>",(oobArray)); Inst22++; } } catch(e) {}
Float64Array.from.call(function (length) {
try { if (Inst18 <= 1000 && typeof (length) != "undefined") {_RecordType("<364,370,12>",(length)); Inst18++; } } catch(e) {}
  oobArray.length = 0;
try { if (Inst19 <= 1000 && typeof (oobArray.length) != "undefined") {_RecordType("<376,391,13>",(oobArray.length)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (oobArray) != "undefined") {_RecordType("<376,384,13>",(oobArray)); Inst20++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (floatArray) != "undefined") {_RecordType("<406,416,14>",(floatArray)); Inst21++; } } catch(e) {}
  return floatArray;
}, oobArray);

