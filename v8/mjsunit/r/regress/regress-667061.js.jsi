var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2008 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// Test non-ICC case.
var caught = false;
try { if (Inst0 <= 1000 && typeof (caught) != "undefined") {_RecordType("<1623,1629,28>",(caught)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (o) != "undefined") {_RecordType("<1666,1667,32>",(o)); Inst1++; } } catch(e) {}
try {
  'foo'();
} catch (o) {
try { if (Inst2 <= 1000 && typeof (o) != "undefined") {_RecordType("<1673,1674,33>",(o)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<1686,1695,33>",(TypeError)); Inst3++; } } catch(e) {}
  o instanceof TypeError;
  caught = true;
try { if (Inst4 <= 1000 && typeof (caught) != "undefined") {_RecordType("<1699,1705,34>",(caught)); Inst4++; } } catch(e) {}
}

try { if (Inst5 <= 1000 && typeof (caught) != "undefined") {_RecordType("<1717,1723,37>",(caught)); Inst5++; } } catch(e) {}
caught;

// Test uninitialized case.
try { if (Inst6 <= 1000 && typeof (h) != "undefined") {_RecordType("<1763,1764,40>",(h)); Inst6++; } } catch(e) {}
function h(o) {
try { if (Inst7 <= 1000 && typeof (o) != "undefined") {_RecordType("<1765,1766,40>",(o)); Inst7++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (o.x) != "undefined") {_RecordType("<1779,1782,41>",(o.x)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (o) != "undefined") {_RecordType("<1779,1780,41>",(o)); Inst9++; } } catch(e) {}
  return o.x();
}

var caught = false;
try { if (Inst10 <= 1000 && typeof (caught) != "undefined") {_RecordType("<1793,1799,44>",(caught)); Inst10++; } } catch(e) {}

try { if (Inst12 <= 1000 && typeof (o) != "undefined") {_RecordType("<1846,1847,50>",(o)); Inst12++; } } catch(e) {}
try {
try { if (Inst11 <= 1000 && typeof (h) != "undefined") {_RecordType("<1818,1819,47>",(h)); Inst11++; } } catch(e) {}
  h({
    x: 1
  });
} catch (o) {
try { if (Inst13 <= 1000 && typeof (o) != "undefined") {_RecordType("<1853,1854,51>",(o)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<1866,1875,51>",(TypeError)); Inst14++; } } catch(e) {}
  o instanceof TypeError;
  caught = true;
try { if (Inst15 <= 1000 && typeof (caught) != "undefined") {_RecordType("<1879,1885,52>",(caught)); Inst15++; } } catch(e) {}
}

try { if (Inst16 <= 1000 && typeof (caught) != "undefined") {_RecordType("<1897,1903,55>",(caught)); Inst16++; } } catch(e) {}
caught;

// Test monomorphic case.
try { if (Inst17 <= 1000 && typeof (g) != "undefined") {_RecordType("<1941,1942,58>",(g)); Inst17++; } } catch(e) {}
function g(o) {
try { if (Inst18 <= 1000 && typeof (o) != "undefined") {_RecordType("<1943,1944,58>",(o)); Inst18++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (o.x) != "undefined") {_RecordType("<1957,1960,59>",(o.x)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (o) != "undefined") {_RecordType("<1957,1958,59>",(o)); Inst20++; } } catch(e) {}
  return o.x();
}

try { if (Inst21 <= 1000 && typeof (O) != "undefined") {_RecordType("<1976,1977,62>",(O)); Inst21++; } } catch(e) {}
function O(x) {
try { if (Inst22 <= 1000 && typeof (x) != "undefined") {_RecordType("<1978,1979,62>",(x)); Inst22++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (x) != "undefined") {_RecordType("<1994,1995,63>",(x)); Inst24++; } } catch(e) {}
  this.x = x;
try { if (Inst23 <= 1000 && typeof (this.x) != "undefined") {_RecordType("<1985,1991,63>",(this.x)); Inst23++; } } catch(e) {}
}

;
try { if (Inst26 <= 1000 && typeof (O) != "undefined") {_RecordType("<2014,2015,67>",(O)); Inst26++; } } catch(e) {}
var o = new O(function () {
  return 1;
});
try { if (Inst25 <= 1000 && typeof (o) != "undefined") {_RecordType("<2006,2007,67>",(o)); Inst25++; } } catch(e) {}
1;
try { if (Inst27 <= 1000 && typeof (g) != "undefined") {_RecordType("<2049,2050,71>",(g)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (o) != "undefined") {_RecordType("<2051,2052,71>",(o)); Inst28++; } } catch(e) {}
g(o);
1;
try { if (Inst29 <= 1000 && typeof (g) != "undefined") {_RecordType("<2058,2059,73>",(g)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (o) != "undefined") {_RecordType("<2060,2061,73>",(o)); Inst30++; } } catch(e) {}
g(o);
// stay monomorphic
var caught = false;
try { if (Inst31 <= 1000 && typeof (caught) != "undefined") {_RecordType("<2088,2094,75>",(caught)); Inst31++; } } catch(e) {}

try { if (Inst34 <= 1000 && typeof (o) != "undefined") {_RecordType("<2135,2136,79>",(o)); Inst34++; } } catch(e) {}
try {
try { if (Inst32 <= 1000 && typeof (g) != "undefined") {_RecordType("<2113,2114,78>",(g)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (O) != "undefined") {_RecordType("<2119,2120,78>",(O)); Inst33++; } } catch(e) {}
  g(new O(3));
} catch (o) {
try { if (Inst35 <= 1000 && typeof (o) != "undefined") {_RecordType("<2142,2143,80>",(o)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<2155,2164,80>",(TypeError)); Inst36++; } } catch(e) {}
  o instanceof TypeError;
  caught = true;
try { if (Inst37 <= 1000 && typeof (caught) != "undefined") {_RecordType("<2168,2174,81>",(caught)); Inst37++; } } catch(e) {}
}

try { if (Inst38 <= 1000 && typeof (caught) != "undefined") {_RecordType("<2186,2192,84>",(caught)); Inst38++; } } catch(e) {}
caught;

// Test megamorphic case.
try { if (Inst39 <= 1000 && typeof (f) != "undefined") {_RecordType("<2230,2231,87>",(f)); Inst39++; } } catch(e) {}
function f(o) {
try { if (Inst40 <= 1000 && typeof (o) != "undefined") {_RecordType("<2232,2233,87>",(o)); Inst40++; } } catch(e) {}
try { if (Inst41 <= 1000 && typeof (o.x) != "undefined") {_RecordType("<2246,2249,88>",(o.x)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (o) != "undefined") {_RecordType("<2246,2247,88>",(o)); Inst42++; } } catch(e) {}
  return o.x();
}

1;
try { if (Inst43 <= 1000 && typeof (f) != "undefined") {_RecordType("<2259,2260,92>",(f)); Inst43++; } } catch(e) {}
f({
  x: function () {
    return 1;
  }
});
2;
try { if (Inst44 <= 1000 && typeof (f) != "undefined") {_RecordType("<2307,2308,98>",(f)); Inst44++; } } catch(e) {}
f({
  x: function () {
    return 2;
  }
});
3;
try { if (Inst45 <= 1000 && typeof (f) != "undefined") {_RecordType("<2355,2356,104>",(f)); Inst45++; } } catch(e) {}
f({
  x: function () {
    return 3;
  }
});
// stay megamorphic
var caught = false;
try { if (Inst46 <= 1000 && typeof (caught) != "undefined") {_RecordType("<2424,2430,110>",(caught)); Inst46++; } } catch(e) {}

try { if (Inst48 <= 1000 && typeof (o) != "undefined") {_RecordType("<2477,2478,116>",(o)); Inst48++; } } catch(e) {}
try {
try { if (Inst47 <= 1000 && typeof (f) != "undefined") {_RecordType("<2449,2450,113>",(f)); Inst47++; } } catch(e) {}
  f({
    x: 4
  });
} catch (o) {
try { if (Inst49 <= 1000 && typeof (o) != "undefined") {_RecordType("<2484,2485,117>",(o)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<2497,2506,117>",(TypeError)); Inst50++; } } catch(e) {}
  o instanceof TypeError;
  caught = true;
try { if (Inst51 <= 1000 && typeof (caught) != "undefined") {_RecordType("<2510,2516,118>",(caught)); Inst51++; } } catch(e) {}
}

try { if (Inst52 <= 1000 && typeof (caught) != "undefined") {_RecordType("<2528,2534,121>",(caught)); Inst52++; } } catch(e) {}
caught;

