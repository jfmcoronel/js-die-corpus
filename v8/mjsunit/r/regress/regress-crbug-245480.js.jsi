var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2013 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// Flags: --allow-natives-syntax --expose-gc --noalways-opt
try { if (Inst0 <= 1000 && typeof (isHoley) != "undefined") {_RecordType("<1666,1673,28>",(isHoley)); Inst0++; } } catch(e) {}
function isHoley(obj) {
try { if (Inst1 <= 1000 && typeof (obj) != "undefined") {_RecordType("<1674,1677,28>",(obj)); Inst1++; } } catch(e) {}
  return false;
}

try { if (Inst2 <= 1000 && typeof (assertHoley) != "undefined") {_RecordType("<1709,1720,32>",(assertHoley)); Inst2++; } } catch(e) {}
function assertHoley(obj, name_opt) {
try { if (Inst3 <= 1000 && typeof (obj) != "undefined") {_RecordType("<1721,1724,32>",(obj)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (name_opt) != "undefined") {_RecordType("<1726,1734,32>",(name_opt)); Inst4++; } } catch(e) {}
  true;
try { if (Inst5 <= 1000 && typeof (isHoley) != "undefined") {_RecordType("<1748,1755,34>",(isHoley)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (obj) != "undefined") {_RecordType("<1756,1759,34>",(obj)); Inst6++; } } catch(e) {}
  isHoley(obj);
try { if (Inst7 <= 1000 && typeof (name_opt) != "undefined") {_RecordType("<1764,1772,35>",(name_opt)); Inst7++; } } catch(e) {}
  name_opt;
}

try { if (Inst8 <= 1000 && typeof (create_array) != "undefined") {_RecordType("<1786,1798,38>",(create_array)); Inst8++; } } catch(e) {}
function create_array(arg) {
try { if (Inst9 <= 1000 && typeof (arg) != "undefined") {_RecordType("<1799,1802,38>",(arg)); Inst9++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (Array) != "undefined") {_RecordType("<1819,1824,39>",(Array)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (arg) != "undefined") {_RecordType("<1825,1828,39>",(arg)); Inst11++; } } catch(e) {}
  return new Array(arg);
}

try { if (Inst13 <= 1000 && typeof (create_array) != "undefined") {_RecordType("<1840,1852,42>",(create_array)); Inst13++; } } catch(e) {}
obj = create_array(0);
try { if (Inst12 <= 1000 && typeof (obj) != "undefined") {_RecordType("<1834,1837,42>",(obj)); Inst12++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (obj) != "undefined") {_RecordType("<1857,1860,43>",(obj)); Inst14++; } } catch(e) {}
obj;
try { if (Inst15 <= 1000 && typeof (create_array) != "undefined") {_RecordType("<1862,1874,44>",(create_array)); Inst15++; } } catch(e) {}
create_array(0);
try { if (Inst17 <= 1000 && typeof (create_array) != "undefined") {_RecordType("<1885,1897,45>",(create_array)); Inst17++; } } catch(e) {}
obj = create_array(10);
try { if (Inst16 <= 1000 && typeof (obj) != "undefined") {_RecordType("<1879,1882,45>",(obj)); Inst16++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (obj) != "undefined") {_RecordType("<1903,1906,46>",(obj)); Inst18++; } } catch(e) {}
obj;

// The code below would assert in debug or crash in release
try { if (Inst19 <= 1000 && typeof (f) != "undefined") {_RecordType("<1978,1979,49>",(f)); Inst19++; } } catch(e) {}
function f(length) {
try { if (Inst20 <= 1000 && typeof (length) != "undefined") {_RecordType("<1980,1986,49>",(length)); Inst20++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (Array) != "undefined") {_RecordType("<2003,2008,50>",(Array)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (length) != "undefined") {_RecordType("<2009,2015,50>",(length)); Inst22++; } } catch(e) {}
  return new Array(length);
}

try { if (Inst23 <= 1000 && typeof (f) != "undefined") {_RecordType("<2021,2022,53>",(f)); Inst23++; } } catch(e) {}
f(0);
try { if (Inst24 <= 1000 && typeof (f) != "undefined") {_RecordType("<2027,2028,54>",(f)); Inst24++; } } catch(e) {}
f(0);
try { if (Inst26 <= 1000 && typeof (f) != "undefined") {_RecordType("<2041,2042,55>",(f)); Inst26++; } } catch(e) {}
var a = f(10);
try { if (Inst25 <= 1000 && typeof (a) != "undefined") {_RecordType("<2037,2038,55>",(a)); Inst25++; } } catch(e) {}

try { if (Inst27 <= 1000 && typeof (g) != "undefined") {_RecordType("<2058,2059,57>",(g)); Inst27++; } } catch(e) {}
function g(a) {
try { if (Inst28 <= 1000 && typeof (a) != "undefined") {_RecordType("<2060,2061,57>",(a)); Inst28++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (a[0]) != "undefined") {_RecordType("<2074,2078,58>",(a[0])); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (a) != "undefined") {_RecordType("<2074,2075,58>",(a)); Inst30++; } } catch(e) {}
  return a[0];
}

var b = [0];
try { if (Inst31 <= 1000 && typeof (b) != "undefined") {_RecordType("<2087,2088,61>",(b)); Inst31++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (g) != "undefined") {_RecordType("<2096,2097,62>",(g)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (b) != "undefined") {_RecordType("<2098,2099,62>",(b)); Inst33++; } } catch(e) {}
g(b);
try { if (Inst34 <= 1000 && typeof (g) != "undefined") {_RecordType("<2102,2103,63>",(g)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (b) != "undefined") {_RecordType("<2104,2105,63>",(b)); Inst35++; } } catch(e) {}
g(b);
try { if (Inst36 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<2108,2117,64>",(undefined)); Inst36++; } } catch(e) {}
undefined;
try { if (Inst37 <= 1000 && typeof (g) != "undefined") {_RecordType("<2119,2120,65>",(g)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (a) != "undefined") {_RecordType("<2121,2122,65>",(a)); Inst38++; } } catch(e) {}
g(a);

