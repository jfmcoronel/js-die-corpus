var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2015 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax
try { if (Inst0 <= 1000 && typeof (k) != "undefined") {_RecordType("<209,210,5>",(k)); Inst0++; } } catch(e) {}
function k() {
  throw "e";
}

var a = true;
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<235,236,9>",(a)); Inst1++; } } catch(e) {}
var a = false;
try { if (Inst2 <= 1000 && typeof (a) != "undefined") {_RecordType("<249,250,10>",(a)); Inst2++; } } catch(e) {}

try { if (Inst3 <= 1000 && typeof (foo) != "undefined") {_RecordType("<270,273,12>",(foo)); Inst3++; } } catch(e) {}
function foo(a) {
try { if (Inst4 <= 1000 && typeof (a) != "undefined") {_RecordType("<274,275,12>",(a)); Inst4++; } } catch(e) {}
  var i, j;
try { if (Inst5 <= 1000 && typeof (i) != "undefined") {_RecordType("<285,286,13>",(i)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (j) != "undefined") {_RecordType("<288,289,13>",(j)); Inst6++; } } catch(e) {}

try { if (Inst7 <= 1000 && typeof (a) != "undefined") {_RecordType("<298,299,15>",(a)); Inst7++; } } catch(e) {}
  if (a) {
    for (i = 0; i < 1; j++) {
try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<312,313,16>",(i)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<319,320,16>",(i)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (j) != "undefined") {_RecordType("<326,327,16>",(j)); Inst10++; } } catch(e) {}
      ;
    }

    for (i = 0; i < 1; k()) {
try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<357,358,20>",(i)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<364,365,20>",(i)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (k) != "undefined") {_RecordType("<371,372,20>",(k)); Inst13++; } } catch(e) {}
      ;
    }

    for (i = 0; i < 1; i++) {
try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<402,403,24>",(i)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<409,410,24>",(i)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<416,417,24>",(i)); Inst16++; } } catch(e) {}
      ;
    }
  }
}

try { if (Inst17 <= 1000 && typeof (foo) != "undefined") {_RecordType("<444,447,30>",(foo)); Inst17++; } } catch(e) {}
foo();

try { if (Inst18 <= 1000 && typeof (bar) != "undefined") {_RecordType("<461,464,32>",(bar)); Inst18++; } } catch(e) {}
function bar() {
  var __v_45;
try { if (Inst19 <= 1000 && typeof (__v_45) != "undefined") {_RecordType("<475,481,33>",(__v_45)); Inst19++; } } catch(e) {}

  for (__v_45 = 0; __v_45 < 64; __v_63++) {
try { if (Inst20 <= 1000 && typeof (__v_45) != "undefined") {_RecordType("<491,497,35>",(__v_45)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (__v_45) != "undefined") {_RecordType("<503,509,35>",(__v_45)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (__v_63) != "undefined") {_RecordType("<516,522,35>",(__v_63)); Inst22++; } } catch(e) {}
    ;
  }

  for (__v_45 = 0; __v_45 < 128; __v_36++) {
try { if (Inst23 <= 1000 && typeof (__v_45) != "undefined") {_RecordType("<546,552,39>",(__v_45)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (__v_45) != "undefined") {_RecordType("<558,564,39>",(__v_45)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (__v_36) != "undefined") {_RecordType("<572,578,39>",(__v_36)); Inst25++; } } catch(e) {}
    ;
  }

  for (__v_45 = 128; __v_45 < 256; __v_45++) {
try { if (Inst26 <= 1000 && typeof (__v_45) != "undefined") {_RecordType("<602,608,43>",(__v_45)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (__v_45) != "undefined") {_RecordType("<616,622,43>",(__v_45)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (__v_45) != "undefined") {_RecordType("<630,636,43>",(__v_45)); Inst28++; } } catch(e) {}
    ;
  }
}

try { if (Inst29 <= 1000 && typeof (bar) != "undefined") {_RecordType("<655,658,48>",(bar)); Inst29++; } } catch(e) {}
bar();

