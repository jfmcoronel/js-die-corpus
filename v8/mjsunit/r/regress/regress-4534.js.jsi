var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2015 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax --expose-gc
try { if (Inst1 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<221,242,5>",(Object.defineProperty)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Object) != "undefined") {_RecordType("<221,227,5>",(Object)); Inst2++; } } catch(e) {}
var dp = Object.defineProperty;
try { if (Inst0 <= 1000 && typeof (dp) != "undefined") {_RecordType("<216,218,5>",(dp)); Inst0++; } } catch(e) {}

try { if (Inst3 <= 1000 && typeof (getter) != "undefined") {_RecordType("<254,260,7>",(getter)); Inst3++; } } catch(e) {}
function getter() {
  return 111;
}

try { if (Inst4 <= 1000 && typeof (setter) != "undefined") {_RecordType("<291,297,11>",(setter)); Inst4++; } } catch(e) {}
function setter(x) {
try { if (Inst5 <= 1000 && typeof (x) != "undefined") {_RecordType("<298,299,11>",(x)); Inst5++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (print) != "undefined") {_RecordType("<305,310,12>",(print)); Inst6++; } } catch(e) {}
  print(222);
}

obj1 = {};
try { if (Inst7 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<320,324,15>",(obj1)); Inst7++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (dp) != "undefined") {_RecordType("<331,333,16>",(dp)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<334,338,16>",(obj1)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (getter) != "undefined") {_RecordType("<357,363,17>",(getter)); Inst10++; } } catch(e) {}
dp(obj1, "golf", {
  get: getter,
  configurable: true
});
try { if (Inst11 <= 1000 && typeof (dp) != "undefined") {_RecordType("<390,392,20>",(dp)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<393,397,20>",(obj1)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (setter) != "undefined") {_RecordType("<416,422,21>",(setter)); Inst13++; } } catch(e) {}
dp(obj1, "golf", {
  set: setter,
  configurable: true
});
try { if (Inst14 <= 1000 && typeof (gc) != "undefined") {_RecordType("<449,451,24>",(gc)); Inst14++; } } catch(e) {}
gc();
obj2 = {};
try { if (Inst15 <= 1000 && typeof (obj2) != "undefined") {_RecordType("<455,459,25>",(obj2)); Inst15++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (dp) != "undefined") {_RecordType("<466,468,26>",(dp)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (obj2) != "undefined") {_RecordType("<469,473,26>",(obj2)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (getter) != "undefined") {_RecordType("<492,498,27>",(getter)); Inst18++; } } catch(e) {}
dp(obj2, "golf", {
  get: getter,
  configurable: true
});
try { if (Inst19 <= 1000 && typeof (dp) != "undefined") {_RecordType("<525,527,30>",(dp)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (obj2) != "undefined") {_RecordType("<528,532,30>",(obj2)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (setter) != "undefined") {_RecordType("<551,557,31>",(setter)); Inst21++; } } catch(e) {}
dp(obj2, "golf", {
  set: setter,
  configurable: true
});

