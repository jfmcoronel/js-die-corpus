var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2017 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax
try { if (Inst1 <= 1000 && typeof (ArrayBuffer) != "undefined") {_RecordType("<217,228,5>",(ArrayBuffer)); Inst1++; } } catch(e) {}
var buffer = new ArrayBuffer(0x100);
try { if (Inst0 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<204,210,5>",(buffer)); Inst0++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (new Uint8Array(buffer).fill) != "undefined") {_RecordType("<249,276,6>",(new Uint8Array(buffer).fill)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Uint8Array) != "undefined") {_RecordType("<253,263,6>",(Uint8Array)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<264,270,6>",(buffer)); Inst5++; } } catch(e) {}
var array = new Uint8Array(buffer).fill(55);
try { if (Inst2 <= 1000 && typeof (array) != "undefined") {_RecordType("<241,246,6>",(array)); Inst2++; } } catch(e) {}
var tmp = {};
try { if (Inst6 <= 1000 && typeof (tmp) != "undefined") {_RecordType("<286,289,7>",(tmp)); Inst6++; } } catch(e) {}

tmp[Symbol.toPrimitive] = function () {
  return 0;
};
try { if (Inst7 <= 1000 && typeof (tmp[Symbol.toPrimitive]) != "undefined") {_RecordType("<297,320,9>",(tmp[Symbol.toPrimitive])); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (tmp) != "undefined") {_RecordType("<297,300,9>",(tmp)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Symbol.toPrimitive) != "undefined") {_RecordType("<301,319,9>",(Symbol.toPrimitive)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<301,307,9>",(Symbol)); Inst10++; } } catch(e) {}

-1;
try { if (Inst11 <= 1000 && typeof (Array.prototype.indexOf.call) != "undefined") {_RecordType("<357,385,14>",(Array.prototype.indexOf.call)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Array.prototype.indexOf) != "undefined") {_RecordType("<357,380,14>",(Array.prototype.indexOf)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<357,372,14>",(Array.prototype)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Array) != "undefined") {_RecordType("<357,362,14>",(Array)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (array) != "undefined") {_RecordType("<386,391,14>",(array)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (tmp) != "undefined") {_RecordType("<399,402,14>",(tmp)); Inst16++; } } catch(e) {}
Array.prototype.indexOf.call(array, 0x00, tmp);
try { if (Inst18 <= 1000 && typeof (ArrayBuffer) != "undefined") {_RecordType("<418,429,15>",(ArrayBuffer)); Inst18++; } } catch(e) {}
buffer = new ArrayBuffer(0x100);
try { if (Inst17 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<405,411,15>",(buffer)); Inst17++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (new Uint8Array(buffer).fill) != "undefined") {_RecordType("<446,473,16>",(new Uint8Array(buffer).fill)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Uint8Array) != "undefined") {_RecordType("<450,460,16>",(Uint8Array)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<461,467,16>",(buffer)); Inst22++; } } catch(e) {}
array = new Uint8Array(buffer).fill(55);
try { if (Inst19 <= 1000 && typeof (array) != "undefined") {_RecordType("<438,443,16>",(array)); Inst19++; } } catch(e) {}
tmp = {};
try { if (Inst23 <= 1000 && typeof (tmp) != "undefined") {_RecordType("<479,482,17>",(tmp)); Inst23++; } } catch(e) {}

tmp[Symbol.toPrimitive] = function () {
  return 0;
};
try { if (Inst24 <= 1000 && typeof (tmp[Symbol.toPrimitive]) != "undefined") {_RecordType("<490,513,19>",(tmp[Symbol.toPrimitive])); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (tmp) != "undefined") {_RecordType("<490,493,19>",(tmp)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Symbol.toPrimitive) != "undefined") {_RecordType("<494,512,19>",(Symbol.toPrimitive)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<494,500,19>",(Symbol)); Inst27++; } } catch(e) {}

false;
try { if (Inst28 <= 1000 && typeof (Array.prototype.includes.call) != "undefined") {_RecordType("<553,582,24>",(Array.prototype.includes.call)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (Array.prototype.includes) != "undefined") {_RecordType("<553,577,24>",(Array.prototype.includes)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<553,568,24>",(Array.prototype)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (Array) != "undefined") {_RecordType("<553,558,24>",(Array)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (array) != "undefined") {_RecordType("<583,588,24>",(array)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (tmp) != "undefined") {_RecordType("<596,599,24>",(tmp)); Inst33++; } } catch(e) {}
Array.prototype.includes.call(array, 0x00, tmp);
try { if (Inst35 <= 1000 && typeof (ArrayBuffer) != "undefined") {_RecordType("<615,626,25>",(ArrayBuffer)); Inst35++; } } catch(e) {}
buffer = new ArrayBuffer(0x100);
try { if (Inst34 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<602,608,25>",(buffer)); Inst34++; } } catch(e) {}
try { if (Inst37 <= 1000 && typeof (new Uint8Array(buffer).fill) != "undefined") {_RecordType("<643,670,26>",(new Uint8Array(buffer).fill)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (Uint8Array) != "undefined") {_RecordType("<647,657,26>",(Uint8Array)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<658,664,26>",(buffer)); Inst39++; } } catch(e) {}
array = new Uint8Array(buffer).fill(55);
try { if (Inst36 <= 1000 && typeof (array) != "undefined") {_RecordType("<635,640,26>",(array)); Inst36++; } } catch(e) {}
tmp = {};
try { if (Inst40 <= 1000 && typeof (tmp) != "undefined") {_RecordType("<676,679,27>",(tmp)); Inst40++; } } catch(e) {}

tmp[Symbol.toPrimitive] = function () {
  return 0;
};
try { if (Inst41 <= 1000 && typeof (tmp[Symbol.toPrimitive]) != "undefined") {_RecordType("<687,710,29>",(tmp[Symbol.toPrimitive])); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (tmp) != "undefined") {_RecordType("<687,690,29>",(tmp)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (Symbol.toPrimitive) != "undefined") {_RecordType("<691,709,29>",(Symbol.toPrimitive)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<691,697,29>",(Symbol)); Inst44++; } } catch(e) {}

true;
try { if (Inst45 <= 1000 && typeof (Array.prototype.includes.call) != "undefined") {_RecordType("<749,778,34>",(Array.prototype.includes.call)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (Array.prototype.includes) != "undefined") {_RecordType("<749,773,34>",(Array.prototype.includes)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<749,764,34>",(Array.prototype)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (Array) != "undefined") {_RecordType("<749,754,34>",(Array)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (array) != "undefined") {_RecordType("<779,784,34>",(array)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<786,795,34>",(undefined)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (tmp) != "undefined") {_RecordType("<797,800,34>",(tmp)); Inst51++; } } catch(e) {}
Array.prototype.includes.call(array, undefined, tmp);

