var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2017 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax
(function () {
try { if (Inst1 <= 1000 && typeof (Map) != "undefined") {_RecordType("<231,234,6>",(Map)); Inst1++; } } catch(e) {}
  const m = new Map();
try { if (Inst0 <= 1000 && typeof (m) != "undefined") {_RecordType("<223,224,6>",(m)); Inst0++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (Math.pow) != "undefined") {_RecordType("<250,258,7>",(Math.pow)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Math) != "undefined") {_RecordType("<250,254,7>",(Math)); Inst4++; } } catch(e) {}
  const k = Math.pow(2, 31) - 1;
try { if (Inst2 <= 1000 && typeof (k) != "undefined") {_RecordType("<246,247,7>",(k)); Inst2++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (m.set) != "undefined") {_RecordType("<273,278,8>",(m.set)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (m) != "undefined") {_RecordType("<273,274,8>",(m)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (k) != "undefined") {_RecordType("<279,280,8>",(k)); Inst7++; } } catch(e) {}
  m.set(k, 1);

try { if (Inst8 <= 1000 && typeof (foo) != "undefined") {_RecordType("<298,301,10>",(foo)); Inst8++; } } catch(e) {}
  function foo(m, k) {
try { if (Inst9 <= 1000 && typeof (m) != "undefined") {_RecordType("<302,303,10>",(m)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (k) != "undefined") {_RecordType("<305,306,10>",(k)); Inst10++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (m.get) != "undefined") {_RecordType("<321,326,11>",(m.get)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (m) != "undefined") {_RecordType("<321,322,11>",(m)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (k) != "undefined") {_RecordType("<327,328,11>",(k)); Inst13++; } } catch(e) {}
    return m.get(k | 0);
  }

  1;
try { if (Inst14 <= 1000 && typeof (foo) != "undefined") {_RecordType("<347,350,15>",(foo)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (m) != "undefined") {_RecordType("<351,352,15>",(m)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (k) != "undefined") {_RecordType("<354,355,15>",(k)); Inst16++; } } catch(e) {}
  foo(m, k);
  1;
try { if (Inst17 <= 1000 && typeof (foo) != "undefined") {_RecordType("<365,368,17>",(foo)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (m) != "undefined") {_RecordType("<369,370,17>",(m)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (k) != "undefined") {_RecordType("<372,373,17>",(k)); Inst19++; } } catch(e) {}
  foo(m, k);
  1;
try { if (Inst20 <= 1000 && typeof (foo) != "undefined") {_RecordType("<383,386,19>",(foo)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (m) != "undefined") {_RecordType("<387,388,19>",(m)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (k) != "undefined") {_RecordType("<390,391,19>",(k)); Inst22++; } } catch(e) {}
  foo(m, k);
})();

