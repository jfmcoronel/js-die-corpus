var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2014 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax
a = {
  y: 1.5
};
try { if (Inst0 <= 1000 && typeof (a) != "undefined") {_RecordType("<200,201,5>",(a)); Inst0++; } } catch(e) {}
a.y = 0;
try { if (Inst1 <= 1000 && typeof (a.y) != "undefined") {_RecordType("<218,221,8>",(a.y)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (a) != "undefined") {_RecordType("<218,219,8>",(a)); Inst2++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (a.y) != "undefined") {_RecordType("<231,234,9>",(a.y)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (a) != "undefined") {_RecordType("<231,232,9>",(a)); Inst5++; } } catch(e) {}
b = a.y;
try { if (Inst3 <= 1000 && typeof (b) != "undefined") {_RecordType("<227,228,9>",(b)); Inst3++; } } catch(e) {}
c = {
  y: {}
};
try { if (Inst6 <= 1000 && typeof (c) != "undefined") {_RecordType("<236,237,10>",(c)); Inst6++; } } catch(e) {}

try { if (Inst7 <= 1000 && typeof (f) != "undefined") {_RecordType("<263,264,14>",(f)); Inst7++; } } catch(e) {}
function f() {
  return 1;
}

try { if (Inst8 <= 1000 && typeof (g) != "undefined") {_RecordType("<293,294,18>",(g)); Inst8++; } } catch(e) {}
function g() {
try { if (Inst10 <= 1000 && typeof (b) != "undefined") {_RecordType("<318,319,20>",(b)); Inst10++; } } catch(e) {}
  var e = {
    y: b
  };
try { if (Inst9 <= 1000 && typeof (e) != "undefined") {_RecordType("<305,306,19>",(e)); Inst9++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (f) != "undefined") {_RecordType("<344,345,23>",(f)); Inst12++; } } catch(e) {}
  var d = {
    x: f()
  };
try { if (Inst11 <= 1000 && typeof (d) != "undefined") {_RecordType("<331,332,22>",(d)); Inst11++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (f) != "undefined") {_RecordType("<372,373,26>",(f)); Inst14++; } } catch(e) {}
  var d = {
    x: f()
  };
try { if (Inst13 <= 1000 && typeof (d) != "undefined") {_RecordType("<359,360,25>",(d)); Inst13++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (e) != "undefined") {_RecordType("<391,392,28>",(e)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (d) != "undefined") {_RecordType("<394,395,28>",(d)); Inst16++; } } catch(e) {}
  return [e, d];
}

try { if (Inst17 <= 1000 && typeof (g) != "undefined") {_RecordType("<401,402,31>",(g)); Inst17++; } } catch(e) {}
g();
try { if (Inst18 <= 1000 && typeof (g) != "undefined") {_RecordType("<406,407,32>",(g)); Inst18++; } } catch(e) {}
g();
1;
try { if (Inst19 <= 1000 && typeof (g()[1].x) != "undefined") {_RecordType("<414,422,34>",(g()[1].x)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (g()[1]) != "undefined") {_RecordType("<414,420,34>",(g()[1])); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (g) != "undefined") {_RecordType("<414,415,34>",(g)); Inst21++; } } catch(e) {}
g()[1].x;

