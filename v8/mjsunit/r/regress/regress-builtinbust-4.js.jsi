var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2014 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
try { if (Inst1 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<190,205,5>",(Array.prototype)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Array) != "undefined") {_RecordType("<190,195,5>",(Array)); Inst2++; } } catch(e) {}
var o = {
  __proto__: Array.prototype,
  0: "x"
};
try { if (Inst0 <= 1000 && typeof (o) != "undefined") {_RecordType("<171,172,4>",(o)); Inst0++; } } catch(e) {}

try { if (Inst3 <= 1000 && typeof (boomer) != "undefined") {_RecordType("<229,235,9>",(boomer)); Inst3++; } } catch(e) {}
function boomer() {
  return 0;
}

try { if (Inst4 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<255,276,13>",(Object.defineProperty)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Object) != "undefined") {_RecordType("<255,261,13>",(Object)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (o) != "undefined") {_RecordType("<277,278,13>",(o)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (boomer) != "undefined") {_RecordType("<299,305,14>",(boomer)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (boomer) != "undefined") {_RecordType("<314,320,15>",(boomer)); Inst8++; } } catch(e) {}
Object.defineProperty(o, "length", {
  get: boomer,
  set: boomer
});
try { if (Inst9 <= 1000 && typeof (Object.seal) != "undefined") {_RecordType("<325,336,17>",(Object.seal)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Object) != "undefined") {_RecordType("<325,331,17>",(Object)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (o) != "undefined") {_RecordType("<337,338,17>",(o)); Inst11++; } } catch(e) {}
Object.seal(o);

(function () {
try { if (Inst12 <= 1000 && typeof (o.push) != "undefined") {_RecordType("<359,365,20>",(o.push)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (o) != "undefined") {_RecordType("<359,360,20>",(o)); Inst13++; } } catch(e) {}
  o.push(1);
})();

0;
try { if (Inst14 <= 1000 && typeof (o.length) != "undefined") {_RecordType("<380,388,24>",(o.length)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (o) != "undefined") {_RecordType("<380,381,24>",(o)); Inst15++; } } catch(e) {}
o.length;
1;
try { if (Inst16 <= 1000 && typeof (o[0]) != "undefined") {_RecordType("<393,397,26>",(o[0])); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (o) != "undefined") {_RecordType("<393,394,26>",(o)); Inst17++; } } catch(e) {}
o[0];

(function () {
try { if (Inst18 <= 1000 && typeof (o.unshift) != "undefined") {_RecordType("<417,426,29>",(o.unshift)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (o) != "undefined") {_RecordType("<417,418,29>",(o)); Inst19++; } } catch(e) {}
  o.unshift(2);
})();

0;
try { if (Inst20 <= 1000 && typeof (o.length) != "undefined") {_RecordType("<441,449,33>",(o.length)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (o) != "undefined") {_RecordType("<441,442,33>",(o)); Inst21++; } } catch(e) {}
o.length;
2;
try { if (Inst22 <= 1000 && typeof (o[0]) != "undefined") {_RecordType("<454,458,35>",(o[0])); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (o) != "undefined") {_RecordType("<454,455,35>",(o)); Inst23++; } } catch(e) {}
o[0];

