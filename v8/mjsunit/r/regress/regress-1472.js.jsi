var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2011 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// Avoid excessive expansions of regexp repetitions inside regexp repetitions.
// Some of these caused stack overflows, others cause out-of-memory.
var r1 = /(?:a(?:b(?:c(?:d(?:e(?:f(?:g(?:h(?:i(?:j(?:k(?:l(?:m(?:n(?:o(?:p(?:q(?:r(?:s(?:t(?:u(?:v(?:w(?:x(?:y(?:z(?:FooBar)+)+)+)+)+)+)+)+)+)+)+)+)+)+)+)+)+)+)+)+)+)+)+)+)+)+)/;
try { if (Inst0 <= 1000 && typeof (r1) != "undefined") {_RecordType("<1749,1751,29>",(r1)); Inst0++; } } catch(e) {}
try { if (Inst1 <= 1000 && typeof ("xxx".match) != "undefined") {_RecordType("<1924,1935,30>",("xxx".match)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (r1) != "undefined") {_RecordType("<1936,1938,30>",(r1)); Inst2++; } } catch(e) {}
"xxx".match(r1);
var r2 = /(?:a(?:b(?:c(?:d(?:e(?:f(?:g(?:h(?:i(?:j(?:k(?:l(?:FooBar){0,2}){0,2}){0,2}){0,2}){0,2}){0,2}){0,2}){0,2}){0,2}){0,2}){0,2}){0,2}){0,2}/;
try { if (Inst3 <= 1000 && typeof (r2) != "undefined") {_RecordType("<1945,1947,31>",(r2)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof ("xxx".match) != "undefined") {_RecordType("<2089,2100,32>",("xxx".match)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (r2) != "undefined") {_RecordType("<2101,2103,32>",(r2)); Inst5++; } } catch(e) {}
"xxx".match(r2);
var r3 = /(?:a(?:b(?:c(?:d(?:e(?:f(?:g(?:h(?:i(?:j(?:k(?:l(?:FooBar){2}){2}){2}){2}){2}){2}){2}){2}){2}){2}){2}){2}){2}/;
try { if (Inst6 <= 1000 && typeof (r3) != "undefined") {_RecordType("<2110,2112,33>",(r3)); Inst6++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof ("xxx".match) != "undefined") {_RecordType("<2228,2239,34>",("xxx".match)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (r3) != "undefined") {_RecordType("<2240,2242,34>",(r3)); Inst8++; } } catch(e) {}
"xxx".match(r3);
var r4 = /(?:a(?:b(?:c(?:d(?:e(?:f(?:g(?:h(?:i(?:FooBar){3,6}){3,6}){3,6}){3,6}){3,6}){3,6}){3,6}){3,6}){3,6}){3,6}/;
try { if (Inst9 <= 1000 && typeof (r4) != "undefined") {_RecordType("<2249,2251,35>",(r4)); Inst9++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof ("xxx".match) != "undefined") {_RecordType("<2363,2374,36>",("xxx".match)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (r4) != "undefined") {_RecordType("<2375,2377,36>",(r4)); Inst11++; } } catch(e) {}
"xxx".match(r4);

