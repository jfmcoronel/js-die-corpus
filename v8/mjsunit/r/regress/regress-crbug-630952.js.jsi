var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2016 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --always-opt
try { if (Inst26 <= 1000 && typeof (e) != "undefined") {_RecordType("<699,700,31>",(e)); Inst26++; } } catch(e) {}
try {
try { if (Inst0 <= 1000 && typeof (__f_4) != "undefined") {_RecordType("<207,212,6>",(__f_4)); Inst0++; } } catch(e) {}
  function __f_4(sign_bit, mantissa_29_bits) {
try { if (Inst1 <= 1000 && typeof (sign_bit) != "undefined") {_RecordType("<213,221,6>",(sign_bit)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (mantissa_29_bits) != "undefined") {_RecordType("<223,239,6>",(mantissa_29_bits)); Inst2++; } } catch(e) {}
    ;
  }

  __f_4.prototype.returnSpecial = function () {
try { if (Inst6 <= 1000 && typeof (this.mantissa_29_bits) != "undefined") {_RecordType("<306,327,11>",(this.mantissa_29_bits)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (mantissa_29_shift) != "undefined") {_RecordType("<330,347,11>",(mantissa_29_shift)); Inst7++; } } catch(e) {}
    this.mantissa_29_bits * mantissa_29_shift;
  };
try { if (Inst3 <= 1000 && typeof (__f_4.prototype.returnSpecial) != "undefined") {_RecordType("<256,285,10>",(__f_4.prototype.returnSpecial)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (__f_4.prototype) != "undefined") {_RecordType("<256,271,10>",(__f_4.prototype)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (__f_4) != "undefined") {_RecordType("<256,261,10>",(__f_4)); Inst5++; } } catch(e) {}

  __f_4.prototype.toSingle = function () {
    if (-65535) {
try { if (Inst11 <= 1000 && typeof (this.toSingleSubnormal) != "undefined") {_RecordType("<429,451,16>",(this.toSingleSubnormal)); Inst11++; } } catch(e) {}
      return this.toSingleSubnormal();
    }
  };
try { if (Inst8 <= 1000 && typeof (__f_4.prototype.toSingle) != "undefined") {_RecordType("<357,381,14>",(__f_4.prototype.toSingle)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (__f_4.prototype) != "undefined") {_RecordType("<357,372,14>",(__f_4.prototype)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (__f_4) != "undefined") {_RecordType("<357,362,14>",(__f_4)); Inst10++; } } catch(e) {}

  __f_4.prototype.toSingleSubnormal = function () {
try { if (Inst15 <= 1000 && typeof (__v_15) != "undefined") {_RecordType("<527,533,21>",(__v_15)); Inst15++; } } catch(e) {}
    if (__v_15) {
try { if (Inst17 <= 1000 && typeof (this.mantissa_29_bits) != "undefined") {_RecordType("<555,576,22>",(this.mantissa_29_bits)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (__v_13) != "undefined") {_RecordType("<587,593,22>",(__v_13)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (__v_10) != "undefined") {_RecordType("<596,602,22>",(__v_10)); Inst19++; } } catch(e) {}
      var __v_7 = this.mantissa_29_bits == -1 && (__v_13 & __v_10) == 0;
try { if (Inst16 <= 1000 && typeof (__v_7) != "undefined") {_RecordType("<547,552,22>",(__v_7)); Inst16++; } } catch(e) {}
    }

try { if (Inst21 <= 1000 && typeof (__v_7) != "undefined") {_RecordType("<631,636,25>",(__v_7)); Inst21++; } } catch(e) {}
    __v_8 >>= __v_7;
try { if (Inst20 <= 1000 && typeof (__v_8) != "undefined") {_RecordType("<621,626,25>",(__v_8)); Inst20++; } } catch(e) {}
  };
try { if (Inst12 <= 1000 && typeof (__f_4.prototype.toSingleSubnormal) != "undefined") {_RecordType("<469,502,20>",(__f_4.prototype.toSingleSubnormal)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (__f_4.prototype) != "undefined") {_RecordType("<469,484,20>",(__f_4.prototype)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (__f_4) != "undefined") {_RecordType("<469,474,20>",(__f_4)); Inst14++; } } catch(e) {}

try { if (Inst23 <= 1000 && typeof (__f_4) != "undefined") {_RecordType("<659,664,28>",(__f_4)); Inst23++; } } catch(e) {}
  __v_14 = new __f_4();
try { if (Inst22 <= 1000 && typeof (__v_14) != "undefined") {_RecordType("<646,652,28>",(__v_14)); Inst22++; } } catch(e) {}

try { if (Inst24 <= 1000 && typeof (__v_14.toSingle) != "undefined") {_RecordType("<671,686,30>",(__v_14.toSingle)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (__v_14) != "undefined") {_RecordType("<671,677,30>",(__v_14)); Inst25++; } } catch(e) {}
  __v_14.toSingle();
} catch (e) {
  ;
}

