var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2013 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
try { if (Inst0 <= 1000 && typeof (pluck1) != "undefined") {_RecordType("<1606,1612,27>",(pluck1)); Inst0++; } } catch(e) {}
function pluck1(a, key) {
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<1613,1614,27>",(a)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (key) != "undefined") {_RecordType("<1616,1619,27>",(key)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (a.map) != "undefined") {_RecordType("<1632,1637,28>",(a.map)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (a) != "undefined") {_RecordType("<1632,1633,28>",(a)); Inst4++; } } catch(e) {}
  return a.map(function (item) {
try { if (Inst5 <= 1000 && typeof (item) != "undefined") {_RecordType("<1648,1652,28>",(item)); Inst5++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (item[key]) != "undefined") {_RecordType("<1667,1676,29>",(item[key])); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (item) != "undefined") {_RecordType("<1667,1671,29>",(item)); Inst7++; } } catch(e) {}
    return item[key];
  });
}

;
[2, 2];
try { if (Inst8 <= 1000 && typeof (pluck1) != "undefined") {_RecordType("<1697,1703,35>",(pluck1)); Inst8++; } } catch(e) {}
pluck1([[0, 0], [0, 0]], 'length');
[1, 3];
try { if (Inst9 <= 1000 && typeof (pluck1) != "undefined") {_RecordType("<1741,1747,37>",(pluck1)); Inst9++; } } catch(e) {}
pluck1([[1, 2], [3, 4]], '0');

try { if (Inst10 <= 1000 && typeof (pluck2) != "undefined") {_RecordType("<1782,1788,39>",(pluck2)); Inst10++; } } catch(e) {}
function pluck2(a, key) {
try { if (Inst11 <= 1000 && typeof (a) != "undefined") {_RecordType("<1789,1790,39>",(a)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (key) != "undefined") {_RecordType("<1792,1795,39>",(key)); Inst12++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (a.map) != "undefined") {_RecordType("<1808,1813,40>",(a.map)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (a) != "undefined") {_RecordType("<1808,1809,40>",(a)); Inst14++; } } catch(e) {}
  return a.map(function (item) {
try { if (Inst15 <= 1000 && typeof (item) != "undefined") {_RecordType("<1824,1828,40>",(item)); Inst15++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (item[key]) != "undefined") {_RecordType("<1843,1852,41>",(item[key])); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (item) != "undefined") {_RecordType("<1843,1847,41>",(item)); Inst17++; } } catch(e) {}
    return item[key];
  });
}

;
[2, 2];
try { if (Inst18 <= 1000 && typeof (pluck2) != "undefined") {_RecordType("<1873,1879,47>",(pluck2)); Inst18++; } } catch(e) {}
pluck2(["ab", "cd"], 'length');
["a", "c"];
try { if (Inst19 <= 1000 && typeof (pluck2) != "undefined") {_RecordType("<1917,1923,49>",(pluck2)); Inst19++; } } catch(e) {}
pluck2(["ab", "cd"], '0');

try { if (Inst20 <= 1000 && typeof (pluck3) != "undefined") {_RecordType("<1954,1960,51>",(pluck3)); Inst20++; } } catch(e) {}
function pluck3(a, key) {
try { if (Inst21 <= 1000 && typeof (a) != "undefined") {_RecordType("<1961,1962,51>",(a)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (key) != "undefined") {_RecordType("<1964,1967,51>",(key)); Inst22++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (a.map) != "undefined") {_RecordType("<1980,1985,52>",(a.map)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (a) != "undefined") {_RecordType("<1980,1981,52>",(a)); Inst24++; } } catch(e) {}
  return a.map(function (item) {
try { if (Inst25 <= 1000 && typeof (item) != "undefined") {_RecordType("<1996,2000,52>",(item)); Inst25++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (item[key]) != "undefined") {_RecordType("<2015,2024,53>",(item[key])); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (item) != "undefined") {_RecordType("<2015,2019,53>",(item)); Inst27++; } } catch(e) {}
    return item[key];
  });
}

;

f = function () {
  1;
};
try { if (Inst28 <= 1000 && typeof (f) != "undefined") {_RecordType("<2038,2039,59>",(f)); Inst28++; } } catch(e) {}

f.prototype = g = function () {
  2;
};
try { if (Inst29 <= 1000 && typeof (f.prototype) != "undefined") {_RecordType("<2065,2076,63>",(f.prototype)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (f) != "undefined") {_RecordType("<2065,2066,63>",(f)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (g) != "undefined") {_RecordType("<2079,2080,63>",(g)); Inst31++; } } catch(e) {}

try { if (Inst32 <= 1000 && typeof (g) != "undefined") {_RecordType("<2107,2108,67>",(g)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (g) != "undefined") {_RecordType("<2110,2111,67>",(g)); Inst33++; } } catch(e) {}
[g, g];
try { if (Inst34 <= 1000 && typeof (pluck3) != "undefined") {_RecordType("<2114,2120,68>",(pluck3)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (f) != "undefined") {_RecordType("<2122,2123,68>",(f)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (f) != "undefined") {_RecordType("<2125,2126,68>",(f)); Inst36++; } } catch(e) {}
pluck3([f, f], 'prototype');
try { if (Inst37 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<2144,2153,69>",(undefined)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<2155,2164,69>",(undefined)); Inst38++; } } catch(e) {}
[undefined, undefined];
try { if (Inst39 <= 1000 && typeof (pluck3) != "undefined") {_RecordType("<2167,2173,70>",(pluck3)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (f) != "undefined") {_RecordType("<2175,2176,70>",(f)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (f) != "undefined") {_RecordType("<2178,2179,70>",(f)); Inst41++; } } catch(e) {}
pluck3([f, f], '0');

