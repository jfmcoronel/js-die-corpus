var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2016 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax --opt --no-always-opt
var global = {};
try { if (Inst0 <= 1000 && typeof (global) != "undefined") {_RecordType("<226,232,5>",(global)); Inst0++; } } catch(e) {}
var fish = [{
  'name': 'foo'
}, {
  'name': 'bar'
}];
try { if (Inst1 <= 1000 && typeof (fish) != "undefined") {_RecordType("<243,247,6>",(fish)); Inst1++; } } catch(e) {}

for (var i = 0; i < fish.length; i++) {
try { if (Inst2 <= 1000 && typeof (i) != "undefined") {_RecordType("<304,305,12>",(i)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (i) != "undefined") {_RecordType("<311,312,12>",(i)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (fish.length) != "undefined") {_RecordType("<315,326,12>",(fish.length)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (fish) != "undefined") {_RecordType("<315,319,12>",(fish)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<328,329,12>",(i)); Inst6++; } } catch(e) {}
  global[fish[i].name] = 1;
try { if (Inst7 <= 1000 && typeof (global[fish[i].name]) != "undefined") {_RecordType("<337,357,13>",(global[fish[i].name])); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (global) != "undefined") {_RecordType("<337,343,13>",(global)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (fish[i].name) != "undefined") {_RecordType("<344,356,13>",(fish[i].name)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (fish[i]) != "undefined") {_RecordType("<344,351,13>",(fish[i])); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (fish) != "undefined") {_RecordType("<344,348,13>",(fish)); Inst11++; } } catch(e) {}
}

try { if (Inst12 <= 1000 && typeof (load) != "undefined") {_RecordType("<375,379,16>",(load)); Inst12++; } } catch(e) {}
function load() {
  var sum = 0;
try { if (Inst13 <= 1000 && typeof (sum) != "undefined") {_RecordType("<390,393,17>",(sum)); Inst13++; } } catch(e) {}

  for (var i = 0; i < fish.length; i++) {
try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<411,412,19>",(i)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<418,419,19>",(i)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (fish.length) != "undefined") {_RecordType("<422,433,19>",(fish.length)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (fish) != "undefined") {_RecordType("<422,426,19>",(fish)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (i) != "undefined") {_RecordType("<435,436,19>",(i)); Inst18++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (fish[i].name) != "undefined") {_RecordType("<457,469,20>",(fish[i].name)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (fish[i]) != "undefined") {_RecordType("<457,464,20>",(fish[i])); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (fish) != "undefined") {_RecordType("<457,461,20>",(fish)); Inst22++; } } catch(e) {}
    var name = fish[i].name;
try { if (Inst19 <= 1000 && typeof (name) != "undefined") {_RecordType("<450,454,20>",(name)); Inst19++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (global[name]) != "undefined") {_RecordType("<482,494,21>",(global[name])); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (global) != "undefined") {_RecordType("<482,488,21>",(global)); Inst25++; } } catch(e) {}
    sum += global[name];
try { if (Inst23 <= 1000 && typeof (sum) != "undefined") {_RecordType("<475,478,21>",(sum)); Inst23++; } } catch(e) {}
  }

try { if (Inst26 <= 1000 && typeof (sum) != "undefined") {_RecordType("<510,513,24>",(sum)); Inst26++; } } catch(e) {}
  return sum;
}

try { if (Inst27 <= 1000 && typeof (load) != "undefined") {_RecordType("<518,522,27>",(load)); Inst27++; } } catch(e) {}
load();
try { if (Inst28 <= 1000 && typeof (load) != "undefined") {_RecordType("<526,530,28>",(load)); Inst28++; } } catch(e) {}
load();
try { if (Inst29 <= 1000 && typeof (load) != "undefined") {_RecordType("<534,538,29>",(load)); Inst29++; } } catch(e) {}
load();
try { if (Inst30 <= 1000 && typeof (load) != "undefined") {_RecordType("<542,546,30>",(load)); Inst30++; } } catch(e) {}
load();

try { if (Inst31 <= 1000 && typeof (store) != "undefined") {_RecordType("<560,565,32>",(store)); Inst31++; } } catch(e) {}
function store() {
  for (var i = 0; i < fish.length; i++) {
try { if (Inst32 <= 1000 && typeof (i) != "undefined") {_RecordType("<581,582,33>",(i)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (i) != "undefined") {_RecordType("<588,589,33>",(i)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (fish.length) != "undefined") {_RecordType("<592,603,33>",(fish.length)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (fish) != "undefined") {_RecordType("<592,596,33>",(fish)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (i) != "undefined") {_RecordType("<605,606,33>",(i)); Inst36++; } } catch(e) {}
try { if (Inst38 <= 1000 && typeof (fish[i].name) != "undefined") {_RecordType("<627,639,34>",(fish[i].name)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (fish[i]) != "undefined") {_RecordType("<627,634,34>",(fish[i])); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (fish) != "undefined") {_RecordType("<627,631,34>",(fish)); Inst40++; } } catch(e) {}
    var name = fish[i].name;
try { if (Inst37 <= 1000 && typeof (name) != "undefined") {_RecordType("<620,624,34>",(name)); Inst37++; } } catch(e) {}
    global[name] = 1;
try { if (Inst41 <= 1000 && typeof (global[name]) != "undefined") {_RecordType("<645,657,35>",(global[name])); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (global) != "undefined") {_RecordType("<645,651,35>",(global)); Inst42++; } } catch(e) {}
  }
}

try { if (Inst43 <= 1000 && typeof (store) != "undefined") {_RecordType("<670,675,39>",(store)); Inst43++; } } catch(e) {}
store();
try { if (Inst44 <= 1000 && typeof (store) != "undefined") {_RecordType("<679,684,40>",(store)); Inst44++; } } catch(e) {}
store();
try { if (Inst45 <= 1000 && typeof (store) != "undefined") {_RecordType("<688,693,41>",(store)); Inst45++; } } catch(e) {}
store();
try { if (Inst46 <= 1000 && typeof (store) != "undefined") {_RecordType("<697,702,42>",(store)); Inst46++; } } catch(e) {}
store();

// Regression test for KeyedStoreIC bug: would use PROPERTY mode erroneously.
try { if (Inst47 <= 1000 && typeof (store_element) != "undefined") {_RecordType("<794,807,45>",(store_element)); Inst47++; } } catch(e) {}
function store_element(obj, key) {
try { if (Inst48 <= 1000 && typeof (obj) != "undefined") {_RecordType("<808,811,45>",(obj)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (key) != "undefined") {_RecordType("<813,816,45>",(key)); Inst49++; } } catch(e) {}
  obj[key] = 0;
try { if (Inst50 <= 1000 && typeof (obj[key]) != "undefined") {_RecordType("<822,830,46>",(obj[key])); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (obj) != "undefined") {_RecordType("<822,825,46>",(obj)); Inst51++; } } catch(e) {}
}

try { if (Inst53 <= 1000 && typeof (Array) != "undefined") {_RecordType("<852,857,49>",(Array)); Inst53++; } } catch(e) {}
var o1 = new Array(3);
try { if (Inst52 <= 1000 && typeof (o1) != "undefined") {_RecordType("<843,845,49>",(o1)); Inst52++; } } catch(e) {}
try { if (Inst55 <= 1000 && typeof (Array) != "undefined") {_RecordType("<875,880,50>",(Array)); Inst55++; } } catch(e) {}
var o2 = new Array(3);
try { if (Inst54 <= 1000 && typeof (o2) != "undefined") {_RecordType("<866,868,50>",(o2)); Inst54++; } } catch(e) {}
o2.o2 = "o2";
try { if (Inst56 <= 1000 && typeof (o2.o2) != "undefined") {_RecordType("<885,890,51>",(o2.o2)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (o2) != "undefined") {_RecordType("<885,887,51>",(o2)); Inst57++; } } catch(e) {}
try { if (Inst59 <= 1000 && typeof (Array) != "undefined") {_RecordType("<912,917,52>",(Array)); Inst59++; } } catch(e) {}
var o3 = new Array(3);
try { if (Inst58 <= 1000 && typeof (o3) != "undefined") {_RecordType("<903,905,52>",(o3)); Inst58++; } } catch(e) {}
o3.o3 = "o3";
try { if (Inst60 <= 1000 && typeof (o3.o3) != "undefined") {_RecordType("<922,927,53>",(o3.o3)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (o3) != "undefined") {_RecordType("<922,924,53>",(o3)); Inst61++; } } catch(e) {}
try { if (Inst63 <= 1000 && typeof (Array) != "undefined") {_RecordType("<949,954,54>",(Array)); Inst63++; } } catch(e) {}
var o4 = new Array(3);
try { if (Inst62 <= 1000 && typeof (o4) != "undefined") {_RecordType("<940,942,54>",(o4)); Inst62++; } } catch(e) {}
o4.o4 = "o4";
try { if (Inst64 <= 1000 && typeof (o4.o4) != "undefined") {_RecordType("<959,964,55>",(o4.o4)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (o4) != "undefined") {_RecordType("<959,961,55>",(o4)); Inst65++; } } catch(e) {}
try { if (Inst67 <= 1000 && typeof (Array) != "undefined") {_RecordType("<986,991,56>",(Array)); Inst67++; } } catch(e) {}
var o5 = new Array(3);
try { if (Inst66 <= 1000 && typeof (o5) != "undefined") {_RecordType("<977,979,56>",(o5)); Inst66++; } } catch(e) {}
o5.o5 = "o5"; // Make the KeyedStoreIC megamorphic.
try { if (Inst68 <= 1000 && typeof (o5.o5) != "undefined") {_RecordType("<996,1001,57>",(o5.o5)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (o5) != "undefined") {_RecordType("<996,998,57>",(o5)); Inst69++; } } catch(e) {}

try { if (Inst70 <= 1000 && typeof (store_element) != "undefined") {_RecordType("<1049,1062,59>",(store_element)); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (o1) != "undefined") {_RecordType("<1063,1065,59>",(o1)); Inst71++; } } catch(e) {}
store_element(o1, 0); // Premonomorphic

try { if (Inst72 <= 1000 && typeof (store_element) != "undefined") {_RecordType("<1090,1103,61>",(store_element)); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (o1) != "undefined") {_RecordType("<1104,1106,61>",(o1)); Inst73++; } } catch(e) {}
store_element(o1, 0); // Monomorphic

try { if (Inst74 <= 1000 && typeof (store_element) != "undefined") {_RecordType("<1128,1141,63>",(store_element)); Inst74++; } } catch(e) {}try { if (Inst75 <= 1000 && typeof (o2) != "undefined") {_RecordType("<1142,1144,63>",(o2)); Inst75++; } } catch(e) {}
store_element(o2, 0); // 2-way polymorphic.

try { if (Inst76 <= 1000 && typeof (store_element) != "undefined") {_RecordType("<1173,1186,65>",(store_element)); Inst76++; } } catch(e) {}try { if (Inst77 <= 1000 && typeof (o3) != "undefined") {_RecordType("<1187,1189,65>",(o3)); Inst77++; } } catch(e) {}
store_element(o3, 0); // 3-way polymorphic.

try { if (Inst78 <= 1000 && typeof (store_element) != "undefined") {_RecordType("<1218,1231,67>",(store_element)); Inst78++; } } catch(e) {}try { if (Inst79 <= 1000 && typeof (o4) != "undefined") {_RecordType("<1232,1234,67>",(o4)); Inst79++; } } catch(e) {}
store_element(o4, 0); // 4-way polymorphic.

try { if (Inst80 <= 1000 && typeof (store_element) != "undefined") {_RecordType("<1263,1276,69>",(store_element)); Inst80++; } } catch(e) {}try { if (Inst81 <= 1000 && typeof (o5) != "undefined") {_RecordType("<1277,1279,69>",(o5)); Inst81++; } } catch(e) {}
store_element(o5, 0); // Megamorphic.

try { if (Inst82 <= 1000 && typeof (inferrable_store) != "undefined") {_RecordType("<1311,1327,71>",(inferrable_store)); Inst82++; } } catch(e) {}
function inferrable_store(key) {
try { if (Inst83 <= 1000 && typeof (key) != "undefined") {_RecordType("<1328,1331,71>",(key)); Inst83++; } } catch(e) {}
try { if (Inst84 <= 1000 && typeof (store_element) != "undefined") {_RecordType("<1337,1350,72>",(store_element)); Inst84++; } } catch(e) {}try { if (Inst85 <= 1000 && typeof (o5) != "undefined") {_RecordType("<1351,1353,72>",(o5)); Inst85++; } } catch(e) {}try { if (Inst86 <= 1000 && typeof (key) != "undefined") {_RecordType("<1355,1358,72>",(key)); Inst86++; } } catch(e) {}
  store_element(o5, key);
}

try { if (Inst87 <= 1000 && typeof (inferrable_store) != "undefined") {_RecordType("<1364,1380,75>",(inferrable_store)); Inst87++; } } catch(e) {}
inferrable_store(0);
try { if (Inst88 <= 1000 && typeof (inferrable_store) != "undefined") {_RecordType("<1385,1401,76>",(inferrable_store)); Inst88++; } } catch(e) {}
inferrable_store(0);
try { if (Inst89 <= 1000 && typeof (inferrable_store) != "undefined") {_RecordType("<1406,1422,77>",(inferrable_store)); Inst89++; } } catch(e) {}
inferrable_store(0);
try { if (Inst90 <= 1000 && typeof (inferrable_store) != "undefined") {_RecordType("<1427,1443,78>",(inferrable_store)); Inst90++; } } catch(e) {}
inferrable_store();
// If |inferrable_store| emitted a generic keyed store, it won't deopt upon
// seeing a property name key. It should have inferred a receiver map and
// emitted an elements store, however.
try { if (Inst91 <= 1000 && typeof (inferrable_store) != "undefined") {_RecordType("<1636,1652,82>",(inferrable_store)); Inst91++; } } catch(e) {}
inferrable_store("deopt"); // TurboFan is not sophisticated enough to use key type provided by ICs.

try { if (Inst92 <= 1000 && typeof (isTurboFanned) != "undefined") {_RecordType("<1742,1755,84>",(isTurboFanned)); Inst92++; } } catch(e) {}try { if (Inst93 <= 1000 && typeof (inferrable_store) != "undefined") {_RecordType("<1756,1772,84>",(inferrable_store)); Inst93++; } } catch(e) {}
if (!isTurboFanned(inferrable_store)) {
try { if (Inst94 <= 1000 && typeof (inferrable_store) != "undefined") {_RecordType("<1779,1795,85>",(inferrable_store)); Inst94++; } } catch(e) {}
  inferrable_store();
}

