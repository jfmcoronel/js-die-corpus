var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2016 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
var obj = {
  _leftTime: 12345678,
  _divider: function () {
try { if (Inst2 <= 1000 && typeof (Math.floor) != "undefined") {_RecordType("<240,250,7>",(Math.floor)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Math) != "undefined") {_RecordType("<240,244,7>",(Math)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (this._leftTime) != "undefined") {_RecordType("<251,265,7>",(this._leftTime)); Inst4++; } } catch(e) {}
    var s = Math.floor(this._leftTime / 3600);
try { if (Inst1 <= 1000 && typeof (s) != "undefined") {_RecordType("<236,237,7>",(s)); Inst1++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (Math.floor) != "undefined") {_RecordType("<287,297,8>",(Math.floor)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Math) != "undefined") {_RecordType("<287,291,8>",(Math)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (s) != "undefined") {_RecordType("<298,299,8>",(s)); Inst8++; } } catch(e) {}
    var e = Math.floor(s / 24);
try { if (Inst5 <= 1000 && typeof (e) != "undefined") {_RecordType("<283,284,8>",(e)); Inst5++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (s) != "undefined") {_RecordType("<319,320,9>",(s)); Inst10++; } } catch(e) {}
    var i = s % 24;
try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<315,316,9>",(i)); Inst9++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (s) != "undefined") {_RecordType("<349,350,11>",(s)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (e) != "undefined") {_RecordType("<361,362,12>",(e)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<373,374,13>",(i)); Inst13++; } } catch(e) {}
    return {
      s: s,
      e: e,
      i: i
    };
  }
};
try { if (Inst0 <= 1000 && typeof (obj) != "undefined") {_RecordType("<171,174,4>",(obj)); Inst0++; } } catch(e) {}

for (var i = 0; i < 1000; i++) {
try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<399,400,18>",(i)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<406,407,18>",(i)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<416,417,18>",(i)); Inst16++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (obj._divider) != "undefined") {_RecordType("<425,437,19>",(obj._divider)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (obj) != "undefined") {_RecordType("<425,428,19>",(obj)); Inst18++; } } catch(e) {}
  obj._divider();
}

