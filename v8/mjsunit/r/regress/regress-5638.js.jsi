var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2017 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax
class MyErrorA {}
try { if (Inst0 <= 1000 && typeof (MyErrorA) != "undefined") {_RecordType("<206,214,5>",(MyErrorA)); Inst0++; } } catch(e) {}

class MyErrorB {}
try { if (Inst1 <= 1000 && typeof (MyErrorB) != "undefined") {_RecordType("<225,233,7>",(MyErrorB)); Inst1++; } } catch(e) {}

class A {}
try { if (Inst2 <= 1000 && typeof (A) != "undefined") {_RecordType("<244,245,9>",(A)); Inst2++; } } catch(e) {}

try { if (Inst6 <= 1000 && typeof (A) != "undefined") {_RecordType("<266,267,11>",(A)); Inst6++; } } catch(e) {}
class B extends A {
  constructor() {
try { if (Inst4 <= 1000 && typeof (e) != "undefined") {_RecordType("<326,327,15>",(e)); Inst4++; } } catch(e) {}
    try {
      super();
    } catch (e) {
try { if (Inst5 <= 1000 && typeof (MyErrorB) != "undefined") {_RecordType("<347,355,16>",(MyErrorB)); Inst5++; } } catch(e) {}
      throw new MyErrorB();
    }
  }

}
try { if (Inst3 <= 1000 && typeof (B) != "undefined") {_RecordType("<256,257,11>",(B)); Inst3++; } } catch(e) {}

try { if (Inst8 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<391,396,22>",(Proxy)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (A) != "undefined") {_RecordType("<397,398,22>",(A)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (get) != "undefined") {_RecordType("<404,407,23>",(get)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (target) != "undefined") {_RecordType("<408,414,23>",(target)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (property) != "undefined") {_RecordType("<416,424,23>",(property)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (receiver) != "undefined") {_RecordType("<426,434,23>",(receiver)); Inst13++; } } catch(e) {}
var thrower = new Proxy(A, {
  get(target, property, receiver) {
try { if (Inst14 <= 1000 && typeof (property) != "undefined") {_RecordType("<446,454,24>",(property)); Inst14++; } } catch(e) {}
    if (property === 'prototype') {
try { if (Inst15 <= 1000 && typeof (MyErrorA) != "undefined") {_RecordType("<490,498,25>",(MyErrorA)); Inst15++; } } catch(e) {}
      throw new MyErrorA();
    }
  }

});
try { if (Inst7 <= 1000 && typeof (thrower) != "undefined") {_RecordType("<377,384,22>",(thrower)); Inst7++; } } catch(e) {}

try { if (Inst16 <= 1000 && typeof (Reflect.construct) != "undefined") {_RecordType("<525,542,31>",(Reflect.construct)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<525,532,31>",(Reflect)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (B) != "undefined") {_RecordType("<543,544,31>",(B)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (thrower) != "undefined") {_RecordType("<550,557,31>",(thrower)); Inst19++; } } catch(e) {}
(() => Reflect.construct(B, [], thrower))();

try { if (Inst20 <= 1000 && typeof (MyErrorB) != "undefined") {_RecordType("<564,572,33>",(MyErrorB)); Inst20++; } } catch(e) {}
MyErrorB;

try { if (Inst21 <= 1000 && typeof (Reflect.construct) != "undefined") {_RecordType("<582,599,35>",(Reflect.construct)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<582,589,35>",(Reflect)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (B) != "undefined") {_RecordType("<600,601,35>",(B)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (thrower) != "undefined") {_RecordType("<607,614,35>",(thrower)); Inst24++; } } catch(e) {}
(() => Reflect.construct(B, [], thrower))();

try { if (Inst25 <= 1000 && typeof (MyErrorB) != "undefined") {_RecordType("<621,629,37>",(MyErrorB)); Inst25++; } } catch(e) {}
MyErrorB;

try { if (Inst26 <= 1000 && typeof (Reflect.construct) != "undefined") {_RecordType("<639,656,39>",(Reflect.construct)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<639,646,39>",(Reflect)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (B) != "undefined") {_RecordType("<657,658,39>",(B)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (thrower) != "undefined") {_RecordType("<664,671,39>",(thrower)); Inst29++; } } catch(e) {}
(() => Reflect.construct(B, [], thrower))();

try { if (Inst30 <= 1000 && typeof (MyErrorB) != "undefined") {_RecordType("<678,686,41>",(MyErrorB)); Inst30++; } } catch(e) {}
MyErrorB;

