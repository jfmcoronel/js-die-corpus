var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2015 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax
try { if (Inst0 <= 1000 && typeof (arguments_with_length_getter) != "undefined") {_RecordType("<209,237,5>",(arguments_with_length_getter)); Inst0++; } } catch(e) {}
function arguments_with_length_getter(f) {
try { if (Inst1 <= 1000 && typeof (f) != "undefined") {_RecordType("<238,239,5>",(f)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (arguments.__defineGetter__) != "undefined") {_RecordType("<245,271,6>",(arguments.__defineGetter__)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<245,254,6>",(arguments)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (f) != "undefined") {_RecordType("<282,283,6>",(f)); Inst4++; } } catch(e) {}
  arguments.__defineGetter__('length', f);

try { if (Inst5 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<296,305,8>",(arguments)); Inst5++; } } catch(e) {}
  return arguments;
}

var count = 0;
try { if (Inst6 <= 1000 && typeof (count) != "undefined") {_RecordType("<314,319,11>",(count)); Inst6++; } } catch(e) {}

try { if (Inst7 <= 1000 && typeof (increment_count_return) != "undefined") {_RecordType("<335,357,13>",(increment_count_return)); Inst7++; } } catch(e) {}
function increment_count_return() {
try { if (Inst8 <= 1000 && typeof (count) != "undefined") {_RecordType("<364,369,14>",(count)); Inst8++; } } catch(e) {}
  count++;
  return "boom";
}

try { if (Inst9 <= 1000 && typeof (increment_count_throw) != "undefined") {_RecordType("<402,423,18>",(increment_count_throw)); Inst9++; } } catch(e) {}
function increment_count_throw() {
try { if (Inst10 <= 1000 && typeof (count) != "undefined") {_RecordType("<430,435,19>",(count)); Inst10++; } } catch(e) {}
  count++;
  throw "boom";
} // Do not read the length of an arguments object on the prototype chain of
// an array.


var a1 = [];
try { if (Inst11 <= 1000 && typeof (a1) != "undefined") {_RecordType("<551,553,25>",(a1)); Inst11++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (f) != "undefined") {_RecordType("<560,561,26>",(f)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (a1) != "undefined") {_RecordType("<562,564,26>",(a1)); Inst13++; } } catch(e) {}
f(a1);
try { if (Inst16 <= 1000 && typeof (arguments_with_length_getter) != "undefined") {_RecordType("<582,610,27>",(arguments_with_length_getter)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (increment_count_return) != "undefined") {_RecordType("<611,633,27>",(increment_count_return)); Inst17++; } } catch(e) {}
a1.__proto__ = arguments_with_length_getter(increment_count_return);
try { if (Inst14 <= 1000 && typeof (a1.__proto__) != "undefined") {_RecordType("<567,579,27>",(a1.__proto__)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (a1) != "undefined") {_RecordType("<567,569,27>",(a1)); Inst15++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof ([].concat) != "undefined") {_RecordType("<636,645,28>",([].concat)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (a1) != "undefined") {_RecordType("<646,648,28>",(a1)); Inst19++; } } catch(e) {}
[].concat(a1);
0;
try { if (Inst20 <= 1000 && typeof (count) != "undefined") {_RecordType("<654,659,30>",(count)); Inst20++; } } catch(e) {}
count;
var a2 = [];
try { if (Inst21 <= 1000 && typeof (a2) != "undefined") {_RecordType("<665,667,31>",(a2)); Inst21++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (f) != "undefined") {_RecordType("<674,675,32>",(f)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (a2) != "undefined") {_RecordType("<676,678,32>",(a2)); Inst23++; } } catch(e) {}
f(a2);
try { if (Inst26 <= 1000 && typeof (arguments_with_length_getter) != "undefined") {_RecordType("<696,724,33>",(arguments_with_length_getter)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (increment_count_throw) != "undefined") {_RecordType("<725,746,33>",(increment_count_throw)); Inst27++; } } catch(e) {}
a2.__proto__ = arguments_with_length_getter(increment_count_throw);
try { if (Inst24 <= 1000 && typeof (a2.__proto__) != "undefined") {_RecordType("<681,693,33>",(a2.__proto__)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (a2) != "undefined") {_RecordType("<681,683,33>",(a2)); Inst25++; } } catch(e) {}
try { if (Inst28 <= 1000 && typeof ([].concat) != "undefined") {_RecordType("<749,758,34>",([].concat)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (a2) != "undefined") {_RecordType("<759,761,34>",(a2)); Inst29++; } } catch(e) {}
[].concat(a2);
0;
try { if (Inst30 <= 1000 && typeof (count) != "undefined") {_RecordType("<767,772,36>",(count)); Inst30++; } } catch(e) {}
count;
// Do read the length of an arguments object if spreadable.
try { if (Inst32 <= 1000 && typeof (arguments_with_length_getter) != "undefined") {_RecordType("<843,871,38>",(arguments_with_length_getter)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (increment_count_return) != "undefined") {_RecordType("<872,894,38>",(increment_count_return)); Inst33++; } } catch(e) {}
var a3 = arguments_with_length_getter(increment_count_return);
try { if (Inst31 <= 1000 && typeof (a3) != "undefined") {_RecordType("<838,840,38>",(a3)); Inst31++; } } catch(e) {}
a3[Symbol.isConcatSpreadable] = true;
try { if (Inst34 <= 1000 && typeof (a3[Symbol.isConcatSpreadable]) != "undefined") {_RecordType("<897,926,39>",(a3[Symbol.isConcatSpreadable])); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (a3) != "undefined") {_RecordType("<897,899,39>",(a3)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (Symbol.isConcatSpreadable) != "undefined") {_RecordType("<900,925,39>",(Symbol.isConcatSpreadable)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<900,906,39>",(Symbol)); Inst37++; } } catch(e) {}
try { if (Inst38 <= 1000 && typeof ([].concat) != "undefined") {_RecordType("<935,944,40>",([].concat)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (a3) != "undefined") {_RecordType("<945,947,40>",(a3)); Inst39++; } } catch(e) {}
[].concat(a3);
1;
try { if (Inst40 <= 1000 && typeof (count) != "undefined") {_RecordType("<953,958,42>",(count)); Inst40++; } } catch(e) {}
count;
try { if (Inst42 <= 1000 && typeof (arguments_with_length_getter) != "undefined") {_RecordType("<969,997,43>",(arguments_with_length_getter)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (increment_count_throw) != "undefined") {_RecordType("<998,1019,43>",(increment_count_throw)); Inst43++; } } catch(e) {}
var a4 = arguments_with_length_getter(increment_count_throw);
try { if (Inst41 <= 1000 && typeof (a4) != "undefined") {_RecordType("<964,966,43>",(a4)); Inst41++; } } catch(e) {}
a4[Symbol.isConcatSpreadable] = true;
try { if (Inst44 <= 1000 && typeof (a4[Symbol.isConcatSpreadable]) != "undefined") {_RecordType("<1022,1051,44>",(a4[Symbol.isConcatSpreadable])); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (a4) != "undefined") {_RecordType("<1022,1024,44>",(a4)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (Symbol.isConcatSpreadable) != "undefined") {_RecordType("<1025,1050,44>",(Symbol.isConcatSpreadable)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<1025,1031,44>",(Symbol)); Inst47++; } } catch(e) {}

(function () {
try { if (Inst48 <= 1000 && typeof ([].concat) != "undefined") {_RecordType("<1078,1087,47>",([].concat)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (a4) != "undefined") {_RecordType("<1088,1090,47>",(a4)); Inst49++; } } catch(e) {}
  [].concat(a4);
})();

2;
try { if (Inst50 <= 1000 && typeof (count) != "undefined") {_RecordType("<1103,1108,51>",(count)); Inst50++; } } catch(e) {}
count;
// Do read the length of an arguments object on the prototype chain of
// an object.
var a5 = {};
try { if (Inst51 <= 1000 && typeof (a5) != "undefined") {_RecordType("<1199,1201,54>",(a5)); Inst51++; } } catch(e) {}
try { if (Inst54 <= 1000 && typeof (arguments_with_length_getter) != "undefined") {_RecordType("<1223,1251,55>",(arguments_with_length_getter)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (increment_count_return) != "undefined") {_RecordType("<1252,1274,55>",(increment_count_return)); Inst55++; } } catch(e) {}
a5.__proto__ = arguments_with_length_getter(increment_count_return);
try { if (Inst52 <= 1000 && typeof (a5.__proto__) != "undefined") {_RecordType("<1208,1220,55>",(a5.__proto__)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (a5) != "undefined") {_RecordType("<1208,1210,55>",(a5)); Inst53++; } } catch(e) {}
a5[Symbol.isConcatSpreadable] = true;
try { if (Inst56 <= 1000 && typeof (a5[Symbol.isConcatSpreadable]) != "undefined") {_RecordType("<1277,1306,56>",(a5[Symbol.isConcatSpreadable])); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (a5) != "undefined") {_RecordType("<1277,1279,56>",(a5)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (Symbol.isConcatSpreadable) != "undefined") {_RecordType("<1280,1305,56>",(Symbol.isConcatSpreadable)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<1280,1286,56>",(Symbol)); Inst59++; } } catch(e) {}
try { if (Inst60 <= 1000 && typeof ([].concat) != "undefined") {_RecordType("<1315,1324,57>",([].concat)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (a5) != "undefined") {_RecordType("<1325,1327,57>",(a5)); Inst61++; } } catch(e) {}
[].concat(a5);
3;
try { if (Inst62 <= 1000 && typeof (count) != "undefined") {_RecordType("<1333,1338,59>",(count)); Inst62++; } } catch(e) {}
count;
var a6 = {};
try { if (Inst63 <= 1000 && typeof (a6) != "undefined") {_RecordType("<1344,1346,60>",(a6)); Inst63++; } } catch(e) {}
try { if (Inst66 <= 1000 && typeof (arguments_with_length_getter) != "undefined") {_RecordType("<1368,1396,61>",(arguments_with_length_getter)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (increment_count_throw) != "undefined") {_RecordType("<1397,1418,61>",(increment_count_throw)); Inst67++; } } catch(e) {}
a6.__proto__ = arguments_with_length_getter(increment_count_throw);
try { if (Inst64 <= 1000 && typeof (a6.__proto__) != "undefined") {_RecordType("<1353,1365,61>",(a6.__proto__)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (a6) != "undefined") {_RecordType("<1353,1355,61>",(a6)); Inst65++; } } catch(e) {}
a6[Symbol.isConcatSpreadable] = true;
try { if (Inst68 <= 1000 && typeof (a6[Symbol.isConcatSpreadable]) != "undefined") {_RecordType("<1421,1450,62>",(a6[Symbol.isConcatSpreadable])); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (a6) != "undefined") {_RecordType("<1421,1423,62>",(a6)); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (Symbol.isConcatSpreadable) != "undefined") {_RecordType("<1424,1449,62>",(Symbol.isConcatSpreadable)); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<1424,1430,62>",(Symbol)); Inst71++; } } catch(e) {}

(function () {
try { if (Inst72 <= 1000 && typeof ([].concat) != "undefined") {_RecordType("<1477,1486,65>",([].concat)); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (a6) != "undefined") {_RecordType("<1487,1489,65>",(a6)); Inst73++; } } catch(e) {}
  [].concat(a6);
})();

4;
try { if (Inst74 <= 1000 && typeof (count) != "undefined") {_RecordType("<1502,1507,69>",(count)); Inst74++; } } catch(e) {}
count;

