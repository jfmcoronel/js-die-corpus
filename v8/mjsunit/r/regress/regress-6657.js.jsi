var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2017 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
try { if (Inst0 <= 1000 && typeof (TestArrayNonEmptySpecies) != "undefined") {_RecordType("<177,201,4>",(TestArrayNonEmptySpecies)); Inst0++; } } catch(e) {}
(function TestArrayNonEmptySpecies() {
try { if (Inst2 <= 1000 && typeof (Array) != "undefined") {_RecordType("<230,235,5>",(Array)); Inst2++; } } catch(e) {}
  class MyArray extends Array {
    constructor() {
      return [1, 2, 3];
    }

  }
try { if (Inst1 <= 1000 && typeof (MyArray) != "undefined") {_RecordType("<214,221,5>",(MyArray)); Inst1++; } } catch(e) {}

  var a = [5, 4];
try { if (Inst3 <= 1000 && typeof (a) != "undefined") {_RecordType("<300,301,12>",(a)); Inst3++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (MyArray.prototype) != "undefined") {_RecordType("<328,345,13>",(MyArray.prototype)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (MyArray) != "undefined") {_RecordType("<328,335,13>",(MyArray)); Inst7++; } } catch(e) {}
  a.__proto__ = MyArray.prototype;
try { if (Inst4 <= 1000 && typeof (a.__proto__) != "undefined") {_RecordType("<314,325,13>",(a.__proto__)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (a) != "undefined") {_RecordType("<314,315,13>",(a)); Inst5++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (a.filter) != "undefined") {_RecordType("<357,365,14>",(a.filter)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (a) != "undefined") {_RecordType("<357,358,14>",(a)); Inst10++; } } catch(e) {}
  var o = a.filter(() => true);
try { if (Inst8 <= 1000 && typeof (o) != "undefined") {_RecordType("<353,354,14>",(o)); Inst8++; } } catch(e) {}
  [5, 4, 3];
try { if (Inst11 <= 1000 && typeof (o) != "undefined") {_RecordType("<394,395,16>",(o)); Inst11++; } } catch(e) {}
  o;
  3;
try { if (Inst12 <= 1000 && typeof (o.length) != "undefined") {_RecordType("<404,412,18>",(o.length)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (o) != "undefined") {_RecordType("<404,405,18>",(o)); Inst13++; } } catch(e) {}
  o.length;
})();

try { if (Inst14 <= 1000 && typeof (TestArrayLeakingSpeciesInsertInCallback) != "undefined") {_RecordType("<431,470,21>",(TestArrayLeakingSpeciesInsertInCallback)); Inst14++; } } catch(e) {}
(function TestArrayLeakingSpeciesInsertInCallback() {
  var my_array = [];
try { if (Inst15 <= 1000 && typeof (my_array) != "undefined") {_RecordType("<481,489,22>",(my_array)); Inst15++; } } catch(e) {}

try { if (Inst18 <= 1000 && typeof (Array) != "undefined") {_RecordType("<521,526,24>",(Array)); Inst18++; } } catch(e) {}
  class MyArray extends Array {
    constructor() {
try { if (Inst17 <= 1000 && typeof (my_array) != "undefined") {_RecordType("<562,570,26>",(my_array)); Inst17++; } } catch(e) {}
      return my_array;
    }

  }
try { if (Inst16 <= 1000 && typeof (MyArray) != "undefined") {_RecordType("<505,512,24>",(MyArray)); Inst16++; } } catch(e) {}

  var a = [5, 4];
try { if (Inst19 <= 1000 && typeof (a) != "undefined") {_RecordType("<590,591,31>",(a)); Inst19++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (MyArray.prototype) != "undefined") {_RecordType("<618,635,32>",(MyArray.prototype)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (MyArray) != "undefined") {_RecordType("<618,625,32>",(MyArray)); Inst23++; } } catch(e) {}
  a.__proto__ = MyArray.prototype;
try { if (Inst20 <= 1000 && typeof (a.__proto__) != "undefined") {_RecordType("<604,615,32>",(a.__proto__)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (a) != "undefined") {_RecordType("<604,605,32>",(a)); Inst21++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (a.filter) != "undefined") {_RecordType("<647,655,33>",(a.filter)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (a) != "undefined") {_RecordType("<647,648,33>",(a)); Inst26++; } } catch(e) {}
  var o = a.filter(() => (my_array[2] = 3, true));
try { if (Inst24 <= 1000 && typeof (o) != "undefined") {_RecordType("<643,644,33>",(o)); Inst24++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (my_array[2]) != "undefined") {_RecordType("<663,674,33>",(my_array[2])); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (my_array) != "undefined") {_RecordType("<663,671,33>",(my_array)); Inst28++; } } catch(e) {}
  [5, 4, 3];
try { if (Inst29 <= 1000 && typeof (o) != "undefined") {_RecordType("<703,704,35>",(o)); Inst29++; } } catch(e) {}
  o;
  3;
try { if (Inst30 <= 1000 && typeof (o.length) != "undefined") {_RecordType("<713,721,37>",(o.length)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (o) != "undefined") {_RecordType("<713,714,37>",(o)); Inst31++; } } catch(e) {}
  o.length;
})();

try { if (Inst32 <= 1000 && typeof (TestArrayLeakingSpeciesRemoveInCallback) != "undefined") {_RecordType("<740,779,40>",(TestArrayLeakingSpeciesRemoveInCallback)); Inst32++; } } catch(e) {}
(function TestArrayLeakingSpeciesRemoveInCallback() {
  var my_array = [];
try { if (Inst33 <= 1000 && typeof (my_array) != "undefined") {_RecordType("<790,798,41>",(my_array)); Inst33++; } } catch(e) {}

try { if (Inst36 <= 1000 && typeof (Array) != "undefined") {_RecordType("<830,835,43>",(Array)); Inst36++; } } catch(e) {}
  class MyArray extends Array {
    constructor() {
try { if (Inst35 <= 1000 && typeof (my_array) != "undefined") {_RecordType("<871,879,45>",(my_array)); Inst35++; } } catch(e) {}
      return my_array;
    }

  }
try { if (Inst34 <= 1000 && typeof (MyArray) != "undefined") {_RecordType("<814,821,43>",(MyArray)); Inst34++; } } catch(e) {}

  var a = [5, 4, 3, 2, 1];
try { if (Inst37 <= 1000 && typeof (a) != "undefined") {_RecordType("<899,900,50>",(a)); Inst37++; } } catch(e) {}
try { if (Inst40 <= 1000 && typeof (MyArray.prototype) != "undefined") {_RecordType("<936,953,51>",(MyArray.prototype)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (MyArray) != "undefined") {_RecordType("<936,943,51>",(MyArray)); Inst41++; } } catch(e) {}
  a.__proto__ = MyArray.prototype;
try { if (Inst38 <= 1000 && typeof (a.__proto__) != "undefined") {_RecordType("<922,933,51>",(a.__proto__)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (a) != "undefined") {_RecordType("<922,923,51>",(a)); Inst39++; } } catch(e) {}
try { if (Inst43 <= 1000 && typeof (a.filter) != "undefined") {_RecordType("<965,973,52>",(a.filter)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (a) != "undefined") {_RecordType("<965,966,52>",(a)); Inst44++; } } catch(e) {}
  var o = a.filter(() => (my_array.length = 0, true));
try { if (Inst42 <= 1000 && typeof (o) != "undefined") {_RecordType("<961,962,52>",(o)); Inst42++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (my_array.length) != "undefined") {_RecordType("<981,996,52>",(my_array.length)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (my_array) != "undefined") {_RecordType("<981,989,52>",(my_array)); Inst46++; } } catch(e) {}
  [,,,, 1];
try { if (Inst47 <= 1000 && typeof (o) != "undefined") {_RecordType("<1024,1025,54>",(o)); Inst47++; } } catch(e) {}
  o;
  5;
try { if (Inst48 <= 1000 && typeof (o.length) != "undefined") {_RecordType("<1034,1042,56>",(o.length)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (o) != "undefined") {_RecordType("<1034,1035,56>",(o)); Inst49++; } } catch(e) {}
  o.length;
})();

