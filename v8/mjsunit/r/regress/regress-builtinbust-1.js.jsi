var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2014 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
try { if (Inst0 <= 1000 && typeof (nope) != "undefined") {_RecordType("<176,180,4>",(nope)); Inst0++; } } catch(e) {}
function nope() {
  return false;
}

var a = [1, 2, 3];
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<208,209,8>",(a)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (Object.seal) != "undefined") {_RecordType("<223,234,9>",(Object.seal)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Object) != "undefined") {_RecordType("<223,229,9>",(Object)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (a) != "undefined") {_RecordType("<235,236,9>",(a)); Inst4++; } } catch(e) {}
Object.seal(a);
try { if (Inst7 <= 1000 && typeof (nope) != "undefined") {_RecordType("<257,261,10>",(nope)); Inst7++; } } catch(e) {}
Object.isSealed = nope;
try { if (Inst5 <= 1000 && typeof (Object.isSealed) != "undefined") {_RecordType("<239,254,10>",(Object.isSealed)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Object) != "undefined") {_RecordType("<239,245,10>",(Object)); Inst6++; } } catch(e) {}

(function () {
try { if (Inst8 <= 1000 && typeof (a.pop) != "undefined") {_RecordType("<281,286,13>",(a.pop)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (a) != "undefined") {_RecordType("<281,282,13>",(a)); Inst9++; } } catch(e) {}
  a.pop();
})();

try { if (Inst10 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<297,306,16>",(TypeError)); Inst10++; } } catch(e) {}
TypeError;

(function () {
try { if (Inst11 <= 1000 && typeof (a.push) != "undefined") {_RecordType("<326,332,19>",(a.push)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (a) != "undefined") {_RecordType("<326,327,19>",(a)); Inst12++; } } catch(e) {}
  a.push(5);
})();

try { if (Inst13 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<344,353,22>",(TypeError)); Inst13++; } } catch(e) {}
TypeError;

(function () {
try { if (Inst14 <= 1000 && typeof (a.shift) != "undefined") {_RecordType("<373,380,25>",(a.shift)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (a) != "undefined") {_RecordType("<373,374,25>",(a)); Inst15++; } } catch(e) {}
  a.shift();
})();

try { if (Inst16 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<391,400,28>",(TypeError)); Inst16++; } } catch(e) {}
TypeError;

(function () {
try { if (Inst17 <= 1000 && typeof (a.unshift) != "undefined") {_RecordType("<420,429,31>",(a.unshift)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (a) != "undefined") {_RecordType("<420,421,31>",(a)); Inst18++; } } catch(e) {}
  a.unshift(5);
})();

try { if (Inst19 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<441,450,34>",(TypeError)); Inst19++; } } catch(e) {}
TypeError;

(function () {
try { if (Inst20 <= 1000 && typeof (a.splice) != "undefined") {_RecordType("<470,478,37>",(a.splice)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (a) != "undefined") {_RecordType("<470,471,37>",(a)); Inst21++; } } catch(e) {}
  a.splice(0, 1);
})();

try { if (Inst22 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<493,502,40>",(TypeError)); Inst22++; } } catch(e) {}
TypeError;

