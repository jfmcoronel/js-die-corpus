var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2017 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax
try { if (Inst0 <= 1000 && typeof (generator) != "undefined") {_RecordType("<210,219,5>",(generator)); Inst0++; } } catch(e) {}
function* generator(a) {
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<220,221,5>",(a)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (a.pop().next) != "undefined") {_RecordType("<227,239,6>",(a.pop().next)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (a.pop) != "undefined") {_RecordType("<227,232,6>",(a.pop)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (a) != "undefined") {_RecordType("<227,228,6>",(a)); Inst4++; } } catch(e) {}
  a.pop().next();
}

try { if (Inst5 <= 1000 && typeof (prepareGenerators) != "undefined") {_RecordType("<255,272,9>",(prepareGenerators)); Inst5++; } } catch(e) {}
function prepareGenerators(n) {
try { if (Inst6 <= 1000 && typeof (n) != "undefined") {_RecordType("<273,274,9>",(n)); Inst6++; } } catch(e) {}
  var a = [{
    next: () => 0
  }];
try { if (Inst7 <= 1000 && typeof (a) != "undefined") {_RecordType("<284,285,10>",(a)); Inst7++; } } catch(e) {}

  for (var i = 0; i < n; ++i) {
try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<327,328,14>",(i)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<334,335,14>",(i)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (n) != "undefined") {_RecordType("<338,339,14>",(n)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<343,344,14>",(i)); Inst11++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (a.push) != "undefined") {_RecordType("<352,358,15>",(a.push)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (a) != "undefined") {_RecordType("<352,353,15>",(a)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (generator) != "undefined") {_RecordType("<359,368,15>",(generator)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (a) != "undefined") {_RecordType("<369,370,15>",(a)); Inst15++; } } catch(e) {}
    a.push(generator(a));
  }

try { if (Inst16 <= 1000 && typeof (a) != "undefined") {_RecordType("<388,389,18>",(a)); Inst16++; } } catch(e) {}
  return a;
}

try { if (Inst18 <= 1000 && typeof (prepareGenerators) != "undefined") {_RecordType("<406,423,21>",(prepareGenerators)); Inst18++; } } catch(e) {}
var gens1 = prepareGenerators(10);
try { if (Inst17 <= 1000 && typeof (gens1) != "undefined") {_RecordType("<398,403,21>",(gens1)); Inst17++; } } catch(e) {}

try { if (Inst19 <= 1000 && typeof (gens1.pop().next) != "undefined") {_RecordType("<437,453,23>",(gens1.pop().next)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (gens1.pop) != "undefined") {_RecordType("<437,446,23>",(gens1.pop)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (gens1) != "undefined") {_RecordType("<437,442,23>",(gens1)); Inst21++; } } catch(e) {}
(() => gens1.pop().next())();

try { if (Inst23 <= 1000 && typeof (prepareGenerators) != "undefined") {_RecordType("<473,490,25>",(prepareGenerators)); Inst23++; } } catch(e) {}
var gens2 = prepareGenerators(200000);
try { if (Inst22 <= 1000 && typeof (gens2) != "undefined") {_RecordType("<465,470,25>",(gens2)); Inst22++; } } catch(e) {}

try { if (Inst24 <= 1000 && typeof (gens2.pop().next) != "undefined") {_RecordType("<508,524,27>",(gens2.pop().next)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (gens2.pop) != "undefined") {_RecordType("<508,517,27>",(gens2.pop)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (gens2) != "undefined") {_RecordType("<508,513,27>",(gens2)); Inst26++; } } catch(e) {}
(() => gens2.pop().next())();

try { if (Inst27 <= 1000 && typeof (RangeError) != "undefined") {_RecordType("<532,542,29>",(RangeError)); Inst27++; } } catch(e) {}
RangeError;

