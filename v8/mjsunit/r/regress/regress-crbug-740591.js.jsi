var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2017 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
try { if (Inst0 <= 1000 && typeof (regressionCaseOne) != "undefined") {_RecordType("<177,194,4>",(regressionCaseOne)); Inst0++; } } catch(e) {}
(function regressionCaseOne() {
  var c;
try { if (Inst1 <= 1000 && typeof (c) != "undefined") {_RecordType("<205,206,5>",(c)); Inst1++; } } catch(e) {}

  for (let [a, b = c = function () {
    return a + b;
  }] of [[0]]) {
try { if (Inst2 <= 1000 && typeof (a) != "undefined") {_RecordType("<221,222,7>",(a)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (b) != "undefined") {_RecordType("<224,225,7>",(b)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (c) != "undefined") {_RecordType("<228,229,7>",(c)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (a) != "undefined") {_RecordType("<257,258,8>",(a)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (b) != "undefined") {_RecordType("<261,262,8>",(b)); Inst6++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (f) != "undefined") {_RecordType("<294,295,10>",(f)); Inst7++; } } catch(e) {}
    function f() {
try { if (Inst8 <= 1000 && typeof (a) != "undefined") {_RecordType("<313,314,11>",(a)); Inst8++; } } catch(e) {}
      return a;
    }

    ;
  }

try { if (Inst9 <= 1000 && typeof (c) != "undefined") {_RecordType("<336,337,17>",(c)); Inst9++; } } catch(e) {}
  c();
})();

try { if (Inst10 <= 1000 && typeof (testForInFunction) != "undefined") {_RecordType("<358,375,20>",(testForInFunction)); Inst10++; } } catch(e) {}
(function testForInFunction() {
  for (const {
    length: a,
    b = function () {
      return a, b;
    }
  } in {
    foo: 42
  }) {
try { if (Inst11 <= 1000 && typeof (a) != "undefined") {_RecordType("<407,408,22>",(a)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (b) != "undefined") {_RecordType("<414,415,23>",(b)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (a) != "undefined") {_RecordType("<445,446,24>",(a)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (b) != "undefined") {_RecordType("<448,449,24>",(b)); Inst14++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (b) != "undefined") {_RecordType("<489,490,29>",(b)); Inst15++; } } catch(e) {}
    b;

    (function () {
try { if (Inst16 <= 1000 && typeof (b) != "undefined") {_RecordType("<525,526,32>",(b)); Inst16++; } } catch(e) {}
      return b();
    })();
  }
})();

try { if (Inst17 <= 1000 && typeof (testForOfFunction) != "undefined") {_RecordType("<561,578,37>",(testForOfFunction)); Inst17++; } } catch(e) {}
(function testForOfFunction() {
  for (const [a, b = function () {
    return a, b;
  }] of [[42]]) {
try { if (Inst18 <= 1000 && typeof (a) != "undefined") {_RecordType("<597,598,38>",(a)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (b) != "undefined") {_RecordType("<600,601,38>",(b)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (a) != "undefined") {_RecordType("<629,630,39>",(a)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (b) != "undefined") {_RecordType("<632,633,39>",(b)); Inst21++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (b) != "undefined") {_RecordType("<657,658,41>",(b)); Inst22++; } } catch(e) {}
    b;

    (function () {
try { if (Inst23 <= 1000 && typeof (b) != "undefined") {_RecordType("<693,694,44>",(b)); Inst23++; } } catch(e) {}
      return b();
    })();
  }
})();

try { if (Inst24 <= 1000 && typeof (testForInVariableProxy) != "undefined") {_RecordType("<729,751,49>",(testForInVariableProxy)); Inst24++; } } catch(e) {}
(function testForInVariableProxy() {
  for (const {
    length: a,
    b = a
  } in {
    foo: 42
  }) {
try { if (Inst25 <= 1000 && typeof (a) != "undefined") {_RecordType("<783,784,51>",(a)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (b) != "undefined") {_RecordType("<790,791,52>",(b)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (a) != "undefined") {_RecordType("<794,795,52>",(a)); Inst27++; } } catch(e) {}
    3;
try { if (Inst28 <= 1000 && typeof (a) != "undefined") {_RecordType("<835,836,57>",(a)); Inst28++; } } catch(e) {}
    a;
try { if (Inst29 <= 1000 && typeof (a) != "undefined") {_RecordType("<842,843,58>",(a)); Inst29++; } } catch(e) {}
    a;
try { if (Inst30 <= 1000 && typeof (b) != "undefined") {_RecordType("<849,850,59>",(b)); Inst30++; } } catch(e) {}
    b;
  }
})();

try { if (Inst31 <= 1000 && typeof (testForOfVariableProxy) != "undefined") {_RecordType("<873,895,63>",(testForOfVariableProxy)); Inst31++; } } catch(e) {}
(function testForOfVariableProxy() {
  for (const [a, b = a] of [[42]]) {
try { if (Inst32 <= 1000 && typeof (a) != "undefined") {_RecordType("<914,915,64>",(a)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (b) != "undefined") {_RecordType("<917,918,64>",(b)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (a) != "undefined") {_RecordType("<921,922,64>",(a)); Inst34++; } } catch(e) {}
    42;
try { if (Inst35 <= 1000 && typeof (a) != "undefined") {_RecordType("<949,950,66>",(a)); Inst35++; } } catch(e) {}
    a;
try { if (Inst36 <= 1000 && typeof (a) != "undefined") {_RecordType("<956,957,67>",(a)); Inst36++; } } catch(e) {}
    a;
try { if (Inst37 <= 1000 && typeof (b) != "undefined") {_RecordType("<963,964,68>",(b)); Inst37++; } } catch(e) {}
    b;
  }
})();

try { if (Inst38 <= 1000 && typeof (testClassLiteral) != "undefined") {_RecordType("<987,1003,72>",(testClassLiteral)); Inst38++; } } catch(e) {}
(function testClassLiteral() {
  for (let {
    a,
    b = class c {
      static f() {
        return a, b;
      }

    }
  } of [{}]) {
try { if (Inst39 <= 1000 && typeof (a) != "undefined") {_RecordType("<1025,1026,74>",(a)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (b) != "undefined") {_RecordType("<1032,1033,75>",(b)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (c) != "undefined") {_RecordType("<1042,1043,75>",(c)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (a) != "undefined") {_RecordType("<1080,1081,77>",(a)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (b) != "undefined") {_RecordType("<1083,1084,77>",(b)); Inst43++; } } catch(e) {}
try { if (Inst44 <= 1000 && typeof (b) != "undefined") {_RecordType("<1120,1121,82>",(b)); Inst44++; } } catch(e) {}
    b;

    (function () {
try { if (Inst45 <= 1000 && typeof (b.f) != "undefined") {_RecordType("<1156,1159,85>",(b.f)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (b) != "undefined") {_RecordType("<1156,1157,85>",(b)); Inst46++; } } catch(e) {}
      return b.f();
    })();
  }
})(); // Methods in class literals remain inside the
// class scope after scope reparenting.


try { if (Inst47 <= 1000 && typeof (testClassLiteralMethod) != "undefined") {_RecordType("<1282,1304,92>",(testClassLiteralMethod)); Inst47++; } } catch(e) {}
(function testClassLiteralMethod() {
  for (let {
    a,
    b = class c {
      m() {
        return c;
      }

    }
  } of [{}]) {
try { if (Inst48 <= 1000 && typeof (a) != "undefined") {_RecordType("<1326,1327,94>",(a)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (b) != "undefined") {_RecordType("<1333,1334,95>",(b)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (c) != "undefined") {_RecordType("<1343,1344,95>",(c)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (c) != "undefined") {_RecordType("<1374,1375,97>",(c)); Inst51++; } } catch(e) {}
try { if (Inst52 <= 1000 && typeof (b) != "undefined") {_RecordType("<1411,1412,102>",(b)); Inst52++; } } catch(e) {}
    b;

    (function () {
try { if (Inst53 <= 1000 && typeof (new b().m) != "undefined") {_RecordType("<1447,1456,105>",(new b().m)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (b) != "undefined") {_RecordType("<1451,1452,105>",(b)); Inst54++; } } catch(e) {}
      return new b().m();
    })();
  }
})(); // Function literals in computed class names remain inside the
// class scope after scope reparenting.


try { if (Inst55 <= 1000 && typeof (testClassLiteralComputedName) != "undefined") {_RecordType("<1595,1623,112>",(testClassLiteralComputedName)); Inst55++; } } catch(e) {}
(function testClassLiteralComputedName() {
  let d;
try { if (Inst56 <= 1000 && typeof (d) != "undefined") {_RecordType("<1634,1635,113>",(d)); Inst56++; } } catch(e) {}

  for (let {
    a,
    b = class c {
      [d = function () {
        return c;
      }]() {
        ;
      }

    }
  } of [{}]) {
try { if (Inst57 <= 1000 && typeof (a) != "undefined") {_RecordType("<1655,1656,116>",(a)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (b) != "undefined") {_RecordType("<1662,1663,117>",(b)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (c) != "undefined") {_RecordType("<1672,1673,117>",(c)); Inst59++; } } catch(e) {}
try { if (Inst60 <= 1000 && typeof (b) != "undefined") {_RecordType("<1776,1777,126>",(b)); Inst60++; } } catch(e) {}
    b;

    (function () {
try { if (Inst61 <= 1000 && typeof (b) != "undefined") {_RecordType("<1812,1813,129>",(b)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (d) != "undefined") {_RecordType("<1815,1816,129>",(d)); Inst62++; } } catch(e) {}
      return b, d();
    })();
  }
})(); // Function literals in class extends expressions names remain inside the
// class scope after scope reparenting.


try { if (Inst63 <= 1000 && typeof (testClassLiteralComputedName) != "undefined") {_RecordType("<1966,1994,136>",(testClassLiteralComputedName)); Inst63++; } } catch(e) {}
(function testClassLiteralComputedName() {
  let d;
try { if (Inst64 <= 1000 && typeof (d) != "undefined") {_RecordType("<2005,2006,137>",(d)); Inst64++; } } catch(e) {}

  for (let {
    a,
    b = class c extends (d = function () {
      return c;
    }, Object) {}
  } of [{}]) {
try { if (Inst65 <= 1000 && typeof (a) != "undefined") {_RecordType("<2026,2027,140>",(a)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (b) != "undefined") {_RecordType("<2033,2034,141>",(b)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (c) != "undefined") {_RecordType("<2043,2044,141>",(c)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (d) != "undefined") {_RecordType("<2054,2055,141>",(d)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (c) != "undefined") {_RecordType("<2085,2086,142>",(c)); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (Object) != "undefined") {_RecordType("<2095,2101,143>",(Object)); Inst70++; } } catch(e) {}
try { if (Inst71 <= 1000 && typeof (b) != "undefined") {_RecordType("<2125,2126,145>",(b)); Inst71++; } } catch(e) {}
    b;

    (function () {
try { if (Inst72 <= 1000 && typeof (b) != "undefined") {_RecordType("<2161,2162,148>",(b)); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (d) != "undefined") {_RecordType("<2164,2165,148>",(d)); Inst73++; } } catch(e) {}
      return b, d();
    })();
  }
})();

