var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2016 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax
var a = {};
try { if (Inst0 <= 1000 && typeof (a) != "undefined") {_RecordType("<204,205,5>",(a)); Inst0++; } } catch(e) {}
var b = {};
try { if (Inst1 <= 1000 && typeof (b) != "undefined") {_RecordType("<216,217,6>",(b)); Inst1++; } } catch(e) {}
a.x = 1;
try { if (Inst2 <= 1000 && typeof (a.x) != "undefined") {_RecordType("<224,227,7>",(a.x)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (a) != "undefined") {_RecordType("<224,225,7>",(a)); Inst3++; } } catch(e) {}
a.y = 1;
try { if (Inst4 <= 1000 && typeof (a.y) != "undefined") {_RecordType("<233,236,8>",(a.y)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (a) != "undefined") {_RecordType("<233,234,8>",(a)); Inst5++; } } catch(e) {}
b.x = 1;
try { if (Inst6 <= 1000 && typeof (b.x) != "undefined") {_RecordType("<242,245,9>",(b.x)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (b) != "undefined") {_RecordType("<242,243,9>",(b)); Inst7++; } } catch(e) {}

try { if (Inst8 <= 1000 && typeof (foo) != "undefined") {_RecordType("<261,264,11>",(foo)); Inst8++; } } catch(e) {}
function foo(c) {
try { if (Inst9 <= 1000 && typeof (c) != "undefined") {_RecordType("<265,266,11>",(c)); Inst9++; } } catch(e) {}
  var s = 0;
try { if (Inst10 <= 1000 && typeof (s) != "undefined") {_RecordType("<276,277,12>",(s)); Inst10++; } } catch(e) {}

  for (var p in c) {
try { if (Inst11 <= 1000 && typeof (p) != "undefined") {_RecordType("<295,296,14>",(p)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (c) != "undefined") {_RecordType("<300,301,14>",(c)); Inst12++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (s) != "undefined") {_RecordType("<309,310,15>",(s)); Inst13++; } } catch(e) {}
    s++;
  }

try { if (Inst14 <= 1000 && typeof (s) != "undefined") {_RecordType("<328,329,18>",(s)); Inst14++; } } catch(e) {}
  return s;
}

2;
try { if (Inst15 <= 1000 && typeof (foo) != "undefined") {_RecordType("<337,340,22>",(foo)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (a) != "undefined") {_RecordType("<341,342,22>",(a)); Inst16++; } } catch(e) {}
foo(a);
1;
try { if (Inst17 <= 1000 && typeof (foo) != "undefined") {_RecordType("<348,351,24>",(foo)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (b) != "undefined") {_RecordType("<352,353,24>",(b)); Inst18++; } } catch(e) {}
foo(b);
2;
try { if (Inst19 <= 1000 && typeof (foo) != "undefined") {_RecordType("<359,362,26>",(foo)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (a) != "undefined") {_RecordType("<363,364,26>",(a)); Inst20++; } } catch(e) {}
foo(a);
1;
try { if (Inst21 <= 1000 && typeof (foo) != "undefined") {_RecordType("<370,373,28>",(foo)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (b) != "undefined") {_RecordType("<374,375,28>",(b)); Inst22++; } } catch(e) {}
foo(b);

