var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2017 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --expose-gc
try { if (Inst1 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<205,210,5>",(Proxy)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (defineProperty) != "undefined") {_RecordType("<219,233,6>",(defineProperty)); Inst2++; } } catch(e) {}
var proxy = new Proxy([], {
  defineProperty() {
    w.length = 1; // shorten the array so the backstore pointer is relocated
try { if (Inst3 <= 1000 && typeof (w.length) != "undefined") {_RecordType("<242,250,7>",(w.length)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (w) != "undefined") {_RecordType("<242,243,7>",(w)); Inst4++; } } catch(e) {}

try { if (Inst5 <= 1000 && typeof (gc) != "undefined") {_RecordType("<320,322,9>",(gc)); Inst5++; } } catch(e) {}
    gc(); // force gc to move the array's elements backstore

try { if (Inst6 <= 1000 && typeof (Object.defineProperty.apply) != "undefined") {_RecordType("<389,416,11>",(Object.defineProperty.apply)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<389,410,11>",(Object.defineProperty)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Object) != "undefined") {_RecordType("<389,395,11>",(Object)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<423,432,11>",(arguments)); Inst9++; } } catch(e) {}
    return Object.defineProperty.apply(this, arguments);
  }

});
try { if (Inst0 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<193,198,5>",(proxy)); Inst0++; } } catch(e) {}

try { if (Inst12 <= 1000 && typeof (Array) != "undefined") {_RecordType("<467,472,16>",(Array)); Inst12++; } } catch(e) {}
class MyArray extends Array {
  // custom constructor which returns a proxy object
  static get [Symbol.species]() {
    return function () {
try { if (Inst11 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<600,605,20>",(proxy)); Inst11++; } } catch(e) {}
      return proxy;
    };
  }

}
try { if (Inst10 <= 1000 && typeof (MyArray) != "undefined") {_RecordType("<451,458,16>",(MyArray)); Inst10++; } } catch(e) {}

try { if (Inst14 <= 1000 && typeof (MyArray) != "undefined") {_RecordType("<634,641,26>",(MyArray)); Inst14++; } } catch(e) {}
var w = new MyArray(100);
try { if (Inst13 <= 1000 && typeof (w) != "undefined") {_RecordType("<626,627,26>",(w)); Inst13++; } } catch(e) {}
w[1] = 0.1;
try { if (Inst15 <= 1000 && typeof (w[1]) != "undefined") {_RecordType("<648,652,27>",(w[1])); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (w) != "undefined") {_RecordType("<648,649,27>",(w)); Inst16++; } } catch(e) {}
w[2] = 0.1;
try { if (Inst17 <= 1000 && typeof (w[2]) != "undefined") {_RecordType("<660,664,28>",(w[2])); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (w) != "undefined") {_RecordType("<660,661,28>",(w)); Inst18++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (Array.prototype.concat.call) != "undefined") {_RecordType("<685,712,29>",(Array.prototype.concat.call)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Array.prototype.concat) != "undefined") {_RecordType("<685,707,29>",(Array.prototype.concat)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<685,700,29>",(Array.prototype)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Array) != "undefined") {_RecordType("<685,690,29>",(Array)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (w) != "undefined") {_RecordType("<713,714,29>",(w)); Inst24++; } } catch(e) {}
var result = Array.prototype.concat.call(w);
try { if (Inst19 <= 1000 && typeof (result) != "undefined") {_RecordType("<676,682,29>",(result)); Inst19++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<717,726,30>",(undefined)); Inst25++; } } catch(e) {}
undefined;
try { if (Inst26 <= 1000 && typeof (result[0]) != "undefined") {_RecordType("<728,737,31>",(result[0])); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (result) != "undefined") {_RecordType("<728,734,31>",(result)); Inst27++; } } catch(e) {}
result[0];
0.1;
try { if (Inst28 <= 1000 && typeof (result[1]) != "undefined") {_RecordType("<744,753,33>",(result[1])); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (result) != "undefined") {_RecordType("<744,750,33>",(result)); Inst29++; } } catch(e) {}
result[1];

for (var i = 2; i < 200; i++) {
try { if (Inst30 <= 1000 && typeof (i) != "undefined") {_RecordType("<765,766,35>",(i)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (i) != "undefined") {_RecordType("<772,773,35>",(i)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (i) != "undefined") {_RecordType("<781,782,35>",(i)); Inst32++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<790,799,36>",(undefined)); Inst33++; } } catch(e) {}
  undefined;
try { if (Inst34 <= 1000 && typeof (result[i]) != "undefined") {_RecordType("<803,812,37>",(result[i])); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (result) != "undefined") {_RecordType("<803,809,37>",(result)); Inst35++; } } catch(e) {}
  result[i];
}

