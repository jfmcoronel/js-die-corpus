var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2015 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax
try { if (Inst0 <= 1000 && typeof (f) != "undefined") {_RecordType("<209,210,5>",(f)); Inst0++; } } catch(e) {}
function f(a, i, bool) {
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<211,212,5>",(a)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (i) != "undefined") {_RecordType("<214,215,5>",(i)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (bool) != "undefined") {_RecordType("<217,221,5>",(bool)); Inst3++; } } catch(e) {}
  var result;
try { if (Inst4 <= 1000 && typeof (result) != "undefined") {_RecordType("<231,237,6>",(result)); Inst4++; } } catch(e) {}

try { if (Inst5 <= 1000 && typeof (bool) != "undefined") {_RecordType("<246,250,8>",(bool)); Inst5++; } } catch(e) {}
  if (bool) {
    // Make sure i - -0x80000000 doesn't overflow in BCE, missing a check for
    // x-0 later on.
try { if (Inst7 <= 1000 && typeof (f2) != "undefined") {_RecordType("<366,368,11>",(f2)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (a) != "undefined") {_RecordType("<369,370,11>",(a)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<384,385,11>",(i)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<387,388,11>",(i)); Inst10++; } } catch(e) {}
    result = f2(a, 0x7fffffff, i, i, -0x80000000);
try { if (Inst6 <= 1000 && typeof (result) != "undefined") {_RecordType("<357,363,11>",(result)); Inst6++; } } catch(e) {}
  } else {
try { if (Inst12 <= 1000 && typeof (f2) != "undefined") {_RecordType("<428,430,13>",(f2)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (a) != "undefined") {_RecordType("<431,432,13>",(a)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<441,442,13>",(i)); Inst14++; } } catch(e) {}
    result = f2(a, -3, 4, i, 0);
try { if (Inst11 <= 1000 && typeof (result) != "undefined") {_RecordType("<419,425,13>",(result)); Inst11++; } } catch(e) {}
  }

try { if (Inst15 <= 1000 && typeof (result) != "undefined") {_RecordType("<462,468,16>",(result)); Inst15++; } } catch(e) {}
  return result;
}

try { if (Inst16 <= 1000 && typeof (f2) != "undefined") {_RecordType("<482,484,19>",(f2)); Inst16++; } } catch(e) {}
function f2(a, c, x, i, d) {
try { if (Inst17 <= 1000 && typeof (a) != "undefined") {_RecordType("<485,486,19>",(a)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (c) != "undefined") {_RecordType("<488,489,19>",(c)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (x) != "undefined") {_RecordType("<491,492,19>",(x)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<494,495,19>",(i)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (d) != "undefined") {_RecordType("<497,498,19>",(d)); Inst21++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (a[x + c]) != "undefined") {_RecordType("<511,519,20>",(a[x + c])); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (a) != "undefined") {_RecordType("<511,512,20>",(a)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (x) != "undefined") {_RecordType("<513,514,20>",(x)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (c) != "undefined") {_RecordType("<517,518,20>",(c)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (a[x - 0]) != "undefined") {_RecordType("<522,530,20>",(a[x - 0])); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (a) != "undefined") {_RecordType("<522,523,20>",(a)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (x) != "undefined") {_RecordType("<524,525,20>",(x)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (a[i - d]) != "undefined") {_RecordType("<533,541,20>",(a[i - d])); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (a) != "undefined") {_RecordType("<533,534,20>",(a)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (i) != "undefined") {_RecordType("<535,536,20>",(i)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (d) != "undefined") {_RecordType("<539,540,20>",(d)); Inst32++; } } catch(e) {}
  return a[x + c] + a[x - 0] + a[i - d];
}

var a = [];
try { if (Inst33 <= 1000 && typeof (a) != "undefined") {_RecordType("<550,551,23>",(a)); Inst33++; } } catch(e) {}
var i = 0;
try { if (Inst34 <= 1000 && typeof (i) != "undefined") {_RecordType("<562,563,24>",(i)); Inst34++; } } catch(e) {}
try { if (Inst35 <= 1000 && typeof (a.push) != "undefined") {_RecordType("<569,575,25>",(a.push)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (a) != "undefined") {_RecordType("<569,570,25>",(a)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (i) != "undefined") {_RecordType("<576,577,25>",(i)); Inst37++; } } catch(e) {}
a.push(i++);
try { if (Inst38 <= 1000 && typeof (a.push) != "undefined") {_RecordType("<582,588,26>",(a.push)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (a) != "undefined") {_RecordType("<582,583,26>",(a)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (i) != "undefined") {_RecordType("<589,590,26>",(i)); Inst40++; } } catch(e) {}
a.push(i++);
try { if (Inst41 <= 1000 && typeof (a.push) != "undefined") {_RecordType("<595,601,27>",(a.push)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (a) != "undefined") {_RecordType("<595,596,27>",(a)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (i) != "undefined") {_RecordType("<602,603,27>",(i)); Inst43++; } } catch(e) {}
a.push(i++);
try { if (Inst44 <= 1000 && typeof (a.push) != "undefined") {_RecordType("<608,614,28>",(a.push)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (a) != "undefined") {_RecordType("<608,609,28>",(a)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (i) != "undefined") {_RecordType("<615,616,28>",(i)); Inst46++; } } catch(e) {}
a.push(i++);
try { if (Inst47 <= 1000 && typeof (a.push) != "undefined") {_RecordType("<621,627,29>",(a.push)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (a) != "undefined") {_RecordType("<621,622,29>",(a)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (i) != "undefined") {_RecordType("<628,629,29>",(i)); Inst49++; } } catch(e) {}
a.push(i++);
try { if (Inst50 <= 1000 && typeof (f) != "undefined") {_RecordType("<634,635,30>",(f)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (a) != "undefined") {_RecordType("<636,637,30>",(a)); Inst51++; } } catch(e) {}
f(a, 0, false);
try { if (Inst52 <= 1000 && typeof (f) != "undefined") {_RecordType("<650,651,31>",(f)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (a) != "undefined") {_RecordType("<652,653,31>",(a)); Inst53++; } } catch(e) {}
f(a, 0, false);
try { if (Inst54 <= 1000 && typeof (f) != "undefined") {_RecordType("<666,667,32>",(f)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (a) != "undefined") {_RecordType("<668,669,32>",(a)); Inst55++; } } catch(e) {}
f(a, 0, false);

