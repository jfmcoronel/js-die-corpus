var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2015 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// Flags: --max-old-space-size=60 --check-handle-count
table = [];
try { if (Inst0 <= 1000 && typeof (table) != "undefined") {_RecordType("<1652,1657,28>",(table)); Inst0++; } } catch(e) {}

for (var i = 0; i < 32; i++) {
try { if (Inst1 <= 1000 && typeof (i) != "undefined") {_RecordType("<1674,1675,30>",(i)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (i) != "undefined") {_RecordType("<1681,1682,30>",(i)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (i) != "undefined") {_RecordType("<1689,1690,30>",(i)); Inst3++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (String.fromCharCode) != "undefined") {_RecordType("<1709,1728,31>",(String.fromCharCode)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (String) != "undefined") {_RecordType("<1709,1715,31>",(String)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<1729,1730,31>",(i)); Inst8++; } } catch(e) {}
  table[i] = String.fromCharCode(i + 0x410);
try { if (Inst4 <= 1000 && typeof (table[i]) != "undefined") {_RecordType("<1698,1706,31>",(table[i])); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (table) != "undefined") {_RecordType("<1698,1703,31>",(table)); Inst5++; } } catch(e) {}
}

var random = function () {
  var seed = 10;
try { if (Inst10 <= 1000 && typeof (seed) != "undefined") {_RecordType("<1777,1781,35>",(seed)); Inst10++; } } catch(e) {}
  return function () {
try { if (Inst12 <= 1000 && typeof (seed) != "undefined") {_RecordType("<1822,1826,37>",(seed)); Inst12++; } } catch(e) {}
    seed = seed * 1009 % 8831;
try { if (Inst11 <= 1000 && typeof (seed) != "undefined") {_RecordType("<1815,1819,37>",(seed)); Inst11++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (seed) != "undefined") {_RecordType("<1853,1857,38>",(seed)); Inst13++; } } catch(e) {}
    return seed;
  };
}();
try { if (Inst9 <= 1000 && typeof (random) != "undefined") {_RecordType("<1748,1754,34>",(random)); Inst9++; } } catch(e) {}

try { if (Inst14 <= 1000 && typeof (key) != "undefined") {_RecordType("<1879,1882,42>",(key)); Inst14++; } } catch(e) {}
function key(length) {
try { if (Inst15 <= 1000 && typeof (length) != "undefined") {_RecordType("<1883,1889,42>",(length)); Inst15++; } } catch(e) {}
  var s = "";
try { if (Inst16 <= 1000 && typeof (s) != "undefined") {_RecordType("<1899,1900,43>",(s)); Inst16++; } } catch(e) {}

  for (var i = 0; i < length; i++) {
try { if (Inst17 <= 1000 && typeof (i) != "undefined") {_RecordType("<1919,1920,45>",(i)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (i) != "undefined") {_RecordType("<1926,1927,45>",(i)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (length) != "undefined") {_RecordType("<1930,1936,45>",(length)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<1938,1939,45>",(i)); Inst20++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (table[random() % 32]) != "undefined") {_RecordType("<1954,1974,46>",(table[random() % 32])); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (table) != "undefined") {_RecordType("<1954,1959,46>",(table)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (random) != "undefined") {_RecordType("<1960,1966,46>",(random)); Inst24++; } } catch(e) {}
    s += table[random() % 32];
try { if (Inst21 <= 1000 && typeof (s) != "undefined") {_RecordType("<1949,1950,46>",(s)); Inst21++; } } catch(e) {}
  }

try { if (Inst25 <= 1000 && typeof (s) != "undefined") {_RecordType("<1996,1997,49>",(s)); Inst25++; } } catch(e) {}
  return '"' + s + '"';
}

try { if (Inst26 <= 1000 && typeof (value) != "undefined") {_RecordType("<2017,2022,52>",(value)); Inst26++; } } catch(e) {}
function value() {
try { if (Inst27 <= 1000 && typeof (random) != "undefined") {_RecordType("<2059,2065,53>",(random)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (random) != "undefined") {_RecordType("<2088,2094,53>",(random)); Inst28++; } } catch(e) {}
  return '[{' + '"field1" : ' + random() + ', "field2" : ' + random() + '}]';
}

try { if (Inst29 <= 1000 && typeof (generate) != "undefined") {_RecordType("<2117,2125,56>",(generate)); Inst29++; } } catch(e) {}
function generate(n) {
try { if (Inst30 <= 1000 && typeof (n) != "undefined") {_RecordType("<2126,2127,56>",(n)); Inst30++; } } catch(e) {}
  var s = '{';
try { if (Inst31 <= 1000 && typeof (s) != "undefined") {_RecordType("<2137,2138,57>",(s)); Inst31++; } } catch(e) {}

  for (var i = 0; i < n; i++) {
try { if (Inst32 <= 1000 && typeof (i) != "undefined") {_RecordType("<2158,2159,59>",(i)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (i) != "undefined") {_RecordType("<2165,2166,59>",(i)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (n) != "undefined") {_RecordType("<2169,2170,59>",(n)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (i) != "undefined") {_RecordType("<2172,2173,59>",(i)); Inst35++; } } catch(e) {}
try { if (Inst36 <= 1000 && typeof (i) != "undefined") {_RecordType("<2187,2188,60>",(i)); Inst36++; } } catch(e) {}
    if (i > 0) {
      s += ', ';
try { if (Inst37 <= 1000 && typeof (s) != "undefined") {_RecordType("<2202,2203,61>",(s)); Inst37++; } } catch(e) {}
    }

try { if (Inst39 <= 1000 && typeof (key) != "undefined") {_RecordType("<2229,2232,64>",(key)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (random) != "undefined") {_RecordType("<2233,2239,64>",(random)); Inst40++; } } catch(e) {}
    s += key(random() % 10 + 7);
try { if (Inst38 <= 1000 && typeof (s) != "undefined") {_RecordType("<2224,2225,64>",(s)); Inst38++; } } catch(e) {}
    s += ':';
try { if (Inst41 <= 1000 && typeof (s) != "undefined") {_RecordType("<2257,2258,65>",(s)); Inst41++; } } catch(e) {}
try { if (Inst43 <= 1000 && typeof (value) != "undefined") {_RecordType("<2276,2281,66>",(value)); Inst43++; } } catch(e) {}
    s += value();
try { if (Inst42 <= 1000 && typeof (s) != "undefined") {_RecordType("<2271,2272,66>",(s)); Inst42++; } } catch(e) {}
  }

  s += '}';
try { if (Inst44 <= 1000 && typeof (s) != "undefined") {_RecordType("<2292,2293,69>",(s)); Inst44++; } } catch(e) {}
try { if (Inst45 <= 1000 && typeof (s) != "undefined") {_RecordType("<2311,2312,70>",(s)); Inst45++; } } catch(e) {}
  return s;
}

try { if (Inst46 <= 1000 && typeof (print) != "undefined") {_RecordType("<2317,2322,73>",(print)); Inst46++; } } catch(e) {}
print("generating");
try { if (Inst48 <= 1000 && typeof (generate) != "undefined") {_RecordType("<2348,2356,74>",(generate)); Inst48++; } } catch(e) {}
var str = generate(50000);
try { if (Inst47 <= 1000 && typeof (str) != "undefined") {_RecordType("<2342,2345,74>",(str)); Inst47++; } } catch(e) {}
try { if (Inst49 <= 1000 && typeof (print) != "undefined") {_RecordType("<2365,2370,75>",(print)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (str.length) != "undefined") {_RecordType("<2384,2394,75>",(str.length)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (str) != "undefined") {_RecordType("<2384,2387,75>",(str)); Inst51++; } } catch(e) {}
print("parsing " + str.length);
try { if (Inst52 <= 1000 && typeof (JSON.parse) != "undefined") {_RecordType("<2397,2407,76>",(JSON.parse)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<2397,2401,76>",(JSON)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (str) != "undefined") {_RecordType("<2408,2411,76>",(str)); Inst54++; } } catch(e) {}
JSON.parse(str);
try { if (Inst55 <= 1000 && typeof (print) != "undefined") {_RecordType("<2414,2419,77>",(print)); Inst55++; } } catch(e) {}
print("done");

