var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2013 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax
try { if (Inst0 <= 1000 && typeof (Cb) != "undefined") {_RecordType("<209,211,5>",(Cb)); Inst0++; } } catch(e) {}
function Cb(a, trigger) {
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<212,213,5>",(a)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (trigger) != "undefined") {_RecordType("<215,222,5>",(trigger)); Inst2++; } } catch(e) {}
  var f, g;
try { if (Inst3 <= 1000 && typeof (f) != "undefined") {_RecordType("<232,233,6>",(f)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (g) != "undefined") {_RecordType("<235,236,6>",(g)); Inst4++; } } catch(e) {}

  for (f = a.length; f--;) {
try { if (Inst5 <= 1000 && typeof (f) != "undefined") {_RecordType("<246,247,8>",(f)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<250,258,8>",(a.length)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (a) != "undefined") {_RecordType("<250,251,8>",(a)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (f) != "undefined") {_RecordType("<260,261,8>",(f)); Inst8++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (a.charCodeAt) != "undefined") {_RecordType("<276,288,9>",(a.charCodeAt)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (a) != "undefined") {_RecordType("<276,277,9>",(a)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (f) != "undefined") {_RecordType("<289,290,9>",(f)); Inst12++; } } catch(e) {}
    g = a.charCodeAt(f); // This will fail after OSR if Runtime_StringCharCodeAt is modified
try { if (Inst9 <= 1000 && typeof (g) != "undefined") {_RecordType("<272,273,9>",(g)); Inst9++; } } catch(e) {}
    // to iterates optimized frames and visit safepoint pointers.
  }

try { if (Inst13 <= 1000 && typeof (g) != "undefined") {_RecordType("<441,442,13>",(g)); Inst13++; } } catch(e) {}
  return g;
}

var s1 = "long string to make cons string 1";
try { if (Inst14 <= 1000 && typeof (s1) != "undefined") {_RecordType("<451,453,16>",(s1)); Inst14++; } } catch(e) {}
var s2 = "long string to make cons string 2";
try { if (Inst15 <= 1000 && typeof (s2) != "undefined") {_RecordType("<497,499,17>",(s2)); Inst15++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (Cb) != "undefined") {_RecordType("<539,541,18>",(Cb)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (s1) != "undefined") {_RecordType("<542,544,18>",(s1)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (s2) != "undefined") {_RecordType("<547,549,18>",(s2)); Inst18++; } } catch(e) {}
Cb(s1 + s2);
try { if (Inst19 <= 1000 && typeof (Cb) != "undefined") {_RecordType("<552,554,19>",(Cb)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (s1) != "undefined") {_RecordType("<555,557,19>",(s1)); Inst20++; } } catch(e) {}
Cb(s1);
var s3 = "string for triggering osr in Cb";
try { if (Inst21 <= 1000 && typeof (s3) != "undefined") {_RecordType("<564,566,20>",(s3)); Inst21++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (Cb) != "undefined") {_RecordType("<604,606,21>",(Cb)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (s3) != "undefined") {_RecordType("<607,609,21>",(s3)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (s3) != "undefined") {_RecordType("<612,614,21>",(s3)); Inst24++; } } catch(e) {}
Cb(s3 + s3);
try { if (Inst25 <= 1000 && typeof (Cb) != "undefined") {_RecordType("<617,619,22>",(Cb)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (s1) != "undefined") {_RecordType("<620,622,22>",(s1)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (s2) != "undefined") {_RecordType("<625,627,22>",(s2)); Inst27++; } } catch(e) {}
Cb(s1 + s2);

