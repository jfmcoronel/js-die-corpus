var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2017 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
try { if (Inst0 <= 1000 && typeof (foo) != "undefined") {_RecordType("<176,179,4>",(foo)); Inst0++; } } catch(e) {}
function foo(a) {
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<180,181,4>",(a)); Inst1++; } } catch(e) {}
  a[0] = 3;
try { if (Inst2 <= 1000 && typeof (a[0]) != "undefined") {_RecordType("<187,191,5>",(a[0])); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (a) != "undefined") {_RecordType("<187,188,5>",(a)); Inst3++; } } catch(e) {}
}

var v = [, 6];
try { if (Inst4 <= 1000 && typeof (v) != "undefined") {_RecordType("<204,205,8>",(v)); Inst4++; } } catch(e) {}
v.__proto__ = [];
try { if (Inst5 <= 1000 && typeof (v.__proto__) != "undefined") {_RecordType("<215,226,9>",(v.__proto__)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (v) != "undefined") {_RecordType("<215,216,9>",(v)); Inst6++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (foo) != "undefined") {_RecordType("<233,236,10>",(foo)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (v) != "undefined") {_RecordType("<237,238,10>",(v)); Inst8++; } } catch(e) {}
foo(v);
try { if (Inst9 <= 1000 && typeof (v[0]) != "undefined") {_RecordType("<248,252,11>",(v[0])); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (v) != "undefined") {_RecordType("<248,249,11>",(v)); Inst10++; } } catch(e) {}
delete v[0];
var count = 0;
try { if (Inst11 <= 1000 && typeof (count) != "undefined") {_RecordType("<258,263,12>",(count)); Inst11++; } } catch(e) {}

try { if (Inst12 <= 1000 && typeof (v.__proto__.__defineSetter__) != "undefined") {_RecordType("<270,298,14>",(v.__proto__.__defineSetter__)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (v.__proto__) != "undefined") {_RecordType("<270,281,14>",(v.__proto__)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (v) != "undefined") {_RecordType("<270,271,14>",(v)); Inst14++; } } catch(e) {}
v.__proto__.__defineSetter__(0, function () {
try { if (Inst15 <= 1000 && typeof (count) != "undefined") {_RecordType("<318,323,15>",(count)); Inst15++; } } catch(e) {}
  count++;
});

try { if (Inst16 <= 1000 && typeof (foo) != "undefined") {_RecordType("<332,335,18>",(foo)); Inst16++; } } catch(e) {}
foo([1,,, 2]);
try { if (Inst17 <= 1000 && typeof (foo) != "undefined") {_RecordType("<347,350,19>",(foo)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (v) != "undefined") {_RecordType("<351,352,19>",(v)); Inst18++; } } catch(e) {}
foo(v);
1;
try { if (Inst19 <= 1000 && typeof (count) != "undefined") {_RecordType("<358,363,21>",(count)); Inst19++; } } catch(e) {}
count;

