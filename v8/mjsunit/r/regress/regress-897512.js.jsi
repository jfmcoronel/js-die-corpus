var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2018 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Fill up the Array prototype's elements.
for (let i = 0; i < 100; i++) {
try { if (Inst0 <= 1000 && typeof (i) != "undefined") {_RecordType("<219,220,5>",(i)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (i) != "undefined") {_RecordType("<226,227,5>",(i)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (i) != "undefined") {_RecordType("<235,236,5>",(i)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (Array.prototype.unshift) != "undefined") {_RecordType("<244,267,6>",(Array.prototype.unshift)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<244,259,6>",(Array.prototype)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Array) != "undefined") {_RecordType("<244,249,6>",(Array)); Inst5++; } } catch(e) {}
  Array.prototype.unshift(3.14);
} // Create a holey double elements array.


const o31 = [1.1];
try { if (Inst6 <= 1000 && typeof (o31) != "undefined") {_RecordType("<326,329,10>",(o31)); Inst6++; } } catch(e) {}
o31[37] = 2.2; // Concat converts to dictionary elements.
try { if (Inst7 <= 1000 && typeof (o31[37]) != "undefined") {_RecordType("<339,346,11>",(o31[37])); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (o31) != "undefined") {_RecordType("<339,342,11>",(o31)); Inst8++; } } catch(e) {}

try { if (Inst10 <= 1000 && typeof (o31.concat) != "undefined") {_RecordType("<410,420,13>",(o31.concat)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (o31) != "undefined") {_RecordType("<410,413,13>",(o31)); Inst11++; } } catch(e) {}
const o51 = o31.concat(false); // Set one element to undefined to trigger the movement bug.
try { if (Inst9 <= 1000 && typeof (o51) != "undefined") {_RecordType("<404,407,13>",(o51)); Inst9++; } } catch(e) {}

try { if (Inst14 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<500,509,15>",(undefined)); Inst14++; } } catch(e) {}
o51[0] = undefined;
try { if (Inst12 <= 1000 && typeof (o51[0]) != "undefined") {_RecordType("<491,497,15>",(o51[0])); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (o51) != "undefined") {_RecordType("<491,494,15>",(o51)); Inst13++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (o51.length) != "undefined") {_RecordType("<511,521,16>",(o51.length)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (o51) != "undefined") {_RecordType("<511,514,16>",(o51)); Inst16++; } } catch(e) {}
o51.length;
39;
// Sort triggers the bug.
try { if (Inst17 <= 1000 && typeof (o51.sort) != "undefined") {_RecordType("<553,561,19>",(o51.sort)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (o51) != "undefined") {_RecordType("<553,556,19>",(o51)); Inst18++; } } catch(e) {}
o51.sort();
try { if (Inst19 <= 1000 && typeof (o51.length) != "undefined") {_RecordType("<565,575,20>",(o51.length)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (o51) != "undefined") {_RecordType("<565,568,20>",(o51)); Inst20++; } } catch(e) {}
o51.length;
39;

