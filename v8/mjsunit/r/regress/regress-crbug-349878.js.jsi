var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2014 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax
try { if (Inst0 <= 1000 && typeof (f) != "undefined") {_RecordType("<209,210,5>",(f)); Inst0++; } } catch(e) {}
function f(a, b) {
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<211,212,5>",(a)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (b) != "undefined") {_RecordType("<214,215,5>",(b)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (a) != "undefined") {_RecordType("<221,222,6>",(a)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (b) != "undefined") {_RecordType("<226,227,6>",(b)); Inst4++; } } catch(e) {}
  a == b;
}

try { if (Inst5 <= 1000 && typeof (f) != "undefined") {_RecordType("<232,233,9>",(f)); Inst5++; } } catch(e) {}
f({}, {});
var a = {
  y: 1.5
};
try { if (Inst6 <= 1000 && typeof (a) != "undefined") {_RecordType("<247,248,10>",(a)); Inst6++; } } catch(e) {}
a.y = 777;
try { if (Inst7 <= 1000 && typeof (a.y) != "undefined") {_RecordType("<265,268,13>",(a.y)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (a) != "undefined") {_RecordType("<265,266,13>",(a)); Inst8++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (a.y) != "undefined") {_RecordType("<284,287,14>",(a.y)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (a) != "undefined") {_RecordType("<284,285,14>",(a)); Inst11++; } } catch(e) {}
var b = a.y;
try { if (Inst9 <= 1000 && typeof (b) != "undefined") {_RecordType("<280,281,14>",(b)); Inst9++; } } catch(e) {}

try { if (Inst12 <= 1000 && typeof (h) != "undefined") {_RecordType("<299,300,16>",(h)); Inst12++; } } catch(e) {}
function h() {
  var d = 1;
try { if (Inst13 <= 1000 && typeof (d) != "undefined") {_RecordType("<311,312,17>",(d)); Inst13++; } } catch(e) {}
  var e = 777;
try { if (Inst14 <= 1000 && typeof (e) != "undefined") {_RecordType("<324,325,18>",(e)); Inst14++; } } catch(e) {}

try { if (Inst15 <= 1000 && typeof (d) != "undefined") {_RecordType("<343,344,20>",(d)); Inst15++; } } catch(e) {}
  while (d-- > 0) {
try { if (Inst16 <= 1000 && typeof (e) != "undefined") {_RecordType("<358,359,21>",(e)); Inst16++; } } catch(e) {}
    e++;
  }

try { if (Inst17 <= 1000 && typeof (f) != "undefined") {_RecordType("<370,371,24>",(f)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (e) != "undefined") {_RecordType("<375,376,24>",(e)); Inst18++; } } catch(e) {}
  f(1, e);
}

var global;
try { if (Inst19 <= 1000 && typeof (global) != "undefined") {_RecordType("<386,392,27>",(global)); Inst19++; } } catch(e) {}

try { if (Inst20 <= 1000 && typeof (g) != "undefined") {_RecordType("<404,405,29>",(g)); Inst20++; } } catch(e) {}
function g() {
try { if (Inst22 <= 1000 && typeof (b) != "undefined") {_RecordType("<421,422,30>",(b)); Inst22++; } } catch(e) {}
  global = b;
try { if (Inst21 <= 1000 && typeof (global) != "undefined") {_RecordType("<412,418,30>",(global)); Inst21++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (h) != "undefined") {_RecordType("<433,434,31>",(h)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (b) != "undefined") {_RecordType("<435,436,31>",(b)); Inst24++; } } catch(e) {}
  return h(b);
}

try { if (Inst25 <= 1000 && typeof (g) != "undefined") {_RecordType("<442,443,34>",(g)); Inst25++; } } catch(e) {}
g();
try { if (Inst26 <= 1000 && typeof (g) != "undefined") {_RecordType("<447,448,35>",(g)); Inst26++; } } catch(e) {}
g();
try { if (Inst27 <= 1000 && typeof (g) != "undefined") {_RecordType("<452,453,36>",(g)); Inst27++; } } catch(e) {}
g();

