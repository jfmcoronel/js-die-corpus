var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2018 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax --opt
// Intended to test bug [882233] on TF inlined (js-call-reducer) path.
try { if (Inst0 <= 1000 && typeof (shift_array) != "undefined") {_RecordType("<286,297,6>",(shift_array)); Inst0++; } } catch(e) {}
function shift_array() {
  let array = [];
try { if (Inst1 <= 1000 && typeof (array) != "undefined") {_RecordType("<308,313,7>",(array)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<322,343,8>",(Object.defineProperty)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Object) != "undefined") {_RecordType("<322,328,8>",(Object)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (array) != "undefined") {_RecordType("<344,349,8>",(array)); Inst4++; } } catch(e) {}
  Object.defineProperty(array, 'length', {
    writable: false
  });
try { if (Inst5 <= 1000 && typeof (array.shift) != "undefined") {_RecordType("<398,409,11>",(array.shift)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (array) != "undefined") {_RecordType("<398,403,11>",(array)); Inst6++; } } catch(e) {}
  return array.shift();
}

try { if (Inst7 <= 1000 && typeof (shift_array) != "undefined") {_RecordType("<416,427,14>",(shift_array)); Inst7++; } } catch(e) {}
shift_array();
try { if (Inst8 <= 1000 && typeof (shift_array) != "undefined") {_RecordType("<431,442,15>",(shift_array)); Inst8++; } } catch(e) {}
shift_array();
try { if (Inst9 <= 1000 && typeof (shift_array) != "undefined") {_RecordType("<446,457,16>",(shift_array)); Inst9++; } } catch(e) {}
shift_array();
try { if (Inst10 <= 1000 && typeof (shift_array) != "undefined") {_RecordType("<461,472,17>",(shift_array)); Inst10++; } } catch(e) {}
shift_array();

try { if (Inst11 <= 1000 && typeof (shift_object) != "undefined") {_RecordType("<486,498,19>",(shift_object)); Inst11++; } } catch(e) {}
function shift_object() {
  let object = {
    length: 0
  };
try { if (Inst12 <= 1000 && typeof (object) != "undefined") {_RecordType("<509,515,20>",(object)); Inst12++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<541,562,23>",(Object.defineProperty)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Object) != "undefined") {_RecordType("<541,547,23>",(Object)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (object) != "undefined") {_RecordType("<563,569,23>",(object)); Inst15++; } } catch(e) {}
  Object.defineProperty(object, 'length', {
    writable: false
  });
try { if (Inst16 <= 1000 && typeof (object.shift) != "undefined") {_RecordType("<618,630,26>",(object.shift)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (object) != "undefined") {_RecordType("<618,624,26>",(object)); Inst17++; } } catch(e) {}
  return object.shift();
}

try { if (Inst18 <= 1000 && typeof (shift_object) != "undefined") {_RecordType("<637,649,29>",(shift_object)); Inst18++; } } catch(e) {}
shift_object();
try { if (Inst19 <= 1000 && typeof (shift_object) != "undefined") {_RecordType("<653,665,30>",(shift_object)); Inst19++; } } catch(e) {}
shift_object();
try { if (Inst20 <= 1000 && typeof (shift_object) != "undefined") {_RecordType("<669,681,31>",(shift_object)); Inst20++; } } catch(e) {}
shift_object();
try { if (Inst21 <= 1000 && typeof (shift_object) != "undefined") {_RecordType("<685,697,32>",(shift_object)); Inst21++; } } catch(e) {}
shift_object();

