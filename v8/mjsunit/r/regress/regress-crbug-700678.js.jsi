var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2017 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
try { if (Inst0 <= 1000 && typeof (testNonConfigurableProperty) != "undefined") {_RecordType("<177,204,4>",(testNonConfigurableProperty)); Inst0++; } } catch(e) {}
(function testNonConfigurableProperty() {
try { if (Inst1 <= 1000 && typeof (ownKeys) != "undefined") {_RecordType("<220,227,5>",(ownKeys)); Inst1++; } } catch(e) {}
  function ownKeys(x) {
try { if (Inst2 <= 1000 && typeof (x) != "undefined") {_RecordType("<228,229,5>",(x)); Inst2++; } } catch(e) {}
    return ["23", "length"];
  }

  var target = [];
try { if (Inst3 <= 1000 && typeof (target) != "undefined") {_RecordType("<273,279,9>",(target)); Inst3++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<304,309,10>",(Proxy)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (target) != "undefined") {_RecordType("<310,316,10>",(target)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (ownKeys) != "undefined") {_RecordType("<333,340,11>",(ownKeys)); Inst7++; } } catch(e) {}
  var proxy = new Proxy(target, {
    ownKeys: ownKeys
  });
try { if (Inst4 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<292,297,10>",(proxy)); Inst4++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<349,370,13>",(Object.defineProperty)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Object) != "undefined") {_RecordType("<349,355,13>",(Object)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (target) != "undefined") {_RecordType("<371,377,13>",(target)); Inst10++; } } catch(e) {}
  Object.defineProperty(target, "23", {
    value: true
  });
  ["23", "length"];
try { if (Inst11 <= 1000 && typeof (Object.getOwnPropertyNames) != "undefined") {_RecordType("<431,457,17>",(Object.getOwnPropertyNames)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Object) != "undefined") {_RecordType("<431,437,17>",(Object)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<458,463,17>",(proxy)); Inst13++; } } catch(e) {}
  Object.getOwnPropertyNames(proxy);
})();

try { if (Inst14 <= 1000 && typeof (testPreventedExtension) != "undefined") {_RecordType("<483,505,20>",(testPreventedExtension)); Inst14++; } } catch(e) {}
(function testPreventedExtension() {
try { if (Inst15 <= 1000 && typeof (ownKeys) != "undefined") {_RecordType("<521,528,21>",(ownKeys)); Inst15++; } } catch(e) {}
  function ownKeys(x) {
try { if (Inst16 <= 1000 && typeof (x) != "undefined") {_RecordType("<529,530,21>",(x)); Inst16++; } } catch(e) {}
    return ["42", "length"];
  }

  var target = [];
try { if (Inst17 <= 1000 && typeof (target) != "undefined") {_RecordType("<574,580,25>",(target)); Inst17++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<605,610,26>",(Proxy)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (target) != "undefined") {_RecordType("<611,617,26>",(target)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (ownKeys) != "undefined") {_RecordType("<634,641,27>",(ownKeys)); Inst21++; } } catch(e) {}
  var proxy = new Proxy(target, {
    ownKeys: ownKeys
  });
try { if (Inst18 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<593,598,26>",(proxy)); Inst18++; } } catch(e) {}
  target[42] = true;
try { if (Inst22 <= 1000 && typeof (target[42]) != "undefined") {_RecordType("<650,660,29>",(target[42])); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (target) != "undefined") {_RecordType("<650,656,29>",(target)); Inst23++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (Object.preventExtensions) != "undefined") {_RecordType("<671,695,30>",(Object.preventExtensions)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Object) != "undefined") {_RecordType("<671,677,30>",(Object)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (target) != "undefined") {_RecordType("<696,702,30>",(target)); Inst26++; } } catch(e) {}
  Object.preventExtensions(target);
  ["42", "length"];
try { if (Inst27 <= 1000 && typeof (Object.getOwnPropertyNames) != "undefined") {_RecordType("<727,753,32>",(Object.getOwnPropertyNames)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (Object) != "undefined") {_RecordType("<727,733,32>",(Object)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<754,759,32>",(proxy)); Inst29++; } } catch(e) {}
  Object.getOwnPropertyNames(proxy);
})();

