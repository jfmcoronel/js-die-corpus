var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2017 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax
var array = [[{}], [1.1]];
try { if (Inst0 <= 1000 && typeof (array) != "undefined") {_RecordType("<204,209,5>",(array)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (transition) != "undefined") {_RecordType("<237,247,7>",(transition)); Inst1++; } } catch(e) {}
function transition() {
  for (var i = 0; i < array.length; i++) {
try { if (Inst2 <= 1000 && typeof (i) != "undefined") {_RecordType("<263,264,8>",(i)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (i) != "undefined") {_RecordType("<270,271,8>",(i)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (array.length) != "undefined") {_RecordType("<274,286,8>",(array.length)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (array) != "undefined") {_RecordType("<274,279,8>",(array)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<288,289,8>",(i)); Inst6++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (array[i]) != "undefined") {_RecordType("<309,317,9>",(array[i])); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (array) != "undefined") {_RecordType("<309,314,9>",(array)); Inst9++; } } catch(e) {}
    var arr = array[i];
try { if (Inst7 <= 1000 && typeof (arr) != "undefined") {_RecordType("<303,306,9>",(arr)); Inst7++; } } catch(e) {}
    arr[0] = {};
try { if (Inst10 <= 1000 && typeof (arr[0]) != "undefined") {_RecordType("<323,329,10>",(arr[0])); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (arr) != "undefined") {_RecordType("<323,326,10>",(arr)); Inst11++; } } catch(e) {}
  }
}

var double_arr2 = [1.1, 2.2];
try { if (Inst12 <= 1000 && typeof (double_arr2) != "undefined") {_RecordType("<347,358,14>",(double_arr2)); Inst12++; } } catch(e) {}
var flag = 0;
try { if (Inst13 <= 1000 && typeof (flag) != "undefined") {_RecordType("<377,381,15>",(flag)); Inst13++; } } catch(e) {}

try { if (Inst14 <= 1000 && typeof (swap) != "undefined") {_RecordType("<397,401,17>",(swap)); Inst14++; } } catch(e) {}
function swap() {
try { if (Inst15 <= 1000 && typeof (e) != "undefined") {_RecordType("<431,432,20>",(e)); Inst15++; } } catch(e) {}
  try {
    ;
  } catch (e) {
    ;
  } // Prevent Crankshaft from inlining this.


try { if (Inst16 <= 1000 && typeof (flag) != "undefined") {_RecordType("<496,500,25>",(flag)); Inst16++; } } catch(e) {}
  if (flag == 1) {
try { if (Inst19 <= 1000 && typeof (double_arr2) != "undefined") {_RecordType("<524,535,26>",(double_arr2)); Inst19++; } } catch(e) {}
    array[1] = double_arr2;
try { if (Inst17 <= 1000 && typeof (array[1]) != "undefined") {_RecordType("<513,521,26>",(array[1])); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (array) != "undefined") {_RecordType("<513,518,26>",(array)); Inst18++; } } catch(e) {}
  }
}

var expected = 6.176516726456e-312;
try { if (Inst20 <= 1000 && typeof (expected) != "undefined") {_RecordType("<548,556,30>",(expected)); Inst20++; } } catch(e) {}

try { if (Inst21 <= 1000 && typeof (f) != "undefined") {_RecordType("<590,591,32>",(f)); Inst21++; } } catch(e) {}
function f() {
try { if (Inst22 <= 1000 && typeof (swap) != "undefined") {_RecordType("<598,602,33>",(swap)); Inst22++; } } catch(e) {}
  swap();
  double_arr2[0] = 1;
try { if (Inst23 <= 1000 && typeof (double_arr2[0]) != "undefined") {_RecordType("<608,622,34>",(double_arr2[0])); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (double_arr2) != "undefined") {_RecordType("<608,619,34>",(double_arr2)); Inst24++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (transition) != "undefined") {_RecordType("<630,640,35>",(transition)); Inst25++; } } catch(e) {}
  transition();
try { if (Inst28 <= 1000 && typeof (expected) != "undefined") {_RecordType("<663,671,36>",(expected)); Inst28++; } } catch(e) {}
  double_arr2[1] = expected;
try { if (Inst26 <= 1000 && typeof (double_arr2[1]) != "undefined") {_RecordType("<646,660,36>",(double_arr2[1])); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (double_arr2) != "undefined") {_RecordType("<646,657,36>",(double_arr2)); Inst27++; } } catch(e) {}
}

for (var i = 0; i < 3; i++) {
try { if (Inst29 <= 1000 && typeof (i) != "undefined") {_RecordType("<685,686,39>",(i)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (i) != "undefined") {_RecordType("<692,693,39>",(i)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (i) != "undefined") {_RecordType("<699,700,39>",(i)); Inst31++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (f) != "undefined") {_RecordType("<708,709,40>",(f)); Inst32++; } } catch(e) {}
  f();
}

flag = 1;
try { if (Inst33 <= 1000 && typeof (flag) != "undefined") {_RecordType("<716,720,43>",(flag)); Inst33++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof (f) != "undefined") {_RecordType("<726,727,44>",(f)); Inst34++; } } catch(e) {}
f();
try { if (Inst35 <= 1000 && typeof (expected) != "undefined") {_RecordType("<731,739,45>",(expected)); Inst35++; } } catch(e) {}
expected;
try { if (Inst36 <= 1000 && typeof (double_arr2[1]) != "undefined") {_RecordType("<741,755,46>",(double_arr2[1])); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (double_arr2) != "undefined") {_RecordType("<741,752,46>",(double_arr2)); Inst37++; } } catch(e) {}
double_arr2[1];

