var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2014 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Escape '/'.
try { if (Inst0 <= 1000 && typeof (testEscapes) != "undefined") {_RecordType("<191,202,5>",(testEscapes)); Inst0++; } } catch(e) {}
function testEscapes(expected, regexp) {
try { if (Inst1 <= 1000 && typeof (expected) != "undefined") {_RecordType("<203,211,5>",(expected)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (regexp) != "undefined") {_RecordType("<213,219,5>",(regexp)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (expected) != "undefined") {_RecordType("<225,233,6>",(expected)); Inst3++; } } catch(e) {}
  expected;
try { if (Inst4 <= 1000 && typeof (regexp.source) != "undefined") {_RecordType("<237,250,7>",(regexp.source)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (regexp) != "undefined") {_RecordType("<237,243,7>",(regexp)); Inst5++; } } catch(e) {}
  regexp.source;
try { if (Inst6 <= 1000 && typeof (expected) != "undefined") {_RecordType("<260,268,8>",(expected)); Inst6++; } } catch(e) {}
  "/" + expected + "/";
try { if (Inst7 <= 1000 && typeof (regexp.toString) != "undefined") {_RecordType("<278,293,9>",(regexp.toString)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (regexp) != "undefined") {_RecordType("<278,284,9>",(regexp)); Inst8++; } } catch(e) {}
  regexp.toString();
}

try { if (Inst9 <= 1000 && typeof (testEscapes) != "undefined") {_RecordType("<300,311,12>",(testEscapes)); Inst9++; } } catch(e) {}
testEscapes("\\/", /\//);
try { if (Inst10 <= 1000 && typeof (testEscapes) != "undefined") {_RecordType("<326,337,13>",(testEscapes)); Inst10++; } } catch(e) {}
testEscapes("\\/\\/", /\/\//);
try { if (Inst11 <= 1000 && typeof (testEscapes) != "undefined") {_RecordType("<357,368,14>",(testEscapes)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<380,386,14>",(RegExp)); Inst12++; } } catch(e) {}
testEscapes("\\/", new RegExp("/"));
try { if (Inst13 <= 1000 && typeof (testEscapes) != "undefined") {_RecordType("<394,405,15>",(testEscapes)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<417,423,15>",(RegExp)); Inst14++; } } catch(e) {}
testEscapes("\\/", new RegExp("\\/"));
try { if (Inst15 <= 1000 && typeof (testEscapes) != "undefined") {_RecordType("<433,444,16>",(testEscapes)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<460,466,16>",(RegExp)); Inst16++; } } catch(e) {}
testEscapes("\\\\\\/", new RegExp("\\\\/"));
try { if (Inst17 <= 1000 && typeof (testEscapes) != "undefined") {_RecordType("<478,489,17>",(testEscapes)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<504,510,17>",(RegExp)); Inst18++; } } catch(e) {}
testEscapes("\\/\\/", new RegExp("\\/\\/"));
try { if (Inst19 <= 1000 && typeof (testEscapes) != "undefined") {_RecordType("<523,534,18>",(testEscapes)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<555,561,18>",(RegExp)); Inst20++; } } catch(e) {}
testEscapes("\\/\\/\\/\\/", new RegExp("////"));
try { if (Inst21 <= 1000 && typeof (testEscapes) != "undefined") {_RecordType("<572,583,19>",(testEscapes)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<604,610,19>",(RegExp)); Inst22++; } } catch(e) {}
testEscapes("\\/\\/\\/\\/", new RegExp("\\//\\//"));
try { if (Inst23 <= 1000 && typeof (testEscapes) != "undefined") {_RecordType("<625,636,20>",(testEscapes)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<649,655,20>",(RegExp)); Inst24++; } } catch(e) {}
testEscapes("(?:)", new RegExp("")); // Read-only property.

var r = /\/\//;
try { if (Inst25 <= 1000 && typeof (r) != "undefined") {_RecordType("<690,691,22>",(r)); Inst25++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (testEscapes) != "undefined") {_RecordType("<702,713,23>",(testEscapes)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (r) != "undefined") {_RecordType("<724,725,23>",(r)); Inst27++; } } catch(e) {}
testEscapes("\\/\\/", r);
r.source = "garbage";
try { if (Inst28 <= 1000 && typeof (r.source) != "undefined") {_RecordType("<728,736,24>",(r.source)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (r) != "undefined") {_RecordType("<728,729,24>",(r)); Inst29++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (testEscapes) != "undefined") {_RecordType("<750,761,25>",(testEscapes)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (r) != "undefined") {_RecordType("<772,773,25>",(r)); Inst31++; } } catch(e) {}
testEscapes("\\/\\/", r);

