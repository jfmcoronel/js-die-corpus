var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2009 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
try { if (Inst0 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<1597,1606,27>",(undefined)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<1610,1619,27>",(undefined)); Inst1++; } } catch(e) {}
undefined == undefined;
1;
try { if (Inst2 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<1624,1633,29>",(undefined)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<1637,1646,29>",(undefined)); Inst3++; } } catch(e) {}
undefined <= undefined;
2;
try { if (Inst4 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<1651,1660,31>",(undefined)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<1664,1673,31>",(undefined)); Inst5++; } } catch(e) {}
undefined >= undefined;
3;
try { if (Inst6 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<1678,1687,33>",(undefined)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<1690,1699,33>",(undefined)); Inst7++; } } catch(e) {}
undefined < undefined;
4;
try { if (Inst8 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<1704,1713,35>",(undefined)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<1716,1725,35>",(undefined)); Inst9++; } } catch(e) {}
undefined > undefined;
5;
null == null;
6;
null <= null;
7;
null >= null;
8;
null < null;
9;
null > null;
10;
void 0 == void 0;
11;
void 0 <= void 0;
12;
void 0 >= void 0;
13;
void 0 < void 0;
14;
void 0 > void 0;
15;
var x = void 0;
try { if (Inst10 <= 1000 && typeof (x) != "undefined") {_RecordType("<1926,1927,57>",(x)); Inst10++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (x) != "undefined") {_RecordType("<1938,1939,58>",(x)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (x) != "undefined") {_RecordType("<1943,1944,58>",(x)); Inst12++; } } catch(e) {}
x == x;
16;
try { if (Inst13 <= 1000 && typeof (x) != "undefined") {_RecordType("<1950,1951,60>",(x)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (x) != "undefined") {_RecordType("<1955,1956,60>",(x)); Inst14++; } } catch(e) {}
x <= x;
17;
try { if (Inst15 <= 1000 && typeof (x) != "undefined") {_RecordType("<1962,1963,62>",(x)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (x) != "undefined") {_RecordType("<1967,1968,62>",(x)); Inst16++; } } catch(e) {}
x >= x;
18;
try { if (Inst17 <= 1000 && typeof (x) != "undefined") {_RecordType("<1974,1975,64>",(x)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (x) != "undefined") {_RecordType("<1978,1979,64>",(x)); Inst18++; } } catch(e) {}
x < x;
19;
try { if (Inst19 <= 1000 && typeof (x) != "undefined") {_RecordType("<1985,1986,66>",(x)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (x) != "undefined") {_RecordType("<1989,1990,66>",(x)); Inst20++; } } catch(e) {}
x > x;
20;
var not_undefined = [null, 0, 1, 1 / 0, -1 / 0, "", true, false];
try { if (Inst21 <= 1000 && typeof (not_undefined) != "undefined") {_RecordType("<2000,2013,68>",(not_undefined)); Inst21++; } } catch(e) {}

for (var i = 0; i < not_undefined.length; i++) {
try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<2072,2073,70>",(i)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<2079,2080,70>",(i)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (not_undefined.length) != "undefined") {_RecordType("<2083,2103,70>",(not_undefined.length)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (not_undefined) != "undefined") {_RecordType("<2083,2096,70>",(not_undefined)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (i) != "undefined") {_RecordType("<2105,2106,70>",(i)); Inst26++; } } catch(e) {}
try { if (Inst28 <= 1000 && typeof (not_undefined[i]) != "undefined") {_RecordType("<2118,2134,71>",(not_undefined[i])); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (not_undefined) != "undefined") {_RecordType("<2118,2131,71>",(not_undefined)); Inst29++; } } catch(e) {}
  x = not_undefined[i];
try { if (Inst27 <= 1000 && typeof (x) != "undefined") {_RecordType("<2114,2115,71>",(x)); Inst27++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (x) != "undefined") {_RecordType("<2138,2139,72>",(x)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (x) != "undefined") {_RecordType("<2143,2144,72>",(x)); Inst31++; } } catch(e) {}
  x == x;
try { if (Inst32 <= 1000 && typeof (x) != "undefined") {_RecordType("<2158,2159,73>",(x)); Inst32++; } } catch(e) {}
  "" + 21 + x;
try { if (Inst33 <= 1000 && typeof (x) != "undefined") {_RecordType("<2163,2164,74>",(x)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (x) != "undefined") {_RecordType("<2168,2169,74>",(x)); Inst34++; } } catch(e) {}
  x <= x;
try { if (Inst35 <= 1000 && typeof (x) != "undefined") {_RecordType("<2183,2184,75>",(x)); Inst35++; } } catch(e) {}
  "" + 22 + x;
try { if (Inst36 <= 1000 && typeof (x) != "undefined") {_RecordType("<2188,2189,76>",(x)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (x) != "undefined") {_RecordType("<2193,2194,76>",(x)); Inst37++; } } catch(e) {}
  x >= x;
try { if (Inst38 <= 1000 && typeof (x) != "undefined") {_RecordType("<2208,2209,77>",(x)); Inst38++; } } catch(e) {}
  "" + 23 + x;
try { if (Inst39 <= 1000 && typeof (x) != "undefined") {_RecordType("<2213,2214,78>",(x)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (x) != "undefined") {_RecordType("<2217,2218,78>",(x)); Inst40++; } } catch(e) {}
  x < x;
try { if (Inst41 <= 1000 && typeof (x) != "undefined") {_RecordType("<2232,2233,79>",(x)); Inst41++; } } catch(e) {}
  "" + 24 + x;
try { if (Inst42 <= 1000 && typeof (x) != "undefined") {_RecordType("<2237,2238,80>",(x)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (x) != "undefined") {_RecordType("<2241,2242,80>",(x)); Inst43++; } } catch(e) {}
  x > x;
try { if (Inst44 <= 1000 && typeof (x) != "undefined") {_RecordType("<2256,2257,81>",(x)); Inst44++; } } catch(e) {}
  "" + 25 + x;
}

