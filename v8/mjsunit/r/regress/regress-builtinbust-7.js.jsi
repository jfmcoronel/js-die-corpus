var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2014 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
if ("Intl" in this) {
try { if (Inst0 <= 1000 && typeof (overflow) != "undefined") {_RecordType("<200,208,5>",(overflow)); Inst0++; } } catch(e) {}
  function overflow() {
try { if (Inst1 <= 1000 && typeof (overflow) != "undefined") {_RecordType("<224,232,6>",(overflow)); Inst1++; } } catch(e) {}
    return overflow() + 1;
  }

try { if (Inst4 <= 1000 && typeof (overflow) != "undefined") {_RecordType("<271,279,9>",(overflow)); Inst4++; } } catch(e) {}
  Object.defineProperty = overflow;
try { if (Inst2 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<247,268,9>",(Object.defineProperty)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Object) != "undefined") {_RecordType("<247,253,9>",(Object)); Inst3++; } } catch(e) {}

  (function () {
try { if (Inst5 <= 1000 && typeof (Intl.Collator.supportedLocalesOf) != "undefined") {_RecordType("<303,335,12>",(Intl.Collator.supportedLocalesOf)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Intl.Collator) != "undefined") {_RecordType("<303,316,12>",(Intl.Collator)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Intl) != "undefined") {_RecordType("<303,307,12>",(Intl)); Inst7++; } } catch(e) {}
    Intl.Collator.supportedLocalesOf("en");
  })();

try { if (Inst9 <= 1000 && typeof (Date) != "undefined") {_RecordType("<369,373,15>",(Date)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Date.UTC) != "undefined") {_RecordType("<374,382,15>",(Date.UTC)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Date) != "undefined") {_RecordType("<374,378,15>",(Date)); Inst11++; } } catch(e) {}
  var date = new Date(Date.UTC(2004, 12, 25, 3, 0, 0));
try { if (Inst8 <= 1000 && typeof (date) != "undefined") {_RecordType("<358,362,15>",(date)); Inst8++; } } catch(e) {}
  var options = {
    weekday: "long",
    year: "numeric",
    month: "long",
    day: "numeric"
  };
try { if (Inst12 <= 1000 && typeof (options) != "undefined") {_RecordType("<414,421,16>",(options)); Inst12++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (overflow) != "undefined") {_RecordType("<528,536,22>",(overflow)); Inst15++; } } catch(e) {}
  Object.apply = overflow;
try { if (Inst13 <= 1000 && typeof (Object.apply) != "undefined") {_RecordType("<513,525,22>",(Object.apply)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Object) != "undefined") {_RecordType("<513,519,22>",(Object)); Inst14++; } } catch(e) {}

  (function () {
try { if (Inst16 <= 1000 && typeof (date.toLocaleDateString) != "undefined") {_RecordType("<560,583,25>",(date.toLocaleDateString)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (date) != "undefined") {_RecordType("<560,564,25>",(date)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (options) != "undefined") {_RecordType("<593,600,25>",(options)); Inst18++; } } catch(e) {}
    date.toLocaleDateString("de-DE", options);
  })();

  var options_incomplete = {};
try { if (Inst19 <= 1000 && typeof (options_incomplete) != "undefined") {_RecordType("<618,636,28>",(options_incomplete)); Inst19++; } } catch(e) {}

  (function () {
try { if (Inst20 <= 1000 && typeof (date.toLocaleDateString) != "undefined") {_RecordType("<665,688,31>",(date.toLocaleDateString)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (date) != "undefined") {_RecordType("<665,669,31>",(date)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (options_incomplete) != "undefined") {_RecordType("<698,716,31>",(options_incomplete)); Inst22++; } } catch(e) {}
    date.toLocaleDateString("de-DE", options_incomplete);
  })();

try { if (Inst23 <= 1000 && typeof (options_incomplete.hasOwnProperty) != "undefined") {_RecordType("<730,763,34>",(options_incomplete.hasOwnProperty)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (options_incomplete) != "undefined") {_RecordType("<730,748,34>",(options_incomplete)); Inst24++; } } catch(e) {}
  options_incomplete.hasOwnProperty("year");

  (function () {
try { if (Inst25 <= 1000 && typeof (date.toLocaleDateString) != "undefined") {_RecordType("<795,818,37>",(date.toLocaleDateString)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (date) != "undefined") {_RecordType("<795,799,37>",(date)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<828,837,37>",(undefined)); Inst27++; } } catch(e) {}
    date.toLocaleDateString("de-DE", undefined);
  })();

  (function () {
try { if (Inst28 <= 1000 && typeof (date.toLocaleDateString) != "undefined") {_RecordType("<870,893,41>",(date.toLocaleDateString)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (date) != "undefined") {_RecordType("<870,874,41>",(date)); Inst29++; } } catch(e) {}
    date.toLocaleDateString("de-DE");
  })();

  (function () {
try { if (Inst30 <= 1000 && typeof (date.toLocaleDateString) != "undefined") {_RecordType("<934,957,45>",(date.toLocaleDateString)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (date) != "undefined") {_RecordType("<934,938,45>",(date)); Inst31++; } } catch(e) {}
    date.toLocaleDateString("de-DE", null);
  })();

try { if (Inst32 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<985,994,48>",(TypeError)); Inst32++; } } catch(e) {}
  TypeError;
}

