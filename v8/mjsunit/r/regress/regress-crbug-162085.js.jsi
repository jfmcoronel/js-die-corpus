var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2012 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// Ensure extending an empty packed smi array with a double initializes the
// array with holes.
var a = [1, 2, 3];
try { if (Inst0 <= 1000 && typeof (a) != "undefined") {_RecordType("<1698,1699,29>",(a)); Inst0++; } } catch(e) {}
a.length = 0;
try { if (Inst1 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<1713,1721,30>",(a.length)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (a) != "undefined") {_RecordType("<1713,1714,30>",(a)); Inst2++; } } catch(e) {}
a[0] = 1.4;
try { if (Inst3 <= 1000 && typeof (a[0]) != "undefined") {_RecordType("<1727,1731,31>",(a[0])); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (a) != "undefined") {_RecordType("<1727,1728,31>",(a)); Inst4++; } } catch(e) {}
1.4;
try { if (Inst5 <= 1000 && typeof (a[0]) != "undefined") {_RecordType("<1744,1748,33>",(a[0])); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (a) != "undefined") {_RecordType("<1744,1745,33>",(a)); Inst6++; } } catch(e) {}
a[0];
try { if (Inst7 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<1750,1759,34>",(undefined)); Inst7++; } } catch(e) {}
undefined;
try { if (Inst8 <= 1000 && typeof (a[1]) != "undefined") {_RecordType("<1761,1765,35>",(a[1])); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (a) != "undefined") {_RecordType("<1761,1762,35>",(a)); Inst9++; } } catch(e) {}
a[1];
try { if (Inst10 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<1767,1776,36>",(undefined)); Inst10++; } } catch(e) {}
undefined;
try { if (Inst11 <= 1000 && typeof (a[2]) != "undefined") {_RecordType("<1778,1782,37>",(a[2])); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (a) != "undefined") {_RecordType("<1778,1779,37>",(a)); Inst12++; } } catch(e) {}
a[2];
try { if (Inst13 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<1784,1793,38>",(undefined)); Inst13++; } } catch(e) {}
undefined;
try { if (Inst14 <= 1000 && typeof (a[3]) != "undefined") {_RecordType("<1795,1799,39>",(a[3])); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (a) != "undefined") {_RecordType("<1795,1796,39>",(a)); Inst15++; } } catch(e) {}
a[3];

// Ensure the double array growstub initializes the array with holes.
try { if (Inst16 <= 1000 && typeof (grow_store) != "undefined") {_RecordType("<1881,1891,42>",(grow_store)); Inst16++; } } catch(e) {}
function grow_store(a, i, v) {
try { if (Inst17 <= 1000 && typeof (a) != "undefined") {_RecordType("<1892,1893,42>",(a)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (i) != "undefined") {_RecordType("<1895,1896,42>",(i)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (v) != "undefined") {_RecordType("<1898,1899,42>",(v)); Inst19++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (v) != "undefined") {_RecordType("<1912,1913,43>",(v)); Inst22++; } } catch(e) {}
  a[i] = v;
try { if (Inst20 <= 1000 && typeof (a[i]) != "undefined") {_RecordType("<1905,1909,43>",(a[i])); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (a) != "undefined") {_RecordType("<1905,1906,43>",(a)); Inst21++; } } catch(e) {}
}

var a2 = [1.3];
try { if (Inst23 <= 1000 && typeof (a2) != "undefined") {_RecordType("<1922,1924,46>",(a2)); Inst23++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (grow_store) != "undefined") {_RecordType("<1934,1944,47>",(grow_store)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (a2) != "undefined") {_RecordType("<1945,1947,47>",(a2)); Inst25++; } } catch(e) {}
grow_store(a2, 1, 1.4);
a2.length = 0;
try { if (Inst26 <= 1000 && typeof (a2.length) != "undefined") {_RecordType("<1958,1967,48>",(a2.length)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (a2) != "undefined") {_RecordType("<1958,1960,48>",(a2)); Inst27++; } } catch(e) {}
try { if (Inst28 <= 1000 && typeof (grow_store) != "undefined") {_RecordType("<1973,1983,49>",(grow_store)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (a2) != "undefined") {_RecordType("<1984,1986,49>",(a2)); Inst29++; } } catch(e) {}
grow_store(a2, 0, 1.5);
1.5;
try { if (Inst30 <= 1000 && typeof (a2[0]) != "undefined") {_RecordType("<2002,2007,51>",(a2[0])); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (a2) != "undefined") {_RecordType("<2002,2004,51>",(a2)); Inst31++; } } catch(e) {}
a2[0];
try { if (Inst32 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<2009,2018,52>",(undefined)); Inst32++; } } catch(e) {}
undefined;
try { if (Inst33 <= 1000 && typeof (a2[1]) != "undefined") {_RecordType("<2020,2025,53>",(a2[1])); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (a2) != "undefined") {_RecordType("<2020,2022,53>",(a2)); Inst34++; } } catch(e) {}
a2[1];
try { if (Inst35 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<2027,2036,54>",(undefined)); Inst35++; } } catch(e) {}
undefined;
try { if (Inst36 <= 1000 && typeof (a2[2]) != "undefined") {_RecordType("<2038,2043,55>",(a2[2])); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (a2) != "undefined") {_RecordType("<2038,2040,55>",(a2)); Inst37++; } } catch(e) {}
a2[2];
try { if (Inst38 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<2045,2054,56>",(undefined)); Inst38++; } } catch(e) {}
undefined;
try { if (Inst39 <= 1000 && typeof (a2[3]) != "undefined") {_RecordType("<2056,2061,57>",(a2[3])); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (a2) != "undefined") {_RecordType("<2056,2058,57>",(a2)); Inst40++; } } catch(e) {}
a2[3];
// Check storing objects using the double grow stub.
var a3 = [1.3];
try { if (Inst41 <= 1000 && typeof (a3) != "undefined") {_RecordType("<2120,2122,59>",(a3)); Inst41++; } } catch(e) {}
var o = {};
try { if (Inst42 <= 1000 && typeof (o) != "undefined") {_RecordType("<2136,2137,60>",(o)); Inst42++; } } catch(e) {}
try { if (Inst43 <= 1000 && typeof (grow_store) != "undefined") {_RecordType("<2144,2154,61>",(grow_store)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (a3) != "undefined") {_RecordType("<2155,2157,61>",(a3)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (o) != "undefined") {_RecordType("<2162,2163,61>",(o)); Inst45++; } } catch(e) {}
grow_store(a3, 1, o);
1.3;
try { if (Inst46 <= 1000 && typeof (a3[0]) != "undefined") {_RecordType("<2171,2176,63>",(a3[0])); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (a3) != "undefined") {_RecordType("<2171,2173,63>",(a3)); Inst47++; } } catch(e) {}
a3[0];
try { if (Inst48 <= 1000 && typeof (o) != "undefined") {_RecordType("<2178,2179,64>",(o)); Inst48++; } } catch(e) {}
o;
try { if (Inst49 <= 1000 && typeof (a3[1]) != "undefined") {_RecordType("<2181,2186,65>",(a3[1])); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (a3) != "undefined") {_RecordType("<2181,2183,65>",(a3)); Inst50++; } } catch(e) {}
a3[1];

// Ensure the double array growstub initializes the array with holes.
try { if (Inst51 <= 1000 && typeof (grow_store2) != "undefined") {_RecordType("<2268,2279,68>",(grow_store2)); Inst51++; } } catch(e) {}
function grow_store2(a, i, v) {
try { if (Inst52 <= 1000 && typeof (a) != "undefined") {_RecordType("<2280,2281,68>",(a)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (i) != "undefined") {_RecordType("<2283,2284,68>",(i)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (v) != "undefined") {_RecordType("<2286,2287,68>",(v)); Inst54++; } } catch(e) {}
try { if (Inst57 <= 1000 && typeof (v) != "undefined") {_RecordType("<2300,2301,69>",(v)); Inst57++; } } catch(e) {}
  a[i] = v;
try { if (Inst55 <= 1000 && typeof (a[i]) != "undefined") {_RecordType("<2293,2297,69>",(a[i])); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (a) != "undefined") {_RecordType("<2293,2294,69>",(a)); Inst56++; } } catch(e) {}
}

var a4 = [1.3];
try { if (Inst58 <= 1000 && typeof (a4) != "undefined") {_RecordType("<2310,2312,72>",(a4)); Inst58++; } } catch(e) {}
try { if (Inst59 <= 1000 && typeof (grow_store2) != "undefined") {_RecordType("<2322,2333,73>",(grow_store2)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (a4) != "undefined") {_RecordType("<2334,2336,73>",(a4)); Inst60++; } } catch(e) {}
grow_store2(a4, 1, 1.4);
a4.length = 0;
try { if (Inst61 <= 1000 && typeof (a4.length) != "undefined") {_RecordType("<2347,2356,74>",(a4.length)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (a4) != "undefined") {_RecordType("<2347,2349,74>",(a4)); Inst62++; } } catch(e) {}
try { if (Inst63 <= 1000 && typeof (grow_store2) != "undefined") {_RecordType("<2362,2373,75>",(grow_store2)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (a4) != "undefined") {_RecordType("<2374,2376,75>",(a4)); Inst64++; } } catch(e) {}
grow_store2(a4, 0, 1);
1;
try { if (Inst65 <= 1000 && typeof (a4[0]) != "undefined") {_RecordType("<2388,2393,77>",(a4[0])); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (a4) != "undefined") {_RecordType("<2388,2390,77>",(a4)); Inst66++; } } catch(e) {}
a4[0];
try { if (Inst67 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<2395,2404,78>",(undefined)); Inst67++; } } catch(e) {}
undefined;
try { if (Inst68 <= 1000 && typeof (a4[1]) != "undefined") {_RecordType("<2406,2411,79>",(a4[1])); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (a4) != "undefined") {_RecordType("<2406,2408,79>",(a4)); Inst69++; } } catch(e) {}
a4[1];
try { if (Inst70 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<2413,2422,80>",(undefined)); Inst70++; } } catch(e) {}
undefined;
try { if (Inst71 <= 1000 && typeof (a4[2]) != "undefined") {_RecordType("<2424,2429,81>",(a4[2])); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (a4) != "undefined") {_RecordType("<2424,2426,81>",(a4)); Inst72++; } } catch(e) {}
a4[2];
try { if (Inst73 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<2431,2440,82>",(undefined)); Inst73++; } } catch(e) {}
undefined;
try { if (Inst74 <= 1000 && typeof (a4[3]) != "undefined") {_RecordType("<2442,2447,83>",(a4[3])); Inst74++; } } catch(e) {}try { if (Inst75 <= 1000 && typeof (a4) != "undefined") {_RecordType("<2442,2444,83>",(a4)); Inst75++; } } catch(e) {}
a4[3];

