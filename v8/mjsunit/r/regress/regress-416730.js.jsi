var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2014 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax
try { if (Inst1 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<215,224,6>",(undefined)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<231,240,7>",(undefined)); Inst2++; } } catch(e) {}
var d = {
  x: undefined,
  y: undefined
};
try { if (Inst0 <= 1000 && typeof (d) != "undefined") {_RecordType("<204,205,5>",(d)); Inst0++; } } catch(e) {}

try { if (Inst3 <= 1000 && typeof (Crash) != "undefined") {_RecordType("<254,259,10>",(Crash)); Inst3++; } } catch(e) {}
function Crash(left, right) {
try { if (Inst4 <= 1000 && typeof (left) != "undefined") {_RecordType("<260,264,10>",(left)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (right) != "undefined") {_RecordType("<266,271,10>",(right)); Inst5++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (right.x) != "undefined") {_RecordType("<294,301,12>",(right.x)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (right) != "undefined") {_RecordType("<294,299,12>",(right)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (left.x) != "undefined") {_RecordType("<304,310,12>",(left.x)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (left) != "undefined") {_RecordType("<304,308,12>",(left)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (right.y) != "undefined") {_RecordType("<319,326,13>",(right.y)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (right) != "undefined") {_RecordType("<319,324,13>",(right)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (left.y) != "undefined") {_RecordType("<329,335,13>",(left.y)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (left) != "undefined") {_RecordType("<329,333,13>",(left)); Inst14++; } } catch(e) {}
  var c = {
    x: right.x - left.x,
    y: right.y - left.y
  };
try { if (Inst6 <= 1000 && typeof (c) != "undefined") {_RecordType("<281,282,11>",(c)); Inst6++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (c.x) != "undefined") {_RecordType("<350,353,15>",(c.x)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (c) != "undefined") {_RecordType("<350,351,15>",(c)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (c.y) != "undefined") {_RecordType("<356,359,15>",(c.y)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (c) != "undefined") {_RecordType("<356,357,15>",(c)); Inst18++; } } catch(e) {}
  return c.x * c.y;
}

var a = {
  x: 0.5,
  y: 0
};
try { if (Inst19 <= 1000 && typeof (a) != "undefined") {_RecordType("<368,369,18>",(a)); Inst19++; } } catch(e) {}
var b = {
  x: 1,
  y: 0
};
try { if (Inst20 <= 1000 && typeof (b) != "undefined") {_RecordType("<398,399,22>",(b)); Inst20++; } } catch(e) {}

for (var i = 0; i < 3; i++) {
try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<432,433,27>",(i)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<439,440,27>",(i)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<446,447,27>",(i)); Inst23++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (Crash) != "undefined") {_RecordType("<455,460,28>",(Crash)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (a) != "undefined") {_RecordType("<461,462,28>",(a)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (b) != "undefined") {_RecordType("<464,465,28>",(b)); Inst26++; } } catch(e) {}
  Crash(a, b);
}

try { if (Inst27 <= 1000 && typeof (Crash) != "undefined") {_RecordType("<471,476,31>",(Crash)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (a) != "undefined") {_RecordType("<477,478,31>",(a)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (b) != "undefined") {_RecordType("<480,481,31>",(b)); Inst29++; } } catch(e) {}
Crash(a, b);
try { if (Inst30 <= 1000 && typeof (Crash) != "undefined") {_RecordType("<484,489,32>",(Crash)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (b) != "undefined") {_RecordType("<512,513,35>",(b)); Inst31++; } } catch(e) {}
Crash({
  x: 0,
  y: 0.5
}, b);

