var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2008 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
const SMI_MAX = (1 << 30) - 1;
try { if (Inst0 <= 1000 && typeof (SMI_MAX) != "undefined") {_RecordType("<1603,1610,27>",(SMI_MAX)); Inst0++; } } catch(e) {}
const SMI_MIN = -(1 << 30);
try { if (Inst1 <= 1000 && typeof (SMI_MIN) != "undefined") {_RecordType("<1634,1641,28>",(SMI_MIN)); Inst1++; } } catch(e) {}

try { if (Inst2 <= 1000 && typeof (testmulneg) != "undefined") {_RecordType("<1666,1676,30>",(testmulneg)); Inst2++; } } catch(e) {}
function testmulneg(a, b) {
try { if (Inst3 <= 1000 && typeof (a) != "undefined") {_RecordType("<1677,1678,30>",(a)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (b) != "undefined") {_RecordType("<1680,1681,30>",(b)); Inst4++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (a) != "undefined") {_RecordType("<1698,1699,31>",(a)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (b) != "undefined") {_RecordType("<1702,1703,31>",(b)); Inst7++; } } catch(e) {}
  var base = a * b;
try { if (Inst5 <= 1000 && typeof (base) != "undefined") {_RecordType("<1691,1695,31>",(base)); Inst5++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (base) != "undefined") {_RecordType("<1708,1712,32>",(base)); Inst8++; } } catch(e) {}
  -base;
try { if (Inst9 <= 1000 && typeof (a) != "undefined") {_RecordType("<1716,1717,33>",(a)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (b) != "undefined") {_RecordType("<1721,1722,33>",(b)); Inst10++; } } catch(e) {}
  a * -b;
try { if (Inst11 <= 1000 && typeof (a) != "undefined") {_RecordType("<1748,1749,34>",(a)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (b) != "undefined") {_RecordType("<1763,1764,34>",(b)); Inst12++; } } catch(e) {}
  "a * -b where a = " + a + ", b = " + b;
try { if (Inst13 <= 1000 && typeof (base) != "undefined") {_RecordType("<1769,1773,35>",(base)); Inst13++; } } catch(e) {}
  -base;
try { if (Inst14 <= 1000 && typeof (a) != "undefined") {_RecordType("<1778,1779,36>",(a)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (b) != "undefined") {_RecordType("<1782,1783,36>",(b)); Inst15++; } } catch(e) {}
  -a * b;
try { if (Inst16 <= 1000 && typeof (a) != "undefined") {_RecordType("<1809,1810,37>",(a)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (b) != "undefined") {_RecordType("<1824,1825,37>",(b)); Inst17++; } } catch(e) {}
  "-a * b where a = " + a + ", b = " + b;
try { if (Inst18 <= 1000 && typeof (base) != "undefined") {_RecordType("<1829,1833,38>",(base)); Inst18++; } } catch(e) {}
  base;
try { if (Inst19 <= 1000 && typeof (a) != "undefined") {_RecordType("<1838,1839,39>",(a)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (b) != "undefined") {_RecordType("<1843,1844,39>",(b)); Inst20++; } } catch(e) {}
  -a * -b;
try { if (Inst21 <= 1000 && typeof (a) != "undefined") {_RecordType("<1872,1873,40>",(a)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (b) != "undefined") {_RecordType("<1887,1888,40>",(b)); Inst22++; } } catch(e) {}
  "*-a * -b where a = " + a + ", b = " + b;
}

try { if (Inst23 <= 1000 && typeof (testmulneg) != "undefined") {_RecordType("<1893,1903,43>",(testmulneg)); Inst23++; } } catch(e) {}
testmulneg(2, 3);
try { if (Inst24 <= 1000 && typeof (testmulneg) != "undefined") {_RecordType("<1911,1921,44>",(testmulneg)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (SMI_MAX) != "undefined") {_RecordType("<1922,1929,44>",(SMI_MAX)); Inst25++; } } catch(e) {}
testmulneg(SMI_MAX, 3);
try { if (Inst26 <= 1000 && typeof (testmulneg) != "undefined") {_RecordType("<1935,1945,45>",(testmulneg)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (SMI_MIN) != "undefined") {_RecordType("<1946,1953,45>",(SMI_MIN)); Inst27++; } } catch(e) {}
testmulneg(SMI_MIN, 3);
try { if (Inst28 <= 1000 && typeof (testmulneg) != "undefined") {_RecordType("<1959,1969,46>",(testmulneg)); Inst28++; } } catch(e) {}
testmulneg(3.2, 2.3);
var x = {
  valueOf: function () {
    return 2;
  }
};
try { if (Inst29 <= 1000 && typeof (x) != "undefined") {_RecordType("<1985,1986,47>",(x)); Inst29++; } } catch(e) {}
var y = {
  valueOf: function () {
    return 3;
  }
};
try { if (Inst30 <= 1000 && typeof (y) != "undefined") {_RecordType("<2041,2042,52>",(y)); Inst30++; } } catch(e) {}
try { if (Inst31 <= 1000 && typeof (testmulneg) != "undefined") {_RecordType("<2093,2103,57>",(testmulneg)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (x) != "undefined") {_RecordType("<2104,2105,57>",(x)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (y) != "undefined") {_RecordType("<2107,2108,57>",(y)); Inst33++; } } catch(e) {}
testmulneg(x, y); // The test below depends on the correct evaluation order, which is not
// implemented by any of the known JS engines.

var z;
try { if (Inst34 <= 1000 && typeof (z) != "undefined") {_RecordType("<2235,2236,60>",(z)); Inst34++; } } catch(e) {}
var v = {
  valueOf: function () {
    z += 2;
try { if (Inst36 <= 1000 && typeof (z) != "undefined") {_RecordType("<2277,2278,63>",(z)); Inst36++; } } catch(e) {}
try { if (Inst37 <= 1000 && typeof (z) != "undefined") {_RecordType("<2296,2297,64>",(z)); Inst37++; } } catch(e) {}
    return z;
  }
};
try { if (Inst35 <= 1000 && typeof (v) != "undefined") {_RecordType("<2242,2243,61>",(v)); Inst35++; } } catch(e) {}
var w = {
  valueOf: function () {
    z += 3;
try { if (Inst39 <= 1000 && typeof (z) != "undefined") {_RecordType("<2345,2346,69>",(z)); Inst39++; } } catch(e) {}
try { if (Inst40 <= 1000 && typeof (z) != "undefined") {_RecordType("<2364,2365,70>",(z)); Inst40++; } } catch(e) {}
    return z;
  }
};
try { if (Inst38 <= 1000 && typeof (w) != "undefined") {_RecordType("<2310,2311,67>",(w)); Inst38++; } } catch(e) {}
z = 0;
try { if (Inst41 <= 1000 && typeof (z) != "undefined") {_RecordType("<2374,2375,73>",(z)); Inst41++; } } catch(e) {}
try { if (Inst43 <= 1000 && typeof (v) != "undefined") {_RecordType("<2392,2393,74>",(v)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (w) != "undefined") {_RecordType("<2396,2397,74>",(w)); Inst44++; } } catch(e) {}
var base = v * w;
try { if (Inst42 <= 1000 && typeof (base) != "undefined") {_RecordType("<2385,2389,74>",(base)); Inst42++; } } catch(e) {}
z = 0;
try { if (Inst45 <= 1000 && typeof (z) != "undefined") {_RecordType("<2399,2400,75>",(z)); Inst45++; } } catch(e) {}
try { if (Inst46 <= 1000 && typeof (base) != "undefined") {_RecordType("<2407,2411,76>",(base)); Inst46++; } } catch(e) {}
-base;
try { if (Inst47 <= 1000 && typeof (v) != "undefined") {_RecordType("<2414,2415,77>",(v)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (w) != "undefined") {_RecordType("<2418,2419,77>",(w)); Inst48++; } } catch(e) {}
-v * w;
z = 0;
try { if (Inst49 <= 1000 && typeof (z) != "undefined") {_RecordType("<2421,2422,78>",(z)); Inst49++; } } catch(e) {}
try { if (Inst50 <= 1000 && typeof (base) != "undefined") {_RecordType("<2428,2432,79>",(base)); Inst50++; } } catch(e) {}
base;
try { if (Inst51 <= 1000 && typeof (v) != "undefined") {_RecordType("<2435,2436,80>",(v)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (w) != "undefined") {_RecordType("<2440,2441,80>",(w)); Inst52++; } } catch(e) {}
-v * -w;

