var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2013 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// Flags: --track-fields --track-double-fields --allow-natives-syntax
try { if (Inst0 <= 1000 && typeof (smi_field) != "undefined") {_RecordType("<1676,1685,28>",(smi_field)); Inst0++; } } catch(e) {}
function smi_field() {
  // Assign twice to make the field non-constant.
  // TODO(ishell): update test once constant field tracking is done.
  var o = {
    smi: 1
  };
try { if (Inst1 <= 1000 && typeof (o) != "undefined") {_RecordType("<1815,1816,31>",(o)); Inst1++; } } catch(e) {}
  o.smi = 0;
try { if (Inst2 <= 1000 && typeof (o.smi) != "undefined") {_RecordType("<1839,1844,34>",(o.smi)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (o) != "undefined") {_RecordType("<1839,1840,34>",(o)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (o) != "undefined") {_RecordType("<1859,1860,35>",(o)); Inst4++; } } catch(e) {}
  return o;
}

try { if (Inst5 <= 1000 && typeof (check_smi_repr) != "undefined") {_RecordType("<1874,1888,38>",(check_smi_repr)); Inst5++; } } catch(e) {}
function check_smi_repr(o, d1, d2) {
try { if (Inst6 <= 1000 && typeof (o) != "undefined") {_RecordType("<1889,1890,38>",(o)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (d1) != "undefined") {_RecordType("<1892,1894,38>",(d1)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (d2) != "undefined") {_RecordType("<1896,1898,38>",(d2)); Inst8++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (o.smi) != "undefined") {_RecordType("<1912,1917,39>",(o.smi)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (o) != "undefined") {_RecordType("<1912,1913,39>",(o)); Inst11++; } } catch(e) {}
  var s = o.smi;
try { if (Inst9 <= 1000 && typeof (s) != "undefined") {_RecordType("<1908,1909,39>",(s)); Inst9++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (d1) != "undefined") {_RecordType("<1929,1931,40>",(d1)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (d2) != "undefined") {_RecordType("<1934,1936,40>",(d2)); Inst14++; } } catch(e) {}
  var d = d1 - d2;
try { if (Inst12 <= 1000 && typeof (d) != "undefined") {_RecordType("<1925,1926,40>",(d)); Inst12++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (s) != "undefined") {_RecordType("<1944,1945,41>",(s)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (d) != "undefined") {_RecordType("<1948,1949,41>",(d)); Inst17++; } } catch(e) {}
  s = s + d;
try { if (Inst15 <= 1000 && typeof (s) != "undefined") {_RecordType("<1940,1941,41>",(s)); Inst15++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (s) != "undefined") {_RecordType("<1961,1962,42>",(s)); Inst20++; } } catch(e) {}
  o.smi = s;
try { if (Inst18 <= 1000 && typeof (o.smi) != "undefined") {_RecordType("<1953,1958,42>",(o.smi)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (o) != "undefined") {_RecordType("<1953,1954,42>",(o)); Inst19++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (o) != "undefined") {_RecordType("<1973,1974,43>",(o)); Inst21++; } } catch(e) {}
  return o;
}

try { if (Inst23 <= 1000 && typeof (smi_field) != "undefined") {_RecordType("<1990,1999,46>",(smi_field)); Inst23++; } } catch(e) {}
var test = smi_field();
try { if (Inst22 <= 1000 && typeof (test) != "undefined") {_RecordType("<1983,1987,46>",(test)); Inst22++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (check_smi_repr) != "undefined") {_RecordType("<2003,2017,47>",(check_smi_repr)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (smi_field) != "undefined") {_RecordType("<2018,2027,47>",(smi_field)); Inst25++; } } catch(e) {}
check_smi_repr(smi_field(), 5, 3);
try { if (Inst26 <= 1000 && typeof (check_smi_repr) != "undefined") {_RecordType("<2038,2052,48>",(check_smi_repr)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (smi_field) != "undefined") {_RecordType("<2053,2062,48>",(smi_field)); Inst27++; } } catch(e) {}
check_smi_repr(smi_field(), 6, 2);
try { if (Inst29 <= 1000 && typeof (check_smi_repr) != "undefined") {_RecordType("<2083,2097,49>",(check_smi_repr)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (smi_field) != "undefined") {_RecordType("<2098,2107,49>",(smi_field)); Inst30++; } } catch(e) {}
var val = check_smi_repr(smi_field(), 8, 1);
try { if (Inst28 <= 1000 && typeof (val) != "undefined") {_RecordType("<2077,2080,49>",(val)); Inst28++; } } catch(e) {}

try { if (Inst31 <= 1000 && typeof (tagged_smi_field) != "undefined") {_RecordType("<2128,2144,51>",(tagged_smi_field)); Inst31++; } } catch(e) {}
function tagged_smi_field() {
  var o = {
    "tag": false
  };
try { if (Inst32 <= 1000 && typeof (o) != "undefined") {_RecordType("<2155,2156,52>",(o)); Inst32++; } } catch(e) {}
  o.tag = 10;
try { if (Inst33 <= 1000 && typeof (o.tag) != "undefined") {_RecordType("<2185,2190,55>",(o.tag)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (o) != "undefined") {_RecordType("<2185,2186,55>",(o)); Inst34++; } } catch(e) {}
try { if (Inst35 <= 1000 && typeof (o) != "undefined") {_RecordType("<2206,2207,56>",(o)); Inst35++; } } catch(e) {}
  return o;
}

try { if (Inst36 <= 1000 && typeof (check_smi_repr_from_tagged) != "undefined") {_RecordType("<2221,2247,59>",(check_smi_repr_from_tagged)); Inst36++; } } catch(e) {}
function check_smi_repr_from_tagged(o, o2) {
try { if (Inst37 <= 1000 && typeof (o) != "undefined") {_RecordType("<2248,2249,59>",(o)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (o2) != "undefined") {_RecordType("<2251,2253,59>",(o2)); Inst38++; } } catch(e) {}
try { if (Inst40 <= 1000 && typeof (o2.tag) != "undefined") {_RecordType("<2267,2273,60>",(o2.tag)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (o2) != "undefined") {_RecordType("<2267,2269,60>",(o2)); Inst41++; } } catch(e) {}
  var t = o2.tag;
try { if (Inst39 <= 1000 && typeof (t) != "undefined") {_RecordType("<2263,2264,60>",(t)); Inst39++; } } catch(e) {}
try { if (Inst44 <= 1000 && typeof (t) != "undefined") {_RecordType("<2285,2286,61>",(t)); Inst44++; } } catch(e) {}
  o.smi = t;
try { if (Inst42 <= 1000 && typeof (o.smi) != "undefined") {_RecordType("<2277,2282,61>",(o.smi)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (o) != "undefined") {_RecordType("<2277,2278,61>",(o)); Inst43++; } } catch(e) {}
try { if (Inst45 <= 1000 && typeof (o) != "undefined") {_RecordType("<2297,2298,62>",(o)); Inst45++; } } catch(e) {}
  return o;
}

try { if (Inst46 <= 1000 && typeof (check_smi_repr_from_tagged) != "undefined") {_RecordType("<2303,2329,65>",(check_smi_repr_from_tagged)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (smi_field) != "undefined") {_RecordType("<2330,2339,65>",(smi_field)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (tagged_smi_field) != "undefined") {_RecordType("<2343,2359,65>",(tagged_smi_field)); Inst48++; } } catch(e) {}
check_smi_repr_from_tagged(smi_field(), tagged_smi_field());
try { if (Inst49 <= 1000 && typeof (check_smi_repr_from_tagged) != "undefined") {_RecordType("<2364,2390,66>",(check_smi_repr_from_tagged)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (smi_field) != "undefined") {_RecordType("<2391,2400,66>",(smi_field)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (tagged_smi_field) != "undefined") {_RecordType("<2404,2420,66>",(tagged_smi_field)); Inst51++; } } catch(e) {}
check_smi_repr_from_tagged(smi_field(), tagged_smi_field());
try { if (Inst53 <= 1000 && typeof (check_smi_repr_from_tagged) != "undefined") {_RecordType("<2435,2461,67>",(check_smi_repr_from_tagged)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (smi_field) != "undefined") {_RecordType("<2462,2471,67>",(smi_field)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (tagged_smi_field) != "undefined") {_RecordType("<2475,2491,67>",(tagged_smi_field)); Inst55++; } } catch(e) {}
var val = check_smi_repr_from_tagged(smi_field(), tagged_smi_field());
try { if (Inst52 <= 1000 && typeof (val) != "undefined") {_RecordType("<2429,2432,67>",(val)); Inst52++; } } catch(e) {}
try { if (Inst57 <= 1000 && typeof (tagged_smi_field) != "undefined") {_RecordType("<2511,2527,68>",(tagged_smi_field)); Inst57++; } } catch(e) {}
var overflow = tagged_smi_field();
try { if (Inst56 <= 1000 && typeof (overflow) != "undefined") {_RecordType("<2500,2508,68>",(overflow)); Inst56++; } } catch(e) {}
overflow.tag = 0x80000000;
try { if (Inst58 <= 1000 && typeof (overflow.tag) != "undefined") {_RecordType("<2531,2543,69>",(overflow.tag)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (overflow) != "undefined") {_RecordType("<2531,2539,69>",(overflow)); Inst59++; } } catch(e) {}
try { if (Inst61 <= 1000 && typeof (check_smi_repr_from_tagged) != "undefined") {_RecordType("<2568,2594,70>",(check_smi_repr_from_tagged)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (smi_field) != "undefined") {_RecordType("<2595,2604,70>",(smi_field)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (overflow) != "undefined") {_RecordType("<2608,2616,70>",(overflow)); Inst63++; } } catch(e) {}
var val = check_smi_repr_from_tagged(smi_field(), overflow);
try { if (Inst60 <= 1000 && typeof (val) != "undefined") {_RecordType("<2562,2565,70>",(val)); Inst60++; } } catch(e) {}

