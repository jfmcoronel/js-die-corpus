var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2010 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// Flags: --allow-natives-syntax
// Test dictionary store ICs.
// Function that stores property 'x' on an object.
try { if (Inst0 <= 1000 && typeof (store) != "undefined") {_RecordType("<1720,1725,30>",(store)); Inst0++; } } catch(e) {}
function store(obj) {
try { if (Inst1 <= 1000 && typeof (obj) != "undefined") {_RecordType("<1726,1729,30>",(obj)); Inst1++; } } catch(e) {}
  obj.x = 42;
try { if (Inst2 <= 1000 && typeof (obj.x) != "undefined") {_RecordType("<1735,1740,31>",(obj.x)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (obj) != "undefined") {_RecordType("<1735,1738,31>",(obj)); Inst3++; } } catch(e) {}
} // Create object and force it to dictionary mode by deleting property.


var o = {
  x: 32,
  y: 33
};
try { if (Inst4 <= 1000 && typeof (o) != "undefined") {_RecordType("<1826,1827,35>",(o)); Inst4++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (o.y) != "undefined") {_RecordType("<1859,1862,39>",(o.y)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (o) != "undefined") {_RecordType("<1859,1860,39>",(o)); Inst6++; } } catch(e) {}
delete o.y; // Make the store ic in the 'store' function go into dictionary store
// case.

for (var i = 0; i < 3; i++) {
try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<1953,1954,42>",(i)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<1960,1961,42>",(i)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<1967,1968,42>",(i)); Inst9++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (store) != "undefined") {_RecordType("<1976,1981,43>",(store)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (o) != "undefined") {_RecordType("<1982,1983,43>",(o)); Inst11++; } } catch(e) {}
  store(o);
}

42;
try { if (Inst12 <= 1000 && typeof (o.x) != "undefined") {_RecordType("<1993,1996,47>",(o.x)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (o) != "undefined") {_RecordType("<1993,1994,47>",(o)); Inst13++; } } catch(e) {}
o.x;
// Test that READ_ONLY property attribute is respected. Make 'x'
// READ_ONLY.
try { if (Inst14 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<2077,2098,50>",(Object.defineProperty)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Object) != "undefined") {_RecordType("<2077,2083,50>",(Object)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (o) != "undefined") {_RecordType("<2099,2100,50>",(o)); Inst16++; } } catch(e) {}
Object.defineProperty(o, 'x', {
  value: 32,
  writable: false
}); // Attempt to store using the store ic in the 'store' function.

try { if (Inst17 <= 1000 && typeof (store) != "undefined") {_RecordType("<2209,2214,55>",(store)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (o) != "undefined") {_RecordType("<2215,2216,55>",(o)); Inst18++; } } catch(e) {}
store(o); // Check that the store did not change the value.

32;
try { if (Inst19 <= 1000 && typeof (o.x) != "undefined") {_RecordType("<2274,2277,58>",(o.x)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (o) != "undefined") {_RecordType("<2274,2275,58>",(o)); Inst20++; } } catch(e) {}
o.x;
// Check that bail-out code works.
// Smi.
try { if (Inst21 <= 1000 && typeof (store) != "undefined") {_RecordType("<2322,2327,61>",(store)); Inst21++; } } catch(e) {}
store(1); // Fast case object.

try { if (Inst23 <= 1000 && typeof (Object) != "undefined") {_RecordType("<2362,2368,63>",(Object)); Inst23++; } } catch(e) {}
o = new Object();
try { if (Inst22 <= 1000 && typeof (o) != "undefined") {_RecordType("<2354,2355,63>",(o)); Inst22++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (store) != "undefined") {_RecordType("<2372,2377,64>",(store)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (o) != "undefined") {_RecordType("<2378,2379,64>",(o)); Inst25++; } } catch(e) {}
store(o);
42;
try { if (Inst26 <= 1000 && typeof (o.x) != "undefined") {_RecordType("<2386,2389,66>",(o.x)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (o) != "undefined") {_RecordType("<2386,2387,66>",(o)); Inst27++; } } catch(e) {}
o.x;
// Slow case object without x property.
try { if (Inst28 <= 1000 && typeof (o.x) != "undefined") {_RecordType("<2438,2441,68>",(o.x)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (o) != "undefined") {_RecordType("<2438,2439,68>",(o)); Inst29++; } } catch(e) {}
delete o.x;
try { if (Inst30 <= 1000 && typeof (store) != "undefined") {_RecordType("<2443,2448,69>",(store)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (o) != "undefined") {_RecordType("<2449,2450,69>",(o)); Inst31++; } } catch(e) {}
store(o);
42;
try { if (Inst32 <= 1000 && typeof (o.x) != "undefined") {_RecordType("<2457,2460,71>",(o.x)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (o) != "undefined") {_RecordType("<2457,2458,71>",(o)); Inst33++; } } catch(e) {}
o.x;

(function () {
  var o = {};
try { if (Inst34 <= 1000 && typeof (o) != "undefined") {_RecordType("<2484,2485,74>",(o)); Inst34++; } } catch(e) {}

  for (var i = 0; i < 100; i++) {
try { if (Inst35 <= 1000 && typeof (i) != "undefined") {_RecordType("<2504,2505,76>",(i)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (i) != "undefined") {_RecordType("<2511,2512,76>",(i)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (i) != "undefined") {_RecordType("<2520,2521,76>",(i)); Inst37++; } } catch(e) {}
try { if (Inst39 <= 1000 && typeof (i) != "undefined") {_RecordType("<2547,2548,77>",(i)); Inst39++; } } catch(e) {}
    var k = "key" + i;
try { if (Inst38 <= 1000 && typeof (k) != "undefined") {_RecordType("<2535,2536,77>",(k)); Inst38++; } } catch(e) {}
    o[k] = "foo";
try { if (Inst40 <= 1000 && typeof (o[k]) != "undefined") {_RecordType("<2554,2558,78>",(o[k])); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (o) != "undefined") {_RecordType("<2554,2555,78>",(o)); Inst41++; } } catch(e) {}
try { if (Inst42 <= 1000 && typeof (o[k]) != "undefined") {_RecordType("<2579,2583,79>",(o[k])); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (o) != "undefined") {_RecordType("<2579,2580,79>",(o)); Inst43++; } } catch(e) {}
    delete o[k];
  }
})();

(function () {
try { if (Inst44 <= 1000 && typeof (f) != "undefined") {_RecordType("<2622,2623,84>",(f)); Inst44++; } } catch(e) {}
  function f(a, i, v) {
try { if (Inst45 <= 1000 && typeof (a) != "undefined") {_RecordType("<2624,2625,84>",(a)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (i) != "undefined") {_RecordType("<2627,2628,84>",(i)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (v) != "undefined") {_RecordType("<2630,2631,84>",(v)); Inst47++; } } catch(e) {}
try { if (Inst50 <= 1000 && typeof (v) != "undefined") {_RecordType("<2646,2647,85>",(v)); Inst50++; } } catch(e) {}
    a[i] = v;
try { if (Inst48 <= 1000 && typeof (a[i]) != "undefined") {_RecordType("<2639,2643,85>",(a[i])); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (a) != "undefined") {_RecordType("<2639,2640,85>",(a)); Inst49++; } } catch(e) {}
  }

try { if (Inst51 <= 1000 && typeof (f) != "undefined") {_RecordType("<2656,2657,88>",(f)); Inst51++; } } catch(e) {}
  f("make it generic", 0, 0);
  var o = {};
try { if (Inst52 <= 1000 && typeof (o) != "undefined") {_RecordType("<2690,2691,89>",(o)); Inst52++; } } catch(e) {}

  for (var i = 0; i < 100; i++) {
try { if (Inst53 <= 1000 && typeof (i) != "undefined") {_RecordType("<2710,2711,91>",(i)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (i) != "undefined") {_RecordType("<2717,2718,91>",(i)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (i) != "undefined") {_RecordType("<2726,2727,91>",(i)); Inst55++; } } catch(e) {}
    var k = "";
try { if (Inst56 <= 1000 && typeof (k) != "undefined") {_RecordType("<2741,2742,92>",(k)); Inst56++; } } catch(e) {}
try { if (Inst57 <= 1000 && typeof (f) != "undefined") {_RecordType("<2753,2754,93>",(f)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (o) != "undefined") {_RecordType("<2755,2756,93>",(o)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (k) != "undefined") {_RecordType("<2758,2759,93>",(k)); Inst59++; } } catch(e) {}
    f(o, k, "foo");
try { if (Inst60 <= 1000 && typeof (o[k]) != "undefined") {_RecordType("<2780,2784,94>",(o[k])); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (o) != "undefined") {_RecordType("<2780,2781,94>",(o)); Inst61++; } } catch(e) {}
    delete o[k];
  }
})();

