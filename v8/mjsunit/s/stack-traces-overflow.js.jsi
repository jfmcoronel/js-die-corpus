var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
var Inst102 = 0;
var Inst103 = 0;
var Inst104 = 0;
var Inst105 = 0;
var Inst106 = 0;
var Inst107 = 0;
var Inst108 = 0;
var Inst109 = 0;
var Inst110 = 0;
var Inst111 = 0;
var Inst112 = 0;
var Inst113 = 0;
var Inst114 = 0;
var Inst115 = 0;
var Inst116 = 0;
var Inst117 = 0;
var Inst118 = 0;
var Inst119 = 0;
var Inst120 = 0;
var Inst121 = 0;
var Inst122 = 0;
var Inst123 = 0;
var Inst124 = 0;
var Inst125 = 0;
var Inst126 = 0;
var Inst127 = 0;
var Inst128 = 0;
var Inst129 = 0;
var Inst130 = 0;
var Inst131 = 0;
var Inst132 = 0;
var Inst133 = 0;
var Inst134 = 0;
var Inst135 = 0;
var Inst136 = 0;
var Inst137 = 0;
var Inst138 = 0;
var Inst139 = 0;
var Inst140 = 0;
var Inst141 = 0;
var Inst142 = 0;
var Inst143 = 0;
var Inst144 = 0;
var Inst145 = 0;
var Inst146 = 0;
var Inst147 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2012 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// Flags: --stack-size=100
try { if (Inst0 <= 1000 && typeof (overflow) != "undefined") {_RecordType("<1633,1641,28>",(overflow)); Inst0++; } } catch(e) {}
function overflow() {
  var a, b, c, d, e; // Allocates some locals on the function's stack frame.
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<1652,1653,29>",(a)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (b) != "undefined") {_RecordType("<1655,1656,29>",(b)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (c) != "undefined") {_RecordType("<1658,1659,29>",(c)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (d) != "undefined") {_RecordType("<1661,1662,29>",(d)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (e) != "undefined") {_RecordType("<1664,1665,29>",(e)); Inst5++; } } catch(e) {}

try { if (Inst6 <= 1000 && typeof (overflow) != "undefined") {_RecordType("<1726,1734,31>",(overflow)); Inst6++; } } catch(e) {}
  overflow();
}

try { if (Inst7 <= 1000 && typeof (rec1) != "undefined") {_RecordType("<1750,1754,34>",(rec1)); Inst7++; } } catch(e) {}
function rec1(a) {
try { if (Inst8 <= 1000 && typeof (a) != "undefined") {_RecordType("<1755,1756,34>",(a)); Inst8++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (rec1) != "undefined") {_RecordType("<1762,1766,35>",(rec1)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (a) != "undefined") {_RecordType("<1767,1768,35>",(a)); Inst10++; } } catch(e) {}
  rec1(a + 1);
}

try { if (Inst11 <= 1000 && typeof (rec2) != "undefined") {_RecordType("<1787,1791,38>",(rec2)); Inst11++; } } catch(e) {}
function rec2(a) {
try { if (Inst12 <= 1000 && typeof (a) != "undefined") {_RecordType("<1792,1793,38>",(a)); Inst12++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (rec3) != "undefined") {_RecordType("<1799,1803,39>",(rec3)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (a) != "undefined") {_RecordType("<1804,1805,39>",(a)); Inst14++; } } catch(e) {}
  rec3(a + 1);
}

try { if (Inst15 <= 1000 && typeof (rec3) != "undefined") {_RecordType("<1824,1828,42>",(rec3)); Inst15++; } } catch(e) {}
function rec3(a) {
try { if (Inst16 <= 1000 && typeof (a) != "undefined") {_RecordType("<1829,1830,42>",(a)); Inst16++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (rec2) != "undefined") {_RecordType("<1836,1840,43>",(rec2)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (a) != "undefined") {_RecordType("<1841,1842,43>",(a)); Inst18++; } } catch(e) {}
  rec2(a + 1);
} // Test stack trace has correct function location at top of the stack.


try { if (Inst20 <= 1000 && typeof (e) != "undefined") {_RecordType("<1953,1954,49>",(e)); Inst20++; } } catch(e) {}
try {
try { if (Inst19 <= 1000 && typeof (overflow) != "undefined") {_RecordType("<1932,1940,48>",(overflow)); Inst19++; } } catch(e) {}
  overflow();
} catch (e) {
try { if (Inst22 <= 1000 && typeof (e.stack.split("\n")[1]) != "undefined") {_RecordType("<1978,2000,50>",(e.stack.split("\n")[1])); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (e.stack.split) != "undefined") {_RecordType("<1978,1991,50>",(e.stack.split)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (e.stack) != "undefined") {_RecordType("<1978,1985,50>",(e.stack)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (e) != "undefined") {_RecordType("<1978,1979,50>",(e)); Inst25++; } } catch(e) {}
  var first_frame = e.stack.split("\n")[1]; // The overflow can happen when pushing the arguments (in interpreter) or when
try { if (Inst21 <= 1000 && typeof (first_frame) != "undefined") {_RecordType("<1964,1975,50>",(first_frame)); Inst21++; } } catch(e) {}
  // the new function execution is starting. So the stack trace could either
  // point to start of the function (stack-traces-overflow.js30:18) or to the
  // location of call (stack-traces-overflow.js32:3).

try { if (Inst26 <= 1000 && typeof (first_frame.indexOf) != "undefined") {_RecordType("<2293,2312,55>",(first_frame.indexOf)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (first_frame) != "undefined") {_RecordType("<2293,2304,55>",(first_frame)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (first_frame.indexOf) != "undefined") {_RecordType("<2354,2373,55>",(first_frame.indexOf)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (first_frame) != "undefined") {_RecordType("<2354,2365,55>",(first_frame)); Inst29++; } } catch(e) {}
  first_frame.indexOf("stack-traces-overflow.js:30:18") > 0 || first_frame.indexOf("stack-traces-overflow.js:32:3") > 0;
} // Test stack trace getter and setter.


try { if (Inst31 <= 1000 && typeof (e) != "undefined") {_RecordType("<2481,2482,61>",(e)); Inst31++; } } catch(e) {}
try {
try { if (Inst30 <= 1000 && typeof (rec1) != "undefined") {_RecordType("<2463,2467,60>",(rec1)); Inst30++; } } catch(e) {}
  rec1(0);
} catch (e) {
try { if (Inst32 <= 1000 && typeof (e.stack.indexOf) != "undefined") {_RecordType("<2488,2503,62>",(e.stack.indexOf)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (e.stack) != "undefined") {_RecordType("<2488,2495,62>",(e.stack)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (e) != "undefined") {_RecordType("<2488,2489,62>",(e)); Inst34++; } } catch(e) {}
  e.stack.indexOf("rec1") > 0;
  e.stack = "123";
try { if (Inst35 <= 1000 && typeof (e.stack) != "undefined") {_RecordType("<2519,2526,63>",(e.stack)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (e) != "undefined") {_RecordType("<2519,2520,63>",(e)); Inst36++; } } catch(e) {}
  "123";
try { if (Inst37 <= 1000 && typeof (e.stack) != "undefined") {_RecordType("<2547,2554,65>",(e.stack)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (e) != "undefined") {_RecordType("<2547,2548,65>",(e)); Inst38++; } } catch(e) {}
  e.stack;
} // Test setter w/o calling the getter.


try { if (Inst40 <= 1000 && typeof (e) != "undefined") {_RecordType("<2625,2626,71>",(e)); Inst40++; } } catch(e) {}
try {
try { if (Inst39 <= 1000 && typeof (rec2) != "undefined") {_RecordType("<2607,2611,70>",(rec2)); Inst39++; } } catch(e) {}
  rec2(0);
} catch (e) {
try { if (Inst41 <= 1000 && typeof (e.stack.indexOf) != "undefined") {_RecordType("<2632,2647,72>",(e.stack.indexOf)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (e.stack) != "undefined") {_RecordType("<2632,2639,72>",(e.stack)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (e) != "undefined") {_RecordType("<2632,2633,72>",(e)); Inst43++; } } catch(e) {}
  e.stack.indexOf("rec2") > 0;
try { if (Inst44 <= 1000 && typeof (e.stack.indexOf) != "undefined") {_RecordType("<2663,2678,73>",(e.stack.indexOf)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (e.stack) != "undefined") {_RecordType("<2663,2670,73>",(e.stack)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (e) != "undefined") {_RecordType("<2663,2664,73>",(e)); Inst46++; } } catch(e) {}
  e.stack.indexOf("rec3") > 0;
  e.stack = "123";
try { if (Inst47 <= 1000 && typeof (e.stack) != "undefined") {_RecordType("<2694,2701,74>",(e.stack)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (e) != "undefined") {_RecordType("<2694,2695,74>",(e)); Inst48++; } } catch(e) {}
  "123";
try { if (Inst49 <= 1000 && typeof (e.stack) != "undefined") {_RecordType("<2722,2729,76>",(e.stack)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (e) != "undefined") {_RecordType("<2722,2723,76>",(e)); Inst50++; } } catch(e) {}
  e.stack;
} // Test getter to make sure setter does not affect the boilerplate.


try { if (Inst52 <= 1000 && typeof (e) != "undefined") {_RecordType("<2829,2830,82>",(e)); Inst52++; } } catch(e) {}
try {
try { if (Inst51 <= 1000 && typeof (rec1) != "undefined") {_RecordType("<2811,2815,81>",(rec1)); Inst51++; } } catch(e) {}
  rec1(0);
} catch (e) {
try { if (Inst53 <= 1000 && typeof (e.stack.indexOf) != "undefined") {_RecordType("<2836,2851,83>",(e.stack.indexOf)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (e.stack) != "undefined") {_RecordType("<2836,2843,83>",(e.stack)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (e) != "undefined") {_RecordType("<2836,2837,83>",(e)); Inst55++; } } catch(e) {}
  e.stack.indexOf("rec1") > 0;
try { if (Inst56 <= 1000 && typeof (e) != "undefined") {_RecordType("<2867,2868,84>",(e)); Inst56++; } } catch(e) {}
  e;
try { if (Inst57 <= 1000 && typeof (RangeError) != "undefined") {_RecordType("<2872,2882,85>",(RangeError)); Inst57++; } } catch(e) {}
  RangeError;
} // Check setting/getting stack property on the prototype chain.


try { if (Inst58 <= 1000 && typeof (testErrorPrototype) != "undefined") {_RecordType("<2961,2979,89>",(testErrorPrototype)); Inst58++; } } catch(e) {}
function testErrorPrototype(prototype) {
try { if (Inst59 <= 1000 && typeof (prototype) != "undefined") {_RecordType("<2980,2989,89>",(prototype)); Inst59++; } } catch(e) {}
  var object = {};
try { if (Inst60 <= 1000 && typeof (object) != "undefined") {_RecordType("<2999,3005,90>",(object)); Inst60++; } } catch(e) {}
try { if (Inst63 <= 1000 && typeof (prototype) != "undefined") {_RecordType("<3033,3042,91>",(prototype)); Inst63++; } } catch(e) {}
  object.__proto__ = prototype;
try { if (Inst61 <= 1000 && typeof (object.__proto__) != "undefined") {_RecordType("<3014,3030,91>",(object.__proto__)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (object) != "undefined") {_RecordType("<3014,3020,91>",(object)); Inst62++; } } catch(e) {}
  object.stack = "123"; // Overwriting stack property succeeds.
try { if (Inst64 <= 1000 && typeof (object.stack) != "undefined") {_RecordType("<3046,3058,92>",(object.stack)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (object) != "undefined") {_RecordType("<3046,3052,92>",(object)); Inst65++; } } catch(e) {}

try { if (Inst66 <= 1000 && typeof (prototype.stack) != "undefined") {_RecordType("<3111,3126,94>",(prototype.stack)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (prototype) != "undefined") {_RecordType("<3111,3120,94>",(prototype)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (object.stack) != "undefined") {_RecordType("<3130,3142,94>",(object.stack)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (object) != "undefined") {_RecordType("<3130,3136,94>",(object)); Inst69++; } } catch(e) {}
  prototype.stack != object.stack;
  "123";
try { if (Inst70 <= 1000 && typeof (object.stack) != "undefined") {_RecordType("<3155,3167,96>",(object.stack)); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (object) != "undefined") {_RecordType("<3155,3161,96>",(object)); Inst71++; } } catch(e) {}
  object.stack;
}

try { if (Inst73 <= 1000 && typeof (e) != "undefined") {_RecordType("<3198,3199,101>",(e)); Inst73++; } } catch(e) {}
try {
try { if (Inst72 <= 1000 && typeof (rec1) != "undefined") {_RecordType("<3180,3184,100>",(rec1)); Inst72++; } } catch(e) {}
  rec1(0);
} catch (e) {
try { if (Inst74 <= 1000 && typeof (e.stack) != "undefined") {_RecordType("<3205,3212,102>",(e.stack)); Inst74++; } } catch(e) {}try { if (Inst75 <= 1000 && typeof (e) != "undefined") {_RecordType("<3205,3206,102>",(e)); Inst75++; } } catch(e) {}
  e.stack;
try { if (Inst76 <= 1000 && typeof (testErrorPrototype) != "undefined") {_RecordType("<3216,3234,103>",(testErrorPrototype)); Inst76++; } } catch(e) {}try { if (Inst77 <= 1000 && typeof (e) != "undefined") {_RecordType("<3235,3236,103>",(e)); Inst77++; } } catch(e) {}
  testErrorPrototype(e);
}

try { if (Inst79 <= 1000 && typeof (e) != "undefined") {_RecordType("<3268,3269,108>",(e)); Inst79++; } } catch(e) {}
try {
try { if (Inst78 <= 1000 && typeof (rec1) != "undefined") {_RecordType("<3250,3254,107>",(rec1)); Inst78++; } } catch(e) {}
  rec1(0);
} catch (e) {
try { if (Inst80 <= 1000 && typeof (testErrorPrototype) != "undefined") {_RecordType("<3275,3293,109>",(testErrorPrototype)); Inst80++; } } catch(e) {}try { if (Inst81 <= 1000 && typeof (e) != "undefined") {_RecordType("<3294,3295,109>",(e)); Inst81++; } } catch(e) {}
  testErrorPrototype(e);
}

try { if (Inst83 <= 1000 && typeof (e) != "undefined") {_RecordType("<3337,3338,114>",(e)); Inst83++; } } catch(e) {}
try {
try { if (Inst82 <= 1000 && typeof (Error) != "undefined") {_RecordType("<3319,3324,113>",(Error)); Inst82++; } } catch(e) {}
  throw new Error();
} catch (e) {
try { if (Inst84 <= 1000 && typeof (testErrorPrototype) != "undefined") {_RecordType("<3344,3362,115>",(testErrorPrototype)); Inst84++; } } catch(e) {}try { if (Inst85 <= 1000 && typeof (e) != "undefined") {_RecordType("<3363,3364,115>",(e)); Inst85++; } } catch(e) {}
  testErrorPrototype(e);
}

Error.stackTraceLimit = 3;
try { if (Inst86 <= 1000 && typeof (Error.stackTraceLimit) != "undefined") {_RecordType("<3370,3391,118>",(Error.stackTraceLimit)); Inst86++; } } catch(e) {}try { if (Inst87 <= 1000 && typeof (Error) != "undefined") {_RecordType("<3370,3375,118>",(Error)); Inst87++; } } catch(e) {}

try { if (Inst89 <= 1000 && typeof (e) != "undefined") {_RecordType("<3424,3425,122>",(e)); Inst89++; } } catch(e) {}
try {
try { if (Inst88 <= 1000 && typeof (rec1) != "undefined") {_RecordType("<3406,3410,121>",(rec1)); Inst88++; } } catch(e) {}
  rec1(0);
} catch (e) {
  4;
try { if (Inst90 <= 1000 && typeof (e.stack.split('\n').length) != "undefined") {_RecordType("<3436,3462,124>",(e.stack.split('\n').length)); Inst90++; } } catch(e) {}try { if (Inst91 <= 1000 && typeof (e.stack.split) != "undefined") {_RecordType("<3436,3449,124>",(e.stack.split)); Inst91++; } } catch(e) {}try { if (Inst92 <= 1000 && typeof (e.stack) != "undefined") {_RecordType("<3436,3443,124>",(e.stack)); Inst92++; } } catch(e) {}try { if (Inst93 <= 1000 && typeof (e) != "undefined") {_RecordType("<3436,3437,124>",(e)); Inst93++; } } catch(e) {}
  e.stack.split('\n').length;
}

Error.stackTraceLimit = 25.9;
try { if (Inst94 <= 1000 && typeof (Error.stackTraceLimit) != "undefined") {_RecordType("<3467,3488,127>",(Error.stackTraceLimit)); Inst94++; } } catch(e) {}try { if (Inst95 <= 1000 && typeof (Error) != "undefined") {_RecordType("<3467,3472,127>",(Error)); Inst95++; } } catch(e) {}

try { if (Inst97 <= 1000 && typeof (e) != "undefined") {_RecordType("<3524,3525,131>",(e)); Inst97++; } } catch(e) {}
try {
try { if (Inst96 <= 1000 && typeof (rec1) != "undefined") {_RecordType("<3506,3510,130>",(rec1)); Inst96++; } } catch(e) {}
  rec1(0);
} catch (e) {
  26;
try { if (Inst98 <= 1000 && typeof (e.stack.split('\n').length) != "undefined") {_RecordType("<3537,3563,133>",(e.stack.split('\n').length)); Inst98++; } } catch(e) {}try { if (Inst99 <= 1000 && typeof (e.stack.split) != "undefined") {_RecordType("<3537,3550,133>",(e.stack.split)); Inst99++; } } catch(e) {}try { if (Inst100 <= 1000 && typeof (e.stack) != "undefined") {_RecordType("<3537,3544,133>",(e.stack)); Inst100++; } } catch(e) {}try { if (Inst101 <= 1000 && typeof (e) != "undefined") {_RecordType("<3537,3538,133>",(e)); Inst101++; } } catch(e) {}
  e.stack.split('\n').length;
}

try { if (Inst104 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<3592,3595,136>",(NaN)); Inst104++; } } catch(e) {}
Error.stackTraceLimit = NaN;
try { if (Inst102 <= 1000 && typeof (Error.stackTraceLimit) != "undefined") {_RecordType("<3568,3589,136>",(Error.stackTraceLimit)); Inst102++; } } catch(e) {}try { if (Inst103 <= 1000 && typeof (Error) != "undefined") {_RecordType("<3568,3573,136>",(Error)); Inst103++; } } catch(e) {}

try { if (Inst106 <= 1000 && typeof (e) != "undefined") {_RecordType("<3624,3625,140>",(e)); Inst106++; } } catch(e) {}
try {
try { if (Inst105 <= 1000 && typeof (rec1) != "undefined") {_RecordType("<3606,3610,139>",(rec1)); Inst105++; } } catch(e) {}
  rec1(0);
} catch (e) {
  1;
try { if (Inst107 <= 1000 && typeof (e.stack.split('\n').length) != "undefined") {_RecordType("<3636,3662,142>",(e.stack.split('\n').length)); Inst107++; } } catch(e) {}try { if (Inst108 <= 1000 && typeof (e.stack.split) != "undefined") {_RecordType("<3636,3649,142>",(e.stack.split)); Inst108++; } } catch(e) {}try { if (Inst109 <= 1000 && typeof (e.stack) != "undefined") {_RecordType("<3636,3643,142>",(e.stack)); Inst109++; } } catch(e) {}try { if (Inst110 <= 1000 && typeof (e) != "undefined") {_RecordType("<3636,3637,142>",(e)); Inst110++; } } catch(e) {}
  e.stack.split('\n').length;
} // A limit outside the range of integers.


Error.stackTraceLimit = 1e12;
try { if (Inst111 <= 1000 && typeof (Error.stackTraceLimit) != "undefined") {_RecordType("<3710,3731,146>",(Error.stackTraceLimit)); Inst111++; } } catch(e) {}try { if (Inst112 <= 1000 && typeof (Error) != "undefined") {_RecordType("<3710,3715,146>",(Error)); Inst112++; } } catch(e) {}

try { if (Inst114 <= 1000 && typeof (e) != "undefined") {_RecordType("<3767,3768,150>",(e)); Inst114++; } } catch(e) {}
try {
try { if (Inst113 <= 1000 && typeof (rec1) != "undefined") {_RecordType("<3749,3753,149>",(rec1)); Inst113++; } } catch(e) {}
  rec1(0);
} catch (e) {
try { if (Inst115 <= 1000 && typeof (e.stack.split('\n').length) != "undefined") {_RecordType("<3774,3800,151>",(e.stack.split('\n').length)); Inst115++; } } catch(e) {}try { if (Inst116 <= 1000 && typeof (e.stack.split) != "undefined") {_RecordType("<3774,3787,151>",(e.stack.split)); Inst116++; } } catch(e) {}try { if (Inst117 <= 1000 && typeof (e.stack) != "undefined") {_RecordType("<3774,3781,151>",(e.stack)); Inst117++; } } catch(e) {}try { if (Inst118 <= 1000 && typeof (e) != "undefined") {_RecordType("<3774,3775,151>",(e)); Inst118++; } } catch(e) {}
  e.stack.split('\n').length > 100;
}

try { if (Inst121 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<3835,3843,154>",(Infinity)); Inst121++; } } catch(e) {}
Error.stackTraceLimit = Infinity;
try { if (Inst119 <= 1000 && typeof (Error.stackTraceLimit) != "undefined") {_RecordType("<3811,3832,154>",(Error.stackTraceLimit)); Inst119++; } } catch(e) {}try { if (Inst120 <= 1000 && typeof (Error) != "undefined") {_RecordType("<3811,3816,154>",(Error)); Inst120++; } } catch(e) {}

try { if (Inst123 <= 1000 && typeof (e) != "undefined") {_RecordType("<3872,3873,158>",(e)); Inst123++; } } catch(e) {}
try {
try { if (Inst122 <= 1000 && typeof (rec1) != "undefined") {_RecordType("<3854,3858,157>",(rec1)); Inst122++; } } catch(e) {}
  rec1(0);
} catch (e) {
try { if (Inst124 <= 1000 && typeof (e.stack.split('\n').length) != "undefined") {_RecordType("<3879,3905,159>",(e.stack.split('\n').length)); Inst124++; } } catch(e) {}try { if (Inst125 <= 1000 && typeof (e.stack.split) != "undefined") {_RecordType("<3879,3892,159>",(e.stack.split)); Inst125++; } } catch(e) {}try { if (Inst126 <= 1000 && typeof (e.stack) != "undefined") {_RecordType("<3879,3886,159>",(e.stack)); Inst126++; } } catch(e) {}try { if (Inst127 <= 1000 && typeof (e) != "undefined") {_RecordType("<3879,3880,159>",(e)); Inst127++; } } catch(e) {}
  e.stack.split('\n').length > 100;
}

Error.stackTraceLimit = "not a number";
try { if (Inst128 <= 1000 && typeof (Error.stackTraceLimit) != "undefined") {_RecordType("<3916,3937,162>",(Error.stackTraceLimit)); Inst128++; } } catch(e) {}try { if (Inst129 <= 1000 && typeof (Error) != "undefined") {_RecordType("<3916,3921,162>",(Error)); Inst129++; } } catch(e) {}

try { if (Inst131 <= 1000 && typeof (e) != "undefined") {_RecordType("<3983,3984,166>",(e)); Inst131++; } } catch(e) {}
try {
try { if (Inst130 <= 1000 && typeof (rec1) != "undefined") {_RecordType("<3965,3969,165>",(rec1)); Inst130++; } } catch(e) {}
  rec1(0);
} catch (e) {
try { if (Inst132 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<3990,3999,167>",(undefined)); Inst132++; } } catch(e) {}
  undefined;
try { if (Inst133 <= 1000 && typeof (e.stack) != "undefined") {_RecordType("<4003,4010,168>",(e.stack)); Inst133++; } } catch(e) {}try { if (Inst134 <= 1000 && typeof (e) != "undefined") {_RecordType("<4003,4004,168>",(e)); Inst134++; } } catch(e) {}
  e.stack;
  e.stack = "abc";
try { if (Inst135 <= 1000 && typeof (e.stack) != "undefined") {_RecordType("<4014,4021,169>",(e.stack)); Inst135++; } } catch(e) {}try { if (Inst136 <= 1000 && typeof (e) != "undefined") {_RecordType("<4014,4015,169>",(e)); Inst136++; } } catch(e) {}
  "abc";
try { if (Inst137 <= 1000 && typeof (e.stack) != "undefined") {_RecordType("<4042,4049,171>",(e.stack)); Inst137++; } } catch(e) {}try { if (Inst138 <= 1000 && typeof (e) != "undefined") {_RecordType("<4042,4043,171>",(e)); Inst138++; } } catch(e) {}
  e.stack;
}

Error.stackTraceLimit = 3;
try { if (Inst139 <= 1000 && typeof (Error.stackTraceLimit) != "undefined") {_RecordType("<4054,4075,174>",(Error.stackTraceLimit)); Inst139++; } } catch(e) {}try { if (Inst140 <= 1000 && typeof (Error) != "undefined") {_RecordType("<4054,4059,174>",(Error)); Inst140++; } } catch(e) {}
Error = ""; // Overwrite Error in the global object.
try { if (Inst141 <= 1000 && typeof (Error) != "undefined") {_RecordType("<4081,4086,175>",(Error)); Inst141++; } } catch(e) {}

try { if (Inst143 <= 1000 && typeof (e) != "undefined") {_RecordType("<4161,4162,179>",(e)); Inst143++; } } catch(e) {}
try {
try { if (Inst142 <= 1000 && typeof (rec1) != "undefined") {_RecordType("<4143,4147,178>",(rec1)); Inst142++; } } catch(e) {}
  rec1(0);
} catch (e) {
  4;
try { if (Inst144 <= 1000 && typeof (e.stack.split('\n').length) != "undefined") {_RecordType("<4173,4199,181>",(e.stack.split('\n').length)); Inst144++; } } catch(e) {}try { if (Inst145 <= 1000 && typeof (e.stack.split) != "undefined") {_RecordType("<4173,4186,181>",(e.stack.split)); Inst145++; } } catch(e) {}try { if (Inst146 <= 1000 && typeof (e.stack) != "undefined") {_RecordType("<4173,4180,181>",(e.stack)); Inst146++; } } catch(e) {}try { if (Inst147 <= 1000 && typeof (e) != "undefined") {_RecordType("<4173,4174,181>",(e)); Inst147++; } } catch(e) {}
  e.stack.split('\n').length;
}

