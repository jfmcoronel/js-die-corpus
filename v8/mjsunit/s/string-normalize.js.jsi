var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2014 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
'';
try { if (Inst0 <= 1000 && typeof (''.normalize) != "undefined") {_RecordType("<171,183,5>",(''.normalize)); Inst0++; } } catch(e) {}
''.normalize();
try { if (Inst1 <= 1000 && typeof (Array.prototype.indexOf) != "undefined") {_RecordType("<194,217,6>",(Array.prototype.indexOf)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<194,209,6>",(Array.prototype)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Array) != "undefined") {_RecordType("<194,199,6>",(Array)); Inst3++; } } catch(e) {}
delete Array.prototype.indexOf;
'';
try { if (Inst4 <= 1000 && typeof (''.normalize) != "undefined") {_RecordType("<223,235,8>",(''.normalize)); Inst4++; } } catch(e) {}
''.normalize();

(function () {
try { if (Inst5 <= 1000 && typeof (''.normalize) != "undefined") {_RecordType("<257,269,11>",(''.normalize)); Inst5++; } } catch(e) {}
  ''.normalize('invalid');
})();

try { if (Inst6 <= 1000 && typeof (RangeError) != "undefined") {_RecordType("<289,299,14>",(RangeError)); Inst6++; } } catch(e) {}
RangeError;
try { if (Inst7 <= 1000 && typeof (Array.prototype.join) != "undefined") {_RecordType("<308,328,15>",(Array.prototype.join)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<308,323,15>",(Array.prototype)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Array) != "undefined") {_RecordType("<308,313,15>",(Array)); Inst9++; } } catch(e) {}
delete Array.prototype.join;

(function () {
try { if (Inst10 <= 1000 && typeof (''.normalize) != "undefined") {_RecordType("<348,360,18>",(''.normalize)); Inst10++; } } catch(e) {}
  ''.normalize('invalid');
})();

try { if (Inst11 <= 1000 && typeof (RangeError) != "undefined") {_RecordType("<380,390,21>",(RangeError)); Inst11++; } } catch(e) {}
RangeError;

(function () {
try { if (Inst12 <= 1000 && typeof (''.normalize) != "undefined") {_RecordType("<410,422,24>",(''.normalize)); Inst12++; } } catch(e) {}
  ''.normalize(null);
})();

try { if (Inst13 <= 1000 && typeof (RangeError) != "undefined") {_RecordType("<437,447,27>",(RangeError)); Inst13++; } } catch(e) {}
RangeError;

(function () {
try { if (Inst14 <= 1000 && typeof (''.normalize) != "undefined") {_RecordType("<467,479,30>",(''.normalize)); Inst14++; } } catch(e) {}
  ''.normalize(true);
})();

try { if (Inst15 <= 1000 && typeof (RangeError) != "undefined") {_RecordType("<494,504,33>",(RangeError)); Inst15++; } } catch(e) {}
RangeError;

(function () {
try { if (Inst16 <= 1000 && typeof (''.normalize) != "undefined") {_RecordType("<524,536,36>",(''.normalize)); Inst16++; } } catch(e) {}
  ''.normalize(false);
})();

try { if (Inst17 <= 1000 && typeof (RangeError) != "undefined") {_RecordType("<552,562,39>",(RangeError)); Inst17++; } } catch(e) {}
RangeError;

(function () {
try { if (Inst18 <= 1000 && typeof (''.normalize) != "undefined") {_RecordType("<582,594,42>",(''.normalize)); Inst18++; } } catch(e) {}
  ''.normalize(42);
})();

try { if (Inst19 <= 1000 && typeof (RangeError) != "undefined") {_RecordType("<607,617,45>",(RangeError)); Inst19++; } } catch(e) {}
RangeError;

(function () {
try { if (Inst20 <= 1000 && typeof (''.normalize) != "undefined") {_RecordType("<637,649,48>",(''.normalize)); Inst20++; } } catch(e) {}
  ''.normalize({});
})();

try { if (Inst21 <= 1000 && typeof (RangeError) != "undefined") {_RecordType("<662,672,51>",(RangeError)); Inst21++; } } catch(e) {}
RangeError;

(function () {
try { if (Inst22 <= 1000 && typeof (''.normalize) != "undefined") {_RecordType("<692,704,54>",(''.normalize)); Inst22++; } } catch(e) {}
  ''.normalize([]);
})();

try { if (Inst23 <= 1000 && typeof (RangeError) != "undefined") {_RecordType("<717,727,57>",(RangeError)); Inst23++; } } catch(e) {}
RangeError;

