var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
var Inst102 = 0;
var Inst103 = 0;
var Inst104 = 0;
var Inst105 = 0;
var Inst106 = 0;
var Inst107 = 0;
var Inst108 = 0;
var Inst109 = 0;
var Inst110 = 0;
var Inst111 = 0;
var Inst112 = 0;
var Inst113 = 0;
var Inst114 = 0;
var Inst115 = 0;
var Inst116 = 0;
var Inst117 = 0;
var Inst118 = 0;
var Inst119 = 0;
var Inst120 = 0;
var Inst121 = 0;
var Inst122 = 0;
var Inst123 = 0;
var Inst124 = 0;
var Inst125 = 0;
var Inst126 = 0;
var Inst127 = 0;
var Inst128 = 0;
var Inst129 = 0;
var Inst130 = 0;
var Inst131 = 0;
var Inst132 = 0;
var Inst133 = 0;
var Inst134 = 0;
var Inst135 = 0;
var Inst136 = 0;
var Inst137 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2010 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// Flags: --expose-externalize-string --expose-gc
// Test data pointer caching of external strings.
try { if (Inst0 <= 1000 && typeof (test) != "undefined") {_RecordType("<1706,1710,29>",(test)); Inst0++; } } catch(e) {}
function test() {
  // Test string.charAt.
try { if (Inst2 <= 1000 && typeof (Array) != "undefined") {_RecordType("<1763,1768,31>",(Array)); Inst2++; } } catch(e) {}
  var charat_str = new Array(5);
try { if (Inst1 <= 1000 && typeof (charat_str) != "undefined") {_RecordType("<1746,1756,31>",(charat_str)); Inst1++; } } catch(e) {}
  charat_str[0] = "0123456789ABCDEF0123456789ABCDEF\
0123456789ABCDEF0123456789ABCDEF0123456789ABCDEF0123456789ABCDEF\
0123456789ABCDEF0123456789ABCDEF0123456789ABCDEF0123456789ABCDEF\
0123456789ABCDEF0123456789ABCDEF0123456789ABCDEF0123456789ABCDEF\
0123456789ABCDEF0123456789ABCDEF0123456789ABCDEF0123456789ABCDEF";
try { if (Inst3 <= 1000 && typeof (charat_str[0]) != "undefined") {_RecordType("<1775,1788,32>",(charat_str[0])); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (charat_str) != "undefined") {_RecordType("<1775,1785,32>",(charat_str)); Inst4++; } } catch(e) {}
  charat_str[1] = "0123456789ABCDEF";
try { if (Inst5 <= 1000 && typeof (charat_str[1]) != "undefined") {_RecordType("<2093,2106,37>",(charat_str[1])); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (charat_str) != "undefined") {_RecordType("<2093,2103,37>",(charat_str)); Inst6++; } } catch(e) {}

  for (var i = 0; i < 6; i++) {
try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<2141,2142,39>",(i)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<2148,2149,39>",(i)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<2155,2156,39>",(i)); Inst9++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (charat_str[1]) != "undefined") {_RecordType("<2183,2196,40>",(charat_str[1])); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (charat_str) != "undefined") {_RecordType("<2183,2193,40>",(charat_str)); Inst13++; } } catch(e) {}
    charat_str[1] += charat_str[1];
try { if (Inst10 <= 1000 && typeof (charat_str[1]) != "undefined") {_RecordType("<2166,2179,40>",(charat_str[1])); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (charat_str) != "undefined") {_RecordType("<2166,2176,40>",(charat_str)); Inst11++; } } catch(e) {}
  }

try { if (Inst14 <= 1000 && typeof (ex) != "undefined") {_RecordType("<2272,2274,46>",(ex)); Inst14++; } } catch(e) {}
  try {
    // String can only be externalized once
    ;
  } catch (ex) {
    ;
  }

try { if (Inst17 <= 1000 && typeof (charat_str[0].slice) != "undefined") {_RecordType("<2307,2326,50>",(charat_str[0].slice)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (charat_str[0]) != "undefined") {_RecordType("<2307,2320,50>",(charat_str[0])); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (charat_str) != "undefined") {_RecordType("<2307,2317,50>",(charat_str)); Inst19++; } } catch(e) {}
  charat_str[2] = charat_str[0].slice(0, -1);
try { if (Inst15 <= 1000 && typeof (charat_str[2]) != "undefined") {_RecordType("<2291,2304,50>",(charat_str[2])); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (charat_str) != "undefined") {_RecordType("<2291,2301,50>",(charat_str)); Inst16++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (charat_str[1].slice) != "undefined") {_RecordType("<2353,2372,51>",(charat_str[1].slice)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (charat_str[1]) != "undefined") {_RecordType("<2353,2366,51>",(charat_str[1])); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (charat_str) != "undefined") {_RecordType("<2353,2363,51>",(charat_str)); Inst24++; } } catch(e) {}
  charat_str[3] = charat_str[1].slice(0, -1);
try { if (Inst20 <= 1000 && typeof (charat_str[3]) != "undefined") {_RecordType("<2337,2350,51>",(charat_str[3])); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (charat_str) != "undefined") {_RecordType("<2337,2347,51>",(charat_str)); Inst21++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (charat_str[0]) != "undefined") {_RecordType("<2399,2412,52>",(charat_str[0])); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (charat_str) != "undefined") {_RecordType("<2399,2409,52>",(charat_str)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (charat_str[0]) != "undefined") {_RecordType("<2415,2428,52>",(charat_str[0])); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (charat_str) != "undefined") {_RecordType("<2415,2425,52>",(charat_str)); Inst30++; } } catch(e) {}
  charat_str[4] = charat_str[0] + charat_str[0];
try { if (Inst25 <= 1000 && typeof (charat_str[4]) != "undefined") {_RecordType("<2383,2396,52>",(charat_str[4])); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (charat_str) != "undefined") {_RecordType("<2383,2393,52>",(charat_str)); Inst26++; } } catch(e) {}

  for (var i = 0; i < 5; i++) {
try { if (Inst31 <= 1000 && typeof (i) != "undefined") {_RecordType("<2442,2443,54>",(i)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (i) != "undefined") {_RecordType("<2449,2450,54>",(i)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (i) != "undefined") {_RecordType("<2456,2457,54>",(i)); Inst33++; } } catch(e) {}
    'B';
try { if (Inst34 <= 1000 && typeof (charat_str[i].charAt) != "undefined") {_RecordType("<2476,2496,56>",(charat_str[i].charAt)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (charat_str[i]) != "undefined") {_RecordType("<2476,2489,56>",(charat_str[i])); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (charat_str) != "undefined") {_RecordType("<2476,2486,56>",(charat_str)); Inst36++; } } catch(e) {}
    charat_str[i].charAt(6 * 16 + 11);
    'C';
try { if (Inst37 <= 1000 && typeof (charat_str[i].charAt) != "undefined") {_RecordType("<2524,2544,58>",(charat_str[i].charAt)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (charat_str[i]) != "undefined") {_RecordType("<2524,2537,58>",(charat_str[i])); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (charat_str) != "undefined") {_RecordType("<2524,2534,58>",(charat_str)); Inst39++; } } catch(e) {}
    charat_str[i].charAt(6 * 16 + 12);
    'A';
try { if (Inst40 <= 1000 && typeof (charat_str[i].charAt) != "undefined") {_RecordType("<2572,2592,60>",(charat_str[i].charAt)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (charat_str[i]) != "undefined") {_RecordType("<2572,2585,60>",(charat_str[i])); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (charat_str) != "undefined") {_RecordType("<2572,2582,60>",(charat_str)); Inst42++; } } catch(e) {}
    charat_str[i].charAt(3 * 16 + 10);
    'B';
try { if (Inst43 <= 1000 && typeof (charat_str[i].charAt) != "undefined") {_RecordType("<2620,2640,62>",(charat_str[i].charAt)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (charat_str[i]) != "undefined") {_RecordType("<2620,2633,62>",(charat_str[i])); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (charat_str) != "undefined") {_RecordType("<2620,2630,62>",(charat_str)); Inst45++; } } catch(e) {}
    charat_str[i].charAt(3 * 16 + 11);
  }

  charat_short = "012";
try { if (Inst46 <= 1000 && typeof (charat_short) != "undefined") {_RecordType("<2662,2674,65>",(charat_short)); Inst46++; } } catch(e) {}

try { if (Inst47 <= 1000 && typeof (ex) != "undefined") {_RecordType("<2754,2756,70>",(ex)); Inst47++; } } catch(e) {}
  try {
    // String can only be externalized once
    ;
  } catch (ex) {
    ;
  }

  "1";
try { if (Inst48 <= 1000 && typeof (charat_short.charAt) != "undefined") {_RecordType("<2780,2799,75>",(charat_short.charAt)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (charat_short) != "undefined") {_RecordType("<2780,2792,75>",(charat_short)); Inst49++; } } catch(e) {}
  charat_short.charAt(1);
  // Test regexp and short substring.
  var re = /(A|B)/;
try { if (Inst50 <= 1000 && typeof (re) != "undefined") {_RecordType("<2848,2850,77>",(re)); Inst50++; } } catch(e) {}
  var rere = /(T.{1,2}B)/;
try { if (Inst51 <= 1000 && typeof (rere) != "undefined") {_RecordType("<2868,2872,78>",(rere)); Inst51++; } } catch(e) {}
  var ascii = "ABCDEFGHIJKLMNOPQRST";
try { if (Inst52 <= 1000 && typeof (ascii) != "undefined") {_RecordType("<2895,2900,79>",(ascii)); Inst52++; } } catch(e) {}
  var twobyte = "_ABCDEFGHIJKLMNOPQRST";
try { if (Inst53 <= 1000 && typeof (twobyte) != "undefined") {_RecordType("<2933,2940,80>",(twobyte)); Inst53++; } } catch(e) {}

try { if (Inst54 <= 1000 && typeof (ex) != "undefined") {_RecordType("<2994,2996,84>",(ex)); Inst54++; } } catch(e) {}
  try {
    ;
  } catch (ex) {
    ;
  }

try { if (Inst55 <= 1000 && typeof (isOneByteString) != "undefined") {_RecordType("<3013,3028,88>",(isOneByteString)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (ascii) != "undefined") {_RecordType("<3029,3034,88>",(ascii)); Inst56++; } } catch(e) {}
  isOneByteString(ascii);
try { if (Inst57 <= 1000 && typeof (isOneByteString) != "undefined") {_RecordType("<3039,3054,89>",(isOneByteString)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (twobyte) != "undefined") {_RecordType("<3055,3062,89>",(twobyte)); Inst58++; } } catch(e) {}
  isOneByteString(twobyte);
try { if (Inst60 <= 1000 && typeof (ascii.slice) != "undefined") {_RecordType("<3085,3096,90>",(ascii.slice)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (ascii) != "undefined") {_RecordType("<3085,3090,90>",(ascii)); Inst61++; } } catch(e) {}
  var ascii_slice = ascii.slice(1, -1);
try { if (Inst59 <= 1000 && typeof (ascii_slice) != "undefined") {_RecordType("<3071,3082,90>",(ascii_slice)); Inst59++; } } catch(e) {}
try { if (Inst63 <= 1000 && typeof (twobyte.slice) != "undefined") {_RecordType("<3127,3140,91>",(twobyte.slice)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (twobyte) != "undefined") {_RecordType("<3127,3134,91>",(twobyte)); Inst64++; } } catch(e) {}
  var twobyte_slice = twobyte.slice(2, -1);
try { if (Inst62 <= 1000 && typeof (twobyte_slice) != "undefined") {_RecordType("<3111,3124,91>",(twobyte_slice)); Inst62++; } } catch(e) {}
try { if (Inst66 <= 1000 && typeof (ascii) != "undefined") {_RecordType("<3168,3173,92>",(ascii)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (ascii) != "undefined") {_RecordType("<3176,3181,92>",(ascii)); Inst67++; } } catch(e) {}
  var ascii_cons = ascii + ascii;
try { if (Inst65 <= 1000 && typeof (ascii_cons) != "undefined") {_RecordType("<3155,3165,92>",(ascii_cons)); Inst65++; } } catch(e) {}
try { if (Inst69 <= 1000 && typeof (twobyte) != "undefined") {_RecordType("<3204,3211,93>",(twobyte)); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (twobyte) != "undefined") {_RecordType("<3214,3221,93>",(twobyte)); Inst70++; } } catch(e) {}
  var twobyte_cons = twobyte + twobyte;
try { if (Inst68 <= 1000 && typeof (twobyte_cons) != "undefined") {_RecordType("<3189,3201,93>",(twobyte_cons)); Inst68++; } } catch(e) {}

  for (var i = 0; i < 2; i++) {
try { if (Inst71 <= 1000 && typeof (i) != "undefined") {_RecordType("<3235,3236,95>",(i)); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (i) != "undefined") {_RecordType("<3242,3243,95>",(i)); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (i) != "undefined") {_RecordType("<3249,3250,95>",(i)); Inst73++; } } catch(e) {}
    ["A", "A"];
try { if (Inst74 <= 1000 && typeof (re.exec) != "undefined") {_RecordType("<3276,3283,97>",(re.exec)); Inst74++; } } catch(e) {}try { if (Inst75 <= 1000 && typeof (re) != "undefined") {_RecordType("<3276,3278,97>",(re)); Inst75++; } } catch(e) {}try { if (Inst76 <= 1000 && typeof (ascii) != "undefined") {_RecordType("<3284,3289,97>",(ascii)); Inst76++; } } catch(e) {}
    re.exec(ascii);
    ["B", "B"];
try { if (Inst77 <= 1000 && typeof (re.exec) != "undefined") {_RecordType("<3312,3319,99>",(re.exec)); Inst77++; } } catch(e) {}try { if (Inst78 <= 1000 && typeof (re) != "undefined") {_RecordType("<3312,3314,99>",(re)); Inst78++; } } catch(e) {}try { if (Inst79 <= 1000 && typeof (ascii_slice) != "undefined") {_RecordType("<3320,3331,99>",(ascii_slice)); Inst79++; } } catch(e) {}
    re.exec(ascii_slice);
    ["TAB", "TAB"];
try { if (Inst80 <= 1000 && typeof (rere.exec) != "undefined") {_RecordType("<3358,3367,101>",(rere.exec)); Inst80++; } } catch(e) {}try { if (Inst81 <= 1000 && typeof (rere) != "undefined") {_RecordType("<3358,3362,101>",(rere)); Inst81++; } } catch(e) {}try { if (Inst82 <= 1000 && typeof (ascii_cons) != "undefined") {_RecordType("<3368,3378,101>",(ascii_cons)); Inst82++; } } catch(e) {}
    rere.exec(ascii_cons);
    ["A", "A"];
try { if (Inst83 <= 1000 && typeof (re.exec) != "undefined") {_RecordType("<3401,3408,103>",(re.exec)); Inst83++; } } catch(e) {}try { if (Inst84 <= 1000 && typeof (re) != "undefined") {_RecordType("<3401,3403,103>",(re)); Inst84++; } } catch(e) {}try { if (Inst85 <= 1000 && typeof (twobyte) != "undefined") {_RecordType("<3409,3416,103>",(twobyte)); Inst85++; } } catch(e) {}
    re.exec(twobyte);
    ["B", "B"];
try { if (Inst86 <= 1000 && typeof (re.exec) != "undefined") {_RecordType("<3439,3446,105>",(re.exec)); Inst86++; } } catch(e) {}try { if (Inst87 <= 1000 && typeof (re) != "undefined") {_RecordType("<3439,3441,105>",(re)); Inst87++; } } catch(e) {}try { if (Inst88 <= 1000 && typeof (twobyte_slice) != "undefined") {_RecordType("<3447,3460,105>",(twobyte_slice)); Inst88++; } } catch(e) {}
    re.exec(twobyte_slice);
    ["T_AB", "T_AB"];
try { if (Inst89 <= 1000 && typeof (rere.exec) != "undefined") {_RecordType("<3489,3498,107>",(rere.exec)); Inst89++; } } catch(e) {}try { if (Inst90 <= 1000 && typeof (rere) != "undefined") {_RecordType("<3489,3493,107>",(rere)); Inst90++; } } catch(e) {}try { if (Inst91 <= 1000 && typeof (twobyte_cons) != "undefined") {_RecordType("<3499,3511,107>",(twobyte_cons)); Inst91++; } } catch(e) {}
    rere.exec(twobyte_cons);
    "DEFG";
try { if (Inst92 <= 1000 && typeof (ascii_slice.substr) != "undefined") {_RecordType("<3530,3548,109>",(ascii_slice.substr)); Inst92++; } } catch(e) {}try { if (Inst93 <= 1000 && typeof (ascii_slice) != "undefined") {_RecordType("<3530,3541,109>",(ascii_slice)); Inst93++; } } catch(e) {}
    ascii_slice.substr(2, 4);
    "DEFG";
try { if (Inst94 <= 1000 && typeof (twobyte_slice.substr) != "undefined") {_RecordType("<3572,3592,111>",(twobyte_slice.substr)); Inst94++; } } catch(e) {}try { if (Inst95 <= 1000 && typeof (twobyte_slice) != "undefined") {_RecordType("<3572,3585,111>",(twobyte_slice)); Inst95++; } } catch(e) {}
    twobyte_slice.substr(2, 4);
    "DEFG";
try { if (Inst96 <= 1000 && typeof (ascii_cons.substr) != "undefined") {_RecordType("<3616,3633,113>",(ascii_cons.substr)); Inst96++; } } catch(e) {}try { if (Inst97 <= 1000 && typeof (ascii_cons) != "undefined") {_RecordType("<3616,3626,113>",(ascii_cons)); Inst97++; } } catch(e) {}
    ascii_cons.substr(3, 4);
    "DEFG";
try { if (Inst98 <= 1000 && typeof (twobyte_cons.substr) != "undefined") {_RecordType("<3657,3676,115>",(twobyte_cons.substr)); Inst98++; } } catch(e) {}try { if (Inst99 <= 1000 && typeof (twobyte_cons) != "undefined") {_RecordType("<3657,3669,115>",(twobyte_cons)); Inst99++; } } catch(e) {}
    twobyte_cons.substr(4, 4);
  } // Test adding external strings


  var short_ascii = "E=";
try { if (Inst100 <= 1000 && typeof (short_ascii) != "undefined") {_RecordType("<3728,3739,119>",(short_ascii)); Inst100++; } } catch(e) {}
  var long_ascii = "MCsquared";
try { if (Inst101 <= 1000 && typeof (long_ascii) != "undefined") {_RecordType("<3754,3764,120>",(long_ascii)); Inst101++; } } catch(e) {}
  var short_twobyte = "E\u1234";
try { if (Inst102 <= 1000 && typeof (short_twobyte) != "undefined") {_RecordType("<3786,3799,121>",(short_twobyte)); Inst102++; } } catch(e) {}
  var long_twobyte = "MCsquare\u1234";
try { if (Inst103 <= 1000 && typeof (long_twobyte) != "undefined") {_RecordType("<3819,3831,122>",(long_twobyte)); Inst103++; } } catch(e) {}

try { if (Inst112 <= 1000 && typeof (ex) != "undefined") {_RecordType("<4049,4051,128>",(ex)); Inst112++; } } catch(e) {}
  try {
    // String can only be externalized once
try { if (Inst104 <= 1000 && typeof (isOneByteString) != "undefined") {_RecordType("<3909,3924,126>",(isOneByteString)); Inst104++; } } catch(e) {}try { if (Inst105 <= 1000 && typeof (short_asii) != "undefined") {_RecordType("<3925,3935,126>",(short_asii)); Inst105++; } } catch(e) {}try { if (Inst106 <= 1000 && typeof (isOneByteString) != "undefined") {_RecordType("<3940,3955,126>",(isOneByteString)); Inst106++; } } catch(e) {}try { if (Inst107 <= 1000 && typeof (long_ascii) != "undefined") {_RecordType("<3956,3966,126>",(long_ascii)); Inst107++; } } catch(e) {}
    isOneByteString(short_asii) && isOneByteString(long_ascii);
try { if (Inst108 <= 1000 && typeof (isOneByteString) != "undefined") {_RecordType("<3973,3988,127>",(isOneByteString)); Inst108++; } } catch(e) {}try { if (Inst109 <= 1000 && typeof (short_twobyte) != "undefined") {_RecordType("<3989,4002,127>",(short_twobyte)); Inst109++; } } catch(e) {}try { if (Inst110 <= 1000 && typeof (isOneByteString) != "undefined") {_RecordType("<4007,4022,127>",(isOneByteString)); Inst110++; } } catch(e) {}try { if (Inst111 <= 1000 && typeof (long_twobyte) != "undefined") {_RecordType("<4023,4035,127>",(long_twobyte)); Inst111++; } } catch(e) {}
    isOneByteString(short_twobyte) || isOneByteString(long_twobyte);
  } catch (ex) {
    ;
  }

  "E=MCsquared";
try { if (Inst113 <= 1000 && typeof (short_ascii) != "undefined") {_RecordType("<4085,4096,133>",(short_ascii)); Inst113++; } } catch(e) {}try { if (Inst114 <= 1000 && typeof (long_ascii) != "undefined") {_RecordType("<4099,4109,133>",(long_ascii)); Inst114++; } } catch(e) {}
  short_ascii + long_ascii;
try { if (Inst115 <= 1000 && typeof (isOneByteString) != "undefined") {_RecordType("<4113,4128,134>",(isOneByteString)); Inst115++; } } catch(e) {}try { if (Inst116 <= 1000 && typeof (short_ascii) != "undefined") {_RecordType("<4129,4140,134>",(short_ascii)); Inst116++; } } catch(e) {}try { if (Inst117 <= 1000 && typeof (long_ascii) != "undefined") {_RecordType("<4143,4153,134>",(long_ascii)); Inst117++; } } catch(e) {}
  isOneByteString(short_ascii + long_ascii);
  "MCsquaredE=";
try { if (Inst118 <= 1000 && typeof (long_ascii) != "undefined") {_RecordType("<4175,4185,136>",(long_ascii)); Inst118++; } } catch(e) {}try { if (Inst119 <= 1000 && typeof (short_ascii) != "undefined") {_RecordType("<4188,4199,136>",(short_ascii)); Inst119++; } } catch(e) {}
  long_ascii + short_ascii;
  "E\u1234MCsquare\u1234";
try { if (Inst120 <= 1000 && typeof (short_twobyte) != "undefined") {_RecordType("<4230,4243,138>",(short_twobyte)); Inst120++; } } catch(e) {}try { if (Inst121 <= 1000 && typeof (long_twobyte) != "undefined") {_RecordType("<4246,4258,138>",(long_twobyte)); Inst121++; } } catch(e) {}
  short_twobyte + long_twobyte;
try { if (Inst122 <= 1000 && typeof (isOneByteString) != "undefined") {_RecordType("<4262,4277,139>",(isOneByteString)); Inst122++; } } catch(e) {}try { if (Inst123 <= 1000 && typeof (short_twobyte) != "undefined") {_RecordType("<4278,4291,139>",(short_twobyte)); Inst123++; } } catch(e) {}try { if (Inst124 <= 1000 && typeof (long_twobyte) != "undefined") {_RecordType("<4294,4306,139>",(long_twobyte)); Inst124++; } } catch(e) {}
  isOneByteString(short_twobyte + long_twobyte);
  "E=MCsquared";
try { if (Inst125 <= 1000 && typeof (long_ascii) != "undefined") {_RecordType("<4335,4345,141>",(long_ascii)); Inst125++; } } catch(e) {}
  "E=" + long_ascii;
  "E\u1234MCsquared";
try { if (Inst126 <= 1000 && typeof (short_twobyte) != "undefined") {_RecordType("<4371,4384,143>",(short_twobyte)); Inst126++; } } catch(e) {}
  short_twobyte + "MCsquared";
  "E\u1234MCsquared";
try { if (Inst127 <= 1000 && typeof (short_twobyte) != "undefined") {_RecordType("<4424,4437,145>",(short_twobyte)); Inst127++; } } catch(e) {}try { if (Inst128 <= 1000 && typeof (long_ascii) != "undefined") {_RecordType("<4440,4450,145>",(long_ascii)); Inst128++; } } catch(e) {}
  short_twobyte + long_ascii;
try { if (Inst129 <= 1000 && typeof (isOneByteString) != "undefined") {_RecordType("<4454,4469,146>",(isOneByteString)); Inst129++; } } catch(e) {}try { if (Inst130 <= 1000 && typeof (short_twobyte) != "undefined") {_RecordType("<4470,4483,146>",(short_twobyte)); Inst130++; } } catch(e) {}try { if (Inst131 <= 1000 && typeof (long_ascii) != "undefined") {_RecordType("<4486,4496,146>",(long_ascii)); Inst131++; } } catch(e) {}
  isOneByteString(short_twobyte + long_ascii);
} // Run the test many times to ensure IC-s don't break things.


for (var i = 0; i < 10; i++) {
try { if (Inst132 <= 1000 && typeof (i) != "undefined") {_RecordType("<4574,4575,150>",(i)); Inst132++; } } catch(e) {}try { if (Inst133 <= 1000 && typeof (i) != "undefined") {_RecordType("<4581,4582,150>",(i)); Inst133++; } } catch(e) {}try { if (Inst134 <= 1000 && typeof (i) != "undefined") {_RecordType("<4589,4590,150>",(i)); Inst134++; } } catch(e) {}
try { if (Inst135 <= 1000 && typeof (test) != "undefined") {_RecordType("<4598,4602,151>",(test)); Inst135++; } } catch(e) {}
  test();
} // Clean up string to make Valgrind happy.


try { if (Inst136 <= 1000 && typeof (gc) != "undefined") {_RecordType("<4653,4655,155>",(gc)); Inst136++; } } catch(e) {}
gc();
try { if (Inst137 <= 1000 && typeof (gc) != "undefined") {_RecordType("<4659,4661,156>",(gc)); Inst137++; } } catch(e) {}
gc();

