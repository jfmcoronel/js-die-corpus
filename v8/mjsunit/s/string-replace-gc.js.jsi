var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2009 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// Regression test for the r1512 fix.
var foo = "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa";
try { if (Inst0 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1642,1645,29>",(foo)); Inst0++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1697,1700,30>",(foo)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1703,1706,30>",(foo)); Inst3++; } } catch(e) {}
foo = foo + foo;
try { if (Inst1 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1691,1694,30>",(foo)); Inst1++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1714,1717,31>",(foo)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1720,1723,31>",(foo)); Inst6++; } } catch(e) {}
foo = foo + foo;
try { if (Inst4 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1708,1711,31>",(foo)); Inst4++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1731,1734,32>",(foo)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1737,1740,32>",(foo)); Inst9++; } } catch(e) {}
foo = foo + foo;
try { if (Inst7 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1725,1728,32>",(foo)); Inst7++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1748,1751,33>",(foo)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1754,1757,33>",(foo)); Inst12++; } } catch(e) {}
foo = foo + foo;
try { if (Inst10 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1742,1745,33>",(foo)); Inst10++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1765,1768,34>",(foo)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1771,1774,34>",(foo)); Inst15++; } } catch(e) {}
foo = foo + foo;
try { if (Inst13 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1759,1762,34>",(foo)); Inst13++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1782,1785,35>",(foo)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1788,1791,35>",(foo)); Inst18++; } } catch(e) {}
foo = foo + foo;
try { if (Inst16 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1776,1779,35>",(foo)); Inst16++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1799,1802,36>",(foo)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1805,1808,36>",(foo)); Inst21++; } } catch(e) {}
foo = foo + foo;
try { if (Inst19 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1793,1796,36>",(foo)); Inst19++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1816,1819,37>",(foo)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1822,1825,37>",(foo)); Inst24++; } } catch(e) {}
foo = foo + foo;
try { if (Inst22 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1810,1813,37>",(foo)); Inst22++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1833,1836,38>",(foo)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1839,1842,38>",(foo)); Inst27++; } } catch(e) {}
foo = foo + foo;
try { if (Inst25 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1827,1830,38>",(foo)); Inst25++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1850,1853,39>",(foo)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1856,1859,39>",(foo)); Inst30++; } } catch(e) {}
foo = foo + foo;
try { if (Inst28 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1844,1847,39>",(foo)); Inst28++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1867,1870,40>",(foo)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1873,1876,40>",(foo)); Inst33++; } } catch(e) {}
foo = foo + foo;
try { if (Inst31 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1861,1864,40>",(foo)); Inst31++; } } catch(e) {}
try { if (Inst35 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1884,1887,41>",(foo)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1890,1893,41>",(foo)); Inst36++; } } catch(e) {}
foo = foo + foo;
try { if (Inst34 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1878,1881,41>",(foo)); Inst34++; } } catch(e) {}
try { if (Inst38 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1901,1904,42>",(foo)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1907,1910,42>",(foo)); Inst39++; } } catch(e) {}
foo = foo + foo;
try { if (Inst37 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1895,1898,42>",(foo)); Inst37++; } } catch(e) {}
try { if (Inst41 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1918,1921,43>",(foo)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1924,1927,43>",(foo)); Inst42++; } } catch(e) {}
foo = foo + foo;
try { if (Inst40 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1912,1915,43>",(foo)); Inst40++; } } catch(e) {}
try { if (Inst44 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1935,1938,44>",(foo)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1941,1944,44>",(foo)); Inst45++; } } catch(e) {}
foo = foo + foo;
try { if (Inst43 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1929,1932,44>",(foo)); Inst43++; } } catch(e) {}
try { if (Inst46 <= 1000 && typeof (foo.replace) != "undefined") {_RecordType("<1946,1957,45>",(foo.replace)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1946,1949,45>",(foo)); Inst47++; } } catch(e) {}
foo.replace(/[b]/, "c"); // Flatten foo.

var moving_string = "b" + "c";
try { if (Inst48 <= 1000 && typeof (moving_string) != "undefined") {_RecordType("<1992,2005,47>",(moving_string)); Inst48++; } } catch(e) {}
try { if (Inst50 <= 1000 && typeof (foo.replace) != "undefined") {_RecordType("<2029,2040,48>",(foo.replace)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (foo) != "undefined") {_RecordType("<2029,2032,48>",(foo)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (moving_string) != "undefined") {_RecordType("<2049,2062,48>",(moving_string)); Inst52++; } } catch(e) {}
var bar = foo.replace(/[a]/g, moving_string);
try { if (Inst49 <= 1000 && typeof (bar) != "undefined") {_RecordType("<2023,2026,48>",(bar)); Inst49++; } } catch(e) {}
try { if (Inst53 <= 1000 && typeof (print) != "undefined") {_RecordType("<2065,2070,49>",(print)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (bar.length) != "undefined") {_RecordType("<2071,2081,49>",(bar.length)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (bar) != "undefined") {_RecordType("<2071,2074,49>",(bar)); Inst55++; } } catch(e) {}
print(bar.length);

