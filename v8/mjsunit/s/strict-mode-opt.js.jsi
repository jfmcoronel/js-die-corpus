var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2011 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// Flags: --allow-natives-syntax
var global = 0;
try { if (Inst0 <= 1000 && typeof (global) != "undefined") {_RecordType("<1634,1640,28>",(global)); Inst0++; } } catch(e) {}
var MAX = 5; // Attempt to inline strcit in non-strict.
try { if (Inst1 <= 1000 && typeof (MAX) != "undefined") {_RecordType("<1650,1653,29>",(MAX)); Inst1++; } } catch(e) {}

try { if (Inst2 <= 1000 && typeof (strictToBeInlined) != "undefined") {_RecordType("<1712,1729,31>",(strictToBeInlined)); Inst2++; } } catch(e) {}
function strictToBeInlined(n) {
try { if (Inst3 <= 1000 && typeof (n) != "undefined") {_RecordType("<1730,1731,31>",(n)); Inst3++; } } catch(e) {}
  "use strict";

  global = "strict";
try { if (Inst4 <= 1000 && typeof (global) != "undefined") {_RecordType("<1754,1760,34>",(global)); Inst4++; } } catch(e) {}

try { if (Inst5 <= 1000 && typeof (n) != "undefined") {_RecordType("<1780,1781,36>",(n)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (MAX) != "undefined") {_RecordType("<1785,1788,36>",(MAX)); Inst6++; } } catch(e) {}
  if (n == MAX) {
    undefined_variable_strict = "value";
try { if (Inst7 <= 1000 && typeof (undefined_variable_strict) != "undefined") {_RecordType("<1796,1821,37>",(undefined_variable_strict)); Inst7++; } } catch(e) {}
  }
}

try { if (Inst8 <= 1000 && typeof (nonstrictCallStrict) != "undefined") {_RecordType("<1849,1868,41>",(nonstrictCallStrict)); Inst8++; } } catch(e) {}
function nonstrictCallStrict(n) {
try { if (Inst9 <= 1000 && typeof (n) != "undefined") {_RecordType("<1869,1870,41>",(n)); Inst9++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (strictToBeInlined) != "undefined") {_RecordType("<1876,1893,42>",(strictToBeInlined)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (n) != "undefined") {_RecordType("<1894,1895,42>",(n)); Inst11++; } } catch(e) {}
  strictToBeInlined(n);
}

try { if (Inst12 <= 1000 && typeof (testInlineStrictInNonStrict) != "undefined") {_RecordType("<1911,1938,45>",(testInlineStrictInNonStrict)); Inst12++; } } catch(e) {}
(function testInlineStrictInNonStrict() {
  for (var i = 0; i <= MAX; i++) {
try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<1954,1955,46>",(i)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<1961,1962,46>",(i)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (MAX) != "undefined") {_RecordType("<1966,1969,46>",(MAX)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<1971,1972,46>",(i)); Inst16++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (e) != "undefined") {_RecordType("<2031,2032,49>",(e)); Inst19++; } } catch(e) {}
    try {
try { if (Inst17 <= 1000 && typeof (nonstrictCallStrict) != "undefined") {_RecordType("<1994,2013,48>",(nonstrictCallStrict)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (i) != "undefined") {_RecordType("<2014,2015,48>",(i)); Inst18++; } } catch(e) {}
      nonstrictCallStrict(i);
    } catch (e) {
try { if (Inst20 <= 1000 && typeof (e) != "undefined") {_RecordType("<2042,2043,50>",(e)); Inst20++; } } catch(e) {}
      e;
try { if (Inst21 <= 1000 && typeof (ReferenceError) != "undefined") {_RecordType("<2051,2065,51>",(ReferenceError)); Inst21++; } } catch(e) {}
      ReferenceError;
try { if (Inst22 <= 1000 && typeof (MAX) != "undefined") {_RecordType("<2073,2076,52>",(MAX)); Inst22++; } } catch(e) {}
      MAX;
try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<2084,2085,53>",(i)); Inst23++; } } catch(e) {}
      i;
      return;
    }
  }

try { if (Inst24 <= 1000 && typeof (fail) != "undefined") {_RecordType("<2114,2118,58>",(fail)); Inst24++; } } catch(e) {}
  fail("ReferenceError after MAX iterations", "no exception");
})(); // Attempt to inline non-strict in strict.


try { if (Inst25 <= 1000 && typeof (nonstrictToBeInlined) != "undefined") {_RecordType("<2235,2255,62>",(nonstrictToBeInlined)); Inst25++; } } catch(e) {}
function nonstrictToBeInlined(n) {
try { if (Inst26 <= 1000 && typeof (n) != "undefined") {_RecordType("<2256,2257,62>",(n)); Inst26++; } } catch(e) {}
  global = "nonstrict";
try { if (Inst27 <= 1000 && typeof (global) != "undefined") {_RecordType("<2263,2269,63>",(global)); Inst27++; } } catch(e) {}

try { if (Inst28 <= 1000 && typeof (n) != "undefined") {_RecordType("<2292,2293,65>",(n)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (MAX) != "undefined") {_RecordType("<2297,2300,65>",(MAX)); Inst29++; } } catch(e) {}
  if (n == MAX) {
    undefined_variable_nonstrict = "The nonstrict value";
try { if (Inst30 <= 1000 && typeof (undefined_variable_nonstrict) != "undefined") {_RecordType("<2308,2336,66>",(undefined_variable_nonstrict)); Inst30++; } } catch(e) {}
  }
}

try { if (Inst31 <= 1000 && typeof (strictCallNonStrict) != "undefined") {_RecordType("<2378,2397,70>",(strictCallNonStrict)); Inst31++; } } catch(e) {}
function strictCallNonStrict(n) {
try { if (Inst32 <= 1000 && typeof (n) != "undefined") {_RecordType("<2398,2399,70>",(n)); Inst32++; } } catch(e) {}
  "use strict";

try { if (Inst33 <= 1000 && typeof (nonstrictToBeInlined) != "undefined") {_RecordType("<2422,2442,73>",(nonstrictToBeInlined)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (n) != "undefined") {_RecordType("<2443,2444,73>",(n)); Inst34++; } } catch(e) {}
  nonstrictToBeInlined(n);
}

try { if (Inst35 <= 1000 && typeof (testInlineNonStrictInStrict) != "undefined") {_RecordType("<2460,2487,76>",(testInlineNonStrictInStrict)); Inst35++; } } catch(e) {}
(function testInlineNonStrictInStrict() {
  for (var i = 0; i <= MAX; i++) {
try { if (Inst36 <= 1000 && typeof (i) != "undefined") {_RecordType("<2503,2504,77>",(i)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (i) != "undefined") {_RecordType("<2510,2511,77>",(i)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (MAX) != "undefined") {_RecordType("<2515,2518,77>",(MAX)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (i) != "undefined") {_RecordType("<2520,2521,77>",(i)); Inst39++; } } catch(e) {}
try { if (Inst42 <= 1000 && typeof (e) != "undefined") {_RecordType("<2580,2581,80>",(e)); Inst42++; } } catch(e) {}
    try {
try { if (Inst40 <= 1000 && typeof (strictCallNonStrict) != "undefined") {_RecordType("<2543,2562,79>",(strictCallNonStrict)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (i) != "undefined") {_RecordType("<2563,2564,79>",(i)); Inst41++; } } catch(e) {}
      strictCallNonStrict(i);
    } catch (e) {
try { if (Inst43 <= 1000 && typeof (fail) != "undefined") {_RecordType("<2591,2595,81>",(fail)); Inst43++; } } catch(e) {}
      fail("no exception", "exception");
    }
  }

  "The nonstrict value";
try { if (Inst44 <= 1000 && typeof (undefined_variable_nonstrict) != "undefined") {_RecordType("<2664,2692,86>",(undefined_variable_nonstrict)); Inst44++; } } catch(e) {}
  undefined_variable_nonstrict;
})(); // Optimize strict function.


try { if (Inst45 <= 1000 && typeof (strictAssignToUndefined) != "undefined") {_RecordType("<2740,2763,90>",(strictAssignToUndefined)); Inst45++; } } catch(e) {}
function strictAssignToUndefined(n) {
try { if (Inst46 <= 1000 && typeof (n) != "undefined") {_RecordType("<2764,2765,90>",(n)); Inst46++; } } catch(e) {}
  "use strict";

  global = "strict";
try { if (Inst47 <= 1000 && typeof (global) != "undefined") {_RecordType("<2788,2794,93>",(global)); Inst47++; } } catch(e) {}

try { if (Inst48 <= 1000 && typeof (n) != "undefined") {_RecordType("<2814,2815,95>",(n)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (MAX) != "undefined") {_RecordType("<2819,2822,95>",(MAX)); Inst49++; } } catch(e) {}
  if (n == MAX) {
    undefined_variable_strict_2 = "value";
try { if (Inst50 <= 1000 && typeof (undefined_variable_strict_2) != "undefined") {_RecordType("<2830,2857,96>",(undefined_variable_strict_2)); Inst50++; } } catch(e) {}
  }
}

try { if (Inst51 <= 1000 && typeof (testOptimizeStrictAssignToUndefined) != "undefined") {_RecordType("<2886,2921,100>",(testOptimizeStrictAssignToUndefined)); Inst51++; } } catch(e) {}
(function testOptimizeStrictAssignToUndefined() {
  for (var i = 0; i <= MAX; i++) {
try { if (Inst52 <= 1000 && typeof (i) != "undefined") {_RecordType("<2937,2938,101>",(i)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (i) != "undefined") {_RecordType("<2944,2945,101>",(i)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (MAX) != "undefined") {_RecordType("<2949,2952,101>",(MAX)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (i) != "undefined") {_RecordType("<2954,2955,101>",(i)); Inst55++; } } catch(e) {}
try { if (Inst58 <= 1000 && typeof (e) != "undefined") {_RecordType("<3018,3019,104>",(e)); Inst58++; } } catch(e) {}
    try {
try { if (Inst56 <= 1000 && typeof (strictAssignToUndefined) != "undefined") {_RecordType("<2977,3000,103>",(strictAssignToUndefined)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (i) != "undefined") {_RecordType("<3001,3002,103>",(i)); Inst57++; } } catch(e) {}
      strictAssignToUndefined(i);
    } catch (e) {
try { if (Inst59 <= 1000 && typeof (e) != "undefined") {_RecordType("<3029,3030,105>",(e)); Inst59++; } } catch(e) {}
      e;
try { if (Inst60 <= 1000 && typeof (ReferenceError) != "undefined") {_RecordType("<3038,3052,106>",(ReferenceError)); Inst60++; } } catch(e) {}
      ReferenceError;
try { if (Inst61 <= 1000 && typeof (MAX) != "undefined") {_RecordType("<3060,3063,107>",(MAX)); Inst61++; } } catch(e) {}
      MAX;
try { if (Inst62 <= 1000 && typeof (i) != "undefined") {_RecordType("<3071,3072,108>",(i)); Inst62++; } } catch(e) {}
      i;
      return;
    }
  }

try { if (Inst63 <= 1000 && typeof (fail) != "undefined") {_RecordType("<3101,3105,113>",(fail)); Inst63++; } } catch(e) {}
  fail("ReferenceError after MAX iterations", "no exception");
})();

