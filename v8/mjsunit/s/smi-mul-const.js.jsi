var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2014 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// Flags: --allow-natives-syntax --opt --noalways-opt
try { if (Inst0 <= 1000 && typeof (check) != "undefined") {_RecordType("<1660,1665,28>",(check)); Inst0++; } } catch(e) {}
function check(func, input, expected) {
try { if (Inst1 <= 1000 && typeof (func) != "undefined") {_RecordType("<1666,1670,28>",(func)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (input) != "undefined") {_RecordType("<1672,1677,28>",(input)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (expected) != "undefined") {_RecordType("<1679,1687,28>",(expected)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (func) != "undefined") {_RecordType("<1693,1697,29>",(func)); Inst4++; } } catch(e) {}
  func(-1);
try { if (Inst5 <= 1000 && typeof (func) != "undefined") {_RecordType("<1705,1709,30>",(func)); Inst5++; } } catch(e) {}
  func(-1);
try { if (Inst6 <= 1000 && typeof (expected) != "undefined") {_RecordType("<1717,1725,31>",(expected)); Inst6++; } } catch(e) {}
  expected;
try { if (Inst7 <= 1000 && typeof (func) != "undefined") {_RecordType("<1729,1733,32>",(func)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (input) != "undefined") {_RecordType("<1734,1739,32>",(input)); Inst8++; } } catch(e) {}
  func(input);
try { if (Inst9 <= 1000 && typeof (func) != "undefined") {_RecordType("<1744,1748,33>",(func)); Inst9++; } } catch(e) {}
  func;
}

try { if (Inst10 <= 1000 && typeof (mul_by_neg_1) != "undefined") {_RecordType("<1762,1774,36>",(mul_by_neg_1)); Inst10++; } } catch(e) {}
function mul_by_neg_1(a) {
try { if (Inst11 <= 1000 && typeof (a) != "undefined") {_RecordType("<1775,1776,36>",(a)); Inst11++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (a) != "undefined") {_RecordType("<1789,1790,37>",(a)); Inst12++; } } catch(e) {}
  return a * -1;
}

try { if (Inst13 <= 1000 && typeof (mul_by_0) != "undefined") {_RecordType("<1809,1817,40>",(mul_by_0)); Inst13++; } } catch(e) {}
function mul_by_0(a) {
try { if (Inst14 <= 1000 && typeof (a) != "undefined") {_RecordType("<1818,1819,40>",(a)); Inst14++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (a) != "undefined") {_RecordType("<1832,1833,41>",(a)); Inst15++; } } catch(e) {}
  return a * 0;
}

try { if (Inst16 <= 1000 && typeof (mul_by_1) != "undefined") {_RecordType("<1851,1859,44>",(mul_by_1)); Inst16++; } } catch(e) {}
function mul_by_1(a) {
try { if (Inst17 <= 1000 && typeof (a) != "undefined") {_RecordType("<1860,1861,44>",(a)); Inst17++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (a) != "undefined") {_RecordType("<1874,1875,45>",(a)); Inst18++; } } catch(e) {}
  return a * 1;
}

try { if (Inst19 <= 1000 && typeof (mul_by_2) != "undefined") {_RecordType("<1893,1901,48>",(mul_by_2)); Inst19++; } } catch(e) {}
function mul_by_2(a) {
try { if (Inst20 <= 1000 && typeof (a) != "undefined") {_RecordType("<1902,1903,48>",(a)); Inst20++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (a) != "undefined") {_RecordType("<1916,1917,49>",(a)); Inst21++; } } catch(e) {}
  return a * 2;
}

try { if (Inst22 <= 1000 && typeof (check) != "undefined") {_RecordType("<1926,1931,52>",(check)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (mul_by_neg_1) != "undefined") {_RecordType("<1932,1944,52>",(mul_by_neg_1)); Inst23++; } } catch(e) {}
check(mul_by_neg_1, 2, -2);
try { if (Inst24 <= 1000 && typeof (check) != "undefined") {_RecordType("<1954,1959,53>",(check)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (mul_by_0) != "undefined") {_RecordType("<1960,1968,53>",(mul_by_0)); Inst25++; } } catch(e) {}
check(mul_by_0, 2, 0);
try { if (Inst26 <= 1000 && typeof (check) != "undefined") {_RecordType("<1977,1982,54>",(check)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (mul_by_1) != "undefined") {_RecordType("<1983,1991,54>",(mul_by_1)); Inst27++; } } catch(e) {}
check(mul_by_1, 2, 2);
try { if (Inst28 <= 1000 && typeof (check) != "undefined") {_RecordType("<2000,2005,55>",(check)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (mul_by_2) != "undefined") {_RecordType("<2006,2014,55>",(mul_by_2)); Inst29++; } } catch(e) {}
check(mul_by_2, 2, 4);

try { if (Inst30 <= 1000 && typeof (limit_range) != "undefined") {_RecordType("<2033,2044,57>",(limit_range)); Inst30++; } } catch(e) {}
function limit_range(a) {
try { if (Inst31 <= 1000 && typeof (a) != "undefined") {_RecordType("<2045,2046,57>",(a)); Inst31++; } } catch(e) {}
  // Limit the range of 'a' to enable no-overflow optimizations.
try { if (Inst32 <= 1000 && typeof (Math.max) != "undefined") {_RecordType("<2124,2132,59>",(Math.max)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (Math) != "undefined") {_RecordType("<2124,2128,59>",(Math)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (Math.min) != "undefined") {_RecordType("<2133,2141,59>",(Math.min)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (Math) != "undefined") {_RecordType("<2133,2137,59>",(Math)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (a) != "undefined") {_RecordType("<2142,2143,59>",(a)); Inst36++; } } catch(e) {}
  return Math.max(Math.min(a | 0, 10), -10);
}

try { if (Inst37 <= 1000 && typeof (mul_by_neg_127) != "undefined") {_RecordType("<2172,2186,62>",(mul_by_neg_127)); Inst37++; } } catch(e) {}
function mul_by_neg_127(a) {
try { if (Inst38 <= 1000 && typeof (a) != "undefined") {_RecordType("<2187,2188,62>",(a)); Inst38++; } } catch(e) {}
try { if (Inst39 <= 1000 && typeof (limit_range) != "undefined") {_RecordType("<2201,2212,63>",(limit_range)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (a) != "undefined") {_RecordType("<2213,2214,63>",(a)); Inst40++; } } catch(e) {}
  return limit_range(a) * -127;
}

try { if (Inst41 <= 1000 && typeof (mul_by_neg_128) != "undefined") {_RecordType("<2236,2250,66>",(mul_by_neg_128)); Inst41++; } } catch(e) {}
function mul_by_neg_128(a) {
try { if (Inst42 <= 1000 && typeof (a) != "undefined") {_RecordType("<2251,2252,66>",(a)); Inst42++; } } catch(e) {}
try { if (Inst43 <= 1000 && typeof (limit_range) != "undefined") {_RecordType("<2265,2276,67>",(limit_range)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (a) != "undefined") {_RecordType("<2277,2278,67>",(a)); Inst44++; } } catch(e) {}
  return limit_range(a) * -128;
}

try { if (Inst45 <= 1000 && typeof (mul_by_neg_129) != "undefined") {_RecordType("<2300,2314,70>",(mul_by_neg_129)); Inst45++; } } catch(e) {}
function mul_by_neg_129(a) {
try { if (Inst46 <= 1000 && typeof (a) != "undefined") {_RecordType("<2315,2316,70>",(a)); Inst46++; } } catch(e) {}
try { if (Inst47 <= 1000 && typeof (limit_range) != "undefined") {_RecordType("<2329,2340,71>",(limit_range)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (a) != "undefined") {_RecordType("<2341,2342,71>",(a)); Inst48++; } } catch(e) {}
  return limit_range(a) * -129;
}

try { if (Inst49 <= 1000 && typeof (mul_by_1023) != "undefined") {_RecordType("<2364,2375,74>",(mul_by_1023)); Inst49++; } } catch(e) {}
function mul_by_1023(a) {
try { if (Inst50 <= 1000 && typeof (a) != "undefined") {_RecordType("<2376,2377,74>",(a)); Inst50++; } } catch(e) {}
try { if (Inst51 <= 1000 && typeof (limit_range) != "undefined") {_RecordType("<2390,2401,75>",(limit_range)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (a) != "undefined") {_RecordType("<2402,2403,75>",(a)); Inst52++; } } catch(e) {}
  return limit_range(a) * 1023;
}

try { if (Inst53 <= 1000 && typeof (mul_by_1024) != "undefined") {_RecordType("<2425,2436,78>",(mul_by_1024)); Inst53++; } } catch(e) {}
function mul_by_1024(a) {
try { if (Inst54 <= 1000 && typeof (a) != "undefined") {_RecordType("<2437,2438,78>",(a)); Inst54++; } } catch(e) {}
try { if (Inst55 <= 1000 && typeof (limit_range) != "undefined") {_RecordType("<2451,2462,79>",(limit_range)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (a) != "undefined") {_RecordType("<2463,2464,79>",(a)); Inst56++; } } catch(e) {}
  return limit_range(a) * 1024;
}

try { if (Inst57 <= 1000 && typeof (mul_by_1025) != "undefined") {_RecordType("<2486,2497,82>",(mul_by_1025)); Inst57++; } } catch(e) {}
function mul_by_1025(a) {
try { if (Inst58 <= 1000 && typeof (a) != "undefined") {_RecordType("<2498,2499,82>",(a)); Inst58++; } } catch(e) {}
try { if (Inst59 <= 1000 && typeof (limit_range) != "undefined") {_RecordType("<2512,2523,83>",(limit_range)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (a) != "undefined") {_RecordType("<2524,2525,83>",(a)); Inst60++; } } catch(e) {}
  return limit_range(a) * 1025;
}

try { if (Inst61 <= 1000 && typeof (check) != "undefined") {_RecordType("<2538,2543,86>",(check)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (mul_by_neg_127) != "undefined") {_RecordType("<2544,2558,86>",(mul_by_neg_127)); Inst62++; } } catch(e) {}
check(mul_by_neg_127, 2, -254);
try { if (Inst63 <= 1000 && typeof (check) != "undefined") {_RecordType("<2570,2575,87>",(check)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (mul_by_neg_128) != "undefined") {_RecordType("<2576,2590,87>",(mul_by_neg_128)); Inst64++; } } catch(e) {}
check(mul_by_neg_128, 2, -256);
try { if (Inst65 <= 1000 && typeof (check) != "undefined") {_RecordType("<2602,2607,88>",(check)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (mul_by_neg_129) != "undefined") {_RecordType("<2608,2622,88>",(mul_by_neg_129)); Inst66++; } } catch(e) {}
check(mul_by_neg_129, 2, -258);
try { if (Inst67 <= 1000 && typeof (check) != "undefined") {_RecordType("<2634,2639,89>",(check)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (mul_by_1023) != "undefined") {_RecordType("<2640,2651,89>",(mul_by_1023)); Inst68++; } } catch(e) {}
check(mul_by_1023, 2, 2046);
try { if (Inst69 <= 1000 && typeof (check) != "undefined") {_RecordType("<2663,2668,90>",(check)); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (mul_by_1024) != "undefined") {_RecordType("<2669,2680,90>",(mul_by_1024)); Inst70++; } } catch(e) {}
check(mul_by_1024, 2, 2048);
try { if (Inst71 <= 1000 && typeof (check) != "undefined") {_RecordType("<2692,2697,91>",(check)); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (mul_by_1025) != "undefined") {_RecordType("<2698,2709,91>",(mul_by_1025)); Inst72++; } } catch(e) {}
check(mul_by_1025, 2, 2050); // Deopt on minus zero.

-0;
try { if (Inst73 <= 1000 && typeof (mul_by_neg_128) != "undefined") {_RecordType("<2750,2764,94>",(mul_by_neg_128)); Inst73++; } } catch(e) {}
mul_by_neg_128(0);
try { if (Inst74 <= 1000 && typeof (mul_by_neg_128) != "undefined") {_RecordType("<2769,2783,95>",(mul_by_neg_128)); Inst74++; } } catch(e) {}
mul_by_neg_128();
-0;
try { if (Inst75 <= 1000 && typeof (mul_by_2) != "undefined") {_RecordType("<2791,2799,97>",(mul_by_2)); Inst75++; } } catch(e) {}
mul_by_2(-0);
try { if (Inst76 <= 1000 && typeof (mul_by_2) != "undefined") {_RecordType("<2805,2813,98>",(mul_by_2)); Inst76++; } } catch(e) {}
mul_by_2();
// Deopt on overflow.
// 2^30 is a smi boundary on arm and ia32.
var two_30 = 1 << 30; // 2^31 is a smi boundary on arm64 and x64.
try { if (Inst77 <= 1000 && typeof (two_30) != "undefined") {_RecordType("<2886,2892,101>",(two_30)); Inst77++; } } catch(e) {}

try { if (Inst79 <= 1000 && typeof (two_30) != "undefined") {_RecordType("<2966,2972,103>",(two_30)); Inst79++; } } catch(e) {}
var two_31 = 2 * two_30; // TODO(rmcilroy): replace after r16361 with:  if (%IsValidSmi(two_31)) {
try { if (Inst78 <= 1000 && typeof (two_31) != "undefined") {_RecordType("<2953,2959,103>",(two_31)); Inst78++; } } catch(e) {}

if (true) {
try { if (Inst80 <= 1000 && typeof (two_31) != "undefined") {_RecordType("<3063,3069,106>",(two_31)); Inst80++; } } catch(e) {}
  two_31;
try { if (Inst81 <= 1000 && typeof (mul_by_neg_1) != "undefined") {_RecordType("<3073,3085,107>",(mul_by_neg_1)); Inst81++; } } catch(e) {}try { if (Inst82 <= 1000 && typeof (two_31) != "undefined") {_RecordType("<3087,3093,107>",(two_31)); Inst82++; } } catch(e) {}
  mul_by_neg_1(-two_31);
try { if (Inst83 <= 1000 && typeof (mul_by_neg_1) != "undefined") {_RecordType("<3098,3110,108>",(mul_by_neg_1)); Inst83++; } } catch(e) {}
  mul_by_neg_1();
} else {
try { if (Inst84 <= 1000 && typeof (two_30) != "undefined") {_RecordType("<3125,3131,110>",(two_30)); Inst84++; } } catch(e) {}
  two_30;
try { if (Inst85 <= 1000 && typeof (mul_by_neg_1) != "undefined") {_RecordType("<3135,3147,111>",(mul_by_neg_1)); Inst85++; } } catch(e) {}try { if (Inst86 <= 1000 && typeof (two_30) != "undefined") {_RecordType("<3149,3155,111>",(two_30)); Inst86++; } } catch(e) {}
  mul_by_neg_1(-two_30);
try { if (Inst87 <= 1000 && typeof (mul_by_neg_1) != "undefined") {_RecordType("<3160,3172,112>",(mul_by_neg_1)); Inst87++; } } catch(e) {}
  mul_by_neg_1();
}

