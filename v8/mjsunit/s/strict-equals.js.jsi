var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2008 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
var n = null;
try { if (Inst0 <= 1000 && typeof (n) != "undefined") {_RecordType("<1601,1602,27>",(n)); Inst0++; } } catch(e) {}
var u = void 0;
try { if (Inst1 <= 1000 && typeof (u) != "undefined") {_RecordType("<1615,1616,28>",(u)); Inst1++; } } catch(e) {}
null === null;
try { if (Inst2 <= 1000 && typeof (n) != "undefined") {_RecordType("<1651,1652,30>",(n)); Inst2++; } } catch(e) {}
null === n;
try { if (Inst3 <= 1000 && typeof (n) != "undefined") {_RecordType("<1654,1655,31>",(n)); Inst3++; } } catch(e) {}
n === null;
try { if (Inst4 <= 1000 && typeof (n) != "undefined") {_RecordType("<1666,1667,32>",(n)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (n) != "undefined") {_RecordType("<1672,1673,32>",(n)); Inst5++; } } catch(e) {}
n === n;
null === void 0;
void 0 === null;
try { if (Inst6 <= 1000 && typeof (u) != "undefined") {_RecordType("<1709,1710,35>",(u)); Inst6++; } } catch(e) {}
u === null;
try { if (Inst7 <= 1000 && typeof (u) != "undefined") {_RecordType("<1730,1731,36>",(u)); Inst7++; } } catch(e) {}
null === u;
try { if (Inst8 <= 1000 && typeof (n) != "undefined") {_RecordType("<1733,1734,37>",(n)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (u) != "undefined") {_RecordType("<1739,1740,37>",(u)); Inst9++; } } catch(e) {}
n === u;
try { if (Inst10 <= 1000 && typeof (u) != "undefined") {_RecordType("<1742,1743,38>",(u)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (n) != "undefined") {_RecordType("<1748,1749,38>",(n)); Inst11++; } } catch(e) {}
u === n;
void 0 === void 0;
try { if (Inst12 <= 1000 && typeof (u) != "undefined") {_RecordType("<1770,1771,40>",(u)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (u) != "undefined") {_RecordType("<1776,1777,40>",(u)); Inst13++; } } catch(e) {}
u === u;
try { if (Inst14 <= 1000 && typeof (u) != "undefined") {_RecordType("<1779,1780,41>",(u)); Inst14++; } } catch(e) {}
u === void 0;
try { if (Inst15 <= 1000 && typeof (u) != "undefined") {_RecordType("<1804,1805,42>",(u)); Inst15++; } } catch(e) {}
void 0 === u;
'foo' === 'foo';
'bar' === 'foo';
try { if (Inst16 <= 1000 && typeof (String) != "undefined") {_RecordType("<1855,1861,45>",(String)); Inst16++; } } catch(e) {}
'foo' === new String('foo');
try { if (Inst17 <= 1000 && typeof (String) != "undefined") {_RecordType("<1874,1880,46>",(String)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (String) != "undefined") {_RecordType("<1896,1902,46>",(String)); Inst18++; } } catch(e) {}
new String('foo') === new String('foo');
try { if (Inst20 <= 1000 && typeof (String) != "undefined") {_RecordType("<1923,1929,47>",(String)); Inst20++; } } catch(e) {}
var s = new String('foo');
try { if (Inst19 <= 1000 && typeof (s) != "undefined") {_RecordType("<1915,1916,47>",(s)); Inst19++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (s) != "undefined") {_RecordType("<1938,1939,48>",(s)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (s) != "undefined") {_RecordType("<1944,1945,48>",(s)); Inst22++; } } catch(e) {}
s === s;
try { if (Inst23 <= 1000 && typeof (s) != "undefined") {_RecordType("<1947,1948,49>",(s)); Inst23++; } } catch(e) {}
s === null;
try { if (Inst24 <= 1000 && typeof (s) != "undefined") {_RecordType("<1959,1960,50>",(s)); Inst24++; } } catch(e) {}
s === void 0;
'foo' === null;
'foo' === 7;
'foo' === true;
'foo' === void 0;
'foo' === {};
({}) === {};
var x = {};
try { if (Inst25 <= 1000 && typeof (x) != "undefined") {_RecordType("<2067,2068,57>",(x)); Inst25++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (x) != "undefined") {_RecordType("<2075,2076,58>",(x)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (x) != "undefined") {_RecordType("<2081,2082,58>",(x)); Inst27++; } } catch(e) {}
x === x;
try { if (Inst28 <= 1000 && typeof (x) != "undefined") {_RecordType("<2084,2085,59>",(x)); Inst28++; } } catch(e) {}
x === null;
try { if (Inst29 <= 1000 && typeof (x) != "undefined") {_RecordType("<2096,2097,60>",(x)); Inst29++; } } catch(e) {}
x === 7;
try { if (Inst30 <= 1000 && typeof (x) != "undefined") {_RecordType("<2105,2106,61>",(x)); Inst30++; } } catch(e) {}
x === true;
try { if (Inst31 <= 1000 && typeof (x) != "undefined") {_RecordType("<2117,2118,62>",(x)); Inst31++; } } catch(e) {}
x === void 0;
try { if (Inst32 <= 1000 && typeof (x) != "undefined") {_RecordType("<2131,2132,63>",(x)); Inst32++; } } catch(e) {}
x === {};
true === true;
false === false;
false === true;
true === false;
try { if (Inst33 <= 1000 && typeof (Boolean) != "undefined") {_RecordType("<2218,2225,68>",(Boolean)); Inst33++; } } catch(e) {}
true === new Boolean(true);
try { if (Inst34 <= 1000 && typeof (Boolean) != "undefined") {_RecordType("<2246,2253,69>",(Boolean)); Inst34++; } } catch(e) {}
true === new Boolean(false);
try { if (Inst35 <= 1000 && typeof (Boolean) != "undefined") {_RecordType("<2276,2283,70>",(Boolean)); Inst35++; } } catch(e) {}
false === new Boolean(true);
try { if (Inst36 <= 1000 && typeof (Boolean) != "undefined") {_RecordType("<2305,2312,71>",(Boolean)); Inst36++; } } catch(e) {}
false === new Boolean(false);
true === 0;
true === 1;
0 === 0;
-0 === -0;
-0 === 0;
0 === -0;
try { if (Inst37 <= 1000 && typeof (Number) != "undefined") {_RecordType("<2395,2401,78>",(Number)); Inst37++; } } catch(e) {}
0 === new Number(0);
try { if (Inst38 <= 1000 && typeof (Number) != "undefined") {_RecordType("<2416,2422,79>",(Number)); Inst38++; } } catch(e) {}
1 === new Number(1);
4.2 === 4.2;
try { if (Inst39 <= 1000 && typeof (Number) != "undefined") {_RecordType("<2448,2454,81>",(Number)); Inst39++; } } catch(e) {}
4.2 === Number(4.2);

