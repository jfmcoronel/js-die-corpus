var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2011 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
try { if (Inst0 <= 1000 && typeof (L) != "undefined") {_RecordType("<1597,1598,27>",(L)); Inst0++; } } catch(e) {}
L: with ({
  x: 12
}) {
  12;
try { if (Inst1 <= 1000 && typeof (x) != "undefined") {_RecordType("<1629,1630,31>",(x)); Inst1++; } } catch(e) {}
  x;
try { if (Inst2 <= 1000 && typeof (L) != "undefined") {_RecordType("<1640,1641,32>",(L)); Inst2++; } } catch(e) {}
  break L;
  false;
}

do {
  with ({
    x: 15
  }) {
    15;
try { if (Inst3 <= 1000 && typeof (x) != "undefined") {_RecordType("<1699,1700,41>",(x)); Inst3++; } } catch(e) {}
    x;
    continue;
    false;
  }
} while (false);

var caught = false;
try { if (Inst4 <= 1000 && typeof (caught) != "undefined") {_RecordType("<1753,1759,47>",(caught)); Inst4++; } } catch(e) {}

try { if (Inst5 <= 1000 && typeof (e) != "undefined") {_RecordType("<1841,1842,56>",(e)); Inst5++; } } catch(e) {}
try {
  with ({
    x: 18
  }) {
    throw 25;
    false;
  }
} catch (e) {
  caught = true;
try { if (Inst6 <= 1000 && typeof (caught) != "undefined") {_RecordType("<1848,1854,57>",(caught)); Inst6++; } } catch(e) {}
  25;
try { if (Inst7 <= 1000 && typeof (e) != "undefined") {_RecordType("<1871,1872,59>",(e)); Inst7++; } } catch(e) {}
  e;
  with ({
    y: 19
  }) {
    19;
try { if (Inst8 <= 1000 && typeof (y) != "undefined") {_RecordType("<1913,1914,64>",(y)); Inst8++; } } catch(e) {}
    y;

try { if (Inst10 <= 1000 && typeof (e2) != "undefined") {_RecordType("<2068,2070,71>",(e2)); Inst10++; } } catch(e) {}
    try {
      // NOTE: This checks that the object containing x has been
      // removed from the context chain.
try { if (Inst9 <= 1000 && typeof (x) != "undefined") {_RecordType("<2039,2040,69>",(x)); Inst9++; } } catch(e) {}
      x;
      false;
    } catch (e2) {
try { if (Inst11 <= 1000 && typeof (e2) != "undefined") {_RecordType("<2080,2082,72>",(e2)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (ReferenceError) != "undefined") {_RecordType("<2094,2108,72>",(ReferenceError)); Inst12++; } } catch(e) {}
      e2 instanceof ReferenceError;
    }
  }
}

try { if (Inst13 <= 1000 && typeof (caught) != "undefined") {_RecordType("<2123,2129,77>",(caught)); Inst13++; } } catch(e) {}
caught;
// We want to test the context chain shape.  In each of the tests cases
// below, the outer with is to force a runtime lookup of the identifier 'x'
// to actually verify that the inner context has been discarded.  A static
// lookup of 'x' might accidentally succeed.
with ({
  x: 'outer'
}) {
try { if (Inst14 <= 1000 && typeof (label) != "undefined") {_RecordType("<2427,2432,85>",(label)); Inst14++; } } catch(e) {}
  label: {
    with ({
      x: 'inner'
    }) {
try { if (Inst15 <= 1000 && typeof (label) != "undefined") {_RecordType("<2486,2491,89>",(label)); Inst15++; } } catch(e) {}
      break label;
    }
  }

  'outer';
try { if (Inst16 <= 1000 && typeof (x) != "undefined") {_RecordType("<2517,2518,94>",(x)); Inst16++; } } catch(e) {}
  x;
}
with ({
  x: 'outer'
}) {
try { if (Inst17 <= 1000 && typeof (label) != "undefined") {_RecordType("<2550,2555,99>",(label)); Inst17++; } } catch(e) {}
  label: {
    with ({
      x: 'middle'
    }) {
      with ({
        x: 'inner'
      }) {
try { if (Inst18 <= 1000 && typeof (label) != "undefined") {_RecordType("<2656,2661,106>",(label)); Inst18++; } } catch(e) {}
        break label;
      }
    }
  }

  'outer';
try { if (Inst19 <= 1000 && typeof (x) != "undefined") {_RecordType("<2695,2696,112>",(x)); Inst19++; } } catch(e) {}
  x;
}
with ({
  x: 'outer'
}) {
  for (var i = 0; i < 10; ++i) {
try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<2737,2738,117>",(i)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<2744,2745,117>",(i)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<2754,2755,117>",(i)); Inst22++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<2790,2791,119>",(i)); Inst23++; } } catch(e) {}
    with ({
      x: 'inner' + i
    }) {
      continue;
    }
  }

  'outer';
try { if (Inst24 <= 1000 && typeof (x) != "undefined") {_RecordType("<2841,2842,126>",(x)); Inst24++; } } catch(e) {}
  x;
}
with ({
  x: 'outer'
}) {
try { if (Inst25 <= 1000 && typeof (label) != "undefined") {_RecordType("<2874,2879,131>",(label)); Inst25++; } } catch(e) {}
  label: for (var i = 0; i < 10; ++i) {
try { if (Inst26 <= 1000 && typeof (i) != "undefined") {_RecordType("<2890,2891,131>",(i)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (i) != "undefined") {_RecordType("<2897,2898,131>",(i)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (i) != "undefined") {_RecordType("<2907,2908,131>",(i)); Inst28++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (i) != "undefined") {_RecordType("<2944,2945,133>",(i)); Inst29++; } } catch(e) {}
    with ({
      x: 'middle' + i
    }) {
      for (var j = 0; j < 10; ++j) {
try { if (Inst30 <= 1000 && typeof (j) != "undefined") {_RecordType("<2970,2971,135>",(j)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (j) != "undefined") {_RecordType("<2977,2978,135>",(j)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (j) != "undefined") {_RecordType("<2987,2988,135>",(j)); Inst32++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (j) != "undefined") {_RecordType("<3031,3032,137>",(j)); Inst33++; } } catch(e) {}
        with ({
          x: 'inner' + j
        }) {
try { if (Inst34 <= 1000 && typeof (label) != "undefined") {_RecordType("<3065,3070,139>",(label)); Inst34++; } } catch(e) {}
          continue label;
        }
      }
    }
  }

  'outer';
try { if (Inst35 <= 1000 && typeof (x) != "undefined") {_RecordType("<3114,3115,146>",(x)); Inst35++; } } catch(e) {}
  x;
}
with ({
  x: 'outer'
}) {
try { if (Inst36 <= 1000 && typeof (e) != "undefined") {_RecordType("<3223,3224,157>",(e)); Inst36++; } } catch(e) {}
  try {
    with ({
      x: 'inner'
    }) {
      throw 0;
    }
  } catch (e) {
    'outer';
try { if (Inst37 <= 1000 && typeof (x) != "undefined") {_RecordType("<3245,3246,159>",(x)); Inst37++; } } catch(e) {}
    x;
  }
}
with ({
  x: 'outer'
}) {
try { if (Inst38 <= 1000 && typeof (e) != "undefined") {_RecordType("<3413,3414,175>",(e)); Inst38++; } } catch(e) {}
  try {
    with ({
      x: 'middle'
    }) {
      with ({
        x: 'inner'
      }) {
        throw 0;
      }
    }
  } catch (e) {
    'outer';
try { if (Inst39 <= 1000 && typeof (x) != "undefined") {_RecordType("<3435,3436,177>",(x)); Inst39++; } } catch(e) {}
    x;
  }
}

try { if (Inst41 <= 1000 && typeof (e) != "undefined") {_RecordType("<3621,3622,196>",(e)); Inst41++; } } catch(e) {}
try {
  with ({
    x: 'outer'
  }) {
    try {
      with ({
        x: 'inner'
      }) {
        throw 0;
      }
    } finally {
      'outer';
try { if (Inst40 <= 1000 && typeof (x) != "undefined") {_RecordType("<3599,3600,193>",(x)); Inst40++; } } catch(e) {}
      x;
    }
  }
} catch (e) {
try { if (Inst42 <= 1000 && typeof (e) != "undefined") {_RecordType("<3632,3633,197>",(e)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (MjsUnitAssertionError) != "undefined") {_RecordType("<3645,3666,197>",(MjsUnitAssertionError)); Inst43++; } } catch(e) {}
  if (e instanceof MjsUnitAssertionError) {
try { if (Inst44 <= 1000 && typeof (e) != "undefined") {_RecordType("<3680,3681,198>",(e)); Inst44++; } } catch(e) {}
    throw e;
  }
}

try { if (Inst46 <= 1000 && typeof (e) != "undefined") {_RecordType("<3929,3930,221>",(e)); Inst46++; } } catch(e) {}
try {
  with ({
    x: 'outer'
  }) {
    try {
      with ({
        x: 'middle'
      }) {
        with ({
          x: 'inner'
        }) {
          throw 0;
        }
      }
    } finally {
      'outer';
try { if (Inst45 <= 1000 && typeof (x) != "undefined") {_RecordType("<3907,3908,218>",(x)); Inst45++; } } catch(e) {}
      x;
    }
  }
} catch (e) {
try { if (Inst47 <= 1000 && typeof (e) != "undefined") {_RecordType("<3940,3941,222>",(e)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (MjsUnitAssertionError) != "undefined") {_RecordType("<3953,3974,222>",(MjsUnitAssertionError)); Inst48++; } } catch(e) {}
  if (e instanceof MjsUnitAssertionError) {
try { if (Inst49 <= 1000 && typeof (e) != "undefined") {_RecordType("<3988,3989,223>",(e)); Inst49++; } } catch(e) {}
    throw e;
  }
} // Verify that the context is correctly set in the stack frame after exiting
// from with.


try { if (Inst50 <= 1000 && typeof (f) != "undefined") {_RecordType("<4099,4100,229>",(f)); Inst50++; } } catch(e) {}
function f() {
  ;
}

with ({
  x: 'outer'
}) {
try { if (Inst51 <= 1000 && typeof (label) != "undefined") {_RecordType("<4140,4145,236>",(label)); Inst51++; } } catch(e) {}
  label: {
    with ({
      x: 'inner'
    }) {
try { if (Inst52 <= 1000 && typeof (label) != "undefined") {_RecordType("<4199,4204,240>",(label)); Inst52++; } } catch(e) {}
      break label;
    }
  }

try { if (Inst53 <= 1000 && typeof (f) != "undefined") {_RecordType("<4219,4220,244>",(f)); Inst53++; } } catch(e) {}
  f(); // The context could be restored from the stack after the call.

  'outer';
try { if (Inst54 <= 1000 && typeof (x) != "undefined") {_RecordType("<4302,4303,247>",(x)); Inst54++; } } catch(e) {}
  x;
}
with ({
  x: 'outer'
}) {
  for (var i = 0; i < 10; ++i) {
try { if (Inst55 <= 1000 && typeof (i) != "undefined") {_RecordType("<4344,4345,252>",(i)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (i) != "undefined") {_RecordType("<4351,4352,252>",(i)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (i) != "undefined") {_RecordType("<4361,4362,252>",(i)); Inst57++; } } catch(e) {}
try { if (Inst58 <= 1000 && typeof (i) != "undefined") {_RecordType("<4397,4398,254>",(i)); Inst58++; } } catch(e) {}
    with ({
      x: 'inner' + i
    }) {
      continue;
    }
  }

try { if (Inst59 <= 1000 && typeof (f) != "undefined") {_RecordType("<4437,4438,260>",(f)); Inst59++; } } catch(e) {}
  f();
  'outer';
try { if (Inst60 <= 1000 && typeof (x) != "undefined") {_RecordType("<4455,4456,262>",(x)); Inst60++; } } catch(e) {}
  x;
}
with ({
  x: 'outer'
}) {
try { if (Inst61 <= 1000 && typeof (e) != "undefined") {_RecordType("<4564,4565,273>",(e)); Inst61++; } } catch(e) {}
  try {
    with ({
      x: 'inner'
    }) {
      throw 0;
    }
  } catch (e) {
try { if (Inst62 <= 1000 && typeof (f) != "undefined") {_RecordType("<4573,4574,274>",(f)); Inst62++; } } catch(e) {}
    f();
    'outer';
try { if (Inst63 <= 1000 && typeof (x) != "undefined") {_RecordType("<4595,4596,276>",(x)); Inst63++; } } catch(e) {}
    x;
  }
}

try { if (Inst66 <= 1000 && typeof (e) != "undefined") {_RecordType("<4792,4793,296>",(e)); Inst66++; } } catch(e) {}
try {
  with ({
    x: 'outer'
  }) {
    try {
      with ({
        x: 'inner'
      }) {
        throw 0;
      }
    } finally {
try { if (Inst64 <= 1000 && typeof (f) != "undefined") {_RecordType("<4744,4745,291>",(f)); Inst64++; } } catch(e) {}
      f();
      'outer';
try { if (Inst65 <= 1000 && typeof (x) != "undefined") {_RecordType("<4770,4771,293>",(x)); Inst65++; } } catch(e) {}
      x;
    }
  }
} catch (e) {
try { if (Inst67 <= 1000 && typeof (e) != "undefined") {_RecordType("<4803,4804,297>",(e)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (MjsUnitAssertionError) != "undefined") {_RecordType("<4816,4837,297>",(MjsUnitAssertionError)); Inst68++; } } catch(e) {}
  if (e instanceof MjsUnitAssertionError) {
try { if (Inst69 <= 1000 && typeof (e) != "undefined") {_RecordType("<4851,4852,298>",(e)); Inst69++; } } catch(e) {}
    throw e;
  }
}

