var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2018 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax
try { if (Inst0 <= 1000 && typeof (f1) != "undefined") {_RecordType("<209,211,5>",(f1)); Inst0++; } } catch(e) {}
function f1() {
  const x = [,];
try { if (Inst1 <= 1000 && typeof (x) != "undefined") {_RecordType("<224,225,6>",(x)); Inst1++; } } catch(e) {}
  x[1] = 42;
try { if (Inst2 <= 1000 && typeof (x[1]) != "undefined") {_RecordType("<235,239,7>",(x[1])); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (x) != "undefined") {_RecordType("<235,236,7>",(x)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<249,258,8>",(undefined)); Inst4++; } } catch(e) {}
  [undefined, 42];
try { if (Inst5 <= 1000 && typeof (x) != "undefined") {_RecordType("<267,268,9>",(x)); Inst5++; } } catch(e) {}
  x;
}

try { if (Inst6 <= 1000 && typeof (f1) != "undefined") {_RecordType("<273,275,12>",(f1)); Inst6++; } } catch(e) {}
f1();
try { if (Inst7 <= 1000 && typeof (f1) != "undefined") {_RecordType("<279,281,13>",(f1)); Inst7++; } } catch(e) {}
f1();
try { if (Inst8 <= 1000 && typeof (f1) != "undefined") {_RecordType("<285,287,14>",(f1)); Inst8++; } } catch(e) {}
f1();
try { if (Inst9 <= 1000 && typeof (f1) != "undefined") {_RecordType("<291,293,15>",(f1)); Inst9++; } } catch(e) {}
f1();

try { if (Inst10 <= 1000 && typeof (f2) != "undefined") {_RecordType("<307,309,17>",(f2)); Inst10++; } } catch(e) {}
function f2() {
  const x = [0];
try { if (Inst11 <= 1000 && typeof (x) != "undefined") {_RecordType("<322,323,18>",(x)); Inst11++; } } catch(e) {}

  for (const y of [1, 2, 3, 4]) {
try { if (Inst12 <= 1000 && typeof (y) != "undefined") {_RecordType("<345,346,20>",(y)); Inst12++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (y) != "undefined") {_RecordType("<384,385,21>",(y)); Inst17++; } } catch(e) {}
    x[x.length] = y;
try { if (Inst13 <= 1000 && typeof (x[x.length]) != "undefined") {_RecordType("<370,381,21>",(x[x.length])); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (x) != "undefined") {_RecordType("<370,371,21>",(x)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (x.length) != "undefined") {_RecordType("<372,380,21>",(x.length)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (x) != "undefined") {_RecordType("<372,373,21>",(x)); Inst16++; } } catch(e) {}
  }

  [0, 1, 2, 3, 4];
try { if (Inst18 <= 1000 && typeof (x) != "undefined") {_RecordType("<413,414,25>",(x)); Inst18++; } } catch(e) {}
  x;
}

try { if (Inst19 <= 1000 && typeof (f2) != "undefined") {_RecordType("<419,421,28>",(f2)); Inst19++; } } catch(e) {}
f2();
try { if (Inst20 <= 1000 && typeof (f2) != "undefined") {_RecordType("<425,427,29>",(f2)); Inst20++; } } catch(e) {}
f2();
try { if (Inst21 <= 1000 && typeof (f2) != "undefined") {_RecordType("<431,433,30>",(f2)); Inst21++; } } catch(e) {}
f2();
try { if (Inst22 <= 1000 && typeof (f2) != "undefined") {_RecordType("<437,439,31>",(f2)); Inst22++; } } catch(e) {}
f2();

try { if (Inst23 <= 1000 && typeof (f3) != "undefined") {_RecordType("<453,455,33>",(f3)); Inst23++; } } catch(e) {}
function f3() {
  const x = [0];
try { if (Inst24 <= 1000 && typeof (x) != "undefined") {_RecordType("<468,469,34>",(x)); Inst24++; } } catch(e) {}

  for (const y of [1.1, {}]) {
try { if (Inst25 <= 1000 && typeof (y) != "undefined") {_RecordType("<491,492,36>",(y)); Inst25++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (y) != "undefined") {_RecordType("<527,528,37>",(y)); Inst30++; } } catch(e) {}
    x[x.length] = y;
try { if (Inst26 <= 1000 && typeof (x[x.length]) != "undefined") {_RecordType("<513,524,37>",(x[x.length])); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (x) != "undefined") {_RecordType("<513,514,37>",(x)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (x.length) != "undefined") {_RecordType("<515,523,37>",(x.length)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (x) != "undefined") {_RecordType("<515,516,37>",(x)); Inst29++; } } catch(e) {}
  }

  [0, 1.1, {}];
try { if (Inst31 <= 1000 && typeof (x) != "undefined") {_RecordType("<553,554,41>",(x)); Inst31++; } } catch(e) {}
  x;
}

try { if (Inst32 <= 1000 && typeof (f3) != "undefined") {_RecordType("<559,561,44>",(f3)); Inst32++; } } catch(e) {}
f3();
try { if (Inst33 <= 1000 && typeof (f3) != "undefined") {_RecordType("<565,567,45>",(f3)); Inst33++; } } catch(e) {}
f3();
try { if (Inst34 <= 1000 && typeof (f3) != "undefined") {_RecordType("<571,573,46>",(f3)); Inst34++; } } catch(e) {}
f3();
try { if (Inst35 <= 1000 && typeof (f3) != "undefined") {_RecordType("<577,579,47>",(f3)); Inst35++; } } catch(e) {}
f3();

try { if (Inst36 <= 1000 && typeof (f4) != "undefined") {_RecordType("<593,595,49>",(f4)); Inst36++; } } catch(e) {}
function f4(x) {
try { if (Inst37 <= 1000 && typeof (x) != "undefined") {_RecordType("<596,597,49>",(x)); Inst37++; } } catch(e) {}
try { if (Inst42 <= 1000 && typeof (x.length) != "undefined") {_RecordType("<617,625,50>",(x.length)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (x) != "undefined") {_RecordType("<617,618,50>",(x)); Inst43++; } } catch(e) {}
  x[x.length] = x.length;
try { if (Inst38 <= 1000 && typeof (x[x.length]) != "undefined") {_RecordType("<603,614,50>",(x[x.length])); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (x) != "undefined") {_RecordType("<603,604,50>",(x)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (x.length) != "undefined") {_RecordType("<605,613,50>",(x.length)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (x) != "undefined") {_RecordType("<605,606,50>",(x)); Inst41++; } } catch(e) {}
}

let x1 = [];
try { if (Inst44 <= 1000 && typeof (x1) != "undefined") {_RecordType("<634,636,53>",(x1)); Inst44++; } } catch(e) {}
try { if (Inst45 <= 1000 && typeof (f4) != "undefined") {_RecordType("<643,645,54>",(f4)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (x1) != "undefined") {_RecordType("<646,648,54>",(x1)); Inst46++; } } catch(e) {}
f4(x1);
[0];
try { if (Inst47 <= 1000 && typeof (x1) != "undefined") {_RecordType("<656,658,56>",(x1)); Inst47++; } } catch(e) {}
x1;
try { if (Inst48 <= 1000 && typeof (f4) != "undefined") {_RecordType("<660,662,57>",(f4)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (x1) != "undefined") {_RecordType("<663,665,57>",(x1)); Inst49++; } } catch(e) {}
f4(x1);
[0, 1];
try { if (Inst50 <= 1000 && typeof (x1) != "undefined") {_RecordType("<676,678,59>",(x1)); Inst50++; } } catch(e) {}
x1;
try { if (Inst51 <= 1000 && typeof (f4) != "undefined") {_RecordType("<680,682,60>",(f4)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (x1) != "undefined") {_RecordType("<683,685,60>",(x1)); Inst52++; } } catch(e) {}
f4(x1);
[0, 1, 2];
try { if (Inst53 <= 1000 && typeof (x1) != "undefined") {_RecordType("<699,701,62>",(x1)); Inst53++; } } catch(e) {}
x1;
try { if (Inst54 <= 1000 && typeof (f4) != "undefined") {_RecordType("<703,705,63>",(f4)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (x1) != "undefined") {_RecordType("<706,708,63>",(x1)); Inst55++; } } catch(e) {}
f4(x1);
[0, 1, 2, 3];
try { if (Inst56 <= 1000 && typeof (x1) != "undefined") {_RecordType("<725,727,65>",(x1)); Inst56++; } } catch(e) {}
x1;
let x2 = {
  length: 42
};
try { if (Inst57 <= 1000 && typeof (x2) != "undefined") {_RecordType("<733,735,66>",(x2)); Inst57++; } } catch(e) {}
try { if (Inst58 <= 1000 && typeof (f4) != "undefined") {_RecordType("<756,758,69>",(f4)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (x2) != "undefined") {_RecordType("<759,761,69>",(x2)); Inst59++; } } catch(e) {}
f4(x2);
42;
try { if (Inst60 <= 1000 && typeof (x2[42]) != "undefined") {_RecordType("<768,774,71>",(x2[42])); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (x2) != "undefined") {_RecordType("<768,770,71>",(x2)); Inst61++; } } catch(e) {}
x2[42];
try { if (Inst62 <= 1000 && typeof (f4) != "undefined") {_RecordType("<776,778,72>",(f4)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (x2) != "undefined") {_RecordType("<779,781,72>",(x2)); Inst63++; } } catch(e) {}
f4(x2);
42;
try { if (Inst64 <= 1000 && typeof (x2[42]) != "undefined") {_RecordType("<788,794,74>",(x2[42])); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (x2) != "undefined") {_RecordType("<788,790,74>",(x2)); Inst65++; } } catch(e) {}
x2[42];
try { if (Inst66 <= 1000 && typeof (f4) != "undefined") {_RecordType("<796,798,75>",(f4)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (x2) != "undefined") {_RecordType("<799,801,75>",(x2)); Inst67++; } } catch(e) {}
f4(x2);
42;
try { if (Inst68 <= 1000 && typeof (x2[42]) != "undefined") {_RecordType("<808,814,77>",(x2[42])); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (x2) != "undefined") {_RecordType("<808,810,77>",(x2)); Inst69++; } } catch(e) {}
x2[42];
try { if (Inst70 <= 1000 && typeof (f4) != "undefined") {_RecordType("<816,818,78>",(f4)); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (x2) != "undefined") {_RecordType("<819,821,78>",(x2)); Inst71++; } } catch(e) {}
f4(x2);
42;
try { if (Inst72 <= 1000 && typeof (x2[42]) != "undefined") {_RecordType("<828,834,80>",(x2[42])); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (x2) != "undefined") {_RecordType("<828,830,80>",(x2)); Inst73++; } } catch(e) {}
x2[42];

