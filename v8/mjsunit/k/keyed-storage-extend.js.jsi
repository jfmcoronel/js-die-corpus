var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2008 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
try { if (Inst0 <= 1000 && typeof (F) != "undefined") {_RecordType("<1606,1607,27>",(F)); Inst0++; } } catch(e) {}
function F() {
  ;
}

try { if (Inst1 <= 1000 && typeof (GrowNamed) != "undefined") {_RecordType("<1628,1637,31>",(GrowNamed)); Inst1++; } } catch(e) {}
function GrowNamed(o) {
try { if (Inst2 <= 1000 && typeof (o) != "undefined") {_RecordType("<1638,1639,31>",(o)); Inst2++; } } catch(e) {}
  o.a = 1;
try { if (Inst3 <= 1000 && typeof (o.a) != "undefined") {_RecordType("<1645,1648,32>",(o.a)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (o) != "undefined") {_RecordType("<1645,1646,32>",(o)); Inst4++; } } catch(e) {}
  o.b = 2;
try { if (Inst5 <= 1000 && typeof (o.b) != "undefined") {_RecordType("<1656,1659,33>",(o.b)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (o) != "undefined") {_RecordType("<1656,1657,33>",(o)); Inst6++; } } catch(e) {}
  o.c = 3;
try { if (Inst7 <= 1000 && typeof (o.c) != "undefined") {_RecordType("<1667,1670,34>",(o.c)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (o) != "undefined") {_RecordType("<1667,1668,34>",(o)); Inst8++; } } catch(e) {}
  o.d = 4;
try { if (Inst9 <= 1000 && typeof (o.d) != "undefined") {_RecordType("<1678,1681,35>",(o.d)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (o) != "undefined") {_RecordType("<1678,1679,35>",(o)); Inst10++; } } catch(e) {}
  o.e = 5;
try { if (Inst11 <= 1000 && typeof (o.e) != "undefined") {_RecordType("<1689,1692,36>",(o.e)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (o) != "undefined") {_RecordType("<1689,1690,36>",(o)); Inst12++; } } catch(e) {}
  o.f = 6;
try { if (Inst13 <= 1000 && typeof (o.f) != "undefined") {_RecordType("<1700,1703,37>",(o.f)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (o) != "undefined") {_RecordType("<1700,1701,37>",(o)); Inst14++; } } catch(e) {}
}

try { if (Inst15 <= 1000 && typeof (GrowKeyed) != "undefined") {_RecordType("<1721,1730,40>",(GrowKeyed)); Inst15++; } } catch(e) {}
function GrowKeyed(o) {
try { if (Inst16 <= 1000 && typeof (o) != "undefined") {_RecordType("<1731,1732,40>",(o)); Inst16++; } } catch(e) {}
  var names = ['a', 'b', 'c', 'd', 'e', 'f'];
try { if (Inst17 <= 1000 && typeof (names) != "undefined") {_RecordType("<1742,1747,41>",(names)); Inst17++; } } catch(e) {}
  var i = 0;
try { if (Inst18 <= 1000 && typeof (i) != "undefined") {_RecordType("<1788,1789,42>",(i)); Inst18++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<1813,1814,43>",(i)); Inst24++; } } catch(e) {}
  o[names[i++]] = i;
try { if (Inst19 <= 1000 && typeof (o[names[i++]]) != "undefined") {_RecordType("<1797,1810,43>",(o[names[i++]])); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (o) != "undefined") {_RecordType("<1797,1798,43>",(o)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (names[i++]) != "undefined") {_RecordType("<1799,1809,43>",(names[i++])); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (names) != "undefined") {_RecordType("<1799,1804,43>",(names)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<1805,1806,43>",(i)); Inst23++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (i) != "undefined") {_RecordType("<1834,1835,44>",(i)); Inst30++; } } catch(e) {}
  o[names[i++]] = i;
try { if (Inst25 <= 1000 && typeof (o[names[i++]]) != "undefined") {_RecordType("<1818,1831,44>",(o[names[i++]])); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (o) != "undefined") {_RecordType("<1818,1819,44>",(o)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (names[i++]) != "undefined") {_RecordType("<1820,1830,44>",(names[i++])); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (names) != "undefined") {_RecordType("<1820,1825,44>",(names)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (i) != "undefined") {_RecordType("<1826,1827,44>",(i)); Inst29++; } } catch(e) {}
try { if (Inst36 <= 1000 && typeof (i) != "undefined") {_RecordType("<1855,1856,45>",(i)); Inst36++; } } catch(e) {}
  o[names[i++]] = i;
try { if (Inst31 <= 1000 && typeof (o[names[i++]]) != "undefined") {_RecordType("<1839,1852,45>",(o[names[i++]])); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (o) != "undefined") {_RecordType("<1839,1840,45>",(o)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (names[i++]) != "undefined") {_RecordType("<1841,1851,45>",(names[i++])); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (names) != "undefined") {_RecordType("<1841,1846,45>",(names)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (i) != "undefined") {_RecordType("<1847,1848,45>",(i)); Inst35++; } } catch(e) {}
try { if (Inst42 <= 1000 && typeof (i) != "undefined") {_RecordType("<1876,1877,46>",(i)); Inst42++; } } catch(e) {}
  o[names[i++]] = i;
try { if (Inst37 <= 1000 && typeof (o[names[i++]]) != "undefined") {_RecordType("<1860,1873,46>",(o[names[i++]])); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (o) != "undefined") {_RecordType("<1860,1861,46>",(o)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (names[i++]) != "undefined") {_RecordType("<1862,1872,46>",(names[i++])); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (names) != "undefined") {_RecordType("<1862,1867,46>",(names)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (i) != "undefined") {_RecordType("<1868,1869,46>",(i)); Inst41++; } } catch(e) {}
try { if (Inst48 <= 1000 && typeof (i) != "undefined") {_RecordType("<1897,1898,47>",(i)); Inst48++; } } catch(e) {}
  o[names[i++]] = i;
try { if (Inst43 <= 1000 && typeof (o[names[i++]]) != "undefined") {_RecordType("<1881,1894,47>",(o[names[i++]])); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (o) != "undefined") {_RecordType("<1881,1882,47>",(o)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (names[i++]) != "undefined") {_RecordType("<1883,1893,47>",(names[i++])); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (names) != "undefined") {_RecordType("<1883,1888,47>",(names)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (i) != "undefined") {_RecordType("<1889,1890,47>",(i)); Inst47++; } } catch(e) {}
try { if (Inst54 <= 1000 && typeof (i) != "undefined") {_RecordType("<1918,1919,48>",(i)); Inst54++; } } catch(e) {}
  o[names[i++]] = i;
try { if (Inst49 <= 1000 && typeof (o[names[i++]]) != "undefined") {_RecordType("<1902,1915,48>",(o[names[i++]])); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (o) != "undefined") {_RecordType("<1902,1903,48>",(o)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (names[i++]) != "undefined") {_RecordType("<1904,1914,48>",(names[i++])); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (names) != "undefined") {_RecordType("<1904,1909,48>",(names)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (i) != "undefined") {_RecordType("<1910,1911,48>",(i)); Inst53++; } } catch(e) {}
}

try { if (Inst55 <= 1000 && typeof (GrowNamed) != "undefined") {_RecordType("<1924,1933,51>",(GrowNamed)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (F) != "undefined") {_RecordType("<1938,1939,51>",(F)); Inst56++; } } catch(e) {}
GrowNamed(new F());
try { if (Inst57 <= 1000 && typeof (GrowNamed) != "undefined") {_RecordType("<1944,1953,52>",(GrowNamed)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (F) != "undefined") {_RecordType("<1958,1959,52>",(F)); Inst58++; } } catch(e) {}
GrowNamed(new F());
try { if (Inst59 <= 1000 && typeof (GrowNamed) != "undefined") {_RecordType("<1964,1973,53>",(GrowNamed)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (F) != "undefined") {_RecordType("<1978,1979,53>",(F)); Inst60++; } } catch(e) {}
GrowNamed(new F());
try { if (Inst61 <= 1000 && typeof (GrowKeyed) != "undefined") {_RecordType("<1984,1993,54>",(GrowKeyed)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (F) != "undefined") {_RecordType("<1998,1999,54>",(F)); Inst62++; } } catch(e) {}
GrowKeyed(new F());
try { if (Inst63 <= 1000 && typeof (GrowKeyed) != "undefined") {_RecordType("<2004,2013,55>",(GrowKeyed)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (F) != "undefined") {_RecordType("<2018,2019,55>",(F)); Inst64++; } } catch(e) {}
GrowKeyed(new F());
try { if (Inst65 <= 1000 && typeof (GrowKeyed) != "undefined") {_RecordType("<2024,2033,56>",(GrowKeyed)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (F) != "undefined") {_RecordType("<2038,2039,56>",(F)); Inst66++; } } catch(e) {}
GrowKeyed(new F());

