var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2017 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Generated by tools/bigint-tester.py.
var data = [{
  a: 0xaed3c714bb42a73d708bcf1dc9a9deebadc913ef42bac6a6178a60,
  b: -0xf3d6bd1c059b70,
  r: 0x2a4f893c8ece0
}, {
  a: -0x8a6d8cb8e32aba50e08fd50aecbda6821e1863bf9a0,
  b: 0xe19ab8530bce542ec6b4c848fc383a2b688f07976dd523d0,
  r: -0x8a6d8cb8e32aba50e08fd50aecbda6821e1863bf9a0
}, {
  a: 0x7cd19a308b217ddd9dcda69ebe37767f09a483cb87060314aeade6f6c619d27c0,
  b: 0xae30b5c754e0,
  r: 0
}, {
  a: -0xaa90d777e849974d7ebebd2ed76dce635e36713e9e0c970,
  b: 0xcc2bc7239bf83ecafc74b25750981df250,
  r: -0
}, {
  a: 0x7386178fe1159c4ca3c4e5caa6eda4413926047efd22007931c22ab50,
  b: 0xc05100caa704bca140,
  r: 0x55ead7f83d4a795750
}, {
  a: -0xa48867cf46692351a59bc89c0ddc9a6d2cd9f72578c0bab72d8380,
  b: 0x77c2eec6cc0bef33dd4756b223c35a0f2b528f8648a0,
  r: -0x184a6eed8fcd32399c59605c7255b5614b388be24b40
}, {
  a: 0xac7681c26f78191107c9cde47f984fc7ffb7bffd0a055fc10,
  b: -0xe2d91d1a0e1edc3f806a24c36f7ca0a8a9b44b66c0,
  r: 0
}, {
  a: -0x3035011f4adba0c032ddc2fc884ff7663b45cb3baebec0,
  b: 0xcc27f9a21470911a61aae50ae118ebcf85ea0,
  r: -0
}, {
  a: -0x2dbe79c42b1e8db7aea4ca9cfaf1350528b096e23f69ea320,
  b: -0x82f7e4f2ee432480,
  r: -0x824bddbaf61ce380
}, {
  a: 0xc5c7fbeb60fdb9f8e8347ebf9fe303e3223394b2db93ce0,
  b: 0xcd988b4cb278a39fd3ae58c16616855f01fab0fb0,
  r: 0xc3b5157e680c8ca66df1bd640c6ad1601bd612b00
}, {
  a: 0x73dd1e27450edb450fe4bd70494a8ad85a8ad9691bc40bf500a0,
  b: 0xc8fb467f71be8a6b965d21857ec0,
  r: 0x646e6d9fa1e2eb2933b2e5a837d30
}, {
  a: -0xecb217583ec4240399bfa34560b45f1fd08efd0ebb56b0,
  b: 0xeba340,
  r: -0
}, {
  a: 0x29c8a9854802b9317b90683eb82609b3aa695598807fea0482a56560,
  b: -0xabe5e55b228f0,
  r: 0
}, {
  a: 0x7b532ee90b3945dbed20180632f46c90d0edb558e39456103f50e5a74ff0,
  b: 0x10,
  r: 0x0
}, {
  a: -0x6f1dbf8dedea796a2423fad9688d71340963da3a4f005f13e9cd4aa03b96c864550,
  b: -0x408a4f36ec4a1b74642fb0a4550,
  r: -0x33c06c53e6e47ca87f36447f1b0
}, {
  a: -0xe77508ff49bc76c78678676ca1edc82eb167f3b07d3208d89d26582ef74d60,
  b: -0xf005fb1a8b29035c72980abe4a0715c90,
  r: -0x159e8c7616079663b4e12765a05cc6d40
}, {
  a: 0x626749ef019017f53b2c686f26594e6d3c5f247cf0ed7024cca270,
  b: 0x5bd931ea8c6939115ad69f6ce3c6bbc300320,
  r: 0x3a4b041c36d0a45ef932745eab473943b1a90
}, {
  a: -0x960dde134b881d3366d659c7d8c3eb6346f50c08c6f70,
  b: -0xc9e7fa60f6ce1997012f5a6164138447fa248754985905dc0,
  r: -0
}, {
  a: 0x702dc0033e09e9e58ec3fc96f861587ad13cea1ed7b7eb300,
  b: 0x71f0c97687b4f3318be2fe54b90270,
  r: 0x4e1859254ac1d42f7c812decef00a0
}, {
  a: 0x39376649769a0abb26133deee934330ef21a2f90ea89476569630021af6023230,
  b: -0x4aaaec4085f65ccc9d547beb122160afcbb0,
  r: 0
}];
try { if (Inst0 <= 1000 && typeof (data) != "undefined") {_RecordType("<211,215,5>",(data)); Inst0++; } } catch(e) {}
var error_count = 0;
try { if (Inst1 <= 1000 && typeof (error_count) != "undefined") {_RecordType("<2828,2839,86>",(error_count)); Inst1++; } } catch(e) {}

for (var i = 0; i < data.length; i++) {
try { if (Inst2 <= 1000 && typeof (i) != "undefined") {_RecordType("<2855,2856,88>",(i)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (i) != "undefined") {_RecordType("<2862,2863,88>",(i)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (data.length) != "undefined") {_RecordType("<2866,2877,88>",(data.length)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (data) != "undefined") {_RecordType("<2866,2870,88>",(data)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<2879,2880,88>",(i)); Inst6++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (data[i]) != "undefined") {_RecordType("<2896,2903,89>",(data[i])); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (data) != "undefined") {_RecordType("<2896,2900,89>",(data)); Inst9++; } } catch(e) {}
  var d = data[i];
try { if (Inst7 <= 1000 && typeof (d) != "undefined") {_RecordType("<2892,2893,89>",(d)); Inst7++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (d.a) != "undefined") {_RecordType("<2915,2918,90>",(d.a)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (d) != "undefined") {_RecordType("<2915,2916,90>",(d)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (d.b) != "undefined") {_RecordType("<2921,2924,90>",(d.b)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (d) != "undefined") {_RecordType("<2921,2922,90>",(d)); Inst14++; } } catch(e) {}
  var r = d.a % d.b;
try { if (Inst10 <= 1000 && typeof (r) != "undefined") {_RecordType("<2911,2912,90>",(r)); Inst10++; } } catch(e) {}

try { if (Inst15 <= 1000 && typeof (d.r) != "undefined") {_RecordType("<2933,2936,92>",(d.r)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (d) != "undefined") {_RecordType("<2933,2934,92>",(d)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (r) != "undefined") {_RecordType("<2941,2942,92>",(r)); Inst17++; } } catch(e) {}
  if (d.r !== r) {
try { if (Inst18 <= 1000 && typeof (print) != "undefined") {_RecordType("<2950,2955,93>",(print)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (d.a.toString) != "undefined") {_RecordType("<2971,2983,93>",(d.a.toString)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (d.a) != "undefined") {_RecordType("<2971,2974,93>",(d.a)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (d) != "undefined") {_RecordType("<2971,2972,93>",(d)); Inst21++; } } catch(e) {}
    print("Input A:  " + d.a.toString(16));
try { if (Inst22 <= 1000 && typeof (print) != "undefined") {_RecordType("<2994,2999,94>",(print)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (d.b.toString) != "undefined") {_RecordType("<3015,3027,94>",(d.b.toString)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (d.b) != "undefined") {_RecordType("<3015,3018,94>",(d.b)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (d) != "undefined") {_RecordType("<3015,3016,94>",(d)); Inst25++; } } catch(e) {}
    print("Input B:  " + d.b.toString(16));
try { if (Inst26 <= 1000 && typeof (print) != "undefined") {_RecordType("<3038,3043,95>",(print)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (r.toString) != "undefined") {_RecordType("<3059,3069,95>",(r.toString)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (r) != "undefined") {_RecordType("<3059,3060,95>",(r)); Inst28++; } } catch(e) {}
    print("Result:   " + r.toString(16));
try { if (Inst29 <= 1000 && typeof (print) != "undefined") {_RecordType("<3080,3085,96>",(print)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (d.r) != "undefined") {_RecordType("<3101,3104,96>",(d.r)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (d) != "undefined") {_RecordType("<3101,3102,96>",(d)); Inst31++; } } catch(e) {}
    print("Expected: " + d.r);
try { if (Inst32 <= 1000 && typeof (print) != "undefined") {_RecordType("<3111,3116,97>",(print)); Inst32++; } } catch(e) {}
    print("Op: %");
try { if (Inst33 <= 1000 && typeof (error_count) != "undefined") {_RecordType("<3131,3142,98>",(error_count)); Inst33++; } } catch(e) {}
    error_count++;
  }
}

try { if (Inst34 <= 1000 && typeof (error_count) != "undefined") {_RecordType("<3157,3168,102>",(error_count)); Inst34++; } } catch(e) {}
if (error_count !== 0) {
try { if (Inst35 <= 1000 && typeof (print) != "undefined") {_RecordType("<3180,3185,103>",(print)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (error_count) != "undefined") {_RecordType("<3205,3216,103>",(error_count)); Inst36++; } } catch(e) {}
  print("Finished with " + error_count + " errors.");
try { if (Inst37 <= 1000 && typeof (quit) != "undefined") {_RecordType("<3234,3238,104>",(quit)); Inst37++; } } catch(e) {}
  quit(1);
}

