var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2017 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Generated by tools/bigint-tester.py.
var data = [{
  a: 0x26ffcdbd233a53e7ca4612f2b02e1f2c1d885c3177e0,
  r: 0x26ffcdbd233a53e7ca4612f2b02e1f2c1d885c3177e0
}, {
  a: 0xf2a29a35193377a223ef0d6d98db95eeb24a4165f288fd2b0,
  r: 0xf2a29a35193377a223ef0d6d98db95eeb24a4165f288fd2b40
}, {
  a: 0x454d22e29e6100,
  r: 0x454d22e29e6100
}, {
  a: -0xb00874640d30e6fce6bf79508378ed17e44dacb48a4200bce536cec462b3c0,
  r: -0xb00874640d30e6fce6bf79508378ed17e44dacb48a4200bce536cec462b3c0
}, {
  a: 0x4c151a24d765249c2bab4a1915b24b80ae437417c0,
  r: 0x4c151a24d765249c2bab4a1915b24b80ae437417c0
}, {
  a: -0xcbd476b1f9ca08ff820940,
  r: -0xcbd476b1f9ca08ff820940
}, {
  a: -0xe848e5830fa1035322b39c2cdd031109ca0,
  r: -0xe848e5830fa1035322b39c2cdd031109ca0
}, {
  a: -0x4d58c5e190f0ebac5bb36ca4d214069f69726c63a0,
  r: -0x4d58c5e190f0ebac5bb36ca4d214069f69726c63a0
}, {
  a: 0x9b390,
  r: 0x9b390
}, {
  a: 0x593921fe8b9d4900,
  r: 0
}, {
  a: -0xe127928c7cecd6e9ca94d98e858f9c76a0fccac62203aac7710cef1f9e350,
  r: -0xe127928c7cecd6e9ca94d98e858f9c76a0fccac62203aac7710cef1f9e350
}, {
  a: 0xeb14cd952d06eb6fc613016f73b7339cbdd010,
  r: 0xeb14cd952d06eb6fc613016f73b7339cbdd00
}, {
  a: -0xfdeab6a3dbd603137f680413fecc9e1c80,
  r: -0xfdeab6a3dbd603137f680413fecc9e1c80
}, {
  a: -0x7e9abbdfad170df2129dae8e15088a02b9ba99276a351a00,
  r: -0x7e9abbdfad170df2129dae8e15088a02b9ba99276a351a00
}, {
  a: 0x7b98f50,
  r: 0x7b98f50
}, {
  a: -0x919751deb470faa60d7c5c995c8bed72f9542d710fbbf1340,
  r: -0x919751deb470faa60d7c5c995c8bed72f9542d710fbbf1340
}, {
  a: -0xc5541d89b118a88afdd187228440427c8a24f9d0,
  r: -0
}, {
  a: -0xe6c88a170590,
  r: -0xe6c88a1705960
}, {
  a: -0xa1ffbfa388c332804dc4dc970,
  r: -0xa1ffbfa388c332804dc4dc970
}, {
  a: 0x67b768ce0c415127a77402861d1901dd7f60a8624ebea6ecafe03adc30,
  r: 0
}];
try { if (Inst0 <= 1000 && typeof (data) != "undefined") {_RecordType("<211,215,5>",(data)); Inst0++; } } catch(e) {}
var error_count = 0;
try { if (Inst1 <= 1000 && typeof (error_count) != "undefined") {_RecordType("<1976,1987,66>",(error_count)); Inst1++; } } catch(e) {}

for (var i = 0; i < data.length; i++) {
try { if (Inst2 <= 1000 && typeof (i) != "undefined") {_RecordType("<2003,2004,68>",(i)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (i) != "undefined") {_RecordType("<2010,2011,68>",(i)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (data.length) != "undefined") {_RecordType("<2014,2025,68>",(data.length)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (data) != "undefined") {_RecordType("<2014,2018,68>",(data)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<2027,2028,68>",(i)); Inst6++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (data[i]) != "undefined") {_RecordType("<2044,2051,69>",(data[i])); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (data) != "undefined") {_RecordType("<2044,2048,69>",(data)); Inst9++; } } catch(e) {}
  var d = data[i];
try { if (Inst7 <= 1000 && typeof (d) != "undefined") {_RecordType("<2040,2041,69>",(d)); Inst7++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (d.a) != "undefined") {_RecordType("<2065,2068,70>",(d.a)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (d) != "undefined") {_RecordType("<2065,2066,70>",(d)); Inst12++; } } catch(e) {}
  var r = --d.a;
try { if (Inst10 <= 1000 && typeof (r) != "undefined") {_RecordType("<2059,2060,70>",(r)); Inst10++; } } catch(e) {}

try { if (Inst13 <= 1000 && typeof (d.r) != "undefined") {_RecordType("<2077,2080,72>",(d.r)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (d) != "undefined") {_RecordType("<2077,2078,72>",(d)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (r) != "undefined") {_RecordType("<2085,2086,72>",(r)); Inst15++; } } catch(e) {}
  if (d.r !== r) {
try { if (Inst16 <= 1000 && typeof (print) != "undefined") {_RecordType("<2094,2099,73>",(print)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (d.a.toString) != "undefined") {_RecordType("<2115,2127,73>",(d.a.toString)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (d.a) != "undefined") {_RecordType("<2115,2118,73>",(d.a)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (d) != "undefined") {_RecordType("<2115,2116,73>",(d)); Inst19++; } } catch(e) {}
    print("Input:    " + d.a.toString(16));
try { if (Inst20 <= 1000 && typeof (print) != "undefined") {_RecordType("<2138,2143,74>",(print)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (r.toString) != "undefined") {_RecordType("<2159,2169,74>",(r.toString)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (r) != "undefined") {_RecordType("<2159,2160,74>",(r)); Inst22++; } } catch(e) {}
    print("Result:   " + r.toString(16));
try { if (Inst23 <= 1000 && typeof (print) != "undefined") {_RecordType("<2180,2185,75>",(print)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (d.r) != "undefined") {_RecordType("<2201,2204,75>",(d.r)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (d) != "undefined") {_RecordType("<2201,2202,75>",(d)); Inst25++; } } catch(e) {}
    print("Expected: " + d.r);
try { if (Inst26 <= 1000 && typeof (error_count) != "undefined") {_RecordType("<2211,2222,76>",(error_count)); Inst26++; } } catch(e) {}
    error_count++;
  }
}

try { if (Inst27 <= 1000 && typeof (error_count) != "undefined") {_RecordType("<2237,2248,80>",(error_count)); Inst27++; } } catch(e) {}
if (error_count !== 0) {
try { if (Inst28 <= 1000 && typeof (print) != "undefined") {_RecordType("<2260,2265,81>",(print)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (error_count) != "undefined") {_RecordType("<2285,2296,81>",(error_count)); Inst29++; } } catch(e) {}
  print("Finished with " + error_count + " errors.");
try { if (Inst30 <= 1000 && typeof (quit) != "undefined") {_RecordType("<2314,2318,82>",(quit)); Inst30++; } } catch(e) {}
  quit(1);
}

