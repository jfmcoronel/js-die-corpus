var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2017 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Generated by tools/bigint-tester.py.
var data = [{
  a: -0x1e0f357314bac34227333c0c2086430dae88cb538f161174888590,
  b: 0x390,
  r: -0x8700f00dd65d4009ab90c5d3a887e9c8ad110a72ca7e0f84a40
}, {
  a: 0x9b7a0098fd2d495b4b2c76ff5888ae2a0359cfec6b029e6f3ee9b014800,
  b: 0,
  r: 0xe225d252e49ef6563ecc4fff0c69b782ed99e89db2ec895bfe6b2ea970
}, {
  a: 0x6821a6dad136b9f64096337b45d6d947cf0f0b55501e33e66fbc4ef9770,
  b: 0,
  r: 0xa69c3e2ae8578ff06756b8c53c8af53fb1b1abbbb363863d7f93b18f20
}, {
  a: 0xf42f96f0c7f5a9c656a66122a9bcc57aa386bdb9a834e4174d45795ae408dae14e080,
  b: -0x5e0d81a1107ef9a38b4f24b0,
  r: -0x298a4d479eac8c186fd61939024b420080b6ae6500c70c0
}, {
  a: 0xbaf7baed984dda3c20f23201f366257c601f7fbcaf51d8b738a68fd92b0,
  b: 0xd24a1ea0,
  r: 0xe39bd4d870d72880e6ad88ec17bcca6bd0eaacfbbd28ba7450
}, {
  a: -0xa658d0683d450bfec3de3fe4253f4348dd8e9a5b1002f6c24ff0,
  b: -0xeffb9a6fa690e0be59aba488b7a7c5a85a65a018240,
  r: 0xb1730d7200
}, {
  a: 0x5a65f7b2dace4550099f4009192caa513468ef4da7e2fd80,
  b: 0xf144f8bfad42d9beaf7b82a46560,
  r: 0x5feae36e8e4932adcb20
}, {
  a: -0x87271b0cbb63eba5e3d70f6af1aa6ec60c0a7884fb8d657b00,
  b: -0xb67f8c18099ce8fa0c0f4ce2852b5590f7a8037d326b0,
  r: 0xbd9600
}, {
  a: 0xd4bc42a434dba1427d387f0858aaf39c6281ffc0f10b8b0996cb30,
  b: -0x4198d1fec9b48e38d42f2e295abc39c2a68665270,
  r: -0x33e39b6878d950
}, {
  a: 0x6a6f0c97d974dfd20337ca611dbdc96433964a206d50,
  b: 0x16c7c6f9e0e4e24d521e463fecb394e2936f3104590,
  r: 0
}, {
  a: -0xd09af7515272d81a64307afaed8854c8e2996d8e01d4860,
  b: 0x7521dfcbdf4cfbbf8d3859bf67618c91dc69157183030,
  r: -0
}, {
  a: 0xf0da5f24832a2b651aac5dff62b22475212c26e123ff78c34560f35e90,
  b: -0xf0,
  r: -0
}, {
  a: 0x76f4f5b5de8a263514554d62273e51f40342d5df692ae17625ead5b50,
  b: -0xa5e697c57fb65858604e0a060737e7d9d0,
  r: -0xb78fb2167de210959e57cd0
}, {
  a: -0xa714d4d9d747fa5258f80f3887f4dda8a11423050046280,
  b: -0xaa3b218ab92e21920a707487f0,
  r: 0xfb437487ba8580181ca0
}, {
  a: -0x165f3c659ac4157cb3af081b3fc42c0c788e2df501596c2b0,
  b: -0xfaa86d6eca0,
  r: 0
}, {
  a: 0x268d93a21aab44c52f961b1c97c002f427eb8b11e0707e3879c3a348f8e2b1c40c120,
  b: 0x70ccda2e2bba53b124c877bb4edbdbd387742cfe59d0,
  r: 0x577effaeb2338647e38edb40
}, {
  a: 0x3a13493c9e8d3d986a2a56c0aa811be408e1560f30ae150,
  b: -0x62a1a35fd7e184be45a1d0ba67888f0d982afb7a90,
  r: -0
}, {
  a: -0x2a3f3f90ea280bf64e7e460f004ea4fb2553637cb7c844f349f045ff0,
  b: -0xf2af2581bddfd9bfc1158c86211c4f4b169c0b0,
  r: 0
}, {
  a: 0x8fd5f992d4d767c8a360ad32142fa9e9d87bc0036d1d6bb7aa7471dd7f30,
  b: 0xe70,
  r: 0x9f6709805e05fd8b3c433e470387f06391b6948459e4c2bc072747e2a0
}, {
  a: 0x52c0e08ba0a22a00498058dfeeaab2b21909e81e30c48652690,
  b: 0x1d516c96820,
  r: 0
}];
try { if (Inst0 <= 1000 && typeof (data) != "undefined") {_RecordType("<211,215,5>",(data)); Inst0++; } } catch(e) {}
var error_count = 0;
try { if (Inst1 <= 1000 && typeof (error_count) != "undefined") {_RecordType("<2880,2891,86>",(error_count)); Inst1++; } } catch(e) {}

for (var i = 0; i < data.length; i++) {
try { if (Inst2 <= 1000 && typeof (i) != "undefined") {_RecordType("<2907,2908,88>",(i)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (i) != "undefined") {_RecordType("<2914,2915,88>",(i)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (data.length) != "undefined") {_RecordType("<2918,2929,88>",(data.length)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (data) != "undefined") {_RecordType("<2918,2922,88>",(data)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<2931,2932,88>",(i)); Inst6++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (data[i]) != "undefined") {_RecordType("<2948,2955,89>",(data[i])); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (data) != "undefined") {_RecordType("<2948,2952,89>",(data)); Inst9++; } } catch(e) {}
  var d = data[i];
try { if (Inst7 <= 1000 && typeof (d) != "undefined") {_RecordType("<2944,2945,89>",(d)); Inst7++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (d.a) != "undefined") {_RecordType("<2967,2970,90>",(d.a)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (d) != "undefined") {_RecordType("<2967,2968,90>",(d)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (d.b) != "undefined") {_RecordType("<2973,2976,90>",(d.b)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (d) != "undefined") {_RecordType("<2973,2974,90>",(d)); Inst14++; } } catch(e) {}
  var r = d.a / d.b;
try { if (Inst10 <= 1000 && typeof (r) != "undefined") {_RecordType("<2963,2964,90>",(r)); Inst10++; } } catch(e) {}

try { if (Inst15 <= 1000 && typeof (d.r) != "undefined") {_RecordType("<2985,2988,92>",(d.r)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (d) != "undefined") {_RecordType("<2985,2986,92>",(d)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (r) != "undefined") {_RecordType("<2993,2994,92>",(r)); Inst17++; } } catch(e) {}
  if (d.r !== r) {
try { if (Inst18 <= 1000 && typeof (print) != "undefined") {_RecordType("<3002,3007,93>",(print)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (d.a.toString) != "undefined") {_RecordType("<3023,3035,93>",(d.a.toString)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (d.a) != "undefined") {_RecordType("<3023,3026,93>",(d.a)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (d) != "undefined") {_RecordType("<3023,3024,93>",(d)); Inst21++; } } catch(e) {}
    print("Input A:  " + d.a.toString(16));
try { if (Inst22 <= 1000 && typeof (print) != "undefined") {_RecordType("<3046,3051,94>",(print)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (d.b.toString) != "undefined") {_RecordType("<3067,3079,94>",(d.b.toString)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (d.b) != "undefined") {_RecordType("<3067,3070,94>",(d.b)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (d) != "undefined") {_RecordType("<3067,3068,94>",(d)); Inst25++; } } catch(e) {}
    print("Input B:  " + d.b.toString(16));
try { if (Inst26 <= 1000 && typeof (print) != "undefined") {_RecordType("<3090,3095,95>",(print)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (r.toString) != "undefined") {_RecordType("<3111,3121,95>",(r.toString)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (r) != "undefined") {_RecordType("<3111,3112,95>",(r)); Inst28++; } } catch(e) {}
    print("Result:   " + r.toString(16));
try { if (Inst29 <= 1000 && typeof (print) != "undefined") {_RecordType("<3132,3137,96>",(print)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (d.r) != "undefined") {_RecordType("<3153,3156,96>",(d.r)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (d) != "undefined") {_RecordType("<3153,3154,96>",(d)); Inst31++; } } catch(e) {}
    print("Expected: " + d.r);
try { if (Inst32 <= 1000 && typeof (print) != "undefined") {_RecordType("<3163,3168,97>",(print)); Inst32++; } } catch(e) {}
    print("Op: /");
try { if (Inst33 <= 1000 && typeof (error_count) != "undefined") {_RecordType("<3183,3194,98>",(error_count)); Inst33++; } } catch(e) {}
    error_count++;
  }
}

try { if (Inst34 <= 1000 && typeof (error_count) != "undefined") {_RecordType("<3209,3220,102>",(error_count)); Inst34++; } } catch(e) {}
if (error_count !== 0) {
try { if (Inst35 <= 1000 && typeof (print) != "undefined") {_RecordType("<3232,3237,103>",(print)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (error_count) != "undefined") {_RecordType("<3257,3268,103>",(error_count)); Inst36++; } } catch(e) {}
  print("Finished with " + error_count + " errors.");
try { if (Inst37 <= 1000 && typeof (quit) != "undefined") {_RecordType("<3286,3290,104>",(quit)); Inst37++; } } catch(e) {}
  quit(1);
}

