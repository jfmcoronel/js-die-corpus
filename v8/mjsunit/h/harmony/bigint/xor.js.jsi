var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2017 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Generated by tools/bigint-tester.py.
var data = [{
  a: -0x46505bec40d461c595b5e4be178b7d00,
  b: -0x9170e5437d4e3ec7c0971e2c6d3bbbd2929ff108ea4ee64f7a91aa360,
  r: 0x9170e5437d4e3ec7c0971e2c6d7deb897edf25692fdb53abc486214a80
}, {
  a: -0x49171f24aa9660f7f854148018a8b03256200500,
  b: 0x75c2103e4e8e52d0310,
  r: -0x49171f24aa9660f7f85413dc39ab54dab30d0610
}, {
  a: -0x3cde31210d299e4f6734f76c4f2df3050,
  b: -0x402b7fe66d16877867f40,
  r: 0
}, {
  a: 0x720,
  b: 0xe1c82371da63bdb801273077095be8977ff9f14aa619829bf4b410,
  r: 0
}, {
  a: 0x7c2b1e0918a85bf5faea9077b0,
  b: -0xed714ba58fd54b10,
  r: -0x7c2b1e0918a68ce140b26d23060
}, {
  a: 0x1dded5fd695f4bab0,
  b: 0x7e1cb4346c68e84f8fbdd3501daead2ce99a90e56030,
  r: 0x7e1cb4346c68e84f8fbdd3501db373f914f3cfaecbf0
}, {
  a: 0xec7d9595de759652a3bb96c80edca63790c32ce7f6cf0ef0,
  b: -0x67f0feef424f56d6ae6856a20901199de530,
  r: -0
}, {
  a: 0x69ab204291f752866c3d49fdf1d656298f43e896cea3ef31a00,
  b: -0x5f5b2fd130e33ed76fa22de5ac70bdf96dee80a09e3107e1c93a135ea80b7e36400,
  r: -0x5f5b2fd130e33ed769389fe1856fc8d10b2d543f412c628351ce2dd7c4e140c55ac0
}, {
  a: -0xd396d40070,
  b: 0x3158623c80390,
  r: -0
}, {
  a: 0x8c1dbfbd68007d171986777446303896a1ee40,
  b: -0x75fd69710f5bea1cece9d59ec4bca29712b49dcf5ee5cc3299d7fb4fb024f10ae950,
  r: -0x75fd69710f5bea1cece9d59ec4bca29fd36f6619dee21d4301b08c0bd3277860f7b10
}, {
  a: -0x4c6e3ccbabdd6f58450ec3ec8adfb10831b70893cb996f0ac97a0ae2f3a943185d0,
  b: 0xeb136731a19867949d46886e62050c4b446767a076c70,
  r: -0
}, {
  a: 0xeaff60e10ebb4b8f2da6a510,
  b: -0x17af62a3e808af1be3d864132dfd7363bc95872580585d7a9900,
  r: -0x17af62a3e808af1be3d864132dfd999cdc74899ecbd770dc3c10
}, {
  a: -0xd4424b4f09210108076d63bd621180f280df8f4480,
  b: -0x20953185dd2c534b3cb8da73ce55ab386d62fe8a793a1e74cdf3ad95f3cc2573b0,
  r: 0
}, {
  a: 0x84317d7ec6df6dbfe9413cee812ff95c587f61c7b8de5828d445a69555cff26fba0,
  b: -0x853c667aed62685df5993748e5668802b7bf918f8c1222a5267c33f013ff1e10f1b900,
  r: -0x8534256d3a8e05ab2e67a35b2b8e9afd227a16799069af40a4f177aa7aaa42efd742a0
}, {
  a: -0xe3b4bf724b172b23c5834ed6f70f984ab3b146070770cbc3b86779db0,
  b: -0x68166de3a03d9efce30cb36e242db000c850c0d4f454594e23a1a0,
  r: 0
}, {
  a: -0x5358b8efb260b40e37cb5b45eb4e7860,
  b: -0x3e617e3967a5b3554ebf24f1e51a253dfc20a76ef01f02440,
  r: 0
}, {
  a: -0x702359917a8aceedc380,
  b: -0x714f08d9c29e9fc0044982eb2469707896260,
  r: 0x714f08d9c29e9fc0034bb77233c1dc964a1e0
}, {
  a: -0x455ac30,
  b: -0x6152562bf5b6f785abec41e8625bccd3bf30672257330,
  r: 0x6152562bf5b6f785abec41e8625bccd3bf3067670df050
}, {
  a: 0x40,
  b: 0xa3d30490286ddf5d4f4250,
  r: 0xa3d30490286ddf5d4f4210
}, {
  a: -0x530cc599859ccdbbb3c1dcb46248a4474c63323cc58a7891da79e0322b91c795ac50,
  b: 0x2d986083244cd488657c947a952ae15b23d90ebbc34d0,
  r: -0
}];
try { if (Inst0 <= 1000 && typeof (data) != "undefined") {_RecordType("<211,215,5>",(data)); Inst0++; } } catch(e) {}
var error_count = 0;
try { if (Inst1 <= 1000 && typeof (error_count) != "undefined") {_RecordType("<2966,2977,86>",(error_count)); Inst1++; } } catch(e) {}

for (var i = 0; i < data.length; i++) {
try { if (Inst2 <= 1000 && typeof (i) != "undefined") {_RecordType("<2993,2994,88>",(i)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (i) != "undefined") {_RecordType("<3000,3001,88>",(i)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (data.length) != "undefined") {_RecordType("<3004,3015,88>",(data.length)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (data) != "undefined") {_RecordType("<3004,3008,88>",(data)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<3017,3018,88>",(i)); Inst6++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (data[i]) != "undefined") {_RecordType("<3034,3041,89>",(data[i])); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (data) != "undefined") {_RecordType("<3034,3038,89>",(data)); Inst9++; } } catch(e) {}
  var d = data[i];
try { if (Inst7 <= 1000 && typeof (d) != "undefined") {_RecordType("<3030,3031,89>",(d)); Inst7++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (d.a) != "undefined") {_RecordType("<3053,3056,90>",(d.a)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (d) != "undefined") {_RecordType("<3053,3054,90>",(d)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (d.b) != "undefined") {_RecordType("<3059,3062,90>",(d.b)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (d) != "undefined") {_RecordType("<3059,3060,90>",(d)); Inst14++; } } catch(e) {}
  var r = d.a ^ d.b;
try { if (Inst10 <= 1000 && typeof (r) != "undefined") {_RecordType("<3049,3050,90>",(r)); Inst10++; } } catch(e) {}

try { if (Inst15 <= 1000 && typeof (d.r) != "undefined") {_RecordType("<3071,3074,92>",(d.r)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (d) != "undefined") {_RecordType("<3071,3072,92>",(d)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (r) != "undefined") {_RecordType("<3079,3080,92>",(r)); Inst17++; } } catch(e) {}
  if (d.r !== r) {
try { if (Inst18 <= 1000 && typeof (print) != "undefined") {_RecordType("<3088,3093,93>",(print)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (d.a.toString) != "undefined") {_RecordType("<3109,3121,93>",(d.a.toString)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (d.a) != "undefined") {_RecordType("<3109,3112,93>",(d.a)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (d) != "undefined") {_RecordType("<3109,3110,93>",(d)); Inst21++; } } catch(e) {}
    print("Input A:  " + d.a.toString(16));
try { if (Inst22 <= 1000 && typeof (print) != "undefined") {_RecordType("<3132,3137,94>",(print)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (d.b.toString) != "undefined") {_RecordType("<3153,3165,94>",(d.b.toString)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (d.b) != "undefined") {_RecordType("<3153,3156,94>",(d.b)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (d) != "undefined") {_RecordType("<3153,3154,94>",(d)); Inst25++; } } catch(e) {}
    print("Input B:  " + d.b.toString(16));
try { if (Inst26 <= 1000 && typeof (print) != "undefined") {_RecordType("<3176,3181,95>",(print)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (r.toString) != "undefined") {_RecordType("<3197,3207,95>",(r.toString)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (r) != "undefined") {_RecordType("<3197,3198,95>",(r)); Inst28++; } } catch(e) {}
    print("Result:   " + r.toString(16));
try { if (Inst29 <= 1000 && typeof (print) != "undefined") {_RecordType("<3218,3223,96>",(print)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (d.r) != "undefined") {_RecordType("<3239,3242,96>",(d.r)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (d) != "undefined") {_RecordType("<3239,3240,96>",(d)); Inst31++; } } catch(e) {}
    print("Expected: " + d.r);
try { if (Inst32 <= 1000 && typeof (print) != "undefined") {_RecordType("<3249,3254,97>",(print)); Inst32++; } } catch(e) {}
    print("Op: ^");
try { if (Inst33 <= 1000 && typeof (error_count) != "undefined") {_RecordType("<3269,3280,98>",(error_count)); Inst33++; } } catch(e) {}
    error_count++;
  }
}

try { if (Inst34 <= 1000 && typeof (error_count) != "undefined") {_RecordType("<3295,3306,102>",(error_count)); Inst34++; } } catch(e) {}
if (error_count !== 0) {
try { if (Inst35 <= 1000 && typeof (print) != "undefined") {_RecordType("<3318,3323,103>",(print)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (error_count) != "undefined") {_RecordType("<3343,3354,103>",(error_count)); Inst36++; } } catch(e) {}
  print("Finished with " + error_count + " errors.");
try { if (Inst37 <= 1000 && typeof (quit) != "undefined") {_RecordType("<3372,3376,104>",(quit)); Inst37++; } } catch(e) {}
  quit(1);
}

