var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2017 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Generated by tools/bigint-tester.py.
var data = [{
  a: 0x2bf1f236c2df29f7c99be052dfe1b69ae158d777fea487af889f6259f472c0,
  b: -0xae00900,
  r: -0x1dde8b7f987479d7b308e2b8a122703d417f921fd4ab04fcac81439ace4f445c7bf540
}, {
  a: -0x71cd629b6682b5b1c50f9436ded884680,
  b: -0xb24ce1d11726048158fb42c02e9361973190,
  r: 0x4f42fbebca0bc1746d114996d9c9cceb4065c347da31dc0efa88db41f1f724aef81ff0
}, {
  a: 0xef7c15fb2256338bd0650fa51c28551108ccb9828850f1b415d0c8f1a47fc0e2f80,
  b: 0xc10,
  r: 0xb4f552dbf2c20292f5475d025276b9c70f16316c91e0a9a2833bf2d616bc484f808d0
}, {
  a: 0xcc8a5a56c623d9f9be2103bc237976f20,
  b: 0x13a02fec7cfd49c5a081c06bbbaac5c70dc0,
  r: 0
}, {
  a: -0x510,
  b: 0x7de5551df3ec2619a89139153663a79f8bdb47047423c8070d7cfddc26d43af8ee0,
  r: -0x281c60ee5b06ece38cc4c4bfd2242017c4ff0cd05b40a66abf3c22a1741efe09ef81c0
}, {
  a: 0x6fb9ba0d0,
  b: -0x86b45ffb80fbf2b61abc14b28855780f83e187fd6ae26e09d28d6f05260e0,
  r: -0x3ac9efdd4e930fcbf654819060b858f182f7768db6bc72deb8d734d2ea10fa02b656d0
}, {
  a: -0xde2e7a0883a63d69d2120108f92943e4a34b63e8468c12b38a0519a6490,
  b: -0xb1857781f0,
  r: 0x9a11f83db6da31f78a2415d3891f79a0f6aafc69553fb458a2bc3ae2e2f65cb09251e0
}, {
  a: -0x2c90284ebdb5237ba7c9562f596ef9a21254a0,
  b: -0xb55feab8b45cc1bcdcfc5585c9114de0,
  r: 0x1f929eda8d33ec2ded8d76382a4cb731f805d28e827521a27154b6618a6f87ed5215a0
}, {
  a: 0x11ffe68d26ca29eac43b60,
  b: -0xe3311b278fec1fb3f8f59acfd9147c773197fc54c66b250,
  r: -0xff95d530fd53e61744d86d09f9ab5401b1efb2133af5c47ffeca31aca22a4da414cd0
}, {
  a: 0xbda74de44eeb2995a4185325014860,
  b: 0xf99164c7248a0372d72d82cbf65fdb345c84bca0,
  r: 0xb8e3712f119fefa47168950100b33aa1ec4e61a970d0eec2d2dd4b925cc4dfd709a430
}, {
  a: 0x47fc0bb6d761e12a1f7cf2a14f4cc777486b22516ca339640,
  b: -0xd2fa2494ae242494f300,
  r: -0x3b531808ad9095f9f904dba47ef4a0aef54f736cc2836accb7b1b70f07ee862e8729d0
}, {
  a: 0x91d09f35203fcf69974d347ab718910,
  b: 0xfc2d9a00611e4e1767b67db898b951e5d2bbb0,
  r: 0
}, {
  a: 0x5a5b1ede360dafcac08c92f4b809e401502df5ab8569303a0,
  b: -0xb64d963b1ac4eb46ddd60,
  r: -0
}, {
  a: 0xf68275dc25d6af7dde130,
  b: 0xfe330b766e44f479e342e3315812e977d4d5e39bffe42110,
  r: 0xf4c697f78dc7c9b3207b50cf2cf3035aa065e96c37c0be3345f71f34096f057e76b270
}, {
  a: 0x77009ed053f70,
  b: -0x647aecfc2af4079a586fbba99070c3f51d5465d9a4fd8c12cdab10850,
  r: -0x2eb5627edb1072a65a1db2d243d0bf2eeb5c3ff6ad61ec1063e9ee40b783bd06d55910
}, {
  a: 0xccfa15bb6125b01bece5a919ab5e9128e784d63e50b5990ba8047a7e0,
  b: 0x1a366ac48c0,
  r: 0x14fcf8728aa3dc5ef26b077dfc012d592c3a0cdfc3331942f921f037eea5af9eff9920
}, {
  a: 0x4fc54a59f0,
  b: -0x93bbcbd684987407c4ec4a3cbdc7c4821c33ca20ca8449b0055905e9a80,
  r: -0x2e08ce533fdc7bb8a3a2280cfb116c85837b74606ed25f8daad623baa4ac7de758680
}, {
  a: -0xcf21626f318089a85738f7e9cdcf0a477f4d880ce58670,
  b: -0xc7ca8704a49fdb8f9567c60,
  r: 0
}, {
  a: 0x20c3cb19e51d4e2ac2c89f26e052bef0,
  b: -0xab2a148297108425ebd2fd17d897f647e0790,
  r: -0x15e82b69a0eaed04cd140c6aed3b1f5bc0fc5de7ceddcb2d77615767b19dd82c744780
}, {
  a: -0xcc4f48f45d8165569348fb995370,
  b: 0x140cc111df0a06e32335478ded744eb3a737a53400,
  r: -0x10005f808c07a1d91faac090aad06804b491919a9d2ed58f6caa52448ad97bd486aef0
}];
try { if (Inst0 <= 1000 && typeof (data) != "undefined") {_RecordType("<211,215,5>",(data)); Inst0++; } } catch(e) {}
var error_count = 0;
try { if (Inst1 <= 1000 && typeof (error_count) != "undefined") {_RecordType("<3372,3383,86>",(error_count)); Inst1++; } } catch(e) {}

for (var i = 0; i < data.length; i++) {
try { if (Inst2 <= 1000 && typeof (i) != "undefined") {_RecordType("<3399,3400,88>",(i)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (i) != "undefined") {_RecordType("<3406,3407,88>",(i)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (data.length) != "undefined") {_RecordType("<3410,3421,88>",(data.length)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (data) != "undefined") {_RecordType("<3410,3414,88>",(data)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<3423,3424,88>",(i)); Inst6++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (data[i]) != "undefined") {_RecordType("<3440,3447,89>",(data[i])); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (data) != "undefined") {_RecordType("<3440,3444,89>",(data)); Inst9++; } } catch(e) {}
  var d = data[i];
try { if (Inst7 <= 1000 && typeof (d) != "undefined") {_RecordType("<3436,3437,89>",(d)); Inst7++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (d.a) != "undefined") {_RecordType("<3459,3462,90>",(d.a)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (d) != "undefined") {_RecordType("<3459,3460,90>",(d)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (d.b) != "undefined") {_RecordType("<3465,3468,90>",(d.b)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (d) != "undefined") {_RecordType("<3465,3466,90>",(d)); Inst14++; } } catch(e) {}
  var r = d.a * d.b;
try { if (Inst10 <= 1000 && typeof (r) != "undefined") {_RecordType("<3455,3456,90>",(r)); Inst10++; } } catch(e) {}

try { if (Inst15 <= 1000 && typeof (d.r) != "undefined") {_RecordType("<3477,3480,92>",(d.r)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (d) != "undefined") {_RecordType("<3477,3478,92>",(d)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (r) != "undefined") {_RecordType("<3485,3486,92>",(r)); Inst17++; } } catch(e) {}
  if (d.r !== r) {
try { if (Inst18 <= 1000 && typeof (print) != "undefined") {_RecordType("<3494,3499,93>",(print)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (d.a.toString) != "undefined") {_RecordType("<3515,3527,93>",(d.a.toString)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (d.a) != "undefined") {_RecordType("<3515,3518,93>",(d.a)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (d) != "undefined") {_RecordType("<3515,3516,93>",(d)); Inst21++; } } catch(e) {}
    print("Input A:  " + d.a.toString(16));
try { if (Inst22 <= 1000 && typeof (print) != "undefined") {_RecordType("<3538,3543,94>",(print)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (d.b.toString) != "undefined") {_RecordType("<3559,3571,94>",(d.b.toString)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (d.b) != "undefined") {_RecordType("<3559,3562,94>",(d.b)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (d) != "undefined") {_RecordType("<3559,3560,94>",(d)); Inst25++; } } catch(e) {}
    print("Input B:  " + d.b.toString(16));
try { if (Inst26 <= 1000 && typeof (print) != "undefined") {_RecordType("<3582,3587,95>",(print)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (r.toString) != "undefined") {_RecordType("<3603,3613,95>",(r.toString)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (r) != "undefined") {_RecordType("<3603,3604,95>",(r)); Inst28++; } } catch(e) {}
    print("Result:   " + r.toString(16));
try { if (Inst29 <= 1000 && typeof (print) != "undefined") {_RecordType("<3624,3629,96>",(print)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (d.r) != "undefined") {_RecordType("<3645,3648,96>",(d.r)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (d) != "undefined") {_RecordType("<3645,3646,96>",(d)); Inst31++; } } catch(e) {}
    print("Expected: " + d.r);
try { if (Inst32 <= 1000 && typeof (print) != "undefined") {_RecordType("<3655,3660,97>",(print)); Inst32++; } } catch(e) {}
    print("Op: *");
try { if (Inst33 <= 1000 && typeof (error_count) != "undefined") {_RecordType("<3675,3686,98>",(error_count)); Inst33++; } } catch(e) {}
    error_count++;
  }
}

try { if (Inst34 <= 1000 && typeof (error_count) != "undefined") {_RecordType("<3701,3712,102>",(error_count)); Inst34++; } } catch(e) {}
if (error_count !== 0) {
try { if (Inst35 <= 1000 && typeof (print) != "undefined") {_RecordType("<3724,3729,103>",(print)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (error_count) != "undefined") {_RecordType("<3749,3760,103>",(error_count)); Inst36++; } } catch(e) {}
  print("Finished with " + error_count + " errors.");
try { if (Inst37 <= 1000 && typeof (quit) != "undefined") {_RecordType("<3778,3782,104>",(quit)); Inst37++; } } catch(e) {}
  quit(1);
}

