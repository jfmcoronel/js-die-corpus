var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2017 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Generated by tools/bigint-tester.py.
var data = [{
  a: 0x9252b94f220ded0c18706998886397699c5a25527570,
  b: -0x286817ba2e8fd0,
  r: 0x9252b94f220ded0c1870699888639769185a045015000
}, {
  a: 0x15a28152354fe421bbe4649d4d22d536ac34f9ba960,
  b: 0x0,
  r: 0
}, {
  a: 0xd09791bf7ae6703fae8d654104f54fcd957bbf028540b8e7c0f859fdcc1b7abd610,
  b: 0x24b473d00,
  r: 0x24a052100
}, {
  a: 0x2f73fbd05e9f7f70beba3dc7cd883732149a3d02a422f90f330,
  b: 0x4490583f0,
  r: 0x9008330
}, {
  a: 0xd6ea27844b3d356774e73de10d393ab9cadb81848e3b4a34d1f7440d0,
  b: 0x1639eeee731f3ba09234b5e15ec92f8bfb5cea28a0e89c59ed1c45b5f00,
  r: 0x10ea26000b39200234a5214009290ab948ca008088184824104504000
}, {
  a: -0x131f5e2c196269fd140c8727a9a02170e0dddb6aec109a890,
  b: 0x401ec4eae8b756f2b222f6f565fb6acecce3c524e9b450,
  r: 0x12c488800242f230005655448b0a0204810124613440
}, {
  a: -0x5bcba128bf7b949780a4bd02782a63ae79f646a33b8672f3f692ab90,
  b: -0xa81dd8ff624072fce3a00eb0bd5700e5666c3beb7d59701c42480,
  r: -0x5bcba1fdbfffb497afeebf02fb2bf7fe7ff666e3bfb7f7f7f7d6afa0
}, {
  a: 0xc9975465287865482700610,
  b: 0x75023f046c04f9095f64d3b8c75ab21950,
  r: 0x499014640838044023000100
}, {
  a: 0x5ad0abd6e43ef787248af2607fb29b9c3f7a1e7b106269ff0,
  b: -0xd483c8630392db4b620e0f0,
  r: 0x5ad0abd6e43ef787248af2607fb29380394a06520040491f0
}, {
  a: -0x9ed448bdb4794e4c0485db9ebe6cad0b0,
  b: -0x549a70753c90,
  r: -0x9ed448bdb4794e4c0485df9efe7dbd9b0
}, {
  a: -0x3a3fe42647633612082372714484767efc9673ce964b76f9f53a63d0,
  b: 0x99615e5edd0506cbb5512fb56ee2dd1230,
  r: 0x986116189800068881100b0000608c1000
}, {
  a: -0xac1b8238c08f0,
  b: -0xb9439dfbbc70e12b3a1fc7ccbfebeacd9bb321d83d0,
  r: -0
}, {
  a: 0x120580500,
  b: 0x90e13d34618496af407fabefabdd23892f480,
  r: 0x20100400
}, {
  a: 0xaa50,
  b: 0x2122a9c43b2531d0,
  r: 0x2110
}, {
  a: 0xaf43eb353c1547dc6ad79768e9a0,
  b: 0x55c80f89d8fe82dbf69eca557dd0479b6a449db77e38b2241ec81aa7d4042766dd3e60,
  r: 0x28022014081007d4000706482820
}, {
  a: 0xbd38b2d88212ceea6fbe3890769e46230,
  b: 0xeb22e568873e9bfdb5d2ddbc00,
  r: 0x88202468863a83890540c42000
}, {
  a: 0x24cd8c9634eddf319c57b54dffb49ce4974528f03b2c732d052ad490,
  b: -0x40790,
  r: 0x24cd8c9634eddf319c57b54dffb49ce4974528f03b2c732d052a8410
}, {
  a: -0x61f263476a1212fce55cf7d437f4364b73a1815a640,
  b: -0x19226cb79772cca166043a29d1f0fe1df0,
  r: -0x61f263476b9236fffd7fffde37f477ebffbf8ffbff0
}, {
  a: -0x44309b08a65bc7dc1e53d598d82ccdaa852941d7c851d907a60,
  b: 0xdd93dc17d38658ee30453d5f20,
  r: 0x5d1304178102408230402d05050
}, {
  a: 0x1e3eea4668e7a6c3bfa87d3f7a419bd10,
  b: -0x592d83940f884f0,
  r: 0x1e3eea4668e7a6c3bfa86d274201035100
}];
try { if (Inst0 <= 1000 && typeof (data) != "undefined") {_RecordType("<211,215,5>",(data)); Inst0++; } } catch(e) {}
var error_count = 0;
try { if (Inst1 <= 1000 && typeof (error_count) != "undefined") {_RecordType("<2809,2820,86>",(error_count)); Inst1++; } } catch(e) {}

for (var i = 0; i < data.length; i++) {
try { if (Inst2 <= 1000 && typeof (i) != "undefined") {_RecordType("<2836,2837,88>",(i)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (i) != "undefined") {_RecordType("<2843,2844,88>",(i)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (data.length) != "undefined") {_RecordType("<2847,2858,88>",(data.length)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (data) != "undefined") {_RecordType("<2847,2851,88>",(data)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<2860,2861,88>",(i)); Inst6++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (data[i]) != "undefined") {_RecordType("<2877,2884,89>",(data[i])); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (data) != "undefined") {_RecordType("<2877,2881,89>",(data)); Inst9++; } } catch(e) {}
  var d = data[i];
try { if (Inst7 <= 1000 && typeof (d) != "undefined") {_RecordType("<2873,2874,89>",(d)); Inst7++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (d.a) != "undefined") {_RecordType("<2896,2899,90>",(d.a)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (d) != "undefined") {_RecordType("<2896,2897,90>",(d)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (d.b) != "undefined") {_RecordType("<2902,2905,90>",(d.b)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (d) != "undefined") {_RecordType("<2902,2903,90>",(d)); Inst14++; } } catch(e) {}
  var r = d.a & d.b;
try { if (Inst10 <= 1000 && typeof (r) != "undefined") {_RecordType("<2892,2893,90>",(r)); Inst10++; } } catch(e) {}

try { if (Inst15 <= 1000 && typeof (d.r) != "undefined") {_RecordType("<2914,2917,92>",(d.r)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (d) != "undefined") {_RecordType("<2914,2915,92>",(d)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (r) != "undefined") {_RecordType("<2922,2923,92>",(r)); Inst17++; } } catch(e) {}
  if (d.r !== r) {
try { if (Inst18 <= 1000 && typeof (print) != "undefined") {_RecordType("<2931,2936,93>",(print)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (d.a.toString) != "undefined") {_RecordType("<2952,2964,93>",(d.a.toString)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (d.a) != "undefined") {_RecordType("<2952,2955,93>",(d.a)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (d) != "undefined") {_RecordType("<2952,2953,93>",(d)); Inst21++; } } catch(e) {}
    print("Input A:  " + d.a.toString(16));
try { if (Inst22 <= 1000 && typeof (print) != "undefined") {_RecordType("<2975,2980,94>",(print)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (d.b.toString) != "undefined") {_RecordType("<2996,3008,94>",(d.b.toString)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (d.b) != "undefined") {_RecordType("<2996,2999,94>",(d.b)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (d) != "undefined") {_RecordType("<2996,2997,94>",(d)); Inst25++; } } catch(e) {}
    print("Input B:  " + d.b.toString(16));
try { if (Inst26 <= 1000 && typeof (print) != "undefined") {_RecordType("<3019,3024,95>",(print)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (r.toString) != "undefined") {_RecordType("<3040,3050,95>",(r.toString)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (r) != "undefined") {_RecordType("<3040,3041,95>",(r)); Inst28++; } } catch(e) {}
    print("Result:   " + r.toString(16));
try { if (Inst29 <= 1000 && typeof (print) != "undefined") {_RecordType("<3061,3066,96>",(print)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (d.r) != "undefined") {_RecordType("<3082,3085,96>",(d.r)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (d) != "undefined") {_RecordType("<3082,3083,96>",(d)); Inst31++; } } catch(e) {}
    print("Expected: " + d.r);
try { if (Inst32 <= 1000 && typeof (print) != "undefined") {_RecordType("<3092,3097,97>",(print)); Inst32++; } } catch(e) {}
    print("Op: &");
try { if (Inst33 <= 1000 && typeof (error_count) != "undefined") {_RecordType("<3112,3123,98>",(error_count)); Inst33++; } } catch(e) {}
    error_count++;
  }
}

try { if (Inst34 <= 1000 && typeof (error_count) != "undefined") {_RecordType("<3138,3149,102>",(error_count)); Inst34++; } } catch(e) {}
if (error_count !== 0) {
try { if (Inst35 <= 1000 && typeof (print) != "undefined") {_RecordType("<3161,3166,103>",(print)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (error_count) != "undefined") {_RecordType("<3186,3197,103>",(error_count)); Inst36++; } } catch(e) {}
  print("Finished with " + error_count + " errors.");
try { if (Inst37 <= 1000 && typeof (quit) != "undefined") {_RecordType("<3215,3219,104>",(quit)); Inst37++; } } catch(e) {}
  quit(1);
}

