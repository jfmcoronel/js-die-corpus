var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2017 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Generated by tools/bigint-tester.py.
var data = [{
  a: 0xc4fd438551d580,
  b: 0x91b42ee55a50d970,
  r: -0
}, {
  a: -0x86b766ec276e390087458ce093b07b2574732d5f3f5120,
  b: 0x4b1fe0dd23316de1b38b343d4112fbd7e8c8d081de5dbabda7357fd9e8684666930,
  r: -0x4b1fe0dd23316de1b38b34c3f879e7ff5701d10923ea9b5157b0a54e5b95a5a5e500
}, {
  a: 0x63e1eac0d5470c8f802ec390b6415c43ed16d28d0,
  b: -0xbe26927b2f6ae85b5d3062d869d22da005805d23142a236955127b6ca688c00,
  r: 0
}, {
  a: -0x873cf988993d97e5180,
  b: -0xd791aa365f881a7f05f21f73ef390c0b37408dd0a908801682464178420,
  r: 0
}, {
  a: -0xcb273d5b123eff101c62f016ae2896223b93b9114e40d0,
  b: 0x2169f8c954623f8381bf12fd0927e1a645f5b3c6c00e58105c297ba40446200,
  r: -0
}, {
  a: -0xe965bf745fffcf20,
  b: 0x7c3b92f8a030cbfca7cc5f2fd454459c79a3ac22015244680,
  r: -0
}, {
  a: 0,
  b: 0x6975a8ededffd265f472e660e10,
  r: -0x6975a8ededffd265f472e660e10
}, {
  a: -0x236bda1a3a9635190f26c3739b7342f33a27cd2560,
  b: 0x1a7e0,
  r: -0
}, {
  a: 0xb682b9c88f0b6d7b5e9a4f77dd0d7885d62cd162783b2e55b30b954e10caf0,
  b: 0x2c6574161d9aff7bbebd95e561fbd5d70d893e8c9772bcc697c0,
  r: 0xb682b9c88c451639fcc09f8021219f27800d140507629a6ce9946981a74e10
}, {
  a: 0xdd6aa5240c0,
  b: 0xb9c7bef20c0cc0f814cce3c40d43e4c20,
  r: -0
}, {
  a: 0x35cd14329d5f810,
  b: 0x25997b1f3500f9b27f2ce0,
  r: -0x25997b1bd82fb688a934d0
}, {
  a: -0x55ec15d7ed316df3fc7bcfcce0f0a6d7034113bad6d74bae88d4aab03030,
  b: 0x9d09b8869aab44d6690fad48c8dffd0e18cc21fb26c2a80ac08fd4f42296f46d37c0,
  r: -0x9d09b886a00a0633e7e2c42808a7ba0ae6db2c6896f6b9466dfd49af0b243f183ad0
}, {
  a: 0,
  b: -0xfbf3b308a6066d497e0,
  r: 0
}, {
  a: 0x6acfc1e4b681be9582cd28453387ed2c29f5eb4cd6d78aaac60,
  b: -0x4f5990,
  r: 0
}, {
  a: -0xc93eb5cae0c90eb77e702ccb44eea6180829d0b360870,
  b: 0,
  r: -0
}, {
  a: -0x324ef140a16c5c20a9a189a720136f4836ea98050,
  b: 0x49471582a658bf5524128e130b3378d29331baa8eb0,
  r: -0x49796473e6fa2bb144bc2f9cb2538c41db68a540f0
}, {
  a: 0x6f15ac8490de4e308286fdde1142ad0052c0,
  b: 0x9ca6c715de18d7f64a751452e967b5807eec951777245ce5fe0,
  r: -0x9ca6c715de18d78734c88fc20b1984fdf7eeb70634775c933b0
}, {
  a: -0xc3030,
  b: 0x5ec0a706a54978a59b10007942e563957ad22e708678fbfdb02862b2c0,
  r: -0x5ec0a706a54978a59b10007942e563957ad22e708678fbfdb02925b670
}, {
  a: -0xdb736b5f3979c24f70aafa5f17711d725d552a9778e0,
  b: 0x70b56a0773498a45b796cf79ea18211610,
  r: -0
}, {
  a: 0xe91b9a797168c6b7440f940,
  b: -0x2588c1301521dd9646a2e22e3aca462ca95e76069be2f7b95d8bb810,
  r: 0x2588c1301521dd9646a2e22e3aca462caa4791a11554608014cfc7b10
}];
try { if (Inst0 <= 1000 && typeof (data) != "undefined") {_RecordType("<211,215,5>",(data)); Inst0++; } } catch(e) {}
var error_count = 0;
try { if (Inst1 <= 1000 && typeof (error_count) != "undefined") {_RecordType("<2722,2733,86>",(error_count)); Inst1++; } } catch(e) {}

for (var i = 0; i < data.length; i++) {
try { if (Inst2 <= 1000 && typeof (i) != "undefined") {_RecordType("<2749,2750,88>",(i)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (i) != "undefined") {_RecordType("<2756,2757,88>",(i)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (data.length) != "undefined") {_RecordType("<2760,2771,88>",(data.length)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (data) != "undefined") {_RecordType("<2760,2764,88>",(data)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<2773,2774,88>",(i)); Inst6++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (data[i]) != "undefined") {_RecordType("<2790,2797,89>",(data[i])); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (data) != "undefined") {_RecordType("<2790,2794,89>",(data)); Inst9++; } } catch(e) {}
  var d = data[i];
try { if (Inst7 <= 1000 && typeof (d) != "undefined") {_RecordType("<2786,2787,89>",(d)); Inst7++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (d.a) != "undefined") {_RecordType("<2809,2812,90>",(d.a)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (d) != "undefined") {_RecordType("<2809,2810,90>",(d)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (d.b) != "undefined") {_RecordType("<2815,2818,90>",(d.b)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (d) != "undefined") {_RecordType("<2815,2816,90>",(d)); Inst14++; } } catch(e) {}
  var r = d.a - d.b;
try { if (Inst10 <= 1000 && typeof (r) != "undefined") {_RecordType("<2805,2806,90>",(r)); Inst10++; } } catch(e) {}

try { if (Inst15 <= 1000 && typeof (d.r) != "undefined") {_RecordType("<2827,2830,92>",(d.r)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (d) != "undefined") {_RecordType("<2827,2828,92>",(d)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (r) != "undefined") {_RecordType("<2835,2836,92>",(r)); Inst17++; } } catch(e) {}
  if (d.r !== r) {
try { if (Inst18 <= 1000 && typeof (print) != "undefined") {_RecordType("<2844,2849,93>",(print)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (d.a.toString) != "undefined") {_RecordType("<2865,2877,93>",(d.a.toString)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (d.a) != "undefined") {_RecordType("<2865,2868,93>",(d.a)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (d) != "undefined") {_RecordType("<2865,2866,93>",(d)); Inst21++; } } catch(e) {}
    print("Input A:  " + d.a.toString(16));
try { if (Inst22 <= 1000 && typeof (print) != "undefined") {_RecordType("<2888,2893,94>",(print)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (d.b.toString) != "undefined") {_RecordType("<2909,2921,94>",(d.b.toString)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (d.b) != "undefined") {_RecordType("<2909,2912,94>",(d.b)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (d) != "undefined") {_RecordType("<2909,2910,94>",(d)); Inst25++; } } catch(e) {}
    print("Input B:  " + d.b.toString(16));
try { if (Inst26 <= 1000 && typeof (print) != "undefined") {_RecordType("<2932,2937,95>",(print)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (r.toString) != "undefined") {_RecordType("<2953,2963,95>",(r.toString)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (r) != "undefined") {_RecordType("<2953,2954,95>",(r)); Inst28++; } } catch(e) {}
    print("Result:   " + r.toString(16));
try { if (Inst29 <= 1000 && typeof (print) != "undefined") {_RecordType("<2974,2979,96>",(print)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (d.r) != "undefined") {_RecordType("<2995,2998,96>",(d.r)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (d) != "undefined") {_RecordType("<2995,2996,96>",(d)); Inst31++; } } catch(e) {}
    print("Expected: " + d.r);
try { if (Inst32 <= 1000 && typeof (print) != "undefined") {_RecordType("<3005,3010,97>",(print)); Inst32++; } } catch(e) {}
    print("Op: -");
try { if (Inst33 <= 1000 && typeof (error_count) != "undefined") {_RecordType("<3025,3036,98>",(error_count)); Inst33++; } } catch(e) {}
    error_count++;
  }
}

try { if (Inst34 <= 1000 && typeof (error_count) != "undefined") {_RecordType("<3051,3062,102>",(error_count)); Inst34++; } } catch(e) {}
if (error_count !== 0) {
try { if (Inst35 <= 1000 && typeof (print) != "undefined") {_RecordType("<3074,3079,103>",(print)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (error_count) != "undefined") {_RecordType("<3099,3110,103>",(error_count)); Inst36++; } } catch(e) {}
  print("Finished with " + error_count + " errors.");
try { if (Inst37 <= 1000 && typeof (quit) != "undefined") {_RecordType("<3128,3132,104>",(quit)); Inst37++; } } catch(e) {}
  quit(1);
}

