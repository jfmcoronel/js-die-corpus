var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2018 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --harmony-global
try { if (Inst0 <= 1000 && typeof (globalThis) != "undefined") {_RecordType("<194,204,5>",(globalThis)); Inst0++; } } catch(e) {}
globalThis;
this;
try { if (Inst1 <= 1000 && typeof (this.globalThis) != "undefined") {_RecordType("<212,227,7>",(this.globalThis)); Inst1++; } } catch(e) {}
this.globalThis;
this;
try { if (Inst2 <= 1000 && typeof (globalThis.globalThis) != "undefined") {_RecordType("<235,256,9>",(globalThis.globalThis)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (globalThis) != "undefined") {_RecordType("<235,245,9>",(globalThis)); Inst3++; } } catch(e) {}
globalThis.globalThis;
this;
try { if (Inst4 <= 1000 && typeof (globalThis.globalThis.globalThis) != "undefined") {_RecordType("<264,296,11>",(globalThis.globalThis.globalThis)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (globalThis.globalThis) != "undefined") {_RecordType("<264,285,11>",(globalThis.globalThis)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (globalThis) != "undefined") {_RecordType("<264,274,11>",(globalThis)); Inst6++; } } catch(e) {}
globalThis.globalThis.globalThis;
this;
try { if (Inst7 <= 1000 && typeof (globalThis.globalThis.globalThis.globalThis) != "undefined") {_RecordType("<304,347,13>",(globalThis.globalThis.globalThis.globalThis)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (globalThis.globalThis.globalThis) != "undefined") {_RecordType("<304,336,13>",(globalThis.globalThis.globalThis)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (globalThis.globalThis) != "undefined") {_RecordType("<304,325,13>",(globalThis.globalThis)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (globalThis) != "undefined") {_RecordType("<304,314,13>",(globalThis)); Inst10++; } } catch(e) {}
globalThis.globalThis.globalThis.globalThis;
this;
{
  ;
}
{
try { if (Inst12 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<386,417,19>",(Object.getOwnPropertyDescriptor)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Object) != "undefined") {_RecordType("<386,392,19>",(Object)); Inst13++; } } catch(e) {}
  const descriptor = Object.getOwnPropertyDescriptor(this, 'globalThis');
try { if (Inst11 <= 1000 && typeof (descriptor) != "undefined") {_RecordType("<373,383,19>",(descriptor)); Inst11++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (descriptor.value) != "undefined") {_RecordType("<441,457,20>",(descriptor.value)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (descriptor) != "undefined") {_RecordType("<441,451,20>",(descriptor)); Inst15++; } } catch(e) {}
  descriptor.value;
  this;
try { if (Inst16 <= 1000 && typeof (descriptor.writable) != "undefined") {_RecordType("<469,488,22>",(descriptor.writable)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (descriptor) != "undefined") {_RecordType("<469,479,22>",(descriptor)); Inst17++; } } catch(e) {}
  descriptor.writable;
  true;
try { if (Inst18 <= 1000 && typeof (descriptor.enumerable) != "undefined") {_RecordType("<500,521,24>",(descriptor.enumerable)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (descriptor) != "undefined") {_RecordType("<500,510,24>",(descriptor)); Inst19++; } } catch(e) {}
  descriptor.enumerable;
  false;
try { if (Inst20 <= 1000 && typeof (descriptor.configurable) != "undefined") {_RecordType("<534,557,26>",(descriptor.configurable)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (descriptor) != "undefined") {_RecordType("<534,544,26>",(descriptor)); Inst21++; } } catch(e) {}
  descriptor.configurable;
  true;
}

