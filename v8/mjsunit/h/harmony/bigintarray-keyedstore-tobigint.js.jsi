var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2018 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
try { if (Inst1 <= 1000 && typeof (BigUint64Array) != "undefined") {_RecordType("<197,211,4>",(BigUint64Array)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (BigInt64Array) != "undefined") {_RecordType("<213,226,4>",(BigInt64Array)); Inst2++; } } catch(e) {}
let TypedArrayConstructors = [BigUint64Array, BigInt64Array]; // Test KeyedStore in uninitialized and monomorphic states.
try { if (Inst0 <= 1000 && typeof (TypedArrayConstructors) != "undefined") {_RecordType("<171,193,4>",(TypedArrayConstructors)); Inst0++; } } catch(e) {}

for (let C of TypedArrayConstructors) {
try { if (Inst3 <= 1000 && typeof (C) != "undefined") {_RecordType("<299,300,6>",(C)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (TypedArrayConstructors) != "undefined") {_RecordType("<304,326,6>",(TypedArrayConstructors)); Inst4++; } } catch(e) {}
  let keyedSta = function (array) {
try { if (Inst6 <= 1000 && typeof (array) != "undefined") {_RecordType("<357,362,7>",(array)); Inst6++; } } catch(e) {}
    var didRun = false;
try { if (Inst7 <= 1000 && typeof (didRun) != "undefined") {_RecordType("<374,380,8>",(didRun)); Inst7++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (valueOf) != "undefined") {_RecordType("<413,420,10>",(valueOf)); Inst10++; } } catch(e) {}
    array[0] = {
      valueOf() {
        didRun = true;
try { if (Inst11 <= 1000 && typeof (didRun) != "undefined") {_RecordType("<433,439,11>",(didRun)); Inst11++; } } catch(e) {}
        return 42;
      }

    };
try { if (Inst8 <= 1000 && typeof (array[0]) != "undefined") {_RecordType("<394,402,9>",(array[0])); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (array) != "undefined") {_RecordType("<394,399,9>",(array)); Inst9++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (didRun) != "undefined") {_RecordType("<502,508,17>",(didRun)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (array) != "undefined") {_RecordType("<516,521,18>",(array)); Inst13++; } } catch(e) {}
    return {
      didRun,
      array
    };
  };
try { if (Inst5 <= 1000 && typeof (keyedSta) != "undefined") {_RecordType("<336,344,7>",(keyedSta)); Inst5++; } } catch(e) {}

  for (var i = 0; i < 3; ++i) {
try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<546,547,22>",(i)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<553,554,22>",(i)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<562,563,22>",(i)); Inst16++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (keyedSta) != "undefined") {_RecordType("<611,619,26>",(keyedSta)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (C) != "undefined") {_RecordType("<624,625,26>",(C)); Inst20++; } } catch(e) {}
    var {
      didRun,
      array
    } = keyedSta(new C(1));
try { if (Inst17 <= 1000 && typeof (didRun) != "undefined") {_RecordType("<583,589,24>",(didRun)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (array) != "undefined") {_RecordType("<597,602,25>",(array)); Inst18++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (didRun) != "undefined") {_RecordType("<635,641,27>",(didRun)); Inst21++; } } catch(e) {}
    didRun;
try { if (Inst22 <= 1000 && typeof (array[0]) != "undefined") {_RecordType("<647,655,28>",(array[0])); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (array) != "undefined") {_RecordType("<647,652,28>",(array)); Inst23++; } } catch(e) {}
    array[0];
    42;
    // OOB store
    // FIXME: Throw a TypeError when storing OOB in a TypedArray.
try { if (Inst25 <= 1000 && typeof (keyedSta) != "undefined") {_RecordType("<779,787,34>",(keyedSta)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (C) != "undefined") {_RecordType("<792,793,34>",(C)); Inst26++; } } catch(e) {}
    var {
      didRun
    } = keyedSta(new C());
try { if (Inst24 <= 1000 && typeof (didRun) != "undefined") {_RecordType("<764,770,33>",(didRun)); Inst24++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (didRun) != "undefined") {_RecordType("<802,808,35>",(didRun)); Inst27++; } } catch(e) {}
    didRun;
  }
} // Test KeyedStore in polymorphic and megamorphic states.


do {
  let keyedSta = function (array) {
try { if (Inst29 <= 1000 && typeof (array) != "undefined") {_RecordType("<908,913,41>",(array)); Inst29++; } } catch(e) {}
    var didRun = false;
try { if (Inst30 <= 1000 && typeof (didRun) != "undefined") {_RecordType("<925,931,42>",(didRun)); Inst30++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (valueOf) != "undefined") {_RecordType("<964,971,44>",(valueOf)); Inst33++; } } catch(e) {}
    array[0] = {
      valueOf() {
        didRun = true;
try { if (Inst34 <= 1000 && typeof (didRun) != "undefined") {_RecordType("<984,990,45>",(didRun)); Inst34++; } } catch(e) {}
        return 42;
      }

    };
try { if (Inst31 <= 1000 && typeof (array[0]) != "undefined") {_RecordType("<945,953,43>",(array[0])); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (array) != "undefined") {_RecordType("<945,950,43>",(array)); Inst32++; } } catch(e) {}
try { if (Inst35 <= 1000 && typeof (didRun) != "undefined") {_RecordType("<1053,1059,51>",(didRun)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (array) != "undefined") {_RecordType("<1067,1072,52>",(array)); Inst36++; } } catch(e) {}
    return {
      didRun,
      array
    };
  };
try { if (Inst28 <= 1000 && typeof (keyedSta) != "undefined") {_RecordType("<887,895,41>",(keyedSta)); Inst28++; } } catch(e) {}

  for (var i = 0; i < 3; ++i) {
try { if (Inst37 <= 1000 && typeof (i) != "undefined") {_RecordType("<1097,1098,56>",(i)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (i) != "undefined") {_RecordType("<1104,1105,56>",(i)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (i) != "undefined") {_RecordType("<1113,1114,56>",(i)); Inst39++; } } catch(e) {}
    for (var C of TypedArrayConstructors) {
try { if (Inst40 <= 1000 && typeof (C) != "undefined") {_RecordType("<1131,1132,57>",(C)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (TypedArrayConstructors) != "undefined") {_RecordType("<1136,1158,57>",(TypedArrayConstructors)); Inst41++; } } catch(e) {}
try { if (Inst44 <= 1000 && typeof (keyedSta) != "undefined") {_RecordType("<1214,1222,61>",(keyedSta)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (C) != "undefined") {_RecordType("<1227,1228,61>",(C)); Inst45++; } } catch(e) {}
      var {
        didRun,
        array
      } = keyedSta(new C(1));
try { if (Inst42 <= 1000 && typeof (didRun) != "undefined") {_RecordType("<1182,1188,59>",(didRun)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (array) != "undefined") {_RecordType("<1198,1203,60>",(array)); Inst43++; } } catch(e) {}
try { if (Inst46 <= 1000 && typeof (didRun) != "undefined") {_RecordType("<1240,1246,62>",(didRun)); Inst46++; } } catch(e) {}
      didRun;
try { if (Inst47 <= 1000 && typeof (array[0]) != "undefined") {_RecordType("<1254,1262,63>",(array[0])); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (array) != "undefined") {_RecordType("<1254,1259,63>",(array)); Inst48++; } } catch(e) {}
      array[0];
      42;
      // OOB store
      // FIXME: Throw a TypeError when storing OOB in a TypedArray.
try { if (Inst50 <= 1000 && typeof (keyedSta) != "undefined") {_RecordType("<1398,1406,69>",(keyedSta)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (C) != "undefined") {_RecordType("<1411,1412,69>",(C)); Inst51++; } } catch(e) {}
      var {
        didRun
      } = keyedSta(new C());
try { if (Inst49 <= 1000 && typeof (didRun) != "undefined") {_RecordType("<1381,1387,68>",(didRun)); Inst49++; } } catch(e) {}
try { if (Inst52 <= 1000 && typeof (didRun) != "undefined") {_RecordType("<1423,1429,70>",(didRun)); Inst52++; } } catch(e) {}
      didRun;
    }
  }
} while (false);

