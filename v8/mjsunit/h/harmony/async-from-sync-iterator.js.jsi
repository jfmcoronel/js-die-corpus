var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
var Inst102 = 0;
var Inst103 = 0;
var Inst104 = 0;
var Inst105 = 0;
var Inst106 = 0;
var Inst107 = 0;
var Inst108 = 0;
var Inst109 = 0;
var Inst110 = 0;
var Inst111 = 0;
var Inst112 = 0;
var Inst113 = 0;
var Inst114 = 0;
var Inst115 = 0;
var Inst116 = 0;
var Inst117 = 0;
var Inst118 = 0;
var Inst119 = 0;
var Inst120 = 0;
var Inst121 = 0;
var Inst122 = 0;
var Inst123 = 0;
var Inst124 = 0;
var Inst125 = 0;
var Inst126 = 0;
var Inst127 = 0;
var Inst128 = 0;
var Inst129 = 0;
var Inst130 = 0;
var Inst131 = 0;
var Inst132 = 0;
var Inst133 = 0;
var Inst134 = 0;
var Inst135 = 0;
var Inst136 = 0;
var Inst137 = 0;
var Inst138 = 0;
var Inst139 = 0;
var Inst140 = 0;
var Inst141 = 0;
var Inst142 = 0;
var Inst143 = 0;
var Inst144 = 0;
var Inst145 = 0;
var Inst146 = 0;
var Inst147 = 0;
var Inst148 = 0;
var Inst149 = 0;
var Inst150 = 0;
var Inst151 = 0;
var Inst152 = 0;
var Inst153 = 0;
var Inst154 = 0;
var Inst155 = 0;
var Inst156 = 0;
var Inst157 = 0;
var Inst158 = 0;
var Inst159 = 0;
var Inst160 = 0;
var Inst161 = 0;
var Inst162 = 0;
var Inst163 = 0;
var Inst164 = 0;
var Inst165 = 0;
var Inst166 = 0;
var Inst167 = 0;
var Inst168 = 0;
var Inst169 = 0;
var Inst170 = 0;
var Inst171 = 0;
var Inst172 = 0;
var Inst173 = 0;
var Inst174 = 0;
var Inst175 = 0;
var Inst176 = 0;
var Inst177 = 0;
var Inst178 = 0;
var Inst179 = 0;
var Inst180 = 0;
var Inst181 = 0;
var Inst182 = 0;
var Inst183 = 0;
var Inst184 = 0;
var Inst185 = 0;
var Inst186 = 0;
var Inst187 = 0;
var Inst188 = 0;
var Inst189 = 0;
var Inst190 = 0;
var Inst191 = 0;
var Inst192 = 0;
var Inst193 = 0;
var Inst194 = 0;
var Inst195 = 0;
var Inst196 = 0;
var Inst197 = 0;
var Inst198 = 0;
var Inst199 = 0;
var Inst200 = 0;
var Inst201 = 0;
var Inst202 = 0;
var Inst203 = 0;
var Inst204 = 0;
var Inst205 = 0;
var Inst206 = 0;
var Inst207 = 0;
var Inst208 = 0;
var Inst209 = 0;
var Inst210 = 0;
var Inst211 = 0;
var Inst212 = 0;
var Inst213 = 0;
var Inst214 = 0;
var Inst215 = 0;
var Inst216 = 0;
var Inst217 = 0;
var Inst218 = 0;
var Inst219 = 0;
var Inst220 = 0;
var Inst221 = 0;
var Inst222 = 0;
var Inst223 = 0;
var Inst224 = 0;
var Inst225 = 0;
var Inst226 = 0;
var Inst227 = 0;
var Inst228 = 0;
var Inst229 = 0;
var Inst230 = 0;
var Inst231 = 0;
var Inst232 = 0;
var Inst233 = 0;
var Inst234 = 0;
var Inst235 = 0;
var Inst236 = 0;
var Inst237 = 0;
var Inst238 = 0;
var Inst239 = 0;
var Inst240 = 0;
var Inst241 = 0;
var Inst242 = 0;
var Inst243 = 0;
var Inst244 = 0;
var Inst245 = 0;
var Inst246 = 0;
var Inst247 = 0;
var Inst248 = 0;
var Inst249 = 0;
var Inst250 = 0;
var Inst251 = 0;
var Inst252 = 0;
var Inst253 = 0;
var Inst254 = 0;
var Inst255 = 0;
var Inst256 = 0;
var Inst257 = 0;
var Inst258 = 0;
var Inst259 = 0;
var Inst260 = 0;
var Inst261 = 0;
var Inst262 = 0;
var Inst263 = 0;
var Inst264 = 0;
var Inst265 = 0;
var Inst266 = 0;
var Inst267 = 0;
var Inst268 = 0;
var Inst269 = 0;
var Inst270 = 0;
var Inst271 = 0;
var Inst272 = 0;
var Inst273 = 0;
var Inst274 = 0;
var Inst275 = 0;
var Inst276 = 0;
var Inst277 = 0;
var Inst278 = 0;
var Inst279 = 0;
var Inst280 = 0;
var Inst281 = 0;
var Inst282 = 0;
var Inst283 = 0;
var Inst284 = 0;
var Inst285 = 0;
var Inst286 = 0;
var Inst287 = 0;
var Inst288 = 0;
var Inst289 = 0;
var Inst290 = 0;
var Inst291 = 0;
var Inst292 = 0;
var Inst293 = 0;
var Inst294 = 0;
var Inst295 = 0;
var Inst296 = 0;
var Inst297 = 0;
var Inst298 = 0;
var Inst299 = 0;
var Inst300 = 0;
var Inst301 = 0;
var Inst302 = 0;
var Inst303 = 0;
var Inst304 = 0;
var Inst305 = 0;
var Inst306 = 0;
var Inst307 = 0;
var Inst308 = 0;
var Inst309 = 0;
var Inst310 = 0;
var Inst311 = 0;
var Inst312 = 0;
var Inst313 = 0;
var Inst314 = 0;
var Inst315 = 0;
var Inst316 = 0;
var Inst317 = 0;
var Inst318 = 0;
var Inst319 = 0;
var Inst320 = 0;
var Inst321 = 0;
var Inst322 = 0;
var Inst323 = 0;
var Inst324 = 0;
var Inst325 = 0;
var Inst326 = 0;
var Inst327 = 0;
var Inst328 = 0;
var Inst329 = 0;
var Inst330 = 0;
var Inst331 = 0;
var Inst332 = 0;
var Inst333 = 0;
var Inst334 = 0;
var Inst335 = 0;
var Inst336 = 0;
var Inst337 = 0;
var Inst338 = 0;
var Inst339 = 0;
var Inst340 = 0;
var Inst341 = 0;
var Inst342 = 0;
var Inst343 = 0;
var Inst344 = 0;
var Inst345 = 0;
var Inst346 = 0;
var Inst347 = 0;
var Inst348 = 0;
var Inst349 = 0;
var Inst350 = 0;
var Inst351 = 0;
var Inst352 = 0;
var Inst353 = 0;
var Inst354 = 0;
var Inst355 = 0;
var Inst356 = 0;
var Inst357 = 0;
var Inst358 = 0;
var Inst359 = 0;
var Inst360 = 0;
var Inst361 = 0;
var Inst362 = 0;
var Inst363 = 0;
var Inst364 = 0;
var Inst365 = 0;
var Inst366 = 0;
var Inst367 = 0;
var Inst368 = 0;
var Inst369 = 0;
var Inst370 = 0;
var Inst371 = 0;
var Inst372 = 0;
var Inst373 = 0;
var Inst374 = 0;
var Inst375 = 0;
var Inst376 = 0;
var Inst377 = 0;
var Inst378 = 0;
var Inst379 = 0;
var Inst380 = 0;
var Inst381 = 0;
var Inst382 = 0;
var Inst383 = 0;
var Inst384 = 0;
var Inst385 = 0;
var Inst386 = 0;
var Inst387 = 0;
var Inst388 = 0;
var Inst389 = 0;
var Inst390 = 0;
var Inst391 = 0;
var Inst392 = 0;
var Inst393 = 0;
var Inst394 = 0;
var Inst395 = 0;
var Inst396 = 0;
var Inst397 = 0;
var Inst398 = 0;
var Inst399 = 0;
var Inst400 = 0;
var Inst401 = 0;
var Inst402 = 0;
var Inst403 = 0;
var Inst404 = 0;
var Inst405 = 0;
var Inst406 = 0;
var Inst407 = 0;
var Inst408 = 0;
var Inst409 = 0;
var Inst410 = 0;
var Inst411 = 0;
var Inst412 = 0;
var Inst413 = 0;
var Inst414 = 0;
var Inst415 = 0;
var Inst416 = 0;
var Inst417 = 0;
var Inst418 = 0;
var Inst419 = 0;
var Inst420 = 0;
var Inst421 = 0;
var Inst422 = 0;
var Inst423 = 0;
var Inst424 = 0;
var Inst425 = 0;
var Inst426 = 0;
var Inst427 = 0;
var Inst428 = 0;
var Inst429 = 0;
var Inst430 = 0;
var Inst431 = 0;
var Inst432 = 0;
var Inst433 = 0;
var Inst434 = 0;
var Inst435 = 0;
var Inst436 = 0;
var Inst437 = 0;
var Inst438 = 0;
var Inst439 = 0;
var Inst440 = 0;
var Inst441 = 0;
var Inst442 = 0;
var Inst443 = 0;
var Inst444 = 0;
var Inst445 = 0;
var Inst446 = 0;
var Inst447 = 0;
var Inst448 = 0;
var Inst449 = 0;
var Inst450 = 0;
var Inst451 = 0;
var Inst452 = 0;
var Inst453 = 0;
var Inst454 = 0;
var Inst455 = 0;
var Inst456 = 0;
var Inst457 = 0;
var Inst458 = 0;
var Inst459 = 0;
var Inst460 = 0;
var Inst461 = 0;
var Inst462 = 0;
var Inst463 = 0;
var Inst464 = 0;
var Inst465 = 0;
var Inst466 = 0;
var Inst467 = 0;
var Inst468 = 0;
var Inst469 = 0;
var Inst470 = 0;
var Inst471 = 0;
var Inst472 = 0;
var Inst473 = 0;
var Inst474 = 0;
var Inst475 = 0;
var Inst476 = 0;
var Inst477 = 0;
var Inst478 = 0;
var Inst479 = 0;
var Inst480 = 0;
var Inst481 = 0;
var Inst482 = 0;
var Inst483 = 0;
var Inst484 = 0;
var Inst485 = 0;
var Inst486 = 0;
var Inst487 = 0;
var Inst488 = 0;
var Inst489 = 0;
var Inst490 = 0;
var Inst491 = 0;
var Inst492 = 0;
var Inst493 = 0;
var Inst494 = 0;
var Inst495 = 0;
var Inst496 = 0;
var Inst497 = 0;
var Inst498 = 0;
var Inst499 = 0;
var Inst500 = 0;
var Inst501 = 0;
var Inst502 = 0;
var Inst503 = 0;
var Inst504 = 0;
var Inst505 = 0;
var Inst506 = 0;
var Inst507 = 0;
var Inst508 = 0;
var Inst509 = 0;
var Inst510 = 0;
var Inst511 = 0;
var Inst512 = 0;
var Inst513 = 0;
var Inst514 = 0;
var Inst515 = 0;
var Inst516 = 0;
var Inst517 = 0;
var Inst518 = 0;
var Inst519 = 0;
var Inst520 = 0;
var Inst521 = 0;
var Inst522 = 0;
var Inst523 = 0;
var Inst524 = 0;
var Inst525 = 0;
var Inst526 = 0;
var Inst527 = 0;
var Inst528 = 0;
var Inst529 = 0;
var Inst530 = 0;
var Inst531 = 0;
var Inst532 = 0;
var Inst533 = 0;
var Inst534 = 0;
var Inst535 = 0;
var Inst536 = 0;
var Inst537 = 0;
var Inst538 = 0;
var Inst539 = 0;
var Inst540 = 0;
var Inst541 = 0;
var Inst542 = 0;
var Inst543 = 0;
var Inst544 = 0;
var Inst545 = 0;
var Inst546 = 0;
var Inst547 = 0;
var Inst548 = 0;
var Inst549 = 0;
var Inst550 = 0;
var Inst551 = 0;
var Inst552 = 0;
var Inst553 = 0;
var Inst554 = 0;
var Inst555 = 0;
var Inst556 = 0;
var Inst557 = 0;
var Inst558 = 0;
var Inst559 = 0;
var Inst560 = 0;
var Inst561 = 0;
var Inst562 = 0;
var Inst563 = 0;
var Inst564 = 0;
var Inst565 = 0;
var Inst566 = 0;
var Inst567 = 0;
var Inst568 = 0;
var Inst569 = 0;
var Inst570 = 0;
var Inst571 = 0;
var Inst572 = 0;
var Inst573 = 0;
var Inst574 = 0;
var Inst575 = 0;
var Inst576 = 0;
var Inst577 = 0;
var Inst578 = 0;
var Inst579 = 0;
var Inst580 = 0;
var Inst581 = 0;
var Inst582 = 0;
var Inst583 = 0;
var Inst584 = 0;
var Inst585 = 0;
var Inst586 = 0;
var Inst587 = 0;
var Inst588 = 0;
var Inst589 = 0;
var Inst590 = 0;
var Inst591 = 0;
var Inst592 = 0;
var Inst593 = 0;
var Inst594 = 0;
var Inst595 = 0;
var Inst596 = 0;
var Inst597 = 0;
var Inst598 = 0;
var Inst599 = 0;
var Inst600 = 0;
var Inst601 = 0;
var Inst602 = 0;
var Inst603 = 0;
var Inst604 = 0;
var Inst605 = 0;
var Inst606 = 0;
var Inst607 = 0;
var Inst608 = 0;
var Inst609 = 0;
var Inst610 = 0;
var Inst611 = 0;
var Inst612 = 0;
var Inst613 = 0;
var Inst614 = 0;
var Inst615 = 0;
var Inst616 = 0;
var Inst617 = 0;
var Inst618 = 0;
var Inst619 = 0;
var Inst620 = 0;
var Inst621 = 0;
var Inst622 = 0;
var Inst623 = 0;
var Inst624 = 0;
var Inst625 = 0;
var Inst626 = 0;
var Inst627 = 0;
var Inst628 = 0;
var Inst629 = 0;
var Inst630 = 0;
var Inst631 = 0;
var Inst632 = 0;
var Inst633 = 0;
var Inst634 = 0;
var Inst635 = 0;
var Inst636 = 0;
var Inst637 = 0;
var Inst638 = 0;
var Inst639 = 0;
var Inst640 = 0;
var Inst641 = 0;
var Inst642 = 0;
var Inst643 = 0;
var Inst644 = 0;
var Inst645 = 0;
var Inst646 = 0;
var Inst647 = 0;
var Inst648 = 0;
var Inst649 = 0;
var Inst650 = 0;
var Inst651 = 0;
var Inst652 = 0;
var Inst653 = 0;
var Inst654 = 0;
var Inst655 = 0;
var Inst656 = 0;
var Inst657 = 0;
var Inst658 = 0;
var Inst659 = 0;
var Inst660 = 0;
var Inst661 = 0;
var Inst662 = 0;
var Inst663 = 0;
var Inst664 = 0;
var Inst665 = 0;
var Inst666 = 0;
var Inst667 = 0;
var Inst668 = 0;
var Inst669 = 0;
var Inst670 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2017 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax
let testFailed = false;
try { if (Inst0 <= 1000 && typeof (testFailed) != "undefined") {_RecordType("<204,214,5>",(testFailed)); Inst0++; } } catch(e) {}
let testFailure;
try { if (Inst1 <= 1000 && typeof (testFailure) != "undefined") {_RecordType("<228,239,6>",(testFailure)); Inst1++; } } catch(e) {}

try { if (Inst2 <= 1000 && typeof (assertThrowsAsync) != "undefined") {_RecordType("<251,268,8>",(assertThrowsAsync)); Inst2++; } } catch(e) {}
function assertThrowsAsync(run, errorType, message) {
try { if (Inst3 <= 1000 && typeof (run) != "undefined") {_RecordType("<269,272,8>",(run)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (errorType) != "undefined") {_RecordType("<274,283,8>",(errorType)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (message) != "undefined") {_RecordType("<285,292,8>",(message)); Inst5++; } } catch(e) {}
  var actual;
try { if (Inst6 <= 1000 && typeof (actual) != "undefined") {_RecordType("<302,308,9>",(actual)); Inst6++; } } catch(e) {}
  var hadValue = false;
try { if (Inst7 <= 1000 && typeof (hadValue) != "undefined") {_RecordType("<316,324,10>",(hadValue)); Inst7++; } } catch(e) {}
  var hadError = false;
try { if (Inst8 <= 1000 && typeof (hadError) != "undefined") {_RecordType("<340,348,11>",(hadError)); Inst8++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (run) != "undefined") {_RecordType("<374,377,12>",(run)); Inst10++; } } catch(e) {}
  var promise = run();
try { if (Inst9 <= 1000 && typeof (promise) != "undefined") {_RecordType("<364,371,12>",(promise)); Inst9++; } } catch(e) {}

try { if (Inst11 <= 1000 && typeof (promise) != "undefined") {_RecordType("<395,402,14>",(promise)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (promise.then) != "undefined") {_RecordType("<426,438,14>",(promise.then)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (promise) != "undefined") {_RecordType("<426,433,14>",(promise)); Inst13++; } } catch(e) {}
  if (typeof promise !== "object" || typeof promise.then !== "function") {
try { if (Inst14 <= 1000 && typeof (MjsUnitAssertionError) != "undefined") {_RecordType("<471,492,15>",(MjsUnitAssertionError)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (run.toString) != "undefined") {_RecordType("<507,519,15>",(run.toString)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (run) != "undefined") {_RecordType("<507,510,15>",(run)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (PrettyPrint) != "undefined") {_RecordType("<567,578,15>",(PrettyPrint)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (promise) != "undefined") {_RecordType("<579,586,15>",(promise)); Inst18++; } } catch(e) {}
    throw new MjsUnitAssertionError("Expected " + run.toString() + " to return a Promise, but it returned " + PrettyPrint(promise));
  }

try { if (Inst19 <= 1000 && typeof (promise.then) != "undefined") {_RecordType("<597,609,18>",(promise.then)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (promise) != "undefined") {_RecordType("<597,604,18>",(promise)); Inst20++; } } catch(e) {}
  promise.then(function (value) {
try { if (Inst21 <= 1000 && typeof (value) != "undefined") {_RecordType("<620,625,18>",(value)); Inst21++; } } catch(e) {}
    hadValue = true;
try { if (Inst22 <= 1000 && typeof (hadValue) != "undefined") {_RecordType("<633,641,19>",(hadValue)); Inst22++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (value) != "undefined") {_RecordType("<663,668,20>",(value)); Inst24++; } } catch(e) {}
    actual = value;
try { if (Inst23 <= 1000 && typeof (actual) != "undefined") {_RecordType("<654,660,20>",(actual)); Inst23++; } } catch(e) {}
  }, function (error) {
try { if (Inst25 <= 1000 && typeof (error) != "undefined") {_RecordType("<685,690,21>",(error)); Inst25++; } } catch(e) {}
    hadError = true;
try { if (Inst26 <= 1000 && typeof (hadError) != "undefined") {_RecordType("<698,706,22>",(hadError)); Inst26++; } } catch(e) {}
try { if (Inst28 <= 1000 && typeof (error) != "undefined") {_RecordType("<728,733,23>",(error)); Inst28++; } } catch(e) {}
    actual = error;
try { if (Inst27 <= 1000 && typeof (actual) != "undefined") {_RecordType("<719,725,23>",(actual)); Inst27++; } } catch(e) {}
  });
try { if (Inst29 <= 1000 && typeof (hadValue) != "undefined") {_RecordType("<743,751,25>",(hadValue)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (hadError) != "undefined") {_RecordType("<755,763,25>",(hadError)); Inst30++; } } catch(e) {}
  hadValue || hadError;

try { if (Inst31 <= 1000 && typeof (hadError) != "undefined") {_RecordType("<773,781,27>",(hadError)); Inst31++; } } catch(e) {}
  if (!hadError) {
try { if (Inst32 <= 1000 && typeof (MjsUnitAssertionError) != "undefined") {_RecordType("<799,820,28>",(MjsUnitAssertionError)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (run) != "undefined") {_RecordType("<835,838,28>",(run)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (errorType.name) != "undefined") {_RecordType("<858,872,28>",(errorType.name)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (errorType) != "undefined") {_RecordType("<858,867,28>",(errorType)); Inst35++; } } catch(e) {}
    throw new MjsUnitAssertionError("Expected " + run + "() to throw " + errorType.name + ", but did not throw.");
  }

try { if (Inst36 <= 1000 && typeof (actual) != "undefined") {_RecordType("<913,919,31>",(actual)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (errorType) != "undefined") {_RecordType("<931,940,31>",(errorType)); Inst37++; } } catch(e) {}
  if (!(actual instanceof errorType)) {
try { if (Inst38 <= 1000 && typeof (MjsUnitAssertionError) != "undefined") {_RecordType("<959,980,32>",(MjsUnitAssertionError)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (run) != "undefined") {_RecordType("<995,998,32>",(run)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (errorType.name) != "undefined") {_RecordType("<1018,1032,32>",(errorType.name)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (errorType) != "undefined") {_RecordType("<1018,1027,32>",(errorType)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1053,1059,32>",(actual)); Inst42++; } } catch(e) {}
    throw new MjsUnitAssertionError("Expected " + run + "() to throw " + errorType.name + ", but threw '" + actual + "'");
  }

try { if (Inst43 <= 1000 && typeof (message) != "undefined") {_RecordType("<1079,1086,35>",(message)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (actual.message) != "undefined") {_RecordType("<1101,1115,35>",(actual.message)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1101,1107,35>",(actual)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (message) != "undefined") {_RecordType("<1120,1127,35>",(message)); Inst46++; } } catch(e) {}
  if (message !== void 0 && actual.message !== message) {
try { if (Inst47 <= 1000 && typeof (MjsUnitAssertionError) != "undefined") {_RecordType("<1145,1166,36>",(MjsUnitAssertionError)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (run) != "undefined") {_RecordType("<1181,1184,36>",(run)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (message) != "undefined") {_RecordType("<1205,1212,36>",(message)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (actual.message) != "undefined") {_RecordType("<1234,1248,36>",(actual.message)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1234,1240,36>",(actual)); Inst51++; } } catch(e) {}
    throw new MjsUnitAssertionError("Expected " + run + "() to throw '" + message + "', but threw '" + actual.message + "'");
  }
}

;

try { if (Inst52 <= 1000 && typeof (resolveLater) != "undefined") {_RecordType("<1276,1288,42>",(resolveLater)); Inst52++; } } catch(e) {}
function resolveLater(value) {
try { if (Inst53 <= 1000 && typeof (value) != "undefined") {_RecordType("<1289,1294,42>",(value)); Inst53++; } } catch(e) {}
try { if (Inst54 <= 1000 && typeof (Promise) != "undefined") {_RecordType("<1311,1318,43>",(Promise)); Inst54++; } } catch(e) {}
  return new Promise(function (resolve) {
try { if (Inst55 <= 1000 && typeof (resolve) != "undefined") {_RecordType("<1329,1336,43>",(resolve)); Inst55++; } } catch(e) {}
try { if (Inst56 <= 1000 && typeof (Promise.resolve().then) != "undefined") {_RecordType("<1344,1366,44>",(Promise.resolve().then)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (Promise.resolve) != "undefined") {_RecordType("<1344,1359,44>",(Promise.resolve)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (Promise) != "undefined") {_RecordType("<1344,1351,44>",(Promise)); Inst58++; } } catch(e) {}
    Promise.resolve().then(function () {
try { if (Inst59 <= 1000 && typeof (resolve) != "undefined") {_RecordType("<1387,1394,45>",(resolve)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (value) != "undefined") {_RecordType("<1395,1400,45>",(value)); Inst60++; } } catch(e) {}
      resolve(value);
    });
  });
}

try { if (Inst61 <= 1000 && typeof (rejectLater) != "undefined") {_RecordType("<1429,1440,50>",(rejectLater)); Inst61++; } } catch(e) {}
function rejectLater(value) {
try { if (Inst62 <= 1000 && typeof (value) != "undefined") {_RecordType("<1441,1446,50>",(value)); Inst62++; } } catch(e) {}
try { if (Inst63 <= 1000 && typeof (Promise) != "undefined") {_RecordType("<1463,1470,51>",(Promise)); Inst63++; } } catch(e) {}
  return new Promise(function (resolve, reject) {
try { if (Inst64 <= 1000 && typeof (resolve) != "undefined") {_RecordType("<1481,1488,51>",(resolve)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (reject) != "undefined") {_RecordType("<1490,1496,51>",(reject)); Inst65++; } } catch(e) {}
try { if (Inst66 <= 1000 && typeof (Promise.resolve().then) != "undefined") {_RecordType("<1504,1526,52>",(Promise.resolve().then)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (Promise.resolve) != "undefined") {_RecordType("<1504,1519,52>",(Promise.resolve)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (Promise) != "undefined") {_RecordType("<1504,1511,52>",(Promise)); Inst68++; } } catch(e) {}
    Promise.resolve().then(function () {
try { if (Inst69 <= 1000 && typeof (reject) != "undefined") {_RecordType("<1547,1553,53>",(reject)); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (value) != "undefined") {_RecordType("<1554,1559,53>",(value)); Inst70++; } } catch(e) {}
      reject(value);
    });
  });
}

const kNext = 1;
try { if (Inst71 <= 1000 && typeof (kNext) != "undefined") {_RecordType("<1585,1590,58>",(kNext)); Inst71++; } } catch(e) {}
const kThrow = 2;
try { if (Inst72 <= 1000 && typeof (kThrow) != "undefined") {_RecordType("<1602,1608,59>",(kThrow)); Inst72++; } } catch(e) {}
const kReturn = 4;
try { if (Inst73 <= 1000 && typeof (kReturn) != "undefined") {_RecordType("<1620,1627,60>",(kReturn)); Inst73++; } } catch(e) {}
try { if (Inst75 <= 1000 && typeof (kNext) != "undefined") {_RecordType("<1653,1658,61>",(kNext)); Inst75++; } } catch(e) {}
const kNextThrows = kNext | 8;
try { if (Inst74 <= 1000 && typeof (kNextThrows) != "undefined") {_RecordType("<1639,1650,61>",(kNextThrows)); Inst74++; } } catch(e) {}
try { if (Inst77 <= 1000 && typeof (kReturn) != "undefined") {_RecordType("<1686,1693,62>",(kReturn)); Inst77++; } } catch(e) {}
const kReturnThrows = kReturn | 16;
try { if (Inst76 <= 1000 && typeof (kReturnThrows) != "undefined") {_RecordType("<1670,1683,62>",(kReturnThrows)); Inst76++; } } catch(e) {}
try { if (Inst79 <= 1000 && typeof (kThrow) != "undefined") {_RecordType("<1721,1727,63>",(kThrow)); Inst79++; } } catch(e) {}
const kThrowNormal = kThrow | 32;
try { if (Inst78 <= 1000 && typeof (kThrowNormal) != "undefined") {_RecordType("<1706,1718,63>",(kThrowNormal)); Inst78++; } } catch(e) {}
try { if (Inst81 <= 1000 && typeof (kNext) != "undefined") {_RecordType("<1757,1762,64>",(kNext)); Inst81++; } } catch(e) {}
const kNextUnchanged = kNext | 64;
try { if (Inst80 <= 1000 && typeof (kNextUnchanged) != "undefined") {_RecordType("<1740,1754,64>",(kNextUnchanged)); Inst80++; } } catch(e) {}
try { if (Inst83 <= 1000 && typeof (kReturn) != "undefined") {_RecordType("<1794,1801,65>",(kReturn)); Inst83++; } } catch(e) {}
const kReturnUnchanged = kReturn | 128;
try { if (Inst82 <= 1000 && typeof (kReturnUnchanged) != "undefined") {_RecordType("<1775,1791,65>",(kReturnUnchanged)); Inst82++; } } catch(e) {}
try { if (Inst85 <= 1000 && typeof (kThrow) != "undefined") {_RecordType("<1833,1839,66>",(kThrow)); Inst85++; } } catch(e) {}
const kThrowUnchanged = kThrow | 256;
try { if (Inst84 <= 1000 && typeof (kThrowUnchanged) != "undefined") {_RecordType("<1815,1830,66>",(kThrowUnchanged)); Inst84++; } } catch(e) {}

try { if (Inst86 <= 1000 && typeof (sync) != "undefined") {_RecordType("<1857,1861,68>",(sync)); Inst86++; } } catch(e) {}
function sync(array, features, log) {
try { if (Inst87 <= 1000 && typeof (array) != "undefined") {_RecordType("<1862,1867,68>",(array)); Inst87++; } } catch(e) {}try { if (Inst88 <= 1000 && typeof (features) != "undefined") {_RecordType("<1869,1877,68>",(features)); Inst88++; } } catch(e) {}try { if (Inst89 <= 1000 && typeof (log) != "undefined") {_RecordType("<1879,1882,68>",(log)); Inst89++; } } catch(e) {}
  // `log` is a required parameter
try { if (Inst90 <= 1000 && typeof (log) != "undefined") {_RecordType("<1927,1930,70>",(log)); Inst90++; } } catch(e) {}
  if (log === void 0) {
try { if (Inst91 <= 1000 && typeof (print) != "undefined") {_RecordType("<1949,1954,71>",(print)); Inst91++; } } catch(e) {}
    print("`log` is undefined");
  }

  let i = 0;
try { if (Inst92 <= 1000 && typeof (i) != "undefined") {_RecordType("<1989,1990,74>",(i)); Inst92++; } } catch(e) {}
try { if (Inst94 <= 1000 && typeof (next) != "undefined") {_RecordType("<2018,2022,76>",(next)); Inst94++; } } catch(e) {}try { if (Inst95 <= 1000 && typeof (sent) != "undefined") {_RecordType("<2023,2027,76>",(sent)); Inst95++; } } catch(e) {}try { if (Inst119 <= 1000 && typeof (sent) != "undefined") {_RecordType("<2443,2447,101>",(sent)); Inst119++; } } catch(e) {}try { if (Inst138 <= 1000 && typeof (sent) != "undefined") {_RecordType("<2827,2831,123>",(sent)); Inst138++; } } catch(e) {}
  let methods = {
    next(sent) {
try { if (Inst97 <= 1000 && typeof (i) != "undefined") {_RecordType("<2048,2049,77>",(i)); Inst97++; } } catch(e) {}try { if (Inst98 <= 1000 && typeof (array.length) != "undefined") {_RecordType("<2053,2065,77>",(array.length)); Inst98++; } } catch(e) {}try { if (Inst99 <= 1000 && typeof (array) != "undefined") {_RecordType("<2053,2058,77>",(array)); Inst99++; } } catch(e) {}
      let done = i >= array.length;
try { if (Inst96 <= 1000 && typeof (done) != "undefined") {_RecordType("<2041,2045,77>",(done)); Inst96++; } } catch(e) {}
try { if (Inst101 <= 1000 && typeof (array[i]) != "undefined") {_RecordType("<2085,2093,78>",(array[i])); Inst101++; } } catch(e) {}try { if (Inst102 <= 1000 && typeof (array) != "undefined") {_RecordType("<2085,2090,78>",(array)); Inst102++; } } catch(e) {}
      let value = array[i];
try { if (Inst100 <= 1000 && typeof (value) != "undefined") {_RecordType("<2077,2082,78>",(value)); Inst100++; } } catch(e) {}
try { if (Inst103 <= 1000 && typeof (log.push) != "undefined") {_RecordType("<2101,2109,79>",(log.push)); Inst103++; } } catch(e) {}try { if (Inst104 <= 1000 && typeof (log) != "undefined") {_RecordType("<2101,2104,79>",(log)); Inst104++; } } catch(e) {}try { if (Inst105 <= 1000 && typeof (sent) != "undefined") {_RecordType("<2144,2148,81>",(sent)); Inst105++; } } catch(e) {}try { if (Inst106 <= 1000 && typeof (value) != "undefined") {_RecordType("<2158,2163,82>",(value)); Inst106++; } } catch(e) {}try { if (Inst107 <= 1000 && typeof (done) != "undefined") {_RecordType("<2173,2177,83>",(done)); Inst107++; } } catch(e) {}
      log.push({
        method: "next",
        sent,
        value,
        done
      });

try { if (Inst108 <= 1000 && typeof (features) != "undefined") {_RecordType("<2200,2208,86>",(features)); Inst108++; } } catch(e) {}try { if (Inst109 <= 1000 && typeof (kNextThrows) != "undefined") {_RecordType("<2211,2222,86>",(kNextThrows)); Inst109++; } } catch(e) {}try { if (Inst110 <= 1000 && typeof (kNextThrows) != "undefined") {_RecordType("<2228,2239,86>",(kNextThrows)); Inst110++; } } catch(e) {}
      if ((features & kNextThrows) === kNextThrows) {
try { if (Inst111 <= 1000 && typeof (sent) != "undefined") {_RecordType("<2257,2261,87>",(sent)); Inst111++; } } catch(e) {}
        throw sent;
      }

try { if (Inst112 <= 1000 && typeof (features) != "undefined") {_RecordType("<2283,2291,90>",(features)); Inst112++; } } catch(e) {}try { if (Inst113 <= 1000 && typeof (kNextUnchanged) != "undefined") {_RecordType("<2294,2308,90>",(kNextUnchanged)); Inst113++; } } catch(e) {}try { if (Inst114 <= 1000 && typeof (kNextUnchanged) != "undefined") {_RecordType("<2314,2328,90>",(kNextUnchanged)); Inst114++; } } catch(e) {}
      if ((features & kNextUnchanged) === kNextUnchanged) {
try { if (Inst115 <= 1000 && typeof (sent) != "undefined") {_RecordType("<2347,2351,91>",(sent)); Inst115++; } } catch(e) {}
        return sent;
      }

try { if (Inst116 <= 1000 && typeof (i) != "undefined") {_RecordType("<2368,2369,94>",(i)); Inst116++; } } catch(e) {}
      i++;
try { if (Inst117 <= 1000 && typeof (value) != "undefined") {_RecordType("<2396,2401,96>",(value)); Inst117++; } } catch(e) {}try { if (Inst118 <= 1000 && typeof (done) != "undefined") {_RecordType("<2411,2415,97>",(done)); Inst118++; } } catch(e) {}
      return {
        value,
        done
      };
    },

    throw(sent) {
try { if (Inst121 <= 1000 && typeof (i) != "undefined") {_RecordType("<2468,2469,102>",(i)); Inst121++; } } catch(e) {}try { if (Inst122 <= 1000 && typeof (array.length) != "undefined") {_RecordType("<2473,2485,102>",(array.length)); Inst122++; } } catch(e) {}try { if (Inst123 <= 1000 && typeof (array) != "undefined") {_RecordType("<2473,2478,102>",(array)); Inst123++; } } catch(e) {}
      let done = i >= array.length;
try { if (Inst120 <= 1000 && typeof (done) != "undefined") {_RecordType("<2461,2465,102>",(done)); Inst120++; } } catch(e) {}
try { if (Inst124 <= 1000 && typeof (log.push) != "undefined") {_RecordType("<2493,2501,103>",(log.push)); Inst124++; } } catch(e) {}try { if (Inst125 <= 1000 && typeof (log) != "undefined") {_RecordType("<2493,2496,103>",(log)); Inst125++; } } catch(e) {}try { if (Inst126 <= 1000 && typeof (sent) != "undefined") {_RecordType("<2537,2541,105>",(sent)); Inst126++; } } catch(e) {}try { if (Inst127 <= 1000 && typeof (done) != "undefined") {_RecordType("<2551,2555,106>",(done)); Inst127++; } } catch(e) {}
      log.push({
        method: "throw",
        sent,
        done
      });

try { if (Inst128 <= 1000 && typeof (features) != "undefined") {_RecordType("<2578,2586,109>",(features)); Inst128++; } } catch(e) {}try { if (Inst129 <= 1000 && typeof (kThrowNormal) != "undefined") {_RecordType("<2589,2601,109>",(kThrowNormal)); Inst129++; } } catch(e) {}try { if (Inst130 <= 1000 && typeof (kThrowNormal) != "undefined") {_RecordType("<2607,2619,109>",(kThrowNormal)); Inst130++; } } catch(e) {}
      if ((features & kThrowNormal) === kThrowNormal) {
try { if (Inst131 <= 1000 && typeof (sent) != "undefined") {_RecordType("<2657,2661,111>",(sent)); Inst131++; } } catch(e) {}try { if (Inst132 <= 1000 && typeof (done) != "undefined") {_RecordType("<2673,2677,112>",(done)); Inst132++; } } catch(e) {}
        return {
          value: sent,
          done
        };
      }

try { if (Inst133 <= 1000 && typeof (features) != "undefined") {_RecordType("<2709,2717,116>",(features)); Inst133++; } } catch(e) {}try { if (Inst134 <= 1000 && typeof (kThrowUnchanged) != "undefined") {_RecordType("<2720,2735,116>",(kThrowUnchanged)); Inst134++; } } catch(e) {}try { if (Inst135 <= 1000 && typeof (kThrowUnchanged) != "undefined") {_RecordType("<2741,2756,116>",(kThrowUnchanged)); Inst135++; } } catch(e) {}
      if ((features & kThrowUnchanged) === kThrowUnchanged) {
try { if (Inst136 <= 1000 && typeof (sent) != "undefined") {_RecordType("<2775,2779,117>",(sent)); Inst136++; } } catch(e) {}
        return sent;
      }

try { if (Inst137 <= 1000 && typeof (sent) != "undefined") {_RecordType("<2802,2806,120>",(sent)); Inst137++; } } catch(e) {}
      throw sent;
    },

    return(sent) {
      let done = true;
try { if (Inst139 <= 1000 && typeof (done) != "undefined") {_RecordType("<2845,2849,124>",(done)); Inst139++; } } catch(e) {}
try { if (Inst140 <= 1000 && typeof (log.push) != "undefined") {_RecordType("<2864,2872,125>",(log.push)); Inst140++; } } catch(e) {}try { if (Inst141 <= 1000 && typeof (log) != "undefined") {_RecordType("<2864,2867,125>",(log)); Inst141++; } } catch(e) {}try { if (Inst142 <= 1000 && typeof (sent) != "undefined") {_RecordType("<2909,2913,127>",(sent)); Inst142++; } } catch(e) {}try { if (Inst143 <= 1000 && typeof (done) != "undefined") {_RecordType("<2923,2927,128>",(done)); Inst143++; } } catch(e) {}
      log.push({
        method: "return",
        sent,
        done
      });

try { if (Inst144 <= 1000 && typeof (features) != "undefined") {_RecordType("<2950,2958,131>",(features)); Inst144++; } } catch(e) {}try { if (Inst145 <= 1000 && typeof (kReturnThrows) != "undefined") {_RecordType("<2961,2974,131>",(kReturnThrows)); Inst145++; } } catch(e) {}try { if (Inst146 <= 1000 && typeof (kReturnThrows) != "undefined") {_RecordType("<2980,2993,131>",(kReturnThrows)); Inst146++; } } catch(e) {}
      if ((features & kReturnThrows) === kReturnThrows) {
try { if (Inst147 <= 1000 && typeof (sent) != "undefined") {_RecordType("<3011,3015,132>",(sent)); Inst147++; } } catch(e) {}
        throw sent;
      }

try { if (Inst148 <= 1000 && typeof (features) != "undefined") {_RecordType("<3037,3045,135>",(features)); Inst148++; } } catch(e) {}try { if (Inst149 <= 1000 && typeof (kReturnUnchanged) != "undefined") {_RecordType("<3048,3064,135>",(kReturnUnchanged)); Inst149++; } } catch(e) {}try { if (Inst150 <= 1000 && typeof (kReturnUnchanged) != "undefined") {_RecordType("<3070,3086,135>",(kReturnUnchanged)); Inst150++; } } catch(e) {}
      if ((features & kReturnUnchanged) === kReturnUnchanged) {
try { if (Inst151 <= 1000 && typeof (sent) != "undefined") {_RecordType("<3105,3109,136>",(sent)); Inst151++; } } catch(e) {}
        return sent;
      }

try { if (Inst152 <= 1000 && typeof (sent) != "undefined") {_RecordType("<3150,3154,140>",(sent)); Inst152++; } } catch(e) {}try { if (Inst153 <= 1000 && typeof (done) != "undefined") {_RecordType("<3164,3168,141>",(done)); Inst153++; } } catch(e) {}
      return {
        value: sent,
        done
      };
    }

  };
try { if (Inst93 <= 1000 && typeof (methods) != "undefined") {_RecordType("<2002,2009,75>",(methods)); Inst93++; } } catch(e) {}
try { if (Inst154 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<3206,3221,147>",(Symbol.iterator)); Inst154++; } } catch(e) {}try { if (Inst155 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<3206,3212,147>",(Symbol)); Inst155++; } } catch(e) {}try { if (Inst156 <= 1000 && typeof (features) != "undefined") {_RecordType("<3264,3272,151>",(features)); Inst156++; } } catch(e) {}try { if (Inst157 <= 1000 && typeof (kNext) != "undefined") {_RecordType("<3275,3280,151>",(kNext)); Inst157++; } } catch(e) {}try { if (Inst158 <= 1000 && typeof (methods.next) != "undefined") {_RecordType("<3283,3295,151>",(methods.next)); Inst158++; } } catch(e) {}try { if (Inst159 <= 1000 && typeof (methods) != "undefined") {_RecordType("<3283,3290,151>",(methods)); Inst159++; } } catch(e) {}try { if (Inst160 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<3298,3307,151>",(undefined)); Inst160++; } } catch(e) {}try { if (Inst161 <= 1000 && typeof (features) != "undefined") {_RecordType("<3320,3328,152>",(features)); Inst161++; } } catch(e) {}try { if (Inst162 <= 1000 && typeof (kThrow) != "undefined") {_RecordType("<3331,3337,152>",(kThrow)); Inst162++; } } catch(e) {}try { if (Inst163 <= 1000 && typeof (methods.throw) != "undefined") {_RecordType("<3340,3353,152>",(methods.throw)); Inst163++; } } catch(e) {}try { if (Inst164 <= 1000 && typeof (methods) != "undefined") {_RecordType("<3340,3347,152>",(methods)); Inst164++; } } catch(e) {}try { if (Inst165 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<3356,3365,152>",(undefined)); Inst165++; } } catch(e) {}try { if (Inst166 <= 1000 && typeof (features) != "undefined") {_RecordType("<3379,3387,153>",(features)); Inst166++; } } catch(e) {}try { if (Inst167 <= 1000 && typeof (kReturn) != "undefined") {_RecordType("<3390,3397,153>",(kReturn)); Inst167++; } } catch(e) {}try { if (Inst168 <= 1000 && typeof (methods.return) != "undefined") {_RecordType("<3400,3414,153>",(methods.return)); Inst168++; } } catch(e) {}try { if (Inst169 <= 1000 && typeof (methods) != "undefined") {_RecordType("<3400,3407,153>",(methods)); Inst169++; } } catch(e) {}try { if (Inst170 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<3417,3426,153>",(undefined)); Inst170++; } } catch(e) {}
  return {
    [Symbol.iterator]() {
      return this;
    },

    next: features & kNext ? methods.next : undefined,
    throw: features & kThrow ? methods.throw : undefined,
    return: features & kReturn ? methods.return : undefined
  };
}

try { if (Inst172 <= 1000 && typeof (Error) != "undefined") {_RecordType("<3457,3462,157>",(Error)); Inst172++; } } catch(e) {}
class MyError extends Error {}
try { if (Inst171 <= 1000 && typeof (MyError) != "undefined") {_RecordType("<3441,3448,157>",(MyError)); Inst171++; } } catch(e) {}

;
try { if (Inst173 <= 1000 && typeof ((async function AsyncFromSyncWithGenerator() {
  function* gen1() {
    yield "sync value";

    try {
      yield new Promise(function (resolve) {
        resolve("async value");
      });
    } catch (error) {
      throw error;
    }

    "generator is closed";
  }

  let iter = f(gen()); // [Async-from-Sync Iterator] wraps sync iterator values in a Promise

  let promise = iter.next();
  promise;
  Promise;
  let iter_result = await promise;
  ({
    value: "sync value",
    done: false
  });
  iter_result;
  // [Async-from-Sync Iterator] will wait for resolution of Promise values
  promise = iter.next();
  promise;
  Promise;
  iter_result = await promise;
  ({
    value: "async value",
    done: false
  });
  iter_result;
  // [Async-from-Sync Iterator].throw delegates to .throw() method of sync
  // iterator.
  promise = iter.throw(new MyError("Error1"));
  promise;
  Promise;

  try {
    await promise;
    "promise should be rejected";
  } catch (e) {
    // If assertUnreachable failed, rethrow
    if (e instanceof MjsUnitAssertionError) {
      throw e;
    }

    e;
    MyError;
    "Error1";
    e.message;
  } // Generator is closed, subsequent calls to .next() will not resume.


  promise = iter.next("floof");
  iter_result = await promise;
  ({
    value: undefined,
    done: true
  });
  iter_result;
  promise = iter.return("generator closed");
  promise;
  Promise;
  iter_result = await promise;
  ({
    value: "generator closed",
    done: true
  });
  iter_result;
  // .next(), .return() and .throw() delegate to sync iterator methods, without
  // keeping track of the state of the generator.
  promise = iter.next("unused");
  promise;
  Promise;
  iter_result = await promise;
  ({
    value: undefined,
    done: true
  });
  iter_result;
  promise = iter.throw(new MyError("Error2"));
  promise;
  Promise;

  try {
    await promise;
    "promise should be rejected";
  } catch (e) {
    // If assertUnreachable failed, rethrow
    if (e instanceof MjsUnitAssertionError) {
      throw e;
    }

    e;
    MyError;
    "Error2";
    e.message;
  }

  promise = iter.return("return-after-completed");
  promise;
  Promise;
  iter_result = await promise;
  ({
    value: "return-after-completed",
    done: true
  });
  iter_result;
})().catch) != "undefined") {_RecordType("<3469,5760,160>",((async function AsyncFromSyncWithGenerator() {
  function* gen1() {
    yield "sync value";

    try {
      yield new Promise(function (resolve) {
        resolve("async value");
      });
    } catch (error) {
      throw error;
    }

    "generator is closed";
  }

  let iter = f(gen()); // [Async-from-Sync Iterator] wraps sync iterator values in a Promise

  let promise = iter.next();
  promise;
  Promise;
  let iter_result = await promise;
  ({
    value: "sync value",
    done: false
  });
  iter_result;
  // [Async-from-Sync Iterator] will wait for resolution of Promise values
  promise = iter.next();
  promise;
  Promise;
  iter_result = await promise;
  ({
    value: "async value",
    done: false
  });
  iter_result;
  // [Async-from-Sync Iterator].throw delegates to .throw() method of sync
  // iterator.
  promise = iter.throw(new MyError("Error1"));
  promise;
  Promise;

  try {
    await promise;
    "promise should be rejected";
  } catch (e) {
    // If assertUnreachable failed, rethrow
    if (e instanceof MjsUnitAssertionError) {
      throw e;
    }

    e;
    MyError;
    "Error1";
    e.message;
  } // Generator is closed, subsequent calls to .next() will not resume.


  promise = iter.next("floof");
  iter_result = await promise;
  ({
    value: undefined,
    done: true
  });
  iter_result;
  promise = iter.return("generator closed");
  promise;
  Promise;
  iter_result = await promise;
  ({
    value: "generator closed",
    done: true
  });
  iter_result;
  // .next(), .return() and .throw() delegate to sync iterator methods, without
  // keeping track of the state of the generator.
  promise = iter.next("unused");
  promise;
  Promise;
  iter_result = await promise;
  ({
    value: undefined,
    done: true
  });
  iter_result;
  promise = iter.throw(new MyError("Error2"));
  promise;
  Promise;

  try {
    await promise;
    "promise should be rejected";
  } catch (e) {
    // If assertUnreachable failed, rethrow
    if (e instanceof MjsUnitAssertionError) {
      throw e;
    }

    e;
    MyError;
    "Error2";
    e.message;
  }

  promise = iter.return("return-after-completed");
  promise;
  Promise;
  iter_result = await promise;
  ({
    value: "return-after-completed",
    done: true
  });
  iter_result;
})().catch)); Inst173++; } } catch(e) {}try { if (Inst174 <= 1000 && typeof (AsyncFromSyncWithGenerator) != "undefined") {_RecordType("<3485,3511,160>",(AsyncFromSyncWithGenerator)); Inst174++; } } catch(e) {}
(async function AsyncFromSyncWithGenerator() {
try { if (Inst175 <= 1000 && typeof (gen1) != "undefined") {_RecordType("<3528,3532,161>",(gen1)); Inst175++; } } catch(e) {}
  function* gen1() {
    yield "sync value";

try { if (Inst179 <= 1000 && typeof (error) != "undefined") {_RecordType("<3672,3677,168>",(error)); Inst179++; } } catch(e) {}
    try {
try { if (Inst176 <= 1000 && typeof (Promise) != "undefined") {_RecordType("<3588,3595,165>",(Promise)); Inst176++; } } catch(e) {}
      yield new Promise(function (resolve) {
try { if (Inst177 <= 1000 && typeof (resolve) != "undefined") {_RecordType("<3606,3613,165>",(resolve)); Inst177++; } } catch(e) {}
try { if (Inst178 <= 1000 && typeof (resolve) != "undefined") {_RecordType("<3625,3632,166>",(resolve)); Inst178++; } } catch(e) {}
        resolve("async value");
      });
    } catch (error) {
try { if (Inst180 <= 1000 && typeof (error) != "undefined") {_RecordType("<3693,3698,169>",(error)); Inst180++; } } catch(e) {}
      throw error;
    }

    "generator is closed";
  }

try { if (Inst182 <= 1000 && typeof (f) != "undefined") {_RecordType("<3752,3753,175>",(f)); Inst182++; } } catch(e) {}try { if (Inst183 <= 1000 && typeof (gen) != "undefined") {_RecordType("<3754,3757,175>",(gen)); Inst183++; } } catch(e) {}
  let iter = f(gen()); // [Async-from-Sync Iterator] wraps sync iterator values in a Promise
try { if (Inst181 <= 1000 && typeof (iter) != "undefined") {_RecordType("<3745,3749,175>",(iter)); Inst181++; } } catch(e) {}

try { if (Inst185 <= 1000 && typeof (iter.next) != "undefined") {_RecordType("<3849,3858,177>",(iter.next)); Inst185++; } } catch(e) {}try { if (Inst186 <= 1000 && typeof (iter) != "undefined") {_RecordType("<3849,3853,177>",(iter)); Inst186++; } } catch(e) {}
  let promise = iter.next();
try { if (Inst184 <= 1000 && typeof (promise) != "undefined") {_RecordType("<3839,3846,177>",(promise)); Inst184++; } } catch(e) {}
try { if (Inst187 <= 1000 && typeof (promise) != "undefined") {_RecordType("<3864,3871,178>",(promise)); Inst187++; } } catch(e) {}
  promise;
try { if (Inst188 <= 1000 && typeof (Promise) != "undefined") {_RecordType("<3875,3882,179>",(Promise)); Inst188++; } } catch(e) {}
  Promise;
try { if (Inst190 <= 1000 && typeof (promise) != "undefined") {_RecordType("<3910,3917,180>",(promise)); Inst190++; } } catch(e) {}
  let iter_result = await promise;
try { if (Inst189 <= 1000 && typeof (iter_result) != "undefined") {_RecordType("<3890,3901,180>",(iter_result)); Inst189++; } } catch(e) {}
  ({
    value: "sync value",
    done: false
  });
try { if (Inst191 <= 1000 && typeof (iter_result) != "undefined") {_RecordType("<3973,3984,185>",(iter_result)); Inst191++; } } catch(e) {}
  iter_result;
  // [Async-from-Sync Iterator] will wait for resolution of Promise values
try { if (Inst193 <= 1000 && typeof (iter.next) != "undefined") {_RecordType("<4073,4082,187>",(iter.next)); Inst193++; } } catch(e) {}try { if (Inst194 <= 1000 && typeof (iter) != "undefined") {_RecordType("<4073,4077,187>",(iter)); Inst194++; } } catch(e) {}
  promise = iter.next();
try { if (Inst192 <= 1000 && typeof (promise) != "undefined") {_RecordType("<4063,4070,187>",(promise)); Inst192++; } } catch(e) {}
try { if (Inst195 <= 1000 && typeof (promise) != "undefined") {_RecordType("<4088,4095,188>",(promise)); Inst195++; } } catch(e) {}
  promise;
try { if (Inst196 <= 1000 && typeof (Promise) != "undefined") {_RecordType("<4099,4106,189>",(Promise)); Inst196++; } } catch(e) {}
  Promise;
try { if (Inst198 <= 1000 && typeof (promise) != "undefined") {_RecordType("<4130,4137,190>",(promise)); Inst198++; } } catch(e) {}
  iter_result = await promise;
try { if (Inst197 <= 1000 && typeof (iter_result) != "undefined") {_RecordType("<4110,4121,190>",(iter_result)); Inst197++; } } catch(e) {}
  ({
    value: "async value",
    done: false
  });
try { if (Inst199 <= 1000 && typeof (iter_result) != "undefined") {_RecordType("<4194,4205,195>",(iter_result)); Inst199++; } } catch(e) {}
  iter_result;
  // [Async-from-Sync Iterator].throw delegates to .throw() method of sync
  // iterator.
try { if (Inst201 <= 1000 && typeof (iter.throw) != "undefined") {_RecordType("<4309,4319,198>",(iter.throw)); Inst201++; } } catch(e) {}try { if (Inst202 <= 1000 && typeof (iter) != "undefined") {_RecordType("<4309,4313,198>",(iter)); Inst202++; } } catch(e) {}try { if (Inst203 <= 1000 && typeof (MyError) != "undefined") {_RecordType("<4324,4331,198>",(MyError)); Inst203++; } } catch(e) {}
  promise = iter.throw(new MyError("Error1"));
try { if (Inst200 <= 1000 && typeof (promise) != "undefined") {_RecordType("<4299,4306,198>",(promise)); Inst200++; } } catch(e) {}
try { if (Inst204 <= 1000 && typeof (promise) != "undefined") {_RecordType("<4346,4353,199>",(promise)); Inst204++; } } catch(e) {}
  promise;
try { if (Inst205 <= 1000 && typeof (Promise) != "undefined") {_RecordType("<4357,4364,200>",(Promise)); Inst205++; } } catch(e) {}
  Promise;

try { if (Inst207 <= 1000 && typeof (e) != "undefined") {_RecordType("<4439,4440,205>",(e)); Inst207++; } } catch(e) {}
  try {
try { if (Inst206 <= 1000 && typeof (promise) != "undefined") {_RecordType("<4385,4392,203>",(promise)); Inst206++; } } catch(e) {}
    await promise;
    "promise should be rejected";
  } catch (e) {
    // If assertUnreachable failed, rethrow
try { if (Inst208 <= 1000 && typeof (e) != "undefined") {_RecordType("<4496,4497,207>",(e)); Inst208++; } } catch(e) {}try { if (Inst209 <= 1000 && typeof (MjsUnitAssertionError) != "undefined") {_RecordType("<4509,4530,207>",(MjsUnitAssertionError)); Inst209++; } } catch(e) {}
    if (e instanceof MjsUnitAssertionError) {
try { if (Inst210 <= 1000 && typeof (e) != "undefined") {_RecordType("<4546,4547,208>",(e)); Inst210++; } } catch(e) {}
      throw e;
    }

try { if (Inst211 <= 1000 && typeof (e) != "undefined") {_RecordType("<4560,4561,211>",(e)); Inst211++; } } catch(e) {}
    e;
try { if (Inst212 <= 1000 && typeof (MyError) != "undefined") {_RecordType("<4567,4574,212>",(MyError)); Inst212++; } } catch(e) {}
    MyError;
    "Error1";
try { if (Inst213 <= 1000 && typeof (e.message) != "undefined") {_RecordType("<4594,4603,214>",(e.message)); Inst213++; } } catch(e) {}try { if (Inst214 <= 1000 && typeof (e) != "undefined") {_RecordType("<4594,4595,214>",(e)); Inst214++; } } catch(e) {}
    e.message;
  } // Generator is closed, subsequent calls to .next() will not resume.


try { if (Inst216 <= 1000 && typeof (iter.next) != "undefined") {_RecordType("<4692,4701,218>",(iter.next)); Inst216++; } } catch(e) {}try { if (Inst217 <= 1000 && typeof (iter) != "undefined") {_RecordType("<4692,4696,218>",(iter)); Inst217++; } } catch(e) {}
  promise = iter.next("floof");
try { if (Inst215 <= 1000 && typeof (promise) != "undefined") {_RecordType("<4682,4689,218>",(promise)); Inst215++; } } catch(e) {}
try { if (Inst219 <= 1000 && typeof (promise) != "undefined") {_RecordType("<4734,4741,219>",(promise)); Inst219++; } } catch(e) {}
  iter_result = await promise;
try { if (Inst218 <= 1000 && typeof (iter_result) != "undefined") {_RecordType("<4714,4725,219>",(iter_result)); Inst218++; } } catch(e) {}
try { if (Inst220 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<4759,4768,221>",(undefined)); Inst220++; } } catch(e) {}
  ({
    value: undefined,
    done: true
  });
try { if (Inst221 <= 1000 && typeof (iter_result) != "undefined") {_RecordType("<4793,4804,224>",(iter_result)); Inst221++; } } catch(e) {}
  iter_result;
try { if (Inst223 <= 1000 && typeof (iter.return) != "undefined") {_RecordType("<4818,4829,225>",(iter.return)); Inst223++; } } catch(e) {}try { if (Inst224 <= 1000 && typeof (iter) != "undefined") {_RecordType("<4818,4822,225>",(iter)); Inst224++; } } catch(e) {}
  promise = iter.return("generator closed");
try { if (Inst222 <= 1000 && typeof (promise) != "undefined") {_RecordType("<4808,4815,225>",(promise)); Inst222++; } } catch(e) {}
try { if (Inst225 <= 1000 && typeof (promise) != "undefined") {_RecordType("<4853,4860,226>",(promise)); Inst225++; } } catch(e) {}
  promise;
try { if (Inst226 <= 1000 && typeof (Promise) != "undefined") {_RecordType("<4864,4871,227>",(Promise)); Inst226++; } } catch(e) {}
  Promise;
try { if (Inst228 <= 1000 && typeof (promise) != "undefined") {_RecordType("<4895,4902,228>",(promise)); Inst228++; } } catch(e) {}
  iter_result = await promise;
try { if (Inst227 <= 1000 && typeof (iter_result) != "undefined") {_RecordType("<4875,4886,228>",(iter_result)); Inst227++; } } catch(e) {}
  ({
    value: "generator closed",
    done: true
  });
try { if (Inst229 <= 1000 && typeof (iter_result) != "undefined") {_RecordType("<4963,4974,233>",(iter_result)); Inst229++; } } catch(e) {}
  iter_result;
  // .next(), .return() and .throw() delegate to sync iterator methods, without
  // keeping track of the state of the generator.
try { if (Inst231 <= 1000 && typeof (iter.next) != "undefined") {_RecordType("<5118,5127,236>",(iter.next)); Inst231++; } } catch(e) {}try { if (Inst232 <= 1000 && typeof (iter) != "undefined") {_RecordType("<5118,5122,236>",(iter)); Inst232++; } } catch(e) {}
  promise = iter.next("unused");
try { if (Inst230 <= 1000 && typeof (promise) != "undefined") {_RecordType("<5108,5115,236>",(promise)); Inst230++; } } catch(e) {}
try { if (Inst233 <= 1000 && typeof (promise) != "undefined") {_RecordType("<5141,5148,237>",(promise)); Inst233++; } } catch(e) {}
  promise;
try { if (Inst234 <= 1000 && typeof (Promise) != "undefined") {_RecordType("<5152,5159,238>",(Promise)); Inst234++; } } catch(e) {}
  Promise;
try { if (Inst236 <= 1000 && typeof (promise) != "undefined") {_RecordType("<5183,5190,239>",(promise)); Inst236++; } } catch(e) {}
  iter_result = await promise;
try { if (Inst235 <= 1000 && typeof (iter_result) != "undefined") {_RecordType("<5163,5174,239>",(iter_result)); Inst235++; } } catch(e) {}
try { if (Inst237 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<5208,5217,241>",(undefined)); Inst237++; } } catch(e) {}
  ({
    value: undefined,
    done: true
  });
try { if (Inst238 <= 1000 && typeof (iter_result) != "undefined") {_RecordType("<5242,5253,244>",(iter_result)); Inst238++; } } catch(e) {}
  iter_result;
try { if (Inst240 <= 1000 && typeof (iter.throw) != "undefined") {_RecordType("<5267,5277,245>",(iter.throw)); Inst240++; } } catch(e) {}try { if (Inst241 <= 1000 && typeof (iter) != "undefined") {_RecordType("<5267,5271,245>",(iter)); Inst241++; } } catch(e) {}try { if (Inst242 <= 1000 && typeof (MyError) != "undefined") {_RecordType("<5282,5289,245>",(MyError)); Inst242++; } } catch(e) {}
  promise = iter.throw(new MyError("Error2"));
try { if (Inst239 <= 1000 && typeof (promise) != "undefined") {_RecordType("<5257,5264,245>",(promise)); Inst239++; } } catch(e) {}
try { if (Inst243 <= 1000 && typeof (promise) != "undefined") {_RecordType("<5304,5311,246>",(promise)); Inst243++; } } catch(e) {}
  promise;
try { if (Inst244 <= 1000 && typeof (Promise) != "undefined") {_RecordType("<5315,5322,247>",(Promise)); Inst244++; } } catch(e) {}
  Promise;

try { if (Inst246 <= 1000 && typeof (e) != "undefined") {_RecordType("<5397,5398,252>",(e)); Inst246++; } } catch(e) {}
  try {
try { if (Inst245 <= 1000 && typeof (promise) != "undefined") {_RecordType("<5343,5350,250>",(promise)); Inst245++; } } catch(e) {}
    await promise;
    "promise should be rejected";
  } catch (e) {
    // If assertUnreachable failed, rethrow
try { if (Inst247 <= 1000 && typeof (e) != "undefined") {_RecordType("<5454,5455,254>",(e)); Inst247++; } } catch(e) {}try { if (Inst248 <= 1000 && typeof (MjsUnitAssertionError) != "undefined") {_RecordType("<5467,5488,254>",(MjsUnitAssertionError)); Inst248++; } } catch(e) {}
    if (e instanceof MjsUnitAssertionError) {
try { if (Inst249 <= 1000 && typeof (e) != "undefined") {_RecordType("<5504,5505,255>",(e)); Inst249++; } } catch(e) {}
      throw e;
    }

try { if (Inst250 <= 1000 && typeof (e) != "undefined") {_RecordType("<5518,5519,258>",(e)); Inst250++; } } catch(e) {}
    e;
try { if (Inst251 <= 1000 && typeof (MyError) != "undefined") {_RecordType("<5525,5532,259>",(MyError)); Inst251++; } } catch(e) {}
    MyError;
    "Error2";
try { if (Inst252 <= 1000 && typeof (e.message) != "undefined") {_RecordType("<5552,5561,261>",(e.message)); Inst252++; } } catch(e) {}try { if (Inst253 <= 1000 && typeof (e) != "undefined") {_RecordType("<5552,5553,261>",(e)); Inst253++; } } catch(e) {}
    e.message;
  }

try { if (Inst255 <= 1000 && typeof (iter.return) != "undefined") {_RecordType("<5580,5591,264>",(iter.return)); Inst255++; } } catch(e) {}try { if (Inst256 <= 1000 && typeof (iter) != "undefined") {_RecordType("<5580,5584,264>",(iter)); Inst256++; } } catch(e) {}
  promise = iter.return("return-after-completed");
try { if (Inst254 <= 1000 && typeof (promise) != "undefined") {_RecordType("<5570,5577,264>",(promise)); Inst254++; } } catch(e) {}
try { if (Inst257 <= 1000 && typeof (promise) != "undefined") {_RecordType("<5621,5628,265>",(promise)); Inst257++; } } catch(e) {}
  promise;
try { if (Inst258 <= 1000 && typeof (Promise) != "undefined") {_RecordType("<5632,5639,266>",(Promise)); Inst258++; } } catch(e) {}
  Promise;
try { if (Inst260 <= 1000 && typeof (promise) != "undefined") {_RecordType("<5663,5670,267>",(promise)); Inst260++; } } catch(e) {}
  iter_result = await promise;
try { if (Inst259 <= 1000 && typeof (iter_result) != "undefined") {_RecordType("<5643,5654,267>",(iter_result)); Inst259++; } } catch(e) {}
  ({
    value: "return-after-completed",
    done: true
  });
try { if (Inst261 <= 1000 && typeof (iter_result) != "undefined") {_RecordType("<5737,5748,272>",(iter_result)); Inst261++; } } catch(e) {}
  iter_result;
})().catch(function (error) {
try { if (Inst262 <= 1000 && typeof (error) != "undefined") {_RecordType("<5771,5776,273>",(error)); Inst262++; } } catch(e) {}
  testFailed = true;
try { if (Inst263 <= 1000 && typeof (testFailed) != "undefined") {_RecordType("<5782,5792,274>",(testFailed)); Inst263++; } } catch(e) {}
try { if (Inst265 <= 1000 && typeof (error) != "undefined") {_RecordType("<5817,5822,275>",(error)); Inst265++; } } catch(e) {}
  testFailure = error;
try { if (Inst264 <= 1000 && typeof (testFailure) != "undefined") {_RecordType("<5803,5814,275>",(testFailure)); Inst264++; } } catch(e) {}
});

try { if (Inst266 <= 1000 && typeof (testFailed) != "undefined") {_RecordType("<5833,5843,278>",(testFailed)); Inst266++; } } catch(e) {}
if (testFailed) {
try { if (Inst267 <= 1000 && typeof (testFailure) != "undefined") {_RecordType("<5855,5866,279>",(testFailure)); Inst267++; } } catch(e) {}
  throw testFailure;
}

try { if (Inst268 <= 1000 && typeof ((async function AsyncFromSyncOrderOfOperations() {
  let log = [];
  iter = f(sync(["sync-value"], 0, log));

  try {
    await iter.next();
    "Iterator.next() method is not optional";
  } catch (e) {
    e;
    TypeError;
    [];
    log;
  }

  log = [];
  iter = f(sync(["sync-value"], kNext, log));
  ({
    value: "sync-value",
    done: false
  });
  await iter.next("a");
  [{
    method: "next",
    sent: "a",
    value: "sync-value",
    done: false
  }];
  log;
  log = [];
  let asyncValue = resolveLater("async-value");
  iter = f(sync([asyncValue], kNext, log));
  ({
    value: "async-value",
    done: false
  });
  await iter.next("b");
  [{
    method: "next",
    sent: "b",
    value: asyncValue,
    done: false
  }];
  log;
  // If [sync_iterator].next() produces a rejected Promise or an exception is
  // thrown, Promise is rejected with thrown/rejected value.
  log = [];
  asyncValue = rejectLater("Boo!");
  iter = f(sync([asyncValue], kNext, log));

  try {
    await iter.next('c');
    'Expected `iter.next(\'c\') to throw, but did not throw';
  } catch (e) {
    "Boo!";
    e;
    [{
      method: 'next',
      sent: 'c',
      value: asyncValue,
      done: false
    }];
    log;
  }

  log = [];
  iter = f(sync(['sync-value'], kNextThrows, log));

  try {
    await iter.next('Boo!');
    'Expected `iter.next(\'c\') to throw, but did not throw';
  } catch (e) {
    "Boo!";
    e;
    [{
      method: 'next',
      sent: 'Boo!',
      value: 'sync-value',
      done: false
    }];
    log;
  } // [Async-from-Sync Iterator].next() will be rejected with a TypeError if
  // Type([sync_iterator].next()) is not Object.


  log = [];
  iter = f(sync(['sync-value'], kNextUnchanged, log));

  try {
    await iter.next('not-a-JSReceiver');
    'Expected `iter.next(\'not-a-JSReceiver\')` to ' + 'throw, but did not throw';
  } catch (e) {
    e.constructor;
    TypeError;
  }

  [{
    method: 'next',
    sent: 'not-a-JSReceiver',
    value: 'sync-value',
    done: false
  }];
  log;
  // If [sync_iterator] does not have a .return() method, return a Promise
  // resolved with the value `{ value: <<sent value>>, done: true }`.
  log = [];
  iter = f(sync(['sync-return'], kNext, log));
  ({
    value: 'd',
    done: true
  });
  await iter.return('d');
  ({
    value: 'sync-return',
    done: false
  });
  await iter.next('e');
  [{
    method: 'next',
    sent: 'e',
    value: 'sync-return',
    done: false
  }];
  log;
  // If [sync_iterator] does have a .return() method, return a Promise
  // fulfilled with the iterator result of [sync_iterator].return().
  log = [];
  iter = f(sync(['sync-return'], kNext | kReturn, log));
  ({
    value: 'f',
    done: true
  });
  await iter.return('f');
  ({
    value: 'sync-return',
    done: false
  });
  await iter.next('g');
  [{
    method: 'return',
    sent: 'f',
    done: true
  }, {
    method: 'next',
    sent: 'g',
    value: 'sync-return',
    done: false
  }];
  log;
  // If [sync_iterator].return() produces a rejected Promise or an exception is
  // thrown, Promise is rejected with thrown/rejected value.
  log = [];
  iter = f(sync(['sync-value'], kNext | kReturnThrows, log));

  try {
    await iter.return('Boo!!');
    'Expected `iter.return(\'Boo!!\')` to throw, but did ' + 'not throw';
  } catch (e) {
    "Boo!!";
    e;
  } // [Async-from-Sync Iterator] merely delegates, and does not keep track of
  // whether [sync_iterator] is completed or not.


  ({
    value: 'sync-value',
    done: false
  });
  await iter.next('h');
  [{
    method: 'return',
    sent: 'Boo!!',
    done: true
  }, {
    method: 'next',
    sent: 'h',
    value: 'sync-value',
    done: false
  }];
  log;
  log = [];
  iter = f(sync(['sync-value'], kNext | kReturn, log));
  let rejection = Promise.reject('Boo!!');

  try {
    await iter.return(rejection);
    'Expected `iter.return(Promise.reject(\'Boo!!\'))` to ' + 'throw, but did not throw';
  } catch (e) {
    'Boo!!';
    e;
  } // [Async-from-Sync Iterator] merely delegates, and does not keep track of
  // whether [sync_iterator] is completed or not.


  ({
    value: 'sync-value',
    done: false
  });
  await iter.next('i');
  [{
    method: 'return',
    sent: rejection,
    done: true
  }, {
    method: 'next',
    sent: 'i',
    value: 'sync-value',
    done: false
  }];
  log;
  // [Async-from-Sync Iterator].return() will be rejected with a TypeError if
  // Type([sync_iterator].return()) is not Object.
  log = [];
  iter = f(sync(['sync-value'], kNext | kReturnUnchanged, log));

  try {
    await iter.return('not-a-JSReceiver');
    'Expected `iter.return(\'not-a-JSReceiver\')` to ' + 'throw, but did not throw';
  } catch (e) {
    e.constructor;
    TypeError;
  } // [Async-from-Sync Iterator] merely delegates, and does not keep track of
  // whether [sync_iterator] is completed or not.


  ({
    value: 'sync-value',
    done: false
  });
  await iter.next('j');
  [{
    method: 'return',
    sent: 'not-a-JSReceiver',
    done: true
  }, {
    method: 'next',
    sent: 'j',
    value: 'sync-value',
    done: false
  }];
  log;
  // If [sync_iterator] does not have a .throw method, return a Promise rejected
  // with the sent value.
  log = [];
  iter = f(sync(['sync-value'], kNext, log));

  try {
    await iter.throw('Boo!!');
    'Expected iter.throw(\'Boo!!\') to throw, but did not ' + 'throw';
  } catch (e) {
    'Boo!!';
    e;
  } // [Async-from-Sync Iterator] merely delegates, and does not keep track of
  // whether [sync_iterator] is completed or not.


  ({
    value: 'sync-value',
    done: false
  });
  await iter.next('k');
  [{
    method: 'next',
    sent: 'k',
    value: 'sync-value',
    done: false
  }];
  log;
  log = [];
  iter = f(sync(['sync-value'], kNext | kThrow, log));

  try {
    await iter.throw('Boo!!');
    'Expected iter.throw(\'Boo!!\') to throw, but did not ' + 'throw';
  } catch (e) {
    'Boo!!';
    e;
  } // [Async-from-Sync Iterator] merely delegates, and does not keep track of
  // whether [sync_iterator] is completed or not.


  ({
    value: 'sync-value',
    done: false
  });
  await iter.next('l');
  [{
    method: 'throw',
    sent: 'Boo!!',
    done: false
  }, {
    method: 'next',
    sent: 'l',
    value: 'sync-value',
    done: false
  }];
  log;
  // If [sync_iterator].throw() returns a resolved Promise or a Completion
  // with [[Type]] "normal" or "return", return a resolved Promise
  log = [];
  iter = f(sync(['sync-value'], kNext | kThrowNormal, log));
  ({
    value: 'Boo!!',
    done: false
  });
  await iter.throw('Boo!!');
  ({
    value: 'sync-value',
    done: false
  });
  await iter.next('m');
  [{
    method: 'throw',
    sent: 'Boo!!',
    done: false
  }, {
    method: 'next',
    sent: 'm',
    value: 'sync-value',
    done: false
  }];
  log;
  // [Async-from-Sync Iterator].throw() will be rejected with a TypeError if
  // Type([sync_iterator].throw()) is not Object.
  log = [];
  iter = f(sync(['sync-value'], kNext | kThrowUnchanged, log));

  try {
    await iter.throw('not-a-JSReceiver');
    'Expected `iter.throw(\'not-a-JSReceiver\')` to ' + 'throw, but did not throw';
  } catch (e) {
    e.constructor;
    TypeError;
  } // [Async-from-Sync Iterator] merely delegates, and does not keep track of
  // whether [sync_iterator] is completed or not.


  ({
    value: 'sync-value',
    done: false
  });
  await iter.next('n');
  [{
    method: 'throw',
    sent: 'not-a-JSReceiver',
    done: false
  }, {
    method: 'next',
    sent: 'n',
    value: 'sync-value',
    done: false
  }];
  log;
  // Let nextValue be IteratorValue(nextResult).
  // IfAbruptRejectPromise(nextValue, promiseCapability).)
  iter = f({
    next() {
      return {
        get value() {
          throw "BadValue!";
        },

        done: false
      };
    }

  });

  try {
    await iter.next();
    'Expected `iter.next()` to throw, but did not throw';
  } catch (e) {
    'BadValue!';
    e;
  } // Let nextDone be IteratorComplete(nextResult).
  // IfAbruptRejectPromise(nextDone, promiseCapability).


  iter = f({
    next() {
      return {
        value: undefined,

        get done() {
          throw "BadValue!";
        }

      };
    }

  });

  try {
    await iter.next();
    'Expected `iter.next()` to throw, but did not throw';
  } catch (e) {
    'BadValue!';
    e;
  } // IfAbruptRejectPromise(returnResult, promiseCapability).
  // Let returnValue be IteratorValue(returnResult).


  iter = f({
    return() {
      return {
        get value() {
          throw "BadValue!";
        },

        done: false
      };
    }

  });

  try {
    await iter.return();
    'Expected `iter.return()` to throw, but did not throw';
  } catch (e) {
    'BadValue!';
    e;
  } // IfAbruptRejectPromise(returnValue, promiseCapability).
  // Let returnDone be IteratorComplete(returnResult).


  iter = f({
    return() {
      return {
        value: undefined,

        get done() {
          throw "BadValue!";
        }

      };
    }

  });

  try {
    await iter.return();
    'Expected `iter.return()` to throw, but did not throw';
  } catch (e) {
    'BadValue!';
    e;
  } // IfAbruptRejectPromise(throwResult, promiseCapability).
  // Let throwValue be IteratorValue(throwResult).


  iter = f({
    throw() {
      return {
        get value() {
          throw "BadValue!";
        },

        done: false
      };
    }

  });

  try {
    await iter.throw();
    'Expected `iter.throw()` to throw, but did not throw';
  } catch (e) {
    'BadValue!';
    e;
  } // IfAbruptRejectPromise(throwValue, promiseCapability).
  // Let throwDone be IteratorComplete(throwResult).


  iter = f({
    throw() {
      return {
        value: undefined,

        get done() {
          throw "BadValue!";
        }

      };
    }

  });

  try {
    await iter.throw();
    'Expected `iter.throw()` to throw, but did not throw';
  } catch (e) {
    'BadValue!';
    e;
  }
})().catch) != "undefined") {_RecordType("<5871,15861,282>",((async function AsyncFromSyncOrderOfOperations() {
  let log = [];
  iter = f(sync(["sync-value"], 0, log));

  try {
    await iter.next();
    "Iterator.next() method is not optional";
  } catch (e) {
    e;
    TypeError;
    [];
    log;
  }

  log = [];
  iter = f(sync(["sync-value"], kNext, log));
  ({
    value: "sync-value",
    done: false
  });
  await iter.next("a");
  [{
    method: "next",
    sent: "a",
    value: "sync-value",
    done: false
  }];
  log;
  log = [];
  let asyncValue = resolveLater("async-value");
  iter = f(sync([asyncValue], kNext, log));
  ({
    value: "async-value",
    done: false
  });
  await iter.next("b");
  [{
    method: "next",
    sent: "b",
    value: asyncValue,
    done: false
  }];
  log;
  // If [sync_iterator].next() produces a rejected Promise or an exception is
  // thrown, Promise is rejected with thrown/rejected value.
  log = [];
  asyncValue = rejectLater("Boo!");
  iter = f(sync([asyncValue], kNext, log));

  try {
    await iter.next('c');
    'Expected `iter.next(\'c\') to throw, but did not throw';
  } catch (e) {
    "Boo!";
    e;
    [{
      method: 'next',
      sent: 'c',
      value: asyncValue,
      done: false
    }];
    log;
  }

  log = [];
  iter = f(sync(['sync-value'], kNextThrows, log));

  try {
    await iter.next('Boo!');
    'Expected `iter.next(\'c\') to throw, but did not throw';
  } catch (e) {
    "Boo!";
    e;
    [{
      method: 'next',
      sent: 'Boo!',
      value: 'sync-value',
      done: false
    }];
    log;
  } // [Async-from-Sync Iterator].next() will be rejected with a TypeError if
  // Type([sync_iterator].next()) is not Object.


  log = [];
  iter = f(sync(['sync-value'], kNextUnchanged, log));

  try {
    await iter.next('not-a-JSReceiver');
    'Expected `iter.next(\'not-a-JSReceiver\')` to ' + 'throw, but did not throw';
  } catch (e) {
    e.constructor;
    TypeError;
  }

  [{
    method: 'next',
    sent: 'not-a-JSReceiver',
    value: 'sync-value',
    done: false
  }];
  log;
  // If [sync_iterator] does not have a .return() method, return a Promise
  // resolved with the value `{ value: <<sent value>>, done: true }`.
  log = [];
  iter = f(sync(['sync-return'], kNext, log));
  ({
    value: 'd',
    done: true
  });
  await iter.return('d');
  ({
    value: 'sync-return',
    done: false
  });
  await iter.next('e');
  [{
    method: 'next',
    sent: 'e',
    value: 'sync-return',
    done: false
  }];
  log;
  // If [sync_iterator] does have a .return() method, return a Promise
  // fulfilled with the iterator result of [sync_iterator].return().
  log = [];
  iter = f(sync(['sync-return'], kNext | kReturn, log));
  ({
    value: 'f',
    done: true
  });
  await iter.return('f');
  ({
    value: 'sync-return',
    done: false
  });
  await iter.next('g');
  [{
    method: 'return',
    sent: 'f',
    done: true
  }, {
    method: 'next',
    sent: 'g',
    value: 'sync-return',
    done: false
  }];
  log;
  // If [sync_iterator].return() produces a rejected Promise or an exception is
  // thrown, Promise is rejected with thrown/rejected value.
  log = [];
  iter = f(sync(['sync-value'], kNext | kReturnThrows, log));

  try {
    await iter.return('Boo!!');
    'Expected `iter.return(\'Boo!!\')` to throw, but did ' + 'not throw';
  } catch (e) {
    "Boo!!";
    e;
  } // [Async-from-Sync Iterator] merely delegates, and does not keep track of
  // whether [sync_iterator] is completed or not.


  ({
    value: 'sync-value',
    done: false
  });
  await iter.next('h');
  [{
    method: 'return',
    sent: 'Boo!!',
    done: true
  }, {
    method: 'next',
    sent: 'h',
    value: 'sync-value',
    done: false
  }];
  log;
  log = [];
  iter = f(sync(['sync-value'], kNext | kReturn, log));
  let rejection = Promise.reject('Boo!!');

  try {
    await iter.return(rejection);
    'Expected `iter.return(Promise.reject(\'Boo!!\'))` to ' + 'throw, but did not throw';
  } catch (e) {
    'Boo!!';
    e;
  } // [Async-from-Sync Iterator] merely delegates, and does not keep track of
  // whether [sync_iterator] is completed or not.


  ({
    value: 'sync-value',
    done: false
  });
  await iter.next('i');
  [{
    method: 'return',
    sent: rejection,
    done: true
  }, {
    method: 'next',
    sent: 'i',
    value: 'sync-value',
    done: false
  }];
  log;
  // [Async-from-Sync Iterator].return() will be rejected with a TypeError if
  // Type([sync_iterator].return()) is not Object.
  log = [];
  iter = f(sync(['sync-value'], kNext | kReturnUnchanged, log));

  try {
    await iter.return('not-a-JSReceiver');
    'Expected `iter.return(\'not-a-JSReceiver\')` to ' + 'throw, but did not throw';
  } catch (e) {
    e.constructor;
    TypeError;
  } // [Async-from-Sync Iterator] merely delegates, and does not keep track of
  // whether [sync_iterator] is completed or not.


  ({
    value: 'sync-value',
    done: false
  });
  await iter.next('j');
  [{
    method: 'return',
    sent: 'not-a-JSReceiver',
    done: true
  }, {
    method: 'next',
    sent: 'j',
    value: 'sync-value',
    done: false
  }];
  log;
  // If [sync_iterator] does not have a .throw method, return a Promise rejected
  // with the sent value.
  log = [];
  iter = f(sync(['sync-value'], kNext, log));

  try {
    await iter.throw('Boo!!');
    'Expected iter.throw(\'Boo!!\') to throw, but did not ' + 'throw';
  } catch (e) {
    'Boo!!';
    e;
  } // [Async-from-Sync Iterator] merely delegates, and does not keep track of
  // whether [sync_iterator] is completed or not.


  ({
    value: 'sync-value',
    done: false
  });
  await iter.next('k');
  [{
    method: 'next',
    sent: 'k',
    value: 'sync-value',
    done: false
  }];
  log;
  log = [];
  iter = f(sync(['sync-value'], kNext | kThrow, log));

  try {
    await iter.throw('Boo!!');
    'Expected iter.throw(\'Boo!!\') to throw, but did not ' + 'throw';
  } catch (e) {
    'Boo!!';
    e;
  } // [Async-from-Sync Iterator] merely delegates, and does not keep track of
  // whether [sync_iterator] is completed or not.


  ({
    value: 'sync-value',
    done: false
  });
  await iter.next('l');
  [{
    method: 'throw',
    sent: 'Boo!!',
    done: false
  }, {
    method: 'next',
    sent: 'l',
    value: 'sync-value',
    done: false
  }];
  log;
  // If [sync_iterator].throw() returns a resolved Promise or a Completion
  // with [[Type]] "normal" or "return", return a resolved Promise
  log = [];
  iter = f(sync(['sync-value'], kNext | kThrowNormal, log));
  ({
    value: 'Boo!!',
    done: false
  });
  await iter.throw('Boo!!');
  ({
    value: 'sync-value',
    done: false
  });
  await iter.next('m');
  [{
    method: 'throw',
    sent: 'Boo!!',
    done: false
  }, {
    method: 'next',
    sent: 'm',
    value: 'sync-value',
    done: false
  }];
  log;
  // [Async-from-Sync Iterator].throw() will be rejected with a TypeError if
  // Type([sync_iterator].throw()) is not Object.
  log = [];
  iter = f(sync(['sync-value'], kNext | kThrowUnchanged, log));

  try {
    await iter.throw('not-a-JSReceiver');
    'Expected `iter.throw(\'not-a-JSReceiver\')` to ' + 'throw, but did not throw';
  } catch (e) {
    e.constructor;
    TypeError;
  } // [Async-from-Sync Iterator] merely delegates, and does not keep track of
  // whether [sync_iterator] is completed or not.


  ({
    value: 'sync-value',
    done: false
  });
  await iter.next('n');
  [{
    method: 'throw',
    sent: 'not-a-JSReceiver',
    done: false
  }, {
    method: 'next',
    sent: 'n',
    value: 'sync-value',
    done: false
  }];
  log;
  // Let nextValue be IteratorValue(nextResult).
  // IfAbruptRejectPromise(nextValue, promiseCapability).)
  iter = f({
    next() {
      return {
        get value() {
          throw "BadValue!";
        },

        done: false
      };
    }

  });

  try {
    await iter.next();
    'Expected `iter.next()` to throw, but did not throw';
  } catch (e) {
    'BadValue!';
    e;
  } // Let nextDone be IteratorComplete(nextResult).
  // IfAbruptRejectPromise(nextDone, promiseCapability).


  iter = f({
    next() {
      return {
        value: undefined,

        get done() {
          throw "BadValue!";
        }

      };
    }

  });

  try {
    await iter.next();
    'Expected `iter.next()` to throw, but did not throw';
  } catch (e) {
    'BadValue!';
    e;
  } // IfAbruptRejectPromise(returnResult, promiseCapability).
  // Let returnValue be IteratorValue(returnResult).


  iter = f({
    return() {
      return {
        get value() {
          throw "BadValue!";
        },

        done: false
      };
    }

  });

  try {
    await iter.return();
    'Expected `iter.return()` to throw, but did not throw';
  } catch (e) {
    'BadValue!';
    e;
  } // IfAbruptRejectPromise(returnValue, promiseCapability).
  // Let returnDone be IteratorComplete(returnResult).


  iter = f({
    return() {
      return {
        value: undefined,

        get done() {
          throw "BadValue!";
        }

      };
    }

  });

  try {
    await iter.return();
    'Expected `iter.return()` to throw, but did not throw';
  } catch (e) {
    'BadValue!';
    e;
  } // IfAbruptRejectPromise(throwResult, promiseCapability).
  // Let throwValue be IteratorValue(throwResult).


  iter = f({
    throw() {
      return {
        get value() {
          throw "BadValue!";
        },

        done: false
      };
    }

  });

  try {
    await iter.throw();
    'Expected `iter.throw()` to throw, but did not throw';
  } catch (e) {
    'BadValue!';
    e;
  } // IfAbruptRejectPromise(throwValue, promiseCapability).
  // Let throwDone be IteratorComplete(throwResult).


  iter = f({
    throw() {
      return {
        value: undefined,

        get done() {
          throw "BadValue!";
        }

      };
    }

  });

  try {
    await iter.throw();
    'Expected `iter.throw()` to throw, but did not throw';
  } catch (e) {
    'BadValue!';
    e;
  }
})().catch)); Inst268++; } } catch(e) {}try { if (Inst269 <= 1000 && typeof (AsyncFromSyncOrderOfOperations) != "undefined") {_RecordType("<5887,5917,282>",(AsyncFromSyncOrderOfOperations)); Inst269++; } } catch(e) {}
(async function AsyncFromSyncOrderOfOperations() {
  let log = [];
try { if (Inst270 <= 1000 && typeof (log) != "undefined") {_RecordType("<5928,5931,283>",(log)); Inst270++; } } catch(e) {}
try { if (Inst272 <= 1000 && typeof (f) != "undefined") {_RecordType("<5947,5948,284>",(f)); Inst272++; } } catch(e) {}try { if (Inst273 <= 1000 && typeof (sync) != "undefined") {_RecordType("<5949,5953,284>",(sync)); Inst273++; } } catch(e) {}try { if (Inst274 <= 1000 && typeof (log) != "undefined") {_RecordType("<5973,5976,284>",(log)); Inst274++; } } catch(e) {}
  iter = f(sync(["sync-value"], 0, log));
try { if (Inst271 <= 1000 && typeof (iter) != "undefined") {_RecordType("<5940,5944,284>",(iter)); Inst271++; } } catch(e) {}

try { if (Inst277 <= 1000 && typeof (e) != "undefined") {_RecordType("<6069,6070,289>",(e)); Inst277++; } } catch(e) {}
  try {
try { if (Inst275 <= 1000 && typeof (iter.next) != "undefined") {_RecordType("<5999,6008,287>",(iter.next)); Inst275++; } } catch(e) {}try { if (Inst276 <= 1000 && typeof (iter) != "undefined") {_RecordType("<5999,6003,287>",(iter)); Inst276++; } } catch(e) {}
    await iter.next();
    "Iterator.next() method is not optional";
  } catch (e) {
try { if (Inst278 <= 1000 && typeof (e) != "undefined") {_RecordType("<6078,6079,290>",(e)); Inst278++; } } catch(e) {}
    e;
try { if (Inst279 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<6085,6094,291>",(TypeError)); Inst279++; } } catch(e) {}
    TypeError;
    [];
try { if (Inst280 <= 1000 && typeof (log) != "undefined") {_RecordType("<6108,6111,293>",(log)); Inst280++; } } catch(e) {}
    log;
  }

  log = [];
try { if (Inst281 <= 1000 && typeof (log) != "undefined") {_RecordType("<6120,6123,296>",(log)); Inst281++; } } catch(e) {}
try { if (Inst283 <= 1000 && typeof (f) != "undefined") {_RecordType("<6139,6140,297>",(f)); Inst283++; } } catch(e) {}try { if (Inst284 <= 1000 && typeof (sync) != "undefined") {_RecordType("<6141,6145,297>",(sync)); Inst284++; } } catch(e) {}try { if (Inst285 <= 1000 && typeof (kNext) != "undefined") {_RecordType("<6162,6167,297>",(kNext)); Inst285++; } } catch(e) {}try { if (Inst286 <= 1000 && typeof (log) != "undefined") {_RecordType("<6169,6172,297>",(log)); Inst286++; } } catch(e) {}
  iter = f(sync(["sync-value"], kNext, log));
try { if (Inst282 <= 1000 && typeof (iter) != "undefined") {_RecordType("<6132,6136,297>",(iter)); Inst282++; } } catch(e) {}
  ({
    value: "sync-value",
    done: false
  });
try { if (Inst287 <= 1000 && typeof (iter.next) != "undefined") {_RecordType("<6236,6245,302>",(iter.next)); Inst287++; } } catch(e) {}try { if (Inst288 <= 1000 && typeof (iter) != "undefined") {_RecordType("<6236,6240,302>",(iter)); Inst288++; } } catch(e) {}
  await iter.next("a");
  [{
    method: "next",
    sent: "a",
    value: "sync-value",
    done: false
  }];
try { if (Inst289 <= 1000 && typeof (log) != "undefined") {_RecordType("<6341,6344,309>",(log)); Inst289++; } } catch(e) {}
  log;
  log = [];
try { if (Inst290 <= 1000 && typeof (log) != "undefined") {_RecordType("<6348,6351,310>",(log)); Inst290++; } } catch(e) {}
try { if (Inst292 <= 1000 && typeof (resolveLater) != "undefined") {_RecordType("<6377,6389,311>",(resolveLater)); Inst292++; } } catch(e) {}
  let asyncValue = resolveLater("async-value");
try { if (Inst291 <= 1000 && typeof (asyncValue) != "undefined") {_RecordType("<6364,6374,311>",(asyncValue)); Inst291++; } } catch(e) {}
try { if (Inst294 <= 1000 && typeof (f) != "undefined") {_RecordType("<6415,6416,312>",(f)); Inst294++; } } catch(e) {}try { if (Inst295 <= 1000 && typeof (sync) != "undefined") {_RecordType("<6417,6421,312>",(sync)); Inst295++; } } catch(e) {}try { if (Inst296 <= 1000 && typeof (asyncValue) != "undefined") {_RecordType("<6423,6433,312>",(asyncValue)); Inst296++; } } catch(e) {}try { if (Inst297 <= 1000 && typeof (kNext) != "undefined") {_RecordType("<6436,6441,312>",(kNext)); Inst297++; } } catch(e) {}try { if (Inst298 <= 1000 && typeof (log) != "undefined") {_RecordType("<6443,6446,312>",(log)); Inst298++; } } catch(e) {}
  iter = f(sync([asyncValue], kNext, log));
try { if (Inst293 <= 1000 && typeof (iter) != "undefined") {_RecordType("<6408,6412,312>",(iter)); Inst293++; } } catch(e) {}
  ({
    value: "async-value",
    done: false
  });
try { if (Inst299 <= 1000 && typeof (iter.next) != "undefined") {_RecordType("<6511,6520,317>",(iter.next)); Inst299++; } } catch(e) {}try { if (Inst300 <= 1000 && typeof (iter) != "undefined") {_RecordType("<6511,6515,317>",(iter)); Inst300++; } } catch(e) {}
  await iter.next("b");
try { if (Inst301 <= 1000 && typeof (asyncValue) != "undefined") {_RecordType("<6578,6588,321>",(asyncValue)); Inst301++; } } catch(e) {}
  [{
    method: "next",
    sent: "b",
    value: asyncValue,
    done: false
  }];
try { if (Inst302 <= 1000 && typeof (log) != "undefined") {_RecordType("<6614,6617,324>",(log)); Inst302++; } } catch(e) {}
  log;
  // If [sync_iterator].next() produces a rejected Promise or an exception is
  // thrown, Promise is rejected with thrown/rejected value.
  log = [];
try { if (Inst303 <= 1000 && typeof (log) != "undefined") {_RecordType("<6760,6763,327>",(log)); Inst303++; } } catch(e) {}
try { if (Inst305 <= 1000 && typeof (rejectLater) != "undefined") {_RecordType("<6785,6796,328>",(rejectLater)); Inst305++; } } catch(e) {}
  asyncValue = rejectLater("Boo!");
try { if (Inst304 <= 1000 && typeof (asyncValue) != "undefined") {_RecordType("<6772,6782,328>",(asyncValue)); Inst304++; } } catch(e) {}
try { if (Inst307 <= 1000 && typeof (f) != "undefined") {_RecordType("<6815,6816,329>",(f)); Inst307++; } } catch(e) {}try { if (Inst308 <= 1000 && typeof (sync) != "undefined") {_RecordType("<6817,6821,329>",(sync)); Inst308++; } } catch(e) {}try { if (Inst309 <= 1000 && typeof (asyncValue) != "undefined") {_RecordType("<6823,6833,329>",(asyncValue)); Inst309++; } } catch(e) {}try { if (Inst310 <= 1000 && typeof (kNext) != "undefined") {_RecordType("<6836,6841,329>",(kNext)); Inst310++; } } catch(e) {}try { if (Inst311 <= 1000 && typeof (log) != "undefined") {_RecordType("<6843,6846,329>",(log)); Inst311++; } } catch(e) {}
  iter = f(sync([asyncValue], kNext, log));
try { if (Inst306 <= 1000 && typeof (iter) != "undefined") {_RecordType("<6808,6812,329>",(iter)); Inst306++; } } catch(e) {}

try { if (Inst314 <= 1000 && typeof (e) != "undefined") {_RecordType("<6958,6959,334>",(e)); Inst314++; } } catch(e) {}
  try {
try { if (Inst312 <= 1000 && typeof (iter.next) != "undefined") {_RecordType("<6869,6878,332>",(iter.next)); Inst312++; } } catch(e) {}try { if (Inst313 <= 1000 && typeof (iter) != "undefined") {_RecordType("<6869,6873,332>",(iter)); Inst313++; } } catch(e) {}
    await iter.next('c');
    'Expected `iter.next(\'c\') to throw, but did not throw';
  } catch (e) {
    "Boo!";
try { if (Inst315 <= 1000 && typeof (e) != "undefined") {_RecordType("<6979,6980,336>",(e)); Inst315++; } } catch(e) {}
    e;
try { if (Inst316 <= 1000 && typeof (asyncValue) != "undefined") {_RecordType("<7041,7051,340>",(asyncValue)); Inst316++; } } catch(e) {}
    [{
      method: 'next',
      sent: 'c',
      value: asyncValue,
      done: false
    }];
try { if (Inst317 <= 1000 && typeof (log) != "undefined") {_RecordType("<7083,7086,343>",(log)); Inst317++; } } catch(e) {}
    log;
  }

  log = [];
try { if (Inst318 <= 1000 && typeof (log) != "undefined") {_RecordType("<7095,7098,346>",(log)); Inst318++; } } catch(e) {}
try { if (Inst320 <= 1000 && typeof (f) != "undefined") {_RecordType("<7114,7115,347>",(f)); Inst320++; } } catch(e) {}try { if (Inst321 <= 1000 && typeof (sync) != "undefined") {_RecordType("<7116,7120,347>",(sync)); Inst321++; } } catch(e) {}try { if (Inst322 <= 1000 && typeof (kNextThrows) != "undefined") {_RecordType("<7137,7148,347>",(kNextThrows)); Inst322++; } } catch(e) {}try { if (Inst323 <= 1000 && typeof (log) != "undefined") {_RecordType("<7150,7153,347>",(log)); Inst323++; } } catch(e) {}
  iter = f(sync(['sync-value'], kNextThrows, log));
try { if (Inst319 <= 1000 && typeof (iter) != "undefined") {_RecordType("<7107,7111,347>",(iter)); Inst319++; } } catch(e) {}

try { if (Inst326 <= 1000 && typeof (e) != "undefined") {_RecordType("<7268,7269,352>",(e)); Inst326++; } } catch(e) {}
  try {
try { if (Inst324 <= 1000 && typeof (iter.next) != "undefined") {_RecordType("<7176,7185,350>",(iter.next)); Inst324++; } } catch(e) {}try { if (Inst325 <= 1000 && typeof (iter) != "undefined") {_RecordType("<7176,7180,350>",(iter)); Inst325++; } } catch(e) {}
    await iter.next('Boo!');
    'Expected `iter.next(\'c\') to throw, but did not throw';
  } catch (e) {
    "Boo!";
try { if (Inst327 <= 1000 && typeof (e) != "undefined") {_RecordType("<7289,7290,354>",(e)); Inst327++; } } catch(e) {}
    e;
    [{
      method: 'next',
      sent: 'Boo!',
      value: 'sync-value',
      done: false
    }];
try { if (Inst328 <= 1000 && typeof (log) != "undefined") {_RecordType("<7398,7401,361>",(log)); Inst328++; } } catch(e) {}
    log;
  } // [Async-from-Sync Iterator].next() will be rejected with a TypeError if
  // Type([sync_iterator].next()) is not Object.


  log = [];
try { if (Inst329 <= 1000 && typeof (log) != "undefined") {_RecordType("<7534,7537,366>",(log)); Inst329++; } } catch(e) {}
try { if (Inst331 <= 1000 && typeof (f) != "undefined") {_RecordType("<7553,7554,367>",(f)); Inst331++; } } catch(e) {}try { if (Inst332 <= 1000 && typeof (sync) != "undefined") {_RecordType("<7555,7559,367>",(sync)); Inst332++; } } catch(e) {}try { if (Inst333 <= 1000 && typeof (kNextUnchanged) != "undefined") {_RecordType("<7576,7590,367>",(kNextUnchanged)); Inst333++; } } catch(e) {}try { if (Inst334 <= 1000 && typeof (log) != "undefined") {_RecordType("<7592,7595,367>",(log)); Inst334++; } } catch(e) {}
  iter = f(sync(['sync-value'], kNextUnchanged, log));
try { if (Inst330 <= 1000 && typeof (iter) != "undefined") {_RecordType("<7546,7550,367>",(iter)); Inst330++; } } catch(e) {}

try { if (Inst337 <= 1000 && typeof (e) != "undefined") {_RecordType("<7743,7744,372>",(e)); Inst337++; } } catch(e) {}
  try {
try { if (Inst335 <= 1000 && typeof (iter.next) != "undefined") {_RecordType("<7618,7627,370>",(iter.next)); Inst335++; } } catch(e) {}try { if (Inst336 <= 1000 && typeof (iter) != "undefined") {_RecordType("<7618,7622,370>",(iter)); Inst336++; } } catch(e) {}
    await iter.next('not-a-JSReceiver');
    'Expected `iter.next(\'not-a-JSReceiver\')` to ' + 'throw, but did not throw';
  } catch (e) {
try { if (Inst338 <= 1000 && typeof (e.constructor) != "undefined") {_RecordType("<7752,7765,373>",(e.constructor)); Inst338++; } } catch(e) {}try { if (Inst339 <= 1000 && typeof (e) != "undefined") {_RecordType("<7752,7753,373>",(e)); Inst339++; } } catch(e) {}
    e.constructor;
try { if (Inst340 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<7771,7780,374>",(TypeError)); Inst340++; } } catch(e) {}
    TypeError;
  }

  [{
    method: 'next',
    sent: 'not-a-JSReceiver',
    value: 'sync-value',
    done: false
  }];
try { if (Inst341 <= 1000 && typeof (log) != "undefined") {_RecordType("<7891,7894,383>",(log)); Inst341++; } } catch(e) {}
  log;
  // If [sync_iterator] does not have a .return() method, return a Promise
  // resolved with the value `{ value: <<sent value>>, done: true }`.
  log = [];
try { if (Inst342 <= 1000 && typeof (log) != "undefined") {_RecordType("<8043,8046,386>",(log)); Inst342++; } } catch(e) {}
try { if (Inst344 <= 1000 && typeof (f) != "undefined") {_RecordType("<8062,8063,387>",(f)); Inst344++; } } catch(e) {}try { if (Inst345 <= 1000 && typeof (sync) != "undefined") {_RecordType("<8064,8068,387>",(sync)); Inst345++; } } catch(e) {}try { if (Inst346 <= 1000 && typeof (kNext) != "undefined") {_RecordType("<8086,8091,387>",(kNext)); Inst346++; } } catch(e) {}try { if (Inst347 <= 1000 && typeof (log) != "undefined") {_RecordType("<8093,8096,387>",(log)); Inst347++; } } catch(e) {}
  iter = f(sync(['sync-return'], kNext, log));
try { if (Inst343 <= 1000 && typeof (iter) != "undefined") {_RecordType("<8055,8059,387>",(iter)); Inst343++; } } catch(e) {}
  ({
    value: 'd',
    done: true
  });
try { if (Inst348 <= 1000 && typeof (iter.return) != "undefined") {_RecordType("<8150,8161,392>",(iter.return)); Inst348++; } } catch(e) {}try { if (Inst349 <= 1000 && typeof (iter) != "undefined") {_RecordType("<8150,8154,392>",(iter)); Inst349++; } } catch(e) {}
  await iter.return('d');
  ({
    value: 'sync-return',
    done: false
  });
try { if (Inst350 <= 1000 && typeof (iter.next) != "undefined") {_RecordType("<8229,8238,397>",(iter.next)); Inst350++; } } catch(e) {}try { if (Inst351 <= 1000 && typeof (iter) != "undefined") {_RecordType("<8229,8233,397>",(iter)); Inst351++; } } catch(e) {}
  await iter.next('e');
  [{
    method: 'next',
    sent: 'e',
    value: 'sync-return',
    done: false
  }];
try { if (Inst352 <= 1000 && typeof (log) != "undefined") {_RecordType("<8335,8338,404>",(log)); Inst352++; } } catch(e) {}
  log;
  // If [sync_iterator] does have a .return() method, return a Promise
  // fulfilled with the iterator result of [sync_iterator].return().
  log = [];
try { if (Inst353 <= 1000 && typeof (log) != "undefined") {_RecordType("<8482,8485,407>",(log)); Inst353++; } } catch(e) {}
try { if (Inst355 <= 1000 && typeof (f) != "undefined") {_RecordType("<8501,8502,408>",(f)); Inst355++; } } catch(e) {}try { if (Inst356 <= 1000 && typeof (sync) != "undefined") {_RecordType("<8503,8507,408>",(sync)); Inst356++; } } catch(e) {}try { if (Inst357 <= 1000 && typeof (kNext) != "undefined") {_RecordType("<8525,8530,408>",(kNext)); Inst357++; } } catch(e) {}try { if (Inst358 <= 1000 && typeof (kReturn) != "undefined") {_RecordType("<8533,8540,408>",(kReturn)); Inst358++; } } catch(e) {}try { if (Inst359 <= 1000 && typeof (log) != "undefined") {_RecordType("<8542,8545,408>",(log)); Inst359++; } } catch(e) {}
  iter = f(sync(['sync-return'], kNext | kReturn, log));
try { if (Inst354 <= 1000 && typeof (iter) != "undefined") {_RecordType("<8494,8498,408>",(iter)); Inst354++; } } catch(e) {}
  ({
    value: 'f',
    done: true
  });
try { if (Inst360 <= 1000 && typeof (iter.return) != "undefined") {_RecordType("<8599,8610,413>",(iter.return)); Inst360++; } } catch(e) {}try { if (Inst361 <= 1000 && typeof (iter) != "undefined") {_RecordType("<8599,8603,413>",(iter)); Inst361++; } } catch(e) {}
  await iter.return('f');
  ({
    value: 'sync-return',
    done: false
  });
try { if (Inst362 <= 1000 && typeof (iter.next) != "undefined") {_RecordType("<8678,8687,418>",(iter.next)); Inst362++; } } catch(e) {}try { if (Inst363 <= 1000 && typeof (iter) != "undefined") {_RecordType("<8678,8682,418>",(iter)); Inst363++; } } catch(e) {}
  await iter.next('g');
  [{
    method: 'return',
    sent: 'f',
    done: true
  }, {
    method: 'next',
    sent: 'g',
    value: 'sync-return',
    done: false
  }];
try { if (Inst364 <= 1000 && typeof (log) != "undefined") {_RecordType("<8843,8846,429>",(log)); Inst364++; } } catch(e) {}
  log;
  // If [sync_iterator].return() produces a rejected Promise or an exception is
  // thrown, Promise is rejected with thrown/rejected value.
  log = [];
try { if (Inst365 <= 1000 && typeof (log) != "undefined") {_RecordType("<8991,8994,432>",(log)); Inst365++; } } catch(e) {}
try { if (Inst367 <= 1000 && typeof (f) != "undefined") {_RecordType("<9010,9011,433>",(f)); Inst367++; } } catch(e) {}try { if (Inst368 <= 1000 && typeof (sync) != "undefined") {_RecordType("<9012,9016,433>",(sync)); Inst368++; } } catch(e) {}try { if (Inst369 <= 1000 && typeof (kNext) != "undefined") {_RecordType("<9033,9038,433>",(kNext)); Inst369++; } } catch(e) {}try { if (Inst370 <= 1000 && typeof (kReturnThrows) != "undefined") {_RecordType("<9041,9054,433>",(kReturnThrows)); Inst370++; } } catch(e) {}try { if (Inst371 <= 1000 && typeof (log) != "undefined") {_RecordType("<9056,9059,433>",(log)); Inst371++; } } catch(e) {}
  iter = f(sync(['sync-value'], kNext | kReturnThrows, log));
try { if (Inst366 <= 1000 && typeof (iter) != "undefined") {_RecordType("<9003,9007,433>",(iter)); Inst366++; } } catch(e) {}

try { if (Inst374 <= 1000 && typeof (e) != "undefined") {_RecordType("<9189,9190,438>",(e)); Inst374++; } } catch(e) {}
  try {
try { if (Inst372 <= 1000 && typeof (iter.return) != "undefined") {_RecordType("<9082,9093,436>",(iter.return)); Inst372++; } } catch(e) {}try { if (Inst373 <= 1000 && typeof (iter) != "undefined") {_RecordType("<9082,9086,436>",(iter)); Inst373++; } } catch(e) {}
    await iter.return('Boo!!');
    'Expected `iter.return(\'Boo!!\')` to throw, but did ' + 'not throw';
  } catch (e) {
    "Boo!!";
try { if (Inst375 <= 1000 && typeof (e) != "undefined") {_RecordType("<9211,9212,440>",(e)); Inst375++; } } catch(e) {}
    e;
  } // [Async-from-Sync Iterator] merely delegates, and does not keep track of
  // whether [sync_iterator] is completed or not.


  ({
    value: 'sync-value',
    done: false
  });
try { if (Inst376 <= 1000 && typeof (iter.next) != "undefined") {_RecordType("<9405,9414,449>",(iter.next)); Inst376++; } } catch(e) {}try { if (Inst377 <= 1000 && typeof (iter) != "undefined") {_RecordType("<9405,9409,449>",(iter)); Inst377++; } } catch(e) {}
  await iter.next('h');
  [{
    method: 'return',
    sent: 'Boo!!',
    done: true
  }, {
    method: 'next',
    sent: 'h',
    value: 'sync-value',
    done: false
  }];
try { if (Inst378 <= 1000 && typeof (log) != "undefined") {_RecordType("<9573,9576,460>",(log)); Inst378++; } } catch(e) {}
  log;
  log = [];
try { if (Inst379 <= 1000 && typeof (log) != "undefined") {_RecordType("<9580,9583,461>",(log)); Inst379++; } } catch(e) {}
try { if (Inst381 <= 1000 && typeof (f) != "undefined") {_RecordType("<9599,9600,462>",(f)); Inst381++; } } catch(e) {}try { if (Inst382 <= 1000 && typeof (sync) != "undefined") {_RecordType("<9601,9605,462>",(sync)); Inst382++; } } catch(e) {}try { if (Inst383 <= 1000 && typeof (kNext) != "undefined") {_RecordType("<9622,9627,462>",(kNext)); Inst383++; } } catch(e) {}try { if (Inst384 <= 1000 && typeof (kReturn) != "undefined") {_RecordType("<9630,9637,462>",(kReturn)); Inst384++; } } catch(e) {}try { if (Inst385 <= 1000 && typeof (log) != "undefined") {_RecordType("<9639,9642,462>",(log)); Inst385++; } } catch(e) {}
  iter = f(sync(['sync-value'], kNext | kReturn, log));
try { if (Inst380 <= 1000 && typeof (iter) != "undefined") {_RecordType("<9592,9596,462>",(iter)); Inst380++; } } catch(e) {}
try { if (Inst387 <= 1000 && typeof (Promise.reject) != "undefined") {_RecordType("<9664,9678,463>",(Promise.reject)); Inst387++; } } catch(e) {}try { if (Inst388 <= 1000 && typeof (Promise) != "undefined") {_RecordType("<9664,9671,463>",(Promise)); Inst388++; } } catch(e) {}
  let rejection = Promise.reject('Boo!!');
try { if (Inst386 <= 1000 && typeof (rejection) != "undefined") {_RecordType("<9652,9661,463>",(rejection)); Inst386++; } } catch(e) {}

try { if (Inst392 <= 1000 && typeof (e) != "undefined") {_RecordType("<9833,9834,468>",(e)); Inst392++; } } catch(e) {}
  try {
try { if (Inst389 <= 1000 && typeof (iter.return) != "undefined") {_RecordType("<9708,9719,466>",(iter.return)); Inst389++; } } catch(e) {}try { if (Inst390 <= 1000 && typeof (iter) != "undefined") {_RecordType("<9708,9712,466>",(iter)); Inst390++; } } catch(e) {}try { if (Inst391 <= 1000 && typeof (rejection) != "undefined") {_RecordType("<9720,9729,466>",(rejection)); Inst391++; } } catch(e) {}
    await iter.return(rejection);
    'Expected `iter.return(Promise.reject(\'Boo!!\'))` to ' + 'throw, but did not throw';
  } catch (e) {
    'Boo!!';
try { if (Inst393 <= 1000 && typeof (e) != "undefined") {_RecordType("<9855,9856,470>",(e)); Inst393++; } } catch(e) {}
    e;
  } // [Async-from-Sync Iterator] merely delegates, and does not keep track of
  // whether [sync_iterator] is completed or not.


  ({
    value: 'sync-value',
    done: false
  });
try { if (Inst394 <= 1000 && typeof (iter.next) != "undefined") {_RecordType("<10049,10058,479>",(iter.next)); Inst394++; } } catch(e) {}try { if (Inst395 <= 1000 && typeof (iter) != "undefined") {_RecordType("<10049,10053,479>",(iter)); Inst395++; } } catch(e) {}
  await iter.next('i');
try { if (Inst396 <= 1000 && typeof (rejection) != "undefined") {_RecordType("<10102,10111,482>",(rejection)); Inst396++; } } catch(e) {}
  [{
    method: 'return',
    sent: rejection,
    done: true
  }, {
    method: 'next',
    sent: 'i',
    value: 'sync-value',
    done: false
  }];
try { if (Inst397 <= 1000 && typeof (log) != "undefined") {_RecordType("<10219,10222,490>",(log)); Inst397++; } } catch(e) {}
  log;
  // [Async-from-Sync Iterator].return() will be rejected with a TypeError if
  // Type([sync_iterator].return()) is not Object.
  log = [];
try { if (Inst398 <= 1000 && typeof (log) != "undefined") {_RecordType("<10355,10358,493>",(log)); Inst398++; } } catch(e) {}
try { if (Inst400 <= 1000 && typeof (f) != "undefined") {_RecordType("<10374,10375,494>",(f)); Inst400++; } } catch(e) {}try { if (Inst401 <= 1000 && typeof (sync) != "undefined") {_RecordType("<10376,10380,494>",(sync)); Inst401++; } } catch(e) {}try { if (Inst402 <= 1000 && typeof (kNext) != "undefined") {_RecordType("<10397,10402,494>",(kNext)); Inst402++; } } catch(e) {}try { if (Inst403 <= 1000 && typeof (kReturnUnchanged) != "undefined") {_RecordType("<10405,10421,494>",(kReturnUnchanged)); Inst403++; } } catch(e) {}try { if (Inst404 <= 1000 && typeof (log) != "undefined") {_RecordType("<10423,10426,494>",(log)); Inst404++; } } catch(e) {}
  iter = f(sync(['sync-value'], kNext | kReturnUnchanged, log));
try { if (Inst399 <= 1000 && typeof (iter) != "undefined") {_RecordType("<10367,10371,494>",(iter)); Inst399++; } } catch(e) {}

try { if (Inst407 <= 1000 && typeof (e) != "undefined") {_RecordType("<10578,10579,499>",(e)); Inst407++; } } catch(e) {}
  try {
try { if (Inst405 <= 1000 && typeof (iter.return) != "undefined") {_RecordType("<10449,10460,497>",(iter.return)); Inst405++; } } catch(e) {}try { if (Inst406 <= 1000 && typeof (iter) != "undefined") {_RecordType("<10449,10453,497>",(iter)); Inst406++; } } catch(e) {}
    await iter.return('not-a-JSReceiver');
    'Expected `iter.return(\'not-a-JSReceiver\')` to ' + 'throw, but did not throw';
  } catch (e) {
try { if (Inst408 <= 1000 && typeof (e.constructor) != "undefined") {_RecordType("<10587,10600,500>",(e.constructor)); Inst408++; } } catch(e) {}try { if (Inst409 <= 1000 && typeof (e) != "undefined") {_RecordType("<10587,10588,500>",(e)); Inst409++; } } catch(e) {}
    e.constructor;
try { if (Inst410 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<10606,10615,501>",(TypeError)); Inst410++; } } catch(e) {}
    TypeError;
  } // [Async-from-Sync Iterator] merely delegates, and does not keep track of
  // whether [sync_iterator] is completed or not.


  ({
    value: 'sync-value',
    done: false
  });
try { if (Inst411 <= 1000 && typeof (iter.next) != "undefined") {_RecordType("<10808,10817,510>",(iter.next)); Inst411++; } } catch(e) {}try { if (Inst412 <= 1000 && typeof (iter) != "undefined") {_RecordType("<10808,10812,510>",(iter)); Inst412++; } } catch(e) {}
  await iter.next('j');
  [{
    method: 'return',
    sent: 'not-a-JSReceiver',
    done: true
  }, {
    method: 'next',
    sent: 'j',
    value: 'sync-value',
    done: false
  }];
try { if (Inst413 <= 1000 && typeof (log) != "undefined") {_RecordType("<10987,10990,521>",(log)); Inst413++; } } catch(e) {}
  log;
  // If [sync_iterator] does not have a .throw method, return a Promise rejected
  // with the sent value.
  log = [];
try { if (Inst414 <= 1000 && typeof (log) != "undefined") {_RecordType("<11101,11104,524>",(log)); Inst414++; } } catch(e) {}
try { if (Inst416 <= 1000 && typeof (f) != "undefined") {_RecordType("<11120,11121,525>",(f)); Inst416++; } } catch(e) {}try { if (Inst417 <= 1000 && typeof (sync) != "undefined") {_RecordType("<11122,11126,525>",(sync)); Inst417++; } } catch(e) {}try { if (Inst418 <= 1000 && typeof (kNext) != "undefined") {_RecordType("<11143,11148,525>",(kNext)); Inst418++; } } catch(e) {}try { if (Inst419 <= 1000 && typeof (log) != "undefined") {_RecordType("<11150,11153,525>",(log)); Inst419++; } } catch(e) {}
  iter = f(sync(['sync-value'], kNext, log));
try { if (Inst415 <= 1000 && typeof (iter) != "undefined") {_RecordType("<11113,11117,525>",(iter)); Inst415++; } } catch(e) {}

try { if (Inst422 <= 1000 && typeof (e) != "undefined") {_RecordType("<11279,11280,530>",(e)); Inst422++; } } catch(e) {}
  try {
try { if (Inst420 <= 1000 && typeof (iter.throw) != "undefined") {_RecordType("<11176,11186,528>",(iter.throw)); Inst420++; } } catch(e) {}try { if (Inst421 <= 1000 && typeof (iter) != "undefined") {_RecordType("<11176,11180,528>",(iter)); Inst421++; } } catch(e) {}
    await iter.throw('Boo!!');
    'Expected iter.throw(\'Boo!!\') to throw, but did not ' + 'throw';
  } catch (e) {
    'Boo!!';
try { if (Inst423 <= 1000 && typeof (e) != "undefined") {_RecordType("<11301,11302,532>",(e)); Inst423++; } } catch(e) {}
    e;
  } // [Async-from-Sync Iterator] merely delegates, and does not keep track of
  // whether [sync_iterator] is completed or not.


  ({
    value: 'sync-value',
    done: false
  });
try { if (Inst424 <= 1000 && typeof (iter.next) != "undefined") {_RecordType("<11495,11504,541>",(iter.next)); Inst424++; } } catch(e) {}try { if (Inst425 <= 1000 && typeof (iter) != "undefined") {_RecordType("<11495,11499,541>",(iter)); Inst425++; } } catch(e) {}
  await iter.next('k');
  [{
    method: 'next',
    sent: 'k',
    value: 'sync-value',
    done: false
  }];
try { if (Inst426 <= 1000 && typeof (log) != "undefined") {_RecordType("<11600,11603,548>",(log)); Inst426++; } } catch(e) {}
  log;
  log = [];
try { if (Inst427 <= 1000 && typeof (log) != "undefined") {_RecordType("<11607,11610,549>",(log)); Inst427++; } } catch(e) {}
try { if (Inst429 <= 1000 && typeof (f) != "undefined") {_RecordType("<11626,11627,550>",(f)); Inst429++; } } catch(e) {}try { if (Inst430 <= 1000 && typeof (sync) != "undefined") {_RecordType("<11628,11632,550>",(sync)); Inst430++; } } catch(e) {}try { if (Inst431 <= 1000 && typeof (kNext) != "undefined") {_RecordType("<11649,11654,550>",(kNext)); Inst431++; } } catch(e) {}try { if (Inst432 <= 1000 && typeof (kThrow) != "undefined") {_RecordType("<11657,11663,550>",(kThrow)); Inst432++; } } catch(e) {}try { if (Inst433 <= 1000 && typeof (log) != "undefined") {_RecordType("<11665,11668,550>",(log)); Inst433++; } } catch(e) {}
  iter = f(sync(['sync-value'], kNext | kThrow, log));
try { if (Inst428 <= 1000 && typeof (iter) != "undefined") {_RecordType("<11619,11623,550>",(iter)); Inst428++; } } catch(e) {}

try { if (Inst436 <= 1000 && typeof (e) != "undefined") {_RecordType("<11794,11795,555>",(e)); Inst436++; } } catch(e) {}
  try {
try { if (Inst434 <= 1000 && typeof (iter.throw) != "undefined") {_RecordType("<11691,11701,553>",(iter.throw)); Inst434++; } } catch(e) {}try { if (Inst435 <= 1000 && typeof (iter) != "undefined") {_RecordType("<11691,11695,553>",(iter)); Inst435++; } } catch(e) {}
    await iter.throw('Boo!!');
    'Expected iter.throw(\'Boo!!\') to throw, but did not ' + 'throw';
  } catch (e) {
    'Boo!!';
try { if (Inst437 <= 1000 && typeof (e) != "undefined") {_RecordType("<11816,11817,557>",(e)); Inst437++; } } catch(e) {}
    e;
  } // [Async-from-Sync Iterator] merely delegates, and does not keep track of
  // whether [sync_iterator] is completed or not.


  ({
    value: 'sync-value',
    done: false
  });
try { if (Inst438 <= 1000 && typeof (iter.next) != "undefined") {_RecordType("<12010,12019,566>",(iter.next)); Inst438++; } } catch(e) {}try { if (Inst439 <= 1000 && typeof (iter) != "undefined") {_RecordType("<12010,12014,566>",(iter)); Inst439++; } } catch(e) {}
  await iter.next('l');
  [{
    method: 'throw',
    sent: 'Boo!!',
    done: false
  }, {
    method: 'next',
    sent: 'l',
    value: 'sync-value',
    done: false
  }];
try { if (Inst440 <= 1000 && typeof (log) != "undefined") {_RecordType("<12178,12181,577>",(log)); Inst440++; } } catch(e) {}
  log;
  // If [sync_iterator].throw() returns a resolved Promise or a Completion
  // with [[Type]] "normal" or "return", return a resolved Promise
  log = [];
try { if (Inst441 <= 1000 && typeof (log) != "undefined") {_RecordType("<12327,12330,580>",(log)); Inst441++; } } catch(e) {}
try { if (Inst443 <= 1000 && typeof (f) != "undefined") {_RecordType("<12346,12347,581>",(f)); Inst443++; } } catch(e) {}try { if (Inst444 <= 1000 && typeof (sync) != "undefined") {_RecordType("<12348,12352,581>",(sync)); Inst444++; } } catch(e) {}try { if (Inst445 <= 1000 && typeof (kNext) != "undefined") {_RecordType("<12369,12374,581>",(kNext)); Inst445++; } } catch(e) {}try { if (Inst446 <= 1000 && typeof (kThrowNormal) != "undefined") {_RecordType("<12377,12389,581>",(kThrowNormal)); Inst446++; } } catch(e) {}try { if (Inst447 <= 1000 && typeof (log) != "undefined") {_RecordType("<12391,12394,581>",(log)); Inst447++; } } catch(e) {}
  iter = f(sync(['sync-value'], kNext | kThrowNormal, log));
try { if (Inst442 <= 1000 && typeof (iter) != "undefined") {_RecordType("<12339,12343,581>",(iter)); Inst442++; } } catch(e) {}
  ({
    value: 'Boo!!',
    done: false
  });
try { if (Inst448 <= 1000 && typeof (iter.throw) != "undefined") {_RecordType("<12453,12463,586>",(iter.throw)); Inst448++; } } catch(e) {}try { if (Inst449 <= 1000 && typeof (iter) != "undefined") {_RecordType("<12453,12457,586>",(iter)); Inst449++; } } catch(e) {}
  await iter.throw('Boo!!');
  ({
    value: 'sync-value',
    done: false
  });
try { if (Inst450 <= 1000 && typeof (iter.next) != "undefined") {_RecordType("<12534,12543,591>",(iter.next)); Inst450++; } } catch(e) {}try { if (Inst451 <= 1000 && typeof (iter) != "undefined") {_RecordType("<12534,12538,591>",(iter)); Inst451++; } } catch(e) {}
  await iter.next('m');
  [{
    method: 'throw',
    sent: 'Boo!!',
    done: false
  }, {
    method: 'next',
    sent: 'm',
    value: 'sync-value',
    done: false
  }];
try { if (Inst452 <= 1000 && typeof (log) != "undefined") {_RecordType("<12702,12705,602>",(log)); Inst452++; } } catch(e) {}
  log;
  // [Async-from-Sync Iterator].throw() will be rejected with a TypeError if
  // Type([sync_iterator].throw()) is not Object.
  log = [];
try { if (Inst453 <= 1000 && typeof (log) != "undefined") {_RecordType("<12836,12839,605>",(log)); Inst453++; } } catch(e) {}
try { if (Inst455 <= 1000 && typeof (f) != "undefined") {_RecordType("<12855,12856,606>",(f)); Inst455++; } } catch(e) {}try { if (Inst456 <= 1000 && typeof (sync) != "undefined") {_RecordType("<12857,12861,606>",(sync)); Inst456++; } } catch(e) {}try { if (Inst457 <= 1000 && typeof (kNext) != "undefined") {_RecordType("<12878,12883,606>",(kNext)); Inst457++; } } catch(e) {}try { if (Inst458 <= 1000 && typeof (kThrowUnchanged) != "undefined") {_RecordType("<12886,12901,606>",(kThrowUnchanged)); Inst458++; } } catch(e) {}try { if (Inst459 <= 1000 && typeof (log) != "undefined") {_RecordType("<12903,12906,606>",(log)); Inst459++; } } catch(e) {}
  iter = f(sync(['sync-value'], kNext | kThrowUnchanged, log));
try { if (Inst454 <= 1000 && typeof (iter) != "undefined") {_RecordType("<12848,12852,606>",(iter)); Inst454++; } } catch(e) {}

try { if (Inst462 <= 1000 && typeof (e) != "undefined") {_RecordType("<13056,13057,611>",(e)); Inst462++; } } catch(e) {}
  try {
try { if (Inst460 <= 1000 && typeof (iter.throw) != "undefined") {_RecordType("<12929,12939,609>",(iter.throw)); Inst460++; } } catch(e) {}try { if (Inst461 <= 1000 && typeof (iter) != "undefined") {_RecordType("<12929,12933,609>",(iter)); Inst461++; } } catch(e) {}
    await iter.throw('not-a-JSReceiver');
    'Expected `iter.throw(\'not-a-JSReceiver\')` to ' + 'throw, but did not throw';
  } catch (e) {
try { if (Inst463 <= 1000 && typeof (e.constructor) != "undefined") {_RecordType("<13065,13078,612>",(e.constructor)); Inst463++; } } catch(e) {}try { if (Inst464 <= 1000 && typeof (e) != "undefined") {_RecordType("<13065,13066,612>",(e)); Inst464++; } } catch(e) {}
    e.constructor;
try { if (Inst465 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<13084,13093,613>",(TypeError)); Inst465++; } } catch(e) {}
    TypeError;
  } // [Async-from-Sync Iterator] merely delegates, and does not keep track of
  // whether [sync_iterator] is completed or not.


  ({
    value: 'sync-value',
    done: false
  });
try { if (Inst466 <= 1000 && typeof (iter.next) != "undefined") {_RecordType("<13286,13295,622>",(iter.next)); Inst466++; } } catch(e) {}try { if (Inst467 <= 1000 && typeof (iter) != "undefined") {_RecordType("<13286,13290,622>",(iter)); Inst467++; } } catch(e) {}
  await iter.next('n');
  [{
    method: 'throw',
    sent: 'not-a-JSReceiver',
    done: false
  }, {
    method: 'next',
    sent: 'n',
    value: 'sync-value',
    done: false
  }];
try { if (Inst468 <= 1000 && typeof (log) != "undefined") {_RecordType("<13465,13468,633>",(log)); Inst468++; } } catch(e) {}
  log;
  // Let nextValue be IteratorValue(nextResult).
  // IfAbruptRejectPromise(nextValue, promiseCapability).)
try { if (Inst470 <= 1000 && typeof (f) != "undefined") {_RecordType("<13587,13588,636>",(f)); Inst470++; } } catch(e) {}try { if (Inst471 <= 1000 && typeof (next) != "undefined") {_RecordType("<13595,13599,637>",(next)); Inst471++; } } catch(e) {}
  iter = f({
    next() {
try { if (Inst472 <= 1000 && typeof (value) != "undefined") {_RecordType("<13631,13636,639>",(value)); Inst472++; } } catch(e) {}
      return {
        get value() {
          throw "BadValue!";
        },

        done: false
      };
    }

  });
try { if (Inst469 <= 1000 && typeof (iter) != "undefined") {_RecordType("<13580,13584,636>",(iter)); Inst469++; } } catch(e) {}

try { if (Inst475 <= 1000 && typeof (e) != "undefined") {_RecordType("<13825,13826,652>",(e)); Inst475++; } } catch(e) {}
  try {
try { if (Inst473 <= 1000 && typeof (iter.next) != "undefined") {_RecordType("<13743,13752,650>",(iter.next)); Inst473++; } } catch(e) {}try { if (Inst474 <= 1000 && typeof (iter) != "undefined") {_RecordType("<13743,13747,650>",(iter)); Inst474++; } } catch(e) {}
    await iter.next();
    'Expected `iter.next()` to throw, but did not throw';
  } catch (e) {
    'BadValue!';
try { if (Inst476 <= 1000 && typeof (e) != "undefined") {_RecordType("<13851,13852,654>",(e)); Inst476++; } } catch(e) {}
    e;
  } // Let nextDone be IteratorComplete(nextResult).
  // IfAbruptRejectPromise(nextDone, promiseCapability).


try { if (Inst478 <= 1000 && typeof (f) != "undefined") {_RecordType("<13975,13976,659>",(f)); Inst478++; } } catch(e) {}try { if (Inst479 <= 1000 && typeof (next) != "undefined") {_RecordType("<13983,13987,660>",(next)); Inst479++; } } catch(e) {}
  iter = f({
    next() {
try { if (Inst480 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<14022,14031,662>",(undefined)); Inst480++; } } catch(e) {}try { if (Inst481 <= 1000 && typeof (done) != "undefined") {_RecordType("<14046,14050,664>",(done)); Inst481++; } } catch(e) {}
      return {
        value: undefined,

        get done() {
          throw "BadValue!";
        }

      };
    }

  });
try { if (Inst477 <= 1000 && typeof (iter) != "undefined") {_RecordType("<13968,13972,659>",(iter)); Inst477++; } } catch(e) {}

try { if (Inst484 <= 1000 && typeof (e) != "undefined") {_RecordType("<14218,14219,676>",(e)); Inst484++; } } catch(e) {}
  try {
try { if (Inst482 <= 1000 && typeof (iter.next) != "undefined") {_RecordType("<14136,14145,674>",(iter.next)); Inst482++; } } catch(e) {}try { if (Inst483 <= 1000 && typeof (iter) != "undefined") {_RecordType("<14136,14140,674>",(iter)); Inst483++; } } catch(e) {}
    await iter.next();
    'Expected `iter.next()` to throw, but did not throw';
  } catch (e) {
    'BadValue!';
try { if (Inst485 <= 1000 && typeof (e) != "undefined") {_RecordType("<14244,14245,678>",(e)); Inst485++; } } catch(e) {}
    e;
  } // IfAbruptRejectPromise(returnResult, promiseCapability).
  // Let returnValue be IteratorValue(returnResult).


try { if (Inst487 <= 1000 && typeof (f) != "undefined") {_RecordType("<14374,14375,683>",(f)); Inst487++; } } catch(e) {}
  iter = f({
    return() {
try { if (Inst488 <= 1000 && typeof (value) != "undefined") {_RecordType("<14420,14425,686>",(value)); Inst488++; } } catch(e) {}
      return {
        get value() {
          throw "BadValue!";
        },

        done: false
      };
    }

  });
try { if (Inst486 <= 1000 && typeof (iter) != "undefined") {_RecordType("<14367,14371,683>",(iter)); Inst486++; } } catch(e) {}

try { if (Inst491 <= 1000 && typeof (e) != "undefined") {_RecordType("<14618,14619,699>",(e)); Inst491++; } } catch(e) {}
  try {
try { if (Inst489 <= 1000 && typeof (iter.return) != "undefined") {_RecordType("<14532,14543,697>",(iter.return)); Inst489++; } } catch(e) {}try { if (Inst490 <= 1000 && typeof (iter) != "undefined") {_RecordType("<14532,14536,697>",(iter)); Inst490++; } } catch(e) {}
    await iter.return();
    'Expected `iter.return()` to throw, but did not throw';
  } catch (e) {
    'BadValue!';
try { if (Inst492 <= 1000 && typeof (e) != "undefined") {_RecordType("<14644,14645,701>",(e)); Inst492++; } } catch(e) {}
    e;
  } // IfAbruptRejectPromise(returnValue, promiseCapability).
  // Let returnDone be IteratorComplete(returnResult).


try { if (Inst494 <= 1000 && typeof (f) != "undefined") {_RecordType("<14775,14776,706>",(f)); Inst494++; } } catch(e) {}
  iter = f({
    return() {
try { if (Inst495 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<14824,14833,709>",(undefined)); Inst495++; } } catch(e) {}try { if (Inst496 <= 1000 && typeof (done) != "undefined") {_RecordType("<14848,14852,711>",(done)); Inst496++; } } catch(e) {}
      return {
        value: undefined,

        get done() {
          throw "BadValue!";
        }

      };
    }

  });
try { if (Inst493 <= 1000 && typeof (iter) != "undefined") {_RecordType("<14768,14772,706>",(iter)); Inst493++; } } catch(e) {}

try { if (Inst499 <= 1000 && typeof (e) != "undefined") {_RecordType("<15024,15025,723>",(e)); Inst499++; } } catch(e) {}
  try {
try { if (Inst497 <= 1000 && typeof (iter.return) != "undefined") {_RecordType("<14938,14949,721>",(iter.return)); Inst497++; } } catch(e) {}try { if (Inst498 <= 1000 && typeof (iter) != "undefined") {_RecordType("<14938,14942,721>",(iter)); Inst498++; } } catch(e) {}
    await iter.return();
    'Expected `iter.return()` to throw, but did not throw';
  } catch (e) {
    'BadValue!';
try { if (Inst500 <= 1000 && typeof (e) != "undefined") {_RecordType("<15050,15051,725>",(e)); Inst500++; } } catch(e) {}
    e;
  } // IfAbruptRejectPromise(throwResult, promiseCapability).
  // Let throwValue be IteratorValue(throwResult).


try { if (Inst502 <= 1000 && typeof (f) != "undefined") {_RecordType("<15177,15178,730>",(f)); Inst502++; } } catch(e) {}
  iter = f({
    throw() {
try { if (Inst503 <= 1000 && typeof (value) != "undefined") {_RecordType("<15222,15227,733>",(value)); Inst503++; } } catch(e) {}
      return {
        get value() {
          throw "BadValue!";
        },

        done: false
      };
    }

  });
try { if (Inst501 <= 1000 && typeof (iter) != "undefined") {_RecordType("<15170,15174,730>",(iter)); Inst501++; } } catch(e) {}

try { if (Inst506 <= 1000 && typeof (e) != "undefined") {_RecordType("<15418,15419,746>",(e)); Inst506++; } } catch(e) {}
  try {
try { if (Inst504 <= 1000 && typeof (iter.throw) != "undefined") {_RecordType("<15334,15344,744>",(iter.throw)); Inst504++; } } catch(e) {}try { if (Inst505 <= 1000 && typeof (iter) != "undefined") {_RecordType("<15334,15338,744>",(iter)); Inst505++; } } catch(e) {}
    await iter.throw();
    'Expected `iter.throw()` to throw, but did not throw';
  } catch (e) {
    'BadValue!';
try { if (Inst507 <= 1000 && typeof (e) != "undefined") {_RecordType("<15444,15445,748>",(e)); Inst507++; } } catch(e) {}
    e;
  } // IfAbruptRejectPromise(throwValue, promiseCapability).
  // Let throwDone be IteratorComplete(throwResult).


try { if (Inst509 <= 1000 && typeof (f) != "undefined") {_RecordType("<15572,15573,753>",(f)); Inst509++; } } catch(e) {}
  iter = f({
    throw() {
try { if (Inst510 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<15620,15629,756>",(undefined)); Inst510++; } } catch(e) {}try { if (Inst511 <= 1000 && typeof (done) != "undefined") {_RecordType("<15644,15648,758>",(done)); Inst511++; } } catch(e) {}
      return {
        value: undefined,

        get done() {
          throw "BadValue!";
        }

      };
    }

  });
try { if (Inst508 <= 1000 && typeof (iter) != "undefined") {_RecordType("<15565,15569,753>",(iter)); Inst508++; } } catch(e) {}

try { if (Inst514 <= 1000 && typeof (e) != "undefined") {_RecordType("<15818,15819,770>",(e)); Inst514++; } } catch(e) {}
  try {
try { if (Inst512 <= 1000 && typeof (iter.throw) != "undefined") {_RecordType("<15734,15744,768>",(iter.throw)); Inst512++; } } catch(e) {}try { if (Inst513 <= 1000 && typeof (iter) != "undefined") {_RecordType("<15734,15738,768>",(iter)); Inst513++; } } catch(e) {}
    await iter.throw();
    'Expected `iter.throw()` to throw, but did not throw';
  } catch (e) {
    'BadValue!';
try { if (Inst515 <= 1000 && typeof (e) != "undefined") {_RecordType("<15844,15845,772>",(e)); Inst515++; } } catch(e) {}
    e;
  }
})().catch(function (error) {
try { if (Inst516 <= 1000 && typeof (error) != "undefined") {_RecordType("<15872,15877,774>",(error)); Inst516++; } } catch(e) {}
  testFailed = true;
try { if (Inst517 <= 1000 && typeof (testFailed) != "undefined") {_RecordType("<15883,15893,775>",(testFailed)); Inst517++; } } catch(e) {}
try { if (Inst519 <= 1000 && typeof (error) != "undefined") {_RecordType("<15918,15923,776>",(error)); Inst519++; } } catch(e) {}
  testFailure = error;
try { if (Inst518 <= 1000 && typeof (testFailure) != "undefined") {_RecordType("<15904,15915,776>",(testFailure)); Inst518++; } } catch(e) {}
});

try { if (Inst520 <= 1000 && typeof (testFailed) != "undefined") {_RecordType("<15934,15944,779>",(testFailed)); Inst520++; } } catch(e) {}
if (testFailed) {
try { if (Inst521 <= 1000 && typeof (testFailure) != "undefined") {_RecordType("<15956,15967,780>",(testFailure)); Inst521++; } } catch(e) {}
  throw testFailure;
}

try { if (Inst522 <= 1000 && typeof (ExtractedAsyncFromSyncIteratorMethods) != "undefined") {_RecordType("<15982,16019,783>",(ExtractedAsyncFromSyncIteratorMethods)); Inst522++; } } catch(e) {}
(function ExtractedAsyncFromSyncIteratorMethods() {
  // TODO(ishell, caitp): Rewrite the test without using function.caller.
  // According to ESsec-built-in-function-objects all built-in functions
  // must be strict. And ESsec-forbidden-extensions states that the value of
  // a function.caller must not be a strict function.
  return; // Async-from-Sync iterator methods can be extracted via function.caller.
  // TODO(caitp): test extracted `throw` method using yield* in async generator.

  let extractor = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];
try { if (Inst523 <= 1000 && typeof (extractor) != "undefined") {_RecordType("<16474,16483,791>",(extractor)); Inst523++; } } catch(e) {}
  let extractedNext;
try { if (Inst524 <= 1000 && typeof (extractedNext) != "undefined") {_RecordType("<16524,16537,792>",(extractedNext)); Inst524++; } } catch(e) {}
  let extractedReturn;
try { if (Inst525 <= 1000 && typeof (extractedReturn) != "undefined") {_RecordType("<16545,16560,793>",(extractedReturn)); Inst525++; } } catch(e) {}

  extractor[Symbol.iterator] = function () {
try { if (Inst531 <= 1000 && typeof ([][Symbol.iterator].call) != "undefined") {_RecordType("<16621,16645,796>",([][Symbol.iterator].call)); Inst531++; } } catch(e) {}try { if (Inst532 <= 1000 && typeof ([][Symbol.iterator]) != "undefined") {_RecordType("<16621,16640,796>",([][Symbol.iterator])); Inst532++; } } catch(e) {}try { if (Inst533 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<16624,16639,796>",(Symbol.iterator)); Inst533++; } } catch(e) {}try { if (Inst534 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<16624,16630,796>",(Symbol)); Inst534++; } } catch(e) {}try { if (Inst535 <= 1000 && typeof (extractor) != "undefined") {_RecordType("<16646,16655,796>",(extractor)); Inst535++; } } catch(e) {}
    let it = [][Symbol.iterator].call(extractor);
try { if (Inst530 <= 1000 && typeof (it) != "undefined") {_RecordType("<16616,16618,796>",(it)); Inst530++; } } catch(e) {}
try { if (Inst537 <= 1000 && typeof (it.next) != "undefined") {_RecordType("<16677,16684,797>",(it.next)); Inst537++; } } catch(e) {}try { if (Inst538 <= 1000 && typeof (it) != "undefined") {_RecordType("<16677,16679,797>",(it)); Inst538++; } } catch(e) {}try { if (Inst540 <= 1000 && typeof (it.throw) != "undefined") {_RecordType("<16706,16714,798>",(it.throw)); Inst540++; } } catch(e) {}try { if (Inst541 <= 1000 && typeof (it) != "undefined") {_RecordType("<16706,16708,798>",(it)); Inst541++; } } catch(e) {}try { if (Inst543 <= 1000 && typeof (it.return) != "undefined") {_RecordType("<16737,16746,799>",(it.return)); Inst543++; } } catch(e) {}try { if (Inst544 <= 1000 && typeof (it) != "undefined") {_RecordType("<16737,16739,799>",(it)); Inst544++; } } catch(e) {}
    let origNext = it.next,
        origThrow = it.throw,
        origReturn = it.return;
try { if (Inst536 <= 1000 && typeof (origNext) != "undefined") {_RecordType("<16666,16674,797>",(origNext)); Inst536++; } } catch(e) {}try { if (Inst539 <= 1000 && typeof (origThrow) != "undefined") {_RecordType("<16694,16703,798>",(origThrow)); Inst539++; } } catch(e) {}try { if (Inst542 <= 1000 && typeof (origReturn) != "undefined") {_RecordType("<16724,16734,799>",(origReturn)); Inst542++; } } catch(e) {}

try { if (Inst545 <= 1000 && typeof (extractNext) != "undefined") {_RecordType("<16762,16773,801>",(extractNext)); Inst545++; } } catch(e) {}
    function extractNext() {
try { if (Inst547 <= 1000 && typeof (extractNext.caller) != "undefined") {_RecordType("<16800,16818,802>",(extractNext.caller)); Inst547++; } } catch(e) {}try { if (Inst548 <= 1000 && typeof (extractNext) != "undefined") {_RecordType("<16800,16811,802>",(extractNext)); Inst548++; } } catch(e) {}
      extractedNext = extractNext.caller;
try { if (Inst546 <= 1000 && typeof (extractedNext) != "undefined") {_RecordType("<16784,16797,802>",(extractedNext)); Inst546++; } } catch(e) {}
try { if (Inst549 <= 1000 && typeof (origNext) != "undefined") {_RecordType("<16833,16841,803>",(origNext)); Inst549++; } } catch(e) {}
      return origNext;
    }

try { if (Inst550 <= 1000 && typeof (extractReturn) != "undefined") {_RecordType("<16863,16876,806>",(extractReturn)); Inst550++; } } catch(e) {}
    function extractReturn() {
try { if (Inst552 <= 1000 && typeof (extractReturn.caller) != "undefined") {_RecordType("<16905,16925,807>",(extractReturn.caller)); Inst552++; } } catch(e) {}try { if (Inst553 <= 1000 && typeof (extractReturn) != "undefined") {_RecordType("<16905,16918,807>",(extractReturn)); Inst553++; } } catch(e) {}
      extractedReturn = extractReturn.caller;
try { if (Inst551 <= 1000 && typeof (extractedReturn) != "undefined") {_RecordType("<16887,16902,807>",(extractedReturn)); Inst551++; } } catch(e) {}
try { if (Inst554 <= 1000 && typeof (origReturn) != "undefined") {_RecordType("<16940,16950,808>",(origReturn)); Inst554++; } } catch(e) {}
      return origReturn;
    }

try { if (Inst555 <= 1000 && typeof (Object.defineProperties) != "undefined") {_RecordType("<16963,16986,811>",(Object.defineProperties)); Inst555++; } } catch(e) {}try { if (Inst556 <= 1000 && typeof (Object) != "undefined") {_RecordType("<16963,16969,811>",(Object)); Inst556++; } } catch(e) {}try { if (Inst557 <= 1000 && typeof (it) != "undefined") {_RecordType("<16987,16989,811>",(it)); Inst557++; } } catch(e) {}try { if (Inst558 <= 1000 && typeof (extractNext) != "undefined") {_RecordType("<17022,17033,813>",(extractNext)); Inst558++; } } catch(e) {}try { if (Inst559 <= 1000 && typeof (extractReturn) != "undefined") {_RecordType("<17102,17115,817>",(extractReturn)); Inst559++; } } catch(e) {}
    Object.defineProperties(it, {
      "next": {
        get: extractNext,
        configurable: true
      },
      "return": {
        get: extractReturn,
        configurable: true
      }
    });
try { if (Inst560 <= 1000 && typeof (it) != "undefined") {_RecordType("<17171,17173,821>",(it)); Inst560++; } } catch(e) {}
    return it;
  };
try { if (Inst526 <= 1000 && typeof (extractor[Symbol.iterator]) != "undefined") {_RecordType("<16565,16591,795>",(extractor[Symbol.iterator])); Inst526++; } } catch(e) {}try { if (Inst527 <= 1000 && typeof (extractor) != "undefined") {_RecordType("<16565,16574,795>",(extractor)); Inst527++; } } catch(e) {}try { if (Inst528 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<16575,16590,795>",(Symbol.iterator)); Inst528++; } } catch(e) {}try { if (Inst529 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<16575,16581,795>",(Symbol)); Inst529++; } } catch(e) {}

try { if (Inst561 <= 1000 && typeof (f) != "undefined") {_RecordType("<17198,17199,824>",(f)); Inst561++; } } catch(e) {}
  async function f() {
    let i;
try { if (Inst562 <= 1000 && typeof (i) != "undefined") {_RecordType("<17212,17213,825>",(i)); Inst562++; } } catch(e) {}
try { if (Inst564 <= 1000 && typeof (extractor[Symbol.iterator]) != "undefined") {_RecordType("<17228,17254,826>",(extractor[Symbol.iterator])); Inst564++; } } catch(e) {}try { if (Inst565 <= 1000 && typeof (extractor) != "undefined") {_RecordType("<17228,17237,826>",(extractor)); Inst565++; } } catch(e) {}try { if (Inst566 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<17238,17253,826>",(Symbol.iterator)); Inst566++; } } catch(e) {}try { if (Inst567 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<17238,17244,826>",(Symbol)); Inst567++; } } catch(e) {}
    let it = extractor[Symbol.iterator]();
try { if (Inst563 <= 1000 && typeof (it) != "undefined") {_RecordType("<17223,17225,826>",(it)); Inst563++; } } catch(e) {}

    for await (let x of it) {
try { if (Inst568 <= 1000 && typeof (x) != "undefined") {_RecordType("<17278,17279,828>",(x)); Inst568++; } } catch(e) {}try { if (Inst569 <= 1000 && typeof (it) != "undefined") {_RecordType("<17283,17285,828>",(it)); Inst569++; } } catch(e) {}
      break;
    }

    for await (let x of it) {
try { if (Inst570 <= 1000 && typeof (x) != "undefined") {_RecordType("<17328,17329,832>",(x)); Inst570++; } } catch(e) {}try { if (Inst571 <= 1000 && typeof (it) != "undefined") {_RecordType("<17333,17335,832>",(it)); Inst571++; } } catch(e) {}
      return "x";
    }
  } // Cycle through `f` to extract iterator methods


try { if (Inst572 <= 1000 && typeof (f().catch) != "undefined") {_RecordType("<17420,17429,838>",(f().catch)); Inst572++; } } catch(e) {}try { if (Inst573 <= 1000 && typeof (f) != "undefined") {_RecordType("<17420,17421,838>",(f)); Inst573++; } } catch(e) {}
  f().catch(function () {
try { if (Inst574 <= 1000 && typeof (print) != "undefined") {_RecordType("<17448,17453,839>",(print)); Inst574++; } } catch(e) {}
    print("No error should have occurred");
  });
try { if (Inst575 <= 1000 && typeof (extractedNext) != "undefined") {_RecordType("<17503,17516,841>",(extractedNext)); Inst575++; } } catch(e) {}
  typeof extractedNext;
  "function";

try { if (Inst576 <= 1000 && typeof (extractedNext.call) != "undefined") {_RecordType("<17542,17560,844>",(extractedNext.call)); Inst576++; } } catch(e) {}try { if (Inst577 <= 1000 && typeof (extractedNext) != "undefined") {_RecordType("<17542,17555,844>",(extractedNext)); Inst577++; } } catch(e) {}try { if (Inst578 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<17561,17570,844>",(undefined)); Inst578++; } } catch(e) {}
  (() => extractedNext.call(undefined))();

try { if (Inst579 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<17579,17588,846>",(TypeError)); Inst579++; } } catch(e) {}
  TypeError;

try { if (Inst580 <= 1000 && typeof (extractedNext.call) != "undefined") {_RecordType("<17600,17618,848>",(extractedNext.call)); Inst580++; } } catch(e) {}try { if (Inst581 <= 1000 && typeof (extractedNext) != "undefined") {_RecordType("<17600,17613,848>",(extractedNext)); Inst581++; } } catch(e) {}
  (() => extractedNext.call(1))();

try { if (Inst582 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<17629,17638,850>",(TypeError)); Inst582++; } } catch(e) {}
  TypeError;
try { if (Inst583 <= 1000 && typeof (extractedReturn) != "undefined") {_RecordType("<17649,17664,851>",(extractedReturn)); Inst583++; } } catch(e) {}
  typeof extractedReturn;
  "function";

try { if (Inst584 <= 1000 && typeof (extractedReturn.call) != "undefined") {_RecordType("<17690,17710,854>",(extractedReturn.call)); Inst584++; } } catch(e) {}try { if (Inst585 <= 1000 && typeof (extractedReturn) != "undefined") {_RecordType("<17690,17705,854>",(extractedReturn)); Inst585++; } } catch(e) {}try { if (Inst586 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<17711,17720,854>",(undefined)); Inst586++; } } catch(e) {}
  (() => extractedReturn.call(undefined))();

try { if (Inst587 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<17729,17738,856>",(TypeError)); Inst587++; } } catch(e) {}
  TypeError;

try { if (Inst588 <= 1000 && typeof (extractedReturn.call) != "undefined") {_RecordType("<17750,17770,858>",(extractedReturn.call)); Inst588++; } } catch(e) {}try { if (Inst589 <= 1000 && typeof (extractedReturn) != "undefined") {_RecordType("<17750,17765,858>",(extractedReturn)); Inst589++; } } catch(e) {}
  (() => extractedReturn.call(1))();

try { if (Inst590 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<17781,17790,860>",(TypeError)); Inst590++; } } catch(e) {}
  TypeError;
})();

try { if (Inst591 <= 1000 && typeof (AsyncFromSyncIteratorOrdering) != "undefined") {_RecordType("<17809,17838,863>",(AsyncFromSyncIteratorOrdering)); Inst591++; } } catch(e) {}
(function AsyncFromSyncIteratorOrdering() {
  let i = 0;
try { if (Inst592 <= 1000 && typeof (i) != "undefined") {_RecordType("<17849,17850,864>",(i)); Inst592++; } } catch(e) {}
  let log = [];
try { if (Inst593 <= 1000 && typeof (log) != "undefined") {_RecordType("<17862,17865,865>",(log)); Inst593++; } } catch(e) {}

try { if (Inst594 <= 1000 && typeof (r) != "undefined") {_RecordType("<17884,17885,867>",(r)); Inst594++; } } catch(e) {}
  function r(value, done) {
try { if (Inst595 <= 1000 && typeof (value) != "undefined") {_RecordType("<17886,17891,867>",(value)); Inst595++; } } catch(e) {}try { if (Inst596 <= 1000 && typeof (done) != "undefined") {_RecordType("<17893,17897,867>",(done)); Inst596++; } } catch(e) {}
try { if (Inst598 <= 1000 && typeof (i) != "undefined") {_RecordType("<17920,17921,868>",(i)); Inst598++; } } catch(e) {}
    let number = ++i;
try { if (Inst597 <= 1000 && typeof (number) != "undefined") {_RecordType("<17909,17915,868>",(number)); Inst597++; } } catch(e) {}
try { if (Inst599 <= 1000 && typeof (value) != "undefined") {_RecordType("<17946,17951,870>",(value)); Inst599++; } } catch(e) {}try { if (Inst613 <= 1000 && typeof (done) != "undefined") {_RecordType("<18281,18285,884>",(done)); Inst613++; } } catch(e) {}
    return {
      get value() {
try { if (Inst600 <= 1000 && typeof (log.push) != "undefined") {_RecordType("<17964,17972,871>",(log.push)); Inst600++; } } catch(e) {}try { if (Inst601 <= 1000 && typeof (log) != "undefined") {_RecordType("<17964,17967,871>",(log)); Inst601++; } } catch(e) {}try { if (Inst602 <= 1000 && typeof (number) != "undefined") {_RecordType("<17993,17999,871>",(number)); Inst602++; } } catch(e) {}
        log.push("get iterResult " + number + ".value");
try { if (Inst603 <= 1000 && typeof (then) != "undefined") {_RecordType("<18044,18048,873>",(then)); Inst603++; } } catch(e) {}
        return {
          get then() {
try { if (Inst604 <= 1000 && typeof (log.push) != "undefined") {_RecordType("<18065,18073,874>",(log.push)); Inst604++; } } catch(e) {}try { if (Inst605 <= 1000 && typeof (log) != "undefined") {_RecordType("<18065,18068,874>",(log)); Inst605++; } } catch(e) {}try { if (Inst606 <= 1000 && typeof (number) != "undefined") {_RecordType("<18092,18098,874>",(number)); Inst606++; } } catch(e) {}
            log.push("get nextValue" + number + ".then");
try { if (Inst607 <= 1000 && typeof (r) != "undefined") {_RecordType("<18130,18131,875>",(r)); Inst607++; } } catch(e) {}
            return r => {
try { if (Inst608 <= 1000 && typeof (log.push) != "undefined") {_RecordType("<18151,18159,876>",(log.push)); Inst608++; } } catch(e) {}try { if (Inst609 <= 1000 && typeof (log) != "undefined") {_RecordType("<18151,18154,876>",(log)); Inst609++; } } catch(e) {}try { if (Inst610 <= 1000 && typeof (number) != "undefined") {_RecordType("<18179,18185,876>",(number)); Inst610++; } } catch(e) {}
              log.push("call nextValue" + number + ".then");
try { if (Inst611 <= 1000 && typeof (r) != "undefined") {_RecordType("<18212,18213,877>",(r)); Inst611++; } } catch(e) {}try { if (Inst612 <= 1000 && typeof (value) != "undefined") {_RecordType("<18214,18219,877>",(value)); Inst612++; } } catch(e) {}
              r(value);
            };
          }

        };
      },

      get done() {
try { if (Inst614 <= 1000 && typeof (log.push) != "undefined") {_RecordType("<18298,18306,885>",(log.push)); Inst614++; } } catch(e) {}try { if (Inst615 <= 1000 && typeof (log) != "undefined") {_RecordType("<18298,18301,885>",(log)); Inst615++; } } catch(e) {}try { if (Inst616 <= 1000 && typeof (number) != "undefined") {_RecordType("<18327,18333,885>",(number)); Inst616++; } } catch(e) {}
        log.push("get iterResult " + number + ".done");
try { if (Inst617 <= 1000 && typeof (done) != "undefined") {_RecordType("<18361,18365,886>",(done)); Inst617++; } } catch(e) {}
        return done;
      }

    };
  }

try { if (Inst619 <= 1000 && typeof (r) != "undefined") {_RecordType("<18405,18406,892>",(r)); Inst619++; } } catch(e) {}try { if (Inst620 <= 1000 && typeof (r) != "undefined") {_RecordType("<18425,18426,892>",(r)); Inst620++; } } catch(e) {}try { if (Inst621 <= 1000 && typeof (r) != "undefined") {_RecordType("<18445,18446,892>",(r)); Inst621++; } } catch(e) {}try { if (Inst622 <= 1000 && typeof (r) != "undefined") {_RecordType("<18464,18465,892>",(r)); Inst622++; } } catch(e) {}
  var results = [r("value1", false), r("value2", false), r("value3", true), r("value4", false)];
try { if (Inst618 <= 1000 && typeof (results) != "undefined") {_RecordType("<18394,18401,892>",(results)); Inst618++; } } catch(e) {}
try { if (Inst624 <= 1000 && typeof (Symbol.asyncIterator) != "undefined") {_RecordType("<18509,18529,894>",(Symbol.asyncIterator)); Inst624++; } } catch(e) {}try { if (Inst625 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<18509,18515,894>",(Symbol)); Inst625++; } } catch(e) {}try { if (Inst628 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<18624,18639,899>",(Symbol.iterator)); Inst628++; } } catch(e) {}try { if (Inst629 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<18624,18630,899>",(Symbol)); Inst629++; } } catch(e) {}try { if (Inst637 <= 1000 && typeof (next) != "undefined") {_RecordType("<18858,18862,909>",(next)); Inst637++; } } catch(e) {}
  var iter = {
    get [Symbol.asyncIterator]() {
try { if (Inst626 <= 1000 && typeof (log.push) != "undefined") {_RecordType("<18541,18549,895>",(log.push)); Inst626++; } } catch(e) {}try { if (Inst627 <= 1000 && typeof (log) != "undefined") {_RecordType("<18541,18544,895>",(log)); Inst627++; } } catch(e) {}
      log.push("get syncIterable[@@asyncIterator]");
      return null;
    },

    get [Symbol.iterator]() {
try { if (Inst630 <= 1000 && typeof (log.push) != "undefined") {_RecordType("<18651,18659,900>",(log.push)); Inst630++; } } catch(e) {}try { if (Inst631 <= 1000 && typeof (log) != "undefined") {_RecordType("<18651,18654,900>",(log)); Inst631++; } } catch(e) {}
      log.push("get syncIterable[@@iterator]");
try { if (Inst632 <= 1000 && typeof (args) != "undefined") {_RecordType("<18710,18714,901>",(args)); Inst632++; } } catch(e) {}
      return (...args) => {
try { if (Inst633 <= 1000 && typeof (log.push) != "undefined") {_RecordType("<18729,18737,902>",(log.push)); Inst633++; } } catch(e) {}try { if (Inst634 <= 1000 && typeof (log) != "undefined") {_RecordType("<18729,18732,902>",(log)); Inst634++; } } catch(e) {}try { if (Inst635 <= 1000 && typeof (args.join) != "undefined") {_RecordType("<18773,18782,902>",(args.join)); Inst635++; } } catch(e) {}try { if (Inst636 <= 1000 && typeof (args) != "undefined") {_RecordType("<18773,18777,902>",(args)); Inst636++; } } catch(e) {}
        log.push("call syncIterable[@@iterator](" + args.join(", ") + ")");
        return this;
      };
    },

    next_: 0,

    get next() {
try { if (Inst638 <= 1000 && typeof (log.push) != "undefined") {_RecordType("<18873,18881,910>",(log.push)); Inst638++; } } catch(e) {}try { if (Inst639 <= 1000 && typeof (log) != "undefined") {_RecordType("<18873,18876,910>",(log)); Inst639++; } } catch(e) {}
      log.push("get syncIterable.next");
try { if (Inst640 <= 1000 && typeof (args) != "undefined") {_RecordType("<18925,18929,911>",(args)); Inst640++; } } catch(e) {}
      return (...args) => {
try { if (Inst642 <= 1000 && typeof (this.next_) != "undefined") {_RecordType("<18952,18962,912>",(this.next_)); Inst642++; } } catch(e) {}
        let i = this.next_++;
try { if (Inst641 <= 1000 && typeof (i) != "undefined") {_RecordType("<18948,18949,912>",(i)); Inst641++; } } catch(e) {}
try { if (Inst643 <= 1000 && typeof (log.push) != "undefined") {_RecordType("<18974,18982,913>",(log.push)); Inst643++; } } catch(e) {}try { if (Inst644 <= 1000 && typeof (log) != "undefined") {_RecordType("<18974,18977,913>",(log)); Inst644++; } } catch(e) {}try { if (Inst645 <= 1000 && typeof (args.join) != "undefined") {_RecordType("<19011,19020,913>",(args.join)); Inst645++; } } catch(e) {}try { if (Inst646 <= 1000 && typeof (args) != "undefined") {_RecordType("<19011,19015,913>",(args)); Inst646++; } } catch(e) {}
        log.push("call syncIterable.next(" + args.join(", ") + ")");
try { if (Inst647 <= 1000 && typeof (results[i]) != "undefined") {_RecordType("<19050,19060,914>",(results[i])); Inst647++; } } catch(e) {}try { if (Inst648 <= 1000 && typeof (results) != "undefined") {_RecordType("<19050,19057,914>",(results)); Inst648++; } } catch(e) {}
        return results[i];
      };
    }

  };
try { if (Inst623 <= 1000 && typeof (iter) != "undefined") {_RecordType("<18491,18495,893>",(iter)); Inst623++; } } catch(e) {}

try { if (Inst649 <= 1000 && typeof (iterate) != "undefined") {_RecordType("<19101,19108,920>",(iterate)); Inst649++; } } catch(e) {}
  async function iterate(iterable) {
try { if (Inst650 <= 1000 && typeof (iterable) != "undefined") {_RecordType("<19109,19117,920>",(iterable)); Inst650++; } } catch(e) {}
try { if (Inst651 <= 1000 && typeof (log.push) != "undefined") {_RecordType("<19125,19133,921>",(log.push)); Inst651++; } } catch(e) {}try { if (Inst652 <= 1000 && typeof (log) != "undefined") {_RecordType("<19125,19128,921>",(log)); Inst652++; } } catch(e) {}
    log.push("before");

    for await (let x of iterable) {
try { if (Inst653 <= 1000 && typeof (x) != "undefined") {_RecordType("<19165,19166,923>",(x)); Inst653++; } } catch(e) {}try { if (Inst654 <= 1000 && typeof (iterable) != "undefined") {_RecordType("<19170,19178,923>",(iterable)); Inst654++; } } catch(e) {}
try { if (Inst655 <= 1000 && typeof (log.push) != "undefined") {_RecordType("<19188,19196,924>",(log.push)); Inst655++; } } catch(e) {}try { if (Inst656 <= 1000 && typeof (log) != "undefined") {_RecordType("<19188,19191,924>",(log)); Inst656++; } } catch(e) {}try { if (Inst657 <= 1000 && typeof (x) != "undefined") {_RecordType("<19212,19213,924>",(x)); Inst657++; } } catch(e) {}
      log.push("got value " + x);
    }

try { if (Inst658 <= 1000 && typeof (log.push) != "undefined") {_RecordType("<19227,19235,927>",(log.push)); Inst658++; } } catch(e) {}try { if (Inst659 <= 1000 && typeof (log) != "undefined") {_RecordType("<19227,19230,927>",(log)); Inst659++; } } catch(e) {}
    log.push("after");
try { if (Inst660 <= 1000 && typeof (log) != "undefined") {_RecordType("<19257,19260,928>",(log)); Inst660++; } } catch(e) {}
    return log;
  }

try { if (Inst661 <= 1000 && typeof (iterate(iter).then(log => {
    ["before", "get syncIterable[@@asyncIterator]", "get syncIterable[@@iterator]", "call syncIterable[@@iterator]()", "get syncIterable.next", "call syncIterable.next()", "get iterResult 1.done", "get iterResult 1.value", "get nextValue1.then", "call nextValue1.then", "got value value1", "call syncIterable.next()", "get iterResult 2.done", "get iterResult 2.value", "get nextValue2.then", "call nextValue2.then", "got value value2", "call syncIterable.next()", "get iterResult 3.done", "get iterResult 3.value", "get nextValue3.then", "call nextValue3.then", "after"];
    log;
  }).catch) != "undefined") {_RecordType("<19269,19888,931>",(iterate(iter).then(log => {
    ["before", "get syncIterable[@@asyncIterator]", "get syncIterable[@@iterator]", "call syncIterable[@@iterator]()", "get syncIterable.next", "call syncIterable.next()", "get iterResult 1.done", "get iterResult 1.value", "get nextValue1.then", "call nextValue1.then", "got value value1", "call syncIterable.next()", "get iterResult 2.done", "get iterResult 2.value", "get nextValue2.then", "call nextValue2.then", "got value value2", "call syncIterable.next()", "get iterResult 3.done", "get iterResult 3.value", "get nextValue3.then", "call nextValue3.then", "after"];
    log;
  }).catch)); Inst661++; } } catch(e) {}try { if (Inst662 <= 1000 && typeof (iterate(iter).then) != "undefined") {_RecordType("<19269,19287,931>",(iterate(iter).then)); Inst662++; } } catch(e) {}try { if (Inst663 <= 1000 && typeof (iterate) != "undefined") {_RecordType("<19269,19276,931>",(iterate)); Inst663++; } } catch(e) {}try { if (Inst664 <= 1000 && typeof (iter) != "undefined") {_RecordType("<19277,19281,931>",(iter)); Inst664++; } } catch(e) {}try { if (Inst665 <= 1000 && typeof (log) != "undefined") {_RecordType("<19288,19291,931>",(log)); Inst665++; } } catch(e) {}try { if (Inst667 <= 1000 && typeof (x) != "undefined") {_RecordType("<19889,19890,934>",(x)); Inst667++; } } catch(e) {}try { if (Inst668 <= 1000 && typeof (print) != "undefined") {_RecordType("<19894,19899,934>",(print)); Inst668++; } } catch(e) {}try { if (Inst669 <= 1000 && typeof (String) != "undefined") {_RecordType("<19900,19906,934>",(String)); Inst669++; } } catch(e) {}try { if (Inst670 <= 1000 && typeof (x) != "undefined") {_RecordType("<19907,19908,934>",(x)); Inst670++; } } catch(e) {}
  iterate(iter).then(log => {
    ["before", "get syncIterable[@@asyncIterator]", "get syncIterable[@@iterator]", "call syncIterable[@@iterator]()", "get syncIterable.next", "call syncIterable.next()", "get iterResult 1.done", "get iterResult 1.value", "get nextValue1.then", "call nextValue1.then", "got value value1", "call syncIterable.next()", "get iterResult 2.done", "get iterResult 2.value", "get nextValue2.then", "call nextValue2.then", "got value value2", "call syncIterable.next()", "get iterResult 3.done", "get iterResult 3.value", "get nextValue3.then", "call nextValue3.then", "after"];
try { if (Inst666 <= 1000 && typeof (log) != "undefined") {_RecordType("<19873,19876,933>",(log)); Inst666++; } } catch(e) {}
    log;
  }).catch(x => print(String(x)));
})();

