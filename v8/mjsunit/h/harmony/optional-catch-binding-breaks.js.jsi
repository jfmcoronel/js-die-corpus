var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2017 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
let state = 'initial';
try { if (Inst0 <= 1000 && typeof (state) != "undefined") {_RecordType("<171,176,4>",(state)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (x) != "undefined") {_RecordType("<191,192,6>",(x)); Inst1++; } } catch(e) {}
x: try {
try { if (Inst2 <= 1000 && typeof (Error) != "undefined") {_RecordType("<212,217,7>",(Error)); Inst2++; } } catch(e) {}
  throw new Error('caught');
  state = 'unreachable';
try { if (Inst3 <= 1000 && typeof (state) != "undefined") {_RecordType("<231,236,8>",(state)); Inst3++; } } catch(e) {}
} catch {
try { if (Inst4 <= 1000 && typeof (state) != "undefined") {_RecordType("<266,271,10>",(state)); Inst4++; } } catch(e) {}
  state;
  'initial';
  state = 'caught';
try { if (Inst5 <= 1000 && typeof (state) != "undefined") {_RecordType("<288,293,12>",(state)); Inst5++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (x) != "undefined") {_RecordType("<314,315,13>",(x)); Inst6++; } } catch(e) {}
  break x;
  state = 'unreachable';
try { if (Inst7 <= 1000 && typeof (state) != "undefined") {_RecordType("<319,324,14>",(state)); Inst7++; } } catch(e) {}
}

try { if (Inst8 <= 1000 && typeof (state) != "undefined") {_RecordType("<345,350,17>",(state)); Inst8++; } } catch(e) {}
state;
'caught';
state = 'initial';
try { if (Inst9 <= 1000 && typeof (state) != "undefined") {_RecordType("<362,367,19>",(state)); Inst9++; } } catch(e) {}

try { if (Inst10 <= 1000 && typeof (x) != "undefined") {_RecordType("<382,383,21>",(x)); Inst10++; } } catch(e) {}
x: try {
try { if (Inst11 <= 1000 && typeof (Error) != "undefined") {_RecordType("<403,408,22>",(Error)); Inst11++; } } catch(e) {}
  throw new Error('caught');
  state = 'unreachable';
try { if (Inst12 <= 1000 && typeof (state) != "undefined") {_RecordType("<422,427,23>",(state)); Inst12++; } } catch(e) {}
} catch {
try { if (Inst13 <= 1000 && typeof (state) != "undefined") {_RecordType("<457,462,25>",(state)); Inst13++; } } catch(e) {}
  state;
  'initial';
  state = 'caught';
try { if (Inst14 <= 1000 && typeof (state) != "undefined") {_RecordType("<479,484,27>",(state)); Inst14++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (x) != "undefined") {_RecordType("<505,506,28>",(x)); Inst15++; } } catch(e) {}
  break x;
  state = 'unreachable';
try { if (Inst16 <= 1000 && typeof (state) != "undefined") {_RecordType("<510,515,29>",(state)); Inst16++; } } catch(e) {}
} finally {
try { if (Inst17 <= 1000 && typeof (state) != "undefined") {_RecordType("<547,552,31>",(state)); Inst17++; } } catch(e) {}
  state;
  'caught';
  state = 'finally';
try { if (Inst18 <= 1000 && typeof (state) != "undefined") {_RecordType("<568,573,33>",(state)); Inst18++; } } catch(e) {}
}

try { if (Inst19 <= 1000 && typeof (state) != "undefined") {_RecordType("<590,595,36>",(state)); Inst19++; } } catch(e) {}
state;
'finally';
state = 'initial';
try { if (Inst20 <= 1000 && typeof (state) != "undefined") {_RecordType("<608,613,38>",(state)); Inst20++; } } catch(e) {}

try { if (Inst21 <= 1000 && typeof (x) != "undefined") {_RecordType("<628,629,40>",(x)); Inst21++; } } catch(e) {}
x: {
try { if (Inst22 <= 1000 && typeof (y) != "undefined") {_RecordType("<635,636,41>",(y)); Inst22++; } } catch(e) {}
  y: try {
try { if (Inst23 <= 1000 && typeof (Error) != "undefined") {_RecordType("<658,663,42>",(Error)); Inst23++; } } catch(e) {}
    throw new Error('caught');
    state = 'unreachable';
try { if (Inst24 <= 1000 && typeof (state) != "undefined") {_RecordType("<679,684,43>",(state)); Inst24++; } } catch(e) {}
  } catch {
try { if (Inst25 <= 1000 && typeof (state) != "undefined") {_RecordType("<718,723,45>",(state)); Inst25++; } } catch(e) {}
    state;
    'initial';
    state = 'caught';
try { if (Inst26 <= 1000 && typeof (state) != "undefined") {_RecordType("<744,749,47>",(state)); Inst26++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (x) != "undefined") {_RecordType("<772,773,48>",(x)); Inst27++; } } catch(e) {}
    break x;
    state = 'unreachable';
try { if (Inst28 <= 1000 && typeof (state) != "undefined") {_RecordType("<779,784,49>",(state)); Inst28++; } } catch(e) {}
  } finally {
try { if (Inst29 <= 1000 && typeof (state) != "undefined") {_RecordType("<820,825,51>",(state)); Inst29++; } } catch(e) {}
    state;
    'caught';
    state = 'finally';
try { if (Inst30 <= 1000 && typeof (state) != "undefined") {_RecordType("<845,850,53>",(state)); Inst30++; } } catch(e) {}
try { if (Inst31 <= 1000 && typeof (y) != "undefined") {_RecordType("<874,875,54>",(y)); Inst31++; } } catch(e) {}
    break y;
    state = 'unreachable';
try { if (Inst32 <= 1000 && typeof (state) != "undefined") {_RecordType("<881,886,55>",(state)); Inst32++; } } catch(e) {}
  }

try { if (Inst33 <= 1000 && typeof (state) != "undefined") {_RecordType("<911,916,58>",(state)); Inst33++; } } catch(e) {}
  state;
  'finally';
  state = 'after block';
try { if (Inst34 <= 1000 && typeof (state) != "undefined") {_RecordType("<933,938,60>",(state)); Inst34++; } } catch(e) {}
}

try { if (Inst35 <= 1000 && typeof (state) != "undefined") {_RecordType("<959,964,63>",(state)); Inst35++; } } catch(e) {}
state;
'after block';

do {
  try {
try { if (Inst36 <= 1000 && typeof (Error) != "undefined") {_RecordType("<1009,1014,68>",(Error)); Inst36++; } } catch(e) {}
    throw new Error();
  } catch {
    break;
  }
} while (false);

