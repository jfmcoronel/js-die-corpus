var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2017 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax --expose-gc --turbo-inline-array-builtins
(function () {
  var result = 0;
try { if (Inst0 <= 1000 && typeof (result) != "undefined") {_RecordType("<263,269,6>",(result)); Inst0++; } } catch(e) {}

  var f = function () {
    var b = [,,];
try { if (Inst2 <= 1000 && typeof (b) != "undefined") {_RecordType("<308,309,9>",(b)); Inst2++; } } catch(e) {}
    b[0] = 0;
try { if (Inst3 <= 1000 && typeof (b[0]) != "undefined") {_RecordType("<322,326,10>",(b[0])); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (b) != "undefined") {_RecordType("<322,323,10>",(b)); Inst4++; } } catch(e) {}
    b[2] = 2;
try { if (Inst5 <= 1000 && typeof (b[2]) != "undefined") {_RecordType("<336,340,11>",(b[2])); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (b) != "undefined") {_RecordType("<336,337,11>",(b)); Inst6++; } } catch(e) {}

    var sum = function (v, i, o) {
try { if (Inst8 <= 1000 && typeof (v) != "undefined") {_RecordType("<371,372,13>",(v)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<374,375,13>",(i)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (o) != "undefined") {_RecordType("<377,378,13>",(o)); Inst10++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<398,399,14>",(i)); Inst12++; } } catch(e) {}
      result += i;
try { if (Inst11 <= 1000 && typeof (result) != "undefined") {_RecordType("<388,394,14>",(result)); Inst11++; } } catch(e) {}
    };
try { if (Inst7 <= 1000 && typeof (sum) != "undefined") {_RecordType("<355,358,13>",(sum)); Inst7++; } } catch(e) {}

try { if (Inst13 <= 1000 && typeof (b.forEach) != "undefined") {_RecordType("<413,422,17>",(b.forEach)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (b) != "undefined") {_RecordType("<413,414,17>",(b)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (sum) != "undefined") {_RecordType("<423,426,17>",(sum)); Inst15++; } } catch(e) {}
    b.forEach(sum);
  };
try { if (Inst1 <= 1000 && typeof (f) != "undefined") {_RecordType("<282,283,8>",(f)); Inst1++; } } catch(e) {}

try { if (Inst16 <= 1000 && typeof (f) != "undefined") {_RecordType("<437,438,20>",(f)); Inst16++; } } catch(e) {}
  f();
try { if (Inst17 <= 1000 && typeof (f) != "undefined") {_RecordType("<444,445,21>",(f)); Inst17++; } } catch(e) {}
  f();
try { if (Inst18 <= 1000 && typeof (f) != "undefined") {_RecordType("<451,452,22>",(f)); Inst18++; } } catch(e) {}
  f();
try { if (Inst19 <= 1000 && typeof (f) != "undefined") {_RecordType("<458,459,23>",(f)); Inst19++; } } catch(e) {}
  f();
try { if (Inst20 <= 1000 && typeof (f) != "undefined") {_RecordType("<465,466,24>",(f)); Inst20++; } } catch(e) {}
  f();
  10;
try { if (Inst21 <= 1000 && typeof (result) != "undefined") {_RecordType("<478,484,26>",(result)); Inst21++; } } catch(e) {}
  result;
})();

