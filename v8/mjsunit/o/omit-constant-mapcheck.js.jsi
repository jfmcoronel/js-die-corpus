var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2013 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// Flags: --allow-natives-syntax
var g1 = {
  a: 1
};
try { if (Inst0 <= 1000 && typeof (g1) != "undefined") {_RecordType("<1634,1636,28>",(g1)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (load) != "undefined") {_RecordType("<1661,1665,32>",(load)); Inst1++; } } catch(e) {}
function load() {
try { if (Inst2 <= 1000 && typeof (g1.a) != "undefined") {_RecordType("<1679,1683,33>",(g1.a)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (g1) != "undefined") {_RecordType("<1679,1681,33>",(g1)); Inst3++; } } catch(e) {}
  return g1.a;
}

1;
try { if (Inst4 <= 1000 && typeof (load) != "undefined") {_RecordType("<1691,1695,37>",(load)); Inst4++; } } catch(e) {}
load();
1;
try { if (Inst5 <= 1000 && typeof (load) != "undefined") {_RecordType("<1702,1706,39>",(load)); Inst5++; } } catch(e) {}
load();
1;
try { if (Inst6 <= 1000 && typeof (load) != "undefined") {_RecordType("<1713,1717,41>",(load)); Inst6++; } } catch(e) {}
load();
try { if (Inst7 <= 1000 && typeof (g1.a) != "undefined") {_RecordType("<1728,1732,42>",(g1.a)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (g1) != "undefined") {_RecordType("<1728,1730,42>",(g1)); Inst8++; } } catch(e) {}
delete g1.a;
try { if (Inst9 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<1734,1743,43>",(undefined)); Inst9++; } } catch(e) {}
undefined;
try { if (Inst10 <= 1000 && typeof (load) != "undefined") {_RecordType("<1745,1749,44>",(load)); Inst10++; } } catch(e) {}
load();
var g2 = {
  a: 2
};
try { if (Inst11 <= 1000 && typeof (g2) != "undefined") {_RecordType("<1757,1759,45>",(g2)); Inst11++; } } catch(e) {}

try { if (Inst12 <= 1000 && typeof (load2) != "undefined") {_RecordType("<1784,1789,49>",(load2)); Inst12++; } } catch(e) {}
function load2() {
try { if (Inst13 <= 1000 && typeof (g2.a) != "undefined") {_RecordType("<1803,1807,50>",(g2.a)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (g2) != "undefined") {_RecordType("<1803,1805,50>",(g2)); Inst14++; } } catch(e) {}
  return g2.a;
}

2;
try { if (Inst15 <= 1000 && typeof (load2) != "undefined") {_RecordType("<1815,1820,54>",(load2)); Inst15++; } } catch(e) {}
load2();
2;
try { if (Inst16 <= 1000 && typeof (load2) != "undefined") {_RecordType("<1827,1832,56>",(load2)); Inst16++; } } catch(e) {}
load2();
2;
try { if (Inst17 <= 1000 && typeof (load2) != "undefined") {_RecordType("<1839,1844,58>",(load2)); Inst17++; } } catch(e) {}
load2();
g2.b = 10;
try { if (Inst18 <= 1000 && typeof (g2.b) != "undefined") {_RecordType("<1848,1852,59>",(g2.b)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (g2) != "undefined") {_RecordType("<1848,1850,59>",(g2)); Inst19++; } } catch(e) {}
g2.a = 5;
try { if (Inst20 <= 1000 && typeof (g2.a) != "undefined") {_RecordType("<1859,1863,60>",(g2.a)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (g2) != "undefined") {_RecordType("<1859,1861,60>",(g2)); Inst21++; } } catch(e) {}
5;
try { if (Inst22 <= 1000 && typeof (load2) != "undefined") {_RecordType("<1872,1877,62>",(load2)); Inst22++; } } catch(e) {}
load2();
var g3 = {
  a: 2,
  b: 9,
  c: 1
};
try { if (Inst23 <= 1000 && typeof (g3) != "undefined") {_RecordType("<1885,1887,63>",(g3)); Inst23++; } } catch(e) {}

try { if (Inst24 <= 1000 && typeof (store) != "undefined") {_RecordType("<1928,1933,69>",(store)); Inst24++; } } catch(e) {}
function store(v) {
try { if (Inst25 <= 1000 && typeof (v) != "undefined") {_RecordType("<1934,1935,69>",(v)); Inst25++; } } catch(e) {}
try { if (Inst28 <= 1000 && typeof (v) != "undefined") {_RecordType("<1948,1949,70>",(v)); Inst28++; } } catch(e) {}
  g3.a = v;
try { if (Inst26 <= 1000 && typeof (g3.a) != "undefined") {_RecordType("<1941,1945,70>",(g3.a)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (g3) != "undefined") {_RecordType("<1941,1943,70>",(g3)); Inst27++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (g3.a) != "undefined") {_RecordType("<1960,1964,71>",(g3.a)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (g3) != "undefined") {_RecordType("<1960,1962,71>",(g3)); Inst30++; } } catch(e) {}
  return g3.a;
}

5;
try { if (Inst31 <= 1000 && typeof (store) != "undefined") {_RecordType("<1972,1977,75>",(store)); Inst31++; } } catch(e) {}
store(5);
8;
try { if (Inst32 <= 1000 && typeof (store) != "undefined") {_RecordType("<1985,1990,77>",(store)); Inst32++; } } catch(e) {}
store(8);
10;
try { if (Inst33 <= 1000 && typeof (store) != "undefined") {_RecordType("<1999,2004,79>",(store)); Inst33++; } } catch(e) {}
store(10);
try { if (Inst34 <= 1000 && typeof (g3.c) != "undefined") {_RecordType("<2017,2021,80>",(g3.c)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (g3) != "undefined") {_RecordType("<2017,2019,80>",(g3)); Inst35++; } } catch(e) {}
delete g3.c;
try { if (Inst36 <= 1000 && typeof (store) != "undefined") {_RecordType("<2023,2028,81>",(store)); Inst36++; } } catch(e) {}
store(7);
({
  a: 7,
  b: 9
});
try { if (Inst37 <= 1000 && typeof (g3) != "undefined") {_RecordType("<2055,2057,86>",(g3)); Inst37++; } } catch(e) {}
g3;

