var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
var Inst102 = 0;
var Inst103 = 0;
var Inst104 = 0;
var Inst105 = 0;
var Inst106 = 0;
var Inst107 = 0;
var Inst108 = 0;
var Inst109 = 0;
var Inst110 = 0;
var Inst111 = 0;
var Inst112 = 0;
var Inst113 = 0;
var Inst114 = 0;
var Inst115 = 0;
var Inst116 = 0;
var Inst117 = 0;
var Inst118 = 0;
var Inst119 = 0;
var Inst120 = 0;
var Inst121 = 0;
var Inst122 = 0;
var Inst123 = 0;
var Inst124 = 0;
var Inst125 = 0;
var Inst126 = 0;
var Inst127 = 0;
var Inst128 = 0;
var Inst129 = 0;
var Inst130 = 0;
var Inst131 = 0;
var Inst132 = 0;
var Inst133 = 0;
var Inst134 = 0;
var Inst135 = 0;
var Inst136 = 0;
var Inst137 = 0;
var Inst138 = 0;
var Inst139 = 0;
var Inst140 = 0;
var Inst141 = 0;
var Inst142 = 0;
var Inst143 = 0;
var Inst144 = 0;
var Inst145 = 0;
var Inst146 = 0;
var Inst147 = 0;
var Inst148 = 0;
var Inst149 = 0;
var Inst150 = 0;
var Inst151 = 0;
var Inst152 = 0;
var Inst153 = 0;
var Inst154 = 0;
var Inst155 = 0;
var Inst156 = 0;
var Inst157 = 0;
var Inst158 = 0;
var Inst159 = 0;
var Inst160 = 0;
var Inst161 = 0;
var Inst162 = 0;
var Inst163 = 0;
var Inst164 = 0;
var Inst165 = 0;
var Inst166 = 0;
var Inst167 = 0;
var Inst168 = 0;
var Inst169 = 0;
var Inst170 = 0;
var Inst171 = 0;
var Inst172 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2010 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// Tests the Object.preventExtensions method - ES 15.2.3.10
// Flags: --allow-natives-syntax
var obj1 = {}; // Extensible defaults to true.
try { if (Inst0 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<1694,1698,29>",(obj1)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (Object.isExtensible) != "undefined") {_RecordType("<1738,1757,31>",(Object.isExtensible)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1738,1744,31>",(Object)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<1758,1762,31>",(obj1)); Inst3++; } } catch(e) {}
Object.isExtensible(obj1);
try { if (Inst4 <= 1000 && typeof (Object.preventExtensions) != "undefined") {_RecordType("<1765,1789,32>",(Object.preventExtensions)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1765,1771,32>",(Object)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<1790,1794,32>",(obj1)); Inst6++; } } catch(e) {}
Object.preventExtensions(obj1); // Make sure the is_extensible flag is set.

try { if (Inst7 <= 1000 && typeof (Object.isExtensible) != "undefined") {_RecordType("<1842,1861,34>",(Object.isExtensible)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1842,1848,34>",(Object)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<1862,1866,34>",(obj1)); Inst9++; } } catch(e) {}
Object.isExtensible(obj1);
obj1.x = 42;
try { if (Inst10 <= 1000 && typeof (obj1.x) != "undefined") {_RecordType("<1869,1875,35>",(obj1.x)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<1869,1873,35>",(obj1)); Inst11++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<1882,1891,36>",(undefined)); Inst12++; } } catch(e) {}
undefined;
try { if (Inst13 <= 1000 && typeof (obj1.x) != "undefined") {_RecordType("<1893,1899,37>",(obj1.x)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<1893,1897,37>",(obj1)); Inst14++; } } catch(e) {}
obj1.x;
// Try adding a new element.
obj1[1] = 42;
try { if (Inst15 <= 1000 && typeof (obj1[1]) != "undefined") {_RecordType("<1930,1937,39>",(obj1[1])); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<1930,1934,39>",(obj1)); Inst16++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<1944,1953,40>",(undefined)); Inst17++; } } catch(e) {}
undefined;
try { if (Inst18 <= 1000 && typeof (obj1[1]) != "undefined") {_RecordType("<1955,1962,41>",(obj1[1])); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (obj1) != "undefined") {_RecordType("<1955,1959,41>",(obj1)); Inst19++; } } catch(e) {}
obj1[1];
// Try when the object has an existing property.
var obj2 = {};
try { if (Inst20 <= 1000 && typeof (obj2) != "undefined") {_RecordType("<2017,2021,43>",(obj2)); Inst20++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (Object.isExtensible) != "undefined") {_RecordType("<2028,2047,44>",(Object.isExtensible)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Object) != "undefined") {_RecordType("<2028,2034,44>",(Object)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (obj2) != "undefined") {_RecordType("<2048,2052,44>",(obj2)); Inst23++; } } catch(e) {}
Object.isExtensible(obj2);
obj2.x = 42;
try { if (Inst24 <= 1000 && typeof (obj2.x) != "undefined") {_RecordType("<2055,2061,45>",(obj2.x)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (obj2) != "undefined") {_RecordType("<2055,2059,45>",(obj2)); Inst25++; } } catch(e) {}
42;
try { if (Inst26 <= 1000 && typeof (obj2.x) != "undefined") {_RecordType("<2072,2078,47>",(obj2.x)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (obj2) != "undefined") {_RecordType("<2072,2076,47>",(obj2)); Inst27++; } } catch(e) {}
obj2.x;
try { if (Inst28 <= 1000 && typeof (Object.isExtensible) != "undefined") {_RecordType("<2080,2099,48>",(Object.isExtensible)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (Object) != "undefined") {_RecordType("<2080,2086,48>",(Object)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (obj2) != "undefined") {_RecordType("<2100,2104,48>",(obj2)); Inst30++; } } catch(e) {}
Object.isExtensible(obj2);
try { if (Inst31 <= 1000 && typeof (Object.preventExtensions) != "undefined") {_RecordType("<2107,2131,49>",(Object.preventExtensions)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (Object) != "undefined") {_RecordType("<2107,2113,49>",(Object)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (obj2) != "undefined") {_RecordType("<2132,2136,49>",(obj2)); Inst33++; } } catch(e) {}
Object.preventExtensions(obj2);
42;
try { if (Inst34 <= 1000 && typeof (obj2.x) != "undefined") {_RecordType("<2143,2149,51>",(obj2.x)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (obj2) != "undefined") {_RecordType("<2143,2147,51>",(obj2)); Inst35++; } } catch(e) {}
obj2.x;
obj2.y = 42; // obj2.y should still be undefined.
try { if (Inst36 <= 1000 && typeof (obj2.y) != "undefined") {_RecordType("<2151,2157,52>",(obj2.y)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (obj2) != "undefined") {_RecordType("<2151,2155,52>",(obj2)); Inst37++; } } catch(e) {}

try { if (Inst38 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<2202,2211,54>",(undefined)); Inst38++; } } catch(e) {}
undefined;
try { if (Inst39 <= 1000 && typeof (obj2.y) != "undefined") {_RecordType("<2213,2219,55>",(obj2.y)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (obj2) != "undefined") {_RecordType("<2213,2217,55>",(obj2)); Inst40++; } } catch(e) {}
obj2.y;
// Make sure we can still write values to obj.x.
obj2.x = 43;
try { if (Inst41 <= 1000 && typeof (obj2.x) != "undefined") {_RecordType("<2270,2276,57>",(obj2.x)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (obj2) != "undefined") {_RecordType("<2270,2274,57>",(obj2)); Inst42++; } } catch(e) {}
43;
try { if (Inst43 <= 1000 && typeof (obj2.x) != "undefined") {_RecordType("<2287,2293,59>",(obj2.x)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (obj2) != "undefined") {_RecordType("<2287,2291,59>",(obj2)); Inst44++; } } catch(e) {}
obj2.x;
obj2.y = new function () {
  return 42;
}(); // obj2.y should still be undefined.
try { if (Inst45 <= 1000 && typeof (obj2.y) != "undefined") {_RecordType("<2295,2301,60>",(obj2.y)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (obj2) != "undefined") {_RecordType("<2295,2299,60>",(obj2)); Inst46++; } } catch(e) {}

try { if (Inst47 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<2378,2387,64>",(undefined)); Inst47++; } } catch(e) {}
undefined;
try { if (Inst48 <= 1000 && typeof (obj2.y) != "undefined") {_RecordType("<2389,2395,65>",(obj2.y)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (obj2) != "undefined") {_RecordType("<2389,2393,65>",(obj2)); Inst49++; } } catch(e) {}
obj2.y;
43;
try { if (Inst50 <= 1000 && typeof (obj2.x) != "undefined") {_RecordType("<2401,2407,67>",(obj2.x)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (obj2) != "undefined") {_RecordType("<2401,2405,67>",(obj2)); Inst51++; } } catch(e) {}
obj2.x;

try { if (Inst55 <= 1000 && typeof (e) != "undefined") {_RecordType("<2482,2483,73>",(e)); Inst55++; } } catch(e) {}
try {
try { if (Inst52 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<2418,2439,70>",(Object.defineProperty)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (Object) != "undefined") {_RecordType("<2418,2424,70>",(Object)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (obj2) != "undefined") {_RecordType("<2440,2444,70>",(obj2)); Inst54++; } } catch(e) {}
  Object.defineProperty(obj2, "y", {
    value: 42
  });
} catch (e) {
try { if (Inst56 <= 1000 && typeof (/object is not extensible/.test) != "undefined") {_RecordType("<2489,2520,74>",(/object is not extensible/.test)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (e) != "undefined") {_RecordType("<2521,2522,74>",(e)); Inst57++; } } catch(e) {}
  /object is not extensible/.test(e);
} // obj2.y should still be undefined.


try { if (Inst58 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<2566,2575,78>",(undefined)); Inst58++; } } catch(e) {}
undefined;
try { if (Inst59 <= 1000 && typeof (obj2.y) != "undefined") {_RecordType("<2577,2583,79>",(obj2.y)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (obj2) != "undefined") {_RecordType("<2577,2581,79>",(obj2)); Inst60++; } } catch(e) {}
obj2.y;
43;
try { if (Inst61 <= 1000 && typeof (obj2.x) != "undefined") {_RecordType("<2589,2595,81>",(obj2.x)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (obj2) != "undefined") {_RecordType("<2589,2593,81>",(obj2)); Inst62++; } } catch(e) {}
obj2.x;
obj2[1] = 42;
try { if (Inst63 <= 1000 && typeof (obj2[1]) != "undefined") {_RecordType("<2597,2604,82>",(obj2[1])); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (obj2) != "undefined") {_RecordType("<2597,2601,82>",(obj2)); Inst64++; } } catch(e) {}
try { if (Inst65 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<2611,2620,83>",(undefined)); Inst65++; } } catch(e) {}
undefined;
try { if (Inst66 <= 1000 && typeof (obj2[1]) != "undefined") {_RecordType("<2622,2629,84>",(obj2[1])); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (obj2) != "undefined") {_RecordType("<2622,2626,84>",(obj2)); Inst67++; } } catch(e) {}
obj2[1];
try { if (Inst69 <= 1000 && typeof (Array) != "undefined") {_RecordType("<2645,2650,85>",(Array)); Inst69++; } } catch(e) {}
var arr = new Array();
try { if (Inst68 <= 1000 && typeof (arr) != "undefined") {_RecordType("<2635,2638,85>",(arr)); Inst68++; } } catch(e) {}
arr[1] = 10;
try { if (Inst70 <= 1000 && typeof (arr[1]) != "undefined") {_RecordType("<2654,2660,86>",(arr[1])); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (arr) != "undefined") {_RecordType("<2654,2657,86>",(arr)); Inst71++; } } catch(e) {}
try { if (Inst72 <= 1000 && typeof (Object.preventExtensions) != "undefined") {_RecordType("<2667,2691,87>",(Object.preventExtensions)); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (Object) != "undefined") {_RecordType("<2667,2673,87>",(Object)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (arr) != "undefined") {_RecordType("<2692,2695,87>",(arr)); Inst74++; } } catch(e) {}
Object.preventExtensions(arr);
arr[2] = 42;
try { if (Inst75 <= 1000 && typeof (arr[2]) != "undefined") {_RecordType("<2698,2704,88>",(arr[2])); Inst75++; } } catch(e) {}try { if (Inst76 <= 1000 && typeof (arr) != "undefined") {_RecordType("<2698,2701,88>",(arr)); Inst76++; } } catch(e) {}
10;
try { if (Inst77 <= 1000 && typeof (arr[1]) != "undefined") {_RecordType("<2715,2721,90>",(arr[1])); Inst77++; } } catch(e) {}try { if (Inst78 <= 1000 && typeof (arr) != "undefined") {_RecordType("<2715,2718,90>",(arr)); Inst78++; } } catch(e) {}
arr[1];
// We should still be able to change existing elements.
arr[1] = 42;
try { if (Inst79 <= 1000 && typeof (arr[1]) != "undefined") {_RecordType("<2779,2785,92>",(arr[1])); Inst79++; } } catch(e) {}try { if (Inst80 <= 1000 && typeof (arr) != "undefined") {_RecordType("<2779,2782,92>",(arr)); Inst80++; } } catch(e) {}
42;
try { if (Inst81 <= 1000 && typeof (arr[1]) != "undefined") {_RecordType("<2796,2802,94>",(arr[1])); Inst81++; } } catch(e) {}try { if (Inst82 <= 1000 && typeof (arr) != "undefined") {_RecordType("<2796,2799,94>",(arr)); Inst82++; } } catch(e) {}
arr[1];
// Test the the extensible flag is not inherited.
var parent = {};
try { if (Inst83 <= 1000 && typeof (parent) != "undefined") {_RecordType("<2858,2864,96>",(parent)); Inst83++; } } catch(e) {}
parent.x = 42;
try { if (Inst84 <= 1000 && typeof (parent.x) != "undefined") {_RecordType("<2871,2879,97>",(parent.x)); Inst84++; } } catch(e) {}try { if (Inst85 <= 1000 && typeof (parent) != "undefined") {_RecordType("<2871,2877,97>",(parent)); Inst85++; } } catch(e) {}
try { if (Inst86 <= 1000 && typeof (Object.preventExtensions) != "undefined") {_RecordType("<2886,2910,98>",(Object.preventExtensions)); Inst86++; } } catch(e) {}try { if (Inst87 <= 1000 && typeof (Object) != "undefined") {_RecordType("<2886,2892,98>",(Object)); Inst87++; } } catch(e) {}try { if (Inst88 <= 1000 && typeof (parent) != "undefined") {_RecordType("<2911,2917,98>",(parent)); Inst88++; } } catch(e) {}
Object.preventExtensions(parent);
try { if (Inst90 <= 1000 && typeof (Object.create) != "undefined") {_RecordType("<2932,2945,99>",(Object.create)); Inst90++; } } catch(e) {}try { if (Inst91 <= 1000 && typeof (Object) != "undefined") {_RecordType("<2932,2938,99>",(Object)); Inst91++; } } catch(e) {}try { if (Inst92 <= 1000 && typeof (parent) != "undefined") {_RecordType("<2946,2952,99>",(parent)); Inst92++; } } catch(e) {}
var child = Object.create(parent); // We should be able to add new properties to the child object.
try { if (Inst89 <= 1000 && typeof (child) != "undefined") {_RecordType("<2924,2929,99>",(child)); Inst89++; } } catch(e) {}

child.y = 42; // This should have no influence on the parent class.
try { if (Inst93 <= 1000 && typeof (child.y) != "undefined") {_RecordType("<3020,3027,101>",(child.y)); Inst93++; } } catch(e) {}try { if (Inst94 <= 1000 && typeof (child) != "undefined") {_RecordType("<3020,3025,101>",(child)); Inst94++; } } catch(e) {}

parent.y = 29; // Test that attributes on functions are also handled correctly.
try { if (Inst95 <= 1000 && typeof (parent.y) != "undefined") {_RecordType("<3089,3097,103>",(parent.y)); Inst95++; } } catch(e) {}try { if (Inst96 <= 1000 && typeof (parent) != "undefined") {_RecordType("<3089,3095,103>",(parent)); Inst96++; } } catch(e) {}

try { if (Inst97 <= 1000 && typeof (foo) != "undefined") {_RecordType("<3179,3182,105>",(foo)); Inst97++; } } catch(e) {}
function foo() {
  return 42;
}

try { if (Inst98 <= 1000 && typeof (Object.preventExtensions) != "undefined") {_RecordType("<3203,3227,109>",(Object.preventExtensions)); Inst98++; } } catch(e) {}try { if (Inst99 <= 1000 && typeof (Object) != "undefined") {_RecordType("<3203,3209,109>",(Object)); Inst99++; } } catch(e) {}try { if (Inst100 <= 1000 && typeof (foo) != "undefined") {_RecordType("<3228,3231,109>",(foo)); Inst100++; } } catch(e) {}
Object.preventExtensions(foo);
foo.x = 29;
try { if (Inst101 <= 1000 && typeof (foo.x) != "undefined") {_RecordType("<3234,3239,110>",(foo.x)); Inst101++; } } catch(e) {}try { if (Inst102 <= 1000 && typeof (foo) != "undefined") {_RecordType("<3234,3237,110>",(foo)); Inst102++; } } catch(e) {}
try { if (Inst103 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<3246,3255,111>",(undefined)); Inst103++; } } catch(e) {}
undefined;
try { if (Inst104 <= 1000 && typeof (foo.x) != "undefined") {_RecordType("<3257,3262,112>",(foo.x)); Inst104++; } } catch(e) {}try { if (Inst105 <= 1000 && typeof (foo) != "undefined") {_RecordType("<3257,3260,112>",(foo)); Inst105++; } } catch(e) {}
foo.x;
// when Object.isExtensible(o) === false
// assignment should return right hand side value
try { if (Inst107 <= 1000 && typeof (Object.preventExtensions) != "undefined") {_RecordType("<3363,3387,115>",(Object.preventExtensions)); Inst107++; } } catch(e) {}try { if (Inst108 <= 1000 && typeof (Object) != "undefined") {_RecordType("<3363,3369,115>",(Object)); Inst108++; } } catch(e) {}
var o = Object.preventExtensions({});
try { if (Inst106 <= 1000 && typeof (o) != "undefined") {_RecordType("<3359,3360,115>",(o)); Inst106++; } } catch(e) {}
var v = o.v = 50;
try { if (Inst109 <= 1000 && typeof (v) != "undefined") {_RecordType("<3397,3398,116>",(v)); Inst109++; } } catch(e) {}try { if (Inst110 <= 1000 && typeof (o.v) != "undefined") {_RecordType("<3401,3404,116>",(o.v)); Inst110++; } } catch(e) {}try { if (Inst111 <= 1000 && typeof (o) != "undefined") {_RecordType("<3401,3402,116>",(o)); Inst111++; } } catch(e) {}
try { if (Inst112 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<3411,3420,117>",(undefined)); Inst112++; } } catch(e) {}
undefined;
try { if (Inst113 <= 1000 && typeof (o.v) != "undefined") {_RecordType("<3422,3425,118>",(o.v)); Inst113++; } } catch(e) {}try { if (Inst114 <= 1000 && typeof (o) != "undefined") {_RecordType("<3422,3423,118>",(o)); Inst114++; } } catch(e) {}
o.v;
50;
try { if (Inst115 <= 1000 && typeof (v) != "undefined") {_RecordType("<3431,3432,120>",(v)); Inst115++; } } catch(e) {}
v;
// test same behavior as above, but for integer properties
var n = o[0] = 100;
try { if (Inst116 <= 1000 && typeof (n) != "undefined") {_RecordType("<3497,3498,122>",(n)); Inst116++; } } catch(e) {}try { if (Inst117 <= 1000 && typeof (o[0]) != "undefined") {_RecordType("<3501,3505,122>",(o[0])); Inst117++; } } catch(e) {}try { if (Inst118 <= 1000 && typeof (o) != "undefined") {_RecordType("<3501,3502,122>",(o)); Inst118++; } } catch(e) {}
try { if (Inst119 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<3513,3522,123>",(undefined)); Inst119++; } } catch(e) {}
undefined;
try { if (Inst120 <= 1000 && typeof (o[0]) != "undefined") {_RecordType("<3524,3528,124>",(o[0])); Inst120++; } } catch(e) {}try { if (Inst121 <= 1000 && typeof (o) != "undefined") {_RecordType("<3524,3525,124>",(o)); Inst121++; } } catch(e) {}
o[0];
100;
try { if (Inst122 <= 1000 && typeof (n) != "undefined") {_RecordType("<3535,3536,126>",(n)); Inst122++; } } catch(e) {}
n;
// Fast properties should remain fast
obj = {
  x: 42,
  y: 'foo'
};
try { if (Inst123 <= 1000 && typeof (obj) != "undefined") {_RecordType("<3576,3579,128>",(obj)); Inst123++; } } catch(e) {}
try { if (Inst124 <= 1000 && typeof (Object.preventExtensions) != "undefined") {_RecordType("<3607,3631,132>",(Object.preventExtensions)); Inst124++; } } catch(e) {}try { if (Inst125 <= 1000 && typeof (Object) != "undefined") {_RecordType("<3607,3613,132>",(Object)); Inst125++; } } catch(e) {}try { if (Inst126 <= 1000 && typeof (obj) != "undefined") {_RecordType("<3632,3635,132>",(obj)); Inst126++; } } catch(e) {}
Object.preventExtensions(obj);
try { if (Inst127 <= 1000 && typeof (Object.isExtensible) != "undefined") {_RecordType("<3638,3657,133>",(Object.isExtensible)); Inst127++; } } catch(e) {}try { if (Inst128 <= 1000 && typeof (Object) != "undefined") {_RecordType("<3638,3644,133>",(Object)); Inst128++; } } catch(e) {}try { if (Inst129 <= 1000 && typeof (obj) != "undefined") {_RecordType("<3658,3661,133>",(obj)); Inst129++; } } catch(e) {}
Object.isExtensible(obj);
try { if (Inst130 <= 1000 && typeof (Object.isSealed) != "undefined") {_RecordType("<3664,3679,134>",(Object.isSealed)); Inst130++; } } catch(e) {}try { if (Inst131 <= 1000 && typeof (Object) != "undefined") {_RecordType("<3664,3670,134>",(Object)); Inst131++; } } catch(e) {}try { if (Inst132 <= 1000 && typeof (obj) != "undefined") {_RecordType("<3680,3683,134>",(obj)); Inst132++; } } catch(e) {}
Object.isSealed(obj);
// Non-extensible objects should share maps where possible
obj = {
  prop1: 1,
  prop2: 2
};
try { if (Inst133 <= 1000 && typeof (obj) != "undefined") {_RecordType("<3745,3748,136>",(obj)); Inst133++; } } catch(e) {}
obj2 = {
  prop1: 3,
  prop2: 4
};
try { if (Inst134 <= 1000 && typeof (obj2) != "undefined") {_RecordType("<3779,3783,140>",(obj2)); Inst134++; } } catch(e) {}
try { if (Inst135 <= 1000 && typeof (Object.preventExtensions) != "undefined") {_RecordType("<3814,3838,144>",(Object.preventExtensions)); Inst135++; } } catch(e) {}try { if (Inst136 <= 1000 && typeof (Object) != "undefined") {_RecordType("<3814,3820,144>",(Object)); Inst136++; } } catch(e) {}try { if (Inst137 <= 1000 && typeof (obj) != "undefined") {_RecordType("<3839,3842,144>",(obj)); Inst137++; } } catch(e) {}
Object.preventExtensions(obj);
try { if (Inst138 <= 1000 && typeof (Object.preventExtensions) != "undefined") {_RecordType("<3845,3869,145>",(Object.preventExtensions)); Inst138++; } } catch(e) {}try { if (Inst139 <= 1000 && typeof (Object) != "undefined") {_RecordType("<3845,3851,145>",(Object)); Inst139++; } } catch(e) {}try { if (Inst140 <= 1000 && typeof (obj2) != "undefined") {_RecordType("<3870,3874,145>",(obj2)); Inst140++; } } catch(e) {}
Object.preventExtensions(obj2);
try { if (Inst141 <= 1000 && typeof (Object.isExtensible) != "undefined") {_RecordType("<3877,3896,146>",(Object.isExtensible)); Inst141++; } } catch(e) {}try { if (Inst142 <= 1000 && typeof (Object) != "undefined") {_RecordType("<3877,3883,146>",(Object)); Inst142++; } } catch(e) {}try { if (Inst143 <= 1000 && typeof (obj) != "undefined") {_RecordType("<3897,3900,146>",(obj)); Inst143++; } } catch(e) {}
Object.isExtensible(obj);
try { if (Inst144 <= 1000 && typeof (Object.isExtensible) != "undefined") {_RecordType("<3903,3922,147>",(Object.isExtensible)); Inst144++; } } catch(e) {}try { if (Inst145 <= 1000 && typeof (Object) != "undefined") {_RecordType("<3903,3909,147>",(Object)); Inst145++; } } catch(e) {}try { if (Inst146 <= 1000 && typeof (obj2) != "undefined") {_RecordType("<3923,3927,147>",(obj2)); Inst146++; } } catch(e) {}
Object.isExtensible(obj2);
try { if (Inst147 <= 1000 && typeof (Object.isSealed) != "undefined") {_RecordType("<3930,3945,148>",(Object.isSealed)); Inst147++; } } catch(e) {}try { if (Inst148 <= 1000 && typeof (Object) != "undefined") {_RecordType("<3930,3936,148>",(Object)); Inst148++; } } catch(e) {}try { if (Inst149 <= 1000 && typeof (obj) != "undefined") {_RecordType("<3946,3949,148>",(obj)); Inst149++; } } catch(e) {}
Object.isSealed(obj);
try { if (Inst150 <= 1000 && typeof (Object.isSealed) != "undefined") {_RecordType("<3952,3967,149>",(Object.isSealed)); Inst150++; } } catch(e) {}try { if (Inst151 <= 1000 && typeof (Object) != "undefined") {_RecordType("<3952,3958,149>",(Object)); Inst151++; } } catch(e) {}try { if (Inst152 <= 1000 && typeof (obj2) != "undefined") {_RecordType("<3968,3972,149>",(obj2)); Inst152++; } } catch(e) {}
Object.isSealed(obj2);
// Non-extensible objects should share maps even when they have elements
obj = {
  prop1: 1,
  prop2: 2,
  75: 'foo'
};
try { if (Inst153 <= 1000 && typeof (obj) != "undefined") {_RecordType("<4048,4051,151>",(obj)); Inst153++; } } catch(e) {}
obj2 = {
  prop1: 3,
  prop2: 4,
  150: 'bar'
};
try { if (Inst154 <= 1000 && typeof (obj2) != "undefined") {_RecordType("<4095,4099,156>",(obj2)); Inst154++; } } catch(e) {}
try { if (Inst155 <= 1000 && typeof (Object.preventExtensions) != "undefined") {_RecordType("<4144,4168,161>",(Object.preventExtensions)); Inst155++; } } catch(e) {}try { if (Inst156 <= 1000 && typeof (Object) != "undefined") {_RecordType("<4144,4150,161>",(Object)); Inst156++; } } catch(e) {}try { if (Inst157 <= 1000 && typeof (obj) != "undefined") {_RecordType("<4169,4172,161>",(obj)); Inst157++; } } catch(e) {}
Object.preventExtensions(obj);
try { if (Inst158 <= 1000 && typeof (Object.preventExtensions) != "undefined") {_RecordType("<4175,4199,162>",(Object.preventExtensions)); Inst158++; } } catch(e) {}try { if (Inst159 <= 1000 && typeof (Object) != "undefined") {_RecordType("<4175,4181,162>",(Object)); Inst159++; } } catch(e) {}try { if (Inst160 <= 1000 && typeof (obj2) != "undefined") {_RecordType("<4200,4204,162>",(obj2)); Inst160++; } } catch(e) {}
Object.preventExtensions(obj2);
try { if (Inst161 <= 1000 && typeof (Object.isExtensible) != "undefined") {_RecordType("<4207,4226,163>",(Object.isExtensible)); Inst161++; } } catch(e) {}try { if (Inst162 <= 1000 && typeof (Object) != "undefined") {_RecordType("<4207,4213,163>",(Object)); Inst162++; } } catch(e) {}try { if (Inst163 <= 1000 && typeof (obj) != "undefined") {_RecordType("<4227,4230,163>",(obj)); Inst163++; } } catch(e) {}
Object.isExtensible(obj);
try { if (Inst164 <= 1000 && typeof (Object.isExtensible) != "undefined") {_RecordType("<4233,4252,164>",(Object.isExtensible)); Inst164++; } } catch(e) {}try { if (Inst165 <= 1000 && typeof (Object) != "undefined") {_RecordType("<4233,4239,164>",(Object)); Inst165++; } } catch(e) {}try { if (Inst166 <= 1000 && typeof (obj2) != "undefined") {_RecordType("<4253,4257,164>",(obj2)); Inst166++; } } catch(e) {}
Object.isExtensible(obj2);
try { if (Inst167 <= 1000 && typeof (Object.isSealed) != "undefined") {_RecordType("<4260,4275,165>",(Object.isSealed)); Inst167++; } } catch(e) {}try { if (Inst168 <= 1000 && typeof (Object) != "undefined") {_RecordType("<4260,4266,165>",(Object)); Inst168++; } } catch(e) {}try { if (Inst169 <= 1000 && typeof (obj) != "undefined") {_RecordType("<4276,4279,165>",(obj)); Inst169++; } } catch(e) {}
Object.isSealed(obj);
try { if (Inst170 <= 1000 && typeof (Object.isSealed) != "undefined") {_RecordType("<4282,4297,166>",(Object.isSealed)); Inst170++; } } catch(e) {}try { if (Inst171 <= 1000 && typeof (Object) != "undefined") {_RecordType("<4282,4288,166>",(Object)); Inst171++; } } catch(e) {}try { if (Inst172 <= 1000 && typeof (obj2) != "undefined") {_RecordType("<4298,4302,166>",(obj2)); Inst172++; } } catch(e) {}
Object.isSealed(obj2);

