var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2017 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax
// Ensure that mutation of the Object.keys result doesn't affect the
// enumeration cache for fast-mode objects.
(function () {
  const a = {
    x: 1,
    y: 2
  };
try { if (Inst0 <= 1000 && typeof (a) != "undefined") {_RecordType("<336,337,8>",(a)); Inst0++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (Object.keys) != "undefined") {_RecordType("<376,387,12>",(Object.keys)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Object) != "undefined") {_RecordType("<376,382,12>",(Object)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (a) != "undefined") {_RecordType("<388,389,12>",(a)); Inst4++; } } catch(e) {}
  let k = Object.keys(a);
try { if (Inst1 <= 1000 && typeof (k) != "undefined") {_RecordType("<372,373,12>",(k)); Inst1++; } } catch(e) {}
  2;
try { if (Inst5 <= 1000 && typeof (k.length) != "undefined") {_RecordType("<399,407,14>",(k.length)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (k) != "undefined") {_RecordType("<399,400,14>",(k)); Inst6++; } } catch(e) {}
  k.length;
  "x";
try { if (Inst7 <= 1000 && typeof (k[0]) != "undefined") {_RecordType("<418,422,16>",(k[0])); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (k) != "undefined") {_RecordType("<418,419,16>",(k)); Inst8++; } } catch(e) {}
  k[0];
  "y";
try { if (Inst9 <= 1000 && typeof (k[1]) != "undefined") {_RecordType("<433,437,18>",(k[1])); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (k) != "undefined") {_RecordType("<433,434,18>",(k)); Inst10++; } } catch(e) {}
  k[1];
  k[0] = "y";
try { if (Inst11 <= 1000 && typeof (k[0]) != "undefined") {_RecordType("<441,445,19>",(k[0])); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (k) != "undefined") {_RecordType("<441,442,19>",(k)); Inst12++; } } catch(e) {}
  k[1] = "x";
try { if (Inst13 <= 1000 && typeof (k[1]) != "undefined") {_RecordType("<455,459,20>",(k[1])); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (k) != "undefined") {_RecordType("<455,456,20>",(k)); Inst14++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (Object.keys) != "undefined") {_RecordType("<473,484,21>",(Object.keys)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Object) != "undefined") {_RecordType("<473,479,21>",(Object)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (a) != "undefined") {_RecordType("<485,486,21>",(a)); Inst18++; } } catch(e) {}
  k = Object.keys(a);
try { if (Inst15 <= 1000 && typeof (k) != "undefined") {_RecordType("<469,470,21>",(k)); Inst15++; } } catch(e) {}
  2;
try { if (Inst19 <= 1000 && typeof (k.length) != "undefined") {_RecordType("<496,504,23>",(k.length)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (k) != "undefined") {_RecordType("<496,497,23>",(k)); Inst20++; } } catch(e) {}
  k.length;
  "x";
try { if (Inst21 <= 1000 && typeof (k[0]) != "undefined") {_RecordType("<515,519,25>",(k[0])); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (k) != "undefined") {_RecordType("<515,516,25>",(k)); Inst22++; } } catch(e) {}
  k[0];
  "y";
try { if (Inst23 <= 1000 && typeof (k[1]) != "undefined") {_RecordType("<530,534,27>",(k[1])); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (k) != "undefined") {_RecordType("<530,531,27>",(k)); Inst24++; } } catch(e) {}
  k[1];
})(); // Ensure that the copy-on-write keys are handled properly, even in
// the presence of Symbols.


(function () {
try { if (Inst26 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<667,673,33>",(Symbol)); Inst26++; } } catch(e) {}
  const s = Symbol();
try { if (Inst25 <= 1000 && typeof (s) != "undefined") {_RecordType("<663,664,33>",(s)); Inst25++; } } catch(e) {}
  const a = {
    [s]: 1
  };
try { if (Inst27 <= 1000 && typeof (a) != "undefined") {_RecordType("<685,686,34>",(a)); Inst27++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (Object.keys) != "undefined") {_RecordType("<717,728,37>",(Object.keys)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (Object) != "undefined") {_RecordType("<717,723,37>",(Object)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (a) != "undefined") {_RecordType("<729,730,37>",(a)); Inst31++; } } catch(e) {}
  let k = Object.keys(a);
try { if (Inst28 <= 1000 && typeof (k) != "undefined") {_RecordType("<713,714,37>",(k)); Inst28++; } } catch(e) {}
  0;
try { if (Inst32 <= 1000 && typeof (k.length) != "undefined") {_RecordType("<740,748,39>",(k.length)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (k) != "undefined") {_RecordType("<740,741,39>",(k)); Inst33++; } } catch(e) {}
  k.length;
try { if (Inst34 <= 1000 && typeof (k.shift) != "undefined") {_RecordType("<752,759,40>",(k.shift)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (k) != "undefined") {_RecordType("<752,753,40>",(k)); Inst35++; } } catch(e) {}
  k.shift();
  0;
try { if (Inst36 <= 1000 && typeof (k.length) != "undefined") {_RecordType("<770,778,42>",(k.length)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (k) != "undefined") {_RecordType("<770,771,42>",(k)); Inst37++; } } catch(e) {}
  k.length;
})(); // Ensure we invoke all steps on proxies.


try { if (Inst38 <= 1000 && typeof (ObjectKeysProxy) != "undefined") {_RecordType("<840,855,46>",(ObjectKeysProxy)); Inst38++; } } catch(e) {}
(function ObjectKeysProxy() {
  let log = [];
try { if (Inst39 <= 1000 && typeof (log) != "undefined") {_RecordType("<866,869,47>",(log)); Inst39++; } } catch(e) {}
try { if (Inst41 <= 1000 && typeof (Object.keys) != "undefined") {_RecordType("<891,902,48>",(Object.keys)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (Object) != "undefined") {_RecordType("<891,897,48>",(Object)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<907,912,48>",(Proxy)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (ownKeys) != "undefined") {_RecordType("<923,930,49>",(ownKeys)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (target) != "undefined") {_RecordType("<931,937,49>",(target)); Inst45++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (getOwnPropertyDescriptor) != "undefined") {_RecordType("<1010,1034,54>",(getOwnPropertyDescriptor)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (target) != "undefined") {_RecordType("<1035,1041,54>",(target)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (key) != "undefined") {_RecordType("<1043,1046,54>",(key)); Inst50++; } } catch(e) {}
  let result = Object.keys(new Proxy({}, {
    ownKeys(target) {
try { if (Inst46 <= 1000 && typeof (log.push) != "undefined") {_RecordType("<947,955,50>",(log.push)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (log) != "undefined") {_RecordType("<947,950,50>",(log)); Inst47++; } } catch(e) {}
      log.push('ownKeys');
      return ['a', 'b', 'c'];
    },

    getOwnPropertyDescriptor(target, key) {
try { if (Inst51 <= 1000 && typeof (log.push) != "undefined") {_RecordType("<1056,1064,55>",(log.push)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (log) != "undefined") {_RecordType("<1056,1059,55>",(log)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (key) != "undefined") {_RecordType("<1095,1098,55>",(key)); Inst53++; } } catch(e) {}
      log.push('getOwnPropertyDescriptor-' + key);

try { if (Inst54 <= 1000 && typeof (key) != "undefined") {_RecordType("<1112,1115,57>",(key)); Inst54++; } } catch(e) {}
      if (key === 'b') {
        return {
          enumerable: false,
          configurable: true
        };
      }

      return {
        enumerable: true,
        configurable: true
      };
    }

  }));
try { if (Inst40 <= 1000 && typeof (result) != "undefined") {_RecordType("<882,888,48>",(result)); Inst40++; } } catch(e) {}
  ['a', 'c'];
try { if (Inst55 <= 1000 && typeof (result) != "undefined") {_RecordType("<1329,1335,72>",(result)); Inst55++; } } catch(e) {}
  result;
  ['ownKeys', 'getOwnPropertyDescriptor-a', 'getOwnPropertyDescriptor-b', 'getOwnPropertyDescriptor-c'];
try { if (Inst56 <= 1000 && typeof (log) != "undefined") {_RecordType("<1444,1447,74>",(log)); Inst56++; } } catch(e) {}
  log;
  // Test normal target.
  log = [];
try { if (Inst57 <= 1000 && typeof (log) != "undefined") {_RecordType("<1476,1479,76>",(log)); Inst57++; } } catch(e) {}
  let target = {
    a: 1,
    b: 1,
    c: 1
  };
try { if (Inst58 <= 1000 && typeof (target) != "undefined") {_RecordType("<1492,1498,77>",(target)); Inst58++; } } catch(e) {}
try { if (Inst60 <= 1000 && typeof (getOwnPropertyDescriptor) != "undefined") {_RecordType("<1559,1583,83>",(getOwnPropertyDescriptor)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (target) != "undefined") {_RecordType("<1584,1590,83>",(target)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (key) != "undefined") {_RecordType("<1592,1595,83>",(key)); Inst62++; } } catch(e) {}
  let handler = {
    getOwnPropertyDescriptor(target, key) {
try { if (Inst63 <= 1000 && typeof (log.push) != "undefined") {_RecordType("<1605,1613,84>",(log.push)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (log) != "undefined") {_RecordType("<1605,1608,84>",(log)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (key) != "undefined") {_RecordType("<1644,1647,84>",(key)); Inst65++; } } catch(e) {}
      log.push('getOwnPropertyDescriptor-' + key);

try { if (Inst66 <= 1000 && typeof (key) != "undefined") {_RecordType("<1661,1664,86>",(key)); Inst66++; } } catch(e) {}
      if (key === 'b') {
        return {
          enumerable: false,
          configurable: true
        };
      }

      return {
        enumerable: true,
        configurable: true
      };
    }

  };
try { if (Inst59 <= 1000 && typeof (handler) != "undefined") {_RecordType("<1543,1550,82>",(handler)); Inst59++; } } catch(e) {}
try { if (Inst68 <= 1000 && typeof (Object.keys) != "undefined") {_RecordType("<1871,1882,100>",(Object.keys)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1871,1877,100>",(Object)); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<1887,1892,100>",(Proxy)); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (target) != "undefined") {_RecordType("<1893,1899,100>",(target)); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (handler) != "undefined") {_RecordType("<1901,1908,100>",(handler)); Inst72++; } } catch(e) {}
  result = Object.keys(new Proxy(target, handler));
try { if (Inst67 <= 1000 && typeof (result) != "undefined") {_RecordType("<1862,1868,100>",(result)); Inst67++; } } catch(e) {}
  ['a', 'c'];
try { if (Inst73 <= 1000 && typeof (result) != "undefined") {_RecordType("<1928,1934,102>",(result)); Inst73++; } } catch(e) {}
  result;
  ['getOwnPropertyDescriptor-a', 'getOwnPropertyDescriptor-b', 'getOwnPropertyDescriptor-c'];
try { if (Inst74 <= 1000 && typeof (log) != "undefined") {_RecordType("<2032,2035,104>",(log)); Inst74++; } } catch(e) {}
  log;
  // Test trap invocation with non-enumerable target properties.
  log = [];
try { if (Inst75 <= 1000 && typeof (log) != "undefined") {_RecordType("<2104,2107,106>",(log)); Inst75++; } } catch(e) {}
try { if (Inst77 <= 1000 && typeof (Object.create) != "undefined") {_RecordType("<2125,2138,107>",(Object.create)); Inst77++; } } catch(e) {}try { if (Inst78 <= 1000 && typeof (Object) != "undefined") {_RecordType("<2125,2131,107>",(Object)); Inst78++; } } catch(e) {}try { if (Inst79 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<2139,2155,107>",(Object.prototype)); Inst79++; } } catch(e) {}try { if (Inst80 <= 1000 && typeof (Object) != "undefined") {_RecordType("<2139,2145,107>",(Object)); Inst80++; } } catch(e) {}
  target = Object.create(Object.prototype, {
    a: {
      enumerable: true,
      configurable: true
    },
    b: {
      enumerable: false,
      configurable: true
    },
    c: {
      enumerable: true,
      configurable: true
    }
  });
try { if (Inst76 <= 1000 && typeof (target) != "undefined") {_RecordType("<2116,2122,107>",(target)); Inst76++; } } catch(e) {}
try { if (Inst82 <= 1000 && typeof (Object.keys) != "undefined") {_RecordType("<2371,2382,121>",(Object.keys)); Inst82++; } } catch(e) {}try { if (Inst83 <= 1000 && typeof (Object) != "undefined") {_RecordType("<2371,2377,121>",(Object)); Inst83++; } } catch(e) {}try { if (Inst84 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<2387,2392,121>",(Proxy)); Inst84++; } } catch(e) {}try { if (Inst85 <= 1000 && typeof (target) != "undefined") {_RecordType("<2393,2399,121>",(target)); Inst85++; } } catch(e) {}try { if (Inst86 <= 1000 && typeof (handler) != "undefined") {_RecordType("<2401,2408,121>",(handler)); Inst86++; } } catch(e) {}
  result = Object.keys(new Proxy(target, handler));
try { if (Inst81 <= 1000 && typeof (result) != "undefined") {_RecordType("<2362,2368,121>",(result)); Inst81++; } } catch(e) {}
  ['a', 'c'];
try { if (Inst87 <= 1000 && typeof (result) != "undefined") {_RecordType("<2428,2434,123>",(result)); Inst87++; } } catch(e) {}
  result;
  ['getOwnPropertyDescriptor-a', 'getOwnPropertyDescriptor-b', 'getOwnPropertyDescriptor-c'];
try { if (Inst88 <= 1000 && typeof (log) != "undefined") {_RecordType("<2532,2535,125>",(log)); Inst88++; } } catch(e) {}
  log;
})();

