var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
var Inst102 = 0;
var Inst103 = 0;
var Inst104 = 0;
var Inst105 = 0;
var Inst106 = 0;
var Inst107 = 0;
var Inst108 = 0;
var Inst109 = 0;
var Inst110 = 0;
var Inst111 = 0;
var Inst112 = 0;
var Inst113 = 0;
var Inst114 = 0;
var Inst115 = 0;
var Inst116 = 0;
var Inst117 = 0;
var Inst118 = 0;
var Inst119 = 0;
var Inst120 = 0;
var Inst121 = 0;
var Inst122 = 0;
var Inst123 = 0;
var Inst124 = 0;
var Inst125 = 0;
var Inst126 = 0;
var Inst127 = 0;
var Inst128 = 0;
var Inst129 = 0;
var Inst130 = 0;
var Inst131 = 0;
var Inst132 = 0;
var Inst133 = 0;
var Inst134 = 0;
var Inst135 = 0;
var Inst136 = 0;
var Inst137 = 0;
var Inst138 = 0;
var Inst139 = 0;
var Inst140 = 0;
var Inst141 = 0;
var Inst142 = 0;
var Inst143 = 0;
var Inst144 = 0;
var Inst145 = 0;
var Inst146 = 0;
var Inst147 = 0;
var Inst148 = 0;
var Inst149 = 0;
var Inst150 = 0;
var Inst151 = 0;
var Inst152 = 0;
var Inst153 = 0;
var Inst154 = 0;
var Inst155 = 0;
var Inst156 = 0;
var Inst157 = 0;
var Inst158 = 0;
var Inst159 = 0;
var Inst160 = 0;
var Inst161 = 0;
var Inst162 = 0;
var Inst163 = 0;
var Inst164 = 0;
var Inst165 = 0;
var Inst166 = 0;
var Inst167 = 0;
var Inst168 = 0;
var Inst169 = 0;
var Inst170 = 0;
var Inst171 = 0;
var Inst172 = 0;
var Inst173 = 0;
var Inst174 = 0;
var Inst175 = 0;
var Inst176 = 0;
var Inst177 = 0;
var Inst178 = 0;
var Inst179 = 0;
var Inst180 = 0;
var Inst181 = 0;
var Inst182 = 0;
var Inst183 = 0;
var Inst184 = 0;
var Inst185 = 0;
var Inst186 = 0;
var Inst187 = 0;
var Inst188 = 0;
var Inst189 = 0;
var Inst190 = 0;
var Inst191 = 0;
var Inst192 = 0;
var Inst193 = 0;
var Inst194 = 0;
var Inst195 = 0;
var Inst196 = 0;
var Inst197 = 0;
var Inst198 = 0;
var Inst199 = 0;
var Inst200 = 0;
var Inst201 = 0;
var Inst202 = 0;
var Inst203 = 0;
var Inst204 = 0;
var Inst205 = 0;
var Inst206 = 0;
var Inst207 = 0;
var Inst208 = 0;
var Inst209 = 0;
var Inst210 = 0;
var Inst211 = 0;
var Inst212 = 0;
var Inst213 = 0;
var Inst214 = 0;
var Inst215 = 0;
var Inst216 = 0;
var Inst217 = 0;
var Inst218 = 0;
var Inst219 = 0;
var Inst220 = 0;
var Inst221 = 0;
var Inst222 = 0;
var Inst223 = 0;
var Inst224 = 0;
var Inst225 = 0;
var Inst226 = 0;
var Inst227 = 0;
var Inst228 = 0;
var Inst229 = 0;
var Inst230 = 0;
var Inst231 = 0;
var Inst232 = 0;
var Inst233 = 0;
var Inst234 = 0;
var Inst235 = 0;
var Inst236 = 0;
var Inst237 = 0;
var Inst238 = 0;
var Inst239 = 0;
var Inst240 = 0;
var Inst241 = 0;
var Inst242 = 0;
var Inst243 = 0;
var Inst244 = 0;
var Inst245 = 0;
var Inst246 = 0;
var Inst247 = 0;
var Inst248 = 0;
var Inst249 = 0;
var Inst250 = 0;
var Inst251 = 0;
var Inst252 = 0;
var Inst253 = 0;
var Inst254 = 0;
var Inst255 = 0;
var Inst256 = 0;
var Inst257 = 0;
var Inst258 = 0;
var Inst259 = 0;
var Inst260 = 0;
var Inst261 = 0;
var Inst262 = 0;
var Inst263 = 0;
var Inst264 = 0;
var Inst265 = 0;
var Inst266 = 0;
var Inst267 = 0;
var Inst268 = 0;
var Inst269 = 0;
var Inst270 = 0;
var Inst271 = 0;
var Inst272 = 0;
var Inst273 = 0;
var Inst274 = 0;
var Inst275 = 0;
var Inst276 = 0;
var Inst277 = 0;
var Inst278 = 0;
var Inst279 = 0;
var Inst280 = 0;
var Inst281 = 0;
var Inst282 = 0;
var Inst283 = 0;
var Inst284 = 0;
var Inst285 = 0;
var Inst286 = 0;
var Inst287 = 0;
var Inst288 = 0;
var Inst289 = 0;
var Inst290 = 0;
var Inst291 = 0;
var Inst292 = 0;
var Inst293 = 0;
var Inst294 = 0;
var Inst295 = 0;
var Inst296 = 0;
var Inst297 = 0;
var Inst298 = 0;
var Inst299 = 0;
var Inst300 = 0;
var Inst301 = 0;
var Inst302 = 0;
var Inst303 = 0;
var Inst304 = 0;
var Inst305 = 0;
var Inst306 = 0;
var Inst307 = 0;
var Inst308 = 0;
var Inst309 = 0;
var Inst310 = 0;
var Inst311 = 0;
var Inst312 = 0;
var Inst313 = 0;
var Inst314 = 0;
var Inst315 = 0;
var Inst316 = 0;
var Inst317 = 0;
var Inst318 = 0;
var Inst319 = 0;
var Inst320 = 0;
var Inst321 = 0;
var Inst322 = 0;
var Inst323 = 0;
var Inst324 = 0;
var Inst325 = 0;
var Inst326 = 0;
var Inst327 = 0;
var Inst328 = 0;
var Inst329 = 0;
var Inst330 = 0;
var Inst331 = 0;
var Inst332 = 0;
var Inst333 = 0;
var Inst334 = 0;
var Inst335 = 0;
var Inst336 = 0;
var Inst337 = 0;
var Inst338 = 0;
var Inst339 = 0;
var Inst340 = 0;
var Inst341 = 0;
var Inst342 = 0;
var Inst343 = 0;
var Inst344 = 0;
var Inst345 = 0;
var Inst346 = 0;
var Inst347 = 0;
var Inst348 = 0;
var Inst349 = 0;
var Inst350 = 0;
var Inst351 = 0;
var Inst352 = 0;
var Inst353 = 0;
var Inst354 = 0;
var Inst355 = 0;
var Inst356 = 0;
var Inst357 = 0;
var Inst358 = 0;
var Inst359 = 0;
var Inst360 = 0;
var Inst361 = 0;
var Inst362 = 0;
var Inst363 = 0;
var Inst364 = 0;
var Inst365 = 0;
var Inst366 = 0;
var Inst367 = 0;
var Inst368 = 0;
var Inst369 = 0;
var Inst370 = 0;
var Inst371 = 0;
var Inst372 = 0;
var Inst373 = 0;
var Inst374 = 0;
var Inst375 = 0;
var Inst376 = 0;
var Inst377 = 0;
var Inst378 = 0;
var Inst379 = 0;
var Inst380 = 0;
var Inst381 = 0;
var Inst382 = 0;
var Inst383 = 0;
var Inst384 = 0;
var Inst385 = 0;
var Inst386 = 0;
var Inst387 = 0;
var Inst388 = 0;
var Inst389 = 0;
var Inst390 = 0;
var Inst391 = 0;
var Inst392 = 0;
var Inst393 = 0;
var Inst394 = 0;
var Inst395 = 0;
var Inst396 = 0;
var Inst397 = 0;
var Inst398 = 0;
var Inst399 = 0;
var Inst400 = 0;
var Inst401 = 0;
var Inst402 = 0;
var Inst403 = 0;
var Inst404 = 0;
var Inst405 = 0;
var Inst406 = 0;
var Inst407 = 0;
var Inst408 = 0;
var Inst409 = 0;
var Inst410 = 0;
var Inst411 = 0;
var Inst412 = 0;
var Inst413 = 0;
var Inst414 = 0;
var Inst415 = 0;
var Inst416 = 0;
var Inst417 = 0;
var Inst418 = 0;
var Inst419 = 0;
var Inst420 = 0;
var Inst421 = 0;
var Inst422 = 0;
var Inst423 = 0;
var Inst424 = 0;
var Inst425 = 0;
var Inst426 = 0;
var Inst427 = 0;
var Inst428 = 0;
var Inst429 = 0;
var Inst430 = 0;
var Inst431 = 0;
var Inst432 = 0;
var Inst433 = 0;
var Inst434 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2017 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax --turbo-inline-array-builtins --opt
// Flags: --no-always-opt
// Early exit from every functions properly.
(() => {
  const a = [1, 2, 3, 4, 5];
try { if (Inst0 <= 1000 && typeof (a) != "undefined") {_RecordType("<324,325,8>",(a)); Inst0++; } } catch(e) {}
  let result = 0;
try { if (Inst1 <= 1000 && typeof (result) != "undefined") {_RecordType("<351,357,9>",(result)); Inst1++; } } catch(e) {}

try { if (Inst2 <= 1000 && typeof (earlyExit) != "undefined") {_RecordType("<375,384,11>",(earlyExit)); Inst2++; } } catch(e) {}
  function earlyExit() {
try { if (Inst3 <= 1000 && typeof (a.every) != "undefined") {_RecordType("<400,407,12>",(a.every)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (a) != "undefined") {_RecordType("<400,401,12>",(a)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (v) != "undefined") {_RecordType("<408,409,12>",(v)); Inst5++; } } catch(e) {}
    return a.every(v => {
try { if (Inst7 <= 1000 && typeof (v) != "undefined") {_RecordType("<431,432,13>",(v)); Inst7++; } } catch(e) {}
      result += v;
try { if (Inst6 <= 1000 && typeof (result) != "undefined") {_RecordType("<421,427,13>",(result)); Inst6++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (v) != "undefined") {_RecordType("<447,448,14>",(v)); Inst8++; } } catch(e) {}
      return v < 2;
    });
  }

try { if (Inst9 <= 1000 && typeof (earlyExit) != "undefined") {_RecordType("<469,478,18>",(earlyExit)); Inst9++; } } catch(e) {}
  earlyExit();
try { if (Inst10 <= 1000 && typeof (earlyExit) != "undefined") {_RecordType("<484,493,19>",(earlyExit)); Inst10++; } } catch(e) {}
  earlyExit();
try { if (Inst11 <= 1000 && typeof (earlyExit) != "undefined") {_RecordType("<499,508,20>",(earlyExit)); Inst11++; } } catch(e) {}
  earlyExit();
  9;
try { if (Inst12 <= 1000 && typeof (result) != "undefined") {_RecordType("<519,525,22>",(result)); Inst12++; } } catch(e) {}
  result;
})(); // Soft-deopt plus early exit.


(() => {
  const a = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
try { if (Inst13 <= 1000 && typeof (a) != "undefined") {_RecordType("<583,584,27>",(a)); Inst13++; } } catch(e) {}
  let result = 0;
try { if (Inst14 <= 1000 && typeof (result) != "undefined") {_RecordType("<626,632,28>",(result)); Inst14++; } } catch(e) {}

try { if (Inst15 <= 1000 && typeof (softyPlusEarlyExit) != "undefined") {_RecordType("<650,668,30>",(softyPlusEarlyExit)); Inst15++; } } catch(e) {}
  function softyPlusEarlyExit(deopt) {
try { if (Inst16 <= 1000 && typeof (deopt) != "undefined") {_RecordType("<669,674,30>",(deopt)); Inst16++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (a.every) != "undefined") {_RecordType("<689,696,31>",(a.every)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (a) != "undefined") {_RecordType("<689,690,31>",(a)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (v) != "undefined") {_RecordType("<697,698,31>",(v)); Inst19++; } } catch(e) {}
    return a.every(v => {
try { if (Inst21 <= 1000 && typeof (v) != "undefined") {_RecordType("<720,721,32>",(v)); Inst21++; } } catch(e) {}
      result += v;
try { if (Inst20 <= 1000 && typeof (result) != "undefined") {_RecordType("<710,716,32>",(result)); Inst20++; } } catch(e) {}

try { if (Inst22 <= 1000 && typeof (v) != "undefined") {_RecordType("<734,735,34>",(v)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (deopt) != "undefined") {_RecordType("<745,750,34>",(deopt)); Inst23++; } } catch(e) {}
      if (v === 4 && deopt) {
        a.abc = 25;
try { if (Inst24 <= 1000 && typeof (a.abc) != "undefined") {_RecordType("<762,767,35>",(a.abc)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (a) != "undefined") {_RecordType("<762,763,35>",(a)); Inst25++; } } catch(e) {}
      }

try { if (Inst26 <= 1000 && typeof (v) != "undefined") {_RecordType("<796,797,38>",(v)); Inst26++; } } catch(e) {}
      return v < 8;
    });
  }

try { if (Inst27 <= 1000 && typeof (softyPlusEarlyExit) != "undefined") {_RecordType("<818,836,42>",(softyPlusEarlyExit)); Inst27++; } } catch(e) {}
  softyPlusEarlyExit(false);
try { if (Inst28 <= 1000 && typeof (softyPlusEarlyExit) != "undefined") {_RecordType("<847,865,43>",(softyPlusEarlyExit)); Inst28++; } } catch(e) {}
  softyPlusEarlyExit(false);
try { if (Inst29 <= 1000 && typeof (softyPlusEarlyExit) != "undefined") {_RecordType("<876,894,44>",(softyPlusEarlyExit)); Inst29++; } } catch(e) {}
  softyPlusEarlyExit(true);
  36 * 3;
try { if (Inst30 <= 1000 && typeof (result) != "undefined") {_RecordType("<914,920,46>",(result)); Inst30++; } } catch(e) {}
  result;
})(); // Soft-deopt synced with early exit, which forces the lazy deoptimization
// continuation handler to exit.


(() => {
  const a = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
try { if (Inst31 <= 1000 && typeof (a) != "undefined") {_RecordType("<1055,1056,52>",(a)); Inst31++; } } catch(e) {}
  let called_values = [];
try { if (Inst32 <= 1000 && typeof (called_values) != "undefined") {_RecordType("<1098,1111,53>",(called_values)); Inst32++; } } catch(e) {}

try { if (Inst33 <= 1000 && typeof (softyPlusEarlyExit) != "undefined") {_RecordType("<1130,1148,55>",(softyPlusEarlyExit)); Inst33++; } } catch(e) {}
  function softyPlusEarlyExit(deopt) {
try { if (Inst34 <= 1000 && typeof (deopt) != "undefined") {_RecordType("<1149,1154,55>",(deopt)); Inst34++; } } catch(e) {}
    called_values = [];
try { if (Inst35 <= 1000 && typeof (called_values) != "undefined") {_RecordType("<1162,1175,56>",(called_values)); Inst35++; } } catch(e) {}
try { if (Inst36 <= 1000 && typeof (a.every) != "undefined") {_RecordType("<1193,1200,57>",(a.every)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (a) != "undefined") {_RecordType("<1193,1194,57>",(a)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (v) != "undefined") {_RecordType("<1201,1202,57>",(v)); Inst38++; } } catch(e) {}
    return a.every(v => {
try { if (Inst39 <= 1000 && typeof (called_values.push) != "undefined") {_RecordType("<1214,1232,58>",(called_values.push)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (called_values) != "undefined") {_RecordType("<1214,1227,58>",(called_values)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (v) != "undefined") {_RecordType("<1233,1234,58>",(v)); Inst41++; } } catch(e) {}
      called_values.push(v);

try { if (Inst42 <= 1000 && typeof (v) != "undefined") {_RecordType("<1248,1249,60>",(v)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (deopt) != "undefined") {_RecordType("<1259,1264,60>",(deopt)); Inst43++; } } catch(e) {}
      if (v === 4 && deopt) {
        a.abc = 25;
try { if (Inst44 <= 1000 && typeof (a.abc) != "undefined") {_RecordType("<1276,1281,61>",(a.abc)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (a) != "undefined") {_RecordType("<1276,1277,61>",(a)); Inst45++; } } catch(e) {}
        return false;
      }

try { if (Inst46 <= 1000 && typeof (v) != "undefined") {_RecordType("<1332,1333,65>",(v)); Inst46++; } } catch(e) {}
      return v < 8;
    });
  }

try { if (Inst47 <= 1000 && typeof (softyPlusEarlyExit) != "undefined") {_RecordType("<1354,1372,69>",(softyPlusEarlyExit)); Inst47++; } } catch(e) {}
  softyPlusEarlyExit(false);
  [1, 2, 3, 4, 5, 6, 7, 8];
try { if (Inst48 <= 1000 && typeof (called_values) != "undefined") {_RecordType("<1411,1424,71>",(called_values)); Inst48++; } } catch(e) {}
  called_values;
try { if (Inst49 <= 1000 && typeof (softyPlusEarlyExit) != "undefined") {_RecordType("<1428,1446,72>",(softyPlusEarlyExit)); Inst49++; } } catch(e) {}
  softyPlusEarlyExit(false);
try { if (Inst50 <= 1000 && typeof (softyPlusEarlyExit) != "undefined") {_RecordType("<1457,1475,73>",(softyPlusEarlyExit)); Inst50++; } } catch(e) {}
  softyPlusEarlyExit(true);
  [1, 2, 3, 4];
try { if (Inst51 <= 1000 && typeof (called_values) != "undefined") {_RecordType("<1501,1514,75>",(called_values)); Inst51++; } } catch(e) {}
  called_values;
})(); // Unknown field access leads to soft-deopt unrelated to every, should still
// lead to correct result.


(() => {
  const a = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25];
try { if (Inst52 <= 1000 && typeof (a) != "undefined") {_RecordType("<1645,1646,81>",(a)); Inst52++; } } catch(e) {}
  let result = 0;
try { if (Inst53 <= 1000 && typeof (result) != "undefined") {_RecordType("<1748,1754,82>",(result)); Inst53++; } } catch(e) {}

try { if (Inst54 <= 1000 && typeof (eagerDeoptInCalled) != "undefined") {_RecordType("<1772,1790,84>",(eagerDeoptInCalled)); Inst54++; } } catch(e) {}
  function eagerDeoptInCalled(deopt) {
try { if (Inst55 <= 1000 && typeof (deopt) != "undefined") {_RecordType("<1791,1796,84>",(deopt)); Inst55++; } } catch(e) {}
try { if (Inst56 <= 1000 && typeof (a.every) != "undefined") {_RecordType("<1811,1818,85>",(a.every)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (a) != "undefined") {_RecordType("<1811,1812,85>",(a)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (v) != "undefined") {_RecordType("<1820,1821,85>",(v)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (i) != "undefined") {_RecordType("<1823,1824,85>",(i)); Inst59++; } } catch(e) {}
    return a.every((v, i) => {
try { if (Inst60 <= 1000 && typeof (i) != "undefined") {_RecordType("<1841,1842,86>",(i)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (deopt) != "undefined") {_RecordType("<1853,1858,86>",(deopt)); Inst61++; } } catch(e) {}
      if (i === 13 && deopt) {
        a.abc = 25;
try { if (Inst62 <= 1000 && typeof (a.abc) != "undefined") {_RecordType("<1870,1875,87>",(a.abc)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (a) != "undefined") {_RecordType("<1870,1871,87>",(a)); Inst63++; } } catch(e) {}
      }

try { if (Inst65 <= 1000 && typeof (v) != "undefined") {_RecordType("<1907,1908,90>",(v)); Inst65++; } } catch(e) {}
      result += v;
try { if (Inst64 <= 1000 && typeof (result) != "undefined") {_RecordType("<1897,1903,90>",(result)); Inst64++; } } catch(e) {}
      return true;
    });
  }

try { if (Inst66 <= 1000 && typeof (eagerDeoptInCalled) != "undefined") {_RecordType("<1944,1962,95>",(eagerDeoptInCalled)); Inst66++; } } catch(e) {}
  eagerDeoptInCalled();
try { if (Inst67 <= 1000 && typeof (eagerDeoptInCalled) != "undefined") {_RecordType("<1968,1986,96>",(eagerDeoptInCalled)); Inst67++; } } catch(e) {}
  eagerDeoptInCalled();
try { if (Inst68 <= 1000 && typeof (eagerDeoptInCalled) != "undefined") {_RecordType("<1992,2010,97>",(eagerDeoptInCalled)); Inst68++; } } catch(e) {}
  eagerDeoptInCalled();
try { if (Inst69 <= 1000 && typeof (eagerDeoptInCalled) != "undefined") {_RecordType("<2016,2034,98>",(eagerDeoptInCalled)); Inst69++; } } catch(e) {}
  eagerDeoptInCalled(true);
try { if (Inst70 <= 1000 && typeof (eagerDeoptInCalled) != "undefined") {_RecordType("<2044,2062,99>",(eagerDeoptInCalled)); Inst70++; } } catch(e) {}
  eagerDeoptInCalled();
  1625;
try { if (Inst71 <= 1000 && typeof (result) != "undefined") {_RecordType("<2076,2082,101>",(result)); Inst71++; } } catch(e) {}
  result;
})(); // Length change detected during loop, must cause properly handled eager deopt.


(() => {
  let called_values;
try { if (Inst72 <= 1000 && typeof (called_values) != "undefined") {_RecordType("<2187,2200,106>",(called_values)); Inst72++; } } catch(e) {}

try { if (Inst73 <= 1000 && typeof (eagerDeoptInCalled) != "undefined") {_RecordType("<2214,2232,108>",(eagerDeoptInCalled)); Inst73++; } } catch(e) {}
  function eagerDeoptInCalled(deopt) {
try { if (Inst74 <= 1000 && typeof (deopt) != "undefined") {_RecordType("<2233,2238,108>",(deopt)); Inst74++; } } catch(e) {}
    const a = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
try { if (Inst75 <= 1000 && typeof (a) != "undefined") {_RecordType("<2252,2253,109>",(a)); Inst75++; } } catch(e) {}
    called_values = [];
try { if (Inst76 <= 1000 && typeof (called_values) != "undefined") {_RecordType("<2293,2306,110>",(called_values)); Inst76++; } } catch(e) {}
try { if (Inst77 <= 1000 && typeof (a.every) != "undefined") {_RecordType("<2324,2331,111>",(a.every)); Inst77++; } } catch(e) {}try { if (Inst78 <= 1000 && typeof (a) != "undefined") {_RecordType("<2324,2325,111>",(a)); Inst78++; } } catch(e) {}try { if (Inst79 <= 1000 && typeof (v) != "undefined") {_RecordType("<2333,2334,111>",(v)); Inst79++; } } catch(e) {}try { if (Inst80 <= 1000 && typeof (i) != "undefined") {_RecordType("<2336,2337,111>",(i)); Inst80++; } } catch(e) {}
    return a.every((v, i) => {
try { if (Inst81 <= 1000 && typeof (called_values.push) != "undefined") {_RecordType("<2350,2368,112>",(called_values.push)); Inst81++; } } catch(e) {}try { if (Inst82 <= 1000 && typeof (called_values) != "undefined") {_RecordType("<2350,2363,112>",(called_values)); Inst82++; } } catch(e) {}try { if (Inst83 <= 1000 && typeof (v) != "undefined") {_RecordType("<2369,2370,112>",(v)); Inst83++; } } catch(e) {}
      called_values.push(v);
try { if (Inst86 <= 1000 && typeof (i) != "undefined") {_RecordType("<2390,2391,113>",(i)); Inst86++; } } catch(e) {}try { if (Inst87 <= 1000 && typeof (deopt) != "undefined") {_RecordType("<2401,2406,113>",(deopt)); Inst87++; } } catch(e) {}
      a.length = i === 5 && deopt ? 8 : 10;
try { if (Inst84 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<2379,2387,113>",(a.length)); Inst84++; } } catch(e) {}try { if (Inst85 <= 1000 && typeof (a) != "undefined") {_RecordType("<2379,2380,113>",(a)); Inst85++; } } catch(e) {}
      return true;
    });
  }

try { if (Inst88 <= 1000 && typeof (eagerDeoptInCalled) != "undefined") {_RecordType("<2451,2469,118>",(eagerDeoptInCalled)); Inst88++; } } catch(e) {}
  eagerDeoptInCalled();
  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
try { if (Inst89 <= 1000 && typeof (called_values) != "undefined") {_RecordType("<2510,2523,120>",(called_values)); Inst89++; } } catch(e) {}
  called_values;
try { if (Inst90 <= 1000 && typeof (eagerDeoptInCalled) != "undefined") {_RecordType("<2527,2545,121>",(eagerDeoptInCalled)); Inst90++; } } catch(e) {}
  eagerDeoptInCalled();
try { if (Inst91 <= 1000 && typeof (eagerDeoptInCalled) != "undefined") {_RecordType("<2551,2569,122>",(eagerDeoptInCalled)); Inst91++; } } catch(e) {}
  eagerDeoptInCalled();
try { if (Inst92 <= 1000 && typeof (eagerDeoptInCalled) != "undefined") {_RecordType("<2575,2593,123>",(eagerDeoptInCalled)); Inst92++; } } catch(e) {}
  eagerDeoptInCalled(true);
  [1, 2, 3, 4, 5, 6, 7, 8];
try { if (Inst93 <= 1000 && typeof (called_values) != "undefined") {_RecordType("<2631,2644,125>",(called_values)); Inst93++; } } catch(e) {}
  called_values;
try { if (Inst94 <= 1000 && typeof (eagerDeoptInCalled) != "undefined") {_RecordType("<2648,2666,126>",(eagerDeoptInCalled)); Inst94++; } } catch(e) {}
  eagerDeoptInCalled();
})(); // Lazy deopt from a callback that changes the input array. Deopt in a callback
// execution that returns true.


(() => {
  const a = [1, 2, 3, 4, 5];
try { if (Inst95 <= 1000 && typeof (a) != "undefined") {_RecordType("<2807,2808,132>",(a)); Inst95++; } } catch(e) {}

try { if (Inst96 <= 1000 && typeof (lazyChanger) != "undefined") {_RecordType("<2840,2851,134>",(lazyChanger)); Inst96++; } } catch(e) {}
  function lazyChanger(deopt) {
try { if (Inst97 <= 1000 && typeof (deopt) != "undefined") {_RecordType("<2852,2857,134>",(deopt)); Inst97++; } } catch(e) {}
try { if (Inst98 <= 1000 && typeof (a.every) != "undefined") {_RecordType("<2872,2879,135>",(a.every)); Inst98++; } } catch(e) {}try { if (Inst99 <= 1000 && typeof (a) != "undefined") {_RecordType("<2872,2873,135>",(a)); Inst99++; } } catch(e) {}try { if (Inst100 <= 1000 && typeof (v) != "undefined") {_RecordType("<2881,2882,135>",(v)); Inst100++; } } catch(e) {}try { if (Inst101 <= 1000 && typeof (i) != "undefined") {_RecordType("<2884,2885,135>",(i)); Inst101++; } } catch(e) {}
    return a.every((v, i) => {
try { if (Inst102 <= 1000 && typeof (i) != "undefined") {_RecordType("<2902,2903,136>",(i)); Inst102++; } } catch(e) {}try { if (Inst103 <= 1000 && typeof (deopt) != "undefined") {_RecordType("<2913,2918,136>",(deopt)); Inst103++; } } catch(e) {}
      if (i === 3 && deopt) {
        a[3] = 100;
try { if (Inst104 <= 1000 && typeof (a[3]) != "undefined") {_RecordType("<2930,2934,137>",(a[3])); Inst104++; } } catch(e) {}try { if (Inst105 <= 1000 && typeof (a) != "undefined") {_RecordType("<2930,2931,137>",(a)); Inst105++; } } catch(e) {}
      }

      return true;
    });
  }

try { if (Inst106 <= 1000 && typeof (lazyChanger) != "undefined") {_RecordType("<2985,2996,144>",(lazyChanger)); Inst106++; } } catch(e) {}
  lazyChanger();
try { if (Inst107 <= 1000 && typeof (lazyChanger) != "undefined") {_RecordType("<3002,3013,145>",(lazyChanger)); Inst107++; } } catch(e) {}
  lazyChanger();
try { if (Inst108 <= 1000 && typeof (lazyChanger) != "undefined") {_RecordType("<3019,3030,146>",(lazyChanger)); Inst108++; } } catch(e) {}
  lazyChanger(true);
try { if (Inst109 <= 1000 && typeof (lazyChanger) != "undefined") {_RecordType("<3040,3051,147>",(lazyChanger)); Inst109++; } } catch(e) {}
  lazyChanger();
})(); // Lazy deopt from a callback that will always return true and no element is
// found. Verifies the lazy-after-callback continuation builtin.


(() => {
  const a = [1, 2, 3, 4, 5];
try { if (Inst110 <= 1000 && typeof (a) != "undefined") {_RecordType("<3222,3223,153>",(a)); Inst110++; } } catch(e) {}

try { if (Inst111 <= 1000 && typeof (lazyChanger) != "undefined") {_RecordType("<3255,3266,155>",(lazyChanger)); Inst111++; } } catch(e) {}
  function lazyChanger(deopt) {
try { if (Inst112 <= 1000 && typeof (deopt) != "undefined") {_RecordType("<3267,3272,155>",(deopt)); Inst112++; } } catch(e) {}
try { if (Inst113 <= 1000 && typeof (a.every) != "undefined") {_RecordType("<3287,3294,156>",(a.every)); Inst113++; } } catch(e) {}try { if (Inst114 <= 1000 && typeof (a) != "undefined") {_RecordType("<3287,3288,156>",(a)); Inst114++; } } catch(e) {}try { if (Inst115 <= 1000 && typeof (v) != "undefined") {_RecordType("<3296,3297,156>",(v)); Inst115++; } } catch(e) {}try { if (Inst116 <= 1000 && typeof (i) != "undefined") {_RecordType("<3299,3300,156>",(i)); Inst116++; } } catch(e) {}
    return a.every((v, i) => {
try { if (Inst117 <= 1000 && typeof (i) != "undefined") {_RecordType("<3317,3318,157>",(i)); Inst117++; } } catch(e) {}try { if (Inst118 <= 1000 && typeof (deopt) != "undefined") {_RecordType("<3328,3333,157>",(deopt)); Inst118++; } } catch(e) {}
      if (i === 3 && deopt) {
        ;
      }

      return true;
    });
  }

try { if (Inst119 <= 1000 && typeof (lazyChanger) != "undefined") {_RecordType("<3390,3401,165>",(lazyChanger)); Inst119++; } } catch(e) {}
  lazyChanger();
try { if (Inst120 <= 1000 && typeof (lazyChanger) != "undefined") {_RecordType("<3407,3418,166>",(lazyChanger)); Inst120++; } } catch(e) {}
  lazyChanger();
try { if (Inst121 <= 1000 && typeof (lazyChanger) != "undefined") {_RecordType("<3424,3435,167>",(lazyChanger)); Inst121++; } } catch(e) {}
  lazyChanger(true);
try { if (Inst122 <= 1000 && typeof (lazyChanger) != "undefined") {_RecordType("<3445,3456,168>",(lazyChanger)); Inst122++; } } catch(e) {}
  lazyChanger();
})(); // Lazy deopt from a callback that changes the input array. Deopt in a callback
// execution that returns true.


(() => {
  const a = [1, 2, 3, 4, 5];
try { if (Inst123 <= 1000 && typeof (a) != "undefined") {_RecordType("<3597,3598,174>",(a)); Inst123++; } } catch(e) {}

try { if (Inst124 <= 1000 && typeof (lazyChanger) != "undefined") {_RecordType("<3630,3641,176>",(lazyChanger)); Inst124++; } } catch(e) {}
  function lazyChanger(deopt) {
try { if (Inst125 <= 1000 && typeof (deopt) != "undefined") {_RecordType("<3642,3647,176>",(deopt)); Inst125++; } } catch(e) {}
try { if (Inst126 <= 1000 && typeof (a.every) != "undefined") {_RecordType("<3662,3669,177>",(a.every)); Inst126++; } } catch(e) {}try { if (Inst127 <= 1000 && typeof (a) != "undefined") {_RecordType("<3662,3663,177>",(a)); Inst127++; } } catch(e) {}try { if (Inst128 <= 1000 && typeof (v) != "undefined") {_RecordType("<3671,3672,177>",(v)); Inst128++; } } catch(e) {}try { if (Inst129 <= 1000 && typeof (i) != "undefined") {_RecordType("<3674,3675,177>",(i)); Inst129++; } } catch(e) {}
    return a.every((v, i) => {
try { if (Inst130 <= 1000 && typeof (i) != "undefined") {_RecordType("<3692,3693,178>",(i)); Inst130++; } } catch(e) {}try { if (Inst131 <= 1000 && typeof (deopt) != "undefined") {_RecordType("<3703,3708,178>",(deopt)); Inst131++; } } catch(e) {}
      if (i === 2 && deopt) {
        a[3] = 100;
try { if (Inst132 <= 1000 && typeof (a[3]) != "undefined") {_RecordType("<3720,3724,179>",(a[3])); Inst132++; } } catch(e) {}try { if (Inst133 <= 1000 && typeof (a) != "undefined") {_RecordType("<3720,3721,179>",(a)); Inst133++; } } catch(e) {}
      }

      return true;
    });
  }

try { if (Inst134 <= 1000 && typeof (lazyChanger) != "undefined") {_RecordType("<3775,3786,186>",(lazyChanger)); Inst134++; } } catch(e) {}
  lazyChanger();
try { if (Inst135 <= 1000 && typeof (lazyChanger) != "undefined") {_RecordType("<3792,3803,187>",(lazyChanger)); Inst135++; } } catch(e) {}
  lazyChanger();
try { if (Inst136 <= 1000 && typeof (lazyChanger) != "undefined") {_RecordType("<3809,3820,188>",(lazyChanger)); Inst136++; } } catch(e) {}
  lazyChanger(true);
try { if (Inst137 <= 1000 && typeof (lazyChanger) != "undefined") {_RecordType("<3830,3841,189>",(lazyChanger)); Inst137++; } } catch(e) {}
  lazyChanger();
})(); // Escape analyzed array


(() => {
  let result = 0;
try { if (Inst138 <= 1000 && typeof (result) != "undefined") {_RecordType("<3893,3899,194>",(result)); Inst138++; } } catch(e) {}

try { if (Inst139 <= 1000 && typeof (eagerDeoptInCalled) != "undefined") {_RecordType("<3917,3935,196>",(eagerDeoptInCalled)); Inst139++; } } catch(e) {}
  function eagerDeoptInCalled(deopt) {
try { if (Inst140 <= 1000 && typeof (deopt) != "undefined") {_RecordType("<3936,3941,196>",(deopt)); Inst140++; } } catch(e) {}
    const a_noescape = [0, 1, 2, 3, 4, 5];
try { if (Inst141 <= 1000 && typeof (a_noescape) != "undefined") {_RecordType("<3955,3965,197>",(a_noescape)); Inst141++; } } catch(e) {}
try { if (Inst142 <= 1000 && typeof (a_noescape.every) != "undefined") {_RecordType("<3992,4008,198>",(a_noescape.every)); Inst142++; } } catch(e) {}try { if (Inst143 <= 1000 && typeof (a_noescape) != "undefined") {_RecordType("<3992,4002,198>",(a_noescape)); Inst143++; } } catch(e) {}try { if (Inst144 <= 1000 && typeof (v) != "undefined") {_RecordType("<4010,4011,198>",(v)); Inst144++; } } catch(e) {}try { if (Inst145 <= 1000 && typeof (i) != "undefined") {_RecordType("<4013,4014,198>",(i)); Inst145++; } } catch(e) {}
    a_noescape.every((v, i) => {
try { if (Inst147 <= 1000 && typeof (v) != "undefined") {_RecordType("<4037,4038,199>",(v)); Inst147++; } } catch(e) {}
      result += v | 0;
try { if (Inst146 <= 1000 && typeof (result) != "undefined") {_RecordType("<4027,4033,199>",(result)); Inst146++; } } catch(e) {}

try { if (Inst148 <= 1000 && typeof (i) != "undefined") {_RecordType("<4055,4056,201>",(i)); Inst148++; } } catch(e) {}try { if (Inst149 <= 1000 && typeof (deopt) != "undefined") {_RecordType("<4067,4072,201>",(deopt)); Inst149++; } } catch(e) {}
      if (i === 13 && deopt) {
        a_noescape.length = 25;
try { if (Inst150 <= 1000 && typeof (a_noescape.length) != "undefined") {_RecordType("<4084,4101,202>",(a_noescape.length)); Inst150++; } } catch(e) {}try { if (Inst151 <= 1000 && typeof (a_noescape) != "undefined") {_RecordType("<4084,4094,202>",(a_noescape)); Inst151++; } } catch(e) {}
      }

      return true;
    });
  }

try { if (Inst152 <= 1000 && typeof (eagerDeoptInCalled) != "undefined") {_RecordType("<4151,4169,209>",(eagerDeoptInCalled)); Inst152++; } } catch(e) {}
  eagerDeoptInCalled();
try { if (Inst153 <= 1000 && typeof (eagerDeoptInCalled) != "undefined") {_RecordType("<4175,4193,210>",(eagerDeoptInCalled)); Inst153++; } } catch(e) {}
  eagerDeoptInCalled();
try { if (Inst154 <= 1000 && typeof (eagerDeoptInCalled) != "undefined") {_RecordType("<4199,4217,211>",(eagerDeoptInCalled)); Inst154++; } } catch(e) {}
  eagerDeoptInCalled();
try { if (Inst155 <= 1000 && typeof (eagerDeoptInCalled) != "undefined") {_RecordType("<4223,4241,212>",(eagerDeoptInCalled)); Inst155++; } } catch(e) {}
  eagerDeoptInCalled(true);
try { if (Inst156 <= 1000 && typeof (eagerDeoptInCalled) != "undefined") {_RecordType("<4251,4269,213>",(eagerDeoptInCalled)); Inst156++; } } catch(e) {}
  eagerDeoptInCalled();
  75;
try { if (Inst157 <= 1000 && typeof (result) != "undefined") {_RecordType("<4281,4287,215>",(result)); Inst157++; } } catch(e) {}
  result;
})(); // Lazy deopt from runtime call from inlined callback function.


(() => {
  const a = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25];
try { if (Inst158 <= 1000 && typeof (a) != "undefined") {_RecordType("<4378,4379,220>",(a)); Inst158++; } } catch(e) {}
  let result = 0;
try { if (Inst159 <= 1000 && typeof (result) != "undefined") {_RecordType("<4481,4487,221>",(result)); Inst159++; } } catch(e) {}

try { if (Inst160 <= 1000 && typeof (lazyDeopt) != "undefined") {_RecordType("<4505,4514,223>",(lazyDeopt)); Inst160++; } } catch(e) {}
  function lazyDeopt(deopt) {
try { if (Inst161 <= 1000 && typeof (deopt) != "undefined") {_RecordType("<4515,4520,223>",(deopt)); Inst161++; } } catch(e) {}
try { if (Inst162 <= 1000 && typeof (a.every) != "undefined") {_RecordType("<4528,4535,224>",(a.every)); Inst162++; } } catch(e) {}try { if (Inst163 <= 1000 && typeof (a) != "undefined") {_RecordType("<4528,4529,224>",(a)); Inst163++; } } catch(e) {}try { if (Inst164 <= 1000 && typeof (v) != "undefined") {_RecordType("<4537,4538,224>",(v)); Inst164++; } } catch(e) {}try { if (Inst165 <= 1000 && typeof (i) != "undefined") {_RecordType("<4540,4541,224>",(i)); Inst165++; } } catch(e) {}
    a.every((v, i) => {
try { if (Inst167 <= 1000 && typeof (i) != "undefined") {_RecordType("<4564,4565,225>",(i)); Inst167++; } } catch(e) {}
      result += i;
try { if (Inst166 <= 1000 && typeof (result) != "undefined") {_RecordType("<4554,4560,225>",(result)); Inst166++; } } catch(e) {}

try { if (Inst168 <= 1000 && typeof (i) != "undefined") {_RecordType("<4578,4579,227>",(i)); Inst168++; } } catch(e) {}try { if (Inst169 <= 1000 && typeof (deopt) != "undefined") {_RecordType("<4590,4595,227>",(deopt)); Inst169++; } } catch(e) {}
      if (i === 13 && deopt) {
        ;
      }

      return true;
    });
  }

try { if (Inst170 <= 1000 && typeof (lazyDeopt) != "undefined") {_RecordType("<4652,4661,235>",(lazyDeopt)); Inst170++; } } catch(e) {}
  lazyDeopt();
try { if (Inst171 <= 1000 && typeof (lazyDeopt) != "undefined") {_RecordType("<4667,4676,236>",(lazyDeopt)); Inst171++; } } catch(e) {}
  lazyDeopt();
try { if (Inst172 <= 1000 && typeof (lazyDeopt) != "undefined") {_RecordType("<4682,4691,237>",(lazyDeopt)); Inst172++; } } catch(e) {}
  lazyDeopt();
try { if (Inst173 <= 1000 && typeof (lazyDeopt) != "undefined") {_RecordType("<4697,4706,238>",(lazyDeopt)); Inst173++; } } catch(e) {}
  lazyDeopt(true);
try { if (Inst174 <= 1000 && typeof (lazyDeopt) != "undefined") {_RecordType("<4716,4725,239>",(lazyDeopt)); Inst174++; } } catch(e) {}
  lazyDeopt();
  1500;
try { if (Inst175 <= 1000 && typeof (result) != "undefined") {_RecordType("<4739,4745,241>",(result)); Inst175++; } } catch(e) {}
  result;
})(); // Lazy deopt from runtime call from non-inline callback function.


(() => {
  const a = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25];
try { if (Inst176 <= 1000 && typeof (a) != "undefined") {_RecordType("<4839,4840,246>",(a)); Inst176++; } } catch(e) {}
  let result = 0;
try { if (Inst177 <= 1000 && typeof (result) != "undefined") {_RecordType("<4942,4948,247>",(result)); Inst177++; } } catch(e) {}

try { if (Inst178 <= 1000 && typeof (lazyDeopt) != "undefined") {_RecordType("<4966,4975,249>",(lazyDeopt)); Inst178++; } } catch(e) {}
  function lazyDeopt(deopt) {
try { if (Inst179 <= 1000 && typeof (deopt) != "undefined") {_RecordType("<4976,4981,249>",(deopt)); Inst179++; } } catch(e) {}
try { if (Inst180 <= 1000 && typeof (callback) != "undefined") {_RecordType("<4998,5006,250>",(callback)); Inst180++; } } catch(e) {}
    function callback(v, i) {
try { if (Inst181 <= 1000 && typeof (v) != "undefined") {_RecordType("<5007,5008,250>",(v)); Inst181++; } } catch(e) {}try { if (Inst182 <= 1000 && typeof (i) != "undefined") {_RecordType("<5010,5011,250>",(i)); Inst182++; } } catch(e) {}
try { if (Inst184 <= 1000 && typeof (i) != "undefined") {_RecordType("<5031,5032,251>",(i)); Inst184++; } } catch(e) {}
      result += i;
try { if (Inst183 <= 1000 && typeof (result) != "undefined") {_RecordType("<5021,5027,251>",(result)); Inst183++; } } catch(e) {}

try { if (Inst185 <= 1000 && typeof (i) != "undefined") {_RecordType("<5045,5046,253>",(i)); Inst185++; } } catch(e) {}try { if (Inst186 <= 1000 && typeof (deopt) != "undefined") {_RecordType("<5057,5062,253>",(deopt)); Inst186++; } } catch(e) {}
      if (i === 13 && deopt) {
        ;
      }

      return true;
    }

try { if (Inst187 <= 1000 && typeof (a.every) != "undefined") {_RecordType("<5115,5122,260>",(a.every)); Inst187++; } } catch(e) {}try { if (Inst188 <= 1000 && typeof (a) != "undefined") {_RecordType("<5115,5116,260>",(a)); Inst188++; } } catch(e) {}try { if (Inst189 <= 1000 && typeof (callback) != "undefined") {_RecordType("<5123,5131,260>",(callback)); Inst189++; } } catch(e) {}
    a.every(callback);
  }

try { if (Inst190 <= 1000 && typeof (lazyDeopt) != "undefined") {_RecordType("<5141,5150,263>",(lazyDeopt)); Inst190++; } } catch(e) {}
  lazyDeopt();
try { if (Inst191 <= 1000 && typeof (lazyDeopt) != "undefined") {_RecordType("<5156,5165,264>",(lazyDeopt)); Inst191++; } } catch(e) {}
  lazyDeopt();
try { if (Inst192 <= 1000 && typeof (lazyDeopt) != "undefined") {_RecordType("<5171,5180,265>",(lazyDeopt)); Inst192++; } } catch(e) {}
  lazyDeopt();
try { if (Inst193 <= 1000 && typeof (lazyDeopt) != "undefined") {_RecordType("<5186,5195,266>",(lazyDeopt)); Inst193++; } } catch(e) {}
  lazyDeopt(true);
try { if (Inst194 <= 1000 && typeof (lazyDeopt) != "undefined") {_RecordType("<5205,5214,267>",(lazyDeopt)); Inst194++; } } catch(e) {}
  lazyDeopt();
  1500;
try { if (Inst195 <= 1000 && typeof (result) != "undefined") {_RecordType("<5228,5234,269>",(result)); Inst195++; } } catch(e) {}
  result;
})(); // Call to a.every is done inside a try-catch block and the callback function
// being called actually throws.


(() => {
  const a = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25];
try { if (Inst196 <= 1000 && typeof (a) != "undefined") {_RecordType("<5372,5373,275>",(a)); Inst196++; } } catch(e) {}
  let caught = false;
try { if (Inst197 <= 1000 && typeof (caught) != "undefined") {_RecordType("<5475,5481,276>",(caught)); Inst197++; } } catch(e) {}

try { if (Inst198 <= 1000 && typeof (lazyDeopt) != "undefined") {_RecordType("<5503,5512,278>",(lazyDeopt)); Inst198++; } } catch(e) {}
  function lazyDeopt(deopt) {
try { if (Inst199 <= 1000 && typeof (deopt) != "undefined") {_RecordType("<5513,5518,278>",(deopt)); Inst199++; } } catch(e) {}
try { if (Inst206 <= 1000 && typeof (e) != "undefined") {_RecordType("<5666,5667,287>",(e)); Inst206++; } } catch(e) {}
    try {
try { if (Inst200 <= 1000 && typeof (a.every) != "undefined") {_RecordType("<5538,5545,280>",(a.every)); Inst200++; } } catch(e) {}try { if (Inst201 <= 1000 && typeof (a) != "undefined") {_RecordType("<5538,5539,280>",(a)); Inst201++; } } catch(e) {}try { if (Inst202 <= 1000 && typeof (v) != "undefined") {_RecordType("<5547,5548,280>",(v)); Inst202++; } } catch(e) {}try { if (Inst203 <= 1000 && typeof (i) != "undefined") {_RecordType("<5550,5551,280>",(i)); Inst203++; } } catch(e) {}
      a.every((v, i) => {
try { if (Inst204 <= 1000 && typeof (i) != "undefined") {_RecordType("<5570,5571,281>",(i)); Inst204++; } } catch(e) {}try { if (Inst205 <= 1000 && typeof (deopt) != "undefined") {_RecordType("<5581,5586,281>",(deopt)); Inst205++; } } catch(e) {}
        if (i === 1 && deopt) {
          throw "a";
        }

        return true;
      });
    } catch (e) {
      caught = true;
try { if (Inst207 <= 1000 && typeof (caught) != "undefined") {_RecordType("<5677,5683,288>",(caught)); Inst207++; } } catch(e) {}
    }
  }

try { if (Inst208 <= 1000 && typeof (lazyDeopt) != "undefined") {_RecordType("<5705,5714,292>",(lazyDeopt)); Inst208++; } } catch(e) {}
  lazyDeopt();
try { if (Inst209 <= 1000 && typeof (lazyDeopt) != "undefined") {_RecordType("<5720,5729,293>",(lazyDeopt)); Inst209++; } } catch(e) {}
  lazyDeopt();
try { if (Inst210 <= 1000 && typeof (lazyDeopt) != "undefined") {_RecordType("<5735,5744,294>",(lazyDeopt)); Inst210++; } } catch(e) {}
  lazyDeopt();

try { if (Inst211 <= 1000 && typeof (lazyDeopt) != "undefined") {_RecordType("<5758,5767,296>",(lazyDeopt)); Inst211++; } } catch(e) {}
  (() => lazyDeopt(true))();

try { if (Inst212 <= 1000 && typeof (caught) != "undefined") {_RecordType("<5781,5787,298>",(caught)); Inst212++; } } catch(e) {}
  caught;
try { if (Inst213 <= 1000 && typeof (lazyDeopt) != "undefined") {_RecordType("<5791,5800,299>",(lazyDeopt)); Inst213++; } } catch(e) {}
  lazyDeopt();
})(); // Call to a.every is done inside a try-catch block and the callback function
// being called actually throws, but the callback is not inlined.


(() => {
  let a = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
try { if (Inst214 <= 1000 && typeof (a) != "undefined") {_RecordType("<5971,5972,305>",(a)); Inst214++; } } catch(e) {}
  let caught = false;
try { if (Inst215 <= 1000 && typeof (caught) != "undefined") {_RecordType("<6014,6020,306>",(caught)); Inst215++; } } catch(e) {}

try { if (Inst216 <= 1000 && typeof (lazyDeopt) != "undefined") {_RecordType("<6042,6051,308>",(lazyDeopt)); Inst216++; } } catch(e) {}
  function lazyDeopt(deopt) {
try { if (Inst217 <= 1000 && typeof (deopt) != "undefined") {_RecordType("<6052,6057,308>",(deopt)); Inst217++; } } catch(e) {}
try { if (Inst218 <= 1000 && typeof (callback) != "undefined") {_RecordType("<6074,6082,309>",(callback)); Inst218++; } } catch(e) {}
    function callback(v, i) {
try { if (Inst219 <= 1000 && typeof (v) != "undefined") {_RecordType("<6083,6084,309>",(v)); Inst219++; } } catch(e) {}try { if (Inst220 <= 1000 && typeof (i) != "undefined") {_RecordType("<6086,6087,309>",(i)); Inst220++; } } catch(e) {}
try { if (Inst221 <= 1000 && typeof (i) != "undefined") {_RecordType("<6101,6102,310>",(i)); Inst221++; } } catch(e) {}try { if (Inst222 <= 1000 && typeof (deopt) != "undefined") {_RecordType("<6112,6117,310>",(deopt)); Inst222++; } } catch(e) {}
      if (i === 1 && deopt) {
        throw "a";
      }

      return true;
    }

try { if (Inst226 <= 1000 && typeof (e) != "undefined") {_RecordType("<6223,6224,319>",(e)); Inst226++; } } catch(e) {}
    try {
try { if (Inst223 <= 1000 && typeof (a.every) != "undefined") {_RecordType("<6191,6198,318>",(a.every)); Inst223++; } } catch(e) {}try { if (Inst224 <= 1000 && typeof (a) != "undefined") {_RecordType("<6191,6192,318>",(a)); Inst224++; } } catch(e) {}try { if (Inst225 <= 1000 && typeof (callback) != "undefined") {_RecordType("<6199,6207,318>",(callback)); Inst225++; } } catch(e) {}
      a.every(callback);
    } catch (e) {
      caught = true;
try { if (Inst227 <= 1000 && typeof (caught) != "undefined") {_RecordType("<6234,6240,320>",(caught)); Inst227++; } } catch(e) {}
    }
  }

try { if (Inst228 <= 1000 && typeof (lazyDeopt) != "undefined") {_RecordType("<6262,6271,324>",(lazyDeopt)); Inst228++; } } catch(e) {}
  lazyDeopt();
try { if (Inst229 <= 1000 && typeof (lazyDeopt) != "undefined") {_RecordType("<6277,6286,325>",(lazyDeopt)); Inst229++; } } catch(e) {}
  lazyDeopt();
try { if (Inst230 <= 1000 && typeof (lazyDeopt) != "undefined") {_RecordType("<6292,6301,326>",(lazyDeopt)); Inst230++; } } catch(e) {}
  lazyDeopt();

try { if (Inst231 <= 1000 && typeof (lazyDeopt) != "undefined") {_RecordType("<6315,6324,328>",(lazyDeopt)); Inst231++; } } catch(e) {}
  (() => lazyDeopt(true))();

try { if (Inst232 <= 1000 && typeof (caught) != "undefined") {_RecordType("<6338,6344,330>",(caught)); Inst232++; } } catch(e) {}
  caught;
try { if (Inst233 <= 1000 && typeof (lazyDeopt) != "undefined") {_RecordType("<6348,6357,331>",(lazyDeopt)); Inst233++; } } catch(e) {}
  lazyDeopt();
})(); // Call to a.every is done inside a try-catch block and the callback function
// being called throws into a deoptimized caller function.


try { if (Inst234 <= 1000 && typeof (TestThrowIntoDeoptimizedOuter) != "undefined") {_RecordType("<6516,6545,336>",(TestThrowIntoDeoptimizedOuter)); Inst234++; } } catch(e) {}
(function TestThrowIntoDeoptimizedOuter() {
  const a = [1, 2, 3, 4];
try { if (Inst235 <= 1000 && typeof (a) != "undefined") {_RecordType("<6558,6559,337>",(a)); Inst235++; } } catch(e) {}

try { if (Inst236 <= 1000 && typeof (lazyDeopt) != "undefined") {_RecordType("<6588,6597,339>",(lazyDeopt)); Inst236++; } } catch(e) {}
  function lazyDeopt(deopt) {
try { if (Inst237 <= 1000 && typeof (deopt) != "undefined") {_RecordType("<6598,6603,339>",(deopt)); Inst237++; } } catch(e) {}
try { if (Inst238 <= 1000 && typeof (callback) != "undefined") {_RecordType("<6620,6628,340>",(callback)); Inst238++; } } catch(e) {}
    function callback(v, i) {
try { if (Inst239 <= 1000 && typeof (v) != "undefined") {_RecordType("<6629,6630,340>",(v)); Inst239++; } } catch(e) {}try { if (Inst240 <= 1000 && typeof (i) != "undefined") {_RecordType("<6632,6633,340>",(i)); Inst240++; } } catch(e) {}
try { if (Inst241 <= 1000 && typeof (i) != "undefined") {_RecordType("<6647,6648,341>",(i)); Inst241++; } } catch(e) {}try { if (Inst242 <= 1000 && typeof (deopt) != "undefined") {_RecordType("<6658,6663,341>",(deopt)); Inst242++; } } catch(e) {}
      if (i === 1 && deopt) {
        throw "some exception";
      }

      return true;
    }

    let result = 0;
try { if (Inst243 <= 1000 && typeof (result) != "undefined") {_RecordType("<6742,6748,348>",(result)); Inst243++; } } catch(e) {}

try { if (Inst248 <= 1000 && typeof (e) != "undefined") {_RecordType("<6812,6813,352>",(e)); Inst248++; } } catch(e) {}
    try {
try { if (Inst245 <= 1000 && typeof (a.every) != "undefined") {_RecordType("<6780,6787,351>",(a.every)); Inst245++; } } catch(e) {}try { if (Inst246 <= 1000 && typeof (a) != "undefined") {_RecordType("<6780,6781,351>",(a)); Inst246++; } } catch(e) {}try { if (Inst247 <= 1000 && typeof (callback) != "undefined") {_RecordType("<6788,6796,351>",(callback)); Inst247++; } } catch(e) {}
      result = a.every(callback);
try { if (Inst244 <= 1000 && typeof (result) != "undefined") {_RecordType("<6771,6777,351>",(result)); Inst244++; } } catch(e) {}
    } catch (e) {
      "some exception";
try { if (Inst249 <= 1000 && typeof (e) != "undefined") {_RecordType("<6847,6848,354>",(e)); Inst249++; } } catch(e) {}
      e;
      result = "nope";
try { if (Inst250 <= 1000 && typeof (result) != "undefined") {_RecordType("<6856,6862,355>",(result)); Inst250++; } } catch(e) {}
    }

try { if (Inst251 <= 1000 && typeof (result) != "undefined") {_RecordType("<6891,6897,358>",(result)); Inst251++; } } catch(e) {}
    return result;
  }

  true;
try { if (Inst252 <= 1000 && typeof (lazyDeopt) != "undefined") {_RecordType("<6914,6923,362>",(lazyDeopt)); Inst252++; } } catch(e) {}
  lazyDeopt(false);
  true;
try { if (Inst253 <= 1000 && typeof (lazyDeopt) != "undefined") {_RecordType("<6942,6951,364>",(lazyDeopt)); Inst253++; } } catch(e) {}
  lazyDeopt(false);
  "nope";
try { if (Inst254 <= 1000 && typeof (lazyDeopt) != "undefined") {_RecordType("<6972,6981,366>",(lazyDeopt)); Inst254++; } } catch(e) {}
  lazyDeopt(true);
  "nope";
try { if (Inst255 <= 1000 && typeof (lazyDeopt) != "undefined") {_RecordType("<7001,7010,368>",(lazyDeopt)); Inst255++; } } catch(e) {}
  lazyDeopt(true);
  true;
try { if (Inst256 <= 1000 && typeof (lazyDeopt) != "undefined") {_RecordType("<7028,7037,370>",(lazyDeopt)); Inst256++; } } catch(e) {}
  lazyDeopt(false);
  "nope";
try { if (Inst257 <= 1000 && typeof (lazyDeopt) != "undefined") {_RecordType("<7058,7067,372>",(lazyDeopt)); Inst257++; } } catch(e) {}
  lazyDeopt(true);
})(); // An error generated inside the callback includes every in it's
// stack trace.


(() => {
  const re = /Array\.every/;
try { if (Inst258 <= 1000 && typeof (re) != "undefined") {_RecordType("<7181,7183,378>",(re)); Inst258++; } } catch(e) {}

try { if (Inst259 <= 1000 && typeof (lazyDeopt) != "undefined") {_RecordType("<7214,7223,380>",(lazyDeopt)); Inst259++; } } catch(e) {}
  function lazyDeopt(deopt) {
try { if (Inst260 <= 1000 && typeof (deopt) != "undefined") {_RecordType("<7224,7229,380>",(deopt)); Inst260++; } } catch(e) {}
    const b = [1, 2, 3];
try { if (Inst261 <= 1000 && typeof (b) != "undefined") {_RecordType("<7243,7244,381>",(b)); Inst261++; } } catch(e) {}
    let result = 0;
try { if (Inst262 <= 1000 && typeof (result) != "undefined") {_RecordType("<7266,7272,382>",(result)); Inst262++; } } catch(e) {}
try { if (Inst263 <= 1000 && typeof (b.every) != "undefined") {_RecordType("<7282,7289,383>",(b.every)); Inst263++; } } catch(e) {}try { if (Inst264 <= 1000 && typeof (b) != "undefined") {_RecordType("<7282,7283,383>",(b)); Inst264++; } } catch(e) {}try { if (Inst265 <= 1000 && typeof (v) != "undefined") {_RecordType("<7291,7292,383>",(v)); Inst265++; } } catch(e) {}try { if (Inst266 <= 1000 && typeof (i) != "undefined") {_RecordType("<7294,7295,383>",(i)); Inst266++; } } catch(e) {}
    b.every((v, i) => {
try { if (Inst268 <= 1000 && typeof (v) != "undefined") {_RecordType("<7318,7319,384>",(v)); Inst268++; } } catch(e) {}
      result += v;
try { if (Inst267 <= 1000 && typeof (result) != "undefined") {_RecordType("<7308,7314,384>",(result)); Inst267++; } } catch(e) {}

try { if (Inst269 <= 1000 && typeof (i) != "undefined") {_RecordType("<7332,7333,386>",(i)); Inst269++; } } catch(e) {}
      if (i === 1) {
try { if (Inst271 <= 1000 && typeof (Error) != "undefined") {_RecordType("<7365,7370,387>",(Error)); Inst271++; } } catch(e) {}
        const e = new Error();
try { if (Inst270 <= 1000 && typeof (e) != "undefined") {_RecordType("<7357,7358,387>",(e)); Inst270++; } } catch(e) {}
try { if (Inst272 <= 1000 && typeof (re.exec) != "undefined") {_RecordType("<7382,7389,388>",(re.exec)); Inst272++; } } catch(e) {}try { if (Inst273 <= 1000 && typeof (re) != "undefined") {_RecordType("<7382,7384,388>",(re)); Inst273++; } } catch(e) {}try { if (Inst274 <= 1000 && typeof (e.stack) != "undefined") {_RecordType("<7390,7397,388>",(e.stack)); Inst274++; } } catch(e) {}try { if (Inst275 <= 1000 && typeof (e) != "undefined") {_RecordType("<7390,7391,388>",(e)); Inst275++; } } catch(e) {}
        re.exec(e.stack) !== null;
      }

      return true;
    });
  }

try { if (Inst276 <= 1000 && typeof (lazyDeopt) != "undefined") {_RecordType("<7452,7461,395>",(lazyDeopt)); Inst276++; } } catch(e) {}
  lazyDeopt();
try { if (Inst277 <= 1000 && typeof (lazyDeopt) != "undefined") {_RecordType("<7467,7476,396>",(lazyDeopt)); Inst277++; } } catch(e) {}
  lazyDeopt();
try { if (Inst278 <= 1000 && typeof (lazyDeopt) != "undefined") {_RecordType("<7482,7491,397>",(lazyDeopt)); Inst278++; } } catch(e) {}
  lazyDeopt();
})(); // An error generated inside a non-inlined callback function also
// includes every in it's stack trace.


(() => {
  const re = /Array\.every/;
try { if (Inst279 <= 1000 && typeof (re) != "undefined") {_RecordType("<7625,7627,403>",(re)); Inst279++; } } catch(e) {}

try { if (Inst280 <= 1000 && typeof (lazyDeopt) != "undefined") {_RecordType("<7658,7667,405>",(lazyDeopt)); Inst280++; } } catch(e) {}
  function lazyDeopt(deopt) {
try { if (Inst281 <= 1000 && typeof (deopt) != "undefined") {_RecordType("<7668,7673,405>",(deopt)); Inst281++; } } catch(e) {}
    const b = [1, 2, 3];
try { if (Inst282 <= 1000 && typeof (b) != "undefined") {_RecordType("<7687,7688,406>",(b)); Inst282++; } } catch(e) {}
    let did_assert_error = false;
try { if (Inst283 <= 1000 && typeof (did_assert_error) != "undefined") {_RecordType("<7710,7726,407>",(did_assert_error)); Inst283++; } } catch(e) {}
    let result = 0;
try { if (Inst284 <= 1000 && typeof (result) != "undefined") {_RecordType("<7744,7750,408>",(result)); Inst284++; } } catch(e) {}

try { if (Inst285 <= 1000 && typeof (callback) != "undefined") {_RecordType("<7770,7778,410>",(callback)); Inst285++; } } catch(e) {}
    function callback(v, i) {
try { if (Inst286 <= 1000 && typeof (v) != "undefined") {_RecordType("<7779,7780,410>",(v)); Inst286++; } } catch(e) {}try { if (Inst287 <= 1000 && typeof (i) != "undefined") {_RecordType("<7782,7783,410>",(i)); Inst287++; } } catch(e) {}
try { if (Inst289 <= 1000 && typeof (v) != "undefined") {_RecordType("<7803,7804,411>",(v)); Inst289++; } } catch(e) {}
      result += v;
try { if (Inst288 <= 1000 && typeof (result) != "undefined") {_RecordType("<7793,7799,411>",(result)); Inst288++; } } catch(e) {}

try { if (Inst290 <= 1000 && typeof (i) != "undefined") {_RecordType("<7817,7818,413>",(i)); Inst290++; } } catch(e) {}
      if (i === 1) {
try { if (Inst292 <= 1000 && typeof (Error) != "undefined") {_RecordType("<7850,7855,414>",(Error)); Inst292++; } } catch(e) {}
        const e = new Error();
try { if (Inst291 <= 1000 && typeof (e) != "undefined") {_RecordType("<7842,7843,414>",(e)); Inst291++; } } catch(e) {}
try { if (Inst293 <= 1000 && typeof (re.exec) != "undefined") {_RecordType("<7867,7874,415>",(re.exec)); Inst293++; } } catch(e) {}try { if (Inst294 <= 1000 && typeof (re) != "undefined") {_RecordType("<7867,7869,415>",(re)); Inst294++; } } catch(e) {}try { if (Inst295 <= 1000 && typeof (e.stack) != "undefined") {_RecordType("<7875,7882,415>",(e.stack)); Inst295++; } } catch(e) {}try { if (Inst296 <= 1000 && typeof (e) != "undefined") {_RecordType("<7875,7876,415>",(e)); Inst296++; } } catch(e) {}
        re.exec(e.stack) !== null;
        did_assert_error = true;
try { if (Inst297 <= 1000 && typeof (did_assert_error) != "undefined") {_RecordType("<7902,7918,416>",(did_assert_error)); Inst297++; } } catch(e) {}
      }

      return true;
    }

try { if (Inst298 <= 1000 && typeof (b.every) != "undefined") {_RecordType("<7966,7973,422>",(b.every)); Inst298++; } } catch(e) {}try { if (Inst299 <= 1000 && typeof (b) != "undefined") {_RecordType("<7966,7967,422>",(b)); Inst299++; } } catch(e) {}try { if (Inst300 <= 1000 && typeof (callback) != "undefined") {_RecordType("<7974,7982,422>",(callback)); Inst300++; } } catch(e) {}
    b.every(callback);
try { if (Inst301 <= 1000 && typeof (did_assert_error) != "undefined") {_RecordType("<7996,8012,423>",(did_assert_error)); Inst301++; } } catch(e) {}
    return did_assert_error;
  }

try { if (Inst302 <= 1000 && typeof (lazyDeopt) != "undefined") {_RecordType("<8021,8030,426>",(lazyDeopt)); Inst302++; } } catch(e) {}
  lazyDeopt();
try { if (Inst303 <= 1000 && typeof (lazyDeopt) != "undefined") {_RecordType("<8036,8045,427>",(lazyDeopt)); Inst303++; } } catch(e) {}
  lazyDeopt();
try { if (Inst304 <= 1000 && typeof (lazyDeopt) != "undefined") {_RecordType("<8051,8060,428>",(lazyDeopt)); Inst304++; } } catch(e) {}
  lazyDeopt();
})(); // An error generated inside a recently deoptimized callback function
// includes every in it's stack trace.


(() => {
  const re = /Array\.every/;
try { if (Inst305 <= 1000 && typeof (re) != "undefined") {_RecordType("<8198,8200,434>",(re)); Inst305++; } } catch(e) {}

try { if (Inst306 <= 1000 && typeof (lazyDeopt) != "undefined") {_RecordType("<8231,8240,436>",(lazyDeopt)); Inst306++; } } catch(e) {}
  function lazyDeopt(deopt) {
try { if (Inst307 <= 1000 && typeof (deopt) != "undefined") {_RecordType("<8241,8246,436>",(deopt)); Inst307++; } } catch(e) {}
    const b = [1, 2, 3];
try { if (Inst308 <= 1000 && typeof (b) != "undefined") {_RecordType("<8260,8261,437>",(b)); Inst308++; } } catch(e) {}
    let did_assert_error = false;
try { if (Inst309 <= 1000 && typeof (did_assert_error) != "undefined") {_RecordType("<8283,8299,438>",(did_assert_error)); Inst309++; } } catch(e) {}
    let result = 0;
try { if (Inst310 <= 1000 && typeof (result) != "undefined") {_RecordType("<8317,8323,439>",(result)); Inst310++; } } catch(e) {}
try { if (Inst311 <= 1000 && typeof (b.every) != "undefined") {_RecordType("<8333,8340,440>",(b.every)); Inst311++; } } catch(e) {}try { if (Inst312 <= 1000 && typeof (b) != "undefined") {_RecordType("<8333,8334,440>",(b)); Inst312++; } } catch(e) {}try { if (Inst313 <= 1000 && typeof (v) != "undefined") {_RecordType("<8342,8343,440>",(v)); Inst313++; } } catch(e) {}try { if (Inst314 <= 1000 && typeof (i) != "undefined") {_RecordType("<8345,8346,440>",(i)); Inst314++; } } catch(e) {}
    b.every((v, i) => {
try { if (Inst316 <= 1000 && typeof (v) != "undefined") {_RecordType("<8369,8370,441>",(v)); Inst316++; } } catch(e) {}
      result += v;
try { if (Inst315 <= 1000 && typeof (result) != "undefined") {_RecordType("<8359,8365,441>",(result)); Inst315++; } } catch(e) {}

try { if (Inst317 <= 1000 && typeof (i) != "undefined") {_RecordType("<8383,8384,443>",(i)); Inst317++; } } catch(e) {}
      if (i === 1) {
        ;
      } else {
try { if (Inst318 <= 1000 && typeof (i) != "undefined") {_RecordType("<8431,8432,446>",(i)); Inst318++; } } catch(e) {}
        if (i === 2) {
try { if (Inst320 <= 1000 && typeof (Error) != "undefined") {_RecordType("<8466,8471,447>",(Error)); Inst320++; } } catch(e) {}
          const e = new Error();
try { if (Inst319 <= 1000 && typeof (e) != "undefined") {_RecordType("<8458,8459,447>",(e)); Inst319++; } } catch(e) {}
try { if (Inst321 <= 1000 && typeof (re.exec) != "undefined") {_RecordType("<8485,8492,448>",(re.exec)); Inst321++; } } catch(e) {}try { if (Inst322 <= 1000 && typeof (re) != "undefined") {_RecordType("<8485,8487,448>",(re)); Inst322++; } } catch(e) {}try { if (Inst323 <= 1000 && typeof (e.stack) != "undefined") {_RecordType("<8493,8500,448>",(e.stack)); Inst323++; } } catch(e) {}try { if (Inst324 <= 1000 && typeof (e) != "undefined") {_RecordType("<8493,8494,448>",(e)); Inst324++; } } catch(e) {}
          re.exec(e.stack) !== null;
          did_assert_error = true;
try { if (Inst325 <= 1000 && typeof (did_assert_error) != "undefined") {_RecordType("<8522,8538,449>",(did_assert_error)); Inst325++; } } catch(e) {}
        }
      }

      return true;
    });
try { if (Inst326 <= 1000 && typeof (did_assert_error) != "undefined") {_RecordType("<8604,8620,455>",(did_assert_error)); Inst326++; } } catch(e) {}
    return did_assert_error;
  }

try { if (Inst327 <= 1000 && typeof (lazyDeopt) != "undefined") {_RecordType("<8629,8638,458>",(lazyDeopt)); Inst327++; } } catch(e) {}
  lazyDeopt();
try { if (Inst328 <= 1000 && typeof (lazyDeopt) != "undefined") {_RecordType("<8644,8653,459>",(lazyDeopt)); Inst328++; } } catch(e) {}
  lazyDeopt();
try { if (Inst329 <= 1000 && typeof (lazyDeopt) != "undefined") {_RecordType("<8659,8668,460>",(lazyDeopt)); Inst329++; } } catch(e) {}
  lazyDeopt();
})(); // Verify that various exception edges are handled appropriately.
// The thrown Error object should always indicate it was created from
// an every call stack.


(() => {
  const re = /Array\.every/;
try { if (Inst330 <= 1000 && typeof (re) != "undefined") {_RecordType("<8857,8859,467>",(re)); Inst330++; } } catch(e) {}
  const a = [1, 2, 3];
try { if (Inst331 <= 1000 && typeof (a) != "undefined") {_RecordType("<8886,8887,468>",(a)); Inst331++; } } catch(e) {}
  let result = 0;
try { if (Inst332 <= 1000 && typeof (result) != "undefined") {_RecordType("<8907,8913,469>",(result)); Inst332++; } } catch(e) {}

try { if (Inst333 <= 1000 && typeof (lazyDeopt) != "undefined") {_RecordType("<8931,8940,471>",(lazyDeopt)); Inst333++; } } catch(e) {}
  function lazyDeopt() {
try { if (Inst334 <= 1000 && typeof (a.every) != "undefined") {_RecordType("<8949,8956,472>",(a.every)); Inst334++; } } catch(e) {}try { if (Inst335 <= 1000 && typeof (a) != "undefined") {_RecordType("<8949,8950,472>",(a)); Inst335++; } } catch(e) {}try { if (Inst336 <= 1000 && typeof (v) != "undefined") {_RecordType("<8958,8959,472>",(v)); Inst336++; } } catch(e) {}try { if (Inst337 <= 1000 && typeof (i) != "undefined") {_RecordType("<8961,8962,472>",(i)); Inst337++; } } catch(e) {}
    a.every((v, i) => {
try { if (Inst339 <= 1000 && typeof (i) != "undefined") {_RecordType("<8985,8986,473>",(i)); Inst339++; } } catch(e) {}
      result += i;
try { if (Inst338 <= 1000 && typeof (result) != "undefined") {_RecordType("<8975,8981,473>",(result)); Inst338++; } } catch(e) {}

try { if (Inst340 <= 1000 && typeof (i) != "undefined") {_RecordType("<8999,9000,475>",(i)); Inst340++; } } catch(e) {}
      if (i === 1) {
try { if (Inst341 <= 1000 && typeof (Error) != "undefined") {_RecordType("<9028,9033,476>",(Error)); Inst341++; } } catch(e) {}
        throw new Error();
      }

      return true;
    });
  }

try { if (Inst342 <= 1000 && typeof (lazyDeopt) != "undefined") {_RecordType("<9087,9096,483>",(lazyDeopt)); Inst342++; } } catch(e) {}
  (() => lazyDeopt())();

try { if (Inst343 <= 1000 && typeof (lazyDeopt) != "undefined") {_RecordType("<9113,9122,485>",(lazyDeopt)); Inst343++; } } catch(e) {}
  (() => lazyDeopt())();

try { if (Inst345 <= 1000 && typeof (e) != "undefined") {_RecordType("<9166,9167,489>",(e)); Inst345++; } } catch(e) {}
  try {
try { if (Inst344 <= 1000 && typeof (lazyDeopt) != "undefined") {_RecordType("<9142,9151,488>",(lazyDeopt)); Inst344++; } } catch(e) {}
    lazyDeopt();
  } catch (e) {
try { if (Inst346 <= 1000 && typeof (re.exec) != "undefined") {_RecordType("<9175,9182,490>",(re.exec)); Inst346++; } } catch(e) {}try { if (Inst347 <= 1000 && typeof (re) != "undefined") {_RecordType("<9175,9177,490>",(re)); Inst347++; } } catch(e) {}try { if (Inst348 <= 1000 && typeof (e.stack) != "undefined") {_RecordType("<9183,9190,490>",(e.stack)); Inst348++; } } catch(e) {}try { if (Inst349 <= 1000 && typeof (e) != "undefined") {_RecordType("<9183,9184,490>",(e)); Inst349++; } } catch(e) {}
    re.exec(e.stack) !== null;
  }

try { if (Inst351 <= 1000 && typeof (e) != "undefined") {_RecordType("<9243,9244,495>",(e)); Inst351++; } } catch(e) {}
  try {
try { if (Inst350 <= 1000 && typeof (lazyDeopt) != "undefined") {_RecordType("<9219,9228,494>",(lazyDeopt)); Inst350++; } } catch(e) {}
    lazyDeopt();
  } catch (e) {
try { if (Inst352 <= 1000 && typeof (re.exec) != "undefined") {_RecordType("<9252,9259,496>",(re.exec)); Inst352++; } } catch(e) {}try { if (Inst353 <= 1000 && typeof (re) != "undefined") {_RecordType("<9252,9254,496>",(re)); Inst353++; } } catch(e) {}try { if (Inst354 <= 1000 && typeof (e.stack) != "undefined") {_RecordType("<9260,9267,496>",(e.stack)); Inst354++; } } catch(e) {}try { if (Inst355 <= 1000 && typeof (e) != "undefined") {_RecordType("<9260,9261,496>",(e)); Inst355++; } } catch(e) {}
    re.exec(e.stack) !== null;
  }
})(); // Verify holes are skipped.


(() => {
  const a = [1, 2,, 3, 4];
try { if (Inst356 <= 1000 && typeof (a) != "undefined") {_RecordType("<9337,9338,502>",(a)); Inst356++; } } catch(e) {}

try { if (Inst357 <= 1000 && typeof (withHoles) != "undefined") {_RecordType("<9368,9377,504>",(withHoles)); Inst357++; } } catch(e) {}
  function withHoles() {
    const callback_values = [];
try { if (Inst358 <= 1000 && typeof (callback_values) != "undefined") {_RecordType("<9392,9407,505>",(callback_values)); Inst358++; } } catch(e) {}
try { if (Inst359 <= 1000 && typeof (a.every) != "undefined") {_RecordType("<9418,9425,506>",(a.every)); Inst359++; } } catch(e) {}try { if (Inst360 <= 1000 && typeof (a) != "undefined") {_RecordType("<9418,9419,506>",(a)); Inst360++; } } catch(e) {}try { if (Inst361 <= 1000 && typeof (v) != "undefined") {_RecordType("<9426,9427,506>",(v)); Inst361++; } } catch(e) {}
    a.every(v => {
try { if (Inst362 <= 1000 && typeof (callback_values.push) != "undefined") {_RecordType("<9439,9459,507>",(callback_values.push)); Inst362++; } } catch(e) {}try { if (Inst363 <= 1000 && typeof (callback_values) != "undefined") {_RecordType("<9439,9454,507>",(callback_values)); Inst363++; } } catch(e) {}try { if (Inst364 <= 1000 && typeof (v) != "undefined") {_RecordType("<9460,9461,507>",(v)); Inst364++; } } catch(e) {}
      callback_values.push(v);
      return true;
    });
try { if (Inst365 <= 1000 && typeof (callback_values) != "undefined") {_RecordType("<9502,9517,510>",(callback_values)); Inst365++; } } catch(e) {}
    return callback_values;
  }

try { if (Inst366 <= 1000 && typeof (withHoles) != "undefined") {_RecordType("<9526,9535,513>",(withHoles)); Inst366++; } } catch(e) {}
  withHoles();
try { if (Inst367 <= 1000 && typeof (withHoles) != "undefined") {_RecordType("<9541,9550,514>",(withHoles)); Inst367++; } } catch(e) {}
  withHoles();
  [1, 2, 3, 4];
try { if (Inst368 <= 1000 && typeof (withHoles) != "undefined") {_RecordType("<9572,9581,516>",(withHoles)); Inst368++; } } catch(e) {}
  withHoles();
})();

(() => {
  const a = [1.5, 2.5,, 3.5, 4.5];
try { if (Inst369 <= 1000 && typeof (a) != "undefined") {_RecordType("<9609,9610,520>",(a)); Inst369++; } } catch(e) {}

try { if (Inst370 <= 1000 && typeof (withHoles) != "undefined") {_RecordType("<9648,9657,522>",(withHoles)); Inst370++; } } catch(e) {}
  function withHoles() {
    const callback_values = [];
try { if (Inst371 <= 1000 && typeof (callback_values) != "undefined") {_RecordType("<9672,9687,523>",(callback_values)); Inst371++; } } catch(e) {}
try { if (Inst372 <= 1000 && typeof (a.every) != "undefined") {_RecordType("<9698,9705,524>",(a.every)); Inst372++; } } catch(e) {}try { if (Inst373 <= 1000 && typeof (a) != "undefined") {_RecordType("<9698,9699,524>",(a)); Inst373++; } } catch(e) {}try { if (Inst374 <= 1000 && typeof (v) != "undefined") {_RecordType("<9706,9707,524>",(v)); Inst374++; } } catch(e) {}
    a.every(v => {
try { if (Inst375 <= 1000 && typeof (callback_values.push) != "undefined") {_RecordType("<9719,9739,525>",(callback_values.push)); Inst375++; } } catch(e) {}try { if (Inst376 <= 1000 && typeof (callback_values) != "undefined") {_RecordType("<9719,9734,525>",(callback_values)); Inst376++; } } catch(e) {}try { if (Inst377 <= 1000 && typeof (v) != "undefined") {_RecordType("<9740,9741,525>",(v)); Inst377++; } } catch(e) {}
      callback_values.push(v);
      return true;
    });
try { if (Inst378 <= 1000 && typeof (callback_values) != "undefined") {_RecordType("<9782,9797,528>",(callback_values)); Inst378++; } } catch(e) {}
    return callback_values;
  }

try { if (Inst379 <= 1000 && typeof (withHoles) != "undefined") {_RecordType("<9806,9815,531>",(withHoles)); Inst379++; } } catch(e) {}
  withHoles();
try { if (Inst380 <= 1000 && typeof (withHoles) != "undefined") {_RecordType("<9821,9830,532>",(withHoles)); Inst380++; } } catch(e) {}
  withHoles();
  [1.5, 2.5, 3.5, 4.5];
try { if (Inst381 <= 1000 && typeof (withHoles) != "undefined") {_RecordType("<9860,9869,534>",(withHoles)); Inst381++; } } catch(e) {}
  withHoles();
})(); // Ensure that we handle side-effects between load and call.


(() => {
try { if (Inst382 <= 1000 && typeof (side_effect) != "undefined") {_RecordType("<9962,9973,539>",(side_effect)); Inst382++; } } catch(e) {}
  function side_effect(a, b) {
try { if (Inst383 <= 1000 && typeof (a) != "undefined") {_RecordType("<9974,9975,539>",(a)); Inst383++; } } catch(e) {}try { if (Inst384 <= 1000 && typeof (b) != "undefined") {_RecordType("<9977,9978,539>",(b)); Inst384++; } } catch(e) {}
try { if (Inst385 <= 1000 && typeof (b) != "undefined") {_RecordType("<9990,9991,540>",(b)); Inst385++; } } catch(e) {}
    if (b) {
      a.foo = 3;
try { if (Inst386 <= 1000 && typeof (a.foo) != "undefined") {_RecordType("<10001,10006,541>",(a.foo)); Inst386++; } } catch(e) {}try { if (Inst387 <= 1000 && typeof (a) != "undefined") {_RecordType("<10001,10002,541>",(a)); Inst387++; } } catch(e) {}
    }

try { if (Inst388 <= 1000 && typeof (a) != "undefined") {_RecordType("<10030,10031,544>",(a)); Inst388++; } } catch(e) {}
    return a;
  }

try { if (Inst389 <= 1000 && typeof (unreliable) != "undefined") {_RecordType("<10049,10059,547>",(unreliable)); Inst389++; } } catch(e) {}
  function unreliable(a, b) {
try { if (Inst390 <= 1000 && typeof (a) != "undefined") {_RecordType("<10060,10061,547>",(a)); Inst390++; } } catch(e) {}try { if (Inst391 <= 1000 && typeof (b) != "undefined") {_RecordType("<10063,10064,547>",(b)); Inst391++; } } catch(e) {}
try { if (Inst392 <= 1000 && typeof (a.every) != "undefined") {_RecordType("<10079,10086,548>",(a.every)); Inst392++; } } catch(e) {}try { if (Inst393 <= 1000 && typeof (a) != "undefined") {_RecordType("<10079,10080,548>",(a)); Inst393++; } } catch(e) {}try { if (Inst394 <= 1000 && typeof (x) != "undefined") {_RecordType("<10087,10088,548>",(x)); Inst394++; } } catch(e) {}try { if (Inst395 <= 1000 && typeof (side_effect) != "undefined") {_RecordType("<10098,10109,548>",(side_effect)); Inst395++; } } catch(e) {}try { if (Inst396 <= 1000 && typeof (a) != "undefined") {_RecordType("<10110,10111,548>",(a)); Inst396++; } } catch(e) {}try { if (Inst397 <= 1000 && typeof (b) != "undefined") {_RecordType("<10113,10114,548>",(b)); Inst397++; } } catch(e) {}
    return a.every(x => true, side_effect(a, b));
  }

  let a = [1, 2, 3];
try { if (Inst398 <= 1000 && typeof (a) != "undefined") {_RecordType("<10129,10130,551>",(a)); Inst398++; } } catch(e) {}
try { if (Inst399 <= 1000 && typeof (unreliable) != "undefined") {_RecordType("<10146,10156,552>",(unreliable)); Inst399++; } } catch(e) {}try { if (Inst400 <= 1000 && typeof (a) != "undefined") {_RecordType("<10157,10158,552>",(a)); Inst400++; } } catch(e) {}
  unreliable(a, false);
try { if (Inst401 <= 1000 && typeof (unreliable) != "undefined") {_RecordType("<10170,10180,553>",(unreliable)); Inst401++; } } catch(e) {}try { if (Inst402 <= 1000 && typeof (a) != "undefined") {_RecordType("<10181,10182,553>",(a)); Inst402++; } } catch(e) {}
  unreliable(a, false);
try { if (Inst403 <= 1000 && typeof (unreliable) != "undefined") {_RecordType("<10194,10204,554>",(unreliable)); Inst403++; } } catch(e) {}try { if (Inst404 <= 1000 && typeof (a) != "undefined") {_RecordType("<10205,10206,554>",(a)); Inst404++; } } catch(e) {}
  unreliable(a, false); // Now actually do change the map.

try { if (Inst405 <= 1000 && typeof (unreliable) != "undefined") {_RecordType("<10254,10264,556>",(unreliable)); Inst405++; } } catch(e) {}try { if (Inst406 <= 1000 && typeof (a) != "undefined") {_RecordType("<10265,10266,556>",(a)); Inst406++; } } catch(e) {}
  unreliable(a, true);
})(); // Handle callback is not callable.


(() => {
  const a = [1, 2, 3, 4, 5];
try { if (Inst407 <= 1000 && typeof (a) != "undefined") {_RecordType("<10336,10337,561>",(a)); Inst407++; } } catch(e) {}

try { if (Inst408 <= 1000 && typeof (notCallable) != "undefined") {_RecordType("<10369,10380,563>",(notCallable)); Inst408++; } } catch(e) {}
  function notCallable() {
try { if (Inst409 <= 1000 && typeof (a.every) != "undefined") {_RecordType("<10396,10403,564>",(a.every)); Inst409++; } } catch(e) {}try { if (Inst410 <= 1000 && typeof (a) != "undefined") {_RecordType("<10396,10397,564>",(a)); Inst410++; } } catch(e) {}try { if (Inst411 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<10404,10413,564>",(undefined)); Inst411++; } } catch(e) {}
    return a.every(undefined);
  }

try { if (Inst412 <= 1000 && typeof (notCallable) != "undefined") {_RecordType("<10423,10434,567>",(notCallable)); Inst412++; } } catch(e) {}
  notCallable();
try { if (Inst413 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<10440,10449,568>",(TypeError)); Inst413++; } } catch(e) {}
  TypeError;

try { if (Inst415 <= 1000 && typeof (e) != "undefined") {_RecordType("<10490,10491,572>",(e)); Inst415++; } } catch(e) {}
  try {
try { if (Inst414 <= 1000 && typeof (notCallable) != "undefined") {_RecordType("<10464,10475,571>",(notCallable)); Inst414++; } } catch(e) {}
    notCallable();
  } catch (e) {
    ;
  }

try { if (Inst416 <= 1000 && typeof (notCallable) != "undefined") {_RecordType("<10508,10519,576>",(notCallable)); Inst416++; } } catch(e) {}
  notCallable();
try { if (Inst417 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<10525,10534,577>",(TypeError)); Inst417++; } } catch(e) {}
  TypeError;
})(); // Messing with the Array prototype causes deoptimization.


(() => {
  const a = [1, 2, 3];
try { if (Inst418 <= 1000 && typeof (a) != "undefined") {_RecordType("<10620,10621,582>",(a)); Inst418++; } } catch(e) {}
  let result = 0;
try { if (Inst419 <= 1000 && typeof (result) != "undefined") {_RecordType("<10641,10647,583>",(result)); Inst419++; } } catch(e) {}

try { if (Inst420 <= 1000 && typeof (prototypeChanged) != "undefined") {_RecordType("<10665,10681,585>",(prototypeChanged)); Inst420++; } } catch(e) {}
  function prototypeChanged() {
try { if (Inst421 <= 1000 && typeof (a.every) != "undefined") {_RecordType("<10690,10697,586>",(a.every)); Inst421++; } } catch(e) {}try { if (Inst422 <= 1000 && typeof (a) != "undefined") {_RecordType("<10690,10691,586>",(a)); Inst422++; } } catch(e) {}try { if (Inst423 <= 1000 && typeof (v) != "undefined") {_RecordType("<10699,10700,586>",(v)); Inst423++; } } catch(e) {}try { if (Inst424 <= 1000 && typeof (i) != "undefined") {_RecordType("<10702,10703,586>",(i)); Inst424++; } } catch(e) {}
    a.every((v, i) => {
try { if (Inst426 <= 1000 && typeof (v) != "undefined") {_RecordType("<10726,10727,587>",(v)); Inst426++; } } catch(e) {}
      result += v;
try { if (Inst425 <= 1000 && typeof (result) != "undefined") {_RecordType("<10716,10722,587>",(result)); Inst425++; } } catch(e) {}
      return true;
    });
  }

try { if (Inst427 <= 1000 && typeof (prototypeChanged) != "undefined") {_RecordType("<10763,10779,592>",(prototypeChanged)); Inst427++; } } catch(e) {}
  prototypeChanged();
try { if (Inst428 <= 1000 && typeof (prototypeChanged) != "undefined") {_RecordType("<10785,10801,593>",(prototypeChanged)); Inst428++; } } catch(e) {}
  prototypeChanged();
try { if (Inst429 <= 1000 && typeof (prototypeChanged) != "undefined") {_RecordType("<10807,10823,594>",(prototypeChanged)); Inst429++; } } catch(e) {}
  prototypeChanged();
  a.constructor = {};
try { if (Inst430 <= 1000 && typeof (a.constructor) != "undefined") {_RecordType("<10829,10842,595>",(a.constructor)); Inst430++; } } catch(e) {}try { if (Inst431 <= 1000 && typeof (a) != "undefined") {_RecordType("<10829,10830,595>",(a)); Inst431++; } } catch(e) {}
try { if (Inst432 <= 1000 && typeof (prototypeChanged) != "undefined") {_RecordType("<10851,10867,596>",(prototypeChanged)); Inst432++; } } catch(e) {}
  prototypeChanged();
try { if (Inst433 <= 1000 && typeof (prototypeChanged) != "undefined") {_RecordType("<10873,10889,597>",(prototypeChanged)); Inst433++; } } catch(e) {}
  prototypeChanged();
  24;
try { if (Inst434 <= 1000 && typeof (result) != "undefined") {_RecordType("<10901,10907,599>",(result)); Inst434++; } } catch(e) {}
  result;
})();

