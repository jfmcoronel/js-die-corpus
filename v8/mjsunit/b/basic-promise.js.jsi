var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2017 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Flags: --allow-natives-syntax
// We have to patch mjsunit because normal assertion failures just throw
// exceptions which are swallowed in a then clause.
try { if (Inst1 <= 1000 && typeof (msg) != "undefined") {_RecordType("<343,346,7>",(msg)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (print) != "undefined") {_RecordType("<350,355,7>",(print)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (msg) != "undefined") {_RecordType("<356,359,7>",(msg)); Inst3++; } } catch(e) {}
failWithMessage = msg => print(msg);
try { if (Inst0 <= 1000 && typeof (failWithMessage) != "undefined") {_RecordType("<325,340,7>",(failWithMessage)); Inst0++; } } catch(e) {}

try { if (Inst4 <= 1000 && typeof (newPromise) != "undefined") {_RecordType("<372,382,9>",(newPromise)); Inst4++; } } catch(e) {}
function newPromise() {
  var outerResolve;
try { if (Inst5 <= 1000 && typeof (outerResolve) != "undefined") {_RecordType("<393,405,10>",(outerResolve)); Inst5++; } } catch(e) {}
  var outerReject;
try { if (Inst6 <= 1000 && typeof (outerReject) != "undefined") {_RecordType("<413,424,11>",(outerReject)); Inst6++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (Promise) != "undefined") {_RecordType("<446,453,12>",(Promise)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (resolve) != "undefined") {_RecordType("<455,462,12>",(resolve)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (reject) != "undefined") {_RecordType("<464,470,12>",(reject)); Inst10++; } } catch(e) {}
  let promise = new Promise((resolve, reject) => {
try { if (Inst12 <= 1000 && typeof (resolve) != "undefined") {_RecordType("<496,503,13>",(resolve)); Inst12++; } } catch(e) {}
    outerResolve = resolve;
try { if (Inst11 <= 1000 && typeof (outerResolve) != "undefined") {_RecordType("<481,493,13>",(outerResolve)); Inst11++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (reject) != "undefined") {_RecordType("<523,529,14>",(reject)); Inst14++; } } catch(e) {}
    outerReject = reject;
try { if (Inst13 <= 1000 && typeof (outerReject) != "undefined") {_RecordType("<509,520,14>",(outerReject)); Inst13++; } } catch(e) {}
  });
try { if (Inst7 <= 1000 && typeof (promise) != "undefined") {_RecordType("<432,439,12>",(promise)); Inst7++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (Promise.resolve) != "undefined") {_RecordType("<539,554,16>",(Promise.resolve)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Promise) != "undefined") {_RecordType("<539,546,16>",(Promise)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (promise) != "undefined") {_RecordType("<555,562,16>",(promise)); Inst17++; } } catch(e) {}
  Promise.resolve(promise);
try { if (Inst18 <= 1000 && typeof (outerResolve) != "undefined") {_RecordType("<589,601,18>",(outerResolve)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (outerReject) != "undefined") {_RecordType("<615,626,19>",(outerReject)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (f) != "undefined") {_RecordType("<639,640,20>",(f)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (g) != "undefined") {_RecordType("<642,643,20>",(g)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (promise.then) != "undefined") {_RecordType("<648,660,20>",(promise.then)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (promise) != "undefined") {_RecordType("<648,655,20>",(promise)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (f) != "undefined") {_RecordType("<661,662,20>",(f)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (g) != "undefined") {_RecordType("<664,665,20>",(g)); Inst25++; } } catch(e) {}
  return {
    resolve: outerResolve,
    reject: outerReject,
    then: (f, g) => promise.then(f, g)
  };
}

try { if (Inst26 <= 1000 && typeof (ResolveOK) != "undefined") {_RecordType("<685,694,24>",(ResolveOK)); Inst26++; } } catch(e) {}
(function ResolveOK() {
try { if (Inst28 <= 1000 && typeof (newPromise) != "undefined") {_RecordType("<715,725,25>",(newPromise)); Inst28++; } } catch(e) {}
  let promise = newPromise();
try { if (Inst27 <= 1000 && typeof (promise) != "undefined") {_RecordType("<705,712,25>",(promise)); Inst27++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (promise.then) != "undefined") {_RecordType("<731,743,26>",(promise.then)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (promise) != "undefined") {_RecordType("<731,738,26>",(promise)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (msg) != "undefined") {_RecordType("<744,747,26>",(msg)); Inst31++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (ex) != "undefined") {_RecordType("<808,810,30>",(ex)); Inst35++; } } catch(e) {}
  promise.then(msg => {
try { if (Inst32 <= 1000 && typeof (print) != "undefined") {_RecordType("<757,762,27>",(print)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (msg) != "undefined") {_RecordType("<778,781,27>",(msg)); Inst33++; } } catch(e) {}
    print("resolved: " + msg);
    "ok";
try { if (Inst34 <= 1000 && typeof (msg) != "undefined") {_RecordType("<798,801,29>",(msg)); Inst34++; } } catch(e) {}
    msg;
  }, ex => {
try { if (Inst36 <= 1000 && typeof (print) != "undefined") {_RecordType("<820,825,31>",(print)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (ex) != "undefined") {_RecordType("<841,843,31>",(ex)); Inst37++; } } catch(e) {}
    print("rejected: " + ex);
try { if (Inst38 <= 1000 && typeof (print) != "undefined") {_RecordType("<850,855,32>",(print)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (ex) != "undefined") {_RecordType("<861,863,32>",(ex)); Inst39++; } } catch(e) {}
    print("" + ex);
  });
try { if (Inst40 <= 1000 && typeof (promise.resolve) != "undefined") {_RecordType("<874,889,34>",(promise.resolve)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (promise) != "undefined") {_RecordType("<874,881,34>",(promise)); Inst41++; } } catch(e) {}
  promise.resolve("ok");
try { if (Inst42 <= 1000 && typeof (promise.reject) != "undefined") {_RecordType("<899,913,35>",(promise.reject)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (promise) != "undefined") {_RecordType("<899,906,35>",(promise)); Inst43++; } } catch(e) {}
  promise.reject(11); // ignored
})();

try { if (Inst44 <= 1000 && typeof (RejectOK) != "undefined") {_RecordType("<947,955,38>",(RejectOK)); Inst44++; } } catch(e) {}
(function RejectOK() {
try { if (Inst46 <= 1000 && typeof (newPromise) != "undefined") {_RecordType("<976,986,39>",(newPromise)); Inst46++; } } catch(e) {}
  let promise = newPromise();
try { if (Inst45 <= 1000 && typeof (promise) != "undefined") {_RecordType("<966,973,39>",(promise)); Inst45++; } } catch(e) {}
try { if (Inst47 <= 1000 && typeof (promise.then) != "undefined") {_RecordType("<992,1004,40>",(promise.then)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (promise) != "undefined") {_RecordType("<992,999,40>",(promise)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (msg) != "undefined") {_RecordType("<1005,1008,40>",(msg)); Inst49++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (ex) != "undefined") {_RecordType("<1069,1071,43>",(ex)); Inst53++; } } catch(e) {}
  promise.then(msg => {
try { if (Inst50 <= 1000 && typeof (print) != "undefined") {_RecordType("<1018,1023,41>",(print)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (msg) != "undefined") {_RecordType("<1039,1042,41>",(msg)); Inst51++; } } catch(e) {}
    print("resolved: " + msg);
try { if (Inst52 <= 1000 && typeof (print) != "undefined") {_RecordType("<1049,1054,42>",(print)); Inst52++; } } catch(e) {}
    print("fail");
  }, ex => {
try { if (Inst54 <= 1000 && typeof (print) != "undefined") {_RecordType("<1081,1086,44>",(print)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (ex) != "undefined") {_RecordType("<1102,1104,44>",(ex)); Inst55++; } } catch(e) {}
    print("rejected: " + ex);
    42;
try { if (Inst56 <= 1000 && typeof (ex) != "undefined") {_RecordType("<1119,1121,46>",(ex)); Inst56++; } } catch(e) {}
    ex;
  });
try { if (Inst57 <= 1000 && typeof (promise.reject) != "undefined") {_RecordType("<1131,1145,48>",(promise.reject)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (promise) != "undefined") {_RecordType("<1131,1138,48>",(promise)); Inst58++; } } catch(e) {}
  promise.reject(42);
try { if (Inst59 <= 1000 && typeof (promise.resolve) != "undefined") {_RecordType("<1153,1168,49>",(promise.resolve)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (promise) != "undefined") {_RecordType("<1153,1160,49>",(promise)); Inst60++; } } catch(e) {}
  promise.resolve("fail"); // ignored
})();

