var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2010 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
try { if (Inst0 <= 1000 && typeof (non_int32) != "undefined") {_RecordType("<1606,1615,27>",(non_int32)); Inst0++; } } catch(e) {}
function non_int32() {
  return 2600822924; // It's not a signed Int32.
}

try { if (Inst1 <= 1000 && typeof (hidden_smi) != "undefined") {_RecordType("<1681,1691,31>",(hidden_smi)); Inst1++; } } catch(e) {}
function hidden_smi() {
  return 46512102; // It's a Smi
}

try { if (Inst2 <= 1000 && typeof (hidden_int32) != "undefined") {_RecordType("<1741,1753,35>",(hidden_int32)); Inst2++; } } catch(e) {}
function hidden_int32() {
  return 1600822924; // It's a signed Int32.
}

try { if (Inst3 <= 1000 && typeof (f) != "undefined") {_RecordType("<1815,1816,39>",(f)); Inst3++; } } catch(e) {}
function f() {
try { if (Inst5 <= 1000 && typeof (non_int32) != "undefined") {_RecordType("<1831,1840,40>",(non_int32)); Inst5++; } } catch(e) {}
  var x = non_int32(); // Not a constant.
try { if (Inst4 <= 1000 && typeof (x) != "undefined") {_RecordType("<1827,1828,40>",(x)); Inst4++; } } catch(e) {}

try { if (Inst7 <= 1000 && typeof (hidden_smi) != "undefined") {_RecordType("<1874,1884,42>",(hidden_smi)); Inst7++; } } catch(e) {}
  var y = hidden_smi(); // Not a constant.
try { if (Inst6 <= 1000 && typeof (y) != "undefined") {_RecordType("<1870,1871,42>",(y)); Inst6++; } } catch(e) {}

try { if (Inst9 <= 1000 && typeof (hidden_int32) != "undefined") {_RecordType("<1918,1930,44>",(hidden_int32)); Inst9++; } } catch(e) {}
  var z = hidden_int32();
try { if (Inst8 <= 1000 && typeof (z) != "undefined") {_RecordType("<1914,1915,44>",(z)); Inst8++; } } catch(e) {}
  46512102 & 2600822924;
try { if (Inst10 <= 1000 && typeof (x) != "undefined") {_RecordType("<1972,1973,46>",(x)); Inst10++; } } catch(e) {}
  46512102 & x;
  "1";
  1600822924 & 2600822924;
try { if (Inst11 <= 1000 && typeof (x) != "undefined") {_RecordType("<2024,2025,49>",(x)); Inst11++; } } catch(e) {}
  1600822924 & x;
  "2";
  2600822924 & 2600822924;
try { if (Inst12 <= 1000 && typeof (x) != "undefined") {_RecordType("<2076,2077,52>",(x)); Inst12++; } } catch(e) {}
  2600822924 & x;
  "3";
  46512102 & 46512102;
try { if (Inst13 <= 1000 && typeof (y) != "undefined") {_RecordType("<2122,2123,55>",(y)); Inst13++; } } catch(e) {}
  46512102 & y;
  "4";
  1600822924 & 46512102;
try { if (Inst14 <= 1000 && typeof (y) != "undefined") {_RecordType("<2172,2173,58>",(y)); Inst14++; } } catch(e) {}
  1600822924 & y;
  "5";
  2600822924 & 46512102;
try { if (Inst15 <= 1000 && typeof (y) != "undefined") {_RecordType("<2222,2223,61>",(y)); Inst15++; } } catch(e) {}
  2600822924 & y;
  "6";
  46512102 & 1600822924;
try { if (Inst16 <= 1000 && typeof (z) != "undefined") {_RecordType("<2270,2271,64>",(z)); Inst16++; } } catch(e) {}
  46512102 & z;
  "7";
  1600822924 & 1600822924;
try { if (Inst17 <= 1000 && typeof (z) != "undefined") {_RecordType("<2322,2323,67>",(z)); Inst17++; } } catch(e) {}
  1600822924 & z;
  "8";
  2600822924 & 1600822924;
try { if (Inst18 <= 1000 && typeof (z) != "undefined") {_RecordType("<2374,2375,70>",(z)); Inst18++; } } catch(e) {}
  2600822924 & z;
  "9";
  46512102 & 2600822924;
try { if (Inst19 <= 1000 && typeof (y) != "undefined") {_RecordType("<2411,2412,73>",(y)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (x) != "undefined") {_RecordType("<2415,2416,73>",(x)); Inst20++; } } catch(e) {}
  y & x;
  "10";
  1600822924 & 2600822924;
try { if (Inst21 <= 1000 && typeof (z) != "undefined") {_RecordType("<2455,2456,76>",(z)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (x) != "undefined") {_RecordType("<2459,2460,76>",(x)); Inst22++; } } catch(e) {}
  z & x;
  "11";
  46512102 & 2600822924;
try { if (Inst23 <= 1000 && typeof (x) != "undefined") {_RecordType("<2497,2498,79>",(x)); Inst23++; } } catch(e) {}
  x & 46512102;
  "1rev";
  1600822924 & 2600822924;
try { if (Inst24 <= 1000 && typeof (x) != "undefined") {_RecordType("<2550,2551,82>",(x)); Inst24++; } } catch(e) {}
  x & 1600822924;
  "2rev";
  2600822924 & 2600822924;
try { if (Inst25 <= 1000 && typeof (x) != "undefined") {_RecordType("<2605,2606,85>",(x)); Inst25++; } } catch(e) {}
  x & 2600822924;
  "3rev";
  46512102 & 46512102;
try { if (Inst26 <= 1000 && typeof (y) != "undefined") {_RecordType("<2656,2657,88>",(y)); Inst26++; } } catch(e) {}
  y & 46512102;
  "4rev";
  1600822924 & 46512102;
try { if (Inst27 <= 1000 && typeof (y) != "undefined") {_RecordType("<2707,2708,91>",(y)); Inst27++; } } catch(e) {}
  y & 1600822924;
  "5rev";
  2600822924 & 46512102;
try { if (Inst28 <= 1000 && typeof (y) != "undefined") {_RecordType("<2760,2761,94>",(y)); Inst28++; } } catch(e) {}
  y & 2600822924;
  "6rev";
  46512102 & 1600822924;
try { if (Inst29 <= 1000 && typeof (z) != "undefined") {_RecordType("<2813,2814,97>",(z)); Inst29++; } } catch(e) {}
  z & 46512102;
  "7rev";
  1600822924 & 1600822924;
try { if (Inst30 <= 1000 && typeof (z) != "undefined") {_RecordType("<2866,2867,100>",(z)); Inst30++; } } catch(e) {}
  z & 1600822924;
  "8rev";
  2600822924 & 1600822924;
try { if (Inst31 <= 1000 && typeof (z) != "undefined") {_RecordType("<2921,2922,103>",(z)); Inst31++; } } catch(e) {}
  z & 2600822924;
  "9rev";
  46512102 & 2600822924;
try { if (Inst32 <= 1000 && typeof (x) != "undefined") {_RecordType("<2974,2975,106>",(x)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (y) != "undefined") {_RecordType("<2978,2979,106>",(y)); Inst33++; } } catch(e) {}
  x & y;
  "10rev";
  1600822924 & 2600822924;
try { if (Inst34 <= 1000 && typeof (x) != "undefined") {_RecordType("<3021,3022,109>",(x)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (z) != "undefined") {_RecordType("<3025,3026,109>",(z)); Inst35++; } } catch(e) {}
  x & z;
  "11rev";
  46512102 & -0x20123456 | 1;
try { if (Inst36 <= 1000 && typeof (y) != "undefined") {_RecordType("<3071,3072,112>",(y)); Inst36++; } } catch(e) {}
  y & -0x20123456 | 1;
  "12";
  1600822924 & -0x20123456 | 1;
try { if (Inst37 <= 1000 && typeof (z) != "undefined") {_RecordType("<3134,3135,115>",(z)); Inst37++; } } catch(e) {}
  z & -0x20123456 | 1;
  "13";
  2600822924 & -0x20123456 | 1;
try { if (Inst38 <= 1000 && typeof (x) != "undefined") {_RecordType("<3197,3198,118>",(x)); Inst38++; } } catch(e) {}
  x & -0x20123456 | 1;
  "14";
  46512102 & -0x20123456 | 1;
try { if (Inst39 <= 1000 && typeof (y) != "undefined") {_RecordType("<3272,3273,121>",(y)); Inst39++; } } catch(e) {}
  -0x20123456 & y | 1;
  "12rev";
  1600822924 & -0x20123456 | 1;
try { if (Inst40 <= 1000 && typeof (z) != "undefined") {_RecordType("<3338,3339,124>",(z)); Inst40++; } } catch(e) {}
  -0x20123456 & z | 1;
  "13rev";
  2600822924 & -0x20123456 | 1;
try { if (Inst41 <= 1000 && typeof (x) != "undefined") {_RecordType("<3404,3405,127>",(x)); Inst41++; } } catch(e) {}
  -0x20123456 & x | 1;
  "14rev";
  2600822924 & 2600822924;
try { if (Inst42 <= 1000 && typeof (x) != "undefined") {_RecordType("<3451,3452,130>",(x)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (x) != "undefined") {_RecordType("<3455,3456,130>",(x)); Inst43++; } } catch(e) {}
  x & x;
  "xx";
try { if (Inst44 <= 1000 && typeof (y) != "undefined") {_RecordType("<3468,3469,132>",(y)); Inst44++; } } catch(e) {}
  y;
try { if (Inst45 <= 1000 && typeof (y) != "undefined") {_RecordType("<3473,3474,133>",(y)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (y) != "undefined") {_RecordType("<3477,3478,133>",(y)); Inst46++; } } catch(e) {}
  y & y;
  "yy";
try { if (Inst47 <= 1000 && typeof (z) != "undefined") {_RecordType("<3490,3491,135>",(z)); Inst47++; } } catch(e) {}
  z;
try { if (Inst48 <= 1000 && typeof (z) != "undefined") {_RecordType("<3495,3496,136>",(z)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (z) != "undefined") {_RecordType("<3499,3500,136>",(z)); Inst49++; } } catch(e) {}
  z & z;
  "zz";
}

for (var i = 0; i < 5; i++) {
try { if (Inst50 <= 1000 && typeof (i) != "undefined") {_RecordType("<3522,3523,140>",(i)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (i) != "undefined") {_RecordType("<3529,3530,140>",(i)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (i) != "undefined") {_RecordType("<3536,3537,140>",(i)); Inst52++; } } catch(e) {}
try { if (Inst53 <= 1000 && typeof (f) != "undefined") {_RecordType("<3545,3546,141>",(f)); Inst53++; } } catch(e) {}
  f();
}

