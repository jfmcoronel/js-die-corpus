var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2008 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// This test fails because we copy the arguments array on indirect
// access
try { if (Inst0 <= 1000 && typeof (g) != "undefined") {_RecordType("<1683,1684,29>",(g)); Inst0++; } } catch(e) {}
function g(f) {
try { if (Inst1 <= 1000 && typeof (f) != "undefined") {_RecordType("<1685,1686,29>",(f)); Inst1++; } } catch(e) {}
  100;
  f.arguments = 100;
try { if (Inst2 <= 1000 && typeof (f.arguments) != "undefined") {_RecordType("<1699,1710,31>",(f.arguments)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (f) != "undefined") {_RecordType("<1699,1700,31>",(f)); Inst3++; } } catch(e) {}
  3;
try { if (Inst4 <= 1000 && typeof (f.arguments.length) != "undefined") {_RecordType("<1725,1743,33>",(f.arguments.length)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (f.arguments) != "undefined") {_RecordType("<1725,1736,33>",(f.arguments)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (f) != "undefined") {_RecordType("<1725,1726,33>",(f)); Inst6++; } } catch(e) {}
  f.arguments.length;
  1;
try { if (Inst7 <= 1000 && typeof (f.arguments[0]) != "undefined") {_RecordType("<1752,1766,35>",(f.arguments[0])); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (f.arguments) != "undefined") {_RecordType("<1752,1763,35>",(f.arguments)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (f) != "undefined") {_RecordType("<1752,1753,35>",(f)); Inst9++; } } catch(e) {}
  f.arguments[0];
  2;
try { if (Inst10 <= 1000 && typeof (f.arguments[1]) != "undefined") {_RecordType("<1775,1789,37>",(f.arguments[1])); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (f.arguments) != "undefined") {_RecordType("<1775,1786,37>",(f.arguments)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (f) != "undefined") {_RecordType("<1775,1776,37>",(f)); Inst12++; } } catch(e) {}
  f.arguments[1];
  3;
try { if (Inst13 <= 1000 && typeof (f.arguments[2]) != "undefined") {_RecordType("<1798,1812,39>",(f.arguments[2])); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (f.arguments) != "undefined") {_RecordType("<1798,1809,39>",(f.arguments)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (f) != "undefined") {_RecordType("<1798,1799,39>",(f)); Inst15++; } } catch(e) {}
  f.arguments[2];
  f.arguments[0] = 999;
try { if (Inst16 <= 1000 && typeof (f.arguments[0]) != "undefined") {_RecordType("<1816,1830,40>",(f.arguments[0])); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (f.arguments) != "undefined") {_RecordType("<1816,1827,40>",(f.arguments)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (f) != "undefined") {_RecordType("<1816,1817,40>",(f)); Inst18++; } } catch(e) {}
  f.arguments.extra = 'kallevip';
try { if (Inst19 <= 1000 && typeof (f.arguments.extra) != "undefined") {_RecordType("<1840,1857,41>",(f.arguments.extra)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (f.arguments) != "undefined") {_RecordType("<1840,1851,41>",(f.arguments)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (f) != "undefined") {_RecordType("<1840,1841,41>",(f)); Inst21++; } } catch(e) {}
}

try { if (Inst22 <= 1000 && typeof (h) != "undefined") {_RecordType("<1884,1885,44>",(h)); Inst22++; } } catch(e) {}
function h(f) {
try { if (Inst23 <= 1000 && typeof (f) != "undefined") {_RecordType("<1886,1887,44>",(f)); Inst23++; } } catch(e) {}
  'kallevip';
try { if (Inst24 <= 1000 && typeof (f.arguments.extra) != "undefined") {_RecordType("<1907,1924,46>",(f.arguments.extra)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (f.arguments) != "undefined") {_RecordType("<1907,1918,46>",(f.arguments)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (f) != "undefined") {_RecordType("<1907,1908,46>",(f)); Inst26++; } } catch(e) {}
  f.arguments.extra;
try { if (Inst27 <= 1000 && typeof (f.arguments) != "undefined") {_RecordType("<1935,1946,47>",(f.arguments)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (f) != "undefined") {_RecordType("<1935,1936,47>",(f)); Inst28++; } } catch(e) {}
  return f.arguments;
} // Test function with a materialized arguments array.


try { if (Inst29 <= 1000 && typeof (f0) != "undefined") {_RecordType("<2015,2017,51>",(f0)); Inst29++; } } catch(e) {}
function f0() {
try { if (Inst30 <= 1000 && typeof (g) != "undefined") {_RecordType("<2024,2025,52>",(g)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (f0) != "undefined") {_RecordType("<2026,2028,52>",(f0)); Inst31++; } } catch(e) {}
  g(f0);
try { if (Inst33 <= 1000 && typeof (h) != "undefined") {_RecordType("<2046,2047,53>",(h)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (f0) != "undefined") {_RecordType("<2048,2050,53>",(f0)); Inst34++; } } catch(e) {}
  var result = h(f0);
try { if (Inst32 <= 1000 && typeof (result) != "undefined") {_RecordType("<2037,2043,53>",(result)); Inst32++; } } catch(e) {}
try { if (Inst36 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<2063,2072,54>",(arguments)); Inst36++; } } catch(e) {}
  var a = arguments;
try { if (Inst35 <= 1000 && typeof (a) != "undefined") {_RecordType("<2059,2060,54>",(a)); Inst35++; } } catch(e) {}
  999;
try { if (Inst37 <= 1000 && typeof (a[0]) != "undefined") {_RecordType("<2083,2087,56>",(a[0])); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (a) != "undefined") {_RecordType("<2083,2084,56>",(a)); Inst38++; } } catch(e) {}
  a[0];
try { if (Inst39 <= 1000 && typeof (result) != "undefined") {_RecordType("<2098,2104,57>",(result)); Inst39++; } } catch(e) {}
  return result;
} // Test function without a materialized arguments array.


try { if (Inst40 <= 1000 && typeof (f1) != "undefined") {_RecordType("<2176,2178,61>",(f1)); Inst40++; } } catch(e) {}
function f1(x) {
try { if (Inst41 <= 1000 && typeof (x) != "undefined") {_RecordType("<2179,2180,61>",(x)); Inst41++; } } catch(e) {}
try { if (Inst42 <= 1000 && typeof (g) != "undefined") {_RecordType("<2186,2187,62>",(g)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (f1) != "undefined") {_RecordType("<2188,2190,62>",(f1)); Inst43++; } } catch(e) {}
  g(f1);
try { if (Inst45 <= 1000 && typeof (h) != "undefined") {_RecordType("<2208,2209,63>",(h)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (f1) != "undefined") {_RecordType("<2210,2212,63>",(f1)); Inst46++; } } catch(e) {}
  var result = h(f1);
try { if (Inst44 <= 1000 && typeof (result) != "undefined") {_RecordType("<2199,2205,63>",(result)); Inst44++; } } catch(e) {}
  999;
try { if (Inst47 <= 1000 && typeof (x) != "undefined") {_RecordType("<2224,2225,65>",(x)); Inst47++; } } catch(e) {}
  x;
try { if (Inst48 <= 1000 && typeof (result) != "undefined") {_RecordType("<2236,2242,66>",(result)); Inst48++; } } catch(e) {}
  return result;
}

try { if (Inst49 <= 1000 && typeof (test) != "undefined") {_RecordType("<2256,2260,69>",(test)); Inst49++; } } catch(e) {}
function test(f) {
try { if (Inst50 <= 1000 && typeof (f) != "undefined") {_RecordType("<2261,2262,69>",(f)); Inst50++; } } catch(e) {}
try { if (Inst51 <= 1000 && typeof (f.arguments) != "undefined") {_RecordType("<2277,2288,70>",(f.arguments)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (f) != "undefined") {_RecordType("<2277,2278,70>",(f)); Inst52++; } } catch(e) {}
  null === f.arguments;
try { if (Inst54 <= 1000 && typeof (f) != "undefined") {_RecordType("<2303,2304,71>",(f)); Inst54++; } } catch(e) {}
  var args = f(1, 2, 3);
try { if (Inst53 <= 1000 && typeof (args) != "undefined") {_RecordType("<2296,2300,71>",(args)); Inst53++; } } catch(e) {}
try { if (Inst55 <= 1000 && typeof (f.arguments) != "undefined") {_RecordType("<2326,2337,72>",(f.arguments)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (f) != "undefined") {_RecordType("<2326,2327,72>",(f)); Inst56++; } } catch(e) {}
  null === f.arguments;
  3;
try { if (Inst57 <= 1000 && typeof (args.length) != "undefined") {_RecordType("<2346,2357,74>",(args.length)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (args) != "undefined") {_RecordType("<2346,2350,74>",(args)); Inst58++; } } catch(e) {}
  args.length;
  999;
try { if (Inst59 <= 1000 && typeof (args[0]) != "undefined") {_RecordType("<2368,2375,76>",(args[0])); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (args) != "undefined") {_RecordType("<2368,2372,76>",(args)); Inst60++; } } catch(e) {}
  args[0];
  2;
try { if (Inst61 <= 1000 && typeof (args[1]) != "undefined") {_RecordType("<2384,2391,78>",(args[1])); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (args) != "undefined") {_RecordType("<2384,2388,78>",(args)); Inst62++; } } catch(e) {}
  args[1];
  3;
try { if (Inst63 <= 1000 && typeof (args[2]) != "undefined") {_RecordType("<2400,2407,80>",(args[2])); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (args) != "undefined") {_RecordType("<2400,2404,80>",(args)); Inst64++; } } catch(e) {}
  args[2];
  'kallevip';
try { if (Inst65 <= 1000 && typeof (args.extra) != "undefined") {_RecordType("<2425,2435,82>",(args.extra)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (args) != "undefined") {_RecordType("<2425,2429,82>",(args)); Inst66++; } } catch(e) {}
  args.extra;
}

try { if (Inst67 <= 1000 && typeof (test) != "undefined") {_RecordType("<2440,2444,85>",(test)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (f0) != "undefined") {_RecordType("<2445,2447,85>",(f0)); Inst68++; } } catch(e) {}
test(f0);
try { if (Inst69 <= 1000 && typeof (test) != "undefined") {_RecordType("<2450,2454,86>",(test)); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (f1) != "undefined") {_RecordType("<2455,2457,86>",(f1)); Inst70++; } } catch(e) {}
test(f1);

try { if (Inst71 <= 1000 && typeof (w) != "undefined") {_RecordType("<2470,2471,88>",(w)); Inst71++; } } catch(e) {}
function w() {
try { if (Inst72 <= 1000 && typeof (q.arguments) != "undefined") {_RecordType("<2485,2496,89>",(q.arguments)); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (q) != "undefined") {_RecordType("<2485,2486,89>",(q)); Inst73++; } } catch(e) {}
  return q.arguments;
}

try { if (Inst74 <= 1000 && typeof (q) != "undefined") {_RecordType("<2510,2511,92>",(q)); Inst74++; } } catch(e) {}
function q(x, y) {
try { if (Inst75 <= 1000 && typeof (x) != "undefined") {_RecordType("<2512,2513,92>",(x)); Inst75++; } } catch(e) {}try { if (Inst76 <= 1000 && typeof (y) != "undefined") {_RecordType("<2515,2516,92>",(y)); Inst76++; } } catch(e) {}
  x = 2;
try { if (Inst77 <= 1000 && typeof (x) != "undefined") {_RecordType("<2522,2523,93>",(x)); Inst77++; } } catch(e) {}
try { if (Inst79 <= 1000 && typeof (w) != "undefined") {_RecordType("<2544,2545,94>",(w)); Inst79++; } } catch(e) {}
  var result = w();
try { if (Inst78 <= 1000 && typeof (result) != "undefined") {_RecordType("<2535,2541,94>",(result)); Inst78++; } } catch(e) {}
  y = 3;
try { if (Inst80 <= 1000 && typeof (y) != "undefined") {_RecordType("<2551,2552,95>",(y)); Inst80++; } } catch(e) {}
try { if (Inst81 <= 1000 && typeof (result) != "undefined") {_RecordType("<2567,2573,96>",(result)); Inst81++; } } catch(e) {}
  return result;
}

try { if (Inst83 <= 1000 && typeof (q) != "undefined") {_RecordType("<2586,2587,99>",(q)); Inst83++; } } catch(e) {}
var a = q(0, 1); // x is set locally *before* the last use of arguments before the
try { if (Inst82 <= 1000 && typeof (a) != "undefined") {_RecordType("<2582,2583,99>",(a)); Inst82++; } } catch(e) {}
// activation of q is popped from the stack.

2;
try { if (Inst84 <= 1000 && typeof (a[0]) != "undefined") {_RecordType("<2710,2714,103>",(a[0])); Inst84++; } } catch(e) {}try { if (Inst85 <= 1000 && typeof (a) != "undefined") {_RecordType("<2710,2711,103>",(a)); Inst85++; } } catch(e) {}
a[0];
1;
try { if (Inst86 <= 1000 && typeof (a[1]) != "undefined") {_RecordType("<2719,2723,105>",(a[1])); Inst86++; } } catch(e) {}try { if (Inst87 <= 1000 && typeof (a) != "undefined") {_RecordType("<2719,2720,105>",(a)); Inst87++; } } catch(e) {}
a[1];

