var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2013 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// Test bitwise operations with booleans.
var t = 1;
try { if (Inst0 <= 1000 && typeof (t) != "undefined") {_RecordType("<1643,1644,28>",(t)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (testFalseLeftHandSide) != "undefined") {_RecordType("<1660,1681,30>",(testFalseLeftHandSide)); Inst1++; } } catch(e) {}
function testFalseLeftHandSide() {
  var b;
try { if (Inst2 <= 1000 && typeof (b) != "undefined") {_RecordType("<1692,1693,31>",(b)); Inst2++; } } catch(e) {}

try { if (Inst3 <= 1000 && typeof (t) != "undefined") {_RecordType("<1702,1703,33>",(t)); Inst3++; } } catch(e) {}
  if (t) {
    b = false;
try { if (Inst4 <= 1000 && typeof (b) != "undefined") {_RecordType("<1711,1712,34>",(b)); Inst4++; } } catch(e) {}
  }

try { if (Inst5 <= 1000 && typeof (b) != "undefined") {_RecordType("<1729,1730,37>",(b)); Inst5++; } } catch(e) {}
  b | 1;
  1;
try { if (Inst6 <= 1000 && typeof (b) != "undefined") {_RecordType("<1743,1744,39>",(b)); Inst6++; } } catch(e) {}
  b & 1;
  0;
try { if (Inst7 <= 1000 && typeof (b) != "undefined") {_RecordType("<1757,1758,41>",(b)); Inst7++; } } catch(e) {}
  b ^ 1;
  1;
try { if (Inst8 <= 1000 && typeof (b) != "undefined") {_RecordType("<1771,1772,43>",(b)); Inst8++; } } catch(e) {}
  b << 1;
  0;
try { if (Inst9 <= 1000 && typeof (b) != "undefined") {_RecordType("<1786,1787,45>",(b)); Inst9++; } } catch(e) {}
  b >> 1;
  0;
try { if (Inst10 <= 1000 && typeof (b) != "undefined") {_RecordType("<1801,1802,47>",(b)); Inst10++; } } catch(e) {}
  b >>> 1;
  0;
}

try { if (Inst11 <= 1000 && typeof (testFalseRightHandSide) != "undefined") {_RecordType("<1827,1849,51>",(testFalseRightHandSide)); Inst11++; } } catch(e) {}
function testFalseRightHandSide() {
try { if (Inst12 <= 1000 && typeof (t) != "undefined") {_RecordType("<1860,1861,52>",(t)); Inst12++; } } catch(e) {}
  if (t) {
    b = false;
try { if (Inst13 <= 1000 && typeof (b) != "undefined") {_RecordType("<1869,1870,53>",(b)); Inst13++; } } catch(e) {}
  }

try { if (Inst14 <= 1000 && typeof (b) != "undefined") {_RecordType("<1891,1892,56>",(b)); Inst14++; } } catch(e) {}
  1 | b;
  1;
try { if (Inst15 <= 1000 && typeof (b) != "undefined") {_RecordType("<1905,1906,58>",(b)); Inst15++; } } catch(e) {}
  1 & b;
  0;
try { if (Inst16 <= 1000 && typeof (b) != "undefined") {_RecordType("<1919,1920,60>",(b)); Inst16++; } } catch(e) {}
  1 ^ b;
  1;
try { if (Inst17 <= 1000 && typeof (b) != "undefined") {_RecordType("<1934,1935,62>",(b)); Inst17++; } } catch(e) {}
  1 << b;
  1;
try { if (Inst18 <= 1000 && typeof (b) != "undefined") {_RecordType("<1949,1950,64>",(b)); Inst18++; } } catch(e) {}
  1 >> b;
  1;
try { if (Inst19 <= 1000 && typeof (b) != "undefined") {_RecordType("<1965,1966,66>",(b)); Inst19++; } } catch(e) {}
  1 >>> b;
  1;
}

try { if (Inst20 <= 1000 && typeof (testTrueLeftHandSide) != "undefined") {_RecordType("<1985,2005,70>",(testTrueLeftHandSide)); Inst20++; } } catch(e) {}
function testTrueLeftHandSide() {
try { if (Inst21 <= 1000 && typeof (t) != "undefined") {_RecordType("<2016,2017,71>",(t)); Inst21++; } } catch(e) {}
  if (t) {
    b = true;
try { if (Inst22 <= 1000 && typeof (b) != "undefined") {_RecordType("<2025,2026,72>",(b)); Inst22++; } } catch(e) {}
  }

try { if (Inst23 <= 1000 && typeof (b) != "undefined") {_RecordType("<2042,2043,75>",(b)); Inst23++; } } catch(e) {}
  b | 1;
  1;
try { if (Inst24 <= 1000 && typeof (b) != "undefined") {_RecordType("<2056,2057,77>",(b)); Inst24++; } } catch(e) {}
  b & 1;
  1;
try { if (Inst25 <= 1000 && typeof (b) != "undefined") {_RecordType("<2070,2071,79>",(b)); Inst25++; } } catch(e) {}
  b ^ 1;
  0;
try { if (Inst26 <= 1000 && typeof (b) != "undefined") {_RecordType("<2084,2085,81>",(b)); Inst26++; } } catch(e) {}
  b << 1;
  2;
try { if (Inst27 <= 1000 && typeof (b) != "undefined") {_RecordType("<2099,2100,83>",(b)); Inst27++; } } catch(e) {}
  b >> 1;
  0;
try { if (Inst28 <= 1000 && typeof (b) != "undefined") {_RecordType("<2114,2115,85>",(b)); Inst28++; } } catch(e) {}
  b >>> 1;
  0;
}

try { if (Inst29 <= 1000 && typeof (testTrueRightHandSide) != "undefined") {_RecordType("<2140,2161,89>",(testTrueRightHandSide)); Inst29++; } } catch(e) {}
function testTrueRightHandSide() {
try { if (Inst30 <= 1000 && typeof (t) != "undefined") {_RecordType("<2172,2173,90>",(t)); Inst30++; } } catch(e) {}
  if (t) {
    b = true;
try { if (Inst31 <= 1000 && typeof (b) != "undefined") {_RecordType("<2181,2182,91>",(b)); Inst31++; } } catch(e) {}
  }

try { if (Inst32 <= 1000 && typeof (b) != "undefined") {_RecordType("<2202,2203,94>",(b)); Inst32++; } } catch(e) {}
  1 | b;
  1;
try { if (Inst33 <= 1000 && typeof (b) != "undefined") {_RecordType("<2216,2217,96>",(b)); Inst33++; } } catch(e) {}
  1 & b;
  1;
try { if (Inst34 <= 1000 && typeof (b) != "undefined") {_RecordType("<2230,2231,98>",(b)); Inst34++; } } catch(e) {}
  1 ^ b;
  0;
try { if (Inst35 <= 1000 && typeof (b) != "undefined") {_RecordType("<2245,2246,100>",(b)); Inst35++; } } catch(e) {}
  1 << b;
  2;
try { if (Inst36 <= 1000 && typeof (b) != "undefined") {_RecordType("<2260,2261,102>",(b)); Inst36++; } } catch(e) {}
  1 >> b;
  0;
try { if (Inst37 <= 1000 && typeof (b) != "undefined") {_RecordType("<2276,2277,104>",(b)); Inst37++; } } catch(e) {}
  1 >>> b;
  0;
}

try { if (Inst38 <= 1000 && typeof (testBothSides) != "undefined") {_RecordType("<2296,2309,108>",(testBothSides)); Inst38++; } } catch(e) {}
function testBothSides() {
try { if (Inst39 <= 1000 && typeof (t) != "undefined") {_RecordType("<2320,2321,109>",(t)); Inst39++; } } catch(e) {}
  if (t) {
    a = true;
try { if (Inst40 <= 1000 && typeof (a) != "undefined") {_RecordType("<2329,2330,110>",(a)); Inst40++; } } catch(e) {}
  }

try { if (Inst41 <= 1000 && typeof (t) != "undefined") {_RecordType("<2350,2351,113>",(t)); Inst41++; } } catch(e) {}
  if (t) {
    b = false;
try { if (Inst42 <= 1000 && typeof (b) != "undefined") {_RecordType("<2359,2360,114>",(b)); Inst42++; } } catch(e) {}
  }

try { if (Inst43 <= 1000 && typeof (a) != "undefined") {_RecordType("<2377,2378,117>",(a)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (b) != "undefined") {_RecordType("<2381,2382,117>",(b)); Inst44++; } } catch(e) {}
  a | b;
  1;
try { if (Inst45 <= 1000 && typeof (a) != "undefined") {_RecordType("<2391,2392,119>",(a)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (b) != "undefined") {_RecordType("<2395,2396,119>",(b)); Inst46++; } } catch(e) {}
  a & b;
  0;
try { if (Inst47 <= 1000 && typeof (a) != "undefined") {_RecordType("<2405,2406,121>",(a)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (b) != "undefined") {_RecordType("<2409,2410,121>",(b)); Inst48++; } } catch(e) {}
  a ^ b;
  1;
try { if (Inst49 <= 1000 && typeof (a) != "undefined") {_RecordType("<2419,2420,123>",(a)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (b) != "undefined") {_RecordType("<2424,2425,123>",(b)); Inst50++; } } catch(e) {}
  a << b;
  1;
try { if (Inst51 <= 1000 && typeof (a) != "undefined") {_RecordType("<2434,2435,125>",(a)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (b) != "undefined") {_RecordType("<2439,2440,125>",(b)); Inst52++; } } catch(e) {}
  a >> b;
  1;
try { if (Inst53 <= 1000 && typeof (a) != "undefined") {_RecordType("<2449,2450,127>",(a)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (b) != "undefined") {_RecordType("<2455,2456,127>",(b)); Inst54++; } } catch(e) {}
  a >>> b;
  1;
}

try { if (Inst55 <= 1000 && typeof (testFalseLeftHandSide) != "undefined") {_RecordType("<2466,2487,131>",(testFalseLeftHandSide)); Inst55++; } } catch(e) {}
testFalseLeftHandSide();
try { if (Inst56 <= 1000 && typeof (testFalseRightHandSide) != "undefined") {_RecordType("<2491,2513,132>",(testFalseRightHandSide)); Inst56++; } } catch(e) {}
testFalseRightHandSide();
try { if (Inst57 <= 1000 && typeof (testTrueLeftHandSide) != "undefined") {_RecordType("<2517,2537,133>",(testTrueLeftHandSide)); Inst57++; } } catch(e) {}
testTrueLeftHandSide();
try { if (Inst58 <= 1000 && typeof (testTrueRightHandSide) != "undefined") {_RecordType("<2541,2562,134>",(testTrueRightHandSide)); Inst58++; } } catch(e) {}
testTrueRightHandSide();
try { if (Inst59 <= 1000 && typeof (testFalseLeftHandSide) != "undefined") {_RecordType("<2566,2587,135>",(testFalseLeftHandSide)); Inst59++; } } catch(e) {}
testFalseLeftHandSide();
try { if (Inst60 <= 1000 && typeof (testFalseRightHandSide) != "undefined") {_RecordType("<2591,2613,136>",(testFalseRightHandSide)); Inst60++; } } catch(e) {}
testFalseRightHandSide();
try { if (Inst61 <= 1000 && typeof (testTrueLeftHandSide) != "undefined") {_RecordType("<2617,2637,137>",(testTrueLeftHandSide)); Inst61++; } } catch(e) {}
testTrueLeftHandSide();
try { if (Inst62 <= 1000 && typeof (testTrueRightHandSide) != "undefined") {_RecordType("<2641,2662,138>",(testTrueRightHandSide)); Inst62++; } } catch(e) {}
testTrueRightHandSide();
try { if (Inst63 <= 1000 && typeof (testBothSides) != "undefined") {_RecordType("<2666,2679,139>",(testBothSides)); Inst63++; } } catch(e) {}
testBothSides();
try { if (Inst64 <= 1000 && typeof (testBothSides) != "undefined") {_RecordType("<2683,2696,140>",(testBothSides)); Inst64++; } } catch(e) {}
testBothSides();

