var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
var state = 'initial';
try { if (Inst0 <= 1000 && typeof (state) != "undefined") {_RecordType("<4,9,1>",(state)); Inst0++; } } catch(e) {}

try {
try { if (Inst1 <= 1000 && typeof (Error) != "undefined") {_RecordType("<42,47,4>",(Error)); Inst1++; } } catch(e) {}
  throw new Error('caught');
  state = 'unreachable';
try { if (Inst2 <= 1000 && typeof (state) != "undefined") {_RecordType("<61,66,5>",(state)); Inst2++; } } catch(e) {}
} catch {
  // Note the lack of a binding
try { if (Inst3 <= 1000 && typeof (state) != "undefined") {_RecordType("<128,133,8>",(state)); Inst3++; } } catch(e) {}
  state;
  'initial';
  state = 'caught';
try { if (Inst4 <= 1000 && typeof (state) != "undefined") {_RecordType("<150,155,10>",(state)); Inst4++; } } catch(e) {}
}

try { if (Inst5 <= 1000 && typeof (state) != "undefined") {_RecordType("<171,176,13>",(state)); Inst5++; } } catch(e) {}
state;
'caught';
var sigil1 = {};
try { if (Inst6 <= 1000 && typeof (sigil1) != "undefined") {_RecordType("<192,198,15>",(sigil1)); Inst6++; } } catch(e) {}

try { if (Inst8 <= 1000 && typeof (e) != "undefined") {_RecordType("<237,238,19>",(e)); Inst8++; } } catch(e) {}
try {
try { if (Inst7 <= 1000 && typeof (sigil1) != "undefined") {_RecordType("<220,226,18>",(sigil1)); Inst7++; } } catch(e) {}
  throw sigil1;
} catch (e) {
try { if (Inst9 <= 1000 && typeof (e) != "undefined") {_RecordType("<244,245,20>",(e)); Inst9++; } } catch(e) {}
  e;
try { if (Inst10 <= 1000 && typeof (sigil1) != "undefined") {_RecordType("<249,255,21>",(sigil1)); Inst10++; } } catch(e) {}
  sigil1;
}

var sigil2 = {};
try { if (Inst11 <= 1000 && typeof (sigil2) != "undefined") {_RecordType("<264,270,24>",(sigil2)); Inst11++; } } catch(e) {}
var reached = false;
try { if (Inst12 <= 1000 && typeof (reached) != "undefined") {_RecordType("<281,288,25>",(reached)); Inst12++; } } catch(e) {}

try { if (Inst16 <= 1000 && typeof (e) != "undefined") {_RecordType("<408,409,35>",(e)); Inst16++; } } catch(e) {}
try {
  try {
try { if (Inst13 <= 1000 && typeof (sigil1) != "undefined") {_RecordType("<323,329,29>",(sigil1)); Inst13++; } } catch(e) {}
    throw sigil1;
  } catch {
    reached = true;
try { if (Inst14 <= 1000 && typeof (reached) != "undefined") {_RecordType("<347,354,31>",(reached)); Inst14++; } } catch(e) {}
  } finally {
try { if (Inst15 <= 1000 && typeof (sigil2) != "undefined") {_RecordType("<387,393,33>",(sigil2)); Inst15++; } } catch(e) {}
    throw sigil2;
  }
} catch (e) {
try { if (Inst17 <= 1000 && typeof (e) != "undefined") {_RecordType("<415,416,36>",(e)); Inst17++; } } catch(e) {}
  e;
try { if (Inst18 <= 1000 && typeof (sigil2) != "undefined") {_RecordType("<420,426,37>",(sigil2)); Inst18++; } } catch(e) {}
  sigil2;
}

try { if (Inst19 <= 1000 && typeof (reached) != "undefined") {_RecordType("<431,438,40>",(reached)); Inst19++; } } catch(e) {}
reached;
true;

try { if (Inst20 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<458,471,43>",(reportCompare)); Inst20++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst21 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<492,505,44>",(reportCompare)); Inst21++; } } catch(e) {}
  reportCompare(0, 0);
}

