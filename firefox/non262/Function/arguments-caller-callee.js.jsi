var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/*
 * Any copyright is dedicated to the Public Domain.
 * http://creativecommons.org/licenses/publicdomain/
 */
var gTestfile = 'arguments-caller-callee.js';
try { if (Inst0 <= 1000 && typeof (gTestfile) != "undefined") {_RecordType("<116,125,5>",(gTestfile)); Inst0++; } } catch(e) {}
var BUGNUMBER = 514563;
try { if (Inst1 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<162,171,6>",(BUGNUMBER)); Inst1++; } } catch(e) {}
var summary = "arguments.caller and arguments.callee are poison pills in ES5, " + "later changed in ES2017 to only poison pill arguments.callee.";
try { if (Inst2 <= 1000 && typeof (summary) != "undefined") {_RecordType("<186,193,7>",(summary)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (print) != "undefined") {_RecordType("<329,334,8>",(print)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<335,344,8>",(BUGNUMBER)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (summary) != "undefined") {_RecordType("<354,361,8>",(summary)); Inst5++; } } catch(e) {}
print(BUGNUMBER + ": " + summary);
/**************
 * BEGIN TEST *
 **************/
// behavior

try { if (Inst6 <= 1000 && typeof (expectTypeError) != "undefined") {_RecordType("<435,450,14>",(expectTypeError)); Inst6++; } } catch(e) {}
function expectTypeError(fun) {
try { if (Inst7 <= 1000 && typeof (fun) != "undefined") {_RecordType("<451,454,14>",(fun)); Inst7++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (e) != "undefined") {_RecordType("<525,526,18>",(e)); Inst10++; } } catch(e) {}
  try {
try { if (Inst8 <= 1000 && typeof (fun) != "undefined") {_RecordType("<470,473,16>",(fun)); Inst8++; } } catch(e) {}
    fun();
try { if (Inst9 <= 1000 && typeof (Error) != "undefined") {_RecordType("<491,496,17>",(Error)); Inst9++; } } catch(e) {}
    throw new Error("didn't throw");
  } catch (e) {
try { if (Inst11 <= 1000 && typeof (e) != "undefined") {_RecordType("<534,535,19>",(e)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<547,556,19>",(TypeError)); Inst12++; } } catch(e) {}
    e instanceof TypeError;
    true;
try { if (Inst13 <= 1000 && typeof (fun) != "undefined") {_RecordType("<623,626,21>",(fun)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (fun.name) != "undefined") {_RecordType("<635,643,21>",(fun.name)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (fun) != "undefined") {_RecordType("<635,638,21>",(fun)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (e) != "undefined") {_RecordType("<672,673,21>",(e)); Inst16++; } } catch(e) {}
    "expected TypeError calling function" + ("name" in fun ? " " + fun.name : "") + ", instead got: " + e;
  }
}

try { if (Inst17 <= 1000 && typeof (bar) != "undefined") {_RecordType("<691,694,25>",(bar)); Inst17++; } } catch(e) {}
function bar() {
  "use strict";

try { if (Inst18 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<725,734,28>",(arguments)); Inst18++; } } catch(e) {}
  return arguments;
}

try { if (Inst19 <= 1000 && typeof (bar().caller) != "undefined") {_RecordType("<739,751,31>",(bar().caller)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (bar) != "undefined") {_RecordType("<739,742,31>",(bar)); Inst20++; } } catch(e) {}
bar().caller;
try { if (Inst21 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<753,762,32>",(undefined)); Inst21++; } } catch(e) {}
undefined;
// No error when accessing arguments.caller in ES2017+
try { if (Inst22 <= 1000 && typeof (expectTypeError) != "undefined") {_RecordType("<819,834,34>",(expectTypeError)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (barCallee) != "undefined") {_RecordType("<844,853,34>",(barCallee)); Inst23++; } } catch(e) {}
expectTypeError(function barCallee() {
try { if (Inst24 <= 1000 && typeof (bar().callee) != "undefined") {_RecordType("<860,872,35>",(bar().callee)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (bar) != "undefined") {_RecordType("<860,863,35>",(bar)); Inst25++; } } catch(e) {}
  bar().callee;
});

try { if (Inst26 <= 1000 && typeof (baz) != "undefined") {_RecordType("<888,891,38>",(baz)); Inst26++; } } catch(e) {}
function baz() {
try { if (Inst27 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<905,914,39>",(arguments)); Inst27++; } } catch(e) {}
  return arguments;
}

try { if (Inst28 <= 1000 && typeof (baz().callee) != "undefined") {_RecordType("<919,931,42>",(baz().callee)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (baz) != "undefined") {_RecordType("<919,922,42>",(baz)); Inst29++; } } catch(e) {}
baz().callee;
try { if (Inst30 <= 1000 && typeof (baz) != "undefined") {_RecordType("<933,936,43>",(baz)); Inst30++; } } catch(e) {}
baz();

// accessor identity
try { if (Inst31 <= 1000 && typeof (strictMode) != "undefined") {_RecordType("<971,981,46>",(strictMode)); Inst31++; } } catch(e) {}
function strictMode() {
  "use strict";

try { if (Inst32 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<1012,1021,49>",(arguments)); Inst32++; } } catch(e) {}
  return arguments;
}

try { if (Inst34 <= 1000 && typeof (Object.getOwnPropertyDescriptor(strictMode(), "callee").get) != "undefined") {_RecordType("<1045,1104,52>",(Object.getOwnPropertyDescriptor(strictMode(), "callee").get)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<1045,1076,52>",(Object.getOwnPropertyDescriptor)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1045,1051,52>",(Object)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (strictMode) != "undefined") {_RecordType("<1077,1087,52>",(strictMode)); Inst37++; } } catch(e) {}
var canonicalTTE = Object.getOwnPropertyDescriptor(strictMode(), "callee").get;
try { if (Inst33 <= 1000 && typeof (canonicalTTE) != "undefined") {_RecordType("<1030,1042,52>",(canonicalTTE)); Inst33++; } } catch(e) {}
try { if (Inst39 <= 1000 && typeof (strictMode) != "undefined") {_RecordType("<1117,1127,53>",(strictMode)); Inst39++; } } catch(e) {}
var args = strictMode();
try { if (Inst38 <= 1000 && typeof (args) != "undefined") {_RecordType("<1110,1114,53>",(args)); Inst38++; } } catch(e) {}
try { if (Inst41 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<1148,1179,54>",(Object.getOwnPropertyDescriptor)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1148,1154,54>",(Object)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (args) != "undefined") {_RecordType("<1180,1184,54>",(args)); Inst43++; } } catch(e) {}
var argsCaller = Object.getOwnPropertyDescriptor(args, "caller");
try { if (Inst40 <= 1000 && typeof (argsCaller) != "undefined") {_RecordType("<1135,1145,54>",(argsCaller)); Inst40++; } } catch(e) {}
try { if (Inst44 <= 1000 && typeof (argsCaller) != "undefined") {_RecordType("<1197,1207,55>",(argsCaller)); Inst44++; } } catch(e) {}
argsCaller;
try { if (Inst45 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<1209,1218,56>",(undefined)); Inst45++; } } catch(e) {}
undefined;
try { if (Inst47 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<1237,1268,57>",(Object.getOwnPropertyDescriptor)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1237,1243,57>",(Object)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (args) != "undefined") {_RecordType("<1269,1273,57>",(args)); Inst49++; } } catch(e) {}
var argsCallee = Object.getOwnPropertyDescriptor(args, "callee");
try { if (Inst46 <= 1000 && typeof (argsCallee) != "undefined") {_RecordType("<1224,1234,57>",(argsCallee)); Inst46++; } } catch(e) {}
try { if (Inst50 <= 1000 && typeof (argsCallee) != "undefined") {_RecordType("<1295,1305,58>",(argsCallee)); Inst50++; } } catch(e) {}
"get" in argsCallee;
true;
try { if (Inst51 <= 1000 && typeof (argsCallee) != "undefined") {_RecordType("<1322,1332,60>",(argsCallee)); Inst51++; } } catch(e) {}
"set" in argsCallee;
true;
try { if (Inst52 <= 1000 && typeof (argsCallee.get) != "undefined") {_RecordType("<1340,1354,62>",(argsCallee.get)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (argsCallee) != "undefined") {_RecordType("<1340,1350,62>",(argsCallee)); Inst53++; } } catch(e) {}
argsCallee.get;
try { if (Inst54 <= 1000 && typeof (canonicalTTE) != "undefined") {_RecordType("<1356,1368,63>",(canonicalTTE)); Inst54++; } } catch(e) {}
canonicalTTE;
try { if (Inst55 <= 1000 && typeof (argsCallee.set) != "undefined") {_RecordType("<1370,1384,64>",(argsCallee.set)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (argsCallee) != "undefined") {_RecordType("<1370,1380,64>",(argsCallee)); Inst56++; } } catch(e) {}
argsCallee.set;
try { if (Inst57 <= 1000 && typeof (canonicalTTE) != "undefined") {_RecordType("<1386,1398,65>",(canonicalTTE)); Inst57++; } } catch(e) {}
canonicalTTE;

/******************************************************************************/
try { if (Inst58 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1493,1506,68>",(reportCompare)); Inst58++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst59 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1527,1540,69>",(reportCompare)); Inst59++; } } catch(e) {}
  reportCompare(true, true);
}

try { if (Inst60 <= 1000 && typeof (print) != "undefined") {_RecordType("<1557,1562,72>",(print)); Inst60++; } } catch(e) {}
print("All tests passed!");

