var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/*
 * Any copyright is dedicated to the Public Domain.
 * http://creativecommons.org/licenses/publicdomain/
 */
var BUGNUMBER = 524826;
try { if (Inst0 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<116,125,5>",(BUGNUMBER)); Inst0++; } } catch(e) {}
var summary = 'null-closure property initialiser mis-brands object literal scope';
try { if (Inst1 <= 1000 && typeof (summary) != "undefined") {_RecordType("<140,147,6>",(summary)); Inst1++; } } catch(e) {}
var actual;
try { if (Inst2 <= 1000 && typeof (actual) != "undefined") {_RecordType("<223,229,7>",(actual)); Inst2++; } } catch(e) {}
var expect;
try { if (Inst3 <= 1000 && typeof (expect) != "undefined") {_RecordType("<235,241,8>",(expect)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (printBugNumber) != "undefined") {_RecordType("<243,257,9>",(printBugNumber)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<258,267,9>",(BUGNUMBER)); Inst5++; } } catch(e) {}
printBugNumber(BUGNUMBER);
try { if (Inst6 <= 1000 && typeof (printStatus) != "undefined") {_RecordType("<270,281,10>",(printStatus)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (summary) != "undefined") {_RecordType("<282,289,10>",(summary)); Inst7++; } } catch(e) {}
printStatus(summary);

try { if (Inst8 <= 1000 && typeof (make) != "undefined") {_RecordType("<302,306,12>",(make)); Inst8++; } } catch(e) {}
function make(g) {
try { if (Inst9 <= 1000 && typeof (g) != "undefined") {_RecordType("<307,308,12>",(g)); Inst9++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (g) != "undefined") {_RecordType("<383,384,17>",(g)); Inst15++; } } catch(e) {}
  var o = {
    f: function (a, b) {
try { if (Inst11 <= 1000 && typeof (a) != "undefined") {_RecordType("<341,342,14>",(a)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (b) != "undefined") {_RecordType("<344,345,14>",(b)); Inst12++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (a) != "undefined") {_RecordType("<362,363,15>",(a)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (b) != "undefined") {_RecordType("<366,367,15>",(b)); Inst14++; } } catch(e) {}
      return a * b;
    },
    g: g
  };
try { if (Inst10 <= 1000 && typeof (o) != "undefined") {_RecordType("<318,319,13>",(o)); Inst10++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (o) != "undefined") {_RecordType("<399,400,19>",(o)); Inst16++; } } catch(e) {}
  return o;
}

var z = -1;
try { if (Inst17 <= 1000 && typeof (z) != "undefined") {_RecordType("<409,410,22>",(z)); Inst17++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (make) != "undefined") {_RecordType("<425,429,23>",(make)); Inst19++; } } catch(e) {}
var x = make(function (c) {
try { if (Inst20 <= 1000 && typeof (c) != "undefined") {_RecordType("<440,441,23>",(c)); Inst20++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (c) != "undefined") {_RecordType("<454,455,24>",(c)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (z) != "undefined") {_RecordType("<458,459,24>",(z)); Inst22++; } } catch(e) {}
  return c * z;
});
try { if (Inst18 <= 1000 && typeof (x) != "undefined") {_RecordType("<421,422,23>",(x)); Inst18++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (make) != "undefined") {_RecordType("<473,477,26>",(make)); Inst24++; } } catch(e) {}
var y = make(function (c) {
try { if (Inst25 <= 1000 && typeof (c) != "undefined") {_RecordType("<488,489,26>",(c)); Inst25++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (c) != "undefined") {_RecordType("<503,504,27>",(c)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (z) != "undefined") {_RecordType("<507,508,27>",(z)); Inst27++; } } catch(e) {}
  return -c * z;
});
try { if (Inst23 <= 1000 && typeof (y) != "undefined") {_RecordType("<469,470,26>",(y)); Inst23++; } } catch(e) {}

try { if (Inst28 <= 1000 && typeof (callg) != "undefined") {_RecordType("<524,529,30>",(callg)); Inst28++; } } catch(e) {}
function callg(o, c) {
try { if (Inst29 <= 1000 && typeof (o) != "undefined") {_RecordType("<530,531,30>",(o)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (c) != "undefined") {_RecordType("<533,534,30>",(c)); Inst30++; } } catch(e) {}
try { if (Inst31 <= 1000 && typeof (o.g) != "undefined") {_RecordType("<547,550,31>",(o.g)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (o) != "undefined") {_RecordType("<547,548,31>",(o)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (c) != "undefined") {_RecordType("<551,552,31>",(c)); Inst33++; } } catch(e) {}
  return o.g(c);
}

;
try { if (Inst35 <= 1000 && typeof (callg) != "undefined") {_RecordType("<569,574,35>",(callg)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (x) != "undefined") {_RecordType("<575,576,35>",(x)); Inst36++; } } catch(e) {}
actual = callg(x, 1);
try { if (Inst34 <= 1000 && typeof (actual) != "undefined") {_RecordType("<560,566,35>",(actual)); Inst34++; } } catch(e) {}
try { if (Inst38 <= 1000 && typeof (callg) != "undefined") {_RecordType("<592,597,36>",(callg)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (y) != "undefined") {_RecordType("<598,599,36>",(y)); Inst39++; } } catch(e) {}
expect = -callg(y, 1);
try { if (Inst37 <= 1000 && typeof (expect) != "undefined") {_RecordType("<582,588,36>",(expect)); Inst37++; } } catch(e) {}
try { if (Inst40 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<605,618,37>",(reportCompare)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (expect) != "undefined") {_RecordType("<619,625,37>",(expect)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (actual) != "undefined") {_RecordType("<627,633,37>",(actual)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (summary) != "undefined") {_RecordType("<635,642,37>",(summary)); Inst43++; } } catch(e) {}
reportCompare(expect, actual, summary);
try { if (Inst44 <= 1000 && typeof (printStatus) != "undefined") {_RecordType("<645,656,38>",(printStatus)); Inst44++; } } catch(e) {}
printStatus("All tests passed!");

