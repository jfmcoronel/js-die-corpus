var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Test that var declarations of arguments "shadows" the arguments binding
// used in parameter expressions.
try { if (Inst0 <= 1000 && typeof (g8) != "undefined") {_RecordType("<118,120,3>",(g8)); Inst0++; } } catch(e) {}
function g8(h = () => arguments) {
try { if (Inst1 <= 1000 && typeof (h) != "undefined") {_RecordType("<121,122,3>",(h)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<131,140,3>",(arguments)); Inst2++; } } catch(e) {}
  var arguments = 0;
try { if (Inst3 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<150,159,4>",(arguments)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<167,176,5>",(arguments)); Inst4++; } } catch(e) {}
  arguments;
  0;
try { if (Inst5 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<185,194,7>",(arguments)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (h) != "undefined") {_RecordType("<199,200,7>",(h)); Inst6++; } } catch(e) {}
  arguments === h();
  false;
}

try { if (Inst7 <= 1000 && typeof (g8) != "undefined") {_RecordType("<216,218,11>",(g8)); Inst7++; } } catch(e) {}
g8();

try { if (Inst8 <= 1000 && typeof (g9) != "undefined") {_RecordType("<232,234,13>",(g9)); Inst8++; } } catch(e) {}
function g9(h = () => arguments) {
try { if (Inst9 <= 1000 && typeof (h) != "undefined") {_RecordType("<235,236,13>",(h)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<245,254,13>",(arguments)); Inst10++; } } catch(e) {}
  var arguments;
try { if (Inst11 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<264,273,14>",(arguments)); Inst11++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<288,297,15>",(arguments)); Inst12++; } } catch(e) {}
  void 0 === arguments;
  false;
try { if (Inst13 <= 1000 && typeof (h) != "undefined") {_RecordType("<310,311,17>",(h)); Inst13++; } } catch(e) {}
  h();
try { if (Inst14 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<317,326,18>",(arguments)); Inst14++; } } catch(e) {}
  arguments;
  arguments = 0;
try { if (Inst15 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<330,339,19>",(arguments)); Inst15++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<347,356,20>",(arguments)); Inst16++; } } catch(e) {}
  arguments;
  0;
try { if (Inst17 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<365,374,22>",(arguments)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (h) != "undefined") {_RecordType("<379,380,22>",(h)); Inst18++; } } catch(e) {}
  arguments === h();
  false;
}

try { if (Inst19 <= 1000 && typeof (g9) != "undefined") {_RecordType("<396,398,26>",(g9)); Inst19++; } } catch(e) {}
g9();

try { if (Inst20 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<414,427,28>",(reportCompare)); Inst20++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst21 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<448,461,29>",(reportCompare)); Inst21++; } } catch(e) {}
  reportCompare(true, true);
}

