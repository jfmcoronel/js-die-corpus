var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
var BUGNUMBER = 1202134;
try { if (Inst0 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<4,13,1>",(BUGNUMBER)); Inst0++; } } catch(e) {}
var summary = "Return value should not be overwritten by finally block with normal execution.";
try { if (Inst1 <= 1000 && typeof (summary) != "undefined") {_RecordType("<29,36,2>",(summary)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (print) != "undefined") {_RecordType("<121,126,3>",(print)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<127,136,3>",(BUGNUMBER)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (summary) != "undefined") {_RecordType("<146,153,3>",(summary)); Inst4++; } } catch(e) {}
print(BUGNUMBER + ": " + summary); // ==== single ====

var f;
try { if (Inst5 <= 1000 && typeof (f) != "undefined") {_RecordType("<181,182,5>",(f)); Inst5++; } } catch(e) {}

f = function () {
  // F.[[type]] is normal
  // B.[[type]] is return
  try {
    return 42;
  } finally {
    ;
  }
};
try { if (Inst6 <= 1000 && typeof (f) != "undefined") {_RecordType("<185,186,7>",(f)); Inst6++; } } catch(e) {}

try { if (Inst7 <= 1000 && typeof (f) != "undefined") {_RecordType("<306,307,17>",(f)); Inst7++; } } catch(e) {}
f();
42;

f = function () {
  // F.[[type]] is return
  try {
    return 42;
  } finally {
    return 43;
  }
};
try { if (Inst8 <= 1000 && typeof (f) != "undefined") {_RecordType("<316,317,20>",(f)); Inst8++; } } catch(e) {}

try { if (Inst9 <= 1000 && typeof (f) != "undefined") {_RecordType("<420,421,29>",(f)); Inst9++; } } catch(e) {}
f();
43;

f = function () {
  // F.[[type]] is throw
  try {
    return 42;
  } finally {
    throw 43;
  }
};
try { if (Inst10 <= 1000 && typeof (f) != "undefined") {_RecordType("<430,431,32>",(f)); Inst10++; } } catch(e) {}

var caught = false;
try { if (Inst11 <= 1000 && typeof (caught) != "undefined") {_RecordType("<536,542,41>",(caught)); Inst11++; } } catch(e) {}

try { if (Inst13 <= 1000 && typeof (e) != "undefined") {_RecordType("<575,576,45>",(e)); Inst13++; } } catch(e) {}
try {
try { if (Inst12 <= 1000 && typeof (f) != "undefined") {_RecordType("<561,562,44>",(f)); Inst12++; } } catch(e) {}
  f();
} catch (e) {
try { if (Inst14 <= 1000 && typeof (e) != "undefined") {_RecordType("<582,583,46>",(e)); Inst14++; } } catch(e) {}
  e;
  43;
  caught = true;
try { if (Inst15 <= 1000 && typeof (caught) != "undefined") {_RecordType("<593,599,48>",(caught)); Inst15++; } } catch(e) {}
}

try { if (Inst16 <= 1000 && typeof (caught) != "undefined") {_RecordType("<611,617,51>",(caught)); Inst16++; } } catch(e) {}
caught;
true;

f = function () {
  // F.[[type]] is break
  do {
    try {
      return 42;
    } finally {
      break;
    }
  } while (false);

  return 43;
};
try { if (Inst17 <= 1000 && typeof (f) != "undefined") {_RecordType("<626,627,54>",(f)); Inst17++; } } catch(e) {}

try { if (Inst18 <= 1000 && typeof (f) != "undefined") {_RecordType("<775,776,67>",(f)); Inst18++; } } catch(e) {}
f();
43;

f = function () {
  // F.[[type]] is break
try { if (Inst20 <= 1000 && typeof (L) != "undefined") {_RecordType("<830,831,72>",(L)); Inst20++; } } catch(e) {}
  L: try {
    return 42;
  } finally {
try { if (Inst21 <= 1000 && typeof (L) != "undefined") {_RecordType("<878,879,75>",(L)); Inst21++; } } catch(e) {}
    break L;
  }

  return 43;
};
try { if (Inst19 <= 1000 && typeof (f) != "undefined") {_RecordType("<785,786,70>",(f)); Inst19++; } } catch(e) {}

try { if (Inst22 <= 1000 && typeof (f) != "undefined") {_RecordType("<903,904,81>",(f)); Inst22++; } } catch(e) {}
f();
43;

f = function () {
  // F.[[type]] is continue
  do {
    try {
      return 42;
    } finally {
      continue;
    }
  } while (false);

  return 43;
};
try { if (Inst23 <= 1000 && typeof (f) != "undefined") {_RecordType("<913,914,84>",(f)); Inst23++; } } catch(e) {}

try { if (Inst24 <= 1000 && typeof (f) != "undefined") {_RecordType("<1068,1069,97>",(f)); Inst24++; } } catch(e) {}
f();
43;

// ==== nested ====
f = function () {
  // F.[[type]] is normal
  // B.[[type]] is return
  try {
    return 42;
  } finally {
    // F.[[type]] is break
    do {
      try {
        return 43;
      } finally {
        break;
      }
    } while (0);
  }
};
try { if (Inst25 <= 1000 && typeof (f) != "undefined") {_RecordType("<1098,1099,101>",(f)); Inst25++; } } catch(e) {}

try { if (Inst26 <= 1000 && typeof (f) != "undefined") {_RecordType("<1338,1339,118>",(f)); Inst26++; } } catch(e) {}
f();
42;

f = function () {
  // F.[[type]] is normal
  // B.[[type]] is return
  try {
    return 42;
  } finally {
    // F.[[type]] is break
try { if (Inst28 <= 1000 && typeof (L) != "undefined") {_RecordType("<1486,1487,128>",(L)); Inst28++; } } catch(e) {}
    L: try {
      return 43;
    } finally {
try { if (Inst29 <= 1000 && typeof (L) != "undefined") {_RecordType("<1540,1541,131>",(L)); Inst29++; } } catch(e) {}
      break L;
    }
  }
};
try { if (Inst27 <= 1000 && typeof (f) != "undefined") {_RecordType("<1348,1349,121>",(f)); Inst27++; } } catch(e) {}

try { if (Inst30 <= 1000 && typeof (f) != "undefined") {_RecordType("<1557,1558,136>",(f)); Inst30++; } } catch(e) {}
f();
42;

f = function () {
  // F.[[type]] is normal
  // B.[[type]] is return
  try {
    return 42;
  } finally {
    // F.[[type]] is continue
    do {
      try {
        return 43;
      } finally {
        continue;
      }
    } while (0);
  }
};
try { if (Inst31 <= 1000 && typeof (f) != "undefined") {_RecordType("<1567,1568,139>",(f)); Inst31++; } } catch(e) {}

try { if (Inst32 <= 1000 && typeof (f) != "undefined") {_RecordType("<1813,1814,156>",(f)); Inst32++; } } catch(e) {}
f();
42;

f = function () {
  // F.[[type]] is normal
  // B.[[type]] is return
  try {
    return 42;
  } finally {
    // F.[[type]] is normal
    // B.[[type]] is normal
try { if (Inst34 <= 1000 && typeof (e) != "undefined") {_RecordType("<2112,2113,174>",(e)); Inst34++; } } catch(e) {}
    try {
      // F.[[type]] is throw
      try {
        return 43;
      } finally {
        throw 9;
      }
    } catch (e) {
      ;
    }
  }
};
try { if (Inst33 <= 1000 && typeof (f) != "undefined") {_RecordType("<1823,1824,159>",(f)); Inst33++; } } catch(e) {}

try { if (Inst35 <= 1000 && typeof (f) != "undefined") {_RecordType("<2139,2140,180>",(f)); Inst35++; } } catch(e) {}
f();
42;

f = function () {
  // F.[[type]] is return
  try {
    return 41;
  } finally {
    // F.[[type]] is normal
    // B.[[type]] is return
    try {
      return 42;
    } finally {
      // F.[[type]] is break
      do {
        try {
          return 43;
        } finally {
          break;
        }
      } while (0);
    }
  }
};
try { if (Inst36 <= 1000 && typeof (f) != "undefined") {_RecordType("<2149,2150,183>",(f)); Inst36++; } } catch(e) {}

try { if (Inst37 <= 1000 && typeof (f) != "undefined") {_RecordType("<2484,2485,205>",(f)); Inst37++; } } catch(e) {}
f();
42;

try { if (Inst38 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<2505,2518,208>",(reportCompare)); Inst38++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst39 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<2539,2552,209>",(reportCompare)); Inst39++; } } catch(e) {}
  reportCompare(true, true);
}

