var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* -*- indent-tabs-mode: nil; js-indent-level: 2 -*- */

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
//-----------------------------------------------------------------------------
var BUGNUMBER = 313570;
try { if (Inst0 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<346,355,7>",(BUGNUMBER)); Inst0++; } } catch(e) {}
var summary = 'length of objects whose prototype chain includes a function';
try { if (Inst1 <= 1000 && typeof (summary) != "undefined") {_RecordType("<370,377,8>",(summary)); Inst1++; } } catch(e) {}
var actual = '';
try { if (Inst2 <= 1000 && typeof (actual) != "undefined") {_RecordType("<447,453,9>",(actual)); Inst2++; } } catch(e) {}
var expect = '';
try { if (Inst3 <= 1000 && typeof (expect) != "undefined") {_RecordType("<464,470,10>",(expect)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (printBugNumber) != "undefined") {_RecordType("<477,491,11>",(printBugNumber)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<492,501,11>",(BUGNUMBER)); Inst5++; } } catch(e) {}
printBugNumber(BUGNUMBER);
try { if (Inst6 <= 1000 && typeof (printStatus) != "undefined") {_RecordType("<504,515,12>",(printStatus)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (summary) != "undefined") {_RecordType("<516,523,12>",(summary)); Inst7++; } } catch(e) {}
printStatus(summary);

try { if (Inst8 <= 1000 && typeof (tmp) != "undefined") {_RecordType("<536,539,14>",(tmp)); Inst8++; } } catch(e) {}
function tmp() {
  ;
}

tmp.prototype = function (a, b, c) {
try { if (Inst11 <= 1000 && typeof (a) != "undefined") {_RecordType("<577,578,18>",(a)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (b) != "undefined") {_RecordType("<580,581,18>",(b)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (c) != "undefined") {_RecordType("<583,584,18>",(c)); Inst13++; } } catch(e) {}
  ;
};
try { if (Inst9 <= 1000 && typeof (tmp.prototype) != "undefined") {_RecordType("<551,564,18>",(tmp.prototype)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (tmp) != "undefined") {_RecordType("<551,554,18>",(tmp)); Inst10++; } } catch(e) {}

try { if (Inst15 <= 1000 && typeof (tmp) != "undefined") {_RecordType("<610,613,22>",(tmp)); Inst15++; } } catch(e) {}
var obj = new tmp(); // arity
try { if (Inst14 <= 1000 && typeof (obj) != "undefined") {_RecordType("<600,603,22>",(obj)); Inst14++; } } catch(e) {}

expect = 3;
try { if (Inst16 <= 1000 && typeof (expect) != "undefined") {_RecordType("<627,633,24>",(expect)); Inst16++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (obj.length) != "undefined") {_RecordType("<648,658,25>",(obj.length)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (obj) != "undefined") {_RecordType("<648,651,25>",(obj)); Inst19++; } } catch(e) {}
actual = obj.length;
try { if (Inst17 <= 1000 && typeof (actual) != "undefined") {_RecordType("<639,645,25>",(actual)); Inst17++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<660,673,26>",(reportCompare)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (expect) != "undefined") {_RecordType("<674,680,26>",(expect)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (actual) != "undefined") {_RecordType("<682,688,26>",(actual)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (summary) != "undefined") {_RecordType("<690,697,26>",(summary)); Inst23++; } } catch(e) {}
reportCompare(expect, actual, summary + ': arity'); // immutable

obj.length = 10;
try { if (Inst24 <= 1000 && typeof (obj.length) != "undefined") {_RecordType("<726,736,28>",(obj.length)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (obj) != "undefined") {_RecordType("<726,729,28>",(obj)); Inst25++; } } catch(e) {}
expect = 3;
try { if (Inst26 <= 1000 && typeof (expect) != "undefined") {_RecordType("<743,749,29>",(expect)); Inst26++; } } catch(e) {}
try { if (Inst28 <= 1000 && typeof (obj.length) != "undefined") {_RecordType("<764,774,30>",(obj.length)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (obj) != "undefined") {_RecordType("<764,767,30>",(obj)); Inst29++; } } catch(e) {}
actual = obj.length;
try { if (Inst27 <= 1000 && typeof (actual) != "undefined") {_RecordType("<755,761,30>",(actual)); Inst27++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<776,789,31>",(reportCompare)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (expect) != "undefined") {_RecordType("<790,796,31>",(expect)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (actual) != "undefined") {_RecordType("<798,804,31>",(actual)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (summary) != "undefined") {_RecordType("<806,813,31>",(summary)); Inst33++; } } catch(e) {}
reportCompare(expect, actual, summary + ': immutable');

