var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* -*- indent-tabs-mode: nil; js-indent-level: 2 -*- */

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

/*
 * Date: 08 August 2001
 *
 * SUMMARY: When we invoke a function, the arguments object should take
 *          a back seat to any local identifier named "arguments".
 *
 * See http://bugzilla.mozilla.org/show_bug.cgi?id=94506
 */
//-----------------------------------------------------------------------------
var UBound = 0;
try { if (Inst0 <= 1000 && typeof (UBound) != "undefined") {_RecordType("<580,586,16>",(UBound)); Inst0++; } } catch(e) {}
var BUGNUMBER = 94506;
try { if (Inst1 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<596,605,17>",(BUGNUMBER)); Inst1++; } } catch(e) {}
var summary = 'Testing functions employing identifiers named "arguments"';
try { if (Inst2 <= 1000 && typeof (summary) != "undefined") {_RecordType("<619,626,18>",(summary)); Inst2++; } } catch(e) {}
var status = '';
try { if (Inst3 <= 1000 && typeof (status) != "undefined") {_RecordType("<694,700,19>",(status)); Inst3++; } } catch(e) {}
var statusitems = [];
try { if (Inst4 <= 1000 && typeof (statusitems) != "undefined") {_RecordType("<711,722,20>",(statusitems)); Inst4++; } } catch(e) {}
var actual = '';
try { if (Inst5 <= 1000 && typeof (actual) != "undefined") {_RecordType("<733,739,21>",(actual)); Inst5++; } } catch(e) {}
var actualvalues = [];
try { if (Inst6 <= 1000 && typeof (actualvalues) != "undefined") {_RecordType("<750,762,22>",(actualvalues)); Inst6++; } } catch(e) {}
var expect = '';
try { if (Inst7 <= 1000 && typeof (expect) != "undefined") {_RecordType("<773,779,23>",(expect)); Inst7++; } } catch(e) {}
var expectedvalues = [];
try { if (Inst8 <= 1000 && typeof (expectedvalues) != "undefined") {_RecordType("<790,804,24>",(expectedvalues)); Inst8++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (Object) != "undefined") {_RecordType("<840,846,25>",(Object)); Inst10++; } } catch(e) {}
var TYPE_OBJECT = typeof new Object();
try { if (Inst9 <= 1000 && typeof (TYPE_OBJECT) != "undefined") {_RecordType("<815,826,25>",(TYPE_OBJECT)); Inst9++; } } catch(e) {}
var arguments = 5555; // use a parameter named "arguments"
try { if (Inst11 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<854,863,26>",(arguments)); Inst11++; } } catch(e) {}

try { if (Inst12 <= 1000 && typeof (F1) != "undefined") {_RecordType("<919,921,28>",(F1)); Inst12++; } } catch(e) {}
function F1(arguments) {
try { if (Inst13 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<922,931,28>",(arguments)); Inst13++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<944,953,29>",(arguments)); Inst14++; } } catch(e) {}
  return arguments;
} // use a local variable named "arguments"


try { if (Inst15 <= 1000 && typeof (F2) != "undefined") {_RecordType("<1010,1012,33>",(F2)); Inst15++; } } catch(e) {}
function F2() {
  var arguments = 55;
try { if (Inst16 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<1023,1032,34>",(arguments)); Inst16++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<1048,1057,35>",(arguments)); Inst17++; } } catch(e) {}
  return arguments;
} // same thing in a different order. CHANGES THE RESULT!


try { if (Inst18 <= 1000 && typeof (F3) != "undefined") {_RecordType("<1128,1130,39>",(F3)); Inst18++; } } catch(e) {}
function F3() {
try { if (Inst19 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<1144,1153,40>",(arguments)); Inst19++; } } catch(e) {}
  return arguments;
  var arguments = 555;
try { if (Inst20 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<1161,1170,41>",(arguments)); Inst20++; } } catch(e) {}
} // use the global variable above named "arguments"


try { if (Inst21 <= 1000 && typeof (F4) != "undefined") {_RecordType("<1242,1244,45>",(F4)); Inst21++; } } catch(e) {}
function F4() {
try { if (Inst22 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<1258,1267,46>",(arguments)); Inst22++; } } catch(e) {}
  return arguments;
}
/*
 * In Sections 1 and 2, expect the local identifier, not the arguments object.
 * In Sections 3 and 4, expect the arguments object, not the the identifier.
 */


status = 'Section 1 of test';
try { if (Inst23 <= 1000 && typeof (status) != "undefined") {_RecordType("<1436,1442,54>",(status)); Inst23++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (F1) != "undefined") {_RecordType("<1475,1477,55>",(F1)); Inst25++; } } catch(e) {}
actual = F1(5);
try { if (Inst24 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1466,1472,55>",(actual)); Inst24++; } } catch(e) {}
expect = 5;
try { if (Inst26 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1482,1488,56>",(expect)); Inst26++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (addThis) != "undefined") {_RecordType("<1494,1501,57>",(addThis)); Inst27++; } } catch(e) {}
addThis();
status = 'Section 2 of test';
try { if (Inst28 <= 1000 && typeof (status) != "undefined") {_RecordType("<1505,1511,58>",(status)); Inst28++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (F2) != "undefined") {_RecordType("<1544,1546,59>",(F2)); Inst30++; } } catch(e) {}
actual = F2();
try { if (Inst29 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1535,1541,59>",(actual)); Inst29++; } } catch(e) {}
expect = 55;
try { if (Inst31 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1550,1556,60>",(expect)); Inst31++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (addThis) != "undefined") {_RecordType("<1563,1570,61>",(addThis)); Inst32++; } } catch(e) {}
addThis();
status = 'Section 3 of test';
try { if (Inst33 <= 1000 && typeof (status) != "undefined") {_RecordType("<1574,1580,62>",(status)); Inst33++; } } catch(e) {}
try { if (Inst35 <= 1000 && typeof (F3) != "undefined") {_RecordType("<1620,1622,63>",(F3)); Inst35++; } } catch(e) {}
actual = typeof F3();
try { if (Inst34 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1604,1610,63>",(actual)); Inst34++; } } catch(e) {}
try { if (Inst37 <= 1000 && typeof (TYPE_OBJECT) != "undefined") {_RecordType("<1635,1646,64>",(TYPE_OBJECT)); Inst37++; } } catch(e) {}
expect = TYPE_OBJECT;
try { if (Inst36 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1626,1632,64>",(expect)); Inst36++; } } catch(e) {}
try { if (Inst38 <= 1000 && typeof (addThis) != "undefined") {_RecordType("<1648,1655,65>",(addThis)); Inst38++; } } catch(e) {}
addThis();
status = 'Section 4 of test';
try { if (Inst39 <= 1000 && typeof (status) != "undefined") {_RecordType("<1659,1665,66>",(status)); Inst39++; } } catch(e) {}
try { if (Inst41 <= 1000 && typeof (F4) != "undefined") {_RecordType("<1705,1707,67>",(F4)); Inst41++; } } catch(e) {}
actual = typeof F4();
try { if (Inst40 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1689,1695,67>",(actual)); Inst40++; } } catch(e) {}
try { if (Inst43 <= 1000 && typeof (TYPE_OBJECT) != "undefined") {_RecordType("<1720,1731,68>",(TYPE_OBJECT)); Inst43++; } } catch(e) {}
expect = TYPE_OBJECT;
try { if (Inst42 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1711,1717,68>",(expect)); Inst42++; } } catch(e) {}
try { if (Inst44 <= 1000 && typeof (addThis) != "undefined") {_RecordType("<1733,1740,69>",(addThis)); Inst44++; } } catch(e) {}
addThis(); // Let's try calling F1 without providing a parameter -

status = 'Section 5 of test';
try { if (Inst45 <= 1000 && typeof (status) != "undefined") {_RecordType("<1801,1807,71>",(status)); Inst45++; } } catch(e) {}
try { if (Inst47 <= 1000 && typeof (F1) != "undefined") {_RecordType("<1840,1842,72>",(F1)); Inst47++; } } catch(e) {}
actual = F1();
try { if (Inst46 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1831,1837,72>",(actual)); Inst46++; } } catch(e) {}
try { if (Inst49 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<1855,1864,73>",(undefined)); Inst49++; } } catch(e) {}
expect = undefined;
try { if (Inst48 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1846,1852,73>",(expect)); Inst48++; } } catch(e) {}
try { if (Inst50 <= 1000 && typeof (addThis) != "undefined") {_RecordType("<1866,1873,74>",(addThis)); Inst50++; } } catch(e) {}
addThis(); // Let's try calling F1 with too many parameters -

status = 'Section 6 of test';
try { if (Inst51 <= 1000 && typeof (status) != "undefined") {_RecordType("<1929,1935,76>",(status)); Inst51++; } } catch(e) {}
try { if (Inst53 <= 1000 && typeof (F1) != "undefined") {_RecordType("<1968,1970,77>",(F1)); Inst53++; } } catch(e) {}
actual = F1(3, 33, 333);
try { if (Inst52 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1959,1965,77>",(actual)); Inst52++; } } catch(e) {}
expect = 3;
try { if (Inst54 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1984,1990,78>",(expect)); Inst54++; } } catch(e) {}
try { if (Inst55 <= 1000 && typeof (addThis) != "undefined") {_RecordType("<1996,2003,79>",(addThis)); Inst55++; } } catch(e) {}
addThis(); //-----------------------------------------------------------------------------

try { if (Inst56 <= 1000 && typeof (test) != "undefined") {_RecordType("<2088,2092,81>",(test)); Inst56++; } } catch(e) {}
test(); //-----------------------------------------------------------------------------

try { if (Inst57 <= 1000 && typeof (addThis) != "undefined") {_RecordType("<2186,2193,83>",(addThis)); Inst57++; } } catch(e) {}
function addThis() {
try { if (Inst60 <= 1000 && typeof (status) != "undefined") {_RecordType("<2222,2228,84>",(status)); Inst60++; } } catch(e) {}
  statusitems[UBound] = status;
try { if (Inst58 <= 1000 && typeof (statusitems[UBound]) != "undefined") {_RecordType("<2200,2219,84>",(statusitems[UBound])); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (statusitems) != "undefined") {_RecordType("<2200,2211,84>",(statusitems)); Inst59++; } } catch(e) {}
try { if (Inst63 <= 1000 && typeof (actual) != "undefined") {_RecordType("<2255,2261,85>",(actual)); Inst63++; } } catch(e) {}
  actualvalues[UBound] = actual;
try { if (Inst61 <= 1000 && typeof (actualvalues[UBound]) != "undefined") {_RecordType("<2232,2252,85>",(actualvalues[UBound])); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (actualvalues) != "undefined") {_RecordType("<2232,2244,85>",(actualvalues)); Inst62++; } } catch(e) {}
try { if (Inst66 <= 1000 && typeof (expect) != "undefined") {_RecordType("<2290,2296,86>",(expect)); Inst66++; } } catch(e) {}
  expectedvalues[UBound] = expect;
try { if (Inst64 <= 1000 && typeof (expectedvalues[UBound]) != "undefined") {_RecordType("<2265,2287,86>",(expectedvalues[UBound])); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (expectedvalues) != "undefined") {_RecordType("<2265,2279,86>",(expectedvalues)); Inst65++; } } catch(e) {}
try { if (Inst67 <= 1000 && typeof (UBound) != "undefined") {_RecordType("<2300,2306,87>",(UBound)); Inst67++; } } catch(e) {}
  UBound++;
}

try { if (Inst68 <= 1000 && typeof (test) != "undefined") {_RecordType("<2322,2326,90>",(test)); Inst68++; } } catch(e) {}
function test() {
try { if (Inst69 <= 1000 && typeof (printBugNumber) != "undefined") {_RecordType("<2333,2347,91>",(printBugNumber)); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<2348,2357,91>",(BUGNUMBER)); Inst70++; } } catch(e) {}
  printBugNumber(BUGNUMBER);
try { if (Inst71 <= 1000 && typeof (printStatus) != "undefined") {_RecordType("<2362,2373,92>",(printStatus)); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (summary) != "undefined") {_RecordType("<2374,2381,92>",(summary)); Inst72++; } } catch(e) {}
  printStatus(summary);

  for (var i = 0; i < UBound; i++) {
try { if (Inst73 <= 1000 && typeof (i) != "undefined") {_RecordType("<2396,2397,94>",(i)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (i) != "undefined") {_RecordType("<2403,2404,94>",(i)); Inst74++; } } catch(e) {}try { if (Inst75 <= 1000 && typeof (UBound) != "undefined") {_RecordType("<2407,2413,94>",(UBound)); Inst75++; } } catch(e) {}try { if (Inst76 <= 1000 && typeof (i) != "undefined") {_RecordType("<2415,2416,94>",(i)); Inst76++; } } catch(e) {}
try { if (Inst77 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<2426,2439,95>",(reportCompare)); Inst77++; } } catch(e) {}try { if (Inst78 <= 1000 && typeof (expectedvalues[i]) != "undefined") {_RecordType("<2440,2457,95>",(expectedvalues[i])); Inst78++; } } catch(e) {}try { if (Inst79 <= 1000 && typeof (expectedvalues) != "undefined") {_RecordType("<2440,2454,95>",(expectedvalues)); Inst79++; } } catch(e) {}try { if (Inst80 <= 1000 && typeof (actualvalues[i]) != "undefined") {_RecordType("<2459,2474,95>",(actualvalues[i])); Inst80++; } } catch(e) {}try { if (Inst81 <= 1000 && typeof (actualvalues) != "undefined") {_RecordType("<2459,2471,95>",(actualvalues)); Inst81++; } } catch(e) {}try { if (Inst82 <= 1000 && typeof (statusitems[i]) != "undefined") {_RecordType("<2476,2490,95>",(statusitems[i])); Inst82++; } } catch(e) {}try { if (Inst83 <= 1000 && typeof (statusitems) != "undefined") {_RecordType("<2476,2487,95>",(statusitems)); Inst83++; } } catch(e) {}
    reportCompare(expectedvalues[i], actualvalues[i], statusitems[i]);
  }
}

