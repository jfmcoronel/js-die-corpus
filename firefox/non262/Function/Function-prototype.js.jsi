var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst1 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<11,42,1>",(Object.getOwnPropertyDescriptor)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Object) != "undefined") {_RecordType("<11,17,1>",(Object)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Function.prototype) != "undefined") {_RecordType("<43,61,1>",(Function.prototype)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Function) != "undefined") {_RecordType("<43,51,1>",(Function)); Inst4++; } } catch(e) {}
var desc = Object.getOwnPropertyDescriptor(Function.prototype, "length");
try { if (Inst0 <= 1000 && typeof (desc) != "undefined") {_RecordType("<4,8,1>",(desc)); Inst0++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (desc) != "undefined") {_RecordType("<74,78,2>",(desc)); Inst5++; } } catch(e) {}
desc;
({
  value: 0,
  writable: false,
  enumerable: false,
  configurable: true
});
try { if (Inst6 <= 1000 && typeof (Function.prototype.prototype) != "undefined") {_RecordType("<160,188,9>",(Function.prototype.prototype)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Function.prototype) != "undefined") {_RecordType("<160,178,9>",(Function.prototype)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Function) != "undefined") {_RecordType("<160,168,9>",(Function)); Inst8++; } } catch(e) {}
Function.prototype.prototype;
try { if (Inst9 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<190,199,10>",(undefined)); Inst9++; } } catch(e) {}
undefined;
try { if (Inst10 <= 1000 && typeof (Function.prototype.callee) != "undefined") {_RecordType("<201,226,11>",(Function.prototype.callee)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Function.prototype) != "undefined") {_RecordType("<201,219,11>",(Function.prototype)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Function) != "undefined") {_RecordType("<201,209,11>",(Function)); Inst12++; } } catch(e) {}
Function.prototype.callee;
try { if (Inst13 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<228,237,12>",(undefined)); Inst13++; } } catch(e) {}
undefined;

try { if (Inst14 <= 1000 && typeof (Function.prototype.caller) != "undefined") {_RecordType("<247,272,14>",(Function.prototype.caller)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Function.prototype) != "undefined") {_RecordType("<247,265,14>",(Function.prototype)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Function) != "undefined") {_RecordType("<247,255,14>",(Function)); Inst16++; } } catch(e) {}
(() => Function.prototype.caller)();

try { if (Inst17 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<278,287,16>",(TypeError)); Inst17++; } } catch(e) {}
TypeError;

try { if (Inst18 <= 1000 && typeof (Function.prototype.arguments) != "undefined") {_RecordType("<297,325,18>",(Function.prototype.arguments)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Function.prototype) != "undefined") {_RecordType("<297,315,18>",(Function.prototype)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (Function) != "undefined") {_RecordType("<297,305,18>",(Function)); Inst20++; } } catch(e) {}
(() => Function.prototype.arguments)();

try { if (Inst21 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<331,340,20>",(TypeError)); Inst21++; } } catch(e) {}
TypeError;

try { if (Inst22 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<354,367,22>",(reportCompare)); Inst22++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst23 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<388,401,23>",(reportCompare)); Inst23++; } } catch(e) {}
  reportCompare(true, true);
}

