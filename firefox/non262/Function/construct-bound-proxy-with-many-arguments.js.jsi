var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
try { if (Inst1 <= 1000 && typeof (Function.prototype.bind.call) != "undefined") {_RecordType("<217,245,4>",(Function.prototype.bind.call)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Function.prototype.bind) != "undefined") {_RecordType("<217,240,4>",(Function.prototype.bind)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Function.prototype) != "undefined") {_RecordType("<217,235,4>",(Function.prototype)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Function) != "undefined") {_RecordType("<217,225,4>",(Function)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<250,255,4>",(Proxy)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Array) != "undefined") {_RecordType("<256,261,4>",(Array)); Inst6++; } } catch(e) {}
var proxy = Function.prototype.bind.call(new Proxy(Array, {}));
try { if (Inst0 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<209,214,4>",(proxy)); Inst0++; } } catch(e) {}

for (var i = 10; i < 50; ++i) {
try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<279,280,6>",(i)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<287,288,6>",(i)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<297,298,6>",(i)); Inst9++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (Array(i).fill) != "undefined") {_RecordType("<315,328,7>",(Array(i).fill)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Array) != "undefined") {_RecordType("<315,320,7>",(Array)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<321,322,7>",(i)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<329,330,7>",(i)); Inst14++; } } catch(e) {}
  var args = Array(i).fill(i);
try { if (Inst10 <= 1000 && typeof (args) != "undefined") {_RecordType("<308,312,7>",(args)); Inst10++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<351,356,8>",(proxy)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (args) != "undefined") {_RecordType("<360,364,8>",(args)); Inst17++; } } catch(e) {}
  var array = new proxy(...args);
try { if (Inst15 <= 1000 && typeof (array) != "undefined") {_RecordType("<339,344,8>",(array)); Inst15++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (array) != "undefined") {_RecordType("<369,374,9>",(array)); Inst18++; } } catch(e) {}
  array;
try { if (Inst19 <= 1000 && typeof (args) != "undefined") {_RecordType("<378,382,10>",(args)); Inst19++; } } catch(e) {}
  args;
}

try { if (Inst20 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<398,411,13>",(reportCompare)); Inst20++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst21 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<432,445,14>",(reportCompare)); Inst21++; } } catch(e) {}
  reportCompare(0, 0, "ok");
}

