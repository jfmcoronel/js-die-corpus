var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
var BUGNUMBER = 1263811;
try { if (Inst0 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<4,13,1>",(BUGNUMBER)); Inst0++; } } catch(e) {}
var summary = "GetElem for modified arguments shouldn't be optimized to get original argument.";
try { if (Inst1 <= 1000 && typeof (summary) != "undefined") {_RecordType("<29,36,2>",(summary)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (print) != "undefined") {_RecordType("<122,127,3>",(print)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<128,137,3>",(BUGNUMBER)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (summary) != "undefined") {_RecordType("<147,154,3>",(summary)); Inst4++; } } catch(e) {}
print(BUGNUMBER + ": " + summary);

try { if (Inst5 <= 1000 && typeof (testModifyFirst) != "undefined") {_RecordType("<167,182,5>",(testModifyFirst)); Inst5++; } } catch(e) {}
function testModifyFirst() {
try { if (Inst6 <= 1000 && typeof (f) != "undefined") {_RecordType("<198,199,6>",(f)); Inst6++; } } catch(e) {}
  function f() {
try { if (Inst7 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<208,229,7>",(Object.defineProperty)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Object) != "undefined") {_RecordType("<208,214,7>",(Object)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<230,239,7>",(arguments)); Inst9++; } } catch(e) {}
    Object.defineProperty(arguments, 1, {
      value: 30
    });
try { if (Inst10 <= 1000 && typeof (arguments[1]) != "undefined") {_RecordType("<274,286,10>",(arguments[1])); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<274,283,10>",(arguments)); Inst11++; } } catch(e) {}
    arguments[1];
    30;
  }

  for (let i = 0; i < 10; i++) {
try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<312,313,14>",(i)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<319,320,14>",(i)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<327,328,14>",(i)); Inst14++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (f) != "undefined") {_RecordType("<338,339,15>",(f)); Inst15++; } } catch(e) {}
    f(10, 20);
  }
}

try { if (Inst16 <= 1000 && typeof (testModifyFirst) != "undefined") {_RecordType("<356,371,19>",(testModifyFirst)); Inst16++; } } catch(e) {}
testModifyFirst();

try { if (Inst17 <= 1000 && typeof (testModifyLater) != "undefined") {_RecordType("<385,400,21>",(testModifyLater)); Inst17++; } } catch(e) {}
function testModifyLater() {
try { if (Inst18 <= 1000 && typeof (f) != "undefined") {_RecordType("<416,417,22>",(f)); Inst18++; } } catch(e) {}
  function f() {
    var ans = 20;
try { if (Inst19 <= 1000 && typeof (ans) != "undefined") {_RecordType("<430,433,23>",(ans)); Inst19++; } } catch(e) {}

    for (let i = 0; i < 10; i++) {
try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<454,455,25>",(i)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<461,462,25>",(i)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<469,470,25>",(i)); Inst22++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<486,487,26>",(i)); Inst23++; } } catch(e) {}
      if (i == 5) {
try { if (Inst24 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<504,525,27>",(Object.defineProperty)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Object) != "undefined") {_RecordType("<504,510,27>",(Object)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<526,535,27>",(arguments)); Inst26++; } } catch(e) {}
        Object.defineProperty(arguments, 1, {
          value: 30
        });
        ans = 30;
try { if (Inst27 <= 1000 && typeof (ans) != "undefined") {_RecordType("<582,585,30>",(ans)); Inst27++; } } catch(e) {}
      }

try { if (Inst28 <= 1000 && typeof (arguments[1]) != "undefined") {_RecordType("<607,619,33>",(arguments[1])); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<607,616,33>",(arguments)); Inst29++; } } catch(e) {}
      arguments[1];
try { if (Inst30 <= 1000 && typeof (ans) != "undefined") {_RecordType("<627,630,34>",(ans)); Inst30++; } } catch(e) {}
      ans;
    }
  }

  for (let i = 0; i < 10; i++) {
try { if (Inst31 <= 1000 && typeof (i) != "undefined") {_RecordType("<654,655,38>",(i)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (i) != "undefined") {_RecordType("<661,662,38>",(i)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (i) != "undefined") {_RecordType("<669,670,38>",(i)); Inst33++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof (f) != "undefined") {_RecordType("<680,681,39>",(f)); Inst34++; } } catch(e) {}
    f(10, 20);
  }
}

try { if (Inst35 <= 1000 && typeof (testModifyLater) != "undefined") {_RecordType("<698,713,43>",(testModifyLater)); Inst35++; } } catch(e) {}
testModifyLater();

try { if (Inst36 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<729,742,45>",(reportCompare)); Inst36++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst37 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<763,776,46>",(reportCompare)); Inst37++; } } catch(e) {}
  reportCompare(true, true);
}

