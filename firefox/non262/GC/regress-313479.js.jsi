var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* -*- indent-tabs-mode: nil; js-indent-level: 2 -*- */

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
//-----------------------------------------------------------------------------
var BUGNUMBER = 313479;
try { if (Inst0 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<346,355,7>",(BUGNUMBER)); Inst0++; } } catch(e) {}
var summary = 'Root access in jsnum.c';
try { if (Inst1 <= 1000 && typeof (summary) != "undefined") {_RecordType("<370,377,8>",(summary)); Inst1++; } } catch(e) {}
var actual = '';
try { if (Inst2 <= 1000 && typeof (actual) != "undefined") {_RecordType("<410,416,9>",(actual)); Inst2++; } } catch(e) {}
var expect = '';
try { if (Inst3 <= 1000 && typeof (expect) != "undefined") {_RecordType("<427,433,10>",(expect)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (printBugNumber) != "undefined") {_RecordType("<440,454,11>",(printBugNumber)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<455,464,11>",(BUGNUMBER)); Inst5++; } } catch(e) {}
printBugNumber(BUGNUMBER);
try { if (Inst6 <= 1000 && typeof (printStatus) != "undefined") {_RecordType("<467,478,12>",(printStatus)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (summary) != "undefined") {_RecordType("<479,486,12>",(summary)); Inst7++; } } catch(e) {}
printStatus(summary);
try { if (Inst9 <= 1000 && typeof (String) != "undefined") {_RecordType("<511,517,13>",(String)); Inst9++; } } catch(e) {}
var prepared_string = String(1);
try { if (Inst8 <= 1000 && typeof (prepared_string) != "undefined") {_RecordType("<493,508,13>",(prepared_string)); Inst8++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (String) != "undefined") {_RecordType("<522,528,14>",(String)); Inst10++; } } catch(e) {}
String(2); // To remove prepared_string from newborn

var likeString = {
  toString: function () {
try { if (Inst13 <= 1000 && typeof (prepared_string) != "undefined") {_RecordType("<635,650,18>",(prepared_string)); Inst13++; } } catch(e) {}
    var tmp = prepared_string;
try { if (Inst12 <= 1000 && typeof (tmp) != "undefined") {_RecordType("<629,632,18>",(tmp)); Inst12++; } } catch(e) {}
    prepared_string = null;
try { if (Inst14 <= 1000 && typeof (prepared_string) != "undefined") {_RecordType("<656,671,19>",(prepared_string)); Inst14++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (tmp) != "undefined") {_RecordType("<691,694,20>",(tmp)); Inst15++; } } catch(e) {}
    return tmp;
  }
};
try { if (Inst11 <= 1000 && typeof (likeString) != "undefined") {_RecordType("<580,590,16>",(likeString)); Inst11++; } } catch(e) {}
var likeNumber = {
  valueOf: function () {
try { if (Inst17 <= 1000 && typeof (gc) != "undefined") {_RecordType("<751,753,25>",(gc)); Inst17++; } } catch(e) {}
    gc();
    return 10;
  }
};
try { if (Inst16 <= 1000 && typeof (likeNumber) != "undefined") {_RecordType("<707,717,23>",(likeNumber)); Inst16++; } } catch(e) {}
var expect = 1;
try { if (Inst18 <= 1000 && typeof (expect) != "undefined") {_RecordType("<783,789,29>",(expect)); Inst18++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<808,816,30>",(parseInt)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (likeString) != "undefined") {_RecordType("<817,827,30>",(likeString)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (likeNumber) != "undefined") {_RecordType("<829,839,30>",(likeNumber)); Inst22++; } } catch(e) {}
var actual = parseInt(likeString, likeNumber);
try { if (Inst19 <= 1000 && typeof (actual) != "undefined") {_RecordType("<799,805,30>",(actual)); Inst19++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (printStatus) != "undefined") {_RecordType("<842,853,31>",(printStatus)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (expect) != "undefined") {_RecordType("<866,872,31>",(expect)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (actual) != "undefined") {_RecordType("<888,894,31>",(actual)); Inst25++; } } catch(e) {}
printStatus("expect=" + expect + " actual=" + actual);
try { if (Inst26 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<897,910,32>",(reportCompare)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (expect) != "undefined") {_RecordType("<911,917,32>",(expect)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (actual) != "undefined") {_RecordType("<919,925,32>",(actual)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (summary) != "undefined") {_RecordType("<927,934,32>",(summary)); Inst29++; } } catch(e) {}
reportCompare(expect, actual, summary);

