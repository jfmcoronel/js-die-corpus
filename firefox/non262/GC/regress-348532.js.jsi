var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// |reftest| slow skip-if(Android)

/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
//-----------------------------------------------------------------------------
var BUGNUMBER = 348532;
try { if (Inst0 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<406,415,9>",(BUGNUMBER)); Inst0++; } } catch(e) {}
var summary = 'Do not overflow int when constructing Error.stack';
try { if (Inst1 <= 1000 && typeof (summary) != "undefined") {_RecordType("<430,437,10>",(summary)); Inst1++; } } catch(e) {}
var actual = '';
try { if (Inst2 <= 1000 && typeof (actual) != "undefined") {_RecordType("<497,503,11>",(actual)); Inst2++; } } catch(e) {}
var expect = ''; //-----------------------------------------------------------------------------
try { if (Inst3 <= 1000 && typeof (expect) != "undefined") {_RecordType("<514,520,12>",(expect)); Inst3++; } } catch(e) {}

try { if (Inst4 <= 1000 && typeof (test) != "undefined") {_RecordType("<608,612,14>",(test)); Inst4++; } } catch(e) {}
test(); //-----------------------------------------------------------------------------

try { if (Inst5 <= 1000 && typeof (test) != "undefined") {_RecordType("<706,710,16>",(test)); Inst5++; } } catch(e) {}
function test() {
try { if (Inst6 <= 1000 && typeof (printBugNumber) != "undefined") {_RecordType("<717,731,17>",(printBugNumber)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<732,741,17>",(BUGNUMBER)); Inst7++; } } catch(e) {}
  printBugNumber(BUGNUMBER);
try { if (Inst8 <= 1000 && typeof (printStatus) != "undefined") {_RecordType("<746,757,18>",(printStatus)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (summary) != "undefined") {_RecordType("<758,765,18>",(summary)); Inst9++; } } catch(e) {}
  printStatus(summary);
try { if (Inst10 <= 1000 && typeof (expectExitCode) != "undefined") {_RecordType("<770,784,19>",(expectExitCode)); Inst10++; } } catch(e) {}
  expectExitCode(0);
try { if (Inst11 <= 1000 && typeof (expectExitCode) != "undefined") {_RecordType("<791,805,20>",(expectExitCode)); Inst11++; } } catch(e) {}
  expectExitCode(3);
  actual = 0; // construct string of 1<<23 characters
try { if (Inst12 <= 1000 && typeof (actual) != "undefined") {_RecordType("<812,818,21>",(actual)); Inst12++; } } catch(e) {}

try { if (Inst14 <= 1000 && typeof (Array((1 << 23) + 1).join) != "undefined") {_RecordType("<875,900,23>",(Array((1 << 23) + 1).join)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Array) != "undefined") {_RecordType("<875,880,23>",(Array)); Inst15++; } } catch(e) {}
  var s = Array((1 << 23) + 1).join('x');
try { if (Inst13 <= 1000 && typeof (s) != "undefined") {_RecordType("<871,872,23>",(s)); Inst13++; } } catch(e) {}
  var recursionDepth = 0;
try { if (Inst16 <= 1000 && typeof (recursionDepth) != "undefined") {_RecordType("<913,927,24>",(recursionDepth)); Inst16++; } } catch(e) {}

try { if (Inst17 <= 1000 && typeof (err) != "undefined") {_RecordType("<945,948,26>",(err)); Inst17++; } } catch(e) {}
  function err() {
try { if (Inst21 <= 1000 && typeof (e) != "undefined") {_RecordType("<1017,1018,29>",(e)); Inst21++; } } catch(e) {}
    try {
try { if (Inst18 <= 1000 && typeof (err.apply) != "undefined") {_RecordType("<976,985,28>",(err.apply)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (err) != "undefined") {_RecordType("<976,979,28>",(err)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<992,1001,28>",(arguments)); Inst20++; } } catch(e) {}
      return err.apply(this, arguments);
    } catch (e) {
try { if (Inst22 <= 1000 && typeof (e) != "undefined") {_RecordType("<1034,1035,30>",(e)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (InternalError) != "undefined") {_RecordType("<1047,1060,30>",(InternalError)); Inst23++; } } catch(e) {}
      if (!(e instanceof InternalError)) {
try { if (Inst24 <= 1000 && typeof (e) != "undefined") {_RecordType("<1079,1080,31>",(e)); Inst24++; } } catch(e) {}
        throw e;
      }
    }

try { if (Inst25 <= 1000 && typeof (Error) != "undefined") {_RecordType("<1112,1117,35>",(Error)); Inst25++; } } catch(e) {}
    return new Error();
  } // The full stack trace in error would include 64*4 copies of s exceeding
  //  2^23 * 256 or 2^31 in length


try { if (Inst27 <= 1000 && typeof (err) != "undefined") {_RecordType("<1250,1253,40>",(err)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (s) != "undefined") {_RecordType("<1254,1255,40>",(s)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (s) != "undefined") {_RecordType("<1257,1258,40>",(s)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (s) != "undefined") {_RecordType("<1260,1261,40>",(s)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (s) != "undefined") {_RecordType("<1263,1264,40>",(s)); Inst31++; } } catch(e) {}
  var error = err(s, s, s, s);
try { if (Inst26 <= 1000 && typeof (error) != "undefined") {_RecordType("<1242,1247,40>",(error)); Inst26++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (print) != "undefined") {_RecordType("<1269,1274,41>",(print)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (error.stack.length) != "undefined") {_RecordType("<1275,1293,41>",(error.stack.length)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (error.stack) != "undefined") {_RecordType("<1275,1286,41>",(error.stack)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (error) != "undefined") {_RecordType("<1275,1280,41>",(error)); Inst35++; } } catch(e) {}
  print(error.stack.length);
  expect = true;
try { if (Inst36 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1298,1304,42>",(expect)); Inst36++; } } catch(e) {}
try { if (Inst38 <= 1000 && typeof (error.stack.length) != "undefined") {_RecordType("<1324,1342,43>",(error.stack.length)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (error.stack) != "undefined") {_RecordType("<1324,1335,43>",(error.stack)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (error) != "undefined") {_RecordType("<1324,1329,43>",(error)); Inst40++; } } catch(e) {}
  actual = error.stack.length > 0;
try { if (Inst37 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1315,1321,43>",(actual)); Inst37++; } } catch(e) {}
try { if (Inst41 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1350,1363,44>",(reportCompare)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1364,1370,44>",(expect)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1372,1378,44>",(actual)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (summary) != "undefined") {_RecordType("<1380,1387,44>",(summary)); Inst44++; } } catch(e) {}
  reportCompare(expect, actual, summary);
}

