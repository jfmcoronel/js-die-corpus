var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst1 <= 1000 && typeof (Promise.resolve) != "undefined") {_RecordType("<14,29,1>",(Promise.resolve)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Promise) != "undefined") {_RecordType("<14,21,1>",(Promise)); Inst2++; } } catch(e) {}
var promise = Promise.resolve(1);
try { if (Inst0 <= 1000 && typeof (promise) != "undefined") {_RecordType("<4,11,1>",(promise)); Inst0++; } } catch(e) {}

var FakeCtor = function (exec) {
try { if (Inst4 <= 1000 && typeof (exec) != "undefined") {_RecordType("<60,64,3>",(exec)); Inst4++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (exec) != "undefined") {_RecordType("<70,74,4>",(exec)); Inst5++; } } catch(e) {}
  exec(function () {
    ;
  }, function () {
    ;
  });
};
try { if (Inst3 <= 1000 && typeof (FakeCtor) != "undefined") {_RecordType("<39,47,3>",(FakeCtor)); Inst3++; } } catch(e) {}

try { if (Inst6 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<130,151,11>",(Object.defineProperty)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Object) != "undefined") {_RecordType("<130,136,11>",(Object)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Promise) != "undefined") {_RecordType("<152,159,11>",(Promise)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Symbol.species) != "undefined") {_RecordType("<161,175,11>",(Symbol.species)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<161,167,11>",(Symbol)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (FakeCtor) != "undefined") {_RecordType("<188,196,12>",(FakeCtor)); Inst11++; } } catch(e) {}
Object.defineProperty(Promise, Symbol.species, {
  value: FakeCtor
}); // This just shouldn't crash. It does without bug 1287334 fixed.

try { if (Inst12 <= 1000 && typeof (promise.then) != "undefined") {_RecordType("<267,279,15>",(promise.then)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (promise) != "undefined") {_RecordType("<267,274,15>",(promise)); Inst13++; } } catch(e) {}
promise.then(function () {
  ;
});
try { if (Inst14 <= 1000 && typeof (this.reportCompare) != "undefined") {_RecordType("<302,320,18>",(this.reportCompare)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<324,337,18>",(reportCompare)); Inst15++; } } catch(e) {}
this.reportCompare && reportCompare(true, true);

