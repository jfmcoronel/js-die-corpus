var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/*
 * Any copyright is dedicated to the Public Domain.
 * http://creativecommons.org/licenses/publicdomain/
 */
//-----------------------------------------------------------------------------
var BUGNUMBER = 987243;
try { if (Inst0 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<196,205,6>",(BUGNUMBER)); Inst0++; } } catch(e) {}
var summary = "Don't use .call(...) in the self-hosted Map.prototype.forEach";
try { if (Inst1 <= 1000 && typeof (summary) != "undefined") {_RecordType("<220,227,7>",(summary)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (print) != "undefined") {_RecordType("<295,300,8>",(print)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<301,310,8>",(BUGNUMBER)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (summary) != "undefined") {_RecordType("<320,327,8>",(summary)); Inst4++; } } catch(e) {}
print(BUGNUMBER + ": " + summary);
/**************
 * BEGIN TEST *
 **************/

try { if (Inst6 <= 1000 && typeof (Function.prototype.call) != "undefined") {_RecordType("<399,422,13>",(Function.prototype.call)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Function.prototype) != "undefined") {_RecordType("<399,417,13>",(Function.prototype)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Function) != "undefined") {_RecordType("<399,407,13>",(Function)); Inst8++; } } catch(e) {}
var functionCall = Function.prototype.call;
try { if (Inst5 <= 1000 && typeof (functionCall) != "undefined") {_RecordType("<384,396,13>",(functionCall)); Inst5++; } } catch(e) {}

try { if (Inst9 <= 1000 && typeof (throwSyntaxError) != "undefined") {_RecordType("<434,450,15>",(throwSyntaxError)); Inst9++; } } catch(e) {}
function throwSyntaxError() {
try { if (Inst10 <= 1000 && typeof (SyntaxError) != "undefined") {_RecordType("<467,478,16>",(SyntaxError)); Inst10++; } } catch(e) {}
  throw new SyntaxError("Function.prototype.call incorrectly called");
}

try { if (Inst11 <= 1000 && typeof (lalala) != "undefined") {_RecordType("<538,544,19>",(lalala)); Inst11++; } } catch(e) {}
function lalala() {
  ;
}

try { if (Inst15 <= 1000 && typeof (throwSyntaxError) != "undefined") {_RecordType("<582,598,23>",(throwSyntaxError)); Inst15++; } } catch(e) {}
Function.prototype.call = throwSyntaxError;
try { if (Inst12 <= 1000 && typeof (Function.prototype.call) != "undefined") {_RecordType("<556,579,23>",(Function.prototype.call)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Function.prototype) != "undefined") {_RecordType("<556,574,23>",(Function.prototype)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Function) != "undefined") {_RecordType("<556,564,23>",(Function)); Inst14++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (new Map().forEach) != "undefined") {_RecordType("<600,617,24>",(new Map().forEach)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Map) != "undefined") {_RecordType("<604,607,24>",(Map)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (throwSyntaxError) != "undefined") {_RecordType("<618,634,24>",(throwSyntaxError)); Inst18++; } } catch(e) {}
new Map().forEach(throwSyntaxError);
try { if (Inst19 <= 1000 && typeof (new Map([[1, 2]]).forEach) != "undefined") {_RecordType("<637,662,25>",(new Map([[1, 2]]).forEach)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (Map) != "undefined") {_RecordType("<641,644,25>",(Map)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (lalala) != "undefined") {_RecordType("<663,669,25>",(lalala)); Inst21++; } } catch(e) {}
new Map([[1, 2]]).forEach(lalala);
try { if (Inst22 <= 1000 && typeof (new Map([[1, 2], [3, 4]]).forEach) != "undefined") {_RecordType("<672,705,26>",(new Map([[1, 2], [3, 4]]).forEach)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Map) != "undefined") {_RecordType("<676,679,26>",(Map)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (lalala) != "undefined") {_RecordType("<706,712,26>",(lalala)); Inst24++; } } catch(e) {}
new Map([[1, 2], [3, 4]]).forEach(lalala);

Function.prototype.call = function () {
try { if (Inst28 <= 1000 && typeof (this.set) != "undefined") {_RecordType("<758,766,29>",(this.set)); Inst28++; } } catch(e) {}
  this.set(42, "fnord");
};
try { if (Inst25 <= 1000 && typeof (Function.prototype.call) != "undefined") {_RecordType("<716,739,28>",(Function.prototype.call)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Function.prototype) != "undefined") {_RecordType("<716,734,28>",(Function.prototype)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (Function) != "undefined") {_RecordType("<716,724,28>",(Function)); Inst27++; } } catch(e) {}

try { if (Inst29 <= 1000 && typeof (new Map().forEach) != "undefined") {_RecordType("<785,802,32>",(new Map().forEach)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (Map) != "undefined") {_RecordType("<789,792,32>",(Map)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (throwSyntaxError) != "undefined") {_RecordType("<803,819,32>",(throwSyntaxError)); Inst31++; } } catch(e) {}
new Map().forEach(throwSyntaxError);
try { if (Inst32 <= 1000 && typeof (new Map([[1, 2]]).forEach) != "undefined") {_RecordType("<822,847,33>",(new Map([[1, 2]]).forEach)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (Map) != "undefined") {_RecordType("<826,829,33>",(Map)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (lalala) != "undefined") {_RecordType("<848,854,33>",(lalala)); Inst34++; } } catch(e) {}
new Map([[1, 2]]).forEach(lalala);
try { if (Inst35 <= 1000 && typeof (new Map([[1, 2], [3, 4]]).forEach) != "undefined") {_RecordType("<857,890,34>",(new Map([[1, 2], [3, 4]]).forEach)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (Map) != "undefined") {_RecordType("<861,864,34>",(Map)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (lalala) != "undefined") {_RecordType("<891,897,34>",(lalala)); Inst37++; } } catch(e) {}
new Map([[1, 2], [3, 4]]).forEach(lalala);
var callCount = 0;
try { if (Inst38 <= 1000 && typeof (callCount) != "undefined") {_RecordType("<904,913,35>",(callCount)); Inst38++; } } catch(e) {}

Function.prototype.call = function () {
try { if (Inst42 <= 1000 && typeof (callCount) != "undefined") {_RecordType("<962,971,38>",(callCount)); Inst42++; } } catch(e) {}
  callCount++;
};
try { if (Inst39 <= 1000 && typeof (Function.prototype.call) != "undefined") {_RecordType("<920,943,37>",(Function.prototype.call)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (Function.prototype) != "undefined") {_RecordType("<920,938,37>",(Function.prototype)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (Function) != "undefined") {_RecordType("<920,928,37>",(Function)); Inst41++; } } catch(e) {}

try { if (Inst43 <= 1000 && typeof (new Map().forEach) != "undefined") {_RecordType("<979,996,41>",(new Map().forEach)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (Map) != "undefined") {_RecordType("<983,986,41>",(Map)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (throwSyntaxError) != "undefined") {_RecordType("<997,1013,41>",(throwSyntaxError)); Inst45++; } } catch(e) {}
new Map().forEach(throwSyntaxError);
try { if (Inst46 <= 1000 && typeof (new Map([[1, 2]]).forEach) != "undefined") {_RecordType("<1016,1041,42>",(new Map([[1, 2]]).forEach)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (Map) != "undefined") {_RecordType("<1020,1023,42>",(Map)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (lalala) != "undefined") {_RecordType("<1042,1048,42>",(lalala)); Inst48++; } } catch(e) {}
new Map([[1, 2]]).forEach(lalala);
try { if (Inst49 <= 1000 && typeof (new Map([[1, 2], [3, 4]]).forEach) != "undefined") {_RecordType("<1051,1084,43>",(new Map([[1, 2], [3, 4]]).forEach)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (Map) != "undefined") {_RecordType("<1055,1058,43>",(Map)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (lalala) != "undefined") {_RecordType("<1085,1091,43>",(lalala)); Inst51++; } } catch(e) {}
new Map([[1, 2], [3, 4]]).forEach(lalala);
try { if (Inst52 <= 1000 && typeof (callCount) != "undefined") {_RecordType("<1094,1103,44>",(callCount)); Inst52++; } } catch(e) {}
callCount;
0;

/******************************************************************************/
try { if (Inst53 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1201,1214,48>",(reportCompare)); Inst53++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst54 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1235,1248,49>",(reportCompare)); Inst54++; } } catch(e) {}
  reportCompare(true, true);
}

try { if (Inst55 <= 1000 && typeof (print) != "undefined") {_RecordType("<1265,1270,52>",(print)); Inst55++; } } catch(e) {}
print("Tests complete");

