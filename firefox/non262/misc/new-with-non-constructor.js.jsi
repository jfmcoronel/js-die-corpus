var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/*
 * Any copyright is dedicated to the Public Domain.
 * http://creativecommons.org/licenses/publicdomain/
 */
try { if (Inst0 <= 1000 && typeof (checkConstruct) != "undefined") {_RecordType("<121,135,5>",(checkConstruct)); Inst0++; } } catch(e) {}
function checkConstruct(thing) {
try { if (Inst1 <= 1000 && typeof (thing) != "undefined") {_RecordType("<136,141,5>",(thing)); Inst1++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (e) != "undefined") {_RecordType("<223,224,11>",(e)); Inst4++; } } catch(e) {}
  try {
try { if (Inst2 <= 1000 && typeof (thing) != "undefined") {_RecordType("<161,166,7>",(thing)); Inst2++; } } catch(e) {}
    new thing();
    0;
    1;
try { if (Inst3 <= 1000 && typeof (thing) != "undefined") {_RecordType("<205,210,10>",(thing)); Inst3++; } } catch(e) {}
    "not reached " + thing;
  } catch (e) {
try { if (Inst5 <= 1000 && typeof (e.message.includes) != "undefined") {_RecordType("<232,250,12>",(e.message.includes)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (e.message) != "undefined") {_RecordType("<232,241,12>",(e.message)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (e) != "undefined") {_RecordType("<232,233,12>",(e)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (e.message) != "undefined") {_RecordType("<279,288,12>",(e.message)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (e) != "undefined") {_RecordType("<279,280,12>",(e)); Inst9++; } } catch(e) {}
    e.message.includes(" is not a constructor") || e.message === "Function.prototype.toString called on incompatible object";
    true;
  }
}

var re = /aaa/;
try { if (Inst10 <= 1000 && typeof (re) != "undefined") {_RecordType("<375,377,17>",(re)); Inst10++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (checkConstruct) != "undefined") {_RecordType("<387,401,18>",(checkConstruct)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (re) != "undefined") {_RecordType("<402,404,18>",(re)); Inst12++; } } catch(e) {}
checkConstruct(re);
try { if (Inst14 <= 1000 && typeof (Function.prototype.bind) != "undefined") {_RecordType("<436,459,19>",(Function.prototype.bind)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Function.prototype) != "undefined") {_RecordType("<436,454,19>",(Function.prototype)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Function) != "undefined") {_RecordType("<436,444,19>",(Function)); Inst16++; } } catch(e) {}
var boundFunctionPrototype = Function.prototype.bind();
try { if (Inst13 <= 1000 && typeof (boundFunctionPrototype) != "undefined") {_RecordType("<411,433,19>",(boundFunctionPrototype)); Inst13++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (checkConstruct) != "undefined") {_RecordType("<463,477,20>",(checkConstruct)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (boundFunctionPrototype) != "undefined") {_RecordType("<478,500,20>",(boundFunctionPrototype)); Inst18++; } } catch(e) {}
checkConstruct(boundFunctionPrototype);
try { if (Inst20 <= 1000 && typeof (Math.sin.bind) != "undefined") {_RecordType("<522,535,21>",(Math.sin.bind)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Math.sin) != "undefined") {_RecordType("<522,530,21>",(Math.sin)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Math) != "undefined") {_RecordType("<522,526,21>",(Math)); Inst22++; } } catch(e) {}
var boundBuiltin = Math.sin.bind();
try { if (Inst19 <= 1000 && typeof (boundBuiltin) != "undefined") {_RecordType("<507,519,21>",(boundBuiltin)); Inst19++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (checkConstruct) != "undefined") {_RecordType("<539,553,22>",(checkConstruct)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (boundBuiltin) != "undefined") {_RecordType("<554,566,22>",(boundBuiltin)); Inst24++; } } catch(e) {}
checkConstruct(boundBuiltin);
try { if (Inst26 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<604,609,23>",(Proxy)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (Function.prototype) != "undefined") {_RecordType("<610,628,23>",(Function.prototype)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (Function) != "undefined") {_RecordType("<610,618,23>",(Function)); Inst28++; } } catch(e) {}
var proxiedFunctionPrototype = new Proxy(Function.prototype, {});
try { if (Inst25 <= 1000 && typeof (proxiedFunctionPrototype) != "undefined") {_RecordType("<573,597,23>",(proxiedFunctionPrototype)); Inst25++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (checkConstruct) != "undefined") {_RecordType("<635,649,24>",(checkConstruct)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (proxiedFunctionPrototype) != "undefined") {_RecordType("<650,674,24>",(proxiedFunctionPrototype)); Inst30++; } } catch(e) {}
checkConstruct(proxiedFunctionPrototype);
try { if (Inst32 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<702,707,25>",(Proxy)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<708,716,25>",(parseInt)); Inst33++; } } catch(e) {}
var proxiedBuiltin = new Proxy(parseInt, {});
try { if (Inst31 <= 1000 && typeof (proxiedBuiltin) != "undefined") {_RecordType("<681,695,25>",(proxiedBuiltin)); Inst31++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof (checkConstruct) != "undefined") {_RecordType("<723,737,26>",(checkConstruct)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (proxiedBuiltin) != "undefined") {_RecordType("<738,752,26>",(proxiedBuiltin)); Inst35++; } } catch(e) {}
checkConstruct(proxiedBuiltin);

try { if (Inst36 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<767,780,28>",(reportCompare)); Inst36++; } } catch(e) {}
if (typeof reportCompare == 'function') {
try { if (Inst37 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<800,813,29>",(reportCompare)); Inst37++; } } catch(e) {}
  reportCompare(0, 0, "ok");
}

