var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
var Inst102 = 0;
var Inst103 = 0;
var Inst104 = 0;
var Inst105 = 0;
var Inst106 = 0;
var Inst107 = 0;
var Inst108 = 0;
var Inst109 = 0;
var Inst110 = 0;
var Inst111 = 0;
var Inst112 = 0;
var Inst113 = 0;
var Inst114 = 0;
var Inst115 = 0;
var Inst116 = 0;
var Inst117 = 0;
var Inst118 = 0;
var Inst119 = 0;
var Inst120 = 0;
var Inst121 = 0;
var Inst122 = 0;
var Inst123 = 0;
var Inst124 = 0;
var Inst125 = 0;
var Inst126 = 0;
var Inst127 = 0;
var Inst128 = 0;
var Inst129 = 0;
var Inst130 = 0;
var Inst131 = 0;
var Inst132 = 0;
var Inst133 = 0;
var Inst134 = 0;
var Inst135 = 0;
var Inst136 = 0;
var Inst137 = 0;
var Inst138 = 0;
var Inst139 = 0;
var Inst140 = 0;
var Inst141 = 0;
var Inst142 = 0;
var Inst143 = 0;
var Inst144 = 0;
var Inst145 = 0;
var Inst146 = 0;
var Inst147 = 0;
var Inst148 = 0;
var Inst149 = 0;
var Inst150 = 0;
var Inst151 = 0;
var Inst152 = 0;
var Inst153 = 0;
var Inst154 = 0;
var Inst155 = 0;
var Inst156 = 0;
var Inst157 = 0;
var Inst158 = 0;
var Inst159 = 0;
var Inst160 = 0;
var Inst161 = 0;
var Inst162 = 0;
var Inst163 = 0;
var Inst164 = 0;
var Inst165 = 0;
var Inst166 = 0;
var Inst167 = 0;
var Inst168 = 0;
var Inst169 = 0;
var Inst170 = 0;
var Inst171 = 0;
var Inst172 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// |reftest| skip-if(xulRuntime.OS=="WINNT"&&!xulRuntime.shell) -- Windows browser in automation doesn't pick up new time zones correctly
// Repeats the test from "time-zones.js", but uses POSIX instead of IANA names
// for the time zones. This allows to run these tests on Windows, too.
// From bug 1330149:
//
// Windows only supports a very limited set of IANA time zone names for the TZ
// environment variable.
//
// TZ format supported by Windows: "TZ=tzn[+|-]hh[:mm[:ss]][dzn]".
//
// Complete list of all IANA time zone ids matching that format.
//
// From tzdata's "northamerica" file:
//   EST5EDT
//   CST6CDT
//   MST7MDT
//   PST8PDT
//
// From tzdata's "backward" file:
//   GMT+0
//   GMT-0
//   GMT0
//
// Also supported on Windows even though they don't match the format listed
// above.
//
// From tzdata's "backward" file:
//   UCT
//   UTC
//
// From tzdata's "etcetera" file:
//   GMT
// Perform the following replacements:
//   America/New_York    -> EST5EDT
//   America/Chicago     -> CST6CDT
//   America/Denver      -> MST7MDT
//   America/Los_Angeles -> PST8PDT
//
// And remove any tests not matching one of the four time zones from above.
// bug 294908
try { if (Inst0 <= 1000 && typeof (inTimeZone) != "undefined") {_RecordType("<1182,1192,41>",(inTimeZone)); Inst0++; } } catch(e) {}
inTimeZone("EST5EDT", () => {
try { if (Inst2 <= 1000 && typeof (Date) != "undefined") {_RecordType("<1227,1231,42>",(Date)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Month.April) != "undefined") {_RecordType("<1238,1249,42>",(Month.April)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Month) != "undefined") {_RecordType("<1238,1243,42>",(Month)); Inst4++; } } catch(e) {}
  let dt = new Date(2003, Month.April, 6, 2, 30, 00);
try { if (Inst1 <= 1000 && typeof (dt) != "undefined") {_RecordType("<1218,1220,42>",(dt)); Inst1++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (dt) != "undefined") {_RecordType("<1268,1270,43>",(dt)); Inst5++; } } catch(e) {}
  dt;
  "Sun Apr 06 2003 03:30:00 GMT-0400 (EDT)";
  "Eastern Daylight Time";
}); // bug 610183

try { if (Inst6 <= 1000 && typeof (inTimeZone) != "undefined") {_RecordType("<1363,1373,48>",(inTimeZone)); Inst6++; } } catch(e) {}
inTimeZone("PST8PDT", () => {
try { if (Inst8 <= 1000 && typeof (Date) != "undefined") {_RecordType("<1408,1412,49>",(Date)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Month.November) != "undefined") {_RecordType("<1419,1433,49>",(Month.November)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Month) != "undefined") {_RecordType("<1419,1424,49>",(Month)); Inst10++; } } catch(e) {}
  let dt = new Date(2014, Month.November, 2, 1, 47, 42);
try { if (Inst7 <= 1000 && typeof (dt) != "undefined") {_RecordType("<1399,1401,49>",(dt)); Inst7++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (dt) != "undefined") {_RecordType("<1452,1454,50>",(dt)); Inst11++; } } catch(e) {}
  dt;
  "Sun Nov 02 2014 01:47:42 GMT-0700 (PDT)";
  "Pacific Daylight Time";
}); // bug 629465

try { if (Inst12 <= 1000 && typeof (inTimeZone) != "undefined") {_RecordType("<1547,1557,55>",(inTimeZone)); Inst12++; } } catch(e) {}
inTimeZone("MST7MDT", () => {
try { if (Inst14 <= 1000 && typeof (Date) != "undefined") {_RecordType("<1593,1597,56>",(Date)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Date.UTC) != "undefined") {_RecordType("<1598,1606,56>",(Date.UTC)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Date) != "undefined") {_RecordType("<1598,1602,56>",(Date)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Month.November) != "undefined") {_RecordType("<1613,1627,56>",(Month.November)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Month) != "undefined") {_RecordType("<1613,1618,56>",(Month)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (msPerHour) != "undefined") {_RecordType("<1647,1656,56>",(msPerHour)); Inst19++; } } catch(e) {}
  let dt1 = new Date(Date.UTC(2015, Month.November, 1, 0, 0, 0) + 6 * msPerHour);
try { if (Inst13 <= 1000 && typeof (dt1) != "undefined") {_RecordType("<1583,1586,56>",(dt1)); Inst13++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (dt1) != "undefined") {_RecordType("<1661,1664,57>",(dt1)); Inst20++; } } catch(e) {}
  dt1;
  "Sun Nov 01 2015 00:00:00 GMT-0600 (MDT)";
  "Mountain Daylight Time";
try { if (Inst22 <= 1000 && typeof (Date) != "undefined") {_RecordType("<1755,1759,60>",(Date)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Date.UTC) != "undefined") {_RecordType("<1760,1768,60>",(Date.UTC)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (Date) != "undefined") {_RecordType("<1760,1764,60>",(Date)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Month.November) != "undefined") {_RecordType("<1775,1789,60>",(Month.November)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Month) != "undefined") {_RecordType("<1775,1780,60>",(Month)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (msPerHour) != "undefined") {_RecordType("<1809,1818,60>",(msPerHour)); Inst27++; } } catch(e) {}
  let dt2 = new Date(Date.UTC(2015, Month.November, 1, 1, 0, 0) + 6 * msPerHour);
try { if (Inst21 <= 1000 && typeof (dt2) != "undefined") {_RecordType("<1745,1748,60>",(dt2)); Inst21++; } } catch(e) {}
try { if (Inst28 <= 1000 && typeof (dt2) != "undefined") {_RecordType("<1823,1826,61>",(dt2)); Inst28++; } } catch(e) {}
  dt2;
  "Sun Nov 01 2015 01:00:00 GMT-0600 (MDT)";
  "Mountain Daylight Time";
try { if (Inst30 <= 1000 && typeof (Date) != "undefined") {_RecordType("<1917,1921,64>",(Date)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (Date.UTC) != "undefined") {_RecordType("<1922,1930,64>",(Date.UTC)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (Date) != "undefined") {_RecordType("<1922,1926,64>",(Date)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (Month.November) != "undefined") {_RecordType("<1937,1951,64>",(Month.November)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (Month) != "undefined") {_RecordType("<1937,1942,64>",(Month)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (msPerHour) != "undefined") {_RecordType("<1971,1980,64>",(msPerHour)); Inst35++; } } catch(e) {}
  let dt3 = new Date(Date.UTC(2015, Month.November, 1, 1, 0, 0) + 7 * msPerHour);
try { if (Inst29 <= 1000 && typeof (dt3) != "undefined") {_RecordType("<1907,1910,64>",(dt3)); Inst29++; } } catch(e) {}
try { if (Inst36 <= 1000 && typeof (dt3) != "undefined") {_RecordType("<1985,1988,65>",(dt3)); Inst36++; } } catch(e) {}
  dt3;
  "Sun Nov 01 2015 01:00:00 GMT-0700 (MST)";
  "Mountain Standard Time";
}); // bug 742427

try { if (Inst37 <= 1000 && typeof (inTimeZone) != "undefined") {_RecordType("<2082,2092,70>",(inTimeZone)); Inst37++; } } catch(e) {}
inTimeZone("EST5EDT", () => {
try { if (Inst39 <= 1000 && typeof (Date) != "undefined") {_RecordType("<2127,2131,71>",(Date)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (Month.March) != "undefined") {_RecordType("<2138,2149,71>",(Month.March)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (Month) != "undefined") {_RecordType("<2138,2143,71>",(Month)); Inst41++; } } catch(e) {}
  let dt = new Date(2009, Month.March, 8, 1, 0, 0);
try { if (Inst38 <= 1000 && typeof (dt) != "undefined") {_RecordType("<2118,2120,71>",(dt)); Inst38++; } } catch(e) {}
try { if (Inst42 <= 1000 && typeof (dt) != "undefined") {_RecordType("<2166,2168,72>",(dt)); Inst42++; } } catch(e) {}
  dt;
  "Sun Mar 08 2009 01:00:00 GMT-0500 (EST)";
  "Eastern Standard Time";
try { if (Inst43 <= 1000 && typeof (dt.setHours) != "undefined") {_RecordType("<2244,2255,75>",(dt.setHours)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (dt) != "undefined") {_RecordType("<2244,2246,75>",(dt)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (dt.getHours) != "undefined") {_RecordType("<2256,2267,75>",(dt.getHours)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (dt) != "undefined") {_RecordType("<2256,2258,75>",(dt)); Inst46++; } } catch(e) {}
  dt.setHours(dt.getHours() + 1);
try { if (Inst47 <= 1000 && typeof (dt) != "undefined") {_RecordType("<2278,2280,76>",(dt)); Inst47++; } } catch(e) {}
  dt;
  "Sun Mar 08 2009 03:00:00 GMT-0400 (EDT)";
  "Eastern Daylight Time";
});
try { if (Inst48 <= 1000 && typeof (inTimeZone) != "undefined") {_RecordType("<2358,2368,80>",(inTimeZone)); Inst48++; } } catch(e) {}
inTimeZone("MST7MDT", () => {
try { if (Inst50 <= 1000 && typeof (Date) != "undefined") {_RecordType("<2403,2407,81>",(Date)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (Month.March) != "undefined") {_RecordType("<2414,2425,81>",(Month.March)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (Month) != "undefined") {_RecordType("<2414,2419,81>",(Month)); Inst52++; } } catch(e) {}
  let dt = new Date(2009, Month.March, 8, 1, 0, 0);
try { if (Inst49 <= 1000 && typeof (dt) != "undefined") {_RecordType("<2394,2396,81>",(dt)); Inst49++; } } catch(e) {}
try { if (Inst53 <= 1000 && typeof (dt) != "undefined") {_RecordType("<2442,2444,82>",(dt)); Inst53++; } } catch(e) {}
  dt;
  "Sun Mar 08 2009 01:00:00 GMT-0700 (MST)";
  "Mountain Standard Time";
try { if (Inst54 <= 1000 && typeof (dt.setHours) != "undefined") {_RecordType("<2521,2532,85>",(dt.setHours)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (dt) != "undefined") {_RecordType("<2521,2523,85>",(dt)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (dt.getHours) != "undefined") {_RecordType("<2533,2544,85>",(dt.getHours)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (dt) != "undefined") {_RecordType("<2533,2535,85>",(dt)); Inst57++; } } catch(e) {}
  dt.setHours(dt.getHours() + 1);
try { if (Inst58 <= 1000 && typeof (dt) != "undefined") {_RecordType("<2555,2557,86>",(dt)); Inst58++; } } catch(e) {}
  dt;
  "Sun Mar 08 2009 03:00:00 GMT-0600 (MDT)";
  "Mountain Daylight Time";
});
try { if (Inst59 <= 1000 && typeof (inTimeZone) != "undefined") {_RecordType("<2636,2646,90>",(inTimeZone)); Inst59++; } } catch(e) {}
inTimeZone("EST5EDT", () => {
try { if (Inst61 <= 1000 && typeof (Date) != "undefined") {_RecordType("<2682,2686,91>",(Date)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (Date.UTC) != "undefined") {_RecordType("<2687,2695,91>",(Date.UTC)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (Date) != "undefined") {_RecordType("<2687,2691,91>",(Date)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (Month.March) != "undefined") {_RecordType("<2702,2713,91>",(Month.March)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (Month) != "undefined") {_RecordType("<2702,2707,91>",(Month)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (msPerHour) != "undefined") {_RecordType("<2733,2742,91>",(msPerHour)); Inst66++; } } catch(e) {}
  let dt1 = new Date(Date.UTC(2008, Month.March, 9, 0, 0, 0) + 5 * msPerHour);
try { if (Inst60 <= 1000 && typeof (dt1) != "undefined") {_RecordType("<2672,2675,91>",(dt1)); Inst60++; } } catch(e) {}
try { if (Inst67 <= 1000 && typeof (dt1) != "undefined") {_RecordType("<2747,2750,92>",(dt1)); Inst67++; } } catch(e) {}
  dt1;
  "Sun Mar 09 2008 00:00:00 GMT-0500 (EST)";
  "Eastern Standard Time";
try { if (Inst69 <= 1000 && typeof (Date) != "undefined") {_RecordType("<2840,2844,95>",(Date)); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (Date.UTC) != "undefined") {_RecordType("<2845,2853,95>",(Date.UTC)); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (Date) != "undefined") {_RecordType("<2845,2849,95>",(Date)); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (Month.March) != "undefined") {_RecordType("<2860,2871,95>",(Month.March)); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (Month) != "undefined") {_RecordType("<2860,2865,95>",(Month)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (msPerHour) != "undefined") {_RecordType("<2891,2900,95>",(msPerHour)); Inst74++; } } catch(e) {}
  let dt2 = new Date(Date.UTC(2008, Month.March, 9, 1, 0, 0) + 5 * msPerHour);
try { if (Inst68 <= 1000 && typeof (dt2) != "undefined") {_RecordType("<2830,2833,95>",(dt2)); Inst68++; } } catch(e) {}
try { if (Inst75 <= 1000 && typeof (dt2) != "undefined") {_RecordType("<2905,2908,96>",(dt2)); Inst75++; } } catch(e) {}
  dt2;
  "Sun Mar 09 2008 01:00:00 GMT-0500 (EST)";
  "Eastern Standard Time";
try { if (Inst77 <= 1000 && typeof (Date) != "undefined") {_RecordType("<2998,3002,99>",(Date)); Inst77++; } } catch(e) {}try { if (Inst78 <= 1000 && typeof (Date.UTC) != "undefined") {_RecordType("<3003,3011,99>",(Date.UTC)); Inst78++; } } catch(e) {}try { if (Inst79 <= 1000 && typeof (Date) != "undefined") {_RecordType("<3003,3007,99>",(Date)); Inst79++; } } catch(e) {}try { if (Inst80 <= 1000 && typeof (Month.March) != "undefined") {_RecordType("<3018,3029,99>",(Month.March)); Inst80++; } } catch(e) {}try { if (Inst81 <= 1000 && typeof (Month) != "undefined") {_RecordType("<3018,3023,99>",(Month)); Inst81++; } } catch(e) {}try { if (Inst82 <= 1000 && typeof (msPerHour) != "undefined") {_RecordType("<3049,3058,99>",(msPerHour)); Inst82++; } } catch(e) {}
  let dt3 = new Date(Date.UTC(2008, Month.March, 9, 4, 0, 0) + 4 * msPerHour);
try { if (Inst76 <= 1000 && typeof (dt3) != "undefined") {_RecordType("<2988,2991,99>",(dt3)); Inst76++; } } catch(e) {}
try { if (Inst83 <= 1000 && typeof (dt3) != "undefined") {_RecordType("<3063,3066,100>",(dt3)); Inst83++; } } catch(e) {}
  dt3;
  "Sun Mar 09 2008 04:00:00 GMT-0400 (EDT)";
  "Eastern Daylight Time";
}); // bug 802627

try { if (Inst84 <= 1000 && typeof (inTimeZone) != "undefined") {_RecordType("<3159,3169,105>",(inTimeZone)); Inst84++; } } catch(e) {}
inTimeZone("EST5EDT", () => {
try { if (Inst86 <= 1000 && typeof (Date) != "undefined") {_RecordType("<3204,3208,106>",(Date)); Inst86++; } } catch(e) {}
  let dt = new Date(0);
try { if (Inst85 <= 1000 && typeof (dt) != "undefined") {_RecordType("<3195,3197,106>",(dt)); Inst85++; } } catch(e) {}
try { if (Inst87 <= 1000 && typeof (dt) != "undefined") {_RecordType("<3215,3217,107>",(dt)); Inst87++; } } catch(e) {}
  dt;
  "Wed Dec 31 1969 19:00:00 GMT-0500 (EST)";
  "Eastern Standard Time";
}); // bug 879261

try { if (Inst88 <= 1000 && typeof (inTimeZone) != "undefined") {_RecordType("<3310,3320,112>",(inTimeZone)); Inst88++; } } catch(e) {}
inTimeZone("EST5EDT", () => {
try { if (Inst90 <= 1000 && typeof (Date) != "undefined") {_RecordType("<3356,3360,113>",(Date)); Inst90++; } } catch(e) {}
  let dt1 = new Date(1362891600000);
try { if (Inst89 <= 1000 && typeof (dt1) != "undefined") {_RecordType("<3346,3349,113>",(dt1)); Inst89++; } } catch(e) {}
try { if (Inst91 <= 1000 && typeof (dt1) != "undefined") {_RecordType("<3379,3382,114>",(dt1)); Inst91++; } } catch(e) {}
  dt1;
  "Sun Mar 10 2013 00:00:00 GMT-0500 (EST)";
  "Eastern Standard Time";
try { if (Inst93 <= 1000 && typeof (Date) != "undefined") {_RecordType("<3472,3476,117>",(Date)); Inst93++; } } catch(e) {}try { if (Inst94 <= 1000 && typeof (dt1.setHours) != "undefined") {_RecordType("<3477,3489,117>",(dt1.setHours)); Inst94++; } } catch(e) {}try { if (Inst95 <= 1000 && typeof (dt1) != "undefined") {_RecordType("<3477,3480,117>",(dt1)); Inst95++; } } catch(e) {}try { if (Inst96 <= 1000 && typeof (dt1.getHours) != "undefined") {_RecordType("<3490,3502,117>",(dt1.getHours)); Inst96++; } } catch(e) {}try { if (Inst97 <= 1000 && typeof (dt1) != "undefined") {_RecordType("<3490,3493,117>",(dt1)); Inst97++; } } catch(e) {}
  let dt2 = new Date(dt1.setHours(dt1.getHours() + 24));
try { if (Inst92 <= 1000 && typeof (dt2) != "undefined") {_RecordType("<3462,3465,117>",(dt2)); Inst92++; } } catch(e) {}
try { if (Inst98 <= 1000 && typeof (dt2) != "undefined") {_RecordType("<3515,3518,118>",(dt2)); Inst98++; } } catch(e) {}
  dt2;
  "Mon Mar 11 2013 00:00:00 GMT-0400 (EDT)";
  "Eastern Daylight Time";
});
try { if (Inst99 <= 1000 && typeof (inTimeZone) != "undefined") {_RecordType("<3596,3606,122>",(inTimeZone)); Inst99++; } } catch(e) {}
inTimeZone("PST8PDT", () => {
try { if (Inst101 <= 1000 && typeof (Date) != "undefined") {_RecordType("<3642,3646,123>",(Date)); Inst101++; } } catch(e) {}try { if (Inst102 <= 1000 && typeof (Month.January) != "undefined") {_RecordType("<3653,3666,123>",(Month.January)); Inst102++; } } catch(e) {}try { if (Inst103 <= 1000 && typeof (Month) != "undefined") {_RecordType("<3653,3658,123>",(Month)); Inst103++; } } catch(e) {}
  let dt1 = new Date(2014, Month.January, 1);
try { if (Inst100 <= 1000 && typeof (dt1) != "undefined") {_RecordType("<3632,3635,123>",(dt1)); Inst100++; } } catch(e) {}
try { if (Inst104 <= 1000 && typeof (dt1) != "undefined") {_RecordType("<3674,3677,124>",(dt1)); Inst104++; } } catch(e) {}
  dt1;
  "Wed Jan 01 2014 00:00:00 GMT-0800 (PST)";
  "Pacific Standard Time";
try { if (Inst106 <= 1000 && typeof (Date) != "undefined") {_RecordType("<3767,3771,127>",(Date)); Inst106++; } } catch(e) {}try { if (Inst107 <= 1000 && typeof (Month.August) != "undefined") {_RecordType("<3778,3790,127>",(Month.August)); Inst107++; } } catch(e) {}try { if (Inst108 <= 1000 && typeof (Month) != "undefined") {_RecordType("<3778,3783,127>",(Month)); Inst108++; } } catch(e) {}
  let dt2 = new Date(2014, Month.August, 1);
try { if (Inst105 <= 1000 && typeof (dt2) != "undefined") {_RecordType("<3757,3760,127>",(dt2)); Inst105++; } } catch(e) {}
try { if (Inst109 <= 1000 && typeof (dt2) != "undefined") {_RecordType("<3798,3801,128>",(dt2)); Inst109++; } } catch(e) {}
  dt2;
  "Fri Aug 01 2014 00:00:00 GMT-0700 (PDT)";
  "Pacific Daylight Time";
});
try { if (Inst110 <= 1000 && typeof (inTimeZone) != "undefined") {_RecordType("<3879,3889,132>",(inTimeZone)); Inst110++; } } catch(e) {}
inTimeZone("EST5EDT", () => {
try { if (Inst112 <= 1000 && typeof (Date) != "undefined") {_RecordType("<3925,3929,133>",(Date)); Inst112++; } } catch(e) {}try { if (Inst113 <= 1000 && typeof (Month.October) != "undefined") {_RecordType("<3936,3949,133>",(Month.October)); Inst113++; } } catch(e) {}try { if (Inst114 <= 1000 && typeof (Month) != "undefined") {_RecordType("<3936,3941,133>",(Month)); Inst114++; } } catch(e) {}
  let dt1 = new Date(2016, Month.October, 14, 3, 5, 9);
try { if (Inst111 <= 1000 && typeof (dt1) != "undefined") {_RecordType("<3915,3918,133>",(dt1)); Inst111++; } } catch(e) {}
try { if (Inst115 <= 1000 && typeof (dt1) != "undefined") {_RecordType("<3967,3970,134>",(dt1)); Inst115++; } } catch(e) {}
  dt1;
  "Fri Oct 14 2016 03:05:09 GMT-0400 (EDT)";
  "Eastern Daylight Time";
try { if (Inst117 <= 1000 && typeof (Date) != "undefined") {_RecordType("<4060,4064,137>",(Date)); Inst117++; } } catch(e) {}try { if (Inst118 <= 1000 && typeof (Month.January) != "undefined") {_RecordType("<4071,4084,137>",(Month.January)); Inst118++; } } catch(e) {}try { if (Inst119 <= 1000 && typeof (Month) != "undefined") {_RecordType("<4071,4076,137>",(Month)); Inst119++; } } catch(e) {}
  let dt2 = new Date(2016, Month.January, 9, 23, 26, 40);
try { if (Inst116 <= 1000 && typeof (dt2) != "undefined") {_RecordType("<4050,4053,137>",(dt2)); Inst116++; } } catch(e) {}
try { if (Inst120 <= 1000 && typeof (dt2) != "undefined") {_RecordType("<4104,4107,138>",(dt2)); Inst120++; } } catch(e) {}
  dt2;
  "Sat Jan 09 2016 23:26:40 GMT-0500 (EST)";
  "Eastern Standard Time";
}); // bug 1084547

try { if (Inst121 <= 1000 && typeof (inTimeZone) != "undefined") {_RecordType("<4201,4211,143>",(inTimeZone)); Inst121++; } } catch(e) {}
inTimeZone("EST5EDT", () => {
try { if (Inst123 <= 1000 && typeof (Date) != "undefined") {_RecordType("<4246,4250,144>",(Date)); Inst123++; } } catch(e) {}try { if (Inst124 <= 1000 && typeof (Date.parse) != "undefined") {_RecordType("<4251,4261,144>",(Date.parse)); Inst124++; } } catch(e) {}try { if (Inst125 <= 1000 && typeof (Date) != "undefined") {_RecordType("<4251,4255,144>",(Date)); Inst125++; } } catch(e) {}
  let dt = new Date(Date.parse("2014-11-02T02:00:00-04:00"));
try { if (Inst122 <= 1000 && typeof (dt) != "undefined") {_RecordType("<4237,4239,144>",(dt)); Inst122++; } } catch(e) {}
try { if (Inst126 <= 1000 && typeof (dt) != "undefined") {_RecordType("<4295,4297,145>",(dt)); Inst126++; } } catch(e) {}
  dt;
  "Sun Nov 02 2014 01:00:00 GMT-0500 (EST)";
  "Eastern Standard Time";
try { if (Inst127 <= 1000 && typeof (dt.setMilliseconds) != "undefined") {_RecordType("<4373,4391,148>",(dt.setMilliseconds)); Inst127++; } } catch(e) {}try { if (Inst128 <= 1000 && typeof (dt) != "undefined") {_RecordType("<4373,4375,148>",(dt)); Inst128++; } } catch(e) {}
  dt.setMilliseconds(0);
try { if (Inst129 <= 1000 && typeof (dt) != "undefined") {_RecordType("<4398,4400,149>",(dt)); Inst129++; } } catch(e) {}
  dt;
  "Sun Nov 02 2014 01:00:00 GMT-0400 (EDT)";
  "Eastern Daylight Time";
}); // bug 1303306

try { if (Inst130 <= 1000 && typeof (inTimeZone) != "undefined") {_RecordType("<4494,4504,154>",(inTimeZone)); Inst130++; } } catch(e) {}
inTimeZone("EST5EDT", () => {
try { if (Inst132 <= 1000 && typeof (Date) != "undefined") {_RecordType("<4539,4543,155>",(Date)); Inst132++; } } catch(e) {}try { if (Inst133 <= 1000 && typeof (Month.September) != "undefined") {_RecordType("<4550,4565,155>",(Month.September)); Inst133++; } } catch(e) {}try { if (Inst134 <= 1000 && typeof (Month) != "undefined") {_RecordType("<4550,4555,155>",(Month)); Inst134++; } } catch(e) {}
  let dt = new Date(2016, Month.September, 15, 16, 14, 48);
try { if (Inst131 <= 1000 && typeof (dt) != "undefined") {_RecordType("<4530,4532,155>",(dt)); Inst131++; } } catch(e) {}
try { if (Inst135 <= 1000 && typeof (dt) != "undefined") {_RecordType("<4586,4588,156>",(dt)); Inst135++; } } catch(e) {}
  dt;
  "Thu Sep 15 2016 16:14:48 GMT-0400 (EDT)";
  "Eastern Daylight Time";
}); // bug 1317364

try { if (Inst136 <= 1000 && typeof (inTimeZone) != "undefined") {_RecordType("<4682,4692,161>",(inTimeZone)); Inst136++; } } catch(e) {}
inTimeZone("PST8PDT", () => {
try { if (Inst138 <= 1000 && typeof (Date) != "undefined") {_RecordType("<4727,4731,162>",(Date)); Inst138++; } } catch(e) {}try { if (Inst139 <= 1000 && typeof (Month.March) != "undefined") {_RecordType("<4738,4749,162>",(Month.March)); Inst139++; } } catch(e) {}try { if (Inst140 <= 1000 && typeof (Month) != "undefined") {_RecordType("<4738,4743,162>",(Month)); Inst140++; } } catch(e) {}
  let dt = new Date(2016, Month.March, 13, 2, 30, 0, 0);
try { if (Inst137 <= 1000 && typeof (dt) != "undefined") {_RecordType("<4718,4720,162>",(dt)); Inst137++; } } catch(e) {}
try { if (Inst141 <= 1000 && typeof (dt) != "undefined") {_RecordType("<4771,4773,163>",(dt)); Inst141++; } } catch(e) {}
  dt;
  "Sun Mar 13 2016 03:30:00 GMT-0700 (PDT)";
  "Pacific Daylight Time";
try { if (Inst143 <= 1000 && typeof (Date) != "undefined") {_RecordType("<4863,4867,166>",(Date)); Inst143++; } } catch(e) {}try { if (Inst144 <= 1000 && typeof (Month.January) != "undefined") {_RecordType("<4874,4887,166>",(Month.January)); Inst144++; } } catch(e) {}try { if (Inst145 <= 1000 && typeof (Month) != "undefined") {_RecordType("<4874,4879,166>",(Month)); Inst145++; } } catch(e) {}
  let dt2 = new Date(2016, Month.January, 5, 0, 30, 30, 500);
try { if (Inst142 <= 1000 && typeof (dt2) != "undefined") {_RecordType("<4853,4856,166>",(dt2)); Inst142++; } } catch(e) {}
try { if (Inst146 <= 1000 && typeof (dt2) != "undefined") {_RecordType("<4911,4914,167>",(dt2)); Inst146++; } } catch(e) {}
  dt2;
  "Tue Jan 05 2016 00:30:30 GMT-0800 (PST)";
  "Pacific Standard Time";
try { if (Inst148 <= 1000 && typeof (Date) != "undefined") {_RecordType("<5004,5008,170>",(Date)); Inst148++; } } catch(e) {}try { if (Inst149 <= 1000 && typeof (dt2.getTime) != "undefined") {_RecordType("<5009,5020,170>",(dt2.getTime)); Inst149++; } } catch(e) {}try { if (Inst150 <= 1000 && typeof (dt2) != "undefined") {_RecordType("<5009,5012,170>",(dt2)); Inst150++; } } catch(e) {}
  let dt3 = new Date(dt2.getTime());
try { if (Inst147 <= 1000 && typeof (dt3) != "undefined") {_RecordType("<4994,4997,170>",(dt3)); Inst147++; } } catch(e) {}
try { if (Inst151 <= 1000 && typeof (dt3.setMonth) != "undefined") {_RecordType("<5027,5039,171>",(dt3.setMonth)); Inst151++; } } catch(e) {}try { if (Inst152 <= 1000 && typeof (dt3) != "undefined") {_RecordType("<5027,5030,171>",(dt3)); Inst152++; } } catch(e) {}try { if (Inst153 <= 1000 && typeof (dt2.getMonth) != "undefined") {_RecordType("<5040,5052,171>",(dt2.getMonth)); Inst153++; } } catch(e) {}try { if (Inst154 <= 1000 && typeof (dt2) != "undefined") {_RecordType("<5040,5043,171>",(dt2)); Inst154++; } } catch(e) {}
  dt3.setMonth(dt2.getMonth() + 2);
try { if (Inst155 <= 1000 && typeof (dt3.setDate) != "undefined") {_RecordType("<5063,5074,172>",(dt3.setDate)); Inst155++; } } catch(e) {}try { if (Inst156 <= 1000 && typeof (dt3) != "undefined") {_RecordType("<5063,5066,172>",(dt3)); Inst156++; } } catch(e) {}try { if (Inst157 <= 1000 && typeof (dt2.getDate) != "undefined") {_RecordType("<5075,5086,172>",(dt2.getDate)); Inst157++; } } catch(e) {}try { if (Inst158 <= 1000 && typeof (dt2) != "undefined") {_RecordType("<5075,5078,172>",(dt2)); Inst158++; } } catch(e) {}
  dt3.setDate(dt2.getDate() + 7 + 1);
try { if (Inst159 <= 1000 && typeof (dt3.setHours) != "undefined") {_RecordType("<5101,5113,173>",(dt3.setHours)); Inst159++; } } catch(e) {}try { if (Inst160 <= 1000 && typeof (dt3) != "undefined") {_RecordType("<5101,5104,173>",(dt3)); Inst160++; } } catch(e) {}try { if (Inst161 <= 1000 && typeof (dt2.getHours) != "undefined") {_RecordType("<5114,5126,173>",(dt2.getHours)); Inst161++; } } catch(e) {}try { if (Inst162 <= 1000 && typeof (dt2) != "undefined") {_RecordType("<5114,5117,173>",(dt2)); Inst162++; } } catch(e) {}
  dt3.setHours(dt2.getHours() + 2);
try { if (Inst163 <= 1000 && typeof (dt3.getHours) != "undefined") {_RecordType("<5137,5149,174>",(dt3.getHours)); Inst163++; } } catch(e) {}try { if (Inst164 <= 1000 && typeof (dt3) != "undefined") {_RecordType("<5137,5140,174>",(dt3)); Inst164++; } } catch(e) {}
  dt3.getHours();
  3;
}); // bug 1355272

try { if (Inst165 <= 1000 && typeof (inTimeZone) != "undefined") {_RecordType("<5178,5188,178>",(inTimeZone)); Inst165++; } } catch(e) {}
inTimeZone("PST8PDT", () => {
try { if (Inst167 <= 1000 && typeof (Date) != "undefined") {_RecordType("<5223,5227,179>",(Date)); Inst167++; } } catch(e) {}try { if (Inst168 <= 1000 && typeof (Month.April) != "undefined") {_RecordType("<5234,5245,179>",(Month.April)); Inst168++; } } catch(e) {}try { if (Inst169 <= 1000 && typeof (Month) != "undefined") {_RecordType("<5234,5239,179>",(Month)); Inst169++; } } catch(e) {}
  let dt = new Date(2017, Month.April, 10, 17, 25, 07);
try { if (Inst166 <= 1000 && typeof (dt) != "undefined") {_RecordType("<5214,5216,179>",(dt)); Inst166++; } } catch(e) {}
try { if (Inst170 <= 1000 && typeof (dt) != "undefined") {_RecordType("<5266,5268,180>",(dt)); Inst170++; } } catch(e) {}
  dt;
  "Mon Apr 10 2017 17:25:07 GMT-0700 (PDT)";
  "Pacific Daylight Time";
});

try { if (Inst171 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<5358,5371,185>",(reportCompare)); Inst171++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst172 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<5392,5405,186>",(reportCompare)); Inst172++; } } catch(e) {}
  reportCompare(true, true);
}

