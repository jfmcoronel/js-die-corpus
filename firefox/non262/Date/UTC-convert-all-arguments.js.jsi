var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/*
 * Any copyright is dedicated to the Public Domain.
 * http://creativecommonn.org/licenses/publicdomain/
 */
var BUGNUMBER = 1160356;
try { if (Inst0 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<116,125,5>",(BUGNUMBER)); Inst0++; } } catch(e) {}
var summary = "Date.UTC must convert *all* arguments to number, not return NaN early if " + "a non-finite argument is encountered";
try { if (Inst1 <= 1000 && typeof (summary) != "undefined") {_RecordType("<141,148,6>",(summary)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (print) != "undefined") {_RecordType("<269,274,7>",(print)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<275,284,7>",(BUGNUMBER)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (summary) != "undefined") {_RecordType("<294,301,7>",(summary)); Inst4++; } } catch(e) {}
print(BUGNUMBER + ": " + summary);
/**************
 * BEGIN TEST *
 **************/

try { if (Inst5 <= 1000 && typeof (expectThrowTypeError) != "undefined") {_RecordType("<363,383,12>",(expectThrowTypeError)); Inst5++; } } catch(e) {}
function expectThrowTypeError(f, i) {
try { if (Inst6 <= 1000 && typeof (f) != "undefined") {_RecordType("<384,385,12>",(f)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<387,388,12>",(i)); Inst7++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (e) != "undefined") {_RecordType("<457,458,16>",(e)); Inst10++; } } catch(e) {}
  try {
try { if (Inst8 <= 1000 && typeof (f) != "undefined") {_RecordType("<404,405,14>",(f)); Inst8++; } } catch(e) {}
    f();
try { if (Inst9 <= 1000 && typeof (Error) != "undefined") {_RecordType("<423,428,15>",(Error)); Inst9++; } } catch(e) {}
    throw new Error("didn't throw");
  } catch (e) {
try { if (Inst11 <= 1000 && typeof (e) != "undefined") {_RecordType("<466,467,17>",(e)); Inst11++; } } catch(e) {}
    e;
    42;
try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<492,493,19>",(i)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (e) != "undefined") {_RecordType("<520,521,19>",(e)); Inst13++; } } catch(e) {}
    "index " + i + ": expected 42, got " + e;
  }
}

var bad = {
  toString: function () {
    throw 17;
  },
  valueOf: function () {
    throw 42;
  }
};
try { if (Inst14 <= 1000 && typeof (bad) != "undefined") {_RecordType("<534,537,23>",(bad)); Inst14++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (bad) != "undefined") {_RecordType("<646,649,31>",(bad)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<653,656,31>",(NaN)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (bad) != "undefined") {_RecordType("<658,661,31>",(bad)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<665,673,31>",(Infinity)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (bad) != "undefined") {_RecordType("<675,678,31>",(bad)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (bad) != "undefined") {_RecordType("<688,691,31>",(bad)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<701,704,31>",(NaN)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (bad) != "undefined") {_RecordType("<706,709,31>",(bad)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<719,727,31>",(Infinity)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (bad) != "undefined") {_RecordType("<729,732,31>",(bad)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (bad) != "undefined") {_RecordType("<745,748,31>",(bad)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<761,764,31>",(NaN)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (bad) != "undefined") {_RecordType("<766,769,31>",(bad)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<782,790,31>",(Infinity)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (bad) != "undefined") {_RecordType("<792,795,31>",(bad)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (bad) != "undefined") {_RecordType("<812,815,31>",(bad)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<832,835,31>",(NaN)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (bad) != "undefined") {_RecordType("<837,840,31>",(bad)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<857,865,31>",(Infinity)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (bad) != "undefined") {_RecordType("<867,870,31>",(bad)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (bad) != "undefined") {_RecordType("<891,894,31>",(bad)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<915,918,31>",(NaN)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (bad) != "undefined") {_RecordType("<920,923,31>",(bad)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<944,952,31>",(Infinity)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (bad) != "undefined") {_RecordType("<954,957,31>",(bad)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (bad) != "undefined") {_RecordType("<982,985,31>",(bad)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<1010,1013,31>",(NaN)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (bad) != "undefined") {_RecordType("<1015,1018,31>",(bad)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<1043,1051,31>",(Infinity)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (bad) != "undefined") {_RecordType("<1053,1056,31>",(bad)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (bad) != "undefined") {_RecordType("<1085,1088,31>",(bad)); Inst46++; } } catch(e) {}
var args = [[bad], [NaN, bad], [Infinity, bad], [1970, bad], [1970, NaN, bad], [1970, Infinity, bad], [1970, 4, bad], [1970, 4, NaN, bad], [1970, 4, Infinity, bad], [1970, 4, 17, bad], [1970, 4, 17, NaN, bad], [1970, 4, 17, Infinity, bad], [1970, 4, 17, 13, bad], [1970, 4, 17, 13, NaN, bad], [1970, 4, 17, 13, Infinity, bad], [1970, 4, 17, 13, 37, bad], [1970, 4, 17, 13, 37, NaN, bad], [1970, 4, 17, 13, 37, Infinity, bad], [1970, 4, 17, 13, 37, 23, bad]];
try { if (Inst15 <= 1000 && typeof (args) != "undefined") {_RecordType("<637,641,31>",(args)); Inst15++; } } catch(e) {}

for (var i = 0, len = args.length; i < len; i++) {
try { if (Inst47 <= 1000 && typeof (i) != "undefined") {_RecordType("<1102,1103,33>",(i)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (len) != "undefined") {_RecordType("<1109,1112,33>",(len)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (args.length) != "undefined") {_RecordType("<1115,1126,33>",(args.length)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (args) != "undefined") {_RecordType("<1115,1119,33>",(args)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (i) != "undefined") {_RecordType("<1128,1129,33>",(i)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (len) != "undefined") {_RecordType("<1132,1135,33>",(len)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (i) != "undefined") {_RecordType("<1137,1138,33>",(i)); Inst53++; } } catch(e) {}
try { if (Inst54 <= 1000 && typeof (expectThrowTypeError) != "undefined") {_RecordType("<1146,1166,34>",(expectThrowTypeError)); Inst54++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (i) != "undefined") {_RecordType("<1221,1222,36>",(i)); Inst60++; } } catch(e) {}
  expectThrowTypeError(function () {
try { if (Inst55 <= 1000 && typeof (Date.UTC.apply) != "undefined") {_RecordType("<1185,1199,35>",(Date.UTC.apply)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (Date.UTC) != "undefined") {_RecordType("<1185,1193,35>",(Date.UTC)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (Date) != "undefined") {_RecordType("<1185,1189,35>",(Date)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (args[i]) != "undefined") {_RecordType("<1206,1213,35>",(args[i])); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (args) != "undefined") {_RecordType("<1206,1210,35>",(args)); Inst59++; } } catch(e) {}
    Date.UTC.apply(null, args[i]);
  }, i);
}
/******************************************************************************/


try { if (Inst61 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1321,1334,41>",(reportCompare)); Inst61++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst62 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1355,1368,42>",(reportCompare)); Inst62++; } } catch(e) {}
  reportCompare(true, true);
}

try { if (Inst63 <= 1000 && typeof (print) != "undefined") {_RecordType("<1385,1390,45>",(print)); Inst63++; } } catch(e) {}
print("Tests complete");

