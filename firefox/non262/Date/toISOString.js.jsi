var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/*
 * Any copyright is dedicated to the Public Domain.
 * http://creativecommons.org/licenses/publicdomain/
 */
try { if (Inst0 <= 1000 && typeof (throwsRangeError) != "undefined") {_RecordType("<121,137,5>",(throwsRangeError)); Inst0++; } } catch(e) {}
function throwsRangeError(t) {
try { if (Inst1 <= 1000 && typeof (t) != "undefined") {_RecordType("<138,139,5>",(t)); Inst1++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (err) != "undefined") {_RecordType("<314,317,11>",(err)); Inst12++; } } catch(e) {}
  try {
try { if (Inst3 <= 1000 && typeof (Date) != "undefined") {_RecordType("<170,174,7>",(Date)); Inst3++; } } catch(e) {}
    var date = new Date();
try { if (Inst2 <= 1000 && typeof (date) != "undefined") {_RecordType("<159,163,7>",(date)); Inst2++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (date.setTime) != "undefined") {_RecordType("<182,194,8>",(date.setTime)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (date) != "undefined") {_RecordType("<182,186,8>",(date)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (t) != "undefined") {_RecordType("<195,196,8>",(t)); Inst6++; } } catch(e) {}
    date.setTime(t);
try { if (Inst8 <= 1000 && typeof (date.toISOString) != "undefined") {_RecordType("<211,227,9>",(date.toISOString)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (date) != "undefined") {_RecordType("<211,215,9>",(date)); Inst9++; } } catch(e) {}
    var r = date.toISOString();
try { if (Inst7 <= 1000 && typeof (r) != "undefined") {_RecordType("<207,208,9>",(r)); Inst7++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (Error) != "undefined") {_RecordType("<245,250,10>",(Error)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (r) != "undefined") {_RecordType("<299,300,10>",(r)); Inst11++; } } catch(e) {}
    throw new Error("toISOString didn't throw, instead returned " + r);
  } catch (err) {
try { if (Inst13 <= 1000 && typeof (err) != "undefined") {_RecordType("<325,328,12>",(err)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (RangeError) != "undefined") {_RecordType("<340,350,12>",(RangeError)); Inst14++; } } catch(e) {}
    err instanceof RangeError;
    true;
try { if (Inst15 <= 1000 && typeof (err) != "undefined") {_RecordType("<384,387,14>",(err)); Inst15++; } } catch(e) {}
    'wrong error: ' + err;
    return;
  }

  0;
  1;
  'not good, nyan, nyan';
}

try { if (Inst16 <= 1000 && typeof (throwsRangeError) != "undefined") {_RecordType("<445,461,23>",(throwsRangeError)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<462,470,23>",(Infinity)); Inst17++; } } catch(e) {}
throwsRangeError(Infinity);
try { if (Inst18 <= 1000 && typeof (throwsRangeError) != "undefined") {_RecordType("<473,489,24>",(throwsRangeError)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<491,499,24>",(Infinity)); Inst19++; } } catch(e) {}
throwsRangeError(-Infinity);
try { if (Inst20 <= 1000 && typeof (throwsRangeError) != "undefined") {_RecordType("<502,518,25>",(throwsRangeError)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<519,522,25>",(NaN)); Inst21++; } } catch(e) {}
throwsRangeError(NaN);

try { if (Inst22 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<537,550,27>",(reportCompare)); Inst22++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst23 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<571,584,28>",(reportCompare)); Inst23++; } } catch(e) {}
  reportCompare(true, true);
}

