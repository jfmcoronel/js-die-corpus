var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
var Inst102 = 0;
var Inst103 = 0;
var Inst104 = 0;
var Inst105 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// |reftest| skip-if(!xulRuntime.shell)
const msPerMinute = 60 * 1000;
try { if (Inst0 <= 1000 && typeof (msPerMinute) != "undefined") {_RecordType("<46,57,2>",(msPerMinute)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (shortTimeZone) != "undefined") {_RecordType("<81,94,4>",(shortTimeZone)); Inst1++; } } catch(e) {}
function shortTimeZone(str) {
try { if (Inst2 <= 1000 && typeof (str) != "undefined") {_RecordType("<95,98,4>",(str)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (str.replace("(Pacific Standard Time)", "(PST)").replace) != "undefined") {_RecordType("<111,166,5>",(str.replace("(Pacific Standard Time)", "(PST)").replace)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (str.replace) != "undefined") {_RecordType("<111,122,5>",(str.replace)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (str) != "undefined") {_RecordType("<111,114,5>",(str)); Inst5++; } } catch(e) {}
  return str.replace("(Pacific Standard Time)", "(PST)").replace("(Pacific Daylight Time)", "(PDT)");
}

try { if (Inst6 <= 1000 && typeof (assertEqDate) != "undefined") {_RecordType("<216,228,8>",(assertEqDate)); Inst6++; } } catch(e) {}
function assertEqDate(dt, date, time) {
try { if (Inst7 <= 1000 && typeof (dt) != "undefined") {_RecordType("<229,231,8>",(dt)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (date) != "undefined") {_RecordType("<233,237,8>",(date)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (time) != "undefined") {_RecordType("<239,243,8>",(time)); Inst9++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (shortTimeZone) != "undefined") {_RecordType("<249,262,9>",(shortTimeZone)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (dt.toString) != "undefined") {_RecordType("<263,274,9>",(dt.toString)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (dt) != "undefined") {_RecordType("<263,265,9>",(dt)); Inst12++; } } catch(e) {}
  shortTimeZone(dt.toString());
try { if (Inst13 <= 1000 && typeof (date) != "undefined") {_RecordType("<284,288,10>",(date)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (time) != "undefined") {_RecordType("<292,296,10>",(time)); Inst14++; } } catch(e) {}
  `${date} ${time}`;
try { if (Inst15 <= 1000 && typeof (dt.toDateString) != "undefined") {_RecordType("<302,317,11>",(dt.toDateString)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (dt) != "undefined") {_RecordType("<302,304,11>",(dt)); Inst16++; } } catch(e) {}
  dt.toDateString();
try { if (Inst17 <= 1000 && typeof (date) != "undefined") {_RecordType("<323,327,12>",(date)); Inst17++; } } catch(e) {}
  date;
try { if (Inst18 <= 1000 && typeof (shortTimeZone) != "undefined") {_RecordType("<331,344,13>",(shortTimeZone)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (dt.toTimeString) != "undefined") {_RecordType("<345,360,13>",(dt.toTimeString)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (dt) != "undefined") {_RecordType("<345,347,13>",(dt)); Inst20++; } } catch(e) {}
  shortTimeZone(dt.toTimeString());
try { if (Inst21 <= 1000 && typeof (time) != "undefined") {_RecordType("<367,371,14>",(time)); Inst21++; } } catch(e) {}
  time;
} // PDT -> PST, using milliseconds from epoch.


{
try { if (Inst23 <= 1000 && typeof (Date) != "undefined") {_RecordType("<446,450,19>",(Date)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (Month.November) != "undefined") {_RecordType("<457,471,19>",(Month.November)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Month) != "undefined") {_RecordType("<457,462,19>",(Month)); Inst25++; } } catch(e) {}
  let midnight = new Date(2016, Month.November, 6, 0, 0, 0, 0);
try { if (Inst22 <= 1000 && typeof (midnight) != "undefined") {_RecordType("<431,439,19>",(midnight)); Inst22++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (Date.UTC) != "undefined") {_RecordType("<509,517,20>",(Date.UTC)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (Date) != "undefined") {_RecordType("<509,513,20>",(Date)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (Month.November) != "undefined") {_RecordType("<524,538,20>",(Month.November)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (Month) != "undefined") {_RecordType("<524,529,20>",(Month)); Inst30++; } } catch(e) {}
  let midnightUTC = Date.UTC(2016, Month.November, 6, 0, 0, 0, 0); // Ensure midnight time is correct.
try { if (Inst26 <= 1000 && typeof (midnightUTC) != "undefined") {_RecordType("<495,506,20>",(midnightUTC)); Inst26++; } } catch(e) {}

try { if (Inst31 <= 1000 && typeof (midnightUTC) != "undefined") {_RecordType("<595,606,22>",(midnightUTC)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (midnight.getTime) != "undefined") {_RecordType("<609,625,22>",(midnight.getTime)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (midnight) != "undefined") {_RecordType("<609,617,22>",(midnight)); Inst33++; } } catch(e) {}
  midnightUTC - midnight.getTime();
try { if (Inst34 <= 1000 && typeof (msPerHour) != "undefined") {_RecordType("<636,645,23>",(msPerHour)); Inst34++; } } catch(e) {}
  -7 * msPerHour;
  let tests = [{
    offset: 0 * 60,
    date: "Sun Nov 06 2016",
    time: "00:00:00 GMT-0700 (PDT)"
  }, {
    offset: 0 * 60 + 30,
    date: "Sun Nov 06 2016",
    time: "00:30:00 GMT-0700 (PDT)"
  }, {
    offset: 1 * 60,
    date: "Sun Nov 06 2016",
    time: "01:00:00 GMT-0700 (PDT)"
  }, {
    offset: 1 * 60 + 30,
    date: "Sun Nov 06 2016",
    time: "01:30:00 GMT-0700 (PDT)"
  }, {
    offset: 2 * 60,
    date: "Sun Nov 06 2016",
    time: "01:00:00 GMT-0800 (PST)"
  }, {
    offset: 2 * 60 + 30,
    date: "Sun Nov 06 2016",
    time: "01:30:00 GMT-0800 (PST)"
  }, {
    offset: 3 * 60,
    date: "Sun Nov 06 2016",
    time: "02:00:00 GMT-0800 (PST)"
  }, {
    offset: 3 * 60 + 30,
    date: "Sun Nov 06 2016",
    time: "02:30:00 GMT-0800 (PST)"
  }, {
    offset: 4 * 60,
    date: "Sun Nov 06 2016",
    time: "03:00:00 GMT-0800 (PST)"
  }, {
    offset: 4 * 60 + 30,
    date: "Sun Nov 06 2016",
    time: "03:30:00 GMT-0800 (PST)"
  }];
try { if (Inst35 <= 1000 && typeof (tests) != "undefined") {_RecordType("<653,658,24>",(tests)); Inst35++; } } catch(e) {}

  for (let {
    offset,
    date,
    time
  } of tests) {
try { if (Inst36 <= 1000 && typeof (offset) != "undefined") {_RecordType("<1626,1632,67>",(offset)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (date) != "undefined") {_RecordType("<1638,1642,68>",(date)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (time) != "undefined") {_RecordType("<1648,1652,69>",(time)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (tests) != "undefined") {_RecordType("<1660,1665,70>",(tests)); Inst39++; } } catch(e) {}
try { if (Inst41 <= 1000 && typeof (Date) != "undefined") {_RecordType("<1686,1690,71>",(Date)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (midnight.getTime) != "undefined") {_RecordType("<1691,1707,71>",(midnight.getTime)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (midnight) != "undefined") {_RecordType("<1691,1699,71>",(midnight)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (offset) != "undefined") {_RecordType("<1712,1718,71>",(offset)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (msPerMinute) != "undefined") {_RecordType("<1721,1732,71>",(msPerMinute)); Inst45++; } } catch(e) {}
    let dt = new Date(midnight.getTime() + offset * msPerMinute);
try { if (Inst40 <= 1000 && typeof (dt) != "undefined") {_RecordType("<1677,1679,71>",(dt)); Inst40++; } } catch(e) {}
try { if (Inst46 <= 1000 && typeof (dt) != "undefined") {_RecordType("<1739,1741,72>",(dt)); Inst46++; } } catch(e) {}
    dt;
try { if (Inst47 <= 1000 && typeof (date) != "undefined") {_RecordType("<1747,1751,73>",(date)); Inst47++; } } catch(e) {}
    date;
try { if (Inst48 <= 1000 && typeof (time) != "undefined") {_RecordType("<1757,1761,74>",(time)); Inst48++; } } catch(e) {}
    time;
  }
} // PDT -> PST, using local date-time.

{
  let tests = [{
    offset: 0 * 60,
    date: "Sun Nov 06 2016",
    time: "00:00:00 GMT-0700 (PDT)"
  }, {
    offset: 0 * 60 + 30,
    date: "Sun Nov 06 2016",
    time: "00:30:00 GMT-0700 (PDT)"
  }, {
    offset: 1 * 60,
    date: "Sun Nov 06 2016",
    time: "01:00:00 GMT-0700 (PDT)"
  }, {
    offset: 1 * 60 + 30,
    date: "Sun Nov 06 2016",
    time: "01:30:00 GMT-0700 (PDT)"
  }, {
    offset: 2 * 60,
    date: "Sun Nov 06 2016",
    time: "02:00:00 GMT-0800 (PST)"
  }, {
    offset: 2 * 60 + 30,
    date: "Sun Nov 06 2016",
    time: "02:30:00 GMT-0800 (PST)"
  }, {
    offset: 3 * 60,
    date: "Sun Nov 06 2016",
    time: "03:00:00 GMT-0800 (PST)"
  }, {
    offset: 3 * 60 + 30,
    date: "Sun Nov 06 2016",
    time: "03:30:00 GMT-0800 (PST)"
  }, {
    offset: 4 * 60,
    date: "Sun Nov 06 2016",
    time: "04:00:00 GMT-0800 (PST)"
  }, {
    offset: 4 * 60 + 30,
    date: "Sun Nov 06 2016",
    time: "04:30:00 GMT-0800 (PST)"
  }];
try { if (Inst49 <= 1000 && typeof (tests) != "undefined") {_RecordType("<1816,1821,79>",(tests)); Inst49++; } } catch(e) {}

  for (let {
    offset,
    date,
    time
  } of tests) {
try { if (Inst50 <= 1000 && typeof (offset) != "undefined") {_RecordType("<2789,2795,122>",(offset)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (date) != "undefined") {_RecordType("<2801,2805,123>",(date)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (time) != "undefined") {_RecordType("<2811,2815,124>",(time)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (tests) != "undefined") {_RecordType("<2823,2828,125>",(tests)); Inst53++; } } catch(e) {}
try { if (Inst55 <= 1000 && typeof (Date) != "undefined") {_RecordType("<2849,2853,126>",(Date)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (Month.November) != "undefined") {_RecordType("<2860,2874,126>",(Month.November)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (Month) != "undefined") {_RecordType("<2860,2865,126>",(Month)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (offset) != "undefined") {_RecordType("<2879,2885,126>",(offset)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (offset) != "undefined") {_RecordType("<2896,2902,126>",(offset)); Inst59++; } } catch(e) {}
    let dt = new Date(2016, Month.November, 6, offset / 60 | 0, offset % 60, 0, 0);
try { if (Inst54 <= 1000 && typeof (dt) != "undefined") {_RecordType("<2840,2842,126>",(dt)); Inst54++; } } catch(e) {}
try { if (Inst60 <= 1000 && typeof (dt) != "undefined") {_RecordType("<2920,2922,127>",(dt)); Inst60++; } } catch(e) {}
    dt;
try { if (Inst61 <= 1000 && typeof (date) != "undefined") {_RecordType("<2928,2932,128>",(date)); Inst61++; } } catch(e) {}
    date;
try { if (Inst62 <= 1000 && typeof (time) != "undefined") {_RecordType("<2938,2942,129>",(time)); Inst62++; } } catch(e) {}
    time;
  }
} // PST -> PDT, using milliseconds from epoch.

{
try { if (Inst64 <= 1000 && typeof (Date) != "undefined") {_RecordType("<3020,3024,134>",(Date)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (Month.March) != "undefined") {_RecordType("<3031,3042,134>",(Month.March)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (Month) != "undefined") {_RecordType("<3031,3036,134>",(Month)); Inst66++; } } catch(e) {}
  let midnight = new Date(2016, Month.March, 13, 0, 0, 0, 0);
try { if (Inst63 <= 1000 && typeof (midnight) != "undefined") {_RecordType("<3005,3013,134>",(midnight)); Inst63++; } } catch(e) {}
try { if (Inst68 <= 1000 && typeof (Date.UTC) != "undefined") {_RecordType("<3081,3089,135>",(Date.UTC)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (Date) != "undefined") {_RecordType("<3081,3085,135>",(Date)); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (Month.March) != "undefined") {_RecordType("<3096,3107,135>",(Month.March)); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (Month) != "undefined") {_RecordType("<3096,3101,135>",(Month)); Inst71++; } } catch(e) {}
  let midnightUTC = Date.UTC(2016, Month.March, 13, 0, 0, 0, 0); // Ensure midnight time is correct.
try { if (Inst67 <= 1000 && typeof (midnightUTC) != "undefined") {_RecordType("<3067,3078,135>",(midnightUTC)); Inst67++; } } catch(e) {}

try { if (Inst72 <= 1000 && typeof (midnightUTC) != "undefined") {_RecordType("<3165,3176,137>",(midnightUTC)); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (midnight.getTime) != "undefined") {_RecordType("<3179,3195,137>",(midnight.getTime)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (midnight) != "undefined") {_RecordType("<3179,3187,137>",(midnight)); Inst74++; } } catch(e) {}
  midnightUTC - midnight.getTime();
try { if (Inst75 <= 1000 && typeof (msPerHour) != "undefined") {_RecordType("<3206,3215,138>",(msPerHour)); Inst75++; } } catch(e) {}
  -8 * msPerHour;
  let tests = [{
    offset: 0 * 60,
    date: "Sun Mar 13 2016",
    time: "00:00:00 GMT-0800 (PST)"
  }, {
    offset: 0 * 60 + 30,
    date: "Sun Mar 13 2016",
    time: "00:30:00 GMT-0800 (PST)"
  }, {
    offset: 1 * 60,
    date: "Sun Mar 13 2016",
    time: "01:00:00 GMT-0800 (PST)"
  }, {
    offset: 1 * 60 + 30,
    date: "Sun Mar 13 2016",
    time: "01:30:00 GMT-0800 (PST)"
  }, {
    offset: 2 * 60,
    date: "Sun Mar 13 2016",
    time: "03:00:00 GMT-0700 (PDT)"
  }, {
    offset: 2 * 60 + 30,
    date: "Sun Mar 13 2016",
    time: "03:30:00 GMT-0700 (PDT)"
  }, {
    offset: 3 * 60,
    date: "Sun Mar 13 2016",
    time: "04:00:00 GMT-0700 (PDT)"
  }, {
    offset: 3 * 60 + 30,
    date: "Sun Mar 13 2016",
    time: "04:30:00 GMT-0700 (PDT)"
  }, {
    offset: 4 * 60,
    date: "Sun Mar 13 2016",
    time: "05:00:00 GMT-0700 (PDT)"
  }, {
    offset: 4 * 60 + 30,
    date: "Sun Mar 13 2016",
    time: "05:30:00 GMT-0700 (PDT)"
  }];
try { if (Inst76 <= 1000 && typeof (tests) != "undefined") {_RecordType("<3223,3228,139>",(tests)); Inst76++; } } catch(e) {}

  for (let {
    offset,
    date,
    time
  } of tests) {
try { if (Inst77 <= 1000 && typeof (offset) != "undefined") {_RecordType("<4196,4202,182>",(offset)); Inst77++; } } catch(e) {}try { if (Inst78 <= 1000 && typeof (date) != "undefined") {_RecordType("<4208,4212,183>",(date)); Inst78++; } } catch(e) {}try { if (Inst79 <= 1000 && typeof (time) != "undefined") {_RecordType("<4218,4222,184>",(time)); Inst79++; } } catch(e) {}try { if (Inst80 <= 1000 && typeof (tests) != "undefined") {_RecordType("<4230,4235,185>",(tests)); Inst80++; } } catch(e) {}
try { if (Inst82 <= 1000 && typeof (Date) != "undefined") {_RecordType("<4256,4260,186>",(Date)); Inst82++; } } catch(e) {}try { if (Inst83 <= 1000 && typeof (midnight.getTime) != "undefined") {_RecordType("<4261,4277,186>",(midnight.getTime)); Inst83++; } } catch(e) {}try { if (Inst84 <= 1000 && typeof (midnight) != "undefined") {_RecordType("<4261,4269,186>",(midnight)); Inst84++; } } catch(e) {}try { if (Inst85 <= 1000 && typeof (offset) != "undefined") {_RecordType("<4282,4288,186>",(offset)); Inst85++; } } catch(e) {}try { if (Inst86 <= 1000 && typeof (msPerMinute) != "undefined") {_RecordType("<4291,4302,186>",(msPerMinute)); Inst86++; } } catch(e) {}
    let dt = new Date(midnight.getTime() + offset * msPerMinute);
try { if (Inst81 <= 1000 && typeof (dt) != "undefined") {_RecordType("<4247,4249,186>",(dt)); Inst81++; } } catch(e) {}
try { if (Inst87 <= 1000 && typeof (dt) != "undefined") {_RecordType("<4309,4311,187>",(dt)); Inst87++; } } catch(e) {}
    dt;
try { if (Inst88 <= 1000 && typeof (date) != "undefined") {_RecordType("<4317,4321,188>",(date)); Inst88++; } } catch(e) {}
    date;
try { if (Inst89 <= 1000 && typeof (time) != "undefined") {_RecordType("<4327,4331,189>",(time)); Inst89++; } } catch(e) {}
    time;
  }
} // PST -> PDT, using local date-time.

{
  let tests = [{
    offset: 0 * 60,
    date: "Sun Mar 13 2016",
    time: "00:00:00 GMT-0800 (PST)"
  }, {
    offset: 0 * 60 + 30,
    date: "Sun Mar 13 2016",
    time: "00:30:00 GMT-0800 (PST)"
  }, {
    offset: 1 * 60,
    date: "Sun Mar 13 2016",
    time: "01:00:00 GMT-0800 (PST)"
  }, {
    offset: 1 * 60 + 30,
    date: "Sun Mar 13 2016",
    time: "01:30:00 GMT-0800 (PST)"
  }, {
    offset: 2 * 60,
    date: "Sun Mar 13 2016",
    time: "03:00:00 GMT-0700 (PDT)"
  }, {
    offset: 2 * 60 + 30,
    date: "Sun Mar 13 2016",
    time: "03:30:00 GMT-0700 (PDT)"
  }, {
    offset: 3 * 60,
    date: "Sun Mar 13 2016",
    time: "03:00:00 GMT-0700 (PDT)"
  }, {
    offset: 3 * 60 + 30,
    date: "Sun Mar 13 2016",
    time: "03:30:00 GMT-0700 (PDT)"
  }, {
    offset: 4 * 60,
    date: "Sun Mar 13 2016",
    time: "04:00:00 GMT-0700 (PDT)"
  }, {
    offset: 4 * 60 + 30,
    date: "Sun Mar 13 2016",
    time: "04:30:00 GMT-0700 (PDT)"
  }];
try { if (Inst90 <= 1000 && typeof (tests) != "undefined") {_RecordType("<4386,4391,194>",(tests)); Inst90++; } } catch(e) {}

  for (let {
    offset,
    date,
    time
  } of tests) {
try { if (Inst91 <= 1000 && typeof (offset) != "undefined") {_RecordType("<5359,5365,237>",(offset)); Inst91++; } } catch(e) {}try { if (Inst92 <= 1000 && typeof (date) != "undefined") {_RecordType("<5371,5375,238>",(date)); Inst92++; } } catch(e) {}try { if (Inst93 <= 1000 && typeof (time) != "undefined") {_RecordType("<5381,5385,239>",(time)); Inst93++; } } catch(e) {}try { if (Inst94 <= 1000 && typeof (tests) != "undefined") {_RecordType("<5393,5398,240>",(tests)); Inst94++; } } catch(e) {}
try { if (Inst96 <= 1000 && typeof (Date) != "undefined") {_RecordType("<5419,5423,241>",(Date)); Inst96++; } } catch(e) {}try { if (Inst97 <= 1000 && typeof (Month.March) != "undefined") {_RecordType("<5430,5441,241>",(Month.March)); Inst97++; } } catch(e) {}try { if (Inst98 <= 1000 && typeof (Month) != "undefined") {_RecordType("<5430,5435,241>",(Month)); Inst98++; } } catch(e) {}try { if (Inst99 <= 1000 && typeof (offset) != "undefined") {_RecordType("<5447,5453,241>",(offset)); Inst99++; } } catch(e) {}try { if (Inst100 <= 1000 && typeof (offset) != "undefined") {_RecordType("<5464,5470,241>",(offset)); Inst100++; } } catch(e) {}
    let dt = new Date(2016, Month.March, 13, offset / 60 | 0, offset % 60, 0, 0);
try { if (Inst95 <= 1000 && typeof (dt) != "undefined") {_RecordType("<5410,5412,241>",(dt)); Inst95++; } } catch(e) {}
try { if (Inst101 <= 1000 && typeof (dt) != "undefined") {_RecordType("<5488,5490,242>",(dt)); Inst101++; } } catch(e) {}
    dt;
try { if (Inst102 <= 1000 && typeof (date) != "undefined") {_RecordType("<5496,5500,243>",(date)); Inst102++; } } catch(e) {}
    date;
try { if (Inst103 <= 1000 && typeof (time) != "undefined") {_RecordType("<5506,5510,244>",(time)); Inst103++; } } catch(e) {}
    time;
  }
}

try { if (Inst104 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<5530,5543,248>",(reportCompare)); Inst104++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst105 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<5564,5577,249>",(reportCompare)); Inst105++; } } catch(e) {}
  reportCompare(true, true);
}

