var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
var Inst102 = 0;
var Inst103 = 0;
var Inst104 = 0;
var Inst105 = 0;
var Inst106 = 0;
var Inst107 = 0;
var Inst108 = 0;
var Inst109 = 0;
var Inst110 = 0;
var Inst111 = 0;
var Inst112 = 0;
var Inst113 = 0;
var Inst114 = 0;
var Inst115 = 0;
var Inst116 = 0;
var Inst117 = 0;
var Inst118 = 0;
var Inst119 = 0;
var Inst120 = 0;
var Inst121 = 0;
var Inst122 = 0;
var Inst123 = 0;
var Inst124 = 0;
var Inst125 = 0;
var Inst126 = 0;
var Inst127 = 0;
var Inst128 = 0;
var Inst129 = 0;
var Inst130 = 0;
var Inst131 = 0;
var Inst132 = 0;
var Inst133 = 0;
var Inst134 = 0;
var Inst135 = 0;
var Inst136 = 0;
var Inst137 = 0;
var Inst138 = 0;
var Inst139 = 0;
var Inst140 = 0;
var Inst141 = 0;
var Inst142 = 0;
var Inst143 = 0;
var Inst144 = 0;
var Inst145 = 0;
var Inst146 = 0;
var Inst147 = 0;
var Inst148 = 0;
var Inst149 = 0;
var Inst150 = 0;
var Inst151 = 0;
var Inst152 = 0;
var Inst153 = 0;
var Inst154 = 0;
var Inst155 = 0;
var Inst156 = 0;
var Inst157 = 0;
var Inst158 = 0;
var Inst159 = 0;
var Inst160 = 0;
var Inst161 = 0;
var Inst162 = 0;
var Inst163 = 0;
var Inst164 = 0;
var Inst165 = 0;
var Inst166 = 0;
var Inst167 = 0;
var Inst168 = 0;
var Inst169 = 0;
var Inst170 = 0;
var Inst171 = 0;
var Inst172 = 0;
var Inst173 = 0;
var Inst174 = 0;
var Inst175 = 0;
var Inst176 = 0;
var Inst177 = 0;
var Inst178 = 0;
var Inst179 = 0;
var Inst180 = 0;
var Inst181 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* -*- indent-tabs-mode: nil; js-indent-level: 2 -*- */

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
//-----------------------------------------------------------------------------
var BUGNUMBER = 430930; //-----------------------------------------------------------------------------
try { if (Inst0 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<346,355,7>",(BUGNUMBER)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (test) != "undefined") {_RecordType("<447,451,9>",(test)); Inst1++; } } catch(e) {}
test(); //-----------------------------------------------------------------------------

try { if (Inst2 <= 1000 && typeof (iso) != "undefined") {_RecordType("<545,548,11>",(iso)); Inst2++; } } catch(e) {}
function iso(d) {
try { if (Inst3 <= 1000 && typeof (d) != "undefined") {_RecordType("<549,550,11>",(d)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (new Date(d).toISOString) != "undefined") {_RecordType("<563,586,12>",(new Date(d).toISOString)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Date) != "undefined") {_RecordType("<567,571,12>",(Date)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (d) != "undefined") {_RecordType("<572,573,12>",(d)); Inst6++; } } catch(e) {}
  return new Date(d).toISOString();
}

try { if (Inst7 <= 1000 && typeof (check) != "undefined") {_RecordType("<602,607,15>",(check)); Inst7++; } } catch(e) {}
function check(s, millis) {
try { if (Inst8 <= 1000 && typeof (s) != "undefined") {_RecordType("<608,609,15>",(s)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (millis) != "undefined") {_RecordType("<611,617,15>",(millis)); Inst9++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (s) != "undefined") {_RecordType("<654,655,16>",(s)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (iso) != "undefined") {_RecordType("<670,673,16>",(iso)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (millis) != "undefined") {_RecordType("<674,680,16>",(millis)); Inst13++; } } catch(e) {}
  description = "Date.parse('" + s + "') == '" + iso(millis) + "'";
try { if (Inst10 <= 1000 && typeof (description) != "undefined") {_RecordType("<623,634,16>",(description)); Inst10++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (millis) != "undefined") {_RecordType("<702,708,17>",(millis)); Inst15++; } } catch(e) {}
  expected = millis;
try { if (Inst14 <= 1000 && typeof (expected) != "undefined") {_RecordType("<691,699,17>",(expected)); Inst14++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (Date.parse) != "undefined") {_RecordType("<721,731,18>",(Date.parse)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Date) != "undefined") {_RecordType("<721,725,18>",(Date)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (s) != "undefined") {_RecordType("<732,733,18>",(s)); Inst19++; } } catch(e) {}
  actual = Date.parse(s);
try { if (Inst16 <= 1000 && typeof (actual) != "undefined") {_RecordType("<712,718,18>",(actual)); Inst16++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<738,751,19>",(reportCompare)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (expected) != "undefined") {_RecordType("<752,760,19>",(expected)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (actual) != "undefined") {_RecordType("<762,768,19>",(actual)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (description) != "undefined") {_RecordType("<770,781,19>",(description)); Inst23++; } } catch(e) {}
  reportCompare(expected, actual, description);
}

try { if (Inst24 <= 1000 && typeof (checkInvalid) != "undefined") {_RecordType("<796,808,22>",(checkInvalid)); Inst24++; } } catch(e) {}
function checkInvalid(s) {
try { if (Inst25 <= 1000 && typeof (s) != "undefined") {_RecordType("<809,810,22>",(s)); Inst25++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (s) != "undefined") {_RecordType("<847,848,23>",(s)); Inst27++; } } catch(e) {}
  description = "Date.parse('" + s + "') produces invalid date";
try { if (Inst26 <= 1000 && typeof (description) != "undefined") {_RecordType("<816,827,23>",(description)); Inst26++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<892,895,24>",(NaN)); Inst29++; } } catch(e) {}
  expected = NaN;
try { if (Inst28 <= 1000 && typeof (expected) != "undefined") {_RecordType("<881,889,24>",(expected)); Inst28++; } } catch(e) {}
try { if (Inst31 <= 1000 && typeof (Date.parse) != "undefined") {_RecordType("<908,918,25>",(Date.parse)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (Date) != "undefined") {_RecordType("<908,912,25>",(Date)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (s) != "undefined") {_RecordType("<919,920,25>",(s)); Inst33++; } } catch(e) {}
  actual = Date.parse(s);
try { if (Inst30 <= 1000 && typeof (actual) != "undefined") {_RecordType("<899,905,25>",(actual)); Inst30++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<925,938,26>",(reportCompare)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (expected) != "undefined") {_RecordType("<939,947,26>",(expected)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (actual) != "undefined") {_RecordType("<949,955,26>",(actual)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (description) != "undefined") {_RecordType("<957,968,26>",(description)); Inst37++; } } catch(e) {}
  reportCompare(expected, actual, description);
}

try { if (Inst38 <= 1000 && typeof (dd) != "undefined") {_RecordType("<983,985,29>",(dd)); Inst38++; } } catch(e) {}
function dd(year, month, day, hour, minute, second, millis) {
try { if (Inst39 <= 1000 && typeof (year) != "undefined") {_RecordType("<986,990,29>",(year)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (month) != "undefined") {_RecordType("<992,997,29>",(month)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (day) != "undefined") {_RecordType("<999,1002,29>",(day)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (hour) != "undefined") {_RecordType("<1004,1008,29>",(hour)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (minute) != "undefined") {_RecordType("<1010,1016,29>",(minute)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (second) != "undefined") {_RecordType("<1018,1024,29>",(second)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (millis) != "undefined") {_RecordType("<1026,1032,29>",(millis)); Inst45++; } } catch(e) {}
try { if (Inst46 <= 1000 && typeof (Date.UTC) != "undefined") {_RecordType("<1045,1053,30>",(Date.UTC)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (Date) != "undefined") {_RecordType("<1045,1049,30>",(Date)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (year) != "undefined") {_RecordType("<1054,1058,30>",(year)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (month) != "undefined") {_RecordType("<1060,1065,30>",(month)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (day) != "undefined") {_RecordType("<1071,1074,30>",(day)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (hour) != "undefined") {_RecordType("<1076,1080,30>",(hour)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (minute) != "undefined") {_RecordType("<1082,1088,30>",(minute)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (second) != "undefined") {_RecordType("<1090,1096,30>",(second)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (millis) != "undefined") {_RecordType("<1098,1104,30>",(millis)); Inst54++; } } catch(e) {}
  return Date.UTC(year, month - 1, day, hour, minute, second, millis);
}

try { if (Inst55 <= 1000 && typeof (TZAtDate) != "undefined") {_RecordType("<1119,1127,33>",(TZAtDate)); Inst55++; } } catch(e) {}
function TZAtDate(d) {
try { if (Inst56 <= 1000 && typeof (d) != "undefined") {_RecordType("<1128,1129,33>",(d)); Inst56++; } } catch(e) {}
try { if (Inst57 <= 1000 && typeof (d.getTimezoneOffset) != "undefined") {_RecordType("<1142,1161,34>",(d.getTimezoneOffset)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (d) != "undefined") {_RecordType("<1142,1143,34>",(d)); Inst58++; } } catch(e) {}
  return d.getTimezoneOffset() * 60000;
}

try { if (Inst59 <= 1000 && typeof (TZInMonth) != "undefined") {_RecordType("<1185,1194,37>",(TZInMonth)); Inst59++; } } catch(e) {}
function TZInMonth(month, year) {
try { if (Inst60 <= 1000 && typeof (month) != "undefined") {_RecordType("<1195,1200,37>",(month)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (year) != "undefined") {_RecordType("<1202,1206,37>",(year)); Inst61++; } } catch(e) {}
try { if (Inst62 <= 1000 && typeof (TZAtDate) != "undefined") {_RecordType("<1219,1227,38>",(TZAtDate)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (Date) != "undefined") {_RecordType("<1232,1236,38>",(Date)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (dd) != "undefined") {_RecordType("<1237,1239,38>",(dd)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (year) != "undefined") {_RecordType("<1240,1244,38>",(year)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (month) != "undefined") {_RecordType("<1246,1251,38>",(month)); Inst66++; } } catch(e) {}
  return TZAtDate(new Date(dd(year, month, 1, 0, 0, 0, 0)));
}

try { if (Inst67 <= 1000 && typeof (test) != "undefined") {_RecordType("<1283,1287,41>",(test)); Inst67++; } } catch(e) {}
function test() {
try { if (Inst68 <= 1000 && typeof (printBugNumber) != "undefined") {_RecordType("<1294,1308,42>",(printBugNumber)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<1309,1318,42>",(BUGNUMBER)); Inst69++; } } catch(e) {}
  printBugNumber(BUGNUMBER);
try { if (Inst71 <= 1000 && typeof (TZInMonth) != "undefined") {_RecordType("<1335,1344,43>",(TZInMonth)); Inst71++; } } catch(e) {}
  Jan1970TZ = TZInMonth(1, 1970);
try { if (Inst70 <= 1000 && typeof (Jan1970TZ) != "undefined") {_RecordType("<1323,1332,43>",(Jan1970TZ)); Inst70++; } } catch(e) {}
try { if (Inst73 <= 1000 && typeof (TZInMonth) != "undefined") {_RecordType("<1369,1378,44>",(TZInMonth)); Inst73++; } } catch(e) {}
  Jan2009TZ = TZInMonth(1, 2009);
try { if (Inst72 <= 1000 && typeof (Jan2009TZ) != "undefined") {_RecordType("<1357,1366,44>",(Jan2009TZ)); Inst72++; } } catch(e) {}
try { if (Inst75 <= 1000 && typeof (TZInMonth) != "undefined") {_RecordType("<1403,1412,45>",(TZInMonth)); Inst75++; } } catch(e) {}
  Jul2009TZ = TZInMonth(7, 2009);
try { if (Inst74 <= 1000 && typeof (Jul2009TZ) != "undefined") {_RecordType("<1391,1400,45>",(Jul2009TZ)); Inst74++; } } catch(e) {}
try { if (Inst77 <= 1000 && typeof (TZAtDate) != "undefined") {_RecordType("<1434,1442,46>",(TZAtDate)); Inst77++; } } catch(e) {}try { if (Inst78 <= 1000 && typeof (Date) != "undefined") {_RecordType("<1447,1451,46>",(Date)); Inst78++; } } catch(e) {}
  CurrTZ = TZAtDate(new Date()); // formats with explicit timezone
try { if (Inst76 <= 1000 && typeof (CurrTZ) != "undefined") {_RecordType("<1425,1431,46>",(CurrTZ)); Inst76++; } } catch(e) {}

try { if (Inst79 <= 1000 && typeof (check) != "undefined") {_RecordType("<1493,1498,48>",(check)); Inst79++; } } catch(e) {}try { if (Inst80 <= 1000 && typeof (dd) != "undefined") {_RecordType("<1532,1534,48>",(dd)); Inst80++; } } catch(e) {}
  check("2009-07-23T19:53:21.001+12:00", dd(2009, 7, 23, 7, 53, 21, 1));
try { if (Inst81 <= 1000 && typeof (check) != "undefined") {_RecordType("<1566,1571,49>",(check)); Inst81++; } } catch(e) {}try { if (Inst82 <= 1000 && typeof (dd) != "undefined") {_RecordType("<1601,1603,49>",(dd)); Inst82++; } } catch(e) {}
  check("2009-07-23T19:53:21+12:00", dd(2009, 7, 23, 7, 53, 21, 0));
try { if (Inst83 <= 1000 && typeof (check) != "undefined") {_RecordType("<1635,1640,50>",(check)); Inst83++; } } catch(e) {}try { if (Inst84 <= 1000 && typeof (dd) != "undefined") {_RecordType("<1667,1669,50>",(dd)); Inst84++; } } catch(e) {}
  check("2009-07-23T19:53+12:00", dd(2009, 7, 23, 7, 53, 0, 0));
try { if (Inst85 <= 1000 && typeof (check) != "undefined") {_RecordType("<1700,1705,51>",(check)); Inst85++; } } catch(e) {}try { if (Inst86 <= 1000 && typeof (dd) != "undefined") {_RecordType("<1736,1738,51>",(dd)); Inst86++; } } catch(e) {}
  check("2009-07T19:53:21.001+12:00", dd(2009, 7, 1, 7, 53, 21, 1));
try { if (Inst87 <= 1000 && typeof (check) != "undefined") {_RecordType("<1769,1774,52>",(check)); Inst87++; } } catch(e) {}try { if (Inst88 <= 1000 && typeof (dd) != "undefined") {_RecordType("<1801,1803,52>",(dd)); Inst88++; } } catch(e) {}
  check("2009-07T19:53:21+12:00", dd(2009, 7, 1, 7, 53, 21, 0));
try { if (Inst89 <= 1000 && typeof (check) != "undefined") {_RecordType("<1834,1839,53>",(check)); Inst89++; } } catch(e) {}try { if (Inst90 <= 1000 && typeof (dd) != "undefined") {_RecordType("<1863,1865,53>",(dd)); Inst90++; } } catch(e) {}
  check("2009-07T19:53+12:00", dd(2009, 7, 1, 7, 53, 0, 0));
try { if (Inst91 <= 1000 && typeof (check) != "undefined") {_RecordType("<1895,1900,54>",(check)); Inst91++; } } catch(e) {}try { if (Inst92 <= 1000 && typeof (dd) != "undefined") {_RecordType("<1928,1930,54>",(dd)); Inst92++; } } catch(e) {}
  check("2009T19:53:21.001+12:00", dd(2009, 1, 1, 7, 53, 21, 1));
try { if (Inst93 <= 1000 && typeof (check) != "undefined") {_RecordType("<1961,1966,55>",(check)); Inst93++; } } catch(e) {}try { if (Inst94 <= 1000 && typeof (dd) != "undefined") {_RecordType("<1990,1992,55>",(dd)); Inst94++; } } catch(e) {}
  check("2009T19:53:21+12:00", dd(2009, 1, 1, 7, 53, 21, 0));
try { if (Inst95 <= 1000 && typeof (check) != "undefined") {_RecordType("<2023,2028,56>",(check)); Inst95++; } } catch(e) {}try { if (Inst96 <= 1000 && typeof (dd) != "undefined") {_RecordType("<2049,2051,56>",(dd)); Inst96++; } } catch(e) {}
  check("2009T19:53+12:00", dd(2009, 1, 1, 7, 53, 0, 0));
try { if (Inst97 <= 1000 && typeof (check) != "undefined") {_RecordType("<2081,2086,57>",(check)); Inst97++; } } catch(e) {}try { if (Inst98 <= 1000 && typeof (dd) != "undefined") {_RecordType("<2110,2112,57>",(dd)); Inst98++; } } catch(e) {}
  check("T19:53:21.001+12:00", dd(1970, 1, 1, 7, 53, 21, 1));
try { if (Inst99 <= 1000 && typeof (check) != "undefined") {_RecordType("<2143,2148,58>",(check)); Inst99++; } } catch(e) {}try { if (Inst100 <= 1000 && typeof (dd) != "undefined") {_RecordType("<2168,2170,58>",(dd)); Inst100++; } } catch(e) {}
  check("T19:53:21+12:00", dd(1970, 1, 1, 7, 53, 21, 0));
try { if (Inst101 <= 1000 && typeof (check) != "undefined") {_RecordType("<2201,2206,59>",(check)); Inst101++; } } catch(e) {}try { if (Inst102 <= 1000 && typeof (dd) != "undefined") {_RecordType("<2223,2225,59>",(dd)); Inst102++; } } catch(e) {}
  check("T19:53+12:00", dd(1970, 1, 1, 7, 53, 0, 0)); // formats without timezone uses the timezone as at that date

try { if (Inst103 <= 1000 && typeof (check) != "undefined") {_RecordType("<2318,2323,61>",(check)); Inst103++; } } catch(e) {}try { if (Inst104 <= 1000 && typeof (dd) != "undefined") {_RecordType("<2351,2353,61>",(dd)); Inst104++; } } catch(e) {}try { if (Inst105 <= 1000 && typeof (Jul2009TZ) != "undefined") {_RecordType("<2384,2393,61>",(Jul2009TZ)); Inst105++; } } catch(e) {}
  check("2009-07-23T19:53:21.001", dd(2009, 7, 23, 19, 53, 21, 1) + Jul2009TZ);
try { if (Inst106 <= 1000 && typeof (check) != "undefined") {_RecordType("<2398,2403,62>",(check)); Inst106++; } } catch(e) {}try { if (Inst107 <= 1000 && typeof (dd) != "undefined") {_RecordType("<2427,2429,62>",(dd)); Inst107++; } } catch(e) {}try { if (Inst108 <= 1000 && typeof (Jul2009TZ) != "undefined") {_RecordType("<2460,2469,62>",(Jul2009TZ)); Inst108++; } } catch(e) {}
  check("2009-07-23T19:53:21", dd(2009, 7, 23, 19, 53, 21, 0) + Jul2009TZ);
try { if (Inst109 <= 1000 && typeof (check) != "undefined") {_RecordType("<2474,2479,63>",(check)); Inst109++; } } catch(e) {}try { if (Inst110 <= 1000 && typeof (dd) != "undefined") {_RecordType("<2500,2502,63>",(dd)); Inst110++; } } catch(e) {}try { if (Inst111 <= 1000 && typeof (Jul2009TZ) != "undefined") {_RecordType("<2532,2541,63>",(Jul2009TZ)); Inst111++; } } catch(e) {}
  check("2009-07-23T19:53", dd(2009, 7, 23, 19, 53, 0, 0) + Jul2009TZ);
try { if (Inst112 <= 1000 && typeof (check) != "undefined") {_RecordType("<2546,2551,64>",(check)); Inst112++; } } catch(e) {}try { if (Inst113 <= 1000 && typeof (dd) != "undefined") {_RecordType("<2576,2578,64>",(dd)); Inst113++; } } catch(e) {}try { if (Inst114 <= 1000 && typeof (Jul2009TZ) != "undefined") {_RecordType("<2608,2617,64>",(Jul2009TZ)); Inst114++; } } catch(e) {}
  check("2009-07T19:53:21.001", dd(2009, 7, 1, 19, 53, 21, 1) + Jul2009TZ);
try { if (Inst115 <= 1000 && typeof (check) != "undefined") {_RecordType("<2622,2627,65>",(check)); Inst115++; } } catch(e) {}try { if (Inst116 <= 1000 && typeof (dd) != "undefined") {_RecordType("<2648,2650,65>",(dd)); Inst116++; } } catch(e) {}try { if (Inst117 <= 1000 && typeof (Jul2009TZ) != "undefined") {_RecordType("<2680,2689,65>",(Jul2009TZ)); Inst117++; } } catch(e) {}
  check("2009-07T19:53:21", dd(2009, 7, 1, 19, 53, 21, 0) + Jul2009TZ);
try { if (Inst118 <= 1000 && typeof (check) != "undefined") {_RecordType("<2694,2699,66>",(check)); Inst118++; } } catch(e) {}try { if (Inst119 <= 1000 && typeof (dd) != "undefined") {_RecordType("<2717,2719,66>",(dd)); Inst119++; } } catch(e) {}try { if (Inst120 <= 1000 && typeof (Jul2009TZ) != "undefined") {_RecordType("<2748,2757,66>",(Jul2009TZ)); Inst120++; } } catch(e) {}
  check("2009-07T19:53", dd(2009, 7, 1, 19, 53, 0, 0) + Jul2009TZ);
try { if (Inst121 <= 1000 && typeof (check) != "undefined") {_RecordType("<2762,2767,67>",(check)); Inst121++; } } catch(e) {}try { if (Inst122 <= 1000 && typeof (dd) != "undefined") {_RecordType("<2789,2791,67>",(dd)); Inst122++; } } catch(e) {}try { if (Inst123 <= 1000 && typeof (Jan2009TZ) != "undefined") {_RecordType("<2821,2830,67>",(Jan2009TZ)); Inst123++; } } catch(e) {}
  check("2009T19:53:21.001", dd(2009, 1, 1, 19, 53, 21, 1) + Jan2009TZ);
try { if (Inst124 <= 1000 && typeof (check) != "undefined") {_RecordType("<2835,2840,68>",(check)); Inst124++; } } catch(e) {}try { if (Inst125 <= 1000 && typeof (dd) != "undefined") {_RecordType("<2858,2860,68>",(dd)); Inst125++; } } catch(e) {}try { if (Inst126 <= 1000 && typeof (Jan2009TZ) != "undefined") {_RecordType("<2890,2899,68>",(Jan2009TZ)); Inst126++; } } catch(e) {}
  check("2009T19:53:21", dd(2009, 1, 1, 19, 53, 21, 0) + Jan2009TZ);
try { if (Inst127 <= 1000 && typeof (check) != "undefined") {_RecordType("<2904,2909,69>",(check)); Inst127++; } } catch(e) {}try { if (Inst128 <= 1000 && typeof (dd) != "undefined") {_RecordType("<2924,2926,69>",(dd)); Inst128++; } } catch(e) {}try { if (Inst129 <= 1000 && typeof (Jan2009TZ) != "undefined") {_RecordType("<2955,2964,69>",(Jan2009TZ)); Inst129++; } } catch(e) {}
  check("2009T19:53", dd(2009, 1, 1, 19, 53, 0, 0) + Jan2009TZ);
try { if (Inst130 <= 1000 && typeof (check) != "undefined") {_RecordType("<2969,2974,70>",(check)); Inst130++; } } catch(e) {}try { if (Inst131 <= 1000 && typeof (dd) != "undefined") {_RecordType("<2992,2994,70>",(dd)); Inst131++; } } catch(e) {}try { if (Inst132 <= 1000 && typeof (Jan1970TZ) != "undefined") {_RecordType("<3024,3033,70>",(Jan1970TZ)); Inst132++; } } catch(e) {}
  check("T19:53:21.001", dd(1970, 1, 1, 19, 53, 21, 1) + Jan1970TZ);
try { if (Inst133 <= 1000 && typeof (check) != "undefined") {_RecordType("<3038,3043,71>",(check)); Inst133++; } } catch(e) {}try { if (Inst134 <= 1000 && typeof (dd) != "undefined") {_RecordType("<3057,3059,71>",(dd)); Inst134++; } } catch(e) {}try { if (Inst135 <= 1000 && typeof (Jan1970TZ) != "undefined") {_RecordType("<3089,3098,71>",(Jan1970TZ)); Inst135++; } } catch(e) {}
  check("T19:53:21", dd(1970, 1, 1, 19, 53, 21, 0) + Jan1970TZ);
try { if (Inst136 <= 1000 && typeof (check) != "undefined") {_RecordType("<3103,3108,72>",(check)); Inst136++; } } catch(e) {}try { if (Inst137 <= 1000 && typeof (dd) != "undefined") {_RecordType("<3119,3121,72>",(dd)); Inst137++; } } catch(e) {}try { if (Inst138 <= 1000 && typeof (Jan1970TZ) != "undefined") {_RecordType("<3150,3159,72>",(Jan1970TZ)); Inst138++; } } catch(e) {}
  check("T19:53", dd(1970, 1, 1, 19, 53, 0, 0) + Jan1970TZ); // with no time at all assume UTC

try { if (Inst139 <= 1000 && typeof (check) != "undefined") {_RecordType("<3199,3204,74>",(check)); Inst139++; } } catch(e) {}try { if (Inst140 <= 1000 && typeof (dd) != "undefined") {_RecordType("<3219,3221,74>",(dd)); Inst140++; } } catch(e) {}
  check("2009-07-23", dd(2009, 7, 23, 0, 0, 0, 0));
try { if (Inst141 <= 1000 && typeof (check) != "undefined") {_RecordType("<3251,3256,75>",(check)); Inst141++; } } catch(e) {}try { if (Inst142 <= 1000 && typeof (dd) != "undefined") {_RecordType("<3268,3270,75>",(dd)); Inst142++; } } catch(e) {}
  check("2009-07", dd(2009, 7, 1, 0, 0, 0, 0));
try { if (Inst143 <= 1000 && typeof (check) != "undefined") {_RecordType("<3299,3304,76>",(check)); Inst143++; } } catch(e) {}try { if (Inst144 <= 1000 && typeof (dd) != "undefined") {_RecordType("<3313,3315,76>",(dd)); Inst144++; } } catch(e) {}
  check("2009", dd(2009, 1, 1, 0, 0, 0, 0)); // one field too big

try { if (Inst145 <= 1000 && typeof (checkInvalid) != "undefined") {_RecordType("<3366,3378,78>",(checkInvalid)); Inst145++; } } catch(e) {}
  checkInvalid("2009-13-23T19:53:21.001+12:00");
try { if (Inst146 <= 1000 && typeof (checkInvalid) != "undefined") {_RecordType("<3415,3427,79>",(checkInvalid)); Inst146++; } } catch(e) {}
  checkInvalid("2009-07-32T19:53:21.001+12:00");
try { if (Inst147 <= 1000 && typeof (checkInvalid) != "undefined") {_RecordType("<3464,3476,80>",(checkInvalid)); Inst147++; } } catch(e) {}
  checkInvalid("2009-07-23T25:53:21.001+12:00");
try { if (Inst148 <= 1000 && typeof (checkInvalid) != "undefined") {_RecordType("<3513,3525,81>",(checkInvalid)); Inst148++; } } catch(e) {}
  checkInvalid("2009-07-23T19:60:21.001+12:00");
try { if (Inst149 <= 1000 && typeof (checkInvalid) != "undefined") {_RecordType("<3562,3574,82>",(checkInvalid)); Inst149++; } } catch(e) {}
  checkInvalid("2009-07-23T19:53:60.001+12:00");
try { if (Inst150 <= 1000 && typeof (checkInvalid) != "undefined") {_RecordType("<3611,3623,83>",(checkInvalid)); Inst150++; } } catch(e) {}
  checkInvalid("2009-07-23T19:53:21.001+24:00");
try { if (Inst151 <= 1000 && typeof (checkInvalid) != "undefined") {_RecordType("<3660,3672,84>",(checkInvalid)); Inst151++; } } catch(e) {}
  checkInvalid("2009-07-23T19:53:21.001+12:60"); // other month ends

try { if (Inst152 <= 1000 && typeof (check) != "undefined") {_RecordType("<3730,3735,86>",(check)); Inst152++; } } catch(e) {}try { if (Inst153 <= 1000 && typeof (dd) != "undefined") {_RecordType("<3769,3771,86>",(dd)); Inst153++; } } catch(e) {}
  check("2009-06-30T19:53:21.001+12:00", dd(2009, 6, 30, 7, 53, 21, 1));
try { if (Inst154 <= 1000 && typeof (checkInvalid) != "undefined") {_RecordType("<3803,3815,87>",(checkInvalid)); Inst154++; } } catch(e) {}
  checkInvalid("2009-06-31T19:53:21.001+12:00");
try { if (Inst155 <= 1000 && typeof (check) != "undefined") {_RecordType("<3852,3857,88>",(check)); Inst155++; } } catch(e) {}try { if (Inst156 <= 1000 && typeof (dd) != "undefined") {_RecordType("<3891,3893,88>",(dd)); Inst156++; } } catch(e) {}
  check("2009-02-28T19:53:21.001+12:00", dd(2009, 2, 28, 7, 53, 21, 1));
try { if (Inst157 <= 1000 && typeof (checkInvalid) != "undefined") {_RecordType("<3925,3937,89>",(checkInvalid)); Inst157++; } } catch(e) {}
  checkInvalid("2009-02-29T19:53:21.001+12:00");
try { if (Inst158 <= 1000 && typeof (check) != "undefined") {_RecordType("<3974,3979,90>",(check)); Inst158++; } } catch(e) {}try { if (Inst159 <= 1000 && typeof (dd) != "undefined") {_RecordType("<4013,4015,90>",(dd)); Inst159++; } } catch(e) {}
  check("2008-02-29T19:53:21.001+12:00", dd(2008, 2, 29, 7, 53, 21, 1));
try { if (Inst160 <= 1000 && typeof (checkInvalid) != "undefined") {_RecordType("<4047,4059,91>",(checkInvalid)); Inst160++; } } catch(e) {}
  checkInvalid("2008-02-30T19:53:21.001+12:00"); // limits of representation

try { if (Inst161 <= 1000 && typeof (checkInvalid) != "undefined") {_RecordType("<4125,4137,93>",(checkInvalid)); Inst161++; } } catch(e) {}
  checkInvalid("-271821-04-19T23:59:59.999Z");
try { if (Inst162 <= 1000 && typeof (check) != "undefined") {_RecordType("<4172,4177,94>",(check)); Inst162++; } } catch(e) {}
  check("-271821-04-20", -8.64e15);
try { if (Inst163 <= 1000 && typeof (check) != "undefined") {_RecordType("<4208,4213,95>",(check)); Inst163++; } } catch(e) {}
  check("+275760-09-13", 8.64e15);
try { if (Inst164 <= 1000 && typeof (checkInvalid) != "undefined") {_RecordType("<4243,4255,96>",(checkInvalid)); Inst164++; } } catch(e) {}
  checkInvalid("+275760-09-13T00:00:00.001Z");
try { if (Inst165 <= 1000 && typeof (check) != "undefined") {_RecordType("<4290,4295,97>",(check)); Inst165++; } } catch(e) {}try { if (Inst166 <= 1000 && typeof (dd) != "undefined") {_RecordType("<4332,4334,97>",(dd)); Inst166++; } } catch(e) {}
  check("-269845-07-23T19:53:21.001+12:00", dd(-269845, 7, 23, 7, 53, 21, 1));
try { if (Inst167 <= 1000 && typeof (check) != "undefined") {_RecordType("<4369,4374,98>",(check)); Inst167++; } } catch(e) {}try { if (Inst168 <= 1000 && typeof (dd) != "undefined") {_RecordType("<4411,4413,98>",(dd)); Inst168++; } } catch(e) {}
  check("+273785-07-23T19:53:21.001+12:00", dd(273785, 7, 23, 7, 53, 21, 1)); // explicit UTC

try { if (Inst169 <= 1000 && typeof (check) != "undefined") {_RecordType("<4464,4469,100>",(check)); Inst169++; } } catch(e) {}try { if (Inst170 <= 1000 && typeof (dd) != "undefined") {_RecordType("<4498,4500,100>",(dd)); Inst170++; } } catch(e) {}
  check("2009-07-23T19:53:21.001Z", dd(2009, 7, 23, 19, 53, 21, 1));
try { if (Inst171 <= 1000 && typeof (check) != "undefined") {_RecordType("<4533,4538,101>",(check)); Inst171++; } } catch(e) {}try { if (Inst172 <= 1000 && typeof (dd) != "undefined") {_RecordType("<4570,4572,101>",(dd)); Inst172++; } } catch(e) {}
  check("+002009-07-23T19:53:21.001Z", dd(2009, 7, 23, 19, 53, 21, 1)); // different timezones

try { if (Inst173 <= 1000 && typeof (check) != "undefined") {_RecordType("<4629,4634,103>",(check)); Inst173++; } } catch(e) {}try { if (Inst174 <= 1000 && typeof (dd) != "undefined") {_RecordType("<4668,4670,103>",(dd)); Inst174++; } } catch(e) {}
  check("2009-07-23T19:53:21.001+12:00", dd(2009, 7, 23, 7, 53, 21, 1));
try { if (Inst175 <= 1000 && typeof (check) != "undefined") {_RecordType("<4702,4707,104>",(check)); Inst175++; } } catch(e) {}try { if (Inst176 <= 1000 && typeof (dd) != "undefined") {_RecordType("<4741,4743,104>",(dd)); Inst176++; } } catch(e) {}
  check("2009-07-23T00:53:21.001-07:00", dd(2009, 7, 23, 7, 53, 21, 1)); // 00:00 and 24:00

try { if (Inst177 <= 1000 && typeof (check) != "undefined") {_RecordType("<4795,4800,106>",(check)); Inst177++; } } catch(e) {}try { if (Inst178 <= 1000 && typeof (dd) != "undefined") {_RecordType("<4834,4836,106>",(dd)); Inst178++; } } catch(e) {}
  check("2009-07-23T00:00:00.000-07:00", dd(2009, 7, 23, 7, 0, 0, 0));
try { if (Inst179 <= 1000 && typeof (check) != "undefined") {_RecordType("<4866,4871,107>",(check)); Inst179++; } } catch(e) {}try { if (Inst180 <= 1000 && typeof (dd) != "undefined") {_RecordType("<4905,4907,107>",(dd)); Inst180++; } } catch(e) {}
  check("2009-07-23T24:00:00.000-07:00", dd(2009, 7, 24, 7, 0, 0, 0)); // Bug 730838 - non-zero fraction part for midnight should produce NaN

try { if (Inst181 <= 1000 && typeof (checkInvalid) != "undefined") {_RecordType("<5009,5021,109>",(checkInvalid)); Inst181++; } } catch(e) {}
  checkInvalid("1970-01-01T24:00:00.500Z");
}

