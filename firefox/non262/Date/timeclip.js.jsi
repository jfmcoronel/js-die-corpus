var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/*
 * Any copyright is dedicated to the Public Domain.
 * http://creativecommonn.org/licenses/publicdomain/
 */
var BUGNUMBER = 747197;
try { if (Inst0 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<116,125,5>",(BUGNUMBER)); Inst0++; } } catch(e) {}
var summary = "TimeClip behavior for very large numbers";
try { if (Inst1 <= 1000 && typeof (summary) != "undefined") {_RecordType("<140,147,6>",(summary)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (print) != "undefined") {_RecordType("<194,199,7>",(print)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<200,209,7>",(BUGNUMBER)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (summary) != "undefined") {_RecordType("<219,226,7>",(summary)); Inst4++; } } catch(e) {}
print(BUGNUMBER + ": " + summary);
/**************
 * BEGIN TEST *
 **************/

try { if (Inst5 <= 1000 && typeof (addToLimit) != "undefined") {_RecordType("<288,298,12>",(addToLimit)); Inst5++; } } catch(e) {}
function addToLimit(n) {
try { if (Inst6 <= 1000 && typeof (n) != "undefined") {_RecordType("<299,300,12>",(n)); Inst6++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (n) != "undefined") {_RecordType("<323,324,13>",(n)); Inst7++; } } catch(e) {}
  return 8.64e15 + n;
}

try { if (Inst8 <= 1000 && typeof (addToLimit) != "undefined") {_RecordType("<341,351,16>",(addToLimit)); Inst8++; } } catch(e) {}
8.64e15 === addToLimit(0.0);
true;
try { if (Inst9 <= 1000 && typeof (addToLimit) != "undefined") {_RecordType("<376,386,18>",(addToLimit)); Inst9++; } } catch(e) {}
8.64e15 === addToLimit(0.5);
true;
try { if (Inst10 <= 1000 && typeof (addToLimit) != "undefined") {_RecordType("<411,421,20>",(addToLimit)); Inst10++; } } catch(e) {}
8.64e15 === addToLimit(0.5000000000000001);
false;
try { if (Inst12 <= 1000 && typeof (Number.MAX_VALUE) != "undefined") {_RecordType("<463,479,22>",(Number.MAX_VALUE)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Number) != "undefined") {_RecordType("<463,469,22>",(Number)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Number.MAX_VALUE) != "undefined") {_RecordType("<482,498,22>",(Number.MAX_VALUE)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Number) != "undefined") {_RecordType("<482,488,22>",(Number)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<500,508,22>",(Infinity)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<511,519,22>",(Infinity)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (addToLimit) != "undefined") {_RecordType("<521,531,22>",(addToLimit)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (addToLimit) != "undefined") {_RecordType("<554,564,22>",(addToLimit)); Inst19++; } } catch(e) {}
var times = [Number.MAX_VALUE, -Number.MAX_VALUE, Infinity, -Infinity, addToLimit(0.5000000000000001), -addToLimit(0.5000000000000001)];
try { if (Inst11 <= 1000 && typeof (times) != "undefined") {_RecordType("<454,459,22>",(times)); Inst11++; } } catch(e) {}

for (var i = 0, len = times.length; i < len; i++) {
try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<597,598,24>",(i)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (len) != "undefined") {_RecordType("<604,607,24>",(len)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (times.length) != "undefined") {_RecordType("<610,622,24>",(times.length)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (times) != "undefined") {_RecordType("<610,615,24>",(times)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<624,625,24>",(i)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (len) != "undefined") {_RecordType("<628,631,24>",(len)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (i) != "undefined") {_RecordType("<633,634,24>",(i)); Inst26++; } } catch(e) {}
try { if (Inst28 <= 1000 && typeof (Date) != "undefined") {_RecordType("<654,658,25>",(Date)); Inst28++; } } catch(e) {}
  var d = new Date();
try { if (Inst27 <= 1000 && typeof (d) != "undefined") {_RecordType("<646,647,25>",(d)); Inst27++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (d.setTime) != "undefined") {_RecordType("<664,673,26>",(d.setTime)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (d) != "undefined") {_RecordType("<664,665,26>",(d)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (times[i]) != "undefined") {_RecordType("<674,682,26>",(times[i])); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (times) != "undefined") {_RecordType("<674,679,26>",(times)); Inst32++; } } catch(e) {}
  d.setTime(times[i]);
try { if (Inst33 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<687,690,27>",(NaN)); Inst33++; } } catch(e) {}
  NaN;
try { if (Inst34 <= 1000 && typeof (i) != "undefined") {_RecordType("<705,706,28>",(i)); Inst34++; } } catch(e) {}
  "times[" + i + "]";
try { if (Inst35 <= 1000 && typeof (d.getTime) != "undefined") {_RecordType("<716,725,29>",(d.getTime)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (d) != "undefined") {_RecordType("<716,717,29>",(d)); Inst36++; } } catch(e) {}
  d.getTime();
try { if (Inst37 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<731,734,30>",(NaN)); Inst37++; } } catch(e) {}
  NaN;
try { if (Inst38 <= 1000 && typeof (d.valueOf) != "undefined") {_RecordType("<738,747,31>",(d.valueOf)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (d) != "undefined") {_RecordType("<738,739,31>",(d)); Inst39++; } } catch(e) {}
  d.valueOf();
try { if (Inst40 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<753,756,32>",(NaN)); Inst40++; } } catch(e) {}
  NaN;
}
/******************************************************************************/


try { if (Inst41 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<854,867,37>",(reportCompare)); Inst41++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst42 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<888,901,38>",(reportCompare)); Inst42++; } } catch(e) {}
  reportCompare(true, true);
}

try { if (Inst43 <= 1000 && typeof (print) != "undefined") {_RecordType("<918,923,41>",(print)); Inst43++; } } catch(e) {}
print("Tests complete");

