var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* -*- indent-tabs-mode: nil; js-indent-level: 2 -*- */

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
//-----------------------------------------------------------------------------
var BUGNUMBER = 398485;
try { if (Inst0 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<346,355,7>",(BUGNUMBER)); Inst0++; } } catch(e) {}
var summary = 'Date.prototype.toLocaleString should not clamp year';
try { if (Inst1 <= 1000 && typeof (summary) != "undefined") {_RecordType("<370,377,8>",(summary)); Inst1++; } } catch(e) {}
var actual = '';
try { if (Inst2 <= 1000 && typeof (actual) != "undefined") {_RecordType("<439,445,9>",(actual)); Inst2++; } } catch(e) {}
var expect = ''; //-----------------------------------------------------------------------------
try { if (Inst3 <= 1000 && typeof (expect) != "undefined") {_RecordType("<456,462,10>",(expect)); Inst3++; } } catch(e) {}

try { if (Inst4 <= 1000 && typeof (test) != "undefined") {_RecordType("<550,554,12>",(test)); Inst4++; } } catch(e) {}
test(); //-----------------------------------------------------------------------------

try { if (Inst5 <= 1000 && typeof (test) != "undefined") {_RecordType("<648,652,14>",(test)); Inst5++; } } catch(e) {}
function test() {
try { if (Inst6 <= 1000 && typeof (printBugNumber) != "undefined") {_RecordType("<659,673,15>",(printBugNumber)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<674,683,15>",(BUGNUMBER)); Inst7++; } } catch(e) {}
  printBugNumber(BUGNUMBER);
try { if (Inst8 <= 1000 && typeof (printStatus) != "undefined") {_RecordType("<688,699,16>",(printStatus)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (summary) != "undefined") {_RecordType("<700,707,16>",(summary)); Inst9++; } } catch(e) {}
  printStatus(summary);
  var d;
try { if (Inst10 <= 1000 && typeof (d) != "undefined") {_RecordType("<716,717,17>",(d)); Inst10++; } } catch(e) {}
  var y;
try { if (Inst11 <= 1000 && typeof (y) != "undefined") {_RecordType("<725,726,18>",(y)); Inst11++; } } catch(e) {}
  var l;
try { if (Inst12 <= 1000 && typeof (l) != "undefined") {_RecordType("<734,735,19>",(l)); Inst12++; } } catch(e) {}
  var maxms = 8640000000000000;
try { if (Inst13 <= 1000 && typeof (maxms) != "undefined") {_RecordType("<743,748,20>",(maxms)); Inst13++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (Date) != "undefined") {_RecordType("<779,783,21>",(Date)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (maxms) != "undefined") {_RecordType("<785,790,21>",(maxms)); Inst16++; } } catch(e) {}
  d = new Date(-maxms);
try { if (Inst14 <= 1000 && typeof (d) != "undefined") {_RecordType("<771,772,21>",(d)); Inst14++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (d.getFullYear) != "undefined") {_RecordType("<799,812,22>",(d.getFullYear)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (d) != "undefined") {_RecordType("<799,800,22>",(d)); Inst19++; } } catch(e) {}
  y = d.getFullYear();
try { if (Inst17 <= 1000 && typeof (y) != "undefined") {_RecordType("<795,796,22>",(y)); Inst17++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (y) != "undefined") {_RecordType("<827,828,23>",(y)); Inst21++; } } catch(e) {}
  actual = y;
try { if (Inst20 <= 1000 && typeof (actual) != "undefined") {_RecordType("<818,824,23>",(actual)); Inst20++; } } catch(e) {}
  expect = -271821;
try { if (Inst22 <= 1000 && typeof (expect) != "undefined") {_RecordType("<832,838,24>",(expect)); Inst22++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<852,865,25>",(reportCompare)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (expect) != "undefined") {_RecordType("<866,872,25>",(expect)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (actual) != "undefined") {_RecordType("<874,880,25>",(actual)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (summary) != "undefined") {_RecordType("<882,889,25>",(summary)); Inst26++; } } catch(e) {}
  reportCompare(expect, actual, summary + ': check year');
try { if (Inst28 <= 1000 && typeof (d.toLocaleString) != "undefined") {_RecordType("<915,931,26>",(d.toLocaleString)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (d) != "undefined") {_RecordType("<915,916,26>",(d)); Inst29++; } } catch(e) {}
  l = d.toLocaleString();
try { if (Inst27 <= 1000 && typeof (l) != "undefined") {_RecordType("<911,912,26>",(l)); Inst27++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (print) != "undefined") {_RecordType("<937,942,27>",(print)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (l) != "undefined") {_RecordType("<943,944,27>",(l)); Inst31++; } } catch(e) {}
  print(l);

try { if (Inst32 <= 1000 && typeof (this.hasOwnProperty) != "undefined") {_RecordType("<954,973,29>",(this.hasOwnProperty)); Inst32++; } } catch(e) {}
  if (this.hasOwnProperty("Intl")) {
    // ECMA-402 specifies that toLocaleString uses a proleptic Gregorian
    // calender without year 0.
    // Also, localized strings usually use era indicators such as "BC"
    // instead of minus signs.
try { if (Inst34 <= 1000 && typeof (Math.abs) != "undefined") {_RecordType("<1205,1213,34>",(Math.abs)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1205,1209,34>",(Math)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (y) != "undefined") {_RecordType("<1214,1215,34>",(y)); Inst36++; } } catch(e) {}
    expect = Math.abs(y - 1) + '';
try { if (Inst33 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1196,1202,34>",(expect)); Inst33++; } } catch(e) {}
  } else {
    // ECMA-262 up to edition 5.1 didn't specify toLocaleString;
    // the previous implementation assumed a calendar with year 0 and used
    // minus sign.
try { if (Inst38 <= 1000 && typeof (y) != "undefined") {_RecordType("<1410,1411,39>",(y)); Inst38++; } } catch(e) {}
    expect = y + '';
try { if (Inst37 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1401,1407,39>",(expect)); Inst37++; } } catch(e) {}
  }

try { if (Inst40 <= 1000 && typeof (l.match) != "undefined") {_RecordType("<1434,1441,42>",(l.match)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (l) != "undefined") {_RecordType("<1434,1435,42>",(l)); Inst41++; } } catch(e) {}
  actual = l.match(/-?[0-9]{3,}/) + '';
try { if (Inst39 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1425,1431,42>",(actual)); Inst39++; } } catch(e) {}
try { if (Inst42 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1465,1478,43>",(reportCompare)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1479,1485,43>",(expect)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1487,1493,43>",(actual)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (summary) != "undefined") {_RecordType("<1495,1502,43>",(summary)); Inst45++; } } catch(e) {}
  reportCompare(expect, actual, summary + ': check toLocaleString');
try { if (Inst47 <= 1000 && typeof (Date) != "undefined") {_RecordType("<1542,1546,44>",(Date)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (maxms) != "undefined") {_RecordType("<1547,1552,44>",(maxms)); Inst48++; } } catch(e) {}
  d = new Date(maxms);
try { if (Inst46 <= 1000 && typeof (d) != "undefined") {_RecordType("<1534,1535,44>",(d)); Inst46++; } } catch(e) {}
try { if (Inst50 <= 1000 && typeof (d.getFullYear) != "undefined") {_RecordType("<1561,1574,45>",(d.getFullYear)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (d) != "undefined") {_RecordType("<1561,1562,45>",(d)); Inst51++; } } catch(e) {}
  y = d.getFullYear();
try { if (Inst49 <= 1000 && typeof (y) != "undefined") {_RecordType("<1557,1558,45>",(y)); Inst49++; } } catch(e) {}
try { if (Inst53 <= 1000 && typeof (d.toLocaleString) != "undefined") {_RecordType("<1584,1600,46>",(d.toLocaleString)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (d) != "undefined") {_RecordType("<1584,1585,46>",(d)); Inst54++; } } catch(e) {}
  l = d.toLocaleString();
try { if (Inst52 <= 1000 && typeof (l) != "undefined") {_RecordType("<1580,1581,46>",(l)); Inst52++; } } catch(e) {}
try { if (Inst55 <= 1000 && typeof (print) != "undefined") {_RecordType("<1606,1611,47>",(print)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (l) != "undefined") {_RecordType("<1612,1613,47>",(l)); Inst56++; } } catch(e) {}
  print(l);
try { if (Inst58 <= 1000 && typeof (y) != "undefined") {_RecordType("<1627,1628,48>",(y)); Inst58++; } } catch(e) {}
  actual = y;
try { if (Inst57 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1618,1624,48>",(actual)); Inst57++; } } catch(e) {}
  expect = 275760;
try { if (Inst59 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1632,1638,49>",(expect)); Inst59++; } } catch(e) {}
try { if (Inst60 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1651,1664,50>",(reportCompare)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1665,1671,50>",(expect)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1673,1679,50>",(actual)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (summary) != "undefined") {_RecordType("<1681,1688,50>",(summary)); Inst63++; } } catch(e) {}
  reportCompare(expect, actual, summary + ': check year');
try { if (Inst65 <= 1000 && typeof (l.match) != "undefined") {_RecordType("<1719,1726,51>",(l.match)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (l) != "undefined") {_RecordType("<1719,1720,51>",(l)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<1731,1737,51>",(RegExp)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (y) != "undefined") {_RecordType("<1738,1739,51>",(y)); Inst68++; } } catch(e) {}
  actual = l.match(new RegExp(y)) + '';
try { if (Inst64 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1710,1716,51>",(actual)); Inst64++; } } catch(e) {}
try { if (Inst70 <= 1000 && typeof (y) != "undefined") {_RecordType("<1759,1760,52>",(y)); Inst70++; } } catch(e) {}
  expect = y + '';
try { if (Inst69 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1750,1756,52>",(expect)); Inst69++; } } catch(e) {}
try { if (Inst71 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1769,1782,53>",(reportCompare)); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1783,1789,53>",(expect)); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1791,1797,53>",(actual)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (summary) != "undefined") {_RecordType("<1799,1806,53>",(summary)); Inst74++; } } catch(e) {}
  reportCompare(expect, actual, summary + ': check toLocaleString');
}

