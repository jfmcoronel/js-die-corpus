var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Don't return negative zero for get[Hours,Minutes,Seconds,Milliseconds] for dates before 1970.
try { if (Inst1 <= 1000 && typeof (Date) != "undefined") {_RecordType("<112,116,2>",(Date)); Inst1++; } } catch(e) {}
let date = new Date(1955, 0, 1);
try { if (Inst0 <= 1000 && typeof (date) != "undefined") {_RecordType("<101,105,2>",(date)); Inst0++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (date.getTime) != "undefined") {_RecordType("<130,142,3>",(date.getTime)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (date) != "undefined") {_RecordType("<130,134,3>",(date)); Inst3++; } } catch(e) {}
date.getTime() < 0;
true;
try { if (Inst4 <= 1000 && typeof (date.getHours) != "undefined") {_RecordType("<156,169,5>",(date.getHours)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (date) != "undefined") {_RecordType("<156,160,5>",(date)); Inst5++; } } catch(e) {}
date.getHours();
+0;
try { if (Inst6 <= 1000 && typeof (date.getMinutes) != "undefined") {_RecordType("<177,192,7>",(date.getMinutes)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (date) != "undefined") {_RecordType("<177,181,7>",(date)); Inst7++; } } catch(e) {}
date.getMinutes();
+0;
try { if (Inst8 <= 1000 && typeof (date.getSeconds) != "undefined") {_RecordType("<200,215,9>",(date.getSeconds)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (date) != "undefined") {_RecordType("<200,204,9>",(date)); Inst9++; } } catch(e) {}
date.getSeconds();
+0;
try { if (Inst10 <= 1000 && typeof (date.getMilliseconds) != "undefined") {_RecordType("<223,243,11>",(date.getMilliseconds)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (date) != "undefined") {_RecordType("<223,227,11>",(date)); Inst11++; } } catch(e) {}
date.getMilliseconds();
+0;
try { if (Inst13 <= 1000 && typeof (Date) != "undefined") {_RecordType("<265,269,13>",(Date)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Date.UTC) != "undefined") {_RecordType("<270,278,13>",(Date.UTC)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Date) != "undefined") {_RecordType("<270,274,13>",(Date)); Inst15++; } } catch(e) {}
let utc = new Date(Date.UTC(1955, 0, 1));
try { if (Inst12 <= 1000 && typeof (utc) != "undefined") {_RecordType("<255,258,13>",(utc)); Inst12++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (utc.getTime) != "undefined") {_RecordType("<293,304,14>",(utc.getTime)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (utc) != "undefined") {_RecordType("<293,296,14>",(utc)); Inst17++; } } catch(e) {}
utc.getTime() < 0;
true;
try { if (Inst18 <= 1000 && typeof (utc.getUTCHours) != "undefined") {_RecordType("<318,333,16>",(utc.getUTCHours)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (utc) != "undefined") {_RecordType("<318,321,16>",(utc)); Inst19++; } } catch(e) {}
utc.getUTCHours();
+0;
try { if (Inst20 <= 1000 && typeof (utc.getUTCMinutes) != "undefined") {_RecordType("<341,358,18>",(utc.getUTCMinutes)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (utc) != "undefined") {_RecordType("<341,344,18>",(utc)); Inst21++; } } catch(e) {}
utc.getUTCMinutes();
+0;
try { if (Inst22 <= 1000 && typeof (utc.getUTCSeconds) != "undefined") {_RecordType("<366,383,20>",(utc.getUTCSeconds)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (utc) != "undefined") {_RecordType("<366,369,20>",(utc)); Inst23++; } } catch(e) {}
utc.getUTCSeconds();
+0;
try { if (Inst24 <= 1000 && typeof (utc.getUTCMilliseconds) != "undefined") {_RecordType("<391,413,22>",(utc.getUTCMilliseconds)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (utc) != "undefined") {_RecordType("<391,394,22>",(utc)); Inst25++; } } catch(e) {}
utc.getUTCMilliseconds();
+0;

try { if (Inst26 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<433,446,25>",(reportCompare)); Inst26++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst27 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<467,480,26>",(reportCompare)); Inst27++; } } catch(e) {}
  reportCompare(true, true);
}

