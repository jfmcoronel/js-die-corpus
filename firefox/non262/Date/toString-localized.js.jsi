var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// |reftest| skip-if(xulRuntime.OS=="WINNT"||!this.hasOwnProperty("Intl")) -- Windows doesn't accept IANA names for the TZ env variable; Requires ICU time zone support
// Date.prototype.toString includes a localized time zone name comment.
try { if (Inst0 <= 1000 && typeof (inTimeZone) != "undefined") {_RecordType("<240,250,3>",(inTimeZone)); Inst0++; } } catch(e) {}
inTimeZone("Europe/Paris", () => {
try { if (Inst2 <= 1000 && typeof (Date) != "undefined") {_RecordType("<290,294,4>",(Date)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Month.July) != "undefined") {_RecordType("<301,311,4>",(Month.July)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Month) != "undefined") {_RecordType("<301,306,4>",(Month)); Inst4++; } } catch(e) {}
  let dt = new Date(2018, Month.July, 14);
try { if (Inst1 <= 1000 && typeof (dt) != "undefined") {_RecordType("<281,283,4>",(dt)); Inst1++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (withLocale) != "undefined") {_RecordType("<320,330,5>",(withLocale)); Inst5++; } } catch(e) {}
  withLocale("en", () => {
try { if (Inst6 <= 1000 && typeof (dt) != "undefined") {_RecordType("<349,351,6>",(dt)); Inst6++; } } catch(e) {}
    dt;
    "Sat Jul 14 2018 00:00:00 GMT+0200 (Central European Summer Time)";
  });
try { if (Inst7 <= 1000 && typeof (withLocale) != "undefined") {_RecordType("<433,443,9>",(withLocale)); Inst7++; } } catch(e) {}
  withLocale("fr", () => {
try { if (Inst8 <= 1000 && typeof (dt) != "undefined") {_RecordType("<462,464,10>",(dt)); Inst8++; } } catch(e) {}
    dt;
    "Sat Jul 14 2018 00:00:00 GMT+0200 (heure d’été d’Europe centrale)";
  });
try { if (Inst9 <= 1000 && typeof (withLocale) != "undefined") {_RecordType("<547,557,13>",(withLocale)); Inst9++; } } catch(e) {}
  withLocale("de", () => {
try { if (Inst10 <= 1000 && typeof (dt) != "undefined") {_RecordType("<576,578,14>",(dt)); Inst10++; } } catch(e) {}
    dt;
    "Sat Jul 14 2018 00:00:00 GMT+0200 (Mitteleuropäische Sommerzeit)";
  });
try { if (Inst11 <= 1000 && typeof (withLocale) != "undefined") {_RecordType("<660,670,17>",(withLocale)); Inst11++; } } catch(e) {}
  withLocale("ar", () => {
try { if (Inst12 <= 1000 && typeof (dt) != "undefined") {_RecordType("<689,691,18>",(dt)); Inst12++; } } catch(e) {}
    dt;
    "Sat Jul 14 2018 00:00:00 GMT+0200 (توقيت وسط أوروبا الصيفي)";
  });
try { if (Inst13 <= 1000 && typeof (withLocale) != "undefined") {_RecordType("<768,778,21>",(withLocale)); Inst13++; } } catch(e) {}
  withLocale("zh", () => {
try { if (Inst14 <= 1000 && typeof (dt) != "undefined") {_RecordType("<797,799,22>",(dt)); Inst14++; } } catch(e) {}
    dt;
    "Sat Jul 14 2018 00:00:00 GMT+0200 (中欧夏令时间)";
  });
});
try { if (Inst15 <= 1000 && typeof (inTimeZone) != "undefined") {_RecordType("<861,871,26>",(inTimeZone)); Inst15++; } } catch(e) {}
inTimeZone("America/Los_Angeles", () => {
try { if (Inst17 <= 1000 && typeof (Date) != "undefined") {_RecordType("<918,922,27>",(Date)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Month.July) != "undefined") {_RecordType("<929,939,27>",(Month.July)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Month) != "undefined") {_RecordType("<929,934,27>",(Month)); Inst19++; } } catch(e) {}
  let dt = new Date(2018, Month.July, 14);
try { if (Inst16 <= 1000 && typeof (dt) != "undefined") {_RecordType("<909,911,27>",(dt)); Inst16++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (withLocale) != "undefined") {_RecordType("<948,958,28>",(withLocale)); Inst20++; } } catch(e) {}
  withLocale("en", () => {
try { if (Inst21 <= 1000 && typeof (dt) != "undefined") {_RecordType("<977,979,29>",(dt)); Inst21++; } } catch(e) {}
    dt;
    "Sat Jul 14 2018 00:00:00 GMT-0700 (Pacific Daylight Time)";
  });
try { if (Inst22 <= 1000 && typeof (withLocale) != "undefined") {_RecordType("<1054,1064,32>",(withLocale)); Inst22++; } } catch(e) {}
  withLocale("fr", () => {
try { if (Inst23 <= 1000 && typeof (dt) != "undefined") {_RecordType("<1083,1085,33>",(dt)); Inst23++; } } catch(e) {}
    dt;
    "Sat Jul 14 2018 00:00:00 GMT-0700 (heure d’été du Pacifique)";
  });
try { if (Inst24 <= 1000 && typeof (withLocale) != "undefined") {_RecordType("<1163,1173,36>",(withLocale)); Inst24++; } } catch(e) {}
  withLocale("de", () => {
try { if (Inst25 <= 1000 && typeof (dt) != "undefined") {_RecordType("<1192,1194,37>",(dt)); Inst25++; } } catch(e) {}
    dt;
    "Sat Jul 14 2018 00:00:00 GMT-0700 (Nordamerikanische Westküsten-Sommerzeit)";
  });
try { if (Inst26 <= 1000 && typeof (withLocale) != "undefined") {_RecordType("<1287,1297,40>",(withLocale)); Inst26++; } } catch(e) {}
  withLocale("ar", () => {
try { if (Inst27 <= 1000 && typeof (dt) != "undefined") {_RecordType("<1316,1318,41>",(dt)); Inst27++; } } catch(e) {}
    dt;
    "Sat Jul 14 2018 00:00:00 GMT-0700 (توقيت المحيط الهادي الصيفي)";
  });
try { if (Inst28 <= 1000 && typeof (withLocale) != "undefined") {_RecordType("<1398,1408,44>",(withLocale)); Inst28++; } } catch(e) {}
  withLocale("zh", () => {
try { if (Inst29 <= 1000 && typeof (dt) != "undefined") {_RecordType("<1427,1429,45>",(dt)); Inst29++; } } catch(e) {}
    dt;
    "Sat Jul 14 2018 00:00:00 GMT-0700 (北美太平洋夏令时间)";
  });
});

for (let tz of ["UTC", "UCT", "Zulu", "Universal", "Etc/UTC", "Etc/UCT", "Etc/Zulu", "Etc/Universal"]) {
try { if (Inst30 <= 1000 && typeof (tz) != "undefined") {_RecordType("<1504,1506,50>",(tz)); Inst30++; } } catch(e) {}
try { if (Inst31 <= 1000 && typeof (inTimeZone) != "undefined") {_RecordType("<1602,1612,51>",(inTimeZone)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (tz) != "undefined") {_RecordType("<1613,1615,51>",(tz)); Inst32++; } } catch(e) {}
  inTimeZone(tz, () => {
try { if (Inst34 <= 1000 && typeof (Date) != "undefined") {_RecordType("<1642,1646,52>",(Date)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (Month.July) != "undefined") {_RecordType("<1653,1663,52>",(Month.July)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (Month) != "undefined") {_RecordType("<1653,1658,52>",(Month)); Inst36++; } } catch(e) {}
    let dt = new Date(2018, Month.July, 14);
try { if (Inst33 <= 1000 && typeof (dt) != "undefined") {_RecordType("<1633,1635,52>",(dt)); Inst33++; } } catch(e) {}
try { if (Inst37 <= 1000 && typeof (withLocale) != "undefined") {_RecordType("<1674,1684,53>",(withLocale)); Inst37++; } } catch(e) {}
    withLocale("en", () => {
try { if (Inst38 <= 1000 && typeof (dt) != "undefined") {_RecordType("<1705,1707,54>",(dt)); Inst38++; } } catch(e) {}
      dt;
      "Sat Jul 14 2018 00:00:00 GMT+0000 (Coordinated Universal Time)";
    });
try { if (Inst39 <= 1000 && typeof (withLocale) != "undefined") {_RecordType("<1793,1803,57>",(withLocale)); Inst39++; } } catch(e) {}
    withLocale("fr", () => {
try { if (Inst40 <= 1000 && typeof (dt) != "undefined") {_RecordType("<1824,1826,58>",(dt)); Inst40++; } } catch(e) {}
      dt;
      "Sat Jul 14 2018 00:00:00 GMT+0000 (Temps universel coordonné)";
    });
try { if (Inst41 <= 1000 && typeof (withLocale) != "undefined") {_RecordType("<1911,1921,61>",(withLocale)); Inst41++; } } catch(e) {}
    withLocale("de", () => {
try { if (Inst42 <= 1000 && typeof (dt) != "undefined") {_RecordType("<1942,1944,62>",(dt)); Inst42++; } } catch(e) {}
      dt;
      "Sat Jul 14 2018 00:00:00 GMT+0000 (Koordinierte Weltzeit)";
    });
try { if (Inst43 <= 1000 && typeof (withLocale) != "undefined") {_RecordType("<2025,2035,65>",(withLocale)); Inst43++; } } catch(e) {}
    withLocale("ar", () => {
try { if (Inst44 <= 1000 && typeof (dt) != "undefined") {_RecordType("<2056,2058,66>",(dt)); Inst44++; } } catch(e) {}
      dt;
      "Sat Jul 14 2018 00:00:00 GMT+0000 (التوقيت العالمي المنسق)";
    });
try { if (Inst45 <= 1000 && typeof (withLocale) != "undefined") {_RecordType("<2140,2150,69>",(withLocale)); Inst45++; } } catch(e) {}
    withLocale("zh", () => {
try { if (Inst46 <= 1000 && typeof (dt) != "undefined") {_RecordType("<2171,2173,70>",(dt)); Inst46++; } } catch(e) {}
      dt;
      "Sat Jul 14 2018 00:00:00 GMT+0000 (协调世界时)";
    });
  });
}

for (let tz of ["GMT", "Etc/GMT"]) {
try { if (Inst47 <= 1000 && typeof (tz) != "undefined") {_RecordType("<2252,2254,76>",(tz)); Inst47++; } } catch(e) {}
try { if (Inst48 <= 1000 && typeof (inTimeZone) != "undefined") {_RecordType("<2282,2292,77>",(inTimeZone)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (tz) != "undefined") {_RecordType("<2293,2295,77>",(tz)); Inst49++; } } catch(e) {}
  inTimeZone(tz, () => {
try { if (Inst51 <= 1000 && typeof (Date) != "undefined") {_RecordType("<2322,2326,78>",(Date)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (Month.July) != "undefined") {_RecordType("<2333,2343,78>",(Month.July)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (Month) != "undefined") {_RecordType("<2333,2338,78>",(Month)); Inst53++; } } catch(e) {}
    let dt = new Date(2018, Month.July, 14);
try { if (Inst50 <= 1000 && typeof (dt) != "undefined") {_RecordType("<2313,2315,78>",(dt)); Inst50++; } } catch(e) {}
try { if (Inst54 <= 1000 && typeof (withLocale) != "undefined") {_RecordType("<2354,2364,79>",(withLocale)); Inst54++; } } catch(e) {}
    withLocale("en", () => {
try { if (Inst55 <= 1000 && typeof (dt) != "undefined") {_RecordType("<2385,2387,80>",(dt)); Inst55++; } } catch(e) {}
      dt;
      "Sat Jul 14 2018 00:00:00 GMT+0000 (Greenwich Mean Time)";
    });
try { if (Inst56 <= 1000 && typeof (withLocale) != "undefined") {_RecordType("<2466,2476,83>",(withLocale)); Inst56++; } } catch(e) {}
    withLocale("fr", () => {
try { if (Inst57 <= 1000 && typeof (dt) != "undefined") {_RecordType("<2497,2499,84>",(dt)); Inst57++; } } catch(e) {}
      dt;
      "Sat Jul 14 2018 00:00:00 GMT+0000 (heure moyenne de Greenwich)";
    });
try { if (Inst58 <= 1000 && typeof (withLocale) != "undefined") {_RecordType("<2585,2595,87>",(withLocale)); Inst58++; } } catch(e) {}
    withLocale("de", () => {
try { if (Inst59 <= 1000 && typeof (dt) != "undefined") {_RecordType("<2616,2618,88>",(dt)); Inst59++; } } catch(e) {}
      dt;
      "Sat Jul 14 2018 00:00:00 GMT+0000 (Mittlere Greenwich-Zeit)";
    });
try { if (Inst60 <= 1000 && typeof (withLocale) != "undefined") {_RecordType("<2701,2711,91>",(withLocale)); Inst60++; } } catch(e) {}
    withLocale("ar", () => {
try { if (Inst61 <= 1000 && typeof (dt) != "undefined") {_RecordType("<2732,2734,92>",(dt)); Inst61++; } } catch(e) {}
      dt;
      "Sat Jul 14 2018 00:00:00 GMT+0000 (توقيت غرينتش)";
    });
try { if (Inst62 <= 1000 && typeof (withLocale) != "undefined") {_RecordType("<2806,2816,95>",(withLocale)); Inst62++; } } catch(e) {}
    withLocale("zh", () => {
try { if (Inst63 <= 1000 && typeof (dt) != "undefined") {_RecordType("<2837,2839,96>",(dt)); Inst63++; } } catch(e) {}
      dt;
      "Sat Jul 14 2018 00:00:00 GMT+0000 (格林尼治标准时间)";
    });
  });
}

try { if (Inst64 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<2923,2936,102>",(reportCompare)); Inst64++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst65 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<2957,2970,103>",(reportCompare)); Inst65++; } } catch(e) {}
  reportCompare(true, true);
}

