var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
var Inst102 = 0;
var Inst103 = 0;
var Inst104 = 0;
var Inst105 = 0;
var Inst106 = 0;
var Inst107 = 0;
var Inst108 = 0;
var Inst109 = 0;
var Inst110 = 0;
var Inst111 = 0;
var Inst112 = 0;
var Inst113 = 0;
var Inst114 = 0;
var Inst115 = 0;
var Inst116 = 0;
var Inst117 = 0;
var Inst118 = 0;
var Inst119 = 0;
var Inst120 = 0;
var Inst121 = 0;
var Inst122 = 0;
var Inst123 = 0;
var Inst124 = 0;
var Inst125 = 0;
var Inst126 = 0;
var Inst127 = 0;
var Inst128 = 0;
var Inst129 = 0;
var Inst130 = 0;
var Inst131 = 0;
var Inst132 = 0;
var Inst133 = 0;
var Inst134 = 0;
var Inst135 = 0;
var Inst136 = 0;
var Inst137 = 0;
var Inst138 = 0;
var Inst139 = 0;
var Inst140 = 0;
var Inst141 = 0;
var Inst142 = 0;
var Inst143 = 0;
var Inst144 = 0;
var Inst145 = 0;
var Inst146 = 0;
var Inst147 = 0;
var Inst148 = 0;
var Inst149 = 0;
var Inst150 = 0;
var Inst151 = 0;
var Inst152 = 0;
var Inst153 = 0;
var Inst154 = 0;
var Inst155 = 0;
var Inst156 = 0;
var Inst157 = 0;
var Inst158 = 0;
var Inst159 = 0;
var Inst160 = 0;
var Inst161 = 0;
var Inst162 = 0;
var Inst163 = 0;
var Inst164 = 0;
var Inst165 = 0;
var Inst166 = 0;
var Inst167 = 0;
var Inst168 = 0;
var Inst169 = 0;
var Inst170 = 0;
var Inst171 = 0;
var Inst172 = 0;
var Inst173 = 0;
var Inst174 = 0;
var Inst175 = 0;
var Inst176 = 0;
var Inst177 = 0;
var Inst178 = 0;
var Inst179 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Any copyright is dedicated to the Public Domain.
// http://creativecommons.org/licenses/publicdomain/
var gTestfile = 'toJSON-01.js'; //-----------------------------------------------------------------------------
try { if (Inst0 <= 1000 && typeof (gTestfile) != "undefined") {_RecordType("<109,118,3>",(gTestfile)); Inst0++; } } catch(e) {}

var BUGNUMBER = 584811;
try { if (Inst1 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<222,231,5>",(BUGNUMBER)); Inst1++; } } catch(e) {}
var summary = "Date.prototype.toJSON isn't to spec";
try { if (Inst2 <= 1000 && typeof (summary) != "undefined") {_RecordType("<246,253,6>",(summary)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (print) != "undefined") {_RecordType("<295,300,7>",(print)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<301,310,7>",(BUGNUMBER)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (summary) != "undefined") {_RecordType("<320,327,7>",(summary)); Inst5++; } } catch(e) {}
print(BUGNUMBER + ": " + summary);
/**************
 * BEGIN TEST *
 **************/

var called;
try { if (Inst6 <= 1000 && typeof (called) != "undefined") {_RecordType("<384,390,12>",(called)); Inst6++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (Date.prototype.toJSON) != "undefined") {_RecordType("<409,430,13>",(Date.prototype.toJSON)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Date.prototype) != "undefined") {_RecordType("<409,423,13>",(Date.prototype)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Date) != "undefined") {_RecordType("<409,413,13>",(Date)); Inst10++; } } catch(e) {}
var dateToJSON = Date.prototype.toJSON;
try { if (Inst7 <= 1000 && typeof (dateToJSON) != "undefined") {_RecordType("<396,406,13>",(dateToJSON)); Inst7++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (Date.prototype.hasOwnProperty) != "undefined") {_RecordType("<432,461,14>",(Date.prototype.hasOwnProperty)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Date.prototype) != "undefined") {_RecordType("<432,446,14>",(Date.prototype)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Date) != "undefined") {_RecordType("<432,436,14>",(Date)); Inst13++; } } catch(e) {}
Date.prototype.hasOwnProperty("toJSON");
true;
try { if (Inst14 <= 1000 && typeof (dateToJSON) != "undefined") {_RecordType("<486,496,16>",(dateToJSON)); Inst14++; } } catch(e) {}
typeof dateToJSON;
"function";
// brief test to exercise this outside of isolation, just for sanity
try { if (Inst16 <= 1000 && typeof (Date) != "undefined") {_RecordType("<601,605,19>",(Date)); Inst16++; } } catch(e) {}
var invalidDate = new Date();
try { if (Inst15 <= 1000 && typeof (invalidDate) != "undefined") {_RecordType("<583,594,19>",(invalidDate)); Inst15++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (invalidDate.setTime) != "undefined") {_RecordType("<609,628,20>",(invalidDate.setTime)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (invalidDate) != "undefined") {_RecordType("<609,620,20>",(invalidDate)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<629,632,20>",(NaN)); Inst19++; } } catch(e) {}
invalidDate.setTime(NaN);
try { if (Inst20 <= 1000 && typeof (JSON.stringify) != "undefined") {_RecordType("<635,649,21>",(JSON.stringify)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<635,639,21>",(JSON)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (invalidDate) != "undefined") {_RecordType("<657,668,22>",(invalidDate)); Inst22++; } } catch(e) {}
JSON.stringify({
  p: invalidDate
});
'{"p":null}';
try { if (Inst23 <= 1000 && typeof (dateToJSON.length) != "undefined") {_RecordType("<687,704,25>",(dateToJSON.length)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (dateToJSON) != "undefined") {_RecordType("<687,697,25>",(dateToJSON)); Inst24++; } } catch(e) {}
dateToJSON.length;
1;

/*
 * 1. Let O be the result of calling ToObject, giving it the this value as its
 *    argument.
 */
try { if (Inst28 <= 1000 && typeof (e) != "undefined") {_RecordType("<905,906,35>",(e)); Inst28++; } } catch(e) {}
try {
try { if (Inst25 <= 1000 && typeof (dateToJSON.call) != "undefined") {_RecordType("<820,835,33>",(dateToJSON.call)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (dateToJSON) != "undefined") {_RecordType("<820,830,33>",(dateToJSON)); Inst26++; } } catch(e) {}
  dateToJSON.call(null);
try { if (Inst27 <= 1000 && typeof (Error) != "undefined") {_RecordType("<855,860,34>",(Error)); Inst27++; } } catch(e) {}
  throw new Error("should have thrown a TypeError");
} catch (e) {
try { if (Inst29 <= 1000 && typeof (e) != "undefined") {_RecordType("<912,913,36>",(e)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<925,934,36>",(TypeError)); Inst30++; } } catch(e) {}
  e instanceof TypeError;
  true;
  "ToObject throws TypeError for null/undefined";
}

try { if (Inst35 <= 1000 && typeof (e) != "undefined") {_RecordType("<1095,1096,44>",(e)); Inst35++; } } catch(e) {}
try {
try { if (Inst31 <= 1000 && typeof (dateToJSON.call) != "undefined") {_RecordType("<1005,1020,42>",(dateToJSON.call)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (dateToJSON) != "undefined") {_RecordType("<1005,1015,42>",(dateToJSON)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<1021,1030,42>",(undefined)); Inst33++; } } catch(e) {}
  dateToJSON.call(undefined);
try { if (Inst34 <= 1000 && typeof (Error) != "undefined") {_RecordType("<1045,1050,43>",(Error)); Inst34++; } } catch(e) {}
  throw new Error("should have thrown a TypeError");
} catch (e) {
try { if (Inst36 <= 1000 && typeof (e) != "undefined") {_RecordType("<1102,1103,45>",(e)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<1115,1124,45>",(TypeError)); Inst37++; } } catch(e) {}
  e instanceof TypeError;
  true;
  "ToObject throws TypeError for null/undefined";
}
/*
 * 2. Let tv be ToPrimitive(O, hint Number).
 * ...expands to:
 *    1. Let valueOf be the result of calling the [[Get]] internal method of object O with argument "valueOf".
 *    2. If IsCallable(valueOf) is true then,
 *       a. Let val be the result of calling the [[Call]] internal method of valueOf, with O as the this value and
 *                an empty argument list.
 *       b. If val is a primitive value, return val.
 *    3. Let toString be the result of calling the [[Get]] internal method of object O with argument "toString".
 *    4. If IsCallable(toString) is true then,
 *       a. Let str be the result of calling the [[Call]] internal method of toString, with O as the this value and
 *               an empty argument list.
 *       b. If str is a primitive value, return str.
 *    5. Throw a TypeError exception.
 */


try { if (Inst44 <= 1000 && typeof (e) != "undefined") {_RecordType("<2176,2177,74>",(e)); Inst44++; } } catch(e) {}
try {
try { if (Inst39 <= 1000 && typeof (dateToJSON.call) != "undefined") {_RecordType("<2049,2064,67>",(dateToJSON.call)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (dateToJSON) != "undefined") {_RecordType("<2049,2059,67>",(dateToJSON)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (valueOf) != "undefined") {_RecordType("<2075,2082,68>",(valueOf)); Inst41++; } } catch(e) {}
  var r = dateToJSON.call({
    get valueOf() {
      throw 17;
    }

  });
try { if (Inst38 <= 1000 && typeof (r) != "undefined") {_RecordType("<2045,2046,67>",(r)); Inst38++; } } catch(e) {}
try { if (Inst42 <= 1000 && typeof (Error) != "undefined") {_RecordType("<2128,2133,73>",(Error)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (r) != "undefined") {_RecordType("<2163,2164,73>",(r)); Inst43++; } } catch(e) {}
  throw new Error("didn't throw, returned: " + r);
} catch (e) {
try { if (Inst45 <= 1000 && typeof (e) != "undefined") {_RecordType("<2183,2184,75>",(e)); Inst45++; } } catch(e) {}
  e;
  17;
try { if (Inst46 <= 1000 && typeof (e) != "undefined") {_RecordType("<2214,2215,77>",(e)); Inst46++; } } catch(e) {}
  "bad exception: " + e;
}

called = false;
try { if (Inst47 <= 1000 && typeof (called) != "undefined") {_RecordType("<2220,2226,80>",(called)); Inst47++; } } catch(e) {}
try { if (Inst48 <= 1000 && typeof (dateToJSON.call) != "undefined") {_RecordType("<2236,2251,81>",(dateToJSON.call)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (dateToJSON) != "undefined") {_RecordType("<2236,2246,81>",(dateToJSON)); Inst49++; } } catch(e) {}
dateToJSON.call({
  valueOf: null,
  toString: function () {
    called = true;
try { if (Inst50 <= 1000 && typeof (called) != "undefined") {_RecordType("<2301,2307,84>",(called)); Inst50++; } } catch(e) {}
    return 12;
  },
  toISOString: function () {
    return "ohai";
  }
});
"ohai";
try { if (Inst51 <= 1000 && typeof (called) != "undefined") {_RecordType("<2400,2406,92>",(called)); Inst51++; } } catch(e) {}
called;
true;
called = false;
try { if (Inst52 <= 1000 && typeof (called) != "undefined") {_RecordType("<2414,2420,94>",(called)); Inst52++; } } catch(e) {}
try { if (Inst53 <= 1000 && typeof (dateToJSON.call) != "undefined") {_RecordType("<2430,2445,95>",(dateToJSON.call)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (dateToJSON) != "undefined") {_RecordType("<2430,2440,95>",(dateToJSON)); Inst54++; } } catch(e) {}
dateToJSON.call({
  valueOf: function () {
    called = true;
try { if (Inst55 <= 1000 && typeof (called) != "undefined") {_RecordType("<2477,2483,97>",(called)); Inst55++; } } catch(e) {}
    return 42;
  },
  toISOString: function () {
    return null;
  }
});
null;
try { if (Inst56 <= 1000 && typeof (called) != "undefined") {_RecordType("<2572,2578,105>",(called)); Inst56++; } } catch(e) {}
called;
true;

try { if (Inst62 <= 1000 && typeof (e) != "undefined") {_RecordType("<2763,2764,121>",(e)); Inst62++; } } catch(e) {}
try {
  called = false;
try { if (Inst57 <= 1000 && typeof (called) != "undefined") {_RecordType("<2595,2601,109>",(called)); Inst57++; } } catch(e) {}
try { if (Inst58 <= 1000 && typeof (dateToJSON.call) != "undefined") {_RecordType("<2613,2628,110>",(dateToJSON.call)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (dateToJSON) != "undefined") {_RecordType("<2613,2623,110>",(dateToJSON)); Inst59++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (toString) != "undefined") {_RecordType("<2712,2720,116>",(toString)); Inst61++; } } catch(e) {}
  dateToJSON.call({
    valueOf: function () {
      called = true;
try { if (Inst60 <= 1000 && typeof (called) != "undefined") {_RecordType("<2664,2670,112>",(called)); Inst60++; } } catch(e) {}
      return {};
    },

    get toString() {
      throw 42;
    }

  });
} catch (e) {
try { if (Inst63 <= 1000 && typeof (called) != "undefined") {_RecordType("<2770,2776,122>",(called)); Inst63++; } } catch(e) {}
  called;
  true;
try { if (Inst64 <= 1000 && typeof (e) != "undefined") {_RecordType("<2788,2789,124>",(e)); Inst64++; } } catch(e) {}
  e;
  42;
try { if (Inst65 <= 1000 && typeof (e) != "undefined") {_RecordType("<2819,2820,126>",(e)); Inst65++; } } catch(e) {}
  "bad exception: " + e;
}

called = false;
try { if (Inst66 <= 1000 && typeof (called) != "undefined") {_RecordType("<2825,2831,129>",(called)); Inst66++; } } catch(e) {}
try { if (Inst67 <= 1000 && typeof (dateToJSON.call) != "undefined") {_RecordType("<2841,2856,130>",(dateToJSON.call)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (dateToJSON) != "undefined") {_RecordType("<2841,2851,130>",(dateToJSON)); Inst68++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (toString) != "undefined") {_RecordType("<2930,2938,136>",(toString)); Inst70++; } } catch(e) {}
dateToJSON.call({
  valueOf: function () {
    called = true;
try { if (Inst69 <= 1000 && typeof (called) != "undefined") {_RecordType("<2888,2894,132>",(called)); Inst69++; } } catch(e) {}
    return {};
  },

  get toString() {
    return function () {
      return 8675309;
    };
  },

  toISOString: function () {
    return true;
  }
});
true;
try { if (Inst71 <= 1000 && typeof (called) != "undefined") {_RecordType("<3063,3069,147>",(called)); Inst71++; } } catch(e) {}
called;
true;
var asserted = false;
try { if (Inst72 <= 1000 && typeof (asserted) != "undefined") {_RecordType("<3081,3089,149>",(asserted)); Inst72++; } } catch(e) {}
called = false;
try { if (Inst73 <= 1000 && typeof (called) != "undefined") {_RecordType("<3099,3105,150>",(called)); Inst73++; } } catch(e) {}
try { if (Inst74 <= 1000 && typeof (dateToJSON.call) != "undefined") {_RecordType("<3115,3130,151>",(dateToJSON.call)); Inst74++; } } catch(e) {}try { if (Inst75 <= 1000 && typeof (dateToJSON) != "undefined") {_RecordType("<3115,3125,151>",(dateToJSON)); Inst75++; } } catch(e) {}try { if (Inst77 <= 1000 && typeof (toString) != "undefined") {_RecordType("<3204,3212,157>",(toString)); Inst77++; } } catch(e) {}
dateToJSON.call({
  valueOf: function () {
    called = true;
try { if (Inst76 <= 1000 && typeof (called) != "undefined") {_RecordType("<3162,3168,153>",(called)); Inst76++; } } catch(e) {}
    return {};
  },

  get toString() {
try { if (Inst78 <= 1000 && typeof (called) != "undefined") {_RecordType("<3221,3227,158>",(called)); Inst78++; } } catch(e) {}
    called;
    true;
    asserted = true;
try { if (Inst79 <= 1000 && typeof (asserted) != "undefined") {_RecordType("<3243,3251,160>",(asserted)); Inst79++; } } catch(e) {}
    return function () {
      return 8675309;
    };
  },

  toISOString: function () {
try { if (Inst80 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<3360,3363,167>",(NaN)); Inst80++; } } catch(e) {}
    return NaN;
  }
});
try { if (Inst81 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<3373,3376,170>",(NaN)); Inst81++; } } catch(e) {}
NaN;
try { if (Inst82 <= 1000 && typeof (asserted) != "undefined") {_RecordType("<3378,3386,171>",(asserted)); Inst82++; } } catch(e) {}
asserted;
true;

try { if (Inst90 <= 1000 && typeof (e) != "undefined") {_RecordType("<3619,3620,185>",(e)); Inst90++; } } catch(e) {}
try {
try { if (Inst84 <= 1000 && typeof (dateToJSON.call) != "undefined") {_RecordType("<3411,3426,175>",(dateToJSON.call)); Inst84++; } } catch(e) {}try { if (Inst85 <= 1000 && typeof (dateToJSON) != "undefined") {_RecordType("<3411,3421,175>",(dateToJSON)); Inst85++; } } catch(e) {}try { if (Inst86 <= 1000 && typeof (toISOString) != "undefined") {_RecordType("<3477,3488,179>",(toISOString)); Inst86++; } } catch(e) {}
  var r = dateToJSON.call({
    valueOf: null,
    toString: null,

    get toISOString() {
try { if (Inst87 <= 1000 && typeof (Error) != "undefined") {_RecordType("<3509,3514,180>",(Error)); Inst87++; } } catch(e) {}
      throw new Error("shouldn't have been gotten");
    }

  });
try { if (Inst83 <= 1000 && typeof (r) != "undefined") {_RecordType("<3407,3408,175>",(r)); Inst83++; } } catch(e) {}
try { if (Inst88 <= 1000 && typeof (Error) != "undefined") {_RecordType("<3571,3576,184>",(Error)); Inst88++; } } catch(e) {}try { if (Inst89 <= 1000 && typeof (r) != "undefined") {_RecordType("<3606,3607,184>",(r)); Inst89++; } } catch(e) {}
  throw new Error("didn't throw, returned: " + r);
} catch (e) {
try { if (Inst91 <= 1000 && typeof (e) != "undefined") {_RecordType("<3626,3627,186>",(e)); Inst91++; } } catch(e) {}try { if (Inst92 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<3639,3648,186>",(TypeError)); Inst92++; } } catch(e) {}
  e instanceof TypeError;
  true;
try { if (Inst93 <= 1000 && typeof (e) != "undefined") {_RecordType("<3680,3681,188>",(e)); Inst93++; } } catch(e) {}
  "bad exception: " + e;
}
/* 3. If tv is a Number and is not finite, return null. */


try { if (Inst94 <= 1000 && typeof (dateToJSON.call) != "undefined") {_RecordType("<3746,3761,193>",(dateToJSON.call)); Inst94++; } } catch(e) {}try { if (Inst95 <= 1000 && typeof (dateToJSON) != "undefined") {_RecordType("<3746,3756,193>",(dateToJSON)); Inst95++; } } catch(e) {}
dateToJSON.call({
  valueOf: function () {
try { if (Inst96 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<3800,3808,195>",(Infinity)); Inst96++; } } catch(e) {}
    return Infinity;
  }
});
null;
try { if (Inst97 <= 1000 && typeof (dateToJSON.call) != "undefined") {_RecordType("<3824,3839,199>",(dateToJSON.call)); Inst97++; } } catch(e) {}try { if (Inst98 <= 1000 && typeof (dateToJSON) != "undefined") {_RecordType("<3824,3834,199>",(dateToJSON)); Inst98++; } } catch(e) {}
dateToJSON.call({
  valueOf: function () {
try { if (Inst99 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<3879,3887,201>",(Infinity)); Inst99++; } } catch(e) {}
    return -Infinity;
  }
});
null;
try { if (Inst100 <= 1000 && typeof (dateToJSON.call) != "undefined") {_RecordType("<3903,3918,205>",(dateToJSON.call)); Inst100++; } } catch(e) {}try { if (Inst101 <= 1000 && typeof (dateToJSON) != "undefined") {_RecordType("<3903,3913,205>",(dateToJSON)); Inst101++; } } catch(e) {}
dateToJSON.call({
  valueOf: function () {
try { if (Inst102 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<3957,3960,207>",(NaN)); Inst102++; } } catch(e) {}
    return NaN;
  }
});
null;
try { if (Inst103 <= 1000 && typeof (dateToJSON.call) != "undefined") {_RecordType("<3976,3991,211>",(dateToJSON.call)); Inst103++; } } catch(e) {}try { if (Inst104 <= 1000 && typeof (dateToJSON) != "undefined") {_RecordType("<3976,3986,211>",(dateToJSON)); Inst104++; } } catch(e) {}
dateToJSON.call({
  valueOf: function () {
try { if (Inst105 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<4030,4038,213>",(Infinity)); Inst105++; } } catch(e) {}
    return Infinity;
  },
  toISOString: function () {
    return {};
  }
});
null;
try { if (Inst106 <= 1000 && typeof (dateToJSON.call) != "undefined") {_RecordType("<4103,4118,220>",(dateToJSON.call)); Inst106++; } } catch(e) {}try { if (Inst107 <= 1000 && typeof (dateToJSON) != "undefined") {_RecordType("<4103,4113,220>",(dateToJSON)); Inst107++; } } catch(e) {}
dateToJSON.call({
  valueOf: function () {
try { if (Inst108 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<4158,4166,222>",(Infinity)); Inst108++; } } catch(e) {}
    return -Infinity;
  },
  toISOString: function () {
    return [];
  }
});
null;
try { if (Inst109 <= 1000 && typeof (dateToJSON.call) != "undefined") {_RecordType("<4231,4246,229>",(dateToJSON.call)); Inst109++; } } catch(e) {}try { if (Inst110 <= 1000 && typeof (dateToJSON) != "undefined") {_RecordType("<4231,4241,229>",(dateToJSON)); Inst110++; } } catch(e) {}
dateToJSON.call({
  valueOf: function () {
try { if (Inst111 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<4285,4288,231>",(NaN)); Inst111++; } } catch(e) {}
    return NaN;
  },
  toISOString: function () {
try { if (Inst112 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<4335,4344,234>",(undefined)); Inst112++; } } catch(e) {}
    return undefined;
  }
});
null;

/*
 * 4. Let toISO be the result of calling the [[Get]] internal method of O with
 *    argument "toISOString".
 */
try { if (Inst119 <= 1000 && typeof (e) != "undefined") {_RecordType("<4624,4625,251>",(e)); Inst119++; } } catch(e) {}
try {
try { if (Inst114 <= 1000 && typeof (dateToJSON.call) != "undefined") {_RecordType("<4493,4508,244>",(dateToJSON.call)); Inst114++; } } catch(e) {}try { if (Inst115 <= 1000 && typeof (dateToJSON) != "undefined") {_RecordType("<4493,4503,244>",(dateToJSON)); Inst115++; } } catch(e) {}try { if (Inst116 <= 1000 && typeof (toISOString) != "undefined") {_RecordType("<4519,4530,245>",(toISOString)); Inst116++; } } catch(e) {}
  var r = dateToJSON.call({
    get toISOString() {
      throw 42;
    }

  });
try { if (Inst113 <= 1000 && typeof (r) != "undefined") {_RecordType("<4489,4490,244>",(r)); Inst113++; } } catch(e) {}
try { if (Inst117 <= 1000 && typeof (Error) != "undefined") {_RecordType("<4576,4581,250>",(Error)); Inst117++; } } catch(e) {}try { if (Inst118 <= 1000 && typeof (r) != "undefined") {_RecordType("<4611,4612,250>",(r)); Inst118++; } } catch(e) {}
  throw new Error("didn't throw, returned: " + r);
} catch (e) {
try { if (Inst120 <= 1000 && typeof (e) != "undefined") {_RecordType("<4631,4632,252>",(e)); Inst120++; } } catch(e) {}
  e;
  42;
try { if (Inst121 <= 1000 && typeof (e) != "undefined") {_RecordType("<4662,4663,254>",(e)); Inst121++; } } catch(e) {}
  "bad exception: " + e;
}
/* 5. If IsCallable(toISO) is false, throw a TypeError exception. */


try { if (Inst127 <= 1000 && typeof (e) != "undefined") {_RecordType("<4860,4861,264>",(e)); Inst127++; } } catch(e) {}
try {
try { if (Inst123 <= 1000 && typeof (dateToJSON.call) != "undefined") {_RecordType("<4754,4769,260>",(dateToJSON.call)); Inst123++; } } catch(e) {}try { if (Inst124 <= 1000 && typeof (dateToJSON) != "undefined") {_RecordType("<4754,4764,260>",(dateToJSON)); Inst124++; } } catch(e) {}
  var r = dateToJSON.call({
    toISOString: null
  });
try { if (Inst122 <= 1000 && typeof (r) != "undefined") {_RecordType("<4750,4751,260>",(r)); Inst122++; } } catch(e) {}
try { if (Inst125 <= 1000 && typeof (Error) != "undefined") {_RecordType("<4812,4817,263>",(Error)); Inst125++; } } catch(e) {}try { if (Inst126 <= 1000 && typeof (r) != "undefined") {_RecordType("<4847,4848,263>",(r)); Inst126++; } } catch(e) {}
  throw new Error("didn't throw, returned: " + r);
} catch (e) {
try { if (Inst128 <= 1000 && typeof (e) != "undefined") {_RecordType("<4867,4868,265>",(e)); Inst128++; } } catch(e) {}try { if (Inst129 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<4880,4889,265>",(TypeError)); Inst129++; } } catch(e) {}
  e instanceof TypeError;
  true;
try { if (Inst130 <= 1000 && typeof (e) != "undefined") {_RecordType("<4921,4922,267>",(e)); Inst130++; } } catch(e) {}
  "bad exception: " + e;
}

try { if (Inst137 <= 1000 && typeof (e) != "undefined") {_RecordType("<5054,5055,275>",(e)); Inst137++; } } catch(e) {}
try {
try { if (Inst132 <= 1000 && typeof (dateToJSON.call) != "undefined") {_RecordType("<4943,4958,271>",(dateToJSON.call)); Inst132++; } } catch(e) {}try { if (Inst133 <= 1000 && typeof (dateToJSON) != "undefined") {_RecordType("<4943,4953,271>",(dateToJSON)); Inst133++; } } catch(e) {}try { if (Inst134 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<4978,4987,272>",(undefined)); Inst134++; } } catch(e) {}
  var r = dateToJSON.call({
    toISOString: undefined
  });
try { if (Inst131 <= 1000 && typeof (r) != "undefined") {_RecordType("<4939,4940,271>",(r)); Inst131++; } } catch(e) {}
try { if (Inst135 <= 1000 && typeof (Error) != "undefined") {_RecordType("<5006,5011,274>",(Error)); Inst135++; } } catch(e) {}try { if (Inst136 <= 1000 && typeof (r) != "undefined") {_RecordType("<5041,5042,274>",(r)); Inst136++; } } catch(e) {}
  throw new Error("didn't throw, returned: " + r);
} catch (e) {
try { if (Inst138 <= 1000 && typeof (e) != "undefined") {_RecordType("<5061,5062,276>",(e)); Inst138++; } } catch(e) {}try { if (Inst139 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<5074,5083,276>",(TypeError)); Inst139++; } } catch(e) {}
  e instanceof TypeError;
  true;
try { if (Inst140 <= 1000 && typeof (e) != "undefined") {_RecordType("<5115,5116,278>",(e)); Inst140++; } } catch(e) {}
  "bad exception: " + e;
}

try { if (Inst146 <= 1000 && typeof (e) != "undefined") {_RecordType("<5250,5251,286>",(e)); Inst146++; } } catch(e) {}
try {
try { if (Inst142 <= 1000 && typeof (dateToJSON.call) != "undefined") {_RecordType("<5137,5152,282>",(dateToJSON.call)); Inst142++; } } catch(e) {}try { if (Inst143 <= 1000 && typeof (dateToJSON) != "undefined") {_RecordType("<5137,5147,282>",(dateToJSON)); Inst143++; } } catch(e) {}
  var r = dateToJSON.call({
    toISOString: "oogabooga"
  });
try { if (Inst141 <= 1000 && typeof (r) != "undefined") {_RecordType("<5133,5134,282>",(r)); Inst141++; } } catch(e) {}
try { if (Inst144 <= 1000 && typeof (Error) != "undefined") {_RecordType("<5202,5207,285>",(Error)); Inst144++; } } catch(e) {}try { if (Inst145 <= 1000 && typeof (r) != "undefined") {_RecordType("<5237,5238,285>",(r)); Inst145++; } } catch(e) {}
  throw new Error("didn't throw, returned: " + r);
} catch (e) {
try { if (Inst147 <= 1000 && typeof (e) != "undefined") {_RecordType("<5257,5258,287>",(e)); Inst147++; } } catch(e) {}try { if (Inst148 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<5270,5279,287>",(TypeError)); Inst148++; } } catch(e) {}
  e instanceof TypeError;
  true;
try { if (Inst149 <= 1000 && typeof (e) != "undefined") {_RecordType("<5311,5312,289>",(e)); Inst149++; } } catch(e) {}
  "bad exception: " + e;
}

try { if (Inst157 <= 1000 && typeof (e) != "undefined") {_RecordType("<5442,5443,297>",(e)); Inst157++; } } catch(e) {}
try {
try { if (Inst151 <= 1000 && typeof (dateToJSON.call) != "undefined") {_RecordType("<5333,5348,293>",(dateToJSON.call)); Inst151++; } } catch(e) {}try { if (Inst152 <= 1000 && typeof (dateToJSON) != "undefined") {_RecordType("<5333,5343,293>",(dateToJSON)); Inst152++; } } catch(e) {}try { if (Inst153 <= 1000 && typeof (Math.PI) != "undefined") {_RecordType("<5368,5375,294>",(Math.PI)); Inst153++; } } catch(e) {}try { if (Inst154 <= 1000 && typeof (Math) != "undefined") {_RecordType("<5368,5372,294>",(Math)); Inst154++; } } catch(e) {}
  var r = dateToJSON.call({
    toISOString: Math.PI
  });
try { if (Inst150 <= 1000 && typeof (r) != "undefined") {_RecordType("<5329,5330,293>",(r)); Inst150++; } } catch(e) {}
try { if (Inst155 <= 1000 && typeof (Error) != "undefined") {_RecordType("<5394,5399,296>",(Error)); Inst155++; } } catch(e) {}try { if (Inst156 <= 1000 && typeof (r) != "undefined") {_RecordType("<5429,5430,296>",(r)); Inst156++; } } catch(e) {}
  throw new Error("didn't throw, returned: " + r);
} catch (e) {
try { if (Inst158 <= 1000 && typeof (e) != "undefined") {_RecordType("<5449,5450,298>",(e)); Inst158++; } } catch(e) {}try { if (Inst159 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<5462,5471,298>",(TypeError)); Inst159++; } } catch(e) {}
  e instanceof TypeError;
  true;
try { if (Inst160 <= 1000 && typeof (e) != "undefined") {_RecordType("<5503,5504,300>",(e)); Inst160++; } } catch(e) {}
  "bad exception: " + e;
}
/*
 * 6. Return the result of calling the [[Call]] internal method of toISO with O
 *    as the this value and an empty argument list.
 */


var o = {
  toISOString: function (a) {
try { if (Inst162 <= 1000 && typeof (a) != "undefined") {_RecordType("<5684,5685,309>",(a)); Inst162++; } } catch(e) {}
    called = true;
try { if (Inst163 <= 1000 && typeof (called) != "undefined") {_RecordType("<5693,5699,310>",(called)); Inst163++; } } catch(e) {}
    this;
try { if (Inst164 <= 1000 && typeof (o) != "undefined") {_RecordType("<5722,5723,312>",(o)); Inst164++; } } catch(e) {}
    o;
try { if (Inst165 <= 1000 && typeof (a) != "undefined") {_RecordType("<5729,5730,313>",(a)); Inst165++; } } catch(e) {}
    a;
try { if (Inst166 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<5736,5745,314>",(undefined)); Inst166++; } } catch(e) {}
    undefined;
try { if (Inst167 <= 1000 && typeof (arguments.length) != "undefined") {_RecordType("<5751,5767,315>",(arguments.length)); Inst167++; } } catch(e) {}try { if (Inst168 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<5751,5760,315>",(arguments)); Inst168++; } } catch(e) {}
    arguments.length;
    0;
try { if (Inst169 <= 1000 && typeof (obj) != "undefined") {_RecordType("<5787,5790,317>",(obj)); Inst169++; } } catch(e) {}
    return obj;
  }
};
try { if (Inst161 <= 1000 && typeof (o) != "undefined") {_RecordType("<5653,5654,308>",(o)); Inst161++; } } catch(e) {}
var obj = {};
try { if (Inst170 <= 1000 && typeof (obj) != "undefined") {_RecordType("<5803,5806,320>",(obj)); Inst170++; } } catch(e) {}
called = false;
try { if (Inst171 <= 1000 && typeof (called) != "undefined") {_RecordType("<5813,5819,321>",(called)); Inst171++; } } catch(e) {}
try { if (Inst172 <= 1000 && typeof (dateToJSON.call) != "undefined") {_RecordType("<5829,5844,322>",(dateToJSON.call)); Inst172++; } } catch(e) {}try { if (Inst173 <= 1000 && typeof (dateToJSON) != "undefined") {_RecordType("<5829,5839,322>",(dateToJSON)); Inst173++; } } catch(e) {}try { if (Inst174 <= 1000 && typeof (o) != "undefined") {_RecordType("<5845,5846,322>",(o)); Inst174++; } } catch(e) {}
dateToJSON.call(o);
try { if (Inst175 <= 1000 && typeof (obj) != "undefined") {_RecordType("<5849,5852,323>",(obj)); Inst175++; } } catch(e) {}
obj;
"should have gotten obj back";
try { if (Inst176 <= 1000 && typeof (called) != "undefined") {_RecordType("<5885,5891,325>",(called)); Inst176++; } } catch(e) {}
called;
true;

/******************************************************************************/
try { if (Inst177 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<5992,6005,329>",(reportCompare)); Inst177++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst178 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<6026,6039,330>",(reportCompare)); Inst178++; } } catch(e) {}
  reportCompare(true, true);
}

try { if (Inst179 <= 1000 && typeof (print) != "undefined") {_RecordType("<6056,6061,333>",(print)); Inst179++; } } catch(e) {}
print("All tests passed!");

