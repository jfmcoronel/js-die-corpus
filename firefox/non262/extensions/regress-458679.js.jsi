var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// |reftest| skip-if(!xulRuntime.shell||xulRuntime.shell&&xulRuntime.XPCOMABI.match(/x86_64/)) slow

/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
//-----------------------------------------------------------------------------
var BUGNUMBER = 458679;
try { if (Inst0 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<471,480,9>",(BUGNUMBER)); Inst0++; } } catch(e) {}
var summary = 'Do not assert: nbytes != 0';
try { if (Inst1 <= 1000 && typeof (summary) != "undefined") {_RecordType("<495,502,10>",(summary)); Inst1++; } } catch(e) {}
var actual = '';
try { if (Inst2 <= 1000 && typeof (actual) != "undefined") {_RecordType("<539,545,11>",(actual)); Inst2++; } } catch(e) {}
var expect = '';
try { if (Inst3 <= 1000 && typeof (expect) != "undefined") {_RecordType("<556,562,12>",(expect)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (printBugNumber) != "undefined") {_RecordType("<569,583,13>",(printBugNumber)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<584,593,13>",(BUGNUMBER)); Inst5++; } } catch(e) {}
printBugNumber(BUGNUMBER);
try { if (Inst6 <= 1000 && typeof (printStatus) != "undefined") {_RecordType("<596,607,14>",(printStatus)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (summary) != "undefined") {_RecordType("<608,615,14>",(summary)); Inst7++; } } catch(e) {}
printStatus(summary);

try { if (Inst8 <= 1000 && typeof (f) != "undefined") {_RecordType("<628,629,16>",(f)); Inst8++; } } catch(e) {}
function f() {
  for (var i = 1; i < dps.length; ++i) {
try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<645,646,17>",(i)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<652,653,17>",(i)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (dps.length) != "undefined") {_RecordType("<656,666,17>",(dps.length)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (dps) != "undefined") {_RecordType("<656,659,17>",(dps)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<670,671,17>",(i)); Inst13++; } } catch(e) {}
    var a = "";
try { if (Inst14 <= 1000 && typeof (a) != "undefined") {_RecordType("<683,684,18>",(a)); Inst14++; } } catch(e) {}
    var b = "";
try { if (Inst15 <= 1000 && typeof (b) != "undefined") {_RecordType("<699,700,19>",(b)); Inst15++; } } catch(e) {}
    var c = "";
try { if (Inst16 <= 1000 && typeof (c) != "undefined") {_RecordType("<715,716,20>",(c)); Inst16++; } } catch(e) {}
  }
}

try { if (Inst17 <= 1000 && typeof (stringOfLength) != "undefined") {_RecordType("<739,753,24>",(stringOfLength)); Inst17++; } } catch(e) {}
function stringOfLength(n) {
try { if (Inst18 <= 1000 && typeof (n) != "undefined") {_RecordType("<754,755,24>",(n)); Inst18++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (n) != "undefined") {_RecordType("<765,766,25>",(n)); Inst19++; } } catch(e) {}
  if (n == 0) {
    return "";
  } else {
try { if (Inst20 <= 1000 && typeof (n) != "undefined") {_RecordType("<809,810,28>",(n)); Inst20++; } } catch(e) {}
    if (n == 1) {
      return "\"";
    } else {
try { if (Inst22 <= 1000 && typeof (n) != "undefined") {_RecordType("<865,866,31>",(n)); Inst22++; } } catch(e) {}
      var r = n % 2;
try { if (Inst21 <= 1000 && typeof (r) != "undefined") {_RecordType("<861,862,31>",(r)); Inst21++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (n) != "undefined") {_RecordType("<887,888,32>",(n)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (r) != "undefined") {_RecordType("<891,892,32>",(r)); Inst25++; } } catch(e) {}
      var d = (n - r) / 2;
try { if (Inst23 <= 1000 && typeof (d) != "undefined") {_RecordType("<882,883,32>",(d)); Inst23++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (stringOfLength) != "undefined") {_RecordType("<913,927,33>",(stringOfLength)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (d) != "undefined") {_RecordType("<928,929,33>",(d)); Inst28++; } } catch(e) {}
      var y = stringOfLength(d);
try { if (Inst26 <= 1000 && typeof (y) != "undefined") {_RecordType("<909,910,33>",(y)); Inst26++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (y) != "undefined") {_RecordType("<945,946,34>",(y)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (y) != "undefined") {_RecordType("<949,950,34>",(y)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (stringOfLength) != "undefined") {_RecordType("<953,967,34>",(stringOfLength)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (r) != "undefined") {_RecordType("<968,969,34>",(r)); Inst32++; } } catch(e) {}
      return y + y + stringOfLength(r);
    }
  }
}

try { if (Inst45 <= 1000 && typeof (ex) != "undefined") {_RecordType("<1132,1134,48>",(ex)); Inst45++; } } catch(e) {}
try {
try { if (Inst33 <= 1000 && typeof (this.__defineGetter__) != "undefined") {_RecordType("<993,1014,40>",(this.__defineGetter__)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (this.toSource) != "undefined") {_RecordType("<1020,1033,40>",(this.toSource)); Inst34++; } } catch(e) {}
  this.__defineGetter__('x', this.toSource);

try { if (Inst35 <= 1000 && typeof (x.length) != "undefined") {_RecordType("<1046,1054,42>",(x.length)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (x) != "undefined") {_RecordType("<1046,1047,42>",(x)); Inst36++; } } catch(e) {}
  while (x.length < 12000000) {
try { if (Inst38 <= 1000 && typeof (x) != "undefined") {_RecordType("<1081,1082,43>",(x)); Inst38++; } } catch(e) {}
    let q = x;
try { if (Inst37 <= 1000 && typeof (q) != "undefined") {_RecordType("<1077,1078,43>",(q)); Inst37++; } } catch(e) {}
try { if (Inst40 <= 1000 && typeof (q) != "undefined") {_RecordType("<1092,1093,44>",(q)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (q) != "undefined") {_RecordType("<1096,1097,44>",(q)); Inst41++; } } catch(e) {}
    s = q + q;
try { if (Inst39 <= 1000 && typeof (s) != "undefined") {_RecordType("<1088,1089,44>",(s)); Inst39++; } } catch(e) {}
  }

try { if (Inst42 <= 1000 && typeof (print) != "undefined") {_RecordType("<1106,1111,47>",(print)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (x.length) != "undefined") {_RecordType("<1112,1120,47>",(x.length)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (x) != "undefined") {_RecordType("<1112,1113,47>",(x)); Inst44++; } } catch(e) {}
  print(x.length);
} catch (ex) {
  ;
}

try { if (Inst46 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1145,1158,52>",(reportCompare)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1159,1165,52>",(expect)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1167,1173,52>",(actual)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (summary) != "undefined") {_RecordType("<1175,1182,52>",(summary)); Inst49++; } } catch(e) {}
reportCompare(expect, actual, summary);

