var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* -*- indent-tabs-mode: nil; js-indent-level: 2 -*- */

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
//-----------------------------------------------------------------------------
var BUGNUMBER = 396326;
try { if (Inst0 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<346,355,7>",(BUGNUMBER)); Inst0++; } } catch(e) {}
var summary = 'Do not assert trying to disassemble get(var|arg) prop';
try { if (Inst1 <= 1000 && typeof (summary) != "undefined") {_RecordType("<370,377,8>",(summary)); Inst1++; } } catch(e) {}
var actual = 'No Crash';
try { if (Inst2 <= 1000 && typeof (actual) != "undefined") {_RecordType("<441,447,9>",(actual)); Inst2++; } } catch(e) {}
var expect = 'No Crash'; //-----------------------------------------------------------------------------
try { if (Inst3 <= 1000 && typeof (expect) != "undefined") {_RecordType("<466,472,10>",(expect)); Inst3++; } } catch(e) {}

try { if (Inst4 <= 1000 && typeof (test) != "undefined") {_RecordType("<568,572,12>",(test)); Inst4++; } } catch(e) {}
test(); //-----------------------------------------------------------------------------

try { if (Inst5 <= 1000 && typeof (test) != "undefined") {_RecordType("<666,670,14>",(test)); Inst5++; } } catch(e) {}
function test() {
try { if (Inst6 <= 1000 && typeof (printBugNumber) != "undefined") {_RecordType("<677,691,15>",(printBugNumber)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<692,701,15>",(BUGNUMBER)); Inst7++; } } catch(e) {}
  printBugNumber(BUGNUMBER);
try { if (Inst8 <= 1000 && typeof (printStatus) != "undefined") {_RecordType("<706,717,16>",(printStatus)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (summary) != "undefined") {_RecordType("<718,725,16>",(summary)); Inst9++; } } catch(e) {}
  printStatus(summary);

try { if (Inst10 <= 1000 && typeof (dis) != "undefined") {_RecordType("<742,745,18>",(dis)); Inst10++; } } catch(e) {}
  if (typeof dis == 'undefined') {
try { if (Inst11 <= 1000 && typeof (print) != "undefined") {_RecordType("<768,773,19>",(print)); Inst11++; } } catch(e) {}
    print('disassembly not supported. test skipped.');
try { if (Inst12 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<823,836,20>",(reportCompare)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (expect) != "undefined") {_RecordType("<837,843,20>",(expect)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (actual) != "undefined") {_RecordType("<845,851,20>",(actual)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (summary) != "undefined") {_RecordType("<853,860,20>",(summary)); Inst15++; } } catch(e) {}
    reportCompare(expect, actual, summary);
  } else {
try { if (Inst16 <= 1000 && typeof (f1) != "undefined") {_RecordType("<887,889,22>",(f1)); Inst16++; } } catch(e) {}
    function f1() {
      var v;
try { if (Inst17 <= 1000 && typeof (v) != "undefined") {_RecordType("<904,905,23>",(v)); Inst17++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (v.prop) != "undefined") {_RecordType("<920,926,24>",(v.prop)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (v) != "undefined") {_RecordType("<920,921,24>",(v)); Inst19++; } } catch(e) {}
      return v.prop;
    }

    ;
try { if (Inst20 <= 1000 && typeof (dis) != "undefined") {_RecordType("<945,948,28>",(dis)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (f1) != "undefined") {_RecordType("<949,951,28>",(f1)); Inst21++; } } catch(e) {}
    dis(f1);
try { if (Inst22 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<958,971,29>",(reportCompare)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (expect) != "undefined") {_RecordType("<972,978,29>",(expect)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (actual) != "undefined") {_RecordType("<980,986,29>",(actual)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (summary) != "undefined") {_RecordType("<988,995,29>",(summary)); Inst25++; } } catch(e) {}
    reportCompare(expect, actual, summary + ': function f1() { var v; return v.prop };');

try { if (Inst26 <= 1000 && typeof (f2) != "undefined") {_RecordType("<1058,1060,31>",(f2)); Inst26++; } } catch(e) {}
    function f2(arg) {
try { if (Inst27 <= 1000 && typeof (arg) != "undefined") {_RecordType("<1061,1064,31>",(arg)); Inst27++; } } catch(e) {}
try { if (Inst28 <= 1000 && typeof (arg.prop) != "undefined") {_RecordType("<1081,1089,32>",(arg.prop)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (arg) != "undefined") {_RecordType("<1081,1084,32>",(arg)); Inst29++; } } catch(e) {}
      return arg.prop;
    }

    ;
try { if (Inst30 <= 1000 && typeof (dis) != "undefined") {_RecordType("<1108,1111,36>",(dis)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (f2) != "undefined") {_RecordType("<1112,1114,36>",(f2)); Inst31++; } } catch(e) {}
    dis(f2);
try { if (Inst32 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1121,1134,37>",(reportCompare)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1135,1141,37>",(expect)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1143,1149,37>",(actual)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (summary) != "undefined") {_RecordType("<1151,1158,37>",(summary)); Inst35++; } } catch(e) {}
    reportCompare(expect, actual, summary + ': function f2(arg) { return arg.prop };');

try { if (Inst36 <= 1000 && typeof (f3) != "undefined") {_RecordType("<1219,1221,39>",(f3)); Inst36++; } } catch(e) {}
    function f3() {
try { if (Inst37 <= 1000 && typeof (this.prop) != "undefined") {_RecordType("<1239,1248,40>",(this.prop)); Inst37++; } } catch(e) {}
      return this.prop;
    }

    ;
try { if (Inst38 <= 1000 && typeof (dis) != "undefined") {_RecordType("<1267,1270,44>",(dis)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (f3) != "undefined") {_RecordType("<1271,1273,44>",(f3)); Inst39++; } } catch(e) {}
    dis(f3);
try { if (Inst40 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1280,1293,45>",(reportCompare)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1294,1300,45>",(expect)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1302,1308,45>",(actual)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (summary) != "undefined") {_RecordType("<1310,1317,45>",(summary)); Inst43++; } } catch(e) {}
    reportCompare(expect, actual, summary + ': function f3() { return this.prop };');
  }
}

