var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* -*- indent-tabs-mode: nil; js-indent-level: 2 -*- */

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
//-----------------------------------------------------------------------------
var BUGNUMBER = 311792;
try { if (Inst0 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<346,355,7>",(BUGNUMBER)); Inst0++; } } catch(e) {}
var summary = 'Root Array.prototype methods';
try { if (Inst1 <= 1000 && typeof (summary) != "undefined") {_RecordType("<370,377,8>",(summary)); Inst1++; } } catch(e) {}
var actual = 'No Crash';
try { if (Inst2 <= 1000 && typeof (actual) != "undefined") {_RecordType("<416,422,9>",(actual)); Inst2++; } } catch(e) {}
var expect = 'No Crash';
try { if (Inst3 <= 1000 && typeof (expect) != "undefined") {_RecordType("<441,447,10>",(expect)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (printBugNumber) != "undefined") {_RecordType("<462,476,11>",(printBugNumber)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<477,486,11>",(BUGNUMBER)); Inst5++; } } catch(e) {}
printBugNumber(BUGNUMBER);
try { if (Inst6 <= 1000 && typeof (printStatus) != "undefined") {_RecordType("<489,500,12>",(printStatus)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (summary) != "undefined") {_RecordType("<501,508,12>",(summary)); Inst7++; } } catch(e) {}
printStatus(summary);
var subverted = 0;
try { if (Inst8 <= 1000 && typeof (subverted) != "undefined") {_RecordType("<515,524,13>",(subverted)); Inst8++; } } catch(e) {}

try { if (Inst9 <= 1000 && typeof (index_getter) != "undefined") {_RecordType("<540,552,15>",(index_getter)); Inst9++; } } catch(e) {}
function index_getter() {
try { if (Inst10 <= 1000 && typeof (a[0]) != "undefined") {_RecordType("<566,570,16>",(a[0])); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (a) != "undefined") {_RecordType("<566,567,16>",(a)); Inst11++; } } catch(e) {}
  delete a[0];
try { if (Inst12 <= 1000 && typeof (gc) != "undefined") {_RecordType("<574,576,17>",(gc)); Inst12++; } } catch(e) {}
  gc();

  for (var i = 0; i != 1 << 14; ++i) {
try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<592,593,19>",(i)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<599,600,19>",(i)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<615,616,19>",(i)); Inst15++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (String) != "undefined") {_RecordType("<638,644,20>",(String)); Inst17++; } } catch(e) {}
    var tmp = new String("test");
try { if (Inst16 <= 1000 && typeof (tmp) != "undefined") {_RecordType("<628,631,20>",(tmp)); Inst16++; } } catch(e) {}
    tmp = null;
try { if (Inst18 <= 1000 && typeof (tmp) != "undefined") {_RecordType("<658,661,21>",(tmp)); Inst18++; } } catch(e) {}
  }

  return 1;
}

try { if (Inst19 <= 1000 && typeof (index_setter) != "undefined") {_RecordType("<699,711,27>",(index_setter)); Inst19++; } } catch(e) {}
function index_setter(value) {
try { if (Inst20 <= 1000 && typeof (value) != "undefined") {_RecordType("<712,717,27>",(value)); Inst20++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (value) != "undefined") {_RecordType("<735,740,28>",(value)); Inst22++; } } catch(e) {}
  subverted = value;
try { if (Inst21 <= 1000 && typeof (subverted) != "undefined") {_RecordType("<723,732,28>",(subverted)); Inst21++; } } catch(e) {}
}

try { if (Inst24 <= 1000 && typeof (Math.sqrt) != "undefined") {_RecordType("<754,763,31>",(Math.sqrt)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Math) != "undefined") {_RecordType("<754,758,31>",(Math)); Inst25++; } } catch(e) {}
var a = [Math.sqrt(2), 0];
try { if (Inst23 <= 1000 && typeof (a) != "undefined") {_RecordType("<749,750,31>",(a)); Inst23++; } } catch(e) {}

try { if (Inst26 <= 1000 && typeof (a.__defineGetter__) != "undefined") {_RecordType("<773,791,33>",(a.__defineGetter__)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (a) != "undefined") {_RecordType("<773,774,33>",(a)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (index_getter) != "undefined") {_RecordType("<795,807,33>",(index_getter)); Inst28++; } } catch(e) {}
a.__defineGetter__(1, index_getter);

try { if (Inst29 <= 1000 && typeof (a.__defineSetter__) != "undefined") {_RecordType("<811,829,35>",(a.__defineSetter__)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (a) != "undefined") {_RecordType("<811,812,35>",(a)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (index_setter) != "undefined") {_RecordType("<833,845,35>",(index_setter)); Inst31++; } } catch(e) {}
a.__defineSetter__(1, index_setter);

try { if (Inst32 <= 1000 && typeof (a.reverse) != "undefined") {_RecordType("<849,858,37>",(a.reverse)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (a) != "undefined") {_RecordType("<849,850,37>",(a)); Inst33++; } } catch(e) {}
a.reverse();
try { if (Inst34 <= 1000 && typeof (printStatus) != "undefined") {_RecordType("<862,873,38>",(printStatus)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (subverted) != "undefined") {_RecordType("<874,883,38>",(subverted)); Inst35++; } } catch(e) {}
printStatus(subverted);
try { if (Inst36 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<886,899,39>",(reportCompare)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (expect) != "undefined") {_RecordType("<900,906,39>",(expect)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (actual) != "undefined") {_RecordType("<908,914,39>",(actual)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (summary) != "undefined") {_RecordType("<916,923,39>",(summary)); Inst39++; } } catch(e) {}
reportCompare(expect, actual, summary);

