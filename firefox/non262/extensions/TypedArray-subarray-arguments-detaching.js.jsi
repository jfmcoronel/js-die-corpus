var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/*
 * Any copyright is dedicated to the Public Domain.
 * http://creativecommons.org/licenses/publicdomain/
 */
var gTestfile = "TypedArray-subarray-arguments-detaching.js"; //-----------------------------------------------------------------------------
try { if (Inst0 <= 1000 && typeof (gTestfile) != "undefined") {_RecordType("<116,125,5>",(gTestfile)); Inst0++; } } catch(e) {}

var BUGNUMBER = 991981;
try { if (Inst1 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<259,268,7>",(BUGNUMBER)); Inst1++; } } catch(e) {}
var summary = "%TypedArray.prototype.subarray shouldn't misbehave horribly if " + "index-argument conversion detaches the underlying ArrayBuffer";
try { if (Inst2 <= 1000 && typeof (summary) != "undefined") {_RecordType("<283,290,8>",(summary)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (print) != "undefined") {_RecordType("<426,431,9>",(print)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<432,441,9>",(BUGNUMBER)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (summary) != "undefined") {_RecordType("<451,458,9>",(summary)); Inst5++; } } catch(e) {}
print(BUGNUMBER + ": " + summary);
/**************
 * BEGIN TEST *
 **************/

try { if (Inst6 <= 1000 && typeof (testBegin) != "undefined") {_RecordType("<520,529,14>",(testBegin)); Inst6++; } } catch(e) {}
function testBegin() {
try { if (Inst8 <= 1000 && typeof (ArrayBuffer) != "undefined") {_RecordType("<549,560,15>",(ArrayBuffer)); Inst8++; } } catch(e) {}
  var ab = new ArrayBuffer(0x1000);
try { if (Inst7 <= 1000 && typeof (ab) != "undefined") {_RecordType("<540,542,15>",(ab)); Inst7++; } } catch(e) {}
  var begin = {
    valueOf: function () {
try { if (Inst10 <= 1000 && typeof (detachArrayBuffer) != "undefined") {_RecordType("<619,636,18>",(detachArrayBuffer)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (ab) != "undefined") {_RecordType("<637,639,18>",(ab)); Inst11++; } } catch(e) {}
      detachArrayBuffer(ab);
      return 0x800;
    }
  };
try { if (Inst9 <= 1000 && typeof (begin) != "undefined") {_RecordType("<576,581,16>",(begin)); Inst9++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (Uint8Array) != "undefined") {_RecordType("<688,698,22>",(Uint8Array)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (ab) != "undefined") {_RecordType("<699,701,22>",(ab)); Inst14++; } } catch(e) {}
  var ta = new Uint8Array(ab);
try { if (Inst12 <= 1000 && typeof (ta) != "undefined") {_RecordType("<679,681,22>",(ta)); Inst12++; } } catch(e) {}
  var ok = false;
try { if (Inst15 <= 1000 && typeof (ok) != "undefined") {_RecordType("<710,712,23>",(ok)); Inst15++; } } catch(e) {}

try { if (Inst19 <= 1000 && typeof (e) != "undefined") {_RecordType("<766,767,27>",(e)); Inst19++; } } catch(e) {}
  try {
try { if (Inst16 <= 1000 && typeof (ta.subarray) != "undefined") {_RecordType("<735,746,26>",(ta.subarray)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (ta) != "undefined") {_RecordType("<735,737,26>",(ta)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (begin) != "undefined") {_RecordType("<747,752,26>",(begin)); Inst18++; } } catch(e) {}
    ta.subarray(begin);
  } catch (e) {
    ok = true;
try { if (Inst20 <= 1000 && typeof (ok) != "undefined") {_RecordType("<775,777,28>",(ok)); Inst20++; } } catch(e) {}
  }

try { if (Inst21 <= 1000 && typeof (ok) != "undefined") {_RecordType("<793,795,31>",(ok)); Inst21++; } } catch(e) {}
  ok;
  true;
  "start weirdness should have thrown";
try { if (Inst22 <= 1000 && typeof (ab.byteLength) != "undefined") {_RecordType("<847,860,34>",(ab.byteLength)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (ab) != "undefined") {_RecordType("<847,849,34>",(ab)); Inst23++; } } catch(e) {}
  ab.byteLength;
  0;
  "detaching should work for start weirdness";
}

try { if (Inst24 <= 1000 && typeof (testBegin) != "undefined") {_RecordType("<917,926,39>",(testBegin)); Inst24++; } } catch(e) {}
testBegin();

try { if (Inst25 <= 1000 && typeof (testBeginWithEnd) != "undefined") {_RecordType("<940,956,41>",(testBeginWithEnd)); Inst25++; } } catch(e) {}
function testBeginWithEnd() {
try { if (Inst27 <= 1000 && typeof (ArrayBuffer) != "undefined") {_RecordType("<976,987,42>",(ArrayBuffer)); Inst27++; } } catch(e) {}
  var ab = new ArrayBuffer(0x1000);
try { if (Inst26 <= 1000 && typeof (ab) != "undefined") {_RecordType("<967,969,42>",(ab)); Inst26++; } } catch(e) {}
  var begin = {
    valueOf: function () {
try { if (Inst29 <= 1000 && typeof (detachArrayBuffer) != "undefined") {_RecordType("<1046,1063,45>",(detachArrayBuffer)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (ab) != "undefined") {_RecordType("<1064,1066,45>",(ab)); Inst30++; } } catch(e) {}
      detachArrayBuffer(ab);
      return 0x800;
    }
  };
try { if (Inst28 <= 1000 && typeof (begin) != "undefined") {_RecordType("<1003,1008,43>",(begin)); Inst28++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (Uint8Array) != "undefined") {_RecordType("<1115,1125,49>",(Uint8Array)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (ab) != "undefined") {_RecordType("<1126,1128,49>",(ab)); Inst33++; } } catch(e) {}
  var ta = new Uint8Array(ab);
try { if (Inst31 <= 1000 && typeof (ta) != "undefined") {_RecordType("<1106,1108,49>",(ta)); Inst31++; } } catch(e) {}
  var ok = false;
try { if (Inst34 <= 1000 && typeof (ok) != "undefined") {_RecordType("<1137,1139,50>",(ok)); Inst34++; } } catch(e) {}

try { if (Inst38 <= 1000 && typeof (e) != "undefined") {_RecordType("<1201,1202,54>",(e)); Inst38++; } } catch(e) {}
  try {
try { if (Inst35 <= 1000 && typeof (ta.subarray) != "undefined") {_RecordType("<1162,1173,53>",(ta.subarray)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (ta) != "undefined") {_RecordType("<1162,1164,53>",(ta)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (begin) != "undefined") {_RecordType("<1174,1179,53>",(begin)); Inst37++; } } catch(e) {}
    ta.subarray(begin, 0x1000);
  } catch (e) {
    ok = true;
try { if (Inst39 <= 1000 && typeof (ok) != "undefined") {_RecordType("<1210,1212,55>",(ok)); Inst39++; } } catch(e) {}
  }

try { if (Inst40 <= 1000 && typeof (ok) != "undefined") {_RecordType("<1228,1230,58>",(ok)); Inst40++; } } catch(e) {}
  ok;
  true;
  "start weirdness should have thrown";
try { if (Inst41 <= 1000 && typeof (ab.byteLength) != "undefined") {_RecordType("<1282,1295,61>",(ab.byteLength)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (ab) != "undefined") {_RecordType("<1282,1284,61>",(ab)); Inst42++; } } catch(e) {}
  ab.byteLength;
  0;
  "detaching should work for start weirdness";
}

try { if (Inst43 <= 1000 && typeof (testBeginWithEnd) != "undefined") {_RecordType("<1352,1368,66>",(testBeginWithEnd)); Inst43++; } } catch(e) {}
testBeginWithEnd();

try { if (Inst44 <= 1000 && typeof (testEnd) != "undefined") {_RecordType("<1382,1389,68>",(testEnd)); Inst44++; } } catch(e) {}
function testEnd() {
try { if (Inst46 <= 1000 && typeof (ArrayBuffer) != "undefined") {_RecordType("<1409,1420,69>",(ArrayBuffer)); Inst46++; } } catch(e) {}
  var ab = new ArrayBuffer(0x1000);
try { if (Inst45 <= 1000 && typeof (ab) != "undefined") {_RecordType("<1400,1402,69>",(ab)); Inst45++; } } catch(e) {}
  var end = {
    valueOf: function () {
try { if (Inst48 <= 1000 && typeof (detachArrayBuffer) != "undefined") {_RecordType("<1477,1494,72>",(detachArrayBuffer)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (ab) != "undefined") {_RecordType("<1495,1497,72>",(ab)); Inst49++; } } catch(e) {}
      detachArrayBuffer(ab);
      return 0x1000;
    }
  };
try { if (Inst47 <= 1000 && typeof (end) != "undefined") {_RecordType("<1436,1439,70>",(end)); Inst47++; } } catch(e) {}
try { if (Inst51 <= 1000 && typeof (Uint8Array) != "undefined") {_RecordType("<1547,1557,76>",(Uint8Array)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (ab) != "undefined") {_RecordType("<1558,1560,76>",(ab)); Inst52++; } } catch(e) {}
  var ta = new Uint8Array(ab);
try { if (Inst50 <= 1000 && typeof (ta) != "undefined") {_RecordType("<1538,1540,76>",(ta)); Inst50++; } } catch(e) {}
  var ok = false;
try { if (Inst53 <= 1000 && typeof (ok) != "undefined") {_RecordType("<1569,1571,77>",(ok)); Inst53++; } } catch(e) {}

try { if (Inst57 <= 1000 && typeof (e) != "undefined") {_RecordType("<1630,1631,81>",(e)); Inst57++; } } catch(e) {}
  try {
try { if (Inst54 <= 1000 && typeof (ta.subarray) != "undefined") {_RecordType("<1594,1605,80>",(ta.subarray)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (ta) != "undefined") {_RecordType("<1594,1596,80>",(ta)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (end) != "undefined") {_RecordType("<1613,1616,80>",(end)); Inst56++; } } catch(e) {}
    ta.subarray(0x800, end);
  } catch (e) {
    ok = true;
try { if (Inst58 <= 1000 && typeof (ok) != "undefined") {_RecordType("<1639,1641,82>",(ok)); Inst58++; } } catch(e) {}
  }

try { if (Inst59 <= 1000 && typeof (ok) != "undefined") {_RecordType("<1657,1659,85>",(ok)); Inst59++; } } catch(e) {}
  ok;
  true;
  "start weirdness should have thrown";
try { if (Inst60 <= 1000 && typeof (ab.byteLength) != "undefined") {_RecordType("<1711,1724,88>",(ab.byteLength)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (ab) != "undefined") {_RecordType("<1711,1713,88>",(ab)); Inst61++; } } catch(e) {}
  ab.byteLength;
  0;
  "detaching should work for start weirdness";
}

try { if (Inst62 <= 1000 && typeof (testEnd) != "undefined") {_RecordType("<1781,1788,93>",(testEnd)); Inst62++; } } catch(e) {}
testEnd();
/******************************************************************************/

try { if (Inst63 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1885,1898,96>",(reportCompare)); Inst63++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst64 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1919,1932,97>",(reportCompare)); Inst64++; } } catch(e) {}
  reportCompare(true, true);
}

try { if (Inst65 <= 1000 && typeof (print) != "undefined") {_RecordType("<1949,1954,100>",(print)); Inst65++; } } catch(e) {}
print("Tests complete");

