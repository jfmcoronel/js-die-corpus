var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// |reftest| skip slow

/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
//-----------------------------------------------------------------------------
var BUGNUMBER = 407720;
try { if (Inst0 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<394,403,9>",(BUGNUMBER)); Inst0++; } } catch(e) {}
var summary = 'js_FindClassObject causes crashes with getter/setter - Browser only';
try { if (Inst1 <= 1000 && typeof (summary) != "undefined") {_RecordType("<418,425,10>",(summary)); Inst1++; } } catch(e) {}
var actual = 'No Crash';
try { if (Inst2 <= 1000 && typeof (actual) != "undefined") {_RecordType("<503,509,11>",(actual)); Inst2++; } } catch(e) {}
var expect = 'No Crash';
try { if (Inst3 <= 1000 && typeof (expect) != "undefined") {_RecordType("<528,534,12>",(expect)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (printBugNumber) != "undefined") {_RecordType("<549,563,13>",(printBugNumber)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<564,573,13>",(BUGNUMBER)); Inst5++; } } catch(e) {}
printBugNumber(BUGNUMBER);
try { if (Inst6 <= 1000 && typeof (printStatus) != "undefined") {_RecordType("<576,587,14>",(printStatus)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (summary) != "undefined") {_RecordType("<588,595,14>",(summary)); Inst7++; } } catch(e) {}
printStatus(summary); // stop the test after 60 seconds

try { if (Inst9 <= 1000 && typeof (Date) != "undefined") {_RecordType("<649,653,16>",(Date)); Inst9++; } } catch(e) {}
var start = new Date(); // delay test driver end
try { if (Inst8 <= 1000 && typeof (start) != "undefined") {_RecordType("<637,642,16>",(start)); Inst8++; } } catch(e) {}

gDelayTestDriverEnd = true;
try { if (Inst10 <= 1000 && typeof (gDelayTestDriverEnd) != "undefined") {_RecordType("<683,702,18>",(gDelayTestDriverEnd)); Inst10++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (document.write) != "undefined") {_RecordType("<711,725,19>",(document.write)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (document) != "undefined") {_RecordType("<711,719,19>",(document)); Inst12++; } } catch(e) {}
document.write('<iframe onload="onLoad()"><\/iframe>');

try { if (Inst13 <= 1000 && typeof (onLoad) != "undefined") {_RecordType("<777,783,21>",(onLoad)); Inst13++; } } catch(e) {}
function onLoad() {
try { if (Inst14 <= 1000 && typeof (Date) != "undefined") {_RecordType("<798,802,22>",(Date)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (start) != "undefined") {_RecordType("<807,812,22>",(start)); Inst15++; } } catch(e) {}
  if (new Date() - start < 60 * 1000) {
try { if (Inst17 <= 1000 && typeof (frames[0].Window.prototype) != "undefined") {_RecordType("<840,866,23>",(frames[0].Window.prototype)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (frames[0].Window) != "undefined") {_RecordType("<840,856,23>",(frames[0].Window)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (frames[0]) != "undefined") {_RecordType("<840,849,23>",(frames[0])); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (frames) != "undefined") {_RecordType("<840,846,23>",(frames)); Inst20++; } } catch(e) {}
    var x = frames[0].Window.prototype;
try { if (Inst16 <= 1000 && typeof (x) != "undefined") {_RecordType("<836,837,23>",(x)); Inst16++; } } catch(e) {}
    x.a = x.b = x.c = 1;
try { if (Inst21 <= 1000 && typeof (x.a) != "undefined") {_RecordType("<872,875,24>",(x.a)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (x) != "undefined") {_RecordType("<872,873,24>",(x)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (x.b) != "undefined") {_RecordType("<878,881,24>",(x.b)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (x) != "undefined") {_RecordType("<878,879,24>",(x)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (x.c) != "undefined") {_RecordType("<884,887,24>",(x.c)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (x) != "undefined") {_RecordType("<884,885,24>",(x)); Inst26++; } } catch(e) {}

try { if (Inst27 <= 1000 && typeof (x.__defineGetter__) != "undefined") {_RecordType("<898,916,26>",(x.__defineGetter__)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (x) != "undefined") {_RecordType("<898,899,26>",(x)); Inst28++; } } catch(e) {}
    x.__defineGetter__("HTML document.all class", function () {
      ;
    });

try { if (Inst29 <= 1000 && typeof (frames[0].document.all) != "undefined") {_RecordType("<979,1001,30>",(frames[0].document.all)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (frames[0].document) != "undefined") {_RecordType("<979,997,30>",(frames[0].document)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (frames[0]) != "undefined") {_RecordType("<979,988,30>",(frames[0])); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (frames) != "undefined") {_RecordType("<979,985,30>",(frames)); Inst32++; } } catch(e) {}
    frames[0].document.all; // retry

    frames[0].location = "about:blank";
try { if (Inst33 <= 1000 && typeof (frames[0].location) != "undefined") {_RecordType("<1017,1035,32>",(frames[0].location)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (frames[0]) != "undefined") {_RecordType("<1017,1026,32>",(frames[0])); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (frames) != "undefined") {_RecordType("<1017,1023,32>",(frames)); Inst35++; } } catch(e) {}
  } else {
    actual = 'No Crash';
try { if (Inst36 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1068,1074,34>",(actual)); Inst36++; } } catch(e) {}
try { if (Inst37 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1093,1106,35>",(reportCompare)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1107,1113,35>",(expect)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1115,1121,35>",(actual)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (summary) != "undefined") {_RecordType("<1123,1130,35>",(summary)); Inst40++; } } catch(e) {}
    reportCompare(expect, actual, summary);
    gDelayTestDriverEnd = false;
try { if (Inst41 <= 1000 && typeof (gDelayTestDriverEnd) != "undefined") {_RecordType("<1137,1156,36>",(gDelayTestDriverEnd)); Inst41++; } } catch(e) {}
  }
}

