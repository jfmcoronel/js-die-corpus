var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// |reftest| skip-if(xulRuntime.shell)

/* -*- tab-width: 2; indent-tabs-mode: nil; js-indent-level: 2 -*- */

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
//-----------------------------------------------------------------------------
var BUGNUMBER = 367121;
try { if (Inst0 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<400,409,9>",(BUGNUMBER)); Inst0++; } } catch(e) {}
var summary = 'self modifying script detection';
try { if (Inst1 <= 1000 && typeof (summary) != "undefined") {_RecordType("<424,431,10>",(summary)); Inst1++; } } catch(e) {}
var actual = 'No Crash';
try { if (Inst2 <= 1000 && typeof (actual) != "undefined") {_RecordType("<473,479,11>",(actual)); Inst2++; } } catch(e) {}
var expect = 'No Crash'; //-----------------------------------------------------------------------------
try { if (Inst3 <= 1000 && typeof (expect) != "undefined") {_RecordType("<498,504,12>",(expect)); Inst3++; } } catch(e) {}

try { if (Inst4 <= 1000 && typeof (test) != "undefined") {_RecordType("<600,604,14>",(test)); Inst4++; } } catch(e) {}
test(); //-----------------------------------------------------------------------------

try { if (Inst5 <= 1000 && typeof (test) != "undefined") {_RecordType("<698,702,16>",(test)); Inst5++; } } catch(e) {}
function test() {
try { if (Inst6 <= 1000 && typeof (printBugNumber) != "undefined") {_RecordType("<709,723,17>",(printBugNumber)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<724,733,17>",(BUGNUMBER)); Inst7++; } } catch(e) {}
  printBugNumber(BUGNUMBER);
try { if (Inst8 <= 1000 && typeof (printStatus) != "undefined") {_RecordType("<738,749,18>",(printStatus)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (summary) != "undefined") {_RecordType("<750,757,18>",(summary)); Inst9++; } } catch(e) {}
  printStatus(summary);

try { if (Inst10 <= 1000 && typeof (Script) != "undefined") {_RecordType("<774,780,20>",(Script)); Inst10++; } } catch(e) {}
  if (typeof Script == 'undefined') {
    actual = expect = 'Test skipped - Test requires Script object..';
try { if (Inst11 <= 1000 && typeof (actual) != "undefined") {_RecordType("<803,809,21>",(actual)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (expect) != "undefined") {_RecordType("<812,818,21>",(expect)); Inst12++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<873,886,22>",(reportCompare)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (expect) != "undefined") {_RecordType("<887,893,22>",(expect)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (actual) != "undefined") {_RecordType("<895,901,22>",(actual)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (summary) != "undefined") {_RecordType("<903,910,22>",(summary)); Inst16++; } } catch(e) {}
    reportCompare(expect, actual, summary);
  } else {
    gDelayTestDriverEnd = true;
try { if (Inst17 <= 1000 && typeof (gDelayTestDriverEnd) != "undefined") {_RecordType("<928,947,24>",(gDelayTestDriverEnd)); Inst17++; } } catch(e) {}
  }
}

try { if (Inst18 <= 1000 && typeof (handleLoad) != "undefined") {_RecordType("<972,982,28>",(handleLoad)); Inst18++; } } catch(e) {}
function handleLoad() {
try { if (Inst20 <= 1000 && typeof (document.body.appendChild) != "undefined") {_RecordType("<1002,1027,29>",(document.body.appendChild)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (document.body) != "undefined") {_RecordType("<1002,1015,29>",(document.body)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (document) != "undefined") {_RecordType("<1002,1010,29>",(document)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (document.createElement) != "undefined") {_RecordType("<1028,1050,29>",(document.createElement)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (document) != "undefined") {_RecordType("<1028,1036,29>",(document)); Inst24++; } } catch(e) {}
  var iframe = document.body.appendChild(document.createElement('iframe'));
try { if (Inst19 <= 1000 && typeof (iframe) != "undefined") {_RecordType("<993,999,29>",(iframe)); Inst19++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (iframe.contentDocument) != "undefined") {_RecordType("<1073,1095,30>",(iframe.contentDocument)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (iframe) != "undefined") {_RecordType("<1073,1079,30>",(iframe)); Inst27++; } } catch(e) {}
  var d = iframe.contentDocument;
try { if (Inst25 <= 1000 && typeof (d) != "undefined") {_RecordType("<1069,1070,30>",(d)); Inst25++; } } catch(e) {}
try { if (Inst28 <= 1000 && typeof (d.addEventListener) != "undefined") {_RecordType("<1099,1117,31>",(d.addEventListener)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (d) != "undefined") {_RecordType("<1099,1100,31>",(d)); Inst29++; } } catch(e) {}
  d.addEventListener("test", function (e) {
try { if (Inst30 <= 1000 && typeof (e) != "undefined") {_RecordType("<1136,1137,31>",(e)); Inst30++; } } catch(e) {}
try { if (Inst31 <= 1000 && typeof (s.compile) != "undefined") {_RecordType("<1145,1154,32>",(s.compile)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (s) != "undefined") {_RecordType("<1145,1146,32>",(s)); Inst32++; } } catch(e) {}
    s.compile("");
try { if (Inst33 <= 1000 && typeof (Array(11).join) != "undefined") {_RecordType("<1164,1178,33>",(Array(11).join)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (Array) != "undefined") {_RecordType("<1164,1169,33>",(Array)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (Array(11).join) != "undefined") {_RecordType("<1179,1193,33>",(Array(11).join)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (Array) != "undefined") {_RecordType("<1179,1184,33>",(Array)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (Array(101).join) != "undefined") {_RecordType("<1194,1209,33>",(Array(101).join)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (Array) != "undefined") {_RecordType("<1194,1199,33>",(Array)); Inst38++; } } catch(e) {}
    Array(11).join(Array(11).join(Array(101).join("aaaaa")));
  }, true);
try { if (Inst40 <= 1000 && typeof (d.createEvent) != "undefined") {_RecordType("<1244,1257,35>",(d.createEvent)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (d) != "undefined") {_RecordType("<1244,1245,35>",(d)); Inst41++; } } catch(e) {}
  var e = d.createEvent("Events");
try { if (Inst39 <= 1000 && typeof (e) != "undefined") {_RecordType("<1240,1241,35>",(e)); Inst39++; } } catch(e) {}
try { if (Inst42 <= 1000 && typeof (e.initEvent) != "undefined") {_RecordType("<1271,1282,36>",(e.initEvent)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (e) != "undefined") {_RecordType("<1271,1272,36>",(e)); Inst43++; } } catch(e) {}
  e.initEvent("test", true, true);
try { if (Inst45 <= 1000 && typeof (Script) != "undefined") {_RecordType("<1318,1324,37>",(Script)); Inst45++; } } catch(e) {}
  var s = new Script("d.dispatchEvent(e);");
try { if (Inst44 <= 1000 && typeof (s) != "undefined") {_RecordType("<1310,1311,37>",(s)); Inst44++; } } catch(e) {}
try { if (Inst46 <= 1000 && typeof (s.exec) != "undefined") {_RecordType("<1351,1357,38>",(s.exec)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (s) != "undefined") {_RecordType("<1351,1352,38>",(s)); Inst47++; } } catch(e) {}
  s.exec();
  gDelayTestDriverEnd = false;
try { if (Inst48 <= 1000 && typeof (gDelayTestDriverEnd) != "undefined") {_RecordType("<1363,1382,39>",(gDelayTestDriverEnd)); Inst48++; } } catch(e) {}
try { if (Inst49 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1394,1407,40>",(reportCompare)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1408,1414,40>",(expect)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1416,1422,40>",(actual)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (summary) != "undefined") {_RecordType("<1424,1431,40>",(summary)); Inst52++; } } catch(e) {}
  reportCompare(expect, actual, summary);
}

