var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// |reftest| random -- bug 524788

/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
//-----------------------------------------------------------------------------
var BUGNUMBER = 363258;
try { if (Inst0 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<405,414,9>",(BUGNUMBER)); Inst0++; } } catch(e) {}
var summary = 'Timer resolution';
try { if (Inst1 <= 1000 && typeof (summary) != "undefined") {_RecordType("<429,436,10>",(summary)); Inst1++; } } catch(e) {}
var actual = '';
try { if (Inst2 <= 1000 && typeof (actual) != "undefined") {_RecordType("<463,469,11>",(actual)); Inst2++; } } catch(e) {}
var expect = ''; //-----------------------------------------------------------------------------
try { if (Inst3 <= 1000 && typeof (expect) != "undefined") {_RecordType("<480,486,12>",(expect)); Inst3++; } } catch(e) {}

try { if (Inst4 <= 1000 && typeof (test) != "undefined") {_RecordType("<574,578,14>",(test)); Inst4++; } } catch(e) {}
test(); //-----------------------------------------------------------------------------

try { if (Inst5 <= 1000 && typeof (test) != "undefined") {_RecordType("<672,676,16>",(test)); Inst5++; } } catch(e) {}
function test() {
try { if (Inst6 <= 1000 && typeof (printBugNumber) != "undefined") {_RecordType("<683,697,17>",(printBugNumber)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<698,707,17>",(BUGNUMBER)); Inst7++; } } catch(e) {}
  printBugNumber(BUGNUMBER);
try { if (Inst8 <= 1000 && typeof (printStatus) != "undefined") {_RecordType("<712,723,18>",(printStatus)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (summary) != "undefined") {_RecordType("<724,731,18>",(summary)); Inst9++; } } catch(e) {}
  printStatus(summary);
  var start = 0;
try { if (Inst10 <= 1000 && typeof (start) != "undefined") {_RecordType("<740,745,19>",(start)); Inst10++; } } catch(e) {}
  var stop = 0;
try { if (Inst11 <= 1000 && typeof (stop) != "undefined") {_RecordType("<757,761,20>",(stop)); Inst11++; } } catch(e) {}
  var i;
try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<773,774,21>",(i)); Inst12++; } } catch(e) {}
  var limit = 0;
try { if (Inst13 <= 1000 && typeof (limit) != "undefined") {_RecordType("<782,787,22>",(limit)); Inst13++; } } catch(e) {}
  var incr = 10;
try { if (Inst14 <= 1000 && typeof (incr) != "undefined") {_RecordType("<799,803,23>",(incr)); Inst14++; } } catch(e) {}
  var resolution = 5;
try { if (Inst15 <= 1000 && typeof (resolution) != "undefined") {_RecordType("<816,826,24>",(resolution)); Inst15++; } } catch(e) {}

try { if (Inst16 <= 1000 && typeof (stop) != "undefined") {_RecordType("<842,846,26>",(stop)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (start) != "undefined") {_RecordType("<849,854,26>",(start)); Inst17++; } } catch(e) {}
  while (stop - start == 0) {
try { if (Inst19 <= 1000 && typeof (incr) != "undefined") {_RecordType("<876,880,27>",(incr)); Inst19++; } } catch(e) {}
    limit += incr;
try { if (Inst18 <= 1000 && typeof (limit) != "undefined") {_RecordType("<867,872,27>",(limit)); Inst18++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (Date.now) != "undefined") {_RecordType("<894,902,28>",(Date.now)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Date) != "undefined") {_RecordType("<894,898,28>",(Date)); Inst22++; } } catch(e) {}
    start = Date.now();
try { if (Inst20 <= 1000 && typeof (start) != "undefined") {_RecordType("<886,891,28>",(start)); Inst20++; } } catch(e) {}

    for (i = 0; i < limit; i++) {
try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<916,917,30>",(i)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<923,924,30>",(i)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (limit) != "undefined") {_RecordType("<927,932,30>",(limit)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (i) != "undefined") {_RecordType("<934,935,30>",(i)); Inst26++; } } catch(e) {}
      ;
    }

try { if (Inst28 <= 1000 && typeof (Date.now) != "undefined") {_RecordType("<967,975,34>",(Date.now)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (Date) != "undefined") {_RecordType("<967,971,34>",(Date)); Inst29++; } } catch(e) {}
    stop = Date.now();
try { if (Inst27 <= 1000 && typeof (stop) != "undefined") {_RecordType("<960,964,34>",(stop)); Inst27++; } } catch(e) {}
  }

try { if (Inst30 <= 1000 && typeof (print) != "undefined") {_RecordType("<986,991,37>",(print)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (limit) != "undefined") {_RecordType("<1003,1008,37>",(limit)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (resolution) != "undefined") {_RecordType("<1029,1039,37>",(resolution)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (stop) != "undefined") {_RecordType("<1055,1059,37>",(stop)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (start) != "undefined") {_RecordType("<1062,1067,37>",(start)); Inst34++; } } catch(e) {}
  print('limit=' + limit + ', resolution=' + resolution + ', time=' + (stop - start));
  expect = true;
try { if (Inst35 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1073,1079,38>",(expect)); Inst35++; } } catch(e) {}
try { if (Inst37 <= 1000 && typeof (stop) != "undefined") {_RecordType("<1099,1103,39>",(stop)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (start) != "undefined") {_RecordType("<1106,1111,39>",(start)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (resolution) != "undefined") {_RecordType("<1115,1125,39>",(resolution)); Inst39++; } } catch(e) {}
  actual = stop - start <= resolution;
try { if (Inst36 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1090,1096,39>",(actual)); Inst36++; } } catch(e) {}
try { if (Inst40 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1129,1142,40>",(reportCompare)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1143,1149,40>",(expect)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1151,1157,40>",(actual)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (summary) != "undefined") {_RecordType("<1159,1166,40>",(summary)); Inst43++; } } catch(e) {}
  reportCompare(expect, actual, summary);
}

