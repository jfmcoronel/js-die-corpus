var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// |reftest| skip

/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */

/*
 * Any copyright is dedicated to the Public Domain.
 * http://creativecommons.org/licenses/publicdomain/
 * Contributor: Jason Orendorff
 */
//-----------------------------------------------------------------------------
var summary = "Create a tree of threads";
try { if (Inst0 <= 1000 && typeof (summary) != "undefined") {_RecordType("<328,335,11>",(summary)); Inst0++; } } catch(e) {}
var N = 50; // number of threads to create
try { if (Inst1 <= 1000 && typeof (N) != "undefined") {_RecordType("<370,371,12>",(N)); Inst1++; } } catch(e) {}

try { if (Inst2 <= 1000 && typeof (printStatus) != "undefined") {_RecordType("<410,421,14>",(printStatus)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (summary) != "undefined") {_RecordType("<422,429,14>",(summary)); Inst3++; } } catch(e) {}
printStatus(summary);

try { if (Inst4 <= 1000 && typeof (range) != "undefined") {_RecordType("<442,447,16>",(range)); Inst4++; } } catch(e) {}
function range(start, stop) {
try { if (Inst5 <= 1000 && typeof (start) != "undefined") {_RecordType("<448,453,16>",(start)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (stop) != "undefined") {_RecordType("<455,459,16>",(stop)); Inst6++; } } catch(e) {}
  var a = [];
try { if (Inst7 <= 1000 && typeof (a) != "undefined") {_RecordType("<469,470,17>",(a)); Inst7++; } } catch(e) {}

  for (var i = start; i < stop; i++) {
try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<489,490,19>",(i)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (start) != "undefined") {_RecordType("<493,498,19>",(start)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<500,501,19>",(i)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (stop) != "undefined") {_RecordType("<504,508,19>",(stop)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<510,511,19>",(i)); Inst12++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (a.push) != "undefined") {_RecordType("<521,527,20>",(a.push)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (a) != "undefined") {_RecordType("<521,522,20>",(a)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<528,529,20>",(i)); Inst15++; } } catch(e) {}
    a.push(i);
  }

try { if (Inst16 <= 1000 && typeof (a) != "undefined") {_RecordType("<546,547,23>",(a)); Inst16++; } } catch(e) {}
  return a;
}

try { if (Inst17 <= 1000 && typeof (tree) != "undefined") {_RecordType("<561,565,26>",(tree)); Inst17++; } } catch(e) {}
function tree(start, stop) {
try { if (Inst18 <= 1000 && typeof (start) != "undefined") {_RecordType("<566,571,26>",(start)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (stop) != "undefined") {_RecordType("<573,577,26>",(stop)); Inst19++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (sleep) != "undefined") {_RecordType("<583,588,27>",(sleep)); Inst20++; } } catch(e) {}
  sleep(0.001);

try { if (Inst21 <= 1000 && typeof (start) != "undefined") {_RecordType("<604,609,29>",(start)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (stop) != "undefined") {_RecordType("<613,617,29>",(stop)); Inst22++; } } catch(e) {}
  if (start >= stop) {
    return [];
  } else {
try { if (Inst23 <= 1000 && typeof (start) != "undefined") {_RecordType("<655,660,32>",(start)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (stop) != "undefined") {_RecordType("<668,672,32>",(stop)); Inst24++; } } catch(e) {}
    if (start + 1 >= stop) {
try { if (Inst25 <= 1000 && typeof (start) != "undefined") {_RecordType("<690,695,33>",(start)); Inst25++; } } catch(e) {}
      return [start];
    }
  }

try { if (Inst26 <= 1000 && typeof (sleep) != "undefined") {_RecordType("<711,716,37>",(sleep)); Inst26++; } } catch(e) {}
  sleep(0.001);
try { if (Inst28 <= 1000 && typeof (start) != "undefined") {_RecordType("<737,742,38>",(start)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (Math.floor) != "undefined") {_RecordType("<745,755,38>",(Math.floor)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (Math) != "undefined") {_RecordType("<745,749,38>",(Math)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (stop) != "undefined") {_RecordType("<757,761,38>",(stop)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (start) != "undefined") {_RecordType("<764,769,38>",(start)); Inst32++; } } catch(e) {}
  let mid = start + Math.floor((stop - start) / 2);
try { if (Inst27 <= 1000 && typeof (mid) != "undefined") {_RecordType("<731,734,38>",(mid)); Inst27++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof (scatter) != "undefined") {_RecordType("<792,799,39>",(scatter)); Inst34++; } } catch(e) {}
  let halves = scatter([function () {
try { if (Inst35 <= 1000 && typeof (tree) != "undefined") {_RecordType("<826,830,40>",(tree)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (start) != "undefined") {_RecordType("<831,836,40>",(start)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (mid) != "undefined") {_RecordType("<838,841,40>",(mid)); Inst37++; } } catch(e) {}
    return tree(start, mid);
  }, function () {
try { if (Inst38 <= 1000 && typeof (tree) != "undefined") {_RecordType("<874,878,42>",(tree)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (mid) != "undefined") {_RecordType("<879,882,42>",(mid)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (stop) != "undefined") {_RecordType("<884,888,42>",(stop)); Inst40++; } } catch(e) {}
    return tree(mid, stop);
  }]);
try { if (Inst33 <= 1000 && typeof (halves) != "undefined") {_RecordType("<783,789,39>",(halves)); Inst33++; } } catch(e) {}
try { if (Inst41 <= 1000 && typeof (sleep) != "undefined") {_RecordType("<900,905,44>",(sleep)); Inst41++; } } catch(e) {}
  sleep(0.001);
try { if (Inst42 <= 1000 && typeof (Array.prototype.concat.apply) != "undefined") {_RecordType("<923,951,45>",(Array.prototype.concat.apply)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (Array.prototype.concat) != "undefined") {_RecordType("<923,945,45>",(Array.prototype.concat)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<923,938,45>",(Array.prototype)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (Array) != "undefined") {_RecordType("<923,928,45>",(Array)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (halves) != "undefined") {_RecordType("<956,962,45>",(halves)); Inst46++; } } catch(e) {}
  return Array.prototype.concat.apply([], halves);
}

var expect;
try { if (Inst47 <= 1000 && typeof (expect) != "undefined") {_RecordType("<972,978,48>",(expect)); Inst47++; } } catch(e) {}
var actual;
try { if (Inst48 <= 1000 && typeof (actual) != "undefined") {_RecordType("<984,990,49>",(actual)); Inst48++; } } catch(e) {}

try { if (Inst49 <= 1000 && typeof (scatter) != "undefined") {_RecordType("<1004,1011,51>",(scatter)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (sleep) != "undefined") {_RecordType("<1037,1042,51>",(sleep)); Inst50++; } } catch(e) {}
if (typeof scatter == 'undefined' || typeof sleep == 'undefined') {
try { if (Inst51 <= 1000 && typeof (print) != "undefined") {_RecordType("<1063,1068,52>",(print)); Inst51++; } } catch(e) {}
  print('Test skipped. scatter or sleep not defined.');
  expect = actual = 'Test skipped.';
try { if (Inst52 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1119,1125,53>",(expect)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1128,1134,53>",(actual)); Inst53++; } } catch(e) {}
} else {
try { if (Inst55 <= 1000 && typeof (range(0, N).toSource) != "undefined") {_RecordType("<1174,1194,55>",(range(0, N).toSource)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (range) != "undefined") {_RecordType("<1174,1179,55>",(range)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (N) != "undefined") {_RecordType("<1183,1184,55>",(N)); Inst57++; } } catch(e) {}
  expect = range(0, N).toSource();
try { if (Inst54 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1165,1171,55>",(expect)); Inst54++; } } catch(e) {}
try { if (Inst59 <= 1000 && typeof (tree(0, N).toSource) != "undefined") {_RecordType("<1209,1228,56>",(tree(0, N).toSource)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (tree) != "undefined") {_RecordType("<1209,1213,56>",(tree)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (N) != "undefined") {_RecordType("<1217,1218,56>",(N)); Inst61++; } } catch(e) {}
  actual = tree(0, N).toSource();
try { if (Inst58 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1200,1206,56>",(actual)); Inst58++; } } catch(e) {}
}

try { if (Inst62 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1235,1248,59>",(reportCompare)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1249,1255,59>",(expect)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1257,1263,59>",(actual)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (summary) != "undefined") {_RecordType("<1265,1272,59>",(summary)); Inst65++; } } catch(e) {}
reportCompare(expect, actual, summary);

