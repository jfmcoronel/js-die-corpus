var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// |reftest| skip-if(!xulRuntime.shell||Android) slow -- can fail silently due to out of memory

/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
//-----------------------------------------------------------------------------
var BUGNUMBER = 336410;
try { if (Inst0 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<467,476,9>",(BUGNUMBER)); Inst0++; } } catch(e) {}
var summary = 'Integer overflow in array_toSource';
try { if (Inst1 <= 1000 && typeof (summary) != "undefined") {_RecordType("<491,498,10>",(summary)); Inst1++; } } catch(e) {}
var actual = 'No Crash';
try { if (Inst2 <= 1000 && typeof (actual) != "undefined") {_RecordType("<543,549,11>",(actual)); Inst2++; } } catch(e) {}
var expect = 'No Crash';
try { if (Inst3 <= 1000 && typeof (expect) != "undefined") {_RecordType("<568,574,12>",(expect)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (printBugNumber) != "undefined") {_RecordType("<589,603,13>",(printBugNumber)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<604,613,13>",(BUGNUMBER)); Inst5++; } } catch(e) {}
printBugNumber(BUGNUMBER);
try { if (Inst6 <= 1000 && typeof (printStatus) != "undefined") {_RecordType("<616,627,14>",(printStatus)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (summary) != "undefined") {_RecordType("<628,635,14>",(summary)); Inst7++; } } catch(e) {}
printStatus(summary);
try { if (Inst8 <= 1000 && typeof (expectExitCode) != "undefined") {_RecordType("<638,652,15>",(expectExitCode)); Inst8++; } } catch(e) {}
expectExitCode(0);
try { if (Inst9 <= 1000 && typeof (expectExitCode) != "undefined") {_RecordType("<657,671,16>",(expectExitCode)); Inst9++; } } catch(e) {}
expectExitCode(5);

try { if (Inst10 <= 1000 && typeof (createString) != "undefined") {_RecordType("<686,698,18>",(createString)); Inst10++; } } catch(e) {}
function createString(n) {
try { if (Inst11 <= 1000 && typeof (n) != "undefined") {_RecordType("<699,700,18>",(n)); Inst11++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (n) != "undefined") {_RecordType("<714,715,19>",(n)); Inst13++; } } catch(e) {}
  var l = n * 1024 * 1024;
try { if (Inst12 <= 1000 && typeof (l) != "undefined") {_RecordType("<710,711,19>",(l)); Inst12++; } } catch(e) {}
  var r = 'r';
try { if (Inst14 <= 1000 && typeof (r) != "undefined") {_RecordType("<737,738,20>",(r)); Inst14++; } } catch(e) {}

try { if (Inst15 <= 1000 && typeof (r.length) != "undefined") {_RecordType("<756,764,22>",(r.length)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (r) != "undefined") {_RecordType("<756,757,22>",(r)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (l) != "undefined") {_RecordType("<767,768,22>",(l)); Inst17++; } } catch(e) {}
  while (r.length < l) {
try { if (Inst19 <= 1000 && typeof (r) != "undefined") {_RecordType("<780,781,23>",(r)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (r) != "undefined") {_RecordType("<784,785,23>",(r)); Inst20++; } } catch(e) {}
    r = r + r;
try { if (Inst18 <= 1000 && typeof (r) != "undefined") {_RecordType("<776,777,23>",(r)); Inst18++; } } catch(e) {}
  }

try { if (Inst21 <= 1000 && typeof (r) != "undefined") {_RecordType("<801,802,26>",(r)); Inst21++; } } catch(e) {}
  return r;
}

try { if (Inst47 <= 1000 && typeof (ex) != "undefined") {_RecordType("<1117,1119,39>",(ex)); Inst47++; } } catch(e) {}
try {
  var n = 64;
try { if (Inst22 <= 1000 && typeof (n) != "undefined") {_RecordType("<819,820,30>",(n)); Inst22++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (printStatus) != "undefined") {_RecordType("<829,840,31>",(printStatus)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (n) != "undefined") {_RecordType("<855,856,31>",(n)); Inst24++; } } catch(e) {}
  printStatus('Creating ' + n + 'M length string');
try { if (Inst26 <= 1000 && typeof (createString) != "undefined") {_RecordType("<889,901,32>",(createString)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (n) != "undefined") {_RecordType("<902,903,32>",(n)); Inst27++; } } catch(e) {}
  var r = createString(n);
try { if (Inst25 <= 1000 && typeof (r) != "undefined") {_RecordType("<885,886,32>",(r)); Inst25++; } } catch(e) {}
try { if (Inst28 <= 1000 && typeof (printStatus) != "undefined") {_RecordType("<908,919,33>",(printStatus)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (r.length) != "undefined") {_RecordType("<940,948,33>",(r.length)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (r) != "undefined") {_RecordType("<940,941,33>",(r)); Inst30++; } } catch(e) {}
  printStatus('Done. length = ' + r.length);
try { if (Inst31 <= 1000 && typeof (printStatus) != "undefined") {_RecordType("<953,964,34>",(printStatus)); Inst31++; } } catch(e) {}
  printStatus('Creating array');
try { if (Inst33 <= 1000 && typeof (r) != "undefined") {_RecordType("<995,996,35>",(r)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (r) != "undefined") {_RecordType("<998,999,35>",(r)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (r) != "undefined") {_RecordType("<1001,1002,35>",(r)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (r) != "undefined") {_RecordType("<1004,1005,35>",(r)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (r) != "undefined") {_RecordType("<1007,1008,35>",(r)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (r) != "undefined") {_RecordType("<1010,1011,35>",(r)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (r) != "undefined") {_RecordType("<1013,1014,35>",(r)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (r) != "undefined") {_RecordType("<1016,1017,35>",(r)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (r) != "undefined") {_RecordType("<1019,1020,35>",(r)); Inst41++; } } catch(e) {}
  var o = [r, r, r, r, r, r, r, r, r];
try { if (Inst32 <= 1000 && typeof (o) != "undefined") {_RecordType("<990,991,35>",(o)); Inst32++; } } catch(e) {}
try { if (Inst42 <= 1000 && typeof (printStatus) != "undefined") {_RecordType("<1025,1036,36>",(printStatus)); Inst42++; } } catch(e) {}
  printStatus('object.toSource()');
try { if (Inst44 <= 1000 && typeof (o.toSource) != "undefined") {_RecordType("<1070,1080,37>",(o.toSource)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (o) != "undefined") {_RecordType("<1070,1071,37>",(o)); Inst45++; } } catch(e) {}
  var rr = o.toSource();
try { if (Inst43 <= 1000 && typeof (rr) != "undefined") {_RecordType("<1065,1067,37>",(rr)); Inst43++; } } catch(e) {}
try { if (Inst46 <= 1000 && typeof (printStatus) != "undefined") {_RecordType("<1086,1097,38>",(printStatus)); Inst46++; } } catch(e) {}
  printStatus('Done.');
} catch (ex) {
  expect = '\(InternalError: allocation size overflow|out of memory\)';
try { if (Inst48 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1125,1131,40>",(expect)); Inst48++; } } catch(e) {}
try { if (Inst50 <= 1000 && typeof (ex) != "undefined") {_RecordType("<1206,1208,41>",(ex)); Inst50++; } } catch(e) {}
  actual = ex + '';
try { if (Inst49 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1197,1203,41>",(actual)); Inst49++; } } catch(e) {}
try { if (Inst51 <= 1000 && typeof (print) != "undefined") {_RecordType("<1217,1222,42>",(print)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1223,1229,42>",(actual)); Inst52++; } } catch(e) {}
  print(actual);
}

try { if (Inst53 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1235,1248,45>",(reportCompare)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1249,1255,45>",(expect)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1257,1263,45>",(actual)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (summary) != "undefined") {_RecordType("<1265,1272,45>",(summary)); Inst56++; } } catch(e) {}
reportCompare(expect, actual, summary);

