var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* -*- indent-tabs-mode: nil; js-indent-level: 2 -*- */

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
//-----------------------------------------------------------------------------
var BUGNUMBER = 682754; //-----------------------------------------------------------------------------
try { if (Inst0 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<346,355,7>",(BUGNUMBER)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (test) != "undefined") {_RecordType("<447,451,9>",(test)); Inst1++; } } catch(e) {}
test(); //-----------------------------------------------------------------------------

try { if (Inst2 <= 1000 && typeof (iso) != "undefined") {_RecordType("<545,548,11>",(iso)); Inst2++; } } catch(e) {}
function iso(d) {
try { if (Inst3 <= 1000 && typeof (d) != "undefined") {_RecordType("<549,550,11>",(d)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (new Date(d).toISOString) != "undefined") {_RecordType("<563,586,12>",(new Date(d).toISOString)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Date) != "undefined") {_RecordType("<567,571,12>",(Date)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (d) != "undefined") {_RecordType("<572,573,12>",(d)); Inst6++; } } catch(e) {}
  return new Date(d).toISOString();
}

try { if (Inst7 <= 1000 && typeof (check) != "undefined") {_RecordType("<602,607,15>",(check)); Inst7++; } } catch(e) {}
function check(s, millis) {
try { if (Inst8 <= 1000 && typeof (s) != "undefined") {_RecordType("<608,609,15>",(s)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (millis) != "undefined") {_RecordType("<611,617,15>",(millis)); Inst9++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (s) != "undefined") {_RecordType("<654,655,16>",(s)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (iso) != "undefined") {_RecordType("<670,673,16>",(iso)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (millis) != "undefined") {_RecordType("<674,680,16>",(millis)); Inst13++; } } catch(e) {}
  description = "Date.parse('" + s + "') == '" + iso(millis) + "'";
try { if (Inst10 <= 1000 && typeof (description) != "undefined") {_RecordType("<623,634,16>",(description)); Inst10++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (millis) != "undefined") {_RecordType("<702,708,17>",(millis)); Inst15++; } } catch(e) {}
  expected = millis;
try { if (Inst14 <= 1000 && typeof (expected) != "undefined") {_RecordType("<691,699,17>",(expected)); Inst14++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (Date.parse) != "undefined") {_RecordType("<721,731,18>",(Date.parse)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Date) != "undefined") {_RecordType("<721,725,18>",(Date)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (s) != "undefined") {_RecordType("<732,733,18>",(s)); Inst19++; } } catch(e) {}
  actual = Date.parse(s);
try { if (Inst16 <= 1000 && typeof (actual) != "undefined") {_RecordType("<712,718,18>",(actual)); Inst16++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<738,751,19>",(reportCompare)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (expected) != "undefined") {_RecordType("<752,760,19>",(expected)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (actual) != "undefined") {_RecordType("<762,768,19>",(actual)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (description) != "undefined") {_RecordType("<770,781,19>",(description)); Inst23++; } } catch(e) {}
  reportCompare(expected, actual, description);
}

try { if (Inst24 <= 1000 && typeof (checkInvalid) != "undefined") {_RecordType("<796,808,22>",(checkInvalid)); Inst24++; } } catch(e) {}
function checkInvalid(s) {
try { if (Inst25 <= 1000 && typeof (s) != "undefined") {_RecordType("<809,810,22>",(s)); Inst25++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (s) != "undefined") {_RecordType("<847,848,23>",(s)); Inst27++; } } catch(e) {}
  description = "Date.parse('" + s + "') produces invalid date";
try { if (Inst26 <= 1000 && typeof (description) != "undefined") {_RecordType("<816,827,23>",(description)); Inst26++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<892,895,24>",(NaN)); Inst29++; } } catch(e) {}
  expected = NaN;
try { if (Inst28 <= 1000 && typeof (expected) != "undefined") {_RecordType("<881,889,24>",(expected)); Inst28++; } } catch(e) {}
try { if (Inst31 <= 1000 && typeof (Date.parse) != "undefined") {_RecordType("<908,918,25>",(Date.parse)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (Date) != "undefined") {_RecordType("<908,912,25>",(Date)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (s) != "undefined") {_RecordType("<919,920,25>",(s)); Inst33++; } } catch(e) {}
  actual = Date.parse(s);
try { if (Inst30 <= 1000 && typeof (actual) != "undefined") {_RecordType("<899,905,25>",(actual)); Inst30++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<925,938,26>",(reportCompare)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (expected) != "undefined") {_RecordType("<939,947,26>",(expected)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (actual) != "undefined") {_RecordType("<949,955,26>",(actual)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (description) != "undefined") {_RecordType("<957,968,26>",(description)); Inst37++; } } catch(e) {}
  reportCompare(expected, actual, description);
}

try { if (Inst38 <= 1000 && typeof (dd) != "undefined") {_RecordType("<983,985,29>",(dd)); Inst38++; } } catch(e) {}
function dd(year, month, day, hour, minute, second, millis) {
try { if (Inst39 <= 1000 && typeof (year) != "undefined") {_RecordType("<986,990,29>",(year)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (month) != "undefined") {_RecordType("<992,997,29>",(month)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (day) != "undefined") {_RecordType("<999,1002,29>",(day)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (hour) != "undefined") {_RecordType("<1004,1008,29>",(hour)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (minute) != "undefined") {_RecordType("<1010,1016,29>",(minute)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (second) != "undefined") {_RecordType("<1018,1024,29>",(second)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (millis) != "undefined") {_RecordType("<1026,1032,29>",(millis)); Inst45++; } } catch(e) {}
try { if (Inst46 <= 1000 && typeof (Date.UTC) != "undefined") {_RecordType("<1045,1053,30>",(Date.UTC)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (Date) != "undefined") {_RecordType("<1045,1049,30>",(Date)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (year) != "undefined") {_RecordType("<1054,1058,30>",(year)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (month) != "undefined") {_RecordType("<1060,1065,30>",(month)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (day) != "undefined") {_RecordType("<1071,1074,30>",(day)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (hour) != "undefined") {_RecordType("<1076,1080,30>",(hour)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (minute) != "undefined") {_RecordType("<1082,1088,30>",(minute)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (second) != "undefined") {_RecordType("<1090,1096,30>",(second)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (millis) != "undefined") {_RecordType("<1098,1104,30>",(millis)); Inst54++; } } catch(e) {}
  return Date.UTC(year, month - 1, day, hour, minute, second, millis);
}

try { if (Inst55 <= 1000 && typeof (TZAtDate) != "undefined") {_RecordType("<1119,1127,33>",(TZAtDate)); Inst55++; } } catch(e) {}
function TZAtDate(d) {
try { if (Inst56 <= 1000 && typeof (d) != "undefined") {_RecordType("<1128,1129,33>",(d)); Inst56++; } } catch(e) {}
try { if (Inst57 <= 1000 && typeof (d.getTimezoneOffset) != "undefined") {_RecordType("<1142,1161,34>",(d.getTimezoneOffset)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (d) != "undefined") {_RecordType("<1142,1143,34>",(d)); Inst58++; } } catch(e) {}
  return d.getTimezoneOffset() * 60000;
}

try { if (Inst59 <= 1000 && typeof (TZInMonth) != "undefined") {_RecordType("<1185,1194,37>",(TZInMonth)); Inst59++; } } catch(e) {}
function TZInMonth(month) {
try { if (Inst60 <= 1000 && typeof (month) != "undefined") {_RecordType("<1195,1200,37>",(month)); Inst60++; } } catch(e) {}
try { if (Inst61 <= 1000 && typeof (TZAtDate) != "undefined") {_RecordType("<1213,1221,38>",(TZAtDate)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (Date) != "undefined") {_RecordType("<1226,1230,38>",(Date)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (dd) != "undefined") {_RecordType("<1231,1233,38>",(dd)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (month) != "undefined") {_RecordType("<1240,1245,38>",(month)); Inst64++; } } catch(e) {}
  return TZAtDate(new Date(dd(2009, month, 1, 0, 0, 0, 0)));
}

try { if (Inst65 <= 1000 && typeof (test) != "undefined") {_RecordType("<1277,1281,41>",(test)); Inst65++; } } catch(e) {}
function test() {
try { if (Inst66 <= 1000 && typeof (printBugNumber) != "undefined") {_RecordType("<1288,1302,42>",(printBugNumber)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<1303,1312,42>",(BUGNUMBER)); Inst67++; } } catch(e) {}
  printBugNumber(BUGNUMBER);
try { if (Inst69 <= 1000 && typeof (TZInMonth) != "undefined") {_RecordType("<1325,1334,43>",(TZInMonth)); Inst69++; } } catch(e) {}
  JanTZ = TZInMonth(1);
try { if (Inst68 <= 1000 && typeof (JanTZ) != "undefined") {_RecordType("<1317,1322,43>",(JanTZ)); Inst68++; } } catch(e) {}
try { if (Inst71 <= 1000 && typeof (TZInMonth) != "undefined") {_RecordType("<1349,1358,44>",(TZInMonth)); Inst71++; } } catch(e) {}
  JulTZ = TZInMonth(7);
try { if (Inst70 <= 1000 && typeof (JulTZ) != "undefined") {_RecordType("<1341,1346,44>",(JulTZ)); Inst70++; } } catch(e) {}
try { if (Inst73 <= 1000 && typeof (TZAtDate) != "undefined") {_RecordType("<1374,1382,45>",(TZAtDate)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (Date) != "undefined") {_RecordType("<1387,1391,45>",(Date)); Inst74++; } } catch(e) {}
  CurrTZ = TZAtDate(new Date()); // Allow non-standard "-0700" as timezone, not just "-07:00"
try { if (Inst72 <= 1000 && typeof (CurrTZ) != "undefined") {_RecordType("<1365,1371,45>",(CurrTZ)); Inst72++; } } catch(e) {}

try { if (Inst75 <= 1000 && typeof (check) != "undefined") {_RecordType("<1460,1465,47>",(check)); Inst75++; } } catch(e) {}try { if (Inst76 <= 1000 && typeof (dd) != "undefined") {_RecordType("<1498,1500,47>",(dd)); Inst76++; } } catch(e) {}
  check("2009-07-23T00:53:21.001-0700", dd(2009, 7, 23, 7, 53, 21, 1));
}

