var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// |reftest| skip-if(!xulRuntime.shell) slow

/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
//-----------------------------------------------------------------------------
var BUGNUMBER = 476414;
try { if (Inst0 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<416,425,9>",(BUGNUMBER)); Inst0++; } } catch(e) {}
var summary = 'Do not crash @ js_NativeSet';
try { if (Inst1 <= 1000 && typeof (summary) != "undefined") {_RecordType("<440,447,10>",(summary)); Inst1++; } } catch(e) {}
var actual = '';
try { if (Inst2 <= 1000 && typeof (actual) != "undefined") {_RecordType("<485,491,11>",(actual)); Inst2++; } } catch(e) {}
var expect = '';
try { if (Inst3 <= 1000 && typeof (expect) != "undefined") {_RecordType("<502,508,12>",(expect)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (printBugNumber) != "undefined") {_RecordType("<515,529,13>",(printBugNumber)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<530,539,13>",(BUGNUMBER)); Inst5++; } } catch(e) {}
printBugNumber(BUGNUMBER);
try { if (Inst6 <= 1000 && typeof (printStatus) != "undefined") {_RecordType("<542,553,14>",(printStatus)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (summary) != "undefined") {_RecordType("<554,561,14>",(summary)); Inst7++; } } catch(e) {}
printStatus(summary);

try { if (Inst8 <= 1000 && typeof (whatToTestSpidermonkeyTrunk) != "undefined") {_RecordType("<574,601,16>",(whatToTestSpidermonkeyTrunk)); Inst8++; } } catch(e) {}
function whatToTestSpidermonkeyTrunk(code) {
try { if (Inst9 <= 1000 && typeof (code) != "undefined") {_RecordType("<602,606,16>",(code)); Inst9++; } } catch(e) {}
  return {
    allowExec: true
  };
}

try { if (Inst11 <= 1000 && typeof (whatToTestSpidermonkeyTrunk) != "undefined") {_RecordType("<662,689,22>",(whatToTestSpidermonkeyTrunk)); Inst11++; } } catch(e) {}
whatToTest = whatToTestSpidermonkeyTrunk;
try { if (Inst10 <= 1000 && typeof (whatToTest) != "undefined") {_RecordType("<649,659,22>",(whatToTest)); Inst10++; } } catch(e) {}

try { if (Inst12 <= 1000 && typeof (tryItOut) != "undefined") {_RecordType("<701,709,24>",(tryItOut)); Inst12++; } } catch(e) {}
function tryItOut(code) {
try { if (Inst13 <= 1000 && typeof (code) != "undefined") {_RecordType("<710,714,24>",(code)); Inst13++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (whatToTest) != "undefined") {_RecordType("<730,740,25>",(whatToTest)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (code.replace(/\n/g, " ").replace) != "undefined") {_RecordType("<741,773,25>",(code.replace(/\n/g, " ").replace)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (code.replace) != "undefined") {_RecordType("<741,753,25>",(code.replace)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (code) != "undefined") {_RecordType("<741,745,25>",(code)); Inst18++; } } catch(e) {}
  var wtt = whatToTest(code.replace(/\n/g, " ").replace(/\r/g, " "));
try { if (Inst14 <= 1000 && typeof (wtt) != "undefined") {_RecordType("<724,727,25>",(wtt)); Inst14++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (Function) != "undefined") {_RecordType("<802,810,26>",(Function)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (code) != "undefined") {_RecordType("<811,815,26>",(code)); Inst21++; } } catch(e) {}
  var f = new Function(code);
try { if (Inst19 <= 1000 && typeof (f) != "undefined") {_RecordType("<794,795,26>",(f)); Inst19++; } } catch(e) {}

try { if (Inst22 <= 1000 && typeof (wtt.allowExec) != "undefined") {_RecordType("<825,838,28>",(wtt.allowExec)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (wtt) != "undefined") {_RecordType("<825,828,28>",(wtt)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (f) != "undefined") {_RecordType("<842,843,28>",(f)); Inst24++; } } catch(e) {}
  if (wtt.allowExec && f) {
try { if (Inst26 <= 1000 && typeof (tryRunning) != "undefined") {_RecordType("<856,866,29>",(tryRunning)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (f) != "undefined") {_RecordType("<867,868,29>",(f)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (code) != "undefined") {_RecordType("<870,874,29>",(code)); Inst28++; } } catch(e) {}
    rv = tryRunning(f, code);
try { if (Inst25 <= 1000 && typeof (rv) != "undefined") {_RecordType("<851,853,29>",(rv)); Inst25++; } } catch(e) {}
  }
}

try { if (Inst29 <= 1000 && typeof (tryRunning) != "undefined") {_RecordType("<893,903,33>",(tryRunning)); Inst29++; } } catch(e) {}
function tryRunning(f, code) {
try { if (Inst30 <= 1000 && typeof (f) != "undefined") {_RecordType("<904,905,33>",(f)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (code) != "undefined") {_RecordType("<907,911,33>",(code)); Inst31++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof (runError) != "undefined") {_RecordType("<952,960,36>",(runError)); Inst34++; } } catch(e) {}
  try {
try { if (Inst33 <= 1000 && typeof (f) != "undefined") {_RecordType("<936,937,35>",(f)); Inst33++; } } catch(e) {}
    var rv = f();
try { if (Inst32 <= 1000 && typeof (rv) != "undefined") {_RecordType("<931,933,35>",(rv)); Inst32++; } } catch(e) {}
  } catch (runError) {
    ;
  }
}

try { if (Inst36 <= 1000 && typeof (Function) != "undefined") {_RecordType("<996,1004,41>",(Function)); Inst36++; } } catch(e) {}
var realFunction = Function;
try { if (Inst35 <= 1000 && typeof (realFunction) != "undefined") {_RecordType("<981,993,41>",(realFunction)); Inst35++; } } catch(e) {}
try { if (Inst38 <= 1000 && typeof (uneval) != "undefined") {_RecordType("<1023,1029,42>",(uneval)); Inst38++; } } catch(e) {}
var realUneval = uneval;
try { if (Inst37 <= 1000 && typeof (realUneval) != "undefined") {_RecordType("<1010,1020,42>",(realUneval)); Inst37++; } } catch(e) {}
try { if (Inst40 <= 1000 && typeof (toString) != "undefined") {_RecordType("<1050,1058,43>",(toString)); Inst40++; } } catch(e) {}
var realToString = toString;
try { if (Inst39 <= 1000 && typeof (realToString) != "undefined") {_RecordType("<1035,1047,43>",(realToString)); Inst39++; } } catch(e) {}

try { if (Inst41 <= 1000 && typeof (tryEnsureSanity) != "undefined") {_RecordType("<1070,1085,45>",(tryEnsureSanity)); Inst41++; } } catch(e) {}
function tryEnsureSanity() {
try { if (Inst42 <= 1000 && typeof (Function) != "undefined") {_RecordType("<1099,1107,46>",(Function)); Inst42++; } } catch(e) {}
  delete Function;
try { if (Inst43 <= 1000 && typeof (uneval) != "undefined") {_RecordType("<1118,1124,47>",(uneval)); Inst43++; } } catch(e) {}
  delete uneval;
try { if (Inst44 <= 1000 && typeof (toString) != "undefined") {_RecordType("<1135,1143,48>",(toString)); Inst44++; } } catch(e) {}
  delete toString;
try { if (Inst46 <= 1000 && typeof (realFunction) != "undefined") {_RecordType("<1158,1170,49>",(realFunction)); Inst46++; } } catch(e) {}
  Function = realFunction;
try { if (Inst45 <= 1000 && typeof (Function) != "undefined") {_RecordType("<1147,1155,49>",(Function)); Inst45++; } } catch(e) {}
try { if (Inst48 <= 1000 && typeof (realUneval) != "undefined") {_RecordType("<1183,1193,50>",(realUneval)); Inst48++; } } catch(e) {}
  uneval = realUneval;
try { if (Inst47 <= 1000 && typeof (uneval) != "undefined") {_RecordType("<1174,1180,50>",(uneval)); Inst47++; } } catch(e) {}
try { if (Inst50 <= 1000 && typeof (realToString) != "undefined") {_RecordType("<1208,1220,51>",(realToString)); Inst50++; } } catch(e) {}
  toString = realToString;
try { if (Inst49 <= 1000 && typeof (toString) != "undefined") {_RecordType("<1197,1205,51>",(toString)); Inst49++; } } catch(e) {}
}

for (let iters = 0; iters < 2000; ++iters) {
try { if (Inst51 <= 1000 && typeof (iters) != "undefined") {_RecordType("<1234,1239,54>",(iters)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (iters) != "undefined") {_RecordType("<1245,1250,54>",(iters)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (iters) != "undefined") {_RecordType("<1261,1266,54>",(iters)); Inst53++; } } catch(e) {}
  count = 27745;
try { if (Inst54 <= 1000 && typeof (count) != "undefined") {_RecordType("<1272,1277,55>",(count)); Inst54++; } } catch(e) {}
try { if (Inst55 <= 1000 && typeof (tryItOut) != "undefined") {_RecordType("<1289,1297,56>",(tryItOut)); Inst55++; } } catch(e) {}
  tryItOut("with({x: (c) = (x2 = [])})false;");
try { if (Inst56 <= 1000 && typeof (tryEnsureSanity) != "undefined") {_RecordType("<1337,1352,57>",(tryEnsureSanity)); Inst56++; } } catch(e) {}
  tryEnsureSanity();
  count = 35594;
try { if (Inst57 <= 1000 && typeof (count) != "undefined") {_RecordType("<1358,1363,58>",(count)); Inst57++; } } catch(e) {}
try { if (Inst58 <= 1000 && typeof (tryItOut) != "undefined") {_RecordType("<1375,1383,59>",(tryItOut)); Inst58++; } } catch(e) {}
  tryItOut("switch(null) { case this.__defineSetter__(\"window\", function () { yield  \"\"  } ): break; }");
try { if (Inst59 <= 1000 && typeof (tryEnsureSanity) != "undefined") {_RecordType("<1485,1500,60>",(tryEnsureSanity)); Inst59++; } } catch(e) {}
  tryEnsureSanity();
  count = 45020;
try { if (Inst60 <= 1000 && typeof (count) != "undefined") {_RecordType("<1506,1511,61>",(count)); Inst60++; } } catch(e) {}
try { if (Inst61 <= 1000 && typeof (tryItOut) != "undefined") {_RecordType("<1523,1531,62>",(tryItOut)); Inst61++; } } catch(e) {}
  tryItOut("with({}) { (this.__defineGetter__(\"x\", function (y)this)); } ");
try { if (Inst62 <= 1000 && typeof (tryEnsureSanity) != "undefined") {_RecordType("<1602,1617,63>",(tryEnsureSanity)); Inst62++; } } catch(e) {}
  tryEnsureSanity();
  count = 45197;
try { if (Inst63 <= 1000 && typeof (count) != "undefined") {_RecordType("<1623,1628,64>",(count)); Inst63++; } } catch(e) {}
try { if (Inst64 <= 1000 && typeof (tryItOut) != "undefined") {_RecordType("<1640,1648,65>",(tryItOut)); Inst64++; } } catch(e) {}
  tryItOut("M:with((p={}, (p.z = <x/> ===  '' )()))/*TUUL*/for (let y of [true, {}, {}, (void 0), true, true, true, (void 0), true, (void 0)]) { return; }");
try { if (Inst65 <= 1000 && typeof (tryEnsureSanity) != "undefined") {_RecordType("<1798,1813,66>",(tryEnsureSanity)); Inst65++; } } catch(e) {}
  tryEnsureSanity();
try { if (Inst66 <= 1000 && typeof (gc) != "undefined") {_RecordType("<1819,1821,67>",(gc)); Inst66++; } } catch(e) {}
  gc();
try { if (Inst67 <= 1000 && typeof (tryEnsureSanity) != "undefined") {_RecordType("<1827,1842,68>",(tryEnsureSanity)); Inst67++; } } catch(e) {}
  tryEnsureSanity();
  count = 45254;
try { if (Inst68 <= 1000 && typeof (count) != "undefined") {_RecordType("<1848,1853,69>",(count)); Inst68++; } } catch(e) {}
try { if (Inst69 <= 1000 && typeof (tryItOut) != "undefined") {_RecordType("<1865,1873,70>",(tryItOut)); Inst69++; } } catch(e) {}
  tryItOut("for (NaN in this);");
try { if (Inst70 <= 1000 && typeof (tryEnsureSanity) != "undefined") {_RecordType("<1899,1914,71>",(tryEnsureSanity)); Inst70++; } } catch(e) {}
  tryEnsureSanity();
}

try { if (Inst71 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1921,1934,74>",(reportCompare)); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1935,1941,74>",(expect)); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1943,1949,74>",(actual)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (summary) != "undefined") {_RecordType("<1951,1958,74>",(summary)); Inst74++; } } catch(e) {}
reportCompare(expect, actual, summary);

