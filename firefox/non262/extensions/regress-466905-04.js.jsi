var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* -*- indent-tabs-mode: nil; js-indent-level: 2 -*- */

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
//-----------------------------------------------------------------------------
var BUGNUMBER = 466905;
try { if (Inst0 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<346,355,7>",(BUGNUMBER)); Inst0++; } } catch(e) {}
var summary = 'Prototypes of sandboxed arrays';
try { if (Inst1 <= 1000 && typeof (summary) != "undefined") {_RecordType("<370,377,8>",(summary)); Inst1++; } } catch(e) {}
var actual = '';
try { if (Inst2 <= 1000 && typeof (actual) != "undefined") {_RecordType("<418,424,9>",(actual)); Inst2++; } } catch(e) {}
var expect = ''; //-----------------------------------------------------------------------------
try { if (Inst3 <= 1000 && typeof (expect) != "undefined") {_RecordType("<435,441,10>",(expect)); Inst3++; } } catch(e) {}

try { if (Inst4 <= 1000 && typeof (test) != "undefined") {_RecordType("<529,533,12>",(test)); Inst4++; } } catch(e) {}
test(); //-----------------------------------------------------------------------------

try { if (Inst5 <= 1000 && typeof (test) != "undefined") {_RecordType("<627,631,14>",(test)); Inst5++; } } catch(e) {}
function test() {
try { if (Inst6 <= 1000 && typeof (printBugNumber) != "undefined") {_RecordType("<638,652,15>",(printBugNumber)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<653,662,15>",(BUGNUMBER)); Inst7++; } } catch(e) {}
  printBugNumber(BUGNUMBER);
try { if (Inst8 <= 1000 && typeof (printStatus) != "undefined") {_RecordType("<667,678,16>",(printStatus)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (summary) != "undefined") {_RecordType("<679,686,16>",(summary)); Inst9++; } } catch(e) {}
  printStatus(summary);

try { if (Inst10 <= 1000 && typeof (evalcx) != "undefined") {_RecordType("<703,709,18>",(evalcx)); Inst10++; } } catch(e) {}
  if (typeof evalcx != 'function') {
    expect = actual = 'Test skipped: requires evalcx support';
try { if (Inst11 <= 1000 && typeof (expect) != "undefined") {_RecordType("<731,737,19>",(expect)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (actual) != "undefined") {_RecordType("<740,746,19>",(actual)); Inst12++; } } catch(e) {}
  } else {
    expect = true;
try { if (Inst13 <= 1000 && typeof (expect) != "undefined") {_RecordType("<805,811,21>",(expect)); Inst13++; } } catch(e) {}

try { if (Inst14 <= 1000 && typeof (createArray) != "undefined") {_RecordType("<834,845,23>",(createArray)); Inst14++; } } catch(e) {}
    function createArray() {
      var a;
try { if (Inst15 <= 1000 && typeof (a) != "undefined") {_RecordType("<860,861,24>",(a)); Inst15++; } } catch(e) {}

      for (var i = 0; i < 10; i++) {
try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<879,880,26>",(i)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (i) != "undefined") {_RecordType("<886,887,26>",(i)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (i) != "undefined") {_RecordType("<894,895,26>",(i)); Inst18++; } } catch(e) {}
        a = [1, 2, 3, 4, 5];
try { if (Inst19 <= 1000 && typeof (a) != "undefined") {_RecordType("<909,910,27>",(a)); Inst19++; } } catch(e) {}
      }

try { if (Inst20 <= 1000 && typeof (a) != "undefined") {_RecordType("<952,953,30>",(a)); Inst20++; } } catch(e) {}
      return a;
    }

try { if (Inst22 <= 1000 && typeof (evalcx) != "undefined") {_RecordType("<980,986,33>",(evalcx)); Inst22++; } } catch(e) {}
    var sandbox = evalcx("lazy");
try { if (Inst21 <= 1000 && typeof (sandbox) != "undefined") {_RecordType("<970,977,33>",(sandbox)); Inst21++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (createArray) != "undefined") {_RecordType("<1022,1033,34>",(createArray)); Inst25++; } } catch(e) {}
    sandbox.createArray = createArray;
try { if (Inst23 <= 1000 && typeof (sandbox.createArray) != "undefined") {_RecordType("<1000,1019,34>",(sandbox.createArray)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (sandbox) != "undefined") {_RecordType("<1000,1007,34>",(sandbox)); Inst24++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (Object.getPrototypeOf) != "undefined") {_RecordType("<1048,1069,35>",(Object.getPrototypeOf)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1048,1054,35>",(Object)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (createArray) != "undefined") {_RecordType("<1070,1081,35>",(createArray)); Inst29++; } } catch(e) {}
    var p1 = Object.getPrototypeOf(createArray());
try { if (Inst26 <= 1000 && typeof (p1) != "undefined") {_RecordType("<1043,1045,35>",(p1)); Inst26++; } } catch(e) {}
try { if (Inst31 <= 1000 && typeof (Object.getPrototypeOf) != "undefined") {_RecordType("<1099,1120,36>",(Object.getPrototypeOf)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1099,1105,36>",(Object)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (evalcx) != "undefined") {_RecordType("<1121,1127,36>",(evalcx)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (sandbox) != "undefined") {_RecordType("<1145,1152,36>",(sandbox)); Inst34++; } } catch(e) {}
    var p2 = Object.getPrototypeOf(evalcx("createArray()", sandbox));
try { if (Inst30 <= 1000 && typeof (p2) != "undefined") {_RecordType("<1094,1096,36>",(p2)); Inst30++; } } catch(e) {}
try { if (Inst35 <= 1000 && typeof (print) != "undefined") {_RecordType("<1160,1165,37>",(print)); Inst35++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (p1) != "undefined") {_RecordType("<1175,1177,37>",(p1)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (p2) != "undefined") {_RecordType("<1182,1184,37>",(p2)); Inst38++; } } catch(e) {}
    print(actual = p1 === p2);
try { if (Inst36 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1166,1172,37>",(actual)); Inst36++; } } catch(e) {}
  }

try { if (Inst39 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1194,1207,40>",(reportCompare)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1208,1214,40>",(expect)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1216,1222,40>",(actual)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (summary) != "undefined") {_RecordType("<1224,1231,40>",(summary)); Inst42++; } } catch(e) {}
  reportCompare(expect, actual, summary);
}

