var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// |reftest| skip

/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
//-----------------------------------------------------------------------------
var BUGNUMBER = 417817;
try { if (Inst0 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<389,398,9>",(BUGNUMBER)); Inst0++; } } catch(e) {}
var summary = 'Do not assert: ASSERT_VALID_PROPERTY_CACHE_HIT';
try { if (Inst1 <= 1000 && typeof (summary) != "undefined") {_RecordType("<413,420,10>",(summary)); Inst1++; } } catch(e) {}
var actual = '';
try { if (Inst2 <= 1000 && typeof (actual) != "undefined") {_RecordType("<477,483,11>",(actual)); Inst2++; } } catch(e) {}
var expect = '';
try { if (Inst3 <= 1000 && typeof (expect) != "undefined") {_RecordType("<494,500,12>",(expect)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (printBugNumber) != "undefined") {_RecordType("<507,521,13>",(printBugNumber)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<522,531,13>",(BUGNUMBER)); Inst5++; } } catch(e) {}
printBugNumber(BUGNUMBER);
try { if (Inst6 <= 1000 && typeof (printStatus) != "undefined") {_RecordType("<534,545,14>",(printStatus)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (summary) != "undefined") {_RecordType("<546,553,14>",(summary)); Inst7++; } } catch(e) {}
printStatus(summary);
const numThreads = 2;
try { if (Inst8 <= 1000 && typeof (numThreads) != "undefined") {_RecordType("<562,572,15>",(numThreads)); Inst8++; } } catch(e) {}
const numPasses = 1000;
try { if (Inst9 <= 1000 && typeof (numPasses) != "undefined") {_RecordType("<584,593,16>",(numPasses)); Inst9++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (first) != "undefined") {_RecordType("<630,635,18>",(first)); Inst11++; } } catch(e) {}
var tests = {
  0: function first(myAn) {
try { if (Inst12 <= 1000 && typeof (myAn) != "undefined") {_RecordType("<636,640,18>",(myAn)); Inst12++; } } catch(e) {}
    /* This print statement is needed to reliably trigger the bug */
try { if (Inst13 <= 1000 && typeof (print) != "undefined") {_RecordType("<717,722,20>",(print)); Inst13++; } } catch(e) {}
    print("Hello, World!");
  },
  length: 1
};
try { if (Inst10 <= 1000 && typeof (tests) != "undefined") {_RecordType("<606,611,17>",(tests)); Inst10++; } } catch(e) {}

try { if (Inst14 <= 1000 && typeof (runAllTests) != "undefined") {_RecordType("<771,782,25>",(runAllTests)); Inst14++; } } catch(e) {}
function runAllTests() {
  var passes;
try { if (Inst15 <= 1000 && typeof (passes) != "undefined") {_RecordType("<793,799,26>",(passes)); Inst15++; } } catch(e) {}
  var i;
try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<807,808,27>",(i)); Inst16++; } } catch(e) {}

  for (passes = 0; passes < numPasses; passes++) {
try { if (Inst17 <= 1000 && typeof (passes) != "undefined") {_RecordType("<818,824,29>",(passes)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (passes) != "undefined") {_RecordType("<830,836,29>",(passes)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (numPasses) != "undefined") {_RecordType("<839,848,29>",(numPasses)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (passes) != "undefined") {_RecordType("<850,856,29>",(passes)); Inst20++; } } catch(e) {}
    for (i = 0; i < tests.length; i++) {
try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<871,872,30>",(i)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<878,879,30>",(i)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (tests.length) != "undefined") {_RecordType("<882,894,30>",(tests.length)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (tests) != "undefined") {_RecordType("<882,887,30>",(tests)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<896,897,30>",(i)); Inst25++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (tests[0]) != "undefined") {_RecordType("<909,917,31>",(tests[0])); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (tests) != "undefined") {_RecordType("<909,914,31>",(tests)); Inst27++; } } catch(e) {}
      tests[0]();
    }
  }
}

try { if (Inst28 <= 1000 && typeof (scatter) != "undefined") {_RecordType("<945,952,36>",(scatter)); Inst28++; } } catch(e) {}
if (typeof scatter == 'undefined') {
try { if (Inst29 <= 1000 && typeof (print) != "undefined") {_RecordType("<973,978,37>",(print)); Inst29++; } } catch(e) {}
  print(expect = actual = 'Test skipped. Requires scatter.');
try { if (Inst30 <= 1000 && typeof (expect) != "undefined") {_RecordType("<979,985,37>",(expect)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (actual) != "undefined") {_RecordType("<988,994,37>",(actual)); Inst31++; } } catch(e) {}
} else {
  var i;
try { if (Inst32 <= 1000 && typeof (i) != "undefined") {_RecordType("<1048,1049,39>",(i)); Inst32++; } } catch(e) {}
  var a = [];
try { if (Inst33 <= 1000 && typeof (a) != "undefined") {_RecordType("<1057,1058,40>",(a)); Inst33++; } } catch(e) {}

  for (i = 0; i < numThreads; i++) {
try { if (Inst34 <= 1000 && typeof (i) != "undefined") {_RecordType("<1073,1074,42>",(i)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (i) != "undefined") {_RecordType("<1080,1081,42>",(i)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (numThreads) != "undefined") {_RecordType("<1084,1094,42>",(numThreads)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (i) != "undefined") {_RecordType("<1096,1097,42>",(i)); Inst37++; } } catch(e) {}
try { if (Inst38 <= 1000 && typeof (a.push) != "undefined") {_RecordType("<1107,1113,43>",(a.push)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (a) != "undefined") {_RecordType("<1107,1108,43>",(a)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (runAllTests) != "undefined") {_RecordType("<1114,1125,43>",(runAllTests)); Inst40++; } } catch(e) {}
    a.push(runAllTests);
  }

try { if (Inst41 <= 1000 && typeof (scatter) != "undefined") {_RecordType("<1135,1142,46>",(scatter)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (a) != "undefined") {_RecordType("<1143,1144,46>",(a)); Inst42++; } } catch(e) {}
  scatter(a);
}

try { if (Inst43 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1150,1163,49>",(reportCompare)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1164,1170,49>",(expect)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1172,1178,49>",(actual)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (summary) != "undefined") {_RecordType("<1180,1187,49>",(summary)); Inst46++; } } catch(e) {}
reportCompare(expect, actual, summary);

