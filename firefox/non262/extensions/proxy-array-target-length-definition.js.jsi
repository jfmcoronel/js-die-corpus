var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/*
 * Any copyright is dedicated to the Public Domain.
 * http://creativecommons.org/licenses/publicdomain/
 */
var gTestfile = 'proxy-array-target-length-definition.js';
try { if (Inst0 <= 1000 && typeof (gTestfile) != "undefined") {_RecordType("<116,125,5>",(gTestfile)); Inst0++; } } catch(e) {}
var BUGNUMBER = 905947;
try { if (Inst1 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<175,184,6>",(BUGNUMBER)); Inst1++; } } catch(e) {}
var summary = "Redefining an array's |length| property when redefining the |length| " + "property on a proxy with an array as target";
try { if (Inst2 <= 1000 && typeof (summary) != "undefined") {_RecordType("<199,206,7>",(summary)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (print) != "undefined") {_RecordType("<330,335,8>",(print)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<336,345,8>",(BUGNUMBER)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (summary) != "undefined") {_RecordType("<355,362,8>",(summary)); Inst5++; } } catch(e) {}
print(BUGNUMBER + ": " + summary);
/**************
 * BEGIN TEST *
 **************/

var arr = [];
try { if (Inst6 <= 1000 && typeof (arr) != "undefined") {_RecordType("<419,422,13>",(arr)); Inst6++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<441,446,14>",(Proxy)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (arr) != "undefined") {_RecordType("<447,450,14>",(arr)); Inst9++; } } catch(e) {}
var p = new Proxy(arr, {});
try { if (Inst7 <= 1000 && typeof (p) != "undefined") {_RecordType("<433,434,14>",(p)); Inst7++; } } catch(e) {}

try { if (Inst10 <= 1000 && typeof (assertThrowsTypeError) != "undefined") {_RecordType("<467,488,16>",(assertThrowsTypeError)); Inst10++; } } catch(e) {}
function assertThrowsTypeError(f) {
try { if (Inst11 <= 1000 && typeof (f) != "undefined") {_RecordType("<489,490,16>",(f)); Inst11++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (e) != "undefined") {_RecordType("<567,568,22>",(e)); Inst13++; } } catch(e) {}
  try {
try { if (Inst12 <= 1000 && typeof (f) != "undefined") {_RecordType("<506,507,18>",(f)); Inst12++; } } catch(e) {}
    f();
    false;
    true;
    "Must have thrown";
  } catch (e) {
try { if (Inst14 <= 1000 && typeof (e) != "undefined") {_RecordType("<576,577,23>",(e)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<589,598,23>",(TypeError)); Inst15++; } } catch(e) {}
    e instanceof TypeError;
    true;
    "Must have thrown TypeError";
  }
} // Redefining non-configurable length should throw a TypeError


(function () {
try { if (Inst16 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<732,753,31>",(Object.defineProperty)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Object) != "undefined") {_RecordType("<732,738,31>",(Object)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (p) != "undefined") {_RecordType("<754,755,31>",(p)); Inst18++; } } catch(e) {}
  Object.defineProperty(p, "length", {
    value: 17,
    configurable: true
  });
})();

(function () {
try { if (Inst19 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<837,858,38>",(Object.defineProperty)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (Object) != "undefined") {_RecordType("<837,843,38>",(Object)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (p) != "undefined") {_RecordType("<859,860,38>",(p)); Inst21++; } } catch(e) {}
  Object.defineProperty(p, "length", {
    value: 42,
    enumerable: true
  });
})();

// Check the property went unchanged.
try { if (Inst23 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<970,1001,45>",(Object.getOwnPropertyDescriptor)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (Object) != "undefined") {_RecordType("<970,976,45>",(Object)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (p) != "undefined") {_RecordType("<1002,1003,45>",(p)); Inst25++; } } catch(e) {}
var pd = Object.getOwnPropertyDescriptor(p, "length");
try { if (Inst22 <= 1000 && typeof (pd) != "undefined") {_RecordType("<965,967,45>",(pd)); Inst22++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (pd.value) != "undefined") {_RecordType("<1016,1024,46>",(pd.value)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (pd) != "undefined") {_RecordType("<1016,1018,46>",(pd)); Inst27++; } } catch(e) {}
pd.value;
0;
try { if (Inst28 <= 1000 && typeof (pd.writable) != "undefined") {_RecordType("<1029,1040,48>",(pd.writable)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (pd) != "undefined") {_RecordType("<1029,1031,48>",(pd)); Inst29++; } } catch(e) {}
pd.writable;
true;
try { if (Inst30 <= 1000 && typeof (pd.enumerable) != "undefined") {_RecordType("<1048,1061,50>",(pd.enumerable)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (pd) != "undefined") {_RecordType("<1048,1050,50>",(pd)); Inst31++; } } catch(e) {}
pd.enumerable;
false;
try { if (Inst32 <= 1000 && typeof (pd.configurable) != "undefined") {_RecordType("<1070,1085,52>",(pd.configurable)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (pd) != "undefined") {_RecordType("<1070,1072,52>",(pd)); Inst33++; } } catch(e) {}
pd.configurable;
false;
try { if (Inst35 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<1103,1134,54>",(Object.getOwnPropertyDescriptor)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1103,1109,54>",(Object)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (arr) != "undefined") {_RecordType("<1135,1138,54>",(arr)); Inst37++; } } catch(e) {}
var ad = Object.getOwnPropertyDescriptor(arr, "length");
try { if (Inst34 <= 1000 && typeof (ad) != "undefined") {_RecordType("<1098,1100,54>",(ad)); Inst34++; } } catch(e) {}
try { if (Inst38 <= 1000 && typeof (ad.value) != "undefined") {_RecordType("<1151,1159,55>",(ad.value)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (ad) != "undefined") {_RecordType("<1151,1153,55>",(ad)); Inst39++; } } catch(e) {}
ad.value;
0;
try { if (Inst40 <= 1000 && typeof (ad.writable) != "undefined") {_RecordType("<1164,1175,57>",(ad.writable)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (ad) != "undefined") {_RecordType("<1164,1166,57>",(ad)); Inst41++; } } catch(e) {}
ad.writable;
true;
try { if (Inst42 <= 1000 && typeof (ad.enumerable) != "undefined") {_RecordType("<1183,1196,59>",(ad.enumerable)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (ad) != "undefined") {_RecordType("<1183,1185,59>",(ad)); Inst43++; } } catch(e) {}
ad.enumerable;
false;
try { if (Inst44 <= 1000 && typeof (ad.configurable) != "undefined") {_RecordType("<1205,1220,61>",(ad.configurable)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (ad) != "undefined") {_RecordType("<1205,1207,61>",(ad)); Inst45++; } } catch(e) {}
ad.configurable;
false;

/******************************************************************************/
try { if (Inst46 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1322,1335,65>",(reportCompare)); Inst46++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst47 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1356,1369,66>",(reportCompare)); Inst47++; } } catch(e) {}
  reportCompare(true, true);
}

try { if (Inst48 <= 1000 && typeof (print) != "undefined") {_RecordType("<1386,1391,69>",(print)); Inst48++; } } catch(e) {}
print("Tests complete");

