var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// |reftest| skip-if(!xulRuntime.shell) -- needs evaluate()

/*
 * Any copyright is dedicated to the Public Domain.
 * http://creativecommons.org/licenses/publicdomain/
 * Contributor:
 *   Jeff Walden <jwalden+code@mit.edu>
 */
//-----------------------------------------------------------------------------
var BUGNUMBER = 1046964;
try { if (Inst0 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<313,322,10>",(BUGNUMBER)); Inst0++; } } catch(e) {}
var summary = "Misplaced directives (e.g. 'use strict') should trigger warnings if they " + "contradict the actually-used semantics";
try { if (Inst1 <= 1000 && typeof (summary) != "undefined") {_RecordType("<338,345,11>",(summary)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (print) != "undefined") {_RecordType("<468,473,12>",(print)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<474,483,12>",(BUGNUMBER)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (summary) != "undefined") {_RecordType("<493,500,12>",(summary)); Inst4++; } } catch(e) {}
print(BUGNUMBER + ": " + summary);
/**************
 * BEGIN TEST *
 **************/

try { if (Inst5 <= 1000 && typeof (evaluateNoRval) != "undefined") {_RecordType("<562,576,17>",(evaluateNoRval)); Inst5++; } } catch(e) {}
function evaluateNoRval(code) {
try { if (Inst6 <= 1000 && typeof (code) != "undefined") {_RecordType("<577,581,17>",(code)); Inst6++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (evaluate) != "undefined") {_RecordType("<587,595,18>",(evaluate)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (code) != "undefined") {_RecordType("<596,600,18>",(code)); Inst8++; } } catch(e) {}
  evaluate(code, {
    isRunOnce: true,
    noScriptRval: true
  });
}

try { if (Inst9 <= 1000 && typeof (expectSyntaxError) != "undefined") {_RecordType("<666,683,24>",(expectSyntaxError)); Inst9++; } } catch(e) {}
function expectSyntaxError(code) {
try { if (Inst10 <= 1000 && typeof (code) != "undefined") {_RecordType("<684,688,24>",(code)); Inst10++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (e) != "undefined") {_RecordType("<774,775,28>",(e)); Inst14++; } } catch(e) {}
  try {
try { if (Inst11 <= 1000 && typeof (evaluateNoRval) != "undefined") {_RecordType("<704,718,26>",(evaluateNoRval)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (code) != "undefined") {_RecordType("<719,723,26>",(code)); Inst12++; } } catch(e) {}
    evaluateNoRval(code);
try { if (Inst13 <= 1000 && typeof (Error) != "undefined") {_RecordType("<740,745,27>",(Error)); Inst13++; } } catch(e) {}
    throw new Error("didn't throw");
  } catch (e) {
try { if (Inst15 <= 1000 && typeof (e) != "undefined") {_RecordType("<783,784,29>",(e)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (SyntaxError) != "undefined") {_RecordType("<796,807,29>",(SyntaxError)); Inst16++; } } catch(e) {}
    e instanceof SyntaxError;
    true;
try { if (Inst17 <= 1000 && typeof (e) != "undefined") {_RecordType("<885,886,31>",(e)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (code) != "undefined") {_RecordType("<928,932,31>",(code)); Inst18++; } } catch(e) {}
    "should have thrown a SyntaxError, instead got:\n" + "    " + e + "\n" + "when evaluating:\n" + "    " + code;
  }
}

try { if (Inst19 <= 1000 && typeof (expectSyntaxError) != "undefined") {_RecordType("<941,958,35>",(expectSyntaxError)); Inst19++; } } catch(e) {}
expectSyntaxError("function f1() {} 'use strict'; function f2() {}");
try { if (Inst20 <= 1000 && typeof (expectSyntaxError) != "undefined") {_RecordType("<1011,1028,36>",(expectSyntaxError)); Inst20++; } } catch(e) {}
expectSyntaxError("function f3() { var x; 'use strict'; }");

try { if (Inst21 <= 1000 && typeof (isAsmJSCompilationAvailable) != "undefined") {_RecordType("<1077,1104,38>",(isAsmJSCompilationAvailable)); Inst21++; } } catch(e) {}
if (isAsmJSCompilationAvailable()) {
try { if (Inst22 <= 1000 && typeof (expectSyntaxError) != "undefined") {_RecordType("<1112,1129,39>",(expectSyntaxError)); Inst22++; } } catch(e) {}
  expectSyntaxError("function f4() {} 'use asm'; function f5() {}");
}

try { if (Inst23 <= 1000 && typeof (expectSyntaxError) != "undefined") {_RecordType("<1182,1199,42>",(expectSyntaxError)); Inst23++; } } catch(e) {}
expectSyntaxError("function f6() { var x; 'use strict'; }");

try { if (Inst24 <= 1000 && typeof (isAsmJSCompilationAvailable) != "undefined") {_RecordType("<1248,1275,44>",(isAsmJSCompilationAvailable)); Inst24++; } } catch(e) {}
if (isAsmJSCompilationAvailable()) {
try { if (Inst25 <= 1000 && typeof (expectSyntaxError) != "undefined") {_RecordType("<1283,1300,45>",(expectSyntaxError)); Inst25++; } } catch(e) {}
  expectSyntaxError("'use asm'; function f7() {}");
} // No errors expected -- useless non-directives, but not contrary to used
// semantics.


try { if (Inst26 <= 1000 && typeof (evaluateNoRval) != "undefined") {_RecordType("<1425,1439,50>",(evaluateNoRval)); Inst26++; } } catch(e) {}
evaluateNoRval("'use strict'; function f8() {} 'use strict'; function f9() {}");
try { if (Inst27 <= 1000 && typeof (evaluateNoRval) != "undefined") {_RecordType("<1506,1520,51>",(evaluateNoRval)); Inst27++; } } catch(e) {}
evaluateNoRval("'use strict'; function f10() { var z; 'use strict' }");

try { if (Inst28 <= 1000 && typeof (isAsmJSCompilationAvailable) != "undefined") {_RecordType("<1583,1610,53>",(isAsmJSCompilationAvailable)); Inst28++; } } catch(e) {}
if (isAsmJSCompilationAvailable()) {
try { if (Inst30 <= 1000 && typeof (e) != "undefined") {_RecordType("<1699,1700,56>",(e)); Inst30++; } } catch(e) {}
  try {
try { if (Inst29 <= 1000 && typeof (evaluateNoRval) != "undefined") {_RecordType("<1628,1642,55>",(evaluateNoRval)); Inst29++; } } catch(e) {}
    evaluateNoRval("function f11() { 'use asm'; return {}; }");
  } catch (e) {
try { if (Inst31 <= 1000 && typeof (e.toString().includes) != "undefined") {_RecordType("<1713,1734,57>",(e.toString().includes)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (e.toString) != "undefined") {_RecordType("<1713,1723,57>",(e.toString)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (e) != "undefined") {_RecordType("<1713,1714,57>",(e)); Inst33++; } } catch(e) {}
    if (!e.toString().includes("Successfully compiled asm.js code")) {
try { if (Inst34 <= 1000 && typeof (e) != "undefined") {_RecordType("<1787,1788,58>",(e)); Inst34++; } } catch(e) {}
      throw e;
    }
  }
}
/******************************************************************************/


try { if (Inst35 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1896,1909,65>",(reportCompare)); Inst35++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst36 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1930,1943,66>",(reportCompare)); Inst36++; } } catch(e) {}
  reportCompare(true, true);
}

try { if (Inst37 <= 1000 && typeof (print) != "undefined") {_RecordType("<1960,1965,69>",(print)); Inst37++; } } catch(e) {}
print("Tests complete");

