var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// |reftest| skip-if(xulRuntime.shell)

/* -*- indent-tabs-mode: nil; js-indent-level: 2 -*- */

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
//-----------------------------------------------------------------------------
var BUGNUMBER = 372309;
try { if (Inst0 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<386,395,9>",(BUGNUMBER)); Inst0++; } } catch(e) {}
var summary = 'Root new array objects';
try { if (Inst1 <= 1000 && typeof (summary) != "undefined") {_RecordType("<410,417,10>",(summary)); Inst1++; } } catch(e) {}
var actual = 'No Crash';
try { if (Inst2 <= 1000 && typeof (actual) != "undefined") {_RecordType("<450,456,11>",(actual)); Inst2++; } } catch(e) {}
var expect = 'No Crash';
try { if (Inst3 <= 1000 && typeof (expect) != "undefined") {_RecordType("<475,481,12>",(expect)); Inst3++; } } catch(e) {}

try { if (Inst4 <= 1000 && typeof (test) != "undefined") {_RecordType("<506,510,14>",(test)); Inst4++; } } catch(e) {}
function test() {
try { if (Inst5 <= 1000 && typeof (printBugNumber) != "undefined") {_RecordType("<517,531,15>",(printBugNumber)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<532,541,15>",(BUGNUMBER)); Inst6++; } } catch(e) {}
  printBugNumber(BUGNUMBER);
try { if (Inst7 <= 1000 && typeof (printStatus) != "undefined") {_RecordType("<546,557,16>",(printStatus)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (summary) != "undefined") {_RecordType("<558,565,16>",(summary)); Inst8++; } } catch(e) {}
  printStatus(summary);
  var width = 600;
try { if (Inst9 <= 1000 && typeof (width) != "undefined") {_RecordType("<574,579,17>",(width)); Inst9++; } } catch(e) {}
  var height = 600;
try { if (Inst10 <= 1000 && typeof (height) != "undefined") {_RecordType("<593,599,18>",(height)); Inst10++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (document.createElement) != "undefined") {_RecordType("<626,648,19>",(document.createElement)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (document) != "undefined") {_RecordType("<626,634,19>",(document)); Inst13++; } } catch(e) {}
  var img1canvas = document.createElement("canvas");
try { if (Inst11 <= 1000 && typeof (img1canvas) != "undefined") {_RecordType("<613,623,19>",(img1canvas)); Inst11++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (document.createElement) != "undefined") {_RecordType("<679,701,20>",(document.createElement)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (document) != "undefined") {_RecordType("<679,687,20>",(document)); Inst16++; } } catch(e) {}
  var img2canvas = document.createElement("canvas");
try { if (Inst14 <= 1000 && typeof (img2canvas) != "undefined") {_RecordType("<666,676,20>",(img2canvas)); Inst14++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (width) != "undefined") {_RecordType("<753,758,21>",(width)); Inst21++; } } catch(e) {}
  img1canvas.width = img2canvas.width = width;
try { if (Inst17 <= 1000 && typeof (img1canvas.width) != "undefined") {_RecordType("<715,731,21>",(img1canvas.width)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (img1canvas) != "undefined") {_RecordType("<715,725,21>",(img1canvas)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (img2canvas.width) != "undefined") {_RecordType("<734,750,21>",(img2canvas.width)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (img2canvas) != "undefined") {_RecordType("<734,744,21>",(img2canvas)); Inst20++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (height) != "undefined") {_RecordType("<802,808,22>",(height)); Inst26++; } } catch(e) {}
  img1canvas.height = img2canvas.height = height;
try { if (Inst22 <= 1000 && typeof (img1canvas.height) != "undefined") {_RecordType("<762,779,22>",(img1canvas.height)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (img1canvas) != "undefined") {_RecordType("<762,772,22>",(img1canvas)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (img2canvas.height) != "undefined") {_RecordType("<782,799,22>",(img2canvas.height)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (img2canvas) != "undefined") {_RecordType("<782,792,22>",(img2canvas)); Inst25++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (img1canvas.getContext("2d").getImageData(0, 0, width, height).data) != "undefined") {_RecordType("<812,878,23>",(img1canvas.getContext("2d").getImageData(0, 0, width, height).data)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (img1canvas.getContext("2d").getImageData) != "undefined") {_RecordType("<812,852,23>",(img1canvas.getContext("2d").getImageData)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (img1canvas.getContext) != "undefined") {_RecordType("<812,833,23>",(img1canvas.getContext)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (img1canvas) != "undefined") {_RecordType("<812,822,23>",(img1canvas)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (width) != "undefined") {_RecordType("<859,864,23>",(width)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (height) != "undefined") {_RecordType("<866,872,23>",(height)); Inst32++; } } catch(e) {}
  img1canvas.getContext("2d").getImageData(0, 0, width, height).data;
try { if (Inst33 <= 1000 && typeof (img2canvas.getContext("2d").getImageData(0, 0, width, height).data) != "undefined") {_RecordType("<882,948,24>",(img2canvas.getContext("2d").getImageData(0, 0, width, height).data)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (img2canvas.getContext("2d").getImageData) != "undefined") {_RecordType("<882,922,24>",(img2canvas.getContext("2d").getImageData)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (img2canvas.getContext) != "undefined") {_RecordType("<882,903,24>",(img2canvas.getContext)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (img2canvas) != "undefined") {_RecordType("<882,892,24>",(img2canvas)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (width) != "undefined") {_RecordType("<929,934,24>",(width)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (height) != "undefined") {_RecordType("<936,942,24>",(height)); Inst38++; } } catch(e) {}
  img2canvas.getContext("2d").getImageData(0, 0, width, height).data;
try { if (Inst39 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<952,965,25>",(reportCompare)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (expect) != "undefined") {_RecordType("<966,972,25>",(expect)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (actual) != "undefined") {_RecordType("<974,980,25>",(actual)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (summary) != "undefined") {_RecordType("<982,989,25>",(summary)); Inst42++; } } catch(e) {}
  reportCompare(expect, actual, summary);
  gDelayTestDriverEnd = false;
try { if (Inst43 <= 1000 && typeof (gDelayTestDriverEnd) != "undefined") {_RecordType("<994,1013,26>",(gDelayTestDriverEnd)); Inst43++; } } catch(e) {}
} // delay test driver end


gDelayTestDriverEnd = true;
try { if (Inst44 <= 1000 && typeof (gDelayTestDriverEnd) != "undefined") {_RecordType("<1052,1071,30>",(gDelayTestDriverEnd)); Inst44++; } } catch(e) {}

