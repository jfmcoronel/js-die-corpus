var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// |reftest| skip-if(!xulRuntime.shell)
// Any copyright is dedicated to the Public Domain.
// http://creativecommons.org/licenses/publicdomain/
try { if (Inst0 <= 1000 && typeof (viewToString) != "undefined") {_RecordType("<154,166,4>",(viewToString)); Inst0++; } } catch(e) {}
function viewToString(view) {
try { if (Inst1 <= 1000 && typeof (view) != "undefined") {_RecordType("<167,171,4>",(view)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (String.fromCharCode.apply) != "undefined") {_RecordType("<184,209,5>",(String.fromCharCode.apply)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (String.fromCharCode) != "undefined") {_RecordType("<184,203,5>",(String.fromCharCode)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (String) != "undefined") {_RecordType("<184,190,5>",(String)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (view) != "undefined") {_RecordType("<216,220,5>",(view)); Inst5++; } } catch(e) {}
  return String.fromCharCode.apply(null, view);
}

try { if (Inst6 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<235,247,8>",(assertThrows)); Inst6++; } } catch(e) {}
function assertThrows(f, wantException) {
try { if (Inst7 <= 1000 && typeof (f) != "undefined") {_RecordType("<248,249,8>",(f)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (wantException) != "undefined") {_RecordType("<251,264,8>",(wantException)); Inst8++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (e) != "undefined") {_RecordType("<365,366,14>",(e)); Inst11++; } } catch(e) {}
  try {
try { if (Inst9 <= 1000 && typeof (f) != "undefined") {_RecordType("<280,281,10>",(f)); Inst9++; } } catch(e) {}
    f();
    true;
    false;
try { if (Inst10 <= 1000 && typeof (wantException) != "undefined") {_RecordType("<324,337,13>",(wantException)); Inst10++; } } catch(e) {}
    "expected " + wantException + " exception";
  } catch (e) {
try { if (Inst12 <= 1000 && typeof (e.name) != "undefined") {_RecordType("<374,380,15>",(e.name)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (e) != "undefined") {_RecordType("<374,375,15>",(e)); Inst13++; } } catch(e) {}
    e.name;
try { if (Inst14 <= 1000 && typeof (wantException.name) != "undefined") {_RecordType("<386,404,16>",(wantException.name)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (wantException) != "undefined") {_RecordType("<386,399,16>",(wantException)); Inst15++; } } catch(e) {}
    wantException.name;
try { if (Inst16 <= 1000 && typeof (e.toString) != "undefined") {_RecordType("<410,420,17>",(e.toString)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (e) != "undefined") {_RecordType("<410,411,17>",(e)); Inst17++; } } catch(e) {}
    e.toString();
  }
}

try { if (Inst18 <= 1000 && typeof (test) != "undefined") {_RecordType("<440,444,21>",(test)); Inst18++; } } catch(e) {}
function test() {
  var filename = "file-mapped-arraybuffers.txt";
try { if (Inst19 <= 1000 && typeof (filename) != "undefined") {_RecordType("<455,463,22>",(filename)); Inst19++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (createMappedArrayBuffer) != "undefined") {_RecordType("<513,536,23>",(createMappedArrayBuffer)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (filename) != "undefined") {_RecordType("<537,545,23>",(filename)); Inst22++; } } catch(e) {}
  var buffer = createMappedArrayBuffer(filename);
try { if (Inst20 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<504,510,23>",(buffer)); Inst20++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (Uint8Array) != "undefined") {_RecordType("<565,575,24>",(Uint8Array)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<576,582,24>",(buffer)); Inst25++; } } catch(e) {}
  var view = new Uint8Array(buffer);
try { if (Inst23 <= 1000 && typeof (view) != "undefined") {_RecordType("<554,558,24>",(view)); Inst23++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (viewToString) != "undefined") {_RecordType("<587,599,25>",(viewToString)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (view) != "undefined") {_RecordType("<600,604,25>",(view)); Inst27++; } } catch(e) {}
  viewToString(view);
  "01234567abcdefghijkl";
try { if (Inst29 <= 1000 && typeof (createMappedArrayBuffer) != "undefined") {_RecordType("<649,672,27>",(createMappedArrayBuffer)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (filename) != "undefined") {_RecordType("<673,681,27>",(filename)); Inst30++; } } catch(e) {}
  var buffer2 = createMappedArrayBuffer(filename, 8);
try { if (Inst28 <= 1000 && typeof (buffer2) != "undefined") {_RecordType("<639,646,27>",(buffer2)); Inst28++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (Uint8Array) != "undefined") {_RecordType("<700,710,28>",(Uint8Array)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (buffer2) != "undefined") {_RecordType("<711,718,28>",(buffer2)); Inst33++; } } catch(e) {}
  view = new Uint8Array(buffer2);
try { if (Inst31 <= 1000 && typeof (view) != "undefined") {_RecordType("<689,693,28>",(view)); Inst31++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof (viewToString) != "undefined") {_RecordType("<723,735,29>",(viewToString)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (view) != "undefined") {_RecordType("<736,740,29>",(view)); Inst35++; } } catch(e) {}
  viewToString(view);
  "abcdefghijkl";
try { if (Inst37 <= 1000 && typeof (createMappedArrayBuffer) != "undefined") {_RecordType("<777,800,31>",(createMappedArrayBuffer)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (filename) != "undefined") {_RecordType("<801,809,31>",(filename)); Inst38++; } } catch(e) {}
  var buffer3 = createMappedArrayBuffer(filename, 0, 8);
try { if (Inst36 <= 1000 && typeof (buffer3) != "undefined") {_RecordType("<767,774,31>",(buffer3)); Inst36++; } } catch(e) {}
try { if (Inst40 <= 1000 && typeof (Uint8Array) != "undefined") {_RecordType("<831,841,32>",(Uint8Array)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (buffer3) != "undefined") {_RecordType("<842,849,32>",(buffer3)); Inst41++; } } catch(e) {}
  view = new Uint8Array(buffer3);
try { if (Inst39 <= 1000 && typeof (view) != "undefined") {_RecordType("<820,824,32>",(view)); Inst39++; } } catch(e) {}
try { if (Inst42 <= 1000 && typeof (viewToString) != "undefined") {_RecordType("<854,866,33>",(viewToString)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (view) != "undefined") {_RecordType("<867,871,33>",(view)); Inst43++; } } catch(e) {}
  viewToString(view);
  "01234567";

try { if (Inst44 <= 1000 && typeof (createMappedArrayBuffer) != "undefined") {_RecordType("<898,921,36>",(createMappedArrayBuffer)); Inst44++; } } catch(e) {}
  (() => createMappedArrayBuffer("empty.txt", 8))();

try { if (Inst45 <= 1000 && typeof (RangeError) != "undefined") {_RecordType("<945,955,38>",(RangeError)); Inst45++; } } catch(e) {}
  RangeError;

try { if (Inst46 <= 1000 && typeof (createMappedArrayBuffer) != "undefined") {_RecordType("<967,990,40>",(createMappedArrayBuffer)); Inst46++; } } catch(e) {}
  (() => createMappedArrayBuffer("empty.txt", 0, 8))();

try { if (Inst47 <= 1000 && typeof (Error) != "undefined") {_RecordType("<1017,1022,42>",(Error)); Inst47++; } } catch(e) {}
  Error;
}

try { if (Inst48 <= 1000 && typeof (getBuildConfiguration()["mapped-array-buffer"]) != "undefined") {_RecordType("<1031,1077,45>",(getBuildConfiguration()["mapped-array-buffer"])); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (getBuildConfiguration) != "undefined") {_RecordType("<1031,1052,45>",(getBuildConfiguration)); Inst49++; } } catch(e) {}
if (getBuildConfiguration()["mapped-array-buffer"]) {
try { if (Inst50 <= 1000 && typeof (test) != "undefined") {_RecordType("<1083,1087,46>",(test)); Inst50++; } } catch(e) {}
  test();
}

try { if (Inst51 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1094,1107,49>",(reportCompare)); Inst51++; } } catch(e) {}
reportCompare(0, 0, 'ok');

