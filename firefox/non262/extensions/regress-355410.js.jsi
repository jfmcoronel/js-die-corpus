var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* -*- tab-width: 2; indent-tabs-mode: nil; js-indent-level: 2 -*- */

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
//-----------------------------------------------------------------------------
var BUGNUMBER = 355410;
try { if (Inst0 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<360,369,7>",(BUGNUMBER)); Inst0++; } } catch(e) {}
var summary = 'GC hazard in for([k,v] in o){...}';
try { if (Inst1 <= 1000 && typeof (summary) != "undefined") {_RecordType("<384,391,8>",(summary)); Inst1++; } } catch(e) {}
var actual = 'No Crash';
try { if (Inst2 <= 1000 && typeof (actual) != "undefined") {_RecordType("<435,441,9>",(actual)); Inst2++; } } catch(e) {}
var expect = 'No Crash'; //-----------------------------------------------------------------------------
try { if (Inst3 <= 1000 && typeof (expect) != "undefined") {_RecordType("<460,466,10>",(expect)); Inst3++; } } catch(e) {}

try { if (Inst4 <= 1000 && typeof (test) != "undefined") {_RecordType("<562,566,12>",(test)); Inst4++; } } catch(e) {}
test(); //-----------------------------------------------------------------------------

try { if (Inst5 <= 1000 && typeof (test) != "undefined") {_RecordType("<660,664,14>",(test)); Inst5++; } } catch(e) {}
function test() {
try { if (Inst6 <= 1000 && typeof (printBugNumber) != "undefined") {_RecordType("<671,685,15>",(printBugNumber)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<686,695,15>",(BUGNUMBER)); Inst7++; } } catch(e) {}
  printBugNumber(BUGNUMBER);
try { if (Inst8 <= 1000 && typeof (printStatus) != "undefined") {_RecordType("<700,711,16>",(printStatus)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (summary) != "undefined") {_RecordType("<712,719,16>",(summary)); Inst9++; } } catch(e) {}
  printStatus(summary);
  var address = 0xbadf00d0,
      basket = {
    food: {}
  };
try { if (Inst10 <= 1000 && typeof (address) != "undefined") {_RecordType("<728,735,17>",(address)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (basket) != "undefined") {_RecordType("<756,762,18>",(basket)); Inst11++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<796,811,21>",(Array.prototype)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Array) != "undefined") {_RecordType("<796,801,21>",(Array)); Inst14++; } } catch(e) {}
  var AP = Array.prototype,
      rooter = {};
try { if (Inst12 <= 1000 && typeof (AP) != "undefined") {_RecordType("<791,793,21>",(AP)); Inst12++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (rooter) != "undefined") {_RecordType("<819,825,22>",(rooter)); Inst15++; } } catch(e) {}

try { if (Inst16 <= 1000 && typeof (AP.__defineGetter__) != "undefined") {_RecordType("<835,854,24>",(AP.__defineGetter__)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (AP) != "undefined") {_RecordType("<835,837,24>",(AP)); Inst17++; } } catch(e) {}
  AP.__defineGetter__(0, function () {
try { if (Inst18 <= 1000 && typeof (this[-1]) != "undefined") {_RecordType("<883,891,25>",(this[-1])); Inst18++; } } catch(e) {}
    return this[-1];
  });

try { if (Inst19 <= 1000 && typeof (AP.__defineSetter__) != "undefined") {_RecordType("<902,921,28>",(AP.__defineSetter__)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (AP) != "undefined") {_RecordType("<902,904,28>",(AP)); Inst20++; } } catch(e) {}
  AP.__defineSetter__(0, function (v) {
try { if (Inst21 <= 1000 && typeof (v) != "undefined") {_RecordType("<935,936,28>",(v)); Inst21++; } } catch(e) {}
    basket.food = null;
try { if (Inst22 <= 1000 && typeof (basket.food) != "undefined") {_RecordType("<944,955,29>",(basket.food)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (basket) != "undefined") {_RecordType("<944,950,29>",(basket)); Inst23++; } } catch(e) {}

    for (var i = 0; i < 8 * 1024; i++) {
try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<978,979,31>",(i)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<985,986,31>",(i)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (i) != "undefined") {_RecordType("<999,1000,31>",(i)); Inst26++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (address) != "undefined") {_RecordType("<1043,1050,32>",(address)); Inst29++; } } catch(e) {}
      rooter[i] = 0x10000000000000 + address; // IEEE754!
try { if (Inst27 <= 1000 && typeof (rooter[i]) != "undefined") {_RecordType("<1012,1021,32>",(rooter[i])); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (rooter) != "undefined") {_RecordType("<1012,1018,32>",(rooter)); Inst28++; } } catch(e) {}
    }

try { if (Inst31 <= 1000 && typeof (v) != "undefined") {_RecordType("<1093,1094,35>",(v)); Inst31++; } } catch(e) {}
    return this[-1] = v;
try { if (Inst30 <= 1000 && typeof (this[-1]) != "undefined") {_RecordType("<1082,1090,35>",(this[-1])); Inst30++; } } catch(e) {}
  });

  for (var [key, value] in basket) {
try { if (Inst32 <= 1000 && typeof (key) != "undefined") {_RecordType("<1115,1118,38>",(key)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (value) != "undefined") {_RecordType("<1120,1125,38>",(value)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (basket) != "undefined") {_RecordType("<1130,1136,38>",(basket)); Inst34++; } } catch(e) {}
try { if (Inst35 <= 1000 && typeof (value.trigger) != "undefined") {_RecordType("<1144,1157,39>",(value.trigger)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (value) != "undefined") {_RecordType("<1144,1149,39>",(value)); Inst36++; } } catch(e) {}
    value.trigger;
  }

try { if (Inst37 <= 1000 && typeof (Array.prototype[0]) != "undefined") {_RecordType("<1173,1191,42>",(Array.prototype[0])); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<1173,1188,42>",(Array.prototype)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (Array) != "undefined") {_RecordType("<1173,1178,42>",(Array)); Inst39++; } } catch(e) {}
  delete Array.prototype[0];
try { if (Inst40 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1195,1208,43>",(reportCompare)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1209,1215,43>",(expect)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1217,1223,43>",(actual)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (summary) != "undefined") {_RecordType("<1225,1232,43>",(summary)); Inst43++; } } catch(e) {}
  reportCompare(expect, actual, summary);
}

