var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/*
 * Any copyright is dedicated to the Public Domain.
 * http://creativecommons.org/licenses/publicdomain/
 */
var gTestfile = "set-object-funky-length-detaches.js"; //-----------------------------------------------------------------------------
try { if (Inst0 <= 1000 && typeof (gTestfile) != "undefined") {_RecordType("<116,125,5>",(gTestfile)); Inst0++; } } catch(e) {}

var BUGNUMBER = 991981;
try { if (Inst1 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<252,261,7>",(BUGNUMBER)); Inst1++; } } catch(e) {}
var summary = "%TypedArray%.prototype.set(object w/funky length property, offset) " + "shouldn't misbehave if the funky length property detaches this typed " + "array's buffer";
try { if (Inst2 <= 1000 && typeof (summary) != "undefined") {_RecordType("<276,283,8>",(summary)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (print) != "undefined") {_RecordType("<450,455,9>",(print)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<456,465,9>",(BUGNUMBER)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (summary) != "undefined") {_RecordType("<475,482,9>",(summary)); Inst5++; } } catch(e) {}
print(BUGNUMBER + ": " + summary);
/**************
 * BEGIN TEST *
 **************/

try { if (Inst7 <= 1000 && typeof (Int8Array) != "undefined") {_RecordType("<548,557,14>",(Int8Array)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Uint8Array) != "undefined") {_RecordType("<559,569,14>",(Uint8Array)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Uint8ClampedArray) != "undefined") {_RecordType("<571,588,14>",(Uint8ClampedArray)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Int16Array) != "undefined") {_RecordType("<590,600,14>",(Int16Array)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Uint16Array) != "undefined") {_RecordType("<602,613,14>",(Uint16Array)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Int32Array) != "undefined") {_RecordType("<615,625,14>",(Int32Array)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Uint32Array) != "undefined") {_RecordType("<627,638,14>",(Uint32Array)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Float32Array) != "undefined") {_RecordType("<640,652,14>",(Float32Array)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Float64Array) != "undefined") {_RecordType("<654,666,14>",(Float64Array)); Inst15++; } } catch(e) {}
var ctors = [Int8Array, Uint8Array, Uint8ClampedArray, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array];
try { if (Inst6 <= 1000 && typeof (ctors) != "undefined") {_RecordType("<539,544,14>",(ctors)); Inst6++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (ctors.forEach) != "undefined") {_RecordType("<669,682,15>",(ctors.forEach)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (ctors) != "undefined") {_RecordType("<669,674,15>",(ctors)); Inst17++; } } catch(e) {}
ctors.forEach(function (TypedArray) {
try { if (Inst18 <= 1000 && typeof (TypedArray) != "undefined") {_RecordType("<693,703,15>",(TypedArray)); Inst18++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (ArrayBuffer) != "undefined") {_RecordType("<723,734,16>",(ArrayBuffer)); Inst20++; } } catch(e) {}
  var buf = new ArrayBuffer(512 * 1024);
try { if (Inst19 <= 1000 && typeof (buf) != "undefined") {_RecordType("<713,716,16>",(buf)); Inst19++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (TypedArray) != "undefined") {_RecordType("<763,773,17>",(TypedArray)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (buf) != "undefined") {_RecordType("<774,777,17>",(buf)); Inst23++; } } catch(e) {}
  var ta = new TypedArray(buf);
try { if (Inst21 <= 1000 && typeof (ta) != "undefined") {_RecordType("<754,756,17>",(ta)); Inst21++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (length) != "undefined") {_RecordType("<916,922,30>",(length)); Inst25++; } } catch(e) {}
  var arraylike = {
    0: 17,
    1: 42,
    2: 3,
    3: 99,
    4: 37,
    5: 9,
    6: 72,
    7: 31,
    8: 22,
    9: 0,

    get length() {
try { if (Inst26 <= 1000 && typeof (detachArrayBuffer) != "undefined") {_RecordType("<933,950,31>",(detachArrayBuffer)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (buf) != "undefined") {_RecordType("<951,954,31>",(buf)); Inst27++; } } catch(e) {}
      detachArrayBuffer(buf);
      return 10;
    }

  };
try { if (Inst24 <= 1000 && typeof (arraylike) != "undefined") {_RecordType("<786,795,18>",(arraylike)); Inst24++; } } catch(e) {}
  var passed = false;
try { if (Inst28 <= 1000 && typeof (passed) != "undefined") {_RecordType("<992,998,36>",(passed)); Inst28++; } } catch(e) {}

try { if (Inst32 <= 1000 && typeof (e) != "undefined") {_RecordType("<1059,1060,40>",(e)); Inst32++; } } catch(e) {}
  try {
try { if (Inst29 <= 1000 && typeof (ta.set) != "undefined") {_RecordType("<1021,1027,39>",(ta.set)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (ta) != "undefined") {_RecordType("<1021,1023,39>",(ta)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (arraylike) != "undefined") {_RecordType("<1028,1037,39>",(arraylike)); Inst31++; } } catch(e) {}
    ta.set(arraylike, 0x1234);
  } catch (e) {
    passed = true;
try { if (Inst33 <= 1000 && typeof (passed) != "undefined") {_RecordType("<1068,1074,41>",(passed)); Inst33++; } } catch(e) {}
  }

try { if (Inst34 <= 1000 && typeof (passed) != "undefined") {_RecordType("<1090,1096,44>",(passed)); Inst34++; } } catch(e) {}
  passed;
  true;
});
/******************************************************************************/

try { if (Inst35 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1203,1216,49>",(reportCompare)); Inst35++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst36 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1237,1250,50>",(reportCompare)); Inst36++; } } catch(e) {}
  reportCompare(true, true);
}

try { if (Inst37 <= 1000 && typeof (print) != "undefined") {_RecordType("<1267,1272,53>",(print)); Inst37++; } } catch(e) {}
print("Tests complete");

