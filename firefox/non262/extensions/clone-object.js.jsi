var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
var Inst102 = 0;
var Inst103 = 0;
var Inst104 = 0;
var Inst105 = 0;
var Inst106 = 0;
var Inst107 = 0;
var Inst108 = 0;
var Inst109 = 0;
var Inst110 = 0;
var Inst111 = 0;
var Inst112 = 0;
var Inst113 = 0;
var Inst114 = 0;
var Inst115 = 0;
var Inst116 = 0;
var Inst117 = 0;
var Inst118 = 0;
var Inst119 = 0;
var Inst120 = 0;
var Inst121 = 0;
var Inst122 = 0;
var Inst123 = 0;
var Inst124 = 0;
var Inst125 = 0;
var Inst126 = 0;
var Inst127 = 0;
var Inst128 = 0;
var Inst129 = 0;
var Inst130 = 0;
var Inst131 = 0;
var Inst132 = 0;
var Inst133 = 0;
var Inst134 = 0;
var Inst135 = 0;
var Inst136 = 0;
var Inst137 = 0;
var Inst138 = 0;
var Inst139 = 0;
var Inst140 = 0;
var Inst141 = 0;
var Inst142 = 0;
var Inst143 = 0;
var Inst144 = 0;
var Inst145 = 0;
var Inst146 = 0;
var Inst147 = 0;
var Inst148 = 0;
var Inst149 = 0;
var Inst150 = 0;
var Inst151 = 0;
var Inst152 = 0;
var Inst153 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// |reftest| skip-if(!xulRuntime.shell)
// -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 4 -*-
// Any copyright is dedicated to the Public Domain.
// http://creativecommons.org/licenses/publicdomain/
try { if (Inst0 <= 1000 && typeof (test) != "undefined") {_RecordType("<231,235,5>",(test)); Inst0++; } } catch(e) {}
function test() {
try { if (Inst2 <= 1000 && typeof (clone_object_check) != "undefined") {_RecordType("<254,272,6>",(clone_object_check)); Inst2++; } } catch(e) {}
  var check = clone_object_check;
try { if (Inst1 <= 1000 && typeof (check) != "undefined") {_RecordType("<246,251,6>",(check)); Inst1++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (check) != "undefined") {_RecordType("<276,281,7>",(check)); Inst3++; } } catch(e) {}
  check({});
try { if (Inst4 <= 1000 && typeof (check) != "undefined") {_RecordType("<289,294,8>",(check)); Inst4++; } } catch(e) {}
  check([]);
try { if (Inst5 <= 1000 && typeof (check) != "undefined") {_RecordType("<302,307,9>",(check)); Inst5++; } } catch(e) {}
  check({
    x: 0
  });
try { if (Inst6 <= 1000 && typeof (check) != "undefined") {_RecordType("<327,332,12>",(check)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<387,396,16>",(undefined)); Inst7++; } } catch(e) {}
  check({
    x: 0.7,
    p: "forty-two",
    y: null,
    z: undefined
  });
try { if (Inst8 <= 1000 && typeof (check) != "undefined") {_RecordType("<405,410,18>",(check)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<411,426,18>",(Array.prototype)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Array) != "undefined") {_RecordType("<411,416,18>",(Array)); Inst10++; } } catch(e) {}
  check(Array.prototype);
try { if (Inst11 <= 1000 && typeof (check) != "undefined") {_RecordType("<431,436,19>",(check)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<437,453,19>",(Object.prototype)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Object) != "undefined") {_RecordType("<437,443,19>",(Object)); Inst13++; } } catch(e) {}
  check(Object.prototype); // before and after

  var b, a; // Slow array.
try { if (Inst14 <= 1000 && typeof (b) != "undefined") {_RecordType("<483,484,21>",(b)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (a) != "undefined") {_RecordType("<486,487,21>",(a)); Inst15++; } } catch(e) {}

  b = [, 1, 2, 3];
try { if (Inst16 <= 1000 && typeof (b) != "undefined") {_RecordType("<507,508,23>",(b)); Inst16++; } } catch(e) {}
  b.expando = true;
try { if (Inst17 <= 1000 && typeof (b.expando) != "undefined") {_RecordType("<526,535,24>",(b.expando)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (b) != "undefined") {_RecordType("<526,527,24>",(b)); Inst18++; } } catch(e) {}
  b[5] = 5;
try { if (Inst19 <= 1000 && typeof (b[5]) != "undefined") {_RecordType("<546,550,25>",(b[5])); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (b) != "undefined") {_RecordType("<546,547,25>",(b)); Inst20++; } } catch(e) {}
  b[0] = 0;
try { if (Inst21 <= 1000 && typeof (b[0]) != "undefined") {_RecordType("<558,562,26>",(b[0])); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (b) != "undefined") {_RecordType("<558,559,26>",(b)); Inst22++; } } catch(e) {}
  b[4] = 4;
try { if (Inst23 <= 1000 && typeof (b[4]) != "undefined") {_RecordType("<570,574,27>",(b[4])); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (b) != "undefined") {_RecordType("<570,571,27>",(b)); Inst24++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (b[2]) != "undefined") {_RecordType("<589,593,28>",(b[2])); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (b) != "undefined") {_RecordType("<589,590,28>",(b)); Inst26++; } } catch(e) {}
  delete b[2];
try { if (Inst27 <= 1000 && typeof (check) != "undefined") {_RecordType("<597,602,29>",(check)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (b) != "undefined") {_RecordType("<603,604,29>",(b)); Inst28++; } } catch(e) {}
  check(b); // Check cloning properties other than basic data properties. (check()
  // asserts that the properties of the clone are configurable, writable,
  // enumerable data properties.)

  b = {};
try { if (Inst29 <= 1000 && typeof (b) != "undefined") {_RecordType("<789,790,33>",(b)); Inst29++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (Object.defineProperties) != "undefined") {_RecordType("<799,822,34>",(Object.defineProperties)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (Object) != "undefined") {_RecordType("<799,805,34>",(Object)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (b) != "undefined") {_RecordType("<823,824,34>",(b)); Inst32++; } } catch(e) {}
  Object.defineProperties(b, {
    x: {
      enumerable: true,
      get: function () {
        return 12479;
      }
    },
    y: {
      enumerable: true,
      configurable: true,
      writable: false,
      value: 0
    },
    z: {
      enumerable: true,
      configurable: false,
      writable: true,
      value: 0
    },
    hidden: {
      enumerable: false,
      value: 1334
    }
  });
try { if (Inst33 <= 1000 && typeof (check) != "undefined") {_RecordType("<1202,1207,58>",(check)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (b) != "undefined") {_RecordType("<1208,1209,58>",(b)); Inst34++; } } catch(e) {}
  check(b); // Check corner cases involving property names.

  b = {
    "-1": -1,
    0xffffffff: null,
    0x100000000: null,
    "": 0,
    "\xff\x7f\u7fff\uffff\ufeff\ufffe": 1,
    // random unicode id
    "\ud800 \udbff \udc00 \udfff": 2
  }; // busted surrogate pairs
try { if (Inst35 <= 1000 && typeof (b) != "undefined") {_RecordType("<1263,1264,60>",(b)); Inst35++; } } catch(e) {}

try { if (Inst36 <= 1000 && typeof (check) != "undefined") {_RecordType("<1478,1483,70>",(check)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (b) != "undefined") {_RecordType("<1484,1485,70>",(b)); Inst37++; } } catch(e) {}
  check(b);
  b = [];
try { if (Inst38 <= 1000 && typeof (b) != "undefined") {_RecordType("<1490,1491,71>",(b)); Inst38++; } } catch(e) {}
  b[-1] = -1;
try { if (Inst39 <= 1000 && typeof (b[-1]) != "undefined") {_RecordType("<1500,1505,72>",(b[-1])); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (b) != "undefined") {_RecordType("<1500,1501,72>",(b)); Inst40++; } } catch(e) {}
  b[0xffffffff] = null;
try { if (Inst41 <= 1000 && typeof (b[0xffffffff]) != "undefined") {_RecordType("<1514,1527,73>",(b[0xffffffff])); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (b) != "undefined") {_RecordType("<1514,1515,73>",(b)); Inst42++; } } catch(e) {}
  b[0x100000000] = null;
try { if (Inst43 <= 1000 && typeof (b[0x100000000]) != "undefined") {_RecordType("<1538,1552,74>",(b[0x100000000])); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (b) != "undefined") {_RecordType("<1538,1539,74>",(b)); Inst44++; } } catch(e) {}
  b[""] = 0;
try { if (Inst45 <= 1000 && typeof (b[""]) != "undefined") {_RecordType("<1563,1568,75>",(b[""])); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (b) != "undefined") {_RecordType("<1563,1564,75>",(b)); Inst46++; } } catch(e) {}
  b["\xff\x7f\u7fff\uffff\ufeff\ufffe"] = 1;
try { if (Inst47 <= 1000 && typeof (b["\xff\x7f\u7fff\uffff\ufeff\ufffe"]) != "undefined") {_RecordType("<1576,1613,76>",(b["\xff\x7f\u7fff\uffff\ufeff\ufffe"])); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (b) != "undefined") {_RecordType("<1576,1577,76>",(b)); Inst48++; } } catch(e) {}
  b["\ud800 \udbff \udc00 \udfff"] = 2;
try { if (Inst49 <= 1000 && typeof (b["\ud800 \udbff \udc00 \udfff"]) != "undefined") {_RecordType("<1621,1653,77>",(b["\ud800 \udbff \udc00 \udfff"])); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (b) != "undefined") {_RecordType("<1621,1622,77>",(b)); Inst50++; } } catch(e) {}
try { if (Inst51 <= 1000 && typeof (check) != "undefined") {_RecordType("<1661,1666,78>",(check)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (b) != "undefined") {_RecordType("<1667,1668,78>",(b)); Inst52++; } } catch(e) {}
  check(b); // Check that array's .length property is cloned.

try { if (Inst54 <= 1000 && typeof (Array) != "undefined") {_RecordType("<1728,1733,80>",(Array)); Inst54++; } } catch(e) {}
  b = Array(5);
try { if (Inst53 <= 1000 && typeof (b) != "undefined") {_RecordType("<1724,1725,80>",(b)); Inst53++; } } catch(e) {}
try { if (Inst55 <= 1000 && typeof (b.length) != "undefined") {_RecordType("<1740,1748,81>",(b.length)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (b) != "undefined") {_RecordType("<1740,1741,81>",(b)); Inst56++; } } catch(e) {}
  b.length;
  5;
try { if (Inst58 <= 1000 && typeof (check) != "undefined") {_RecordType("<1761,1766,83>",(check)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (b) != "undefined") {_RecordType("<1767,1768,83>",(b)); Inst59++; } } catch(e) {}
  a = check(b);
try { if (Inst57 <= 1000 && typeof (a) != "undefined") {_RecordType("<1757,1758,83>",(a)); Inst57++; } } catch(e) {}
try { if (Inst60 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<1773,1781,84>",(a.length)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (a) != "undefined") {_RecordType("<1773,1774,84>",(a)); Inst61++; } } catch(e) {}
  a.length;
  5;
try { if (Inst63 <= 1000 && typeof (Array) != "undefined") {_RecordType("<1794,1799,86>",(Array)); Inst63++; } } catch(e) {}
  b = Array(0);
try { if (Inst62 <= 1000 && typeof (b) != "undefined") {_RecordType("<1790,1791,86>",(b)); Inst62++; } } catch(e) {}
  b[1] = "ok";
try { if (Inst64 <= 1000 && typeof (b[1]) != "undefined") {_RecordType("<1806,1810,87>",(b[1])); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (b) != "undefined") {_RecordType("<1806,1807,87>",(b)); Inst65++; } } catch(e) {}
try { if (Inst67 <= 1000 && typeof (check) != "undefined") {_RecordType("<1825,1830,88>",(check)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (b) != "undefined") {_RecordType("<1831,1832,88>",(b)); Inst68++; } } catch(e) {}
  a = check(b);
try { if (Inst66 <= 1000 && typeof (a) != "undefined") {_RecordType("<1821,1822,88>",(a)); Inst66++; } } catch(e) {}
try { if (Inst69 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<1837,1845,89>",(a.length)); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (a) != "undefined") {_RecordType("<1837,1838,89>",(a)); Inst70++; } } catch(e) {}
  a.length;
  2;
  // Check that prototypes are not cloned, per spec.
try { if (Inst72 <= 1000 && typeof (Object.create) != "undefined") {_RecordType("<1911,1924,92>",(Object.create)); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1911,1917,92>",(Object)); Inst73++; } } catch(e) {}
  b = Object.create({
    x: 1
  });
try { if (Inst71 <= 1000 && typeof (b) != "undefined") {_RecordType("<1907,1908,92>",(b)); Inst71++; } } catch(e) {}
  b.y = 2;
try { if (Inst74 <= 1000 && typeof (b.y) != "undefined") {_RecordType("<1944,1947,95>",(b.y)); Inst74++; } } catch(e) {}try { if (Inst75 <= 1000 && typeof (b) != "undefined") {_RecordType("<1944,1945,95>",(b)); Inst75++; } } catch(e) {}
  b.z = 3;
try { if (Inst76 <= 1000 && typeof (b.z) != "undefined") {_RecordType("<1955,1958,96>",(b.z)); Inst76++; } } catch(e) {}try { if (Inst77 <= 1000 && typeof (b) != "undefined") {_RecordType("<1955,1956,96>",(b)); Inst77++; } } catch(e) {}
try { if (Inst78 <= 1000 && typeof (check) != "undefined") {_RecordType("<1966,1971,97>",(check)); Inst78++; } } catch(e) {}try { if (Inst79 <= 1000 && typeof (b) != "undefined") {_RecordType("<1972,1973,97>",(b)); Inst79++; } } catch(e) {}
  check(b); // Check that cloning does not separate merge points in the tree.

  var same = {};
try { if (Inst80 <= 1000 && typeof (same) != "undefined") {_RecordType("<2049,2053,99>",(same)); Inst80++; } } catch(e) {}
try { if (Inst82 <= 1000 && typeof (same) != "undefined") {_RecordType("<2077,2081,101>",(same)); Inst82++; } } catch(e) {}try { if (Inst83 <= 1000 && typeof (same) != "undefined") {_RecordType("<2092,2096,102>",(same)); Inst83++; } } catch(e) {}
  b = {
    one: same,
    two: same
  };
try { if (Inst81 <= 1000 && typeof (b) != "undefined") {_RecordType("<2062,2063,100>",(b)); Inst81++; } } catch(e) {}
try { if (Inst85 <= 1000 && typeof (check) != "undefined") {_RecordType("<2108,2113,104>",(check)); Inst85++; } } catch(e) {}try { if (Inst86 <= 1000 && typeof (b) != "undefined") {_RecordType("<2114,2115,104>",(b)); Inst86++; } } catch(e) {}
  a = check(b);
try { if (Inst84 <= 1000 && typeof (a) != "undefined") {_RecordType("<2104,2105,104>",(a)); Inst84++; } } catch(e) {}
try { if (Inst87 <= 1000 && typeof (a.one) != "undefined") {_RecordType("<2120,2125,105>",(a.one)); Inst87++; } } catch(e) {}try { if (Inst88 <= 1000 && typeof (a) != "undefined") {_RecordType("<2120,2121,105>",(a)); Inst88++; } } catch(e) {}try { if (Inst89 <= 1000 && typeof (a.two) != "undefined") {_RecordType("<2130,2135,105>",(a.two)); Inst89++; } } catch(e) {}try { if (Inst90 <= 1000 && typeof (a) != "undefined") {_RecordType("<2130,2131,105>",(a)); Inst90++; } } catch(e) {}
  a.one === a.two;
  true;
try { if (Inst92 <= 1000 && typeof (same) != "undefined") {_RecordType("<2152,2156,107>",(same)); Inst92++; } } catch(e) {}try { if (Inst93 <= 1000 && typeof (same) != "undefined") {_RecordType("<2158,2162,107>",(same)); Inst93++; } } catch(e) {}
  b = [same, same];
try { if (Inst91 <= 1000 && typeof (b) != "undefined") {_RecordType("<2147,2148,107>",(b)); Inst91++; } } catch(e) {}
try { if (Inst95 <= 1000 && typeof (check) != "undefined") {_RecordType("<2171,2176,108>",(check)); Inst95++; } } catch(e) {}try { if (Inst96 <= 1000 && typeof (b) != "undefined") {_RecordType("<2177,2178,108>",(b)); Inst96++; } } catch(e) {}
  a = check(b);
try { if (Inst94 <= 1000 && typeof (a) != "undefined") {_RecordType("<2167,2168,108>",(a)); Inst94++; } } catch(e) {}
try { if (Inst97 <= 1000 && typeof (a[0]) != "undefined") {_RecordType("<2183,2187,109>",(a[0])); Inst97++; } } catch(e) {}try { if (Inst98 <= 1000 && typeof (a) != "undefined") {_RecordType("<2183,2184,109>",(a)); Inst98++; } } catch(e) {}try { if (Inst99 <= 1000 && typeof (a[1]) != "undefined") {_RecordType("<2192,2196,109>",(a[1])); Inst99++; } } catch(e) {}try { if (Inst100 <= 1000 && typeof (a) != "undefined") {_RecordType("<2192,2193,109>",(a)); Inst100++; } } catch(e) {}
  a[0] === a[1];
  true;

  /*
    XXX TODO spin this out into its own test
  // This fails quickly with an OOM error. An exception would be nicer.
  function Infinitree() {
      return { get left() { return new Infinitree; },
               get right() { return new Infinitree; }};
  }
  var threw = false;
  try {
      serialize(new Infinitree);
  } catch (exc) {
      threw = true;
  }
  assertEq(threw, true);
  */
  // Clone an array with holes.
try { if (Inst101 <= 1000 && typeof (check) != "undefined") {_RecordType("<2637,2642,128>",(check)); Inst101++; } } catch(e) {}
  check([0, 1, 2,, 4, 5, 6]); // Array holes should not take up space.

  b = [];
try { if (Inst102 <= 1000 && typeof (b) != "undefined") {_RecordType("<2709,2710,130>",(b)); Inst102++; } } catch(e) {}
  b[255] = 1;
try { if (Inst103 <= 1000 && typeof (b[255]) != "undefined") {_RecordType("<2719,2725,131>",(b[255])); Inst103++; } } catch(e) {}try { if (Inst104 <= 1000 && typeof (b) != "undefined") {_RecordType("<2719,2720,131>",(b)); Inst104++; } } catch(e) {}
try { if (Inst105 <= 1000 && typeof (check) != "undefined") {_RecordType("<2733,2738,132>",(check)); Inst105++; } } catch(e) {}try { if (Inst106 <= 1000 && typeof (b) != "undefined") {_RecordType("<2739,2740,132>",(b)); Inst106++; } } catch(e) {}
  check(b);
try { if (Inst107 <= 1000 && typeof (serialize(b).clonebuffer.length) != "undefined") {_RecordType("<2745,2776,133>",(serialize(b).clonebuffer.length)); Inst107++; } } catch(e) {}try { if (Inst108 <= 1000 && typeof (serialize(b).clonebuffer) != "undefined") {_RecordType("<2745,2769,133>",(serialize(b).clonebuffer)); Inst108++; } } catch(e) {}try { if (Inst109 <= 1000 && typeof (serialize) != "undefined") {_RecordType("<2745,2754,133>",(serialize)); Inst109++; } } catch(e) {}try { if (Inst110 <= 1000 && typeof (b) != "undefined") {_RecordType("<2755,2756,133>",(b)); Inst110++; } } catch(e) {}
  serialize(b).clonebuffer.length < 255;
  true;
  // Check that trailing holes in an array are preserved.
  b = [1, 2, 3,,];
try { if (Inst111 <= 1000 && typeof (b) != "undefined") {_RecordType("<2852,2853,136>",(b)); Inst111++; } } catch(e) {}
try { if (Inst112 <= 1000 && typeof (b.length) != "undefined") {_RecordType("<2871,2879,137>",(b.length)); Inst112++; } } catch(e) {}try { if (Inst113 <= 1000 && typeof (b) != "undefined") {_RecordType("<2871,2872,137>",(b)); Inst113++; } } catch(e) {}
  b.length;
  4;
try { if (Inst115 <= 1000 && typeof (check) != "undefined") {_RecordType("<2892,2897,139>",(check)); Inst115++; } } catch(e) {}try { if (Inst116 <= 1000 && typeof (b) != "undefined") {_RecordType("<2898,2899,139>",(b)); Inst116++; } } catch(e) {}
  a = check(b);
try { if (Inst114 <= 1000 && typeof (a) != "undefined") {_RecordType("<2888,2889,139>",(a)); Inst114++; } } catch(e) {}
try { if (Inst117 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<2904,2912,140>",(a.length)); Inst117++; } } catch(e) {}try { if (Inst118 <= 1000 && typeof (a) != "undefined") {_RecordType("<2904,2905,140>",(a)); Inst118++; } } catch(e) {}
  a.length;
  4;
try { if (Inst119 <= 1000 && typeof (a.toString) != "undefined") {_RecordType("<2921,2931,142>",(a.toString)); Inst119++; } } catch(e) {}try { if (Inst120 <= 1000 && typeof (a) != "undefined") {_RecordType("<2921,2922,142>",(a)); Inst120++; } } catch(e) {}
  a.toString();
  "1,2,3,";
  b = [1, 2, 3,,,];
try { if (Inst121 <= 1000 && typeof (b) != "undefined") {_RecordType("<2949,2950,144>",(b)); Inst121++; } } catch(e) {}
try { if (Inst122 <= 1000 && typeof (b.length) != "undefined") {_RecordType("<2969,2977,145>",(b.length)); Inst122++; } } catch(e) {}try { if (Inst123 <= 1000 && typeof (b) != "undefined") {_RecordType("<2969,2970,145>",(b)); Inst123++; } } catch(e) {}
  b.length;
  5;
try { if (Inst125 <= 1000 && typeof (check) != "undefined") {_RecordType("<2990,2995,147>",(check)); Inst125++; } } catch(e) {}try { if (Inst126 <= 1000 && typeof (b) != "undefined") {_RecordType("<2996,2997,147>",(b)); Inst126++; } } catch(e) {}
  a = check(b);
try { if (Inst124 <= 1000 && typeof (a) != "undefined") {_RecordType("<2986,2987,147>",(a)); Inst124++; } } catch(e) {}
try { if (Inst127 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<3002,3010,148>",(a.length)); Inst127++; } } catch(e) {}try { if (Inst128 <= 1000 && typeof (a) != "undefined") {_RecordType("<3002,3003,148>",(a)); Inst128++; } } catch(e) {}
  a.length;
  5;
try { if (Inst129 <= 1000 && typeof (a.toString) != "undefined") {_RecordType("<3019,3029,150>",(a.toString)); Inst129++; } } catch(e) {}try { if (Inst130 <= 1000 && typeof (a) != "undefined") {_RecordType("<3019,3020,150>",(a)); Inst130++; } } catch(e) {}
  a.toString();
  "1,2,3,,";
  // Self-modifying object.
  // This should never read through to b's prototype.
try { if (Inst132 <= 1000 && typeof (Object.create) != "undefined") {_RecordType("<3134,3147,154>",(Object.create)); Inst132++; } } catch(e) {}try { if (Inst133 <= 1000 && typeof (Object) != "undefined") {_RecordType("<3134,3140,154>",(Object)); Inst133++; } } catch(e) {}
  b = Object.create({
    y: 2
  }, {
    x: {
      enumerable: true,
      configurable: true,
      get: function () {
try { if (Inst134 <= 1000 && typeof (this.hasOwnProperty) != "undefined") {_RecordType("<3262,3281,161>",(this.hasOwnProperty)); Inst134++; } } catch(e) {}
        if (this.hasOwnProperty("y")) {
try { if (Inst135 <= 1000 && typeof (this.y) != "undefined") {_RecordType("<3307,3313,162>",(this.y)); Inst135++; } } catch(e) {}
          delete this.y;
        }

        return 1;
      }
    },
    y: {
      enumerable: true,
      configurable: true,
      writable: true,
      value: 3
    }
  });
try { if (Inst131 <= 1000 && typeof (b) != "undefined") {_RecordType("<3130,3131,154>",(b)); Inst131++; } } catch(e) {}
try { if (Inst136 <= 1000 && typeof (check) != "undefined") {_RecordType("<3469,3474,175>",(check)); Inst136++; } } catch(e) {}try { if (Inst137 <= 1000 && typeof (b) != "undefined") {_RecordType("<3475,3476,175>",(b)); Inst137++; } } catch(e) {}
  check(b, "selfModifyingObject"); // Ignore properties with object-ids.

  var uri = "http://example.net";
try { if (Inst138 <= 1000 && typeof (uri) != "undefined") {_RecordType("<3547,3550,177>",(uri)); Inst138++; } } catch(e) {}
  b = {
    x: 1,
    y: 2
  };
try { if (Inst139 <= 1000 && typeof (b) != "undefined") {_RecordType("<3577,3578,178>",(b)); Inst139++; } } catch(e) {}
try { if (Inst140 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<3609,3630,182>",(Object.defineProperty)); Inst140++; } } catch(e) {}try { if (Inst141 <= 1000 && typeof (Object) != "undefined") {_RecordType("<3609,3615,182>",(Object)); Inst141++; } } catch(e) {}try { if (Inst142 <= 1000 && typeof (b) != "undefined") {_RecordType("<3631,3632,182>",(b)); Inst142++; } } catch(e) {}try { if (Inst143 <= 1000 && typeof (Array) != "undefined") {_RecordType("<3634,3639,182>",(Array)); Inst143++; } } catch(e) {}try { if (Inst144 <= 1000 && typeof (uri) != "undefined") {_RecordType("<3640,3643,182>",(uri)); Inst144++; } } catch(e) {}
  Object.defineProperty(b, Array(uri, "x"), {
    enumerable: true,
    value: 3
  });
try { if (Inst145 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<3696,3717,186>",(Object.defineProperty)); Inst145++; } } catch(e) {}try { if (Inst146 <= 1000 && typeof (Object) != "undefined") {_RecordType("<3696,3702,186>",(Object)); Inst146++; } } catch(e) {}try { if (Inst147 <= 1000 && typeof (b) != "undefined") {_RecordType("<3718,3719,186>",(b)); Inst147++; } } catch(e) {}try { if (Inst148 <= 1000 && typeof (Array) != "undefined") {_RecordType("<3721,3726,186>",(Array)); Inst148++; } } catch(e) {}try { if (Inst149 <= 1000 && typeof (uri) != "undefined") {_RecordType("<3727,3730,186>",(uri)); Inst149++; } } catch(e) {}
  Object.defineProperty(b, Array(uri, "y"), {
    enumerable: true,
    value: 5
  });
try { if (Inst150 <= 1000 && typeof (check) != "undefined") {_RecordType("<3783,3788,190>",(check)); Inst150++; } } catch(e) {}try { if (Inst151 <= 1000 && typeof (b) != "undefined") {_RecordType("<3789,3790,190>",(b)); Inst151++; } } catch(e) {}
  check(b);
}

try { if (Inst152 <= 1000 && typeof (test) != "undefined") {_RecordType("<3796,3800,193>",(test)); Inst152++; } } catch(e) {}
test();
try { if (Inst153 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<3804,3817,194>",(reportCompare)); Inst153++; } } catch(e) {}
reportCompare(0, 0, 'ok');

