var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* -*- tab-width: 2; indent-tabs-mode: nil; js-indent-level: 2 -*- */

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
//-----------------------------------------------------------------------------
var BUGNUMBER = 313763;
try { if (Inst0 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<360,369,7>",(BUGNUMBER)); Inst0++; } } catch(e) {}
var summary = 'Root jsarray.c creatures';
try { if (Inst1 <= 1000 && typeof (summary) != "undefined") {_RecordType("<384,391,8>",(summary)); Inst1++; } } catch(e) {}
var actual = '';
try { if (Inst2 <= 1000 && typeof (actual) != "undefined") {_RecordType("<426,432,9>",(actual)); Inst2++; } } catch(e) {}
var expect = '';
try { if (Inst3 <= 1000 && typeof (expect) != "undefined") {_RecordType("<443,449,10>",(expect)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (printBugNumber) != "undefined") {_RecordType("<456,470,11>",(printBugNumber)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<471,480,11>",(BUGNUMBER)); Inst5++; } } catch(e) {}
printBugNumber(BUGNUMBER);
try { if (Inst6 <= 1000 && typeof (printStatus) != "undefined") {_RecordType("<483,494,12>",(printStatus)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (summary) != "undefined") {_RecordType("<495,502,12>",(summary)); Inst7++; } } catch(e) {}
printStatus(summary);
try { if (Inst8 <= 1000 && typeof (printStatus) != "undefined") {_RecordType("<505,516,13>",(printStatus)); Inst8++; } } catch(e) {}
printStatus('This bug requires TOO_MUCH_GC');
var N = 0x80000002;
try { if (Inst9 <= 1000 && typeof (N) != "undefined") {_RecordType("<555,556,14>",(N)); Inst9++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (Array) != "undefined") {_RecordType("<583,588,15>",(Array)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (N) != "undefined") {_RecordType("<589,590,15>",(N)); Inst12++; } } catch(e) {}
var array = Array(N);
try { if (Inst10 <= 1000 && typeof (array) != "undefined") {_RecordType("<575,580,15>",(array)); Inst10++; } } catch(e) {}
array[N - 1] = 1;
try { if (Inst13 <= 1000 && typeof (array[N - 1]) != "undefined") {_RecordType("<593,605,16>",(array[N - 1])); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (array) != "undefined") {_RecordType("<593,598,16>",(array)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (N) != "undefined") {_RecordType("<599,600,16>",(N)); Inst15++; } } catch(e) {}
array[N - 2] = 2; // Set getter not to wait until engine loops through 2^31 holes in the array.
try { if (Inst16 <= 1000 && typeof (array[N - 2]) != "undefined") {_RecordType("<611,623,17>",(array[N - 2])); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (array) != "undefined") {_RecordType("<611,616,17>",(array)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (N) != "undefined") {_RecordType("<617,618,17>",(N)); Inst18++; } } catch(e) {}

var LOOP_TERMINATOR = "stop_long_loop";
try { if (Inst19 <= 1000 && typeof (LOOP_TERMINATOR) != "undefined") {_RecordType("<712,727,19>",(LOOP_TERMINATOR)); Inst19++; } } catch(e) {}

try { if (Inst20 <= 1000 && typeof (array.__defineGetter__) != "undefined") {_RecordType("<749,771,21>",(array.__defineGetter__)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (array) != "undefined") {_RecordType("<749,754,21>",(array)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (N) != "undefined") {_RecordType("<772,773,21>",(N)); Inst22++; } } catch(e) {}
array.__defineGetter__(N - 2, function () {
  throw "stop_long_loop";
});

try { if (Inst24 <= 1000 && typeof (String) != "undefined") {_RecordType("<846,852,25>",(String)); Inst24++; } } catch(e) {}
var prepared_string = String(1);
try { if (Inst23 <= 1000 && typeof (prepared_string) != "undefined") {_RecordType("<828,843,25>",(prepared_string)); Inst23++; } } catch(e) {}

try { if (Inst25 <= 1000 && typeof (array.__defineGetter__) != "undefined") {_RecordType("<858,880,27>",(array.__defineGetter__)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (array) != "undefined") {_RecordType("<858,863,27>",(array)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (N) != "undefined") {_RecordType("<881,882,27>",(N)); Inst27++; } } catch(e) {}
array.__defineGetter__(N - 1, function () {
try { if (Inst29 <= 1000 && typeof (prepared_string) != "undefined") {_RecordType("<914,929,28>",(prepared_string)); Inst29++; } } catch(e) {}
  var tmp = prepared_string;
try { if (Inst28 <= 1000 && typeof (tmp) != "undefined") {_RecordType("<908,911,28>",(tmp)); Inst28++; } } catch(e) {}
  prepared_string = null;
try { if (Inst30 <= 1000 && typeof (prepared_string) != "undefined") {_RecordType("<933,948,29>",(prepared_string)); Inst30++; } } catch(e) {}
try { if (Inst31 <= 1000 && typeof (tmp) != "undefined") {_RecordType("<966,969,30>",(tmp)); Inst31++; } } catch(e) {}
  return tmp;
});

try { if (Inst34 <= 1000 && typeof (e) != "undefined") {_RecordType("<1011,1012,35>",(e)); Inst34++; } } catch(e) {}
try {
try { if (Inst32 <= 1000 && typeof (array.unshift) != "undefined") {_RecordType("<984,997,34>",(array.unshift)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (array) != "undefined") {_RecordType("<984,989,34>",(array)); Inst33++; } } catch(e) {}
  array.unshift(1);
} catch (e) {
try { if (Inst35 <= 1000 && typeof (e) != "undefined") {_RecordType("<1022,1023,36>",(e)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (LOOP_TERMINATOR) != "undefined") {_RecordType("<1028,1043,36>",(LOOP_TERMINATOR)); Inst36++; } } catch(e) {}
  if (e !== LOOP_TERMINATOR) {
try { if (Inst37 <= 1000 && typeof (e) != "undefined") {_RecordType("<1057,1058,37>",(e)); Inst37++; } } catch(e) {}
    throw e;
  }
}

var expect = "1";
try { if (Inst38 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1071,1077,41>",(expect)); Inst38++; } } catch(e) {}
try { if (Inst40 <= 1000 && typeof (array[N]) != "undefined") {_RecordType("<1098,1106,42>",(array[N])); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (array) != "undefined") {_RecordType("<1098,1103,42>",(array)); Inst41++; } } catch(e) {}
var actual = array[N];
try { if (Inst39 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1089,1095,42>",(actual)); Inst39++; } } catch(e) {}
try { if (Inst42 <= 1000 && typeof (printStatus) != "undefined") {_RecordType("<1108,1119,43>",(printStatus)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1120,1126,43>",(expect)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1131,1137,43>",(actual)); Inst44++; } } catch(e) {}
printStatus(expect === actual);
try { if (Inst45 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1140,1153,44>",(reportCompare)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1154,1160,44>",(expect)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1162,1168,44>",(actual)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (summary) != "undefined") {_RecordType("<1170,1177,44>",(summary)); Inst48++; } } catch(e) {}
reportCompare(expect, actual, summary);

