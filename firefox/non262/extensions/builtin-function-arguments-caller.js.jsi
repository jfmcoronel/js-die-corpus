var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/*
 * Any copyright is dedicated to the Public Domain.
 * http://creativecommons.org/licenses/publicdomain/
 */
var gTestfile = 'builtin-function-arguments-caller.js';
try { if (Inst0 <= 1000 && typeof (gTestfile) != "undefined") {_RecordType("<116,125,5>",(gTestfile)); Inst0++; } } catch(e) {}
var BUGNUMBER = 929642;
try { if (Inst1 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<172,181,6>",(BUGNUMBER)); Inst1++; } } catch(e) {}
var summary = "Built-in functions defined in ECMAScript pick up arguments/caller " + "properties from Function.prototype";
try { if (Inst2 <= 1000 && typeof (summary) != "undefined") {_RecordType("<196,203,7>",(summary)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (print) != "undefined") {_RecordType("<315,320,8>",(print)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<321,330,8>",(BUGNUMBER)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (summary) != "undefined") {_RecordType("<340,347,8>",(summary)); Inst5++; } } catch(e) {}
print(BUGNUMBER + ": " + summary);
/**************
 * BEGIN TEST *
 **************/

try { if (Inst6 <= 1000 && typeof (expectNoProperty) != "undefined") {_RecordType("<409,425,13>",(expectNoProperty)); Inst6++; } } catch(e) {}
function expectNoProperty(obj, prop) {
try { if (Inst7 <= 1000 && typeof (obj) != "undefined") {_RecordType("<426,429,13>",(obj)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (prop) != "undefined") {_RecordType("<431,435,13>",(prop)); Inst8++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<452,483,14>",(Object.getOwnPropertyDescriptor)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Object) != "undefined") {_RecordType("<452,458,14>",(Object)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (obj) != "undefined") {_RecordType("<484,487,14>",(obj)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (prop) != "undefined") {_RecordType("<489,493,14>",(prop)); Inst13++; } } catch(e) {}
  var desc = Object.getOwnPropertyDescriptor(obj, prop);
try { if (Inst9 <= 1000 && typeof (desc) != "undefined") {_RecordType("<445,449,14>",(desc)); Inst9++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (desc) != "undefined") {_RecordType("<498,502,15>",(desc)); Inst14++; } } catch(e) {}
  desc;
try { if (Inst15 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<506,515,16>",(undefined)); Inst15++; } } catch(e) {}
  undefined;
try { if (Inst16 <= 1000 && typeof (prop) != "undefined") {_RecordType("<538,542,17>",(prop)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (obj) != "undefined") {_RecordType("<564,567,17>",(obj)); Inst17++; } } catch(e) {}
  "should be no '" + prop + "' property on " + obj;
} // Test a builtin that's native.


try { if (Inst18 <= 1000 && typeof (expectNoProperty) != "undefined") {_RecordType("<606,622,21>",(expectNoProperty)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Object) != "undefined") {_RecordType("<623,629,21>",(Object)); Inst19++; } } catch(e) {}
expectNoProperty(Object, "arguments");
try { if (Inst20 <= 1000 && typeof (expectNoProperty) != "undefined") {_RecordType("<645,661,22>",(expectNoProperty)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Object) != "undefined") {_RecordType("<662,668,22>",(Object)); Inst21++; } } catch(e) {}
expectNoProperty(Object, "caller"); // Also test a builtin that's self-hosted.

try { if (Inst22 <= 1000 && typeof (expectNoProperty) != "undefined") {_RecordType("<725,741,24>",(expectNoProperty)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Array.prototype.indexOf) != "undefined") {_RecordType("<742,765,24>",(Array.prototype.indexOf)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<742,757,24>",(Array.prototype)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Array) != "undefined") {_RecordType("<742,747,24>",(Array)); Inst25++; } } catch(e) {}
expectNoProperty(Array.prototype.indexOf, "arguments");
try { if (Inst26 <= 1000 && typeof (expectNoProperty) != "undefined") {_RecordType("<781,797,25>",(expectNoProperty)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (Array.prototype.indexOf) != "undefined") {_RecordType("<798,821,25>",(Array.prototype.indexOf)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<798,813,25>",(Array.prototype)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (Array) != "undefined") {_RecordType("<798,803,25>",(Array)); Inst29++; } } catch(e) {}
expectNoProperty(Array.prototype.indexOf, "caller"); // Test the Function construct for good measure, because it's so intricately
// invovled in bootstrapping.

try { if (Inst30 <= 1000 && typeof (expectNoProperty) != "undefined") {_RecordType("<942,958,28>",(expectNoProperty)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (Function) != "undefined") {_RecordType("<959,967,28>",(Function)); Inst31++; } } catch(e) {}
expectNoProperty(Function, "arguments");
try { if (Inst32 <= 1000 && typeof (expectNoProperty) != "undefined") {_RecordType("<983,999,29>",(expectNoProperty)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (Function) != "undefined") {_RecordType("<1000,1008,29>",(Function)); Inst33++; } } catch(e) {}
expectNoProperty(Function, "caller");
try { if (Inst35 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<1036,1067,30>",(Object.getOwnPropertyDescriptor)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1036,1042,30>",(Object)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (Function.prototype) != "undefined") {_RecordType("<1068,1086,30>",(Function.prototype)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (Function) != "undefined") {_RecordType("<1068,1076,30>",(Function)); Inst38++; } } catch(e) {}
var argsDesc = Object.getOwnPropertyDescriptor(Function.prototype, "arguments");
try { if (Inst34 <= 1000 && typeof (argsDesc) != "undefined") {_RecordType("<1025,1033,30>",(argsDesc)); Inst34++; } } catch(e) {}
try { if (Inst40 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<1119,1150,31>",(Object.getOwnPropertyDescriptor)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1119,1125,31>",(Object)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (Function.prototype) != "undefined") {_RecordType("<1151,1169,31>",(Function.prototype)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (Function) != "undefined") {_RecordType("<1151,1159,31>",(Function)); Inst43++; } } catch(e) {}
var callerDesc = Object.getOwnPropertyDescriptor(Function.prototype, "caller");
try { if (Inst39 <= 1000 && typeof (callerDesc) != "undefined") {_RecordType("<1106,1116,31>",(callerDesc)); Inst39++; } } catch(e) {}
try { if (Inst45 <= 1000 && typeof (argsDesc.get) != "undefined") {_RecordType("<1196,1208,32>",(argsDesc.get)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (argsDesc) != "undefined") {_RecordType("<1196,1204,32>",(argsDesc)); Inst46++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (argsDesc.set) != "undefined") {_RecordType("<1224,1236,33>",(argsDesc.set)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (argsDesc) != "undefined") {_RecordType("<1224,1232,33>",(argsDesc)); Inst49++; } } catch(e) {}
var argsGet = argsDesc.get,
    argsSet = argsDesc.set;
try { if (Inst44 <= 1000 && typeof (argsGet) != "undefined") {_RecordType("<1186,1193,32>",(argsGet)); Inst44++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (argsSet) != "undefined") {_RecordType("<1214,1221,33>",(argsSet)); Inst47++; } } catch(e) {}
try { if (Inst50 <= 1000 && typeof (expectNoProperty) != "undefined") {_RecordType("<1238,1254,34>",(expectNoProperty)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (argsGet) != "undefined") {_RecordType("<1255,1262,34>",(argsGet)); Inst51++; } } catch(e) {}
expectNoProperty(argsGet, "arguments");
try { if (Inst52 <= 1000 && typeof (expectNoProperty) != "undefined") {_RecordType("<1278,1294,35>",(expectNoProperty)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (argsGet) != "undefined") {_RecordType("<1295,1302,35>",(argsGet)); Inst53++; } } catch(e) {}
expectNoProperty(argsGet, "caller");
try { if (Inst54 <= 1000 && typeof (expectNoProperty) != "undefined") {_RecordType("<1315,1331,36>",(expectNoProperty)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (argsSet) != "undefined") {_RecordType("<1332,1339,36>",(argsSet)); Inst55++; } } catch(e) {}
expectNoProperty(argsSet, "arguments");
try { if (Inst56 <= 1000 && typeof (expectNoProperty) != "undefined") {_RecordType("<1355,1371,37>",(expectNoProperty)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (argsSet) != "undefined") {_RecordType("<1372,1379,37>",(argsSet)); Inst57++; } } catch(e) {}
expectNoProperty(argsSet, "caller");
try { if (Inst59 <= 1000 && typeof (callerDesc.get) != "undefined") {_RecordType("<1408,1422,38>",(callerDesc.get)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (callerDesc) != "undefined") {_RecordType("<1408,1418,38>",(callerDesc)); Inst60++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (callerDesc.set) != "undefined") {_RecordType("<1440,1454,39>",(callerDesc.set)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (callerDesc) != "undefined") {_RecordType("<1440,1450,39>",(callerDesc)); Inst63++; } } catch(e) {}
var callerGet = callerDesc.get,
    callerSet = callerDesc.set;
try { if (Inst58 <= 1000 && typeof (callerGet) != "undefined") {_RecordType("<1396,1405,38>",(callerGet)); Inst58++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (callerSet) != "undefined") {_RecordType("<1428,1437,39>",(callerSet)); Inst61++; } } catch(e) {}
try { if (Inst64 <= 1000 && typeof (expectNoProperty) != "undefined") {_RecordType("<1456,1472,40>",(expectNoProperty)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (callerGet) != "undefined") {_RecordType("<1473,1482,40>",(callerGet)); Inst65++; } } catch(e) {}
expectNoProperty(callerGet, "arguments");
try { if (Inst66 <= 1000 && typeof (expectNoProperty) != "undefined") {_RecordType("<1498,1514,41>",(expectNoProperty)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (callerGet) != "undefined") {_RecordType("<1515,1524,41>",(callerGet)); Inst67++; } } catch(e) {}
expectNoProperty(callerGet, "caller");
try { if (Inst68 <= 1000 && typeof (expectNoProperty) != "undefined") {_RecordType("<1537,1553,42>",(expectNoProperty)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (callerSet) != "undefined") {_RecordType("<1554,1563,42>",(callerSet)); Inst69++; } } catch(e) {}
expectNoProperty(callerSet, "arguments");
try { if (Inst70 <= 1000 && typeof (expectNoProperty) != "undefined") {_RecordType("<1579,1595,43>",(expectNoProperty)); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (callerSet) != "undefined") {_RecordType("<1596,1605,43>",(callerSet)); Inst71++; } } catch(e) {}
expectNoProperty(callerSet, "caller");
/******************************************************************************/

try { if (Inst72 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1711,1724,46>",(reportCompare)); Inst72++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst73 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1745,1758,47>",(reportCompare)); Inst73++; } } catch(e) {}
  reportCompare(true, true);
}

try { if (Inst74 <= 1000 && typeof (print) != "undefined") {_RecordType("<1775,1780,50>",(print)); Inst74++; } } catch(e) {}
print("Tests complete");

