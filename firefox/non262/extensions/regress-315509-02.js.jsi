var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* -*- indent-tabs-mode: nil; js-indent-level: 2 -*- */

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
//-----------------------------------------------------------------------------
var BUGNUMBER = 315509;
try { if (Inst0 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<346,355,7>",(BUGNUMBER)); Inst0++; } } catch(e) {}
var summary = 'Array.prototype.unshift do not crash on Arrays with holes';
try { if (Inst1 <= 1000 && typeof (summary) != "undefined") {_RecordType("<370,377,8>",(summary)); Inst1++; } } catch(e) {}
var actual = 'No Crash';
try { if (Inst2 <= 1000 && typeof (actual) != "undefined") {_RecordType("<445,451,9>",(actual)); Inst2++; } } catch(e) {}
var expect = 'No Crash';
try { if (Inst3 <= 1000 && typeof (expect) != "undefined") {_RecordType("<470,476,10>",(expect)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (printBugNumber) != "undefined") {_RecordType("<491,505,11>",(printBugNumber)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<506,515,11>",(BUGNUMBER)); Inst5++; } } catch(e) {}
printBugNumber(BUGNUMBER);
try { if (Inst6 <= 1000 && typeof (printStatus) != "undefined") {_RecordType("<518,529,12>",(printStatus)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (summary) != "undefined") {_RecordType("<530,537,12>",(summary)); Inst7++; } } catch(e) {}
printStatus(summary);

try { if (Inst8 <= 1000 && typeof (x1) != "undefined") {_RecordType("<550,552,14>",(x1)); Inst8++; } } catch(e) {}
function x1() {
try { if (Inst10 <= 1000 && typeof (Array) != "undefined") {_RecordType("<571,576,15>",(Array)); Inst10++; } } catch(e) {}
  var a = new Array(1);
try { if (Inst9 <= 1000 && typeof (a) != "undefined") {_RecordType("<563,564,15>",(a)); Inst9++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (a.unshift) != "undefined") {_RecordType("<583,592,16>",(a.unshift)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (a) != "undefined") {_RecordType("<583,584,16>",(a)); Inst12++; } } catch(e) {}
  a.unshift(1);
}

try { if (Inst13 <= 1000 && typeof (x2) != "undefined") {_RecordType("<609,611,19>",(x2)); Inst13++; } } catch(e) {}
function x2() {
try { if (Inst15 <= 1000 && typeof (Array) != "undefined") {_RecordType("<630,635,20>",(Array)); Inst15++; } } catch(e) {}
  var a = new Array(1);
try { if (Inst14 <= 1000 && typeof (a) != "undefined") {_RecordType("<622,623,20>",(a)); Inst14++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (a.unshift.call) != "undefined") {_RecordType("<642,656,21>",(a.unshift.call)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (a.unshift) != "undefined") {_RecordType("<642,651,21>",(a.unshift)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (a) != "undefined") {_RecordType("<642,643,21>",(a)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (a) != "undefined") {_RecordType("<657,658,21>",(a)); Inst19++; } } catch(e) {}
  a.unshift.call(a, 1);
}

try { if (Inst20 <= 1000 && typeof (x3) != "undefined") {_RecordType("<676,678,24>",(x3)); Inst20++; } } catch(e) {}
function x3() {
try { if (Inst22 <= 1000 && typeof (Array) != "undefined") {_RecordType("<697,702,25>",(Array)); Inst22++; } } catch(e) {}
  var a = new Array(1);
try { if (Inst21 <= 1000 && typeof (a) != "undefined") {_RecordType("<689,690,25>",(a)); Inst21++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (a.unshift) != "undefined") {_RecordType("<715,724,26>",(a.unshift)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (a) != "undefined") {_RecordType("<715,716,26>",(a)); Inst26++; } } catch(e) {}
  a.x = a.unshift;
try { if (Inst23 <= 1000 && typeof (a.x) != "undefined") {_RecordType("<709,712,26>",(a.x)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (a) != "undefined") {_RecordType("<709,710,26>",(a)); Inst24++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (a.x) != "undefined") {_RecordType("<728,731,27>",(a.x)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (a) != "undefined") {_RecordType("<728,729,27>",(a)); Inst28++; } } catch(e) {}
  a.x(1);
}

try { if (Inst29 <= 1000 && typeof (x4) != "undefined") {_RecordType("<748,750,30>",(x4)); Inst29++; } } catch(e) {}
function x4() {
try { if (Inst31 <= 1000 && typeof (Array) != "undefined") {_RecordType("<769,774,31>",(Array)); Inst31++; } } catch(e) {}
  var a = new Array(1);
try { if (Inst30 <= 1000 && typeof (a) != "undefined") {_RecordType("<761,762,31>",(a)); Inst30++; } } catch(e) {}

try { if (Inst32 <= 1000 && typeof (a.__defineSetter__) != "undefined") {_RecordType("<782,800,33>",(a.__defineSetter__)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (a) != "undefined") {_RecordType("<782,783,33>",(a)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (a.unshift) != "undefined") {_RecordType("<806,815,33>",(a.unshift)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (a) != "undefined") {_RecordType("<806,807,33>",(a)); Inst35++; } } catch(e) {}
  a.__defineSetter__("x", a.unshift);

  a.x = 1;
try { if (Inst36 <= 1000 && typeof (a.x) != "undefined") {_RecordType("<821,824,35>",(a.x)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (a) != "undefined") {_RecordType("<821,822,35>",(a)); Inst37++; } } catch(e) {}
}

for (var i = 0; i < 10; i++) {
try { if (Inst38 <= 1000 && typeof (i) != "undefined") {_RecordType("<842,843,38>",(i)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (i) != "undefined") {_RecordType("<849,850,38>",(i)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (i) != "undefined") {_RecordType("<857,858,38>",(i)); Inst40++; } } catch(e) {}
try { if (Inst41 <= 1000 && typeof (x1) != "undefined") {_RecordType("<866,868,39>",(x1)); Inst41++; } } catch(e) {}
  x1();
try { if (Inst42 <= 1000 && typeof (x2) != "undefined") {_RecordType("<874,876,40>",(x2)); Inst42++; } } catch(e) {}
  x2();
try { if (Inst43 <= 1000 && typeof (x3) != "undefined") {_RecordType("<882,884,41>",(x3)); Inst43++; } } catch(e) {}
  x3();
try { if (Inst44 <= 1000 && typeof (x4) != "undefined") {_RecordType("<890,892,42>",(x4)); Inst44++; } } catch(e) {}
  x4();
}

try { if (Inst45 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<899,912,45>",(reportCompare)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (expect) != "undefined") {_RecordType("<913,919,45>",(expect)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (actual) != "undefined") {_RecordType("<921,927,45>",(actual)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (summary) != "undefined") {_RecordType("<929,936,45>",(summary)); Inst48++; } } catch(e) {}
reportCompare(expect, actual, summary);

