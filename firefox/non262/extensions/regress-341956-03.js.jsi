var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* -*- tab-width: 2; indent-tabs-mode: nil; js-indent-level: 2 -*- */

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
//-----------------------------------------------------------------------------
var BUGNUMBER = 341956;
try { if (Inst0 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<360,369,7>",(BUGNUMBER)); Inst0++; } } catch(e) {}
var summary = 'GC Hazards in jsarray.c - reverse';
try { if (Inst1 <= 1000 && typeof (summary) != "undefined") {_RecordType("<384,391,8>",(summary)); Inst1++; } } catch(e) {}
var actual = 'No Crash';
try { if (Inst2 <= 1000 && typeof (actual) != "undefined") {_RecordType("<435,441,9>",(actual)); Inst2++; } } catch(e) {}
var expect = 'No Crash'; //-----------------------------------------------------------------------------
try { if (Inst3 <= 1000 && typeof (expect) != "undefined") {_RecordType("<460,466,10>",(expect)); Inst3++; } } catch(e) {}

try { if (Inst4 <= 1000 && typeof (test) != "undefined") {_RecordType("<562,566,12>",(test)); Inst4++; } } catch(e) {}
test(); //-----------------------------------------------------------------------------

try { if (Inst5 <= 1000 && typeof (test) != "undefined") {_RecordType("<660,664,14>",(test)); Inst5++; } } catch(e) {}
function test() {
try { if (Inst6 <= 1000 && typeof (printBugNumber) != "undefined") {_RecordType("<671,685,15>",(printBugNumber)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<686,695,15>",(BUGNUMBER)); Inst7++; } } catch(e) {}
  printBugNumber(BUGNUMBER);
try { if (Inst8 <= 1000 && typeof (printStatus) != "undefined") {_RecordType("<700,711,16>",(printStatus)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (summary) != "undefined") {_RecordType("<712,719,16>",(summary)); Inst9++; } } catch(e) {}
  printStatus(summary);
  var N = 0xFFFFFFFF;
try { if (Inst10 <= 1000 && typeof (N) != "undefined") {_RecordType("<728,729,17>",(N)); Inst10++; } } catch(e) {}
  var a = [];
try { if (Inst11 <= 1000 && typeof (a) != "undefined") {_RecordType("<750,751,18>",(a)); Inst11++; } } catch(e) {}
  a[N - 1] = 0;
try { if (Inst12 <= 1000 && typeof (a[N - 1]) != "undefined") {_RecordType("<760,768,19>",(a[N - 1])); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (a) != "undefined") {_RecordType("<760,761,19>",(a)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (N) != "undefined") {_RecordType("<762,763,19>",(N)); Inst14++; } } catch(e) {}
  var expected = "GETTER RESULT";
try { if (Inst15 <= 1000 && typeof (expected) != "undefined") {_RecordType("<780,788,20>",(expected)); Inst15++; } } catch(e) {}

try { if (Inst16 <= 1000 && typeof (a.__defineGetter__) != "undefined") {_RecordType("<811,829,22>",(a.__defineGetter__)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (a) != "undefined") {_RecordType("<811,812,22>",(a)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (N) != "undefined") {_RecordType("<830,831,22>",(N)); Inst18++; } } catch(e) {}
  a.__defineGetter__(N - 1, function () {
try { if (Inst19 <= 1000 && typeof (a[N - 1]) != "undefined") {_RecordType("<862,870,23>",(a[N - 1])); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (a) != "undefined") {_RecordType("<862,863,23>",(a)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (N) != "undefined") {_RecordType("<864,865,23>",(N)); Inst21++; } } catch(e) {}
    delete a[N - 1];
    var tmp = [];
try { if (Inst22 <= 1000 && typeof (tmp) != "undefined") {_RecordType("<880,883,24>",(tmp)); Inst22++; } } catch(e) {}
    tmp[N - 2] = 1;
try { if (Inst23 <= 1000 && typeof (tmp[N - 2]) != "undefined") {_RecordType("<894,904,25>",(tmp[N - 2])); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (tmp) != "undefined") {_RecordType("<894,897,25>",(tmp)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (N) != "undefined") {_RecordType("<898,899,25>",(N)); Inst25++; } } catch(e) {}

try { if (Inst26 <= 1000 && typeof (gc) != "undefined") {_RecordType("<926,928,27>",(gc)); Inst26++; } } catch(e) {}
    if (typeof gc == 'function') {
try { if (Inst27 <= 1000 && typeof (gc) != "undefined") {_RecordType("<952,954,28>",(gc)); Inst27++; } } catch(e) {}
      gc();
    }

    for (var i = 0; i != 50000; ++i) {
try { if (Inst28 <= 1000 && typeof (i) != "undefined") {_RecordType("<978,979,31>",(i)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (i) != "undefined") {_RecordType("<985,986,31>",(i)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (i) != "undefined") {_RecordType("<999,1000,31>",(i)); Inst30++; } } catch(e) {}
      var tmp = 1 / 3;
try { if (Inst31 <= 1000 && typeof (tmp) != "undefined") {_RecordType("<1014,1017,32>",(tmp)); Inst31++; } } catch(e) {}
      tmp /= 10;
try { if (Inst32 <= 1000 && typeof (tmp) != "undefined") {_RecordType("<1033,1036,33>",(tmp)); Inst32++; } } catch(e) {}
    }

    for (var i = 0; i != 1000; ++i) {
try { if (Inst33 <= 1000 && typeof (i) != "undefined") {_RecordType("<1064,1065,36>",(i)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (i) != "undefined") {_RecordType("<1071,1072,36>",(i)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (i) != "undefined") {_RecordType("<1084,1085,36>",(i)); Inst35++; } } catch(e) {}
      // Make string with 11 characters that would take
      // (11 + 1) * 2 bytes or sizeof(JSAtom) so eventually
      // malloc will ovewrite just freed atoms.
try { if (Inst37 <= 1000 && typeof (Array(12).join) != "undefined") {_RecordType("<1270,1284,40>",(Array(12).join)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (Array) != "undefined") {_RecordType("<1270,1275,40>",(Array)); Inst38++; } } catch(e) {}
      var tmp2 = Array(12).join(' ');
try { if (Inst36 <= 1000 && typeof (tmp2) != "undefined") {_RecordType("<1263,1267,40>",(tmp2)); Inst36++; } } catch(e) {}
    }

try { if (Inst39 <= 1000 && typeof (expected) != "undefined") {_RecordType("<1309,1317,43>",(expected)); Inst39++; } } catch(e) {}
    return expected;
  }); // The following always-throw getter is to stop unshift from doing
  // 2^32 iterations.


  var toStop = "stringToStop";
try { if (Inst40 <= 1000 && typeof (toStop) != "undefined") {_RecordType("<1422,1428,48>",(toStop)); Inst40++; } } catch(e) {}
  a[N - 3] = 0;
try { if (Inst41 <= 1000 && typeof (a[N - 3]) != "undefined") {_RecordType("<1449,1457,49>",(a[N - 3])); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (a) != "undefined") {_RecordType("<1449,1450,49>",(a)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (N) != "undefined") {_RecordType("<1451,1452,49>",(N)); Inst43++; } } catch(e) {}

try { if (Inst44 <= 1000 && typeof (a.__defineGetter__) != "undefined") {_RecordType("<1466,1484,51>",(a.__defineGetter__)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (a) != "undefined") {_RecordType("<1466,1467,51>",(a)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (N) != "undefined") {_RecordType("<1485,1486,51>",(N)); Inst46++; } } catch(e) {}
  a.__defineGetter__(N - 3, function () {
try { if (Inst47 <= 1000 && typeof (toStop) != "undefined") {_RecordType("<1516,1522,52>",(toStop)); Inst47++; } } catch(e) {}
    throw toStop;
  });

  var good = false;
try { if (Inst48 <= 1000 && typeof (good) != "undefined") {_RecordType("<1537,1541,55>",(good)); Inst48++; } } catch(e) {}

try { if (Inst51 <= 1000 && typeof (e) != "undefined") {_RecordType("<1588,1589,59>",(e)); Inst51++; } } catch(e) {}
  try {
try { if (Inst49 <= 1000 && typeof (a.reverse) != "undefined") {_RecordType("<1564,1573,58>",(a.reverse)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (a) != "undefined") {_RecordType("<1564,1565,58>",(a)); Inst50++; } } catch(e) {}
    a.reverse();
  } catch (e) {
try { if (Inst52 <= 1000 && typeof (e) != "undefined") {_RecordType("<1601,1602,60>",(e)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (toStop) != "undefined") {_RecordType("<1607,1613,60>",(toStop)); Inst53++; } } catch(e) {}
    if (e === toStop) {
      good = true;
try { if (Inst54 <= 1000 && typeof (good) != "undefined") {_RecordType("<1623,1627,61>",(good)); Inst54++; } } catch(e) {}
    }
  }

  expect = true;
try { if (Inst55 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1649,1655,65>",(expect)); Inst55++; } } catch(e) {}
try { if (Inst57 <= 1000 && typeof (good) != "undefined") {_RecordType("<1675,1679,66>",(good)); Inst57++; } } catch(e) {}
  actual = good;
try { if (Inst56 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1666,1672,66>",(actual)); Inst56++; } } catch(e) {}
try { if (Inst58 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1683,1696,67>",(reportCompare)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1697,1703,67>",(expect)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1705,1711,67>",(actual)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (summary) != "undefined") {_RecordType("<1713,1720,67>",(summary)); Inst61++; } } catch(e) {}
  reportCompare(expect, actual, summary);
try { if (Inst62 <= 1000 && typeof (print) != "undefined") {_RecordType("<1725,1730,68>",(print)); Inst62++; } } catch(e) {}
  print('Done');
}

