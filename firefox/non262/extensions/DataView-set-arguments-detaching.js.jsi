var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/*
 * Any copyright is dedicated to the Public Domain.
 * http://creativecommons.org/licenses/publicdomain/
 */
var gTestfile = "DataView-set-arguments-detaching.js"; //-----------------------------------------------------------------------------
try { if (Inst0 <= 1000 && typeof (gTestfile) != "undefined") {_RecordType("<116,125,5>",(gTestfile)); Inst0++; } } catch(e) {}

var BUGNUMBER = 991981;
try { if (Inst1 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<252,261,7>",(BUGNUMBER)); Inst1++; } } catch(e) {}
var summary = "DataView.prototype.set* methods shouldn't misbehave horribly if " + "index-argument conversion detaches the ArrayBuffer being modified";
try { if (Inst2 <= 1000 && typeof (summary) != "undefined") {_RecordType("<276,283,8>",(summary)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (print) != "undefined") {_RecordType("<424,429,9>",(print)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<430,439,9>",(BUGNUMBER)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (summary) != "undefined") {_RecordType("<449,456,9>",(summary)); Inst5++; } } catch(e) {}
print(BUGNUMBER + ": " + summary);
/**************
 * BEGIN TEST *
 **************/

try { if (Inst6 <= 1000 && typeof (testIndex) != "undefined") {_RecordType("<518,527,14>",(testIndex)); Inst6++; } } catch(e) {}
function testIndex() {
try { if (Inst8 <= 1000 && typeof (ArrayBuffer) != "undefined") {_RecordType("<547,558,15>",(ArrayBuffer)); Inst8++; } } catch(e) {}
  var ab = new ArrayBuffer(0x1000);
try { if (Inst7 <= 1000 && typeof (ab) != "undefined") {_RecordType("<538,540,15>",(ab)); Inst7++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (DataView) != "undefined") {_RecordType("<583,591,16>",(DataView)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (ab) != "undefined") {_RecordType("<592,594,16>",(ab)); Inst11++; } } catch(e) {}
  var dv = new DataView(ab);
try { if (Inst9 <= 1000 && typeof (dv) != "undefined") {_RecordType("<574,576,16>",(dv)); Inst9++; } } catch(e) {}
  var start = {
    valueOf: function () {
try { if (Inst13 <= 1000 && typeof (detachArrayBuffer) != "undefined") {_RecordType("<646,663,19>",(detachArrayBuffer)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (ab) != "undefined") {_RecordType("<664,666,19>",(ab)); Inst14++; } } catch(e) {}
      detachArrayBuffer(ab);
try { if (Inst15 <= 1000 && typeof (gc) != "undefined") {_RecordType("<675,677,20>",(gc)); Inst15++; } } catch(e) {}
      gc();
      return 0xFFF;
    }
  };
try { if (Inst12 <= 1000 && typeof (start) != "undefined") {_RecordType("<603,608,17>",(start)); Inst12++; } } catch(e) {}
  var ok = false;
try { if (Inst16 <= 1000 && typeof (ok) != "undefined") {_RecordType("<718,720,24>",(ok)); Inst16++; } } catch(e) {}

try { if (Inst20 <= 1000 && typeof (e) != "undefined") {_RecordType("<780,781,28>",(e)); Inst20++; } } catch(e) {}
  try {
try { if (Inst17 <= 1000 && typeof (dv.setUint8) != "undefined") {_RecordType("<743,754,27>",(dv.setUint8)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (dv) != "undefined") {_RecordType("<743,745,27>",(dv)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (start) != "undefined") {_RecordType("<755,760,27>",(start)); Inst19++; } } catch(e) {}
    dv.setUint8(start, 0x42);
  } catch (e) {
    ok = true;
try { if (Inst21 <= 1000 && typeof (ok) != "undefined") {_RecordType("<789,791,29>",(ok)); Inst21++; } } catch(e) {}
  }

try { if (Inst22 <= 1000 && typeof (ok) != "undefined") {_RecordType("<807,809,32>",(ok)); Inst22++; } } catch(e) {}
  ok;
  true;
  "should have thrown";
try { if (Inst23 <= 1000 && typeof (ab.byteLength) != "undefined") {_RecordType("<845,858,35>",(ab.byteLength)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (ab) != "undefined") {_RecordType("<845,847,35>",(ab)); Inst24++; } } catch(e) {}
  ab.byteLength;
  0;
  "should have been detached correctly";
}

try { if (Inst25 <= 1000 && typeof (testIndex) != "undefined") {_RecordType("<909,918,40>",(testIndex)); Inst25++; } } catch(e) {}
testIndex();

try { if (Inst26 <= 1000 && typeof (testValue) != "undefined") {_RecordType("<932,941,42>",(testValue)); Inst26++; } } catch(e) {}
function testValue() {
try { if (Inst28 <= 1000 && typeof (ArrayBuffer) != "undefined") {_RecordType("<961,972,43>",(ArrayBuffer)); Inst28++; } } catch(e) {}
  var ab = new ArrayBuffer(0x100000);
try { if (Inst27 <= 1000 && typeof (ab) != "undefined") {_RecordType("<952,954,43>",(ab)); Inst27++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (DataView) != "undefined") {_RecordType("<999,1007,44>",(DataView)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (ab) != "undefined") {_RecordType("<1008,1010,44>",(ab)); Inst31++; } } catch(e) {}
  var dv = new DataView(ab);
try { if (Inst29 <= 1000 && typeof (dv) != "undefined") {_RecordType("<990,992,44>",(dv)); Inst29++; } } catch(e) {}
  var value = {
    valueOf: function () {
try { if (Inst33 <= 1000 && typeof (detachArrayBuffer) != "undefined") {_RecordType("<1062,1079,47>",(detachArrayBuffer)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (ab) != "undefined") {_RecordType("<1080,1082,47>",(ab)); Inst34++; } } catch(e) {}
      detachArrayBuffer(ab);
try { if (Inst35 <= 1000 && typeof (gc) != "undefined") {_RecordType("<1091,1093,48>",(gc)); Inst35++; } } catch(e) {}
      gc();
      return 0x42;
    }
  };
try { if (Inst32 <= 1000 && typeof (value) != "undefined") {_RecordType("<1019,1024,45>",(value)); Inst32++; } } catch(e) {}
  var ok = false;
try { if (Inst36 <= 1000 && typeof (ok) != "undefined") {_RecordType("<1133,1135,52>",(ok)); Inst36++; } } catch(e) {}

try { if (Inst40 <= 1000 && typeof (e) != "undefined") {_RecordType("<1198,1199,56>",(e)); Inst40++; } } catch(e) {}
  try {
try { if (Inst37 <= 1000 && typeof (dv.setUint8) != "undefined") {_RecordType("<1158,1169,55>",(dv.setUint8)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (dv) != "undefined") {_RecordType("<1158,1160,55>",(dv)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (value) != "undefined") {_RecordType("<1179,1184,55>",(value)); Inst39++; } } catch(e) {}
    dv.setUint8(0xFFFFF, value);
  } catch (e) {
    ok = true;
try { if (Inst41 <= 1000 && typeof (ok) != "undefined") {_RecordType("<1207,1209,57>",(ok)); Inst41++; } } catch(e) {}
  }

try { if (Inst42 <= 1000 && typeof (ok) != "undefined") {_RecordType("<1225,1227,60>",(ok)); Inst42++; } } catch(e) {}
  ok;
  true;
  "should have thrown";
try { if (Inst43 <= 1000 && typeof (ab.byteLength) != "undefined") {_RecordType("<1263,1276,63>",(ab.byteLength)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (ab) != "undefined") {_RecordType("<1263,1265,63>",(ab)); Inst44++; } } catch(e) {}
  ab.byteLength;
  0;
  "should have been detached correctly";
}

try { if (Inst45 <= 1000 && typeof (testValue) != "undefined") {_RecordType("<1327,1336,68>",(testValue)); Inst45++; } } catch(e) {}
testValue();
/******************************************************************************/

try { if (Inst46 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1433,1446,71>",(reportCompare)); Inst46++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst47 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1467,1480,72>",(reportCompare)); Inst47++; } } catch(e) {}
  reportCompare(true, true);
}

try { if (Inst48 <= 1000 && typeof (print) != "undefined") {_RecordType("<1497,1502,75>",(print)); Inst48++; } } catch(e) {}
print("Tests complete");

