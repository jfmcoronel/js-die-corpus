var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
var Inst102 = 0;
var Inst103 = 0;
var Inst104 = 0;
var Inst105 = 0;
var Inst106 = 0;
var Inst107 = 0;
var Inst108 = 0;
var Inst109 = 0;
var Inst110 = 0;
var Inst111 = 0;
var Inst112 = 0;
var Inst113 = 0;
var Inst114 = 0;
var Inst115 = 0;
var Inst116 = 0;
var Inst117 = 0;
var Inst118 = 0;
var Inst119 = 0;
var Inst120 = 0;
var Inst121 = 0;
var Inst122 = 0;
var Inst123 = 0;
var Inst124 = 0;
var Inst125 = 0;
var Inst126 = 0;
var Inst127 = 0;
var Inst128 = 0;
var Inst129 = 0;
var Inst130 = 0;
var Inst131 = 0;
var Inst132 = 0;
var Inst133 = 0;
var Inst134 = 0;
var Inst135 = 0;
var Inst136 = 0;
var Inst137 = 0;
var Inst138 = 0;
var Inst139 = 0;
var Inst140 = 0;
var Inst141 = 0;
var Inst142 = 0;
var Inst143 = 0;
var Inst144 = 0;
var Inst145 = 0;
var Inst146 = 0;
var Inst147 = 0;
var Inst148 = 0;
var Inst149 = 0;
var Inst150 = 0;
var Inst151 = 0;
var Inst152 = 0;
var Inst153 = 0;
var Inst154 = 0;
var Inst155 = 0;
var Inst156 = 0;
var Inst157 = 0;
var Inst158 = 0;
var Inst159 = 0;
var Inst160 = 0;
var Inst161 = 0;
var Inst162 = 0;
var Inst163 = 0;
var Inst164 = 0;
var Inst165 = 0;
var Inst166 = 0;
var Inst167 = 0;
var Inst168 = 0;
var Inst169 = 0;
var Inst170 = 0;
var Inst171 = 0;
var Inst172 = 0;
var Inst173 = 0;
var Inst174 = 0;
var Inst175 = 0;
var Inst176 = 0;
var Inst177 = 0;
var Inst178 = 0;
var Inst179 = 0;
var Inst180 = 0;
var Inst181 = 0;
var Inst182 = 0;
var Inst183 = 0;
var Inst184 = 0;
var Inst185 = 0;
var Inst186 = 0;
var Inst187 = 0;
var Inst188 = 0;
var Inst189 = 0;
var Inst190 = 0;
var Inst191 = 0;
var Inst192 = 0;
var Inst193 = 0;
var Inst194 = 0;
var Inst195 = 0;
var Inst196 = 0;
var Inst197 = 0;
var Inst198 = 0;
var Inst199 = 0;
var Inst200 = 0;
var Inst201 = 0;
var Inst202 = 0;
var Inst203 = 0;
var Inst204 = 0;
var Inst205 = 0;
var Inst206 = 0;
var Inst207 = 0;
var Inst208 = 0;
var Inst209 = 0;
var Inst210 = 0;
var Inst211 = 0;
var Inst212 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* -*- tab-width: 2; indent-tabs-mode: nil; js-indent-level: 2 -*- */

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
(function (global) {
try { if (Inst0 <= 1000 && typeof (global) != "undefined") {_RecordType("<287,293,6>",(global)); Inst0++; } } catch(e) {}
  /*
   * Date: 07 February 2001
   *
   * Functionality common to RegExp testing -
   */
  //-----------------------------------------------------------------------------
  var MSG_PATTERN = '\nregexp = ';
try { if (Inst1 <= 1000 && typeof (MSG_PATTERN) != "undefined") {_RecordType("<475,486,13>",(MSG_PATTERN)); Inst1++; } } catch(e) {}
  var MSG_STRING = '\nstring = ';
try { if (Inst2 <= 1000 && typeof (MSG_STRING) != "undefined") {_RecordType("<510,520,14>",(MSG_STRING)); Inst2++; } } catch(e) {}
  var MSG_EXPECT = '\nExpect: ';
try { if (Inst3 <= 1000 && typeof (MSG_EXPECT) != "undefined") {_RecordType("<544,554,15>",(MSG_EXPECT)); Inst3++; } } catch(e) {}
  var MSG_ACTUAL = '\nActual: ';
try { if (Inst4 <= 1000 && typeof (MSG_ACTUAL) != "undefined") {_RecordType("<577,587,16>",(MSG_ACTUAL)); Inst4++; } } catch(e) {}
  var ERR_LENGTH = '\nERROR !!! match arrays have different lengths:';
try { if (Inst5 <= 1000 && typeof (ERR_LENGTH) != "undefined") {_RecordType("<610,620,17>",(ERR_LENGTH)); Inst5++; } } catch(e) {}
  var ERR_MATCH = '\nERROR !!! regexp failed to give expected match array:';
try { if (Inst6 <= 1000 && typeof (ERR_MATCH) != "undefined") {_RecordType("<681,690,18>",(ERR_MATCH)); Inst6++; } } catch(e) {}
  var ERR_NO_MATCH = '\nERROR !!! regexp FAILED to match anything !!!';
try { if (Inst7 <= 1000 && typeof (ERR_NO_MATCH) != "undefined") {_RecordType("<758,770,19>",(ERR_NO_MATCH)); Inst7++; } } catch(e) {}
  var ERR_UNEXP_MATCH = '\nERROR !!! regexp MATCHED when we expected it to fail !!!';
try { if (Inst8 <= 1000 && typeof (ERR_UNEXP_MATCH) != "undefined") {_RecordType("<830,845,20>",(ERR_UNEXP_MATCH)); Inst8++; } } catch(e) {}
  var CHAR_LBRACKET = '[';
try { if (Inst9 <= 1000 && typeof (CHAR_LBRACKET) != "undefined") {_RecordType("<916,929,21>",(CHAR_LBRACKET)); Inst9++; } } catch(e) {}
  var CHAR_RBRACKET = ']';
try { if (Inst10 <= 1000 && typeof (CHAR_RBRACKET) != "undefined") {_RecordType("<943,956,22>",(CHAR_RBRACKET)); Inst10++; } } catch(e) {}
  var CHAR_QT_DBL = '"';
try { if (Inst11 <= 1000 && typeof (CHAR_QT_DBL) != "undefined") {_RecordType("<970,981,23>",(CHAR_QT_DBL)); Inst11++; } } catch(e) {}
  var CHAR_QT = "'";
try { if (Inst12 <= 1000 && typeof (CHAR_QT) != "undefined") {_RecordType("<995,1002,24>",(CHAR_QT)); Inst12++; } } catch(e) {}
  var CHAR_NL = '\n';
try { if (Inst13 <= 1000 && typeof (CHAR_NL) != "undefined") {_RecordType("<1016,1023,25>",(CHAR_NL)); Inst13++; } } catch(e) {}
  var CHAR_COMMA = ',';
try { if (Inst14 <= 1000 && typeof (CHAR_COMMA) != "undefined") {_RecordType("<1038,1048,26>",(CHAR_COMMA)); Inst14++; } } catch(e) {}
  var CHAR_SPACE = ' ';
try { if (Inst15 <= 1000 && typeof (CHAR_SPACE) != "undefined") {_RecordType("<1062,1072,27>",(CHAR_SPACE)); Inst15++; } } catch(e) {}
  var TYPE_STRING = typeof 'abc';
try { if (Inst16 <= 1000 && typeof (TYPE_STRING) != "undefined") {_RecordType("<1086,1097,28>",(TYPE_STRING)); Inst16++; } } catch(e) {}

try { if (Inst17 <= 1000 && typeof (testRegExp) != "undefined") {_RecordType("<1126,1136,30>",(testRegExp)); Inst17++; } } catch(e) {}
  function testRegExp(statuses, patterns, strings, actualmatches, expectedmatches) {
try { if (Inst18 <= 1000 && typeof (statuses) != "undefined") {_RecordType("<1137,1145,30>",(statuses)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (patterns) != "undefined") {_RecordType("<1147,1155,30>",(patterns)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (strings) != "undefined") {_RecordType("<1157,1164,30>",(strings)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (actualmatches) != "undefined") {_RecordType("<1166,1179,30>",(actualmatches)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (expectedmatches) != "undefined") {_RecordType("<1181,1196,30>",(expectedmatches)); Inst22++; } } catch(e) {}
    var status = '';
try { if (Inst23 <= 1000 && typeof (status) != "undefined") {_RecordType("<1208,1214,31>",(status)); Inst23++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<1243,1249,32>",(RegExp)); Inst25++; } } catch(e) {}
    var pattern = new RegExp();
try { if (Inst24 <= 1000 && typeof (pattern) != "undefined") {_RecordType("<1229,1236,32>",(pattern)); Inst24++; } } catch(e) {}
    var string = '';
try { if (Inst26 <= 1000 && typeof (string) != "undefined") {_RecordType("<1261,1267,33>",(string)); Inst26++; } } catch(e) {}
try { if (Inst28 <= 1000 && typeof (Array) != "undefined") {_RecordType("<1300,1305,34>",(Array)); Inst28++; } } catch(e) {}
    var actualmatch = new Array();
try { if (Inst27 <= 1000 && typeof (actualmatch) != "undefined") {_RecordType("<1282,1293,34>",(actualmatch)); Inst27++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (Array) != "undefined") {_RecordType("<1337,1342,35>",(Array)); Inst30++; } } catch(e) {}
    var expectedmatch = new Array();
try { if (Inst29 <= 1000 && typeof (expectedmatch) != "undefined") {_RecordType("<1317,1330,35>",(expectedmatch)); Inst29++; } } catch(e) {}
    var state = '';
try { if (Inst31 <= 1000 && typeof (state) != "undefined") {_RecordType("<1354,1359,36>",(state)); Inst31++; } } catch(e) {}
    var lActual = -1;
try { if (Inst32 <= 1000 && typeof (lActual) != "undefined") {_RecordType("<1374,1381,37>",(lActual)); Inst32++; } } catch(e) {}
    var lExpect = -1;
try { if (Inst33 <= 1000 && typeof (lExpect) != "undefined") {_RecordType("<1396,1403,38>",(lExpect)); Inst33++; } } catch(e) {}

    for (var i = 0; i != patterns.length; i++) {
try { if (Inst34 <= 1000 && typeof (i) != "undefined") {_RecordType("<1424,1425,40>",(i)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (i) != "undefined") {_RecordType("<1431,1432,40>",(i)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (patterns.length) != "undefined") {_RecordType("<1436,1451,40>",(patterns.length)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (patterns) != "undefined") {_RecordType("<1436,1444,40>",(patterns)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (i) != "undefined") {_RecordType("<1453,1454,40>",(i)); Inst38++; } } catch(e) {}
try { if (Inst40 <= 1000 && typeof (statuses[i]) != "undefined") {_RecordType("<1475,1486,41>",(statuses[i])); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (statuses) != "undefined") {_RecordType("<1475,1483,41>",(statuses)); Inst41++; } } catch(e) {}
      status = statuses[i];
try { if (Inst39 <= 1000 && typeof (status) != "undefined") {_RecordType("<1466,1472,41>",(status)); Inst39++; } } catch(e) {}
try { if (Inst43 <= 1000 && typeof (patterns[i]) != "undefined") {_RecordType("<1504,1515,42>",(patterns[i])); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (patterns) != "undefined") {_RecordType("<1504,1512,42>",(patterns)); Inst44++; } } catch(e) {}
      pattern = patterns[i];
try { if (Inst42 <= 1000 && typeof (pattern) != "undefined") {_RecordType("<1494,1501,42>",(pattern)); Inst42++; } } catch(e) {}
try { if (Inst46 <= 1000 && typeof (strings[i]) != "undefined") {_RecordType("<1532,1542,43>",(strings[i])); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (strings) != "undefined") {_RecordType("<1532,1539,43>",(strings)); Inst47++; } } catch(e) {}
      string = strings[i];
try { if (Inst45 <= 1000 && typeof (string) != "undefined") {_RecordType("<1523,1529,43>",(string)); Inst45++; } } catch(e) {}
try { if (Inst49 <= 1000 && typeof (actualmatches[i]) != "undefined") {_RecordType("<1564,1580,44>",(actualmatches[i])); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (actualmatches) != "undefined") {_RecordType("<1564,1577,44>",(actualmatches)); Inst50++; } } catch(e) {}
      actualmatch = actualmatches[i];
try { if (Inst48 <= 1000 && typeof (actualmatch) != "undefined") {_RecordType("<1550,1561,44>",(actualmatch)); Inst48++; } } catch(e) {}
try { if (Inst52 <= 1000 && typeof (expectedmatches[i]) != "undefined") {_RecordType("<1604,1622,45>",(expectedmatches[i])); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (expectedmatches) != "undefined") {_RecordType("<1604,1619,45>",(expectedmatches)); Inst53++; } } catch(e) {}
      expectedmatch = expectedmatches[i];
try { if (Inst51 <= 1000 && typeof (expectedmatch) != "undefined") {_RecordType("<1588,1601,45>",(expectedmatch)); Inst51++; } } catch(e) {}
try { if (Inst55 <= 1000 && typeof (getState) != "undefined") {_RecordType("<1638,1646,46>",(getState)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (status) != "undefined") {_RecordType("<1647,1653,46>",(status)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (pattern) != "undefined") {_RecordType("<1655,1662,46>",(pattern)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (string) != "undefined") {_RecordType("<1664,1670,46>",(string)); Inst58++; } } catch(e) {}
      state = getState(status, pattern, string);
try { if (Inst54 <= 1000 && typeof (state) != "undefined") {_RecordType("<1630,1635,46>",(state)); Inst54++; } } catch(e) {}
try { if (Inst60 <= 1000 && typeof (status) != "undefined") {_RecordType("<1693,1699,47>",(status)); Inst60++; } } catch(e) {}
      description = status;
try { if (Inst59 <= 1000 && typeof (description) != "undefined") {_RecordType("<1679,1690,47>",(description)); Inst59++; } } catch(e) {}

try { if (Inst61 <= 1000 && typeof (actualmatch) != "undefined") {_RecordType("<1712,1723,49>",(actualmatch)); Inst61++; } } catch(e) {}
      if (actualmatch) {
try { if (Inst63 <= 1000 && typeof (formatArray) != "undefined") {_RecordType("<1744,1755,50>",(formatArray)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (actualmatch) != "undefined") {_RecordType("<1756,1767,50>",(actualmatch)); Inst64++; } } catch(e) {}
        actual = formatArray(actualmatch);
try { if (Inst62 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1735,1741,50>",(actual)); Inst62++; } } catch(e) {}

try { if (Inst65 <= 1000 && typeof (expectedmatch) != "undefined") {_RecordType("<1783,1796,52>",(expectedmatch)); Inst65++; } } catch(e) {}
        if (expectedmatch) {
          // expectedmatch and actualmatch are arrays -
try { if (Inst67 <= 1000 && typeof (expectedmatch.length) != "undefined") {_RecordType("<1876,1896,54>",(expectedmatch.length)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (expectedmatch) != "undefined") {_RecordType("<1876,1889,54>",(expectedmatch)); Inst68++; } } catch(e) {}
          lExpect = expectedmatch.length;
try { if (Inst66 <= 1000 && typeof (lExpect) != "undefined") {_RecordType("<1866,1873,54>",(lExpect)); Inst66++; } } catch(e) {}
try { if (Inst70 <= 1000 && typeof (actualmatch.length) != "undefined") {_RecordType("<1918,1936,55>",(actualmatch.length)); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (actualmatch) != "undefined") {_RecordType("<1918,1929,55>",(actualmatch)); Inst71++; } } catch(e) {}
          lActual = actualmatch.length;
try { if (Inst69 <= 1000 && typeof (lActual) != "undefined") {_RecordType("<1908,1915,55>",(lActual)); Inst69++; } } catch(e) {}
try { if (Inst73 <= 1000 && typeof (formatArray) != "undefined") {_RecordType("<1963,1974,56>",(formatArray)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (expectedmatch) != "undefined") {_RecordType("<1975,1988,56>",(expectedmatch)); Inst74++; } } catch(e) {}
          var expected = formatArray(expectedmatch);
try { if (Inst72 <= 1000 && typeof (expected) != "undefined") {_RecordType("<1952,1960,56>",(expected)); Inst72++; } } catch(e) {}

try { if (Inst75 <= 1000 && typeof (lActual) != "undefined") {_RecordType("<2006,2013,58>",(lActual)); Inst75++; } } catch(e) {}try { if (Inst76 <= 1000 && typeof (lExpect) != "undefined") {_RecordType("<2017,2024,58>",(lExpect)); Inst76++; } } catch(e) {}
          if (lActual != lExpect) {
try { if (Inst77 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<2040,2053,59>",(reportCompare)); Inst77++; } } catch(e) {}try { if (Inst78 <= 1000 && typeof (lExpect) != "undefined") {_RecordType("<2054,2061,59>",(lExpect)); Inst78++; } } catch(e) {}try { if (Inst79 <= 1000 && typeof (lActual) != "undefined") {_RecordType("<2063,2070,59>",(lActual)); Inst79++; } } catch(e) {}try { if (Inst80 <= 1000 && typeof (state) != "undefined") {_RecordType("<2072,2077,59>",(state)); Inst80++; } } catch(e) {}try { if (Inst81 <= 1000 && typeof (ERR_LENGTH) != "undefined") {_RecordType("<2080,2090,59>",(ERR_LENGTH)); Inst81++; } } catch(e) {}try { if (Inst82 <= 1000 && typeof (MSG_EXPECT) != "undefined") {_RecordType("<2093,2103,59>",(MSG_EXPECT)); Inst82++; } } catch(e) {}try { if (Inst83 <= 1000 && typeof (expected) != "undefined") {_RecordType("<2106,2114,59>",(expected)); Inst83++; } } catch(e) {}try { if (Inst84 <= 1000 && typeof (MSG_ACTUAL) != "undefined") {_RecordType("<2117,2127,59>",(MSG_ACTUAL)); Inst84++; } } catch(e) {}try { if (Inst85 <= 1000 && typeof (actual) != "undefined") {_RecordType("<2130,2136,59>",(actual)); Inst85++; } } catch(e) {}try { if (Inst86 <= 1000 && typeof (CHAR_NL) != "undefined") {_RecordType("<2139,2146,59>",(CHAR_NL)); Inst86++; } } catch(e) {}
            reportCompare(lExpect, lActual, state + ERR_LENGTH + MSG_EXPECT + expected + MSG_ACTUAL + actual + CHAR_NL);
            continue;
          } // OK, the arrays have same length -


try { if (Inst87 <= 1000 && typeof (expected) != "undefined") {_RecordType("<2236,2244,64>",(expected)); Inst87++; } } catch(e) {}try { if (Inst88 <= 1000 && typeof (actual) != "undefined") {_RecordType("<2248,2254,64>",(actual)); Inst88++; } } catch(e) {}
          if (expected != actual) {
try { if (Inst89 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<2270,2283,65>",(reportCompare)); Inst89++; } } catch(e) {}try { if (Inst90 <= 1000 && typeof (expected) != "undefined") {_RecordType("<2284,2292,65>",(expected)); Inst90++; } } catch(e) {}try { if (Inst91 <= 1000 && typeof (actual) != "undefined") {_RecordType("<2294,2300,65>",(actual)); Inst91++; } } catch(e) {}try { if (Inst92 <= 1000 && typeof (state) != "undefined") {_RecordType("<2302,2307,65>",(state)); Inst92++; } } catch(e) {}try { if (Inst93 <= 1000 && typeof (ERR_MATCH) != "undefined") {_RecordType("<2310,2319,65>",(ERR_MATCH)); Inst93++; } } catch(e) {}try { if (Inst94 <= 1000 && typeof (MSG_EXPECT) != "undefined") {_RecordType("<2322,2332,65>",(MSG_EXPECT)); Inst94++; } } catch(e) {}try { if (Inst95 <= 1000 && typeof (expected) != "undefined") {_RecordType("<2335,2343,65>",(expected)); Inst95++; } } catch(e) {}try { if (Inst96 <= 1000 && typeof (MSG_ACTUAL) != "undefined") {_RecordType("<2346,2356,65>",(MSG_ACTUAL)); Inst96++; } } catch(e) {}try { if (Inst97 <= 1000 && typeof (actual) != "undefined") {_RecordType("<2359,2365,65>",(actual)); Inst97++; } } catch(e) {}try { if (Inst98 <= 1000 && typeof (CHAR_NL) != "undefined") {_RecordType("<2368,2375,65>",(CHAR_NL)); Inst98++; } } catch(e) {}
            reportCompare(expected, actual, state + ERR_MATCH + MSG_EXPECT + expected + MSG_ACTUAL + actual + CHAR_NL);
          } else {
try { if (Inst99 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<2409,2422,67>",(reportCompare)); Inst99++; } } catch(e) {}try { if (Inst100 <= 1000 && typeof (expected) != "undefined") {_RecordType("<2423,2431,67>",(expected)); Inst100++; } } catch(e) {}try { if (Inst101 <= 1000 && typeof (actual) != "undefined") {_RecordType("<2433,2439,67>",(actual)); Inst101++; } } catch(e) {}try { if (Inst102 <= 1000 && typeof (state) != "undefined") {_RecordType("<2441,2446,67>",(state)); Inst102++; } } catch(e) {}
            reportCompare(expected, actual, state);
          }
        } else //expectedmatch is null - that is, we did not expect a match -
          {
try { if (Inst104 <= 1000 && typeof (expectedmatch) != "undefined") {_RecordType("<2574,2587,71>",(expectedmatch)); Inst104++; } } catch(e) {}
            expected = expectedmatch;
try { if (Inst103 <= 1000 && typeof (expected) != "undefined") {_RecordType("<2563,2571,71>",(expected)); Inst103++; } } catch(e) {}
try { if (Inst105 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<2601,2614,72>",(reportCompare)); Inst105++; } } catch(e) {}try { if (Inst106 <= 1000 && typeof (expected) != "undefined") {_RecordType("<2615,2623,72>",(expected)); Inst106++; } } catch(e) {}try { if (Inst107 <= 1000 && typeof (actual) != "undefined") {_RecordType("<2625,2631,72>",(actual)); Inst107++; } } catch(e) {}try { if (Inst108 <= 1000 && typeof (state) != "undefined") {_RecordType("<2633,2638,72>",(state)); Inst108++; } } catch(e) {}try { if (Inst109 <= 1000 && typeof (ERR_UNEXP_MATCH) != "undefined") {_RecordType("<2641,2656,72>",(ERR_UNEXP_MATCH)); Inst109++; } } catch(e) {}try { if (Inst110 <= 1000 && typeof (MSG_EXPECT) != "undefined") {_RecordType("<2659,2669,72>",(MSG_EXPECT)); Inst110++; } } catch(e) {}try { if (Inst111 <= 1000 && typeof (expectedmatch) != "undefined") {_RecordType("<2672,2685,72>",(expectedmatch)); Inst111++; } } catch(e) {}try { if (Inst112 <= 1000 && typeof (MSG_ACTUAL) != "undefined") {_RecordType("<2688,2698,72>",(MSG_ACTUAL)); Inst112++; } } catch(e) {}try { if (Inst113 <= 1000 && typeof (actual) != "undefined") {_RecordType("<2701,2707,72>",(actual)); Inst113++; } } catch(e) {}try { if (Inst114 <= 1000 && typeof (CHAR_NL) != "undefined") {_RecordType("<2710,2717,72>",(CHAR_NL)); Inst114++; } } catch(e) {}
            reportCompare(expected, actual, state + ERR_UNEXP_MATCH + MSG_EXPECT + expectedmatch + MSG_ACTUAL + actual + CHAR_NL);
          }
      } else // actualmatch is null
        {
try { if (Inst115 <= 1000 && typeof (expectedmatch) != "undefined") {_RecordType("<2792,2805,76>",(expectedmatch)); Inst115++; } } catch(e) {}
          if (expectedmatch) {
try { if (Inst117 <= 1000 && typeof (actualmatch) != "undefined") {_RecordType("<2830,2841,77>",(actualmatch)); Inst117++; } } catch(e) {}
            actual = actualmatch;
try { if (Inst116 <= 1000 && typeof (actual) != "undefined") {_RecordType("<2821,2827,77>",(actual)); Inst116++; } } catch(e) {}
try { if (Inst118 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<2855,2868,78>",(reportCompare)); Inst118++; } } catch(e) {}try { if (Inst119 <= 1000 && typeof (expected) != "undefined") {_RecordType("<2869,2877,78>",(expected)); Inst119++; } } catch(e) {}try { if (Inst120 <= 1000 && typeof (actual) != "undefined") {_RecordType("<2879,2885,78>",(actual)); Inst120++; } } catch(e) {}try { if (Inst121 <= 1000 && typeof (state) != "undefined") {_RecordType("<2887,2892,78>",(state)); Inst121++; } } catch(e) {}try { if (Inst122 <= 1000 && typeof (ERR_NO_MATCH) != "undefined") {_RecordType("<2895,2907,78>",(ERR_NO_MATCH)); Inst122++; } } catch(e) {}try { if (Inst123 <= 1000 && typeof (MSG_EXPECT) != "undefined") {_RecordType("<2910,2920,78>",(MSG_EXPECT)); Inst123++; } } catch(e) {}try { if (Inst124 <= 1000 && typeof (expectedmatch) != "undefined") {_RecordType("<2923,2936,78>",(expectedmatch)); Inst124++; } } catch(e) {}try { if (Inst125 <= 1000 && typeof (MSG_ACTUAL) != "undefined") {_RecordType("<2939,2949,78>",(MSG_ACTUAL)); Inst125++; } } catch(e) {}try { if (Inst126 <= 1000 && typeof (actualmatch) != "undefined") {_RecordType("<2952,2963,78>",(actualmatch)); Inst126++; } } catch(e) {}try { if (Inst127 <= 1000 && typeof (CHAR_NL) != "undefined") {_RecordType("<2966,2973,78>",(CHAR_NL)); Inst127++; } } catch(e) {}
            reportCompare(expected, actual, state + ERR_NO_MATCH + MSG_EXPECT + expectedmatch + MSG_ACTUAL + actualmatch + CHAR_NL);
          } else // we did not expect a match
            {
              // Being ultra-cautious. Presumably expectedmatch===actualmatch===null
try { if (Inst129 <= 1000 && typeof (expectedmatch) != "undefined") {_RecordType("<3146,3159,82>",(expectedmatch)); Inst129++; } } catch(e) {}
              expected = expectedmatch;
try { if (Inst128 <= 1000 && typeof (expected) != "undefined") {_RecordType("<3135,3143,82>",(expected)); Inst128++; } } catch(e) {}
try { if (Inst131 <= 1000 && typeof (actualmatch) != "undefined") {_RecordType("<3184,3195,83>",(actualmatch)); Inst131++; } } catch(e) {}
              actual = actualmatch;
try { if (Inst130 <= 1000 && typeof (actual) != "undefined") {_RecordType("<3175,3181,83>",(actual)); Inst130++; } } catch(e) {}
try { if (Inst132 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<3211,3224,84>",(reportCompare)); Inst132++; } } catch(e) {}try { if (Inst133 <= 1000 && typeof (expectedmatch) != "undefined") {_RecordType("<3225,3238,84>",(expectedmatch)); Inst133++; } } catch(e) {}try { if (Inst134 <= 1000 && typeof (actualmatch) != "undefined") {_RecordType("<3240,3251,84>",(actualmatch)); Inst134++; } } catch(e) {}try { if (Inst135 <= 1000 && typeof (state) != "undefined") {_RecordType("<3253,3258,84>",(state)); Inst135++; } } catch(e) {}
              reportCompare(expectedmatch, actualmatch, state);
            }
        }
    }
  }

try { if (Inst138 <= 1000 && typeof (testRegExp) != "undefined") {_RecordType("<3318,3328,90>",(testRegExp)); Inst138++; } } catch(e) {}
  global.testRegExp = testRegExp;
try { if (Inst136 <= 1000 && typeof (global.testRegExp) != "undefined") {_RecordType("<3298,3315,90>",(global.testRegExp)); Inst136++; } } catch(e) {}try { if (Inst137 <= 1000 && typeof (global) != "undefined") {_RecordType("<3298,3304,90>",(global)); Inst137++; } } catch(e) {}

try { if (Inst139 <= 1000 && typeof (getState) != "undefined") {_RecordType("<3342,3350,92>",(getState)); Inst139++; } } catch(e) {}
  function getState(status, pattern, string) {
try { if (Inst140 <= 1000 && typeof (status) != "undefined") {_RecordType("<3351,3357,92>",(status)); Inst140++; } } catch(e) {}try { if (Inst141 <= 1000 && typeof (pattern) != "undefined") {_RecordType("<3359,3366,92>",(pattern)); Inst141++; } } catch(e) {}try { if (Inst142 <= 1000 && typeof (string) != "undefined") {_RecordType("<3368,3374,92>",(string)); Inst142++; } } catch(e) {}
    /*
     * Escape \n's, etc. to make them LITERAL in the presentation string.
     * We don't have to worry about this in |pattern|; such escaping is
     * done automatically by pattern.toString(), invoked implicitly below.
     *
     * One would like to simply do: string = string.replace(/(\s)/g, '\$1').
     * However, the backreference $1 is not a literal string value,
     * so this method doesn't work.
     *
     * Also tried string = string.replace(/(\s)/g, escape('$1'));
     * but this just inserts the escape of the literal '$1', i.e. '%241'.
     */
try { if (Inst144 <= 1000 && typeof (string.replace) != "undefined") {_RecordType("<3962,3976,105>",(string.replace)); Inst144++; } } catch(e) {}try { if (Inst145 <= 1000 && typeof (string) != "undefined") {_RecordType("<3962,3968,105>",(string)); Inst145++; } } catch(e) {}
    string = string.replace(/\n/g, '\\n');
try { if (Inst143 <= 1000 && typeof (string) != "undefined") {_RecordType("<3953,3959,105>",(string)); Inst143++; } } catch(e) {}
try { if (Inst147 <= 1000 && typeof (string.replace) != "undefined") {_RecordType("<4005,4019,106>",(string.replace)); Inst147++; } } catch(e) {}try { if (Inst148 <= 1000 && typeof (string) != "undefined") {_RecordType("<4005,4011,106>",(string)); Inst148++; } } catch(e) {}
    string = string.replace(/\r/g, '\\r');
try { if (Inst146 <= 1000 && typeof (string) != "undefined") {_RecordType("<3996,4002,106>",(string)); Inst146++; } } catch(e) {}
try { if (Inst150 <= 1000 && typeof (string.replace) != "undefined") {_RecordType("<4048,4062,107>",(string.replace)); Inst150++; } } catch(e) {}try { if (Inst151 <= 1000 && typeof (string) != "undefined") {_RecordType("<4048,4054,107>",(string)); Inst151++; } } catch(e) {}
    string = string.replace(/\t/g, '\\t');
try { if (Inst149 <= 1000 && typeof (string) != "undefined") {_RecordType("<4039,4045,107>",(string)); Inst149++; } } catch(e) {}
try { if (Inst153 <= 1000 && typeof (string.replace) != "undefined") {_RecordType("<4091,4105,108>",(string.replace)); Inst153++; } } catch(e) {}try { if (Inst154 <= 1000 && typeof (string) != "undefined") {_RecordType("<4091,4097,108>",(string)); Inst154++; } } catch(e) {}
    string = string.replace(/\v/g, '\\v');
try { if (Inst152 <= 1000 && typeof (string) != "undefined") {_RecordType("<4082,4088,108>",(string)); Inst152++; } } catch(e) {}
try { if (Inst156 <= 1000 && typeof (string.replace) != "undefined") {_RecordType("<4134,4148,109>",(string.replace)); Inst156++; } } catch(e) {}try { if (Inst157 <= 1000 && typeof (string) != "undefined") {_RecordType("<4134,4140,109>",(string)); Inst157++; } } catch(e) {}
    string = string.replace(/\f/g, '\\f');
try { if (Inst155 <= 1000 && typeof (string) != "undefined") {_RecordType("<4125,4131,109>",(string)); Inst155++; } } catch(e) {}
try { if (Inst158 <= 1000 && typeof (status) != "undefined") {_RecordType("<4175,4181,110>",(status)); Inst158++; } } catch(e) {}try { if (Inst159 <= 1000 && typeof (MSG_PATTERN) != "undefined") {_RecordType("<4184,4195,110>",(MSG_PATTERN)); Inst159++; } } catch(e) {}try { if (Inst160 <= 1000 && typeof (pattern) != "undefined") {_RecordType("<4198,4205,110>",(pattern)); Inst160++; } } catch(e) {}try { if (Inst161 <= 1000 && typeof (MSG_STRING) != "undefined") {_RecordType("<4208,4218,110>",(MSG_STRING)); Inst161++; } } catch(e) {}try { if (Inst162 <= 1000 && typeof (singleQuote) != "undefined") {_RecordType("<4221,4232,110>",(singleQuote)); Inst162++; } } catch(e) {}try { if (Inst163 <= 1000 && typeof (string) != "undefined") {_RecordType("<4233,4239,110>",(string)); Inst163++; } } catch(e) {}
    return status + MSG_PATTERN + pattern + MSG_STRING + singleQuote(string);
  }
  /*
   * If available, arr.toSource() gives more detail than arr.toString()
   *
   * var arr = Array(1,2,'3');
   *
   * arr.toSource()
   * [1, 2, "3"]
   *
   * arr.toString()
   * 1,2,3
   *
   * But toSource() doesn't exist in Rhino, so use our own imitation, below -
   *
   */

  /*
   * Imitate SpiderMonkey's arr.toSource() method:
   *
   * a) Double-quote each array element that is of string type
   * b) Represent |undefined| and |null| by empty strings
   * c) Delimit elements by a comma + single space
   * d) Do not add delimiter at the end UNLESS the last element is |undefined|
   * e) Add square brackets to the beginning and end of the string
   */


try { if (Inst164 <= 1000 && typeof (toSource) != "undefined") {_RecordType("<4930,4938,138>",(toSource)); Inst164++; } } catch(e) {}
  function toSource(arr) {
try { if (Inst165 <= 1000 && typeof (arr) != "undefined") {_RecordType("<4939,4942,138>",(arr)); Inst165++; } } catch(e) {}
try { if (Inst167 <= 1000 && typeof (CHAR_COMMA) != "undefined") {_RecordType("<4962,4972,139>",(CHAR_COMMA)); Inst167++; } } catch(e) {}try { if (Inst168 <= 1000 && typeof (CHAR_SPACE) != "undefined") {_RecordType("<4975,4985,139>",(CHAR_SPACE)); Inst168++; } } catch(e) {}
    var delim = CHAR_COMMA + CHAR_SPACE;
try { if (Inst166 <= 1000 && typeof (delim) != "undefined") {_RecordType("<4954,4959,139>",(delim)); Inst166++; } } catch(e) {}
    var elt = '';
try { if (Inst169 <= 1000 && typeof (elt) != "undefined") {_RecordType("<4995,4998,140>",(elt)); Inst169++; } } catch(e) {}
    var ret = '';
try { if (Inst170 <= 1000 && typeof (ret) != "undefined") {_RecordType("<5013,5016,141>",(ret)); Inst170++; } } catch(e) {}
try { if (Inst172 <= 1000 && typeof (arr.length) != "undefined") {_RecordType("<5037,5047,142>",(arr.length)); Inst172++; } } catch(e) {}try { if (Inst173 <= 1000 && typeof (arr) != "undefined") {_RecordType("<5037,5040,142>",(arr)); Inst173++; } } catch(e) {}
    var len = arr.length;
try { if (Inst171 <= 1000 && typeof (len) != "undefined") {_RecordType("<5031,5034,142>",(len)); Inst171++; } } catch(e) {}

    for (i = 0; i < len; i++) {
try { if (Inst174 <= 1000 && typeof (i) != "undefined") {_RecordType("<5059,5060,144>",(i)); Inst174++; } } catch(e) {}try { if (Inst175 <= 1000 && typeof (i) != "undefined") {_RecordType("<5066,5067,144>",(i)); Inst175++; } } catch(e) {}try { if (Inst176 <= 1000 && typeof (len) != "undefined") {_RecordType("<5070,5073,144>",(len)); Inst176++; } } catch(e) {}try { if (Inst177 <= 1000 && typeof (i) != "undefined") {_RecordType("<5075,5076,144>",(i)); Inst177++; } } catch(e) {}
try { if (Inst179 <= 1000 && typeof (arr[i]) != "undefined") {_RecordType("<5094,5100,145>",(arr[i])); Inst179++; } } catch(e) {}try { if (Inst180 <= 1000 && typeof (arr) != "undefined") {_RecordType("<5094,5097,145>",(arr)); Inst180++; } } catch(e) {}
      elt = arr[i];
try { if (Inst178 <= 1000 && typeof (elt) != "undefined") {_RecordType("<5088,5091,145>",(elt)); Inst178++; } } catch(e) {}

try { if (Inst181 <= 1000 && typeof (elt) != "undefined") {_RecordType("<5145,5148,148>",(elt)); Inst181++; } } catch(e) {}try { if (Inst182 <= 1000 && typeof (TYPE_STRING) != "undefined") {_RecordType("<5153,5164,148>",(TYPE_STRING)); Inst182++; } } catch(e) {}try { if (Inst186 <= 1000 && typeof (elt) != "undefined") {_RecordType("<5232,5235,152>",(elt)); Inst186++; } } catch(e) {}try { if (Inst187 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<5240,5249,152>",(undefined)); Inst187++; } } catch(e) {}try { if (Inst188 <= 1000 && typeof (elt) != "undefined") {_RecordType("<5253,5256,152>",(elt)); Inst188++; } } catch(e) {}
      switch (true) {
        case typeof elt === TYPE_STRING:
try { if (Inst184 <= 1000 && typeof (doubleQuote) != "undefined") {_RecordType("<5183,5194,149>",(doubleQuote)); Inst184++; } } catch(e) {}try { if (Inst185 <= 1000 && typeof (elt) != "undefined") {_RecordType("<5195,5198,149>",(elt)); Inst185++; } } catch(e) {}
          ret += doubleQuote(elt);
try { if (Inst183 <= 1000 && typeof (ret) != "undefined") {_RecordType("<5176,5179,149>",(ret)); Inst183++; } } catch(e) {}
          break;

        case elt === undefined || elt === null:
          break;
        // add nothing but the delimiter, below -

        default:
try { if (Inst190 <= 1000 && typeof (elt.toString) != "undefined") {_RecordType("<5369,5381,157>",(elt.toString)); Inst190++; } } catch(e) {}try { if (Inst191 <= 1000 && typeof (elt) != "undefined") {_RecordType("<5369,5372,157>",(elt)); Inst191++; } } catch(e) {}
          ret += elt.toString();
try { if (Inst189 <= 1000 && typeof (ret) != "undefined") {_RecordType("<5362,5365,157>",(ret)); Inst189++; } } catch(e) {}
      }

try { if (Inst192 <= 1000 && typeof (i) != "undefined") {_RecordType("<5404,5405,160>",(i)); Inst192++; } } catch(e) {}try { if (Inst193 <= 1000 && typeof (len) != "undefined") {_RecordType("<5408,5411,160>",(len)); Inst193++; } } catch(e) {}try { if (Inst194 <= 1000 && typeof (elt) != "undefined") {_RecordType("<5419,5422,160>",(elt)); Inst194++; } } catch(e) {}try { if (Inst195 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<5427,5436,160>",(undefined)); Inst195++; } } catch(e) {}
      if (i < len - 1 || elt === undefined) {
try { if (Inst197 <= 1000 && typeof (delim) != "undefined") {_RecordType("<5455,5460,161>",(delim)); Inst197++; } } catch(e) {}
        ret += delim;
try { if (Inst196 <= 1000 && typeof (ret) != "undefined") {_RecordType("<5448,5451,161>",(ret)); Inst196++; } } catch(e) {}
      }
    }

try { if (Inst198 <= 1000 && typeof (CHAR_LBRACKET) != "undefined") {_RecordType("<5488,5501,165>",(CHAR_LBRACKET)); Inst198++; } } catch(e) {}try { if (Inst199 <= 1000 && typeof (ret) != "undefined") {_RecordType("<5504,5507,165>",(ret)); Inst199++; } } catch(e) {}try { if (Inst200 <= 1000 && typeof (CHAR_RBRACKET) != "undefined") {_RecordType("<5510,5523,165>",(CHAR_RBRACKET)); Inst200++; } } catch(e) {}
    return CHAR_LBRACKET + ret + CHAR_RBRACKET;
  }

try { if (Inst201 <= 1000 && typeof (doubleQuote) != "undefined") {_RecordType("<5541,5552,168>",(doubleQuote)); Inst201++; } } catch(e) {}
  function doubleQuote(text) {
try { if (Inst202 <= 1000 && typeof (text) != "undefined") {_RecordType("<5553,5557,168>",(text)); Inst202++; } } catch(e) {}
try { if (Inst203 <= 1000 && typeof (CHAR_QT_DBL) != "undefined") {_RecordType("<5572,5583,169>",(CHAR_QT_DBL)); Inst203++; } } catch(e) {}try { if (Inst204 <= 1000 && typeof (text) != "undefined") {_RecordType("<5586,5590,169>",(text)); Inst204++; } } catch(e) {}try { if (Inst205 <= 1000 && typeof (CHAR_QT_DBL) != "undefined") {_RecordType("<5593,5604,169>",(CHAR_QT_DBL)); Inst205++; } } catch(e) {}
    return CHAR_QT_DBL + text + CHAR_QT_DBL;
  }

try { if (Inst206 <= 1000 && typeof (singleQuote) != "undefined") {_RecordType("<5622,5633,172>",(singleQuote)); Inst206++; } } catch(e) {}
  function singleQuote(text) {
try { if (Inst207 <= 1000 && typeof (text) != "undefined") {_RecordType("<5634,5638,172>",(text)); Inst207++; } } catch(e) {}
try { if (Inst208 <= 1000 && typeof (CHAR_QT) != "undefined") {_RecordType("<5653,5660,173>",(CHAR_QT)); Inst208++; } } catch(e) {}try { if (Inst209 <= 1000 && typeof (text) != "undefined") {_RecordType("<5663,5667,173>",(text)); Inst209++; } } catch(e) {}try { if (Inst210 <= 1000 && typeof (CHAR_QT) != "undefined") {_RecordType("<5670,5677,173>",(CHAR_QT)); Inst210++; } } catch(e) {}
    return CHAR_QT + text + CHAR_QT;
  }
})(this);

(function (global) {
try { if (Inst211 <= 1000 && typeof (global) != "undefined") {_RecordType("<5705,5711,177>",(global)); Inst211++; } } catch(e) {}
  // The Worker constructor can take a relative URL, but different test runners
  // run in different enough environments that it doesn't all just automatically
  // work. For the shell, we use just a filename; for the browser, see browser.js.
  var workerDir = ''; // Assert that cloning b does the right thing as far as we can tell.
try { if (Inst212 <= 1000 && typeof (workerDir) != "undefined") {_RecordType("<5965,5974,181>",(workerDir)); Inst212++; } } catch(e) {}
  // Caveat: getters in b must produce the same value each time they're
  // called. We may call them several times.
  //
  // If desc is provided, then the very first thing we do to b is clone it.
  // (The self-modifying object test counts on this.)
  //
})(this);

