var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// |reftest| skip-if(!xulRuntime.shell)
// -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 4 -*-
// Any copyright is dedicated to the Public Domain.
// http://creativecommons.org/licenses/publicdomain/
try { if (Inst0 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<231,243,5>",(assertThrows)); Inst0++; } } catch(e) {}
function assertThrows(f) {
try { if (Inst1 <= 1000 && typeof (f) != "undefined") {_RecordType("<244,245,5>",(f)); Inst1++; } } catch(e) {}
  var ok = false;
try { if (Inst2 <= 1000 && typeof (ok) != "undefined") {_RecordType("<255,257,6>",(ok)); Inst2++; } } catch(e) {}

try { if (Inst4 <= 1000 && typeof (exc) != "undefined") {_RecordType("<296,299,10>",(exc)); Inst4++; } } catch(e) {}
  try {
try { if (Inst3 <= 1000 && typeof (f) != "undefined") {_RecordType("<280,281,9>",(f)); Inst3++; } } catch(e) {}
    f();
  } catch (exc) {
    ok = true;
try { if (Inst5 <= 1000 && typeof (ok) != "undefined") {_RecordType("<307,309,11>",(ok)); Inst5++; } } catch(e) {}
  }

try { if (Inst6 <= 1000 && typeof (ok) != "undefined") {_RecordType("<330,332,14>",(ok)); Inst6++; } } catch(e) {}
  if (!ok) {
try { if (Inst7 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<350,359,15>",(TypeError)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (f) != "undefined") {_RecordType("<383,384,15>",(f)); Inst8++; } } catch(e) {}
    throw new TypeError("Assertion failed: " + f + " did not throw as expected");
  }
}

try { if (Inst9 <= 1000 && typeof (byteArray) != "undefined") {_RecordType("<434,443,19>",(byteArray)); Inst9++; } } catch(e) {}
function byteArray(str) {
try { if (Inst10 <= 1000 && typeof (str) != "undefined") {_RecordType("<444,447,19>",(str)); Inst10++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (str.split('').map) != "undefined") {_RecordType("<460,477,20>",(str.split('').map)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (str.split) != "undefined") {_RecordType("<460,469,20>",(str.split)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (str) != "undefined") {_RecordType("<460,463,20>",(str)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (c) != "undefined") {_RecordType("<478,479,20>",(c)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (c.charCodeAt) != "undefined") {_RecordType("<483,495,20>",(c.charCodeAt)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (c) != "undefined") {_RecordType("<483,484,20>",(c)); Inst16++; } } catch(e) {}
  return str.split('').map(c => c.charCodeAt(0));
} // Don't allow forging bogus Date objects.


try { if (Inst18 <= 1000 && typeof (byteArray) != "undefined") {_RecordType("<562,571,24>",(byteArray)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (serialize(new Date(NaN)).clonebuffer) != "undefined") {_RecordType("<572,608,24>",(serialize(new Date(NaN)).clonebuffer)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (serialize) != "undefined") {_RecordType("<572,581,24>",(serialize)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Date) != "undefined") {_RecordType("<586,590,24>",(Date)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<591,594,24>",(NaN)); Inst22++; } } catch(e) {}
var mutated = byteArray(serialize(new Date(NaN)).clonebuffer);
try { if (Inst17 <= 1000 && typeof (mutated) != "undefined") {_RecordType("<552,559,24>",(mutated)); Inst17++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (Number.MIN_VALUE) != "undefined") {_RecordType("<635,651,25>",(Number.MIN_VALUE)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Number) != "undefined") {_RecordType("<635,641,25>",(Number)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Number.MIN_VALUE) != "undefined") {_RecordType("<654,670,25>",(Number.MIN_VALUE)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (Number) != "undefined") {_RecordType("<654,660,25>",(Number)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (Math.PI) != "undefined") {_RecordType("<672,679,25>",(Math.PI)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (Math) != "undefined") {_RecordType("<672,676,25>",(Math)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (Number.MAX_VALUE) != "undefined") {_RecordType("<698,714,25>",(Number.MAX_VALUE)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (Number) != "undefined") {_RecordType("<698,704,25>",(Number)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (Number.MAX_VALUE) != "undefined") {_RecordType("<717,733,25>",(Number.MAX_VALUE)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (Number) != "undefined") {_RecordType("<717,723,25>",(Number)); Inst33++; } } catch(e) {}
var a = [1 / 0, -1 / 0, Number.MIN_VALUE, -Number.MIN_VALUE, Math.PI, 1286523948674.5, Number.MAX_VALUE, -Number.MAX_VALUE, 8.64e15 + 1, -(8.64e15 + 1)];
try { if (Inst23 <= 1000 && typeof (a) != "undefined") {_RecordType("<615,616,25>",(a)); Inst23++; } } catch(e) {}

for (var i = 0; i < a.length; i++) {
try { if (Inst34 <= 1000 && typeof (i) != "undefined") {_RecordType("<775,776,27>",(i)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (i) != "undefined") {_RecordType("<782,783,27>",(i)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<786,794,27>",(a.length)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (a) != "undefined") {_RecordType("<786,787,27>",(a)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (i) != "undefined") {_RecordType("<796,797,27>",(i)); Inst38++; } } catch(e) {}
try { if (Inst40 <= 1000 && typeof (a[i]) != "undefined") {_RecordType("<813,817,28>",(a[i])); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (a) != "undefined") {_RecordType("<813,814,28>",(a)); Inst41++; } } catch(e) {}
  var n = a[i];
try { if (Inst39 <= 1000 && typeof (n) != "undefined") {_RecordType("<809,810,28>",(n)); Inst39++; } } catch(e) {}
try { if (Inst43 <= 1000 && typeof (serialize) != "undefined") {_RecordType("<832,841,29>",(serialize)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (n) != "undefined") {_RecordType("<842,843,29>",(n)); Inst44++; } } catch(e) {}
  var nbuf = serialize(n);
try { if (Inst42 <= 1000 && typeof (nbuf) != "undefined") {_RecordType("<825,829,29>",(nbuf)); Inst42++; } } catch(e) {}
try { if (Inst46 <= 1000 && typeof (byteArray) != "undefined") {_RecordType("<859,868,30>",(byteArray)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (nbuf.clonebuffer) != "undefined") {_RecordType("<869,885,30>",(nbuf.clonebuffer)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (nbuf) != "undefined") {_RecordType("<869,873,30>",(nbuf)); Inst48++; } } catch(e) {}
  var data = byteArray(nbuf.clonebuffer);
try { if (Inst45 <= 1000 && typeof (data) != "undefined") {_RecordType("<852,856,30>",(data)); Inst45++; } } catch(e) {}

  for (var j = 0; j < 8; j++) {
try { if (Inst49 <= 1000 && typeof (j) != "undefined") {_RecordType("<900,901,32>",(j)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (j) != "undefined") {_RecordType("<907,908,32>",(j)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (j) != "undefined") {_RecordType("<914,915,32>",(j)); Inst51++; } } catch(e) {}
try { if (Inst55 <= 1000 && typeof (data[j]) != "undefined") {_RecordType("<942,949,33>",(data[j])); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (data) != "undefined") {_RecordType("<942,946,33>",(data)); Inst56++; } } catch(e) {}
    mutated[j + 8] = data[j];
try { if (Inst52 <= 1000 && typeof (mutated[j + 8]) != "undefined") {_RecordType("<925,939,33>",(mutated[j + 8])); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (mutated) != "undefined") {_RecordType("<925,932,33>",(mutated)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (j) != "undefined") {_RecordType("<933,934,33>",(j)); Inst54++; } } catch(e) {}
  }

try { if (Inst59 <= 1000 && typeof (String.fromCharCode.apply) != "undefined") {_RecordType("<977,1002,36>",(String.fromCharCode.apply)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (String.fromCharCode) != "undefined") {_RecordType("<977,996,36>",(String.fromCharCode)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (String) != "undefined") {_RecordType("<977,983,36>",(String)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (mutated) != "undefined") {_RecordType("<1009,1016,36>",(mutated)); Inst62++; } } catch(e) {}
  nbuf.clonebuffer = String.fromCharCode.apply(null, mutated);
try { if (Inst57 <= 1000 && typeof (nbuf.clonebuffer) != "undefined") {_RecordType("<958,974,36>",(nbuf.clonebuffer)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (nbuf) != "undefined") {_RecordType("<958,962,36>",(nbuf)); Inst58++; } } catch(e) {}

  (function () {
try { if (Inst63 <= 1000 && typeof (deserialize) != "undefined") {_RecordType("<1041,1052,39>",(deserialize)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (nbuf) != "undefined") {_RecordType("<1053,1057,39>",(nbuf)); Inst64++; } } catch(e) {}
    deserialize(nbuf);
  })();
}

try { if (Inst65 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1071,1084,43>",(reportCompare)); Inst65++; } } catch(e) {}
reportCompare(0, 0);

