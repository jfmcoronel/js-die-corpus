var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// |reftest| skip

/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */

/*
 * Any copyright is dedicated to the Public Domain.
 * http://creativecommons.org/licenses/publicdomain/
 * Contributor: Jason Orendorff
 */
//-----------------------------------------------------------------------------
var BUGNUMBER = 479381;
try { if (Inst0 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<328,337,11>",(BUGNUMBER)); Inst0++; } } catch(e) {}
var summary = 'Do not crash @ js_FinalizeStringRT with multi-threads.';
try { if (Inst1 <= 1000 && typeof (summary) != "undefined") {_RecordType("<352,359,12>",(summary)); Inst1++; } } catch(e) {}
var actual = '';
try { if (Inst2 <= 1000 && typeof (actual) != "undefined") {_RecordType("<424,430,13>",(actual)); Inst2++; } } catch(e) {}
var expect = ''; //-----------------------------------------------------------------------------
try { if (Inst3 <= 1000 && typeof (expect) != "undefined") {_RecordType("<441,447,14>",(expect)); Inst3++; } } catch(e) {}

try { if (Inst4 <= 1000 && typeof (test) != "undefined") {_RecordType("<535,539,16>",(test)); Inst4++; } } catch(e) {}
test(); //-----------------------------------------------------------------------------

try { if (Inst5 <= 1000 && typeof (test) != "undefined") {_RecordType("<633,637,18>",(test)); Inst5++; } } catch(e) {}
function test() {
try { if (Inst6 <= 1000 && typeof (printBugNumber) != "undefined") {_RecordType("<644,658,19>",(printBugNumber)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<659,668,19>",(BUGNUMBER)); Inst7++; } } catch(e) {}
  printBugNumber(BUGNUMBER);
try { if (Inst8 <= 1000 && typeof (printStatus) != "undefined") {_RecordType("<673,684,20>",(printStatus)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (summary) != "undefined") {_RecordType("<685,692,20>",(summary)); Inst9++; } } catch(e) {}
  printStatus(summary);

try { if (Inst10 <= 1000 && typeof (gczeal) != "undefined") {_RecordType("<709,715,22>",(gczeal)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (scatter) != "undefined") {_RecordType("<740,747,22>",(scatter)); Inst11++; } } catch(e) {}
  if (typeof gczeal != 'function' || typeof scatter != 'function') {
try { if (Inst12 <= 1000 && typeof (print) != "undefined") {_RecordType("<769,774,23>",(print)); Inst12++; } } catch(e) {}
    print(expect = actual = 'Test skipped: requires mulithreads');
try { if (Inst13 <= 1000 && typeof (expect) != "undefined") {_RecordType("<775,781,23>",(expect)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (actual) != "undefined") {_RecordType("<784,790,23>",(actual)); Inst14++; } } catch(e) {}
  } else {
    expect = actual = 'No Crash';
try { if (Inst15 <= 1000 && typeof (expect) != "undefined") {_RecordType("<847,853,25>",(expect)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (actual) != "undefined") {_RecordType("<856,862,25>",(actual)); Inst16++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (gczeal) != "undefined") {_RecordType("<881,887,26>",(gczeal)); Inst17++; } } catch(e) {}
    gczeal(2);

try { if (Inst18 <= 1000 && typeof (f) != "undefined") {_RecordType("<906,907,28>",(f)); Inst18++; } } catch(e) {}
    function f() {
      var s;
try { if (Inst19 <= 1000 && typeof (s) != "undefined") {_RecordType("<922,923,29>",(s)); Inst19++; } } catch(e) {}

      for (var i = 0; i < 9999; i++) {
try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<941,942,31>",(i)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<948,949,31>",(i)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<958,959,31>",(i)); Inst22++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (String(i)[3]) != "undefined") {_RecordType("<983,995,32>",(String(i)[3])); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (String) != "undefined") {_RecordType("<983,989,32>",(String)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (i) != "undefined") {_RecordType("<990,991,32>",(i)); Inst26++; } } catch(e) {}
        s = 'a' + String(i)[3] + 'b';
try { if (Inst23 <= 1000 && typeof (s) != "undefined") {_RecordType("<973,974,32>",(s)); Inst23++; } } catch(e) {}
      }

try { if (Inst27 <= 1000 && typeof (s) != "undefined") {_RecordType("<1025,1026,35>",(s)); Inst27++; } } catch(e) {}
      return s;
    }

try { if (Inst28 <= 1000 && typeof (print) != "undefined") {_RecordType("<1039,1044,38>",(print)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (scatter) != "undefined") {_RecordType("<1045,1052,38>",(scatter)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (f) != "undefined") {_RecordType("<1054,1055,38>",(f)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (f) != "undefined") {_RecordType("<1057,1058,38>",(f)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (f) != "undefined") {_RecordType("<1060,1061,38>",(f)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (f) != "undefined") {_RecordType("<1063,1064,38>",(f)); Inst33++; } } catch(e) {}
    print(scatter([f, f, f, f]));
try { if (Inst34 <= 1000 && typeof (gczeal) != "undefined") {_RecordType("<1073,1079,39>",(gczeal)); Inst34++; } } catch(e) {}
    gczeal(0);
  }

try { if (Inst35 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1091,1104,42>",(reportCompare)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1105,1111,42>",(expect)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1113,1119,42>",(actual)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (summary) != "undefined") {_RecordType("<1121,1128,42>",(summary)); Inst38++; } } catch(e) {}
  reportCompare(expect, actual, summary);
}

