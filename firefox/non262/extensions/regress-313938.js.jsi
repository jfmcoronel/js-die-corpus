var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* -*- indent-tabs-mode: nil; js-indent-level: 2 -*- */

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
//-----------------------------------------------------------------------------
var BUGNUMBER = 313938;
try { if (Inst0 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<346,355,7>",(BUGNUMBER)); Inst0++; } } catch(e) {}
var summary = 'Root access in jsscript.c';
try { if (Inst1 <= 1000 && typeof (summary) != "undefined") {_RecordType("<370,377,8>",(summary)); Inst1++; } } catch(e) {}
var actual = '';
try { if (Inst2 <= 1000 && typeof (actual) != "undefined") {_RecordType("<413,419,9>",(actual)); Inst2++; } } catch(e) {}
var expect = '';
try { if (Inst3 <= 1000 && typeof (expect) != "undefined") {_RecordType("<430,436,10>",(expect)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (printBugNumber) != "undefined") {_RecordType("<443,457,11>",(printBugNumber)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<458,467,11>",(BUGNUMBER)); Inst5++; } } catch(e) {}
printBugNumber(BUGNUMBER);
try { if (Inst6 <= 1000 && typeof (printStatus) != "undefined") {_RecordType("<470,481,12>",(printStatus)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (summary) != "undefined") {_RecordType("<482,489,12>",(summary)); Inst7++; } } catch(e) {}
printStatus(summary);

try { if (Inst8 <= 1000 && typeof (Script) != "undefined") {_RecordType("<504,510,14>",(Script)); Inst8++; } } catch(e) {}
if (typeof Script == 'undefined') {
try { if (Inst9 <= 1000 && typeof (print) != "undefined") {_RecordType("<531,536,15>",(print)); Inst9++; } } catch(e) {}
  print('Test skipped. Script not defined.');
try { if (Inst10 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<577,590,16>",(reportCompare)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (summary) != "undefined") {_RecordType("<665,672,16>",(summary)); Inst11++; } } catch(e) {}
  reportCompare("Script not defined, Test skipped.", "Script not defined, Test skipped.", summary);
} else {
try { if (Inst13 <= 1000 && typeof (" 2;".substring) != "undefined") {_RecordType("<696,711,18>",(" 2;".substring)); Inst13++; } } catch(e) {}
  var str = " 2;".substring(1);
try { if (Inst12 <= 1000 && typeof (str) != "undefined") {_RecordType("<690,693,18>",(str)); Inst12++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof ("1".substring) != "undefined") {_RecordType("<718,731,19>",("1".substring)); Inst14++; } } catch(e) {}
  "1".substring(2);
try { if (Inst16 <= 1000 && typeof (Script.prototype.compile(str).toSource) != "undefined") {_RecordType("<747,785,20>",(Script.prototype.compile(str).toSource)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Script.prototype.compile) != "undefined") {_RecordType("<747,771,20>",(Script.prototype.compile)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Script.prototype) != "undefined") {_RecordType("<747,763,20>",(Script.prototype)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Script) != "undefined") {_RecordType("<747,753,20>",(Script)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (str) != "undefined") {_RecordType("<772,775,20>",(str)); Inst20++; } } catch(e) {}
  expect = Script.prototype.compile(str).toSource();
try { if (Inst15 <= 1000 && typeof (expect) != "undefined") {_RecordType("<738,744,20>",(expect)); Inst15++; } } catch(e) {}
  var likeString = {
    toString: function () {
try { if (Inst23 <= 1000 && typeof (str) != "undefined") {_RecordType("<854,857,23>",(str)); Inst23++; } } catch(e) {}
      var tmp = str;
try { if (Inst22 <= 1000 && typeof (tmp) != "undefined") {_RecordType("<848,851,23>",(tmp)); Inst22++; } } catch(e) {}
      str = null;
try { if (Inst24 <= 1000 && typeof (str) != "undefined") {_RecordType("<865,868,24>",(str)); Inst24++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (tmp) != "undefined") {_RecordType("<890,893,25>",(tmp)); Inst25++; } } catch(e) {}
      return tmp;
    }
  };
try { if (Inst21 <= 1000 && typeof (likeString) != "undefined") {_RecordType("<795,805,21>",(likeString)); Inst21++; } } catch(e) {}
  TWO = 2.0;
try { if (Inst26 <= 1000 && typeof (TWO) != "undefined") {_RecordType("<908,911,28>",(TWO)); Inst26++; } } catch(e) {}
  var likeObject = {
    valueOf: function () {
try { if (Inst28 <= 1000 && typeof (gc) != "undefined") {_RecordType("<984,986,31>",(gc)); Inst28++; } } catch(e) {}
      if (typeof gc == "function") {
try { if (Inst29 <= 1000 && typeof (gc) != "undefined") {_RecordType("<1012,1014,32>",(gc)); Inst29++; } } catch(e) {}
        gc();
      }

      for (var i = 0; i != 40000; ++i) {
try { if (Inst30 <= 1000 && typeof (i) != "undefined") {_RecordType("<1042,1043,35>",(i)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (i) != "undefined") {_RecordType("<1049,1050,35>",(i)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (i) != "undefined") {_RecordType("<1063,1064,35>",(i)); Inst32++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof (TWO) != "undefined") {_RecordType("<1094,1097,36>",(TWO)); Inst34++; } } catch(e) {}
        var tmp = 1e100 * TWO;
try { if (Inst33 <= 1000 && typeof (tmp) != "undefined") {_RecordType("<1080,1083,36>",(tmp)); Inst33++; } } catch(e) {}
      }

      return this;
    }
  };
try { if (Inst27 <= 1000 && typeof (likeObject) != "undefined") {_RecordType("<925,935,29>",(likeObject)); Inst27++; } } catch(e) {}
try { if (Inst36 <= 1000 && typeof (Script.prototype.compile) != "undefined") {_RecordType("<1148,1172,42>",(Script.prototype.compile)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (Script.prototype) != "undefined") {_RecordType("<1148,1164,42>",(Script.prototype)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (Script) != "undefined") {_RecordType("<1148,1154,42>",(Script)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (likeString) != "undefined") {_RecordType("<1173,1183,42>",(likeString)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (likeObject) != "undefined") {_RecordType("<1185,1195,42>",(likeObject)); Inst40++; } } catch(e) {}
  var s = Script.prototype.compile(likeString, likeObject);
try { if (Inst35 <= 1000 && typeof (s) != "undefined") {_RecordType("<1144,1145,42>",(s)); Inst35++; } } catch(e) {}
try { if (Inst42 <= 1000 && typeof (s.toSource) != "undefined") {_RecordType("<1213,1223,43>",(s.toSource)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (s) != "undefined") {_RecordType("<1213,1214,43>",(s)); Inst43++; } } catch(e) {}
  var actual = s.toSource();
try { if (Inst41 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1204,1210,43>",(actual)); Inst41++; } } catch(e) {}
try { if (Inst44 <= 1000 && typeof (printStatus) != "undefined") {_RecordType("<1229,1240,44>",(printStatus)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1241,1247,44>",(expect)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1252,1258,44>",(actual)); Inst46++; } } catch(e) {}
  printStatus(expect === actual);
try { if (Inst47 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1263,1276,45>",(reportCompare)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1277,1283,45>",(expect)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1285,1291,45>",(actual)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (summary) != "undefined") {_RecordType("<1293,1300,45>",(summary)); Inst50++; } } catch(e) {}
  reportCompare(expect, actual, summary);
}

