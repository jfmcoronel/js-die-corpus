var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/*
 * Any copyright is dedicated to the Public Domain.
 * http://creativecommons.org/publicdomain/zero/1.0/
 */
var gTestfile = "too-many-arguments-constructing-bound-function.js"; //-----------------------------------------------------------------------------
try { if (Inst0 <= 1000 && typeof (gTestfile) != "undefined") {_RecordType("<116,125,5>",(gTestfile)); Inst0++; } } catch(e) {}

var BUGNUMBER = 1303678;
try { if (Inst1 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<266,275,7>",(BUGNUMBER)); Inst1++; } } catch(e) {}
var summary = "Don't assert trying to construct a bound function whose bound-target " + "construct operation passes more than ARGS_LENGTH_MAX arguments";
try { if (Inst2 <= 1000 && typeof (summary) != "undefined") {_RecordType("<291,298,8>",(summary)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (print) != "undefined") {_RecordType("<441,446,9>",(print)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<447,456,9>",(BUGNUMBER)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (summary) != "undefined") {_RecordType("<466,473,9>",(summary)); Inst5++; } } catch(e) {}
print(BUGNUMBER + ": " + summary);
/**************
 * BEGIN TEST *
 **************/

try { if (Inst7 <= 1000 && typeof (getMaxArgs) != "undefined") {_RecordType("<557,567,14>",(getMaxArgs)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (getMaxArgs) != "undefined") {_RecordType("<585,595,14>",(getMaxArgs)); Inst8++; } } catch(e) {}
const ARGS_LENGTH_MAX = typeof getMaxArgs === "function" ? getMaxArgs() : 500000;
try { if (Inst6 <= 1000 && typeof (ARGS_LENGTH_MAX) != "undefined") {_RecordType("<532,547,14>",(ARGS_LENGTH_MAX)); Inst6++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (Math.floor) != "undefined") {_RecordType("<632,642,15>",(Math.floor)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Math) != "undefined") {_RecordType("<632,636,15>",(Math)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (ARGS_LENGTH_MAX) != "undefined") {_RecordType("<643,658,15>",(ARGS_LENGTH_MAX)); Inst12++; } } catch(e) {}
const halfRoundedDown = Math.floor(ARGS_LENGTH_MAX / 2);
try { if (Inst9 <= 1000 && typeof (halfRoundedDown) != "undefined") {_RecordType("<614,629,15>",(halfRoundedDown)); Inst9++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (Math.ceil) != "undefined") {_RecordType("<687,696,16>",(Math.ceil)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Math) != "undefined") {_RecordType("<687,691,16>",(Math)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (ARGS_LENGTH_MAX) != "undefined") {_RecordType("<697,712,16>",(ARGS_LENGTH_MAX)); Inst16++; } } catch(e) {}
const halfRoundedUp = Math.ceil(ARGS_LENGTH_MAX / 2);
try { if (Inst13 <= 1000 && typeof (halfRoundedUp) != "undefined") {_RecordType("<671,684,16>",(halfRoundedUp)); Inst13++; } } catch(e) {}

try { if (Inst17 <= 1000 && typeof (boundTarget) != "undefined") {_RecordType("<729,740,18>",(boundTarget)); Inst17++; } } catch(e) {}
function boundTarget() {
try { if (Inst18 <= 1000 && typeof (Number) != "undefined") {_RecordType("<758,764,19>",(Number)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (arguments.length) != "undefined") {_RecordType("<765,781,19>",(arguments.length)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<765,774,19>",(arguments)); Inst20++; } } catch(e) {}
  return new Number(arguments.length);
}

try { if (Inst22 <= 1000 && typeof (Array(halfRoundedDown).fill) != "undefined") {_RecordType("<803,830,22>",(Array(halfRoundedDown).fill)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Array) != "undefined") {_RecordType("<803,808,22>",(Array)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (halfRoundedDown) != "undefined") {_RecordType("<809,824,22>",(halfRoundedDown)); Inst24++; } } catch(e) {}
var boundArgs = Array(halfRoundedDown).fill(0);
try { if (Inst21 <= 1000 && typeof (boundArgs) != "undefined") {_RecordType("<791,800,22>",(boundArgs)); Inst21++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (boundTarget.bind) != "undefined") {_RecordType("<855,871,23>",(boundTarget.bind)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (boundTarget) != "undefined") {_RecordType("<855,866,23>",(boundTarget)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (boundArgs) != "undefined") {_RecordType("<881,890,23>",(boundArgs)); Inst28++; } } catch(e) {}
var boundFunction = boundTarget.bind(null, ...boundArgs);
try { if (Inst25 <= 1000 && typeof (boundFunction) != "undefined") {_RecordType("<839,852,23>",(boundFunction)); Inst25++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (Array(halfRoundedUp + 1).fill) != "undefined") {_RecordType("<914,943,24>",(Array(halfRoundedUp + 1).fill)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (Array) != "undefined") {_RecordType("<914,919,24>",(Array)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (halfRoundedUp) != "undefined") {_RecordType("<920,933,24>",(halfRoundedUp)); Inst32++; } } catch(e) {}
var additionalArgs = Array(halfRoundedUp + 1).fill(0);
try { if (Inst29 <= 1000 && typeof (additionalArgs) != "undefined") {_RecordType("<897,911,24>",(additionalArgs)); Inst29++; } } catch(e) {}

try { if (Inst37 <= 1000 && typeof (e) != "undefined") {_RecordType("<1037,1038,29>",(e)); Inst37++; } } catch(e) {}
try {
try { if (Inst33 <= 1000 && typeof (new boundFunction(...additionalArgs).valueOf) != "undefined") {_RecordType("<957,1001,27>",(new boundFunction(...additionalArgs).valueOf)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (boundFunction) != "undefined") {_RecordType("<961,974,27>",(boundFunction)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (additionalArgs) != "undefined") {_RecordType("<978,992,27>",(additionalArgs)); Inst35++; } } catch(e) {}
  new boundFunction(...additionalArgs).valueOf();
try { if (Inst36 <= 1000 && typeof (ARGS_LENGTH_MAX) != "undefined") {_RecordType("<1007,1022,28>",(ARGS_LENGTH_MAX)); Inst36++; } } catch(e) {}
  ARGS_LENGTH_MAX + 1;
} catch (e) {
try { if (Inst38 <= 1000 && typeof (e) != "undefined") {_RecordType("<1044,1045,30>",(e)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (RangeError) != "undefined") {_RecordType("<1057,1067,30>",(RangeError)); Inst39++; } } catch(e) {}
  e instanceof RangeError;
  true;
  "SpiderMonkey throws RangeError for too many args";
}
/******************************************************************************/


try { if (Inst40 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1227,1240,37>",(reportCompare)); Inst40++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst41 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1261,1274,38>",(reportCompare)); Inst41++; } } catch(e) {}
  reportCompare(true, true);
}

try { if (Inst42 <= 1000 && typeof (print) != "undefined") {_RecordType("<1291,1296,41>",(print)); Inst42++; } } catch(e) {}
print("Tests complete");

