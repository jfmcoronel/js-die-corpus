var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst1 <= 1000 && typeof (ArrayBuffer) != "undefined") {_RecordType("<17,28,1>",(ArrayBuffer)); Inst1++; } } catch(e) {}
var buffer = new ArrayBuffer(2);
try { if (Inst0 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<4,10,1>",(buffer)); Inst0++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (DataView) != "undefined") {_RecordType("<48,56,2>",(DataView)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<57,63,2>",(buffer)); Inst4++; } } catch(e) {}
var view = new DataView(buffer);
try { if (Inst2 <= 1000 && typeof (view) != "undefined") {_RecordType("<37,41,2>",(view)); Inst2++; } } catch(e) {}

try { if (Inst5 <= 1000 && typeof (check) != "undefined") {_RecordType("<76,81,4>",(check)); Inst5++; } } catch(e) {}
function check(view) {
try { if (Inst6 <= 1000 && typeof (view) != "undefined") {_RecordType("<82,86,4>",(view)); Inst6++; } } catch(e) {}
  for (let fun of ['getInt8', 'setInt8', 'getInt16', 'setInt16']) {
try { if (Inst7 <= 1000 && typeof (fun) != "undefined") {_RecordType("<101,104,5>",(fun)); Inst7++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (view[fun]) != "undefined") {_RecordType("<169,178,6>",(view[fun])); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (view) != "undefined") {_RecordType("<169,173,6>",(view)); Inst9++; } } catch(e) {}
    (() => view[fun](-10))();

try { if (Inst10 <= 1000 && typeof (RangeError) != "undefined") {_RecordType("<193,203,8>",(RangeError)); Inst10++; } } catch(e) {}
    RangeError;

try { if (Inst11 <= 1000 && typeof (view[fun]) != "undefined") {_RecordType("<217,226,10>",(view[fun])); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (view) != "undefined") {_RecordType("<217,221,10>",(view)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<228,236,10>",(Infinity)); Inst13++; } } catch(e) {}
    (() => view[fun](-Infinity))();

try { if (Inst14 <= 1000 && typeof (RangeError) != "undefined") {_RecordType("<247,257,12>",(RangeError)); Inst14++; } } catch(e) {}
    RangeError;

try { if (Inst15 <= 1000 && typeof (view[fun]) != "undefined") {_RecordType("<271,280,14>",(view[fun])); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (view) != "undefined") {_RecordType("<271,275,14>",(view)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<281,289,14>",(Infinity)); Inst17++; } } catch(e) {}
    (() => view[fun](Infinity))();

try { if (Inst18 <= 1000 && typeof (RangeError) != "undefined") {_RecordType("<300,310,16>",(RangeError)); Inst18++; } } catch(e) {}
    RangeError;

try { if (Inst19 <= 1000 && typeof (view[fun]) != "undefined") {_RecordType("<324,333,18>",(view[fun])); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (view) != "undefined") {_RecordType("<324,328,18>",(view)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Math.pow) != "undefined") {_RecordType("<334,342,18>",(Math.pow)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Math) != "undefined") {_RecordType("<334,338,18>",(Math)); Inst22++; } } catch(e) {}
    (() => view[fun](Math.pow(2, 53)))();

try { if (Inst23 <= 1000 && typeof (RangeError) != "undefined") {_RecordType("<360,370,20>",(RangeError)); Inst23++; } } catch(e) {}
    RangeError;

try { if (Inst24 <= 1000 && typeof (view[fun]) != "undefined") {_RecordType("<384,393,22>",(view[fun])); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (view) != "undefined") {_RecordType("<384,388,22>",(view)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Math.pow) != "undefined") {_RecordType("<394,402,22>",(Math.pow)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (Math) != "undefined") {_RecordType("<394,398,22>",(Math)); Inst27++; } } catch(e) {}
    (() => view[fun](Math.pow(2, 54)))();

try { if (Inst28 <= 1000 && typeof (RangeError) != "undefined") {_RecordType("<420,430,24>",(RangeError)); Inst28++; } } catch(e) {}
    RangeError;
  }
}

try { if (Inst29 <= 1000 && typeof (check) != "undefined") {_RecordType("<439,444,28>",(check)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (view) != "undefined") {_RecordType("<445,449,28>",(view)); Inst30++; } } catch(e) {}
check(view);

for (let fun of ['getInt8', 'getInt16']) {
try { if (Inst31 <= 1000 && typeof (fun) != "undefined") {_RecordType("<462,465,30>",(fun)); Inst31++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (view[fun]) != "undefined") {_RecordType("<498,507,31>",(view[fun])); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (view) != "undefined") {_RecordType("<498,502,31>",(view)); Inst33++; } } catch(e) {}
  view[fun](0);
  0;
try { if (Inst34 <= 1000 && typeof (view[fun]) != "undefined") {_RecordType("<519,528,33>",(view[fun])); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (view) != "undefined") {_RecordType("<519,523,33>",(view)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<529,538,33>",(undefined)); Inst36++; } } catch(e) {}
  view[fun](undefined);
  0;
try { if (Inst37 <= 1000 && typeof (view[fun]) != "undefined") {_RecordType("<548,557,35>",(view[fun])); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (view) != "undefined") {_RecordType("<548,552,35>",(view)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<558,561,35>",(NaN)); Inst39++; } } catch(e) {}
  view[fun](NaN);
  0;
}

if ('detachArrayBuffer' in this) {
  // ToIndex is called before detachment check, so we can tell the difference
  // between a ToIndex failure and a real out of bounds failure.
try { if (Inst40 <= 1000 && typeof (detachArrayBuffer) != "undefined") {_RecordType("<752,769,42>",(detachArrayBuffer)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<770,776,42>",(buffer)); Inst41++; } } catch(e) {}
  detachArrayBuffer(buffer);
try { if (Inst42 <= 1000 && typeof (check) != "undefined") {_RecordType("<781,786,43>",(check)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (view) != "undefined") {_RecordType("<787,791,43>",(view)); Inst43++; } } catch(e) {}
  check(view);

try { if (Inst44 <= 1000 && typeof (view.getInt8) != "undefined") {_RecordType("<804,816,45>",(view.getInt8)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (view) != "undefined") {_RecordType("<804,808,45>",(view)); Inst45++; } } catch(e) {}
  (() => view.getInt8(0))();

try { if (Inst46 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<827,836,47>",(TypeError)); Inst46++; } } catch(e) {}
  TypeError;

try { if (Inst47 <= 1000 && typeof (view.setInt8) != "undefined") {_RecordType("<848,860,49>",(view.setInt8)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (view) != "undefined") {_RecordType("<848,852,49>",(view)); Inst48++; } } catch(e) {}
  (() => view.setInt8(0, 0))();

try { if (Inst49 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<874,883,51>",(TypeError)); Inst49++; } } catch(e) {}
  TypeError;

try { if (Inst50 <= 1000 && typeof (view.getInt8) != "undefined") {_RecordType("<895,907,53>",(view.getInt8)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (view) != "undefined") {_RecordType("<895,899,53>",(view)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (Math.pow) != "undefined") {_RecordType("<908,916,53>",(Math.pow)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (Math) != "undefined") {_RecordType("<908,912,53>",(Math)); Inst53++; } } catch(e) {}
  (() => view.getInt8(Math.pow(2, 53) - 1))();

try { if (Inst54 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<936,945,55>",(TypeError)); Inst54++; } } catch(e) {}
  TypeError;

try { if (Inst55 <= 1000 && typeof (view.setInt8) != "undefined") {_RecordType("<957,969,57>",(view.setInt8)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (view) != "undefined") {_RecordType("<957,961,57>",(view)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (Math.pow) != "undefined") {_RecordType("<970,978,57>",(Math.pow)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (Math) != "undefined") {_RecordType("<970,974,57>",(Math)); Inst58++; } } catch(e) {}
  (() => view.setInt8(Math.pow(2, 53) - 1, 0))();

try { if (Inst59 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<1001,1010,59>",(TypeError)); Inst59++; } } catch(e) {}
  TypeError;
}

try { if (Inst60 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1015,1028,62>",(reportCompare)); Inst60++; } } catch(e) {}
reportCompare(0, 0, 'OK');

