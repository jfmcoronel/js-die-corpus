var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
var BUGNUMBER = 1180290;
try { if (Inst0 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<4,13,1>",(BUGNUMBER)); Inst0++; } } catch(e) {}
var summary = 'DataView getters should have get prefix';
try { if (Inst1 <= 1000 && typeof (summary) != "undefined") {_RecordType("<29,36,2>",(summary)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (print) != "undefined") {_RecordType("<82,87,3>",(print)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<88,97,3>",(BUGNUMBER)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (summary) != "undefined") {_RecordType("<107,114,3>",(summary)); Inst4++; } } catch(e) {}
print(BUGNUMBER + ": " + summary);
try { if (Inst5 <= 1000 && typeof (Object.getOwnPropertyDescriptor(DataView.prototype, "buffer").get.name) != "undefined") {_RecordType("<117,187,4>",(Object.getOwnPropertyDescriptor(DataView.prototype, "buffer").get.name)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Object.getOwnPropertyDescriptor(DataView.prototype, "buffer").get) != "undefined") {_RecordType("<117,182,4>",(Object.getOwnPropertyDescriptor(DataView.prototype, "buffer").get)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<117,148,4>",(Object.getOwnPropertyDescriptor)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Object) != "undefined") {_RecordType("<117,123,4>",(Object)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (DataView.prototype) != "undefined") {_RecordType("<149,167,4>",(DataView.prototype)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (DataView) != "undefined") {_RecordType("<149,157,4>",(DataView)); Inst10++; } } catch(e) {}
Object.getOwnPropertyDescriptor(DataView.prototype, "buffer").get.name;
"get buffer";
try { if (Inst11 <= 1000 && typeof (Object.getOwnPropertyDescriptor(DataView.prototype, "byteLength").get.name) != "undefined") {_RecordType("<203,277,6>",(Object.getOwnPropertyDescriptor(DataView.prototype, "byteLength").get.name)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Object.getOwnPropertyDescriptor(DataView.prototype, "byteLength").get) != "undefined") {_RecordType("<203,272,6>",(Object.getOwnPropertyDescriptor(DataView.prototype, "byteLength").get)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<203,234,6>",(Object.getOwnPropertyDescriptor)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Object) != "undefined") {_RecordType("<203,209,6>",(Object)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (DataView.prototype) != "undefined") {_RecordType("<235,253,6>",(DataView.prototype)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (DataView) != "undefined") {_RecordType("<235,243,6>",(DataView)); Inst16++; } } catch(e) {}
Object.getOwnPropertyDescriptor(DataView.prototype, "byteLength").get.name;
"get byteLength";
try { if (Inst17 <= 1000 && typeof (Object.getOwnPropertyDescriptor(DataView.prototype, "byteOffset").get.name) != "undefined") {_RecordType("<297,371,8>",(Object.getOwnPropertyDescriptor(DataView.prototype, "byteOffset").get.name)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Object.getOwnPropertyDescriptor(DataView.prototype, "byteOffset").get) != "undefined") {_RecordType("<297,366,8>",(Object.getOwnPropertyDescriptor(DataView.prototype, "byteOffset").get)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<297,328,8>",(Object.getOwnPropertyDescriptor)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (Object) != "undefined") {_RecordType("<297,303,8>",(Object)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (DataView.prototype) != "undefined") {_RecordType("<329,347,8>",(DataView.prototype)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (DataView) != "undefined") {_RecordType("<329,337,8>",(DataView)); Inst22++; } } catch(e) {}
Object.getOwnPropertyDescriptor(DataView.prototype, "byteOffset").get.name;
"get byteOffset";

try { if (Inst23 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<403,416,11>",(reportCompare)); Inst23++; } } catch(e) {}
if (typeof reportCompare === 'function') {
try { if (Inst24 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<437,450,12>",(reportCompare)); Inst24++; } } catch(e) {}
  reportCompare(true, true);
}

