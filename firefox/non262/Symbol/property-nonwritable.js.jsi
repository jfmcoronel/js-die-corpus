var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* Any copyright is dedicated to the Public Domain.
 * http://creativecommons.org/licenses/publicdomain/ */
try { if (Inst1 <= 1000 && typeof (Symbol.for) != "undefined") {_RecordType("<118,128,3>",(Symbol.for)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<118,124,3>",(Symbol)); Inst2++; } } catch(e) {}
var sym = Symbol.for("moon");
try { if (Inst0 <= 1000 && typeof (sym) != "undefined") {_RecordType("<112,115,3>",(sym)); Inst0++; } } catch(e) {}

try { if (Inst3 <= 1000 && typeof (checkNotWritable) != "undefined") {_RecordType("<148,164,5>",(checkNotWritable)); Inst3++; } } catch(e) {}
function checkNotWritable(obj) {
try { if (Inst4 <= 1000 && typeof (obj) != "undefined") {_RecordType("<165,168,5>",(obj)); Inst4++; } } catch(e) {}
  // In sloppy mode, assigning to a nonwritable property silently fails.
  obj[sym] = "portals";
try { if (Inst5 <= 1000 && typeof (obj[sym]) != "undefined") {_RecordType("<247,255,7>",(obj[sym])); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (obj) != "undefined") {_RecordType("<247,250,7>",(obj)); Inst6++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (obj[sym]) != "undefined") {_RecordType("<271,279,8>",(obj[sym])); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (obj) != "undefined") {_RecordType("<271,274,8>",(obj)); Inst8++; } } catch(e) {}
  obj[sym];
  "cheese";

  (function () {
    "use strict";

    obj[sym] = "robots";
try { if (Inst9 <= 1000 && typeof (obj[sym]) != "undefined") {_RecordType("<334,342,14>",(obj[sym])); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (obj) != "undefined") {_RecordType("<334,337,14>",(obj)); Inst10++; } } catch(e) {}
  })();

try { if (Inst11 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<366,375,17>",(TypeError)); Inst11++; } } catch(e) {}
  TypeError;
try { if (Inst12 <= 1000 && typeof (obj[sym]) != "undefined") {_RecordType("<379,387,18>",(obj[sym])); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (obj) != "undefined") {_RecordType("<379,382,18>",(obj)); Inst13++; } } catch(e) {}
  obj[sym];
  "cheese";
}

var x = {};
try { if (Inst14 <= 1000 && typeof (x) != "undefined") {_RecordType("<408,409,22>",(x)); Inst14++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<416,437,23>",(Object.defineProperty)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Object) != "undefined") {_RecordType("<416,422,23>",(Object)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (x) != "undefined") {_RecordType("<438,439,23>",(x)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (sym) != "undefined") {_RecordType("<441,444,23>",(sym)); Inst18++; } } catch(e) {}
Object.defineProperty(x, sym, {
  configurable: true,
  enumerable: true,
  value: "cheese",
  writable: false
});
try { if (Inst19 <= 1000 && typeof (checkNotWritable) != "undefined") {_RecordType("<531,547,29>",(checkNotWritable)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (x) != "undefined") {_RecordType("<548,549,29>",(x)); Inst20++; } } catch(e) {}
checkNotWritable(x); // Assignment can't shadow inherited nonwritable properties either.

try { if (Inst22 <= 1000 && typeof (Object.create) != "undefined") {_RecordType("<629,642,31>",(Object.create)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Object) != "undefined") {_RecordType("<629,635,31>",(Object)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (x) != "undefined") {_RecordType("<643,644,31>",(x)); Inst24++; } } catch(e) {}
var y = Object.create(x);
try { if (Inst21 <= 1000 && typeof (y) != "undefined") {_RecordType("<625,626,31>",(y)); Inst21++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (checkNotWritable) != "undefined") {_RecordType("<647,663,32>",(checkNotWritable)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (y) != "undefined") {_RecordType("<664,665,32>",(y)); Inst26++; } } catch(e) {}
checkNotWritable(y);
try { if (Inst27 <= 1000 && typeof (checkNotWritable) != "undefined") {_RecordType("<668,684,33>",(checkNotWritable)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (Object.create) != "undefined") {_RecordType("<685,698,33>",(Object.create)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (Object) != "undefined") {_RecordType("<685,691,33>",(Object)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (y) != "undefined") {_RecordType("<699,700,33>",(y)); Inst30++; } } catch(e) {}
checkNotWritable(Object.create(y));

try { if (Inst31 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<716,729,35>",(reportCompare)); Inst31++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst32 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<750,763,36>",(reportCompare)); Inst32++; } } catch(e) {}
  reportCompare(0, 0);
}

