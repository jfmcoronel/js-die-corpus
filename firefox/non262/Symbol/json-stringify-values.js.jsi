var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* Any copyright is dedicated to the Public Domain.
 * http://creativecommons.org/licenses/publicdomain/ */
// To JSON.stringify, symbols are the same as undefined.
try { if (Inst1 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<180,186,4>",(Symbol)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Symbol.for) != "undefined") {_RecordType("<190,200,4>",(Symbol.for)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<190,196,4>",(Symbol)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<212,227,4>",(Symbol.iterator)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<212,218,4>",(Symbol)); Inst5++; } } catch(e) {}
var symbols = [Symbol(), Symbol.for("ponies"), Symbol.iterator];
try { if (Inst0 <= 1000 && typeof (symbols) != "undefined") {_RecordType("<169,176,4>",(symbols)); Inst0++; } } catch(e) {}

for (var sym of symbols) {
try { if (Inst6 <= 1000 && typeof (sym) != "undefined") {_RecordType("<240,243,6>",(sym)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (symbols) != "undefined") {_RecordType("<247,254,6>",(symbols)); Inst7++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (JSON.stringify) != "undefined") {_RecordType("<260,274,7>",(JSON.stringify)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<260,264,7>",(JSON)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (sym) != "undefined") {_RecordType("<275,278,7>",(sym)); Inst10++; } } catch(e) {}
  JSON.stringify(sym);
try { if (Inst11 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<283,292,8>",(undefined)); Inst11++; } } catch(e) {}
  undefined;
try { if (Inst12 <= 1000 && typeof (JSON.stringify) != "undefined") {_RecordType("<296,310,9>",(JSON.stringify)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<296,300,9>",(JSON)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (sym) != "undefined") {_RecordType("<312,315,9>",(sym)); Inst14++; } } catch(e) {}
  JSON.stringify([sym]);
  "[null]";
try { if (Inst15 <= 1000 && typeof (JSON.stringify) != "undefined") {_RecordType("<333,347,11>",(JSON.stringify)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<333,337,11>",(JSON)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (sym) != "undefined") {_RecordType("<357,360,12>",(sym)); Inst17++; } } catch(e) {}
  JSON.stringify({
    x: sym
  });
  '{}';

  // However such properties are passed to the replacerFunction if any.
  var replacer = function (key, val) {
try { if (Inst19 <= 1000 && typeof (key) != "undefined") {_RecordType("<475,478,17>",(key)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (val) != "undefined") {_RecordType("<480,483,17>",(val)); Inst20++; } } catch(e) {}
    typeof this;
    "object";

try { if (Inst21 <= 1000 && typeof (val) != "undefined") {_RecordType("<534,537,21>",(val)); Inst21++; } } catch(e) {}
    if (typeof val === "symbol") {
try { if (Inst22 <= 1000 && typeof (val) != "undefined") {_RecordType("<560,563,22>",(val)); Inst22++; } } catch(e) {}
      val;
try { if (Inst23 <= 1000 && typeof (sym) != "undefined") {_RecordType("<571,574,23>",(sym)); Inst23++; } } catch(e) {}
      sym;
      return "ding";
    }

try { if (Inst24 <= 1000 && typeof (val) != "undefined") {_RecordType("<615,618,27>",(val)); Inst24++; } } catch(e) {}
    return val;
  };
try { if (Inst18 <= 1000 && typeof (replacer) != "undefined") {_RecordType("<454,462,17>",(replacer)); Inst18++; } } catch(e) {}

try { if (Inst25 <= 1000 && typeof (JSON.stringify) != "undefined") {_RecordType("<628,642,30>",(JSON.stringify)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<628,632,30>",(JSON)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (sym) != "undefined") {_RecordType("<643,646,30>",(sym)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (replacer) != "undefined") {_RecordType("<648,656,30>",(replacer)); Inst28++; } } catch(e) {}
  JSON.stringify(sym, replacer);
  '"ding"';
try { if (Inst29 <= 1000 && typeof (JSON.stringify) != "undefined") {_RecordType("<673,687,32>",(JSON.stringify)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<673,677,32>",(JSON)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (sym) != "undefined") {_RecordType("<697,700,33>",(sym)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (replacer) != "undefined") {_RecordType("<706,714,34>",(replacer)); Inst32++; } } catch(e) {}
  JSON.stringify({
    x: sym
  }, replacer);
  '{"x":"ding"}';
}

try { if (Inst33 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<749,762,38>",(reportCompare)); Inst33++; } } catch(e) {}
if (typeof reportCompare === 'function') {
try { if (Inst34 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<783,796,39>",(reportCompare)); Inst34++; } } catch(e) {}
  reportCompare(0, 0, 'ok');
}

