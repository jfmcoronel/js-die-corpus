var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* Any copyright is dedicated to the Public Domain.
 * http://creativecommons.org/licenses/publicdomain/ */
try { if (Inst1 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<123,129,3>",(Symbol)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<133,139,3>",(Symbol)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Symbol.for) != "undefined") {_RecordType("<146,156,3>",(Symbol.for)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<146,152,3>",(Symbol)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<169,184,3>",(Symbol.iterator)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<169,175,3>",(Symbol)); Inst6++; } } catch(e) {}
var symbols = [Symbol(), Symbol("0"), Symbol.for("snowman"), Symbol.iterator];
try { if (Inst0 <= 1000 && typeof (symbols) != "undefined") {_RecordType("<112,119,3>",(symbols)); Inst0++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<201,210,4>",(undefined)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<231,234,4>",(NaN)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<252,258,4>",(Symbol)); Inst10++; } } catch(e) {}
var values = [undefined, null, 0, 3.14, -0, NaN, "", "alphabet", Symbol("0"), {}, []];
try { if (Inst7 <= 1000 && typeof (values) != "undefined") {_RecordType("<191,197,4>",(values)); Inst7++; } } catch(e) {}

for (var comparator of ["==", "!=", "===", "!=="]) {
try { if (Inst11 <= 1000 && typeof (comparator) != "undefined") {_RecordType("<284,294,6>",(comparator)); Inst11++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (Function) != "undefined") {_RecordType("<338,346,7>",(Function)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (comparator) != "undefined") {_RecordType("<369,379,7>",(comparator)); Inst14++; } } catch(e) {}
  var f = Function("a, b", "return a " + comparator + " b;");
try { if (Inst12 <= 1000 && typeof (f) != "undefined") {_RecordType("<334,335,7>",(f)); Inst12++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (comparator[0]) != "undefined") {_RecordType("<407,420,8>",(comparator[0])); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (comparator) != "undefined") {_RecordType("<407,417,8>",(comparator)); Inst17++; } } catch(e) {}
  var expected = comparator[0] == '!';
try { if (Inst15 <= 1000 && typeof (expected) != "undefined") {_RecordType("<396,404,8>",(expected)); Inst15++; } } catch(e) {}

  for (var a of symbols) {
try { if (Inst18 <= 1000 && typeof (a) != "undefined") {_RecordType("<441,442,10>",(a)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (symbols) != "undefined") {_RecordType("<446,453,10>",(symbols)); Inst19++; } } catch(e) {}
    for (var b of values) {
try { if (Inst20 <= 1000 && typeof (b) != "undefined") {_RecordType("<470,471,11>",(b)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (values) != "undefined") {_RecordType("<475,481,11>",(values)); Inst21++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (f) != "undefined") {_RecordType("<491,492,12>",(f)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (a) != "undefined") {_RecordType("<493,494,12>",(a)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (b) != "undefined") {_RecordType("<496,497,12>",(b)); Inst24++; } } catch(e) {}
      f(a, b);
try { if (Inst25 <= 1000 && typeof (expected) != "undefined") {_RecordType("<506,514,13>",(expected)); Inst25++; } } catch(e) {}
      expected;
    }
  }
}

for (var comparator of ["<", "<=", ">", ">="]) {
try { if (Inst26 <= 1000 && typeof (comparator) != "undefined") {_RecordType("<538,548,18>",(comparator)); Inst26++; } } catch(e) {}
try { if (Inst28 <= 1000 && typeof (Function) != "undefined") {_RecordType("<588,596,19>",(Function)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (comparator) != "undefined") {_RecordType("<619,629,19>",(comparator)); Inst29++; } } catch(e) {}
  var f = Function("a, b", "return a " + comparator + " b;");
try { if (Inst27 <= 1000 && typeof (f) != "undefined") {_RecordType("<584,585,19>",(f)); Inst27++; } } catch(e) {}

  for (var a of symbols) {
try { if (Inst30 <= 1000 && typeof (a) != "undefined") {_RecordType("<652,653,21>",(a)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (symbols) != "undefined") {_RecordType("<657,664,21>",(symbols)); Inst31++; } } catch(e) {}
    for (var b of values) {
try { if (Inst32 <= 1000 && typeof (b) != "undefined") {_RecordType("<681,682,22>",(b)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (values) != "undefined") {_RecordType("<686,692,22>",(values)); Inst33++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof (f) != "undefined") {_RecordType("<709,710,23>",(f)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (a) != "undefined") {_RecordType("<711,712,23>",(a)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (b) != "undefined") {_RecordType("<714,715,23>",(b)); Inst36++; } } catch(e) {}
      (() => f(a, b))();

try { if (Inst37 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<728,737,25>",(TypeError)); Inst37++; } } catch(e) {}
      TypeError;
    }
  }
}

try { if (Inst38 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<763,776,30>",(reportCompare)); Inst38++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst39 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<797,810,31>",(reportCompare)); Inst39++; } } catch(e) {}
  reportCompare(0, 0);
}

