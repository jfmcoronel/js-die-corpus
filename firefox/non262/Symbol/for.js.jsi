var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* Any copyright is dedicated to the Public Domain.
 * http://creativecommons.org/licenses/publicdomain/ */
// Symbol.for called twice with the same argument returns the same symbol.
try { if (Inst0 <= 1000 && typeof (Symbol.for) != "undefined") {_RecordType("<183,193,4>",(Symbol.for)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<183,189,4>",(Symbol)); Inst1++; } } catch(e) {}
Symbol.for("ponies");
try { if (Inst2 <= 1000 && typeof (Symbol.for) != "undefined") {_RecordType("<205,215,5>",(Symbol.for)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<205,211,5>",(Symbol)); Inst3++; } } catch(e) {}
Symbol.for("ponies");
// Called twice with equal strings: still the same result.
try { if (Inst5 <= 1000 && typeof (Array(64 + 1).join) != "undefined") {_RecordType("<296,314,7>",(Array(64 + 1).join)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Array) != "undefined") {_RecordType("<296,301,7>",(Array)); Inst6++; } } catch(e) {}
var one = Array(64 + 1).join("x");
try { if (Inst4 <= 1000 && typeof (one) != "undefined") {_RecordType("<290,293,7>",(one)); Inst4++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (Array(8 + 1).join) != "undefined") {_RecordType("<331,348,8>",(Array(8 + 1).join)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Array) != "undefined") {_RecordType("<331,336,8>",(Array)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Array(8 + 1).join) != "undefined") {_RecordType("<349,366,8>",(Array(8 + 1).join)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Array) != "undefined") {_RecordType("<349,354,8>",(Array)); Inst11++; } } catch(e) {}
var two = Array(8 + 1).join(Array(8 + 1).join("x"));
try { if (Inst7 <= 1000 && typeof (two) != "undefined") {_RecordType("<325,328,8>",(two)); Inst7++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (Symbol.for) != "undefined") {_RecordType("<374,384,9>",(Symbol.for)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<374,380,9>",(Symbol)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (one) != "undefined") {_RecordType("<385,388,9>",(one)); Inst14++; } } catch(e) {}
Symbol.for(one);
try { if (Inst15 <= 1000 && typeof (Symbol.for) != "undefined") {_RecordType("<391,401,10>",(Symbol.for)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<391,397,10>",(Symbol)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (two) != "undefined") {_RecordType("<402,405,10>",(two)); Inst17++; } } catch(e) {}
Symbol.for(two);
// Symbols created by calling Symbol() are not in the symbol registry.
try { if (Inst19 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<489,495,12>",(Symbol)); Inst19++; } } catch(e) {}
var sym = Symbol("123");
try { if (Inst18 <= 1000 && typeof (sym) != "undefined") {_RecordType("<483,486,12>",(sym)); Inst18++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (Symbol.for) != "undefined") {_RecordType("<504,514,13>",(Symbol.for)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<504,510,13>",(Symbol)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (sym) != "undefined") {_RecordType("<526,529,13>",(sym)); Inst22++; } } catch(e) {}
Symbol.for("123") !== sym;
true;
try { if (Inst23 <= 1000 && typeof (Symbol.for) != "undefined") {_RecordType("<544,554,15>",(Symbol.for)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<544,550,15>",(Symbol)); Inst24++; } } catch(e) {}
typeof Symbol.for("");
"symbol";
try { if (Inst25 <= 1000 && typeof (Symbol.for) != "undefined") {_RecordType("<570,580,17>",(Symbol.for)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<570,576,17>",(Symbol)); Inst26++; } } catch(e) {}
Symbol.for(3);
try { if (Inst27 <= 1000 && typeof (Symbol.for) != "undefined") {_RecordType("<585,595,18>",(Symbol.for)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<585,591,18>",(Symbol)); Inst28++; } } catch(e) {}
Symbol.for("3");
try { if (Inst29 <= 1000 && typeof (Symbol.for) != "undefined") {_RecordType("<602,612,19>",(Symbol.for)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<602,608,19>",(Symbol)); Inst30++; } } catch(e) {}
Symbol.for(null);
try { if (Inst31 <= 1000 && typeof (Symbol.for) != "undefined") {_RecordType("<620,630,20>",(Symbol.for)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<620,626,20>",(Symbol)); Inst32++; } } catch(e) {}
Symbol.for("null");
try { if (Inst33 <= 1000 && typeof (Symbol.for) != "undefined") {_RecordType("<640,650,21>",(Symbol.for)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<640,646,21>",(Symbol)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<651,660,21>",(undefined)); Inst35++; } } catch(e) {}
Symbol.for(undefined);
try { if (Inst36 <= 1000 && typeof (Symbol.for) != "undefined") {_RecordType("<663,673,22>",(Symbol.for)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<663,669,22>",(Symbol)); Inst37++; } } catch(e) {}
Symbol.for("undefined");
try { if (Inst38 <= 1000 && typeof (Symbol.for) != "undefined") {_RecordType("<688,698,23>",(Symbol.for)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<688,694,23>",(Symbol)); Inst39++; } } catch(e) {}
Symbol.for();
try { if (Inst40 <= 1000 && typeof (Symbol.for) != "undefined") {_RecordType("<702,712,24>",(Symbol.for)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<702,708,24>",(Symbol)); Inst41++; } } catch(e) {}
Symbol.for("undefined");
// Symbol.for ignores the 'this' value.
try { if (Inst43 <= 1000 && typeof (Symbol.for) != "undefined") {_RecordType("<777,787,26>",(Symbol.for)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<777,783,26>",(Symbol)); Inst44++; } } catch(e) {}
var foo = Symbol.for("foo");
try { if (Inst42 <= 1000 && typeof (foo) != "undefined") {_RecordType("<771,774,26>",(foo)); Inst42++; } } catch(e) {}
try { if (Inst45 <= 1000 && typeof (Symbol.for.call) != "undefined") {_RecordType("<796,811,27>",(Symbol.for.call)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (Symbol.for) != "undefined") {_RecordType("<796,806,27>",(Symbol.for)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<796,802,27>",(Symbol)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (String) != "undefined") {_RecordType("<812,818,27>",(String)); Inst48++; } } catch(e) {}
Symbol.for.call(String, "foo");
try { if (Inst49 <= 1000 && typeof (foo) != "undefined") {_RecordType("<828,831,28>",(foo)); Inst49++; } } catch(e) {}
foo;
try { if (Inst50 <= 1000 && typeof (Symbol.for.call) != "undefined") {_RecordType("<833,848,29>",(Symbol.for.call)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (Symbol.for) != "undefined") {_RecordType("<833,843,29>",(Symbol.for)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<833,839,29>",(Symbol)); Inst52++; } } catch(e) {}
Symbol.for.call(3.14, "foo");
try { if (Inst53 <= 1000 && typeof (foo) != "undefined") {_RecordType("<863,866,30>",(foo)); Inst53++; } } catch(e) {}
foo;

try { if (Inst54 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<880,893,32>",(reportCompare)); Inst54++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst55 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<914,927,33>",(reportCompare)); Inst55++; } } catch(e) {}
  reportCompare(0, 0);
}

