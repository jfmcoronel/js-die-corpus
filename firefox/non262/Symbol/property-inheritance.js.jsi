var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* Any copyright is dedicated to the Public Domain.
 * http://creativecommons.org/licenses/publicdomain/ */
try { if (Inst1 <= 1000 && typeof (Symbol.for) != "undefined") {_RecordType("<118,128,3>",(Symbol.for)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<118,124,3>",(Symbol)); Inst2++; } } catch(e) {}
var sym = Symbol.for("hello");
try { if (Inst0 <= 1000 && typeof (sym) != "undefined") {_RecordType("<112,115,3>",(sym)); Inst0++; } } catch(e) {}

try { if (Inst3 <= 1000 && typeof (F) != "undefined") {_RecordType("<149,150,5>",(F)); Inst3++; } } catch(e) {}
function F() {
  ;
}

try { if (Inst5 <= 1000 && typeof (F) != "undefined") {_RecordType("<174,175,9>",(F)); Inst5++; } } catch(e) {}
var f = new F(); // inherited data property
try { if (Inst4 <= 1000 && typeof (f) != "undefined") {_RecordType("<166,167,9>",(f)); Inst4++; } } catch(e) {}

F.prototype[sym] = "world";
try { if (Inst6 <= 1000 && typeof (F.prototype[sym]) != "undefined") {_RecordType("<207,223,11>",(F.prototype[sym])); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (F.prototype) != "undefined") {_RecordType("<207,218,11>",(F.prototype)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (F) != "undefined") {_RecordType("<207,208,11>",(F)); Inst8++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (sym) != "undefined") {_RecordType("<235,238,12>",(sym)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (f) != "undefined") {_RecordType("<242,243,12>",(f)); Inst10++; } } catch(e) {}
sym in f;
true;
try { if (Inst11 <= 1000 && typeof (f.hasOwnProperty) != "undefined") {_RecordType("<251,267,14>",(f.hasOwnProperty)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (f) != "undefined") {_RecordType("<251,252,14>",(f)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (sym) != "undefined") {_RecordType("<268,271,14>",(sym)); Inst13++; } } catch(e) {}
f.hasOwnProperty(sym);
false;
try { if (Inst14 <= 1000 && typeof (f[sym]) != "undefined") {_RecordType("<281,287,16>",(f[sym])); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (f) != "undefined") {_RecordType("<281,282,16>",(f)); Inst15++; } } catch(e) {}
f[sym];
"world";
// shadowing assignment
f[sym] = "kitty";
try { if (Inst16 <= 1000 && typeof (f[sym]) != "undefined") {_RecordType("<322,328,19>",(f[sym])); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (f) != "undefined") {_RecordType("<322,323,19>",(f)); Inst17++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (f[sym]) != "undefined") {_RecordType("<340,346,20>",(f[sym])); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (f) != "undefined") {_RecordType("<340,341,20>",(f)); Inst19++; } } catch(e) {}
f[sym];
"kitty";
try { if (Inst20 <= 1000 && typeof (F.prototype[sym]) != "undefined") {_RecordType("<357,373,22>",(F.prototype[sym])); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (F.prototype) != "undefined") {_RecordType("<357,368,22>",(F.prototype)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (F) != "undefined") {_RecordType("<357,358,22>",(F)); Inst22++; } } catch(e) {}
F.prototype[sym];
"world";
try { if (Inst23 <= 1000 && typeof (f[sym]) != "undefined") {_RecordType("<391,397,24>",(f[sym])); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (f) != "undefined") {_RecordType("<391,392,24>",(f)); Inst24++; } } catch(e) {}
delete f[sym];
true;
try { if (Inst25 <= 1000 && typeof (f.hasOwnProperty) != "undefined") {_RecordType("<405,421,26>",(f.hasOwnProperty)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (f) != "undefined") {_RecordType("<405,406,26>",(f)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (sym) != "undefined") {_RecordType("<422,425,26>",(sym)); Inst27++; } } catch(e) {}
f.hasOwnProperty(sym);
false;
try { if (Inst28 <= 1000 && typeof (f[sym]) != "undefined") {_RecordType("<435,441,28>",(f[sym])); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (f) != "undefined") {_RecordType("<435,436,28>",(f)); Inst29++; } } catch(e) {}
f[sym];
"world";
// inherited accessor property
try { if (Inst31 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<495,504,31>",(undefined)); Inst31++; } } catch(e) {}
var value = undefined;
try { if (Inst30 <= 1000 && typeof (value) != "undefined") {_RecordType("<487,492,31>",(value)); Inst30++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<506,527,32>",(Object.defineProperty)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (Object) != "undefined") {_RecordType("<506,512,32>",(Object)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (F.prototype) != "undefined") {_RecordType("<528,539,32>",(F.prototype)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (F) != "undefined") {_RecordType("<528,529,32>",(F)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (sym) != "undefined") {_RecordType("<541,544,32>",(sym)); Inst36++; } } catch(e) {}
Object.defineProperty(F.prototype, sym, {
  configurable: true,
  get: function () {
    return 23;
  },
  set: function (v) {
try { if (Inst37 <= 1000 && typeof (v) != "undefined") {_RecordType("<628,629,37>",(v)); Inst37++; } } catch(e) {}
try { if (Inst39 <= 1000 && typeof (v) != "undefined") {_RecordType("<645,646,38>",(v)); Inst39++; } } catch(e) {}
    value = v;
try { if (Inst38 <= 1000 && typeof (value) != "undefined") {_RecordType("<637,642,38>",(value)); Inst38++; } } catch(e) {}
  }
});
try { if (Inst40 <= 1000 && typeof (sym) != "undefined") {_RecordType("<656,659,41>",(sym)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (f) != "undefined") {_RecordType("<663,664,41>",(f)); Inst41++; } } catch(e) {}
sym in f;
true;
try { if (Inst42 <= 1000 && typeof (f.hasOwnProperty) != "undefined") {_RecordType("<672,688,43>",(f.hasOwnProperty)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (f) != "undefined") {_RecordType("<672,673,43>",(f)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (sym) != "undefined") {_RecordType("<689,692,43>",(sym)); Inst44++; } } catch(e) {}
f.hasOwnProperty(sym);
false;
try { if (Inst45 <= 1000 && typeof (f[sym]) != "undefined") {_RecordType("<702,708,45>",(f[sym])); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (f) != "undefined") {_RecordType("<702,703,45>",(f)); Inst46++; } } catch(e) {}
f[sym];
23;
f[sym] = "gravity";
try { if (Inst47 <= 1000 && typeof (f[sym]) != "undefined") {_RecordType("<714,720,47>",(f[sym])); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (f) != "undefined") {_RecordType("<714,715,47>",(f)); Inst48++; } } catch(e) {}
try { if (Inst49 <= 1000 && typeof (value) != "undefined") {_RecordType("<734,739,48>",(value)); Inst49++; } } catch(e) {}
value;
"gravity";
// inherited accessor property with no setter
try { if (Inst50 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<798,819,51>",(Object.defineProperty)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (Object) != "undefined") {_RecordType("<798,804,51>",(Object)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (F.prototype) != "undefined") {_RecordType("<820,831,51>",(F.prototype)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (F) != "undefined") {_RecordType("<820,821,51>",(F)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (sym) != "undefined") {_RecordType("<833,836,51>",(sym)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<847,856,52>",(undefined)); Inst55++; } } catch(e) {}
Object.defineProperty(F.prototype, sym, {
  set: undefined
});

(function () {
  "use strict";

  f[sym] = 0;
try { if (Inst56 <= 1000 && typeof (f[sym]) != "undefined") {_RecordType("<896,902,58>",(f[sym])); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (f) != "undefined") {_RecordType("<896,897,58>",(f)); Inst57++; } } catch(e) {}
})();

try { if (Inst58 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<915,924,61>",(TypeError)); Inst58++; } } catch(e) {}
TypeError;
// deeply inherited accessor property
try { if (Inst60 <= 1000 && typeof (Object.create) != "undefined") {_RecordType("<972,985,63>",(Object.create)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (Object) != "undefined") {_RecordType("<972,978,63>",(Object)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (f) != "undefined") {_RecordType("<986,987,63>",(f)); Inst62++; } } catch(e) {}
var g = Object.create(f);
try { if (Inst59 <= 1000 && typeof (g) != "undefined") {_RecordType("<968,969,63>",(g)); Inst59++; } } catch(e) {}

for (var i = 0; i < 100; i++) {
try { if (Inst63 <= 1000 && typeof (i) != "undefined") {_RecordType("<1000,1001,65>",(i)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (i) != "undefined") {_RecordType("<1007,1008,65>",(i)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (i) != "undefined") {_RecordType("<1016,1017,65>",(i)); Inst65++; } } catch(e) {}
try { if (Inst67 <= 1000 && typeof (Object.create) != "undefined") {_RecordType("<1029,1042,66>",(Object.create)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1029,1035,66>",(Object)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (g) != "undefined") {_RecordType("<1043,1044,66>",(g)); Inst69++; } } catch(e) {}
  g = Object.create(g);
try { if (Inst66 <= 1000 && typeof (g) != "undefined") {_RecordType("<1025,1026,66>",(g)); Inst66++; } } catch(e) {}
}

try { if (Inst70 <= 1000 && typeof (g[sym]) != "undefined") {_RecordType("<1050,1056,69>",(g[sym])); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (g) != "undefined") {_RecordType("<1050,1051,69>",(g)); Inst71++; } } catch(e) {}
g[sym];
23;

try { if (Inst72 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1074,1087,72>",(reportCompare)); Inst72++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst73 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1108,1121,73>",(reportCompare)); Inst73++; } } catch(e) {}
  reportCompare(0, 0);
}

