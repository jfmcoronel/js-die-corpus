var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* Any copyright is dedicated to the Public Domain.
 * http://creativecommons.org/licenses/publicdomain/ */
// ES6 does not specify enumeration order, but implementations mostly retain
// property insertion order -- and must, for web compatibility. This test checks
// that symbol-keyed properties do not interfere with that order.
var obj = {};
try { if (Inst0 <= 1000 && typeof (obj) != "undefined") {_RecordType("<336,339,6>",(obj)); Inst0++; } } catch(e) {}
obj[Symbol("moon")] = 0;
try { if (Inst1 <= 1000 && typeof (obj[Symbol("moon")]) != "undefined") {_RecordType("<346,365,7>",(obj[Symbol("moon")])); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (obj) != "undefined") {_RecordType("<346,349,7>",(obj)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<350,356,7>",(Symbol)); Inst3++; } } catch(e) {}
obj.x = 1;
try { if (Inst4 <= 1000 && typeof (obj.x) != "undefined") {_RecordType("<371,376,8>",(obj.x)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (obj) != "undefined") {_RecordType("<371,374,8>",(obj)); Inst5++; } } catch(e) {}
obj[Symbol.for("y")] = 2;
try { if (Inst6 <= 1000 && typeof (obj[Symbol.for("y")]) != "undefined") {_RecordType("<382,402,9>",(obj[Symbol.for("y")])); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (obj) != "undefined") {_RecordType("<382,385,9>",(obj)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Symbol.for) != "undefined") {_RecordType("<386,396,9>",(Symbol.for)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<386,392,9>",(Symbol)); Inst9++; } } catch(e) {}
obj.y = 3;
try { if (Inst10 <= 1000 && typeof (obj.y) != "undefined") {_RecordType("<408,413,10>",(obj.y)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (obj) != "undefined") {_RecordType("<408,411,10>",(obj)); Inst11++; } } catch(e) {}

obj[Symbol.iterator] = function* () {
  yield 4;
};
try { if (Inst12 <= 1000 && typeof (obj[Symbol.iterator]) != "undefined") {_RecordType("<420,440,12>",(obj[Symbol.iterator])); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (obj) != "undefined") {_RecordType("<420,423,12>",(obj)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<424,439,12>",(Symbol.iterator)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<424,430,12>",(Symbol)); Inst15++; } } catch(e) {}

obj.z = 5;
try { if (Inst16 <= 1000 && typeof (obj.z) != "undefined") {_RecordType("<473,478,16>",(obj.z)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (obj) != "undefined") {_RecordType("<473,476,16>",(obj)); Inst17++; } } catch(e) {}
Object.prototype[Symbol.for("comet")] = 6;
try { if (Inst18 <= 1000 && typeof (Object.prototype[Symbol.for("comet")]) != "undefined") {_RecordType("<484,521,17>",(Object.prototype[Symbol.for("comet")])); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<484,500,17>",(Object.prototype)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (Object) != "undefined") {_RecordType("<484,490,17>",(Object)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Symbol.for) != "undefined") {_RecordType("<501,511,17>",(Symbol.for)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<501,507,17>",(Symbol)); Inst22++; } } catch(e) {}
var keys = [];
try { if (Inst23 <= 1000 && typeof (keys) != "undefined") {_RecordType("<531,535,18>",(keys)); Inst23++; } } catch(e) {}

for (var k in obj) {
try { if (Inst24 <= 1000 && typeof (k) != "undefined") {_RecordType("<552,553,20>",(k)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (obj) != "undefined") {_RecordType("<557,560,20>",(obj)); Inst25++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (keys.push) != "undefined") {_RecordType("<566,575,21>",(keys.push)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (keys) != "undefined") {_RecordType("<566,570,21>",(keys)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (k) != "undefined") {_RecordType("<576,577,21>",(k)); Inst28++; } } catch(e) {}
  keys.push(k);
}

try { if (Inst29 <= 1000 && typeof (keys) != "undefined") {_RecordType("<583,587,24>",(keys)); Inst29++; } } catch(e) {}
keys;
["x", "y", "z"];
try { if (Inst30 <= 1000 && typeof (Object.keys) != "undefined") {_RecordType("<606,617,26>",(Object.keys)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (Object) != "undefined") {_RecordType("<606,612,26>",(Object)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (obj) != "undefined") {_RecordType("<618,621,26>",(obj)); Inst32++; } } catch(e) {}
Object.keys(obj);
["x", "y", "z"];

// Test with more properties.
for (var i = 0; i < 1000; i++) {
try { if (Inst33 <= 1000 && typeof (i) != "undefined") {_RecordType("<681,682,30>",(i)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (i) != "undefined") {_RecordType("<688,689,30>",(i)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (i) != "undefined") {_RecordType("<698,699,30>",(i)); Inst35++; } } catch(e) {}
try { if (Inst40 <= 1000 && typeof (i) != "undefined") {_RecordType("<724,725,31>",(i)); Inst40++; } } catch(e) {}
  obj[Symbol(i)] = i;
try { if (Inst36 <= 1000 && typeof (obj[Symbol(i)]) != "undefined") {_RecordType("<707,721,31>",(obj[Symbol(i)])); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (obj) != "undefined") {_RecordType("<707,710,31>",(obj)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<711,717,31>",(Symbol)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (i) != "undefined") {_RecordType("<718,719,31>",(i)); Inst39++; } } catch(e) {}
}

obj.w = 1000;
try { if (Inst41 <= 1000 && typeof (obj.w) != "undefined") {_RecordType("<730,735,34>",(obj.w)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (obj) != "undefined") {_RecordType("<730,733,34>",(obj)); Inst42++; } } catch(e) {}
keys = [];
try { if (Inst43 <= 1000 && typeof (keys) != "undefined") {_RecordType("<744,748,35>",(keys)); Inst43++; } } catch(e) {}

for (var k in obj) {
try { if (Inst44 <= 1000 && typeof (k) != "undefined") {_RecordType("<765,766,37>",(k)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (obj) != "undefined") {_RecordType("<770,773,37>",(obj)); Inst45++; } } catch(e) {}
try { if (Inst46 <= 1000 && typeof (keys.push) != "undefined") {_RecordType("<779,788,38>",(keys.push)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (keys) != "undefined") {_RecordType("<779,783,38>",(keys)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (k) != "undefined") {_RecordType("<789,790,38>",(k)); Inst48++; } } catch(e) {}
  keys.push(k);
}

try { if (Inst49 <= 1000 && typeof (keys) != "undefined") {_RecordType("<796,800,41>",(keys)); Inst49++; } } catch(e) {}
keys;
["x", "y", "z", "w"];

try { if (Inst50 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<836,849,44>",(reportCompare)); Inst50++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst51 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<870,883,45>",(reportCompare)); Inst51++; } } catch(e) {}
  reportCompare(0, 0);
}

