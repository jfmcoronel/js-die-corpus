var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* Any copyright is dedicated to the Public Domain.
 * http://creativecommons.org/licenses/publicdomain/ */
// Symbol(symbol) throws a TypeError.
try { if (Inst1 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<156,162,4>",(Symbol)); Inst1++; } } catch(e) {}
var sym = Symbol();
try { if (Inst0 <= 1000 && typeof (sym) != "undefined") {_RecordType("<150,153,4>",(sym)); Inst0++; } } catch(e) {}

try { if (Inst2 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<174,180,6>",(Symbol)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (sym) != "undefined") {_RecordType("<181,184,6>",(sym)); Inst3++; } } catch(e) {}
(() => Symbol(sym))();

try { if (Inst4 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<191,200,8>",(TypeError)); Inst4++; } } catch(e) {}
TypeError;
try { if (Inst5 <= 1000 && typeof (Symbol(undefined).toString) != "undefined") {_RecordType("<202,228,9>",(Symbol(undefined).toString)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<202,208,9>",(Symbol)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<209,218,9>",(undefined)); Inst7++; } } catch(e) {}
Symbol(undefined).toString();
"Symbol()";
try { if (Inst8 <= 1000 && typeof (Symbol(7).toString) != "undefined") {_RecordType("<244,262,11>",(Symbol(7).toString)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<244,250,11>",(Symbol)); Inst9++; } } catch(e) {}
Symbol(7).toString();
"Symbol(7)";
try { if (Inst10 <= 1000 && typeof (Symbol(true).toString) != "undefined") {_RecordType("<279,300,13>",(Symbol(true).toString)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<279,285,13>",(Symbol)); Inst11++; } } catch(e) {}
Symbol(true).toString();
"Symbol(true)";
try { if (Inst12 <= 1000 && typeof (Symbol(null).toString) != "undefined") {_RecordType("<320,341,15>",(Symbol(null).toString)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<320,326,15>",(Symbol)); Inst13++; } } catch(e) {}
Symbol(null).toString();
"Symbol(null)";
try { if (Inst14 <= 1000 && typeof (Symbol([1, 2]).toString) != "undefined") {_RecordType("<361,384,17>",(Symbol([1, 2]).toString)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<361,367,17>",(Symbol)); Inst15++; } } catch(e) {}
Symbol([1, 2]).toString();
"Symbol(1,2)";
try { if (Inst17 <= 1000 && typeof (Object) != "undefined") {_RecordType("<416,422,19>",(Object)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (sym) != "undefined") {_RecordType("<423,426,19>",(sym)); Inst18++; } } catch(e) {}
var symobj = Object(sym);
try { if (Inst16 <= 1000 && typeof (symobj) != "undefined") {_RecordType("<407,413,19>",(symobj)); Inst16++; } } catch(e) {}

try { if (Inst19 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<437,443,21>",(Symbol)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (symobj) != "undefined") {_RecordType("<444,450,21>",(symobj)); Inst20++; } } catch(e) {}
(() => Symbol(symobj))();

try { if (Inst21 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<457,466,23>",(TypeError)); Inst21++; } } catch(e) {}
TypeError;
var hits = 0;
try { if (Inst22 <= 1000 && typeof (hits) != "undefined") {_RecordType("<472,476,24>",(hits)); Inst22++; } } catch(e) {}
var obj = {
  toString: function () {
try { if (Inst24 <= 1000 && typeof (hits) != "undefined") {_RecordType("<524,528,27>",(hits)); Inst24++; } } catch(e) {}
    hits++;
    return "ponies";
  }
};
try { if (Inst23 <= 1000 && typeof (obj) != "undefined") {_RecordType("<486,489,25>",(obj)); Inst23++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (Symbol(obj).toString) != "undefined") {_RecordType("<560,580,31>",(Symbol(obj).toString)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<560,566,31>",(Symbol)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (obj) != "undefined") {_RecordType("<567,570,31>",(obj)); Inst27++; } } catch(e) {}
Symbol(obj).toString();
"Symbol(ponies)";
try { if (Inst28 <= 1000 && typeof (hits) != "undefined") {_RecordType("<602,606,33>",(hits)); Inst28++; } } catch(e) {}
hits;
1;
try { if (Inst29 <= 1000 && typeof (Object.getPrototypeOf) != "undefined") {_RecordType("<611,632,35>",(Object.getPrototypeOf)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (Object) != "undefined") {_RecordType("<611,617,35>",(Object)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (Symbol.prototype) != "undefined") {_RecordType("<633,649,35>",(Symbol.prototype)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<633,639,35>",(Symbol)); Inst32++; } } catch(e) {}
Object.getPrototypeOf(Symbol.prototype);
try { if (Inst33 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<652,668,36>",(Object.prototype)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (Object) != "undefined") {_RecordType("<652,658,36>",(Object)); Inst34++; } } catch(e) {}
Object.prototype;

try { if (Inst35 <= 1000 && typeof (Symbol.prototype.valueOf) != "undefined") {_RecordType("<678,702,38>",(Symbol.prototype.valueOf)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (Symbol.prototype) != "undefined") {_RecordType("<678,694,38>",(Symbol.prototype)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<678,684,38>",(Symbol)); Inst37++; } } catch(e) {}
(() => Symbol.prototype.valueOf())();

try { if (Inst38 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<710,719,40>",(TypeError)); Inst38++; } } catch(e) {}
TypeError;

try { if (Inst39 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<733,746,42>",(reportCompare)); Inst39++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst40 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<767,780,43>",(reportCompare)); Inst40++; } } catch(e) {}
  reportCompare(0, 0);
}

