var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// A stream can become errored with an exception from another realm.
try { if (Inst1 <= 1000 && typeof (newGlobal) != "undefined") {_RecordType("<77,86,2>",(newGlobal)); Inst1++; } } catch(e) {}
let g = newGlobal();
try { if (Inst0 <= 1000 && typeof (g) != "undefined") {_RecordType("<73,74,2>",(g)); Inst0++; } } catch(e) {}
let g_enqueue;
try { if (Inst2 <= 1000 && typeof (g_enqueue) != "undefined") {_RecordType("<94,103,3>",(g_enqueue)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (g.ReadableStream) != "undefined") {_RecordType("<109,125,4>",(g.ReadableStream)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (g) != "undefined") {_RecordType("<109,110,4>",(g)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (start) != "undefined") {_RecordType("<130,135,5>",(start)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (controller) != "undefined") {_RecordType("<136,146,5>",(controller)); Inst6++; } } catch(e) {}
new g.ReadableStream({
  start(controller) {
try { if (Inst8 <= 1000 && typeof (controller.enqueue) != "undefined") {_RecordType("<166,184,6>",(controller.enqueue)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (controller) != "undefined") {_RecordType("<166,176,6>",(controller)); Inst9++; } } catch(e) {}
    g_enqueue = controller.enqueue;
try { if (Inst7 <= 1000 && typeof (g_enqueue) != "undefined") {_RecordType("<154,163,6>",(g_enqueue)); Inst7++; } } catch(e) {}
  }

});
let controller;
try { if (Inst10 <= 1000 && typeof (controller) != "undefined") {_RecordType("<199,209,10>",(controller)); Inst10++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (ReadableStream) != "undefined") {_RecordType("<228,242,11>",(ReadableStream)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (start) != "undefined") {_RecordType("<247,252,12>",(start)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (c) != "undefined") {_RecordType("<253,254,12>",(c)); Inst14++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (size) != "undefined") {_RecordType("<290,294,17>",(size)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (chunk) != "undefined") {_RecordType("<295,300,17>",(chunk)); Inst18++; } } catch(e) {}
let stream = new ReadableStream({
  start(c) {
try { if (Inst16 <= 1000 && typeof (c) != "undefined") {_RecordType("<275,276,13>",(c)); Inst16++; } } catch(e) {}
    controller = c;
try { if (Inst15 <= 1000 && typeof (controller) != "undefined") {_RecordType("<262,272,13>",(controller)); Inst15++; } } catch(e) {}
  }

}, {
  size(chunk) {
    ;
  }

});
try { if (Inst11 <= 1000 && typeof (stream) != "undefined") {_RecordType("<215,221,11>",(stream)); Inst11++; } } catch(e) {}

try { if (Inst19 <= 1000 && typeof (g_enqueue.call) != "undefined") {_RecordType("<327,341,23>",(g_enqueue.call)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (g_enqueue) != "undefined") {_RecordType("<327,336,23>",(g_enqueue)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (controller) != "undefined") {_RecordType("<342,352,23>",(controller)); Inst21++; } } catch(e) {}
(() => g_enqueue.call(controller, {}))();

try { if (Inst22 <= 1000 && typeof (g.RangeError) != "undefined") {_RecordType("<363,375,25>",(g.RangeError)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (g) != "undefined") {_RecordType("<363,364,25>",(g)); Inst23++; } } catch(e) {}
g.RangeError;

try { if (Inst24 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<389,402,27>",(reportCompare)); Inst24++; } } catch(e) {}
if (typeof reportCompare == 'function') {
try { if (Inst25 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<422,435,28>",(reportCompare)); Inst25++; } } catch(e) {}
  reportCompare(0, 0);
}

