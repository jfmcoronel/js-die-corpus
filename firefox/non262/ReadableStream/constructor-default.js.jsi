var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// The second argument to `new ReadableStream` defaults to `{}`, so it observes
// properties hacked onto Object.prototype.
let log = [];
try { if (Inst0 <= 1000 && typeof (log) != "undefined") {_RecordType("<128,131,3>",(log)); Inst0++; } } catch(e) {}
try { if (Inst1 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<138,159,4>",(Object.defineProperty)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Object) != "undefined") {_RecordType("<138,144,4>",(Object)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<160,176,4>",(Object.prototype)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Object) != "undefined") {_RecordType("<160,166,4>",(Object)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (get) != "undefined") {_RecordType("<213,216,7>",(get)); Inst5++; } } catch(e) {}
Object.defineProperty(Object.prototype, "size", {
  configurable: true,

  get() {
try { if (Inst6 <= 1000 && typeof (log.push) != "undefined") {_RecordType("<225,233,8>",(log.push)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (log) != "undefined") {_RecordType("<225,228,8>",(log)); Inst7++; } } catch(e) {}
    log.push("size");
try { if (Inst8 <= 1000 && typeof (log.push) != "undefined") {_RecordType("<247,255,9>",(log.push)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (log) != "undefined") {_RecordType("<247,250,9>",(log)); Inst9++; } } catch(e) {}
    log.push(this);
try { if (Inst10 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<274,283,10>",(undefined)); Inst10++; } } catch(e) {}
    return undefined;
  }

});
Object.prototype.highWaterMark = 1337;
try { if (Inst11 <= 1000 && typeof (Object.prototype.highWaterMark) != "undefined") {_RecordType("<294,324,14>",(Object.prototype.highWaterMark)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<294,310,14>",(Object.prototype)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Object) != "undefined") {_RecordType("<294,300,14>",(Object)); Inst13++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (ReadableStream) != "undefined") {_RecordType("<345,359,15>",(ReadableStream)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (start) != "undefined") {_RecordType("<364,369,16>",(start)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (controller) != "undefined") {_RecordType("<370,380,16>",(controller)); Inst17++; } } catch(e) {}
let s = new ReadableStream({
  start(controller) {
try { if (Inst18 <= 1000 && typeof (log.push) != "undefined") {_RecordType("<388,396,17>",(log.push)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (log) != "undefined") {_RecordType("<388,391,17>",(log)); Inst19++; } } catch(e) {}
    log.push("start");
try { if (Inst20 <= 1000 && typeof (log.push) != "undefined") {_RecordType("<411,419,18>",(log.push)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (log) != "undefined") {_RecordType("<411,414,18>",(log)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (controller.desiredSize) != "undefined") {_RecordType("<420,442,18>",(controller.desiredSize)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (controller) != "undefined") {_RecordType("<420,430,18>",(controller)); Inst23++; } } catch(e) {}
    log.push(controller.desiredSize);
  }

});
try { if (Inst14 <= 1000 && typeof (s) != "undefined") {_RecordType("<337,338,15>",(s)); Inst14++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (log) != "undefined") {_RecordType("<454,457,22>",(log)); Inst24++; } } catch(e) {}
log;
["size", {}, "start", 1337];

try { if (Inst25 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<500,513,25>",(reportCompare)); Inst25++; } } catch(e) {}
if (typeof reportCompare == "function") {
try { if (Inst26 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<533,546,26>",(reportCompare)); Inst26++; } } catch(e) {}
  reportCompare(0, 0);
}

