var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/*
 * Any copyright is dedicated to the Public Domain.
 * http://creativecommons.org/licenses/publicdomain/
 */
var BUGNUMBER = 501739;
try { if (Inst0 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<116,125,5>",(BUGNUMBER)); Inst0++; } } catch(e) {}
var summary = "String.prototype.match should zero the .lastIndex when called with a " + "global RegExp";
try { if (Inst1 <= 1000 && typeof (summary) != "undefined") {_RecordType("<140,147,6>",(summary)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (print) != "undefined") {_RecordType("<241,246,7>",(print)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<247,256,7>",(BUGNUMBER)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (summary) != "undefined") {_RecordType("<266,273,7>",(summary)); Inst4++; } } catch(e) {}
print(BUGNUMBER + ": " + summary);
/**************
 * BEGIN TEST *
 **************/

var s = '0x2x4x6x8';
try { if (Inst5 <= 1000 && typeof (s) != "undefined") {_RecordType("<330,331,12>",(s)); Inst5++; } } catch(e) {}
var p = /x/g;
try { if (Inst6 <= 1000 && typeof (p) != "undefined") {_RecordType("<351,352,13>",(p)); Inst6++; } } catch(e) {}
p.lastIndex = 3;
try { if (Inst7 <= 1000 && typeof (p.lastIndex) != "undefined") {_RecordType("<361,372,14>",(p.lastIndex)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (p) != "undefined") {_RecordType("<361,362,14>",(p)); Inst8++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (s.match) != "undefined") {_RecordType("<388,395,15>",(s.match)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (s) != "undefined") {_RecordType("<388,389,15>",(s)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (p) != "undefined") {_RecordType("<396,397,15>",(p)); Inst12++; } } catch(e) {}
var arr = s.match(p);
try { if (Inst9 <= 1000 && typeof (arr) != "undefined") {_RecordType("<382,385,15>",(arr)); Inst9++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (arr.length) != "undefined") {_RecordType("<400,410,16>",(arr.length)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (arr) != "undefined") {_RecordType("<400,403,16>",(arr)); Inst14++; } } catch(e) {}
arr.length;
4;
try { if (Inst15 <= 1000 && typeof (arr.forEach) != "undefined") {_RecordType("<415,426,18>",(arr.forEach)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (arr) != "undefined") {_RecordType("<415,418,18>",(arr)); Inst16++; } } catch(e) {}
arr.forEach(function (v) {
try { if (Inst17 <= 1000 && typeof (v) != "undefined") {_RecordType("<437,438,18>",(v)); Inst17++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (v) != "undefined") {_RecordType("<444,445,19>",(v)); Inst18++; } } catch(e) {}
  v;
  "x";
});
try { if (Inst19 <= 1000 && typeof (p.lastIndex) != "undefined") {_RecordType("<458,469,22>",(p.lastIndex)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (p) != "undefined") {_RecordType("<458,459,22>",(p)); Inst20++; } } catch(e) {}
p.lastIndex;
0;

/******************************************************************************/
try { if (Inst21 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<567,580,26>",(reportCompare)); Inst21++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst22 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<601,614,27>",(reportCompare)); Inst22++; } } catch(e) {}
  reportCompare(true, true);
}

try { if (Inst23 <= 1000 && typeof (print) != "undefined") {_RecordType("<631,636,30>",(print)); Inst23++; } } catch(e) {}
print("Tests complete");

