var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// |reftest| skip-if(!xulRuntime.shell)
var BUGNUMBER = 1509768;
try { if (Inst0 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<44,53,2>",(BUGNUMBER)); Inst0++; } } catch(e) {}
var summary = "String#replace with an empty string pattern on a rope should prepend the replacement string.";
try { if (Inst1 <= 1000 && typeof (summary) != "undefined") {_RecordType("<69,76,3>",(summary)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (print) != "undefined") {_RecordType("<175,180,4>",(print)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<181,190,4>",(BUGNUMBER)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (summary) != "undefined") {_RecordType("<200,207,4>",(summary)); Inst4++; } } catch(e) {}
print(BUGNUMBER + ": " + summary); // Rope is created when the string length >= 24.
//
// This testcase depends on that condition to reliably test the code for
// String#replace on a rope.
//
// Please rewrite this testcase when the following assertion fails.

try { if (Inst5 <= 1000 && typeof (isRope) != "undefined") {_RecordType("<436,442,11>",(isRope)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof ("a".repeat) != "undefined") {_RecordType("<443,453,11>",("a".repeat)); Inst6++; } } catch(e) {}
isRope("a".repeat(23));
false;
try { if (Inst7 <= 1000 && typeof (isRope) != "undefined") {_RecordType("<467,473,13>",(isRope)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof ("a".repeat) != "undefined") {_RecordType("<474,484,13>",("a".repeat)); Inst8++; } } catch(e) {}
isRope("a".repeat(24));
true;
try { if (Inst9 <= 1000 && typeof ("a".repeat(23).replace) != "undefined") {_RecordType("<497,519,15>",("a".repeat(23).replace)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof ("a".repeat) != "undefined") {_RecordType("<497,507,15>",("a".repeat)); Inst10++; } } catch(e) {}
"a".repeat(23).replace("", "foo");
try { if (Inst11 <= 1000 && typeof ("a".repeat) != "undefined") {_RecordType("<540,550,16>",("a".repeat)); Inst11++; } } catch(e) {}
"foo" + "a".repeat(23);
try { if (Inst12 <= 1000 && typeof ("a".repeat(23).replace) != "undefined") {_RecordType("<556,578,17>",("a".repeat(23).replace)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof ("a".repeat) != "undefined") {_RecordType("<556,566,17>",("a".repeat)); Inst13++; } } catch(e) {}
"a".repeat(23).replace("", "");
try { if (Inst14 <= 1000 && typeof ("a".repeat) != "undefined") {_RecordType("<588,598,18>",("a".repeat)); Inst14++; } } catch(e) {}
"a".repeat(23);
try { if (Inst15 <= 1000 && typeof ("a".repeat(24).replace) != "undefined") {_RecordType("<604,626,19>",("a".repeat(24).replace)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof ("a".repeat) != "undefined") {_RecordType("<604,614,19>",("a".repeat)); Inst16++; } } catch(e) {}
"a".repeat(24).replace("", "foo");
try { if (Inst17 <= 1000 && typeof ("a".repeat) != "undefined") {_RecordType("<647,657,20>",("a".repeat)); Inst17++; } } catch(e) {}
"foo" + "a".repeat(24);
try { if (Inst18 <= 1000 && typeof ("a".repeat(24).replace) != "undefined") {_RecordType("<663,685,21>",("a".repeat(24).replace)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof ("a".repeat) != "undefined") {_RecordType("<663,673,21>",("a".repeat)); Inst19++; } } catch(e) {}
"a".repeat(24).replace("", "");
try { if (Inst20 <= 1000 && typeof ("a".repeat) != "undefined") {_RecordType("<695,705,22>",("a".repeat)); Inst20++; } } catch(e) {}
"a".repeat(24);

try { if (Inst21 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<723,736,24>",(reportCompare)); Inst21++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst22 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<757,770,25>",(reportCompare)); Inst22++; } } catch(e) {}
  reportCompare(true, true);
}

