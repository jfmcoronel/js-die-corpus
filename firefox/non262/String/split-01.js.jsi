var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/*
 * Any copyright is dedicated to the Public Domain.
 * http://creativecommons.org/licenses/publicdomain/
 */
var BUGNUMBER = 614608;
try { if (Inst0 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<116,125,5>",(BUGNUMBER)); Inst0++; } } catch(e) {}
var summary = "String.prototype.split tests";
try { if (Inst1 <= 1000 && typeof (summary) != "undefined") {_RecordType("<140,147,6>",(summary)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (print) != "undefined") {_RecordType("<182,187,7>",(print)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<188,197,7>",(BUGNUMBER)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (summary) != "undefined") {_RecordType("<207,214,7>",(summary)); Inst4++; } } catch(e) {}
print(BUGNUMBER + ": " + summary);
/**************
 * BEGIN TEST *
 **************/

try { if (Inst5 <= 1000 && typeof (assertEqArr) != "undefined") {_RecordType("<276,287,12>",(assertEqArr)); Inst5++; } } catch(e) {}
function assertEqArr(a1, a2) {
try { if (Inst6 <= 1000 && typeof (a1) != "undefined") {_RecordType("<288,290,12>",(a1)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (a2) != "undefined") {_RecordType("<292,294,12>",(a2)); Inst7++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (a1.length) != "undefined") {_RecordType("<300,309,13>",(a1.length)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (a1) != "undefined") {_RecordType("<300,302,13>",(a1)); Inst9++; } } catch(e) {}
  a1.length;
try { if (Inst10 <= 1000 && typeof (a2.length) != "undefined") {_RecordType("<313,322,14>",(a2.length)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (a2) != "undefined") {_RecordType("<313,315,14>",(a2)); Inst11++; } } catch(e) {}
  a2.length;

  for (var i = 0; i < a1.length; i++) {
try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<336,337,16>",(i)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<343,344,16>",(i)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (a1.length) != "undefined") {_RecordType("<347,356,16>",(a1.length)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (a1) != "undefined") {_RecordType("<347,349,16>",(a1)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<358,359,16>",(i)); Inst16++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (a1[i]) != "undefined") {_RecordType("<369,374,17>",(a1[i])); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (a1) != "undefined") {_RecordType("<369,371,17>",(a1)); Inst18++; } } catch(e) {}
    a1[i];
try { if (Inst19 <= 1000 && typeof (a2[i]) != "undefined") {_RecordType("<380,385,18>",(a2[i])); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (a2) != "undefined") {_RecordType("<380,382,18>",(a2)); Inst20++; } } catch(e) {}
    a2[i];
  }
}

var order = "";
try { if (Inst21 <= 1000 && typeof (order) != "undefined") {_RecordType("<398,403,22>",(order)); Inst21++; } } catch(e) {}
var o1 = {
  toString: function () {
    order += "b";
try { if (Inst23 <= 1000 && typeof (order) != "undefined") {_RecordType("<451,456,25>",(order)); Inst23++; } } catch(e) {}
    return "-";
  }
};
try { if (Inst22 <= 1000 && typeof (o1) != "undefined") {_RecordType("<414,416,23>",(o1)); Inst22++; } } catch(e) {}
var o2 = {
  valueOf: function () {
    order += "a";
try { if (Inst25 <= 1000 && typeof (order) != "undefined") {_RecordType("<528,533,31>",(order)); Inst25++; } } catch(e) {}
    return 1;
  }
};
try { if (Inst24 <= 1000 && typeof (o2) != "undefined") {_RecordType("<492,494,29>",(o2)); Inst24++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof ("xyz-xyz".split) != "undefined") {_RecordType("<573,588,35>",("xyz-xyz".split)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (o1) != "undefined") {_RecordType("<589,591,35>",(o1)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (o2) != "undefined") {_RecordType("<593,595,35>",(o2)); Inst29++; } } catch(e) {}
var res = "xyz-xyz".split(o1, o2);
try { if (Inst26 <= 1000 && typeof (res) != "undefined") {_RecordType("<567,570,35>",(res)); Inst26++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (order) != "undefined") {_RecordType("<598,603,36>",(order)); Inst30++; } } catch(e) {}
order;
"ab";
try { if (Inst31 <= 1000 && typeof (res) != "undefined") {_RecordType("<611,614,38>",(res)); Inst31++; } } catch(e) {}
res;
["xyz"];
try { if (Inst32 <= 1000 && typeof ("".split) != "undefined") {_RecordType("<625,633,40>",("".split)); Inst32++; } } catch(e) {}
"".split(/.?/);
[];
try { if (Inst33 <= 1000 && typeof ("abc".split) != "undefined") {_RecordType("<645,656,42>",("abc".split)); Inst33++; } } catch(e) {}
"abc".split(/\b/);
["abc"];
try { if (Inst34 <= 1000 && typeof ("abc".split) != "undefined") {_RecordType("<673,684,44>",("abc".split)); Inst34++; } } catch(e) {}
"abc".split(/((()))./, 2);
["", ""];
try { if (Inst35 <= 1000 && typeof ("abc".split) != "undefined") {_RecordType("<710,721,46>",("abc".split)); Inst35++; } } catch(e) {}
"abc".split(/((((()))))./, 9);
["", "", "", "", "", "", "", "", ""];
try { if (Inst36 <= 1000 && typeof ("ab".split) != "undefined") {_RecordType("<779,789,48>",("ab".split)); Inst36++; } } catch(e) {}
"ab".split(/a*?/);
["a", "b"];
try { if (Inst37 <= 1000 && typeof ("ab".split) != "undefined") {_RecordType("<810,820,50>",("ab".split)); Inst37++; } } catch(e) {}
"ab".split(/a*/);
["", "b"];
try { if (Inst38 <= 1000 && typeof ("A<B>bold</B>and<CODE>coded</CODE>".split) != "undefined") {_RecordType("<839,880,52>",("A<B>bold</B>and<CODE>coded</CODE>".split)); Inst38++; } } catch(e) {}
"A<B>bold</B>and<CODE>coded</CODE>".split(/<(\/)?([^<>]+)>/);
try { if (Inst39 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<907,916,53>",(undefined)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<948,957,53>",(undefined)); Inst40++; } } catch(e) {}
["A", undefined, "B", "bold", "/", "B", "and", undefined, "CODE", "coded", "/", "CODE", ""];

try { if (Inst41 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1006,1019,55>",(reportCompare)); Inst41++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst42 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1040,1053,56>",(reportCompare)); Inst42++; } } catch(e) {}
  reportCompare(true, true);
}

try { if (Inst43 <= 1000 && typeof (print) != "undefined") {_RecordType("<1070,1075,59>",(print)); Inst43++; } } catch(e) {}
print("All tests passed!");

