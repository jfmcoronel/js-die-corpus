var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* Generated by make_unicode.py DO NOT MODIFY */

/* Unicode version: 11.0.0 */

/*
 * Any copyright is dedicated to the Public Domain.
 * http://creativecommons.org/licenses/publicdomain/
 */
try { if (Inst1 <= 1000 && typeof (String.fromCharCode) != "undefined") {_RecordType("<209,228,9>",(String.fromCharCode)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (String) != "undefined") {_RecordType("<209,215,9>",(String)); Inst2++; } } catch(e) {}
var onlySpace = String.fromCharCode(0x0009
/* <control> (CHARACTER TABULATION) */
, 0x000A
/* <control> (LINE FEED (LF)) */
, 0x000B
/* <control> (LINE TABULATION) */
, 0x000C
/* <control> (FORM FEED (FF)) */
, 0x000D
/* <control> (CARRIAGE RETURN (CR)) */
, 0x0020
/* SPACE */
, 0x00A0
/* NO-BREAK SPACE (NON-BREAKING SPACE) */
, 0x1680
/* OGHAM SPACE MARK */
, 0x2000
/* EN QUAD */
, 0x2001
/* EM QUAD */
, 0x2002
/* EN SPACE */
, 0x2003
/* EM SPACE */
, 0x2004
/* THREE-PER-EM SPACE */
, 0x2005
/* FOUR-PER-EM SPACE */
, 0x2006
/* SIX-PER-EM SPACE */
, 0x2007
/* FIGURE SPACE */
, 0x2008
/* PUNCTUATION SPACE */
, 0x2009
/* THIN SPACE */
, 0x200A
/* HAIR SPACE */
, 0x2028
/* LINE SEPARATOR */
, 0x2029
/* PARAGRAPH SEPARATOR */
, 0x202F
/* NARROW NO-BREAK SPACE */
, 0x205F
/* MEDIUM MATHEMATICAL SPACE */
, 0x3000
/* IDEOGRAPHIC SPACE */
, 0xFEFF
/* ZERO WIDTH NO-BREAK SPACE (BYTE ORDER MARK) */
);
try { if (Inst0 <= 1000 && typeof (onlySpace) != "undefined") {_RecordType("<197,206,9>",(onlySpace)); Inst0++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (onlySpace.trim) != "undefined") {_RecordType("<1098,1112,60>",(onlySpace.trim)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (onlySpace) != "undefined") {_RecordType("<1098,1107,60>",(onlySpace)); Inst4++; } } catch(e) {}
onlySpace.trim();
"";
try { if (Inst5 <= 1000 && typeof ((onlySpace + 'aaaa').trim) != "undefined") {_RecordType("<1120,1145,62>",((onlySpace + 'aaaa').trim)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (onlySpace) != "undefined") {_RecordType("<1121,1130,62>",(onlySpace)); Inst6++; } } catch(e) {}
(onlySpace + 'aaaa').trim();
'aaaa';
try { if (Inst7 <= 1000 && typeof (('aaaa' + onlySpace).trim) != "undefined") {_RecordType("<1157,1182,64>",(('aaaa' + onlySpace).trim)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (onlySpace) != "undefined") {_RecordType("<1167,1176,64>",(onlySpace)); Inst8++; } } catch(e) {}
('aaaa' + onlySpace).trim();
'aaaa';
try { if (Inst9 <= 1000 && typeof ((onlySpace + 'aaaa' + onlySpace).trim) != "undefined") {_RecordType("<1194,1231,66>",((onlySpace + 'aaaa' + onlySpace).trim)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (onlySpace) != "undefined") {_RecordType("<1195,1204,66>",(onlySpace)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (onlySpace) != "undefined") {_RecordType("<1216,1225,66>",(onlySpace)); Inst11++; } } catch(e) {}
(onlySpace + 'aaaa' + onlySpace).trim();
'aaaa';

try { if (Inst12 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1255,1268,69>",(reportCompare)); Inst12++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst13 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1289,1302,70>",(reportCompare)); Inst13++; } } catch(e) {}
  reportCompare(true, true);
}

