var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* -*- indent-tabs-mode: nil; js-indent-level: 2 -*- */

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

/*
 * Date: 12 October 2001
 *
 * SUMMARY: Regression test for string.replace bug 104375
 * See http://bugzilla.mozilla.org/show_bug.cgi?id=104375
 */
//-----------------------------------------------------------------------------
var UBound = 0;
try { if (Inst0 <= 1000 && typeof (UBound) != "undefined") {_RecordType("<498,504,14>",(UBound)); Inst0++; } } catch(e) {}
var BUGNUMBER = 104375;
try { if (Inst1 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<514,523,15>",(BUGNUMBER)); Inst1++; } } catch(e) {}
var summary = 'Testing string.replace() with backreferences';
try { if (Inst2 <= 1000 && typeof (summary) != "undefined") {_RecordType("<538,545,16>",(summary)); Inst2++; } } catch(e) {}
var status = '';
try { if (Inst3 <= 1000 && typeof (status) != "undefined") {_RecordType("<600,606,17>",(status)); Inst3++; } } catch(e) {}
var statusitems = [];
try { if (Inst4 <= 1000 && typeof (statusitems) != "undefined") {_RecordType("<617,628,18>",(statusitems)); Inst4++; } } catch(e) {}
var actual = '';
try { if (Inst5 <= 1000 && typeof (actual) != "undefined") {_RecordType("<639,645,19>",(actual)); Inst5++; } } catch(e) {}
var actualvalues = [];
try { if (Inst6 <= 1000 && typeof (actualvalues) != "undefined") {_RecordType("<656,668,20>",(actualvalues)); Inst6++; } } catch(e) {}
var expect = '';
try { if (Inst7 <= 1000 && typeof (expect) != "undefined") {_RecordType("<679,685,21>",(expect)); Inst7++; } } catch(e) {}
var expectedvalues = [];
try { if (Inst8 <= 1000 && typeof (expectedvalues) != "undefined") {_RecordType("<696,710,22>",(expectedvalues)); Inst8++; } } catch(e) {}
/*
 * Use the regexp to replace 'uid=31' with 'uid=15'
 *
 * In the second parameter of string.replace() method,
 * "$1" refers to the first backreference: 'uid='
 */

var str = 'uid=31';
try { if (Inst9 <= 1000 && typeof (str) != "undefined") {_RecordType("<889,892,30>",(str)); Inst9++; } } catch(e) {}
var re = /(uid=)(\d+)/; // try the numeric literal 15
try { if (Inst10 <= 1000 && typeof (re) != "undefined") {_RecordType("<909,911,31>",(re)); Inst10++; } } catch(e) {}

try { if (Inst12 <= 1000 && typeof (inSection) != "undefined") {_RecordType("<969,978,33>",(inSection)); Inst12++; } } catch(e) {}
status = inSection(1);
try { if (Inst11 <= 1000 && typeof (status) != "undefined") {_RecordType("<960,966,33>",(status)); Inst11++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (str.replace) != "undefined") {_RecordType("<992,1003,34>",(str.replace)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (str) != "undefined") {_RecordType("<992,995,34>",(str)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (re) != "undefined") {_RecordType("<1004,1006,34>",(re)); Inst16++; } } catch(e) {}
actual = str.replace(re, "$1" + 15);
try { if (Inst13 <= 1000 && typeof (actual) != "undefined") {_RecordType("<983,989,34>",(actual)); Inst13++; } } catch(e) {}
expect = 'uid=15';
try { if (Inst17 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1020,1026,35>",(expect)); Inst17++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (addThis) != "undefined") {_RecordType("<1039,1046,36>",(addThis)); Inst18++; } } catch(e) {}
addThis(); // try the string literal '15'

try { if (Inst20 <= 1000 && typeof (inSection) != "undefined") {_RecordType("<1091,1100,38>",(inSection)); Inst20++; } } catch(e) {}
status = inSection(2);
try { if (Inst19 <= 1000 && typeof (status) != "undefined") {_RecordType("<1082,1088,38>",(status)); Inst19++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (str.replace) != "undefined") {_RecordType("<1114,1125,39>",(str.replace)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (str) != "undefined") {_RecordType("<1114,1117,39>",(str)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (re) != "undefined") {_RecordType("<1126,1128,39>",(re)); Inst24++; } } catch(e) {}
actual = str.replace(re, "$1" + '15');
try { if (Inst21 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1105,1111,39>",(actual)); Inst21++; } } catch(e) {}
expect = 'uid=15';
try { if (Inst25 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1144,1150,40>",(expect)); Inst25++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (addThis) != "undefined") {_RecordType("<1163,1170,41>",(addThis)); Inst26++; } } catch(e) {}
addThis(); // try a letter before the '15'

try { if (Inst28 <= 1000 && typeof (inSection) != "undefined") {_RecordType("<1216,1225,43>",(inSection)); Inst28++; } } catch(e) {}
status = inSection(3);
try { if (Inst27 <= 1000 && typeof (status) != "undefined") {_RecordType("<1207,1213,43>",(status)); Inst27++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (str.replace) != "undefined") {_RecordType("<1239,1250,44>",(str.replace)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (str) != "undefined") {_RecordType("<1239,1242,44>",(str)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (re) != "undefined") {_RecordType("<1251,1253,44>",(re)); Inst32++; } } catch(e) {}
actual = str.replace(re, "$1" + 'A15');
try { if (Inst29 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1230,1236,44>",(actual)); Inst29++; } } catch(e) {}
expect = 'uid=A15';
try { if (Inst33 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1270,1276,45>",(expect)); Inst33++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof (addThis) != "undefined") {_RecordType("<1290,1297,46>",(addThis)); Inst34++; } } catch(e) {}
addThis(); //-----------------------------------------------------------------------------

try { if (Inst35 <= 1000 && typeof (test) != "undefined") {_RecordType("<1382,1386,48>",(test)); Inst35++; } } catch(e) {}
test(); //-----------------------------------------------------------------------------

try { if (Inst36 <= 1000 && typeof (addThis) != "undefined") {_RecordType("<1480,1487,50>",(addThis)); Inst36++; } } catch(e) {}
function addThis() {
try { if (Inst39 <= 1000 && typeof (status) != "undefined") {_RecordType("<1516,1522,51>",(status)); Inst39++; } } catch(e) {}
  statusitems[UBound] = status;
try { if (Inst37 <= 1000 && typeof (statusitems[UBound]) != "undefined") {_RecordType("<1494,1513,51>",(statusitems[UBound])); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (statusitems) != "undefined") {_RecordType("<1494,1505,51>",(statusitems)); Inst38++; } } catch(e) {}
try { if (Inst42 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1549,1555,52>",(actual)); Inst42++; } } catch(e) {}
  actualvalues[UBound] = actual;
try { if (Inst40 <= 1000 && typeof (actualvalues[UBound]) != "undefined") {_RecordType("<1526,1546,52>",(actualvalues[UBound])); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (actualvalues) != "undefined") {_RecordType("<1526,1538,52>",(actualvalues)); Inst41++; } } catch(e) {}
try { if (Inst45 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1584,1590,53>",(expect)); Inst45++; } } catch(e) {}
  expectedvalues[UBound] = expect;
try { if (Inst43 <= 1000 && typeof (expectedvalues[UBound]) != "undefined") {_RecordType("<1559,1581,53>",(expectedvalues[UBound])); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (expectedvalues) != "undefined") {_RecordType("<1559,1573,53>",(expectedvalues)); Inst44++; } } catch(e) {}
try { if (Inst46 <= 1000 && typeof (UBound) != "undefined") {_RecordType("<1594,1600,54>",(UBound)); Inst46++; } } catch(e) {}
  UBound++;
}

try { if (Inst47 <= 1000 && typeof (test) != "undefined") {_RecordType("<1616,1620,57>",(test)); Inst47++; } } catch(e) {}
function test() {
try { if (Inst48 <= 1000 && typeof (printBugNumber) != "undefined") {_RecordType("<1627,1641,58>",(printBugNumber)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<1642,1651,58>",(BUGNUMBER)); Inst49++; } } catch(e) {}
  printBugNumber(BUGNUMBER);
try { if (Inst50 <= 1000 && typeof (printStatus) != "undefined") {_RecordType("<1656,1667,59>",(printStatus)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (summary) != "undefined") {_RecordType("<1668,1675,59>",(summary)); Inst51++; } } catch(e) {}
  printStatus(summary);

  for (var i = 0; i < UBound; i++) {
try { if (Inst52 <= 1000 && typeof (i) != "undefined") {_RecordType("<1690,1691,61>",(i)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (i) != "undefined") {_RecordType("<1697,1698,61>",(i)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (UBound) != "undefined") {_RecordType("<1701,1707,61>",(UBound)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (i) != "undefined") {_RecordType("<1709,1710,61>",(i)); Inst55++; } } catch(e) {}
try { if (Inst56 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1720,1733,62>",(reportCompare)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (expectedvalues[i]) != "undefined") {_RecordType("<1734,1751,62>",(expectedvalues[i])); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (expectedvalues) != "undefined") {_RecordType("<1734,1748,62>",(expectedvalues)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (actualvalues[i]) != "undefined") {_RecordType("<1753,1768,62>",(actualvalues[i])); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (actualvalues) != "undefined") {_RecordType("<1753,1765,62>",(actualvalues)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (statusitems[i]) != "undefined") {_RecordType("<1770,1784,62>",(statusitems[i])); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (statusitems) != "undefined") {_RecordType("<1770,1781,62>",(statusitems)); Inst62++; } } catch(e) {}
    reportCompare(expectedvalues[i], actualvalues[i], statusitems[i]);
  }
}

