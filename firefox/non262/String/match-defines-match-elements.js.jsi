var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/*
 * Any copyright is dedicated to the Public Domain.
 * http://creativecommons.org/licenses/publicdomain/
 */
var BUGNUMBER = 677820;
try { if (Inst0 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<116,125,5>",(BUGNUMBER)); Inst0++; } } catch(e) {}
var summary = "String.prototype.match must define matches on the returned array, not set " + "them";
try { if (Inst1 <= 1000 && typeof (summary) != "undefined") {_RecordType("<140,147,6>",(summary)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (print) != "undefined") {_RecordType("<237,242,7>",(print)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<243,252,7>",(BUGNUMBER)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (summary) != "undefined") {_RecordType("<262,269,7>",(summary)); Inst4++; } } catch(e) {}
print(BUGNUMBER + ": " + summary);
/**************
 * BEGIN TEST *
 **************/

var called = false;
try { if (Inst5 <= 1000 && typeof (called) != "undefined") {_RecordType("<326,332,12>",(called)); Inst5++; } } catch(e) {}

try { if (Inst6 <= 1000 && typeof (setterFunction) != "undefined") {_RecordType("<352,366,14>",(setterFunction)); Inst6++; } } catch(e) {}
function setterFunction(v) {
try { if (Inst7 <= 1000 && typeof (v) != "undefined") {_RecordType("<367,368,14>",(v)); Inst7++; } } catch(e) {}
  called = true;
try { if (Inst8 <= 1000 && typeof (called) != "undefined") {_RecordType("<374,380,15>",(called)); Inst8++; } } catch(e) {}
}

try { if (Inst9 <= 1000 && typeof (getterFunction) != "undefined") {_RecordType("<401,415,18>",(getterFunction)); Inst9++; } } catch(e) {}
function getterFunction(v) {
try { if (Inst10 <= 1000 && typeof (v) != "undefined") {_RecordType("<416,417,18>",(v)); Inst10++; } } catch(e) {}
  return "getter";
}

try { if (Inst11 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<443,464,22>",(Object.defineProperty)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Object) != "undefined") {_RecordType("<443,449,22>",(Object)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<465,480,22>",(Array.prototype)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Array) != "undefined") {_RecordType("<465,470,22>",(Array)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (getterFunction) != "undefined") {_RecordType("<494,508,23>",(getterFunction)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (setterFunction) != "undefined") {_RecordType("<517,531,24>",(setterFunction)); Inst16++; } } catch(e) {}
Object.defineProperty(Array.prototype, 1, {
  get: getterFunction,
  set: setterFunction
});
try { if (Inst17 <= 1000 && typeof (called) != "undefined") {_RecordType("<536,542,26>",(called)); Inst17++; } } catch(e) {}
called;
false;
try { if (Inst19 <= 1000 && typeof ("abcdef".match) != "undefined") {_RecordType("<565,579,28>",("abcdef".match)); Inst19++; } } catch(e) {}
var matches = "abcdef".match(/./g);
try { if (Inst18 <= 1000 && typeof (matches) != "undefined") {_RecordType("<555,562,28>",(matches)); Inst18++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (called) != "undefined") {_RecordType("<587,593,29>",(called)); Inst20++; } } catch(e) {}
called;
false;
try { if (Inst21 <= 1000 && typeof (matches.length) != "undefined") {_RecordType("<602,616,31>",(matches.length)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (matches) != "undefined") {_RecordType("<602,609,31>",(matches)); Inst22++; } } catch(e) {}
matches.length;
6;
try { if (Inst23 <= 1000 && typeof (matches[0]) != "undefined") {_RecordType("<621,631,33>",(matches[0])); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (matches) != "undefined") {_RecordType("<621,628,33>",(matches)); Inst24++; } } catch(e) {}
matches[0];
"a";
try { if (Inst25 <= 1000 && typeof (matches[1]) != "undefined") {_RecordType("<638,648,35>",(matches[1])); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (matches) != "undefined") {_RecordType("<638,645,35>",(matches)); Inst26++; } } catch(e) {}
matches[1];
"b";
try { if (Inst27 <= 1000 && typeof (matches[2]) != "undefined") {_RecordType("<655,665,37>",(matches[2])); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (matches) != "undefined") {_RecordType("<655,662,37>",(matches)); Inst28++; } } catch(e) {}
matches[2];
"c";
try { if (Inst29 <= 1000 && typeof (matches[3]) != "undefined") {_RecordType("<672,682,39>",(matches[3])); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (matches) != "undefined") {_RecordType("<672,679,39>",(matches)); Inst30++; } } catch(e) {}
matches[3];
"d";
try { if (Inst31 <= 1000 && typeof (matches[4]) != "undefined") {_RecordType("<689,699,41>",(matches[4])); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (matches) != "undefined") {_RecordType("<689,696,41>",(matches)); Inst32++; } } catch(e) {}
matches[4];
"e";
try { if (Inst33 <= 1000 && typeof (matches[5]) != "undefined") {_RecordType("<706,716,43>",(matches[5])); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (matches) != "undefined") {_RecordType("<706,713,43>",(matches)); Inst34++; } } catch(e) {}
matches[5];
"f";
try { if (Inst36 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<734,765,45>",(Object.getOwnPropertyDescriptor)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (Object) != "undefined") {_RecordType("<734,740,45>",(Object)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<766,781,45>",(Array.prototype)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (Array) != "undefined") {_RecordType("<766,771,45>",(Array)); Inst39++; } } catch(e) {}
var desc = Object.getOwnPropertyDescriptor(Array.prototype, 1);
try { if (Inst35 <= 1000 && typeof (desc) != "undefined") {_RecordType("<727,731,45>",(desc)); Inst35++; } } catch(e) {}
try { if (Inst40 <= 1000 && typeof (desc.get) != "undefined") {_RecordType("<787,795,46>",(desc.get)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (desc) != "undefined") {_RecordType("<787,791,46>",(desc)); Inst41++; } } catch(e) {}
desc.get;
try { if (Inst42 <= 1000 && typeof (getterFunction) != "undefined") {_RecordType("<797,811,47>",(getterFunction)); Inst42++; } } catch(e) {}
getterFunction();
try { if (Inst43 <= 1000 && typeof (desc.set) != "undefined") {_RecordType("<815,823,48>",(desc.set)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (desc) != "undefined") {_RecordType("<815,819,48>",(desc)); Inst44++; } } catch(e) {}
desc.set;
try { if (Inst45 <= 1000 && typeof (setterFunction) != "undefined") {_RecordType("<825,839,49>",(setterFunction)); Inst45++; } } catch(e) {}
setterFunction();
try { if (Inst46 <= 1000 && typeof (desc.enumerable) != "undefined") {_RecordType("<843,858,50>",(desc.enumerable)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (desc) != "undefined") {_RecordType("<843,847,50>",(desc)); Inst47++; } } catch(e) {}
desc.enumerable;
false;
try { if (Inst48 <= 1000 && typeof (desc.configurable) != "undefined") {_RecordType("<867,884,52>",(desc.configurable)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (desc) != "undefined") {_RecordType("<867,871,52>",(desc)); Inst49++; } } catch(e) {}
desc.configurable;
false;
try { if (Inst50 <= 1000 && typeof ([][1]) != "undefined") {_RecordType("<893,898,54>",([][1])); Inst50++; } } catch(e) {}
[][1];
"getter";
try { if (Inst51 <= 1000 && typeof (called) != "undefined") {_RecordType("<910,916,56>",(called)); Inst51++; } } catch(e) {}
called;
false;

try { if (Inst52 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<937,950,59>",(reportCompare)); Inst52++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst53 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<971,984,60>",(reportCompare)); Inst53++; } } catch(e) {}
  reportCompare(true, true);
}

try { if (Inst54 <= 1000 && typeof (print) != "undefined") {_RecordType("<1001,1006,63>",(print)); Inst54++; } } catch(e) {}
print("Tests complete");

