var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Tests that IteratorClose is called in array destructuring patterns.
try { if (Inst0 <= 1000 && typeof (test) != "undefined") {_RecordType("<80,84,2>",(test)); Inst0++; } } catch(e) {}
function test() {
  var returnCalled = 0;
try { if (Inst1 <= 1000 && typeof (returnCalled) != "undefined") {_RecordType("<95,107,3>",(returnCalled)); Inst1++; } } catch(e) {}
  var returnCalledExpected = 0;
try { if (Inst2 <= 1000 && typeof (returnCalledExpected) != "undefined") {_RecordType("<119,139,4>",(returnCalledExpected)); Inst2++; } } catch(e) {}
  var iterable = {}; // empty [] calls IteratorClose regardless of "done" on the result.
try { if (Inst3 <= 1000 && typeof (iterable) != "undefined") {_RecordType("<151,159,5>",(iterable)); Inst3++; } } catch(e) {}

try { if (Inst8 <= 1000 && typeof (makeIterator) != "undefined") {_RecordType("<265,277,7>",(makeIterator)); Inst8++; } } catch(e) {}
  iterable[Symbol.iterator] = makeIterator({
    next: function () {
      return {
        done: true
      };
    },
    ret: function () {
try { if (Inst9 <= 1000 && typeof (returnCalled) != "undefined") {_RecordType("<383,395,14>",(returnCalled)); Inst9++; } } catch(e) {}
      returnCalled++;
      return {};
    }
  });
try { if (Inst4 <= 1000 && typeof (iterable[Symbol.iterator]) != "undefined") {_RecordType("<237,262,7>",(iterable[Symbol.iterator])); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (iterable) != "undefined") {_RecordType("<237,245,7>",(iterable)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<246,261,7>",(Symbol.iterator)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<246,252,7>",(Symbol)); Inst7++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (iterable) != "undefined") {_RecordType("<439,447,18>",(iterable)); Inst10++; } } catch(e) {}
  var [] = iterable;
try { if (Inst11 <= 1000 && typeof (returnCalled) != "undefined") {_RecordType("<451,463,19>",(returnCalled)); Inst11++; } } catch(e) {}
  returnCalled;
try { if (Inst12 <= 1000 && typeof (returnCalledExpected) != "undefined") {_RecordType("<469,489,20>",(returnCalledExpected)); Inst12++; } } catch(e) {}
  ++returnCalledExpected;
try { if (Inst17 <= 1000 && typeof (makeIterator) != "undefined") {_RecordType("<521,533,21>",(makeIterator)); Inst17++; } } catch(e) {}
  iterable[Symbol.iterator] = makeIterator({
    ret: function () {
try { if (Inst18 <= 1000 && typeof (returnCalled) != "undefined") {_RecordType("<565,577,23>",(returnCalled)); Inst18++; } } catch(e) {}
      returnCalled++;
      return {};
    }
  });
try { if (Inst13 <= 1000 && typeof (iterable[Symbol.iterator]) != "undefined") {_RecordType("<493,518,21>",(iterable[Symbol.iterator])); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (iterable) != "undefined") {_RecordType("<493,501,21>",(iterable)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<502,517,21>",(Symbol.iterator)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<502,508,21>",(Symbol)); Inst16++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (iterable) != "undefined") {_RecordType("<621,629,27>",(iterable)); Inst19++; } } catch(e) {}
  var [] = iterable;
try { if (Inst20 <= 1000 && typeof (returnCalled) != "undefined") {_RecordType("<633,645,28>",(returnCalled)); Inst20++; } } catch(e) {}
  returnCalled;
try { if (Inst21 <= 1000 && typeof (returnCalledExpected) != "undefined") {_RecordType("<651,671,29>",(returnCalledExpected)); Inst21++; } } catch(e) {}
  ++returnCalledExpected;
  // Non-empty destructuring calls IteratorClose if iterator is not done by
  // the end of destructuring.
try { if (Inst24 <= 1000 && typeof (iterable) != "undefined") {_RecordType("<795,803,32>",(iterable)); Inst24++; } } catch(e) {}
  var [a, b] = iterable;
try { if (Inst22 <= 1000 && typeof (a) != "undefined") {_RecordType("<787,788,32>",(a)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (b) != "undefined") {_RecordType("<790,791,32>",(b)); Inst23++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (returnCalled) != "undefined") {_RecordType("<807,819,33>",(returnCalled)); Inst25++; } } catch(e) {}
  returnCalled;
try { if (Inst26 <= 1000 && typeof (returnCalledExpected) != "undefined") {_RecordType("<825,845,34>",(returnCalledExpected)); Inst26++; } } catch(e) {}
  ++returnCalledExpected;
try { if (Inst28 <= 1000 && typeof (iterable) != "undefined") {_RecordType("<859,867,35>",(iterable)); Inst28++; } } catch(e) {}
  var [c] = iterable;
try { if (Inst27 <= 1000 && typeof (c) != "undefined") {_RecordType("<854,855,35>",(c)); Inst27++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (returnCalled) != "undefined") {_RecordType("<871,883,36>",(returnCalled)); Inst29++; } } catch(e) {}
  returnCalled;
try { if (Inst30 <= 1000 && typeof (returnCalledExpected) != "undefined") {_RecordType("<889,909,37>",(returnCalledExpected)); Inst30++; } } catch(e) {}
  ++returnCalledExpected;

  // throw in lhs ref calls IteratorClose
try { if (Inst31 <= 1000 && typeof (throwlhs) != "undefined") {_RecordType("<965,973,40>",(throwlhs)); Inst31++; } } catch(e) {}
  function throwlhs() {
    throw "in lhs";
  }

  (function () {
try { if (Inst34 <= 1000 && typeof (iterable) != "undefined") {_RecordType("<1049,1057,45>",(iterable)); Inst34++; } } catch(e) {}
    0, [...{}[throwlhs()]] = iterable;
try { if (Inst32 <= 1000 && typeof ({}[throwlhs()]) != "undefined") {_RecordType("<1031,1045,45>",({}[throwlhs()])); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (throwlhs) != "undefined") {_RecordType("<1034,1042,45>",(throwlhs)); Inst33++; } } catch(e) {}
  })();

  "in lhs";
try { if (Inst35 <= 1000 && typeof (returnCalled) != "undefined") {_RecordType("<1082,1094,49>",(returnCalled)); Inst35++; } } catch(e) {}
  returnCalled;
try { if (Inst36 <= 1000 && typeof (returnCalledExpected) != "undefined") {_RecordType("<1100,1120,50>",(returnCalledExpected)); Inst36++; } } catch(e) {}
  ++returnCalledExpected;
  // throw in lhs ref calls IteratorClose with falsy "done".
try { if (Inst41 <= 1000 && typeof (makeIterator) != "undefined") {_RecordType("<1213,1225,52>",(makeIterator)); Inst41++; } } catch(e) {}
  iterable[Symbol.iterator] = makeIterator({
    next: function () {
      // "done" is undefined.
      return {};
    },
    ret: function () {
try { if (Inst42 <= 1000 && typeof (returnCalled) != "undefined") {_RecordType("<1335,1347,58>",(returnCalled)); Inst42++; } } catch(e) {}
      returnCalled++;
      return {};
    }
  });
try { if (Inst37 <= 1000 && typeof (iterable[Symbol.iterator]) != "undefined") {_RecordType("<1185,1210,52>",(iterable[Symbol.iterator])); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (iterable) != "undefined") {_RecordType("<1185,1193,52>",(iterable)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<1194,1209,52>",(Symbol.iterator)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<1194,1200,52>",(Symbol)); Inst40++; } } catch(e) {}

  (function () {
try { if (Inst45 <= 1000 && typeof (iterable) != "undefined") {_RecordType("<1427,1435,64>",(iterable)); Inst45++; } } catch(e) {}
    0, [...{}[throwlhs()]] = iterable;
try { if (Inst43 <= 1000 && typeof ({}[throwlhs()]) != "undefined") {_RecordType("<1409,1423,64>",({}[throwlhs()])); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (throwlhs) != "undefined") {_RecordType("<1412,1420,64>",(throwlhs)); Inst44++; } } catch(e) {}
  })();

  "in lhs";
try { if (Inst46 <= 1000 && typeof (returnCalled) != "undefined") {_RecordType("<1460,1472,68>",(returnCalled)); Inst46++; } } catch(e) {}
  returnCalled;
try { if (Inst47 <= 1000 && typeof (returnCalledExpected) != "undefined") {_RecordType("<1478,1498,69>",(returnCalledExpected)); Inst47++; } } catch(e) {}
  ++returnCalledExpected;
  // throw in iter.next doesn't call IteratorClose
try { if (Inst52 <= 1000 && typeof (makeIterator) != "undefined") {_RecordType("<1581,1593,71>",(makeIterator)); Inst52++; } } catch(e) {}
  iterable[Symbol.iterator] = makeIterator({
    next: function () {
      throw "in next";
    },
    ret: function () {
try { if (Inst53 <= 1000 && typeof (returnCalled) != "undefined") {_RecordType("<1679,1691,76>",(returnCalled)); Inst53++; } } catch(e) {}
      returnCalled++;
      return {};
    }
  });
try { if (Inst48 <= 1000 && typeof (iterable[Symbol.iterator]) != "undefined") {_RecordType("<1553,1578,71>",(iterable[Symbol.iterator])); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (iterable) != "undefined") {_RecordType("<1553,1561,71>",(iterable)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<1562,1577,71>",(Symbol.iterator)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<1562,1568,71>",(Symbol)); Inst51++; } } catch(e) {}

  (function () {
try { if (Inst55 <= 1000 && typeof (iterable) != "undefined") {_RecordType("<1756,1764,82>",(iterable)); Inst55++; } } catch(e) {}
    var [d] = iterable;
try { if (Inst54 <= 1000 && typeof (d) != "undefined") {_RecordType("<1751,1752,82>",(d)); Inst54++; } } catch(e) {}
  })();

  "in next";
try { if (Inst56 <= 1000 && typeof (returnCalled) != "undefined") {_RecordType("<1790,1802,86>",(returnCalled)); Inst56++; } } catch(e) {}
  returnCalled;
try { if (Inst57 <= 1000 && typeof (returnCalledExpected) != "undefined") {_RecordType("<1806,1826,87>",(returnCalledExpected)); Inst57++; } } catch(e) {}
  returnCalledExpected;
  // "return" must return an Object.
try { if (Inst62 <= 1000 && typeof (makeIterator) != "undefined") {_RecordType("<1895,1907,89>",(makeIterator)); Inst62++; } } catch(e) {}
  iterable[Symbol.iterator] = makeIterator({
    ret: function () {
try { if (Inst63 <= 1000 && typeof (returnCalled) != "undefined") {_RecordType("<1939,1951,91>",(returnCalled)); Inst63++; } } catch(e) {}
      returnCalled++;
      return 42;
    }
  });
try { if (Inst58 <= 1000 && typeof (iterable[Symbol.iterator]) != "undefined") {_RecordType("<1867,1892,89>",(iterable[Symbol.iterator])); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (iterable) != "undefined") {_RecordType("<1867,1875,89>",(iterable)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<1876,1891,89>",(Symbol.iterator)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<1876,1882,89>",(Symbol)); Inst61++; } } catch(e) {}

  (function () {
try { if (Inst64 <= 1000 && typeof (iterable) != "undefined") {_RecordType("<2015,2023,97>",(iterable)); Inst64++; } } catch(e) {}
    var [] = iterable;
  })();

try { if (Inst65 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<2036,2045,100>",(TypeError)); Inst65++; } } catch(e) {}
  TypeError;
try { if (Inst66 <= 1000 && typeof (returnCalled) != "undefined") {_RecordType("<2049,2061,101>",(returnCalled)); Inst66++; } } catch(e) {}
  returnCalled;
try { if (Inst67 <= 1000 && typeof (returnCalledExpected) != "undefined") {_RecordType("<2067,2087,102>",(returnCalledExpected)); Inst67++; } } catch(e) {}
  ++returnCalledExpected;
}

try { if (Inst68 <= 1000 && typeof (test) != "undefined") {_RecordType("<2092,2096,105>",(test)); Inst68++; } } catch(e) {}
test();

try { if (Inst69 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<2112,2125,107>",(reportCompare)); Inst69++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst70 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<2146,2159,108>",(reportCompare)); Inst70++; } } catch(e) {}
  reportCompare(0, 0);
}

