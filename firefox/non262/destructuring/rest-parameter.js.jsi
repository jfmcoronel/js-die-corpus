var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
// Simple functional test for destructuring rest parameters.
try { if (Inst0 <= 1000 && typeof (arrayRest) != "undefined") {_RecordType("<275,284,5>",(arrayRest)); Inst0++; } } catch(e) {}
function arrayRest(...[a, b]) {
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<289,290,5>",(a)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (b) != "undefined") {_RecordType("<292,293,5>",(b)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (a) != "undefined") {_RecordType("<307,308,6>",(a)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (b) != "undefined") {_RecordType("<311,312,6>",(b)); Inst4++; } } catch(e) {}
  return a + b;
}

try { if (Inst5 <= 1000 && typeof (arrayRest) != "undefined") {_RecordType("<317,326,9>",(arrayRest)); Inst5++; } } catch(e) {}
arrayRest(3, 7);
10;

try { if (Inst6 <= 1000 && typeof (arrayRestWithDefault) != "undefined") {_RecordType("<348,368,12>",(arrayRestWithDefault)); Inst6++; } } catch(e) {}
function arrayRestWithDefault(...[a, b = 1]) {
try { if (Inst7 <= 1000 && typeof (a) != "undefined") {_RecordType("<373,374,12>",(a)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (b) != "undefined") {_RecordType("<376,377,12>",(b)); Inst8++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (a) != "undefined") {_RecordType("<395,396,13>",(a)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (b) != "undefined") {_RecordType("<399,400,13>",(b)); Inst10++; } } catch(e) {}
  return a + b;
}

try { if (Inst11 <= 1000 && typeof (arrayRestWithDefault) != "undefined") {_RecordType("<405,425,16>",(arrayRestWithDefault)); Inst11++; } } catch(e) {}
arrayRestWithDefault(3, 7);
10;
try { if (Inst12 <= 1000 && typeof (arrayRestWithDefault) != "undefined") {_RecordType("<437,457,18>",(arrayRestWithDefault)); Inst12++; } } catch(e) {}
arrayRestWithDefault(4);
5;
try { if (Inst13 <= 1000 && typeof (arrayRestWithDefault) != "undefined") {_RecordType("<465,485,20>",(arrayRestWithDefault)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<489,498,20>",(undefined)); Inst14++; } } catch(e) {}
arrayRestWithDefault(4, undefined);
5;

try { if (Inst15 <= 1000 && typeof (objectRest) != "undefined") {_RecordType("<514,524,23>",(objectRest)); Inst15++; } } catch(e) {}
function objectRest(...{
  length: len
}) {
try { if (Inst16 <= 1000 && typeof (len) != "undefined") {_RecordType("<540,543,24>",(len)); Inst16++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (len) != "undefined") {_RecordType("<558,561,26>",(len)); Inst17++; } } catch(e) {}
  return len;
}

try { if (Inst18 <= 1000 && typeof (objectRest) != "undefined") {_RecordType("<566,576,29>",(objectRest)); Inst18++; } } catch(e) {}
objectRest();
0;
try { if (Inst19 <= 1000 && typeof (objectRest) != "undefined") {_RecordType("<583,593,31>",(objectRest)); Inst19++; } } catch(e) {}
objectRest(10);
1;
try { if (Inst20 <= 1000 && typeof (objectRest) != "undefined") {_RecordType("<602,612,33>",(objectRest)); Inst20++; } } catch(e) {}
objectRest(10, 20);
2;

try { if (Inst21 <= 1000 && typeof (objectRestWithDefault) != "undefined") {_RecordType("<635,656,36>",(objectRestWithDefault)); Inst21++; } } catch(e) {}
function objectRestWithDefault(...{
  0: a,
  1: b = 1
}) {
try { if (Inst22 <= 1000 && typeof (a) != "undefined") {_RecordType("<667,668,37>",(a)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (b) != "undefined") {_RecordType("<675,676,38>",(b)); Inst23++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (a) != "undefined") {_RecordType("<695,696,40>",(a)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (b) != "undefined") {_RecordType("<699,700,40>",(b)); Inst25++; } } catch(e) {}
  return a + b;
}

try { if (Inst26 <= 1000 && typeof (objectRestWithDefault) != "undefined") {_RecordType("<705,726,43>",(objectRestWithDefault)); Inst26++; } } catch(e) {}
objectRestWithDefault(3, 7);
10;
try { if (Inst27 <= 1000 && typeof (objectRestWithDefault) != "undefined") {_RecordType("<738,759,45>",(objectRestWithDefault)); Inst27++; } } catch(e) {}
objectRestWithDefault(4);
5;
try { if (Inst28 <= 1000 && typeof (objectRestWithDefault) != "undefined") {_RecordType("<767,788,47>",(objectRestWithDefault)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<792,801,47>",(undefined)); Inst29++; } } catch(e) {}
objectRestWithDefault(4, undefined);
5;

try { if (Inst30 <= 1000 && typeof (arrayRestWithNestedRest) != "undefined") {_RecordType("<817,840,50>",(arrayRestWithNestedRest)); Inst30++; } } catch(e) {}
function arrayRestWithNestedRest(...[...r]) {
try { if (Inst31 <= 1000 && typeof (r) != "undefined") {_RecordType("<848,849,50>",(r)); Inst31++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (r.length) != "undefined") {_RecordType("<863,871,51>",(r.length)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (r) != "undefined") {_RecordType("<863,864,51>",(r)); Inst33++; } } catch(e) {}
  return r.length;
}

try { if (Inst34 <= 1000 && typeof (arrayRestWithNestedRest) != "undefined") {_RecordType("<876,899,54>",(arrayRestWithNestedRest)); Inst34++; } } catch(e) {}
arrayRestWithNestedRest();
0;
try { if (Inst35 <= 1000 && typeof (arrayRestWithNestedRest) != "undefined") {_RecordType("<906,929,56>",(arrayRestWithNestedRest)); Inst35++; } } catch(e) {}
arrayRestWithNestedRest(10);
1;
try { if (Inst36 <= 1000 && typeof (arrayRestWithNestedRest) != "undefined") {_RecordType("<938,961,58>",(arrayRestWithNestedRest)); Inst36++; } } catch(e) {}
arrayRestWithNestedRest(10, 20);
2;

try { if (Inst37 <= 1000 && typeof (arrayRestTDZ) != "undefined") {_RecordType("<984,996,61>",(arrayRestTDZ)); Inst37++; } } catch(e) {}
function arrayRestTDZ(...[a = a]) {
try { if (Inst38 <= 1000 && typeof (a) != "undefined") {_RecordType("<1001,1002,61>",(a)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (a) != "undefined") {_RecordType("<1005,1006,61>",(a)); Inst39++; } } catch(e) {}
  ;
}

try { if (Inst40 <= 1000 && typeof (arrayRestTDZ) != "undefined") {_RecordType("<1025,1037,65>",(arrayRestTDZ)); Inst40++; } } catch(e) {}
(() => arrayRestTDZ())();

try { if (Inst41 <= 1000 && typeof (ReferenceError) != "undefined") {_RecordType("<1045,1059,67>",(ReferenceError)); Inst41++; } } catch(e) {}
ReferenceError;

try { if (Inst42 <= 1000 && typeof (objectRestTDZ) != "undefined") {_RecordType("<1071,1084,69>",(objectRestTDZ)); Inst42++; } } catch(e) {}
function objectRestTDZ(...{
  a = a
}) {
try { if (Inst43 <= 1000 && typeof (a) != "undefined") {_RecordType("<1092,1093,70>",(a)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (a) != "undefined") {_RecordType("<1096,1097,70>",(a)); Inst44++; } } catch(e) {}
  ;
}

try { if (Inst45 <= 1000 && typeof (objectRestTDZ) != "undefined") {_RecordType("<1117,1130,75>",(objectRestTDZ)); Inst45++; } } catch(e) {}
(() => objectRestTDZ())();

try { if (Inst46 <= 1000 && typeof (ReferenceError) != "undefined") {_RecordType("<1138,1152,77>",(ReferenceError)); Inst46++; } } catch(e) {}
ReferenceError;

try { if (Inst47 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1166,1179,79>",(reportCompare)); Inst47++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst48 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1200,1213,80>",(reportCompare)); Inst48++; } } catch(e) {}
  reportCompare(0, 0);
}

