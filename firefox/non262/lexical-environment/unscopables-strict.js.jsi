var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Strict assignment to the name of a property that's masked by @@unscopables
// throws a ReferenceError.
let env = {
  k: 1
};
try { if (Inst0 <= 1000 && typeof (env) != "undefined") {_RecordType("<110,113,3>",(env)); Inst0++; } } catch(e) {}
let f;
try { if (Inst1 <= 1000 && typeof (f) != "undefined") {_RecordType("<132,133,6>",(f)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (env) != "undefined") {_RecordType("<141,144,7>",(env)); Inst2++; } } catch(e) {}
with (env) {
  f = function () {
    "use strict";

    k = 2;
try { if (Inst4 <= 1000 && typeof (k) != "undefined") {_RecordType("<191,192,11>",(k)); Inst4++; } } catch(e) {}
  };
try { if (Inst3 <= 1000 && typeof (f) != "undefined") {_RecordType("<150,151,8>",(f)); Inst3++; } } catch(e) {}
}
try { if (Inst5 <= 1000 && typeof (f) != "undefined") {_RecordType("<205,206,14>",(f)); Inst5++; } } catch(e) {}
f();
try { if (Inst6 <= 1000 && typeof (env.k) != "undefined") {_RecordType("<210,215,15>",(env.k)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (env) != "undefined") {_RecordType("<210,213,15>",(env)); Inst7++; } } catch(e) {}
env.k;
2;
env[Symbol.unscopables] = {
  k: true
};
try { if (Inst8 <= 1000 && typeof (env[Symbol.unscopables]) != "undefined") {_RecordType("<220,243,17>",(env[Symbol.unscopables])); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (env) != "undefined") {_RecordType("<220,223,17>",(env)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Symbol.unscopables) != "undefined") {_RecordType("<224,242,17>",(Symbol.unscopables)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<224,230,17>",(Symbol)); Inst11++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (f) != "undefined") {_RecordType("<261,262,20>",(f)); Inst12++; } } catch(e) {}
f;
try { if (Inst13 <= 1000 && typeof (ReferenceError) != "undefined") {_RecordType("<264,278,21>",(ReferenceError)); Inst13++; } } catch(e) {}
ReferenceError;
// @@unscopables is tested when the LHS of assignment is evaluated, so there is
// no effect on the assignment if it is changed while evaluating the RHS.
let g;
try { if (Inst14 <= 1000 && typeof (g) != "undefined") {_RecordType("<438,439,24>",(g)); Inst14++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (env) != "undefined") {_RecordType("<447,450,25>",(env)); Inst15++; } } catch(e) {}
with (env) {
  g = function () {
    "use strict";

    k = (env[Symbol.unscopables].k = true, 3);
try { if (Inst17 <= 1000 && typeof (k) != "undefined") {_RecordType("<497,498,29>",(k)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (env[Symbol.unscopables].k) != "undefined") {_RecordType("<502,527,29>",(env[Symbol.unscopables].k)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (env[Symbol.unscopables]) != "undefined") {_RecordType("<502,525,29>",(env[Symbol.unscopables])); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (env) != "undefined") {_RecordType("<502,505,29>",(env)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Symbol.unscopables) != "undefined") {_RecordType("<506,524,29>",(Symbol.unscopables)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<506,512,29>",(Symbol)); Inst22++; } } catch(e) {}
  };
try { if (Inst16 <= 1000 && typeof (g) != "undefined") {_RecordType("<456,457,26>",(g)); Inst16++; } } catch(e) {}
}
env[Symbol.unscopables].k = false;
try { if (Inst23 <= 1000 && typeof (env[Symbol.unscopables].k) != "undefined") {_RecordType("<547,572,32>",(env[Symbol.unscopables].k)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (env[Symbol.unscopables]) != "undefined") {_RecordType("<547,570,32>",(env[Symbol.unscopables])); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (env) != "undefined") {_RecordType("<547,550,32>",(env)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Symbol.unscopables) != "undefined") {_RecordType("<551,569,32>",(Symbol.unscopables)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<551,557,32>",(Symbol)); Inst27++; } } catch(e) {}
try { if (Inst28 <= 1000 && typeof (g) != "undefined") {_RecordType("<582,583,33>",(g)); Inst28++; } } catch(e) {}
g();
try { if (Inst29 <= 1000 && typeof (env.k) != "undefined") {_RecordType("<587,592,34>",(env.k)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (env) != "undefined") {_RecordType("<587,590,34>",(env)); Inst30++; } } catch(e) {}
env.k;
3;
try { if (Inst31 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<597,610,36>",(reportCompare)); Inst31++; } } catch(e) {}
reportCompare(0, 0);

