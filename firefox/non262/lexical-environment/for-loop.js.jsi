var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
var Inst102 = 0;
var Inst103 = 0;
var Inst104 = 0;
var Inst105 = 0;
var Inst106 = 0;
var Inst107 = 0;
var Inst108 = 0;
var Inst109 = 0;
var Inst110 = 0;
var Inst111 = 0;
var Inst112 = 0;
var Inst113 = 0;
var Inst114 = 0;
var Inst115 = 0;
var Inst116 = 0;
var Inst117 = 0;
var Inst118 = 0;
var Inst119 = 0;
var Inst120 = 0;
var Inst121 = 0;
var Inst122 = 0;
var Inst123 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/*
 * Any copyright is dedicated to the Public Domain.
 * http://creativecommons.org/licenses/publicdomain/
 */
var gTestfile = "for-loop.js"; //-----------------------------------------------------------------------------
try { if (Inst0 <= 1000 && typeof (gTestfile) != "undefined") {_RecordType("<116,125,5>",(gTestfile)); Inst0++; } } catch(e) {}

var BUGNUMBER = 985733;
try { if (Inst1 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<228,237,7>",(BUGNUMBER)); Inst1++; } } catch(e) {}
var summary = "ES6 for-loop semantics for for(;;) loops whose heads contain lexical ";
try { if (Inst2 <= 1000 && typeof (summary) != "undefined") {_RecordType("<252,259,8>",(summary)); Inst2++; } } catch(e) {}
"declarations";
try { if (Inst3 <= 1000 && typeof (print) != "undefined") {_RecordType("<351,356,10>",(print)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<357,366,10>",(BUGNUMBER)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (summary) != "undefined") {_RecordType("<376,383,10>",(summary)); Inst5++; } } catch(e) {}
print(BUGNUMBER + ": " + summary);
/**************
 * BEGIN TEST *
 **************/

try { if (Inst6 <= 1000 && typeof (isError) != "undefined") {_RecordType("<445,452,15>",(isError)); Inst6++; } } catch(e) {}
function isError(code, type) {
try { if (Inst7 <= 1000 && typeof (code) != "undefined") {_RecordType("<453,457,15>",(code)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (type) != "undefined") {_RecordType("<459,463,15>",(type)); Inst8++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (e) != "undefined") {_RecordType("<543,544,19>",(e)); Inst12++; } } catch(e) {}
  try {
try { if (Inst9 <= 1000 && typeof (Function) != "undefined") {_RecordType("<479,487,17>",(Function)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (code) != "undefined") {_RecordType("<488,492,17>",(code)); Inst10++; } } catch(e) {}
    Function(code);
try { if (Inst11 <= 1000 && typeof (Error) != "undefined") {_RecordType("<509,514,18>",(Error)); Inst11++; } } catch(e) {}
    throw new Error("didn't throw");
  } catch (e) {
try { if (Inst13 <= 1000 && typeof (e) != "undefined") {_RecordType("<552,553,20>",(e)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (type) != "undefined") {_RecordType("<565,569,20>",(type)); Inst14++; } } catch(e) {}
    e instanceof type;
    true;
try { if (Inst15 <= 1000 && typeof (code) != "undefined") {_RecordType("<612,616,22>",(code)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (e) != "undefined") {_RecordType("<631,632,22>",(e)); Inst16++; } } catch(e) {}
    "unexpected error for `" + code + "`: got " + e;
  }
}

try { if (Inst17 <= 1000 && typeof (isOK) != "undefined") {_RecordType("<650,654,26>",(isOK)); Inst17++; } } catch(e) {}
function isOK(code) {
try { if (Inst18 <= 1000 && typeof (code) != "undefined") {_RecordType("<655,659,26>",(code)); Inst18++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (Function) != "undefined") {_RecordType("<665,673,27>",(Function)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (code) != "undefined") {_RecordType("<674,678,27>",(code)); Inst20++; } } catch(e) {}
  Function(code);
}

try { if (Inst21 <= 1000 && typeof (isError) != "undefined") {_RecordType("<684,691,30>",(isError)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (SyntaxError) != "undefined") {_RecordType("<715,726,30>",(SyntaxError)); Inst22++; } } catch(e) {}
isError("for (const x; ; ) ;", SyntaxError);
try { if (Inst23 <= 1000 && typeof (isError) != "undefined") {_RecordType("<729,736,31>",(isError)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (SyntaxError) != "undefined") {_RecordType("<767,778,31>",(SyntaxError)); Inst24++; } } catch(e) {}
isError("for (const x = 5, y; ; ) ;", SyntaxError);
try { if (Inst25 <= 1000 && typeof (isError) != "undefined") {_RecordType("<781,788,32>",(isError)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (SyntaxError) != "undefined") {_RecordType("<814,825,32>",(SyntaxError)); Inst26++; } } catch(e) {}
isError("for (const [z]; ; ) ;", SyntaxError); //isError("for (const [z, z]; ; ) ;", SyntaxError);
//isError("for (const [z, z] = [0, 1]; ; ) ;", SyntaxError);

try { if (Inst27 <= 1000 && typeof (isOK) != "undefined") {_RecordType("<942,946,35>",(isOK)); Inst27++; } } catch(e) {}
isOK("for (let x; ; ) ;");
try { if (Inst28 <= 1000 && typeof (isOK) != "undefined") {_RecordType("<969,973,36>",(isOK)); Inst28++; } } catch(e) {}
isOK("for (let x = 5, y; ; ) ;"); // I'm fairly sure this is supposed to work: the negative-lookahead rules in
// IterationStatement ensure that |for (let| *always* is a loop header starting
// with a lexical declaration.  But I'm not 100% certain, so these tests might
// need to be fixed when we implement the negative-lookahead restrictions.

try { if (Inst29 <= 1000 && typeof (isOK) != "undefined") {_RecordType("<1315,1319,41>",(isOK)); Inst29++; } } catch(e) {}
isOK("for (let [z] = [3]; ; ) ;");
try { if (Inst30 <= 1000 && typeof (isError) != "undefined") {_RecordType("<1350,1357,42>",(isError)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (SyntaxError) != "undefined") {_RecordType("<1384,1395,42>",(SyntaxError)); Inst31++; } } catch(e) {}
isError("for (let [z, z]; ; ) ;", SyntaxError); // because missing initializer

try { if (Inst32 <= 1000 && typeof (isError) != "undefined") {_RecordType("<1430,1437,44>",(isError)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (SyntaxError) != "undefined") {_RecordType("<1473,1484,44>",(SyntaxError)); Inst33++; } } catch(e) {}
isError("for (let [z, z] = [0, 1]; ; ) ;", SyntaxError); // A for-loop with lexical declarations, with a mixture of bindings that are and
// aren't aliased.  (The mixture stress-tests any code that incorrectly assumes
// all bindings are aliased.)

var funcs = [];
try { if (Inst34 <= 1000 && typeof (funcs) != "undefined") {_RecordType("<1683,1688,48>",(funcs)); Inst34++; } } catch(e) {}

for (let [i, j, k] = [0, 1, 2]; i < 10; i++) {
try { if (Inst35 <= 1000 && typeof (i) != "undefined") {_RecordType("<1706,1707,50>",(i)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (j) != "undefined") {_RecordType("<1709,1710,50>",(j)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (k) != "undefined") {_RecordType("<1712,1713,50>",(k)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (i) != "undefined") {_RecordType("<1728,1729,50>",(i)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (i) != "undefined") {_RecordType("<1736,1737,50>",(i)); Inst39++; } } catch(e) {}
try { if (Inst40 <= 1000 && typeof (funcs.push) != "undefined") {_RecordType("<1745,1755,51>",(funcs.push)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (funcs) != "undefined") {_RecordType("<1745,1750,51>",(funcs)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (i) != "undefined") {_RecordType("<1762,1763,51>",(i)); Inst42++; } } catch(e) {}
  funcs.push(() => i);
}

try { if (Inst43 <= 1000 && typeof (funcs[0]) != "undefined") {_RecordType("<1769,1777,54>",(funcs[0])); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (funcs) != "undefined") {_RecordType("<1769,1774,54>",(funcs)); Inst44++; } } catch(e) {}
funcs[0]();
0;
try { if (Inst45 <= 1000 && typeof (funcs[1]) != "undefined") {_RecordType("<1784,1792,56>",(funcs[1])); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (funcs) != "undefined") {_RecordType("<1784,1789,56>",(funcs)); Inst46++; } } catch(e) {}
funcs[1]();
1;
try { if (Inst47 <= 1000 && typeof (funcs[2]) != "undefined") {_RecordType("<1799,1807,58>",(funcs[2])); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (funcs) != "undefined") {_RecordType("<1799,1804,58>",(funcs)); Inst48++; } } catch(e) {}
funcs[2]();
2;
try { if (Inst49 <= 1000 && typeof (funcs[3]) != "undefined") {_RecordType("<1814,1822,60>",(funcs[3])); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (funcs) != "undefined") {_RecordType("<1814,1819,60>",(funcs)); Inst50++; } } catch(e) {}
funcs[3]();
3;
try { if (Inst51 <= 1000 && typeof (funcs[4]) != "undefined") {_RecordType("<1829,1837,62>",(funcs[4])); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (funcs) != "undefined") {_RecordType("<1829,1834,62>",(funcs)); Inst52++; } } catch(e) {}
funcs[4]();
4;
try { if (Inst53 <= 1000 && typeof (funcs[5]) != "undefined") {_RecordType("<1844,1852,64>",(funcs[5])); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (funcs) != "undefined") {_RecordType("<1844,1849,64>",(funcs)); Inst54++; } } catch(e) {}
funcs[5]();
5;
try { if (Inst55 <= 1000 && typeof (funcs[6]) != "undefined") {_RecordType("<1859,1867,66>",(funcs[6])); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (funcs) != "undefined") {_RecordType("<1859,1864,66>",(funcs)); Inst56++; } } catch(e) {}
funcs[6]();
6;
try { if (Inst57 <= 1000 && typeof (funcs[7]) != "undefined") {_RecordType("<1874,1882,68>",(funcs[7])); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (funcs) != "undefined") {_RecordType("<1874,1879,68>",(funcs)); Inst58++; } } catch(e) {}
funcs[7]();
7;
try { if (Inst59 <= 1000 && typeof (funcs[8]) != "undefined") {_RecordType("<1889,1897,70>",(funcs[8])); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (funcs) != "undefined") {_RecordType("<1889,1894,70>",(funcs)); Inst60++; } } catch(e) {}
funcs[8]();
8;
try { if (Inst61 <= 1000 && typeof (funcs[9]) != "undefined") {_RecordType("<1904,1912,72>",(funcs[9])); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (funcs) != "undefined") {_RecordType("<1904,1909,72>",(funcs)); Inst62++; } } catch(e) {}
funcs[9]();
9;
var outer = "OUTER V IGNORE";
try { if (Inst63 <= 1000 && typeof (outer) != "undefined") {_RecordType("<1923,1928,74>",(outer)); Inst63++; } } catch(e) {}
var save;
try { if (Inst64 <= 1000 && typeof (save) != "undefined") {_RecordType("<1953,1957,75>",(save)); Inst64++; } } catch(e) {}

for (let outer = save = function () {
  return outer;
};;) {
try { if (Inst65 <= 1000 && typeof (outer) != "undefined") {_RecordType("<1969,1974,77>",(outer)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (save) != "undefined") {_RecordType("<1977,1981,77>",(save)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (outer) != "undefined") {_RecordType("<2007,2012,78>",(outer)); Inst67++; } } catch(e) {}
  break;
}

try { if (Inst68 <= 1000 && typeof (save) != "undefined") {_RecordType("<2033,2037,83>",(save)); Inst68++; } } catch(e) {}
save();
try { if (Inst69 <= 1000 && typeof (save) != "undefined") {_RecordType("<2041,2045,84>",(save)); Inst69++; } } catch(e) {}
save;
var funcs = [];
try { if (Inst70 <= 1000 && typeof (funcs) != "undefined") {_RecordType("<2051,2056,85>",(funcs)); Inst70++; } } catch(e) {}

try { if (Inst71 <= 1000 && typeof (t) != "undefined") {_RecordType("<2073,2074,87>",(t)); Inst71++; } } catch(e) {}
function t(i, name, expect) {
try { if (Inst72 <= 1000 && typeof (i) != "undefined") {_RecordType("<2075,2076,87>",(i)); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (name) != "undefined") {_RecordType("<2078,2082,87>",(name)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (expect) != "undefined") {_RecordType("<2084,2090,87>",(expect)); Inst74++; } } catch(e) {}
try { if (Inst75 <= 1000 && typeof (funcs[i].name) != "undefined") {_RecordType("<2096,2109,88>",(funcs[i].name)); Inst75++; } } catch(e) {}try { if (Inst76 <= 1000 && typeof (funcs[i]) != "undefined") {_RecordType("<2096,2104,88>",(funcs[i])); Inst76++; } } catch(e) {}try { if (Inst77 <= 1000 && typeof (funcs) != "undefined") {_RecordType("<2096,2101,88>",(funcs)); Inst77++; } } catch(e) {}
  funcs[i].name;
try { if (Inst78 <= 1000 && typeof (name) != "undefined") {_RecordType("<2113,2117,89>",(name)); Inst78++; } } catch(e) {}
  name;
try { if (Inst79 <= 1000 && typeof (funcs[i]) != "undefined") {_RecordType("<2121,2129,90>",(funcs[i])); Inst79++; } } catch(e) {}try { if (Inst80 <= 1000 && typeof (funcs) != "undefined") {_RecordType("<2121,2126,90>",(funcs)); Inst80++; } } catch(e) {}
  funcs[i]();
try { if (Inst81 <= 1000 && typeof (expect) != "undefined") {_RecordType("<2135,2141,91>",(expect)); Inst81++; } } catch(e) {}
  expect;
}

try { if (Inst82 <= 1000 && typeof (save) != "undefined") {_RecordType("<2150,2154,94>",(save)); Inst82++; } } catch(e) {}
if (save() !== "OUTER V IGNORE") {
  var v = "OUTER V IGNORE";
try { if (Inst83 <= 1000 && typeof (v) != "undefined") {_RecordType("<2187,2188,95>",(v)); Inst83++; } } catch(e) {}
  var i = 0;
try { if (Inst84 <= 1000 && typeof (i) != "undefined") {_RecordType("<2215,2216,96>",(i)); Inst84++; } } catch(e) {}

  for (let v = (funcs.push(function init() {
    return v;
  }), 0); v = (funcs.push(function test() {
    return v;
  }), v + 1); v = (funcs.push(function incr() {
    return v;
  }), v + 1)) {
try { if (Inst85 <= 1000 && typeof (v) != "undefined") {_RecordType("<2234,2235,98>",(v)); Inst85++; } } catch(e) {}try { if (Inst86 <= 1000 && typeof (funcs.push) != "undefined") {_RecordType("<2239,2249,98>",(funcs.push)); Inst86++; } } catch(e) {}try { if (Inst87 <= 1000 && typeof (funcs) != "undefined") {_RecordType("<2239,2244,98>",(funcs)); Inst87++; } } catch(e) {}try { if (Inst88 <= 1000 && typeof (init) != "undefined") {_RecordType("<2259,2263,98>",(init)); Inst88++; } } catch(e) {}try { if (Inst89 <= 1000 && typeof (v) != "undefined") {_RecordType("<2279,2280,99>",(v)); Inst89++; } } catch(e) {}try { if (Inst90 <= 1000 && typeof (v) != "undefined") {_RecordType("<2292,2293,100>",(v)); Inst90++; } } catch(e) {}try { if (Inst91 <= 1000 && typeof (funcs.push) != "undefined") {_RecordType("<2297,2307,100>",(funcs.push)); Inst91++; } } catch(e) {}try { if (Inst92 <= 1000 && typeof (funcs) != "undefined") {_RecordType("<2297,2302,100>",(funcs)); Inst92++; } } catch(e) {}try { if (Inst93 <= 1000 && typeof (test) != "undefined") {_RecordType("<2317,2321,100>",(test)); Inst93++; } } catch(e) {}try { if (Inst94 <= 1000 && typeof (v) != "undefined") {_RecordType("<2337,2338,101>",(v)); Inst94++; } } catch(e) {}try { if (Inst95 <= 1000 && typeof (v) != "undefined") {_RecordType("<2346,2347,102>",(v)); Inst95++; } } catch(e) {}try { if (Inst96 <= 1000 && typeof (v) != "undefined") {_RecordType("<2354,2355,102>",(v)); Inst96++; } } catch(e) {}try { if (Inst97 <= 1000 && typeof (funcs.push) != "undefined") {_RecordType("<2359,2369,102>",(funcs.push)); Inst97++; } } catch(e) {}try { if (Inst98 <= 1000 && typeof (funcs) != "undefined") {_RecordType("<2359,2364,102>",(funcs)); Inst98++; } } catch(e) {}try { if (Inst99 <= 1000 && typeof (incr) != "undefined") {_RecordType("<2379,2383,102>",(incr)); Inst99++; } } catch(e) {}try { if (Inst100 <= 1000 && typeof (v) != "undefined") {_RecordType("<2399,2400,103>",(v)); Inst100++; } } catch(e) {}try { if (Inst101 <= 1000 && typeof (v) != "undefined") {_RecordType("<2408,2409,104>",(v)); Inst101++; } } catch(e) {}
try { if (Inst103 <= 1000 && typeof (funcs.push) != "undefined") {_RecordType("<2427,2437,105>",(funcs.push)); Inst103++; } } catch(e) {}try { if (Inst104 <= 1000 && typeof (funcs) != "undefined") {_RecordType("<2427,2432,105>",(funcs)); Inst104++; } } catch(e) {}try { if (Inst105 <= 1000 && typeof (body) != "undefined") {_RecordType("<2447,2451,105>",(body)); Inst105++; } } catch(e) {}try { if (Inst107 <= 1000 && typeof (v) != "undefined") {_RecordType("<2480,2481,107>",(v)); Inst107++; } } catch(e) {}
    v = (funcs.push(function body() {
try { if (Inst106 <= 1000 && typeof (v) != "undefined") {_RecordType("<2469,2470,106>",(v)); Inst106++; } } catch(e) {}
      return v;
    }), v + 1);
try { if (Inst102 <= 1000 && typeof (v) != "undefined") {_RecordType("<2422,2423,105>",(v)); Inst102++; } } catch(e) {}
try { if (Inst108 <= 1000 && typeof (i) != "undefined") {_RecordType("<2492,2493,108>",(i)); Inst108++; } } catch(e) {}
    i++;

try { if (Inst109 <= 1000 && typeof (i) != "undefined") {_RecordType("<2506,2507,110>",(i)); Inst109++; } } catch(e) {}
    if (i >= 3) {
      break;
    }
  }

try { if (Inst110 <= 1000 && typeof (t) != "undefined") {_RecordType("<2542,2543,115>",(t)); Inst110++; } } catch(e) {}
  t(0, "init", 0);
try { if (Inst111 <= 1000 && typeof (t) != "undefined") {_RecordType("<2561,2562,116>",(t)); Inst111++; } } catch(e) {}
  t(1, "test", 2);
try { if (Inst112 <= 1000 && typeof (t) != "undefined") {_RecordType("<2580,2581,117>",(t)); Inst112++; } } catch(e) {}
  t(2, "body", 2);
try { if (Inst113 <= 1000 && typeof (t) != "undefined") {_RecordType("<2599,2600,118>",(t)); Inst113++; } } catch(e) {}
  t(3, "incr", 5);
try { if (Inst114 <= 1000 && typeof (t) != "undefined") {_RecordType("<2618,2619,119>",(t)); Inst114++; } } catch(e) {}
  t(4, "test", 5);
try { if (Inst115 <= 1000 && typeof (t) != "undefined") {_RecordType("<2637,2638,120>",(t)); Inst115++; } } catch(e) {}
  t(5, "body", 5);
try { if (Inst116 <= 1000 && typeof (t) != "undefined") {_RecordType("<2656,2657,121>",(t)); Inst116++; } } catch(e) {}
  t(6, "incr", 8);
try { if (Inst117 <= 1000 && typeof (t) != "undefined") {_RecordType("<2675,2676,122>",(t)); Inst117++; } } catch(e) {}
  t(7, "test", 8);
try { if (Inst118 <= 1000 && typeof (t) != "undefined") {_RecordType("<2694,2695,123>",(t)); Inst118++; } } catch(e) {}
  t(8, "body", 8);
try { if (Inst119 <= 1000 && typeof (funcs.length) != "undefined") {_RecordType("<2713,2725,124>",(funcs.length)); Inst119++; } } catch(e) {}try { if (Inst120 <= 1000 && typeof (funcs) != "undefined") {_RecordType("<2713,2718,124>",(funcs)); Inst120++; } } catch(e) {}
  funcs.length;
  9;
}
/******************************************************************************/


try { if (Inst121 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<2828,2841,130>",(reportCompare)); Inst121++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst122 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<2862,2875,131>",(reportCompare)); Inst122++; } } catch(e) {}
  reportCompare(true, true);
}

try { if (Inst123 <= 1000 && typeof (print) != "undefined") {_RecordType("<2892,2897,134>",(print)); Inst123++; } } catch(e) {}
print("Tests complete");

