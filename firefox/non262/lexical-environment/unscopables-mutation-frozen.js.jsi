var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// When env[@@unscopables].x changes, bindings can appear even if env is inextensible.
let x = "global";
try { if (Inst0 <= 1000 && typeof (x) != "undefined") {_RecordType("<91,92,2>",(x)); Inst0++; } } catch(e) {}
let unscopables = {
  x: true
};
try { if (Inst1 <= 1000 && typeof (unscopables) != "undefined") {_RecordType("<109,120,3>",(unscopables)); Inst1++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (Object.create) != "undefined") {_RecordType("<148,161,6>",(Object.create)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Object) != "undefined") {_RecordType("<148,154,6>",(Object)); Inst4++; } } catch(e) {}
let env = Object.create(null);
try { if (Inst2 <= 1000 && typeof (env) != "undefined") {_RecordType("<142,145,6>",(env)); Inst2++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (unscopables) != "undefined") {_RecordType("<195,206,7>",(unscopables)); Inst9++; } } catch(e) {}
env[Symbol.unscopables] = unscopables;
try { if (Inst5 <= 1000 && typeof (env[Symbol.unscopables]) != "undefined") {_RecordType("<169,192,7>",(env[Symbol.unscopables])); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (env) != "undefined") {_RecordType("<169,172,7>",(env)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Symbol.unscopables) != "undefined") {_RecordType("<173,191,7>",(Symbol.unscopables)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<173,179,7>",(Symbol)); Inst8++; } } catch(e) {}
env.x = "object";
try { if (Inst10 <= 1000 && typeof (env.x) != "undefined") {_RecordType("<208,213,8>",(env.x)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (env) != "undefined") {_RecordType("<208,211,8>",(env)); Inst11++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (Object.freeze) != "undefined") {_RecordType("<226,239,9>",(Object.freeze)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Object) != "undefined") {_RecordType("<226,232,9>",(Object)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (env) != "undefined") {_RecordType("<240,243,9>",(env)); Inst14++; } } catch(e) {}
Object.freeze(env);

for (let i = 0; i < 1004; i++) {
try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<256,257,11>",(i)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<263,264,11>",(i)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (i) != "undefined") {_RecordType("<273,274,11>",(i)); Inst17++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (i) != "undefined") {_RecordType("<286,287,12>",(i)); Inst18++; } } catch(e) {}
  if (i === 1000) {
    unscopables.x = false;
try { if (Inst19 <= 1000 && typeof (unscopables.x) != "undefined") {_RecordType("<304,317,13>",(unscopables.x)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (unscopables) != "undefined") {_RecordType("<304,315,13>",(unscopables)); Inst20++; } } catch(e) {}
  }

try { if (Inst21 <= 1000 && typeof (env) != "undefined") {_RecordType("<340,343,16>",(env)); Inst21++; } } catch(e) {}
  with (env) {
try { if (Inst22 <= 1000 && typeof (x) != "undefined") {_RecordType("<351,352,17>",(x)); Inst22++; } } catch(e) {}
    x;
try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<358,359,18>",(i)); Inst23++; } } catch(e) {}
    i < 1000 ? "global" : "object";
  }
}

try { if (Inst24 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<397,410,22>",(reportCompare)); Inst24++; } } catch(e) {}
reportCompare(0, 0);

