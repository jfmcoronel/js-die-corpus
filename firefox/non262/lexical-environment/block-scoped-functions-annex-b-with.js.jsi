var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (getBuildConfiguration) != "undefined") {_RecordType("<11,32,1>",(getBuildConfiguration)); Inst0++; } } catch(e) {}
if (typeof getBuildConfiguration === "undefined") {
try { if (Inst2 <= 1000 && typeof (SpecialPowers.Cu.getJSTestingFunctions().getBuildConfiguration) != "undefined") {_RecordType("<82,144,2>",(SpecialPowers.Cu.getJSTestingFunctions().getBuildConfiguration)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (SpecialPowers.Cu.getJSTestingFunctions) != "undefined") {_RecordType("<82,120,2>",(SpecialPowers.Cu.getJSTestingFunctions)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (SpecialPowers.Cu) != "undefined") {_RecordType("<82,98,2>",(SpecialPowers.Cu)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (SpecialPowers) != "undefined") {_RecordType("<82,95,2>",(SpecialPowers)); Inst5++; } } catch(e) {}
  var getBuildConfiguration = SpecialPowers.Cu.getJSTestingFunctions().getBuildConfiguration;
try { if (Inst1 <= 1000 && typeof (getBuildConfiguration) != "undefined") {_RecordType("<58,79,2>",(getBuildConfiguration)); Inst1++; } } catch(e) {}
} // Global functions are configurable in a browser environment on nightly.


try { if (Inst7 <= 1000 && typeof (document) != "undefined") {_RecordType("<270,278,6>",(document)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (getBuildConfiguration().release_or_beta) != "undefined") {_RecordType("<299,338,6>",(getBuildConfiguration().release_or_beta)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (getBuildConfiguration) != "undefined") {_RecordType("<299,320,6>",(getBuildConfiguration)); Inst9++; } } catch(e) {}
var functionDeclarationsConfigurable = typeof document !== "undefined" && !getBuildConfiguration().release_or_beta;
try { if (Inst6 <= 1000 && typeof (functionDeclarationsConfigurable) != "undefined") {_RecordType("<228,260,6>",(functionDeclarationsConfigurable)); Inst6++; } } catch(e) {}
var o = {
  f: "string-f"
};
try { if (Inst10 <= 1000 && typeof (o) != "undefined") {_RecordType("<344,345,7>",(o)); Inst10++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (o) != "undefined") {_RecordType("<375,376,10>",(o)); Inst11++; } } catch(e) {}
with (o) {
try { if (Inst13 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<393,424,11>",(Object.getOwnPropertyDescriptor)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Object) != "undefined") {_RecordType("<393,399,11>",(Object)); Inst14++; } } catch(e) {}
  var desc = Object.getOwnPropertyDescriptor(this, "f");
try { if (Inst12 <= 1000 && typeof (desc) != "undefined") {_RecordType("<386,390,11>",(desc)); Inst12++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (desc.value) != "undefined") {_RecordType("<439,449,12>",(desc.value)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (desc) != "undefined") {_RecordType("<439,443,12>",(desc)); Inst16++; } } catch(e) {}
  desc.value;
try { if (Inst17 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<453,462,13>",(undefined)); Inst17++; } } catch(e) {}
  undefined;
try { if (Inst18 <= 1000 && typeof (desc.writable) != "undefined") {_RecordType("<466,479,14>",(desc.writable)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (desc) != "undefined") {_RecordType("<466,470,14>",(desc)); Inst19++; } } catch(e) {}
  desc.writable;
  true;
try { if (Inst20 <= 1000 && typeof (desc.enumerable) != "undefined") {_RecordType("<491,506,16>",(desc.enumerable)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (desc) != "undefined") {_RecordType("<491,495,16>",(desc)); Inst21++; } } catch(e) {}
  desc.enumerable;
  true;
try { if (Inst22 <= 1000 && typeof (desc.configurable) != "undefined") {_RecordType("<518,535,18>",(desc.configurable)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (desc) != "undefined") {_RecordType("<518,522,18>",(desc)); Inst23++; } } catch(e) {}
  desc.configurable;
try { if (Inst24 <= 1000 && typeof (functionDeclarationsConfigurable) != "undefined") {_RecordType("<539,571,19>",(functionDeclarationsConfigurable)); Inst24++; } } catch(e) {}
  functionDeclarationsConfigurable;

try { if (Inst25 <= 1000 && typeof (f) != "undefined") {_RecordType("<585,586,21>",(f)); Inst25++; } } catch(e) {}
  function f() {
    return "fun-f";
  }
} // Annex B explicitly assigns to the nearest VariableEnvironment, so the
// with-object "o" should have its property unchanged.

try { if (Inst26 <= 1000 && typeof (o.f) != "undefined") {_RecordType("<746,749,27>",(o.f)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (o) != "undefined") {_RecordType("<746,747,27>",(o)); Inst27++; } } catch(e) {}
o.f;
"string-f";
try { if (Inst28 <= 1000 && typeof (f) != "undefined") {_RecordType("<763,764,29>",(f)); Inst28++; } } catch(e) {}
f();
"fun-f";
try { if (Inst29 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<777,790,31>",(reportCompare)); Inst29++; } } catch(e) {}
reportCompare(true, true);

