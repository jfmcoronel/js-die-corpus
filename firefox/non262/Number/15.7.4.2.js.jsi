var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/*
 * Any copyright is dedicated to the Public Domain.
 * http://creativecommons.org/licenses/publicdomain/
 */
try { if (Inst0 <= 1000 && typeof (raisesException) != "undefined") {_RecordType("<112,127,5>",(raisesException)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<128,137,5>",(TypeError)); Inst1++; } } catch(e) {}
raisesException(TypeError)('Number.prototype.toString.call(true)');
true;
try { if (Inst2 <= 1000 && typeof (raisesException) != "undefined") {_RecordType("<186,201,7>",(raisesException)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<202,211,7>",(TypeError)); Inst3++; } } catch(e) {}
raisesException(TypeError)('Number.prototype.toString.call("")');
true;
try { if (Inst4 <= 1000 && typeof (raisesException) != "undefined") {_RecordType("<258,273,9>",(raisesException)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<274,283,9>",(TypeError)); Inst5++; } } catch(e) {}
raisesException(TypeError)('Number.prototype.toString.call({})');
true;
try { if (Inst6 <= 1000 && typeof (raisesException) != "undefined") {_RecordType("<330,345,11>",(raisesException)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<346,355,11>",(TypeError)); Inst7++; } } catch(e) {}
raisesException(TypeError)('Number.prototype.toString.call(null)');
true;
try { if (Inst8 <= 1000 && typeof (raisesException) != "undefined") {_RecordType("<404,419,13>",(raisesException)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<420,429,13>",(TypeError)); Inst9++; } } catch(e) {}
raisesException(TypeError)('Number.prototype.toString.call([])');
true;
try { if (Inst10 <= 1000 && typeof (raisesException) != "undefined") {_RecordType("<476,491,15>",(raisesException)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<492,501,15>",(TypeError)); Inst11++; } } catch(e) {}
raisesException(TypeError)('Number.prototype.toString.call(undefined)');
true;
try { if (Inst12 <= 1000 && typeof (raisesException) != "undefined") {_RecordType("<555,570,17>",(raisesException)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<571,580,17>",(TypeError)); Inst13++; } } catch(e) {}
raisesException(TypeError)('Number.prototype.toString.call(new Boolean(true))');
true;
try { if (Inst14 <= 1000 && typeof (completesNormally) != "undefined") {_RecordType("<642,659,19>",(completesNormally)); Inst14++; } } catch(e) {}
completesNormally('Number.prototype.toString.call(42)');
true;
try { if (Inst15 <= 1000 && typeof (completesNormally) != "undefined") {_RecordType("<705,722,21>",(completesNormally)); Inst15++; } } catch(e) {}
completesNormally('Number.prototype.toString.call(new Number(42))');
true;

try { if (Inst16 <= 1000 && typeof (testAround) != "undefined") {_RecordType("<790,800,24>",(testAround)); Inst16++; } } catch(e) {}
function testAround(middle) {
try { if (Inst17 <= 1000 && typeof (middle) != "undefined") {_RecordType("<801,807,24>",(middle)); Inst17++; } } catch(e) {}
  var range = 260;
try { if (Inst18 <= 1000 && typeof (range) != "undefined") {_RecordType("<817,822,25>",(range)); Inst18++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (middle) != "undefined") {_RecordType("<842,848,26>",(middle)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (range) != "undefined") {_RecordType("<851,856,26>",(range)); Inst21++; } } catch(e) {}
  var low = middle - range / 2;
try { if (Inst19 <= 1000 && typeof (low) != "undefined") {_RecordType("<836,839,26>",(low)); Inst19++; } } catch(e) {}

  for (var i = 0; i < range; ++i) {
try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<874,875,28>",(i)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<881,882,28>",(i)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (range) != "undefined") {_RecordType("<885,890,28>",(range)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<894,895,28>",(i)); Inst25++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (low) != "undefined") {_RecordType("<903,906,29>",(low)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (i) != "undefined") {_RecordType("<909,910,29>",(i)); Inst27++; } } catch(e) {}
    low + i;
try { if (Inst28 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<916,924,30>",(parseInt)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (String) != "undefined") {_RecordType("<925,931,30>",(String)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (low) != "undefined") {_RecordType("<932,935,30>",(low)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (i) != "undefined") {_RecordType("<938,939,30>",(i)); Inst31++; } } catch(e) {}
    parseInt(String(low + i));
  }
}

try { if (Inst32 <= 1000 && typeof (testAround) != "undefined") {_RecordType("<950,960,34>",(testAround)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (Math.pow) != "undefined") {_RecordType("<962,970,34>",(Math.pow)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (Math) != "undefined") {_RecordType("<962,966,34>",(Math)); Inst34++; } } catch(e) {}
testAround(-Math.pow(2, 32));
try { if (Inst35 <= 1000 && typeof (testAround) != "undefined") {_RecordType("<980,990,35>",(testAround)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (Math.pow) != "undefined") {_RecordType("<992,1000,35>",(Math.pow)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (Math) != "undefined") {_RecordType("<992,996,35>",(Math)); Inst37++; } } catch(e) {}
testAround(-Math.pow(2, 16));
try { if (Inst38 <= 1000 && typeof (testAround) != "undefined") {_RecordType("<1010,1020,36>",(testAround)); Inst38++; } } catch(e) {}
testAround(0);
try { if (Inst39 <= 1000 && typeof (testAround) != "undefined") {_RecordType("<1025,1035,37>",(testAround)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (Math.pow) != "undefined") {_RecordType("<1037,1045,37>",(Math.pow)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1037,1041,37>",(Math)); Inst41++; } } catch(e) {}
testAround(+Math.pow(2, 16));
try { if (Inst42 <= 1000 && typeof (testAround) != "undefined") {_RecordType("<1055,1065,38>",(testAround)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (Math.pow) != "undefined") {_RecordType("<1067,1075,38>",(Math.pow)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1067,1071,38>",(Math)); Inst44++; } } catch(e) {}
testAround(+Math.pow(2, 32));
try { if (Inst45 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1085,1098,39>",(reportCompare)); Inst45++; } } catch(e) {}
reportCompare(true, true);

