var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Any copyright is dedicated to the Public Domain.
// http://creativecommons.org/licenses/publicdomain/
//-----------------------------------------------------------------------------
var BUGNUMBER = 886949;
try { if (Inst0 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<189,198,4>",(BUGNUMBER)); Inst0++; } } catch(e) {}
var summary = "ES6 (draft May 2013) 15.7.3.10 Number.parseFloat(string)";
try { if (Inst1 <= 1000 && typeof (summary) != "undefined") {_RecordType("<213,220,5>",(summary)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (print) != "undefined") {_RecordType("<283,288,6>",(print)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<289,298,6>",(BUGNUMBER)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (summary) != "undefined") {_RecordType("<308,315,6>",(summary)); Inst4++; } } catch(e) {}
print(BUGNUMBER + ": " + summary);
try { if (Inst5 <= 1000 && typeof (Number.parseFloat) != "undefined") {_RecordType("<318,335,7>",(Number.parseFloat)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Number) != "undefined") {_RecordType("<318,324,7>",(Number)); Inst6++; } } catch(e) {}
Number.parseFloat("Infinity");
try { if (Inst7 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<349,357,8>",(Infinity)); Inst7++; } } catch(e) {}
Infinity;
try { if (Inst8 <= 1000 && typeof (Number.parseFloat) != "undefined") {_RecordType("<359,376,9>",(Number.parseFloat)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Number) != "undefined") {_RecordType("<359,365,9>",(Number)); Inst9++; } } catch(e) {}
Number.parseFloat("+Infinity");
try { if (Inst10 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<391,399,10>",(Infinity)); Inst10++; } } catch(e) {}
Infinity;
try { if (Inst11 <= 1000 && typeof (Number.parseFloat) != "undefined") {_RecordType("<401,418,11>",(Number.parseFloat)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Number) != "undefined") {_RecordType("<401,407,11>",(Number)); Inst12++; } } catch(e) {}
Number.parseFloat("-Infinity");
try { if (Inst13 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<434,442,12>",(Infinity)); Inst13++; } } catch(e) {}
-Infinity;
try { if (Inst14 <= 1000 && typeof (Number.parseFloat) != "undefined") {_RecordType("<444,461,13>",(Number.parseFloat)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Number) != "undefined") {_RecordType("<444,450,13>",(Number)); Inst15++; } } catch(e) {}
Number.parseFloat("inf");
try { if (Inst16 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<470,473,14>",(NaN)); Inst16++; } } catch(e) {}
NaN;
try { if (Inst17 <= 1000 && typeof (Number.parseFloat) != "undefined") {_RecordType("<475,492,15>",(Number.parseFloat)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Number) != "undefined") {_RecordType("<475,481,15>",(Number)); Inst18++; } } catch(e) {}
Number.parseFloat("Inf");
try { if (Inst19 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<501,504,16>",(NaN)); Inst19++; } } catch(e) {}
NaN;
try { if (Inst20 <= 1000 && typeof (Number.parseFloat) != "undefined") {_RecordType("<506,523,17>",(Number.parseFloat)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Number) != "undefined") {_RecordType("<506,512,17>",(Number)); Inst21++; } } catch(e) {}
Number.parseFloat("infinity");
try { if (Inst22 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<537,540,18>",(NaN)); Inst22++; } } catch(e) {}
NaN;
try { if (Inst23 <= 1000 && typeof (Number.parseFloat) != "undefined") {_RecordType("<542,559,19>",(Number.parseFloat)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (Number) != "undefined") {_RecordType("<542,548,19>",(Number)); Inst24++; } } catch(e) {}
Number.parseFloat("nan");
try { if (Inst25 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<568,571,20>",(NaN)); Inst25++; } } catch(e) {}
NaN;
try { if (Inst26 <= 1000 && typeof (Number.parseFloat) != "undefined") {_RecordType("<573,590,21>",(Number.parseFloat)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (Number) != "undefined") {_RecordType("<573,579,21>",(Number)); Inst27++; } } catch(e) {}
Number.parseFloat("NaN");
try { if (Inst28 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<599,602,22>",(NaN)); Inst28++; } } catch(e) {}
NaN;
try { if (Inst29 <= 1000 && typeof (Number.parseFloat) != "undefined") {_RecordType("<604,621,23>",(Number.parseFloat)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (Number) != "undefined") {_RecordType("<604,610,23>",(Number)); Inst30++; } } catch(e) {}
Number.parseFloat();
try { if (Inst31 <= 1000 && typeof (parseFloat) != "undefined") {_RecordType("<625,635,24>",(parseFloat)); Inst31++; } } catch(e) {}
parseFloat;

try { if (Inst32 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<649,662,26>",(reportCompare)); Inst32++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst33 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<683,696,27>",(reportCompare)); Inst33++; } } catch(e) {}
  reportCompare(true, true);
}

try { if (Inst34 <= 1000 && typeof (print) != "undefined") {_RecordType("<713,718,30>",(print)); Inst34++; } } catch(e) {}
print("All tests passed!");

