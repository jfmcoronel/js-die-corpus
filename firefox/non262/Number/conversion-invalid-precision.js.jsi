var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/*
 * Any copyright is dedicated to the Public Domain.
 * http://creativecommonn.org/licenses/publicdomain/
 */
var BUGNUMBER = 795745;
try { if (Inst0 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<116,125,5>",(BUGNUMBER)); Inst0++; } } catch(e) {}
var summary = "Number.prototype.to* should throw a RangeError when passed a bad precision";
try { if (Inst1 <= 1000 && typeof (summary) != "undefined") {_RecordType("<140,147,6>",(summary)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (print) != "undefined") {_RecordType("<228,233,7>",(print)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<234,243,7>",(BUGNUMBER)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (summary) != "undefined") {_RecordType("<253,260,7>",(summary)); Inst4++; } } catch(e) {}
print(BUGNUMBER + ": " + summary);
/**************
 * BEGIN TEST *
 **************/

try { if (Inst5 <= 1000 && typeof (test) != "undefined") {_RecordType("<322,326,12>",(test)); Inst5++; } } catch(e) {}
function test(method, prec) {
try { if (Inst6 <= 1000 && typeof (method) != "undefined") {_RecordType("<327,333,12>",(method)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (prec) != "undefined") {_RecordType("<335,339,12>",(prec)); Inst7++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (e) != "undefined") {_RecordType("<438,439,16>",(e)); Inst13++; } } catch(e) {}
  try {
try { if (Inst8 <= 1000 && typeof (Number.prototype[method].call) != "undefined") {_RecordType("<355,384,14>",(Number.prototype[method].call)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Number.prototype[method]) != "undefined") {_RecordType("<355,379,14>",(Number.prototype[method])); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Number.prototype) != "undefined") {_RecordType("<355,371,14>",(Number.prototype)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Number) != "undefined") {_RecordType("<355,361,14>",(Number)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (prec) != "undefined") {_RecordType("<388,392,14>",(prec)); Inst12++; } } catch(e) {}
    Number.prototype[method].call(0, prec);
    throw "should have thrown";
  } catch (e) {
try { if (Inst14 <= 1000 && typeof (e) != "undefined") {_RecordType("<447,448,17>",(e)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (RangeError) != "undefined") {_RecordType("<460,470,17>",(RangeError)); Inst15++; } } catch(e) {}
    e instanceof RangeError;
    true;
try { if (Inst16 <= 1000 && typeof (method) != "undefined") {_RecordType("<515,521,19>",(method)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (prec) != "undefined") {_RecordType("<545,549,19>",(prec)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (e) != "undefined") {_RecordType("<563,564,19>",(e)); Inst18++; } } catch(e) {}
    "expected RangeError for " + method + " with precision " + prec + ", got " + e;
  }
}

try { if (Inst19 <= 1000 && typeof (test) != "undefined") {_RecordType("<573,577,23>",(test)); Inst19++; } } catch(e) {}
test("toExponential", -32);
try { if (Inst20 <= 1000 && typeof (test) != "undefined") {_RecordType("<601,605,24>",(test)); Inst20++; } } catch(e) {}
test("toFixed", -32);
try { if (Inst21 <= 1000 && typeof (test) != "undefined") {_RecordType("<623,627,25>",(test)); Inst21++; } } catch(e) {}
test("toPrecision", -32);
try { if (Inst22 <= 1000 && typeof (test) != "undefined") {_RecordType("<649,653,26>",(test)); Inst22++; } } catch(e) {}
test("toExponential", 9999999);
try { if (Inst23 <= 1000 && typeof (test) != "undefined") {_RecordType("<681,685,27>",(test)); Inst23++; } } catch(e) {}
test("toFixed", 9999999);
try { if (Inst24 <= 1000 && typeof (test) != "undefined") {_RecordType("<707,711,28>",(test)); Inst24++; } } catch(e) {}
test("toPrecision", 9999999);
try { if (Inst25 <= 1000 && typeof (test) != "undefined") {_RecordType("<737,741,29>",(test)); Inst25++; } } catch(e) {}
test("toPrecision", 0);
/******************************************************************************/

try { if (Inst26 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<854,867,32>",(reportCompare)); Inst26++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst27 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<888,901,33>",(reportCompare)); Inst27++; } } catch(e) {}
  reportCompare(true, true);
}

try { if (Inst28 <= 1000 && typeof (print) != "undefined") {_RecordType("<918,923,36>",(print)); Inst28++; } } catch(e) {}
print("Tests complete");

