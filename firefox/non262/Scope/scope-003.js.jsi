var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* -*- indent-tabs-mode: nil; js-indent-level: 2 -*- */

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

/*
 * Date: 2001-07-03
 *
 * SUMMARY:  Testing scope with nested functions
 *
 * From correspondence with Christopher Oliver <coliver@mminternet.com>:
 *
 * > Running this test with Rhino produces the following exception:
 * >
 * > uncaught JavaScript exception: undefined: Cannot find default value for
 * > object. (line 3)
 * >
 * > This is due to a bug in org.mozilla.javascript.NativeCall which doesn't
 * > implement toString or valueOf or override getDefaultValue.
 * > However, even after I hacked in an implementation of getDefaultValue in
 * > NativeCall, Rhino still produces a different result then SpiderMonkey:
 * >
 * > [object Call]
 * > [object Object]
 * > [object Call]
 *
 * Note the results should be:
 *
 *   [object global]
 *   [object Object]
 *   [object global]
 *
 * This is what we are checking for in this testcase -
 */
//-----------------------------------------------------------------------------
var UBound = 0;
try { if (Inst0 <= 1000 && typeof (UBound) != "undefined") {_RecordType("<1198,1204,37>",(UBound)); Inst0++; } } catch(e) {}
var BUGNUMBER = '(none)';
try { if (Inst1 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<1214,1223,38>",(BUGNUMBER)); Inst1++; } } catch(e) {}
var summary = 'Testing scope with nested functions';
try { if (Inst2 <= 1000 && typeof (summary) != "undefined") {_RecordType("<1240,1247,39>",(summary)); Inst2++; } } catch(e) {}
var statprefix = 'Section ';
try { if (Inst3 <= 1000 && typeof (statprefix) != "undefined") {_RecordType("<1293,1303,40>",(statprefix)); Inst3++; } } catch(e) {}
var statsuffix = ' of test -';
try { if (Inst4 <= 1000 && typeof (statsuffix) != "undefined") {_RecordType("<1322,1332,41>",(statsuffix)); Inst4++; } } catch(e) {}
var self = this; // capture a reference to the global object;
try { if (Inst5 <= 1000 && typeof (self) != "undefined") {_RecordType("<1353,1357,42>",(self)); Inst5++; } } catch(e) {}

try { if (Inst7 <= 1000 && typeof (self.toString) != "undefined") {_RecordType("<1427,1440,44>",(self.toString)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (self) != "undefined") {_RecordType("<1427,1431,44>",(self)); Inst8++; } } catch(e) {}
var cnGlobal = self.toString();
try { if (Inst6 <= 1000 && typeof (cnGlobal) != "undefined") {_RecordType("<1416,1424,44>",(cnGlobal)); Inst6++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (new Object().toString) != "undefined") {_RecordType("<1459,1480,45>",(new Object().toString)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1463,1469,45>",(Object)); Inst11++; } } catch(e) {}
var cnObject = new Object().toString();
try { if (Inst9 <= 1000 && typeof (cnObject) != "undefined") {_RecordType("<1448,1456,45>",(cnObject)); Inst9++; } } catch(e) {}
var statusitems = [];
try { if (Inst12 <= 1000 && typeof (statusitems) != "undefined") {_RecordType("<1488,1499,46>",(statusitems)); Inst12++; } } catch(e) {}
var actualvalues = [];
try { if (Inst13 <= 1000 && typeof (actualvalues) != "undefined") {_RecordType("<1510,1522,47>",(actualvalues)); Inst13++; } } catch(e) {}
var expectedvalues = [];
try { if (Inst14 <= 1000 && typeof (expectedvalues) != "undefined") {_RecordType("<1533,1547,48>",(expectedvalues)); Inst14++; } } catch(e) {}

try { if (Inst15 <= 1000 && typeof (a) != "undefined") {_RecordType("<1564,1565,50>",(a)); Inst15++; } } catch(e) {}
function a() {
try { if (Inst16 <= 1000 && typeof (b) != "undefined") {_RecordType("<1581,1582,51>",(b)); Inst16++; } } catch(e) {}
  function b() {
try { if (Inst17 <= 1000 && typeof (capture) != "undefined") {_RecordType("<1591,1598,52>",(capture)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (this.toString) != "undefined") {_RecordType("<1599,1612,52>",(this.toString)); Inst18++; } } catch(e) {}
    capture(this.toString());
  }

  this.c = function () {
try { if (Inst20 <= 1000 && typeof (capture) != "undefined") {_RecordType("<1651,1658,56>",(capture)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (this.toString) != "undefined") {_RecordType("<1659,1672,56>",(this.toString)); Inst21++; } } catch(e) {}
    capture(this.toString());
try { if (Inst22 <= 1000 && typeof (b) != "undefined") {_RecordType("<1681,1682,57>",(b)); Inst22++; } } catch(e) {}
    b();
  };
try { if (Inst19 <= 1000 && typeof (this.c) != "undefined") {_RecordType("<1624,1630,55>",(this.c)); Inst19++; } } catch(e) {}

try { if (Inst23 <= 1000 && typeof (b) != "undefined") {_RecordType("<1694,1695,60>",(b)); Inst23++; } } catch(e) {}
  b();
}

try { if (Inst25 <= 1000 && typeof (a) != "undefined") {_RecordType("<1716,1717,63>",(a)); Inst25++; } } catch(e) {}
var obj = new a(); // captures actualvalues[0]
try { if (Inst24 <= 1000 && typeof (obj) != "undefined") {_RecordType("<1706,1709,63>",(obj)); Inst24++; } } catch(e) {}

try { if (Inst26 <= 1000 && typeof (obj.c) != "undefined") {_RecordType("<1750,1755,65>",(obj.c)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (obj) != "undefined") {_RecordType("<1750,1753,65>",(obj)); Inst27++; } } catch(e) {}
obj.c(); // captures actualvalues[1], actualvalues[2]
// The values we expect - see introduction above -

try { if (Inst30 <= 1000 && typeof (cnGlobal) != "undefined") {_RecordType("<1876,1884,68>",(cnGlobal)); Inst30++; } } catch(e) {}
expectedvalues[0] = cnGlobal;
try { if (Inst28 <= 1000 && typeof (expectedvalues[0]) != "undefined") {_RecordType("<1856,1873,68>",(expectedvalues[0])); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (expectedvalues) != "undefined") {_RecordType("<1856,1870,68>",(expectedvalues)); Inst29++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (cnObject) != "undefined") {_RecordType("<1906,1914,69>",(cnObject)); Inst33++; } } catch(e) {}
expectedvalues[1] = cnObject;
try { if (Inst31 <= 1000 && typeof (expectedvalues[1]) != "undefined") {_RecordType("<1886,1903,69>",(expectedvalues[1])); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (expectedvalues) != "undefined") {_RecordType("<1886,1900,69>",(expectedvalues)); Inst32++; } } catch(e) {}
try { if (Inst36 <= 1000 && typeof (cnGlobal) != "undefined") {_RecordType("<1936,1944,70>",(cnGlobal)); Inst36++; } } catch(e) {}
expectedvalues[2] = cnGlobal; //-----------------------------------------------------------------------------
try { if (Inst34 <= 1000 && typeof (expectedvalues[2]) != "undefined") {_RecordType("<1916,1933,70>",(expectedvalues[2])); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (expectedvalues) != "undefined") {_RecordType("<1916,1930,70>",(expectedvalues)); Inst35++; } } catch(e) {}

try { if (Inst37 <= 1000 && typeof (test) != "undefined") {_RecordType("<2027,2031,72>",(test)); Inst37++; } } catch(e) {}
test(); //-----------------------------------------------------------------------------

try { if (Inst38 <= 1000 && typeof (capture) != "undefined") {_RecordType("<2125,2132,74>",(capture)); Inst38++; } } catch(e) {}
function capture(val) {
try { if (Inst39 <= 1000 && typeof (val) != "undefined") {_RecordType("<2133,2136,74>",(val)); Inst39++; } } catch(e) {}
try { if (Inst42 <= 1000 && typeof (val) != "undefined") {_RecordType("<2165,2168,75>",(val)); Inst42++; } } catch(e) {}
  actualvalues[UBound] = val;
try { if (Inst40 <= 1000 && typeof (actualvalues[UBound]) != "undefined") {_RecordType("<2142,2162,75>",(actualvalues[UBound])); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (actualvalues) != "undefined") {_RecordType("<2142,2154,75>",(actualvalues)); Inst41++; } } catch(e) {}
try { if (Inst45 <= 1000 && typeof (getStatus) != "undefined") {_RecordType("<2194,2203,76>",(getStatus)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (UBound) != "undefined") {_RecordType("<2204,2210,76>",(UBound)); Inst46++; } } catch(e) {}
  statusitems[UBound] = getStatus(UBound);
try { if (Inst43 <= 1000 && typeof (statusitems[UBound]) != "undefined") {_RecordType("<2172,2191,76>",(statusitems[UBound])); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (statusitems) != "undefined") {_RecordType("<2172,2183,76>",(statusitems)); Inst44++; } } catch(e) {}
try { if (Inst47 <= 1000 && typeof (UBound) != "undefined") {_RecordType("<2215,2221,77>",(UBound)); Inst47++; } } catch(e) {}
  UBound++;
}

try { if (Inst48 <= 1000 && typeof (test) != "undefined") {_RecordType("<2237,2241,80>",(test)); Inst48++; } } catch(e) {}
function test() {
try { if (Inst49 <= 1000 && typeof (printBugNumber) != "undefined") {_RecordType("<2248,2262,81>",(printBugNumber)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<2263,2272,81>",(BUGNUMBER)); Inst50++; } } catch(e) {}
  printBugNumber(BUGNUMBER);
try { if (Inst51 <= 1000 && typeof (printStatus) != "undefined") {_RecordType("<2277,2288,82>",(printStatus)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (summary) != "undefined") {_RecordType("<2289,2296,82>",(summary)); Inst52++; } } catch(e) {}
  printStatus(summary);

  for (var i = 0; i < UBound; i++) {
try { if (Inst53 <= 1000 && typeof (i) != "undefined") {_RecordType("<2311,2312,84>",(i)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (i) != "undefined") {_RecordType("<2318,2319,84>",(i)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (UBound) != "undefined") {_RecordType("<2322,2328,84>",(UBound)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (i) != "undefined") {_RecordType("<2330,2331,84>",(i)); Inst56++; } } catch(e) {}
try { if (Inst57 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<2341,2354,85>",(reportCompare)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (expectedvalues[i]) != "undefined") {_RecordType("<2355,2372,85>",(expectedvalues[i])); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (expectedvalues) != "undefined") {_RecordType("<2355,2369,85>",(expectedvalues)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (actualvalues[i]) != "undefined") {_RecordType("<2374,2389,85>",(actualvalues[i])); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (actualvalues) != "undefined") {_RecordType("<2374,2386,85>",(actualvalues)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (statusitems[i]) != "undefined") {_RecordType("<2391,2405,85>",(statusitems[i])); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (statusitems) != "undefined") {_RecordType("<2391,2402,85>",(statusitems)); Inst63++; } } catch(e) {}
    reportCompare(expectedvalues[i], actualvalues[i], statusitems[i]);
  }
}

try { if (Inst64 <= 1000 && typeof (getStatus) != "undefined") {_RecordType("<2424,2433,89>",(getStatus)); Inst64++; } } catch(e) {}
function getStatus(i) {
try { if (Inst65 <= 1000 && typeof (i) != "undefined") {_RecordType("<2434,2435,89>",(i)); Inst65++; } } catch(e) {}
try { if (Inst66 <= 1000 && typeof (statprefix) != "undefined") {_RecordType("<2448,2458,90>",(statprefix)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (i) != "undefined") {_RecordType("<2461,2462,90>",(i)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (statsuffix) != "undefined") {_RecordType("<2465,2475,90>",(statsuffix)); Inst68++; } } catch(e) {}
  return statprefix + i + statsuffix;
}

