var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* -*- indent-tabs-mode: nil; js-indent-level: 2 -*- */

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

/*
 *
 * Date:    30 January 2003
 * SUMMARY: Testing |this[name]| via Function.prototype.call(), apply()
 *
 * See http://bugzilla.mozilla.org/show_bug.cgi?id=191276
 *
 * Igor: "This script fails when run in Rhino compiled mode, but passes in
 * interpreted mode. Note that presence of the never-called |unused_function|
 * with |f('a')| line is essential; the script works OK without it."
 *
 */
//-----------------------------------------------------------------------------
var UBound = 0;
try { if (Inst0 <= 1000 && typeof (UBound) != "undefined") {_RecordType("<746,752,20>",(UBound)); Inst0++; } } catch(e) {}
var BUGNUMBER = 191276;
try { if (Inst1 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<762,771,21>",(BUGNUMBER)); Inst1++; } } catch(e) {}
var summary = 'Testing |this[name]| via Function.prototype.call(), apply()';
try { if (Inst2 <= 1000 && typeof (summary) != "undefined") {_RecordType("<786,793,22>",(summary)); Inst2++; } } catch(e) {}
var status = '';
try { if (Inst3 <= 1000 && typeof (status) != "undefined") {_RecordType("<863,869,23>",(status)); Inst3++; } } catch(e) {}
var statusitems = [];
try { if (Inst4 <= 1000 && typeof (statusitems) != "undefined") {_RecordType("<880,891,24>",(statusitems)); Inst4++; } } catch(e) {}
var actual = '';
try { if (Inst5 <= 1000 && typeof (actual) != "undefined") {_RecordType("<902,908,25>",(actual)); Inst5++; } } catch(e) {}
var actualvalues = [];
try { if (Inst6 <= 1000 && typeof (actualvalues) != "undefined") {_RecordType("<919,931,26>",(actualvalues)); Inst6++; } } catch(e) {}
var expect = '';
try { if (Inst7 <= 1000 && typeof (expect) != "undefined") {_RecordType("<942,948,27>",(expect)); Inst7++; } } catch(e) {}
var expectedvalues = [];
try { if (Inst8 <= 1000 && typeof (expectedvalues) != "undefined") {_RecordType("<959,973,28>",(expectedvalues)); Inst8++; } } catch(e) {}

try { if (Inst9 <= 1000 && typeof (F) != "undefined") {_RecordType("<990,991,30>",(F)); Inst9++; } } catch(e) {}
function F(name) {
try { if (Inst10 <= 1000 && typeof (name) != "undefined") {_RecordType("<992,996,30>",(name)); Inst10++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (this[name]) != "undefined") {_RecordType("<1009,1019,31>",(this[name])); Inst11++; } } catch(e) {}
  return this[name];
}

try { if (Inst12 <= 1000 && typeof (unused_function) != "undefined") {_RecordType("<1033,1048,34>",(unused_function)); Inst12++; } } catch(e) {}
function unused_function() {
try { if (Inst13 <= 1000 && typeof (F) != "undefined") {_RecordType("<1055,1056,35>",(F)); Inst13++; } } catch(e) {}
  F('a');
}

try { if (Inst15 <= 1000 && typeof (inSection) != "undefined") {_RecordType("<1075,1084,38>",(inSection)); Inst15++; } } catch(e) {}
status = inSection(1);
try { if (Inst14 <= 1000 && typeof (status) != "undefined") {_RecordType("<1066,1072,38>",(status)); Inst14++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (F.call) != "undefined") {_RecordType("<1098,1104,39>",(F.call)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (F) != "undefined") {_RecordType("<1098,1099,39>",(F)); Inst18++; } } catch(e) {}
actual = F.call({
  a: 'aaa'
}, 'a');
try { if (Inst16 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1089,1095,39>",(actual)); Inst16++; } } catch(e) {}
expect = 'aaa';
try { if (Inst19 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1127,1133,42>",(expect)); Inst19++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (addThis) != "undefined") {_RecordType("<1143,1150,43>",(addThis)); Inst20++; } } catch(e) {}
addThis();
try { if (Inst22 <= 1000 && typeof (inSection) != "undefined") {_RecordType("<1163,1172,44>",(inSection)); Inst22++; } } catch(e) {}
status = inSection(2);
try { if (Inst21 <= 1000 && typeof (status) != "undefined") {_RecordType("<1154,1160,44>",(status)); Inst21++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (F.apply) != "undefined") {_RecordType("<1186,1193,45>",(F.apply)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (F) != "undefined") {_RecordType("<1186,1187,45>",(F)); Inst25++; } } catch(e) {}
actual = F.apply({
  a: 'aaa'
}, ['a']);
try { if (Inst23 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1177,1183,45>",(actual)); Inst23++; } } catch(e) {}
expect = 'aaa';
try { if (Inst26 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1218,1224,48>",(expect)); Inst26++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (addThis) != "undefined") {_RecordType("<1234,1241,49>",(addThis)); Inst27++; } } catch(e) {}
addThis();
/*
 * Try the same things with an object variable instead of a literal
 */

var obj = {
  a: 'aaa'
};
try { if (Inst28 <= 1000 && typeof (obj) != "undefined") {_RecordType("<1325,1328,54>",(obj)); Inst28++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (inSection) != "undefined") {_RecordType("<1356,1365,57>",(inSection)); Inst30++; } } catch(e) {}
status = inSection(3);
try { if (Inst29 <= 1000 && typeof (status) != "undefined") {_RecordType("<1347,1353,57>",(status)); Inst29++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (F.call) != "undefined") {_RecordType("<1379,1385,58>",(F.call)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (F) != "undefined") {_RecordType("<1379,1380,58>",(F)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (obj) != "undefined") {_RecordType("<1386,1389,58>",(obj)); Inst34++; } } catch(e) {}
actual = F.call(obj, 'a');
try { if (Inst31 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1370,1376,58>",(actual)); Inst31++; } } catch(e) {}
expect = 'aaa';
try { if (Inst35 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1397,1403,59>",(expect)); Inst35++; } } catch(e) {}
try { if (Inst36 <= 1000 && typeof (addThis) != "undefined") {_RecordType("<1413,1420,60>",(addThis)); Inst36++; } } catch(e) {}
addThis();
try { if (Inst38 <= 1000 && typeof (inSection) != "undefined") {_RecordType("<1433,1442,61>",(inSection)); Inst38++; } } catch(e) {}
status = inSection(4);
try { if (Inst37 <= 1000 && typeof (status) != "undefined") {_RecordType("<1424,1430,61>",(status)); Inst37++; } } catch(e) {}
try { if (Inst40 <= 1000 && typeof (F.apply) != "undefined") {_RecordType("<1456,1463,62>",(F.apply)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (F) != "undefined") {_RecordType("<1456,1457,62>",(F)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (obj) != "undefined") {_RecordType("<1464,1467,62>",(obj)); Inst42++; } } catch(e) {}
actual = F.apply(obj, ['a']);
try { if (Inst39 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1447,1453,62>",(actual)); Inst39++; } } catch(e) {}
expect = 'aaa';
try { if (Inst43 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1477,1483,63>",(expect)); Inst43++; } } catch(e) {}
try { if (Inst44 <= 1000 && typeof (addThis) != "undefined") {_RecordType("<1493,1500,64>",(addThis)); Inst44++; } } catch(e) {}
addThis(); //-----------------------------------------------------------------------------

try { if (Inst45 <= 1000 && typeof (test) != "undefined") {_RecordType("<1585,1589,66>",(test)); Inst45++; } } catch(e) {}
test(); //-----------------------------------------------------------------------------

try { if (Inst46 <= 1000 && typeof (addThis) != "undefined") {_RecordType("<1683,1690,68>",(addThis)); Inst46++; } } catch(e) {}
function addThis() {
try { if (Inst49 <= 1000 && typeof (status) != "undefined") {_RecordType("<1719,1725,69>",(status)); Inst49++; } } catch(e) {}
  statusitems[UBound] = status;
try { if (Inst47 <= 1000 && typeof (statusitems[UBound]) != "undefined") {_RecordType("<1697,1716,69>",(statusitems[UBound])); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (statusitems) != "undefined") {_RecordType("<1697,1708,69>",(statusitems)); Inst48++; } } catch(e) {}
try { if (Inst52 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1752,1758,70>",(actual)); Inst52++; } } catch(e) {}
  actualvalues[UBound] = actual;
try { if (Inst50 <= 1000 && typeof (actualvalues[UBound]) != "undefined") {_RecordType("<1729,1749,70>",(actualvalues[UBound])); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (actualvalues) != "undefined") {_RecordType("<1729,1741,70>",(actualvalues)); Inst51++; } } catch(e) {}
try { if (Inst55 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1787,1793,71>",(expect)); Inst55++; } } catch(e) {}
  expectedvalues[UBound] = expect;
try { if (Inst53 <= 1000 && typeof (expectedvalues[UBound]) != "undefined") {_RecordType("<1762,1784,71>",(expectedvalues[UBound])); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (expectedvalues) != "undefined") {_RecordType("<1762,1776,71>",(expectedvalues)); Inst54++; } } catch(e) {}
try { if (Inst56 <= 1000 && typeof (UBound) != "undefined") {_RecordType("<1797,1803,72>",(UBound)); Inst56++; } } catch(e) {}
  UBound++;
}

try { if (Inst57 <= 1000 && typeof (test) != "undefined") {_RecordType("<1819,1823,75>",(test)); Inst57++; } } catch(e) {}
function test() {
try { if (Inst58 <= 1000 && typeof (printBugNumber) != "undefined") {_RecordType("<1830,1844,76>",(printBugNumber)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<1845,1854,76>",(BUGNUMBER)); Inst59++; } } catch(e) {}
  printBugNumber(BUGNUMBER);
try { if (Inst60 <= 1000 && typeof (printStatus) != "undefined") {_RecordType("<1859,1870,77>",(printStatus)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (summary) != "undefined") {_RecordType("<1871,1878,77>",(summary)); Inst61++; } } catch(e) {}
  printStatus(summary);

  for (var i = 0; i < UBound; i++) {
try { if (Inst62 <= 1000 && typeof (i) != "undefined") {_RecordType("<1893,1894,79>",(i)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (i) != "undefined") {_RecordType("<1900,1901,79>",(i)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (UBound) != "undefined") {_RecordType("<1904,1910,79>",(UBound)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (i) != "undefined") {_RecordType("<1912,1913,79>",(i)); Inst65++; } } catch(e) {}
try { if (Inst66 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1923,1936,80>",(reportCompare)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (expectedvalues[i]) != "undefined") {_RecordType("<1937,1954,80>",(expectedvalues[i])); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (expectedvalues) != "undefined") {_RecordType("<1937,1951,80>",(expectedvalues)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (actualvalues[i]) != "undefined") {_RecordType("<1956,1971,80>",(actualvalues[i])); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (actualvalues) != "undefined") {_RecordType("<1956,1968,80>",(actualvalues)); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (statusitems[i]) != "undefined") {_RecordType("<1973,1987,80>",(statusitems[i])); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (statusitems) != "undefined") {_RecordType("<1973,1984,80>",(statusitems)); Inst72++; } } catch(e) {}
    reportCompare(expectedvalues[i], actualvalues[i], statusitems[i]);
  }
}

