var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* -*- indent-tabs-mode: nil; js-indent-level: 2 -*- */

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

/*
 *
 * Date:    19 April 2003
 * SUMMARY: Testing nested function scope capture
 *
 * See http://bugzilla.mozilla.org/show_bug.cgi?id=202678
 *
 */
//-----------------------------------------------------------------------------
var UBound = 0;
try { if (Inst0 <= 1000 && typeof (UBound) != "undefined") {_RecordType("<497,503,16>",(UBound)); Inst0++; } } catch(e) {}
var BUGNUMBER = 202678;
try { if (Inst1 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<513,522,17>",(BUGNUMBER)); Inst1++; } } catch(e) {}
var summary = 'Testing nested function scope capture';
try { if (Inst2 <= 1000 && typeof (summary) != "undefined") {_RecordType("<537,544,18>",(summary)); Inst2++; } } catch(e) {}
var status = '';
try { if (Inst3 <= 1000 && typeof (status) != "undefined") {_RecordType("<592,598,19>",(status)); Inst3++; } } catch(e) {}
var statusitems = [];
try { if (Inst4 <= 1000 && typeof (statusitems) != "undefined") {_RecordType("<609,620,20>",(statusitems)); Inst4++; } } catch(e) {}
var actual = '';
try { if (Inst5 <= 1000 && typeof (actual) != "undefined") {_RecordType("<631,637,21>",(actual)); Inst5++; } } catch(e) {}
var actualvalues = [];
try { if (Inst6 <= 1000 && typeof (actualvalues) != "undefined") {_RecordType("<648,660,22>",(actualvalues)); Inst6++; } } catch(e) {}
var expect = '';
try { if (Inst7 <= 1000 && typeof (expect) != "undefined") {_RecordType("<671,677,23>",(expect)); Inst7++; } } catch(e) {}
var expectedvalues = [];
try { if (Inst8 <= 1000 && typeof (expectedvalues) != "undefined") {_RecordType("<688,702,24>",(expectedvalues)); Inst8++; } } catch(e) {}
var self = this;
try { if (Inst9 <= 1000 && typeof (self) != "undefined") {_RecordType("<713,717,25>",(self)); Inst9++; } } catch(e) {}

try { if (Inst10 <= 1000 && typeof (myFunc) != "undefined") {_RecordType("<736,742,27>",(myFunc)); Inst10++; } } catch(e) {}
function myFunc() {
  var hidden = 'aaa';
try { if (Inst11 <= 1000 && typeof (hidden) != "undefined") {_RecordType("<753,759,28>",(hidden)); Inst11++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (insideFunc) != "undefined") {_RecordType("<771,781,29>",(insideFunc)); Inst12++; } } catch(e) {}
  insideFunc();

try { if (Inst13 <= 1000 && typeof (self.runOnce) != "undefined") {_RecordType("<793,805,31>",(self.runOnce)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (self) != "undefined") {_RecordType("<793,797,31>",(self)); Inst14++; } } catch(e) {}
  if (!self.runOnce) {
    var hidden = 'bbb';
try { if (Inst15 <= 1000 && typeof (hidden) != "undefined") {_RecordType("<817,823,32>",(hidden)); Inst15++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (insideFunc) != "undefined") {_RecordType("<856,866,33>",(insideFunc)); Inst18++; } } catch(e) {}
    self.outSideFunc = insideFunc;
try { if (Inst16 <= 1000 && typeof (self.outSideFunc) != "undefined") {_RecordType("<837,853,33>",(self.outSideFunc)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (self) != "undefined") {_RecordType("<837,841,33>",(self)); Inst17++; } } catch(e) {}
    self.runOnce = true;
try { if (Inst19 <= 1000 && typeof (self.runOnce) != "undefined") {_RecordType("<872,884,34>",(self.runOnce)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (self) != "undefined") {_RecordType("<872,876,34>",(self)); Inst20++; } } catch(e) {}
  } else {
    var hidden = 'ccc';
try { if (Inst21 <= 1000 && typeof (hidden) != "undefined") {_RecordType("<912,918,36>",(hidden)); Inst21++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (insideFunc) != "undefined") {_RecordType("<951,961,37>",(insideFunc)); Inst24++; } } catch(e) {}
    self.outSideFunc = insideFunc;
try { if (Inst22 <= 1000 && typeof (self.outSideFunc) != "undefined") {_RecordType("<932,948,37>",(self.outSideFunc)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (self) != "undefined") {_RecordType("<932,936,37>",(self)); Inst23++; } } catch(e) {}
  }

try { if (Inst25 <= 1000 && typeof (insideFunc) != "undefined") {_RecordType("<979,989,40>",(insideFunc)); Inst25++; } } catch(e) {}
  function insideFunc() {
try { if (Inst27 <= 1000 && typeof (hidden) != "undefined") {_RecordType("<1007,1013,41>",(hidden)); Inst27++; } } catch(e) {}
    actual = hidden;
try { if (Inst26 <= 1000 && typeof (actual) != "undefined") {_RecordType("<998,1004,41>",(actual)); Inst26++; } } catch(e) {}
  }
}

try { if (Inst29 <= 1000 && typeof (inSection) != "undefined") {_RecordType("<1031,1040,45>",(inSection)); Inst29++; } } catch(e) {}
status = inSection(1);
try { if (Inst28 <= 1000 && typeof (status) != "undefined") {_RecordType("<1022,1028,45>",(status)); Inst28++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (myFunc) != "undefined") {_RecordType("<1045,1051,46>",(myFunc)); Inst30++; } } catch(e) {}
myFunc(); // this sets |actual|

expect = 'aaa';
try { if (Inst31 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1078,1084,48>",(expect)); Inst31++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (addThis) != "undefined") {_RecordType("<1094,1101,49>",(addThis)); Inst32++; } } catch(e) {}
addThis();
try { if (Inst34 <= 1000 && typeof (inSection) != "undefined") {_RecordType("<1114,1123,50>",(inSection)); Inst34++; } } catch(e) {}
status = inSection(2);
try { if (Inst33 <= 1000 && typeof (status) != "undefined") {_RecordType("<1105,1111,50>",(status)); Inst33++; } } catch(e) {}
try { if (Inst35 <= 1000 && typeof (outSideFunc) != "undefined") {_RecordType("<1128,1139,51>",(outSideFunc)); Inst35++; } } catch(e) {}
outSideFunc(); // sets |actual|

expect = 'bbb';
try { if (Inst36 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1161,1167,53>",(expect)); Inst36++; } } catch(e) {}
try { if (Inst37 <= 1000 && typeof (addThis) != "undefined") {_RecordType("<1177,1184,54>",(addThis)); Inst37++; } } catch(e) {}
addThis();
try { if (Inst39 <= 1000 && typeof (inSection) != "undefined") {_RecordType("<1197,1206,55>",(inSection)); Inst39++; } } catch(e) {}
status = inSection(3);
try { if (Inst38 <= 1000 && typeof (status) != "undefined") {_RecordType("<1188,1194,55>",(status)); Inst38++; } } catch(e) {}
try { if (Inst40 <= 1000 && typeof (myFunc) != "undefined") {_RecordType("<1211,1217,56>",(myFunc)); Inst40++; } } catch(e) {}
myFunc(); // sets |actual|

expect = 'aaa';
try { if (Inst41 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1239,1245,58>",(expect)); Inst41++; } } catch(e) {}
try { if (Inst42 <= 1000 && typeof (addThis) != "undefined") {_RecordType("<1255,1262,59>",(addThis)); Inst42++; } } catch(e) {}
addThis();
try { if (Inst44 <= 1000 && typeof (inSection) != "undefined") {_RecordType("<1275,1284,60>",(inSection)); Inst44++; } } catch(e) {}
status = inSection(4);
try { if (Inst43 <= 1000 && typeof (status) != "undefined") {_RecordType("<1266,1272,60>",(status)); Inst43++; } } catch(e) {}
try { if (Inst45 <= 1000 && typeof (outSideFunc) != "undefined") {_RecordType("<1289,1300,61>",(outSideFunc)); Inst45++; } } catch(e) {}
outSideFunc(); // sets |actual|

expect = 'ccc';
try { if (Inst46 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1322,1328,63>",(expect)); Inst46++; } } catch(e) {}
try { if (Inst47 <= 1000 && typeof (addThis) != "undefined") {_RecordType("<1338,1345,64>",(addThis)); Inst47++; } } catch(e) {}
addThis(); //-----------------------------------------------------------------------------

try { if (Inst48 <= 1000 && typeof (test) != "undefined") {_RecordType("<1430,1434,66>",(test)); Inst48++; } } catch(e) {}
test(); //-----------------------------------------------------------------------------

try { if (Inst49 <= 1000 && typeof (addThis) != "undefined") {_RecordType("<1528,1535,68>",(addThis)); Inst49++; } } catch(e) {}
function addThis() {
try { if (Inst52 <= 1000 && typeof (status) != "undefined") {_RecordType("<1564,1570,69>",(status)); Inst52++; } } catch(e) {}
  statusitems[UBound] = status;
try { if (Inst50 <= 1000 && typeof (statusitems[UBound]) != "undefined") {_RecordType("<1542,1561,69>",(statusitems[UBound])); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (statusitems) != "undefined") {_RecordType("<1542,1553,69>",(statusitems)); Inst51++; } } catch(e) {}
try { if (Inst55 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1597,1603,70>",(actual)); Inst55++; } } catch(e) {}
  actualvalues[UBound] = actual;
try { if (Inst53 <= 1000 && typeof (actualvalues[UBound]) != "undefined") {_RecordType("<1574,1594,70>",(actualvalues[UBound])); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (actualvalues) != "undefined") {_RecordType("<1574,1586,70>",(actualvalues)); Inst54++; } } catch(e) {}
try { if (Inst58 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1632,1638,71>",(expect)); Inst58++; } } catch(e) {}
  expectedvalues[UBound] = expect;
try { if (Inst56 <= 1000 && typeof (expectedvalues[UBound]) != "undefined") {_RecordType("<1607,1629,71>",(expectedvalues[UBound])); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (expectedvalues) != "undefined") {_RecordType("<1607,1621,71>",(expectedvalues)); Inst57++; } } catch(e) {}
try { if (Inst59 <= 1000 && typeof (UBound) != "undefined") {_RecordType("<1642,1648,72>",(UBound)); Inst59++; } } catch(e) {}
  UBound++;
}

try { if (Inst60 <= 1000 && typeof (test) != "undefined") {_RecordType("<1664,1668,75>",(test)); Inst60++; } } catch(e) {}
function test() {
try { if (Inst61 <= 1000 && typeof (printBugNumber) != "undefined") {_RecordType("<1675,1689,76>",(printBugNumber)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<1690,1699,76>",(BUGNUMBER)); Inst62++; } } catch(e) {}
  printBugNumber(BUGNUMBER);
try { if (Inst63 <= 1000 && typeof (printStatus) != "undefined") {_RecordType("<1704,1715,77>",(printStatus)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (summary) != "undefined") {_RecordType("<1716,1723,77>",(summary)); Inst64++; } } catch(e) {}
  printStatus(summary);

  for (var i = 0; i < UBound; i++) {
try { if (Inst65 <= 1000 && typeof (i) != "undefined") {_RecordType("<1738,1739,79>",(i)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (i) != "undefined") {_RecordType("<1745,1746,79>",(i)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (UBound) != "undefined") {_RecordType("<1749,1755,79>",(UBound)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (i) != "undefined") {_RecordType("<1757,1758,79>",(i)); Inst68++; } } catch(e) {}
try { if (Inst69 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1768,1781,80>",(reportCompare)); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (expectedvalues[i]) != "undefined") {_RecordType("<1782,1799,80>",(expectedvalues[i])); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (expectedvalues) != "undefined") {_RecordType("<1782,1796,80>",(expectedvalues)); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (actualvalues[i]) != "undefined") {_RecordType("<1801,1816,80>",(actualvalues[i])); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (actualvalues) != "undefined") {_RecordType("<1801,1813,80>",(actualvalues)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (statusitems[i]) != "undefined") {_RecordType("<1818,1832,80>",(statusitems[i])); Inst74++; } } catch(e) {}try { if (Inst75 <= 1000 && typeof (statusitems) != "undefined") {_RecordType("<1818,1829,80>",(statusitems)); Inst75++; } } catch(e) {}
    reportCompare(expectedvalues[i], actualvalues[i], statusitems[i]);
  }
}

