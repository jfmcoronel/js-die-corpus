var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* Any copyright is dedicated to the Public Domain.
 * http://creativecommons.org/licenses/publicdomain/ */
// Reflect.ownKeys(obj) returns an array of an object's own property keys.
// Test that Reflect.ownKeys gets the expected result when applied to various
// objects. (These tests also check the basics: that the result is an array,
// that its prototype is correct, etc.)
try { if (Inst1 <= 1000 && typeof (Symbol.for) != "undefined") {_RecordType("<388,398,7>",(Symbol.for)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<388,394,7>",(Symbol)); Inst2++; } } catch(e) {}
var sym = Symbol.for("comet");
try { if (Inst0 <= 1000 && typeof (sym) != "undefined") {_RecordType("<382,385,7>",(sym)); Inst0++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (Symbol.for) != "undefined") {_RecordType("<420,430,8>",(Symbol.for)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<420,426,8>",(Symbol)); Inst5++; } } catch(e) {}
var sym2 = Symbol.for("meteor");
try { if (Inst3 <= 1000 && typeof (sym2) != "undefined") {_RecordType("<413,417,8>",(sym2)); Inst3++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (Int8Array) != "undefined") {_RecordType("<584,593,20>",(Int8Array)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<646,651,23>",(Proxy)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (sym) != "undefined") {_RecordType("<734,737,31>",(sym)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (sym) != "undefined") {_RecordType("<1018,1021,46>",(sym)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (sym2) != "undefined") {_RecordType("<1023,1027,46>",(sym2)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (newGlobal().Math) != "undefined") {_RecordType("<1074,1090,49>",(newGlobal().Math)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (newGlobal) != "undefined") {_RecordType("<1074,1083,49>",(newGlobal)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Reflect.ownKeys) != "undefined") {_RecordType("<1131,1146,51>",(Reflect.ownKeys)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<1131,1138,51>",(Reflect)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1147,1151,51>",(Math)); Inst16++; } } catch(e) {}
var cases = [{
  object: {
    z: 3,
    y: 2,
    x: 1
  },
  keys: ["z", "y", "x"]
}, {
  object: [],
  keys: ["length"]
}, {
  object: new Int8Array(4),
  keys: ["0", "1", "2", "3"]
}, {
  object: new Proxy({
    a: 7
  }, {}),
  keys: ["a"]
}, {
  object: {
    [sym]: "ok"
  },
  keys: [sym]
}, {
  object: {
    [sym]: 0,
    // test 9.1.12 ordering
    "str": 0,
    "773": 0,
    "0": 0,
    [sym2]: 0,
    "-1": 0,
    "8": 0,
    "second str": 0
  },
  keys: ["0", "8", "773", // indexes in numeric order
  "str", "-1", "second str", // strings in insertion order
  sym, sym2]
}, // symbols in insertion order
{
  object: newGlobal().Math,
  // cross-compartment wrapper
  keys: Reflect.ownKeys(Math)
}];
try { if (Inst6 <= 1000 && typeof (cases) != "undefined") {_RecordType("<446,451,9>",(cases)); Inst6++; } } catch(e) {}

for (var {
  object,
  keys
} of cases) {
try { if (Inst17 <= 1000 && typeof (object) != "undefined") {_RecordType("<1171,1177,55>",(object)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (keys) != "undefined") {_RecordType("<1181,1185,56>",(keys)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (cases) != "undefined") {_RecordType("<1191,1196,57>",(cases)); Inst19++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (Reflect.ownKeys) != "undefined") {_RecordType("<1202,1217,58>",(Reflect.ownKeys)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<1202,1209,58>",(Reflect)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (object) != "undefined") {_RecordType("<1218,1224,58>",(object)); Inst22++; } } catch(e) {}
  Reflect.ownKeys(object);
try { if (Inst23 <= 1000 && typeof (keys) != "undefined") {_RecordType("<1229,1233,59>",(keys)); Inst23++; } } catch(e) {}
  keys;
} // Reflect.ownKeys() creates a new array each time it is called.


var object = {},
    keys = [];
try { if (Inst24 <= 1000 && typeof (object) != "undefined") {_RecordType("<1308,1314,63>",(object)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (keys) != "undefined") {_RecordType("<1325,1329,64>",(keys)); Inst25++; } } catch(e) {}

for (var i = 0; i < 3; i++) {
try { if (Inst26 <= 1000 && typeof (i) != "undefined") {_RecordType("<1346,1347,66>",(i)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (i) != "undefined") {_RecordType("<1353,1354,66>",(i)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (i) != "undefined") {_RecordType("<1360,1361,66>",(i)); Inst28++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (Reflect.ownKeys) != "undefined") {_RecordType("<1383,1398,67>",(Reflect.ownKeys)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<1383,1390,67>",(Reflect)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (object) != "undefined") {_RecordType("<1399,1405,67>",(object)); Inst32++; } } catch(e) {}
  var newKeys = Reflect.ownKeys(object);
try { if (Inst29 <= 1000 && typeof (newKeys) != "undefined") {_RecordType("<1373,1380,67>",(newKeys)); Inst29++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (newKeys) != "undefined") {_RecordType("<1410,1417,68>",(newKeys)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (keys) != "undefined") {_RecordType("<1422,1426,68>",(keys)); Inst34++; } } catch(e) {}
  newKeys !== keys;
  true;
try { if (Inst36 <= 1000 && typeof (newKeys) != "undefined") {_RecordType("<1445,1452,70>",(newKeys)); Inst36++; } } catch(e) {}
  keys = newKeys;
try { if (Inst35 <= 1000 && typeof (keys) != "undefined") {_RecordType("<1438,1442,70>",(keys)); Inst35++; } } catch(e) {}
} // Proxy behavior with successful ownKeys() handler


keys = ["str", "0"];
try { if (Inst37 <= 1000 && typeof (keys) != "undefined") {_RecordType("<1510,1514,74>",(keys)); Inst37++; } } catch(e) {}
obj = {};
try { if (Inst38 <= 1000 && typeof (obj) != "undefined") {_RecordType("<1531,1534,75>",(obj)); Inst38++; } } catch(e) {}
try { if (Inst40 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<1553,1558,76>",(Proxy)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (obj) != "undefined") {_RecordType("<1559,1562,76>",(obj)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (ownKeys) != "undefined") {_RecordType("<1568,1575,77>",(ownKeys)); Inst42++; } } catch(e) {}
proxy = new Proxy(obj, {
  ownKeys() {
try { if (Inst43 <= 1000 && typeof (keys) != "undefined") {_RecordType("<1591,1595,78>",(keys)); Inst43++; } } catch(e) {}
    return keys;
  }

});
try { if (Inst39 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<1541,1546,76>",(proxy)); Inst39++; } } catch(e) {}
try { if (Inst45 <= 1000 && typeof (Reflect.ownKeys) != "undefined") {_RecordType("<1619,1634,82>",(Reflect.ownKeys)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<1619,1626,82>",(Reflect)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<1635,1640,82>",(proxy)); Inst47++; } } catch(e) {}
var actual = Reflect.ownKeys(proxy);
try { if (Inst44 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1610,1616,82>",(actual)); Inst44++; } } catch(e) {}
try { if (Inst48 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1643,1649,83>",(actual)); Inst48++; } } catch(e) {}
actual;
try { if (Inst49 <= 1000 && typeof (keys) != "undefined") {_RecordType("<1651,1655,84>",(keys)); Inst49++; } } catch(e) {}
keys;
try { if (Inst50 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1657,1663,85>",(actual)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (keys) != "undefined") {_RecordType("<1668,1672,85>",(keys)); Inst51++; } } catch(e) {}
actual !== keys;
true;
// but not the same object
// If a proxy breaks invariants, a TypeError is thrown.
try { if (Inst53 <= 1000 && typeof (Object.preventExtensions) != "undefined") {_RecordType("<1773,1797,89>",(Object.preventExtensions)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1773,1779,89>",(Object)); Inst54++; } } catch(e) {}
var obj = Object.preventExtensions({});
try { if (Inst52 <= 1000 && typeof (obj) != "undefined") {_RecordType("<1767,1770,89>",(obj)); Inst52++; } } catch(e) {}
try { if (Inst56 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<1819,1824,90>",(Proxy)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (obj) != "undefined") {_RecordType("<1825,1828,90>",(obj)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (ownKeys) != "undefined") {_RecordType("<1834,1841,91>",(ownKeys)); Inst58++; } } catch(e) {}
var proxy = new Proxy(obj, {
  ownKeys() {
    return ["something"];
  }

});
try { if (Inst55 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<1807,1812,90>",(proxy)); Inst55++; } } catch(e) {}

try { if (Inst59 <= 1000 && typeof (Reflect.ownKeys) != "undefined") {_RecordType("<1889,1904,97>",(Reflect.ownKeys)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<1889,1896,97>",(Reflect)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<1905,1910,97>",(proxy)); Inst61++; } } catch(e) {}
(() => Reflect.ownKeys(proxy))();

try { if (Inst62 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<1917,1926,99>",(TypeError)); Inst62++; } } catch(e) {}
TypeError;
// For more Reflect.ownKeys tests, see target.js.
try { if (Inst63 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1978,1991,101>",(reportCompare)); Inst63++; } } catch(e) {}
reportCompare(0, 0);

