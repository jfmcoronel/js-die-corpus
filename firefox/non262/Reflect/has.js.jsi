var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* Any copyright is dedicated to the Public Domain.
 * http://creativecommons.org/licenses/publicdomain/ */
// Reflect.has is identical to the `in` operator.
try { if (Inst0 <= 1000 && typeof (Reflect.has) != "undefined") {_RecordType("<158,169,4>",(Reflect.has)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<158,165,4>",(Reflect)); Inst1++; } } catch(e) {}
Reflect.has({
  x: 0
}, "x");
true;
try { if (Inst2 <= 1000 && typeof (Reflect.has) != "undefined") {_RecordType("<194,205,8>",(Reflect.has)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<194,201,8>",(Reflect)); Inst3++; } } catch(e) {}
Reflect.has({
  x: 0
}, "y");
false;
try { if (Inst4 <= 1000 && typeof (Reflect.has) != "undefined") {_RecordType("<231,242,12>",(Reflect.has)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<231,238,12>",(Reflect)); Inst5++; } } catch(e) {}
Reflect.has({
  x: 0
}, "toString");
true;
// The target can be an array; Reflect.has works on array elements.
var arr = ["zero"];
try { if (Inst6 <= 1000 && typeof (arr) != "undefined") {_RecordType("<346,349,17>",(arr)); Inst6++; } } catch(e) {}
arr[10000] = 0;
try { if (Inst7 <= 1000 && typeof (arr[10000]) != "undefined") {_RecordType("<362,372,18>",(arr[10000])); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (arr) != "undefined") {_RecordType("<362,365,18>",(arr)); Inst8++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (Reflect.has) != "undefined") {_RecordType("<378,389,19>",(Reflect.has)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<378,385,19>",(Reflect)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (arr) != "undefined") {_RecordType("<390,393,19>",(arr)); Inst11++; } } catch(e) {}
Reflect.has(arr, "10000");
true;
try { if (Inst12 <= 1000 && typeof (Reflect.has) != "undefined") {_RecordType("<411,422,21>",(Reflect.has)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<411,418,21>",(Reflect)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (arr) != "undefined") {_RecordType("<423,426,21>",(arr)); Inst14++; } } catch(e) {}
Reflect.has(arr, 10000);
true;
try { if (Inst15 <= 1000 && typeof (Reflect.has) != "undefined") {_RecordType("<442,453,23>",(Reflect.has)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<442,449,23>",(Reflect)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (arr) != "undefined") {_RecordType("<454,457,23>",(arr)); Inst17++; } } catch(e) {}
Reflect.has(arr, "-0");
false;
try { if (Inst18 <= 1000 && typeof (Reflect.has) != "undefined") {_RecordType("<473,484,25>",(Reflect.has)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<473,480,25>",(Reflect)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (arr) != "undefined") {_RecordType("<485,488,25>",(arr)); Inst20++; } } catch(e) {}
Reflect.has(arr, -0);
true;
// And string objects (though not string primitives; see target.js).
try { if (Inst22 <= 1000 && typeof (String) != "undefined") {_RecordType("<584,590,28>",(String)); Inst22++; } } catch(e) {}
var str = new String("hello");
try { if (Inst21 <= 1000 && typeof (str) != "undefined") {_RecordType("<574,577,28>",(str)); Inst21++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (Reflect.has) != "undefined") {_RecordType("<601,612,29>",(Reflect.has)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<601,608,29>",(Reflect)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (str) != "undefined") {_RecordType("<613,616,29>",(str)); Inst25++; } } catch(e) {}
Reflect.has(str, "4");
true;
try { if (Inst26 <= 1000 && typeof (Reflect.has) != "undefined") {_RecordType("<630,641,31>",(Reflect.has)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<630,637,31>",(Reflect)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (str) != "undefined") {_RecordType("<642,645,31>",(str)); Inst28++; } } catch(e) {}
Reflect.has(str, "-0");
false;
try { if (Inst29 <= 1000 && typeof (Reflect.has) != "undefined") {_RecordType("<661,672,33>",(Reflect.has)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<661,668,33>",(Reflect)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (str) != "undefined") {_RecordType("<673,676,33>",(str)); Inst31++; } } catch(e) {}
Reflect.has(str, -0);
true;
// Proxy without .has() handler method
try { if (Inst33 <= 1000 && typeof (prop) != "undefined") {_RecordType("<746,750,37>",(prop)); Inst33++; } } catch(e) {}
var obj = {
  get prop() {
    ;
  }

};
try { if (Inst32 <= 1000 && typeof (obj) != "undefined") {_RecordType("<732,735,36>",(obj)); Inst32++; } } catch(e) {}

for (var i = 0; i < 2; i++) {
try { if (Inst34 <= 1000 && typeof (i) != "undefined") {_RecordType("<779,780,43>",(i)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (i) != "undefined") {_RecordType("<786,787,43>",(i)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (i) != "undefined") {_RecordType("<793,794,43>",(i)); Inst36++; } } catch(e) {}
try { if (Inst38 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<812,817,44>",(Proxy)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (obj) != "undefined") {_RecordType("<818,821,44>",(obj)); Inst39++; } } catch(e) {}
  obj = new Proxy(obj, {});
try { if (Inst37 <= 1000 && typeof (obj) != "undefined") {_RecordType("<802,805,44>",(obj)); Inst37++; } } catch(e) {}
try { if (Inst40 <= 1000 && typeof (Reflect.has) != "undefined") {_RecordType("<830,841,45>",(Reflect.has)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<830,837,45>",(Reflect)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (obj) != "undefined") {_RecordType("<842,845,45>",(obj)); Inst42++; } } catch(e) {}
  Reflect.has(obj, "prop");
  true;
try { if (Inst43 <= 1000 && typeof (Reflect.has) != "undefined") {_RecordType("<866,877,47>",(Reflect.has)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<866,873,47>",(Reflect)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (obj) != "undefined") {_RecordType("<878,881,47>",(obj)); Inst45++; } } catch(e) {}
  Reflect.has(obj, "nope");
  false;
} // Proxy with .has() handler method


try { if (Inst47 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<951,956,52>",(Proxy)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (has) != "undefined") {_RecordType("<965,968,53>",(has)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (t) != "undefined") {_RecordType("<969,970,53>",(t)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (k) != "undefined") {_RecordType("<972,973,53>",(k)); Inst50++; } } catch(e) {}
obj = new Proxy({}, {
  has(t, k) {
try { if (Inst51 <= 1000 && typeof (k.startsWith) != "undefined") {_RecordType("<988,1000,54>",(k.startsWith)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (k) != "undefined") {_RecordType("<988,989,54>",(k)); Inst52++; } } catch(e) {}
    return k.startsWith("door");
  }

});
try { if (Inst46 <= 1000 && typeof (obj) != "undefined") {_RecordType("<941,944,52>",(obj)); Inst46++; } } catch(e) {}
try { if (Inst53 <= 1000 && typeof (Reflect.has) != "undefined") {_RecordType("<1019,1030,58>",(Reflect.has)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<1019,1026,58>",(Reflect)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (obj) != "undefined") {_RecordType("<1031,1034,58>",(obj)); Inst55++; } } catch(e) {}
Reflect.has(obj, "doorbell");
true;
try { if (Inst56 <= 1000 && typeof (Reflect.has) != "undefined") {_RecordType("<1055,1066,60>",(Reflect.has)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<1055,1062,60>",(Reflect)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (obj) != "undefined") {_RecordType("<1067,1070,60>",(obj)); Inst58++; } } catch(e) {}
Reflect.has(obj, "dormitory");
false;
// For more Reflect.has tests, see target.js and propertyKeys.js.
try { if (Inst59 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1159,1172,63>",(reportCompare)); Inst59++; } } catch(e) {}
reportCompare(0, 0);

