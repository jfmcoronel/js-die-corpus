var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* Any copyright is dedicated to the Public Domain.
 * http://creativecommons.org/licenses/publicdomain/ */
// Reflect.deleteProperty deletes properties.
var obj = {
  x: 1,
  y: 2
};
try { if (Inst0 <= 1000 && typeof (obj) != "undefined") {_RecordType("<158,161,4>",(obj)); Inst0++; } } catch(e) {}
try { if (Inst1 <= 1000 && typeof (Reflect.deleteProperty) != "undefined") {_RecordType("<184,206,8>",(Reflect.deleteProperty)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<184,191,8>",(Reflect)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (obj) != "undefined") {_RecordType("<207,210,8>",(obj)); Inst3++; } } catch(e) {}
Reflect.deleteProperty(obj, "x");
true;
try { if (Inst4 <= 1000 && typeof (obj) != "undefined") {_RecordType("<224,227,10>",(obj)); Inst4++; } } catch(e) {}
obj;
({
  y: 2
});
var arr = [1, 1, 2, 3, 5];
try { if (Inst5 <= 1000 && typeof (arr) != "undefined") {_RecordType("<247,250,14>",(arr)); Inst5++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (Reflect.deleteProperty) != "undefined") {_RecordType("<270,292,15>",(Reflect.deleteProperty)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<270,277,15>",(Reflect)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (arr) != "undefined") {_RecordType("<293,296,15>",(arr)); Inst8++; } } catch(e) {}
Reflect.deleteProperty(arr, "3");
true;
try { if (Inst9 <= 1000 && typeof (arr) != "undefined") {_RecordType("<310,313,17>",(arr)); Inst9++; } } catch(e) {}
arr;
[1, 1, 2,, 5];
try { if (Inst10 <= 1000 && typeof (Reflect.deleteProperty) != "undefined") {_RecordType("<330,352,19>",(Reflect.deleteProperty)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<330,337,19>",(Reflect)); Inst11++; } } catch(e) {}
Reflect.deleteProperty({}, "q");
true;
// Or if it's inherited.
var proto = {
  x: 1
};
try { if (Inst12 <= 1000 && typeof (proto) != "undefined") {_RecordType("<398,403,22>",(proto)); Inst12++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (Reflect.deleteProperty) != "undefined") {_RecordType("<418,440,25>",(Reflect.deleteProperty)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<418,425,25>",(Reflect)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Object.create) != "undefined") {_RecordType("<441,454,25>",(Object.create)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Object) != "undefined") {_RecordType("<441,447,25>",(Object)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (proto) != "undefined") {_RecordType("<455,460,25>",(proto)); Inst17++; } } catch(e) {}
Reflect.deleteProperty(Object.create(proto), "x");
true;
try { if (Inst18 <= 1000 && typeof (proto.x) != "undefined") {_RecordType("<475,482,27>",(proto.x)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (proto) != "undefined") {_RecordType("<475,480,27>",(proto)); Inst19++; } } catch(e) {}
proto.x;
1;
// Return false if asked to delete a non-configurable property.
var arr = [];
try { if (Inst20 <= 1000 && typeof (arr) != "undefined") {_RecordType("<555,558,30>",(arr)); Inst20++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (Reflect.deleteProperty) != "undefined") {_RecordType("<565,587,31>",(Reflect.deleteProperty)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<565,572,31>",(Reflect)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (arr) != "undefined") {_RecordType("<588,591,31>",(arr)); Inst23++; } } catch(e) {}
Reflect.deleteProperty(arr, "length");
false;
try { if (Inst24 <= 1000 && typeof (arr.hasOwnProperty) != "undefined") {_RecordType("<611,629,33>",(arr.hasOwnProperty)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (arr) != "undefined") {_RecordType("<611,614,33>",(arr)); Inst25++; } } catch(e) {}
arr.hasOwnProperty("length");
true;
try { if (Inst26 <= 1000 && typeof (Reflect.deleteProperty) != "undefined") {_RecordType("<647,669,35>",(Reflect.deleteProperty)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<647,654,35>",(Reflect)); Inst27++; } } catch(e) {}
Reflect.deleteProperty(this, "undefined");
false;
try { if (Inst28 <= 1000 && typeof (this.undefined) != "undefined") {_RecordType("<697,711,37>",(this.undefined)); Inst28++; } } catch(e) {}
this.undefined;
void 0;
// Return false if a Proxy's deleteProperty handler returns a false-y value.
var value;
try { if (Inst29 <= 1000 && typeof (value) != "undefined") {_RecordType("<802,807,40>",(value)); Inst29++; } } catch(e) {}
try { if (Inst31 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<825,830,41>",(Proxy)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (deleteProperty) != "undefined") {_RecordType("<839,853,42>",(deleteProperty)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (t) != "undefined") {_RecordType("<854,855,42>",(t)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (k) != "undefined") {_RecordType("<857,858,42>",(k)); Inst34++; } } catch(e) {}
var proxy = new Proxy({}, {
  deleteProperty(t, k) {
try { if (Inst35 <= 1000 && typeof (value) != "undefined") {_RecordType("<873,878,43>",(value)); Inst35++; } } catch(e) {}
    return value;
  }

});
try { if (Inst30 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<813,818,41>",(proxy)); Inst30++; } } catch(e) {}

for (value of [true, false, 0, "something", {}]) {
try { if (Inst36 <= 1000 && typeof (value) != "undefined") {_RecordType("<895,900,48>",(value)); Inst36++; } } catch(e) {}
try { if (Inst37 <= 1000 && typeof (Reflect.deleteProperty) != "undefined") {_RecordType("<943,965,49>",(Reflect.deleteProperty)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<943,950,49>",(Reflect)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<966,971,49>",(proxy)); Inst39++; } } catch(e) {}
  Reflect.deleteProperty(proxy, "q");
try { if (Inst40 <= 1000 && typeof (value) != "undefined") {_RecordType("<983,988,50>",(value)); Inst40++; } } catch(e) {}
  !!value;
} // If a Proxy's handler method throws, the error is propagated.


try { if (Inst42 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<1070,1075,54>",(Proxy)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (deleteProperty) != "undefined") {_RecordType("<1084,1098,55>",(deleteProperty)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (t) != "undefined") {_RecordType("<1099,1100,55>",(t)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (k) != "undefined") {_RecordType("<1102,1103,55>",(k)); Inst45++; } } catch(e) {}
proxy = new Proxy({}, {
  deleteProperty(t, k) {
    throw "vase";
  }

});
try { if (Inst41 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<1058,1063,54>",(proxy)); Inst41++; } } catch(e) {}

try { if (Inst46 <= 1000 && typeof (Reflect.deleteProperty) != "undefined") {_RecordType("<1142,1164,61>",(Reflect.deleteProperty)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<1142,1149,61>",(Reflect)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<1165,1170,61>",(proxy)); Inst48++; } } catch(e) {}
(() => Reflect.deleteProperty(proxy, "prop"))();

"vase";
// Throw a TypeError if a Proxy's handler method returns true in violation of
// the object invariants.
try { if (Inst50 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<1309,1314,66>",(Proxy)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (Object.freeze) != "undefined") {_RecordType("<1315,1328,66>",(Object.freeze)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1315,1321,66>",(Object)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (deleteProperty) != "undefined") {_RecordType("<1349,1363,69>",(deleteProperty)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (t) != "undefined") {_RecordType("<1364,1365,69>",(t)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (k) != "undefined") {_RecordType("<1367,1368,69>",(k)); Inst55++; } } catch(e) {}
proxy = new Proxy(Object.freeze({
  prop: 1
}), {
  deleteProperty(t, k) {
    return true;
  }

});
try { if (Inst49 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<1297,1302,66>",(proxy)); Inst49++; } } catch(e) {}

try { if (Inst56 <= 1000 && typeof (Reflect.deleteProperty) != "undefined") {_RecordType("<1406,1428,75>",(Reflect.deleteProperty)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<1406,1413,75>",(Reflect)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<1429,1434,75>",(proxy)); Inst58++; } } catch(e) {}
(() => Reflect.deleteProperty(proxy, "prop"))();

try { if (Inst59 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<1449,1458,77>",(TypeError)); Inst59++; } } catch(e) {}
TypeError;

// === Deleting elements from `arguments`
// Non-strict arguments element becomes unmapped
try { if (Inst60 <= 1000 && typeof (f) != "undefined") {_RecordType("<1561,1562,81>",(f)); Inst60++; } } catch(e) {}
function f(x, y, z) {
try { if (Inst61 <= 1000 && typeof (x) != "undefined") {_RecordType("<1563,1564,81>",(x)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (y) != "undefined") {_RecordType("<1566,1567,81>",(y)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (z) != "undefined") {_RecordType("<1569,1570,81>",(z)); Inst63++; } } catch(e) {}
try { if (Inst64 <= 1000 && typeof (Reflect.deleteProperty) != "undefined") {_RecordType("<1576,1598,82>",(Reflect.deleteProperty)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<1576,1583,82>",(Reflect)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<1599,1608,82>",(arguments)); Inst66++; } } catch(e) {}
  Reflect.deleteProperty(arguments, "0");
  true;
  arguments.x = 33;
try { if (Inst67 <= 1000 && typeof (arguments.x) != "undefined") {_RecordType("<1626,1637,84>",(arguments.x)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<1626,1635,84>",(arguments)); Inst68++; } } catch(e) {}
try { if (Inst69 <= 1000 && typeof (x) != "undefined") {_RecordType("<1653,1654,85>",(x)); Inst69++; } } catch(e) {}
  return x;
}

try { if (Inst70 <= 1000 && typeof (f) != "undefined") {_RecordType("<1659,1660,88>",(f)); Inst70++; } } catch(e) {}
f(17, 19, 23);
17;

// Frozen non-strict arguments element
try { if (Inst71 <= 1000 && typeof (testFrozenArguments) != "undefined") {_RecordType("<1727,1746,92>",(testFrozenArguments)); Inst71++; } } catch(e) {}
function testFrozenArguments() {
try { if (Inst72 <= 1000 && typeof (Object.freeze) != "undefined") {_RecordType("<1753,1766,93>",(Object.freeze)); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1753,1759,93>",(Object)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<1767,1776,93>",(arguments)); Inst74++; } } catch(e) {}
  Object.freeze(arguments);
try { if (Inst75 <= 1000 && typeof (Reflect.deleteProperty) != "undefined") {_RecordType("<1781,1803,94>",(Reflect.deleteProperty)); Inst75++; } } catch(e) {}try { if (Inst76 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<1781,1788,94>",(Reflect)); Inst76++; } } catch(e) {}try { if (Inst77 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<1804,1813,94>",(arguments)); Inst77++; } } catch(e) {}
  Reflect.deleteProperty(arguments, "0");
  false;
try { if (Inst78 <= 1000 && typeof (arguments[0]) != "undefined") {_RecordType("<1832,1844,96>",(arguments[0])); Inst78++; } } catch(e) {}try { if (Inst79 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<1832,1841,96>",(arguments)); Inst79++; } } catch(e) {}
  arguments[0];
  "zero";
try { if (Inst80 <= 1000 && typeof (arguments[1]) != "undefined") {_RecordType("<1858,1870,98>",(arguments[1])); Inst80++; } } catch(e) {}try { if (Inst81 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<1858,1867,98>",(arguments)); Inst81++; } } catch(e) {}
  arguments[1];
  "one";
}

try { if (Inst82 <= 1000 && typeof (testFrozenArguments) != "undefined") {_RecordType("<1884,1903,102>",(testFrozenArguments)); Inst82++; } } catch(e) {}
testFrozenArguments("zero", "one"); // For more Reflect.deleteProperty tests, see target.js and propertyKeys.js.

try { if (Inst83 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1998,2011,104>",(reportCompare)); Inst83++; } } catch(e) {}
reportCompare(0, 0);

