var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* Any copyright is dedicated to the Public Domain.
 * http://creativecommons.org/licenses/publicdomain/ */
// Test corner cases involving Reflect methods' propertyKey arguments.
// keys - Array of propertyKey values to be tested.
//
// Each element of this array is a record with these properties:
//
// *   value: a value that will be passed as a property key
//     to the various Reflect methods;
//
// *   expected: (optional) the string or symbol that ToPropertyKey(value)
//     should return. If this is omitted, ToPropertyKey(value) === value.
//
try { if (Inst1 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<618,627,18>",(undefined)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (String) != "undefined") {_RecordType("<816,822,33>",(String)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<861,867,36>",(Symbol)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<889,904,38>",(Symbol.iterator)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<889,895,38>",(Symbol)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Object) != "undefined") {_RecordType("<919,925,40>",(Object)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Symbol.for) != "undefined") {_RecordType("<926,936,40>",(Symbol.for)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<926,932,40>",(Symbol)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Symbol.for) != "undefined") {_RecordType("<960,970,41>",(Symbol.for)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<960,966,41>",(Symbol)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (toString) != "undefined") {_RecordType("<1000,1008,44>",(toString)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (valueOf) != "undefined") {_RecordType("<1045,1052,48>",(valueOf)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<1137,1146,56>",(undefined)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (valueOf) != "undefined") {_RecordType("<1153,1160,58>",(valueOf)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Symbol.toPrimitive) != "undefined") {_RecordType("<1246,1264,66>",(Symbol.toPrimitive)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<1246,1252,66>",(Symbol)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (hint) != "undefined") {_RecordType("<1266,1270,66>",(hint)); Inst17++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Symbol.toPrimitive) != "undefined") {_RecordType("<1347,1365,74>",(Symbol.toPrimitive)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<1347,1353,74>",(Symbol)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (hint) != "undefined") {_RecordType("<1367,1371,74>",(hint)); Inst21++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Symbol.for) != "undefined") {_RecordType("<1430,1440,79>",(Symbol.for)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<1430,1436,79>",(Symbol)); Inst26++; } } catch(e) {}
var keys = [{
  value: null,
  expected: "null"
}, {
  value: undefined,
  expected: "undefined"
}, {
  value: true,
  expected: "true"
}, {
  value: 42,
  expected: "42"
}, {
  value: "string"
}, {
  value: ""
}, {
  value: "string with \0"
}, {
  value: new String("ok"),
  expected: "ok"
}, {
  value: Symbol("sym")
}, {
  value: Symbol.iterator
}, {
  value: Object(Symbol.for("comet")),
  expected: Symbol.for("comet")
}, {
  value: {
    toString() {
      return "key";
    },

    valueOf() {
      return "bad";
    }

  },
  expected: "key"
}, {
  value: {
    toString: undefined,

    valueOf() {
      return "fallback";
    }

  },
  expected: "fallback"
}, {
  value: {
    [Symbol.toPrimitive](hint) {
try { if (Inst18 <= 1000 && typeof (hint) != "undefined") {_RecordType("<1287,1291,67>",(hint)); Inst18++; } } catch(e) {}
      return hint;
    }

  },
  expected: "string"
}, {
  value: {
    [Symbol.toPrimitive](hint) {
try { if (Inst22 <= 1000 && typeof (Symbol.for) != "undefined") {_RecordType("<1388,1398,75>",(Symbol.for)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<1388,1394,75>",(Symbol)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (hint) != "undefined") {_RecordType("<1399,1403,75>",(hint)); Inst24++; } } catch(e) {}
      return Symbol.for(hint);
    }

  },
  expected: Symbol.for("string")
}];
try { if (Inst0 <= 1000 && typeof (keys) != "undefined") {_RecordType("<560,564,14>",(keys)); Inst0++; } } catch(e) {}

for (var {
  value,
  expected
} of keys) {
try { if (Inst27 <= 1000 && typeof (value) != "undefined") {_RecordType("<1469,1474,83>",(value)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (expected) != "undefined") {_RecordType("<1478,1486,84>",(expected)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (keys) != "undefined") {_RecordType("<1492,1496,85>",(keys)); Inst29++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (expected) != "undefined") {_RecordType("<1506,1514,86>",(expected)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<1519,1528,86>",(undefined)); Inst31++; } } catch(e) {}
  if (expected === undefined) {
try { if (Inst33 <= 1000 && typeof (value) != "undefined") {_RecordType("<1547,1552,87>",(value)); Inst33++; } } catch(e) {}
    expected = value;
try { if (Inst32 <= 1000 && typeof (expected) != "undefined") {_RecordType("<1536,1544,87>",(expected)); Inst32++; } } catch(e) {}
  }

  var obj = {};
try { if (Inst34 <= 1000 && typeof (obj) != "undefined") {_RecordType("<1565,1568,90>",(obj)); Inst34++; } } catch(e) {}
try { if (Inst35 <= 1000 && typeof (Reflect.defineProperty) != "undefined") {_RecordType("<1577,1599,91>",(Reflect.defineProperty)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<1577,1584,91>",(Reflect)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (obj) != "undefined") {_RecordType("<1600,1603,91>",(obj)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (value) != "undefined") {_RecordType("<1605,1610,91>",(value)); Inst38++; } } catch(e) {}
  Reflect.defineProperty(obj, value, {
    value: 1,
    configurable: true
  });
  true;
try { if (Inst39 <= 1000 && typeof (Reflect.ownKeys) != "undefined") {_RecordType("<1667,1682,96>",(Reflect.ownKeys)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<1667,1674,96>",(Reflect)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (obj) != "undefined") {_RecordType("<1683,1686,96>",(obj)); Inst41++; } } catch(e) {}
  Reflect.ownKeys(obj);
try { if (Inst42 <= 1000 && typeof (expected) != "undefined") {_RecordType("<1692,1700,97>",(expected)); Inst42++; } } catch(e) {}
  [expected];
try { if (Inst43 <= 1000 && typeof (Reflect.getOwnPropertyDescriptor) != "undefined") {_RecordType("<1705,1737,98>",(Reflect.getOwnPropertyDescriptor)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<1705,1712,98>",(Reflect)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (obj) != "undefined") {_RecordType("<1738,1741,98>",(obj)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (value) != "undefined") {_RecordType("<1743,1748,98>",(value)); Inst46++; } } catch(e) {}
  Reflect.getOwnPropertyDescriptor(obj, value);
  ({
    value: 1,
    writable: false,
    enumerable: false,
    configurable: true
  });
try { if (Inst47 <= 1000 && typeof (Reflect.deleteProperty) != "undefined") {_RecordType("<1845,1867,105>",(Reflect.deleteProperty)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<1845,1852,105>",(Reflect)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (obj) != "undefined") {_RecordType("<1868,1871,105>",(obj)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (value) != "undefined") {_RecordType("<1873,1878,105>",(value)); Inst50++; } } catch(e) {}
  Reflect.deleteProperty(obj, value);
  true;
try { if (Inst51 <= 1000 && typeof (Reflect.has) != "undefined") {_RecordType("<1891,1902,107>",(Reflect.has)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<1891,1898,107>",(Reflect)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (obj) != "undefined") {_RecordType("<1903,1906,107>",(obj)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (value) != "undefined") {_RecordType("<1908,1913,107>",(value)); Inst54++; } } catch(e) {}
  Reflect.has(obj, value);
  false;
try { if (Inst55 <= 1000 && typeof (Reflect.set) != "undefined") {_RecordType("<1927,1938,109>",(Reflect.set)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<1927,1934,109>",(Reflect)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (obj) != "undefined") {_RecordType("<1939,1942,109>",(obj)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (value) != "undefined") {_RecordType("<1944,1949,109>",(value)); Inst58++; } } catch(e) {}
  Reflect.set(obj, value, 113);
  true;
try { if (Inst59 <= 1000 && typeof (obj[expected]) != "undefined") {_RecordType("<1967,1980,111>",(obj[expected])); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (obj) != "undefined") {_RecordType("<1967,1970,111>",(obj)); Inst60++; } } catch(e) {}
  obj[expected];
  113;
try { if (Inst61 <= 1000 && typeof (Reflect.has) != "undefined") {_RecordType("<1991,2002,113>",(Reflect.has)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<1991,1998,113>",(Reflect)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (obj) != "undefined") {_RecordType("<2003,2006,113>",(obj)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (value) != "undefined") {_RecordType("<2008,2013,113>",(value)); Inst64++; } } catch(e) {}
  Reflect.has(obj, value);
  true;
try { if (Inst65 <= 1000 && typeof (Reflect.get) != "undefined") {_RecordType("<2026,2037,115>",(Reflect.get)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<2026,2033,115>",(Reflect)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (obj) != "undefined") {_RecordType("<2038,2041,115>",(obj)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (value) != "undefined") {_RecordType("<2043,2048,115>",(value)); Inst68++; } } catch(e) {}
  Reflect.get(obj, value);
  113;
} // ToPropertyKey can throw.


var exc = {};
try { if (Inst69 <= 1000 && typeof (exc) != "undefined") {_RecordType("<2094,2097,120>",(exc)); Inst69++; } } catch(e) {}
try { if (Inst71 <= 1000 && typeof (toString) != "undefined") {_RecordType("<2121,2129,122>",(toString)); Inst71++; } } catch(e) {}
var badKey = {
  toString() {
try { if (Inst72 <= 1000 && typeof (exc) != "undefined") {_RecordType("<2144,2147,123>",(exc)); Inst72++; } } catch(e) {}
    throw exc;
  }

};
try { if (Inst70 <= 1000 && typeof (badKey) != "undefined") {_RecordType("<2108,2114,121>",(badKey)); Inst70++; } } catch(e) {}
var methodNames = ["defineProperty", "deleteProperty", "has", "get", "getOwnPropertyDescriptor", "set"];
try { if (Inst73 <= 1000 && typeof (methodNames) != "undefined") {_RecordType("<2161,2172,127>",(methodNames)); Inst73++; } } catch(e) {}

for (var name of methodNames) {
try { if (Inst74 <= 1000 && typeof (name) != "undefined") {_RecordType("<2272,2276,129>",(name)); Inst74++; } } catch(e) {}try { if (Inst75 <= 1000 && typeof (methodNames) != "undefined") {_RecordType("<2280,2291,129>",(methodNames)); Inst75++; } } catch(e) {}
try { if (Inst76 <= 1000 && typeof (Reflect[name]) != "undefined") {_RecordType("<2304,2317,130>",(Reflect[name])); Inst76++; } } catch(e) {}try { if (Inst77 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<2304,2311,130>",(Reflect)); Inst77++; } } catch(e) {}try { if (Inst78 <= 1000 && typeof (badKey) != "undefined") {_RecordType("<2322,2328,130>",(badKey)); Inst78++; } } catch(e) {}
  (() => Reflect[name]({}, badKey))();

try { if (Inst79 <= 1000 && typeof (exc) != "undefined") {_RecordType("<2337,2340,132>",(exc)); Inst79++; } } catch(e) {}
  exc;
}

try { if (Inst80 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<2345,2358,135>",(reportCompare)); Inst80++; } } catch(e) {}
reportCompare(0, 0);

