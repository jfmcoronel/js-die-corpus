var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/*
 * Any copyright is dedicated to the Public Domain.
 * http://creativecommons.org/licenses/publicdomain/
 */
var gTestfile = 'proxy-__proto__.js';
try { if (Inst0 <= 1000 && typeof (gTestfile) != "undefined") {_RecordType("<116,125,5>",(gTestfile)); Inst0++; } } catch(e) {}
var BUGNUMBER = 950407;
try { if (Inst1 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<154,163,6>",(BUGNUMBER)); Inst1++; } } catch(e) {}
var summary = "Behavior of __proto__ on ES6 proxies";
try { if (Inst2 <= 1000 && typeof (summary) != "undefined") {_RecordType("<178,185,7>",(summary)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (print) != "undefined") {_RecordType("<228,233,8>",(print)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<234,243,8>",(BUGNUMBER)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (summary) != "undefined") {_RecordType("<253,260,8>",(summary)); Inst5++; } } catch(e) {}
print(BUGNUMBER + ": " + summary);
/**************
 * BEGIN TEST *
 **************/

try { if (Inst7 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<329,360,13>",(Object.getOwnPropertyDescriptor)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Object) != "undefined") {_RecordType("<329,335,13>",(Object)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<361,377,13>",(Object.prototype)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Object) != "undefined") {_RecordType("<361,367,13>",(Object)); Inst10++; } } catch(e) {}
var protoDesc = Object.getOwnPropertyDescriptor(Object.prototype, "__proto__");
try { if (Inst6 <= 1000 && typeof (protoDesc) != "undefined") {_RecordType("<317,326,13>",(protoDesc)); Inst6++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (protoDesc.get) != "undefined") {_RecordType("<411,424,14>",(protoDesc.get)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (protoDesc) != "undefined") {_RecordType("<411,420,14>",(protoDesc)); Inst13++; } } catch(e) {}
var protoGetter = protoDesc.get;
try { if (Inst11 <= 1000 && typeof (protoGetter) != "undefined") {_RecordType("<397,408,14>",(protoGetter)); Inst11++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (protoDesc.set) != "undefined") {_RecordType("<444,457,15>",(protoDesc.set)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (protoDesc) != "undefined") {_RecordType("<444,453,15>",(protoDesc)); Inst16++; } } catch(e) {}
var protoSetter = protoDesc.set;
try { if (Inst14 <= 1000 && typeof (protoSetter) != "undefined") {_RecordType("<430,441,15>",(protoSetter)); Inst14++; } } catch(e) {}

try { if (Inst17 <= 1000 && typeof (testProxy) != "undefined") {_RecordType("<469,478,17>",(testProxy)); Inst17++; } } catch(e) {}
function testProxy(target, initialProto) {
try { if (Inst18 <= 1000 && typeof (target) != "undefined") {_RecordType("<479,485,17>",(target)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (initialProto) != "undefined") {_RecordType("<487,499,17>",(initialProto)); Inst19++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (print) != "undefined") {_RecordType("<505,510,18>",(print)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (target) != "undefined") {_RecordType("<557,563,18>",(target)); Inst21++; } } catch(e) {}
  print("Now testing behavior for new Proxy(" + ("" + target) + ", {})");
try { if (Inst23 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<594,599,19>",(Proxy)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (target) != "undefined") {_RecordType("<600,606,19>",(target)); Inst24++; } } catch(e) {}
  var pobj = new Proxy(target, {}); // Check [[Prototype]] before attempted mutation
try { if (Inst22 <= 1000 && typeof (pobj) != "undefined") {_RecordType("<583,587,19>",(pobj)); Inst22++; } } catch(e) {}

try { if (Inst25 <= 1000 && typeof (Object.getPrototypeOf) != "undefined") {_RecordType("<665,686,21>",(Object.getPrototypeOf)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Object) != "undefined") {_RecordType("<665,671,21>",(Object)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (pobj) != "undefined") {_RecordType("<687,691,21>",(pobj)); Inst27++; } } catch(e) {}
  Object.getPrototypeOf(pobj);
try { if (Inst28 <= 1000 && typeof (initialProto) != "undefined") {_RecordType("<696,708,22>",(initialProto)); Inst28++; } } catch(e) {}
  initialProto;
try { if (Inst29 <= 1000 && typeof (protoGetter.call) != "undefined") {_RecordType("<712,728,23>",(protoGetter.call)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (protoGetter) != "undefined") {_RecordType("<712,723,23>",(protoGetter)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (pobj) != "undefined") {_RecordType("<729,733,23>",(pobj)); Inst31++; } } catch(e) {}
  protoGetter.call(pobj);
try { if (Inst32 <= 1000 && typeof (initialProto) != "undefined") {_RecordType("<738,750,24>",(initialProto)); Inst32++; } } catch(e) {}
  initialProto;
  // Attempt [[Prototype]] mutation
try { if (Inst33 <= 1000 && typeof (protoSetter.call) != "undefined") {_RecordType("<790,806,26>",(protoSetter.call)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (protoSetter) != "undefined") {_RecordType("<790,801,26>",(protoSetter)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (pobj) != "undefined") {_RecordType("<807,811,26>",(pobj)); Inst35++; } } catch(e) {}
  protoSetter.call(pobj, null); // Check [[Prototype]] after attempted mutation

try { if (Inst36 <= 1000 && typeof (Object.getPrototypeOf) != "undefined") {_RecordType("<871,892,28>",(Object.getPrototypeOf)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (Object) != "undefined") {_RecordType("<871,877,28>",(Object)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (pobj) != "undefined") {_RecordType("<893,897,28>",(pobj)); Inst38++; } } catch(e) {}
  Object.getPrototypeOf(pobj);
  null;
try { if (Inst39 <= 1000 && typeof (protoGetter.call) != "undefined") {_RecordType("<910,926,30>",(protoGetter.call)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (protoGetter) != "undefined") {_RecordType("<910,921,30>",(protoGetter)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (pobj) != "undefined") {_RecordType("<927,931,30>",(pobj)); Inst41++; } } catch(e) {}
  protoGetter.call(pobj);
  null;
try { if (Inst42 <= 1000 && typeof (Object.getPrototypeOf) != "undefined") {_RecordType("<944,965,32>",(Object.getPrototypeOf)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (Object) != "undefined") {_RecordType("<944,950,32>",(Object)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (target) != "undefined") {_RecordType("<966,972,32>",(target)); Inst44++; } } catch(e) {}
  Object.getPrototypeOf(target);
  null;
} // Proxy object with non-null [[Prototype]]


var nonNullProto = {
  toString: function () {
    return "non-null prototype";
  }
};
try { if (Inst45 <= 1000 && typeof (nonNullProto) != "undefined") {_RecordType("<1035,1047,37>",(nonNullProto)); Inst45++; } } catch(e) {}
try { if (Inst47 <= 1000 && typeof (Object.create) != "undefined") {_RecordType("<1131,1144,42>",(Object.create)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1131,1137,42>",(Object)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (nonNullProto) != "undefined") {_RecordType("<1145,1157,42>",(nonNullProto)); Inst49++; } } catch(e) {}
var target = Object.create(nonNullProto);
try { if (Inst46 <= 1000 && typeof (target) != "undefined") {_RecordType("<1122,1128,42>",(target)); Inst46++; } } catch(e) {}
try { if (Inst50 <= 1000 && typeof (testProxy) != "undefined") {_RecordType("<1160,1169,43>",(testProxy)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (target) != "undefined") {_RecordType("<1170,1176,43>",(target)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (nonNullProto) != "undefined") {_RecordType("<1178,1190,43>",(nonNullProto)); Inst52++; } } catch(e) {}
testProxy(target, nonNullProto); // Proxy object with null [[Prototype]]

try { if (Inst54 <= 1000 && typeof (Object.create) != "undefined") {_RecordType("<1243,1256,45>",(Object.create)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1243,1249,45>",(Object)); Inst55++; } } catch(e) {}
target = Object.create(null);
try { if (Inst53 <= 1000 && typeof (target) != "undefined") {_RecordType("<1234,1240,45>",(target)); Inst53++; } } catch(e) {}

target.toString = function () {
  return "null prototype";
};
try { if (Inst56 <= 1000 && typeof (target.toString) != "undefined") {_RecordType("<1265,1280,47>",(target.toString)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (target) != "undefined") {_RecordType("<1265,1271,47>",(target)); Inst57++; } } catch(e) {}

try { if (Inst58 <= 1000 && typeof (testProxy) != "undefined") {_RecordType("<1328,1337,51>",(testProxy)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (target) != "undefined") {_RecordType("<1338,1344,51>",(target)); Inst59++; } } catch(e) {}
testProxy(target, null); // Proxy function with [[Call]]

var callForCallOnly = function () {
  ;
};
try { if (Inst60 <= 1000 && typeof (callForCallOnly) != "undefined") {_RecordType("<1390,1405,53>",(callForCallOnly)); Inst60++; } } catch(e) {}

callForCallOnly.toString = function () {
  return "callable target";
};
try { if (Inst61 <= 1000 && typeof (callForCallOnly.toString) != "undefined") {_RecordType("<1430,1454,57>",(callForCallOnly.toString)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (callForCallOnly) != "undefined") {_RecordType("<1430,1445,57>",(callForCallOnly)); Inst62++; } } catch(e) {}

try { if (Inst63 <= 1000 && typeof (testProxy) != "undefined") {_RecordType("<1503,1512,61>",(testProxy)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (callForCallOnly) != "undefined") {_RecordType("<1513,1528,61>",(callForCallOnly)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (Function.prototype) != "undefined") {_RecordType("<1530,1548,61>",(Function.prototype)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (Function) != "undefined") {_RecordType("<1530,1538,61>",(Function)); Inst66++; } } catch(e) {}
testProxy(callForCallOnly, Function.prototype);
/******************************************************************************/

try { if (Inst67 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1644,1657,64>",(reportCompare)); Inst67++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst68 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1678,1691,65>",(reportCompare)); Inst68++; } } catch(e) {}
  reportCompare(true, true);
}

try { if (Inst69 <= 1000 && typeof (print) != "undefined") {_RecordType("<1708,1713,68>",(print)); Inst69++; } } catch(e) {}
print("Tests complete");

