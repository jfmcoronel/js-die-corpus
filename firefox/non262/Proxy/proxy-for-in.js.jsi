var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Any copyright is dedicated to the Public Domain.
// http://creativecommons.org/licenses/publicdomain/
"use strict";

let steps = [];
try { if (Inst0 <= 1000 && typeof (steps) != "undefined") {_RecordType("<124,129,5>",(steps)); Inst0++; } } catch(e) {}
const object = {
  __proto__: {
    "xyz": 42
  }
};
try { if (Inst1 <= 1000 && typeof (object) != "undefined") {_RecordType("<142,148,6>",(object)); Inst1++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<207,212,11>",(Proxy)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (object) != "undefined") {_RecordType("<213,219,11>",(object)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (ownKeys) != "undefined") {_RecordType("<225,232,12>",(ownKeys)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (target) != "undefined") {_RecordType("<233,239,12>",(target)); Inst6++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (getOwnPropertyDescriptor) != "undefined") {_RecordType("<301,325,17>",(getOwnPropertyDescriptor)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (target) != "undefined") {_RecordType("<326,332,17>",(target)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (property) != "undefined") {_RecordType("<334,342,17>",(property)); Inst11++; } } catch(e) {}
const proxy = new Proxy(object, {
  ownKeys(target) {
try { if (Inst7 <= 1000 && typeof (steps.push) != "undefined") {_RecordType("<247,257,13>",(steps.push)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (steps) != "undefined") {_RecordType("<247,252,13>",(steps)); Inst8++; } } catch(e) {}
    steps.push("ownKeys");
    return ["a", "b"];
  },

  getOwnPropertyDescriptor(target, property) {
try { if (Inst12 <= 1000 && typeof (steps.push) != "undefined") {_RecordType("<350,360,18>",(steps.push)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (steps) != "undefined") {_RecordType("<350,355,18>",(steps)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (property) != "undefined") {_RecordType("<373,381,18>",(property)); Inst14++; } } catch(e) {}
    steps.push("getOwn-" + property);
try { if (Inst15 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<410,419,20>",(undefined)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (property) != "undefined") {_RecordType("<487,495,23>",(property)); Inst16++; } } catch(e) {}
    return {
      value: undefined,
      configurable: true,
      writable: true,
      enumerable: property === "a"
    };
  }

});
try { if (Inst2 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<195,200,11>",(proxy)); Inst2++; } } catch(e) {}
let iterated = [];
try { if (Inst17 <= 1000 && typeof (iterated) != "undefined") {_RecordType("<524,532,28>",(iterated)); Inst17++; } } catch(e) {}

for (let x in proxy) {
try { if (Inst18 <= 1000 && typeof (x) != "undefined") {_RecordType("<549,550,30>",(x)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<554,559,30>",(proxy)); Inst19++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (iterated.push) != "undefined") {_RecordType("<565,578,31>",(iterated.push)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (iterated) != "undefined") {_RecordType("<565,573,31>",(iterated)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (x) != "undefined") {_RecordType("<579,580,31>",(x)); Inst22++; } } catch(e) {}
  iterated.push(x);
}

try { if (Inst23 <= 1000 && typeof (iterated.toString) != "undefined") {_RecordType("<586,603,34>",(iterated.toString)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (iterated) != "undefined") {_RecordType("<586,594,34>",(iterated)); Inst24++; } } catch(e) {}
iterated.toString();
"a,xyz";
try { if (Inst25 <= 1000 && typeof (steps.toString) != "undefined") {_RecordType("<616,630,36>",(steps.toString)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (steps) != "undefined") {_RecordType("<616,621,36>",(steps)); Inst26++; } } catch(e) {}
steps.toString();
"ownKeys,getOwn-a,getOwn-b";

try { if (Inst27 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<675,688,39>",(reportCompare)); Inst27++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst28 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<709,722,40>",(reportCompare)); Inst28++; } } catch(e) {}
  reportCompare(true, true);
}

