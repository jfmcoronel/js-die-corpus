var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
var get = [];
try { if (Inst0 <= 1000 && typeof (get) != "undefined") {_RecordType("<4,7,1>",(get)); Inst0++; } } catch(e) {}

var fun = function () {
  ;
};
try { if (Inst1 <= 1000 && typeof (fun) != "undefined") {_RecordType("<19,22,3>",(fun)); Inst1++; } } catch(e) {}

try { if (Inst3 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<59,64,7>",(Proxy)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (fun) != "undefined") {_RecordType("<65,68,7>",(fun)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (get) != "undefined") {_RecordType("<74,77,8>",(get)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (target) != "undefined") {_RecordType("<78,84,8>",(target)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (key) != "undefined") {_RecordType("<86,89,8>",(key)); Inst7++; } } catch(e) {}
var p = new Proxy(fun, {
  get(target, key) {
try { if (Inst8 <= 1000 && typeof (get.push) != "undefined") {_RecordType("<97,105,9>",(get.push)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (get) != "undefined") {_RecordType("<97,100,9>",(get)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (key) != "undefined") {_RecordType("<106,109,9>",(key)); Inst10++; } } catch(e) {}
    get.push(key);
try { if (Inst11 <= 1000 && typeof (target[key]) != "undefined") {_RecordType("<123,134,10>",(target[key])); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (target) != "undefined") {_RecordType("<123,129,10>",(target)); Inst12++; } } catch(e) {}
    return target[key];
  }

});
try { if (Inst2 <= 1000 && typeof (p) != "undefined") {_RecordType("<51,52,7>",(p)); Inst2++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (fun) != "undefined") {_RecordType("<149,152,14>",(fun)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (p) != "undefined") {_RecordType("<166,167,14>",(p)); Inst14++; } } catch(e) {}
new fun() instanceof p;
true;
try { if (Inst15 <= 1000 && typeof (get) != "undefined") {_RecordType("<175,178,16>",(get)); Inst15++; } } catch(e) {}
get;
try { if (Inst16 <= 1000 && typeof (Symbol.hasInstance) != "undefined") {_RecordType("<181,199,17>",(Symbol.hasInstance)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<181,187,17>",(Symbol)); Inst17++; } } catch(e) {}
[Symbol.hasInstance, "prototype"];
try { if (Inst18 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<215,228,18>",(reportCompare)); Inst18++; } } catch(e) {}
reportCompare(true, true);

