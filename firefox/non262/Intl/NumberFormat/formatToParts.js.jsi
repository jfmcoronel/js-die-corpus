var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
var Inst102 = 0;
var Inst103 = 0;
var Inst104 = 0;
var Inst105 = 0;
var Inst106 = 0;
var Inst107 = 0;
var Inst108 = 0;
var Inst109 = 0;
var Inst110 = 0;
var Inst111 = 0;
var Inst112 = 0;
var Inst113 = 0;
var Inst114 = 0;
var Inst115 = 0;
var Inst116 = 0;
var Inst117 = 0;
var Inst118 = 0;
var Inst119 = 0;
var Inst120 = 0;
var Inst121 = 0;
var Inst122 = 0;
var Inst123 = 0;
var Inst124 = 0;
var Inst125 = 0;
var Inst126 = 0;
var Inst127 = 0;
var Inst128 = 0;
var Inst129 = 0;
var Inst130 = 0;
var Inst131 = 0;
var Inst132 = 0;
var Inst133 = 0;
var Inst134 = 0;
var Inst135 = 0;
var Inst136 = 0;
var Inst137 = 0;
var Inst138 = 0;
var Inst139 = 0;
var Inst140 = 0;
var Inst141 = 0;
var Inst142 = 0;
var Inst143 = 0;
var Inst144 = 0;
var Inst145 = 0;
var Inst146 = 0;
var Inst147 = 0;
var Inst148 = 0;
var Inst149 = 0;
var Inst150 = 0;
var Inst151 = 0;
var Inst152 = 0;
var Inst153 = 0;
var Inst154 = 0;
var Inst155 = 0;
var Inst156 = 0;
var Inst157 = 0;
var Inst158 = 0;
var Inst159 = 0;
var Inst160 = 0;
var Inst161 = 0;
var Inst162 = 0;
var Inst163 = 0;
var Inst164 = 0;
var Inst165 = 0;
var Inst166 = 0;
var Inst167 = 0;
var Inst168 = 0;
var Inst169 = 0;
var Inst170 = 0;
var Inst171 = 0;
var Inst172 = 0;
var Inst173 = 0;
var Inst174 = 0;
var Inst175 = 0;
var Inst176 = 0;
var Inst177 = 0;
var Inst178 = 0;
var Inst179 = 0;
var Inst180 = 0;
var Inst181 = 0;
var Inst182 = 0;
var Inst183 = 0;
var Inst184 = 0;
var Inst185 = 0;
var Inst186 = 0;
var Inst187 = 0;
var Inst188 = 0;
var Inst189 = 0;
var Inst190 = 0;
var Inst191 = 0;
var Inst192 = 0;
var Inst193 = 0;
var Inst194 = 0;
var Inst195 = 0;
var Inst196 = 0;
var Inst197 = 0;
var Inst198 = 0;
var Inst199 = 0;
var Inst200 = 0;
var Inst201 = 0;
var Inst202 = 0;
var Inst203 = 0;
var Inst204 = 0;
var Inst205 = 0;
var Inst206 = 0;
var Inst207 = 0;
var Inst208 = 0;
var Inst209 = 0;
var Inst210 = 0;
var Inst211 = 0;
var Inst212 = 0;
var Inst213 = 0;
var Inst214 = 0;
var Inst215 = 0;
var Inst216 = 0;
var Inst217 = 0;
var Inst218 = 0;
var Inst219 = 0;
var Inst220 = 0;
var Inst221 = 0;
var Inst222 = 0;
var Inst223 = 0;
var Inst224 = 0;
var Inst225 = 0;
var Inst226 = 0;
var Inst227 = 0;
var Inst228 = 0;
var Inst229 = 0;
var Inst230 = 0;
var Inst231 = 0;
var Inst232 = 0;
var Inst233 = 0;
var Inst234 = 0;
var Inst235 = 0;
var Inst236 = 0;
var Inst237 = 0;
var Inst238 = 0;
var Inst239 = 0;
var Inst240 = 0;
var Inst241 = 0;
var Inst242 = 0;
var Inst243 = 0;
var Inst244 = 0;
var Inst245 = 0;
var Inst246 = 0;
var Inst247 = 0;
var Inst248 = 0;
var Inst249 = 0;
var Inst250 = 0;
var Inst251 = 0;
var Inst252 = 0;
var Inst253 = 0;
var Inst254 = 0;
var Inst255 = 0;
var Inst256 = 0;
var Inst257 = 0;
var Inst258 = 0;
var Inst259 = 0;
var Inst260 = 0;
var Inst261 = 0;
var Inst262 = 0;
var Inst263 = 0;
var Inst264 = 0;
var Inst265 = 0;
var Inst266 = 0;
var Inst267 = 0;
var Inst268 = 0;
var Inst269 = 0;
var Inst270 = 0;
var Inst271 = 0;
var Inst272 = 0;
var Inst273 = 0;
var Inst274 = 0;
var Inst275 = 0;
var Inst276 = 0;
var Inst277 = 0;
var Inst278 = 0;
var Inst279 = 0;
var Inst280 = 0;
var Inst281 = 0;
var Inst282 = 0;
var Inst283 = 0;
var Inst284 = 0;
var Inst285 = 0;
var Inst286 = 0;
var Inst287 = 0;
var Inst288 = 0;
var Inst289 = 0;
var Inst290 = 0;
var Inst291 = 0;
var Inst292 = 0;
var Inst293 = 0;
var Inst294 = 0;
var Inst295 = 0;
var Inst296 = 0;
var Inst297 = 0;
var Inst298 = 0;
var Inst299 = 0;
var Inst300 = 0;
var Inst301 = 0;
var Inst302 = 0;
var Inst303 = 0;
var Inst304 = 0;
var Inst305 = 0;
var Inst306 = 0;
var Inst307 = 0;
var Inst308 = 0;
var Inst309 = 0;
var Inst310 = 0;
var Inst311 = 0;
var Inst312 = 0;
var Inst313 = 0;
var Inst314 = 0;
var Inst315 = 0;
var Inst316 = 0;
var Inst317 = 0;
var Inst318 = 0;
var Inst319 = 0;
var Inst320 = 0;
var Inst321 = 0;
var Inst322 = 0;
var Inst323 = 0;
var Inst324 = 0;
var Inst325 = 0;
var Inst326 = 0;
var Inst327 = 0;
var Inst328 = 0;
var Inst329 = 0;
var Inst330 = 0;
var Inst331 = 0;
var Inst332 = 0;
var Inst333 = 0;
var Inst334 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// |reftest| skip-if(!this.hasOwnProperty("Intl"))
// Any copyright is dedicated to the Public Domain.
// http://creativecommons.org/licenses/publicdomain/
//-----------------------------------------------------------------------------
var BUGNUMBER = 1289882;
try { if (Inst0 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<240,249,5>",(BUGNUMBER)); Inst0++; } } catch(e) {}
var summary = "Implement Intl.NumberFormat.prototype.formatToParts";
try { if (Inst1 <= 1000 && typeof (summary) != "undefined") {_RecordType("<265,272,6>",(summary)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (print) != "undefined") {_RecordType("<330,335,7>",(print)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<336,345,7>",(BUGNUMBER)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (summary) != "undefined") {_RecordType("<355,362,7>",(summary)); Inst4++; } } catch(e) {}
print(BUGNUMBER + ": " + summary); //-----------------------------------------------------------------------------

try { if (Inst5 <= 1000 && typeof (Intl.NumberFormat) != "undefined") {_RecordType("<465,482,9>",(Intl.NumberFormat)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Intl) != "undefined") {_RecordType("<465,469,9>",(Intl)); Inst6++; } } catch(e) {}
"formatToParts" in Intl.NumberFormat();
true;

// NOTE: Some of these tests exercise standard behavior (e.g. that format and
//       formatToParts expose the same formatted string).  But much of this,
//       like the exact-formatted-string expectations, is technically
//       implementation-dependent.  This is necessary as a practical matter to
//       properly test the conversion from ICU's nested-field exposure to
//       ECMA-402's sequential-parts exposure.
try { if (Inst7 <= 1000 && typeof (GenericPartCreator) != "undefined") {_RecordType("<927,945,18>",(GenericPartCreator)); Inst7++; } } catch(e) {}
function GenericPartCreator(type) {
try { if (Inst8 <= 1000 && typeof (type) != "undefined") {_RecordType("<946,950,18>",(type)); Inst8++; } } catch(e) {}
  return function (str) {
try { if (Inst9 <= 1000 && typeof (str) != "undefined") {_RecordType("<973,976,19>",(str)); Inst9++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (type) != "undefined") {_RecordType("<999,1003,21>",(type)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (str) != "undefined") {_RecordType("<1018,1021,22>",(str)); Inst11++; } } catch(e) {}
    return {
      type,
      value: str
    };
  };
}

try { if (Inst13 <= 1000 && typeof (GenericPartCreator) != "undefined") {_RecordType("<1047,1065,27>",(GenericPartCreator)); Inst13++; } } catch(e) {}
var Nan = GenericPartCreator("nan");
try { if (Inst12 <= 1000 && typeof (Nan) != "undefined") {_RecordType("<1041,1044,27>",(Nan)); Inst12++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (GenericPartCreator) != "undefined") {_RecordType("<1084,1102,28>",(GenericPartCreator)); Inst15++; } } catch(e) {}
var Inf = GenericPartCreator("infinity");
try { if (Inst14 <= 1000 && typeof (Inf) != "undefined") {_RecordType("<1078,1081,28>",(Inf)); Inst14++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (GenericPartCreator) != "undefined") {_RecordType("<1130,1148,29>",(GenericPartCreator)); Inst17++; } } catch(e) {}
var Integer = GenericPartCreator("integer");
try { if (Inst16 <= 1000 && typeof (Integer) != "undefined") {_RecordType("<1120,1127,29>",(Integer)); Inst16++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (GenericPartCreator) != "undefined") {_RecordType("<1173,1191,30>",(GenericPartCreator)); Inst19++; } } catch(e) {}
var Group = GenericPartCreator("group");
try { if (Inst18 <= 1000 && typeof (Group) != "undefined") {_RecordType("<1165,1170,30>",(Group)); Inst18++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (GenericPartCreator) != "undefined") {_RecordType("<1216,1234,31>",(GenericPartCreator)); Inst21++; } } catch(e) {}
var Decimal = GenericPartCreator("decimal");
try { if (Inst20 <= 1000 && typeof (Decimal) != "undefined") {_RecordType("<1206,1213,31>",(Decimal)); Inst20++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (GenericPartCreator) != "undefined") {_RecordType("<1262,1280,32>",(GenericPartCreator)); Inst23++; } } catch(e) {}
var Fraction = GenericPartCreator("fraction");
try { if (Inst22 <= 1000 && typeof (Fraction) != "undefined") {_RecordType("<1251,1259,32>",(Fraction)); Inst22++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (GenericPartCreator) != "undefined") {_RecordType("<1310,1328,33>",(GenericPartCreator)); Inst25++; } } catch(e) {}
var MinusSign = GenericPartCreator("minusSign");
try { if (Inst24 <= 1000 && typeof (MinusSign) != "undefined") {_RecordType("<1298,1307,33>",(MinusSign)); Inst24++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (GenericPartCreator) != "undefined") {_RecordType("<1358,1376,34>",(GenericPartCreator)); Inst27++; } } catch(e) {}
var PlusSign = GenericPartCreator("plusSign");
try { if (Inst26 <= 1000 && typeof (PlusSign) != "undefined") {_RecordType("<1347,1355,34>",(PlusSign)); Inst26++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (GenericPartCreator) != "undefined") {_RecordType("<1408,1426,35>",(GenericPartCreator)); Inst29++; } } catch(e) {}
var PercentSign = GenericPartCreator("percentSign");
try { if (Inst28 <= 1000 && typeof (PercentSign) != "undefined") {_RecordType("<1394,1405,35>",(PercentSign)); Inst28++; } } catch(e) {}
try { if (Inst31 <= 1000 && typeof (GenericPartCreator) != "undefined") {_RecordType("<1458,1476,36>",(GenericPartCreator)); Inst31++; } } catch(e) {}
var Currency = GenericPartCreator("currency");
try { if (Inst30 <= 1000 && typeof (Currency) != "undefined") {_RecordType("<1447,1455,36>",(Currency)); Inst30++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (GenericPartCreator) != "undefined") {_RecordType("<1504,1522,37>",(GenericPartCreator)); Inst33++; } } catch(e) {}
var Literal = GenericPartCreator("literal");
try { if (Inst32 <= 1000 && typeof (Literal) != "undefined") {_RecordType("<1494,1501,37>",(Literal)); Inst32++; } } catch(e) {}

try { if (Inst34 <= 1000 && typeof (assertParts) != "undefined") {_RecordType("<1545,1556,39>",(assertParts)); Inst34++; } } catch(e) {}
function assertParts(nf, x, expected) {
try { if (Inst35 <= 1000 && typeof (nf) != "undefined") {_RecordType("<1557,1559,39>",(nf)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (x) != "undefined") {_RecordType("<1561,1562,39>",(x)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (expected) != "undefined") {_RecordType("<1564,1572,39>",(expected)); Inst37++; } } catch(e) {}
try { if (Inst39 <= 1000 && typeof (nf.formatToParts) != "undefined") {_RecordType("<1590,1606,40>",(nf.formatToParts)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (nf) != "undefined") {_RecordType("<1590,1592,40>",(nf)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (x) != "undefined") {_RecordType("<1607,1608,40>",(x)); Inst41++; } } catch(e) {}
  var parts = nf.formatToParts(x);
try { if (Inst38 <= 1000 && typeof (parts) != "undefined") {_RecordType("<1582,1587,40>",(parts)); Inst38++; } } catch(e) {}
try { if (Inst42 <= 1000 && typeof (parts.map(part => part.value).join) != "undefined") {_RecordType("<1613,1647,41>",(parts.map(part => part.value).join)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (parts.map) != "undefined") {_RecordType("<1613,1622,41>",(parts.map)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (parts) != "undefined") {_RecordType("<1613,1618,41>",(parts)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (part) != "undefined") {_RecordType("<1623,1627,41>",(part)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (part.value) != "undefined") {_RecordType("<1631,1641,41>",(part.value)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (part) != "undefined") {_RecordType("<1631,1635,41>",(part)); Inst47++; } } catch(e) {}
  parts.map(part => part.value).join("");
try { if (Inst48 <= 1000 && typeof (nf.format) != "undefined") {_RecordType("<1655,1664,42>",(nf.format)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (nf) != "undefined") {_RecordType("<1655,1657,42>",(nf)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (x) != "undefined") {_RecordType("<1665,1666,42>",(x)); Inst50++; } } catch(e) {}
  nf.format(x);
  "formatToParts and format must agree";
try { if (Inst52 <= 1000 && typeof (parts.length) != "undefined") {_RecordType("<1722,1734,44>",(parts.length)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (parts) != "undefined") {_RecordType("<1722,1727,44>",(parts)); Inst53++; } } catch(e) {}
  var len = parts.length;
try { if (Inst51 <= 1000 && typeof (len) != "undefined") {_RecordType("<1716,1719,44>",(len)); Inst51++; } } catch(e) {}
try { if (Inst54 <= 1000 && typeof (len) != "undefined") {_RecordType("<1738,1741,45>",(len)); Inst54++; } } catch(e) {}
  len;
try { if (Inst55 <= 1000 && typeof (expected.length) != "undefined") {_RecordType("<1745,1760,46>",(expected.length)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (expected) != "undefined") {_RecordType("<1745,1753,46>",(expected)); Inst56++; } } catch(e) {}
  expected.length;
  "parts count mismatch";

  for (var i = 0; i < len; i++) {
try { if (Inst57 <= 1000 && typeof (i) != "undefined") {_RecordType("<1800,1801,49>",(i)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (i) != "undefined") {_RecordType("<1807,1808,49>",(i)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (len) != "undefined") {_RecordType("<1811,1814,49>",(len)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (i) != "undefined") {_RecordType("<1816,1817,49>",(i)); Inst60++; } } catch(e) {}
try { if (Inst61 <= 1000 && typeof (parts[i].type) != "undefined") {_RecordType("<1827,1840,50>",(parts[i].type)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (parts[i]) != "undefined") {_RecordType("<1827,1835,50>",(parts[i])); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (parts) != "undefined") {_RecordType("<1827,1832,50>",(parts)); Inst63++; } } catch(e) {}
    parts[i].type;
try { if (Inst64 <= 1000 && typeof (expected[i].type) != "undefined") {_RecordType("<1846,1862,51>",(expected[i].type)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (expected[i]) != "undefined") {_RecordType("<1846,1857,51>",(expected[i])); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (expected) != "undefined") {_RecordType("<1846,1854,51>",(expected)); Inst66++; } } catch(e) {}
    expected[i].type;
try { if (Inst67 <= 1000 && typeof (i) != "undefined") {_RecordType("<1890,1891,52>",(i)); Inst67++; } } catch(e) {}
    "type mismatch at " + i;
try { if (Inst68 <= 1000 && typeof (parts[i].value) != "undefined") {_RecordType("<1897,1911,53>",(parts[i].value)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (parts[i]) != "undefined") {_RecordType("<1897,1905,53>",(parts[i])); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (parts) != "undefined") {_RecordType("<1897,1902,53>",(parts)); Inst70++; } } catch(e) {}
    parts[i].value;
try { if (Inst71 <= 1000 && typeof (expected[i].value) != "undefined") {_RecordType("<1917,1934,54>",(expected[i].value)); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (expected[i]) != "undefined") {_RecordType("<1917,1928,54>",(expected[i])); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (expected) != "undefined") {_RecordType("<1917,1925,54>",(expected)); Inst73++; } } catch(e) {}
    expected[i].value;
try { if (Inst74 <= 1000 && typeof (i) != "undefined") {_RecordType("<1963,1964,55>",(i)); Inst74++; } } catch(e) {}
    "value mismatch at " + i;
  }
} //-----------------------------------------------------------------------------
// Test -0's partitioning now that it's not treated like +0.
// https://github.com/tc39/ecma402/pull/232


try { if (Inst76 <= 1000 && typeof (Intl.NumberFormat) != "undefined") {_RecordType("<2189,2206,62>",(Intl.NumberFormat)); Inst76++; } } catch(e) {}try { if (Inst77 <= 1000 && typeof (Intl) != "undefined") {_RecordType("<2189,2193,62>",(Intl)); Inst77++; } } catch(e) {}
var deadSimpleFormatter = new Intl.NumberFormat("en-US");
try { if (Inst75 <= 1000 && typeof (deadSimpleFormatter) != "undefined") {_RecordType("<2163,2182,62>",(deadSimpleFormatter)); Inst75++; } } catch(e) {}
try { if (Inst78 <= 1000 && typeof (deadSimpleFormatter) != "undefined") {_RecordType("<2217,2236,63>",(deadSimpleFormatter)); Inst78++; } } catch(e) {}
deadSimpleFormatter;
-0;
try { if (Inst79 <= 1000 && typeof (MinusSign) != "undefined") {_RecordType("<2243,2252,65>",(MinusSign)); Inst79++; } } catch(e) {}try { if (Inst80 <= 1000 && typeof (Integer) != "undefined") {_RecordType("<2259,2266,65>",(Integer)); Inst80++; } } catch(e) {}
[MinusSign("-"), Integer("0")];
// Test behavior of a currency with code formatting.
var usdCodeOptions = {
  style: "currency",
  currency: "USD",
  currencyDisplay: "code",
  minimumFractionDigits: 0,
  maximumFractionDigits: 0
};
try { if (Inst81 <= 1000 && typeof (usdCodeOptions) != "undefined") {_RecordType("<2331,2345,67>",(usdCodeOptions)); Inst81++; } } catch(e) {}
try { if (Inst83 <= 1000 && typeof (Intl.NumberFormat) != "undefined") {_RecordType("<2499,2516,74>",(Intl.NumberFormat)); Inst83++; } } catch(e) {}try { if (Inst84 <= 1000 && typeof (Intl) != "undefined") {_RecordType("<2499,2503,74>",(Intl)); Inst84++; } } catch(e) {}try { if (Inst85 <= 1000 && typeof (usdCodeOptions) != "undefined") {_RecordType("<2526,2540,74>",(usdCodeOptions)); Inst85++; } } catch(e) {}
var usDollarsCode = new Intl.NumberFormat("en-US", usdCodeOptions);
try { if (Inst82 <= 1000 && typeof (usDollarsCode) != "undefined") {_RecordType("<2479,2492,74>",(usDollarsCode)); Inst82++; } } catch(e) {}
try { if (Inst86 <= 1000 && typeof (usDollarsCode) != "undefined") {_RecordType("<2543,2556,75>",(usDollarsCode)); Inst86++; } } catch(e) {}
usDollarsCode;
25;
try { if (Inst87 <= 1000 && typeof (Currency) != "undefined") {_RecordType("<2563,2571,77>",(Currency)); Inst87++; } } catch(e) {}try { if (Inst88 <= 1000 && typeof (Literal) != "undefined") {_RecordType("<2580,2587,77>",(Literal)); Inst88++; } } catch(e) {}try { if (Inst89 <= 1000 && typeof (Integer) != "undefined") {_RecordType("<2597,2604,77>",(Integer)); Inst89++; } } catch(e) {}
[Currency("USD"), Literal("\xA0"), Integer("25")];
// ISO 4217 currency codes are formed from an ISO 3166-1 alpha-2 country code
// followed by a third letter.  ISO 3166 guarantees that no country code
// starting with "X" will ever be assigned.  Stepping carefully around a few
// 4217-designated special "currencies", XQQ will never have a representation.
// Thus, yes: this really is specified to work, as unrecognized or unsupported
// codes pass into the string unmodified.
var xqqCodeOptions = {
  style: "currency",
  currency: "XQQ",
  currencyDisplay: "code",
  minimumFractionDigits: 0,
  maximumFractionDigits: 0
};
try { if (Inst90 <= 1000 && typeof (xqqCodeOptions) != "undefined") {_RecordType("<3045,3059,84>",(xqqCodeOptions)); Inst90++; } } catch(e) {}
try { if (Inst92 <= 1000 && typeof (Intl.NumberFormat) != "undefined") {_RecordType("<3212,3229,91>",(Intl.NumberFormat)); Inst92++; } } catch(e) {}try { if (Inst93 <= 1000 && typeof (Intl) != "undefined") {_RecordType("<3212,3216,91>",(Intl)); Inst93++; } } catch(e) {}try { if (Inst94 <= 1000 && typeof (xqqCodeOptions) != "undefined") {_RecordType("<3239,3253,91>",(xqqCodeOptions)); Inst94++; } } catch(e) {}
var xqqMoneyCode = new Intl.NumberFormat("en-US", xqqCodeOptions);
try { if (Inst91 <= 1000 && typeof (xqqMoneyCode) != "undefined") {_RecordType("<3193,3205,91>",(xqqMoneyCode)); Inst91++; } } catch(e) {}
try { if (Inst95 <= 1000 && typeof (xqqMoneyCode) != "undefined") {_RecordType("<3256,3268,92>",(xqqMoneyCode)); Inst95++; } } catch(e) {}
xqqMoneyCode;
25;
try { if (Inst96 <= 1000 && typeof (Currency) != "undefined") {_RecordType("<3275,3283,94>",(Currency)); Inst96++; } } catch(e) {}try { if (Inst97 <= 1000 && typeof (Literal) != "undefined") {_RecordType("<3292,3299,94>",(Literal)); Inst97++; } } catch(e) {}try { if (Inst98 <= 1000 && typeof (Integer) != "undefined") {_RecordType("<3309,3316,94>",(Integer)); Inst98++; } } catch(e) {}
[Currency("XQQ"), Literal("\xA0"), Integer("25")];
// Test currencyDisplay: "name".
var usdNameOptions = {
  style: "currency",
  currency: "USD",
  currencyDisplay: "name",
  minimumFractionDigits: 0,
  maximumFractionDigits: 0
};
try { if (Inst99 <= 1000 && typeof (usdNameOptions) != "undefined") {_RecordType("<3362,3376,96>",(usdNameOptions)); Inst99++; } } catch(e) {}
try { if (Inst101 <= 1000 && typeof (Intl.NumberFormat) != "undefined") {_RecordType("<3530,3547,103>",(Intl.NumberFormat)); Inst101++; } } catch(e) {}try { if (Inst102 <= 1000 && typeof (Intl) != "undefined") {_RecordType("<3530,3534,103>",(Intl)); Inst102++; } } catch(e) {}try { if (Inst103 <= 1000 && typeof (usdNameOptions) != "undefined") {_RecordType("<3557,3571,103>",(usdNameOptions)); Inst103++; } } catch(e) {}
var usDollarsName = new Intl.NumberFormat("en-US", usdNameOptions);
try { if (Inst100 <= 1000 && typeof (usDollarsName) != "undefined") {_RecordType("<3510,3523,103>",(usDollarsName)); Inst100++; } } catch(e) {}
try { if (Inst104 <= 1000 && typeof (usDollarsName) != "undefined") {_RecordType("<3574,3587,104>",(usDollarsName)); Inst104++; } } catch(e) {}
usDollarsName;
25;
try { if (Inst105 <= 1000 && typeof (Integer) != "undefined") {_RecordType("<3594,3601,106>",(Integer)); Inst105++; } } catch(e) {}try { if (Inst106 <= 1000 && typeof (Literal) != "undefined") {_RecordType("<3609,3616,106>",(Literal)); Inst106++; } } catch(e) {}try { if (Inst107 <= 1000 && typeof (Currency) != "undefined") {_RecordType("<3623,3631,106>",(Currency)); Inst107++; } } catch(e) {}
[Integer("25"), Literal(" "), Currency("US dollars")];
var usdNameGroupingOptions = {
  style: "currency",
  currency: "USD",
  currencyDisplay: "name",
  minimumFractionDigits: 0,
  maximumFractionDigits: 0
};
try { if (Inst108 <= 1000 && typeof (usdNameGroupingOptions) != "undefined") {_RecordType("<3652,3674,107>",(usdNameGroupingOptions)); Inst108++; } } catch(e) {}
try { if (Inst110 <= 1000 && typeof (Intl.NumberFormat) != "undefined") {_RecordType("<3836,3853,114>",(Intl.NumberFormat)); Inst110++; } } catch(e) {}try { if (Inst111 <= 1000 && typeof (Intl) != "undefined") {_RecordType("<3836,3840,114>",(Intl)); Inst111++; } } catch(e) {}try { if (Inst112 <= 1000 && typeof (usdNameGroupingOptions) != "undefined") {_RecordType("<3863,3885,114>",(usdNameGroupingOptions)); Inst112++; } } catch(e) {}
var usDollarsNameGrouping = new Intl.NumberFormat("en-US", usdNameGroupingOptions);
try { if (Inst109 <= 1000 && typeof (usDollarsNameGrouping) != "undefined") {_RecordType("<3808,3829,114>",(usDollarsNameGrouping)); Inst109++; } } catch(e) {}
try { if (Inst113 <= 1000 && typeof (usDollarsNameGrouping) != "undefined") {_RecordType("<3888,3909,115>",(usDollarsNameGrouping)); Inst113++; } } catch(e) {}
usDollarsNameGrouping;
12345678;
try { if (Inst114 <= 1000 && typeof (Integer) != "undefined") {_RecordType("<3922,3929,117>",(Integer)); Inst114++; } } catch(e) {}try { if (Inst115 <= 1000 && typeof (Group) != "undefined") {_RecordType("<3937,3942,117>",(Group)); Inst115++; } } catch(e) {}try { if (Inst116 <= 1000 && typeof (Integer) != "undefined") {_RecordType("<3949,3956,117>",(Integer)); Inst116++; } } catch(e) {}try { if (Inst117 <= 1000 && typeof (Group) != "undefined") {_RecordType("<3965,3970,117>",(Group)); Inst117++; } } catch(e) {}try { if (Inst118 <= 1000 && typeof (Integer) != "undefined") {_RecordType("<3977,3984,117>",(Integer)); Inst118++; } } catch(e) {}try { if (Inst119 <= 1000 && typeof (Literal) != "undefined") {_RecordType("<3993,4000,117>",(Literal)); Inst119++; } } catch(e) {}try { if (Inst120 <= 1000 && typeof (Currency) != "undefined") {_RecordType("<4007,4015,117>",(Currency)); Inst120++; } } catch(e) {}
[Integer("12"), Group(","), Integer("345"), Group(","), Integer("678"), Literal(" "), Currency("US dollars")];
// But if the implementation doesn't recognize the currency, the provided code
// is used in place of a proper name, unmolested.
var xqqNameOptions = {
  style: "currency",
  currency: "XQQ",
  currencyDisplay: "name",
  minimumFractionDigits: 0,
  maximumFractionDigits: 0
};
try { if (Inst121 <= 1000 && typeof (xqqNameOptions) != "undefined") {_RecordType("<4165,4179,120>",(xqqNameOptions)); Inst121++; } } catch(e) {}
try { if (Inst123 <= 1000 && typeof (Intl.NumberFormat) != "undefined") {_RecordType("<4332,4349,127>",(Intl.NumberFormat)); Inst123++; } } catch(e) {}try { if (Inst124 <= 1000 && typeof (Intl) != "undefined") {_RecordType("<4332,4336,127>",(Intl)); Inst124++; } } catch(e) {}try { if (Inst125 <= 1000 && typeof (xqqNameOptions) != "undefined") {_RecordType("<4359,4373,127>",(xqqNameOptions)); Inst125++; } } catch(e) {}
var xqqMoneyName = new Intl.NumberFormat("en-US", xqqNameOptions);
try { if (Inst122 <= 1000 && typeof (xqqMoneyName) != "undefined") {_RecordType("<4313,4325,127>",(xqqMoneyName)); Inst122++; } } catch(e) {}
try { if (Inst126 <= 1000 && typeof (xqqMoneyName) != "undefined") {_RecordType("<4376,4388,128>",(xqqMoneyName)); Inst126++; } } catch(e) {}
xqqMoneyName;
25;
try { if (Inst127 <= 1000 && typeof (Integer) != "undefined") {_RecordType("<4395,4402,130>",(Integer)); Inst127++; } } catch(e) {}try { if (Inst128 <= 1000 && typeof (Literal) != "undefined") {_RecordType("<4410,4417,130>",(Literal)); Inst128++; } } catch(e) {}try { if (Inst129 <= 1000 && typeof (Currency) != "undefined") {_RecordType("<4424,4432,130>",(Currency)); Inst129++; } } catch(e) {}
[Integer("25"), Literal(" "), Currency("XQQ")];
// Test some currencies with fractional components.
var usdNameFractionOptions = {
  style: "currency",
  currency: "USD",
  currencyDisplay: "name",
  minimumFractionDigits: 2,
  maximumFractionDigits: 2
};
try { if (Inst130 <= 1000 && typeof (usdNameFractionOptions) != "undefined") {_RecordType("<4498,4520,132>",(usdNameFractionOptions)); Inst130++; } } catch(e) {}
try { if (Inst132 <= 1000 && typeof (Intl.NumberFormat) != "undefined") {_RecordType("<4685,4702,139>",(Intl.NumberFormat)); Inst132++; } } catch(e) {}try { if (Inst133 <= 1000 && typeof (Intl) != "undefined") {_RecordType("<4685,4689,139>",(Intl)); Inst133++; } } catch(e) {}try { if (Inst134 <= 1000 && typeof (usdNameFractionOptions) != "undefined") {_RecordType("<4712,4734,139>",(usdNameFractionOptions)); Inst134++; } } catch(e) {}
var usdNameFractionFormatter = new Intl.NumberFormat("en-US", usdNameFractionOptions); // The US national surplus (i.e. debt) as of October 18, 2016.  (Replicating
try { if (Inst131 <= 1000 && typeof (usdNameFractionFormatter) != "undefined") {_RecordType("<4654,4678,139>",(usdNameFractionFormatter)); Inst131++; } } catch(e) {}
// data from a comment in builtin/Intl/NumberFormat.cpp.)

var usNationalSurplus = -19766580028249.41;
try { if (Inst135 <= 1000 && typeof (usNationalSurplus) != "undefined") {_RecordType("<4877,4894,142>",(usNationalSurplus)); Inst135++; } } catch(e) {}
try { if (Inst136 <= 1000 && typeof (usdNameFractionFormatter) != "undefined") {_RecordType("<4917,4941,143>",(usdNameFractionFormatter)); Inst136++; } } catch(e) {}
usdNameFractionFormatter;
try { if (Inst137 <= 1000 && typeof (usNationalSurplus) != "undefined") {_RecordType("<4943,4960,144>",(usNationalSurplus)); Inst137++; } } catch(e) {}
usNationalSurplus;
try { if (Inst138 <= 1000 && typeof (MinusSign) != "undefined") {_RecordType("<4963,4972,145>",(MinusSign)); Inst138++; } } catch(e) {}try { if (Inst139 <= 1000 && typeof (Integer) != "undefined") {_RecordType("<4979,4986,145>",(Integer)); Inst139++; } } catch(e) {}try { if (Inst140 <= 1000 && typeof (Group) != "undefined") {_RecordType("<4994,4999,145>",(Group)); Inst140++; } } catch(e) {}try { if (Inst141 <= 1000 && typeof (Integer) != "undefined") {_RecordType("<5006,5013,145>",(Integer)); Inst141++; } } catch(e) {}try { if (Inst142 <= 1000 && typeof (Group) != "undefined") {_RecordType("<5022,5027,145>",(Group)); Inst142++; } } catch(e) {}try { if (Inst143 <= 1000 && typeof (Integer) != "undefined") {_RecordType("<5034,5041,145>",(Integer)); Inst143++; } } catch(e) {}try { if (Inst144 <= 1000 && typeof (Group) != "undefined") {_RecordType("<5050,5055,145>",(Group)); Inst144++; } } catch(e) {}try { if (Inst145 <= 1000 && typeof (Integer) != "undefined") {_RecordType("<5062,5069,145>",(Integer)); Inst145++; } } catch(e) {}try { if (Inst146 <= 1000 && typeof (Group) != "undefined") {_RecordType("<5078,5083,145>",(Group)); Inst146++; } } catch(e) {}try { if (Inst147 <= 1000 && typeof (Integer) != "undefined") {_RecordType("<5090,5097,145>",(Integer)); Inst147++; } } catch(e) {}try { if (Inst148 <= 1000 && typeof (Decimal) != "undefined") {_RecordType("<5106,5113,145>",(Decimal)); Inst148++; } } catch(e) {}try { if (Inst149 <= 1000 && typeof (Fraction) != "undefined") {_RecordType("<5120,5128,145>",(Fraction)); Inst149++; } } catch(e) {}try { if (Inst150 <= 1000 && typeof (Literal) != "undefined") {_RecordType("<5136,5143,145>",(Literal)); Inst150++; } } catch(e) {}try { if (Inst151 <= 1000 && typeof (Currency) != "undefined") {_RecordType("<5150,5158,145>",(Currency)); Inst151++; } } catch(e) {}
[MinusSign("-"), Integer("19"), Group(","), Integer("766"), Group(","), Integer("580"), Group(","), Integer("028"), Group(","), Integer("249"), Decimal("."), Fraction("41"), Literal(" "), Currency("US dollars")];
// Percents in various forms.
var usPercentOptions = {
  style: "percent",
  minimumFractionDigits: 1,
  maximumFractionDigits: 1
};
try { if (Inst152 <= 1000 && typeof (usPercentOptions) != "undefined") {_RecordType("<5209,5225,147>",(usPercentOptions)); Inst152++; } } catch(e) {}
try { if (Inst154 <= 1000 && typeof (Intl.NumberFormat) != "undefined") {_RecordType("<5337,5354,152>",(Intl.NumberFormat)); Inst154++; } } catch(e) {}try { if (Inst155 <= 1000 && typeof (Intl) != "undefined") {_RecordType("<5337,5341,152>",(Intl)); Inst155++; } } catch(e) {}try { if (Inst156 <= 1000 && typeof (usPercentOptions) != "undefined") {_RecordType("<5364,5380,152>",(usPercentOptions)); Inst156++; } } catch(e) {}
var usPercentFormatter = new Intl.NumberFormat("en-US", usPercentOptions);
try { if (Inst153 <= 1000 && typeof (usPercentFormatter) != "undefined") {_RecordType("<5312,5330,152>",(usPercentFormatter)); Inst153++; } } catch(e) {}
try { if (Inst157 <= 1000 && typeof (usPercentFormatter) != "undefined") {_RecordType("<5383,5401,153>",(usPercentFormatter)); Inst157++; } } catch(e) {}
usPercentFormatter;
0.375;
try { if (Inst158 <= 1000 && typeof (Integer) != "undefined") {_RecordType("<5411,5418,155>",(Integer)); Inst158++; } } catch(e) {}try { if (Inst159 <= 1000 && typeof (Decimal) != "undefined") {_RecordType("<5426,5433,155>",(Decimal)); Inst159++; } } catch(e) {}try { if (Inst160 <= 1000 && typeof (Fraction) != "undefined") {_RecordType("<5440,5448,155>",(Fraction)); Inst160++; } } catch(e) {}try { if (Inst161 <= 1000 && typeof (PercentSign) != "undefined") {_RecordType("<5455,5466,155>",(PercentSign)); Inst161++; } } catch(e) {}
[Integer("37"), Decimal("."), Fraction("5"), PercentSign("%")];
try { if (Inst162 <= 1000 && typeof (usPercentFormatter) != "undefined") {_RecordType("<5474,5492,156>",(usPercentFormatter)); Inst162++; } } catch(e) {}
usPercentFormatter;
-1284.375;
try { if (Inst163 <= 1000 && typeof (MinusSign) != "undefined") {_RecordType("<5506,5515,158>",(MinusSign)); Inst163++; } } catch(e) {}try { if (Inst164 <= 1000 && typeof (Integer) != "undefined") {_RecordType("<5522,5529,158>",(Integer)); Inst164++; } } catch(e) {}try { if (Inst165 <= 1000 && typeof (Group) != "undefined") {_RecordType("<5538,5543,158>",(Group)); Inst165++; } } catch(e) {}try { if (Inst166 <= 1000 && typeof (Integer) != "undefined") {_RecordType("<5550,5557,158>",(Integer)); Inst166++; } } catch(e) {}try { if (Inst167 <= 1000 && typeof (Decimal) != "undefined") {_RecordType("<5566,5573,158>",(Decimal)); Inst167++; } } catch(e) {}try { if (Inst168 <= 1000 && typeof (Fraction) != "undefined") {_RecordType("<5580,5588,158>",(Fraction)); Inst168++; } } catch(e) {}try { if (Inst169 <= 1000 && typeof (PercentSign) != "undefined") {_RecordType("<5595,5606,158>",(PercentSign)); Inst169++; } } catch(e) {}
[MinusSign("-"), Integer("128"), Group(","), Integer("437"), Decimal("."), Fraction("5"), PercentSign("%")];
try { if (Inst170 <= 1000 && typeof (usPercentFormatter) != "undefined") {_RecordType("<5614,5632,159>",(usPercentFormatter)); Inst170++; } } catch(e) {}
usPercentFormatter;
try { if (Inst171 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<5634,5637,160>",(NaN)); Inst171++; } } catch(e) {}
NaN;
try { if (Inst172 <= 1000 && typeof (Nan) != "undefined") {_RecordType("<5640,5643,161>",(Nan)); Inst172++; } } catch(e) {}try { if (Inst173 <= 1000 && typeof (PercentSign) != "undefined") {_RecordType("<5652,5663,161>",(PercentSign)); Inst173++; } } catch(e) {}
[Nan("NaN"), PercentSign("%")];
try { if (Inst174 <= 1000 && typeof (usPercentFormatter) != "undefined") {_RecordType("<5671,5689,162>",(usPercentFormatter)); Inst174++; } } catch(e) {}
usPercentFormatter;
try { if (Inst175 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<5691,5699,163>",(Infinity)); Inst175++; } } catch(e) {}
Infinity;
try { if (Inst176 <= 1000 && typeof (Inf) != "undefined") {_RecordType("<5702,5705,164>",(Inf)); Inst176++; } } catch(e) {}try { if (Inst177 <= 1000 && typeof (PercentSign) != "undefined") {_RecordType("<5712,5723,164>",(PercentSign)); Inst177++; } } catch(e) {}
[Inf("∞"), PercentSign("%")];
try { if (Inst178 <= 1000 && typeof (usPercentFormatter) != "undefined") {_RecordType("<5731,5749,165>",(usPercentFormatter)); Inst178++; } } catch(e) {}
usPercentFormatter;
try { if (Inst179 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<5752,5760,166>",(Infinity)); Inst179++; } } catch(e) {}
-Infinity;
try { if (Inst180 <= 1000 && typeof (MinusSign) != "undefined") {_RecordType("<5763,5772,167>",(MinusSign)); Inst180++; } } catch(e) {}try { if (Inst181 <= 1000 && typeof (Inf) != "undefined") {_RecordType("<5779,5782,167>",(Inf)); Inst181++; } } catch(e) {}try { if (Inst182 <= 1000 && typeof (PercentSign) != "undefined") {_RecordType("<5789,5800,167>",(PercentSign)); Inst182++; } } catch(e) {}
[MinusSign("-"), Inf("∞"), PercentSign("%")];
var dePercentOptions = {
  style: "percent",
  minimumFractionDigits: 1,
  maximumFractionDigits: 1
};
try { if (Inst183 <= 1000 && typeof (dePercentOptions) != "undefined") {_RecordType("<5812,5828,168>",(dePercentOptions)); Inst183++; } } catch(e) {}
try { if (Inst185 <= 1000 && typeof (Intl.NumberFormat) != "undefined") {_RecordType("<5940,5957,173>",(Intl.NumberFormat)); Inst185++; } } catch(e) {}try { if (Inst186 <= 1000 && typeof (Intl) != "undefined") {_RecordType("<5940,5944,173>",(Intl)); Inst186++; } } catch(e) {}try { if (Inst187 <= 1000 && typeof (dePercentOptions) != "undefined") {_RecordType("<5964,5980,173>",(dePercentOptions)); Inst187++; } } catch(e) {}
var dePercentFormatter = new Intl.NumberFormat("de", dePercentOptions);
try { if (Inst184 <= 1000 && typeof (dePercentFormatter) != "undefined") {_RecordType("<5915,5933,173>",(dePercentFormatter)); Inst184++; } } catch(e) {}
try { if (Inst188 <= 1000 && typeof (dePercentFormatter) != "undefined") {_RecordType("<5983,6001,174>",(dePercentFormatter)); Inst188++; } } catch(e) {}
dePercentFormatter;
0.375;
try { if (Inst189 <= 1000 && typeof (Integer) != "undefined") {_RecordType("<6011,6018,176>",(Integer)); Inst189++; } } catch(e) {}try { if (Inst190 <= 1000 && typeof (Decimal) != "undefined") {_RecordType("<6026,6033,176>",(Decimal)); Inst190++; } } catch(e) {}try { if (Inst191 <= 1000 && typeof (Fraction) != "undefined") {_RecordType("<6040,6048,176>",(Fraction)); Inst191++; } } catch(e) {}try { if (Inst192 <= 1000 && typeof (Literal) != "undefined") {_RecordType("<6055,6062,176>",(Literal)); Inst192++; } } catch(e) {}try { if (Inst193 <= 1000 && typeof (PercentSign) != "undefined") {_RecordType("<6072,6083,176>",(PercentSign)); Inst193++; } } catch(e) {}
[Integer("37"), Decimal(","), Fraction("5"), Literal("\xA0"), PercentSign("%")];
try { if (Inst194 <= 1000 && typeof (dePercentFormatter) != "undefined") {_RecordType("<6091,6109,177>",(dePercentFormatter)); Inst194++; } } catch(e) {}
dePercentFormatter;
-1284.375;
try { if (Inst195 <= 1000 && typeof (MinusSign) != "undefined") {_RecordType("<6123,6132,179>",(MinusSign)); Inst195++; } } catch(e) {}try { if (Inst196 <= 1000 && typeof (Integer) != "undefined") {_RecordType("<6139,6146,179>",(Integer)); Inst196++; } } catch(e) {}try { if (Inst197 <= 1000 && typeof (Group) != "undefined") {_RecordType("<6155,6160,179>",(Group)); Inst197++; } } catch(e) {}try { if (Inst198 <= 1000 && typeof (Integer) != "undefined") {_RecordType("<6167,6174,179>",(Integer)); Inst198++; } } catch(e) {}try { if (Inst199 <= 1000 && typeof (Decimal) != "undefined") {_RecordType("<6183,6190,179>",(Decimal)); Inst199++; } } catch(e) {}try { if (Inst200 <= 1000 && typeof (Fraction) != "undefined") {_RecordType("<6197,6205,179>",(Fraction)); Inst200++; } } catch(e) {}try { if (Inst201 <= 1000 && typeof (Literal) != "undefined") {_RecordType("<6212,6219,179>",(Literal)); Inst201++; } } catch(e) {}try { if (Inst202 <= 1000 && typeof (PercentSign) != "undefined") {_RecordType("<6229,6240,179>",(PercentSign)); Inst202++; } } catch(e) {}
[MinusSign("-"), Integer("128"), Group("."), Integer("437"), Decimal(","), Fraction("5"), Literal("\xA0"), PercentSign("%")];
try { if (Inst203 <= 1000 && typeof (dePercentFormatter) != "undefined") {_RecordType("<6248,6266,180>",(dePercentFormatter)); Inst203++; } } catch(e) {}
dePercentFormatter;
try { if (Inst204 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<6268,6271,181>",(NaN)); Inst204++; } } catch(e) {}
NaN;
try { if (Inst205 <= 1000 && typeof (Nan) != "undefined") {_RecordType("<6274,6277,182>",(Nan)); Inst205++; } } catch(e) {}try { if (Inst206 <= 1000 && typeof (Literal) != "undefined") {_RecordType("<6286,6293,182>",(Literal)); Inst206++; } } catch(e) {}try { if (Inst207 <= 1000 && typeof (PercentSign) != "undefined") {_RecordType("<6303,6314,182>",(PercentSign)); Inst207++; } } catch(e) {}
[Nan("NaN"), Literal("\xA0"), PercentSign("%")];
try { if (Inst208 <= 1000 && typeof (dePercentFormatter) != "undefined") {_RecordType("<6322,6340,183>",(dePercentFormatter)); Inst208++; } } catch(e) {}
dePercentFormatter;
try { if (Inst209 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<6342,6350,184>",(Infinity)); Inst209++; } } catch(e) {}
Infinity;
try { if (Inst210 <= 1000 && typeof (Inf) != "undefined") {_RecordType("<6353,6356,185>",(Inf)); Inst210++; } } catch(e) {}try { if (Inst211 <= 1000 && typeof (Literal) != "undefined") {_RecordType("<6363,6370,185>",(Literal)); Inst211++; } } catch(e) {}try { if (Inst212 <= 1000 && typeof (PercentSign) != "undefined") {_RecordType("<6380,6391,185>",(PercentSign)); Inst212++; } } catch(e) {}
[Inf("∞"), Literal("\xA0"), PercentSign("%")];
try { if (Inst213 <= 1000 && typeof (dePercentFormatter) != "undefined") {_RecordType("<6399,6417,186>",(dePercentFormatter)); Inst213++; } } catch(e) {}
dePercentFormatter;
try { if (Inst214 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<6420,6428,187>",(Infinity)); Inst214++; } } catch(e) {}
-Infinity;
try { if (Inst215 <= 1000 && typeof (MinusSign) != "undefined") {_RecordType("<6431,6440,188>",(MinusSign)); Inst215++; } } catch(e) {}try { if (Inst216 <= 1000 && typeof (Inf) != "undefined") {_RecordType("<6447,6450,188>",(Inf)); Inst216++; } } catch(e) {}try { if (Inst217 <= 1000 && typeof (Literal) != "undefined") {_RecordType("<6457,6464,188>",(Literal)); Inst217++; } } catch(e) {}try { if (Inst218 <= 1000 && typeof (PercentSign) != "undefined") {_RecordType("<6474,6485,188>",(PercentSign)); Inst218++; } } catch(e) {}
[MinusSign("-"), Inf("∞"), Literal("\xA0"), PercentSign("%")];
var arPercentOptions = {
  style: "percent",
  minimumFractionDigits: 2
};
try { if (Inst219 <= 1000 && typeof (arPercentOptions) != "undefined") {_RecordType("<6497,6513,189>",(arPercentOptions)); Inst219++; } } catch(e) {}
try { if (Inst221 <= 1000 && typeof (Intl.NumberFormat) != "undefined") {_RecordType("<6597,6614,193>",(Intl.NumberFormat)); Inst221++; } } catch(e) {}try { if (Inst222 <= 1000 && typeof (Intl) != "undefined") {_RecordType("<6597,6601,193>",(Intl)); Inst222++; } } catch(e) {}try { if (Inst223 <= 1000 && typeof (arPercentOptions) != "undefined") {_RecordType("<6624,6640,193>",(arPercentOptions)); Inst223++; } } catch(e) {}
var arPercentFormatter = new Intl.NumberFormat("ar-IQ", arPercentOptions);
try { if (Inst220 <= 1000 && typeof (arPercentFormatter) != "undefined") {_RecordType("<6572,6590,193>",(arPercentFormatter)); Inst220++; } } catch(e) {}
try { if (Inst224 <= 1000 && typeof (arPercentFormatter) != "undefined") {_RecordType("<6643,6661,194>",(arPercentFormatter)); Inst224++; } } catch(e) {}
arPercentFormatter;
-135.32;
try { if (Inst225 <= 1000 && typeof (MinusSign) != "undefined") {_RecordType("<6673,6682,196>",(MinusSign)); Inst225++; } } catch(e) {}try { if (Inst226 <= 1000 && typeof (Integer) != "undefined") {_RecordType("<6697,6704,196>",(Integer)); Inst226++; } } catch(e) {}try { if (Inst227 <= 1000 && typeof (Group) != "undefined") {_RecordType("<6712,6717,196>",(Group)); Inst227++; } } catch(e) {}try { if (Inst228 <= 1000 && typeof (Integer) != "undefined") {_RecordType("<6724,6731,196>",(Integer)); Inst228++; } } catch(e) {}try { if (Inst229 <= 1000 && typeof (Decimal) != "undefined") {_RecordType("<6740,6747,196>",(Decimal)); Inst229++; } } catch(e) {}try { if (Inst230 <= 1000 && typeof (Fraction) != "undefined") {_RecordType("<6754,6762,196>",(Fraction)); Inst230++; } } catch(e) {}try { if (Inst231 <= 1000 && typeof (PercentSign) != "undefined") {_RecordType("<6770,6781,196>",(PercentSign)); Inst231++; } } catch(e) {}
[MinusSign("\u{061C}-"), Integer("١٣"), Group("٬"), Integer("٥٣٢"), Decimal("٫"), Fraction("٠٠"), PercentSign("٪\u{061C}")];
// Decimals.
var usDecimalOptions = {
  style: "decimal",
  maximumFractionDigits: 7 // minimum defaults to 0

};
try { if (Inst232 <= 1000 && typeof (usDecimalOptions) != "undefined") {_RecordType("<6814,6830,198>",(usDecimalOptions)); Inst232++; } } catch(e) {}
try { if (Inst234 <= 1000 && typeof (Intl.NumberFormat) != "undefined") {_RecordType("<6940,6957,203>",(Intl.NumberFormat)); Inst234++; } } catch(e) {}try { if (Inst235 <= 1000 && typeof (Intl) != "undefined") {_RecordType("<6940,6944,203>",(Intl)); Inst235++; } } catch(e) {}try { if (Inst236 <= 1000 && typeof (usDecimalOptions) != "undefined") {_RecordType("<6967,6983,203>",(usDecimalOptions)); Inst236++; } } catch(e) {}
var usDecimalFormatter = new Intl.NumberFormat("en-US", usDecimalOptions);
try { if (Inst233 <= 1000 && typeof (usDecimalFormatter) != "undefined") {_RecordType("<6915,6933,203>",(usDecimalFormatter)); Inst233++; } } catch(e) {}
try { if (Inst237 <= 1000 && typeof (usDecimalFormatter) != "undefined") {_RecordType("<6986,7004,204>",(usDecimalFormatter)); Inst237++; } } catch(e) {}
usDecimalFormatter;
42;
try { if (Inst238 <= 1000 && typeof (Integer) != "undefined") {_RecordType("<7011,7018,206>",(Integer)); Inst238++; } } catch(e) {}
[Integer("42")];
try { if (Inst239 <= 1000 && typeof (usDecimalFormatter) != "undefined") {_RecordType("<7027,7045,207>",(usDecimalFormatter)); Inst239++; } } catch(e) {}
usDecimalFormatter;
1337;
try { if (Inst240 <= 1000 && typeof (Integer) != "undefined") {_RecordType("<7054,7061,209>",(Integer)); Inst240++; } } catch(e) {}try { if (Inst241 <= 1000 && typeof (Group) != "undefined") {_RecordType("<7068,7073,209>",(Group)); Inst241++; } } catch(e) {}try { if (Inst242 <= 1000 && typeof (Integer) != "undefined") {_RecordType("<7080,7087,209>",(Integer)); Inst242++; } } catch(e) {}
[Integer("1"), Group(","), Integer("337")];
try { if (Inst243 <= 1000 && typeof (usDecimalFormatter) != "undefined") {_RecordType("<7097,7115,210>",(usDecimalFormatter)); Inst243++; } } catch(e) {}
usDecimalFormatter;
-6.25;
try { if (Inst244 <= 1000 && typeof (MinusSign) != "undefined") {_RecordType("<7125,7134,212>",(MinusSign)); Inst244++; } } catch(e) {}try { if (Inst245 <= 1000 && typeof (Integer) != "undefined") {_RecordType("<7141,7148,212>",(Integer)); Inst245++; } } catch(e) {}try { if (Inst246 <= 1000 && typeof (Decimal) != "undefined") {_RecordType("<7155,7162,212>",(Decimal)); Inst246++; } } catch(e) {}try { if (Inst247 <= 1000 && typeof (Fraction) != "undefined") {_RecordType("<7169,7177,212>",(Fraction)); Inst247++; } } catch(e) {}
[MinusSign("-"), Integer("6"), Decimal("."), Fraction("25")];
try { if (Inst248 <= 1000 && typeof (usDecimalFormatter) != "undefined") {_RecordType("<7186,7204,213>",(usDecimalFormatter)); Inst248++; } } catch(e) {}
usDecimalFormatter;
-1376.25;
try { if (Inst249 <= 1000 && typeof (MinusSign) != "undefined") {_RecordType("<7217,7226,215>",(MinusSign)); Inst249++; } } catch(e) {}try { if (Inst250 <= 1000 && typeof (Integer) != "undefined") {_RecordType("<7233,7240,215>",(Integer)); Inst250++; } } catch(e) {}try { if (Inst251 <= 1000 && typeof (Group) != "undefined") {_RecordType("<7247,7252,215>",(Group)); Inst251++; } } catch(e) {}try { if (Inst252 <= 1000 && typeof (Integer) != "undefined") {_RecordType("<7259,7266,215>",(Integer)); Inst252++; } } catch(e) {}try { if (Inst253 <= 1000 && typeof (Decimal) != "undefined") {_RecordType("<7275,7282,215>",(Decimal)); Inst253++; } } catch(e) {}try { if (Inst254 <= 1000 && typeof (Fraction) != "undefined") {_RecordType("<7289,7297,215>",(Fraction)); Inst254++; } } catch(e) {}
[MinusSign("-"), Integer("1"), Group(","), Integer("376"), Decimal("."), Fraction("25")];
try { if (Inst255 <= 1000 && typeof (usDecimalFormatter) != "undefined") {_RecordType("<7306,7324,216>",(usDecimalFormatter)); Inst255++; } } catch(e) {}
usDecimalFormatter;
124816.8359375;
try { if (Inst256 <= 1000 && typeof (Integer) != "undefined") {_RecordType("<7343,7350,218>",(Integer)); Inst256++; } } catch(e) {}try { if (Inst257 <= 1000 && typeof (Group) != "undefined") {_RecordType("<7359,7364,218>",(Group)); Inst257++; } } catch(e) {}try { if (Inst258 <= 1000 && typeof (Integer) != "undefined") {_RecordType("<7371,7378,218>",(Integer)); Inst258++; } } catch(e) {}try { if (Inst259 <= 1000 && typeof (Decimal) != "undefined") {_RecordType("<7387,7394,218>",(Decimal)); Inst259++; } } catch(e) {}try { if (Inst260 <= 1000 && typeof (Fraction) != "undefined") {_RecordType("<7401,7409,218>",(Fraction)); Inst260++; } } catch(e) {}
[Integer("124"), Group(","), Integer("816"), Decimal("."), Fraction("8359375")];
var usNoGroupingDecimalOptions = {
  style: "decimal",
  useGrouping: false,
  maximumFractionDigits: 7 // minimum defaults to 0

};
try { if (Inst261 <= 1000 && typeof (usNoGroupingDecimalOptions) != "undefined") {_RecordType("<7427,7453,219>",(usNoGroupingDecimalOptions)); Inst261++; } } catch(e) {}
try { if (Inst263 <= 1000 && typeof (Intl.NumberFormat) != "undefined") {_RecordType("<7595,7612,225>",(Intl.NumberFormat)); Inst263++; } } catch(e) {}try { if (Inst264 <= 1000 && typeof (Intl) != "undefined") {_RecordType("<7595,7599,225>",(Intl)); Inst264++; } } catch(e) {}try { if (Inst265 <= 1000 && typeof (usNoGroupingDecimalOptions) != "undefined") {_RecordType("<7622,7648,225>",(usNoGroupingDecimalOptions)); Inst265++; } } catch(e) {}
var usNoGroupingDecimalFormatter = new Intl.NumberFormat("en-US", usNoGroupingDecimalOptions);
try { if (Inst262 <= 1000 && typeof (usNoGroupingDecimalFormatter) != "undefined") {_RecordType("<7560,7588,225>",(usNoGroupingDecimalFormatter)); Inst262++; } } catch(e) {}
try { if (Inst266 <= 1000 && typeof (usNoGroupingDecimalFormatter) != "undefined") {_RecordType("<7651,7679,226>",(usNoGroupingDecimalFormatter)); Inst266++; } } catch(e) {}
usNoGroupingDecimalFormatter;
1337;
try { if (Inst267 <= 1000 && typeof (Integer) != "undefined") {_RecordType("<7688,7695,228>",(Integer)); Inst267++; } } catch(e) {}
[Integer("1337")];
try { if (Inst268 <= 1000 && typeof (usNoGroupingDecimalFormatter) != "undefined") {_RecordType("<7706,7734,229>",(usNoGroupingDecimalFormatter)); Inst268++; } } catch(e) {}
usNoGroupingDecimalFormatter;
-6.25;
try { if (Inst269 <= 1000 && typeof (MinusSign) != "undefined") {_RecordType("<7744,7753,231>",(MinusSign)); Inst269++; } } catch(e) {}try { if (Inst270 <= 1000 && typeof (Integer) != "undefined") {_RecordType("<7760,7767,231>",(Integer)); Inst270++; } } catch(e) {}try { if (Inst271 <= 1000 && typeof (Decimal) != "undefined") {_RecordType("<7774,7781,231>",(Decimal)); Inst271++; } } catch(e) {}try { if (Inst272 <= 1000 && typeof (Fraction) != "undefined") {_RecordType("<7788,7796,231>",(Fraction)); Inst272++; } } catch(e) {}
[MinusSign("-"), Integer("6"), Decimal("."), Fraction("25")];
try { if (Inst273 <= 1000 && typeof (usNoGroupingDecimalFormatter) != "undefined") {_RecordType("<7805,7833,232>",(usNoGroupingDecimalFormatter)); Inst273++; } } catch(e) {}
usNoGroupingDecimalFormatter;
-1376.25;
try { if (Inst274 <= 1000 && typeof (MinusSign) != "undefined") {_RecordType("<7846,7855,234>",(MinusSign)); Inst274++; } } catch(e) {}try { if (Inst275 <= 1000 && typeof (Integer) != "undefined") {_RecordType("<7862,7869,234>",(Integer)); Inst275++; } } catch(e) {}try { if (Inst276 <= 1000 && typeof (Decimal) != "undefined") {_RecordType("<7879,7886,234>",(Decimal)); Inst276++; } } catch(e) {}try { if (Inst277 <= 1000 && typeof (Fraction) != "undefined") {_RecordType("<7893,7901,234>",(Fraction)); Inst277++; } } catch(e) {}
[MinusSign("-"), Integer("1376"), Decimal("."), Fraction("25")];
try { if (Inst278 <= 1000 && typeof (usNoGroupingDecimalFormatter) != "undefined") {_RecordType("<7910,7938,235>",(usNoGroupingDecimalFormatter)); Inst278++; } } catch(e) {}
usNoGroupingDecimalFormatter;
124816.8359375;
try { if (Inst279 <= 1000 && typeof (Integer) != "undefined") {_RecordType("<7957,7964,237>",(Integer)); Inst279++; } } catch(e) {}try { if (Inst280 <= 1000 && typeof (Decimal) != "undefined") {_RecordType("<7976,7983,237>",(Decimal)); Inst280++; } } catch(e) {}try { if (Inst281 <= 1000 && typeof (Fraction) != "undefined") {_RecordType("<7990,7998,237>",(Fraction)); Inst281++; } } catch(e) {}
[Integer("124816"), Decimal("."), Fraction("8359375")];
var deDecimalOptions = {
  style: "decimal",
  maximumFractionDigits: 7 // minimum defaults to 0

};
try { if (Inst282 <= 1000 && typeof (deDecimalOptions) != "undefined") {_RecordType("<8016,8032,238>",(deDecimalOptions)); Inst282++; } } catch(e) {}
try { if (Inst284 <= 1000 && typeof (Intl.NumberFormat) != "undefined") {_RecordType("<8142,8159,243>",(Intl.NumberFormat)); Inst284++; } } catch(e) {}try { if (Inst285 <= 1000 && typeof (Intl) != "undefined") {_RecordType("<8142,8146,243>",(Intl)); Inst285++; } } catch(e) {}try { if (Inst286 <= 1000 && typeof (deDecimalOptions) != "undefined") {_RecordType("<8169,8185,243>",(deDecimalOptions)); Inst286++; } } catch(e) {}
var deDecimalFormatter = new Intl.NumberFormat("de-DE", deDecimalOptions);
try { if (Inst283 <= 1000 && typeof (deDecimalFormatter) != "undefined") {_RecordType("<8117,8135,243>",(deDecimalFormatter)); Inst283++; } } catch(e) {}
try { if (Inst287 <= 1000 && typeof (deDecimalFormatter) != "undefined") {_RecordType("<8188,8206,244>",(deDecimalFormatter)); Inst287++; } } catch(e) {}
deDecimalFormatter;
42;
try { if (Inst288 <= 1000 && typeof (Integer) != "undefined") {_RecordType("<8213,8220,246>",(Integer)); Inst288++; } } catch(e) {}
[Integer("42")];
try { if (Inst289 <= 1000 && typeof (deDecimalFormatter) != "undefined") {_RecordType("<8229,8247,247>",(deDecimalFormatter)); Inst289++; } } catch(e) {}
deDecimalFormatter;
1337;
try { if (Inst290 <= 1000 && typeof (Integer) != "undefined") {_RecordType("<8256,8263,249>",(Integer)); Inst290++; } } catch(e) {}try { if (Inst291 <= 1000 && typeof (Group) != "undefined") {_RecordType("<8270,8275,249>",(Group)); Inst291++; } } catch(e) {}try { if (Inst292 <= 1000 && typeof (Integer) != "undefined") {_RecordType("<8282,8289,249>",(Integer)); Inst292++; } } catch(e) {}
[Integer("1"), Group("."), Integer("337")];
try { if (Inst293 <= 1000 && typeof (deDecimalFormatter) != "undefined") {_RecordType("<8299,8317,250>",(deDecimalFormatter)); Inst293++; } } catch(e) {}
deDecimalFormatter;
-6.25;
try { if (Inst294 <= 1000 && typeof (MinusSign) != "undefined") {_RecordType("<8327,8336,252>",(MinusSign)); Inst294++; } } catch(e) {}try { if (Inst295 <= 1000 && typeof (Integer) != "undefined") {_RecordType("<8343,8350,252>",(Integer)); Inst295++; } } catch(e) {}try { if (Inst296 <= 1000 && typeof (Decimal) != "undefined") {_RecordType("<8357,8364,252>",(Decimal)); Inst296++; } } catch(e) {}try { if (Inst297 <= 1000 && typeof (Fraction) != "undefined") {_RecordType("<8371,8379,252>",(Fraction)); Inst297++; } } catch(e) {}
[MinusSign("-"), Integer("6"), Decimal(","), Fraction("25")];
try { if (Inst298 <= 1000 && typeof (deDecimalFormatter) != "undefined") {_RecordType("<8388,8406,253>",(deDecimalFormatter)); Inst298++; } } catch(e) {}
deDecimalFormatter;
-1376.25;
try { if (Inst299 <= 1000 && typeof (MinusSign) != "undefined") {_RecordType("<8419,8428,255>",(MinusSign)); Inst299++; } } catch(e) {}try { if (Inst300 <= 1000 && typeof (Integer) != "undefined") {_RecordType("<8435,8442,255>",(Integer)); Inst300++; } } catch(e) {}try { if (Inst301 <= 1000 && typeof (Group) != "undefined") {_RecordType("<8449,8454,255>",(Group)); Inst301++; } } catch(e) {}try { if (Inst302 <= 1000 && typeof (Integer) != "undefined") {_RecordType("<8461,8468,255>",(Integer)); Inst302++; } } catch(e) {}try { if (Inst303 <= 1000 && typeof (Decimal) != "undefined") {_RecordType("<8477,8484,255>",(Decimal)); Inst303++; } } catch(e) {}try { if (Inst304 <= 1000 && typeof (Fraction) != "undefined") {_RecordType("<8491,8499,255>",(Fraction)); Inst304++; } } catch(e) {}
[MinusSign("-"), Integer("1"), Group("."), Integer("376"), Decimal(","), Fraction("25")];
try { if (Inst305 <= 1000 && typeof (deDecimalFormatter) != "undefined") {_RecordType("<8508,8526,256>",(deDecimalFormatter)); Inst305++; } } catch(e) {}
deDecimalFormatter;
124816.8359375;
try { if (Inst306 <= 1000 && typeof (Integer) != "undefined") {_RecordType("<8545,8552,258>",(Integer)); Inst306++; } } catch(e) {}try { if (Inst307 <= 1000 && typeof (Group) != "undefined") {_RecordType("<8561,8566,258>",(Group)); Inst307++; } } catch(e) {}try { if (Inst308 <= 1000 && typeof (Integer) != "undefined") {_RecordType("<8573,8580,258>",(Integer)); Inst308++; } } catch(e) {}try { if (Inst309 <= 1000 && typeof (Decimal) != "undefined") {_RecordType("<8589,8596,258>",(Decimal)); Inst309++; } } catch(e) {}try { if (Inst310 <= 1000 && typeof (Fraction) != "undefined") {_RecordType("<8603,8611,258>",(Fraction)); Inst310++; } } catch(e) {}
[Integer("124"), Group("."), Integer("816"), Decimal(","), Fraction("8359375")];
var deNoGroupingDecimalOptions = {
  style: "decimal",
  useGrouping: false,
  maximumFractionDigits: 7 // minimum defaults to 0

};
try { if (Inst311 <= 1000 && typeof (deNoGroupingDecimalOptions) != "undefined") {_RecordType("<8629,8655,259>",(deNoGroupingDecimalOptions)); Inst311++; } } catch(e) {}
try { if (Inst313 <= 1000 && typeof (Intl.NumberFormat) != "undefined") {_RecordType("<8797,8814,265>",(Intl.NumberFormat)); Inst313++; } } catch(e) {}try { if (Inst314 <= 1000 && typeof (Intl) != "undefined") {_RecordType("<8797,8801,265>",(Intl)); Inst314++; } } catch(e) {}try { if (Inst315 <= 1000 && typeof (deNoGroupingDecimalOptions) != "undefined") {_RecordType("<8824,8850,265>",(deNoGroupingDecimalOptions)); Inst315++; } } catch(e) {}
var deNoGroupingDecimalFormatter = new Intl.NumberFormat("de-DE", deNoGroupingDecimalOptions);
try { if (Inst312 <= 1000 && typeof (deNoGroupingDecimalFormatter) != "undefined") {_RecordType("<8762,8790,265>",(deNoGroupingDecimalFormatter)); Inst312++; } } catch(e) {}
try { if (Inst316 <= 1000 && typeof (deNoGroupingDecimalFormatter) != "undefined") {_RecordType("<8853,8881,266>",(deNoGroupingDecimalFormatter)); Inst316++; } } catch(e) {}
deNoGroupingDecimalFormatter;
1337;
try { if (Inst317 <= 1000 && typeof (Integer) != "undefined") {_RecordType("<8890,8897,268>",(Integer)); Inst317++; } } catch(e) {}
[Integer("1337")];
try { if (Inst318 <= 1000 && typeof (deNoGroupingDecimalFormatter) != "undefined") {_RecordType("<8908,8936,269>",(deNoGroupingDecimalFormatter)); Inst318++; } } catch(e) {}
deNoGroupingDecimalFormatter;
-6.25;
try { if (Inst319 <= 1000 && typeof (MinusSign) != "undefined") {_RecordType("<8946,8955,271>",(MinusSign)); Inst319++; } } catch(e) {}try { if (Inst320 <= 1000 && typeof (Integer) != "undefined") {_RecordType("<8962,8969,271>",(Integer)); Inst320++; } } catch(e) {}try { if (Inst321 <= 1000 && typeof (Decimal) != "undefined") {_RecordType("<8976,8983,271>",(Decimal)); Inst321++; } } catch(e) {}try { if (Inst322 <= 1000 && typeof (Fraction) != "undefined") {_RecordType("<8990,8998,271>",(Fraction)); Inst322++; } } catch(e) {}
[MinusSign("-"), Integer("6"), Decimal(","), Fraction("25")];
try { if (Inst323 <= 1000 && typeof (deNoGroupingDecimalFormatter) != "undefined") {_RecordType("<9007,9035,272>",(deNoGroupingDecimalFormatter)); Inst323++; } } catch(e) {}
deNoGroupingDecimalFormatter;
-1376.25;
try { if (Inst324 <= 1000 && typeof (MinusSign) != "undefined") {_RecordType("<9048,9057,274>",(MinusSign)); Inst324++; } } catch(e) {}try { if (Inst325 <= 1000 && typeof (Integer) != "undefined") {_RecordType("<9064,9071,274>",(Integer)); Inst325++; } } catch(e) {}try { if (Inst326 <= 1000 && typeof (Decimal) != "undefined") {_RecordType("<9081,9088,274>",(Decimal)); Inst326++; } } catch(e) {}try { if (Inst327 <= 1000 && typeof (Fraction) != "undefined") {_RecordType("<9095,9103,274>",(Fraction)); Inst327++; } } catch(e) {}
[MinusSign("-"), Integer("1376"), Decimal(","), Fraction("25")];
try { if (Inst328 <= 1000 && typeof (deNoGroupingDecimalFormatter) != "undefined") {_RecordType("<9112,9140,275>",(deNoGroupingDecimalFormatter)); Inst328++; } } catch(e) {}
deNoGroupingDecimalFormatter;
124816.8359375;
try { if (Inst329 <= 1000 && typeof (Integer) != "undefined") {_RecordType("<9159,9166,277>",(Integer)); Inst329++; } } catch(e) {}try { if (Inst330 <= 1000 && typeof (Decimal) != "undefined") {_RecordType("<9178,9185,277>",(Decimal)); Inst330++; } } catch(e) {}try { if (Inst331 <= 1000 && typeof (Fraction) != "undefined") {_RecordType("<9192,9200,277>",(Fraction)); Inst331++; } } catch(e) {}
[Integer("124816"), Decimal(","), Fraction("8359375")];

//-----------------------------------------------------------------------------
try { if (Inst332 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<9306,9319,280>",(reportCompare)); Inst332++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst333 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<9340,9353,281>",(reportCompare)); Inst333++; } } catch(e) {}
  reportCompare(0, 0, 'ok');
}

try { if (Inst334 <= 1000 && typeof (print) != "undefined") {_RecordType("<9370,9375,284>",(print)); Inst334++; } } catch(e) {}
print("Tests complete");

