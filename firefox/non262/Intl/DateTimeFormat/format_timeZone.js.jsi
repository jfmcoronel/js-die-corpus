var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// |reftest| skip-if(!this.hasOwnProperty("Intl"))
const defaultLocale = "en-US";
try { if (Inst0 <= 1000 && typeof (defaultLocale) != "undefined") {_RecordType("<57,70,2>",(defaultLocale)); Inst0++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (Date.UTC) != "undefined") {_RecordType("<102,110,3>",(Date.UTC)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Date) != "undefined") {_RecordType("<102,106,3>",(Date)); Inst3++; } } catch(e) {}
const defaultDate = Date.UTC(2012, 12 - 1, 6, 12, 0, 0);
try { if (Inst1 <= 1000 && typeof (defaultDate) != "undefined") {_RecordType("<88,99,3>",(defaultDate)); Inst1++; } } catch(e) {}
const defaultOptions = {
  year: "numeric",
  month: "numeric",
  day: "numeric",
  hour: "numeric",
  minute: "numeric",
  second: "numeric"
};
try { if (Inst4 <= 1000 && typeof (defaultOptions) != "undefined") {_RecordType("<145,159,4>",(defaultOptions)); Inst4++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (Object.assign) != "undefined") {_RecordType("<310,323,12>",(Object.assign)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Object) != "undefined") {_RecordType("<310,316,12>",(Object)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (defaultOptions) != "undefined") {_RecordType("<328,342,12>",(defaultOptions)); Inst8++; } } catch(e) {}
const longFormatOptions = Object.assign({}, defaultOptions, {
  month: "long"
});
try { if (Inst5 <= 1000 && typeof (longFormatOptions) != "undefined") {_RecordType("<290,307,12>",(longFormatOptions)); Inst5++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (Object.assign) != "undefined") {_RecordType("<394,407,15>",(Object.assign)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Object) != "undefined") {_RecordType("<394,400,15>",(Object)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (defaultOptions) != "undefined") {_RecordType("<412,426,15>",(defaultOptions)); Inst12++; } } catch(e) {}
const tzNameFormatOptions = Object.assign({}, defaultOptions, {
  timeZoneName: "short"
});
try { if (Inst9 <= 1000 && typeof (tzNameFormatOptions) != "undefined") {_RecordType("<372,391,15>",(tzNameFormatOptions)); Inst9++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (x) != "undefined") {_RecordType("<476,477,18>",(x)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (x) != "undefined") {_RecordType("<481,482,18>",(x)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (x) != "undefined") {_RecordType("<484,485,18>",(x)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (x.toUpperCase) != "undefined") {_RecordType("<489,502,18>",(x.toUpperCase)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (x) != "undefined") {_RecordType("<489,490,18>",(x)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (x) != "undefined") {_RecordType("<506,507,18>",(x)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (x.toLowerCase) != "undefined") {_RecordType("<511,524,18>",(x.toLowerCase)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (x) != "undefined") {_RecordType("<511,512,18>",(x)); Inst21++; } } catch(e) {}
const tzMapper = [x => x, x => x.toUpperCase(), x => x.toLowerCase()];
try { if (Inst13 <= 1000 && typeof (tzMapper) != "undefined") {_RecordType("<464,472,18>",(tzMapper)); Inst13++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (tzNameFormatOptions) != "undefined") {_RecordType("<722,741,27>",(tzNameFormatOptions)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (longFormatOptions) != "undefined") {_RecordType("<1002,1019,38>",(longFormatOptions)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (tzNameFormatOptions) != "undefined") {_RecordType("<1119,1138,43>",(tzNameFormatOptions)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (longFormatOptions) != "undefined") {_RecordType("<1318,1335,51>",(longFormatOptions)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (longFormatOptions) != "undefined") {_RecordType("<1434,1451,56>",(longFormatOptions)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (Date.UTC) != "undefined") {_RecordType("<1608,1616,63>",(Date.UTC)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (Date) != "undefined") {_RecordType("<1608,1612,63>",(Date)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (Date.UTC) != "undefined") {_RecordType("<1725,1733,67>",(Date.UTC)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (Date) != "undefined") {_RecordType("<1725,1729,67>",(Date)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (Date.UTC) != "undefined") {_RecordType("<1840,1848,71>",(Date.UTC)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (Date) != "undefined") {_RecordType("<1840,1844,71>",(Date)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (Date.UTC) != "undefined") {_RecordType("<1952,1960,75>",(Date.UTC)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (Date) != "undefined") {_RecordType("<1952,1956,75>",(Date)); Inst35++; } } catch(e) {}
const tests = [{
  timeZone: "UTC",
  result: "12/6/2012, 12:00:00 PM"
}, {
  timeZone: "America/Los_Angeles",
  result: "12/6/2012, 4:00:00 AM"
}, {
  timeZone: "America/New_York",
  options: tzNameFormatOptions,
  result: "12/6/2012, 7:00:00 AM EST"
}, {
  timeZone: "America/Caracas",
  result: "12/6/2012, 7:30:00 AM"
}, {
  timeZone: "Europe/London",
  result: "12/6/2012, 12:00:00 PM"
}, {
  timeZone: "Africa/Casablanca",
  locale: "ar-MA-u-ca-islamicc",
  options: longFormatOptions,
  result: "22 محرم 1434 12:00:00"
}, {
  timeZone: "Europe/Berlin",
  locale: "de-DE",
  options: tzNameFormatOptions,
  result: "6.12.2012, 13:00:00 MEZ"
}, {
  timeZone: "Asia/Kathmandu",
  result: "12/6/2012, 5:45:00 PM"
}, {
  timeZone: "Asia/Bangkok",
  locale: "th-th-u-nu-thai",
  options: longFormatOptions,
  result: "๖ ธันวาคม ๒๕๕๕ ๑๙:๐๐:๐๐"
}, {
  timeZone: "Asia/Tokyo",
  locale: "ja-JP",
  options: longFormatOptions,
  result: "2012年12月6日 21:00:00"
}, {
  timeZone: "Australia/Lord_Howe",
  result: "12/6/2012, 11:00:00 PM"
}, {
  timeZone: "Australia/Lord_Howe",
  date: Date.UTC(2012, 7 - 1, 6, 12, 0, 0),
  result: "7/6/2012, 10:30:00 PM"
}, {
  timeZone: "Pacific/Kiritimati",
  date: Date.UTC(1978, 12 - 1, 6, 12, 0, 0),
  result: "12/6/1978, 1:20:00 AM"
}, {
  timeZone: "Africa/Monrovia",
  date: Date.UTC(1971, 12 - 1, 6, 12, 0, 0),
  result: "12/6/1971, 11:15:30 AM"
}, {
  timeZone: "Asia/Riyadh",
  date: Date.UTC(1946, 12 - 1, 6, 12, 0, 0),
  result: "12/6/1946, 3:06:52 PM"
}];
try { if (Inst22 <= 1000 && typeof (tests) != "undefined") {_RecordType("<535,540,19>",(tests)); Inst22++; } } catch(e) {}

for (let {
  timeZone,
  result,
  locale = defaultLocale,
  date = defaultDate,
  options = defaultOptions
} of tests) {
try { if (Inst36 <= 1000 && typeof (timeZone) != "undefined") {_RecordType("<2041,2049,80>",(timeZone)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (result) != "undefined") {_RecordType("<2053,2059,81>",(result)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (locale) != "undefined") {_RecordType("<2063,2069,82>",(locale)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (defaultLocale) != "undefined") {_RecordType("<2072,2085,82>",(defaultLocale)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (date) != "undefined") {_RecordType("<2089,2093,83>",(date)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (defaultDate) != "undefined") {_RecordType("<2096,2107,83>",(defaultDate)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (options) != "undefined") {_RecordType("<2111,2118,84>",(options)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (defaultOptions) != "undefined") {_RecordType("<2121,2135,84>",(defaultOptions)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (tests) != "undefined") {_RecordType("<2141,2146,85>",(tests)); Inst44++; } } catch(e) {}
  for (let map of tzMapper) {
try { if (Inst45 <= 1000 && typeof (map) != "undefined") {_RecordType("<2161,2164,86>",(map)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (tzMapper) != "undefined") {_RecordType("<2168,2176,86>",(tzMapper)); Inst46++; } } catch(e) {}
try { if (Inst48 <= 1000 && typeof (Intl.DateTimeFormat) != "undefined") {_RecordType("<2198,2217,87>",(Intl.DateTimeFormat)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (Intl) != "undefined") {_RecordType("<2198,2202,87>",(Intl)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (locale) != "undefined") {_RecordType("<2218,2224,87>",(locale)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (Object.assign) != "undefined") {_RecordType("<2226,2239,87>",(Object.assign)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (Object) != "undefined") {_RecordType("<2226,2232,87>",(Object)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (map) != "undefined") {_RecordType("<2258,2261,88>",(map)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (timeZone) != "undefined") {_RecordType("<2262,2270,88>",(timeZone)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (options) != "undefined") {_RecordType("<2279,2286,89>",(options)); Inst55++; } } catch(e) {}
    let dtf = new Intl.DateTimeFormat(locale, Object.assign({
      timeZone: map(timeZone)
    }, options));
try { if (Inst47 <= 1000 && typeof (dtf) != "undefined") {_RecordType("<2188,2191,87>",(dtf)); Inst47++; } } catch(e) {}
try { if (Inst56 <= 1000 && typeof (dtf.format) != "undefined") {_RecordType("<2294,2304,90>",(dtf.format)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (dtf) != "undefined") {_RecordType("<2294,2297,90>",(dtf)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (date) != "undefined") {_RecordType("<2305,2309,90>",(date)); Inst58++; } } catch(e) {}
    dtf.format(date);
try { if (Inst59 <= 1000 && typeof (result) != "undefined") {_RecordType("<2316,2322,91>",(result)); Inst59++; } } catch(e) {}
    result;
try { if (Inst60 <= 1000 && typeof (dtf.resolvedOptions().timeZone) != "undefined") {_RecordType("<2328,2358,92>",(dtf.resolvedOptions().timeZone)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (dtf.resolvedOptions) != "undefined") {_RecordType("<2328,2347,92>",(dtf.resolvedOptions)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (dtf) != "undefined") {_RecordType("<2328,2331,92>",(dtf)); Inst62++; } } catch(e) {}
    dtf.resolvedOptions().timeZone;
try { if (Inst63 <= 1000 && typeof (timeZone) != "undefined") {_RecordType("<2364,2372,93>",(timeZone)); Inst63++; } } catch(e) {}
    timeZone;
  }
}

try { if (Inst64 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<2392,2405,97>",(reportCompare)); Inst64++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst65 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<2426,2439,98>",(reportCompare)); Inst65++; } } catch(e) {}
  reportCompare(0, 0, "ok");
}

