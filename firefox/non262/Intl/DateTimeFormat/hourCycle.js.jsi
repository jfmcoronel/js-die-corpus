var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
var Inst102 = 0;
var Inst103 = 0;
var Inst104 = 0;
var Inst105 = 0;
var Inst106 = 0;
var Inst107 = 0;
var Inst108 = 0;
var Inst109 = 0;
var Inst110 = 0;
var Inst111 = 0;
var Inst112 = 0;
var Inst113 = 0;
var Inst114 = 0;
var Inst115 = 0;
var Inst116 = 0;
var Inst117 = 0;
var Inst118 = 0;
var Inst119 = 0;
var Inst120 = 0;
var Inst121 = 0;
var Inst122 = 0;
var Inst123 = 0;
var Inst124 = 0;
var Inst125 = 0;
var Inst126 = 0;
var Inst127 = 0;
var Inst128 = 0;
var Inst129 = 0;
var Inst130 = 0;
var Inst131 = 0;
var Inst132 = 0;
var Inst133 = 0;
var Inst134 = 0;
var Inst135 = 0;
var Inst136 = 0;
var Inst137 = 0;
var Inst138 = 0;
var Inst139 = 0;
var Inst140 = 0;
var Inst141 = 0;
var Inst142 = 0;
var Inst143 = 0;
var Inst144 = 0;
var Inst145 = 0;
var Inst146 = 0;
var Inst147 = 0;
var Inst148 = 0;
var Inst149 = 0;
var Inst150 = 0;
var Inst151 = 0;
var Inst152 = 0;
var Inst153 = 0;
var Inst154 = 0;
var Inst155 = 0;
var Inst156 = 0;
var Inst157 = 0;
var Inst158 = 0;
var Inst159 = 0;
var Inst160 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// |reftest| skip-if(!this.hasOwnProperty("Intl"))
const hourCycleToH12Map = {
  "h11": true,
  "h12": true,
  "h23": false,
  "h24": false
};
try { if (Inst0 <= 1000 && typeof (hourCycleToH12Map) != "undefined") {_RecordType("<57,74,2>",(hourCycleToH12Map)); Inst0++; } } catch(e) {}

for (const key of Object.keys(hourCycleToH12Map)) {
try { if (Inst1 <= 1000 && typeof (key) != "undefined") {_RecordType("<155,158,9>",(key)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Object.keys) != "undefined") {_RecordType("<162,173,9>",(Object.keys)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Object) != "undefined") {_RecordType("<162,168,9>",(Object)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (hourCycleToH12Map) != "undefined") {_RecordType("<174,191,9>",(hourCycleToH12Map)); Inst4++; } } catch(e) {}
  const langTag = "en-US";
try { if (Inst5 <= 1000 && typeof (langTag) != "undefined") {_RecordType("<204,211,10>",(langTag)); Inst5++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (langTag) != "undefined") {_RecordType("<240,247,11>",(langTag)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (key) != "undefined") {_RecordType("<256,259,11>",(key)); Inst8++; } } catch(e) {}
  const loc = `${langTag}-u-hc-${key}`;
try { if (Inst6 <= 1000 && typeof (loc) != "undefined") {_RecordType("<231,234,11>",(loc)); Inst6++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (Intl.DateTimeFormat) != "undefined") {_RecordType("<281,300,12>",(Intl.DateTimeFormat)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Intl) != "undefined") {_RecordType("<281,285,12>",(Intl)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (loc) != "undefined") {_RecordType("<301,304,12>",(loc)); Inst12++; } } catch(e) {}
  const dtf = new Intl.DateTimeFormat(loc, {
    hour: "numeric"
  });
try { if (Inst9 <= 1000 && typeof (dtf) != "undefined") {_RecordType("<271,274,12>",(dtf)); Inst9++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (Intl.DateTimeFormat) != "undefined") {_RecordType("<353,372,15>",(Intl.DateTimeFormat)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Intl) != "undefined") {_RecordType("<353,357,15>",(Intl)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (langTag) != "undefined") {_RecordType("<373,380,15>",(langTag)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (key) != "undefined") {_RecordType("<420,423,17>",(key)); Inst17++; } } catch(e) {}
  const dtf2 = new Intl.DateTimeFormat(langTag, {
    hour: "numeric",
    hourCycle: key
  });
try { if (Inst13 <= 1000 && typeof (dtf2) != "undefined") {_RecordType("<342,346,15>",(dtf2)); Inst13++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (dtf.resolvedOptions().hourCycle) != "undefined") {_RecordType("<432,463,19>",(dtf.resolvedOptions().hourCycle)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (dtf.resolvedOptions) != "undefined") {_RecordType("<432,451,19>",(dtf.resolvedOptions)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (dtf) != "undefined") {_RecordType("<432,435,19>",(dtf)); Inst20++; } } catch(e) {}
  dtf.resolvedOptions().hourCycle;
try { if (Inst21 <= 1000 && typeof (dtf2.resolvedOptions().hourCycle) != "undefined") {_RecordType("<467,499,20>",(dtf2.resolvedOptions().hourCycle)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (dtf2.resolvedOptions) != "undefined") {_RecordType("<467,487,20>",(dtf2.resolvedOptions)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (dtf2) != "undefined") {_RecordType("<467,471,20>",(dtf2)); Inst23++; } } catch(e) {}
  dtf2.resolvedOptions().hourCycle;
}
/* Legacy hour12 compatibility */
// When constructed with hourCycle option, resolvedOptions' hour12 is correct.


for (const key of Object.keys(hourCycleToH12Map)) {
try { if (Inst24 <= 1000 && typeof (key) != "undefined") {_RecordType("<629,632,26>",(key)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Object.keys) != "undefined") {_RecordType("<636,647,26>",(Object.keys)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Object) != "undefined") {_RecordType("<636,642,26>",(Object)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (hourCycleToH12Map) != "undefined") {_RecordType("<648,665,26>",(hourCycleToH12Map)); Inst27++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (Intl.DateTimeFormat) != "undefined") {_RecordType("<688,707,27>",(Intl.DateTimeFormat)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (Intl) != "undefined") {_RecordType("<688,692,27>",(Intl)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (key) != "undefined") {_RecordType("<755,758,29>",(key)); Inst31++; } } catch(e) {}
  const dtf = new Intl.DateTimeFormat("en-US", {
    hour: "numeric",
    hourCycle: key
  });
try { if (Inst28 <= 1000 && typeof (dtf) != "undefined") {_RecordType("<678,681,27>",(dtf)); Inst28++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (dtf.resolvedOptions().hour12) != "undefined") {_RecordType("<767,795,31>",(dtf.resolvedOptions().hour12)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (dtf.resolvedOptions) != "undefined") {_RecordType("<767,786,31>",(dtf.resolvedOptions)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (dtf) != "undefined") {_RecordType("<767,770,31>",(dtf)); Inst34++; } } catch(e) {}
  dtf.resolvedOptions().hour12;
try { if (Inst35 <= 1000 && typeof (hourCycleToH12Map[key]) != "undefined") {_RecordType("<799,821,32>",(hourCycleToH12Map[key])); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (hourCycleToH12Map) != "undefined") {_RecordType("<799,816,32>",(hourCycleToH12Map)); Inst36++; } } catch(e) {}
  hourCycleToH12Map[key];
} // When constructed with hour12 option, resolvedOptions' hourCycle is correct


for (const [key, value] of Object.entries(hourCycleToH12Map)) {
try { if (Inst37 <= 1000 && typeof (key) != "undefined") {_RecordType("<917,920,36>",(key)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (value) != "undefined") {_RecordType("<922,927,36>",(value)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (Object.entries) != "undefined") {_RecordType("<932,946,36>",(Object.entries)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (Object) != "undefined") {_RecordType("<932,938,36>",(Object)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (hourCycleToH12Map) != "undefined") {_RecordType("<947,964,36>",(hourCycleToH12Map)); Inst41++; } } catch(e) {}
try { if (Inst43 <= 1000 && typeof (Intl.DateTimeFormat) != "undefined") {_RecordType("<987,1006,37>",(Intl.DateTimeFormat)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (Intl) != "undefined") {_RecordType("<987,991,37>",(Intl)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (value) != "undefined") {_RecordType("<1051,1056,39>",(value)); Inst45++; } } catch(e) {}
  const dtf = new Intl.DateTimeFormat("en-US", {
    hour: "numeric",
    hour12: value
  });
try { if (Inst42 <= 1000 && typeof (dtf) != "undefined") {_RecordType("<977,980,37>",(dtf)); Inst42++; } } catch(e) {}
try { if (Inst46 <= 1000 && typeof (hourCycleToH12Map[dtf.resolvedOptions().hourCycle]) != "undefined") {_RecordType("<1065,1115,41>",(hourCycleToH12Map[dtf.resolvedOptions().hourCycle])); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (hourCycleToH12Map) != "undefined") {_RecordType("<1065,1082,41>",(hourCycleToH12Map)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (dtf.resolvedOptions().hourCycle) != "undefined") {_RecordType("<1083,1114,41>",(dtf.resolvedOptions().hourCycle)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (dtf.resolvedOptions) != "undefined") {_RecordType("<1083,1102,41>",(dtf.resolvedOptions)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (dtf) != "undefined") {_RecordType("<1083,1086,41>",(dtf)); Inst50++; } } catch(e) {}
  hourCycleToH12Map[dtf.resolvedOptions().hourCycle];
try { if (Inst51 <= 1000 && typeof (value) != "undefined") {_RecordType("<1119,1124,42>",(value)); Inst51++; } } catch(e) {}
  value;
} // When constructed with both hour12 and hourCycle options that don't match
// hour12 takes a precedence.


for (const [key, value] of Object.entries(hourCycleToH12Map)) {
try { if (Inst52 <= 1000 && typeof (key) != "undefined") {_RecordType("<1248,1251,47>",(key)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (value) != "undefined") {_RecordType("<1253,1258,47>",(value)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (Object.entries) != "undefined") {_RecordType("<1263,1277,47>",(Object.entries)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1263,1269,47>",(Object)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (hourCycleToH12Map) != "undefined") {_RecordType("<1278,1295,47>",(hourCycleToH12Map)); Inst56++; } } catch(e) {}
try { if (Inst58 <= 1000 && typeof (Intl.DateTimeFormat) != "undefined") {_RecordType("<1318,1337,48>",(Intl.DateTimeFormat)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (Intl) != "undefined") {_RecordType("<1318,1322,48>",(Intl)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (key) != "undefined") {_RecordType("<1385,1388,50>",(key)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (value) != "undefined") {_RecordType("<1403,1408,51>",(value)); Inst61++; } } catch(e) {}
  const dtf = new Intl.DateTimeFormat("en-US", {
    hour: "numeric",
    hourCycle: key,
    hour12: !value
  });
try { if (Inst57 <= 1000 && typeof (dtf) != "undefined") {_RecordType("<1308,1311,48>",(dtf)); Inst57++; } } catch(e) {}
try { if (Inst62 <= 1000 && typeof (hourCycleToH12Map[dtf.resolvedOptions().hourCycle]) != "undefined") {_RecordType("<1417,1467,53>",(hourCycleToH12Map[dtf.resolvedOptions().hourCycle])); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (hourCycleToH12Map) != "undefined") {_RecordType("<1417,1434,53>",(hourCycleToH12Map)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (dtf.resolvedOptions().hourCycle) != "undefined") {_RecordType("<1435,1466,53>",(dtf.resolvedOptions().hourCycle)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (dtf.resolvedOptions) != "undefined") {_RecordType("<1435,1454,53>",(dtf.resolvedOptions)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (dtf) != "undefined") {_RecordType("<1435,1438,53>",(dtf)); Inst66++; } } catch(e) {}
  hourCycleToH12Map[dtf.resolvedOptions().hourCycle];
try { if (Inst67 <= 1000 && typeof (value) != "undefined") {_RecordType("<1472,1477,54>",(value)); Inst67++; } } catch(e) {}
  !value;
try { if (Inst68 <= 1000 && typeof (dtf.resolvedOptions().hour12) != "undefined") {_RecordType("<1481,1509,55>",(dtf.resolvedOptions().hour12)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (dtf.resolvedOptions) != "undefined") {_RecordType("<1481,1500,55>",(dtf.resolvedOptions)); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (dtf) != "undefined") {_RecordType("<1481,1484,55>",(dtf)); Inst70++; } } catch(e) {}
  dtf.resolvedOptions().hour12;
try { if (Inst71 <= 1000 && typeof (value) != "undefined") {_RecordType("<1514,1519,56>",(value)); Inst71++; } } catch(e) {}
  !value;
} // When constructed with hourCycle as extkey, resolvedOptions' hour12 is correct.


for (const [key, value] of Object.entries(hourCycleToH12Map)) {
try { if (Inst72 <= 1000 && typeof (key) != "undefined") {_RecordType("<1619,1622,60>",(key)); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (value) != "undefined") {_RecordType("<1624,1629,60>",(value)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (Object.entries) != "undefined") {_RecordType("<1634,1648,60>",(Object.entries)); Inst74++; } } catch(e) {}try { if (Inst75 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1634,1640,60>",(Object)); Inst75++; } } catch(e) {}try { if (Inst76 <= 1000 && typeof (hourCycleToH12Map) != "undefined") {_RecordType("<1649,1666,60>",(hourCycleToH12Map)); Inst76++; } } catch(e) {}
  const langTag = "en-US";
try { if (Inst77 <= 1000 && typeof (langTag) != "undefined") {_RecordType("<1679,1686,61>",(langTag)); Inst77++; } } catch(e) {}
try { if (Inst79 <= 1000 && typeof (langTag) != "undefined") {_RecordType("<1715,1722,62>",(langTag)); Inst79++; } } catch(e) {}try { if (Inst80 <= 1000 && typeof (key) != "undefined") {_RecordType("<1731,1734,62>",(key)); Inst80++; } } catch(e) {}
  const loc = `${langTag}-u-hc-${key}`;
try { if (Inst78 <= 1000 && typeof (loc) != "undefined") {_RecordType("<1706,1709,62>",(loc)); Inst78++; } } catch(e) {}
try { if (Inst82 <= 1000 && typeof (Intl.DateTimeFormat) != "undefined") {_RecordType("<1756,1775,63>",(Intl.DateTimeFormat)); Inst82++; } } catch(e) {}try { if (Inst83 <= 1000 && typeof (Intl) != "undefined") {_RecordType("<1756,1760,63>",(Intl)); Inst83++; } } catch(e) {}try { if (Inst84 <= 1000 && typeof (loc) != "undefined") {_RecordType("<1776,1779,63>",(loc)); Inst84++; } } catch(e) {}
  const dtf = new Intl.DateTimeFormat(loc, {
    hour: "numeric"
  });
try { if (Inst81 <= 1000 && typeof (dtf) != "undefined") {_RecordType("<1746,1749,63>",(dtf)); Inst81++; } } catch(e) {}
try { if (Inst85 <= 1000 && typeof (dtf.resolvedOptions().hour12) != "undefined") {_RecordType("<1811,1839,66>",(dtf.resolvedOptions().hour12)); Inst85++; } } catch(e) {}try { if (Inst86 <= 1000 && typeof (dtf.resolvedOptions) != "undefined") {_RecordType("<1811,1830,66>",(dtf.resolvedOptions)); Inst86++; } } catch(e) {}try { if (Inst87 <= 1000 && typeof (dtf) != "undefined") {_RecordType("<1811,1814,66>",(dtf)); Inst87++; } } catch(e) {}
  dtf.resolvedOptions().hour12;
try { if (Inst88 <= 1000 && typeof (value) != "undefined") {_RecordType("<1843,1848,67>",(value)); Inst88++; } } catch(e) {}
  value;
}

const expectedValuesENUS = {
  h11: "0 AM",
  h12: "12 AM",
  h23: "00",
  h24: "24"
};
try { if (Inst89 <= 1000 && typeof (expectedValuesENUS) != "undefined") {_RecordType("<1859,1877,70>",(expectedValuesENUS)); Inst89++; } } catch(e) {}
try { if (Inst91 <= 1000 && typeof (Date) != "undefined") {_RecordType("<1965,1969,76>",(Date)); Inst91++; } } catch(e) {}
const exampleDate = new Date(2017, 10 - 1, 10, 0);
try { if (Inst90 <= 1000 && typeof (exampleDate) != "undefined") {_RecordType("<1947,1958,76>",(exampleDate)); Inst90++; } } catch(e) {}

for (const [key, val] of Object.entries(expectedValuesENUS)) {
try { if (Inst92 <= 1000 && typeof (key) != "undefined") {_RecordType("<2005,2008,78>",(key)); Inst92++; } } catch(e) {}try { if (Inst93 <= 1000 && typeof (val) != "undefined") {_RecordType("<2010,2013,78>",(val)); Inst93++; } } catch(e) {}try { if (Inst94 <= 1000 && typeof (Object.entries) != "undefined") {_RecordType("<2018,2032,78>",(Object.entries)); Inst94++; } } catch(e) {}try { if (Inst95 <= 1000 && typeof (Object) != "undefined") {_RecordType("<2018,2024,78>",(Object)); Inst95++; } } catch(e) {}try { if (Inst96 <= 1000 && typeof (expectedValuesENUS) != "undefined") {_RecordType("<2033,2051,78>",(expectedValuesENUS)); Inst96++; } } catch(e) {}
try { if (Inst97 <= 1000 && typeof (Intl.DateTimeFormat("en-US", {
    hour: "numeric",
    hourCycle: key
  }).format) != "undefined") {_RecordType("<2058,2140,79>",(Intl.DateTimeFormat("en-US", {
    hour: "numeric",
    hourCycle: key
  }).format)); Inst97++; } } catch(e) {}try { if (Inst98 <= 1000 && typeof (Intl.DateTimeFormat) != "undefined") {_RecordType("<2058,2077,79>",(Intl.DateTimeFormat)); Inst98++; } } catch(e) {}try { if (Inst99 <= 1000 && typeof (Intl) != "undefined") {_RecordType("<2058,2062,79>",(Intl)); Inst99++; } } catch(e) {}try { if (Inst100 <= 1000 && typeof (key) != "undefined") {_RecordType("<2125,2128,81>",(key)); Inst100++; } } catch(e) {}try { if (Inst101 <= 1000 && typeof (exampleDate) != "undefined") {_RecordType("<2141,2152,82>",(exampleDate)); Inst101++; } } catch(e) {}
  Intl.DateTimeFormat("en-US", {
    hour: "numeric",
    hourCycle: key
  }).format(exampleDate);
try { if (Inst102 <= 1000 && typeof (val) != "undefined") {_RecordType("<2157,2160,83>",(val)); Inst102++; } } catch(e) {}
  val;
}

const invalidHourCycleValues = ["h5", "h0", "h28", "f28", "23"];
try { if (Inst103 <= 1000 && typeof (invalidHourCycleValues) != "undefined") {_RecordType("<2171,2193,86>",(invalidHourCycleValues)); Inst103++; } } catch(e) {}

for (const key of invalidHourCycleValues) {
try { if (Inst104 <= 1000 && typeof (key) != "undefined") {_RecordType("<2242,2245,88>",(key)); Inst104++; } } catch(e) {}try { if (Inst105 <= 1000 && typeof (invalidHourCycleValues) != "undefined") {_RecordType("<2249,2271,88>",(invalidHourCycleValues)); Inst105++; } } catch(e) {}
  const langTag = "en-US";
try { if (Inst106 <= 1000 && typeof (langTag) != "undefined") {_RecordType("<2283,2290,89>",(langTag)); Inst106++; } } catch(e) {}
try { if (Inst108 <= 1000 && typeof (langTag) != "undefined") {_RecordType("<2319,2326,90>",(langTag)); Inst108++; } } catch(e) {}try { if (Inst109 <= 1000 && typeof (key) != "undefined") {_RecordType("<2335,2338,90>",(key)); Inst109++; } } catch(e) {}
  const loc = `${langTag}-u-hc-${key}`;
try { if (Inst107 <= 1000 && typeof (loc) != "undefined") {_RecordType("<2310,2313,90>",(loc)); Inst107++; } } catch(e) {}
try { if (Inst111 <= 1000 && typeof (Intl.DateTimeFormat) != "undefined") {_RecordType("<2360,2379,91>",(Intl.DateTimeFormat)); Inst111++; } } catch(e) {}try { if (Inst112 <= 1000 && typeof (Intl) != "undefined") {_RecordType("<2360,2364,91>",(Intl)); Inst112++; } } catch(e) {}try { if (Inst113 <= 1000 && typeof (loc) != "undefined") {_RecordType("<2380,2383,91>",(loc)); Inst113++; } } catch(e) {}
  const dtf = new Intl.DateTimeFormat(loc, {
    hour: "numeric"
  });
try { if (Inst110 <= 1000 && typeof (dtf) != "undefined") {_RecordType("<2350,2353,91>",(dtf)); Inst110++; } } catch(e) {}
try { if (Inst114 <= 1000 && typeof (dtf.resolvedOptions().hour12) != "undefined") {_RecordType("<2415,2443,94>",(dtf.resolvedOptions().hour12)); Inst114++; } } catch(e) {}try { if (Inst115 <= 1000 && typeof (dtf.resolvedOptions) != "undefined") {_RecordType("<2415,2434,94>",(dtf.resolvedOptions)); Inst115++; } } catch(e) {}try { if (Inst116 <= 1000 && typeof (dtf) != "undefined") {_RecordType("<2415,2418,94>",(dtf)); Inst116++; } } catch(e) {}
  dtf.resolvedOptions().hour12;
  true;
try { if (Inst117 <= 1000 && typeof (dtf.resolvedOptions().hourCycle) != "undefined") {_RecordType("<2455,2486,96>",(dtf.resolvedOptions().hourCycle)); Inst117++; } } catch(e) {}try { if (Inst118 <= 1000 && typeof (dtf.resolvedOptions) != "undefined") {_RecordType("<2455,2474,96>",(dtf.resolvedOptions)); Inst118++; } } catch(e) {}try { if (Inst119 <= 1000 && typeof (dtf) != "undefined") {_RecordType("<2455,2458,96>",(dtf)); Inst119++; } } catch(e) {}
  dtf.resolvedOptions().hourCycle;
  "h12";
}

{
  // hourCycle is not present in resolvedOptions when the formatter has no hour field
try { if (Inst121 <= 1000 && typeof (Intl.DateTimeFormat("en-US", {
    hourCycle: "h11"
  }).resolvedOptions) != "undefined") {_RecordType("<2606,2678,102>",(Intl.DateTimeFormat("en-US", {
    hourCycle: "h11"
  }).resolvedOptions)); Inst121++; } } catch(e) {}try { if (Inst122 <= 1000 && typeof (Intl.DateTimeFormat) != "undefined") {_RecordType("<2606,2625,102>",(Intl.DateTimeFormat)); Inst122++; } } catch(e) {}try { if (Inst123 <= 1000 && typeof (Intl) != "undefined") {_RecordType("<2606,2610,102>",(Intl)); Inst123++; } } catch(e) {}
  const options = Intl.DateTimeFormat("en-US", {
    hourCycle: "h11"
  }).resolvedOptions();
try { if (Inst120 <= 1000 && typeof (options) != "undefined") {_RecordType("<2596,2603,102>",(options)); Inst120++; } } catch(e) {}
try { if (Inst124 <= 1000 && typeof (options) != "undefined") {_RecordType("<2699,2706,105>",(options)); Inst124++; } } catch(e) {}
  "hourCycle" in options;
  false;
try { if (Inst125 <= 1000 && typeof (options) != "undefined") {_RecordType("<2731,2738,107>",(options)); Inst125++; } } catch(e) {}
  "hour12" in options;
  false;
}
{
  // Make sure that hourCycle option overrides the unicode extension
try { if (Inst127 <= 1000 && typeof (Intl.DateTimeFormat) != "undefined") {_RecordType("<2834,2853,112>",(Intl.DateTimeFormat)); Inst127++; } } catch(e) {}try { if (Inst128 <= 1000 && typeof (Intl) != "undefined") {_RecordType("<2834,2838,112>",(Intl)); Inst128++; } } catch(e) {}
  let dtf = Intl.DateTimeFormat("en-US-u-hc-h23", {
    hourCycle: "h24",
    hour: "numeric"
  });
try { if (Inst126 <= 1000 && typeof (dtf) != "undefined") {_RecordType("<2828,2831,112>",(dtf)); Inst126++; } } catch(e) {}
try { if (Inst129 <= 1000 && typeof (dtf.resolvedOptions().hourCycle) != "undefined") {_RecordType("<2924,2955,116>",(dtf.resolvedOptions().hourCycle)); Inst129++; } } catch(e) {}try { if (Inst130 <= 1000 && typeof (dtf.resolvedOptions) != "undefined") {_RecordType("<2924,2943,116>",(dtf.resolvedOptions)); Inst130++; } } catch(e) {}try { if (Inst131 <= 1000 && typeof (dtf) != "undefined") {_RecordType("<2924,2927,116>",(dtf)); Inst131++; } } catch(e) {}
  dtf.resolvedOptions().hourCycle;
  "h24";
}
{
  // Make sure that hour12 option overrides the unicode extension
try { if (Inst133 <= 1000 && typeof (Intl.DateTimeFormat) != "undefined") {_RecordType("<3048,3067,121>",(Intl.DateTimeFormat)); Inst133++; } } catch(e) {}try { if (Inst134 <= 1000 && typeof (Intl) != "undefined") {_RecordType("<3048,3052,121>",(Intl)); Inst134++; } } catch(e) {}
  let dtf = Intl.DateTimeFormat("en-US-u-hc-h23", {
    hour12: true,
    hour: "numeric"
  });
try { if (Inst132 <= 1000 && typeof (dtf) != "undefined") {_RecordType("<3042,3045,121>",(dtf)); Inst132++; } } catch(e) {}
try { if (Inst135 <= 1000 && typeof (dtf.resolvedOptions().hourCycle) != "undefined") {_RecordType("<3134,3165,125>",(dtf.resolvedOptions().hourCycle)); Inst135++; } } catch(e) {}try { if (Inst136 <= 1000 && typeof (dtf.resolvedOptions) != "undefined") {_RecordType("<3134,3153,125>",(dtf.resolvedOptions)); Inst136++; } } catch(e) {}try { if (Inst137 <= 1000 && typeof (dtf) != "undefined") {_RecordType("<3134,3137,125>",(dtf)); Inst137++; } } catch(e) {}
  dtf.resolvedOptions().hourCycle;
  "h12";
}
{
  // Make sure that hour12 option overrides hourCycle options
try { if (Inst139 <= 1000 && typeof (Intl.DateTimeFormat) != "undefined") {_RecordType("<3254,3273,130>",(Intl.DateTimeFormat)); Inst139++; } } catch(e) {}try { if (Inst140 <= 1000 && typeof (Intl) != "undefined") {_RecordType("<3254,3258,130>",(Intl)); Inst140++; } } catch(e) {}
  let dtf = Intl.DateTimeFormat("en-US", {
    hourCycle: "h12",
    hour12: false,
    hour: "numeric"
  });
try { if (Inst138 <= 1000 && typeof (dtf) != "undefined") {_RecordType("<3248,3251,130>",(dtf)); Inst138++; } } catch(e) {}
try { if (Inst141 <= 1000 && typeof (dtf.resolvedOptions().hourCycle) != "undefined") {_RecordType("<3354,3385,135>",(dtf.resolvedOptions().hourCycle)); Inst141++; } } catch(e) {}try { if (Inst142 <= 1000 && typeof (dtf.resolvedOptions) != "undefined") {_RecordType("<3354,3373,135>",(dtf.resolvedOptions)); Inst142++; } } catch(e) {}try { if (Inst143 <= 1000 && typeof (dtf) != "undefined") {_RecordType("<3354,3357,135>",(dtf)); Inst143++; } } catch(e) {}
  dtf.resolvedOptions().hourCycle;
  "h23";
}
{
  // Make sure that hour12 option overrides hourCycle options
try { if (Inst145 <= 1000 && typeof (Intl.DateTimeFormat) != "undefined") {_RecordType("<3474,3493,140>",(Intl.DateTimeFormat)); Inst145++; } } catch(e) {}try { if (Inst146 <= 1000 && typeof (Intl) != "undefined") {_RecordType("<3474,3478,140>",(Intl)); Inst146++; } } catch(e) {}
  let dtf = Intl.DateTimeFormat("en-u-hc-h11", {
    hour: "numeric"
  });
try { if (Inst144 <= 1000 && typeof (dtf) != "undefined") {_RecordType("<3468,3471,140>",(dtf)); Inst144++; } } catch(e) {}
try { if (Inst147 <= 1000 && typeof (dtf.resolvedOptions().locale) != "undefined") {_RecordType("<3539,3567,143>",(dtf.resolvedOptions().locale)); Inst147++; } } catch(e) {}try { if (Inst148 <= 1000 && typeof (dtf.resolvedOptions) != "undefined") {_RecordType("<3539,3558,143>",(dtf.resolvedOptions)); Inst148++; } } catch(e) {}try { if (Inst149 <= 1000 && typeof (dtf) != "undefined") {_RecordType("<3539,3542,143>",(dtf)); Inst149++; } } catch(e) {}
  dtf.resolvedOptions().locale;
  "en-u-hc-h11";
}
{
  // Make sure that hour12 option overrides unicode extension
try { if (Inst151 <= 1000 && typeof (Intl.DateTimeFormat) != "undefined") {_RecordType("<3664,3683,148>",(Intl.DateTimeFormat)); Inst151++; } } catch(e) {}try { if (Inst152 <= 1000 && typeof (Intl) != "undefined") {_RecordType("<3664,3668,148>",(Intl)); Inst152++; } } catch(e) {}
  let dtf = Intl.DateTimeFormat("en-u-hc-h11", {
    hour: "numeric",
    hourCycle: "h24"
  });
try { if (Inst150 <= 1000 && typeof (dtf) != "undefined") {_RecordType("<3658,3661,148>",(dtf)); Inst150++; } } catch(e) {}
try { if (Inst153 <= 1000 && typeof (dtf.resolvedOptions().locale) != "undefined") {_RecordType("<3751,3779,152>",(dtf.resolvedOptions().locale)); Inst153++; } } catch(e) {}try { if (Inst154 <= 1000 && typeof (dtf.resolvedOptions) != "undefined") {_RecordType("<3751,3770,152>",(dtf.resolvedOptions)); Inst154++; } } catch(e) {}try { if (Inst155 <= 1000 && typeof (dtf) != "undefined") {_RecordType("<3751,3754,152>",(dtf)); Inst155++; } } catch(e) {}
  dtf.resolvedOptions().locale;
  "en";
try { if (Inst156 <= 1000 && typeof (dtf.resolvedOptions().hourCycle) != "undefined") {_RecordType("<3791,3822,154>",(dtf.resolvedOptions().hourCycle)); Inst156++; } } catch(e) {}try { if (Inst157 <= 1000 && typeof (dtf.resolvedOptions) != "undefined") {_RecordType("<3791,3810,154>",(dtf.resolvedOptions)); Inst157++; } } catch(e) {}try { if (Inst158 <= 1000 && typeof (dtf) != "undefined") {_RecordType("<3791,3794,154>",(dtf)); Inst158++; } } catch(e) {}
  dtf.resolvedOptions().hourCycle;
  "h24";
}

try { if (Inst159 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<3847,3860,158>",(reportCompare)); Inst159++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst160 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<3881,3894,159>",(reportCompare)); Inst160++; } } catch(e) {}
  reportCompare(0, 0, "ok");
}

