var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// |reftest| skip-if(!this.hasOwnProperty("Intl"))

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
// Tests the compare function with a diverse set of locales and options.
var input = ["Argentina", "Oerlikon", "Offenbach", "Sverige", "Vaticano", "Zimbabwe", "la France", "¡viva España!", "Österreich", "中国", "日本", "한국"];
try { if (Inst0 <= 1000 && typeof (input) != "undefined") {_RecordType("<334,339,7>",(input)); Inst0++; } } catch(e) {}
var collator, expected;
try { if (Inst1 <= 1000 && typeof (collator) != "undefined") {_RecordType("<483,491,8>",(collator)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (expected) != "undefined") {_RecordType("<493,501,8>",(expected)); Inst2++; } } catch(e) {}

try { if (Inst3 <= 1000 && typeof (assertEqualArray) != "undefined") {_RecordType("<513,529,10>",(assertEqualArray)); Inst3++; } } catch(e) {}
function assertEqualArray(actual, expected, collator) {
try { if (Inst4 <= 1000 && typeof (actual) != "undefined") {_RecordType("<530,536,10>",(actual)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (expected) != "undefined") {_RecordType("<538,546,10>",(expected)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (collator) != "undefined") {_RecordType("<548,556,10>",(collator)); Inst6++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (JSON.stringify) != "undefined") {_RecordType("<580,594,11>",(JSON.stringify)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<580,584,11>",(JSON)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (collator.resolvedOptions) != "undefined") {_RecordType("<595,619,11>",(collator.resolvedOptions)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (collator) != "undefined") {_RecordType("<595,603,11>",(collator)); Inst11++; } } catch(e) {}
  var description = JSON.stringify(collator.resolvedOptions());
try { if (Inst7 <= 1000 && typeof (description) != "undefined") {_RecordType("<566,577,11>",(description)); Inst7++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (actual.length) != "undefined") {_RecordType("<626,639,12>",(actual.length)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (actual) != "undefined") {_RecordType("<626,632,12>",(actual)); Inst13++; } } catch(e) {}
  actual.length;
try { if (Inst14 <= 1000 && typeof (expected.length) != "undefined") {_RecordType("<643,658,13>",(expected.length)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (expected) != "undefined") {_RecordType("<643,651,13>",(expected)); Inst15++; } } catch(e) {}
  expected.length;
try { if (Inst16 <= 1000 && typeof (description) != "undefined") {_RecordType("<681,692,14>",(description)); Inst16++; } } catch(e) {}
  "array length, " + description;

  for (var i = 0; i < actual.length; i++) {
try { if (Inst17 <= 1000 && typeof (i) != "undefined") {_RecordType("<706,707,16>",(i)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (i) != "undefined") {_RecordType("<713,714,16>",(i)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (actual.length) != "undefined") {_RecordType("<717,730,16>",(actual.length)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (actual) != "undefined") {_RecordType("<717,723,16>",(actual)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<732,733,16>",(i)); Inst21++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (actual[i]) != "undefined") {_RecordType("<743,752,17>",(actual[i])); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (actual) != "undefined") {_RecordType("<743,749,17>",(actual)); Inst23++; } } catch(e) {}
    actual[i];
try { if (Inst24 <= 1000 && typeof (expected[i]) != "undefined") {_RecordType("<758,769,18>",(expected[i])); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (expected) != "undefined") {_RecordType("<758,766,18>",(expected)); Inst25++; } } catch(e) {}
    expected[i];
try { if (Inst26 <= 1000 && typeof (i) != "undefined") {_RecordType("<788,789,19>",(i)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (description) != "undefined") {_RecordType("<799,810,19>",(description)); Inst27++; } } catch(e) {}
    "element " + i + ", " + description;
  }
} // Locale en-US; default options.


try { if (Inst29 <= 1000 && typeof (Intl.Collator) != "undefined") {_RecordType("<869,882,24>",(Intl.Collator)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (Intl) != "undefined") {_RecordType("<869,873,24>",(Intl)); Inst30++; } } catch(e) {}
collator = new Intl.Collator("en-US");
try { if (Inst28 <= 1000 && typeof (collator) != "undefined") {_RecordType("<854,862,24>",(collator)); Inst28++; } } catch(e) {}
expected = ["¡viva España!", "Argentina", "la France", "Oerlikon", "Offenbach", "Österreich", "Sverige", "Vaticano", "Zimbabwe", "한국", "中国", "日本"];
try { if (Inst31 <= 1000 && typeof (expected) != "undefined") {_RecordType("<893,901,25>",(expected)); Inst31++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (input.sort) != "undefined") {_RecordType("<1041,1051,26>",(input.sort)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (input) != "undefined") {_RecordType("<1041,1046,26>",(input)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (collator.compare) != "undefined") {_RecordType("<1052,1068,26>",(collator.compare)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (collator) != "undefined") {_RecordType("<1052,1060,26>",(collator)); Inst35++; } } catch(e) {}
input.sort(collator.compare);
try { if (Inst36 <= 1000 && typeof (expected) != "undefined") {_RecordType("<1071,1079,27>",(expected)); Inst36++; } } catch(e) {}
expected;
try { if (Inst37 <= 1000 && typeof (collator) != "undefined") {_RecordType("<1081,1089,28>",(collator)); Inst37++; } } catch(e) {}
collator;
// Locale sv-SE; default options.
// Swedish treats "Ö" as a separate character, which sorts after "Z".
try { if (Inst39 <= 1000 && typeof (Intl.Collator) != "undefined") {_RecordType("<1210,1223,31>",(Intl.Collator)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (Intl) != "undefined") {_RecordType("<1210,1214,31>",(Intl)); Inst40++; } } catch(e) {}
collator = new Intl.Collator("sv-SE");
try { if (Inst38 <= 1000 && typeof (collator) != "undefined") {_RecordType("<1195,1203,31>",(collator)); Inst38++; } } catch(e) {}
expected = ["¡viva España!", "Argentina", "la France", "Oerlikon", "Offenbach", "Sverige", "Vaticano", "Zimbabwe", "Österreich", "한국", "中国", "日本"];
try { if (Inst41 <= 1000 && typeof (expected) != "undefined") {_RecordType("<1234,1242,32>",(expected)); Inst41++; } } catch(e) {}
try { if (Inst42 <= 1000 && typeof (input.sort) != "undefined") {_RecordType("<1382,1392,33>",(input.sort)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (input) != "undefined") {_RecordType("<1382,1387,33>",(input)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (collator.compare) != "undefined") {_RecordType("<1393,1409,33>",(collator.compare)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (collator) != "undefined") {_RecordType("<1393,1401,33>",(collator)); Inst45++; } } catch(e) {}
input.sort(collator.compare);
try { if (Inst46 <= 1000 && typeof (expected) != "undefined") {_RecordType("<1412,1420,34>",(expected)); Inst46++; } } catch(e) {}
expected;
try { if (Inst47 <= 1000 && typeof (collator) != "undefined") {_RecordType("<1422,1430,35>",(collator)); Inst47++; } } catch(e) {}
collator;
// Locale sv-SE; ignore punctuation.
try { if (Inst49 <= 1000 && typeof (Intl.Collator) != "undefined") {_RecordType("<1484,1497,37>",(Intl.Collator)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (Intl) != "undefined") {_RecordType("<1484,1488,37>",(Intl)); Inst50++; } } catch(e) {}
collator = new Intl.Collator("sv-SE", {
  ignorePunctuation: true
});
try { if (Inst48 <= 1000 && typeof (collator) != "undefined") {_RecordType("<1469,1477,37>",(collator)); Inst48++; } } catch(e) {}
expected = ["Argentina", "la France", "Oerlikon", "Offenbach", "Sverige", "Vaticano", "¡viva España!", "Zimbabwe", "Österreich", "한국", "中国", "日本"];
try { if (Inst51 <= 1000 && typeof (expected) != "undefined") {_RecordType("<1539,1547,40>",(expected)); Inst51++; } } catch(e) {}
try { if (Inst52 <= 1000 && typeof (input.sort) != "undefined") {_RecordType("<1687,1697,41>",(input.sort)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (input) != "undefined") {_RecordType("<1687,1692,41>",(input)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (collator.compare) != "undefined") {_RecordType("<1698,1714,41>",(collator.compare)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (collator) != "undefined") {_RecordType("<1698,1706,41>",(collator)); Inst55++; } } catch(e) {}
input.sort(collator.compare);
try { if (Inst56 <= 1000 && typeof (expected) != "undefined") {_RecordType("<1717,1725,42>",(expected)); Inst56++; } } catch(e) {}
expected;
try { if (Inst57 <= 1000 && typeof (collator) != "undefined") {_RecordType("<1727,1735,43>",(collator)); Inst57++; } } catch(e) {}
collator;
// Locale de-DE; default options.
// In German standard sorting, umlauted characters are treated as variants
// of their base characters: ä ≅ a, ö ≅ o, ü ≅ u.
try { if (Inst59 <= 1000 && typeof (Intl.Collator) != "undefined") {_RecordType("<1911,1924,47>",(Intl.Collator)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (Intl) != "undefined") {_RecordType("<1911,1915,47>",(Intl)); Inst60++; } } catch(e) {}
collator = new Intl.Collator("de-DE");
try { if (Inst58 <= 1000 && typeof (collator) != "undefined") {_RecordType("<1896,1904,47>",(collator)); Inst58++; } } catch(e) {}
expected = ["¡viva España!", "Argentina", "la France", "Oerlikon", "Offenbach", "Österreich", "Sverige", "Vaticano", "Zimbabwe", "한국", "中国", "日本"];
try { if (Inst61 <= 1000 && typeof (expected) != "undefined") {_RecordType("<1935,1943,48>",(expected)); Inst61++; } } catch(e) {}
try { if (Inst62 <= 1000 && typeof (input.sort) != "undefined") {_RecordType("<2083,2093,49>",(input.sort)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (input) != "undefined") {_RecordType("<2083,2088,49>",(input)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (collator.compare) != "undefined") {_RecordType("<2094,2110,49>",(collator.compare)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (collator) != "undefined") {_RecordType("<2094,2102,49>",(collator)); Inst65++; } } catch(e) {}
input.sort(collator.compare);
try { if (Inst66 <= 1000 && typeof (expected) != "undefined") {_RecordType("<2113,2121,50>",(expected)); Inst66++; } } catch(e) {}
expected;
try { if (Inst67 <= 1000 && typeof (collator) != "undefined") {_RecordType("<2123,2131,51>",(collator)); Inst67++; } } catch(e) {}
collator;
// Locale de-DE; phonebook sort order.
// In German phonebook sorting, umlauted characters are expanded to two-vowel
// sequences: ä → ae, ö → oe, ü → ue.
try { if (Inst69 <= 1000 && typeof (Intl.Collator) != "undefined") {_RecordType("<2303,2316,55>",(Intl.Collator)); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (Intl) != "undefined") {_RecordType("<2303,2307,55>",(Intl)); Inst70++; } } catch(e) {}
collator = new Intl.Collator("de-DE-u-co-phonebk");
try { if (Inst68 <= 1000 && typeof (collator) != "undefined") {_RecordType("<2288,2296,55>",(collator)); Inst68++; } } catch(e) {}
expected = ["¡viva España!", "Argentina", "la France", "Oerlikon", "Österreich", "Offenbach", "Sverige", "Vaticano", "Zimbabwe", "한국", "中国", "日本"];
try { if (Inst71 <= 1000 && typeof (expected) != "undefined") {_RecordType("<2340,2348,56>",(expected)); Inst71++; } } catch(e) {}
try { if (Inst72 <= 1000 && typeof (input.sort) != "undefined") {_RecordType("<2488,2498,57>",(input.sort)); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (input) != "undefined") {_RecordType("<2488,2493,57>",(input)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (collator.compare) != "undefined") {_RecordType("<2499,2515,57>",(collator.compare)); Inst74++; } } catch(e) {}try { if (Inst75 <= 1000 && typeof (collator) != "undefined") {_RecordType("<2499,2507,57>",(collator)); Inst75++; } } catch(e) {}
input.sort(collator.compare);
try { if (Inst76 <= 1000 && typeof (expected) != "undefined") {_RecordType("<2518,2526,58>",(expected)); Inst76++; } } catch(e) {}
expected;
try { if (Inst77 <= 1000 && typeof (collator) != "undefined") {_RecordType("<2528,2536,59>",(collator)); Inst77++; } } catch(e) {}
collator;
// Test the .name property of the "compare" getter.
try { if (Inst79 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<2601,2632,61>",(Object.getOwnPropertyDescriptor)); Inst79++; } } catch(e) {}try { if (Inst80 <= 1000 && typeof (Object) != "undefined") {_RecordType("<2601,2607,61>",(Object)); Inst80++; } } catch(e) {}try { if (Inst81 <= 1000 && typeof (Intl.Collator.prototype) != "undefined") {_RecordType("<2633,2656,61>",(Intl.Collator.prototype)); Inst81++; } } catch(e) {}try { if (Inst82 <= 1000 && typeof (Intl.Collator) != "undefined") {_RecordType("<2633,2646,61>",(Intl.Collator)); Inst82++; } } catch(e) {}try { if (Inst83 <= 1000 && typeof (Intl) != "undefined") {_RecordType("<2633,2637,61>",(Intl)); Inst83++; } } catch(e) {}
var desc = Object.getOwnPropertyDescriptor(Intl.Collator.prototype, "compare");
try { if (Inst78 <= 1000 && typeof (desc) != "undefined") {_RecordType("<2594,2598,61>",(desc)); Inst78++; } } catch(e) {}
try { if (Inst84 <= 1000 && typeof (desc) != "undefined") {_RecordType("<2670,2674,62>",(desc)); Inst84++; } } catch(e) {}try { if (Inst85 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<2679,2688,62>",(undefined)); Inst85++; } } catch(e) {}
desc !== undefined;
true;
try { if (Inst86 <= 1000 && typeof (desc.get) != "undefined") {_RecordType("<2703,2711,64>",(desc.get)); Inst86++; } } catch(e) {}try { if (Inst87 <= 1000 && typeof (desc) != "undefined") {_RecordType("<2703,2707,64>",(desc)); Inst87++; } } catch(e) {}
typeof desc.get;
"function";
try { if (Inst88 <= 1000 && typeof (desc.get.name) != "undefined") {_RecordType("<2725,2738,66>",(desc.get.name)); Inst88++; } } catch(e) {}try { if (Inst89 <= 1000 && typeof (desc.get) != "undefined") {_RecordType("<2725,2733,66>",(desc.get)); Inst89++; } } catch(e) {}try { if (Inst90 <= 1000 && typeof (desc) != "undefined") {_RecordType("<2725,2729,66>",(desc)); Inst90++; } } catch(e) {}
desc.get.name;
"get compare";
try { if (Inst91 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<2755,2768,68>",(reportCompare)); Inst91++; } } catch(e) {}
reportCompare(0, 0, 'ok');

