var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (Intl) != "undefined") {_RecordType("<11,15,1>",(Intl)); Inst0++; } } catch(e) {}
if (typeof Intl === "object") {
try { if (Inst2 <= 1000 && typeof ([,,].toLocaleString) != "undefined") {_RecordType("<52,71,2>",([,,].toLocaleString)); Inst2++; } } catch(e) {}
  const localeSep = [,,].toLocaleString();
try { if (Inst1 <= 1000 && typeof (localeSep) != "undefined") {_RecordType("<40,49,2>",(localeSep)); Inst1++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof ([NaN].toLocaleString) != "undefined") {_RecordType("<77,97,3>",([NaN].toLocaleString)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<78,81,3>",(NaN)); Inst4++; } } catch(e) {}
  [NaN].toLocaleString("ar");
  "ليس رقم";
try { if (Inst5 <= 1000 && typeof ([NaN].toLocaleString) != "undefined") {_RecordType("<120,140,5>",([NaN].toLocaleString)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<121,124,5>",(NaN)); Inst6++; } } catch(e) {}
  [NaN].toLocaleString(["zh-hant", "ar"]);
  "非數值";
try { if (Inst7 <= 1000 && typeof ([Infinity].toLocaleString) != "undefined") {_RecordType("<172,197,7>",([Infinity].toLocaleString)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<173,181,7>",(Infinity)); Inst8++; } } catch(e) {}
  [Infinity].toLocaleString("dz");
  "གྲངས་མེད";
try { if (Inst9 <= 1000 && typeof ([-Infinity].toLocaleString) != "undefined") {_RecordType("<221,247,9>",([-Infinity].toLocaleString)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<223,231,9>",(Infinity)); Inst10++; } } catch(e) {}
  [-Infinity].toLocaleString(["fr", "en"]);
  "-∞";
  const sampleValues = [-0, +0, -1, +1, -2, +2, -0.5, +0.5];
try { if (Inst11 <= 1000 && typeof (sampleValues) != "undefined") {_RecordType("<279,291,11>",(sampleValues)); Inst11++; } } catch(e) {}
  const sampleLocales = [void 0, "en", "th-th-u-nu-thai", ["tlh", "de"]];
try { if (Inst12 <= 1000 && typeof (sampleLocales) != "undefined") {_RecordType("<340,353,12>",(sampleLocales)); Inst12++; } } catch(e) {}
  const sampleOptions = [void 0, {}, {
    style: "percent"
  }, {
    style: "currency",
    currency: "USD",
    minimumIntegerDigits: 4
  }];
try { if (Inst13 <= 1000 && typeof (sampleOptions) != "undefined") {_RecordType("<414,427,13>",(sampleOptions)); Inst13++; } } catch(e) {}

  for (let locale of sampleLocales) {
try { if (Inst14 <= 1000 && typeof (locale) != "undefined") {_RecordType("<563,569,21>",(locale)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (sampleLocales) != "undefined") {_RecordType("<573,586,21>",(sampleLocales)); Inst15++; } } catch(e) {}
    for (let options of sampleOptions) {
try { if (Inst16 <= 1000 && typeof (options) != "undefined") {_RecordType("<603,610,22>",(options)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (sampleOptions) != "undefined") {_RecordType("<614,627,22>",(sampleOptions)); Inst17++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (Intl.NumberFormat) != "undefined") {_RecordType("<650,667,23>",(Intl.NumberFormat)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (Intl) != "undefined") {_RecordType("<650,654,23>",(Intl)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (locale) != "undefined") {_RecordType("<668,674,23>",(locale)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (options) != "undefined") {_RecordType("<676,683,23>",(options)); Inst22++; } } catch(e) {}
      let nf = new Intl.NumberFormat(locale, options);
try { if (Inst18 <= 1000 && typeof (nf) != "undefined") {_RecordType("<641,643,23>",(nf)); Inst18++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (sampleValues.map(nf.format).join) != "undefined") {_RecordType("<707,739,24>",(sampleValues.map(nf.format).join)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (sampleValues.map) != "undefined") {_RecordType("<707,723,24>",(sampleValues.map)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (sampleValues) != "undefined") {_RecordType("<707,719,24>",(sampleValues)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (nf.format) != "undefined") {_RecordType("<724,733,24>",(nf.format)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (nf) != "undefined") {_RecordType("<724,726,24>",(nf)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (localeSep) != "undefined") {_RecordType("<740,749,24>",(localeSep)); Inst29++; } } catch(e) {}
      let expected = sampleValues.map(nf.format).join(localeSep);
try { if (Inst23 <= 1000 && typeof (expected) != "undefined") {_RecordType("<696,704,24>",(expected)); Inst23++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (sampleValues.toLocaleString) != "undefined") {_RecordType("<758,785,25>",(sampleValues.toLocaleString)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (sampleValues) != "undefined") {_RecordType("<758,770,25>",(sampleValues)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (locale) != "undefined") {_RecordType("<786,792,25>",(locale)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (options) != "undefined") {_RecordType("<794,801,25>",(options)); Inst33++; } } catch(e) {}
      sampleValues.toLocaleString(locale, options);
try { if (Inst34 <= 1000 && typeof (expected) != "undefined") {_RecordType("<810,818,26>",(expected)); Inst34++; } } catch(e) {}
      expected;
    }
  }
}

try { if (Inst35 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<844,857,31>",(reportCompare)); Inst35++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst36 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<878,891,32>",(reportCompare)); Inst36++; } } catch(e) {}
  reportCompare(true, true);
}

