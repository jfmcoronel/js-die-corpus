var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (Intl) != "undefined") {_RecordType("<11,15,1>",(Intl)); Inst0++; } } catch(e) {}
if (typeof Intl === "object") {
try { if (Inst2 <= 1000 && typeof ([,,].toLocaleString) != "undefined") {_RecordType("<52,71,2>",([,,].toLocaleString)); Inst2++; } } catch(e) {}
  const localeSep = [,,].toLocaleString();
try { if (Inst1 <= 1000 && typeof (localeSep) != "undefined") {_RecordType("<40,49,2>",(localeSep)); Inst1++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (Date) != "undefined") {_RecordType("<94,98,3>",(Date)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Date.UTC) != "undefined") {_RecordType("<99,107,3>",(Date.UTC)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Date) != "undefined") {_RecordType("<99,103,3>",(Date)); Inst6++; } } catch(e) {}
  const date = new Date(Date.UTC(2012, 11, 12, 3, 0, 0));
try { if (Inst3 <= 1000 && typeof (date) != "undefined") {_RecordType("<83,87,3>",(date)); Inst3++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof ([date].toLocaleString) != "undefined") {_RecordType("<135,156,4>",([date].toLocaleString)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (date) != "undefined") {_RecordType("<136,140,4>",(date)); Inst8++; } } catch(e) {}
  [date].toLocaleString("en-us", {
    timeZone: "UTC"
  });
  "12/12/2012, 3:00:00 AM";
try { if (Inst9 <= 1000 && typeof ([date].toLocaleString) != "undefined") {_RecordType("<224,245,8>",([date].toLocaleString)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (date) != "undefined") {_RecordType("<225,229,8>",(date)); Inst10++; } } catch(e) {}
  [date].toLocaleString(["de", "en"], {
    timeZone: "UTC"
  });
  "12.12.2012, 03:00:00";
try { if (Inst11 <= 1000 && typeof ([date].toLocaleString) != "undefined") {_RecordType("<316,337,12>",([date].toLocaleString)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (date) != "undefined") {_RecordType("<317,321,12>",(date)); Inst12++; } } catch(e) {}
  [date].toLocaleString("th-th", {
    timeZone: "UTC"
  });
  "12/12/2555 03:00:00";
try { if (Inst13 <= 1000 && typeof ([date].toLocaleString) != "undefined") {_RecordType("<402,423,16>",([date].toLocaleString)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (date) != "undefined") {_RecordType("<403,407,16>",(date)); Inst14++; } } catch(e) {}
  [date].toLocaleString("th-th-u-nu-thai", {
    timeZone: "UTC"
  });
  "๑๒/๑๒/๒๕๕๕ ๐๓:๐๐:๐๐";
try { if (Inst16 <= 1000 && typeof (date) != "undefined") {_RecordType("<520,524,20>",(date)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Date) != "undefined") {_RecordType("<530,534,20>",(Date)); Inst17++; } } catch(e) {}
  const sampleValues = [date, new Date(0)];
try { if (Inst15 <= 1000 && typeof (sampleValues) != "undefined") {_RecordType("<504,516,20>",(sampleValues)); Inst15++; } } catch(e) {}
  const sampleLocales = [void 0, "en", "th-th-u-nu-thai", "ja-jp", "ar-ma-u-ca-islamicc", ["tlh", "de"]];
try { if (Inst18 <= 1000 && typeof (sampleLocales) != "undefined") {_RecordType("<548,561,21>",(sampleLocales)); Inst18++; } } catch(e) {}
  const numericFormatOptions = {
    timeZone: "UTC",
    year: "numeric",
    month: "numeric",
    day: "numeric",
    hour: "numeric",
    minute: "numeric",
    second: "numeric"
  };
try { if (Inst19 <= 1000 && typeof (numericFormatOptions) != "undefined") {_RecordType("<654,674,22>",(numericFormatOptions)); Inst19++; } } catch(e) {}
  const longFormatOptions = {
    timeZone: "UTC",
    year: "numeric",
    month: "long",
    day: "numeric",
    hour: "numeric",
    minute: "numeric",
    second: "numeric"
  };
try { if (Inst20 <= 1000 && typeof (longFormatOptions) != "undefined") {_RecordType("<842,859,31>",(longFormatOptions)); Inst20++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (longFormatOptions) != "undefined") {_RecordType("<1068,1085,42>",(longFormatOptions)); Inst22++; } } catch(e) {}
  const sampleOptions = [{
    timeZone: "UTC"
  }, longFormatOptions];
try { if (Inst21 <= 1000 && typeof (sampleOptions) != "undefined") {_RecordType("<1024,1037,40>",(sampleOptions)); Inst21++; } } catch(e) {}

  for (let locale of sampleLocales) {
try { if (Inst23 <= 1000 && typeof (locale) != "undefined") {_RecordType("<1100,1106,44>",(locale)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (sampleLocales) != "undefined") {_RecordType("<1110,1123,44>",(sampleLocales)); Inst24++; } } catch(e) {}
    for (let options of sampleOptions) {
try { if (Inst25 <= 1000 && typeof (options) != "undefined") {_RecordType("<1140,1147,45>",(options)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (sampleOptions) != "undefined") {_RecordType("<1151,1164,45>",(sampleOptions)); Inst26++; } } catch(e) {}
      let dtfOptions;
try { if (Inst27 <= 1000 && typeof (dtfOptions) != "undefined") {_RecordType("<1178,1188,46>",(dtfOptions)); Inst27++; } } catch(e) {}

try { if (Inst28 <= 1000 && typeof (options) != "undefined") {_RecordType("<1201,1208,48>",(options)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (longFormatOptions) != "undefined") {_RecordType("<1213,1230,48>",(longFormatOptions)); Inst29++; } } catch(e) {}
      if (options === longFormatOptions) {
try { if (Inst31 <= 1000 && typeof (longFormatOptions) != "undefined") {_RecordType("<1255,1272,49>",(longFormatOptions)); Inst31++; } } catch(e) {}
        dtfOptions = longFormatOptions;
try { if (Inst30 <= 1000 && typeof (dtfOptions) != "undefined") {_RecordType("<1242,1252,49>",(dtfOptions)); Inst30++; } } catch(e) {}
      } else {
try { if (Inst33 <= 1000 && typeof (numericFormatOptions) != "undefined") {_RecordType("<1310,1330,51>",(numericFormatOptions)); Inst33++; } } catch(e) {}
        dtfOptions = numericFormatOptions;
try { if (Inst32 <= 1000 && typeof (dtfOptions) != "undefined") {_RecordType("<1297,1307,51>",(dtfOptions)); Inst32++; } } catch(e) {}
      }

try { if (Inst35 <= 1000 && typeof (Intl.DateTimeFormat) != "undefined") {_RecordType("<1361,1380,54>",(Intl.DateTimeFormat)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (Intl) != "undefined") {_RecordType("<1361,1365,54>",(Intl)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (locale) != "undefined") {_RecordType("<1381,1387,54>",(locale)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (dtfOptions) != "undefined") {_RecordType("<1389,1399,54>",(dtfOptions)); Inst38++; } } catch(e) {}
      let dtf = new Intl.DateTimeFormat(locale, dtfOptions);
try { if (Inst34 <= 1000 && typeof (dtf) != "undefined") {_RecordType("<1351,1354,54>",(dtf)); Inst34++; } } catch(e) {}
try { if (Inst40 <= 1000 && typeof (sampleValues.map(dtf.format).join) != "undefined") {_RecordType("<1423,1456,55>",(sampleValues.map(dtf.format).join)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (sampleValues.map) != "undefined") {_RecordType("<1423,1439,55>",(sampleValues.map)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (sampleValues) != "undefined") {_RecordType("<1423,1435,55>",(sampleValues)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (dtf.format) != "undefined") {_RecordType("<1440,1450,55>",(dtf.format)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (dtf) != "undefined") {_RecordType("<1440,1443,55>",(dtf)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (localeSep) != "undefined") {_RecordType("<1457,1466,55>",(localeSep)); Inst45++; } } catch(e) {}
      let expected = sampleValues.map(dtf.format).join(localeSep);
try { if (Inst39 <= 1000 && typeof (expected) != "undefined") {_RecordType("<1412,1420,55>",(expected)); Inst39++; } } catch(e) {}
try { if (Inst46 <= 1000 && typeof (sampleValues.toLocaleString) != "undefined") {_RecordType("<1475,1502,56>",(sampleValues.toLocaleString)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (sampleValues) != "undefined") {_RecordType("<1475,1487,56>",(sampleValues)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (locale) != "undefined") {_RecordType("<1503,1509,56>",(locale)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (options) != "undefined") {_RecordType("<1511,1518,56>",(options)); Inst49++; } } catch(e) {}
      sampleValues.toLocaleString(locale, options);
try { if (Inst50 <= 1000 && typeof (expected) != "undefined") {_RecordType("<1527,1535,57>",(expected)); Inst50++; } } catch(e) {}
      expected;
    }
  }
}

try { if (Inst51 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1561,1574,62>",(reportCompare)); Inst51++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst52 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1595,1608,63>",(reportCompare)); Inst52++; } } catch(e) {}
  reportCompare(true, true);
}

