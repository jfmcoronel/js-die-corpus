var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (Intl) != "undefined") {_RecordType("<11,15,1>",(Intl)); Inst0++; } } catch(e) {}
if (typeof Intl === "object") {
try { if (Inst2 <= 1000 && typeof ([,,].toLocaleString) != "undefined") {_RecordType("<52,71,2>",([,,].toLocaleString)); Inst2++; } } catch(e) {}
  const localeSep = [,,].toLocaleString(); // Missing arguments are passed as |undefined|.
try { if (Inst1 <= 1000 && typeof (localeSep) != "undefined") {_RecordType("<40,49,2>",(localeSep)); Inst1++; } } catch(e) {}

try { if (Inst4 <= 1000 && typeof (toLocaleString) != "undefined") {_RecordType("<150,164,5>",(toLocaleString)); Inst4++; } } catch(e) {}
  const objNoArgs = {
    toLocaleString() {
try { if (Inst5 <= 1000 && typeof (arguments.length) != "undefined") {_RecordType("<175,191,6>",(arguments.length)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<175,184,6>",(arguments)); Inst6++; } } catch(e) {}
      arguments.length;
      2;
try { if (Inst7 <= 1000 && typeof (arguments[0]) != "undefined") {_RecordType("<208,220,8>",(arguments[0])); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<208,217,8>",(arguments)); Inst8++; } } catch(e) {}
      arguments[0];
try { if (Inst9 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<228,237,9>",(undefined)); Inst9++; } } catch(e) {}
      undefined;
try { if (Inst10 <= 1000 && typeof (arguments[1]) != "undefined") {_RecordType("<245,257,10>",(arguments[1])); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<245,254,10>",(arguments)); Inst11++; } } catch(e) {}
      arguments[1];
try { if (Inst12 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<265,274,11>",(undefined)); Inst12++; } } catch(e) {}
      undefined;
      return "pass";
    }

  }; // - Single element case.
try { if (Inst3 <= 1000 && typeof (objNoArgs) != "undefined") {_RecordType("<132,141,4>",(objNoArgs)); Inst3++; } } catch(e) {}

try { if (Inst13 <= 1000 && typeof ([objNoArgs].toLocaleString) != "undefined") {_RecordType("<338,364,17>",([objNoArgs].toLocaleString)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (objNoArgs) != "undefined") {_RecordType("<339,348,17>",(objNoArgs)); Inst14++; } } catch(e) {}
  [objNoArgs].toLocaleString();
  "pass";
try { if (Inst15 <= 1000 && typeof ([objNoArgs, objNoArgs].toLocaleString) != "undefined") {_RecordType("<380,417,19>",([objNoArgs, objNoArgs].toLocaleString)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (objNoArgs) != "undefined") {_RecordType("<381,390,19>",(objNoArgs)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (objNoArgs) != "undefined") {_RecordType("<392,401,19>",(objNoArgs)); Inst17++; } } catch(e) {}
  [objNoArgs, objNoArgs].toLocaleString();
try { if (Inst18 <= 1000 && typeof (localeSep) != "undefined") {_RecordType("<432,441,20>",(localeSep)); Inst18++; } } catch(e) {}
  "pass" + localeSep + "pass";
  // Ensure "locales" and "options" arguments are passed to the array elements.
  const locales = {},
        options = {};
try { if (Inst19 <= 1000 && typeof (locales) != "undefined") {_RecordType("<540,547,22>",(locales)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (options) != "undefined") {_RecordType("<562,569,23>",(options)); Inst20++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (toLocaleString) != "undefined") {_RecordType("<604,618,25>",(toLocaleString)); Inst22++; } } catch(e) {}
  const objWithArgs = {
    toLocaleString() {
try { if (Inst23 <= 1000 && typeof (arguments.length) != "undefined") {_RecordType("<629,645,26>",(arguments.length)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<629,638,26>",(arguments)); Inst24++; } } catch(e) {}
      arguments.length;
      2;
try { if (Inst25 <= 1000 && typeof (arguments[0]) != "undefined") {_RecordType("<662,674,28>",(arguments[0])); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<662,671,28>",(arguments)); Inst26++; } } catch(e) {}
      arguments[0];
try { if (Inst27 <= 1000 && typeof (locales) != "undefined") {_RecordType("<682,689,29>",(locales)); Inst27++; } } catch(e) {}
      locales;
try { if (Inst28 <= 1000 && typeof (arguments[1]) != "undefined") {_RecordType("<697,709,30>",(arguments[1])); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<697,706,30>",(arguments)); Inst29++; } } catch(e) {}
      arguments[1];
try { if (Inst30 <= 1000 && typeof (options) != "undefined") {_RecordType("<717,724,31>",(options)); Inst30++; } } catch(e) {}
      options;
      return "pass";
    }

  }; // - Single element case.
try { if (Inst21 <= 1000 && typeof (objWithArgs) != "undefined") {_RecordType("<584,595,24>",(objWithArgs)); Inst21++; } } catch(e) {}

try { if (Inst31 <= 1000 && typeof ([objWithArgs].toLocaleString) != "undefined") {_RecordType("<788,816,37>",([objWithArgs].toLocaleString)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (objWithArgs) != "undefined") {_RecordType("<789,800,37>",(objWithArgs)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (locales) != "undefined") {_RecordType("<817,824,37>",(locales)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (options) != "undefined") {_RecordType("<826,833,37>",(options)); Inst34++; } } catch(e) {}
  [objWithArgs].toLocaleString(locales, options);
  "pass";
try { if (Inst35 <= 1000 && typeof ([objWithArgs, objWithArgs].toLocaleString) != "undefined") {_RecordType("<848,889,39>",([objWithArgs, objWithArgs].toLocaleString)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (objWithArgs) != "undefined") {_RecordType("<849,860,39>",(objWithArgs)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (objWithArgs) != "undefined") {_RecordType("<862,873,39>",(objWithArgs)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (locales) != "undefined") {_RecordType("<890,897,39>",(locales)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (options) != "undefined") {_RecordType("<899,906,39>",(options)); Inst39++; } } catch(e) {}
  [objWithArgs, objWithArgs].toLocaleString(locales, options);
try { if (Inst40 <= 1000 && typeof (localeSep) != "undefined") {_RecordType("<920,929,40>",(localeSep)); Inst40++; } } catch(e) {}
  "pass" + localeSep + "pass";
}

try { if (Inst41 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<954,967,43>",(reportCompare)); Inst41++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst42 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<988,1001,44>",(reportCompare)); Inst42++; } } catch(e) {}
  reportCompare(true, true);
}

