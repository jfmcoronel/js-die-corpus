var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// |reftest| skip-if(!this.hasOwnProperty("Intl"))
// Tests the PluralRules.resolvedOptions function for overriden Array[Symbol.species].
try { if (Inst1 <= 1000 && typeof (Intl.PluralRules) != "undefined") {_RecordType("<151,167,3>",(Intl.PluralRules)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Intl) != "undefined") {_RecordType("<151,155,3>",(Intl)); Inst2++; } } catch(e) {}
var pl = new Intl.PluralRules("de");
try { if (Inst0 <= 1000 && typeof (pl) != "undefined") {_RecordType("<142,144,3>",(pl)); Inst0++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<175,196,4>",(Object.defineProperty)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Object) != "undefined") {_RecordType("<175,181,4>",(Object)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Array) != "undefined") {_RecordType("<197,202,4>",(Array)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Symbol.species) != "undefined") {_RecordType("<204,218,4>",(Symbol.species)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<204,210,4>",(Symbol)); Inst7++; } } catch(e) {}
Object.defineProperty(Array, Symbol.species, {
  value: function () {
try { if (Inst8 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<260,265,6>",(Proxy)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (get) != "undefined") {_RecordType("<281,284,7>",(get)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (t) != "undefined") {_RecordType("<285,286,7>",(t)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (pk) != "undefined") {_RecordType("<288,290,7>",(pk)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (r) != "undefined") {_RecordType("<292,293,7>",(r)); Inst12++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (defineProperty) != "undefined") {_RecordType("<351,365,11>",(defineProperty)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (t) != "undefined") {_RecordType("<366,367,11>",(t)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (pk) != "undefined") {_RecordType("<369,371,11>",(pk)); Inst20++; } } catch(e) {}
    return new Proxy(["?"], {
      get(t, pk, r) {
try { if (Inst13 <= 1000 && typeof (Reflect.get) != "undefined") {_RecordType("<312,323,8>",(Reflect.get)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<312,319,8>",(Reflect)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (t) != "undefined") {_RecordType("<324,325,8>",(t)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (pk) != "undefined") {_RecordType("<327,329,8>",(pk)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (r) != "undefined") {_RecordType("<331,332,8>",(r)); Inst17++; } } catch(e) {}
        return Reflect.get(t, pk, r);
      },

      defineProperty(t, pk) {
        return true;
      }

    });
  }
});
try { if (Inst22 <= 1000 && typeof (pl.resolvedOptions().pluralCategories) != "undefined") {_RecordType("<444,481,18>",(pl.resolvedOptions().pluralCategories)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (pl.resolvedOptions) != "undefined") {_RecordType("<444,462,18>",(pl.resolvedOptions)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (pl) != "undefined") {_RecordType("<444,446,18>",(pl)); Inst24++; } } catch(e) {}
var pluralCategories = pl.resolvedOptions().pluralCategories;
try { if (Inst21 <= 1000 && typeof (pluralCategories) != "undefined") {_RecordType("<425,441,18>",(pluralCategories)); Inst21++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (pluralCategories) != "undefined") {_RecordType("<483,499,19>",(pluralCategories)); Inst25++; } } catch(e) {}
pluralCategories;
["one", "other"];

try { if (Inst26 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<531,544,22>",(reportCompare)); Inst26++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst27 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<565,578,23>",(reportCompare)); Inst27++; } } catch(e) {}
  reportCompare(0, 0);
}

