var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// |reftest| skip-if(!this.hasOwnProperty("Intl"))
try { if (Inst0 <= 1000 && typeof (IsConstructor) != "undefined") {_RecordType("<60,73,2>",(IsConstructor)); Inst0++; } } catch(e) {}
function IsConstructor(o) {
try { if (Inst1 <= 1000 && typeof (o) != "undefined") {_RecordType("<74,75,2>",(o)); Inst1++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (e) != "undefined") {_RecordType("<176,177,8>",(e)); Inst4++; } } catch(e) {}
  try {
try { if (Inst2 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<99,104,4>",(Proxy)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (o) != "undefined") {_RecordType("<105,106,4>",(o)); Inst3++; } } catch(e) {}
    new new Proxy(o, {
      construct: () => ({})
    })();
    return true;
  } catch (e) {
    return false;
  }
}

try { if (Inst5 <= 1000 && typeof (thisValues) != "undefined") {_RecordType("<215,225,13>",(thisValues)); Inst5++; } } catch(e) {}
function thisValues() {
try { if (Inst7 <= 1000 && typeof (Object.getOwnPropertyNames(Intl).map(name => Intl[name]).filter) != "undefined") {_RecordType("<257,320,14>",(Object.getOwnPropertyNames(Intl).map(name => Intl[name]).filter)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Object.getOwnPropertyNames(Intl).map) != "undefined") {_RecordType("<257,293,14>",(Object.getOwnPropertyNames(Intl).map)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Object.getOwnPropertyNames) != "undefined") {_RecordType("<257,283,14>",(Object.getOwnPropertyNames)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Object) != "undefined") {_RecordType("<257,263,14>",(Object)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Intl) != "undefined") {_RecordType("<284,288,14>",(Intl)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (name) != "undefined") {_RecordType("<294,298,14>",(name)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Intl[name]) != "undefined") {_RecordType("<302,312,14>",(Intl[name])); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Intl) != "undefined") {_RecordType("<302,306,14>",(Intl)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (IsConstructor) != "undefined") {_RecordType("<321,334,14>",(IsConstructor)); Inst15++; } } catch(e) {}
  const intlConstructors = Object.getOwnPropertyNames(Intl).map(name => Intl[name]).filter(IsConstructor);
try { if (Inst6 <= 1000 && typeof (intlConstructors) != "undefined") {_RecordType("<238,254,14>",(intlConstructors)); Inst6++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<374,383,16>",(undefined)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<404,410,16>",(Symbol)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<489,494,19>",(Proxy)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof ([].concat) != "undefined") {_RecordType("<527,536,20>",([].concat)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (intlConstructors.map) != "undefined") {_RecordType("<540,560,20>",(intlConstructors.map)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (intlConstructors) != "undefined") {_RecordType("<540,556,20>",(intlConstructors)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (ctor) != "undefined") {_RecordType("<561,565,20>",(ctor)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (ctor) != "undefined") {_RecordType("<612,616,21>",(ctor)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (ctor) != "undefined") {_RecordType("<686,690,22>",(ctor)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Object.create) != "undefined") {_RecordType("<756,769,23>",(Object.create)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Object) != "undefined") {_RecordType("<756,762,23>",(Object)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (ctor.prototype) != "undefined") {_RecordType("<770,784,23>",(ctor.prototype)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (ctor) != "undefined") {_RecordType("<770,774,23>",(ctor)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (Object.setPrototypeOf) != "undefined") {_RecordType("<847,868,24>",(Object.setPrototypeOf)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (Object) != "undefined") {_RecordType("<847,853,24>",(Object)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (ctor) != "undefined") {_RecordType("<873,877,24>",(ctor)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<881,897,24>",(Object.prototype)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (Object) != "undefined") {_RecordType("<881,887,24>",(Object)); Inst33++; } } catch(e) {}
  return [// Primitive values.
  ...[undefined, null, true, "abc", Symbol(), 123], // Object values.
  ...[{}, [], /(?:)/, function () {
    ;
  }, new Proxy({}, {})], // Intl objects.
  ...[].concat(...intlConstructors.map(ctor => [// Instance of an Intl constructor.
  new ctor(), // Instance of a subclassed Intl constructor.
  new class extends ctor {}(), // Object inheriting from an Intl constructor prototype.
  Object.create(ctor.prototype), // Intl object not inheriting from its default prototype.
  Object.setPrototypeOf(new ctor(), Object.prototype)]))];
} // Intl.PluralRules cannot be invoked as a function.


try { if (Inst34 <= 1000 && typeof (Intl.PluralRules) != "undefined") {_RecordType("<968,984,28>",(Intl.PluralRules)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (Intl) != "undefined") {_RecordType("<968,972,28>",(Intl)); Inst35++; } } catch(e) {}
(() => Intl.PluralRules())();

try { if (Inst36 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<992,1001,30>",(TypeError)); Inst36++; } } catch(e) {}
TypeError;

// Also test with explicit this-value.
for (let thisValue of thisValues()) {
try { if (Inst37 <= 1000 && typeof (thisValue) != "undefined") {_RecordType("<1052,1061,33>",(thisValue)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (thisValues) != "undefined") {_RecordType("<1065,1075,33>",(thisValues)); Inst38++; } } catch(e) {}
try { if (Inst39 <= 1000 && typeof (Intl.PluralRules.call) != "undefined") {_RecordType("<1090,1111,34>",(Intl.PluralRules.call)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (Intl.PluralRules) != "undefined") {_RecordType("<1090,1106,34>",(Intl.PluralRules)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (Intl) != "undefined") {_RecordType("<1090,1094,34>",(Intl)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (thisValue) != "undefined") {_RecordType("<1112,1121,34>",(thisValue)); Inst42++; } } catch(e) {}
  (() => Intl.PluralRules.call(thisValue))();

try { if (Inst43 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<1130,1139,36>",(TypeError)); Inst43++; } } catch(e) {}
  TypeError;
}

try { if (Inst44 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1155,1168,39>",(reportCompare)); Inst44++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst45 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1189,1202,40>",(reportCompare)); Inst45++; } } catch(e) {}
  reportCompare(true, true);
}

