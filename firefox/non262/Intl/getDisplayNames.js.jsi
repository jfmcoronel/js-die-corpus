var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// |reftest| skip-if(!this.hasOwnProperty('Intl')||!this.hasOwnProperty('addIntlExtras'))

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
// Tests the getCalendarInfo function with a diverse set of arguments.

/*
 * Test if getDisplayNames return value matches expected values.
 */
try { if (Inst0 <= 1000 && typeof (checkDisplayNames) != "undefined") {_RecordType("<449,466,11>",(checkDisplayNames)); Inst0++; } } catch(e) {}
function checkDisplayNames(names, expected) {
try { if (Inst1 <= 1000 && typeof (names) != "undefined") {_RecordType("<467,472,11>",(names)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (expected) != "undefined") {_RecordType("<474,482,11>",(expected)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (Object.getPrototypeOf) != "undefined") {_RecordType("<488,509,12>",(Object.getPrototypeOf)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Object) != "undefined") {_RecordType("<488,494,12>",(Object)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (names) != "undefined") {_RecordType("<510,515,12>",(names)); Inst5++; } } catch(e) {}
  Object.getPrototypeOf(names);
try { if (Inst6 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<520,536,13>",(Object.prototype)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Object) != "undefined") {_RecordType("<520,526,13>",(Object)); Inst7++; } } catch(e) {}
  Object.prototype;
try { if (Inst8 <= 1000 && typeof (names.locale) != "undefined") {_RecordType("<540,552,14>",(names.locale)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (names) != "undefined") {_RecordType("<540,545,14>",(names)); Inst9++; } } catch(e) {}
  names.locale;
try { if (Inst10 <= 1000 && typeof (expected.locale) != "undefined") {_RecordType("<556,571,15>",(expected.locale)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (expected) != "undefined") {_RecordType("<556,564,15>",(expected)); Inst11++; } } catch(e) {}
  expected.locale;
try { if (Inst12 <= 1000 && typeof (names.style) != "undefined") {_RecordType("<575,586,16>",(names.style)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (names) != "undefined") {_RecordType("<575,580,16>",(names)); Inst13++; } } catch(e) {}
  names.style;
try { if (Inst14 <= 1000 && typeof (expected.style) != "undefined") {_RecordType("<590,604,17>",(expected.style)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (expected) != "undefined") {_RecordType("<590,598,17>",(expected)); Inst15++; } } catch(e) {}
  expected.style;
try { if (Inst17 <= 1000 && typeof (names.values) != "undefined") {_RecordType("<627,639,18>",(names.values)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (names) != "undefined") {_RecordType("<627,632,18>",(names)); Inst18++; } } catch(e) {}
  const nameValues = names.values;
try { if (Inst16 <= 1000 && typeof (nameValues) != "undefined") {_RecordType("<614,624,18>",(nameValues)); Inst16++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (expected.values) != "undefined") {_RecordType("<666,681,19>",(expected.values)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (expected) != "undefined") {_RecordType("<666,674,19>",(expected)); Inst21++; } } catch(e) {}
  const expectedValues = expected.values;
try { if (Inst19 <= 1000 && typeof (expectedValues) != "undefined") {_RecordType("<649,663,19>",(expectedValues)); Inst19++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (Object.getOwnPropertyNames(nameValues).sort) != "undefined") {_RecordType("<708,751,20>",(Object.getOwnPropertyNames(nameValues).sort)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (Object.getOwnPropertyNames) != "undefined") {_RecordType("<708,734,20>",(Object.getOwnPropertyNames)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Object) != "undefined") {_RecordType("<708,714,20>",(Object)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (nameValues) != "undefined") {_RecordType("<735,745,20>",(nameValues)); Inst26++; } } catch(e) {}
  const nameValuesKeys = Object.getOwnPropertyNames(nameValues).sort();
try { if (Inst22 <= 1000 && typeof (nameValuesKeys) != "undefined") {_RecordType("<691,705,20>",(nameValuesKeys)); Inst22++; } } catch(e) {}
try { if (Inst28 <= 1000 && typeof (Object.getOwnPropertyNames(expectedValues).sort) != "undefined") {_RecordType("<784,831,21>",(Object.getOwnPropertyNames(expectedValues).sort)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (Object.getOwnPropertyNames) != "undefined") {_RecordType("<784,810,21>",(Object.getOwnPropertyNames)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (Object) != "undefined") {_RecordType("<784,790,21>",(Object)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (expectedValues) != "undefined") {_RecordType("<811,825,21>",(expectedValues)); Inst31++; } } catch(e) {}
  const expectedValuesKeys = Object.getOwnPropertyNames(expectedValues).sort();
try { if (Inst27 <= 1000 && typeof (expectedValuesKeys) != "undefined") {_RecordType("<763,781,21>",(expectedValuesKeys)); Inst27++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (nameValuesKeys) != "undefined") {_RecordType("<837,851,22>",(nameValuesKeys)); Inst32++; } } catch(e) {}
  nameValuesKeys;
try { if (Inst33 <= 1000 && typeof (expectedValuesKeys) != "undefined") {_RecordType("<855,873,23>",(expectedValuesKeys)); Inst33++; } } catch(e) {}
  expectedValuesKeys;

  for (let key of expectedValuesKeys) {
try { if (Inst34 <= 1000 && typeof (key) != "undefined") {_RecordType("<887,890,25>",(key)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (expectedValuesKeys) != "undefined") {_RecordType("<894,912,25>",(expectedValuesKeys)); Inst35++; } } catch(e) {}
try { if (Inst36 <= 1000 && typeof (nameValues[key]) != "undefined") {_RecordType("<920,935,26>",(nameValues[key])); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (nameValues) != "undefined") {_RecordType("<920,930,26>",(nameValues)); Inst37++; } } catch(e) {}
    nameValues[key];
try { if (Inst38 <= 1000 && typeof (expectedValues[key]) != "undefined") {_RecordType("<941,960,27>",(expectedValues[key])); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (expectedValues) != "undefined") {_RecordType("<941,955,27>",(expectedValues)); Inst39++; } } catch(e) {}
    expectedValues[key];
  }
}

try { if (Inst41 <= 1000 && typeof (Intl.getDisplayNames) != "undefined") {_RecordType("<979,999,31>",(Intl.getDisplayNames)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (Intl) != "undefined") {_RecordType("<979,983,31>",(Intl)); Inst42++; } } catch(e) {}
let gDN = Intl.getDisplayNames;
try { if (Inst40 <= 1000 && typeof (gDN) != "undefined") {_RecordType("<973,976,31>",(gDN)); Inst40++; } } catch(e) {}
try { if (Inst43 <= 1000 && typeof (gDN.length) != "undefined") {_RecordType("<1001,1011,32>",(gDN.length)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (gDN) != "undefined") {_RecordType("<1001,1004,32>",(gDN)); Inst44++; } } catch(e) {}
gDN.length;
2;
try { if (Inst45 <= 1000 && typeof (checkDisplayNames) != "undefined") {_RecordType("<1016,1033,34>",(checkDisplayNames)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (gDN) != "undefined") {_RecordType("<1034,1037,34>",(gDN)); Inst46++; } } catch(e) {}
checkDisplayNames(gDN('en-US', {}), {
  locale: 'en-US',
  style: 'long',
  values: {}
});
try { if (Inst47 <= 1000 && typeof (checkDisplayNames) != "undefined") {_RecordType("<1107,1124,39>",(checkDisplayNames)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (gDN) != "undefined") {_RecordType("<1125,1128,39>",(gDN)); Inst48++; } } catch(e) {}
checkDisplayNames(gDN('en-US', {
  keys: ['dates/gregorian/weekdays/wednesday'],
  style: 'narrow'
}), {
  locale: 'en-US',
  style: 'narrow',
  values: {
    'dates/gregorian/weekdays/wednesday': 'W'
  }
});
try { if (Inst49 <= 1000 && typeof (checkDisplayNames) != "undefined") {_RecordType("<1316,1333,49>",(checkDisplayNames)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (gDN) != "undefined") {_RecordType("<1334,1337,49>",(gDN)); Inst50++; } } catch(e) {}
checkDisplayNames(gDN('en-US', {
  keys: ['dates/fields/year', 'dates/fields/month', 'dates/fields/week', 'dates/fields/day', 'dates/gregorian/months/january', 'dates/gregorian/months/february', 'dates/gregorian/months/march', 'dates/gregorian/weekdays/tuesday']
}), {
  locale: 'en-US',
  style: 'long',
  values: {
    'dates/fields/year': 'year',
    'dates/fields/month': 'month',
    'dates/fields/week': 'week',
    'dates/fields/day': 'day',
    'dates/gregorian/months/january': 'January',
    'dates/gregorian/months/february': 'February',
    'dates/gregorian/months/march': 'March',
    'dates/gregorian/weekdays/tuesday': 'Tuesday'
  }
});
try { if (Inst51 <= 1000 && typeof (checkDisplayNames) != "undefined") {_RecordType("<1968,1985,65>",(checkDisplayNames)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (gDN) != "undefined") {_RecordType("<1986,1989,65>",(gDN)); Inst52++; } } catch(e) {}
checkDisplayNames(gDN('fr', {
  keys: ['dates/fields/year', 'dates/fields/day', 'dates/gregorian/months/october', 'dates/gregorian/weekdays/saturday', 'dates/gregorian/dayperiods/pm']
}), {
  locale: 'fr',
  style: 'long',
  values: {
    'dates/fields/year': 'année',
    'dates/fields/day': 'jour',
    'dates/gregorian/months/october': 'octobre',
    'dates/gregorian/weekdays/saturday': 'samedi',
    'dates/gregorian/dayperiods/pm': 'PM'
  }
});
try { if (Inst53 <= 1000 && typeof (checkDisplayNames) != "undefined") {_RecordType("<2419,2436,78>",(checkDisplayNames)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (gDN) != "undefined") {_RecordType("<2437,2440,78>",(gDN)); Inst54++; } } catch(e) {}
checkDisplayNames(gDN('it', {
  style: 'short',
  keys: ['dates/gregorian/weekdays/thursday', 'dates/gregorian/months/august', 'dates/gregorian/dayperiods/am', 'dates/fields/month']
}), {
  locale: 'it',
  style: 'short',
  values: {
    'dates/gregorian/weekdays/thursday': 'gio',
    'dates/gregorian/months/august': 'ago',
    'dates/gregorian/dayperiods/am': 'AM',
    'dates/fields/month': 'mese'
  }
});
try { if (Inst55 <= 1000 && typeof (checkDisplayNames) != "undefined") {_RecordType("<2829,2846,91>",(checkDisplayNames)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (gDN) != "undefined") {_RecordType("<2847,2850,91>",(gDN)); Inst56++; } } catch(e) {}
checkDisplayNames(gDN('ar', {
  style: 'long',
  keys: ['dates/gregorian/weekdays/thursday', 'dates/gregorian/months/august', 'dates/gregorian/dayperiods/am', 'dates/fields/month']
}), {
  locale: 'ar',
  style: 'long',
  values: {
    'dates/gregorian/weekdays/thursday': 'الخميس',
    'dates/gregorian/months/august': 'أغسطس',
    'dates/gregorian/dayperiods/am': 'ص',
    'dates/fields/month': 'الشهر'
  }
});
/* Invalid input */

(() => {
try { if (Inst57 <= 1000 && typeof (gDN) != "undefined") {_RecordType("<3274,3277,107>",(gDN)); Inst57++; } } catch(e) {}
  gDN('en-US', {
    style: '',
    keys: ['dates/gregorian/weekdays/thursday']
  });
})();

try { if (Inst58 <= 1000 && typeof (RangeError) != "undefined") {_RecordType("<3365,3375,113>",(RangeError)); Inst58++; } } catch(e) {}
RangeError;

(() => {
try { if (Inst59 <= 1000 && typeof (gDN) != "undefined") {_RecordType("<3389,3392,116>",(gDN)); Inst59++; } } catch(e) {}
  gDN('en-US', {
    style: 'bogus',
    keys: ['dates/gregorian/weekdays/thursday']
  });
})();

try { if (Inst60 <= 1000 && typeof (RangeError) != "undefined") {_RecordType("<3485,3495,122>",(RangeError)); Inst60++; } } catch(e) {}
RangeError;

(() => {
try { if (Inst61 <= 1000 && typeof (gDN) != "undefined") {_RecordType("<3509,3512,125>",(gDN)); Inst61++; } } catch(e) {}
  gDN('foo-X', {
    keys: ['dates/gregorian/weekdays/thursday']
  });
})();

try { if (Inst62 <= 1000 && typeof (RangeError) != "undefined") {_RecordType("<3585,3595,130>",(RangeError)); Inst62++; } } catch(e) {}
RangeError;
try { if (Inst64 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<3636,3651,131>",(Symbol.iterator)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<3636,3642,131>",(Symbol)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<3665,3668,131>",(NaN)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<3670,3678,131>",(Infinity)); Inst67++; } } catch(e) {}
const typeErrorKeys = [null, 'string', Symbol.iterator, 15, 1, 3.7, NaN, Infinity];
try { if (Inst63 <= 1000 && typeof (typeErrorKeys) != "undefined") {_RecordType("<3603,3616,131>",(typeErrorKeys)); Inst63++; } } catch(e) {}

for (let keys of typeErrorKeys) {
try { if (Inst68 <= 1000 && typeof (keys) != "undefined") {_RecordType("<3691,3695,133>",(keys)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (typeErrorKeys) != "undefined") {_RecordType("<3699,3712,133>",(typeErrorKeys)); Inst69++; } } catch(e) {}
  (() => {
try { if (Inst70 <= 1000 && typeof (gDN) != "undefined") {_RecordType("<3731,3734,135>",(gDN)); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (keys) != "undefined") {_RecordType("<3752,3756,136>",(keys)); Inst71++; } } catch(e) {}
    gDN('en-US', {
      keys
    });
  })();

try { if (Inst72 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<3776,3785,140>",(TypeError)); Inst72++; } } catch(e) {}
  TypeError;
}

const rangeErrorKeys = [[''], ['foo'], ['dates/foo'], ['/dates/foo'], ['dates/foo/foo'], ['dates/fields'], ['dates/fields/'], ['dates/fields/foo'], ['dates/fields/foo/month'], ['/dates/foo/faa/bar/baz'], ['dates///bar/baz'], ['dates/gregorian'], ['dates/gregorian/'], ['dates/gregorian/foo'], ['dates/gregorian/months'], ['dates/gregorian/months/foo'], ['dates/gregorian/weekdays'], ['dates/gregorian/weekdays/foo'], ['dates/gregorian/dayperiods'], ['dates/gregorian/dayperiods/foo'], ['dates/gregorian/months/الشهر'], [3], [null], ['d', 'a', 't', 'e', 's'], ['datesEXTRA'], ['dates/fieldsEXTRA'], ['dates/gregorianEXTRA'], ['dates/gregorian/monthsEXTRA'], ['dates/gregorian/weekdaysEXTRA'], ['dates/fields/dayperiods/amEXTRA'], ['dates/gregori\u1161n/months/january'], ["dates/fields/year/"], ["dates/fields/year\0"], ["dates/fields/month/"], ["dates/fields/month\0"], ["dates/fields/week/"], ["dates/fields/week\0"], ["dates/fields/day/"], ["dates/fields/day\0"], ["dates/gregorian/months/january/"], ["dates/gregorian/months/january\0"], ["dates/gregorian/weekdays/saturday/"], ["dates/gregorian/weekdays/saturday\0"], ["dates/gregorian/dayperiods/am/"], ["dates/gregorian/dayperiods/am\0"], ["dates/fields/months/january/"], ["dates/fields/months/january\0"]];
try { if (Inst73 <= 1000 && typeof (rangeErrorKeys) != "undefined") {_RecordType("<3796,3810,143>",(rangeErrorKeys)); Inst73++; } } catch(e) {}

for (let keys of rangeErrorKeys) {
try { if (Inst74 <= 1000 && typeof (keys) != "undefined") {_RecordType("<5065,5069,145>",(keys)); Inst74++; } } catch(e) {}try { if (Inst75 <= 1000 && typeof (rangeErrorKeys) != "undefined") {_RecordType("<5073,5087,145>",(rangeErrorKeys)); Inst75++; } } catch(e) {}
  (() => {
try { if (Inst76 <= 1000 && typeof (gDN) != "undefined") {_RecordType("<5106,5109,147>",(gDN)); Inst76++; } } catch(e) {}try { if (Inst77 <= 1000 && typeof (keys) != "undefined") {_RecordType("<5127,5131,148>",(keys)); Inst77++; } } catch(e) {}
    gDN('en-US', {
      keys
    });
  })();

try { if (Inst78 <= 1000 && typeof (RangeError) != "undefined") {_RecordType("<5151,5161,152>",(RangeError)); Inst78++; } } catch(e) {}
  RangeError;
}

try { if (Inst79 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<5177,5190,155>",(reportCompare)); Inst79++; } } catch(e) {}
if (typeof reportCompare === 'function') {
try { if (Inst80 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<5211,5224,156>",(reportCompare)); Inst80++; } } catch(e) {}
  reportCompare(0, 0);
}

