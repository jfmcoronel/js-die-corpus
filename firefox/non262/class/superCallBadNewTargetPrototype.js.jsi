var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
class base {
  constructor() {
    ;
  }

} // lies and the lying liars who tell them
try { if (Inst0 <= 1000 && typeof (base) != "undefined") {_RecordType("<6,10,1>",(base)); Inst0++; } } catch(e) {}


try { if (Inst1 <= 1000 && typeof (lies) != "undefined") {_RecordType("<97,101,9>",(lies)); Inst1++; } } catch(e) {}
function lies() {
  ;
}

lies.prototype = 4;
try { if (Inst2 <= 1000 && typeof (lies.prototype) != "undefined") {_RecordType("<113,127,13>",(lies.prototype)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (lies) != "undefined") {_RecordType("<113,117,13>",(lies)); Inst3++; } } catch(e) {}

try { if (Inst4 <= 1000 && typeof (Reflect.consruct) != "undefined") {_RecordType("<141,157,15>",(Reflect.consruct)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<141,148,15>",(Reflect)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (base) != "undefined") {_RecordType("<158,162,15>",(base)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (lies) != "undefined") {_RecordType("<168,172,15>",(lies)); Inst7++; } } catch(e) {}
(() => Reflect.consruct(base, [], lies))();

try { if (Inst8 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<179,188,17>",(TypeError)); Inst8++; } } catch(e) {}
TypeError;

// lie a slightly different way
try { if (Inst9 <= 1000 && typeof (get) != "undefined") {_RecordType("<232,235,20>",(get)); Inst9++; } } catch(e) {}
function get(target, property, receiver) {
try { if (Inst10 <= 1000 && typeof (target) != "undefined") {_RecordType("<236,242,20>",(target)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (property) != "undefined") {_RecordType("<244,252,20>",(property)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (receiver) != "undefined") {_RecordType("<254,262,20>",(receiver)); Inst12++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (property) != "undefined") {_RecordType("<272,280,21>",(property)); Inst13++; } } catch(e) {}
  if (property === "prototype") {
    return 42;
  }

try { if (Inst14 <= 1000 && typeof (Reflect.get) != "undefined") {_RecordType("<329,340,25>",(Reflect.get)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<329,336,25>",(Reflect)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (target) != "undefined") {_RecordType("<341,347,25>",(target)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (property) != "undefined") {_RecordType("<349,357,25>",(property)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (receiver) != "undefined") {_RecordType("<359,367,25>",(receiver)); Inst18++; } } catch(e) {}
  return Reflect.get(target, property, receiver);
}

try { if (Inst20 <= 1000 && typeof (base) != "undefined") {_RecordType("<392,396,28>",(base)); Inst20++; } } catch(e) {}
class inst extends base {
  constructor() {
    super();
  }

}
try { if (Inst19 <= 1000 && typeof (inst) != "undefined") {_RecordType("<379,383,28>",(inst)); Inst19++; } } catch(e) {}

try { if (Inst21 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<453,458,35>",(Proxy)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (inst) != "undefined") {_RecordType("<459,463,35>",(inst)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (get) != "undefined") {_RecordType("<469,472,36>",(get)); Inst23++; } } catch(e) {}
(() => new new Proxy(inst, {
  get
})())();

try { if (Inst24 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<483,492,39>",(TypeError)); Inst24++; } } catch(e) {}
TypeError;

try { if (Inst26 <= 1000 && typeof (base) != "undefined") {_RecordType("<521,525,41>",(base)); Inst26++; } } catch(e) {}
class defaultInst extends base {}
try { if (Inst25 <= 1000 && typeof (defaultInst) != "undefined") {_RecordType("<501,512,41>",(defaultInst)); Inst25++; } } catch(e) {}

try { if (Inst27 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<545,550,43>",(Proxy)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (defaultInst) != "undefined") {_RecordType("<551,562,43>",(defaultInst)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (get) != "undefined") {_RecordType("<568,571,44>",(get)); Inst29++; } } catch(e) {}
(() => new new Proxy(defaultInst, {
  get
})())();

try { if (Inst30 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<582,591,47>",(TypeError)); Inst30++; } } catch(e) {}
TypeError;

try { if (Inst31 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<605,618,49>",(reportCompare)); Inst31++; } } catch(e) {}
if (typeof reportCompare === 'function') {
try { if (Inst32 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<639,652,50>",(reportCompare)); Inst32++; } } catch(e) {}
  reportCompare(0, 0, "OK");
}

