var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst1 <= 1000 && typeof (Array) != "undefined") {_RecordType("<18,23,1>",(Array)); Inst1++; } } catch(e) {}
class foo extends Array {}
try { if (Inst0 <= 1000 && typeof (foo) != "undefined") {_RecordType("<6,9,1>",(foo)); Inst0++; } } catch(e) {}

try { if (Inst2 <= 1000 && typeof (testArrs) != "undefined") {_RecordType("<37,45,3>",(testArrs)); Inst2++; } } catch(e) {}
function testArrs(arrs) {
try { if (Inst3 <= 1000 && typeof (arrs) != "undefined") {_RecordType("<46,50,3>",(arrs)); Inst3++; } } catch(e) {}
  for (let arr of arrs) {
try { if (Inst4 <= 1000 && typeof (arr) != "undefined") {_RecordType("<65,68,4>",(arr)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (arrs) != "undefined") {_RecordType("<72,76,4>",(arrs)); Inst5++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (Object.getPrototypeOf) != "undefined") {_RecordType("<84,105,5>",(Object.getPrototypeOf)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Object) != "undefined") {_RecordType("<84,90,5>",(Object)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (arr) != "undefined") {_RecordType("<106,109,5>",(arr)); Inst8++; } } catch(e) {}
    Object.getPrototypeOf(arr);
try { if (Inst9 <= 1000 && typeof (foo.prototype) != "undefined") {_RecordType("<116,129,6>",(foo.prototype)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (foo) != "undefined") {_RecordType("<116,119,6>",(foo)); Inst10++; } } catch(e) {}
    foo.prototype;
  }
}

var arrs = [];
try { if (Inst11 <= 1000 && typeof (arrs) != "undefined") {_RecordType("<142,146,10>",(arrs)); Inst11++; } } catch(e) {}

for (var i = 0; i < 25; i++) {
try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<163,164,12>",(i)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<170,171,12>",(i)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<178,179,12>",(i)); Inst14++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (arrs.push) != "undefined") {_RecordType("<187,196,13>",(arrs.push)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (arrs) != "undefined") {_RecordType("<187,191,13>",(arrs)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (foo) != "undefined") {_RecordType("<201,204,13>",(foo)); Inst17++; } } catch(e) {}
  arrs.push(new foo(1));
}

try { if (Inst18 <= 1000 && typeof (testArrs) != "undefined") {_RecordType("<213,221,16>",(testArrs)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (arrs) != "undefined") {_RecordType("<222,226,16>",(arrs)); Inst19++; } } catch(e) {}
testArrs(arrs);
arrs[0].nonIndexedProp = "uhoh";
try { if (Inst20 <= 1000 && typeof (arrs[0].nonIndexedProp) != "undefined") {_RecordType("<229,251,17>",(arrs[0].nonIndexedProp)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (arrs[0]) != "undefined") {_RecordType("<229,236,17>",(arrs[0])); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (arrs) != "undefined") {_RecordType("<229,233,17>",(arrs)); Inst22++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (arrs.push) != "undefined") {_RecordType("<262,271,18>",(arrs.push)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (arrs) != "undefined") {_RecordType("<262,266,18>",(arrs)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (foo) != "undefined") {_RecordType("<276,279,18>",(foo)); Inst25++; } } catch(e) {}
arrs.push(new foo(1));
try { if (Inst26 <= 1000 && typeof (testArrs) != "undefined") {_RecordType("<285,293,19>",(testArrs)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (arrs) != "undefined") {_RecordType("<294,298,19>",(arrs)); Inst27++; } } catch(e) {}
testArrs(arrs);

try { if (Inst28 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<313,326,21>",(reportCompare)); Inst28++; } } catch(e) {}
if (typeof reportCompare === 'function') {
try { if (Inst29 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<347,360,22>",(reportCompare)); Inst29++; } } catch(e) {}
  reportCompare(0, 0, "OK");
}

