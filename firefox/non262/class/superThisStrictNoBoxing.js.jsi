var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
class C {
  get prop_this() {
    return this;
  }

}
try { if (Inst0 <= 1000 && typeof (C) != "undefined") {_RecordType("<6,7,1>",(C)); Inst0++; } } catch(e) {}

var g_prop_this = 'prop_this';
try { if (Inst1 <= 1000 && typeof (g_prop_this) != "undefined") {_RecordType("<59,70,8>",(g_prop_this)); Inst1++; } } catch(e) {}

try { if (Inst5 <= 1000 && typeof (C) != "undefined") {_RecordType("<103,104,10>",(C)); Inst5++; } } catch(e) {}
class D extends C {
  super_prop() {
try { if (Inst3 <= 1000 && typeof (super.prop_this) != "undefined") {_RecordType("<135,150,12>",(super.prop_this)); Inst3++; } } catch(e) {}
    return super.prop_this;
  }

  super_elem() {
try { if (Inst4 <= 1000 && typeof (super[g_prop_this]) != "undefined") {_RecordType("<185,203,16>",(super[g_prop_this])); Inst4++; } } catch(e) {}
    return super[g_prop_this];
  }

}
try { if (Inst2 <= 1000 && typeof (D) != "undefined") {_RecordType("<93,94,10>",(D)); Inst2++; } } catch(e) {}

try { if (Inst7 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<226,232,21>",(Symbol)); Inst7++; } } catch(e) {}
var barsym = Symbol("bar"); // Test that primitive |this| values are not boxed, and undefined/null are not
try { if (Inst6 <= 1000 && typeof (barsym) != "undefined") {_RecordType("<217,223,21>",(barsym)); Inst6++; } } catch(e) {}
// globals for super.property.

try { if (Inst8 <= 1000 && typeof (new D().super_prop.call) != "undefined") {_RecordType("<352,375,24>",(new D().super_prop.call)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (new D().super_prop) != "undefined") {_RecordType("<352,370,24>",(new D().super_prop)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (D) != "undefined") {_RecordType("<356,357,24>",(D)); Inst10++; } } catch(e) {}
new D().super_prop.call(3);
3;
try { if (Inst11 <= 1000 && typeof (new D().super_prop.call) != "undefined") {_RecordType("<383,406,26>",(new D().super_prop.call)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (new D().super_prop) != "undefined") {_RecordType("<383,401,26>",(new D().super_prop)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (D) != "undefined") {_RecordType("<387,388,26>",(D)); Inst13++; } } catch(e) {}
new D().super_prop.call("foo");
"foo";
try { if (Inst14 <= 1000 && typeof (new D().super_prop.call) != "undefined") {_RecordType("<422,445,28>",(new D().super_prop.call)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (new D().super_prop) != "undefined") {_RecordType("<422,440,28>",(new D().super_prop)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (D) != "undefined") {_RecordType("<426,427,28>",(D)); Inst16++; } } catch(e) {}
new D().super_prop.call(true);
true;
try { if (Inst17 <= 1000 && typeof (new D().super_prop.call) != "undefined") {_RecordType("<459,482,30>",(new D().super_prop.call)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (new D().super_prop) != "undefined") {_RecordType("<459,477,30>",(new D().super_prop)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (D) != "undefined") {_RecordType("<463,464,30>",(D)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (barsym) != "undefined") {_RecordType("<483,489,30>",(barsym)); Inst20++; } } catch(e) {}
new D().super_prop.call(barsym);
try { if (Inst21 <= 1000 && typeof (barsym) != "undefined") {_RecordType("<492,498,31>",(barsym)); Inst21++; } } catch(e) {}
barsym;
try { if (Inst22 <= 1000 && typeof (new D().super_prop.call) != "undefined") {_RecordType("<500,523,32>",(new D().super_prop.call)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (new D().super_prop) != "undefined") {_RecordType("<500,518,32>",(new D().super_prop)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (D) != "undefined") {_RecordType("<504,505,32>",(D)); Inst24++; } } catch(e) {}
new D().super_prop.call(null);
null;
try { if (Inst25 <= 1000 && typeof (new D().super_prop.call) != "undefined") {_RecordType("<537,560,34>",(new D().super_prop.call)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (new D().super_prop) != "undefined") {_RecordType("<537,555,34>",(new D().super_prop)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (D) != "undefined") {_RecordType("<541,542,34>",(D)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<561,570,34>",(undefined)); Inst28++; } } catch(e) {}
new D().super_prop.call(undefined);
try { if (Inst29 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<573,582,35>",(undefined)); Inst29++; } } catch(e) {}
undefined;
try { if (Inst30 <= 1000 && typeof (new D().super_elem.call) != "undefined") {_RecordType("<584,607,36>",(new D().super_elem.call)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (new D().super_elem) != "undefined") {_RecordType("<584,602,36>",(new D().super_elem)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (D) != "undefined") {_RecordType("<588,589,36>",(D)); Inst32++; } } catch(e) {}
new D().super_elem.call(3);
3;
try { if (Inst33 <= 1000 && typeof (new D().super_elem.call) != "undefined") {_RecordType("<615,638,38>",(new D().super_elem.call)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (new D().super_elem) != "undefined") {_RecordType("<615,633,38>",(new D().super_elem)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (D) != "undefined") {_RecordType("<619,620,38>",(D)); Inst35++; } } catch(e) {}
new D().super_elem.call("foo");
"foo";
try { if (Inst36 <= 1000 && typeof (new D().super_elem.call) != "undefined") {_RecordType("<654,677,40>",(new D().super_elem.call)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (new D().super_elem) != "undefined") {_RecordType("<654,672,40>",(new D().super_elem)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (D) != "undefined") {_RecordType("<658,659,40>",(D)); Inst38++; } } catch(e) {}
new D().super_elem.call(true);
true;
try { if (Inst39 <= 1000 && typeof (new D().super_elem.call) != "undefined") {_RecordType("<691,714,42>",(new D().super_elem.call)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (new D().super_elem) != "undefined") {_RecordType("<691,709,42>",(new D().super_elem)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (D) != "undefined") {_RecordType("<695,696,42>",(D)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (barsym) != "undefined") {_RecordType("<715,721,42>",(barsym)); Inst42++; } } catch(e) {}
new D().super_elem.call(barsym);
try { if (Inst43 <= 1000 && typeof (barsym) != "undefined") {_RecordType("<724,730,43>",(barsym)); Inst43++; } } catch(e) {}
barsym;
try { if (Inst44 <= 1000 && typeof (new D().super_elem.call) != "undefined") {_RecordType("<732,755,44>",(new D().super_elem.call)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (new D().super_elem) != "undefined") {_RecordType("<732,750,44>",(new D().super_elem)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (D) != "undefined") {_RecordType("<736,737,44>",(D)); Inst46++; } } catch(e) {}
new D().super_elem.call(null);
null;
try { if (Inst47 <= 1000 && typeof (new D().super_elem.call) != "undefined") {_RecordType("<769,792,46>",(new D().super_elem.call)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (new D().super_elem) != "undefined") {_RecordType("<769,787,46>",(new D().super_elem)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (D) != "undefined") {_RecordType("<773,774,46>",(D)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<793,802,46>",(undefined)); Inst50++; } } catch(e) {}
new D().super_elem.call(undefined);
try { if (Inst51 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<805,814,47>",(undefined)); Inst51++; } } catch(e) {}
undefined;

try { if (Inst52 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<828,841,49>",(reportCompare)); Inst52++; } } catch(e) {}
if (typeof reportCompare === 'function') {
try { if (Inst53 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<862,875,50>",(reportCompare)); Inst53++; } } catch(e) {}
  reportCompare(0, 0);
}

