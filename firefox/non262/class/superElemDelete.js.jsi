var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Make sure we get the proper side effects.
// |delete super[expr]| applies ToPropertyKey on |expr| before throwing.
class base {
  constructor() {
    ;
  }

}
try { if (Inst0 <= 1000 && typeof (base) != "undefined") {_RecordType("<124,128,3>",(base)); Inst0++; } } catch(e) {}

try { if (Inst16 <= 1000 && typeof (base) != "undefined") {_RecordType("<185,189,10>",(base)); Inst16++; } } catch(e) {}
class derived extends base {
  constructor() {
    super();
  }

  testDeleteElem() {
    let sideEffect = 0;
try { if (Inst2 <= 1000 && typeof (sideEffect) != "undefined") {_RecordType("<257,267,16>",(sideEffect)); Inst2++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (toString) != "undefined") {_RecordType("<295,303,18>",(toString)); Inst4++; } } catch(e) {}
    let key = {
      toString() {
try { if (Inst5 <= 1000 && typeof (sideEffect) != "undefined") {_RecordType("<316,326,19>",(sideEffect)); Inst5++; } } catch(e) {}
        sideEffect++;
        return "";
      }

    };
try { if (Inst3 <= 1000 && typeof (key) != "undefined") {_RecordType("<281,284,17>",(key)); Inst3++; } } catch(e) {}

try { if (Inst6 <= 1000 && typeof (super[key]) != "undefined") {_RecordType("<384,394,25>",(super[key])); Inst6++; } } catch(e) {}
    (() => delete super[key])();

try { if (Inst7 <= 1000 && typeof (ReferenceError) != "undefined") {_RecordType("<404,418,27>",(ReferenceError)); Inst7++; } } catch(e) {}
    ReferenceError;
try { if (Inst8 <= 1000 && typeof (sideEffect) != "undefined") {_RecordType("<424,434,28>",(sideEffect)); Inst8++; } } catch(e) {}
    sideEffect;
    1;
  }

  testDeleteElemPropValFirst() {
    // The deletion error is a reference error, but by munging the prototype
    // chain, we can force a type error from JSOP_SUPERBASE.
try { if (Inst10 <= 1000 && typeof (toString) != "undefined") {_RecordType("<641,649,36>",(toString)); Inst10++; } } catch(e) {}
    let key = {
      toString() {
try { if (Inst11 <= 1000 && typeof (Object.setPrototypeOf) != "undefined") {_RecordType("<662,683,37>",(Object.setPrototypeOf)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Object) != "undefined") {_RecordType("<662,668,37>",(Object)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (derived.prototype) != "undefined") {_RecordType("<684,701,37>",(derived.prototype)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (derived) != "undefined") {_RecordType("<684,691,37>",(derived)); Inst14++; } } catch(e) {}
        Object.setPrototypeOf(derived.prototype, null);
        return "";
      }

    };
try { if (Inst9 <= 1000 && typeof (key) != "undefined") {_RecordType("<627,630,35>",(key)); Inst9++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (super[key]) != "undefined") {_RecordType("<756,766,42>",(super[key])); Inst15++; } } catch(e) {}
    delete super[key];
  }

}
try { if (Inst1 <= 1000 && typeof (derived) != "undefined") {_RecordType("<169,176,10>",(derived)); Inst1++; } } catch(e) {}

try { if (Inst35 <= 1000 && typeof (base) != "undefined") {_RecordType("<812,816,47>",(base)); Inst35++; } } catch(e) {}
class derivedTestDeleteElem extends base {
  constructor() {
    let sideEffect = 0;
try { if (Inst18 <= 1000 && typeof (sideEffect) != "undefined") {_RecordType("<845,855,49>",(sideEffect)); Inst18++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (toString) != "undefined") {_RecordType("<883,891,51>",(toString)); Inst20++; } } catch(e) {}
    let key = {
      toString() {
try { if (Inst21 <= 1000 && typeof (sideEffect) != "undefined") {_RecordType("<904,914,52>",(sideEffect)); Inst21++; } } catch(e) {}
        sideEffect++;
        return "";
      }

    };
try { if (Inst19 <= 1000 && typeof (key) != "undefined") {_RecordType("<869,872,50>",(key)); Inst19++; } } catch(e) {}

try { if (Inst22 <= 1000 && typeof (super[key]) != "undefined") {_RecordType("<972,982,58>",(super[key])); Inst22++; } } catch(e) {}
    (() => delete super[key])();

try { if (Inst23 <= 1000 && typeof (ReferenceError) != "undefined") {_RecordType("<992,1006,60>",(ReferenceError)); Inst23++; } } catch(e) {}
    ReferenceError;
try { if (Inst24 <= 1000 && typeof (sideEffect) != "undefined") {_RecordType("<1012,1022,61>",(sideEffect)); Inst24++; } } catch(e) {}
    sideEffect;
    0;
    super();

try { if (Inst25 <= 1000 && typeof (super[key]) != "undefined") {_RecordType("<1063,1073,65>",(super[key])); Inst25++; } } catch(e) {}
    (() => delete super[key])();

try { if (Inst26 <= 1000 && typeof (ReferenceError) != "undefined") {_RecordType("<1083,1097,67>",(ReferenceError)); Inst26++; } } catch(e) {}
    ReferenceError;
try { if (Inst27 <= 1000 && typeof (sideEffect) != "undefined") {_RecordType("<1103,1113,68>",(sideEffect)); Inst27++; } } catch(e) {}
    sideEffect;
    1;
try { if (Inst28 <= 1000 && typeof (Object.setPrototypeOf) != "undefined") {_RecordType("<1126,1147,70>",(Object.setPrototypeOf)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1126,1132,70>",(Object)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (derivedTestDeleteElem.prototype) != "undefined") {_RecordType("<1148,1179,70>",(derivedTestDeleteElem.prototype)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (derivedTestDeleteElem) != "undefined") {_RecordType("<1148,1169,70>",(derivedTestDeleteElem)); Inst31++; } } catch(e) {}
    Object.setPrototypeOf(derivedTestDeleteElem.prototype, null);

try { if (Inst32 <= 1000 && typeof (super[key]) != "undefined") {_RecordType("<1207,1217,72>",(super[key])); Inst32++; } } catch(e) {}
    (() => delete super[key])();

try { if (Inst33 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<1227,1236,74>",(TypeError)); Inst33++; } } catch(e) {}
    TypeError;
try { if (Inst34 <= 1000 && typeof (sideEffect) != "undefined") {_RecordType("<1242,1252,75>",(sideEffect)); Inst34++; } } catch(e) {}
    sideEffect;
    2;
    return {};
  }

}
try { if (Inst17 <= 1000 && typeof (derivedTestDeleteElem) != "undefined") {_RecordType("<782,803,47>",(derivedTestDeleteElem)); Inst17++; } } catch(e) {}

try { if (Inst37 <= 1000 && typeof (derived) != "undefined") {_RecordType("<1296,1303,82>",(derived)); Inst37++; } } catch(e) {}
var d = new derived();
try { if (Inst36 <= 1000 && typeof (d) != "undefined") {_RecordType("<1288,1289,82>",(d)); Inst36++; } } catch(e) {}
try { if (Inst38 <= 1000 && typeof (d.testDeleteElem) != "undefined") {_RecordType("<1307,1323,83>",(d.testDeleteElem)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (d) != "undefined") {_RecordType("<1307,1308,83>",(d)); Inst39++; } } catch(e) {}
d.testDeleteElem();

try { if (Inst40 <= 1000 && typeof (d.testDeleteElemPropValFirst) != "undefined") {_RecordType("<1335,1363,85>",(d.testDeleteElemPropValFirst)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (d) != "undefined") {_RecordType("<1335,1336,85>",(d)); Inst41++; } } catch(e) {}
(() => d.testDeleteElemPropValFirst())();

try { if (Inst42 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<1371,1380,87>",(TypeError)); Inst42++; } } catch(e) {}
TypeError;
try { if (Inst43 <= 1000 && typeof (derivedTestDeleteElem) != "undefined") {_RecordType("<1386,1407,88>",(derivedTestDeleteElem)); Inst43++; } } catch(e) {}
new derivedTestDeleteElem();

try { if (Inst44 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1423,1436,90>",(reportCompare)); Inst44++; } } catch(e) {}
if (typeof reportCompare === 'function') {
try { if (Inst45 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1457,1470,91>",(reportCompare)); Inst45++; } } catch(e) {}
  reportCompare(0, 0, "OK");
}

