var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Make sure we get the proper side effects.
// |delete super.prop| and |delete super[expr]| throw universally.
class base {
  constructor() {
    ;
  }

}
try { if (Inst0 <= 1000 && typeof (base) != "undefined") {_RecordType("<118,122,3>",(base)); Inst0++; } } catch(e) {}

try { if (Inst13 <= 1000 && typeof (base) != "undefined") {_RecordType("<179,183,10>",(base)); Inst13++; } } catch(e) {}
class derived extends base {
  constructor() {
    super();
  }

  testDeleteProp() {
try { if (Inst2 <= 1000 && typeof (super.prop) != "undefined") {_RecordType("<254,264,16>",(super.prop)); Inst2++; } } catch(e) {}
    delete super.prop;
  }

  testDeleteElem() {
    let sideEffect = 0;
try { if (Inst3 <= 1000 && typeof (sideEffect) != "undefined") {_RecordType("<300,310,20>",(sideEffect)); Inst3++; } } catch(e) {}

try { if (Inst4 <= 1000 && typeof (super[sideEffect = 1]) != "undefined") {_RecordType("<335,356,22>",(super[sideEffect = 1])); Inst4++; } } catch(e) {}
    (() => delete super[sideEffect = 1])();
try { if (Inst5 <= 1000 && typeof (sideEffect) != "undefined") {_RecordType("<341,351,22>",(sideEffect)); Inst5++; } } catch(e) {}

try { if (Inst6 <= 1000 && typeof (ReferenceError) != "undefined") {_RecordType("<366,380,24>",(ReferenceError)); Inst6++; } } catch(e) {}
    ReferenceError;
try { if (Inst7 <= 1000 && typeof (sideEffect) != "undefined") {_RecordType("<386,396,25>",(sideEffect)); Inst7++; } } catch(e) {}
    sideEffect;
    1;
  }

  testDeleteElemPropValFirst() {
    // The deletion error is a reference error, but by munging the prototype
    // chain, we can force a typeerror from JSOP_SUPERBASE
try { if (Inst8 <= 1000 && typeof (super[Object.setPrototypeOf(derived.prototype, null)]) != "undefined") {_RecordType("<590,643,32>",(super[Object.setPrototypeOf(derived.prototype, null)])); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Object.setPrototypeOf) != "undefined") {_RecordType("<596,617,32>",(Object.setPrototypeOf)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Object) != "undefined") {_RecordType("<596,602,32>",(Object)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (derived.prototype) != "undefined") {_RecordType("<618,635,32>",(derived.prototype)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (derived) != "undefined") {_RecordType("<618,625,32>",(derived)); Inst12++; } } catch(e) {}
    delete super[Object.setPrototypeOf(derived.prototype, null)];
  }

}
try { if (Inst1 <= 1000 && typeof (derived) != "undefined") {_RecordType("<163,170,10>",(derived)); Inst1++; } } catch(e) {}

try { if (Inst15 <= 1000 && typeof (derived) != "undefined") {_RecordType("<665,672,37>",(derived)); Inst15++; } } catch(e) {}
var d = new derived();
try { if (Inst14 <= 1000 && typeof (d) != "undefined") {_RecordType("<657,658,37>",(d)); Inst14++; } } catch(e) {}

try { if (Inst16 <= 1000 && typeof (d.testDeleteProp) != "undefined") {_RecordType("<684,700,39>",(d.testDeleteProp)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (d) != "undefined") {_RecordType("<684,685,39>",(d)); Inst17++; } } catch(e) {}
(() => d.testDeleteProp())();

try { if (Inst18 <= 1000 && typeof (ReferenceError) != "undefined") {_RecordType("<708,722,41>",(ReferenceError)); Inst18++; } } catch(e) {}
ReferenceError;
try { if (Inst19 <= 1000 && typeof (d.testDeleteElem) != "undefined") {_RecordType("<724,740,42>",(d.testDeleteElem)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (d) != "undefined") {_RecordType("<724,725,42>",(d)); Inst20++; } } catch(e) {}
d.testDeleteElem();

try { if (Inst21 <= 1000 && typeof (d.testDeleteElemPropValFirst) != "undefined") {_RecordType("<752,780,44>",(d.testDeleteElemPropValFirst)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (d) != "undefined") {_RecordType("<752,753,44>",(d)); Inst22++; } } catch(e) {}
(() => d.testDeleteElemPropValFirst())();

try { if (Inst23 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<788,797,46>",(TypeError)); Inst23++; } } catch(e) {}
TypeError;
// |delete super.x| does not delete anything before throwing.
try { if (Inst25 <= 1000 && typeof (go) != "undefined") {_RecordType("<878,880,49>",(go)); Inst25++; } } catch(e) {}
var thing1 = {
  go() {
    delete super.toString;
  }

};
try { if (Inst24 <= 1000 && typeof (thing1) != "undefined") {_RecordType("<865,871,48>",(thing1)); Inst24++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (Object.prototype.toString) != "undefined") {_RecordType("<932,957,54>",(Object.prototype.toString)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<932,948,54>",(Object.prototype)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (Object) != "undefined") {_RecordType("<932,938,54>",(Object)); Inst29++; } } catch(e) {}
let saved = Object.prototype.toString;
try { if (Inst26 <= 1000 && typeof (saved) != "undefined") {_RecordType("<924,929,54>",(saved)); Inst26++; } } catch(e) {}

try { if (Inst30 <= 1000 && typeof (thing1.go) != "undefined") {_RecordType("<967,976,56>",(thing1.go)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (thing1) != "undefined") {_RecordType("<967,973,56>",(thing1)); Inst31++; } } catch(e) {}
(() => thing1.go())();

try { if (Inst32 <= 1000 && typeof (ReferenceError) != "undefined") {_RecordType("<984,998,58>",(ReferenceError)); Inst32++; } } catch(e) {}
ReferenceError;
try { if (Inst33 <= 1000 && typeof (Object.prototype.toString) != "undefined") {_RecordType("<1000,1025,59>",(Object.prototype.toString)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<1000,1016,59>",(Object.prototype)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1000,1006,59>",(Object)); Inst35++; } } catch(e) {}
Object.prototype.toString();
try { if (Inst36 <= 1000 && typeof (saved) != "undefined") {_RecordType("<1029,1034,60>",(saved)); Inst36++; } } catch(e) {}
saved;
// |delete super.x| does not tell the prototype to delete anything, when it's a proxy.
try { if (Inst38 <= 1000 && typeof (go) != "undefined") {_RecordType("<1140,1142,63>",(go)); Inst38++; } } catch(e) {}
var thing2 = {
  go() {
try { if (Inst39 <= 1000 && typeof (super.prop) != "undefined") {_RecordType("<1158,1168,64>",(super.prop)); Inst39++; } } catch(e) {}
    delete super.prop;
  }

};
try { if (Inst37 <= 1000 && typeof (thing2) != "undefined") {_RecordType("<1127,1133,62>",(thing2)); Inst37++; } } catch(e) {}
try { if (Inst40 <= 1000 && typeof (Object.setPrototypeOf) != "undefined") {_RecordType("<1178,1199,68>",(Object.setPrototypeOf)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1178,1184,68>",(Object)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (thing2) != "undefined") {_RecordType("<1200,1206,68>",(thing2)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<1212,1217,68>",(Proxy)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (deleteProperty) != "undefined") {_RecordType("<1226,1240,69>",(deleteProperty)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (x) != "undefined") {_RecordType("<1241,1242,69>",(x)); Inst45++; } } catch(e) {}
Object.setPrototypeOf(thing2, new Proxy({}, {
  deleteProperty(x) {
    throw "FAIL";
  }

}));

try { if (Inst46 <= 1000 && typeof (thing2.go) != "undefined") {_RecordType("<1282,1291,75>",(thing2.go)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (thing2) != "undefined") {_RecordType("<1282,1288,75>",(thing2)); Inst47++; } } catch(e) {}
(() => thing2.go())();

try { if (Inst48 <= 1000 && typeof (ReferenceError) != "undefined") {_RecordType("<1299,1313,77>",(ReferenceError)); Inst48++; } } catch(e) {}
ReferenceError;

try { if (Inst58 <= 1000 && typeof (base) != "undefined") {_RecordType("<1352,1356,79>",(base)); Inst58++; } } catch(e) {}
class derivedTestDeleteProp extends base {
  constructor() {
    // The deletion error is a reference error, but by munging the prototype
    // chain, we can force a type error from JSOP_SUPERBASE.
try { if (Inst50 <= 1000 && typeof (Object.setPrototypeOf) != "undefined") {_RecordType("<1519,1540,83>",(Object.setPrototypeOf)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1519,1525,83>",(Object)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (derivedTestDeleteProp.prototype) != "undefined") {_RecordType("<1541,1572,83>",(derivedTestDeleteProp.prototype)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (derivedTestDeleteProp) != "undefined") {_RecordType("<1541,1562,83>",(derivedTestDeleteProp)); Inst53++; } } catch(e) {}
    Object.setPrototypeOf(derivedTestDeleteProp.prototype, null);

try { if (Inst54 <= 1000 && typeof (super.prop) != "undefined") {_RecordType("<1600,1610,85>",(super.prop)); Inst54++; } } catch(e) {}
    (() => delete super.prop)();

try { if (Inst55 <= 1000 && typeof (ReferenceError) != "undefined") {_RecordType("<1620,1634,87>",(ReferenceError)); Inst55++; } } catch(e) {}
    ReferenceError;
    super();

try { if (Inst56 <= 1000 && typeof (super.prop) != "undefined") {_RecordType("<1668,1678,90>",(super.prop)); Inst56++; } } catch(e) {}
    (() => delete super.prop)();

try { if (Inst57 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<1688,1697,92>",(TypeError)); Inst57++; } } catch(e) {}
    TypeError;
    return {};
  }

}
try { if (Inst49 <= 1000 && typeof (derivedTestDeleteProp) != "undefined") {_RecordType("<1322,1343,79>",(derivedTestDeleteProp)); Inst49++; } } catch(e) {}

try { if (Inst59 <= 1000 && typeof (derivedTestDeleteProp) != "undefined") {_RecordType("<1726,1747,98>",(derivedTestDeleteProp)); Inst59++; } } catch(e) {}
new derivedTestDeleteProp();

try { if (Inst60 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1763,1776,100>",(reportCompare)); Inst60++; } } catch(e) {}
if (typeof reportCompare === 'function') {
try { if (Inst61 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1797,1810,101>",(reportCompare)); Inst61++; } } catch(e) {}
  reportCompare(0, 0, "OK");
}

