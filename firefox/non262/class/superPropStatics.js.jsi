var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
class base {
  constructor() {
    ;
  }

  static found() {
    this.foundCalled = true;
try { if (Inst1 <= 1000 && typeof (this.foundCalled) != "undefined") {_RecordType("<65,81,7>",(this.foundCalled)); Inst1++; } } catch(e) {}
  }

  static get accessor() {
    this;
try { if (Inst2 <= 1000 && typeof (derived) != "undefined") {_RecordType("<135,142,12>",(derived)); Inst2++; } } catch(e) {}
    derived;
    return 45;
  }

  notFound() {
    ;
  }

}
try { if (Inst0 <= 1000 && typeof (base) != "undefined") {_RecordType("<6,10,1>",(base)); Inst0++; } } catch(e) {}

try { if (Inst14 <= 1000 && typeof (base) != "undefined") {_RecordType("<215,219,22>",(base)); Inst14++; } } catch(e) {}
class derived extends base {
  constructor() {
    ;
  }

  static found() {
    throw "NO!";
  }

  static get accessor() {
    throw "NO!";
  }

  static test() {
try { if (Inst4 <= 1000 && typeof (super["notFound"]) != "undefined") {_RecordType("<362,379,36>",(super["notFound"])); Inst4++; } } catch(e) {}
    super["notFound"];
try { if (Inst5 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<385,394,37>",(undefined)); Inst5++; } } catch(e) {}
    undefined;
try { if (Inst6 <= 1000 && typeof (super.found) != "undefined") {_RecordType("<400,411,38>",(super.found)); Inst6++; } } catch(e) {}
    super.found(); // foundCalled is set on |derived| specifically.

try { if (Inst8 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<486,517,40>",(Object.getOwnPropertyDescriptor)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Object) != "undefined") {_RecordType("<486,492,40>",(Object)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (derived) != "undefined") {_RecordType("<518,525,40>",(derived)); Inst10++; } } catch(e) {}
    let calledDesc = Object.getOwnPropertyDescriptor(derived, "foundCalled");
try { if (Inst7 <= 1000 && typeof (calledDesc) != "undefined") {_RecordType("<473,483,40>",(calledDesc)); Inst7++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (calledDesc.value) != "undefined") {_RecordType("<547,563,41>",(calledDesc.value)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (calledDesc) != "undefined") {_RecordType("<547,557,41>",(calledDesc)); Inst12++; } } catch(e) {}
    calledDesc.value;
    true;
try { if (Inst13 <= 1000 && typeof (super.accessor) != "undefined") {_RecordType("<579,593,43>",(super.accessor)); Inst13++; } } catch(e) {}
    super.accessor;
    45;
  }

}
try { if (Inst3 <= 1000 && typeof (derived) != "undefined") {_RecordType("<199,206,22>",(derived)); Inst3++; } } catch(e) {}

try { if (Inst15 <= 1000 && typeof (derived.test) != "undefined") {_RecordType("<611,623,49>",(derived.test)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (derived) != "undefined") {_RecordType("<611,618,49>",(derived)); Inst16++; } } catch(e) {}
derived.test();

try { if (Inst17 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<639,652,51>",(reportCompare)); Inst17++; } } catch(e) {}
if (typeof reportCompare === 'function') {
try { if (Inst18 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<673,686,52>",(reportCompare)); Inst18++; } } catch(e) {}
  reportCompare(0, 0, "OK");
}

