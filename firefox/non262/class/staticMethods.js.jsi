var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// basic static method test
class X {
  static count() {
try { if (Inst1 <= 1000 && typeof (this.hits) != "undefined") {_RecordType("<70,79,4>",(this.hits)); Inst1++; } } catch(e) {}
    return ++this.hits;
  }

  constructor() {
    ;
  }

}
try { if (Inst0 <= 1000 && typeof (X) != "undefined") {_RecordType("<34,35,2>",(X)); Inst0++; } } catch(e) {}

X.hits = 0;
try { if (Inst2 <= 1000 && typeof (X.hits) != "undefined") {_RecordType("<118,124,13>",(X.hits)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (X) != "undefined") {_RecordType("<118,119,13>",(X)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (X.count) != "undefined") {_RecordType("<130,137,14>",(X.count)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (X) != "undefined") {_RecordType("<130,131,14>",(X)); Inst5++; } } catch(e) {}
X.count();
1;
try { if (Inst6 <= 1000 && typeof (X.count) != "undefined") {_RecordType("<144,151,16>",(X.count)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (X) != "undefined") {_RecordType("<144,145,16>",(X)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Function) != "undefined") {_RecordType("<163,171,16>",(Function)); Inst8++; } } catch(e) {}
X.count instanceof Function;
true;
try { if (Inst9 <= 1000 && typeof (X.count.length) != "undefined") {_RecordType("<179,193,18>",(X.count.length)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (X.count) != "undefined") {_RecordType("<179,186,18>",(X.count)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (X) != "undefined") {_RecordType("<179,180,18>",(X)); Inst11++; } } catch(e) {}
X.count.length;
0;
try { if (Inst12 <= 1000 && typeof (X.count.bind) != "undefined") {_RecordType("<198,210,20>",(X.count.bind)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (X.count) != "undefined") {_RecordType("<198,205,20>",(X.count)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (X) != "undefined") {_RecordType("<198,199,20>",(X)); Inst14++; } } catch(e) {}
X.count.bind({
  hits: 77
})();
78;

try { if (Inst15 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<246,259,25>",(reportCompare)); Inst15++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst16 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<280,293,26>",(reportCompare)); Inst16++; } } catch(e) {}
  reportCompare(0, 0, "OK");
}

