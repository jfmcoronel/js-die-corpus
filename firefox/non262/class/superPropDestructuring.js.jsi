var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
class base {
  constructor() {
    ;
  }

}
try { if (Inst0 <= 1000 && typeof (base) != "undefined") {_RecordType("<6,10,1>",(base)); Inst0++; } } catch(e) {}

let seenValues;
try { if (Inst1 <= 1000 && typeof (seenValues) != "undefined") {_RecordType("<49,59,8>",(seenValues)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<61,82,9>",(Object.defineProperty)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Object) != "undefined") {_RecordType("<61,67,9>",(Object)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (base.prototype) != "undefined") {_RecordType("<83,97,9>",(base.prototype)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (base) != "undefined") {_RecordType("<83,87,9>",(base)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (set) != "undefined") {_RecordType("<114,117,10>",(set)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (x) != "undefined") {_RecordType("<118,119,10>",(x)); Inst7++; } } catch(e) {}
Object.defineProperty(base.prototype, "minutes", {
  set(x) {
try { if (Inst8 <= 1000 && typeof (x) != "undefined") {_RecordType("<127,128,11>",(x)); Inst8++; } } catch(e) {}
    x;
    525600;
try { if (Inst9 <= 1000 && typeof (seenValues.push) != "undefined") {_RecordType("<146,161,13>",(seenValues.push)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (seenValues) != "undefined") {_RecordType("<146,156,13>",(seenValues)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (x) != "undefined") {_RecordType("<162,163,13>",(x)); Inst11++; } } catch(e) {}
    seenValues.push(x);
  }

});
try { if (Inst12 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<175,196,17>",(Object.defineProperty)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Object) != "undefined") {_RecordType("<175,181,17>",(Object)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (base.prototype) != "undefined") {_RecordType("<197,211,17>",(base.prototype)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (base) != "undefined") {_RecordType("<197,201,17>",(base)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (set) != "undefined") {_RecordType("<230,233,18>",(set)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (x) != "undefined") {_RecordType("<234,235,18>",(x)); Inst17++; } } catch(e) {}
Object.defineProperty(base.prototype, "intendent", {
  set(x) {
try { if (Inst18 <= 1000 && typeof (x) != "undefined") {_RecordType("<243,244,19>",(x)); Inst18++; } } catch(e) {}
    x;
    "Fred";
try { if (Inst19 <= 1000 && typeof (seenValues.push) != "undefined") {_RecordType("<262,277,21>",(seenValues.push)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (seenValues) != "undefined") {_RecordType("<262,272,21>",(seenValues)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (x) != "undefined") {_RecordType("<278,279,21>",(x)); Inst21++; } } catch(e) {}
    seenValues.push(x);
  }

});
const testArr = [525600, "Fred"];
try { if (Inst22 <= 1000 && typeof (testArr) != "undefined") {_RecordType("<297,304,25>",(testArr)); Inst22++; } } catch(e) {}

try { if (Inst37 <= 1000 && typeof (base) != "undefined") {_RecordType("<348,352,27>",(base)); Inst37++; } } catch(e) {}
class derived extends base {
  constructor() {
    super();
  }

  prepForTest() {
    seenValues = [];
try { if (Inst24 <= 1000 && typeof (seenValues) != "undefined") {_RecordType("<413,423,33>",(seenValues)); Inst24++; } } catch(e) {}
  }

  testAsserts() {
try { if (Inst25 <= 1000 && typeof (seenValues) != "undefined") {_RecordType("<457,467,37>",(seenValues)); Inst25++; } } catch(e) {}
    seenValues;
try { if (Inst26 <= 1000 && typeof (testArr) != "undefined") {_RecordType("<473,480,38>",(testArr)); Inst26++; } } catch(e) {}
    testArr;
  }

  testProps() {
try { if (Inst27 <= 1000 && typeof (this.prepForTest) != "undefined") {_RecordType("<507,523,42>",(this.prepForTest)); Inst27++; } } catch(e) {}
    this.prepForTest();
try { if (Inst30 <= 1000 && typeof (testArr) != "undefined") {_RecordType("<566,573,43>",(testArr)); Inst30++; } } catch(e) {}
    [super.minutes, super.intendent] = testArr;
try { if (Inst28 <= 1000 && typeof (super.minutes) != "undefined") {_RecordType("<532,545,43>",(super.minutes)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (super.intendent) != "undefined") {_RecordType("<547,562,43>",(super.intendent)); Inst29++; } } catch(e) {}
try { if (Inst31 <= 1000 && typeof (this.testAsserts) != "undefined") {_RecordType("<579,595,44>",(this.testAsserts)); Inst31++; } } catch(e) {}
    this.testAsserts();
  }

  testElems() {
try { if (Inst32 <= 1000 && typeof (this.prepForTest) != "undefined") {_RecordType("<624,640,48>",(this.prepForTest)); Inst32++; } } catch(e) {}
    this.prepForTest();
try { if (Inst35 <= 1000 && typeof (testArr) != "undefined") {_RecordType("<689,696,49>",(testArr)); Inst35++; } } catch(e) {}
    [super["minutes"], super["intendent"]] = testArr;
try { if (Inst33 <= 1000 && typeof (super["minutes"]) != "undefined") {_RecordType("<649,665,49>",(super["minutes"])); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (super["intendent"]) != "undefined") {_RecordType("<667,685,49>",(super["intendent"])); Inst34++; } } catch(e) {}
try { if (Inst36 <= 1000 && typeof (this.testAsserts) != "undefined") {_RecordType("<702,718,50>",(this.testAsserts)); Inst36++; } } catch(e) {}
    this.testAsserts();
  }

}
try { if (Inst23 <= 1000 && typeof (derived) != "undefined") {_RecordType("<332,339,27>",(derived)); Inst23++; } } catch(e) {}

try { if (Inst39 <= 1000 && typeof (derived) != "undefined") {_RecordType("<742,749,55>",(derived)); Inst39++; } } catch(e) {}
let d = new derived();
try { if (Inst38 <= 1000 && typeof (d) != "undefined") {_RecordType("<734,735,55>",(d)); Inst38++; } } catch(e) {}
try { if (Inst40 <= 1000 && typeof (d.testProps) != "undefined") {_RecordType("<753,764,56>",(d.testProps)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (d) != "undefined") {_RecordType("<753,754,56>",(d)); Inst41++; } } catch(e) {}
d.testProps();
try { if (Inst42 <= 1000 && typeof (d.testElems) != "undefined") {_RecordType("<768,779,57>",(d.testElems)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (d) != "undefined") {_RecordType("<768,769,57>",(d)); Inst43++; } } catch(e) {}
d.testElems();

try { if (Inst44 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<795,808,59>",(reportCompare)); Inst44++; } } catch(e) {}
if (typeof reportCompare === 'function') {
try { if (Inst45 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<829,842,60>",(reportCompare)); Inst45++; } } catch(e) {}
  reportCompare(0, 0, "OK");
}

