var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
class Base {
  get test() {
    return "ok";
  }

}
try { if (Inst0 <= 1000 && typeof (Base) != "undefined") {_RecordType("<211,215,4>",(Base)); Inst0++; } } catch(e) {}

try { if (Inst5 <= 1000 && typeof (Base) != "undefined") {_RecordType("<290,294,11>",(Base)); Inst5++; } } catch(e) {}
class SuperThenProperty extends Base {
  constructor() {
try { if (Inst3 <= 1000 && typeof (super().test) != "undefined") {_RecordType("<332,344,13>",(super().test)); Inst3++; } } catch(e) {}
    var result = super().test;
try { if (Inst2 <= 1000 && typeof (result) != "undefined") {_RecordType("<323,329,13>",(result)); Inst2++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (result) != "undefined") {_RecordType("<365,371,15>",(result)); Inst4++; } } catch(e) {}
    return {
      result
    };
  }

}
try { if (Inst1 <= 1000 && typeof (SuperThenProperty) != "undefined") {_RecordType("<264,281,11>",(SuperThenProperty)); Inst1++; } } catch(e) {}

try { if (Inst6 <= 1000 && typeof (new SuperThenProperty().result) != "undefined") {_RecordType("<387,417,21>",(new SuperThenProperty().result)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (SuperThenProperty) != "undefined") {_RecordType("<391,408,21>",(SuperThenProperty)); Inst7++; } } catch(e) {}
new SuperThenProperty().result;
"ok";

try { if (Inst15 <= 1000 && typeof (Base) != "undefined") {_RecordType("<456,460,24>",(Base)); Inst15++; } } catch(e) {}
class SuperThenMember extends Base {
  constructor() {
try { if (Inst10 <= 1000 && typeof (super()["tes" + String.fromCodePoint("t".codePointAt(0))]) != "undefined") {_RecordType("<498,555,26>",(super()["tes" + String.fromCodePoint("t".codePointAt(0))])); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (String.fromCodePoint) != "undefined") {_RecordType("<514,534,26>",(String.fromCodePoint)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (String) != "undefined") {_RecordType("<514,520,26>",(String)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof ("t".codePointAt) != "undefined") {_RecordType("<535,550,26>",("t".codePointAt)); Inst13++; } } catch(e) {}
    var result = super()["tes" + String.fromCodePoint("t".codePointAt(0))];
try { if (Inst9 <= 1000 && typeof (result) != "undefined") {_RecordType("<489,495,26>",(result)); Inst9++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (result) != "undefined") {_RecordType("<576,582,28>",(result)); Inst14++; } } catch(e) {}
    return {
      result
    };
  }

}
try { if (Inst8 <= 1000 && typeof (SuperThenMember) != "undefined") {_RecordType("<432,447,24>",(SuperThenMember)); Inst8++; } } catch(e) {}

try { if (Inst16 <= 1000 && typeof (new SuperThenMember().result) != "undefined") {_RecordType("<598,626,34>",(new SuperThenMember().result)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (SuperThenMember) != "undefined") {_RecordType("<602,617,34>",(SuperThenMember)); Inst17++; } } catch(e) {}
new SuperThenMember().result;
"ok";

try { if (Inst21 <= 1000 && typeof (Function) != "undefined") {_RecordType("<663,671,37>",(Function)); Inst21++; } } catch(e) {}
class SuperThenCall extends Function {
  constructor() {
    var result = super("o, k", "return o + k;")("o", "k");
try { if (Inst19 <= 1000 && typeof (result) != "undefined") {_RecordType("<700,706,39>",(result)); Inst19++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (result) != "undefined") {_RecordType("<770,776,41>",(result)); Inst20++; } } catch(e) {}
    return {
      result
    };
  }

}
try { if (Inst18 <= 1000 && typeof (SuperThenCall) != "undefined") {_RecordType("<641,654,37>",(SuperThenCall)); Inst18++; } } catch(e) {}

try { if (Inst22 <= 1000 && typeof (new SuperThenCall().result) != "undefined") {_RecordType("<792,818,47>",(new SuperThenCall().result)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (SuperThenCall) != "undefined") {_RecordType("<796,809,47>",(SuperThenCall)); Inst23++; } } catch(e) {}
new SuperThenCall().result;
"ok";

try { if (Inst27 <= 1000 && typeof (Function) != "undefined") {_RecordType("<863,871,50>",(Function)); Inst27++; } } catch(e) {}
class SuperThenTemplateCall extends Function {
  constructor() {
    var result = super("cooked", "return cooked[0][0] + cooked.raw[0][1];")`ok`;
try { if (Inst25 <= 1000 && typeof (result) != "undefined") {_RecordType("<900,906,52>",(result)); Inst25++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (result) != "undefined") {_RecordType("<992,998,54>",(result)); Inst26++; } } catch(e) {}
    return {
      result
    };
  }

}
try { if (Inst24 <= 1000 && typeof (SuperThenTemplateCall) != "undefined") {_RecordType("<833,854,50>",(SuperThenTemplateCall)); Inst24++; } } catch(e) {}

try { if (Inst28 <= 1000 && typeof (new SuperThenTemplateCall().result) != "undefined") {_RecordType("<1014,1048,60>",(new SuperThenTemplateCall().result)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (SuperThenTemplateCall) != "undefined") {_RecordType("<1018,1039,60>",(SuperThenTemplateCall)); Inst29++; } } catch(e) {}
new SuperThenTemplateCall().result;
"ok";

try { if (Inst30 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1068,1081,63>",(reportCompare)); Inst30++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst31 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1102,1115,64>",(reportCompare)); Inst31++; } } catch(e) {}
  reportCompare(0, 0);
}

