var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
class base {
  constructor() {
    ;
  }

  method() {
try { if (Inst1 <= 1000 && typeof (this.methodCalled) != "undefined") {_RecordType("<59,76,7>",(this.methodCalled)); Inst1++; } } catch(e) {}
    this.methodCalled++;
  }

}
try { if (Inst0 <= 1000 && typeof (base) != "undefined") {_RecordType("<6,10,1>",(base)); Inst0++; } } catch(e) {}

try { if (Inst43 <= 1000 && typeof (base) != "undefined") {_RecordType("<110,114,12>",(base)); Inst43++; } } catch(e) {}
class derived extends base {
  constructor() {
    super();
    this.methodCalled = 0;
try { if (Inst3 <= 1000 && typeof (this.methodCalled) != "undefined") {_RecordType("<152,169,15>",(this.methodCalled)); Inst3++; } } catch(e) {}
  } // Test orderings of various evaluations relative to the superbase
  // Unlike in regular element evaluation, the propVal is evaluated before
  // checking the starting object ([[HomeObject]].[[Prototype]])


  testElem() {
try { if (Inst4 <= 1000 && typeof (super[ruin()]) != "undefined") {_RecordType("<407,420,22>",(super[ruin()])); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (ruin) != "undefined") {_RecordType("<413,417,22>",(ruin)); Inst5++; } } catch(e) {}
    super[ruin()];
  } // The starting object for looking up super.method is determined before
  // ruin() is called.


  testProp() {
try { if (Inst6 <= 1000 && typeof (super.method) != "undefined") {_RecordType("<542,554,28>",(super.method)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (ruin) != "undefined") {_RecordType("<555,559,28>",(ruin)); Inst7++; } } catch(e) {}
    super.method(ruin());
  } // The entire super.method property lookup has concluded before the args
  // are evaluated


  testPropCallDeleted() {
try { if (Inst8 <= 1000 && typeof (super.method) != "undefined") {_RecordType("<692,704,34>",(super.method)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (base.prototype.method) != "undefined") {_RecordType("<718,739,34>",(base.prototype.method)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (base.prototype) != "undefined") {_RecordType("<718,732,34>",(base.prototype)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (base) != "undefined") {_RecordType("<718,722,34>",(base)); Inst11++; } } catch(e) {}
    super.method(() => delete base.prototype.method);
  } // The starting object for looking up super["prop"] is determined before
  // ruin() is called.


  testElemAssign() {
try { if (Inst13 <= 1000 && typeof (ruin) != "undefined") {_RecordType("<885,889,40>",(ruin)); Inst13++; } } catch(e) {}
    super["prop"] = ruin();
try { if (Inst12 <= 1000 && typeof (super["prop"]) != "undefined") {_RecordType("<869,882,40>",(super["prop"])); Inst12++; } } catch(e) {}
  } // Test the normal assignment gotchas


  testAssignElemPropValChange() {
    let x = "prop1";
try { if (Inst14 <= 1000 && typeof (x) != "undefined") {_RecordType("<979,980,45>",(x)); Inst14++; } } catch(e) {}

    super[x] = (() => (x = "prop2", 0))();
try { if (Inst15 <= 1000 && typeof (super[x]) != "undefined") {_RecordType("<997,1005,47>",(super[x])); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (x) != "undefined") {_RecordType("<1016,1017,47>",(x)); Inst16++; } } catch(e) {}

try { if (Inst17 <= 1000 && typeof (this.prop1) != "undefined") {_RecordType("<1041,1051,49>",(this.prop1)); Inst17++; } } catch(e) {}
    this.prop1;
    0;
try { if (Inst18 <= 1000 && typeof (this.prop2) != "undefined") {_RecordType("<1064,1074,51>",(this.prop2)); Inst18++; } } catch(e) {}
    this.prop2;
try { if (Inst19 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<1080,1089,52>",(undefined)); Inst19++; } } catch(e) {}
    undefined;
  }

  testAssignProp() {
try { if (Inst20 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<1121,1142,56>",(Object.defineProperty)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1121,1127,56>",(Object)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (base.prototype) != "undefined") {_RecordType("<1143,1157,56>",(base.prototype)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (base) != "undefined") {_RecordType("<1143,1147,56>",(base)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (set) != "undefined") {_RecordType("<1203,1206,59>",(set)); Inst24++; } } catch(e) {}
    Object.defineProperty(base.prototype, "piggy", {
      configurable: true,

      set() {
        throw "WEE WEE WEE WEE";
      }

    }); // The property lookup is noted, but not actually evaluated, until the
    // right hand side is. Please don't make the piggy cry.

try { if (Inst26 <= 1000 && typeof (base.prototype.piggy) != "undefined") {_RecordType("<1425,1445,66>",(base.prototype.piggy)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (base.prototype) != "undefined") {_RecordType("<1425,1439,66>",(base.prototype)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (base) != "undefined") {_RecordType("<1425,1429,66>",(base)); Inst28++; } } catch(e) {}
    super.piggy = (() => delete base.prototype.piggy)();
try { if (Inst25 <= 1000 && typeof (super.piggy) != "undefined") {_RecordType("<1397,1408,66>",(super.piggy)); Inst25++; } } catch(e) {}
  }

  testCompoundAssignProp() {
    let getterCalled = false;
try { if (Inst29 <= 1000 && typeof (getterCalled) != "undefined") {_RecordType("<1492,1504,70>",(getterCalled)); Inst29++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<1518,1539,71>",(Object.defineProperty)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1518,1524,71>",(Object)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (base.prototype) != "undefined") {_RecordType("<1540,1554,71>",(base.prototype)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (base) != "undefined") {_RecordType("<1540,1544,71>",(base)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (get) != "undefined") {_RecordType("<1600,1603,74>",(get)); Inst34++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (set) != "undefined") {_RecordType("<1681,1684,79>",(set)); Inst36++; } } catch(e) {}
    Object.defineProperty(base.prototype, "horse", {
      configurable: true,

      get() {
        getterCalled = true;
try { if (Inst35 <= 1000 && typeof (getterCalled) != "undefined") {_RecordType("<1616,1628,75>",(getterCalled)); Inst35++; } } catch(e) {}
        return "Of course";
      },

      set() {
        throw "NO!";
      }

    });

try { if (Inst38 <= 1000 && typeof (base.prototype.horse) != "undefined") {_RecordType("<1762,1782,85>",(base.prototype.horse)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (base.prototype) != "undefined") {_RecordType("<1762,1776,85>",(base.prototype)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (base) != "undefined") {_RecordType("<1762,1766,85>",(base)); Inst40++; } } catch(e) {}
    super.horse += (() => (delete base.prototype.horse, ", of course!"))();
try { if (Inst37 <= 1000 && typeof (super.horse) != "undefined") {_RecordType("<1732,1743,85>",(super.horse)); Inst37++; } } catch(e) {}

try { if (Inst41 <= 1000 && typeof (getterCalled) != "undefined") {_RecordType("<1809,1821,87>",(getterCalled)); Inst41++; } } catch(e) {}
    getterCalled;
    true;
try { if (Inst42 <= 1000 && typeof (this.horse) != "undefined") {_RecordType("<1837,1847,89>",(this.horse)); Inst42++; } } catch(e) {}
    this.horse;
    "Of course, of course!";
  }

}
try { if (Inst2 <= 1000 && typeof (derived) != "undefined") {_RecordType("<94,101,12>",(derived)); Inst2++; } } catch(e) {}

try { if (Inst44 <= 1000 && typeof (ruin) != "undefined") {_RecordType("<1895,1899,95>",(ruin)); Inst44++; } } catch(e) {}
function ruin() {
try { if (Inst45 <= 1000 && typeof (Object.setPrototypeOf) != "undefined") {_RecordType("<1906,1927,96>",(Object.setPrototypeOf)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1906,1912,96>",(Object)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (derived.prototype) != "undefined") {_RecordType("<1928,1945,96>",(derived.prototype)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (derived) != "undefined") {_RecordType("<1928,1935,96>",(derived)); Inst48++; } } catch(e) {}
  Object.setPrototypeOf(derived.prototype, null);
  return 5;
}

try { if (Inst49 <= 1000 && typeof (reset) != "undefined") {_RecordType("<1978,1983,100>",(reset)); Inst49++; } } catch(e) {}
function reset() {
try { if (Inst50 <= 1000 && typeof (Object.setPrototypeOf) != "undefined") {_RecordType("<1990,2011,101>",(Object.setPrototypeOf)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1990,1996,101>",(Object)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (derived.prototype) != "undefined") {_RecordType("<2012,2029,101>",(derived.prototype)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (derived) != "undefined") {_RecordType("<2012,2019,101>",(derived)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (base.prototype) != "undefined") {_RecordType("<2031,2045,101>",(base.prototype)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (base) != "undefined") {_RecordType("<2031,2035,101>",(base)); Inst55++; } } catch(e) {}
  Object.setPrototypeOf(derived.prototype, base.prototype);
}

try { if (Inst57 <= 1000 && typeof (derived) != "undefined") {_RecordType("<2070,2077,104>",(derived)); Inst57++; } } catch(e) {}
let instance = new derived();
try { if (Inst56 <= 1000 && typeof (instance) != "undefined") {_RecordType("<2055,2063,104>",(instance)); Inst56++; } } catch(e) {}

try { if (Inst58 <= 1000 && typeof (instance.testElem) != "undefined") {_RecordType("<2089,2106,106>",(instance.testElem)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (instance) != "undefined") {_RecordType("<2089,2097,106>",(instance)); Inst59++; } } catch(e) {}
(() => instance.testElem())();

try { if (Inst60 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<2114,2123,108>",(TypeError)); Inst60++; } } catch(e) {}
TypeError;
try { if (Inst61 <= 1000 && typeof (reset) != "undefined") {_RecordType("<2125,2130,109>",(reset)); Inst61++; } } catch(e) {}
reset();
try { if (Inst62 <= 1000 && typeof (instance.testProp) != "undefined") {_RecordType("<2134,2151,110>",(instance.testProp)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (instance) != "undefined") {_RecordType("<2134,2142,110>",(instance)); Inst63++; } } catch(e) {}
instance.testProp();
try { if (Inst64 <= 1000 && typeof (instance.methodCalled) != "undefined") {_RecordType("<2155,2176,111>",(instance.methodCalled)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (instance) != "undefined") {_RecordType("<2155,2163,111>",(instance)); Inst65++; } } catch(e) {}
instance.methodCalled;
1;
try { if (Inst66 <= 1000 && typeof (reset) != "undefined") {_RecordType("<2181,2186,113>",(reset)); Inst66++; } } catch(e) {}
reset();
try { if (Inst67 <= 1000 && typeof (instance.testPropCallDeleted) != "undefined") {_RecordType("<2190,2218,114>",(instance.testPropCallDeleted)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (instance) != "undefined") {_RecordType("<2190,2198,114>",(instance)); Inst68++; } } catch(e) {}
instance.testPropCallDeleted();
try { if (Inst69 <= 1000 && typeof (instance.methodCalled) != "undefined") {_RecordType("<2222,2243,115>",(instance.methodCalled)); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (instance) != "undefined") {_RecordType("<2222,2230,115>",(instance)); Inst70++; } } catch(e) {}
instance.methodCalled;
2;
try { if (Inst71 <= 1000 && typeof (instance.testElemAssign) != "undefined") {_RecordType("<2248,2271,117>",(instance.testElemAssign)); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (instance) != "undefined") {_RecordType("<2248,2256,117>",(instance)); Inst72++; } } catch(e) {}
instance.testElemAssign();
try { if (Inst73 <= 1000 && typeof (instance.prop) != "undefined") {_RecordType("<2275,2288,118>",(instance.prop)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (instance) != "undefined") {_RecordType("<2275,2283,118>",(instance)); Inst74++; } } catch(e) {}
instance.prop;
5;
try { if (Inst75 <= 1000 && typeof (reset) != "undefined") {_RecordType("<2293,2298,120>",(reset)); Inst75++; } } catch(e) {}
reset();
try { if (Inst76 <= 1000 && typeof (instance.testAssignElemPropValChange) != "undefined") {_RecordType("<2302,2338,121>",(instance.testAssignElemPropValChange)); Inst76++; } } catch(e) {}try { if (Inst77 <= 1000 && typeof (instance) != "undefined") {_RecordType("<2302,2310,121>",(instance)); Inst77++; } } catch(e) {}
instance.testAssignElemPropValChange();
try { if (Inst78 <= 1000 && typeof (instance.testAssignProp) != "undefined") {_RecordType("<2342,2365,122>",(instance.testAssignProp)); Inst78++; } } catch(e) {}try { if (Inst79 <= 1000 && typeof (instance) != "undefined") {_RecordType("<2342,2350,122>",(instance)); Inst79++; } } catch(e) {}
instance.testAssignProp();
try { if (Inst80 <= 1000 && typeof (instance.testCompoundAssignProp) != "undefined") {_RecordType("<2369,2400,123>",(instance.testCompoundAssignProp)); Inst80++; } } catch(e) {}try { if (Inst81 <= 1000 && typeof (instance) != "undefined") {_RecordType("<2369,2377,123>",(instance)); Inst81++; } } catch(e) {}
instance.testCompoundAssignProp();

try { if (Inst82 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<2416,2429,125>",(reportCompare)); Inst82++; } } catch(e) {}
if (typeof reportCompare === 'function') {
try { if (Inst83 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<2450,2463,126>",(reportCompare)); Inst83++; } } catch(e) {}
  reportCompare(0, 0, "OK");
}

