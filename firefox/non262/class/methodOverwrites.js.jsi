var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Ensure that we can overwrite methods when more tha one is present.
{
  var result = 0; // Regardless of order, the constructor is overridden by any CPN, because it's
try { if (Inst0 <= 1000 && typeof (result) != "undefined") {_RecordType("<78,84,3>",(result)); Inst0++; } } catch(e) {}
  // processed seperately.

  class a {
    ["constructor"]() {
      result += 1;
try { if (Inst2 <= 1000 && typeof (result) != "undefined") {_RecordType("<239,245,8>",(result)); Inst2++; } } catch(e) {}
    }

    constructor() {
      result += 2;
try { if (Inst3 <= 1000 && typeof (result) != "undefined") {_RecordType("<285,291,12>",(result)); Inst3++; } } catch(e) {}
    }

  }
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<205,206,6>",(a)); Inst1++; } } catch(e) {}

try { if (Inst5 <= 1000 && typeof (a) != "undefined") {_RecordType("<328,329,17>",(a)); Inst5++; } } catch(e) {}
  var aInst = new a();
try { if (Inst4 <= 1000 && typeof (aInst) != "undefined") {_RecordType("<316,321,17>",(aInst)); Inst4++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (result) != "undefined") {_RecordType("<335,341,18>",(result)); Inst6++; } } catch(e) {}
  result;
  2;
try { if (Inst7 <= 1000 && typeof (aInst.constructor) != "undefined") {_RecordType("<350,367,20>",(aInst.constructor)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (aInst) != "undefined") {_RecordType("<350,355,20>",(aInst)); Inst8++; } } catch(e) {}
  aInst.constructor();
try { if (Inst9 <= 1000 && typeof (result) != "undefined") {_RecordType("<373,379,21>",(result)); Inst9++; } } catch(e) {}
  result;
  3;

  class b {
    constructor() {
      result += 2;
try { if (Inst11 <= 1000 && typeof (result) != "undefined") {_RecordType("<425,431,26>",(result)); Inst11++; } } catch(e) {}
    }

    ["constructor"]() {
      result += 1;
try { if (Inst12 <= 1000 && typeof (result) != "undefined") {_RecordType("<475,481,30>",(result)); Inst12++; } } catch(e) {}
    }

  }
try { if (Inst10 <= 1000 && typeof (b) != "undefined") {_RecordType("<395,396,24>",(b)); Inst10++; } } catch(e) {}

try { if (Inst14 <= 1000 && typeof (b) != "undefined") {_RecordType("<518,519,35>",(b)); Inst14++; } } catch(e) {}
  var bInst = new b();
try { if (Inst13 <= 1000 && typeof (bInst) != "undefined") {_RecordType("<506,511,35>",(bInst)); Inst13++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (result) != "undefined") {_RecordType("<525,531,36>",(result)); Inst15++; } } catch(e) {}
  result;
  5;
try { if (Inst16 <= 1000 && typeof (bInst.constructor) != "undefined") {_RecordType("<540,557,38>",(bInst.constructor)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (bInst) != "undefined") {_RecordType("<540,545,38>",(bInst)); Inst17++; } } catch(e) {}
  bInst.constructor();
try { if (Inst18 <= 1000 && typeof (result) != "undefined") {_RecordType("<563,569,39>",(result)); Inst18++; } } catch(e) {}
  result;
  6;

  class c {
    constructor() {
      ;
    }

    method() {
      result += 1;
try { if (Inst20 <= 1000 && typeof (result) != "undefined") {_RecordType("<645,651,48>",(result)); Inst20++; } } catch(e) {}
    }

    get method() {
      result += 2;
try { if (Inst21 <= 1000 && typeof (result) != "undefined") {_RecordType("<690,696,52>",(result)); Inst21++; } } catch(e) {}
    }

  }
try { if (Inst19 <= 1000 && typeof (c) != "undefined") {_RecordType("<585,586,42>",(c)); Inst19++; } } catch(e) {}

try { if (Inst22 <= 1000 && typeof (new c().method) != "undefined") {_RecordType("<717,731,57>",(new c().method)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (c) != "undefined") {_RecordType("<721,722,57>",(c)); Inst23++; } } catch(e) {}
  new c().method;
try { if (Inst24 <= 1000 && typeof (result) != "undefined") {_RecordType("<735,741,58>",(result)); Inst24++; } } catch(e) {}
  result;
  8;

  class d {
    constructor() {
      ;
    }

    get method() {
      result += 1;
try { if (Inst26 <= 1000 && typeof (result) != "undefined") {_RecordType("<821,827,67>",(result)); Inst26++; } } catch(e) {}
    }

    method() {
      result += 2;
try { if (Inst27 <= 1000 && typeof (result) != "undefined") {_RecordType("<862,868,71>",(result)); Inst27++; } } catch(e) {}
    }

  }
try { if (Inst25 <= 1000 && typeof (d) != "undefined") {_RecordType("<757,758,61>",(d)); Inst25++; } } catch(e) {}

try { if (Inst28 <= 1000 && typeof (new d().method) != "undefined") {_RecordType("<889,903,76>",(new d().method)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (d) != "undefined") {_RecordType("<893,894,76>",(d)); Inst29++; } } catch(e) {}
  new d().method();
try { if (Inst30 <= 1000 && typeof (result) != "undefined") {_RecordType("<909,915,77>",(result)); Inst30++; } } catch(e) {}
  result;
  10;

  // getters and setter should not overwrite each other, but merge cleanly.
  class e {
    constructor() {
      ;
    }

    get method() {
      result += 1;
try { if (Inst32 <= 1000 && typeof (result) != "undefined") {_RecordType("<1072,1078,87>",(result)); Inst32++; } } catch(e) {}
    }

    set method(x) {
try { if (Inst33 <= 1000 && typeof (x) != "undefined") {_RecordType("<1107,1108,90>",(x)); Inst33++; } } catch(e) {}
      ;
    }

  }
try { if (Inst31 <= 1000 && typeof (e) != "undefined") {_RecordType("<1008,1009,81>",(e)); Inst31++; } } catch(e) {}

try { if (Inst34 <= 1000 && typeof (new e().method) != "undefined") {_RecordType("<1134,1148,96>",(new e().method)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (e) != "undefined") {_RecordType("<1138,1139,96>",(e)); Inst35++; } } catch(e) {}
  new e().method;
try { if (Inst36 <= 1000 && typeof (result) != "undefined") {_RecordType("<1152,1158,97>",(result)); Inst36++; } } catch(e) {}
  result;
  11;

  class f {
    constructor() {
      ;
    }

    set method(x) {
try { if (Inst38 <= 1000 && typeof (x) != "undefined") {_RecordType("<1229,1230,105>",(x)); Inst38++; } } catch(e) {}
      throw "NO";
    }

    method() {
      throw "NO";
    }

    get method() {
try { if (Inst39 <= 1000 && typeof (Function) != "undefined") {_RecordType("<1335,1343,114>",(Function)); Inst39++; } } catch(e) {}
      return new Function("result += 1");
    }

  }
try { if (Inst37 <= 1000 && typeof (f) != "undefined") {_RecordType("<1175,1176,100>",(f)); Inst37++; } } catch(e) {}

try { if (Inst40 <= 1000 && typeof (new f().method) != "undefined") {_RecordType("<1374,1388,119>",(new f().method)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (f) != "undefined") {_RecordType("<1378,1379,119>",(f)); Inst41++; } } catch(e) {}
  new f().method();
try { if (Inst42 <= 1000 && typeof (result) != "undefined") {_RecordType("<1394,1400,120>",(result)); Inst42++; } } catch(e) {}
  result;
  12;
} // Try again with expressions.

{
  var result = 0; // Regardless of order, the constructor is overridden by any CPN, because it's
try { if (Inst43 <= 1000 && typeof (result) != "undefined") {_RecordType("<1450,1456,125>",(result)); Inst43++; } } catch(e) {}
  // processed seperately.

  let a = class {
    ["constructor"]() {
      result += 1;
try { if (Inst45 <= 1000 && typeof (result) != "undefined") {_RecordType("<1617,1623,130>",(result)); Inst45++; } } catch(e) {}
    }

    constructor() {
      result += 2;
try { if (Inst46 <= 1000 && typeof (result) != "undefined") {_RecordType("<1663,1669,134>",(result)); Inst46++; } } catch(e) {}
    }

  };
try { if (Inst44 <= 1000 && typeof (a) != "undefined") {_RecordType("<1575,1576,128>",(a)); Inst44++; } } catch(e) {}
try { if (Inst48 <= 1000 && typeof (a) != "undefined") {_RecordType("<1706,1707,138>",(a)); Inst48++; } } catch(e) {}
  var aInst = new a();
try { if (Inst47 <= 1000 && typeof (aInst) != "undefined") {_RecordType("<1694,1699,138>",(aInst)); Inst47++; } } catch(e) {}
try { if (Inst49 <= 1000 && typeof (result) != "undefined") {_RecordType("<1713,1719,139>",(result)); Inst49++; } } catch(e) {}
  result;
  2;
try { if (Inst50 <= 1000 && typeof (aInst.constructor) != "undefined") {_RecordType("<1728,1745,141>",(aInst.constructor)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (aInst) != "undefined") {_RecordType("<1728,1733,141>",(aInst)); Inst51++; } } catch(e) {}
  aInst.constructor();
try { if (Inst52 <= 1000 && typeof (result) != "undefined") {_RecordType("<1751,1757,142>",(result)); Inst52++; } } catch(e) {}
  result;
  3;
  let b = class {
    constructor() {
      result += 2;
try { if (Inst54 <= 1000 && typeof (result) != "undefined") {_RecordType("<1808,1814,146>",(result)); Inst54++; } } catch(e) {}
    }

    ["constructor"]() {
      result += 1;
try { if (Inst55 <= 1000 && typeof (result) != "undefined") {_RecordType("<1858,1864,150>",(result)); Inst55++; } } catch(e) {}
    }

  };
try { if (Inst53 <= 1000 && typeof (b) != "undefined") {_RecordType("<1770,1771,144>",(b)); Inst53++; } } catch(e) {}
try { if (Inst57 <= 1000 && typeof (b) != "undefined") {_RecordType("<1901,1902,154>",(b)); Inst57++; } } catch(e) {}
  var bInst = new b();
try { if (Inst56 <= 1000 && typeof (bInst) != "undefined") {_RecordType("<1889,1894,154>",(bInst)); Inst56++; } } catch(e) {}
try { if (Inst58 <= 1000 && typeof (result) != "undefined") {_RecordType("<1908,1914,155>",(result)); Inst58++; } } catch(e) {}
  result;
  5;
try { if (Inst59 <= 1000 && typeof (bInst.constructor) != "undefined") {_RecordType("<1923,1940,157>",(bInst.constructor)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (bInst) != "undefined") {_RecordType("<1923,1928,157>",(bInst)); Inst60++; } } catch(e) {}
  bInst.constructor();
try { if (Inst61 <= 1000 && typeof (result) != "undefined") {_RecordType("<1946,1952,158>",(result)); Inst61++; } } catch(e) {}
  result;
  6;
  let c = class {
    constructor() {
      ;
    }

    method() {
      result += 1;
try { if (Inst63 <= 1000 && typeof (result) != "undefined") {_RecordType("<2033,2039,166>",(result)); Inst63++; } } catch(e) {}
    }

    get method() {
      result += 2;
try { if (Inst64 <= 1000 && typeof (result) != "undefined") {_RecordType("<2078,2084,170>",(result)); Inst64++; } } catch(e) {}
    }

  };
try { if (Inst62 <= 1000 && typeof (c) != "undefined") {_RecordType("<1965,1966,160>",(c)); Inst62++; } } catch(e) {}
try { if (Inst65 <= 1000 && typeof (new c().method) != "undefined") {_RecordType("<2105,2119,174>",(new c().method)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (c) != "undefined") {_RecordType("<2109,2110,174>",(c)); Inst66++; } } catch(e) {}
  new c().method;
try { if (Inst67 <= 1000 && typeof (result) != "undefined") {_RecordType("<2123,2129,175>",(result)); Inst67++; } } catch(e) {}
  result;
  8;
  let d = class {
    constructor() {
      ;
    }

    get method() {
      result += 1;
try { if (Inst69 <= 1000 && typeof (result) != "undefined") {_RecordType("<2214,2220,183>",(result)); Inst69++; } } catch(e) {}
    }

    method() {
      result += 2;
try { if (Inst70 <= 1000 && typeof (result) != "undefined") {_RecordType("<2255,2261,187>",(result)); Inst70++; } } catch(e) {}
    }

  };
try { if (Inst68 <= 1000 && typeof (d) != "undefined") {_RecordType("<2142,2143,177>",(d)); Inst68++; } } catch(e) {}
try { if (Inst71 <= 1000 && typeof (new d().method) != "undefined") {_RecordType("<2282,2296,191>",(new d().method)); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (d) != "undefined") {_RecordType("<2286,2287,191>",(d)); Inst72++; } } catch(e) {}
  new d().method();
try { if (Inst73 <= 1000 && typeof (result) != "undefined") {_RecordType("<2302,2308,192>",(result)); Inst73++; } } catch(e) {}
  result;
  10;
  // getters and setter should not overwrite each other, but merge cleanly.
  let e = class {
    constructor() {
      ;
    }

    get method() {
      result += 1;
try { if (Inst75 <= 1000 && typeof (result) != "undefined") {_RecordType("<2470,2476,201>",(result)); Inst75++; } } catch(e) {}
    }

    set method(x) {
try { if (Inst76 <= 1000 && typeof (x) != "undefined") {_RecordType("<2505,2506,204>",(x)); Inst76++; } } catch(e) {}
      ;
    }

  };
try { if (Inst74 <= 1000 && typeof (e) != "undefined") {_RecordType("<2398,2399,195>",(e)); Inst74++; } } catch(e) {}
try { if (Inst77 <= 1000 && typeof (new e().method) != "undefined") {_RecordType("<2532,2546,209>",(new e().method)); Inst77++; } } catch(e) {}try { if (Inst78 <= 1000 && typeof (e) != "undefined") {_RecordType("<2536,2537,209>",(e)); Inst78++; } } catch(e) {}
  new e().method;
try { if (Inst79 <= 1000 && typeof (result) != "undefined") {_RecordType("<2550,2556,210>",(result)); Inst79++; } } catch(e) {}
  result;
  11;
  let f = class {
    constructor() {
      ;
    }

    set method(x) {
try { if (Inst81 <= 1000 && typeof (x) != "undefined") {_RecordType("<2632,2633,217>",(x)); Inst81++; } } catch(e) {}
      throw "NO";
    }

    method() {
      throw "NO";
    }

    get method() {
try { if (Inst82 <= 1000 && typeof (Function) != "undefined") {_RecordType("<2738,2746,226>",(Function)); Inst82++; } } catch(e) {}
      return new Function("result += 1");
    }

  };
try { if (Inst80 <= 1000 && typeof (f) != "undefined") {_RecordType("<2570,2571,212>",(f)); Inst80++; } } catch(e) {}
try { if (Inst83 <= 1000 && typeof (new f().method) != "undefined") {_RecordType("<2777,2791,230>",(new f().method)); Inst83++; } } catch(e) {}try { if (Inst84 <= 1000 && typeof (f) != "undefined") {_RecordType("<2781,2782,230>",(f)); Inst84++; } } catch(e) {}
  new f().method();
try { if (Inst85 <= 1000 && typeof (result) != "undefined") {_RecordType("<2797,2803,231>",(result)); Inst85++; } } catch(e) {}
  result;
  12;
}

try { if (Inst86 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<2825,2838,235>",(reportCompare)); Inst86++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst87 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<2859,2872,236>",(reportCompare)); Inst87++; } } catch(e) {}
  reportCompare(0, 0, "OK");
}

