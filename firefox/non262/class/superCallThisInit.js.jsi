var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (base) != "undefined") {_RecordType("<9,13,1>",(base)); Inst0++; } } catch(e) {}
function base() {
  this.prop = 42;
try { if (Inst1 <= 1000 && typeof (this.prop) != "undefined") {_RecordType("<20,29,2>",(this.prop)); Inst1++; } } catch(e) {}
}

try { if (Inst9 <= 1000 && typeof (base) != "undefined") {_RecordType("<68,72,5>",(base)); Inst9++; } } catch(e) {}
class testInitialize extends base {
  constructor() {
    // A poor man's assertThrowsInstanceOf, as arrow functions are currently
    // disabled in this context
try { if (Inst4 <= 1000 && typeof (e) != "undefined") {_RecordType("<262,263,12>",(e)); Inst4++; } } catch(e) {}
    try {
      this;
try { if (Inst3 <= 1000 && typeof (Error) != "undefined") {_RecordType("<240,245,11>",(Error)); Inst3++; } } catch(e) {}
      throw new Error();
    } catch (e) {
try { if (Inst5 <= 1000 && typeof (e) != "undefined") {_RecordType("<279,280,13>",(e)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (ReferenceError) != "undefined") {_RecordType("<292,306,13>",(ReferenceError)); Inst6++; } } catch(e) {}
      if (!(e instanceof ReferenceError)) {
try { if (Inst7 <= 1000 && typeof (e) != "undefined") {_RecordType("<325,326,14>",(e)); Inst7++; } } catch(e) {}
        throw e;
      }
    }

    super();
try { if (Inst8 <= 1000 && typeof (this.prop) != "undefined") {_RecordType("<360,369,19>",(this.prop)); Inst8++; } } catch(e) {}
    this.prop;
    42;
  }

}
try { if (Inst2 <= 1000 && typeof (testInitialize) != "undefined") {_RecordType("<45,59,5>",(testInitialize)); Inst2++; } } catch(e) {}

try { if (Inst10 <= 1000 && typeof (new testInitialize().prop) != "undefined") {_RecordType("<387,412,25>",(new testInitialize().prop)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (testInitialize) != "undefined") {_RecordType("<391,405,25>",(testInitialize)); Inst11++; } } catch(e) {}
new testInitialize().prop;
42;

// super() twice is a no-go.
try { if (Inst13 <= 1000 && typeof (base) != "undefined") {_RecordType("<472,476,29>",(base)); Inst13++; } } catch(e) {}
class willThrow extends base {
  constructor() {
    super();
    super();
  }

}
try { if (Inst12 <= 1000 && typeof (willThrow) != "undefined") {_RecordType("<454,463,29>",(willThrow)); Inst12++; } } catch(e) {}

try { if (Inst14 <= 1000 && typeof (willThrow) != "undefined") {_RecordType("<542,551,37>",(willThrow)); Inst14++; } } catch(e) {}
(() => new willThrow())();

try { if (Inst15 <= 1000 && typeof (ReferenceError) != "undefined") {_RecordType("<559,573,39>",(ReferenceError)); Inst15++; } } catch(e) {}
ReferenceError;

// This is determined at runtime, not the syntax level.
try { if (Inst20 <= 1000 && typeof (base) != "undefined") {_RecordType("<661,665,42>",(base)); Inst20++; } } catch(e) {}
class willStillThrow extends base {
  constructor() {
    for (let i = 0; i < 3; i++) {
try { if (Inst17 <= 1000 && typeof (i) != "undefined") {_RecordType("<699,700,44>",(i)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (i) != "undefined") {_RecordType("<706,707,44>",(i)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (i) != "undefined") {_RecordType("<713,714,44>",(i)); Inst19++; } } catch(e) {}
      super();
    }
  }

}
try { if (Inst16 <= 1000 && typeof (willStillThrow) != "undefined") {_RecordType("<638,652,42>",(willStillThrow)); Inst16++; } } catch(e) {}

try { if (Inst21 <= 1000 && typeof (willStillThrow) != "undefined") {_RecordType("<760,774,51>",(willStillThrow)); Inst21++; } } catch(e) {}
(() => new willStillThrow())();

try { if (Inst22 <= 1000 && typeof (ReferenceError) != "undefined") {_RecordType("<782,796,53>",(ReferenceError)); Inst22++; } } catch(e) {}
ReferenceError;

try { if (Inst25 <= 1000 && typeof (base) != "undefined") {_RecordType("<827,831,55>",(base)); Inst25++; } } catch(e) {}
class canCatchThrow extends base {
  constructor() {
    super();

try { if (Inst24 <= 1000 && typeof (e) != "undefined") {_RecordType("<904,905,61>",(e)); Inst24++; } } catch(e) {}
    try {
      super();
    } catch (e) {
      ;
    }
  }

}
try { if (Inst23 <= 1000 && typeof (canCatchThrow) != "undefined") {_RecordType("<805,818,55>",(canCatchThrow)); Inst23++; } } catch(e) {}

try { if (Inst26 <= 1000 && typeof (new canCatchThrow().prop) != "undefined") {_RecordType("<931,955,68>",(new canCatchThrow().prop)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (canCatchThrow) != "undefined") {_RecordType("<935,948,68>",(canCatchThrow)); Inst27++; } } catch(e) {}
new canCatchThrow().prop;
42;

try { if (Inst28 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<973,986,71>",(reportCompare)); Inst28++; } } catch(e) {}
if (typeof reportCompare === 'function') {
try { if (Inst29 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1007,1020,72>",(reportCompare)); Inst29++; } } catch(e) {}
  reportCompare(0, 0, "OK");
}

