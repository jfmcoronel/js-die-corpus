var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
class TestClass {
  constructor() {
    ;
  }

  method() {
    ;
  }

  get getter() {
    ;
  }

  set setter(x) {
try { if (Inst1 <= 1000 && typeof (x) != "undefined") {_RecordType("<112,113,14>",(x)); Inst1++; } } catch(e) {}
    ;
  }

  *generator() {
    ;
  }

  static staticMethod() {
    ;
  }

  static get staticGetter() {
    ;
  }

  static set staticSetter(x) {
try { if (Inst2 <= 1000 && typeof (x) != "undefined") {_RecordType("<260,261,30>",(x)); Inst2++; } } catch(e) {}
    ;
  }

  static *staticGenerator() {
    ;
  }

}
try { if (Inst0 <= 1000 && typeof (TestClass) != "undefined") {_RecordType("<6,15,1>",(TestClass)); Inst0++; } } catch(e) {}

try { if (Inst4 <= 1000 && typeof (TestClass) != "undefined") {_RecordType("<335,344,40>",(TestClass)); Inst4++; } } catch(e) {}
var test = new TestClass();
try { if (Inst3 <= 1000 && typeof (test) != "undefined") {_RecordType("<324,328,40>",(test)); Inst3++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (test.constructor) != "undefined") {_RecordType("<368,384,41>",(test.constructor)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (test) != "undefined") {_RecordType("<368,372,41>",(test)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (test.generator) != "undefined") {_RecordType("<386,400,41>",(test.generator)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (test) != "undefined") {_RecordType("<386,390,41>",(test)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (TestClass.staticGenerator) != "undefined") {_RecordType("<402,427,41>",(TestClass.staticGenerator)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (TestClass) != "undefined") {_RecordType("<402,411,41>",(TestClass)); Inst11++; } } catch(e) {}
var hasPrototype = [test.constructor, test.generator, TestClass.staticGenerator];
try { if (Inst5 <= 1000 && typeof (hasPrototype) != "undefined") {_RecordType("<352,364,41>",(hasPrototype)); Inst5++; } } catch(e) {}

for (var fun of hasPrototype) {
try { if (Inst12 <= 1000 && typeof (fun) != "undefined") {_RecordType("<440,443,43>",(fun)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (hasPrototype) != "undefined") {_RecordType("<447,459,43>",(hasPrototype)); Inst13++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (fun.hasOwnProperty) != "undefined") {_RecordType("<465,483,44>",(fun.hasOwnProperty)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (fun) != "undefined") {_RecordType("<465,468,44>",(fun)); Inst15++; } } catch(e) {}
  fun.hasOwnProperty('prototype');
  true;
}

try { if (Inst17 <= 1000 && typeof (test.method) != "undefined") {_RecordType("<531,542,48>",(test.method)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (test) != "undefined") {_RecordType("<531,535,48>",(test)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Object.getOwnPropertyDescriptor(test.__proto__, 'getter').get) != "undefined") {_RecordType("<544,605,48>",(Object.getOwnPropertyDescriptor(test.__proto__, 'getter').get)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<544,575,48>",(Object.getOwnPropertyDescriptor)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Object) != "undefined") {_RecordType("<544,550,48>",(Object)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (test.__proto__) != "undefined") {_RecordType("<576,590,48>",(test.__proto__)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (test) != "undefined") {_RecordType("<576,580,48>",(test)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (Object.getOwnPropertyDescriptor(test.__proto__, 'setter').set) != "undefined") {_RecordType("<607,668,48>",(Object.getOwnPropertyDescriptor(test.__proto__, 'setter').set)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<607,638,48>",(Object.getOwnPropertyDescriptor)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Object) != "undefined") {_RecordType("<607,613,48>",(Object)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (test.__proto__) != "undefined") {_RecordType("<639,653,48>",(test.__proto__)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (test) != "undefined") {_RecordType("<639,643,48>",(test)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (TestClass.staticMethod) != "undefined") {_RecordType("<670,692,48>",(TestClass.staticMethod)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (TestClass) != "undefined") {_RecordType("<670,679,48>",(TestClass)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (Object.getOwnPropertyDescriptor(TestClass, 'staticGetter').get) != "undefined") {_RecordType("<694,756,48>",(Object.getOwnPropertyDescriptor(TestClass, 'staticGetter').get)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<694,725,48>",(Object.getOwnPropertyDescriptor)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (Object) != "undefined") {_RecordType("<694,700,48>",(Object)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (TestClass) != "undefined") {_RecordType("<726,735,48>",(TestClass)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (Object.getOwnPropertyDescriptor(TestClass, 'staticSetter').set) != "undefined") {_RecordType("<758,820,48>",(Object.getOwnPropertyDescriptor(TestClass, 'staticSetter').set)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<758,789,48>",(Object.getOwnPropertyDescriptor)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (Object) != "undefined") {_RecordType("<758,764,48>",(Object)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (TestClass) != "undefined") {_RecordType("<790,799,48>",(TestClass)); Inst38++; } } catch(e) {}
var hasNoPrototype = [test.method, Object.getOwnPropertyDescriptor(test.__proto__, 'getter').get, Object.getOwnPropertyDescriptor(test.__proto__, 'setter').set, TestClass.staticMethod, Object.getOwnPropertyDescriptor(TestClass, 'staticGetter').get, Object.getOwnPropertyDescriptor(TestClass, 'staticSetter').set];
try { if (Inst16 <= 1000 && typeof (hasNoPrototype) != "undefined") {_RecordType("<513,527,48>",(hasNoPrototype)); Inst16++; } } catch(e) {}

for (var fun of hasNoPrototype) {
try { if (Inst39 <= 1000 && typeof (fun) != "undefined") {_RecordType("<833,836,50>",(fun)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (hasNoPrototype) != "undefined") {_RecordType("<840,854,50>",(hasNoPrototype)); Inst40++; } } catch(e) {}
try { if (Inst41 <= 1000 && typeof (fun.hasOwnProperty) != "undefined") {_RecordType("<860,878,51>",(fun.hasOwnProperty)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (fun) != "undefined") {_RecordType("<860,863,51>",(fun)); Inst42++; } } catch(e) {}
  fun.hasOwnProperty('prototype');
  false;
}

try { if (Inst43 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<916,929,55>",(reportCompare)); Inst43++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst44 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<950,963,56>",(reportCompare)); Inst44++; } } catch(e) {}
  reportCompare(0, 0, "OK");
}

