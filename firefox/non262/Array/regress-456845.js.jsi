var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* -*- indent-tabs-mode: nil; js-indent-level: 2 -*- */

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
//-----------------------------------------------------------------------------
var BUGNUMBER = 456845;
try { if (Inst0 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<346,355,7>",(BUGNUMBER)); Inst0++; } } catch(e) {}
var summary = 'JIT: popArrs[a].pop is not a function';
try { if (Inst1 <= 1000 && typeof (summary) != "undefined") {_RecordType("<370,377,8>",(summary)); Inst1++; } } catch(e) {}
var actual = 'No Error';
try { if (Inst2 <= 1000 && typeof (actual) != "undefined") {_RecordType("<425,431,9>",(actual)); Inst2++; } } catch(e) {}
var expect = 'No Error'; //-----------------------------------------------------------------------------
try { if (Inst3 <= 1000 && typeof (expect) != "undefined") {_RecordType("<450,456,10>",(expect)); Inst3++; } } catch(e) {}

try { if (Inst4 <= 1000 && typeof (test) != "undefined") {_RecordType("<552,556,12>",(test)); Inst4++; } } catch(e) {}
test(); //-----------------------------------------------------------------------------

try { if (Inst5 <= 1000 && typeof (test) != "undefined") {_RecordType("<650,654,14>",(test)); Inst5++; } } catch(e) {}
function test() {
try { if (Inst6 <= 1000 && typeof (printBugNumber) != "undefined") {_RecordType("<661,675,15>",(printBugNumber)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<676,685,15>",(BUGNUMBER)); Inst7++; } } catch(e) {}
  printBugNumber(BUGNUMBER);
try { if (Inst8 <= 1000 && typeof (printStatus) != "undefined") {_RecordType("<690,701,16>",(printStatus)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (summary) != "undefined") {_RecordType("<702,709,16>",(summary)); Inst9++; } } catch(e) {}
  printStatus(summary);

try { if (Inst38 <= 1000 && typeof (ex) != "undefined") {_RecordType("<1114,1116,42>",(ex)); Inst38++; } } catch(e) {}
  try {
    var chars = '0123456789abcdef';
try { if (Inst10 <= 1000 && typeof (chars) != "undefined") {_RecordType("<729,734,19>",(chars)); Inst10++; } } catch(e) {}
    var size = 1000;
try { if (Inst11 <= 1000 && typeof (size) != "undefined") {_RecordType("<765,769,20>",(size)); Inst11++; } } catch(e) {}
    var mult = 100;
try { if (Inst12 <= 1000 && typeof (mult) != "undefined") {_RecordType("<786,790,21>",(mult)); Inst12++; } } catch(e) {}
    var arr = [];
try { if (Inst13 <= 1000 && typeof (arr) != "undefined") {_RecordType("<806,809,22>",(arr)); Inst13++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (size) != "undefined") {_RecordType("<832,836,23>",(size)); Inst15++; } } catch(e) {}
    var lsize = size;
try { if (Inst14 <= 1000 && typeof (lsize) != "undefined") {_RecordType("<824,829,23>",(lsize)); Inst14++; } } catch(e) {}

try { if (Inst16 <= 1000 && typeof (lsize) != "undefined") {_RecordType("<850,855,25>",(lsize)); Inst16++; } } catch(e) {}
    while (lsize--) {
try { if (Inst17 <= 1000 && typeof (arr.push) != "undefined") {_RecordType("<867,875,26>",(arr.push)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (arr) != "undefined") {_RecordType("<867,870,26>",(arr)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (chars) != "undefined") {_RecordType("<876,881,26>",(chars)); Inst19++; } } catch(e) {}
      arr.push(chars);
    }

    var popArrs = [];
try { if (Inst20 <= 1000 && typeof (popArrs) != "undefined") {_RecordType("<899,906,29>",(popArrs)); Inst20++; } } catch(e) {}

    for (var i = 0; i < mult; i++) {
try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<927,928,31>",(i)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<934,935,31>",(i)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (mult) != "undefined") {_RecordType("<938,942,31>",(mult)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<944,945,31>",(i)); Inst24++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (popArrs.push) != "undefined") {_RecordType("<957,969,32>",(popArrs.push)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (popArrs) != "undefined") {_RecordType("<957,964,32>",(popArrs)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (arr.slice) != "undefined") {_RecordType("<970,979,32>",(arr.slice)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (arr) != "undefined") {_RecordType("<970,973,32>",(arr)); Inst28++; } } catch(e) {}
      popArrs.push(arr.slice());
    }

    for (var a = 0; a < mult; a++) {
try { if (Inst29 <= 1000 && typeof (a) != "undefined") {_RecordType("<1004,1005,35>",(a)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (a) != "undefined") {_RecordType("<1011,1012,35>",(a)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (mult) != "undefined") {_RecordType("<1015,1019,35>",(mult)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (a) != "undefined") {_RecordType("<1021,1022,35>",(a)); Inst32++; } } catch(e) {}
      var x;
try { if (Inst33 <= 1000 && typeof (x) != "undefined") {_RecordType("<1038,1039,36>",(x)); Inst33++; } } catch(e) {}

try { if (Inst35 <= 1000 && typeof (popArrs[a].pop) != "undefined") {_RecordType("<1059,1073,38>",(popArrs[a].pop)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (popArrs[a]) != "undefined") {_RecordType("<1059,1069,38>",(popArrs[a])); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (popArrs) != "undefined") {_RecordType("<1059,1066,38>",(popArrs)); Inst37++; } } catch(e) {}
      while (x = popArrs[a].pop()) {
        ;
      }
try { if (Inst34 <= 1000 && typeof (x) != "undefined") {_RecordType("<1055,1056,38>",(x)); Inst34++; } } catch(e) {}
    }
  } catch (ex) {
try { if (Inst40 <= 1000 && typeof (ex) != "undefined") {_RecordType("<1133,1135,43>",(ex)); Inst40++; } } catch(e) {}
    actual = ex + '';
try { if (Inst39 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1124,1130,43>",(actual)); Inst39++; } } catch(e) {}
  }

try { if (Inst41 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1149,1162,46>",(reportCompare)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1163,1169,46>",(expect)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1171,1177,46>",(actual)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (summary) != "undefined") {_RecordType("<1179,1186,46>",(summary)); Inst44++; } } catch(e) {}
  reportCompare(expect, actual, summary);
}

