var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Sort every possible permutation of some arrays.
try { if (Inst0 <= 1000 && typeof (sortAllPermutations) != "undefined") {_RecordType("<60,79,2>",(sortAllPermutations)); Inst0++; } } catch(e) {}
function sortAllPermutations(data, comparefn) {
try { if (Inst1 <= 1000 && typeof (data) != "undefined") {_RecordType("<80,84,2>",(data)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (comparefn) != "undefined") {_RecordType("<86,95,2>",(comparefn)); Inst2++; } } catch(e) {}
  for (let permutation of Permutations(Array.from(data))) {
try { if (Inst3 <= 1000 && typeof (permutation) != "undefined") {_RecordType("<110,121,3>",(permutation)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Permutations) != "undefined") {_RecordType("<125,137,3>",(Permutations)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Array.from) != "undefined") {_RecordType("<138,148,3>",(Array.from)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Array) != "undefined") {_RecordType("<138,143,3>",(Array)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (data) != "undefined") {_RecordType("<149,153,3>",(data)); Inst7++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (Array.from(permutation).sort) != "undefined") {_RecordType("<176,204,4>",(Array.from(permutation).sort)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Array.from) != "undefined") {_RecordType("<176,186,4>",(Array.from)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Array) != "undefined") {_RecordType("<176,181,4>",(Array)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (permutation) != "undefined") {_RecordType("<187,198,4>",(permutation)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (comparefn) != "undefined") {_RecordType("<205,214,4>",(comparefn)); Inst13++; } } catch(e) {}
    let sorted = Array.from(permutation).sort(comparefn);
try { if (Inst8 <= 1000 && typeof (sorted) != "undefined") {_RecordType("<167,173,4>",(sorted)); Inst8++; } } catch(e) {}

    for (let i in sorted) {
try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<231,232,6>",(i)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (sorted) != "undefined") {_RecordType("<236,242,6>",(sorted)); Inst15++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (sorted[i]) != "undefined") {_RecordType("<252,261,7>",(sorted[i])); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (sorted) != "undefined") {_RecordType("<252,258,7>",(sorted)); Inst17++; } } catch(e) {}
      sorted[i];
try { if (Inst18 <= 1000 && typeof (data[i]) != "undefined") {_RecordType("<269,276,8>",(data[i])); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (data) != "undefined") {_RecordType("<269,273,8>",(data)); Inst19++; } } catch(e) {}
      data[i];
try { if (Inst20 <= 1000 && typeof ([`[${permutation}].sort(${comparefn})`, `returned ${sorted}, expected ${data}`].join) != "undefined") {_RecordType("<284,368,9>",([`[${permutation}].sort(${comparefn})`, `returned ${sorted}, expected ${data}`].join)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (permutation) != "undefined") {_RecordType("<289,300,9>",(permutation)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (comparefn) != "undefined") {_RecordType("<310,319,9>",(comparefn)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (sorted) != "undefined") {_RecordType("<336,342,9>",(sorted)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (data) != "undefined") {_RecordType("<356,360,9>",(data)); Inst24++; } } catch(e) {}
      [`[${permutation}].sort(${comparefn})`, `returned ${sorted}, expected ${data}`].join(' ');
    }
  }
}

let lex = [2112, "bob", "is", "my", "name"];
try { if (Inst25 <= 1000 && typeof (lex) != "undefined") {_RecordType("<392,395,14>",(lex)); Inst25++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<449,458,15>",(undefined)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<460,463,15>",(NaN)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (Number.NaN) != "undefined") {_RecordType("<465,475,15>",(Number.NaN)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (Number) != "undefined") {_RecordType("<465,471,15>",(Number)); Inst30++; } } catch(e) {}
let nans = [1 / undefined, NaN, Number.NaN];
try { if (Inst26 <= 1000 && typeof (nans) != "undefined") {_RecordType("<437,441,15>",(nans)); Inst26++; } } catch(e) {}
let num1 = [-11, 0, 0, 100, 101];
try { if (Inst31 <= 1000 && typeof (num1) != "undefined") {_RecordType("<482,486,16>",(num1)); Inst31++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<545,554,17>",(undefined)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<556,565,17>",(undefined)); Inst34++; } } catch(e) {}
let num2 = [-11, 100, 201234.23, undefined, undefined];
try { if (Inst32 <= 1000 && typeof (num2) != "undefined") {_RecordType("<516,520,17>",(num2)); Inst32++; } } catch(e) {}
try { if (Inst35 <= 1000 && typeof (sortAllPermutations) != "undefined") {_RecordType("<568,587,18>",(sortAllPermutations)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (lex) != "undefined") {_RecordType("<588,591,18>",(lex)); Inst36++; } } catch(e) {}
sortAllPermutations(lex);
try { if (Inst37 <= 1000 && typeof (sortAllPermutations) != "undefined") {_RecordType("<594,613,19>",(sortAllPermutations)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (nans) != "undefined") {_RecordType("<614,618,19>",(nans)); Inst38++; } } catch(e) {}
sortAllPermutations(nans);
try { if (Inst39 <= 1000 && typeof (sortAllPermutations) != "undefined") {_RecordType("<621,640,20>",(sortAllPermutations)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (nans) != "undefined") {_RecordType("<641,645,20>",(nans)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (x) != "undefined") {_RecordType("<648,649,20>",(x)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (y) != "undefined") {_RecordType("<651,652,20>",(y)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (x) != "undefined") {_RecordType("<657,658,20>",(x)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (y) != "undefined") {_RecordType("<661,662,20>",(y)); Inst44++; } } catch(e) {}
sortAllPermutations(nans, (x, y) => x - y); // Multiplication kills comparator optimization.

try { if (Inst45 <= 1000 && typeof (sortAllPermutations) != "undefined") {_RecordType("<715,734,22>",(sortAllPermutations)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (nans) != "undefined") {_RecordType("<735,739,22>",(nans)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (x) != "undefined") {_RecordType("<742,743,22>",(x)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (y) != "undefined") {_RecordType("<745,746,22>",(y)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (x) != "undefined") {_RecordType("<755,756,22>",(x)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (y) != "undefined") {_RecordType("<763,764,22>",(y)); Inst50++; } } catch(e) {}
sortAllPermutations(nans, (x, y) => 1 * x - 1 * y);
try { if (Inst51 <= 1000 && typeof (sortAllPermutations) != "undefined") {_RecordType("<767,786,23>",(sortAllPermutations)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (num1) != "undefined") {_RecordType("<787,791,23>",(num1)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (x) != "undefined") {_RecordType("<794,795,23>",(x)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (y) != "undefined") {_RecordType("<797,798,23>",(y)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (x) != "undefined") {_RecordType("<803,804,23>",(x)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (y) != "undefined") {_RecordType("<807,808,23>",(y)); Inst56++; } } catch(e) {}
sortAllPermutations(num1, (x, y) => x - y);
try { if (Inst57 <= 1000 && typeof (sortAllPermutations) != "undefined") {_RecordType("<811,830,24>",(sortAllPermutations)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (num1) != "undefined") {_RecordType("<831,835,24>",(num1)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (x) != "undefined") {_RecordType("<838,839,24>",(x)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (y) != "undefined") {_RecordType("<841,842,24>",(y)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (x) != "undefined") {_RecordType("<851,852,24>",(x)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (y) != "undefined") {_RecordType("<859,860,24>",(y)); Inst62++; } } catch(e) {}
sortAllPermutations(num1, (x, y) => 1 * x - 1 * y);
try { if (Inst63 <= 1000 && typeof (sortAllPermutations) != "undefined") {_RecordType("<863,882,25>",(sortAllPermutations)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (num2) != "undefined") {_RecordType("<883,887,25>",(num2)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (x) != "undefined") {_RecordType("<890,891,25>",(x)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (y) != "undefined") {_RecordType("<893,894,25>",(y)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (x) != "undefined") {_RecordType("<899,900,25>",(x)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (y) != "undefined") {_RecordType("<903,904,25>",(y)); Inst68++; } } catch(e) {}
sortAllPermutations(num2, (x, y) => x - y);
try { if (Inst69 <= 1000 && typeof (sortAllPermutations) != "undefined") {_RecordType("<907,926,26>",(sortAllPermutations)); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (num2) != "undefined") {_RecordType("<927,931,26>",(num2)); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (x) != "undefined") {_RecordType("<934,935,26>",(x)); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (y) != "undefined") {_RecordType("<937,938,26>",(y)); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (x) != "undefined") {_RecordType("<947,948,26>",(x)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (y) != "undefined") {_RecordType("<955,956,26>",(y)); Inst74++; } } catch(e) {}
sortAllPermutations(num2, (x, y) => 1 * x - 1 * y);

try { if (Inst75 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<971,984,28>",(reportCompare)); Inst75++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst76 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1005,1018,29>",(reportCompare)); Inst76++; } } catch(e) {}
  reportCompare(true, true);
}

