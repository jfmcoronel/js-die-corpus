var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
var Inst102 = 0;
var Inst103 = 0;
var Inst104 = 0;
var Inst105 = 0;
var Inst106 = 0;
var Inst107 = 0;
var Inst108 = 0;
var Inst109 = 0;
var Inst110 = 0;
var Inst111 = 0;
var Inst112 = 0;
var Inst113 = 0;
var Inst114 = 0;
var Inst115 = 0;
var Inst116 = 0;
var Inst117 = 0;
var Inst118 = 0;
var Inst119 = 0;
var Inst120 = 0;
var Inst121 = 0;
var Inst122 = 0;
var Inst123 = 0;
var Inst124 = 0;
var Inst125 = 0;
var Inst126 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
var BUGNUMBER = 1180306;
try { if (Inst0 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<4,13,1>",(BUGNUMBER)); Inst0++; } } catch(e) {}
var summary = 'Array.from should close iterator on error';
try { if (Inst1 <= 1000 && typeof (summary) != "undefined") {_RecordType("<29,36,2>",(summary)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (print) != "undefined") {_RecordType("<84,89,3>",(print)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<90,99,3>",(BUGNUMBER)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (summary) != "undefined") {_RecordType("<109,116,3>",(summary)); Inst4++; } } catch(e) {}
print(BUGNUMBER + ": " + summary);

try { if (Inst5 <= 1000 && typeof (test) != "undefined") {_RecordType("<129,133,5>",(test)); Inst5++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (mapVal) != "undefined") {_RecordType("<144,150,6>",(mapVal)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<153,162,6>",(undefined)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (nextVal) != "undefined") {_RecordType("<166,173,7>",(nextVal)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<176,185,7>",(undefined)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (nextThrowVal) != "undefined") {_RecordType("<189,201,8>",(nextThrowVal)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<204,213,8>",(undefined)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (modifier) != "undefined") {_RecordType("<217,225,9>",(modifier)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<228,237,9>",(undefined)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (exceptionVal) != "undefined") {_RecordType("<241,253,10>",(exceptionVal)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<256,265,10>",(undefined)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (exceptionType) != "undefined") {_RecordType("<269,282,11>",(exceptionType)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<285,294,11>",(undefined)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (closed) != "undefined") {_RecordType("<298,304,12>",(closed)); Inst19++; } } catch(e) {}
function test(ctor, {
  mapVal = undefined,
  nextVal = undefined,
  nextThrowVal = undefined,
  modifier = undefined,
  exceptionVal = undefined,
  exceptionType = undefined,
  closed = true
}) {
try { if (Inst6 <= 1000 && typeof (ctor) != "undefined") {_RecordType("<134,138,5>",(ctor)); Inst6++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<361,376,17>",(Symbol.iterator)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<361,367,17>",(Symbol)); Inst22++; } } catch(e) {}
  let iterable = {
    closed: false,

    [Symbol.iterator]() {
try { if (Inst24 <= 1000 && typeof (next) != "undefined") {_RecordType("<435,439,21>",(next)); Inst24++; } } catch(e) {}
      let iterator = {
        first: true,

        next() {
try { if (Inst25 <= 1000 && typeof (this.first) != "undefined") {_RecordType("<458,468,22>",(this.first)); Inst25++; } } catch(e) {}
          if (this.first) {
            this.first = false;
try { if (Inst26 <= 1000 && typeof (this.first) != "undefined") {_RecordType("<484,494,23>",(this.first)); Inst26++; } } catch(e) {}

try { if (Inst27 <= 1000 && typeof (nextThrowVal) != "undefined") {_RecordType("<521,533,25>",(nextThrowVal)); Inst27++; } } catch(e) {}
            if (nextThrowVal) {
try { if (Inst28 <= 1000 && typeof (nextThrowVal) != "undefined") {_RecordType("<557,569,26>",(nextThrowVal)); Inst28++; } } catch(e) {}
              throw nextThrowVal;
            }

try { if (Inst29 <= 1000 && typeof (nextVal) != "undefined") {_RecordType("<605,612,29>",(nextVal)); Inst29++; } } catch(e) {}
            return nextVal;
          }

try { if (Inst30 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<665,674,33>",(undefined)); Inst30++; } } catch(e) {}
          return {
            value: undefined,
            done: true
          };
        },

        return() {
          iterable.closed = true;
try { if (Inst31 <= 1000 && typeof (iterable.closed) != "undefined") {_RecordType("<753,768,39>",(iterable.closed)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (iterable) != "undefined") {_RecordType("<753,761,39>",(iterable)); Inst32++; } } catch(e) {}
          return {};
        }

      };
try { if (Inst23 <= 1000 && typeof (iterator) != "undefined") {_RecordType("<392,400,18>",(iterator)); Inst23++; } } catch(e) {}

try { if (Inst33 <= 1000 && typeof (modifier) != "undefined") {_RecordType("<829,837,45>",(modifier)); Inst33++; } } catch(e) {}
      if (modifier) {
try { if (Inst34 <= 1000 && typeof (modifier) != "undefined") {_RecordType("<849,857,46>",(modifier)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (iterator) != "undefined") {_RecordType("<858,866,46>",(iterator)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (iterable) != "undefined") {_RecordType("<868,876,46>",(iterable)); Inst36++; } } catch(e) {}
        modifier(iterator, iterable);
      }

try { if (Inst37 <= 1000 && typeof (iterator) != "undefined") {_RecordType("<901,909,49>",(iterator)); Inst37++; } } catch(e) {}
      return iterator;
    }

  };
try { if (Inst20 <= 1000 && typeof (iterable) != "undefined") {_RecordType("<323,331,14>",(iterable)); Inst20++; } } catch(e) {}

try { if (Inst38 <= 1000 && typeof (exceptionVal) != "undefined") {_RecordType("<930,942,54>",(exceptionVal)); Inst38++; } } catch(e) {}
  if (exceptionVal) {
    let caught = false;
try { if (Inst39 <= 1000 && typeof (caught) != "undefined") {_RecordType("<954,960,55>",(caught)); Inst39++; } } catch(e) {}

try { if (Inst44 <= 1000 && typeof (e) != "undefined") {_RecordType("<1029,1030,59>",(e)); Inst44++; } } catch(e) {}
    try {
try { if (Inst40 <= 1000 && typeof (ctor.from) != "undefined") {_RecordType("<987,996,58>",(ctor.from)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (ctor) != "undefined") {_RecordType("<987,991,58>",(ctor)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (iterable) != "undefined") {_RecordType("<997,1005,58>",(iterable)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (mapVal) != "undefined") {_RecordType("<1007,1013,58>",(mapVal)); Inst43++; } } catch(e) {}
      ctor.from(iterable, mapVal);
    } catch (e) {
try { if (Inst45 <= 1000 && typeof (e) != "undefined") {_RecordType("<1040,1041,60>",(e)); Inst45++; } } catch(e) {}
      e;
try { if (Inst46 <= 1000 && typeof (exceptionVal) != "undefined") {_RecordType("<1049,1061,61>",(exceptionVal)); Inst46++; } } catch(e) {}
      exceptionVal;
      caught = true;
try { if (Inst47 <= 1000 && typeof (caught) != "undefined") {_RecordType("<1069,1075,62>",(caught)); Inst47++; } } catch(e) {}
    }

try { if (Inst48 <= 1000 && typeof (caught) != "undefined") {_RecordType("<1095,1101,65>",(caught)); Inst48++; } } catch(e) {}
    caught;
    true;
  } else {
try { if (Inst49 <= 1000 && typeof (exceptionType) != "undefined") {_RecordType("<1132,1145,68>",(exceptionType)); Inst49++; } } catch(e) {}
    if (exceptionType) {
try { if (Inst50 <= 1000 && typeof (ctor.from) != "undefined") {_RecordType("<1162,1171,69>",(ctor.from)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (ctor) != "undefined") {_RecordType("<1162,1166,69>",(ctor)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (iterable) != "undefined") {_RecordType("<1172,1180,69>",(iterable)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (mapVal) != "undefined") {_RecordType("<1182,1188,69>",(mapVal)); Inst53++; } } catch(e) {}
      (() => ctor.from(iterable, mapVal))();

try { if (Inst54 <= 1000 && typeof (exceptionType) != "undefined") {_RecordType("<1201,1214,71>",(exceptionType)); Inst54++; } } catch(e) {}
      exceptionType;
    } else {
try { if (Inst55 <= 1000 && typeof (ctor.from) != "undefined") {_RecordType("<1235,1244,73>",(ctor.from)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (ctor) != "undefined") {_RecordType("<1235,1239,73>",(ctor)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (iterable) != "undefined") {_RecordType("<1245,1253,73>",(iterable)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (mapVal) != "undefined") {_RecordType("<1255,1261,73>",(mapVal)); Inst58++; } } catch(e) {}
      ctor.from(iterable, mapVal);
    }
  }

try { if (Inst59 <= 1000 && typeof (iterable.closed) != "undefined") {_RecordType("<1277,1292,77>",(iterable.closed)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (iterable) != "undefined") {_RecordType("<1277,1285,77>",(iterable)); Inst60++; } } catch(e) {}
  iterable.closed;
try { if (Inst61 <= 1000 && typeof (closed) != "undefined") {_RecordType("<1296,1302,78>",(closed)); Inst61++; } } catch(e) {}
  closed;
} // == Error cases with close ==
// ES 2017 draft 22.1.2.1 step 5.e.i.1.
// Cannot test.
// ES 2017 draft 22.1.2.1 step 5.e.vi.2.


try { if (Inst62 <= 1000 && typeof (test) != "undefined") {_RecordType("<1437,1441,85>",(test)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (Array) != "undefined") {_RecordType("<1442,1447,85>",(Array)); Inst63++; } } catch(e) {}
test(Array, {
  mapVal: () => {
    throw "map throws";
  },
  nextVal: {
    value: 1,
    done: false
  },
  exceptionVal: "map throws",
  closed: true
}); // ES 2017 draft 22.1.2.1 step 5.e.ix.

try { if (Inst67 <= 1000 && typeof (Array) != "undefined") {_RecordType("<1657,1662,97>",(Array)); Inst67++; } } catch(e) {}
class MyArray extends Array {
  constructor() {
try { if (Inst65 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<1698,1703,99>",(Proxy)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (defineProperty) != "undefined") {_RecordType("<1716,1730,100>",(defineProperty)); Inst66++; } } catch(e) {}
    return new Proxy({}, {
      defineProperty() {
        throw "defineProperty throws";
      }

    });
  }

}
try { if (Inst64 <= 1000 && typeof (MyArray) != "undefined") {_RecordType("<1641,1648,97>",(MyArray)); Inst64++; } } catch(e) {}

try { if (Inst68 <= 1000 && typeof (test) != "undefined") {_RecordType("<1799,1803,109>",(test)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (MyArray) != "undefined") {_RecordType("<1804,1811,109>",(MyArray)); Inst69++; } } catch(e) {}
test(MyArray, {
  nextVal: {
    value: 1,
    done: false
  },
  exceptionVal: "defineProperty throws",
  closed: true
}); // ES 2017 draft 7.4.6 step 3.
// if GetMethod fails, the thrown value should be used.

try { if (Inst70 <= 1000 && typeof (test) != "undefined") {_RecordType("<2011,2015,119>",(test)); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (MyArray) != "undefined") {_RecordType("<2016,2023,119>",(MyArray)); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (iterator) != "undefined") {_RecordType("<2088,2096,124>",(iterator)); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (iterable) != "undefined") {_RecordType("<2098,2106,124>",(iterable)); Inst73++; } } catch(e) {}
test(MyArray, {
  nextVal: {
    value: 1,
    done: false
  },
  modifier: (iterator, iterable) => {
try { if (Inst74 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<2117,2138,125>",(Object.defineProperty)); Inst74++; } } catch(e) {}try { if (Inst75 <= 1000 && typeof (Object) != "undefined") {_RecordType("<2117,2123,125>",(Object)); Inst75++; } } catch(e) {}try { if (Inst76 <= 1000 && typeof (iterator) != "undefined") {_RecordType("<2139,2147,125>",(iterator)); Inst76++; } } catch(e) {}
    Object.defineProperty(iterator, "return", {
      get: function () {
        iterable.closed = true;
try { if (Inst77 <= 1000 && typeof (iterable.closed) != "undefined") {_RecordType("<2194,2209,127>",(iterable.closed)); Inst77++; } } catch(e) {}try { if (Inst78 <= 1000 && typeof (iterable) != "undefined") {_RecordType("<2194,2202,127>",(iterable)); Inst78++; } } catch(e) {}
        throw "return getter throws";
      }
    });
  },
  exceptionVal: "return getter throws",
  closed: true
});
try { if (Inst79 <= 1000 && typeof (test) != "undefined") {_RecordType("<2336,2340,135>",(test)); Inst79++; } } catch(e) {}try { if (Inst80 <= 1000 && typeof (MyArray) != "undefined") {_RecordType("<2341,2348,135>",(MyArray)); Inst80++; } } catch(e) {}try { if (Inst81 <= 1000 && typeof (iterator) != "undefined") {_RecordType("<2413,2421,140>",(iterator)); Inst81++; } } catch(e) {}try { if (Inst82 <= 1000 && typeof (iterable) != "undefined") {_RecordType("<2423,2431,140>",(iterable)); Inst82++; } } catch(e) {}try { if (Inst88 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<2610,2619,148>",(TypeError)); Inst88++; } } catch(e) {}
test(MyArray, {
  nextVal: {
    value: 1,
    done: false
  },
  modifier: (iterator, iterable) => {
try { if (Inst83 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<2442,2463,141>",(Object.defineProperty)); Inst83++; } } catch(e) {}try { if (Inst84 <= 1000 && typeof (Object) != "undefined") {_RecordType("<2442,2448,141>",(Object)); Inst84++; } } catch(e) {}try { if (Inst85 <= 1000 && typeof (iterator) != "undefined") {_RecordType("<2464,2472,141>",(iterator)); Inst85++; } } catch(e) {}
    Object.defineProperty(iterator, "return", {
      get: function () {
        iterable.closed = true;
try { if (Inst86 <= 1000 && typeof (iterable.closed) != "undefined") {_RecordType("<2519,2534,143>",(iterable.closed)); Inst86++; } } catch(e) {}try { if (Inst87 <= 1000 && typeof (iterable) != "undefined") {_RecordType("<2519,2527,143>",(iterable)); Inst87++; } } catch(e) {}
        return "non object";
      }
    });
  },
  exceptionType: TypeError,
  closed: true
});
try { if (Inst89 <= 1000 && typeof (test) != "undefined") {_RecordType("<2640,2644,151>",(test)); Inst89++; } } catch(e) {}try { if (Inst90 <= 1000 && typeof (MyArray) != "undefined") {_RecordType("<2645,2652,151>",(MyArray)); Inst90++; } } catch(e) {}try { if (Inst91 <= 1000 && typeof (iterator) != "undefined") {_RecordType("<2717,2725,156>",(iterator)); Inst91++; } } catch(e) {}try { if (Inst92 <= 1000 && typeof (iterable) != "undefined") {_RecordType("<2727,2735,156>",(iterable)); Inst92++; } } catch(e) {}try { if (Inst98 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<2922,2931,165>",(TypeError)); Inst98++; } } catch(e) {}
test(MyArray, {
  nextVal: {
    value: 1,
    done: false
  },
  modifier: (iterator, iterable) => {
try { if (Inst93 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<2746,2767,157>",(Object.defineProperty)); Inst93++; } } catch(e) {}try { if (Inst94 <= 1000 && typeof (Object) != "undefined") {_RecordType("<2746,2752,157>",(Object)); Inst94++; } } catch(e) {}try { if (Inst95 <= 1000 && typeof (iterator) != "undefined") {_RecordType("<2768,2776,157>",(iterator)); Inst95++; } } catch(e) {}
    Object.defineProperty(iterator, "return", {
      get: function () {
        iterable.closed = true; // Non callable.
try { if (Inst96 <= 1000 && typeof (iterable.closed) != "undefined") {_RecordType("<2823,2838,159>",(iterable.closed)); Inst96++; } } catch(e) {}try { if (Inst97 <= 1000 && typeof (iterable) != "undefined") {_RecordType("<2823,2831,159>",(iterable)); Inst97++; } } catch(e) {}

        return {};
      }
    });
  },
  exceptionType: TypeError,
  closed: true
}); // ES 2017 draft 7.4.6 steps 6.
// if return method throws, the thrown value should be ignored.

try { if (Inst99 <= 1000 && typeof (test) != "undefined") {_RecordType("<3049,3053,170>",(test)); Inst99++; } } catch(e) {}try { if (Inst100 <= 1000 && typeof (MyArray) != "undefined") {_RecordType("<3054,3061,170>",(MyArray)); Inst100++; } } catch(e) {}try { if (Inst101 <= 1000 && typeof (iterator) != "undefined") {_RecordType("<3126,3134,175>",(iterator)); Inst101++; } } catch(e) {}try { if (Inst102 <= 1000 && typeof (iterable) != "undefined") {_RecordType("<3136,3144,175>",(iterable)); Inst102++; } } catch(e) {}
test(MyArray, {
  nextVal: {
    value: 1,
    done: false
  },
  modifier: (iterator, iterable) => {
    iterator.return = function () {
      iterable.closed = true;
try { if (Inst105 <= 1000 && typeof (iterable.closed) != "undefined") {_RecordType("<3193,3208,177>",(iterable.closed)); Inst105++; } } catch(e) {}try { if (Inst106 <= 1000 && typeof (iterable) != "undefined") {_RecordType("<3193,3201,177>",(iterable)); Inst106++; } } catch(e) {}
      throw "return throws";
    };
try { if (Inst103 <= 1000 && typeof (iterator.return) != "undefined") {_RecordType("<3155,3170,176>",(iterator.return)); Inst103++; } } catch(e) {}try { if (Inst104 <= 1000 && typeof (iterator) != "undefined") {_RecordType("<3155,3163,176>",(iterator)); Inst104++; } } catch(e) {}
  },
  exceptionVal: "defineProperty throws",
  closed: true
});
try { if (Inst107 <= 1000 && typeof (test) != "undefined") {_RecordType("<3318,3322,184>",(test)); Inst107++; } } catch(e) {}try { if (Inst108 <= 1000 && typeof (MyArray) != "undefined") {_RecordType("<3323,3330,184>",(MyArray)); Inst108++; } } catch(e) {}try { if (Inst109 <= 1000 && typeof (iterator) != "undefined") {_RecordType("<3395,3403,189>",(iterator)); Inst109++; } } catch(e) {}try { if (Inst110 <= 1000 && typeof (iterable) != "undefined") {_RecordType("<3405,3413,189>",(iterable)); Inst110++; } } catch(e) {}
test(MyArray, {
  nextVal: {
    value: 1,
    done: false
  },
  modifier: (iterator, iterable) => {
    iterator.return = function () {
      iterable.closed = true;
try { if (Inst113 <= 1000 && typeof (iterable.closed) != "undefined") {_RecordType("<3462,3477,191>",(iterable.closed)); Inst113++; } } catch(e) {}try { if (Inst114 <= 1000 && typeof (iterable) != "undefined") {_RecordType("<3462,3470,191>",(iterable)); Inst114++; } } catch(e) {}
      return "non object";
    };
try { if (Inst111 <= 1000 && typeof (iterator.return) != "undefined") {_RecordType("<3424,3439,190>",(iterator.return)); Inst111++; } } catch(e) {}try { if (Inst112 <= 1000 && typeof (iterator) != "undefined") {_RecordType("<3424,3432,190>",(iterator)); Inst112++; } } catch(e) {}
  },
  exceptionVal: "defineProperty throws",
  closed: true
}); // == Error cases without close ==
// ES 2017 draft 22.1.2.1 step 5.e.iii.

try { if (Inst115 <= 1000 && typeof (test) != "undefined") {_RecordType("<3661,3665,200>",(test)); Inst115++; } } catch(e) {}try { if (Inst116 <= 1000 && typeof (Array) != "undefined") {_RecordType("<3666,3671,200>",(Array)); Inst116++; } } catch(e) {}
test(Array, {
  nextThrowVal: "next throws",
  exceptionVal: "next throws",
  closed: false
});
try { if (Inst117 <= 1000 && typeof (test) != "undefined") {_RecordType("<3757,3761,205>",(test)); Inst117++; } } catch(e) {}try { if (Inst118 <= 1000 && typeof (Array) != "undefined") {_RecordType("<3762,3767,205>",(Array)); Inst118++; } } catch(e) {}try { if (Inst119 <= 1000 && typeof (done) != "undefined") {_RecordType("<3808,3812,209>",(done)); Inst119++; } } catch(e) {}
test(Array, {
  nextVal: {
    value: {},

    get done() {
      throw "done getter throws";
    }

  },
  exceptionVal: "done getter throws",
  closed: false
}); // ES 2017 draft 22.1.2.1 step 5.e.v.

try { if (Inst120 <= 1000 && typeof (test) != "undefined") {_RecordType("<3960,3964,218>",(test)); Inst120++; } } catch(e) {}try { if (Inst121 <= 1000 && typeof (Array) != "undefined") {_RecordType("<3965,3970,218>",(Array)); Inst121++; } } catch(e) {}try { if (Inst122 <= 1000 && typeof (value) != "undefined") {_RecordType("<3995,4000,220>",(value)); Inst122++; } } catch(e) {}
test(Array, {
  nextVal: {
    get value() {
      throw "value getter throws";
    },

    done: false
  },
  exceptionVal: "value getter throws",
  closed: false
}); // == Successful cases ==

try { if (Inst123 <= 1000 && typeof (test) != "undefined") {_RecordType("<4155,4159,230>",(test)); Inst123++; } } catch(e) {}try { if (Inst124 <= 1000 && typeof (Array) != "undefined") {_RecordType("<4160,4165,230>",(Array)); Inst124++; } } catch(e) {}
test(Array, {
  nextVal: {
    value: 1,
    done: false
  },
  closed: false
});

try { if (Inst125 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<4249,4262,238>",(reportCompare)); Inst125++; } } catch(e) {}
if (typeof reportCompare === 'function') {
try { if (Inst126 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<4283,4296,239>",(reportCompare)); Inst126++; } } catch(e) {}
  reportCompare(true, true);
}

