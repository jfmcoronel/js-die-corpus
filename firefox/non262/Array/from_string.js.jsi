var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* Any copyright is dedicated to the Public Domain.
 * http://creativecommons.org/licenses/publicdomain/ */
// Array.from on a string iterates over the string.
try { if (Inst0 <= 1000 && typeof (Array.from) != "undefined") {_RecordType("<160,170,4>",(Array.from)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (Array) != "undefined") {_RecordType("<160,165,4>",(Array)); Inst1++; } } catch(e) {}
Array.from("test string");
['t', 'e', 's', 't', ' ', 's', 't', 'r', 'i', 'n', 'g'];
// Array.from on a string handles surrogate pairs correctly.
var gclef = "\uD834\uDD1E"; // U+1D11E MUSICAL SYMBOL G CLEF
try { if (Inst2 <= 1000 && typeof (gclef) != "undefined") {_RecordType("<309,314,7>",(gclef)); Inst2++; } } catch(e) {}

try { if (Inst3 <= 1000 && typeof (Array.from) != "undefined") {_RecordType("<367,377,9>",(Array.from)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Array) != "undefined") {_RecordType("<367,372,9>",(Array)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (gclef) != "undefined") {_RecordType("<378,383,9>",(gclef)); Inst5++; } } catch(e) {}
Array.from(gclef);
try { if (Inst6 <= 1000 && typeof (gclef) != "undefined") {_RecordType("<387,392,10>",(gclef)); Inst6++; } } catch(e) {}
[gclef];
try { if (Inst7 <= 1000 && typeof (Array.from) != "undefined") {_RecordType("<395,405,11>",(Array.from)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Array) != "undefined") {_RecordType("<395,400,11>",(Array)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (gclef) != "undefined") {_RecordType("<406,411,11>",(gclef)); Inst9++; } } catch(e) {}
Array.from(gclef + " G");
try { if (Inst10 <= 1000 && typeof (gclef) != "undefined") {_RecordType("<422,427,12>",(gclef)); Inst10++; } } catch(e) {}
[gclef, " ", "G"];

// Array.from on a string calls the @@iterator method.
String.prototype[Symbol.iterator] = function* () {
  yield 1;
  yield 2;
};
try { if (Inst11 <= 1000 && typeof (String.prototype[Symbol.iterator]) != "undefined") {_RecordType("<496,529,15>",(String.prototype[Symbol.iterator])); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (String.prototype) != "undefined") {_RecordType("<496,512,15>",(String.prototype)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (String) != "undefined") {_RecordType("<496,502,15>",(String)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<513,528,15>",(Symbol.iterator)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<513,519,15>",(Symbol)); Inst15++; } } catch(e) {}

try { if (Inst16 <= 1000 && typeof (Array.from) != "undefined") {_RecordType("<573,583,20>",(Array.from)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Array) != "undefined") {_RecordType("<573,578,20>",(Array)); Inst17++; } } catch(e) {}
Array.from("anything");
[1, 2];
// If the iterator method is deleted, Strings are still arraylike.
try { if (Inst18 <= 1000 && typeof (String.prototype[Symbol.iterator]) != "undefined") {_RecordType("<679,712,23>",(String.prototype[Symbol.iterator])); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (String.prototype) != "undefined") {_RecordType("<679,695,23>",(String.prototype)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (String) != "undefined") {_RecordType("<679,685,23>",(String)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<696,711,23>",(Symbol.iterator)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<696,702,23>",(Symbol)); Inst22++; } } catch(e) {}
delete String.prototype[Symbol.iterator];
try { if (Inst23 <= 1000 && typeof (Array.from) != "undefined") {_RecordType("<714,724,24>",(Array.from)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (Array) != "undefined") {_RecordType("<714,719,24>",(Array)); Inst24++; } } catch(e) {}
Array.from("works");
['w', 'o', 'r', 'k', 's'];
try { if (Inst25 <= 1000 && typeof (Array.from) != "undefined") {_RecordType("<762,772,26>",(Array.from)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Array) != "undefined") {_RecordType("<762,767,26>",(Array)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (gclef) != "undefined") {_RecordType("<773,778,26>",(gclef)); Inst27++; } } catch(e) {}
Array.from(gclef);
['\uD834', '\uDD1E'];

try { if (Inst28 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<815,828,29>",(reportCompare)); Inst28++; } } catch(e) {}
if (typeof reportCompare === 'function') {
try { if (Inst29 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<849,862,30>",(reportCompare)); Inst29++; } } catch(e) {}
  reportCompare(0, 0);
}

