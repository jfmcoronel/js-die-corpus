var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (ensureSetterCalledOnce) != "undefined") {_RecordType("<9,31,1>",(ensureSetterCalledOnce)); Inst0++; } } catch(e) {}
function ensureSetterCalledOnce(fn, value, index) {
try { if (Inst1 <= 1000 && typeof (fn) != "undefined") {_RecordType("<32,34,1>",(fn)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (value) != "undefined") {_RecordType("<36,41,1>",(value)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (index) != "undefined") {_RecordType("<43,48,1>",(index)); Inst3++; } } catch(e) {}
  var setterCalled = false;
try { if (Inst4 <= 1000 && typeof (setterCalled) != "undefined") {_RecordType("<58,70,2>",(setterCalled)); Inst4++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<82,103,3>",(Object.defineProperty)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Object) != "undefined") {_RecordType("<82,88,3>",(Object)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<104,119,3>",(Array.prototype)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Array) != "undefined") {_RecordType("<104,109,3>",(Array)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (index) != "undefined") {_RecordType("<121,126,3>",(index)); Inst9++; } } catch(e) {}
  Object.defineProperty(Array.prototype, index, {
    configurable: true,
    set: function (v) {
try { if (Inst10 <= 1000 && typeof (v) != "undefined") {_RecordType("<173,174,5>",(v)); Inst10++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (setterCalled) != "undefined") {_RecordType("<184,196,6>",(setterCalled)); Inst11++; } } catch(e) {}
      setterCalled;
      false;
      setterCalled = true;
try { if (Inst12 <= 1000 && typeof (setterCalled) != "undefined") {_RecordType("<217,229,8>",(setterCalled)); Inst12++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (v) != "undefined") {_RecordType("<244,245,9>",(v)); Inst13++; } } catch(e) {}
      v;
try { if (Inst14 <= 1000 && typeof (value) != "undefined") {_RecordType("<253,258,10>",(value)); Inst14++; } } catch(e) {}
      value;
    }
  });
try { if (Inst15 <= 1000 && typeof (setterCalled) != "undefined") {_RecordType("<274,286,13>",(setterCalled)); Inst15++; } } catch(e) {}
  setterCalled;
  false;
try { if (Inst16 <= 1000 && typeof (fn) != "undefined") {_RecordType("<299,301,15>",(fn)); Inst16++; } } catch(e) {}
  fn();
try { if (Inst17 <= 1000 && typeof (setterCalled) != "undefined") {_RecordType("<307,319,16>",(setterCalled)); Inst17++; } } catch(e) {}
  setterCalled;
  true;
try { if (Inst18 <= 1000 && typeof (Array.prototype[index]) != "undefined") {_RecordType("<338,360,18>",(Array.prototype[index])); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<338,353,18>",(Array.prototype)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (Array) != "undefined") {_RecordType("<338,343,18>",(Array)); Inst20++; } } catch(e) {}
  delete Array.prototype[index];
}

try { if (Inst21 <= 1000 && typeof (ensureSetterCalledOnce) != "undefined") {_RecordType("<365,387,21>",(ensureSetterCalledOnce)); Inst21++; } } catch(e) {}
ensureSetterCalledOnce(function () {
try { if (Inst22 <= 1000 && typeof ([].push) != "undefined") {_RecordType("<404,411,22>",([].push)); Inst22++; } } catch(e) {}
  [].push("push");
}, "push", 0);
try { if (Inst23 <= 1000 && typeof (ensureSetterCalledOnce) != "undefined") {_RecordType("<436,458,24>",(ensureSetterCalledOnce)); Inst23++; } } catch(e) {}
ensureSetterCalledOnce(function () {
try { if (Inst24 <= 1000 && typeof ([,
  /* hole */
  "reverse"].reverse) != "undefined") {_RecordType("<475,511,25>",([,
  /* hole */
  "reverse"].reverse)); Inst24++; } } catch(e) {}
  [,
  /* hole */
  "reverse"].reverse();
}, "reverse", 0);
try { if (Inst25 <= 1000 && typeof (ensureSetterCalledOnce) != "undefined") {_RecordType("<533,555,29>",(ensureSetterCalledOnce)); Inst25++; } } catch(e) {}
ensureSetterCalledOnce(function () {
try { if (Inst26 <= 1000 && typeof (["reverse",,].reverse) != "undefined") {_RecordType("<572,593,30>",(["reverse",,].reverse)); Inst26++; } } catch(e) {}
  ["reverse",,].reverse();
}, "reverse", 1);
try { if (Inst27 <= 1000 && typeof (ensureSetterCalledOnce) != "undefined") {_RecordType("<615,637,32>",(ensureSetterCalledOnce)); Inst27++; } } catch(e) {}
ensureSetterCalledOnce(function () {
try { if (Inst28 <= 1000 && typeof ([,
  /* hole */
  "shift"].shift) != "undefined") {_RecordType("<654,686,33>",([,
  /* hole */
  "shift"].shift)); Inst28++; } } catch(e) {}
  [,
  /* hole */
  "shift"].shift();
}, "shift", 0);
try { if (Inst29 <= 1000 && typeof (ensureSetterCalledOnce) != "undefined") {_RecordType("<706,728,37>",(ensureSetterCalledOnce)); Inst29++; } } catch(e) {}
ensureSetterCalledOnce(function () {
try { if (Inst30 <= 1000 && typeof ([,
  /* hole */
  "sort"].sort) != "undefined") {_RecordType("<745,775,38>",([,
  /* hole */
  "sort"].sort)); Inst30++; } } catch(e) {}
  [,
  /* hole */
  "sort"].sort();
}, "sort", 0);
try { if (Inst31 <= 1000 && typeof (ensureSetterCalledOnce) != "undefined") {_RecordType("<794,816,42>",(ensureSetterCalledOnce)); Inst31++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<873,882,46>",(undefined)); Inst34++; } } catch(e) {}
ensureSetterCalledOnce(function () {
try { if (Inst32 <= 1000 && typeof ([,
  /* hole */
  undefined].sort) != "undefined") {_RecordType("<833,866,43>",([,
  /* hole */
  undefined].sort)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<851,860,45>",(undefined)); Inst33++; } } catch(e) {}
  [,
  /* hole */
  undefined].sort();
}, undefined, 0);
try { if (Inst35 <= 1000 && typeof (ensureSetterCalledOnce) != "undefined") {_RecordType("<888,910,47>",(ensureSetterCalledOnce)); Inst35++; } } catch(e) {}
ensureSetterCalledOnce(function () {
try { if (Inst36 <= 1000 && typeof ([].splice) != "undefined") {_RecordType("<927,936,48>",([].splice)); Inst36++; } } catch(e) {}
  [].splice(0, 0, "splice");
}, "splice", 0);
try { if (Inst37 <= 1000 && typeof (ensureSetterCalledOnce) != "undefined") {_RecordType("<971,993,50>",(ensureSetterCalledOnce)); Inst37++; } } catch(e) {}
ensureSetterCalledOnce(function () {
try { if (Inst38 <= 1000 && typeof ([,
  /* hole */
  "splice"].splice) != "undefined") {_RecordType("<1010,1044,51>",([,
  /* hole */
  "splice"].splice)); Inst38++; } } catch(e) {}
  [,
  /* hole */
  "splice"].splice(0, 1);
}, "splice", 0);
try { if (Inst39 <= 1000 && typeof (ensureSetterCalledOnce) != "undefined") {_RecordType("<1069,1091,55>",(ensureSetterCalledOnce)); Inst39++; } } catch(e) {}
ensureSetterCalledOnce(function (v) {
try { if (Inst40 <= 1000 && typeof (v) != "undefined") {_RecordType("<1102,1103,55>",(v)); Inst40++; } } catch(e) {}
try { if (Inst41 <= 1000 && typeof (["splice",,].splice) != "undefined") {_RecordType("<1109,1128,56>",(["splice",,].splice)); Inst41++; } } catch(e) {}
  ["splice",,].splice(0, 0, "item");
}, "splice", 1);
try { if (Inst42 <= 1000 && typeof (ensureSetterCalledOnce) != "undefined") {_RecordType("<1161,1183,58>",(ensureSetterCalledOnce)); Inst42++; } } catch(e) {}
ensureSetterCalledOnce(function () {
try { if (Inst43 <= 1000 && typeof ([].unshift) != "undefined") {_RecordType("<1200,1210,59>",([].unshift)); Inst43++; } } catch(e) {}
  [].unshift("unshift");
}, "unshift", 0);

try { if (Inst44 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1253,1266,62>",(reportCompare)); Inst44++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst45 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1287,1300,63>",(reportCompare)); Inst45++; } } catch(e) {}
  reportCompare(true, true);
}

