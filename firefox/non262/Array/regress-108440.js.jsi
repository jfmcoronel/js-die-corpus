var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// |reftest| skip-if(Android) -- bug - nsIDOMWindow.crypto throws NS_ERROR_NOT_IMPLEMENTED on Android

/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

/*
 *
 * Date: 30 October 2001
 * SUMMARY: Regression test for bug 108440
 * See http://bugzilla.mozilla.org/show_bug.cgi?id=108440
 *
 * We shouldn't crash trying to add an array as an element of itself (!)
 *
 * Brendan: "...it appears that Array.prototype.toString is unsafe,
 * and what's more, ECMA-262 Edition 3 has no helpful words about
 * avoiding recursive death on a cycle."
 */
//-----------------------------------------------------------------------------
var BUGNUMBER = 108440;
try { if (Inst0 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<864,873,22>",(BUGNUMBER)); Inst0++; } } catch(e) {}
var summary = "Shouldn't crash trying to add an array as an element of itself";
try { if (Inst1 <= 1000 && typeof (summary) != "undefined") {_RecordType("<888,895,23>",(summary)); Inst1++; } } catch(e) {}
var self = this;
try { if (Inst2 <= 1000 && typeof (self) != "undefined") {_RecordType("<968,972,24>",(self)); Inst2++; } } catch(e) {}
var temp = '';
try { if (Inst3 <= 1000 && typeof (temp) != "undefined") {_RecordType("<985,989,25>",(temp)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (printBugNumber) != "undefined") {_RecordType("<996,1010,26>",(printBugNumber)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<1011,1020,26>",(BUGNUMBER)); Inst5++; } } catch(e) {}
printBugNumber(BUGNUMBER);
try { if (Inst6 <= 1000 && typeof (printStatus) != "undefined") {_RecordType("<1023,1034,27>",(printStatus)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (summary) != "undefined") {_RecordType("<1035,1042,27>",(summary)); Inst7++; } } catch(e) {}
printStatus(summary);
/*
 * Explicit test:
 */

var a = [];
try { if (Inst8 <= 1000 && typeof (a) != "undefined") {_RecordType("<1075,1076,32>",(a)); Inst8++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (a) != "undefined") {_RecordType("<1104,1105,33>",(a)); Inst14++; } } catch(e) {}
temp = a[a.length] = a;
try { if (Inst9 <= 1000 && typeof (temp) != "undefined") {_RecordType("<1083,1087,33>",(temp)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (a[a.length]) != "undefined") {_RecordType("<1090,1101,33>",(a[a.length])); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (a) != "undefined") {_RecordType("<1090,1091,33>",(a)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<1092,1100,33>",(a.length)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (a) != "undefined") {_RecordType("<1092,1093,33>",(a)); Inst13++; } } catch(e) {}
/*
 * Implicit test (one of the properties of |self| is |a|)
 */

a = [];
try { if (Inst15 <= 1000 && typeof (a) != "undefined") {_RecordType("<1173,1174,38>",(a)); Inst15++; } } catch(e) {}

for (var prop in self) {
try { if (Inst16 <= 1000 && typeof (prop) != "undefined") {_RecordType("<1191,1195,40>",(prop)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (self) != "undefined") {_RecordType("<1199,1203,40>",(self)); Inst17++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (prop) != "undefined") {_RecordType("<1216,1220,41>",(prop)); Inst19++; } } catch(e) {}
  temp = prop;
try { if (Inst18 <= 1000 && typeof (temp) != "undefined") {_RecordType("<1209,1213,41>",(temp)); Inst18++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (self[prop]) != "undefined") {_RecordType("<1245,1255,42>",(self[prop])); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (self) != "undefined") {_RecordType("<1245,1249,42>",(self)); Inst26++; } } catch(e) {}
  temp = a[a.length] = self[prop];
try { if (Inst20 <= 1000 && typeof (temp) != "undefined") {_RecordType("<1224,1228,42>",(temp)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (a[a.length]) != "undefined") {_RecordType("<1231,1242,42>",(a[a.length])); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (a) != "undefined") {_RecordType("<1231,1232,42>",(a)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<1233,1241,42>",(a.length)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (a) != "undefined") {_RecordType("<1233,1234,42>",(a)); Inst24++; } } catch(e) {}
}
/*
 * Stressful explicit test
 */


a = [];
try { if (Inst27 <= 1000 && typeof (a) != "undefined") {_RecordType("<1295,1296,49>",(a)); Inst27++; } } catch(e) {}

for (var i = 0; i < 10; i++) {
try { if (Inst28 <= 1000 && typeof (i) != "undefined") {_RecordType("<1313,1314,51>",(i)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (i) != "undefined") {_RecordType("<1320,1321,51>",(i)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (i) != "undefined") {_RecordType("<1328,1329,51>",(i)); Inst30++; } } catch(e) {}
try { if (Inst35 <= 1000 && typeof (a) != "undefined") {_RecordType("<1351,1352,52>",(a)); Inst35++; } } catch(e) {}
  a[a.length] = a;
try { if (Inst31 <= 1000 && typeof (a[a.length]) != "undefined") {_RecordType("<1337,1348,52>",(a[a.length])); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (a) != "undefined") {_RecordType("<1337,1338,52>",(a)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<1339,1347,52>",(a.length)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (a) != "undefined") {_RecordType("<1339,1340,52>",(a)); Inst34++; } } catch(e) {}
}
/*
 * Test toString()
 */


a = [];
try { if (Inst36 <= 1000 && typeof (a) != "undefined") {_RecordType("<1384,1385,59>",(a)); Inst36++; } } catch(e) {}

for (var i = 0; i < 10; i++) {
try { if (Inst37 <= 1000 && typeof (i) != "undefined") {_RecordType("<1402,1403,61>",(i)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (i) != "undefined") {_RecordType("<1409,1410,61>",(i)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (i) != "undefined") {_RecordType("<1417,1418,61>",(i)); Inst39++; } } catch(e) {}
try { if (Inst44 <= 1000 && typeof (a.toString) != "undefined") {_RecordType("<1440,1450,62>",(a.toString)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (a) != "undefined") {_RecordType("<1440,1441,62>",(a)); Inst45++; } } catch(e) {}
  a[a.length] = a.toString();
try { if (Inst40 <= 1000 && typeof (a[a.length]) != "undefined") {_RecordType("<1426,1437,62>",(a[a.length])); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (a) != "undefined") {_RecordType("<1426,1427,62>",(a)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<1428,1436,62>",(a.length)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (a) != "undefined") {_RecordType("<1428,1429,62>",(a)); Inst43++; } } catch(e) {}
}
/*
 * Test toSource() - but Rhino doesn't have this, so try...catch it
 */


a = [];
try { if (Inst46 <= 1000 && typeof (a) != "undefined") {_RecordType("<1533,1534,69>",(a)); Inst46++; } } catch(e) {}

try { if (Inst56 <= 1000 && typeof (e) != "undefined") {_RecordType("<1626,1627,75>",(e)); Inst56++; } } catch(e) {}
try {
  for (var i = 0; i < 10; i++) {
try { if (Inst47 <= 1000 && typeof (i) != "undefined") {_RecordType("<1559,1560,72>",(i)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (i) != "undefined") {_RecordType("<1566,1567,72>",(i)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (i) != "undefined") {_RecordType("<1574,1575,72>",(i)); Inst49++; } } catch(e) {}
try { if (Inst54 <= 1000 && typeof (a.toSource) != "undefined") {_RecordType("<1599,1609,73>",(a.toSource)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (a) != "undefined") {_RecordType("<1599,1600,73>",(a)); Inst55++; } } catch(e) {}
    a[a.length] = a.toSource();
try { if (Inst50 <= 1000 && typeof (a[a.length]) != "undefined") {_RecordType("<1585,1596,73>",(a[a.length])); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (a) != "undefined") {_RecordType("<1585,1586,73>",(a)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<1587,1595,73>",(a.length)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (a) != "undefined") {_RecordType("<1587,1588,73>",(a)); Inst53++; } } catch(e) {}
  }
} catch (e) {
  ;
}

try { if (Inst57 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1638,1651,79>",(reportCompare)); Inst57++; } } catch(e) {}
reportCompare('No Crash', 'No Crash', '');

