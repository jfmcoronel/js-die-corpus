var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
var absent = {};
try { if (Inst0 <= 1000 && typeof (absent) != "undefined") {_RecordType("<209,215,4>",(absent)); Inst0++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (absent) != "undefined") {_RecordType("<242,248,5>",(absent)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<250,259,5>",(undefined)); Inst3++; } } catch(e) {}
var getterValues = [absent, undefined, function () {
  ;
}];
try { if (Inst1 <= 1000 && typeof (getterValues) != "undefined") {_RecordType("<226,238,5>",(getterValues)); Inst1++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (absent) != "undefined") {_RecordType("<303,309,8>",(absent)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<311,320,8>",(undefined)); Inst6++; } } catch(e) {}
var setterValues = [absent, undefined, function () {
  ;
}];
try { if (Inst4 <= 1000 && typeof (setterValues) != "undefined") {_RecordType("<287,299,8>",(setterValues)); Inst4++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (absent) != "undefined") {_RecordType("<370,376,11>",(absent)); Inst8++; } } catch(e) {}
var configurableValues = [absent, true, false];
try { if (Inst7 <= 1000 && typeof (configurableValues) != "undefined") {_RecordType("<348,366,11>",(configurableValues)); Inst7++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (absent) != "undefined") {_RecordType("<416,422,12>",(absent)); Inst10++; } } catch(e) {}
var enumerableValues = [absent, true, false];
try { if (Inst9 <= 1000 && typeof (enumerableValues) != "undefined") {_RecordType("<396,412,12>",(enumerableValues)); Inst9++; } } catch(e) {}

try { if (Inst11 <= 1000 && typeof (CreateDescriptor) != "undefined") {_RecordType("<448,464,14>",(CreateDescriptor)); Inst11++; } } catch(e) {}
function CreateDescriptor(getter, setter, enumerable, configurable) {
try { if (Inst12 <= 1000 && typeof (getter) != "undefined") {_RecordType("<465,471,14>",(getter)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (setter) != "undefined") {_RecordType("<473,479,14>",(setter)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (enumerable) != "undefined") {_RecordType("<481,491,14>",(enumerable)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (configurable) != "undefined") {_RecordType("<493,505,14>",(configurable)); Inst15++; } } catch(e) {}
  var descriptor = {};
try { if (Inst16 <= 1000 && typeof (descriptor) != "undefined") {_RecordType("<515,525,15>",(descriptor)); Inst16++; } } catch(e) {}

try { if (Inst17 <= 1000 && typeof (getter) != "undefined") {_RecordType("<539,545,17>",(getter)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (absent) != "undefined") {_RecordType("<550,556,17>",(absent)); Inst18++; } } catch(e) {}
  if (getter !== absent) {
try { if (Inst21 <= 1000 && typeof (getter) != "undefined") {_RecordType("<581,587,18>",(getter)); Inst21++; } } catch(e) {}
    descriptor.get = getter;
try { if (Inst19 <= 1000 && typeof (descriptor.get) != "undefined") {_RecordType("<564,578,18>",(descriptor.get)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (descriptor) != "undefined") {_RecordType("<564,574,18>",(descriptor)); Inst20++; } } catch(e) {}
  }

try { if (Inst22 <= 1000 && typeof (setter) != "undefined") {_RecordType("<600,606,21>",(setter)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (absent) != "undefined") {_RecordType("<611,617,21>",(absent)); Inst23++; } } catch(e) {}
  if (setter !== absent) {
try { if (Inst26 <= 1000 && typeof (setter) != "undefined") {_RecordType("<642,648,22>",(setter)); Inst26++; } } catch(e) {}
    descriptor.set = setter;
try { if (Inst24 <= 1000 && typeof (descriptor.set) != "undefined") {_RecordType("<625,639,22>",(descriptor.set)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (descriptor) != "undefined") {_RecordType("<625,635,22>",(descriptor)); Inst25++; } } catch(e) {}
  }

try { if (Inst27 <= 1000 && typeof (configurable) != "undefined") {_RecordType("<661,673,25>",(configurable)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (absent) != "undefined") {_RecordType("<678,684,25>",(absent)); Inst28++; } } catch(e) {}
  if (configurable !== absent) {
try { if (Inst31 <= 1000 && typeof (configurable) != "undefined") {_RecordType("<718,730,26>",(configurable)); Inst31++; } } catch(e) {}
    descriptor.configurable = configurable;
try { if (Inst29 <= 1000 && typeof (descriptor.configurable) != "undefined") {_RecordType("<692,715,26>",(descriptor.configurable)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (descriptor) != "undefined") {_RecordType("<692,702,26>",(descriptor)); Inst30++; } } catch(e) {}
  }

try { if (Inst32 <= 1000 && typeof (enumerable) != "undefined") {_RecordType("<743,753,29>",(enumerable)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (absent) != "undefined") {_RecordType("<758,764,29>",(absent)); Inst33++; } } catch(e) {}
  if (enumerable !== absent) {
try { if (Inst36 <= 1000 && typeof (enumerable) != "undefined") {_RecordType("<796,806,30>",(enumerable)); Inst36++; } } catch(e) {}
    descriptor.enumerable = enumerable;
try { if (Inst34 <= 1000 && typeof (descriptor.enumerable) != "undefined") {_RecordType("<772,793,30>",(descriptor.enumerable)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (descriptor) != "undefined") {_RecordType("<772,782,30>",(descriptor)); Inst35++; } } catch(e) {}
  }

try { if (Inst37 <= 1000 && typeof (descriptor) != "undefined") {_RecordType("<822,832,33>",(descriptor)); Inst37++; } } catch(e) {}
  return descriptor;
}

try { if (Inst38 <= 1000 && typeof (getterValues.forEach) != "undefined") {_RecordType("<837,857,36>",(getterValues.forEach)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (getterValues) != "undefined") {_RecordType("<837,849,36>",(getterValues)); Inst39++; } } catch(e) {}
getterValues.forEach(function (getter) {
try { if (Inst40 <= 1000 && typeof (getter) != "undefined") {_RecordType("<868,874,36>",(getter)); Inst40++; } } catch(e) {}
try { if (Inst41 <= 1000 && typeof (setterValues.forEach) != "undefined") {_RecordType("<880,900,37>",(setterValues.forEach)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (setterValues) != "undefined") {_RecordType("<880,892,37>",(setterValues)); Inst42++; } } catch(e) {}
  setterValues.forEach(function (setter) {
try { if (Inst43 <= 1000 && typeof (setter) != "undefined") {_RecordType("<911,917,37>",(setter)); Inst43++; } } catch(e) {}
try { if (Inst44 <= 1000 && typeof (enumerableValues.forEach) != "undefined") {_RecordType("<925,949,38>",(enumerableValues.forEach)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (enumerableValues) != "undefined") {_RecordType("<925,941,38>",(enumerableValues)); Inst45++; } } catch(e) {}
    enumerableValues.forEach(function (enumerable) {
try { if (Inst46 <= 1000 && typeof (enumerable) != "undefined") {_RecordType("<960,970,38>",(enumerable)); Inst46++; } } catch(e) {}
try { if (Inst47 <= 1000 && typeof (configurableValues.forEach) != "undefined") {_RecordType("<980,1006,39>",(configurableValues.forEach)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (configurableValues) != "undefined") {_RecordType("<980,998,39>",(configurableValues)); Inst48++; } } catch(e) {}
      configurableValues.forEach(function (configurable) {
try { if (Inst49 <= 1000 && typeof (configurable) != "undefined") {_RecordType("<1017,1029,39>",(configurable)); Inst49++; } } catch(e) {}
try { if (Inst51 <= 1000 && typeof (CreateDescriptor) != "undefined") {_RecordType("<1058,1074,40>",(CreateDescriptor)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (getter) != "undefined") {_RecordType("<1075,1081,40>",(getter)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (setter) != "undefined") {_RecordType("<1083,1089,40>",(setter)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (enumerable) != "undefined") {_RecordType("<1091,1101,40>",(enumerable)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (configurable) != "undefined") {_RecordType("<1103,1115,40>",(configurable)); Inst55++; } } catch(e) {}
        var descriptor = CreateDescriptor(getter, setter, enumerable, configurable);
try { if (Inst50 <= 1000 && typeof (descriptor) != "undefined") {_RecordType("<1045,1055,40>",(descriptor)); Inst50++; } } catch(e) {}

try { if (Inst56 <= 1000 && typeof (descriptor) != "undefined") {_RecordType("<1142,1152,42>",(descriptor)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (descriptor) != "undefined") {_RecordType("<1165,1175,42>",(descriptor)); Inst57++; } } catch(e) {}
        if (!("get" in descriptor || "set" in descriptor)) {
          return;
        }

        (function () {
try { if (Inst58 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<1242,1263,47>",(Object.defineProperty)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1242,1248,47>",(Object)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (descriptor) != "undefined") {_RecordType("<1278,1288,47>",(descriptor)); Inst60++; } } catch(e) {}
          Object.defineProperty([], "length", descriptor);
        })();

try { if (Inst61 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<1314,1323,50>",(TypeError)); Inst61++; } } catch(e) {}
        TypeError;
      });
    });
  });
});

try { if (Inst62 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1365,1378,56>",(reportCompare)); Inst62++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst63 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1399,1412,57>",(reportCompare)); Inst63++; } } catch(e) {}
  reportCompare(0, 0);
}

