var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (f) != "undefined") {_RecordType("<9,10,1>",(f)); Inst0++; } } catch(e) {}
function f(array, method, args) {
try { if (Inst1 <= 1000 && typeof (array) != "undefined") {_RecordType("<11,16,1>",(array)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (method) != "undefined") {_RecordType("<18,24,1>",(method)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (args) != "undefined") {_RecordType("<26,30,1>",(args)); Inst3++; } } catch(e) {}
  var called = false;
try { if (Inst4 <= 1000 && typeof (called) != "undefined") {_RecordType("<40,46,2>",(called)); Inst4++; } } catch(e) {}
  var keys = [];
try { if (Inst5 <= 1000 && typeof (keys) != "undefined") {_RecordType("<62,66,3>",(keys)); Inst5++; } } catch(e) {}

  for (var key in array) {
try { if (Inst6 <= 1000 && typeof (key) != "undefined") {_RecordType("<85,88,5>",(key)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (array) != "undefined") {_RecordType("<92,97,5>",(array)); Inst7++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (keys.push) != "undefined") {_RecordType("<105,114,6>",(keys.push)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (keys) != "undefined") {_RecordType("<105,109,6>",(keys)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (key) != "undefined") {_RecordType("<115,118,6>",(key)); Inst10++; } } catch(e) {}
    keys.push(key);

try { if (Inst11 <= 1000 && typeof (called) != "undefined") {_RecordType("<131,137,8>",(called)); Inst11++; } } catch(e) {}
    if (!called) {
      called = true;
try { if (Inst12 <= 1000 && typeof (called) != "undefined") {_RecordType("<147,153,9>",(called)); Inst12++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (Reflect.apply) != "undefined") {_RecordType("<168,181,10>",(Reflect.apply)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<168,175,10>",(Reflect)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (method) != "undefined") {_RecordType("<182,188,10>",(method)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (array) != "undefined") {_RecordType("<190,195,10>",(array)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (args) != "undefined") {_RecordType("<197,201,10>",(args)); Inst17++; } } catch(e) {}
      Reflect.apply(method, array, args);
    }
  }

try { if (Inst18 <= 1000 && typeof (keys) != "undefined") {_RecordType("<224,228,14>",(keys)); Inst18++; } } catch(e) {}
  return keys;
}

try { if (Inst19 <= 1000 && typeof (f) != "undefined") {_RecordType("<233,234,17>",(f)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (Array.prototype.unshift) != "undefined") {_RecordType("<255,278,19>",(Array.prototype.unshift)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<255,270,19>",(Array.prototype)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Array) != "undefined") {_RecordType("<255,260,19>",(Array)); Inst22++; } } catch(e) {}
f([1,,
/* hole */
3], Array.prototype.unshift, [0]);
["0"];
try { if (Inst23 <= 1000 && typeof (f) != "undefined") {_RecordType("<293,294,21>",(f)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (Array.prototype.splice) != "undefined") {_RecordType("<315,337,23>",(Array.prototype.splice)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<315,330,23>",(Array.prototype)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Array) != "undefined") {_RecordType("<315,320,23>",(Array)); Inst26++; } } catch(e) {}
f([1,,
/* hole */
3], Array.prototype.splice, [0, 0, 0]);
["0"];

try { if (Inst27 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<370,383,26>",(reportCompare)); Inst27++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst28 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<404,417,27>",(reportCompare)); Inst28++; } } catch(e) {}
  reportCompare(true, true);
}

