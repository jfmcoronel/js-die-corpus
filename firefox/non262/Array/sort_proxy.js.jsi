var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* Any copyright is dedicated to the Public Domain.
 * http://creativecommons.org/publicdomain/zero/1.0/ */
// Ensure, via proxy, that only get, set, delete, has, and getOwnPropertyDescriptor
// are touched during sorting.
const handler = {
  set: function (target, prop, value) {
try { if (Inst1 <= 1000 && typeof (target) != "undefined") {_RecordType("<258,264,6>",(target)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (prop) != "undefined") {_RecordType("<266,270,6>",(prop)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (value) != "undefined") {_RecordType("<272,277,6>",(value)); Inst3++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (value) != "undefined") {_RecordType("<300,305,7>",(value)); Inst6++; } } catch(e) {}
    target[prop] = value;
try { if (Inst4 <= 1000 && typeof (target[prop]) != "undefined") {_RecordType("<285,297,7>",(target[prop])); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (target) != "undefined") {_RecordType("<285,291,7>",(target)); Inst5++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (value) != "undefined") {_RecordType("<318,323,8>",(value)); Inst7++; } } catch(e) {}
    return value;
  },
  getPrototypeOf: () => {
    throw "You shouldn't touch getPrototypeOf!";
  },
  setPrototypeOf: () => {
    throw "You shouldn't touch setPrototypeOf!";
  },
  isExtensible: () => {
    throw "You shouldn't touch isExtensible!";
  },
  preventExtensions: () => {
    throw "You shouldn't touch preventExtensions!";
  },
  defineProperty: () => {
    throw "You shouldn't touch defineProperty!";
  },
  ownKeys: () => {
    throw "You shouldn't touch ownKeys!";
  },
  apply: () => {
    throw "You shouldn't touch apply!";
  },
  construct: () => {
    throw "You shouldn't touch construct!";
  }
};
try { if (Inst0 <= 1000 && typeof (handler) != "undefined") {_RecordType("<229,236,5>",(handler)); Inst0++; } } catch(e) {}

try { if (Inst8 <= 1000 && typeof (testArray) != "undefined") {_RecordType("<942,951,36>",(testArray)); Inst8++; } } catch(e) {}
function testArray(arr) {
try { if (Inst9 <= 1000 && typeof (arr) != "undefined") {_RecordType("<952,955,36>",(arr)); Inst9++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<977,982,37>",(Proxy)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (arr) != "undefined") {_RecordType("<983,986,37>",(arr)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (handler) != "undefined") {_RecordType("<988,995,37>",(handler)); Inst13++; } } catch(e) {}
  let proxy = new Proxy(arr, handler); // The supplied comparators trigger a JavaScript implemented sort.
try { if (Inst10 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<965,970,37>",(proxy)); Inst10++; } } catch(e) {}

try { if (Inst14 <= 1000 && typeof (proxy.sort) != "undefined") {_RecordType("<1068,1078,39>",(proxy.sort)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<1068,1073,39>",(proxy)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (x) != "undefined") {_RecordType("<1080,1081,39>",(x)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (y) != "undefined") {_RecordType("<1083,1084,39>",(y)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (x) != "undefined") {_RecordType("<1093,1094,39>",(x)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (y) != "undefined") {_RecordType("<1097,1098,39>",(y)); Inst19++; } } catch(e) {}
  proxy.sort((x, y) => 1 * x - y);
try { if (Inst20 <= 1000 && typeof (arr.sort) != "undefined") {_RecordType("<1103,1111,40>",(arr.sort)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (arr) != "undefined") {_RecordType("<1103,1106,40>",(arr)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (x) != "undefined") {_RecordType("<1113,1114,40>",(x)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (y) != "undefined") {_RecordType("<1116,1117,40>",(y)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (x) != "undefined") {_RecordType("<1126,1127,40>",(x)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (y) != "undefined") {_RecordType("<1130,1131,40>",(y)); Inst25++; } } catch(e) {}
  arr.sort((x, y) => 1 * x - y);

  for (let i in arr) {
try { if (Inst26 <= 1000 && typeof (i) != "undefined") {_RecordType("<1146,1147,42>",(i)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (arr) != "undefined") {_RecordType("<1151,1154,42>",(arr)); Inst27++; } } catch(e) {}
try { if (Inst28 <= 1000 && typeof (arr[i]) != "undefined") {_RecordType("<1162,1168,43>",(arr[i])); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (arr) != "undefined") {_RecordType("<1162,1165,43>",(arr)); Inst29++; } } catch(e) {}
    arr[i];
try { if (Inst30 <= 1000 && typeof (proxy[i]) != "undefined") {_RecordType("<1174,1182,44>",(proxy[i])); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<1174,1179,44>",(proxy)); Inst31++; } } catch(e) {}
    proxy[i];
  }
}

try { if (Inst32 <= 1000 && typeof (testArray) != "undefined") {_RecordType("<1191,1200,48>",(testArray)); Inst32++; } } catch(e) {}
testArray([-1]);
try { if (Inst33 <= 1000 && typeof (testArray) != "undefined") {_RecordType("<1208,1217,49>",(testArray)); Inst33++; } } catch(e) {}
testArray([5, -1, 2, 99]);
try { if (Inst34 <= 1000 && typeof (testArray) != "undefined") {_RecordType("<1235,1244,50>",(testArray)); Inst34++; } } catch(e) {}
testArray([5, -1,,,, 2, 99]);
try { if (Inst35 <= 1000 && typeof (testArray) != "undefined") {_RecordType("<1265,1274,51>",(testArray)); Inst35++; } } catch(e) {}
testArray([]);
try { if (Inst36 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1280,1293,52>",(reportCompare)); Inst36++; } } catch(e) {}
reportCompare(0, 0);

