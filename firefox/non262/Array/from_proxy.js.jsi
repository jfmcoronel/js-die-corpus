var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* Any copyright is dedicated to the Public Domain.
 * http://creativecommons.org/licenses/publicdomain/ */
// Two tests involving Array.from and a Proxy.
var log = [];
try { if (Inst0 <= 1000 && typeof (log) != "undefined") {_RecordType("<159,162,4>",(log)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (LoggingProxy) != "undefined") {_RecordType("<179,191,6>",(LoggingProxy)); Inst1++; } } catch(e) {}
function LoggingProxy(target) {
try { if (Inst2 <= 1000 && typeof (target) != "undefined") {_RecordType("<192,198,6>",(target)); Inst2++; } } catch(e) {}
  var h = {
    defineProperty: function (t, id) {
try { if (Inst4 <= 1000 && typeof (t) != "undefined") {_RecordType("<244,245,8>",(t)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (id) != "undefined") {_RecordType("<247,249,8>",(id)); Inst5++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (log.push) != "undefined") {_RecordType("<259,267,9>",(log.push)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (log) != "undefined") {_RecordType("<259,262,9>",(log)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (id) != "undefined") {_RecordType("<278,280,9>",(id)); Inst8++; } } catch(e) {}
      log.push("define", id);
      return true;
    },
    has: function (t, id) {
try { if (Inst9 <= 1000 && typeof (t) != "undefined") {_RecordType("<328,329,12>",(t)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (id) != "undefined") {_RecordType("<331,333,12>",(id)); Inst10++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (log.push) != "undefined") {_RecordType("<343,351,13>",(log.push)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (log) != "undefined") {_RecordType("<343,346,13>",(log)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (id) != "undefined") {_RecordType("<359,361,13>",(id)); Inst13++; } } catch(e) {}
      log.push("has", id);
try { if (Inst14 <= 1000 && typeof (id) != "undefined") {_RecordType("<377,379,14>",(id)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (t) != "undefined") {_RecordType("<383,384,14>",(t)); Inst15++; } } catch(e) {}
      return id in t;
    },
    get: function (t, id) {
try { if (Inst16 <= 1000 && typeof (t) != "undefined") {_RecordType("<412,413,16>",(t)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (id) != "undefined") {_RecordType("<415,417,16>",(id)); Inst17++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (log.push) != "undefined") {_RecordType("<427,435,17>",(log.push)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (log) != "undefined") {_RecordType("<427,430,17>",(log)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (id) != "undefined") {_RecordType("<443,445,17>",(id)); Inst20++; } } catch(e) {}
      log.push("get", id);
try { if (Inst21 <= 1000 && typeof (t[id]) != "undefined") {_RecordType("<461,466,18>",(t[id])); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (t) != "undefined") {_RecordType("<461,462,18>",(t)); Inst22++; } } catch(e) {}
      return t[id];
    },
    set: function (t, id, v) {
try { if (Inst23 <= 1000 && typeof (t) != "undefined") {_RecordType("<494,495,20>",(t)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (id) != "undefined") {_RecordType("<497,499,20>",(id)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (v) != "undefined") {_RecordType("<501,502,20>",(v)); Inst25++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (log.push) != "undefined") {_RecordType("<512,520,21>",(log.push)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (log) != "undefined") {_RecordType("<512,515,21>",(log)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (id) != "undefined") {_RecordType("<528,530,21>",(id)); Inst28++; } } catch(e) {}
      log.push("set", id);
try { if (Inst31 <= 1000 && typeof (v) != "undefined") {_RecordType("<547,548,22>",(v)); Inst31++; } } catch(e) {}
      t[id] = v;
try { if (Inst29 <= 1000 && typeof (t[id]) != "undefined") {_RecordType("<539,544,22>",(t[id])); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (t) != "undefined") {_RecordType("<539,540,22>",(t)); Inst30++; } } catch(e) {}
      return true;
    }
  };
try { if (Inst3 <= 1000 && typeof (h) != "undefined") {_RecordType("<208,209,7>",(h)); Inst3++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<593,598,26>",(Proxy)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (target) != "undefined") {_RecordType("<599,605,26>",(target)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (h) != "undefined") {_RecordType("<613,614,26>",(h)); Inst34++; } } catch(e) {}
  return new Proxy(target || [], h);
} // When the new object created by Array.from is a Proxy,
// Array.from calls handler.defineProperty to create new elements
// but handler.set to set the length.


try { if (Inst37 <= 1000 && typeof (Array.from) != "undefined") {_RecordType("<802,812,32>",(Array.from)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (Array) != "undefined") {_RecordType("<802,807,32>",(Array)); Inst38++; } } catch(e) {}
LoggingProxy.from = Array.from;
try { if (Inst35 <= 1000 && typeof (LoggingProxy.from) != "undefined") {_RecordType("<782,799,32>",(LoggingProxy.from)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (LoggingProxy) != "undefined") {_RecordType("<782,794,32>",(LoggingProxy)); Inst36++; } } catch(e) {}
try { if (Inst39 <= 1000 && typeof (LoggingProxy.from) != "undefined") {_RecordType("<814,831,33>",(LoggingProxy.from)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (LoggingProxy) != "undefined") {_RecordType("<814,826,33>",(LoggingProxy)); Inst40++; } } catch(e) {}
LoggingProxy.from([3, 4, 5]);
try { if (Inst41 <= 1000 && typeof (log) != "undefined") {_RecordType("<844,847,34>",(log)); Inst41++; } } catch(e) {}
log;
["define", "0", "define", "1", "define", "2", "set", "length"];
// When the argument passed to Array.from is a Proxy, Array.from
// calls handler.get on it.
log = [];
try { if (Inst42 <= 1000 && typeof (log) != "undefined") {_RecordType("<1006,1009,38>",(log)); Inst42++; } } catch(e) {}
try { if (Inst43 <= 1000 && typeof (Array.from) != "undefined") {_RecordType("<1016,1026,39>",(Array.from)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (Array) != "undefined") {_RecordType("<1016,1021,39>",(Array)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (LoggingProxy) != "undefined") {_RecordType("<1031,1043,39>",(LoggingProxy)); Inst45++; } } catch(e) {}
Array.from(new LoggingProxy([3, 4, 5]));
[3, 4, 5];
try { if (Inst46 <= 1000 && typeof (log) != "undefined") {_RecordType("<1068,1071,41>",(log)); Inst46++; } } catch(e) {}
log;
try { if (Inst47 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<1081,1096,42>",(Symbol.iterator)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<1081,1087,42>",(Symbol)); Inst48++; } } catch(e) {}
["get", Symbol.iterator, "get", "length", "get", "0", "get", "length", "get", "1", "get", "length", "get", "2", "get", "length"];
// Array-like iteration only gets the length once.
log = [];
try { if (Inst49 <= 1000 && typeof (log) != "undefined") {_RecordType("<1254,1257,44>",(log)); Inst49++; } } catch(e) {}
var arr = [5, 6, 7];
try { if (Inst50 <= 1000 && typeof (arr) != "undefined") {_RecordType("<1268,1271,45>",(arr)); Inst50++; } } catch(e) {}
try { if (Inst55 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<1308,1317,46>",(undefined)); Inst55++; } } catch(e) {}
arr[Symbol.iterator] = undefined;
try { if (Inst51 <= 1000 && typeof (arr[Symbol.iterator]) != "undefined") {_RecordType("<1285,1305,46>",(arr[Symbol.iterator])); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (arr) != "undefined") {_RecordType("<1285,1288,46>",(arr)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<1289,1304,46>",(Symbol.iterator)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<1289,1295,46>",(Symbol)); Inst54++; } } catch(e) {}
try { if (Inst56 <= 1000 && typeof (Array.from) != "undefined") {_RecordType("<1319,1329,47>",(Array.from)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (Array) != "undefined") {_RecordType("<1319,1324,47>",(Array)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (LoggingProxy) != "undefined") {_RecordType("<1334,1346,47>",(LoggingProxy)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (arr) != "undefined") {_RecordType("<1347,1350,47>",(arr)); Inst59++; } } catch(e) {}
Array.from(new LoggingProxy(arr));
[5, 6, 7];
try { if (Inst60 <= 1000 && typeof (log) != "undefined") {_RecordType("<1365,1368,49>",(log)); Inst60++; } } catch(e) {}
log;
try { if (Inst61 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<1378,1393,50>",(Symbol.iterator)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<1378,1384,50>",(Symbol)); Inst62++; } } catch(e) {}
["get", Symbol.iterator, "get", "length", "get", "0", "get", "1", "get", "2"];

try { if (Inst63 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1461,1474,52>",(reportCompare)); Inst63++; } } catch(e) {}
if (typeof reportCompare === 'function') {
try { if (Inst64 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1495,1508,53>",(reportCompare)); Inst64++; } } catch(e) {}
  reportCompare(0, 0);
}

