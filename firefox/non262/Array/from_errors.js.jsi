var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
var Inst102 = 0;
var Inst103 = 0;
var Inst104 = 0;
var Inst105 = 0;
var Inst106 = 0;
var Inst107 = 0;
var Inst108 = 0;
var Inst109 = 0;
var Inst110 = 0;
var Inst111 = 0;
var Inst112 = 0;
var Inst113 = 0;
var Inst114 = 0;
var Inst115 = 0;
var Inst116 = 0;
var Inst117 = 0;
var Inst118 = 0;
var Inst119 = 0;
var Inst120 = 0;
var Inst121 = 0;
var Inst122 = 0;
var Inst123 = 0;
var Inst124 = 0;
var Inst125 = 0;
var Inst126 = 0;
var Inst127 = 0;
var Inst128 = 0;
var Inst129 = 0;
var Inst130 = 0;
var Inst131 = 0;
var Inst132 = 0;
var Inst133 = 0;
var Inst134 = 0;
var Inst135 = 0;
var Inst136 = 0;
var Inst137 = 0;
var Inst138 = 0;
var Inst139 = 0;
var Inst140 = 0;
var Inst141 = 0;
var Inst142 = 0;
var Inst143 = 0;
var Inst144 = 0;
var Inst145 = 0;
var Inst146 = 0;
var Inst147 = 0;
var Inst148 = 0;
var Inst149 = 0;
var Inst150 = 0;
var Inst151 = 0;
var Inst152 = 0;
var Inst153 = 0;
var Inst154 = 0;
var Inst155 = 0;
var Inst156 = 0;
var Inst157 = 0;
var Inst158 = 0;
var Inst159 = 0;
var Inst160 = 0;
var Inst161 = 0;
var Inst162 = 0;
var Inst163 = 0;
var Inst164 = 0;
var Inst165 = 0;
var Inst166 = 0;
var Inst167 = 0;
var Inst168 = 0;
var Inst169 = 0;
var Inst170 = 0;
var Inst171 = 0;
var Inst172 = 0;
var Inst173 = 0;
var Inst174 = 0;
var Inst175 = 0;
var Inst176 = 0;
var Inst177 = 0;
var Inst178 = 0;
var Inst179 = 0;
var Inst180 = 0;
var Inst181 = 0;
var Inst182 = 0;
var Inst183 = 0;
var Inst184 = 0;
var Inst185 = 0;
var Inst186 = 0;
var Inst187 = 0;
var Inst188 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* Any copyright is dedicated to the Public Domain.
 * http://creativecommons.org/licenses/publicdomain/ */
// Array.from throws if the argument is undefined or null.
try { if (Inst0 <= 1000 && typeof (Array.from) != "undefined") {_RecordType("<174,184,4>",(Array.from)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (Array) != "undefined") {_RecordType("<174,179,4>",(Array)); Inst1++; } } catch(e) {}
(() => Array.from())();

try { if (Inst2 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<192,201,6>",(TypeError)); Inst2++; } } catch(e) {}
TypeError;

try { if (Inst3 <= 1000 && typeof (Array.from) != "undefined") {_RecordType("<211,221,8>",(Array.from)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Array) != "undefined") {_RecordType("<211,216,8>",(Array)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<222,231,8>",(undefined)); Inst5++; } } catch(e) {}
(() => Array.from(undefined))();

try { if (Inst6 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<238,247,10>",(TypeError)); Inst6++; } } catch(e) {}
TypeError;

try { if (Inst7 <= 1000 && typeof (Array.from) != "undefined") {_RecordType("<257,267,12>",(Array.from)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Array) != "undefined") {_RecordType("<257,262,12>",(Array)); Inst8++; } } catch(e) {}
(() => Array.from(null))();

try { if (Inst9 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<279,288,14>",(TypeError)); Inst9++; } } catch(e) {}
TypeError;

// Array.from throws if an element can't be defined on the new object.
try { if (Inst10 <= 1000 && typeof (ObjectWithReadOnlyElement) != "undefined") {_RecordType("<371,396,17>",(ObjectWithReadOnlyElement)); Inst10++; } } catch(e) {}
function ObjectWithReadOnlyElement() {
try { if (Inst11 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<403,424,18>",(Object.defineProperty)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Object) != "undefined") {_RecordType("<403,409,18>",(Object)); Inst12++; } } catch(e) {}
  Object.defineProperty(this, "0", {
    value: null
  });
  this.length = 0;
try { if (Inst13 <= 1000 && typeof (this.length) != "undefined") {_RecordType("<462,473,21>",(this.length)); Inst13++; } } catch(e) {}
}

try { if (Inst16 <= 1000 && typeof (Array.from) != "undefined") {_RecordType("<515,525,24>",(Array.from)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Array) != "undefined") {_RecordType("<515,520,24>",(Array)); Inst17++; } } catch(e) {}
ObjectWithReadOnlyElement.from = Array.from;
try { if (Inst14 <= 1000 && typeof (ObjectWithReadOnlyElement.from) != "undefined") {_RecordType("<482,512,24>",(ObjectWithReadOnlyElement.from)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (ObjectWithReadOnlyElement) != "undefined") {_RecordType("<482,507,24>",(ObjectWithReadOnlyElement)); Inst15++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (ObjectWithReadOnlyElement.from) != "undefined") {_RecordType("<527,557,25>",(ObjectWithReadOnlyElement.from)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (ObjectWithReadOnlyElement) != "undefined") {_RecordType("<527,552,25>",(ObjectWithReadOnlyElement)); Inst19++; } } catch(e) {}
ObjectWithReadOnlyElement.from([]);
try { if (Inst20 <= 1000 && typeof (ObjectWithReadOnlyElement) != "undefined") {_RecordType("<567,592,26>",(ObjectWithReadOnlyElement)); Inst20++; } } catch(e) {}
new ObjectWithReadOnlyElement();

try { if (Inst21 <= 1000 && typeof (ObjectWithReadOnlyElement.from) != "undefined") {_RecordType("<604,634,28>",(ObjectWithReadOnlyElement.from)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (ObjectWithReadOnlyElement) != "undefined") {_RecordType("<604,629,28>",(ObjectWithReadOnlyElement)); Inst22++; } } catch(e) {}
(() => ObjectWithReadOnlyElement.from([1]))();

try { if (Inst23 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<645,654,30>",(TypeError)); Inst23++; } } catch(e) {}
TypeError;

// The same, but via preventExtensions.
try { if (Inst24 <= 1000 && typeof (InextensibleObject) != "undefined") {_RecordType("<706,724,33>",(InextensibleObject)); Inst24++; } } catch(e) {}
function InextensibleObject() {
try { if (Inst25 <= 1000 && typeof (Object.preventExtensions) != "undefined") {_RecordType("<731,755,34>",(Object.preventExtensions)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Object) != "undefined") {_RecordType("<731,737,34>",(Object)); Inst26++; } } catch(e) {}
  Object.preventExtensions(this);
}

try { if (Inst29 <= 1000 && typeof (Array.from) != "undefined") {_RecordType("<792,802,37>",(Array.from)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (Array) != "undefined") {_RecordType("<792,797,37>",(Array)); Inst30++; } } catch(e) {}
InextensibleObject.from = Array.from;
try { if (Inst27 <= 1000 && typeof (InextensibleObject.from) != "undefined") {_RecordType("<766,789,37>",(InextensibleObject.from)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (InextensibleObject) != "undefined") {_RecordType("<766,784,37>",(InextensibleObject)); Inst28++; } } catch(e) {}

try { if (Inst31 <= 1000 && typeof (InextensibleObject.from) != "undefined") {_RecordType("<812,835,39>",(InextensibleObject.from)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (InextensibleObject) != "undefined") {_RecordType("<812,830,39>",(InextensibleObject)); Inst32++; } } catch(e) {}
(() => InextensibleObject.from([1]))();

try { if (Inst33 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<846,855,41>",(TypeError)); Inst33++; } } catch(e) {}
TypeError;
// We will now test this property, that Array.from throws if the .length can't
// be assigned, using several different kinds of object.
var obj;
try { if (Inst34 <= 1000 && typeof (obj) != "undefined") {_RecordType("<997,1000,44>",(obj)); Inst34++; } } catch(e) {}

try { if (Inst35 <= 1000 && typeof (init) != "undefined") {_RecordType("<1012,1016,46>",(init)); Inst35++; } } catch(e) {}
function init(self) {
try { if (Inst36 <= 1000 && typeof (self) != "undefined") {_RecordType("<1017,1021,46>",(self)); Inst36++; } } catch(e) {}
try { if (Inst38 <= 1000 && typeof (self) != "undefined") {_RecordType("<1033,1037,47>",(self)); Inst38++; } } catch(e) {}
  obj = self;
try { if (Inst37 <= 1000 && typeof (obj) != "undefined") {_RecordType("<1027,1030,47>",(obj)); Inst37++; } } catch(e) {}
  self[0] = self[1] = self[2] = self[3] = 0;
try { if (Inst39 <= 1000 && typeof (self[0]) != "undefined") {_RecordType("<1041,1048,48>",(self[0])); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (self) != "undefined") {_RecordType("<1041,1045,48>",(self)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (self[1]) != "undefined") {_RecordType("<1051,1058,48>",(self[1])); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (self) != "undefined") {_RecordType("<1051,1055,48>",(self)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (self[2]) != "undefined") {_RecordType("<1061,1068,48>",(self[2])); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (self) != "undefined") {_RecordType("<1061,1065,48>",(self)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (self[3]) != "undefined") {_RecordType("<1071,1078,48>",(self[3])); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (self) != "undefined") {_RecordType("<1071,1075,48>",(self)); Inst46++; } } catch(e) {}
}

try { if (Inst47 <= 1000 && typeof (testUnsettableLength) != "undefined") {_RecordType("<1096,1116,51>",(testUnsettableLength)); Inst47++; } } catch(e) {}
function testUnsettableLength(C, Exc) {
try { if (Inst48 <= 1000 && typeof (C) != "undefined") {_RecordType("<1117,1118,51>",(C)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (Exc) != "undefined") {_RecordType("<1120,1123,51>",(Exc)); Inst49++; } } catch(e) {}
try { if (Inst50 <= 1000 && typeof (Exc) != "undefined") {_RecordType("<1133,1136,52>",(Exc)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<1141,1150,52>",(undefined)); Inst51++; } } catch(e) {}
  if (Exc === undefined) {
try { if (Inst53 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<1164,1173,53>",(TypeError)); Inst53++; } } catch(e) {}
    Exc = TypeError;
try { if (Inst52 <= 1000 && typeof (Exc) != "undefined") {_RecordType("<1158,1161,53>",(Exc)); Inst52++; } } catch(e) {}
  } // the usual expected exception type


try { if (Inst56 <= 1000 && typeof (Array.from) != "undefined") {_RecordType("<1229,1239,57>",(Array.from)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (Array) != "undefined") {_RecordType("<1229,1234,57>",(Array)); Inst57++; } } catch(e) {}
  C.from = Array.from;
try { if (Inst54 <= 1000 && typeof (C.from) != "undefined") {_RecordType("<1220,1226,57>",(C.from)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (C) != "undefined") {_RecordType("<1220,1221,57>",(C)); Inst55++; } } catch(e) {}
  obj = null;
try { if (Inst58 <= 1000 && typeof (obj) != "undefined") {_RecordType("<1243,1246,58>",(obj)); Inst58++; } } catch(e) {}

try { if (Inst59 <= 1000 && typeof (C.from) != "undefined") {_RecordType("<1265,1271,60>",(C.from)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (C) != "undefined") {_RecordType("<1265,1266,60>",(C)); Inst60++; } } catch(e) {}
  (() => C.from([]))();

try { if (Inst61 <= 1000 && typeof (Exc) != "undefined") {_RecordType("<1283,1286,62>",(Exc)); Inst61++; } } catch(e) {}
  Exc;
try { if (Inst62 <= 1000 && typeof (obj) != "undefined") {_RecordType("<1290,1293,63>",(obj)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (C) != "undefined") {_RecordType("<1305,1306,63>",(C)); Inst63++; } } catch(e) {}
  obj instanceof C;
  true;

  for (var i = 0; i < 4; i++) {
try { if (Inst64 <= 1000 && typeof (i) != "undefined") {_RecordType("<1328,1329,66>",(i)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (i) != "undefined") {_RecordType("<1335,1336,66>",(i)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (i) != "undefined") {_RecordType("<1342,1343,66>",(i)); Inst66++; } } catch(e) {}
try { if (Inst67 <= 1000 && typeof (obj[0]) != "undefined") {_RecordType("<1353,1359,67>",(obj[0])); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (obj) != "undefined") {_RecordType("<1353,1356,67>",(obj)); Inst68++; } } catch(e) {}
    obj[0];
    0;
  }

  obj = null;
try { if (Inst69 <= 1000 && typeof (obj) != "undefined") {_RecordType("<1375,1378,71>",(obj)); Inst69++; } } catch(e) {}

try { if (Inst70 <= 1000 && typeof (C.from) != "undefined") {_RecordType("<1397,1403,73>",(C.from)); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (C) != "undefined") {_RecordType("<1397,1398,73>",(C)); Inst71++; } } catch(e) {}
  (() => C.from([0, 10, 20, 30]))();

try { if (Inst72 <= 1000 && typeof (Exc) != "undefined") {_RecordType("<1428,1431,75>",(Exc)); Inst72++; } } catch(e) {}
  Exc;
try { if (Inst73 <= 1000 && typeof (obj) != "undefined") {_RecordType("<1435,1438,76>",(obj)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (C) != "undefined") {_RecordType("<1450,1451,76>",(C)); Inst74++; } } catch(e) {}
  obj instanceof C;
  true;

  for (var i = 0; i < 4; i++) {
try { if (Inst75 <= 1000 && typeof (i) != "undefined") {_RecordType("<1473,1474,79>",(i)); Inst75++; } } catch(e) {}try { if (Inst76 <= 1000 && typeof (i) != "undefined") {_RecordType("<1480,1481,79>",(i)); Inst76++; } } catch(e) {}try { if (Inst77 <= 1000 && typeof (i) != "undefined") {_RecordType("<1487,1488,79>",(i)); Inst77++; } } catch(e) {}
try { if (Inst78 <= 1000 && typeof (obj[i]) != "undefined") {_RecordType("<1498,1504,80>",(obj[i])); Inst78++; } } catch(e) {}try { if (Inst79 <= 1000 && typeof (obj) != "undefined") {_RecordType("<1498,1501,80>",(obj)); Inst79++; } } catch(e) {}
    obj[i];
try { if (Inst80 <= 1000 && typeof (i) != "undefined") {_RecordType("<1510,1511,81>",(i)); Inst80++; } } catch(e) {}
    i * 10;
  }
} // Array.from throws if the new object's .length can't be assigned because
// there is no .length and the object is inextensible.


try { if (Inst81 <= 1000 && typeof (InextensibleObject4) != "undefined") {_RecordType("<1665,1684,87>",(InextensibleObject4)); Inst81++; } } catch(e) {}
function InextensibleObject4() {
try { if (Inst82 <= 1000 && typeof (init) != "undefined") {_RecordType("<1691,1695,88>",(init)); Inst82++; } } catch(e) {}
  init(this);
try { if (Inst83 <= 1000 && typeof (Object.preventExtensions) != "undefined") {_RecordType("<1705,1729,89>",(Object.preventExtensions)); Inst83++; } } catch(e) {}try { if (Inst84 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1705,1711,89>",(Object)); Inst84++; } } catch(e) {}
  Object.preventExtensions(this);
}

try { if (Inst85 <= 1000 && typeof (testUnsettableLength) != "undefined") {_RecordType("<1740,1760,92>",(testUnsettableLength)); Inst85++; } } catch(e) {}try { if (Inst86 <= 1000 && typeof (InextensibleObject4) != "undefined") {_RecordType("<1761,1780,92>",(InextensibleObject4)); Inst86++; } } catch(e) {}
testUnsettableLength(InextensibleObject4); // Array.from throws if the new object's .length can't be assigned because it's
// read-only.

try { if (Inst87 <= 1000 && typeof (ObjectWithReadOnlyLength) != "undefined") {_RecordType("<1887,1911,95>",(ObjectWithReadOnlyLength)); Inst87++; } } catch(e) {}
function ObjectWithReadOnlyLength() {
try { if (Inst88 <= 1000 && typeof (init) != "undefined") {_RecordType("<1918,1922,96>",(init)); Inst88++; } } catch(e) {}
  init(this);
try { if (Inst89 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<1932,1953,97>",(Object.defineProperty)); Inst89++; } } catch(e) {}try { if (Inst90 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1932,1938,97>",(Object)); Inst90++; } } catch(e) {}
  Object.defineProperty(this, "length", {
    configurable: true,
    writable: false,
    value: 4
  });
}

try { if (Inst91 <= 1000 && typeof (testUnsettableLength) != "undefined") {_RecordType("<2039,2059,104>",(testUnsettableLength)); Inst91++; } } catch(e) {}try { if (Inst92 <= 1000 && typeof (ObjectWithReadOnlyLength) != "undefined") {_RecordType("<2060,2084,104>",(ObjectWithReadOnlyLength)); Inst92++; } } catch(e) {}
testUnsettableLength(ObjectWithReadOnlyLength); // The same, but using a builtin type.

try { if (Inst95 <= 1000 && typeof (Array.from) != "undefined") {_RecordType("<2145,2155,106>",(Array.from)); Inst95++; } } catch(e) {}try { if (Inst96 <= 1000 && typeof (Array) != "undefined") {_RecordType("<2145,2150,106>",(Array)); Inst96++; } } catch(e) {}
Uint8Array.from = Array.from;
try { if (Inst93 <= 1000 && typeof (Uint8Array.from) != "undefined") {_RecordType("<2127,2142,106>",(Uint8Array.from)); Inst93++; } } catch(e) {}try { if (Inst94 <= 1000 && typeof (Uint8Array) != "undefined") {_RecordType("<2127,2137,106>",(Uint8Array)); Inst94++; } } catch(e) {}

try { if (Inst97 <= 1000 && typeof (Uint8Array.from) != "undefined") {_RecordType("<2165,2180,108>",(Uint8Array.from)); Inst97++; } } catch(e) {}try { if (Inst98 <= 1000 && typeof (Uint8Array) != "undefined") {_RecordType("<2165,2175,108>",(Uint8Array)); Inst98++; } } catch(e) {}
(() => Uint8Array.from([]))();

try { if (Inst99 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<2190,2199,110>",(TypeError)); Inst99++; } } catch(e) {}
TypeError;

// Array.from throws if the new object's .length can't be assigned because it
// inherits a readonly .length along the prototype chain.
try { if (Inst100 <= 1000 && typeof (ObjectWithInheritedReadOnlyLength) != "undefined") {_RecordType("<2347,2380,114>",(ObjectWithInheritedReadOnlyLength)); Inst100++; } } catch(e) {}
function ObjectWithInheritedReadOnlyLength() {
try { if (Inst101 <= 1000 && typeof (init) != "undefined") {_RecordType("<2387,2391,115>",(init)); Inst101++; } } catch(e) {}
  init(this);
}

try { if (Inst102 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<2402,2423,118>",(Object.defineProperty)); Inst102++; } } catch(e) {}try { if (Inst103 <= 1000 && typeof (Object) != "undefined") {_RecordType("<2402,2408,118>",(Object)); Inst103++; } } catch(e) {}try { if (Inst104 <= 1000 && typeof (ObjectWithInheritedReadOnlyLength.prototype) != "undefined") {_RecordType("<2424,2467,118>",(ObjectWithInheritedReadOnlyLength.prototype)); Inst104++; } } catch(e) {}try { if (Inst105 <= 1000 && typeof (ObjectWithInheritedReadOnlyLength) != "undefined") {_RecordType("<2424,2457,118>",(ObjectWithInheritedReadOnlyLength)); Inst105++; } } catch(e) {}
Object.defineProperty(ObjectWithInheritedReadOnlyLength.prototype, "length", {
  configurable: true,
  writable: false,
  value: 4
});
try { if (Inst106 <= 1000 && typeof (testUnsettableLength) != "undefined") {_RecordType("<2537,2557,123>",(testUnsettableLength)); Inst106++; } } catch(e) {}try { if (Inst107 <= 1000 && typeof (ObjectWithInheritedReadOnlyLength) != "undefined") {_RecordType("<2558,2591,123>",(ObjectWithInheritedReadOnlyLength)); Inst107++; } } catch(e) {}
testUnsettableLength(ObjectWithInheritedReadOnlyLength); // The same, but using an object with a .length getter but no setter.

try { if (Inst108 <= 1000 && typeof (ObjectWithGetterOnlyLength) != "undefined") {_RecordType("<2674,2700,125>",(ObjectWithGetterOnlyLength)); Inst108++; } } catch(e) {}
function ObjectWithGetterOnlyLength() {
try { if (Inst109 <= 1000 && typeof (init) != "undefined") {_RecordType("<2707,2711,126>",(init)); Inst109++; } } catch(e) {}
  init(this);
try { if (Inst110 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<2721,2742,127>",(Object.defineProperty)); Inst110++; } } catch(e) {}try { if (Inst111 <= 1000 && typeof (Object) != "undefined") {_RecordType("<2721,2727,127>",(Object)); Inst111++; } } catch(e) {}
  Object.defineProperty(this, "length", {
    configurable: true,
    get: () => 4
  });
}

try { if (Inst112 <= 1000 && typeof (testUnsettableLength) != "undefined") {_RecordType("<2811,2831,133>",(testUnsettableLength)); Inst112++; } } catch(e) {}try { if (Inst113 <= 1000 && typeof (ObjectWithGetterOnlyLength) != "undefined") {_RecordType("<2832,2858,133>",(ObjectWithGetterOnlyLength)); Inst113++; } } catch(e) {}
testUnsettableLength(ObjectWithGetterOnlyLength); // The same, but with a setter that throws.

try { if (Inst114 <= 1000 && typeof (ObjectWithThrowingLengthSetter) != "undefined") {_RecordType("<2915,2945,135>",(ObjectWithThrowingLengthSetter)); Inst114++; } } catch(e) {}
function ObjectWithThrowingLengthSetter() {
try { if (Inst115 <= 1000 && typeof (init) != "undefined") {_RecordType("<2952,2956,136>",(init)); Inst115++; } } catch(e) {}
  init(this);
try { if (Inst116 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<2966,2987,137>",(Object.defineProperty)); Inst116++; } } catch(e) {}try { if (Inst117 <= 1000 && typeof (Object) != "undefined") {_RecordType("<2966,2972,137>",(Object)); Inst117++; } } catch(e) {}
  Object.defineProperty(this, "length", {
    configurable: true,
    get: () => 4,
    set: () => {
try { if (Inst118 <= 1000 && typeof (RangeError) != "undefined") {_RecordType("<3081,3091,141>",(RangeError)); Inst118++; } } catch(e) {}
      throw new RangeError("surprise!");
    }
  });
}

try { if (Inst119 <= 1000 && typeof (testUnsettableLength) != "undefined") {_RecordType("<3121,3141,146>",(testUnsettableLength)); Inst119++; } } catch(e) {}try { if (Inst120 <= 1000 && typeof (ObjectWithThrowingLengthSetter) != "undefined") {_RecordType("<3142,3172,146>",(ObjectWithThrowingLengthSetter)); Inst120++; } } catch(e) {}try { if (Inst121 <= 1000 && typeof (RangeError) != "undefined") {_RecordType("<3174,3184,146>",(RangeError)); Inst121++; } } catch(e) {}
testUnsettableLength(ObjectWithThrowingLengthSetter, RangeError); // Array.from throws if mapfn is neither callable nor undefined.

try { if (Inst122 <= 1000 && typeof (Array.from) != "undefined") {_RecordType("<3260,3270,148>",(Array.from)); Inst122++; } } catch(e) {}try { if (Inst123 <= 1000 && typeof (Array) != "undefined") {_RecordType("<3260,3265,148>",(Array)); Inst123++; } } catch(e) {}
(() => Array.from([3, 4, 5], {}))();

try { if (Inst124 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<3291,3300,150>",(TypeError)); Inst124++; } } catch(e) {}
TypeError;

try { if (Inst125 <= 1000 && typeof (Array.from) != "undefined") {_RecordType("<3310,3320,152>",(Array.from)); Inst125++; } } catch(e) {}try { if (Inst126 <= 1000 && typeof (Array) != "undefined") {_RecordType("<3310,3315,152>",(Array)); Inst126++; } } catch(e) {}
(() => Array.from([3, 4, 5], "also not a function"))();

try { if (Inst127 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<3360,3369,154>",(TypeError)); Inst127++; } } catch(e) {}
TypeError;

try { if (Inst128 <= 1000 && typeof (Array.from) != "undefined") {_RecordType("<3379,3389,156>",(Array.from)); Inst128++; } } catch(e) {}try { if (Inst129 <= 1000 && typeof (Array) != "undefined") {_RecordType("<3379,3384,156>",(Array)); Inst129++; } } catch(e) {}
(() => Array.from([3, 4, 5], null))();

try { if (Inst130 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<3412,3421,158>",(TypeError)); Inst130++; } } catch(e) {}
TypeError;

try { if (Inst131 <= 1000 && typeof (Array.from) != "undefined") {_RecordType("<3431,3441,160>",(Array.from)); Inst131++; } } catch(e) {}try { if (Inst132 <= 1000 && typeof (Array) != "undefined") {_RecordType("<3431,3436,160>",(Array)); Inst132++; } } catch(e) {}try { if (Inst133 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<3446,3450,160>",(JSON)); Inst133++; } } catch(e) {}
(() => Array.from([], JSON))();

try { if (Inst134 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<3457,3466,162>",(TypeError)); Inst134++; } } catch(e) {}
TypeError;
// If mapfn is not undefined and not callable, the error happens before anything else.
// Before calling the constructor, before touching the arrayLike.
var log = "";
try { if (Inst135 <= 1000 && typeof (log) != "undefined") {_RecordType("<3625,3628,165>",(log)); Inst135++; } } catch(e) {}

try { if (Inst136 <= 1000 && typeof (C) != "undefined") {_RecordType("<3645,3646,167>",(C)); Inst136++; } } catch(e) {}
function C() {
  log += "C";
try { if (Inst137 <= 1000 && typeof (log) != "undefined") {_RecordType("<3653,3656,168>",(log)); Inst137++; } } catch(e) {}
  obj = this;
try { if (Inst138 <= 1000 && typeof (obj) != "undefined") {_RecordType("<3667,3670,169>",(obj)); Inst138++; } } catch(e) {}
}

try { if (Inst140 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<3694,3699,172>",(Proxy)); Inst140++; } } catch(e) {}
var p = new Proxy({}, {
  has: function () {
    log += "1";
try { if (Inst141 <= 1000 && typeof (log) != "undefined") {_RecordType("<3731,3734,174>",(log)); Inst141++; } } catch(e) {}
  },
  get: function () {
    log += "2";
try { if (Inst142 <= 1000 && typeof (log) != "undefined") {_RecordType("<3773,3776,177>",(log)); Inst142++; } } catch(e) {}
  },
  getOwnPropertyDescriptor: function () {
    log += "3";
try { if (Inst143 <= 1000 && typeof (log) != "undefined") {_RecordType("<3836,3839,180>",(log)); Inst143++; } } catch(e) {}
  }
});
try { if (Inst139 <= 1000 && typeof (p) != "undefined") {_RecordType("<3686,3687,172>",(p)); Inst139++; } } catch(e) {}

try { if (Inst144 <= 1000 && typeof (Array.from.call) != "undefined") {_RecordType("<3864,3879,184>",(Array.from.call)); Inst144++; } } catch(e) {}try { if (Inst145 <= 1000 && typeof (Array.from) != "undefined") {_RecordType("<3864,3874,184>",(Array.from)); Inst145++; } } catch(e) {}try { if (Inst146 <= 1000 && typeof (Array) != "undefined") {_RecordType("<3864,3869,184>",(Array)); Inst146++; } } catch(e) {}try { if (Inst147 <= 1000 && typeof (C) != "undefined") {_RecordType("<3880,3881,184>",(C)); Inst147++; } } catch(e) {}try { if (Inst148 <= 1000 && typeof (p) != "undefined") {_RecordType("<3883,3884,184>",(p)); Inst148++; } } catch(e) {}
(() => Array.from.call(C, p, {}))();

try { if (Inst149 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<3895,3904,186>",(TypeError)); Inst149++; } } catch(e) {}
TypeError;
try { if (Inst150 <= 1000 && typeof (log) != "undefined") {_RecordType("<3906,3909,187>",(log)); Inst150++; } } catch(e) {}
log;
"";
// If mapfn throws, the new object has already been created.
try { if (Inst152 <= 1000 && typeof (length) != "undefined") {_RecordType("<3999,4005,191>",(length)); Inst152++; } } catch(e) {}
var arrayish = {
  get length() {
    log += "l";
try { if (Inst153 <= 1000 && typeof (log) != "undefined") {_RecordType("<4014,4017,192>",(log)); Inst153++; } } catch(e) {}
    return 1;
  },

  get 0() {
    log += "0";
try { if (Inst154 <= 1000 && typeof (log) != "undefined") {_RecordType("<4062,4065,197>",(log)); Inst154++; } } catch(e) {}
    return "q";
  }

};
try { if (Inst151 <= 1000 && typeof (arrayish) != "undefined") {_RecordType("<3980,3988,190>",(arrayish)); Inst151++; } } catch(e) {}
log = "";
try { if (Inst155 <= 1000 && typeof (log) != "undefined") {_RecordType("<4098,4101,202>",(log)); Inst155++; } } catch(e) {}
var exc = {
  surprise: "ponies"
};
try { if (Inst156 <= 1000 && typeof (exc) != "undefined") {_RecordType("<4112,4115,203>",(exc)); Inst156++; } } catch(e) {}

try { if (Inst157 <= 1000 && typeof (Array.from.call) != "undefined") {_RecordType("<4152,4167,207>",(Array.from.call)); Inst157++; } } catch(e) {}try { if (Inst158 <= 1000 && typeof (Array.from) != "undefined") {_RecordType("<4152,4162,207>",(Array.from)); Inst158++; } } catch(e) {}try { if (Inst159 <= 1000 && typeof (Array) != "undefined") {_RecordType("<4152,4157,207>",(Array)); Inst159++; } } catch(e) {}try { if (Inst160 <= 1000 && typeof (C) != "undefined") {_RecordType("<4168,4169,207>",(C)); Inst160++; } } catch(e) {}try { if (Inst161 <= 1000 && typeof (arrayish) != "undefined") {_RecordType("<4171,4179,207>",(arrayish)); Inst161++; } } catch(e) {}
(() => Array.from.call(C, arrayish, () => {
try { if (Inst162 <= 1000 && typeof (exc) != "undefined") {_RecordType("<4197,4200,208>",(exc)); Inst162++; } } catch(e) {}
  throw exc;
}))();

try { if (Inst163 <= 1000 && typeof (exc) != "undefined") {_RecordType("<4210,4213,211>",(exc)); Inst163++; } } catch(e) {}
exc;
try { if (Inst164 <= 1000 && typeof (log) != "undefined") {_RecordType("<4215,4218,212>",(log)); Inst164++; } } catch(e) {}
log;
"lC0";
try { if (Inst165 <= 1000 && typeof (obj) != "undefined") {_RecordType("<4227,4230,214>",(obj)); Inst165++; } } catch(e) {}try { if (Inst166 <= 1000 && typeof (C) != "undefined") {_RecordType("<4242,4243,214>",(C)); Inst166++; } } catch(e) {}
obj instanceof C;
true;

// It's a TypeError if the @@iterator property is a primitive (except null and undefined).
for (var primitive of ["foo", 17, Symbol(), true]) {
try { if (Inst167 <= 1000 && typeof (primitive) != "undefined") {_RecordType("<4352,4361,218>",(primitive)); Inst167++; } } catch(e) {}try { if (Inst168 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<4377,4383,218>",(Symbol)); Inst168++; } } catch(e) {}
try { if (Inst169 <= 1000 && typeof (Array.from) != "undefined") {_RecordType("<4405,4415,219>",(Array.from)); Inst169++; } } catch(e) {}try { if (Inst170 <= 1000 && typeof (Array) != "undefined") {_RecordType("<4405,4410,219>",(Array)); Inst170++; } } catch(e) {}try { if (Inst171 <= 1000 && typeof (primitive) != "undefined") {_RecordType("<4441,4450,220>",(primitive)); Inst171++; } } catch(e) {}
  (() => Array.from({
    [Symbol.iterator]: primitive
  }))();

try { if (Inst172 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<4463,4472,223>",(TypeError)); Inst172++; } } catch(e) {}
  TypeError;
}

try { if (Inst173 <= 1000 && typeof (Array.from) != "undefined") {_RecordType("<4477,4487,226>",(Array.from)); Inst173++; } } catch(e) {}try { if (Inst174 <= 1000 && typeof (Array) != "undefined") {_RecordType("<4477,4482,226>",(Array)); Inst174++; } } catch(e) {}
Array.from({
  [Symbol.iterator]: null
});
[];
try { if (Inst175 <= 1000 && typeof (Array.from) != "undefined") {_RecordType("<4524,4534,230>",(Array.from)); Inst175++; } } catch(e) {}try { if (Inst176 <= 1000 && typeof (Array) != "undefined") {_RecordType("<4524,4529,230>",(Array)); Inst176++; } } catch(e) {}try { if (Inst177 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<4558,4567,231>",(undefined)); Inst177++; } } catch(e) {}
Array.from({
  [Symbol.iterator]: undefined
});
[];

// It's a TypeError if the iterator's .next() method returns a primitive.
for (var primitive of [undefined, null, 17]) {
try { if (Inst178 <= 1000 && typeof (primitive) != "undefined") {_RecordType("<4660,4669,236>",(primitive)); Inst178++; } } catch(e) {}try { if (Inst179 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<4674,4683,236>",(undefined)); Inst179++; } } catch(e) {}
try { if (Inst180 <= 1000 && typeof (Array.from) != "undefined") {_RecordType("<4707,4717,237>",(Array.from)); Inst180++; } } catch(e) {}try { if (Inst181 <= 1000 && typeof (Array) != "undefined") {_RecordType("<4707,4712,237>",(Array)); Inst181++; } } catch(e) {}try { if (Inst182 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<4725,4740,238>",(Symbol.iterator)); Inst182++; } } catch(e) {}try { if (Inst183 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<4725,4731,238>",(Symbol)); Inst183++; } } catch(e) {}
  (() => Array.from({
    [Symbol.iterator]() {
try { if (Inst184 <= 1000 && typeof (next) != "undefined") {_RecordType("<4769,4773,240>",(next)); Inst184++; } } catch(e) {}
      return {
        next() {
try { if (Inst185 <= 1000 && typeof (primitive) != "undefined") {_RecordType("<4795,4804,241>",(primitive)); Inst185++; } } catch(e) {}
          return primitive;
        }

      };
    }

  }))();

try { if (Inst186 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<4845,4854,249>",(TypeError)); Inst186++; } } catch(e) {}
  TypeError;
}

try { if (Inst187 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<4870,4883,252>",(reportCompare)); Inst187++; } } catch(e) {}
if (typeof reportCompare === 'function') {
try { if (Inst188 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<4904,4917,253>",(reportCompare)); Inst188++; } } catch(e) {}
  reportCompare(0, 0);
}

