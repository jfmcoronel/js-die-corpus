var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* Any copyright is dedicated to the Public Domain.
 * http://creativecommons.org/licenses/publicdomain/ */
// Array.from calls a length setter if present.
var hits = 0;
try { if (Inst0 <= 1000 && typeof (hits) != "undefined") {_RecordType("<160,164,4>",(hits)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (C) != "undefined") {_RecordType("<180,181,6>",(C)); Inst1++; } } catch(e) {}
function C() {
  ;
}

try { if (Inst4 <= 1000 && typeof (length) != "undefined") {_RecordType("<215,221,11>",(length)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (v) != "undefined") {_RecordType("<222,223,11>",(v)); Inst5++; } } catch(e) {}
C.prototype = {
  set length(v) {
try { if (Inst6 <= 1000 && typeof (hits) != "undefined") {_RecordType("<231,235,12>",(hits)); Inst6++; } } catch(e) {}
    hits++;
  }

};
try { if (Inst2 <= 1000 && typeof (C.prototype) != "undefined") {_RecordType("<193,204,10>",(C.prototype)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (C) != "undefined") {_RecordType("<193,194,10>",(C)); Inst3++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (Array.from) != "undefined") {_RecordType("<256,266,16>",(Array.from)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Array) != "undefined") {_RecordType("<256,261,16>",(Array)); Inst10++; } } catch(e) {}
C.from = Array.from;
try { if (Inst7 <= 1000 && typeof (C.from) != "undefined") {_RecordType("<247,253,16>",(C.from)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (C) != "undefined") {_RecordType("<247,248,16>",(C)); Inst8++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (C.from) != "undefined") {_RecordType("<279,285,17>",(C.from)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (C) != "undefined") {_RecordType("<279,280,17>",(C)); Inst13++; } } catch(e) {}
var copy = C.from(["A", "B"]);
try { if (Inst11 <= 1000 && typeof (copy) != "undefined") {_RecordType("<272,276,17>",(copy)); Inst11++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (hits) != "undefined") {_RecordType("<299,303,18>",(hits)); Inst14++; } } catch(e) {}
hits;
1;

try { if (Inst15 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<320,333,21>",(reportCompare)); Inst15++; } } catch(e) {}
if (typeof reportCompare === 'function') {
try { if (Inst16 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<354,367,22>",(reportCompare)); Inst16++; } } catch(e) {}
  reportCompare(0, 0);
}

