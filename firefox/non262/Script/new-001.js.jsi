var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* -*- indent-tabs-mode: nil; js-indent-level: 2 -*- */

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

/**
   File Name:          new-001.js
   Section:
   Description:

   http://scopus.mcom.com/bugsplat/show_bug.cgi?id=76103

   Author:             christine@netscape.com
   Date:               12 november 1997
*/
var SECTION = "new-001";
try { if (Inst0 <= 1000 && typeof (SECTION) != "undefined") {_RecordType("<481,488,17>",(SECTION)); Inst0++; } } catch(e) {}
var TITLE = "new-001";
try { if (Inst1 <= 1000 && typeof (TITLE) != "undefined") {_RecordType("<506,511,18>",(TITLE)); Inst1++; } } catch(e) {}
var BUGNUMBER = "31567";
try { if (Inst2 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<529,538,19>",(BUGNUMBER)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (printBugNumber) != "undefined") {_RecordType("<550,564,20>",(printBugNumber)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<565,574,20>",(BUGNUMBER)); Inst4++; } } catch(e) {}
printBugNumber(BUGNUMBER);
try { if (Inst5 <= 1000 && typeof (writeHeaderToLog) != "undefined") {_RecordType("<577,593,21>",(writeHeaderToLog)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (SECTION) != "undefined") {_RecordType("<594,601,21>",(SECTION)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (TITLE) != "undefined") {_RecordType("<610,615,21>",(TITLE)); Inst7++; } } catch(e) {}
writeHeaderToLog(SECTION + " " + TITLE);

try { if (Inst8 <= 1000 && typeof (Test_One) != "undefined") {_RecordType("<628,636,23>",(Test_One)); Inst8++; } } catch(e) {}
function Test_One(x) {
try { if (Inst9 <= 1000 && typeof (x) != "undefined") {_RecordType("<637,638,23>",(x)); Inst9++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (x) != "undefined") {_RecordType("<653,654,24>",(x)); Inst11++; } } catch(e) {}
  this.v = x + 1;
try { if (Inst10 <= 1000 && typeof (this.v) != "undefined") {_RecordType("<644,650,24>",(this.v)); Inst10++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (x) != "undefined") {_RecordType("<669,670,25>",(x)); Inst12++; } } catch(e) {}
  return x * 2;
}

try { if (Inst13 <= 1000 && typeof (Test_Two) != "undefined") {_RecordType("<688,696,28>",(Test_Two)); Inst13++; } } catch(e) {}
function Test_Two(x, y) {
try { if (Inst14 <= 1000 && typeof (x) != "undefined") {_RecordType("<697,698,28>",(x)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (y) != "undefined") {_RecordType("<700,701,28>",(y)); Inst15++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (x) != "undefined") {_RecordType("<716,717,29>",(x)); Inst17++; } } catch(e) {}
  this.v = x;
try { if (Inst16 <= 1000 && typeof (this.v) != "undefined") {_RecordType("<707,713,29>",(this.v)); Inst16++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (y) != "undefined") {_RecordType("<728,729,30>",(y)); Inst18++; } } catch(e) {}
  return y;
}

try { if (Inst19 <= 1000 && typeof (TestCase) != "undefined") {_RecordType("<738,746,33>",(TestCase)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (Test_One) != "undefined") {_RecordType("<767,775,33>",(Test_One)); Inst20++; } } catch(e) {}
new TestCase("Test_One(18)", 36, Test_One(18));
try { if (Inst21 <= 1000 && typeof (TestCase) != "undefined") {_RecordType("<786,794,34>",(TestCase)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Test_One) != "undefined") {_RecordType("<838,846,34>",(Test_One)); Inst22++; } } catch(e) {}
new TestCase("new Test_One(18)", "[object Object]", new Test_One(18) + "");
try { if (Inst23 <= 1000 && typeof (TestCase) != "undefined") {_RecordType("<862,870,35>",(TestCase)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (new Test_One(18).v) != "undefined") {_RecordType("<897,915,35>",(new Test_One(18).v)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Test_One) != "undefined") {_RecordType("<901,909,35>",(Test_One)); Inst25++; } } catch(e) {}
new TestCase("new Test_One(18).v", 19, new Test_One(18).v);
try { if (Inst26 <= 1000 && typeof (TestCase) != "undefined") {_RecordType("<922,930,36>",(TestCase)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (Test_Two) != "undefined") {_RecordType("<951,959,36>",(Test_Two)); Inst27++; } } catch(e) {}
new TestCase("Test_Two(2,7)", 7, Test_Two(2, 7));
try { if (Inst28 <= 1000 && typeof (TestCase) != "undefined") {_RecordType("<972,980,37>",(TestCase)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (Test_Two) != "undefined") {_RecordType("<1025,1033,37>",(Test_Two)); Inst29++; } } catch(e) {}
new TestCase("new Test_Two(2,7)", "[object Object]", new Test_Two(2, 7) + "");
try { if (Inst30 <= 1000 && typeof (TestCase) != "undefined") {_RecordType("<1051,1059,38>",(TestCase)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (new Test_Two(2, 7).v) != "undefined") {_RecordType("<1086,1106,38>",(new Test_Two(2, 7).v)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (Test_Two) != "undefined") {_RecordType("<1090,1098,38>",(Test_Two)); Inst32++; } } catch(e) {}
new TestCase("new Test_Two(2,7).v", 2, new Test_Two(2, 7).v);
try { if (Inst33 <= 1000 && typeof (TestCase) != "undefined") {_RecordType("<1113,1121,39>",(TestCase)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (Function) != "undefined") {_RecordType("<1175,1183,39>",(Function)); Inst34++; } } catch(e) {}
new TestCase("new (Function)(\"x\", \"return x+3\")(5,6)", 8, new Function("x", "return x+3")(5, 6));
try { if (Inst35 <= 1000 && typeof (TestCase) != "undefined") {_RecordType("<1215,1223,40>",(TestCase)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (new Test_Two(String, 2).v) != "undefined") {_RecordType("<1273,1298,40>",(new Test_Two(String, 2).v)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (Test_Two) != "undefined") {_RecordType("<1277,1285,40>",(Test_Two)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (String) != "undefined") {_RecordType("<1286,1292,40>",(String)); Inst38++; } } catch(e) {}
new TestCase("new new Test_Two(String, 2).v(0123)", "83", new new Test_Two(String, 2).v(0123) + "");
try { if (Inst39 <= 1000 && typeof (TestCase) != "undefined") {_RecordType("<1316,1324,41>",(TestCase)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (new new Test_Two(String, 2).v(0123).length) != "undefined") {_RecordType("<1374,1416,41>",(new new Test_Two(String, 2).v(0123).length)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (new Test_Two(String, 2).v) != "undefined") {_RecordType("<1378,1403,41>",(new Test_Two(String, 2).v)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (Test_Two) != "undefined") {_RecordType("<1382,1390,41>",(Test_Two)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (String) != "undefined") {_RecordType("<1391,1397,41>",(String)); Inst43++; } } catch(e) {}
new TestCase("new new Test_Two(String, 2).v(0123).length", 2, new new Test_Two(String, 2).v(0123).length);
try { if (Inst44 <= 1000 && typeof (test) != "undefined") {_RecordType("<1419,1423,42>",(test)); Inst44++; } } catch(e) {}
test();

