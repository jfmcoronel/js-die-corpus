var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
var BUGNUMBER = 1185106;
try { if (Inst0 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<4,13,1>",(BUGNUMBER)); Inst0++; } } catch(e) {}
var summary = "Bound names of async functions";
try { if (Inst1 <= 1000 && typeof (summary) != "undefined") {_RecordType("<29,36,2>",(summary)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (print) != "undefined") {_RecordType("<73,78,3>",(print)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<79,88,3>",(BUGNUMBER)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (summary) != "undefined") {_RecordType("<98,105,3>",(summary)); Inst4++; } } catch(e) {}
print(BUGNUMBER + ": " + summary);

try { if (Inst5 <= 1000 && typeof (test) != "undefined") {_RecordType("<124,128,5>",(test)); Inst5++; } } catch(e) {}
async function test() {
  ;
}

try { if (Inst6 <= 1000 && typeof (test.name) != "undefined") {_RecordType("<140,149,9>",(test.name)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (test) != "undefined") {_RecordType("<140,144,9>",(test)); Inst7++; } } catch(e) {}
test.name;
"test";

try { if (Inst9 <= 1000 && typeof (test2) != "undefined") {_RecordType("<187,192,12>",(test2)); Inst9++; } } catch(e) {}
var test2 = async function test2() {
  ;
};
try { if (Inst8 <= 1000 && typeof (test2) != "undefined") {_RecordType("<164,169,12>",(test2)); Inst8++; } } catch(e) {}

try { if (Inst10 <= 1000 && typeof (test2.name) != "undefined") {_RecordType("<205,215,16>",(test2.name)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (test2) != "undefined") {_RecordType("<205,210,16>",(test2)); Inst11++; } } catch(e) {}
test2.name;
"test2";

var anon = async function () {
  ;
};
try { if (Inst12 <= 1000 && typeof (anon) != "undefined") {_RecordType("<231,235,19>",(anon)); Inst12++; } } catch(e) {}

try { if (Inst13 <= 1000 && typeof (anon.name) != "undefined") {_RecordType("<266,275,23>",(anon.name)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (anon) != "undefined") {_RecordType("<266,270,23>",(anon)); Inst14++; } } catch(e) {}
anon.name;
"anon";

try { if (Inst15 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<297,304,26>",(Reflect)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Reflect.parse) != "undefined") {_RecordType("<324,337,26>",(Reflect.parse)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<324,331,26>",(Reflect)); Inst17++; } } catch(e) {}
if (typeof Reflect !== "undefined" && Reflect.parse) {
try { if (Inst19 <= 1000 && typeof (Reflect.parse) != "undefined") {_RecordType("<354,367,27>",(Reflect.parse)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<354,361,27>",(Reflect)); Inst20++; } } catch(e) {}
  var tree = Reflect.parse("export default async function() {}", {
    target: "module"
  });
try { if (Inst18 <= 1000 && typeof (tree) != "undefined") {_RecordType("<347,351,27>",(tree)); Inst18++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (tree.body[0].declaration.id.name) != "undefined") {_RecordType("<437,469,30>",(tree.body[0].declaration.id.name)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (tree.body[0].declaration.id) != "undefined") {_RecordType("<437,464,30>",(tree.body[0].declaration.id)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (tree.body[0].declaration) != "undefined") {_RecordType("<437,461,30>",(tree.body[0].declaration)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (tree.body[0]) != "undefined") {_RecordType("<437,449,30>",(tree.body[0])); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (tree.body) != "undefined") {_RecordType("<437,446,30>",(tree.body)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (tree) != "undefined") {_RecordType("<437,441,30>",(tree)); Inst26++; } } catch(e) {}
  tree.body[0].declaration.id.name;
  "default";
}

try { if (Inst27 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<498,511,34>",(reportCompare)); Inst27++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst28 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<532,545,35>",(reportCompare)); Inst28++; } } catch(e) {}
  reportCompare(true, true);
}

