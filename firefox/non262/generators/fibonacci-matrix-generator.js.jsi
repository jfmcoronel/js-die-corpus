var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* -*- indent-tabs-mode: nil; js-indent-level: 2 -*- */

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
//-----------------------------------------------------------------------------
var summary = "Fibonacci generator by matrix multiplication";
try { if (Inst0 <= 1000 && typeof (summary) != "undefined") {_RecordType("<346,353,7>",(summary)); Inst0++; } } catch(e) {}
var actual, expect;
try { if (Inst1 <= 1000 && typeof (actual) != "undefined") {_RecordType("<408,414,8>",(actual)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (expect) != "undefined") {_RecordType("<416,422,8>",(expect)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (printStatus) != "undefined") {_RecordType("<424,435,9>",(printStatus)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (summary) != "undefined") {_RecordType("<436,443,9>",(summary)); Inst4++; } } catch(e) {}
printStatus(summary);
/**************
 * BEGIN TEST *
 **************/

try { if (Inst5 <= 1000 && typeof (fib) != "undefined") {_RecordType("<506,509,14>",(fib)); Inst5++; } } catch(e) {}
function* fib() {
  var init = [1, 0];
try { if (Inst6 <= 1000 && typeof (init) != "undefined") {_RecordType("<520,524,15>",(init)); Inst6++; } } catch(e) {}
  var mx = [[1, 1], [1, 0]];
try { if (Inst7 <= 1000 && typeof (mx) != "undefined") {_RecordType("<541,543,16>",(mx)); Inst7++; } } catch(e) {}

  while (true) {
try { if (Inst8 <= 1000 && typeof (init[1]) != "undefined") {_RecordType("<592,599,19>",(init[1])); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (init) != "undefined") {_RecordType("<592,596,19>",(init)); Inst9++; } } catch(e) {}
    yield init[1];
    var tmp = [,];
try { if (Inst10 <= 1000 && typeof (tmp) != "undefined") {_RecordType("<609,612,20>",(tmp)); Inst10++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (mx[0][0]) != "undefined") {_RecordType("<633,641,21>",(mx[0][0])); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (mx[0]) != "undefined") {_RecordType("<633,638,21>",(mx[0])); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (mx) != "undefined") {_RecordType("<633,635,21>",(mx)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (init[0]) != "undefined") {_RecordType("<644,651,21>",(init[0])); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (init) != "undefined") {_RecordType("<644,648,21>",(init)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (mx[0][1]) != "undefined") {_RecordType("<654,662,21>",(mx[0][1])); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (mx[0]) != "undefined") {_RecordType("<654,659,21>",(mx[0])); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (mx) != "undefined") {_RecordType("<654,656,21>",(mx)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (init[1]) != "undefined") {_RecordType("<665,672,21>",(init[1])); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (init) != "undefined") {_RecordType("<665,669,21>",(init)); Inst22++; } } catch(e) {}
    tmp[0] = mx[0][0] * init[0] + mx[0][1] * init[1];
try { if (Inst11 <= 1000 && typeof (tmp[0]) != "undefined") {_RecordType("<624,630,21>",(tmp[0])); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (tmp) != "undefined") {_RecordType("<624,627,21>",(tmp)); Inst12++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (mx[1][0]) != "undefined") {_RecordType("<687,695,22>",(mx[1][0])); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (mx[1]) != "undefined") {_RecordType("<687,692,22>",(mx[1])); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (mx) != "undefined") {_RecordType("<687,689,22>",(mx)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (init[0]) != "undefined") {_RecordType("<698,705,22>",(init[0])); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (init) != "undefined") {_RecordType("<698,702,22>",(init)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (mx[1][1]) != "undefined") {_RecordType("<708,716,22>",(mx[1][1])); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (mx[1]) != "undefined") {_RecordType("<708,713,22>",(mx[1])); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (mx) != "undefined") {_RecordType("<708,710,22>",(mx)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (init[1]) != "undefined") {_RecordType("<719,726,22>",(init[1])); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (init) != "undefined") {_RecordType("<719,723,22>",(init)); Inst34++; } } catch(e) {}
    tmp[1] = mx[1][0] * init[0] + mx[1][1] * init[1];
try { if (Inst23 <= 1000 && typeof (tmp[1]) != "undefined") {_RecordType("<678,684,22>",(tmp[1])); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (tmp) != "undefined") {_RecordType("<678,681,22>",(tmp)); Inst24++; } } catch(e) {}
try { if (Inst36 <= 1000 && typeof (tmp) != "undefined") {_RecordType("<739,742,23>",(tmp)); Inst36++; } } catch(e) {}
    init = tmp;
try { if (Inst35 <= 1000 && typeof (init) != "undefined") {_RecordType("<732,736,23>",(init)); Inst35++; } } catch(e) {}
  }
}

var failed = false;
try { if (Inst37 <= 1000 && typeof (failed) != "undefined") {_RecordType("<755,761,27>",(failed)); Inst37++; } } catch(e) {}
try { if (Inst39 <= 1000 && typeof (fib) != "undefined") {_RecordType("<780,783,28>",(fib)); Inst39++; } } catch(e) {}
var it = fib();
try { if (Inst38 <= 1000 && typeof (it) != "undefined") {_RecordType("<775,777,28>",(it)); Inst38++; } } catch(e) {}

try { if (Inst61 <= 1000 && typeof (e) != "undefined") {_RecordType("<1215,1216,58>",(e)); Inst61++; } } catch(e) {}
try {
try { if (Inst40 <= 1000 && typeof (it.next().value) != "undefined") {_RecordType("<800,815,31>",(it.next().value)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (it.next) != "undefined") {_RecordType("<800,807,31>",(it.next)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (it) != "undefined") {_RecordType("<800,802,31>",(it)); Inst42++; } } catch(e) {}
  if (it.next().value != 0) {
    throw "F_0 failed";
  }

try { if (Inst43 <= 1000 && typeof (it.next().value) != "undefined") {_RecordType("<859,874,35>",(it.next().value)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (it.next) != "undefined") {_RecordType("<859,866,35>",(it.next)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (it) != "undefined") {_RecordType("<859,861,35>",(it)); Inst45++; } } catch(e) {}
  if (it.next().value != 1) {
    throw "F_1 failed";
  }

try { if (Inst46 <= 1000 && typeof (it.next().value) != "undefined") {_RecordType("<918,933,39>",(it.next().value)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (it.next) != "undefined") {_RecordType("<918,925,39>",(it.next)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (it) != "undefined") {_RecordType("<918,920,39>",(it)); Inst48++; } } catch(e) {}
  if (it.next().value != 1) {
    throw "F_2 failed";
  }

try { if (Inst49 <= 1000 && typeof (it.next().value) != "undefined") {_RecordType("<977,992,43>",(it.next().value)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (it.next) != "undefined") {_RecordType("<977,984,43>",(it.next)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (it) != "undefined") {_RecordType("<977,979,43>",(it)); Inst51++; } } catch(e) {}
  if (it.next().value != 2) {
    throw "F_3 failed";
  }

try { if (Inst52 <= 1000 && typeof (it.next().value) != "undefined") {_RecordType("<1036,1051,47>",(it.next().value)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (it.next) != "undefined") {_RecordType("<1036,1043,47>",(it.next)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (it) != "undefined") {_RecordType("<1036,1038,47>",(it)); Inst54++; } } catch(e) {}
  if (it.next().value != 3) {
    throw "F_4 failed";
  }

try { if (Inst55 <= 1000 && typeof (it.next().value) != "undefined") {_RecordType("<1095,1110,51>",(it.next().value)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (it.next) != "undefined") {_RecordType("<1095,1102,51>",(it.next)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (it) != "undefined") {_RecordType("<1095,1097,51>",(it)); Inst57++; } } catch(e) {}
  if (it.next().value != 5) {
    throw "F_5 failed";
  }

try { if (Inst58 <= 1000 && typeof (it.next().value) != "undefined") {_RecordType("<1154,1169,55>",(it.next().value)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (it.next) != "undefined") {_RecordType("<1154,1161,55>",(it.next)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (it) != "undefined") {_RecordType("<1154,1156,55>",(it)); Inst60++; } } catch(e) {}
  if (it.next().value != 8) {
    throw "F_6 failed";
  }
} catch (e) {
try { if (Inst63 <= 1000 && typeof (e) != "undefined") {_RecordType("<1231,1232,59>",(e)); Inst63++; } } catch(e) {}
  failed = e;
try { if (Inst62 <= 1000 && typeof (failed) != "undefined") {_RecordType("<1222,1228,59>",(failed)); Inst62++; } } catch(e) {}
}

expect = false;
try { if (Inst64 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1237,1243,62>",(expect)); Inst64++; } } catch(e) {}
try { if (Inst66 <= 1000 && typeof (failed) != "undefined") {_RecordType("<1262,1268,63>",(failed)); Inst66++; } } catch(e) {}
actual = failed;
try { if (Inst65 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1253,1259,63>",(actual)); Inst65++; } } catch(e) {}
try { if (Inst67 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1270,1283,64>",(reportCompare)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1284,1290,64>",(expect)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1292,1298,64>",(actual)); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (summary) != "undefined") {_RecordType("<1300,1307,64>",(summary)); Inst70++; } } catch(e) {}
reportCompare(expect, actual, summary);

