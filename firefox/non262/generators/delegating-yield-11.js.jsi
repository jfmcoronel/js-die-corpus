var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// The first call to yield* passes one arg to "next".
try { if (Inst0 <= 1000 && typeof (Iter) != "undefined") {_RecordType("<63,67,2>",(Iter)); Inst0++; } } catch(e) {}
function Iter() {
try { if (Inst1 <= 1000 && typeof (next) != "undefined") {_RecordType("<83,87,3>",(next)); Inst1++; } } catch(e) {}
  function next() {
try { if (Inst2 <= 1000 && typeof (arguments.length) != "undefined") {_RecordType("<100,116,4>",(arguments.length)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<100,109,4>",(arguments)); Inst3++; } } catch(e) {}
    if (arguments.length != 1) {
try { if (Inst4 <= 1000 && typeof (Error) != "undefined") {_RecordType("<137,142,5>",(Error)); Inst4++; } } catch(e) {}
      throw Error;
    }

    return {
      value: 42,
      done: true
    };
  }

try { if (Inst6 <= 1000 && typeof (next) != "undefined") {_RecordType("<224,228,14>",(next)); Inst6++; } } catch(e) {}
  this.next = next;
try { if (Inst5 <= 1000 && typeof (this.next) != "undefined") {_RecordType("<212,221,14>",(this.next)); Inst5++; } } catch(e) {}

  this[Symbol.iterator] = function () {
    return this;
  };
try { if (Inst7 <= 1000 && typeof (this[Symbol.iterator]) != "undefined") {_RecordType("<233,254,16>",(this[Symbol.iterator])); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<238,253,16>",(Symbol.iterator)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<238,244,16>",(Symbol)); Inst9++; } } catch(e) {}
}

try { if (Inst10 <= 1000 && typeof (delegate) != "undefined") {_RecordType("<306,314,21>",(delegate)); Inst10++; } } catch(e) {}
function* delegate(iter) {
try { if (Inst11 <= 1000 && typeof (iter) != "undefined") {_RecordType("<315,319,21>",(iter)); Inst11++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (iter) != "undefined") {_RecordType("<339,343,22>",(iter)); Inst12++; } } catch(e) {}
  return yield* iter;
}

try { if (Inst14 <= 1000 && typeof (delegate) != "undefined") {_RecordType("<359,367,25>",(delegate)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Iter) != "undefined") {_RecordType("<372,376,25>",(Iter)); Inst15++; } } catch(e) {}
var iter = delegate(new Iter());
try { if (Inst13 <= 1000 && typeof (iter) != "undefined") {_RecordType("<352,356,25>",(iter)); Inst13++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (iter.next) != "undefined") {_RecordType("<381,390,26>",(iter.next)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (iter) != "undefined") {_RecordType("<381,385,26>",(iter)); Inst17++; } } catch(e) {}
iter.next();
({
  value: 42,
  done: true
});

try { if (Inst18 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<439,452,32>",(reportCompare)); Inst18++; } } catch(e) {}
if (typeof reportCompare == "function") {
try { if (Inst19 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<472,485,33>",(reportCompare)); Inst19++; } } catch(e) {}
  reportCompare(true, true);
}

