var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* -*- tab-width: 2; indent-tabs-mode: nil; js-indent-level: 2 -*- */

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

/*
 *
 * Date:    01 Feb 2002
 * SUMMARY: Testing Error.length
 * See http://bugzilla.mozilla.org/show_bug.cgi?id=123002
 *
 * NOTE: Error.length should equal the length of FormalParameterList of the
 * Error constructor. This is currently 1 in Rhino, 3 in SpiderMonkey.
 *
 * The difference is due to http://bugzilla.mozilla.org/show_bug.cgi?id=50447.
 * As a result of that bug, SpiderMonkey has extended ECMA to allow two new
 * parameters to Error constructors:
 *
 * Rhino:        new Error (message)
 * SpiderMonkey: new Error (message, fileName, lineNumber)
 *
 * NOTE: since we have hard-coded the length expectations, this testcase will
 * have to be changed if the Error FormalParameterList is ever changed again.
 *
 * To do this, just change the two LENGTH constants below -
 */
//-----------------------------------------------------------------------------
var UBound = 0;
try { if (Inst0 <= 1000 && typeof (UBound) != "undefined") {_RecordType("<1152,1158,29>",(UBound)); Inst0++; } } catch(e) {}
var BUGNUMBER = 123002;
try { if (Inst1 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<1168,1177,30>",(BUGNUMBER)); Inst1++; } } catch(e) {}
var summary = 'Testing Error.length';
try { if (Inst2 <= 1000 && typeof (summary) != "undefined") {_RecordType("<1192,1199,31>",(summary)); Inst2++; } } catch(e) {}
var QUOTE = '"';
try { if (Inst3 <= 1000 && typeof (QUOTE) != "undefined") {_RecordType("<1230,1235,32>",(QUOTE)); Inst3++; } } catch(e) {}
var status = '';
try { if (Inst4 <= 1000 && typeof (status) != "undefined") {_RecordType("<1247,1253,33>",(status)); Inst4++; } } catch(e) {}
var statusitems = [];
try { if (Inst5 <= 1000 && typeof (statusitems) != "undefined") {_RecordType("<1264,1275,34>",(statusitems)); Inst5++; } } catch(e) {}
var actual = '';
try { if (Inst6 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1286,1292,35>",(actual)); Inst6++; } } catch(e) {}
var actualvalues = [];
try { if (Inst7 <= 1000 && typeof (actualvalues) != "undefined") {_RecordType("<1303,1315,36>",(actualvalues)); Inst7++; } } catch(e) {}
var expect = '';
try { if (Inst8 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1326,1332,37>",(expect)); Inst8++; } } catch(e) {}
var expectedvalues = [];
try { if (Inst9 <= 1000 && typeof (expectedvalues) != "undefined") {_RecordType("<1343,1357,38>",(expectedvalues)); Inst9++; } } catch(e) {}
var LENGTH_EXPECTED = 1;
try { if (Inst10 <= 1000 && typeof (LENGTH_EXPECTED) != "undefined") {_RecordType("<1368,1383,39>",(LENGTH_EXPECTED)); Inst10++; } } catch(e) {}
/*
 * The various NativeError objects; see ECMA-262 Edition 3, Section 15.11.6
 */

try { if (Inst12 <= 1000 && typeof (Error) != "undefined") {_RecordType("<1495,1500,44>",(Error)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (EvalError) != "undefined") {_RecordType("<1508,1517,44>",(EvalError)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (RangeError) != "undefined") {_RecordType("<1525,1535,44>",(RangeError)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (ReferenceError) != "undefined") {_RecordType("<1543,1557,44>",(ReferenceError)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (SyntaxError) != "undefined") {_RecordType("<1565,1576,44>",(SyntaxError)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<1584,1593,44>",(TypeError)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (URIError) != "undefined") {_RecordType("<1601,1609,44>",(URIError)); Inst18++; } } catch(e) {}
var errObjects = [new Error(), new EvalError(), new RangeError(), new ReferenceError(), new SyntaxError(), new TypeError(), new URIError()];
try { if (Inst11 <= 1000 && typeof (errObjects) != "undefined") {_RecordType("<1477,1487,44>",(errObjects)); Inst11++; } } catch(e) {}

for (var i in errObjects) {
try { if (Inst19 <= 1000 && typeof (i) != "undefined") {_RecordType("<1624,1625,46>",(i)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (errObjects) != "undefined") {_RecordType("<1629,1639,46>",(errObjects)); Inst20++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (errObjects[i]) != "undefined") {_RecordType("<1655,1668,47>",(errObjects[i])); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (errObjects) != "undefined") {_RecordType("<1655,1665,47>",(errObjects)); Inst23++; } } catch(e) {}
  var err = errObjects[i];
try { if (Inst21 <= 1000 && typeof (err) != "undefined") {_RecordType("<1649,1652,47>",(err)); Inst21++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (inSection) != "undefined") {_RecordType("<1681,1690,48>",(inSection)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (quoteThis) != "undefined") {_RecordType("<1691,1700,48>",(quoteThis)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (err.name) != "undefined") {_RecordType("<1701,1709,48>",(err.name)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (err) != "undefined") {_RecordType("<1701,1704,48>",(err)); Inst28++; } } catch(e) {}
  status = inSection(quoteThis(err.name));
try { if (Inst24 <= 1000 && typeof (status) != "undefined") {_RecordType("<1672,1678,48>",(status)); Inst24++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (Error.length) != "undefined") {_RecordType("<1724,1736,49>",(Error.length)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (Error) != "undefined") {_RecordType("<1724,1729,49>",(Error)); Inst31++; } } catch(e) {}
  actual = Error.length;
try { if (Inst29 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1715,1721,49>",(actual)); Inst29++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (LENGTH_EXPECTED) != "undefined") {_RecordType("<1749,1764,50>",(LENGTH_EXPECTED)); Inst33++; } } catch(e) {}
  expect = LENGTH_EXPECTED;
try { if (Inst32 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1740,1746,50>",(expect)); Inst32++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof (addThis) != "undefined") {_RecordType("<1768,1775,51>",(addThis)); Inst34++; } } catch(e) {}
  addThis();
} //-----------------------------------------------------------------------------


try { if (Inst35 <= 1000 && typeof (test) != "undefined") {_RecordType("<1863,1867,55>",(test)); Inst35++; } } catch(e) {}
test(); //-----------------------------------------------------------------------------

try { if (Inst36 <= 1000 && typeof (addThis) != "undefined") {_RecordType("<1961,1968,57>",(addThis)); Inst36++; } } catch(e) {}
function addThis() {
try { if (Inst39 <= 1000 && typeof (status) != "undefined") {_RecordType("<1997,2003,58>",(status)); Inst39++; } } catch(e) {}
  statusitems[UBound] = status;
try { if (Inst37 <= 1000 && typeof (statusitems[UBound]) != "undefined") {_RecordType("<1975,1994,58>",(statusitems[UBound])); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (statusitems) != "undefined") {_RecordType("<1975,1986,58>",(statusitems)); Inst38++; } } catch(e) {}
try { if (Inst42 <= 1000 && typeof (actual) != "undefined") {_RecordType("<2030,2036,59>",(actual)); Inst42++; } } catch(e) {}
  actualvalues[UBound] = actual;
try { if (Inst40 <= 1000 && typeof (actualvalues[UBound]) != "undefined") {_RecordType("<2007,2027,59>",(actualvalues[UBound])); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (actualvalues) != "undefined") {_RecordType("<2007,2019,59>",(actualvalues)); Inst41++; } } catch(e) {}
try { if (Inst45 <= 1000 && typeof (expect) != "undefined") {_RecordType("<2065,2071,60>",(expect)); Inst45++; } } catch(e) {}
  expectedvalues[UBound] = expect;
try { if (Inst43 <= 1000 && typeof (expectedvalues[UBound]) != "undefined") {_RecordType("<2040,2062,60>",(expectedvalues[UBound])); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (expectedvalues) != "undefined") {_RecordType("<2040,2054,60>",(expectedvalues)); Inst44++; } } catch(e) {}
try { if (Inst46 <= 1000 && typeof (UBound) != "undefined") {_RecordType("<2075,2081,61>",(UBound)); Inst46++; } } catch(e) {}
  UBound++;
}

try { if (Inst47 <= 1000 && typeof (test) != "undefined") {_RecordType("<2097,2101,64>",(test)); Inst47++; } } catch(e) {}
function test() {
try { if (Inst48 <= 1000 && typeof (printBugNumber) != "undefined") {_RecordType("<2108,2122,65>",(printBugNumber)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<2123,2132,65>",(BUGNUMBER)); Inst49++; } } catch(e) {}
  printBugNumber(BUGNUMBER);
try { if (Inst50 <= 1000 && typeof (printStatus) != "undefined") {_RecordType("<2137,2148,66>",(printStatus)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (summary) != "undefined") {_RecordType("<2149,2156,66>",(summary)); Inst51++; } } catch(e) {}
  printStatus(summary);

  for (var i = 0; i < UBound; i++) {
try { if (Inst52 <= 1000 && typeof (i) != "undefined") {_RecordType("<2171,2172,68>",(i)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (i) != "undefined") {_RecordType("<2178,2179,68>",(i)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (UBound) != "undefined") {_RecordType("<2182,2188,68>",(UBound)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (i) != "undefined") {_RecordType("<2190,2191,68>",(i)); Inst55++; } } catch(e) {}
try { if (Inst56 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<2201,2214,69>",(reportCompare)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (expectedvalues[i]) != "undefined") {_RecordType("<2215,2232,69>",(expectedvalues[i])); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (expectedvalues) != "undefined") {_RecordType("<2215,2229,69>",(expectedvalues)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (actualvalues[i]) != "undefined") {_RecordType("<2234,2249,69>",(actualvalues[i])); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (actualvalues) != "undefined") {_RecordType("<2234,2246,69>",(actualvalues)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (statusitems[i]) != "undefined") {_RecordType("<2251,2265,69>",(statusitems[i])); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (statusitems) != "undefined") {_RecordType("<2251,2262,69>",(statusitems)); Inst62++; } } catch(e) {}
    reportCompare(expectedvalues[i], actualvalues[i], statusitems[i]);
  }
}

try { if (Inst63 <= 1000 && typeof (quoteThis) != "undefined") {_RecordType("<2284,2293,73>",(quoteThis)); Inst63++; } } catch(e) {}
function quoteThis(text) {
try { if (Inst64 <= 1000 && typeof (text) != "undefined") {_RecordType("<2294,2298,73>",(text)); Inst64++; } } catch(e) {}
try { if (Inst65 <= 1000 && typeof (QUOTE) != "undefined") {_RecordType("<2311,2316,74>",(QUOTE)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (text) != "undefined") {_RecordType("<2319,2323,74>",(text)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (QUOTE) != "undefined") {_RecordType("<2326,2331,74>",(QUOTE)); Inst67++; } } catch(e) {}
  return QUOTE + text + QUOTE;
}

