var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
for (var constructor of anyTypedArrayConstructors) {
try { if (Inst0 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<9,20,1>",(constructor)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (anyTypedArrayConstructors) != "undefined") {_RecordType("<24,49,1>",(anyTypedArrayConstructors)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (newGlobal) != "undefined") {_RecordType("<66,75,2>",(newGlobal)); Inst2++; } } catch(e) {}
  if (typeof newGlobal !== 'function') {
    break;
  } // G[constructor.name].from, where G is any global, produces an array whose prototype
  // is G[constructor.name].prototype.


try { if (Inst4 <= 1000 && typeof (newGlobal) != "undefined") {_RecordType("<246,255,8>",(newGlobal)); Inst4++; } } catch(e) {}
  var g = newGlobal();
try { if (Inst3 <= 1000 && typeof (g) != "undefined") {_RecordType("<242,243,8>",(g)); Inst3++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (g[constructor.name].from) != "undefined") {_RecordType("<270,294,9>",(g[constructor.name].from)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (g[constructor.name]) != "undefined") {_RecordType("<270,289,9>",(g[constructor.name])); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (g) != "undefined") {_RecordType("<270,271,9>",(g)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (constructor.name) != "undefined") {_RecordType("<272,288,9>",(constructor.name)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<272,283,9>",(constructor)); Inst10++; } } catch(e) {}
  var ga = g[constructor.name].from([1, 2, 3]);
try { if (Inst5 <= 1000 && typeof (ga) != "undefined") {_RecordType("<265,267,9>",(ga)); Inst5++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (ga) != "undefined") {_RecordType("<309,311,10>",(ga)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (g[constructor.name]) != "undefined") {_RecordType("<323,342,10>",(g[constructor.name])); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (g) != "undefined") {_RecordType("<323,324,10>",(g)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (constructor.name) != "undefined") {_RecordType("<325,341,10>",(constructor.name)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<325,336,10>",(constructor)); Inst15++; } } catch(e) {}
  ga instanceof g[constructor.name];
  true;
  // %TypedArray%.from can be applied to a constructor from another realm.
try { if (Inst17 <= 1000 && typeof (constructor.from.call) != "undefined") {_RecordType("<437,458,13>",(constructor.from.call)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (constructor.from) != "undefined") {_RecordType("<437,453,13>",(constructor.from)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<437,448,13>",(constructor)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (g[constructor.name]) != "undefined") {_RecordType("<459,478,13>",(g[constructor.name])); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (g) != "undefined") {_RecordType("<459,460,13>",(g)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (constructor.name) != "undefined") {_RecordType("<461,477,13>",(constructor.name)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<461,472,13>",(constructor)); Inst23++; } } catch(e) {}
  var p = constructor.from.call(g[constructor.name], [1, 2, 3]);
try { if (Inst16 <= 1000 && typeof (p) != "undefined") {_RecordType("<433,434,13>",(p)); Inst16++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (p) != "undefined") {_RecordType("<494,495,14>",(p)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (g[constructor.name]) != "undefined") {_RecordType("<507,526,14>",(g[constructor.name])); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (g) != "undefined") {_RecordType("<507,508,14>",(g)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (constructor.name) != "undefined") {_RecordType("<509,525,14>",(constructor.name)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<509,520,14>",(constructor)); Inst28++; } } catch(e) {}
  p instanceof g[constructor.name];
  true;
try { if (Inst30 <= 1000 && typeof (g[constructor.name].from.call) != "undefined") {_RecordType("<546,575,16>",(g[constructor.name].from.call)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (g[constructor.name].from) != "undefined") {_RecordType("<546,570,16>",(g[constructor.name].from)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (g[constructor.name]) != "undefined") {_RecordType("<546,565,16>",(g[constructor.name])); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (g) != "undefined") {_RecordType("<546,547,16>",(g)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (constructor.name) != "undefined") {_RecordType("<548,564,16>",(constructor.name)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<548,559,16>",(constructor)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<576,587,16>",(constructor)); Inst36++; } } catch(e) {}
  var q = g[constructor.name].from.call(constructor, [3, 4, 5]);
try { if (Inst29 <= 1000 && typeof (q) != "undefined") {_RecordType("<542,543,16>",(q)); Inst29++; } } catch(e) {}
try { if (Inst37 <= 1000 && typeof (q) != "undefined") {_RecordType("<603,604,17>",(q)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<616,627,17>",(constructor)); Inst38++; } } catch(e) {}
  q instanceof constructor;
  true;
  // The default 'this' value received by a non-strict mapping function is
  // that function's global, not %TypedArray%.from's global or the caller's global.
try { if (Inst40 <= 1000 && typeof (newGlobal) != "undefined") {_RecordType("<806,815,21>",(newGlobal)); Inst40++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<834,843,22>",(undefined)); Inst42++; } } catch(e) {}
  var h = newGlobal(),
      result = undefined;
try { if (Inst39 <= 1000 && typeof (h) != "undefined") {_RecordType("<802,803,21>",(h)); Inst39++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (result) != "undefined") {_RecordType("<825,831,22>",(result)); Inst41++; } } catch(e) {}
  h.mainGlobal = this;
try { if (Inst43 <= 1000 && typeof (h.mainGlobal) != "undefined") {_RecordType("<847,859,23>",(h.mainGlobal)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (h) != "undefined") {_RecordType("<847,848,23>",(h)); Inst44++; } } catch(e) {}
try { if (Inst45 <= 1000 && typeof (h.eval) != "undefined") {_RecordType("<870,876,24>",(h.eval)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (h) != "undefined") {_RecordType("<870,871,24>",(h)); Inst46++; } } catch(e) {}
  h.eval("function f() { mainGlobal.result = this; }");
try { if (Inst47 <= 1000 && typeof (g[constructor.name].from.call) != "undefined") {_RecordType("<926,955,25>",(g[constructor.name].from.call)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (g[constructor.name].from) != "undefined") {_RecordType("<926,950,25>",(g[constructor.name].from)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (g[constructor.name]) != "undefined") {_RecordType("<926,945,25>",(g[constructor.name])); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (g) != "undefined") {_RecordType("<926,927,25>",(g)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (constructor.name) != "undefined") {_RecordType("<928,944,25>",(constructor.name)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<928,939,25>",(constructor)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<956,967,25>",(constructor)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (h.f) != "undefined") {_RecordType("<980,983,25>",(h.f)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (h) != "undefined") {_RecordType("<980,981,25>",(h)); Inst55++; } } catch(e) {}
  g[constructor.name].from.call(constructor, [5, 6, 7], h.f); // (Give each global in the test a name, for better error messages.  But use
  // globalName, because window.name is complicated.)

  this.globalName = "main";
try { if (Inst56 <= 1000 && typeof (this.globalName) != "undefined") {_RecordType("<1120,1135,28>",(this.globalName)); Inst56++; } } catch(e) {}
  g.globalName = "g";
try { if (Inst57 <= 1000 && typeof (g.globalName) != "undefined") {_RecordType("<1148,1160,29>",(g.globalName)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (g) != "undefined") {_RecordType("<1148,1149,29>",(g)); Inst58++; } } catch(e) {}
  h.globalName = "h";
try { if (Inst59 <= 1000 && typeof (h.globalName) != "undefined") {_RecordType("<1170,1182,30>",(h.globalName)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (h) != "undefined") {_RecordType("<1170,1171,30>",(h)); Inst60++; } } catch(e) {}
try { if (Inst61 <= 1000 && typeof (result.globalName) != "undefined") {_RecordType("<1192,1209,31>",(result.globalName)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (result) != "undefined") {_RecordType("<1192,1198,31>",(result)); Inst62++; } } catch(e) {}
  result.globalName;
  "h";
}

try { if (Inst63 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1232,1245,35>",(reportCompare)); Inst63++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst64 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1266,1279,36>",(reportCompare)); Inst64++; } } catch(e) {}
  reportCompare(true, true);
}

