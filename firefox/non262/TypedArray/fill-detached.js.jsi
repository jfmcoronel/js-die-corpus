var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Ensure %TypedArray%.prototype.fill checks for detached buffers.
try { if (Inst0 <= 1000 && typeof (DetachArrayBufferValue) != "undefined") {_RecordType("<76,98,2>",(DetachArrayBufferValue)); Inst0++; } } catch(e) {}
function DetachArrayBufferValue(buffer, value) {
try { if (Inst1 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<99,105,2>",(buffer)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (value) != "undefined") {_RecordType("<107,112,2>",(value)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (valueOf) != "undefined") {_RecordType("<131,138,4>",(valueOf)); Inst3++; } } catch(e) {}
  return {
    valueOf() {
try { if (Inst4 <= 1000 && typeof (detachArrayBuffer) != "undefined") {_RecordType("<149,166,5>",(detachArrayBuffer)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<167,173,5>",(buffer)); Inst5++; } } catch(e) {}
      detachArrayBuffer(buffer);
try { if (Inst6 <= 1000 && typeof (value) != "undefined") {_RecordType("<189,194,6>",(value)); Inst6++; } } catch(e) {}
      return value;
    }

  };
}

try { if (Inst7 <= 1000 && typeof (DetachTypedArrayValue) != "undefined") {_RecordType("<220,241,12>",(DetachTypedArrayValue)); Inst7++; } } catch(e) {}
function DetachTypedArrayValue(ta, value) {
try { if (Inst8 <= 1000 && typeof (ta) != "undefined") {_RecordType("<242,244,12>",(ta)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (value) != "undefined") {_RecordType("<246,251,12>",(value)); Inst9++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (valueOf) != "undefined") {_RecordType("<270,277,14>",(valueOf)); Inst10++; } } catch(e) {}
  return {
    valueOf() {
try { if (Inst11 <= 1000 && typeof (detachArrayBuffer) != "undefined") {_RecordType("<288,305,15>",(detachArrayBuffer)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (ta.buffer) != "undefined") {_RecordType("<306,315,15>",(ta.buffer)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (ta) != "undefined") {_RecordType("<306,308,15>",(ta)); Inst13++; } } catch(e) {}
      detachArrayBuffer(ta.buffer);
try { if (Inst14 <= 1000 && typeof (value) != "undefined") {_RecordType("<331,336,16>",(value)); Inst14++; } } catch(e) {}
      return value;
    }

  };
} // Test when ArrayBuffer is already reified.


for (let length of [0, 1, 10, 4096]) {
try { if (Inst15 <= 1000 && typeof (length) != "undefined") {_RecordType("<408,414,23>",(length)); Inst15++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (Int32Array) != "undefined") {_RecordType("<453,463,24>",(Int32Array)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (length) != "undefined") {_RecordType("<464,470,24>",(length)); Inst18++; } } catch(e) {}
  let ta = new Int32Array(length);
try { if (Inst16 <= 1000 && typeof (ta) != "undefined") {_RecordType("<444,446,24>",(ta)); Inst16++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (DetachArrayBufferValue) != "undefined") {_RecordType("<487,509,25>",(DetachArrayBufferValue)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (ta.buffer) != "undefined") {_RecordType("<510,519,25>",(ta.buffer)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (ta) != "undefined") {_RecordType("<510,512,25>",(ta)); Inst22++; } } catch(e) {}
  let value = DetachArrayBufferValue(ta.buffer, 123);
try { if (Inst19 <= 1000 && typeof (value) != "undefined") {_RecordType("<479,484,25>",(value)); Inst19++; } } catch(e) {}

try { if (Inst23 <= 1000 && typeof (ta.fill) != "undefined") {_RecordType("<537,544,27>",(ta.fill)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (ta) != "undefined") {_RecordType("<537,539,27>",(ta)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (value) != "undefined") {_RecordType("<545,550,27>",(value)); Inst25++; } } catch(e) {}
  (() => ta.fill(value))();

try { if (Inst26 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<559,568,29>",(TypeError)); Inst26++; } } catch(e) {}
  TypeError;
} // Test when ArrayBuffer is reified during the fill() call.


for (let length of [0, 1, 10, 4096]) {
try { if (Inst27 <= 1000 && typeof (length) != "undefined") {_RecordType("<643,649,33>",(length)); Inst27++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (Int32Array) != "undefined") {_RecordType("<688,698,34>",(Int32Array)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (length) != "undefined") {_RecordType("<699,705,34>",(length)); Inst30++; } } catch(e) {}
  let ta = new Int32Array(length);
try { if (Inst28 <= 1000 && typeof (ta) != "undefined") {_RecordType("<679,681,34>",(ta)); Inst28++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (DetachTypedArrayValue) != "undefined") {_RecordType("<722,743,35>",(DetachTypedArrayValue)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (ta) != "undefined") {_RecordType("<744,746,35>",(ta)); Inst33++; } } catch(e) {}
  let value = DetachTypedArrayValue(ta, 123);
try { if (Inst31 <= 1000 && typeof (value) != "undefined") {_RecordType("<714,719,35>",(value)); Inst31++; } } catch(e) {}

try { if (Inst34 <= 1000 && typeof (ta.fill) != "undefined") {_RecordType("<764,771,37>",(ta.fill)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (ta) != "undefined") {_RecordType("<764,766,37>",(ta)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (value) != "undefined") {_RecordType("<772,777,37>",(value)); Inst36++; } } catch(e) {}
  (() => ta.fill(value))();

try { if (Inst37 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<786,795,39>",(TypeError)); Inst37++; } } catch(e) {}
  TypeError;
}

try { if (Inst38 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<811,824,42>",(reportCompare)); Inst38++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst39 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<845,858,43>",(reportCompare)); Inst39++; } } catch(e) {}
  reportCompare(0, 0);
}

