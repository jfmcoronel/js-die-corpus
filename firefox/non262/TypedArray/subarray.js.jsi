var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Bug 1291003
try { if (Inst0 <= 1000 && typeof (detachArrayBuffer) != "undefined") {_RecordType("<26,43,2>",(detachArrayBuffer)); Inst0++; } } catch(e) {}
if (typeof detachArrayBuffer === "function") {
  for (let constructor of typedArrayConstructors) {
try { if (Inst1 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<73,84,3>",(constructor)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (typedArrayConstructors) != "undefined") {_RecordType("<88,110,3>",(typedArrayConstructors)); Inst2++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (constructor.BYTES_PER_ELEMENT) != "undefined") {_RecordType("<138,167,4>",(constructor.BYTES_PER_ELEMENT)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<138,149,4>",(constructor)); Inst5++; } } catch(e) {}
    const elementSize = constructor.BYTES_PER_ELEMENT;
try { if (Inst3 <= 1000 && typeof (elementSize) != "undefined") {_RecordType("<124,135,4>",(elementSize)); Inst3++; } } catch(e) {}
    let targetOffset;
try { if (Inst6 <= 1000 && typeof (targetOffset) != "undefined") {_RecordType("<177,189,5>",(targetOffset)); Inst6++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (ArrayBuffer) != "undefined") {_RecordType("<212,223,6>",(ArrayBuffer)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (elementSize) != "undefined") {_RecordType("<228,239,6>",(elementSize)); Inst9++; } } catch(e) {}
    let buffer = new ArrayBuffer(2 * elementSize);
try { if (Inst7 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<199,205,6>",(buffer)); Inst7++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<267,278,7>",(constructor)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<279,285,7>",(buffer)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (elementSize) != "undefined") {_RecordType("<291,302,7>",(elementSize)); Inst13++; } } catch(e) {}
    let typedArray = new constructor(buffer, 1 * elementSize, 1);
try { if (Inst10 <= 1000 && typeof (typedArray) != "undefined") {_RecordType("<250,260,7>",(typedArray)); Inst10++; } } catch(e) {}
    typedArray.constructor = {
      [Symbol.species]: function (ab, offset, length) {
try { if (Inst16 <= 1000 && typeof (ab) != "undefined") {_RecordType("<373,375,9>",(ab)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (offset) != "undefined") {_RecordType("<377,383,9>",(offset)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (length) != "undefined") {_RecordType("<385,391,9>",(length)); Inst18++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (offset) != "undefined") {_RecordType("<418,424,10>",(offset)); Inst20++; } } catch(e) {}
        targetOffset = offset;
try { if (Inst19 <= 1000 && typeof (targetOffset) != "undefined") {_RecordType("<403,415,10>",(targetOffset)); Inst19++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<445,456,11>",(constructor)); Inst21++; } } catch(e) {}
        return new constructor(1);
      }
    };
try { if (Inst14 <= 1000 && typeof (typedArray.constructor) != "undefined") {_RecordType("<312,334,8>",(typedArray.constructor)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (typedArray) != "undefined") {_RecordType("<312,322,8>",(typedArray)); Inst15++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (valueOf) != "undefined") {_RecordType("<505,512,15>",(valueOf)); Inst23++; } } catch(e) {}
    let beginIndex = {
      valueOf() {
try { if (Inst24 <= 1000 && typeof (detachArrayBuffer) != "undefined") {_RecordType("<525,542,16>",(detachArrayBuffer)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<543,549,16>",(buffer)); Inst25++; } } catch(e) {}
        detachArrayBuffer(buffer);
        return 0;
      }

    };
try { if (Inst22 <= 1000 && typeof (beginIndex) != "undefined") {_RecordType("<484,494,14>",(beginIndex)); Inst22++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (typedArray.subarray) != "undefined") {_RecordType("<590,609,21>",(typedArray.subarray)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (typedArray) != "undefined") {_RecordType("<590,600,21>",(typedArray)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (beginIndex) != "undefined") {_RecordType("<610,620,21>",(beginIndex)); Inst28++; } } catch(e) {}
    typedArray.subarray(beginIndex);
try { if (Inst29 <= 1000 && typeof (targetOffset) != "undefined") {_RecordType("<627,639,22>",(targetOffset)); Inst29++; } } catch(e) {}
    targetOffset;
try { if (Inst30 <= 1000 && typeof (elementSize) != "undefined") {_RecordType("<649,660,23>",(elementSize)); Inst30++; } } catch(e) {}
    1 * elementSize;
  }
}

try { if (Inst31 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<680,693,27>",(reportCompare)); Inst31++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst32 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<714,727,28>",(reportCompare)); Inst32++; } } catch(e) {}
  reportCompare(true, true);
}

