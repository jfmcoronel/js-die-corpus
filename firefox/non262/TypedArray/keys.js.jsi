var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
for (var constructor of anyTypedArrayConstructors) {
try { if (Inst0 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<9,20,1>",(constructor)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (anyTypedArrayConstructors) != "undefined") {_RecordType("<24,49,1>",(anyTypedArrayConstructors)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (constructor.prototype.keys.length) != "undefined") {_RecordType("<55,88,2>",(constructor.prototype.keys.length)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (constructor.prototype.keys) != "undefined") {_RecordType("<55,81,2>",(constructor.prototype.keys)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (constructor.prototype) != "undefined") {_RecordType("<55,76,2>",(constructor.prototype)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<55,66,2>",(constructor)); Inst5++; } } catch(e) {}
  constructor.prototype.keys.length;
  0;
try { if (Inst6 <= 1000 && typeof (constructor.prototype.keys.name) != "undefined") {_RecordType("<97,128,4>",(constructor.prototype.keys.name)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (constructor.prototype.keys) != "undefined") {_RecordType("<97,123,4>",(constructor.prototype.keys)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (constructor.prototype) != "undefined") {_RecordType("<97,118,4>",(constructor.prototype)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<97,108,4>",(constructor)); Inst9++; } } catch(e) {}
  constructor.prototype.keys.name;
  "keys";
try { if (Inst10 <= 1000 && typeof (new constructor(0).keys) != "undefined") {_RecordType("<146,169,6>",(new constructor(0).keys)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<150,161,6>",(constructor)); Inst11++; } } catch(e) {}
  [...new constructor(0).keys()];
  [];
try { if (Inst12 <= 1000 && typeof (new constructor(1).keys) != "undefined") {_RecordType("<186,209,8>",(new constructor(1).keys)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<190,201,8>",(constructor)); Inst13++; } } catch(e) {}
  [...new constructor(1).keys()];
  [0];
try { if (Inst14 <= 1000 && typeof (new constructor(2).keys) != "undefined") {_RecordType("<227,250,10>",(new constructor(2).keys)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<231,242,10>",(constructor)); Inst15++; } } catch(e) {}
  [...new constructor(2).keys()];
  [0, 1];
try { if (Inst16 <= 1000 && typeof (new constructor([15]).keys) != "undefined") {_RecordType("<271,297,12>",(new constructor([15]).keys)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<275,286,12>",(constructor)); Inst17++; } } catch(e) {}
  [...new constructor([15]).keys()];
  [0];
try { if (Inst19 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<325,336,14>",(constructor)); Inst19++; } } catch(e) {}
  var arr = new constructor([1, 2, 3]);
try { if (Inst18 <= 1000 && typeof (arr) != "undefined") {_RecordType("<315,318,14>",(arr)); Inst18++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (arr.keys) != "undefined") {_RecordType("<366,374,15>",(arr.keys)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (arr) != "undefined") {_RecordType("<366,369,15>",(arr)); Inst22++; } } catch(e) {}
  var iterator = arr.keys();
try { if (Inst20 <= 1000 && typeof (iterator) != "undefined") {_RecordType("<355,363,15>",(iterator)); Inst20++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (iterator.next) != "undefined") {_RecordType("<380,393,16>",(iterator.next)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (iterator) != "undefined") {_RecordType("<380,388,16>",(iterator)); Inst24++; } } catch(e) {}
  iterator.next();
  ({
    value: 0,
    done: false
  });
try { if (Inst25 <= 1000 && typeof (iterator.next) != "undefined") {_RecordType("<440,453,21>",(iterator.next)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (iterator) != "undefined") {_RecordType("<440,448,21>",(iterator)); Inst26++; } } catch(e) {}
  iterator.next();
  ({
    value: 1,
    done: false
  });
try { if (Inst27 <= 1000 && typeof (iterator.next) != "undefined") {_RecordType("<500,513,26>",(iterator.next)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (iterator) != "undefined") {_RecordType("<500,508,26>",(iterator)); Inst28++; } } catch(e) {}
  iterator.next();
  ({
    value: 2,
    done: false
  });
try { if (Inst29 <= 1000 && typeof (iterator.next) != "undefined") {_RecordType("<560,573,31>",(iterator.next)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (iterator) != "undefined") {_RecordType("<560,568,31>",(iterator)); Inst30++; } } catch(e) {}
  iterator.next();
try { if (Inst31 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<593,602,33>",(undefined)); Inst31++; } } catch(e) {}
  ({
    value: undefined,
    done: true
  });

  // Called from other globals.
try { if (Inst32 <= 1000 && typeof (newGlobal) != "undefined") {_RecordType("<671,680,38>",(newGlobal)); Inst32++; } } catch(e) {}
  if (typeof newGlobal === "function") {
try { if (Inst34 <= 1000 && typeof (newGlobal()[constructor.name].prototype.keys) != "undefined") {_RecordType("<714,758,39>",(newGlobal()[constructor.name].prototype.keys)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (newGlobal()[constructor.name].prototype) != "undefined") {_RecordType("<714,753,39>",(newGlobal()[constructor.name].prototype)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (newGlobal()[constructor.name]) != "undefined") {_RecordType("<714,743,39>",(newGlobal()[constructor.name])); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (newGlobal) != "undefined") {_RecordType("<714,723,39>",(newGlobal)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (constructor.name) != "undefined") {_RecordType("<726,742,39>",(constructor.name)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<726,737,39>",(constructor)); Inst39++; } } catch(e) {}
    var keys = newGlobal()[constructor.name].prototype.keys;
try { if (Inst33 <= 1000 && typeof (keys) != "undefined") {_RecordType("<707,711,39>",(keys)); Inst33++; } } catch(e) {}
try { if (Inst40 <= 1000 && typeof (keys.call) != "undefined") {_RecordType("<768,777,40>",(keys.call)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (keys) != "undefined") {_RecordType("<768,772,40>",(keys)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<782,793,40>",(constructor)); Inst42++; } } catch(e) {}
    [...keys.call(new constructor(2))];
    [0, 1];
try { if (Inst44 <= 1000 && typeof (newGlobal()[constructor.name]) != "undefined") {_RecordType("<827,856,42>",(newGlobal()[constructor.name])); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (newGlobal) != "undefined") {_RecordType("<827,836,42>",(newGlobal)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (constructor.name) != "undefined") {_RecordType("<839,855,42>",(constructor.name)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<839,850,42>",(constructor)); Inst47++; } } catch(e) {}
    arr = new (newGlobal()[constructor.name])(2);
try { if (Inst43 <= 1000 && typeof (arr) != "undefined") {_RecordType("<816,819,42>",(arr)); Inst43++; } } catch(e) {}
try { if (Inst48 <= 1000 && typeof ([...constructor.prototype.keys.call(arr)].toString) != "undefined") {_RecordType("<866,916,43>",([...constructor.prototype.keys.call(arr)].toString)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (constructor.prototype.keys.call) != "undefined") {_RecordType("<870,901,43>",(constructor.prototype.keys.call)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (constructor.prototype.keys) != "undefined") {_RecordType("<870,896,43>",(constructor.prototype.keys)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (constructor.prototype) != "undefined") {_RecordType("<870,891,43>",(constructor.prototype)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<870,881,43>",(constructor)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (arr) != "undefined") {_RecordType("<902,905,43>",(arr)); Inst53++; } } catch(e) {}
    [...constructor.prototype.keys.call(arr)].toString();
    "0,1";
  } // Throws if `this` isn't a TypedArray.


try { if (Inst55 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<1003,1012,48>",(undefined)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<1034,1040,48>",(Symbol)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<1061,1066,48>",(Proxy)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<1071,1082,48>",(constructor)); Inst58++; } } catch(e) {}
  var invalidReceivers = [undefined, null, 1, false, "", Symbol(), [], {}, /./, new Proxy(new constructor(), {})];
try { if (Inst54 <= 1000 && typeof (invalidReceivers) != "undefined") {_RecordType("<983,999,48>",(invalidReceivers)); Inst54++; } } catch(e) {}
try { if (Inst59 <= 1000 && typeof (invalidReceivers.forEach) != "undefined") {_RecordType("<1094,1118,49>",(invalidReceivers.forEach)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (invalidReceivers) != "undefined") {_RecordType("<1094,1110,49>",(invalidReceivers)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (invalidReceiver) != "undefined") {_RecordType("<1119,1134,49>",(invalidReceiver)); Inst61++; } } catch(e) {}
  invalidReceivers.forEach(invalidReceiver => {
    (() => {
try { if (Inst62 <= 1000 && typeof (constructor.prototype.keys.call) != "undefined") {_RecordType("<1159,1190,51>",(constructor.prototype.keys.call)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (constructor.prototype.keys) != "undefined") {_RecordType("<1159,1185,51>",(constructor.prototype.keys)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (constructor.prototype) != "undefined") {_RecordType("<1159,1180,51>",(constructor.prototype)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<1159,1170,51>",(constructor)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (invalidReceiver) != "undefined") {_RecordType("<1191,1206,51>",(invalidReceiver)); Inst66++; } } catch(e) {}
      constructor.prototype.keys.call(invalidReceiver);
    })();

try { if (Inst67 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<1224,1233,54>",(TypeError)); Inst67++; } } catch(e) {}
    TypeError;
    "Assert that keys fails if this value is not a TypedArray";
  });
}

try { if (Inst68 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1319,1332,59>",(reportCompare)); Inst68++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst69 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1353,1366,60>",(reportCompare)); Inst69++; } } catch(e) {}
  reportCompare(true, true);
}

