var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
for (var constructor of anyTypedArrayConstructors) {
try { if (Inst0 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<9,20,1>",(constructor)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (anyTypedArrayConstructors) != "undefined") {_RecordType("<24,49,1>",(anyTypedArrayConstructors)); Inst1++; } } catch(e) {}
  // Check superficial features of %TypeArray%.from.
try { if (Inst3 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<119,150,3>",(Object.getOwnPropertyDescriptor)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Object) != "undefined") {_RecordType("<119,125,3>",(Object)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (constructor.__proto__) != "undefined") {_RecordType("<151,172,3>",(constructor.__proto__)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<151,162,3>",(constructor)); Inst6++; } } catch(e) {}
  var desc = Object.getOwnPropertyDescriptor(constructor.__proto__, "from");
try { if (Inst2 <= 1000 && typeof (desc) != "undefined") {_RecordType("<112,116,3>",(desc)); Inst2++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (desc.configurable) != "undefined") {_RecordType("<185,202,4>",(desc.configurable)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (desc) != "undefined") {_RecordType("<185,189,4>",(desc)); Inst8++; } } catch(e) {}
  desc.configurable;
  true;
try { if (Inst9 <= 1000 && typeof (desc.enumerable) != "undefined") {_RecordType("<214,229,6>",(desc.enumerable)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (desc) != "undefined") {_RecordType("<214,218,6>",(desc)); Inst10++; } } catch(e) {}
  desc.enumerable;
  false;
try { if (Inst11 <= 1000 && typeof (desc.writable) != "undefined") {_RecordType("<242,255,8>",(desc.writable)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (desc) != "undefined") {_RecordType("<242,246,8>",(desc)); Inst12++; } } catch(e) {}
  desc.writable;
  true;
try { if (Inst13 <= 1000 && typeof (constructor.from.length) != "undefined") {_RecordType("<267,290,10>",(constructor.from.length)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (constructor.from) != "undefined") {_RecordType("<267,283,10>",(constructor.from)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<267,278,10>",(constructor)); Inst15++; } } catch(e) {}
  constructor.from.length;
  1;

try { if (Inst16 <= 1000 && typeof (constructor.from) != "undefined") {_RecordType("<311,327,13>",(constructor.from)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<311,322,13>",(constructor)); Inst17++; } } catch(e) {}
  (() => new constructor.from())();

try { if (Inst18 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<337,346,15>",(TypeError)); Inst18++; } } catch(e) {}
  TypeError;
}

try { if (Inst19 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<362,375,18>",(reportCompare)); Inst19++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst20 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<396,409,19>",(reportCompare)); Inst20++; } } catch(e) {}
  reportCompare(true, true);
}

