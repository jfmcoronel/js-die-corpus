var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst1 <= 1000 && typeof (Object.getPrototypeOf) != "undefined") {_RecordType("<28,49,1>",(Object.getPrototypeOf)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Object) != "undefined") {_RecordType("<28,34,1>",(Object)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Int8Array.prototype) != "undefined") {_RecordType("<50,69,1>",(Int8Array.prototype)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Int8Array) != "undefined") {_RecordType("<50,59,1>",(Int8Array)); Inst4++; } } catch(e) {}
const TypedArrayPrototype = Object.getPrototypeOf(Int8Array.prototype); // %TypedArrayPrototype% has an own "toString" property.
try { if (Inst0 <= 1000 && typeof (TypedArrayPrototype) != "undefined") {_RecordType("<6,25,1>",(TypedArrayPrototype)); Inst0++; } } catch(e) {}

try { if (Inst5 <= 1000 && typeof (TypedArrayPrototype.hasOwnProperty) != "undefined") {_RecordType("<130,164,3>",(TypedArrayPrototype.hasOwnProperty)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (TypedArrayPrototype) != "undefined") {_RecordType("<130,149,3>",(TypedArrayPrototype)); Inst6++; } } catch(e) {}
TypedArrayPrototype.hasOwnProperty("toString");
true;
try { if (Inst7 <= 1000 && typeof (TypedArrayPrototype.toString) != "undefined") {_RecordType("<184,212,5>",(TypedArrayPrototype.toString)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (TypedArrayPrototype) != "undefined") {_RecordType("<184,203,5>",(TypedArrayPrototype)); Inst8++; } } catch(e) {}
TypedArrayPrototype.toString;
try { if (Inst9 <= 1000 && typeof (Array.prototype.toString) != "undefined") {_RecordType("<214,238,6>",(Array.prototype.toString)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<214,229,6>",(Array.prototype)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Array) != "undefined") {_RecordType("<214,219,6>",(Array)); Inst11++; } } catch(e) {}
Array.prototype.toString();
try { if (Inst12 <= 1000 && typeof (anyTypedArrayConstructors.every) != "undefined") {_RecordType("<242,273,7>",(anyTypedArrayConstructors.every)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (anyTypedArrayConstructors) != "undefined") {_RecordType("<242,267,7>",(anyTypedArrayConstructors)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (c) != "undefined") {_RecordType("<274,275,7>",(c)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (c.hasOwnProperty) != "undefined") {_RecordType("<280,296,7>",(c.hasOwnProperty)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (c) != "undefined") {_RecordType("<280,281,7>",(c)); Inst16++; } } catch(e) {}
anyTypedArrayConstructors.every(c => !c.hasOwnProperty("toString"));
true;
try { if (Inst17 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<317,348,9>",(Object.getOwnPropertyDescriptor)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Object) != "undefined") {_RecordType("<317,323,9>",(Object)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (TypedArrayPrototype) != "undefined") {_RecordType("<349,368,9>",(TypedArrayPrototype)); Inst19++; } } catch(e) {}
Object.getOwnPropertyDescriptor(TypedArrayPrototype, "toString");
try { if (Inst20 <= 1000 && typeof (TypedArrayPrototype.toString) != "undefined") {_RecordType("<395,423,11>",(TypedArrayPrototype.toString)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (TypedArrayPrototype) != "undefined") {_RecordType("<395,414,11>",(TypedArrayPrototype)); Inst21++; } } catch(e) {}
({
  value: TypedArrayPrototype.toString,
  writable: true,
  enumerable: false,
  configurable: true
});

for (let constructor of anyTypedArrayConstructors) {
try { if (Inst22 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<499,510,17>",(constructor)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (anyTypedArrayConstructors) != "undefined") {_RecordType("<514,539,17>",(anyTypedArrayConstructors)); Inst23++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (new constructor([]).toString) != "undefined") {_RecordType("<545,573,18>",(new constructor([]).toString)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<549,560,18>",(constructor)); Inst25++; } } catch(e) {}
  new constructor([]).toString();
  "";
try { if (Inst26 <= 1000 && typeof (new constructor([1]).toString) != "undefined") {_RecordType("<585,614,20>",(new constructor([1]).toString)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<589,600,20>",(constructor)); Inst27++; } } catch(e) {}
  new constructor([1]).toString();
  "1";
try { if (Inst28 <= 1000 && typeof (new constructor([1, 2]).toString) != "undefined") {_RecordType("<627,659,22>",(new constructor([1, 2]).toString)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<631,642,22>",(constructor)); Inst29++; } } catch(e) {}
  new constructor([1, 2]).toString();
  "1,2";
}

try { if (Inst31 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<743,746,28>",(NaN)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<831,834,32>",(NaN)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<919,922,36>",(NaN)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<1007,1010,40>",(NaN)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<1095,1098,44>",(NaN)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<1185,1188,48>",(NaN)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<1292,1295,52>",(NaN)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<1390,1393,56>",(NaN)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<1395,1403,56>",(Infinity)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<1406,1414,56>",(Infinity)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<1529,1532,60>",(NaN)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<1534,1542,60>",(Infinity)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<1545,1553,60>",(Infinity)); Inst43++; } } catch(e) {}
const testCases = {
  [Int8Array.name]: {
    array: [-1, 2, -3, 4, NaN],
    expected: "-1,2,-3,4,0"
  },
  [Int16Array.name]: {
    array: [-1, 2, -3, 4, NaN],
    expected: "-1,2,-3,4,0"
  },
  [Int32Array.name]: {
    array: [-1, 2, -3, 4, NaN],
    expected: "-1,2,-3,4,0"
  },
  [Uint8Array.name]: {
    array: [255, 2, 3, 4, NaN],
    expected: "255,2,3,4,0"
  },
  [Uint16Array.name]: {
    array: [-1, 2, 3, 4, NaN],
    expected: "65535,2,3,4,0"
  },
  [Uint32Array.name]: {
    array: [-1, 2, 3, 4, NaN],
    expected: "4294967295,2,3,4,0"
  },
  [Uint8ClampedArray.name]: {
    array: [255, 256, 2, 3, 4, NaN],
    expected: "255,255,2,3,4,0"
  },
  [Float32Array.name]: {
    array: [-0, 0, 0.5, -0.5, NaN, Infinity, -Infinity],
    expected: "0,0,0.5,-0.5,NaN,Infinity,-Infinity"
  },
  [Float64Array.name]: {
    array: [-0, 0, 0.5, -0.5, NaN, Infinity, -Infinity],
    expected: "0,0,0.5,-0.5,NaN,Infinity,-Infinity"
  }
};
try { if (Inst30 <= 1000 && typeof (testCases) != "undefined") {_RecordType("<681,690,26>",(testCases)); Inst30++; } } catch(e) {}

for (let constructor of anyTypedArrayConstructors) {
try { if (Inst44 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<1625,1636,65>",(constructor)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (anyTypedArrayConstructors) != "undefined") {_RecordType("<1640,1665,65>",(anyTypedArrayConstructors)); Inst45++; } } catch(e) {}
try { if (Inst48 <= 1000 && typeof (testCases[constructor.name]) != "undefined") {_RecordType("<1707,1734,69>",(testCases[constructor.name])); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (testCases) != "undefined") {_RecordType("<1707,1716,69>",(testCases)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (constructor.name) != "undefined") {_RecordType("<1717,1733,69>",(constructor.name)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<1717,1728,69>",(constructor)); Inst51++; } } catch(e) {}
  let {
    array,
    expected
  } = testCases[constructor.name];
try { if (Inst46 <= 1000 && typeof (array) != "undefined") {_RecordType("<1681,1686,67>",(array)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (expected) != "undefined") {_RecordType("<1692,1700,68>",(expected)); Inst47++; } } catch(e) {}
try { if (Inst52 <= 1000 && typeof (new constructor(array).toString) != "undefined") {_RecordType("<1738,1769,70>",(new constructor(array).toString)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<1742,1753,70>",(constructor)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (array) != "undefined") {_RecordType("<1754,1759,70>",(array)); Inst54++; } } catch(e) {}
  new constructor(array).toString();
try { if (Inst55 <= 1000 && typeof (expected) != "undefined") {_RecordType("<1775,1783,71>",(expected)); Inst55++; } } catch(e) {}
  expected;
}

try { if (Inst56 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1799,1812,74>",(reportCompare)); Inst56++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst57 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1833,1846,75>",(reportCompare)); Inst57++; } } catch(e) {}
  reportCompare(true, true);
}

