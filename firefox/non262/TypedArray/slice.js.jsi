var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
for (var constructor of anyTypedArrayConstructors) {
try { if (Inst0 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<9,20,1>",(constructor)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (anyTypedArrayConstructors) != "undefined") {_RecordType("<24,49,1>",(anyTypedArrayConstructors)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (constructor.prototype.slice.length) != "undefined") {_RecordType("<55,89,2>",(constructor.prototype.slice.length)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (constructor.prototype.slice) != "undefined") {_RecordType("<55,82,2>",(constructor.prototype.slice)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (constructor.prototype) != "undefined") {_RecordType("<55,76,2>",(constructor.prototype)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<55,66,2>",(constructor)); Inst5++; } } catch(e) {}
  constructor.prototype.slice.length;
  2;
try { if (Inst6 <= 1000 && typeof (new constructor().slice) != "undefined") {_RecordType("<98,121,4>",(new constructor().slice)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<102,113,4>",(constructor)); Inst7++; } } catch(e) {}
  new constructor().slice(0);
try { if (Inst8 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<132,143,5>",(constructor)); Inst8++; } } catch(e) {}
  new constructor();
try { if (Inst9 <= 1000 && typeof (new constructor().slice) != "undefined") {_RecordType("<149,172,6>",(new constructor().slice)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<153,164,6>",(constructor)); Inst10++; } } catch(e) {}
  new constructor().slice(0, 4);
try { if (Inst11 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<186,197,7>",(constructor)); Inst11++; } } catch(e) {}
  new constructor();
try { if (Inst12 <= 1000 && typeof (new constructor(10).slice) != "undefined") {_RecordType("<203,228,8>",(new constructor(10).slice)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<207,218,8>",(constructor)); Inst13++; } } catch(e) {}
  new constructor(10).slice(0, 2);
try { if (Inst14 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<242,253,9>",(constructor)); Inst14++; } } catch(e) {}
  new constructor(2);
try { if (Inst15 <= 1000 && typeof (new constructor([1, 2]).slice) != "undefined") {_RecordType("<260,289,10>",(new constructor([1, 2]).slice)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<264,275,10>",(constructor)); Inst16++; } } catch(e) {}
  new constructor([1, 2]).slice(1);
try { if (Inst17 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<300,311,11>",(constructor)); Inst17++; } } catch(e) {}
  new constructor([2]);
try { if (Inst18 <= 1000 && typeof (new constructor([1, 2]).slice) != "undefined") {_RecordType("<320,349,12>",(new constructor([1, 2]).slice)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<324,335,12>",(constructor)); Inst19++; } } catch(e) {}
  new constructor([1, 2]).slice(0);
try { if (Inst20 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<360,371,13>",(constructor)); Inst20++; } } catch(e) {}
  new constructor([1, 2]);
try { if (Inst21 <= 1000 && typeof (new constructor([1, 2, 3]).slice) != "undefined") {_RecordType("<383,415,14>",(new constructor([1, 2, 3]).slice)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<387,398,14>",(constructor)); Inst22++; } } catch(e) {}
  new constructor([1, 2, 3]).slice(-1);
try { if (Inst23 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<427,438,15>",(constructor)); Inst23++; } } catch(e) {}
  new constructor([3]);
try { if (Inst24 <= 1000 && typeof (new constructor([1, 2, 3, 4]).slice) != "undefined") {_RecordType("<447,482,16>",(new constructor([1, 2, 3, 4]).slice)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<451,462,16>",(constructor)); Inst25++; } } catch(e) {}
  new constructor([1, 2, 3, 4]).slice(-3, -1);
try { if (Inst26 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<498,509,17>",(constructor)); Inst26++; } } catch(e) {}
  new constructor([2, 3]);
try { if (Inst27 <= 1000 && typeof (new constructor([.1, .2]).slice) != "undefined") {_RecordType("<521,552,18>",(new constructor([.1, .2]).slice)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<525,536,18>",(constructor)); Inst28++; } } catch(e) {}
  new constructor([.1, .2]).slice(0);
try { if (Inst29 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<563,574,19>",(constructor)); Inst29++; } } catch(e) {}
  new constructor([.1, .2]);
try { if (Inst30 <= 1000 && typeof (new constructor([1, 2]).slice) != "undefined") {_RecordType("<588,617,20>",(new constructor([1, 2]).slice)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<592,603,20>",(constructor)); Inst31++; } } catch(e) {}
  new constructor([1, 2]).slice(-3);
try { if (Inst32 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<629,640,21>",(constructor)); Inst32++; } } catch(e) {}
  new constructor([1, 2]);
try { if (Inst33 <= 1000 && typeof (new constructor([1, 2]).slice) != "undefined") {_RecordType("<652,681,22>",(new constructor([1, 2]).slice)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<656,667,22>",(constructor)); Inst34++; } } catch(e) {}
  new constructor([1, 2]).slice(0, -3);
try { if (Inst35 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<696,707,23>",(constructor)); Inst35++; } } catch(e) {}
  new constructor();
try { if (Inst36 <= 1000 && typeof (new constructor([1, 2]).slice) != "undefined") {_RecordType("<713,742,24>",(new constructor([1, 2]).slice)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<717,728,24>",(constructor)); Inst37++; } } catch(e) {}
  new constructor([1, 2]).slice(4);
try { if (Inst38 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<753,764,25>",(constructor)); Inst38++; } } catch(e) {}
  new constructor();
try { if (Inst39 <= 1000 && typeof (new constructor([1, 2]).slice) != "undefined") {_RecordType("<770,799,26>",(new constructor([1, 2]).slice)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<774,785,26>",(constructor)); Inst40++; } } catch(e) {}
  new constructor([1, 2]).slice(1, 5);
try { if (Inst41 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<813,824,27>",(constructor)); Inst41++; } } catch(e) {}
  new constructor([2]);

  // Called from other globals.
try { if (Inst42 <= 1000 && typeof (newGlobal) != "undefined") {_RecordType("<877,886,30>",(newGlobal)); Inst42++; } } catch(e) {}
  if (typeof newGlobal === "function") {
try { if (Inst44 <= 1000 && typeof (newGlobal()[constructor.name].prototype.slice) != "undefined") {_RecordType("<921,966,31>",(newGlobal()[constructor.name].prototype.slice)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (newGlobal()[constructor.name].prototype) != "undefined") {_RecordType("<921,960,31>",(newGlobal()[constructor.name].prototype)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (newGlobal()[constructor.name]) != "undefined") {_RecordType("<921,950,31>",(newGlobal()[constructor.name])); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (newGlobal) != "undefined") {_RecordType("<921,930,31>",(newGlobal)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (constructor.name) != "undefined") {_RecordType("<933,949,31>",(constructor.name)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<933,944,31>",(constructor)); Inst49++; } } catch(e) {}
    var slice = newGlobal()[constructor.name].prototype.slice;
try { if (Inst43 <= 1000 && typeof (slice) != "undefined") {_RecordType("<913,918,31>",(slice)); Inst43++; } } catch(e) {}
try { if (Inst50 <= 1000 && typeof (slice.call) != "undefined") {_RecordType("<972,982,32>",(slice.call)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (slice) != "undefined") {_RecordType("<972,977,32>",(slice)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<987,998,32>",(constructor)); Inst52++; } } catch(e) {}
    slice.call(new constructor([3, 2, 1]), 1);
try { if (Inst53 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<1023,1034,33>",(constructor)); Inst53++; } } catch(e) {}
    new constructor([2, 1]);
  } // Throws if `this` isn't a TypedArray.


try { if (Inst55 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<1116,1125,37>",(undefined)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<1147,1153,37>",(Symbol)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<1174,1179,37>",(Proxy)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<1184,1195,37>",(constructor)); Inst58++; } } catch(e) {}
  var invalidReceivers = [undefined, null, 1, false, "", Symbol(), [], {}, /./, new Proxy(new constructor(), {})];
try { if (Inst54 <= 1000 && typeof (invalidReceivers) != "undefined") {_RecordType("<1096,1112,37>",(invalidReceivers)); Inst54++; } } catch(e) {}
try { if (Inst59 <= 1000 && typeof (invalidReceivers.forEach) != "undefined") {_RecordType("<1207,1231,38>",(invalidReceivers.forEach)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (invalidReceivers) != "undefined") {_RecordType("<1207,1223,38>",(invalidReceivers)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (invalidReceiver) != "undefined") {_RecordType("<1232,1247,38>",(invalidReceiver)); Inst61++; } } catch(e) {}
  invalidReceivers.forEach(invalidReceiver => {
    (() => {
try { if (Inst62 <= 1000 && typeof (constructor.prototype.slice.call) != "undefined") {_RecordType("<1272,1304,40>",(constructor.prototype.slice.call)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (constructor.prototype.slice) != "undefined") {_RecordType("<1272,1299,40>",(constructor.prototype.slice)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (constructor.prototype) != "undefined") {_RecordType("<1272,1293,40>",(constructor.prototype)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<1272,1283,40>",(constructor)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (invalidReceiver) != "undefined") {_RecordType("<1305,1320,40>",(invalidReceiver)); Inst66++; } } catch(e) {}
      constructor.prototype.slice.call(invalidReceiver, 0);
    })();

try { if (Inst67 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<1341,1350,43>",(TypeError)); Inst67++; } } catch(e) {}
    TypeError;
    "Assert that slice fails if this value is not a TypedArray";
  }); // Test that the length getter is never called.

try { if (Inst68 <= 1000 && typeof (Object.defineProperty(new constructor([1, 2, 3]), "length", {
    get() {
      throw new Error("length accessor called");
    }

  }).slice) != "undefined") {_RecordType("<1474,1614,47>",(Object.defineProperty(new constructor([1, 2, 3]), "length", {
    get() {
      throw new Error("length accessor called");
    }

  }).slice)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<1474,1495,47>",(Object.defineProperty)); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1474,1480,47>",(Object)); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<1500,1511,47>",(constructor)); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (get) != "undefined") {_RecordType("<1540,1543,48>",(get)); Inst72++; } } catch(e) {}
  Object.defineProperty(new constructor([1, 2, 3]), "length", {
    get() {
try { if (Inst73 <= 1000 && typeof (Error) != "undefined") {_RecordType("<1564,1569,49>",(Error)); Inst73++; } } catch(e) {}
      throw new Error("length accessor called");
    }

  }).slice(2);
}

try { if (Inst74 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1633,1646,55>",(reportCompare)); Inst74++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst75 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1667,1680,56>",(reportCompare)); Inst75++; } } catch(e) {}
  reportCompare(true, true);
}

