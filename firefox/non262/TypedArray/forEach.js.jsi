var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Tests for TypedArray#forEach
for (var constructor of anyTypedArrayConstructors) {
try { if (Inst0 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<41,52,2>",(constructor)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (anyTypedArrayConstructors) != "undefined") {_RecordType("<56,81,2>",(anyTypedArrayConstructors)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (constructor.prototype.forEach.length) != "undefined") {_RecordType("<87,123,3>",(constructor.prototype.forEach.length)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (constructor.prototype.forEach) != "undefined") {_RecordType("<87,116,3>",(constructor.prototype.forEach)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (constructor.prototype) != "undefined") {_RecordType("<87,108,3>",(constructor.prototype)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<87,98,3>",(constructor)); Inst5++; } } catch(e) {}
  constructor.prototype.forEach.length;
  1;
try { if (Inst7 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<146,157,5>",(constructor)); Inst7++; } } catch(e) {}
  var arr = new constructor([1, 2, 3, 4, 5]); // Tests for `thisArg` argument.
try { if (Inst6 <= 1000 && typeof (arr) != "undefined") {_RecordType("<136,139,5>",(arr)); Inst6++; } } catch(e) {}

try { if (Inst8 <= 1000 && typeof (assertThisArg) != "undefined") {_RecordType("<221,234,7>",(assertThisArg)); Inst8++; } } catch(e) {}
  function assertThisArg(thisArg, thisValue) {
try { if (Inst9 <= 1000 && typeof (thisArg) != "undefined") {_RecordType("<235,242,7>",(thisArg)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (thisValue) != "undefined") {_RecordType("<244,253,7>",(thisValue)); Inst10++; } } catch(e) {}
    // In sloppy mode, `this` could be global object or a wrapper of `thisArg`.
try { if (Inst11 <= 1000 && typeof (arr.forEach) != "undefined") {_RecordType("<341,352,9>",(arr.forEach)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (arr) != "undefined") {_RecordType("<341,344,9>",(arr)); Inst12++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (thisArg) != "undefined") {_RecordType("<423,430,13>",(thisArg)); Inst14++; } } catch(e) {}
    arr.forEach(function () {
      this;
try { if (Inst13 <= 1000 && typeof (thisValue) != "undefined") {_RecordType("<385,394,11>",(thisValue)); Inst13++; } } catch(e) {}
      thisValue;
      return false;
    }, thisArg); // In strict mode, `this` strictly equals `thisArg`.

try { if (Inst15 <= 1000 && typeof (arr.forEach) != "undefined") {_RecordType("<491,502,15>",(arr.forEach)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (arr) != "undefined") {_RecordType("<491,494,15>",(arr)); Inst16++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (thisArg) != "undefined") {_RecordType("<592,599,21>",(thisArg)); Inst18++; } } catch(e) {}
    arr.forEach(function () {
      "use strict";

      this;
try { if (Inst17 <= 1000 && typeof (thisArg) != "undefined") {_RecordType("<556,563,19>",(thisArg)); Inst17++; } } catch(e) {}
      thisArg;
      return false;
    }, thisArg); // Passing `thisArg` has no effect if callback is an arrow function.

    var self = this;
try { if (Inst19 <= 1000 && typeof (self) != "undefined") {_RecordType("<680,684,23>",(self)); Inst19++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (arr.forEach) != "undefined") {_RecordType("<697,708,24>",(arr.forEach)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (arr) != "undefined") {_RecordType("<697,700,24>",(arr)); Inst21++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (thisArg) != "undefined") {_RecordType("<768,775,28>",(thisArg)); Inst23++; } } catch(e) {}
    arr.forEach(() => {
      this;
try { if (Inst22 <= 1000 && typeof (self) != "undefined") {_RecordType("<735,739,26>",(self)); Inst22++; } } catch(e) {}
      self;
      return false;
    }, thisArg);
  }

  [1, 2, 3];
  [1, 2, 3];
try { if (Inst24 <= 1000 && typeof (Object) != "undefined") {_RecordType("<811,817,33>",(Object)); Inst24++; } } catch(e) {}
  Object;
try { if (Inst25 <= 1000 && typeof (Object) != "undefined") {_RecordType("<821,827,34>",(Object)); Inst25++; } } catch(e) {}
  Object;
  1;
try { if (Inst26 <= 1000 && typeof (Object) != "undefined") {_RecordType("<836,842,36>",(Object)); Inst26++; } } catch(e) {}
  Object(1);
  "1";
try { if (Inst27 <= 1000 && typeof (Object) != "undefined") {_RecordType("<856,862,38>",(Object)); Inst27++; } } catch(e) {}
  Object("1");
  false;
try { if (Inst28 <= 1000 && typeof (Object) != "undefined") {_RecordType("<880,886,40>",(Object)); Inst28++; } } catch(e) {}
  Object(false);
try { if (Inst29 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<897,906,41>",(undefined)); Inst29++; } } catch(e) {}
  undefined;
  this;
  null;
  this;
  // Throw an exception in the callback.
  var sum = 0;
try { if (Inst30 <= 1000 && typeof (sum) != "undefined") {_RecordType("<979,982,46>",(sum)); Inst30++; } } catch(e) {}
  var count = 0;
try { if (Inst31 <= 1000 && typeof (count) != "undefined") {_RecordType("<994,999,47>",(count)); Inst31++; } } catch(e) {}
  var thrown = false;
try { if (Inst32 <= 1000 && typeof (thrown) != "undefined") {_RecordType("<1011,1017,48>",(thrown)); Inst32++; } } catch(e) {}

try { if (Inst41 <= 1000 && typeof (e) != "undefined") {_RecordType("<1179,1180,60>",(e)); Inst41++; } } catch(e) {}
  try {
try { if (Inst33 <= 1000 && typeof (arr.forEach) != "undefined") {_RecordType("<1040,1051,51>",(arr.forEach)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (arr) != "undefined") {_RecordType("<1040,1043,51>",(arr)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (v) != "undefined") {_RecordType("<1052,1053,51>",(v)); Inst35++; } } catch(e) {}
    arr.forEach(v => {
try { if (Inst36 <= 1000 && typeof (count) != "undefined") {_RecordType("<1065,1070,52>",(count)); Inst36++; } } catch(e) {}
      count++;
try { if (Inst38 <= 1000 && typeof (v) != "undefined") {_RecordType("<1087,1088,53>",(v)); Inst38++; } } catch(e) {}
      sum += v;
try { if (Inst37 <= 1000 && typeof (sum) != "undefined") {_RecordType("<1080,1083,53>",(sum)); Inst37++; } } catch(e) {}

try { if (Inst39 <= 1000 && typeof (v) != "undefined") {_RecordType("<1101,1102,55>",(v)); Inst39++; } } catch(e) {}
      if (v === 3) {
        throw "forEach";
      }
    });
try { if (Inst40 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<1157,1166,59>",(undefined)); Inst40++; } } catch(e) {}
    undefined;
  } catch (e) {
try { if (Inst42 <= 1000 && typeof (e) != "undefined") {_RecordType("<1188,1189,61>",(e)); Inst42++; } } catch(e) {}
    e;
    "forEach";
    thrown = true;
try { if (Inst43 <= 1000 && typeof (thrown) != "undefined") {_RecordType("<1210,1216,63>",(thrown)); Inst43++; } } catch(e) {}
  }

try { if (Inst44 <= 1000 && typeof (thrown) != "undefined") {_RecordType("<1232,1238,66>",(thrown)); Inst44++; } } catch(e) {}
  thrown;
  true;
try { if (Inst45 <= 1000 && typeof (sum) != "undefined") {_RecordType("<1250,1253,68>",(sum)); Inst45++; } } catch(e) {}
  sum;
  6;
try { if (Inst46 <= 1000 && typeof (count) != "undefined") {_RecordType("<1262,1267,70>",(count)); Inst46++; } } catch(e) {}
  count;
  3;

  (() => {
try { if (Inst47 <= 1000 && typeof (arr.forEach) != "undefined") {_RecordType("<1290,1301,74>",(arr.forEach)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (arr) != "undefined") {_RecordType("<1290,1293,74>",(arr)); Inst48++; } } catch(e) {}
    arr.forEach();
  })();

try { if (Inst49 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<1316,1325,77>",(TypeError)); Inst49++; } } catch(e) {}
  TypeError;
try { if (Inst51 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<1353,1362,78>",(undefined)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<1384,1390,78>",(Symbol)); Inst52++; } } catch(e) {}
  var invalidCallbacks = [undefined, null, 1, false, "", Symbol(), [], {}, /./];
try { if (Inst50 <= 1000 && typeof (invalidCallbacks) != "undefined") {_RecordType("<1333,1349,78>",(invalidCallbacks)); Inst50++; } } catch(e) {}
try { if (Inst53 <= 1000 && typeof (invalidCallbacks.forEach) != "undefined") {_RecordType("<1410,1434,79>",(invalidCallbacks.forEach)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (invalidCallbacks) != "undefined") {_RecordType("<1410,1426,79>",(invalidCallbacks)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (callback) != "undefined") {_RecordType("<1435,1443,79>",(callback)); Inst55++; } } catch(e) {}
  invalidCallbacks.forEach(callback => {
    (() => {
try { if (Inst56 <= 1000 && typeof (arr.forEach) != "undefined") {_RecordType("<1468,1479,81>",(arr.forEach)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (arr) != "undefined") {_RecordType("<1468,1471,81>",(arr)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (callback) != "undefined") {_RecordType("<1480,1488,81>",(callback)); Inst58++; } } catch(e) {}
      arr.forEach(callback);
    })();

try { if (Inst59 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<1506,1515,84>",(TypeError)); Inst59++; } } catch(e) {}
    TypeError;
  }); // Callback is a generator.

try { if (Inst60 <= 1000 && typeof (arr.forEach) != "undefined") {_RecordType("<1554,1565,87>",(arr.forEach)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (arr) != "undefined") {_RecordType("<1554,1557,87>",(arr)); Inst61++; } } catch(e) {}
  arr.forEach(function* () {
    throw "This line will not be executed";
  }); // Called from other globals.

try { if (Inst62 <= 1000 && typeof (newGlobal) != "undefined") {_RecordType("<1675,1684,91>",(newGlobal)); Inst62++; } } catch(e) {}
  if (typeof newGlobal === "function") {
try { if (Inst64 <= 1000 && typeof (newGlobal()[constructor.name].prototype.forEach) != "undefined") {_RecordType("<1721,1768,92>",(newGlobal()[constructor.name].prototype.forEach)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (newGlobal()[constructor.name].prototype) != "undefined") {_RecordType("<1721,1760,92>",(newGlobal()[constructor.name].prototype)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (newGlobal()[constructor.name]) != "undefined") {_RecordType("<1721,1750,92>",(newGlobal()[constructor.name])); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (newGlobal) != "undefined") {_RecordType("<1721,1730,92>",(newGlobal)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (constructor.name) != "undefined") {_RecordType("<1733,1749,92>",(constructor.name)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<1733,1744,92>",(constructor)); Inst69++; } } catch(e) {}
    var forEach = newGlobal()[constructor.name].prototype.forEach;
try { if (Inst63 <= 1000 && typeof (forEach) != "undefined") {_RecordType("<1711,1718,92>",(forEach)); Inst63++; } } catch(e) {}
    var sum = 0;
try { if (Inst70 <= 1000 && typeof (sum) != "undefined") {_RecordType("<1778,1781,93>",(sum)); Inst70++; } } catch(e) {}
try { if (Inst71 <= 1000 && typeof (forEach.call) != "undefined") {_RecordType("<1791,1803,94>",(forEach.call)); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (forEach) != "undefined") {_RecordType("<1791,1798,94>",(forEach)); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<1808,1819,94>",(constructor)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (v) != "undefined") {_RecordType("<1832,1833,94>",(v)); Inst74++; } } catch(e) {}
    forEach.call(new constructor([1, 2, 3]), v => {
try { if (Inst76 <= 1000 && typeof (v) != "undefined") {_RecordType("<1852,1853,95>",(v)); Inst76++; } } catch(e) {}
      sum += v;
try { if (Inst75 <= 1000 && typeof (sum) != "undefined") {_RecordType("<1845,1848,95>",(sum)); Inst75++; } } catch(e) {}
    });
try { if (Inst77 <= 1000 && typeof (sum) != "undefined") {_RecordType("<1867,1870,97>",(sum)); Inst77++; } } catch(e) {}
    sum;
    6;
  } // Throws if `this` isn't a TypedArray.


try { if (Inst79 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<1951,1960,102>",(undefined)); Inst79++; } } catch(e) {}try { if (Inst80 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<1982,1988,102>",(Symbol)); Inst80++; } } catch(e) {}try { if (Inst81 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<2009,2014,102>",(Proxy)); Inst81++; } } catch(e) {}try { if (Inst82 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<2019,2030,102>",(constructor)); Inst82++; } } catch(e) {}
  var invalidReceivers = [undefined, null, 1, false, "", Symbol(), [], {}, /./, new Proxy(new constructor(), {})];
try { if (Inst78 <= 1000 && typeof (invalidReceivers) != "undefined") {_RecordType("<1931,1947,102>",(invalidReceivers)); Inst78++; } } catch(e) {}
try { if (Inst83 <= 1000 && typeof (invalidReceivers.forEach) != "undefined") {_RecordType("<2042,2066,103>",(invalidReceivers.forEach)); Inst83++; } } catch(e) {}try { if (Inst84 <= 1000 && typeof (invalidReceivers) != "undefined") {_RecordType("<2042,2058,103>",(invalidReceivers)); Inst84++; } } catch(e) {}try { if (Inst85 <= 1000 && typeof (invalidReceiver) != "undefined") {_RecordType("<2067,2082,103>",(invalidReceiver)); Inst85++; } } catch(e) {}
  invalidReceivers.forEach(invalidReceiver => {
    (() => {
try { if (Inst86 <= 1000 && typeof (constructor.prototype.forEach.call) != "undefined") {_RecordType("<2107,2141,105>",(constructor.prototype.forEach.call)); Inst86++; } } catch(e) {}try { if (Inst87 <= 1000 && typeof (constructor.prototype.forEach) != "undefined") {_RecordType("<2107,2136,105>",(constructor.prototype.forEach)); Inst87++; } } catch(e) {}try { if (Inst88 <= 1000 && typeof (constructor.prototype) != "undefined") {_RecordType("<2107,2128,105>",(constructor.prototype)); Inst88++; } } catch(e) {}try { if (Inst89 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<2107,2118,105>",(constructor)); Inst89++; } } catch(e) {}try { if (Inst90 <= 1000 && typeof (invalidReceiver) != "undefined") {_RecordType("<2142,2157,105>",(invalidReceiver)); Inst90++; } } catch(e) {}
      constructor.prototype.forEach.call(invalidReceiver, () => true);
    })();

try { if (Inst91 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<2187,2196,108>",(TypeError)); Inst91++; } } catch(e) {}
    TypeError;
    "Assert that some fails if this value is not a TypedArray";
  });
}

try { if (Inst92 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<2282,2295,113>",(reportCompare)); Inst92++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst93 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<2316,2329,114>",(reportCompare)); Inst93++; } } catch(e) {}
  reportCompare(true, true);
}

