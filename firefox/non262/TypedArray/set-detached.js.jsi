var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
var Inst102 = 0;
var Inst103 = 0;
var Inst104 = 0;
var Inst105 = 0;
var Inst106 = 0;
var Inst107 = 0;
var Inst108 = 0;
var Inst109 = 0;
var Inst110 = 0;
var Inst111 = 0;
var Inst112 = 0;
var Inst113 = 0;
var Inst114 = 0;
var Inst115 = 0;
var Inst116 = 0;
var Inst117 = 0;
var Inst118 = 0;
var Inst119 = 0;
var Inst120 = 0;
var Inst121 = 0;
var Inst122 = 0;
var Inst123 = 0;
var Inst124 = 0;
var Inst125 = 0;
var Inst126 = 0;
var Inst127 = 0;
var Inst128 = 0;
var Inst129 = 0;
var Inst130 = 0;
var Inst131 = 0;
var Inst132 = 0;
var Inst133 = 0;
var Inst134 = 0;
var Inst135 = 0;
var Inst136 = 0;
var Inst137 = 0;
var Inst138 = 0;
var Inst139 = 0;
var Inst140 = 0;
var Inst141 = 0;
var Inst142 = 0;
var Inst143 = 0;
var Inst144 = 0;
var Inst145 = 0;
var Inst146 = 0;
var Inst147 = 0;
var Inst148 = 0;
var Inst149 = 0;
var Inst150 = 0;
var Inst151 = 0;
var Inst152 = 0;
var Inst153 = 0;
var Inst154 = 0;
var Inst155 = 0;
var Inst156 = 0;
var Inst157 = 0;
var Inst158 = 0;
var Inst159 = 0;
var Inst160 = 0;
var Inst161 = 0;
var Inst162 = 0;
var Inst163 = 0;
var Inst164 = 0;
var Inst165 = 0;
var Inst166 = 0;
var Inst167 = 0;
var Inst168 = 0;
var Inst169 = 0;
var Inst170 = 0;
var Inst171 = 0;
var Inst172 = 0;
var Inst173 = 0;
var Inst174 = 0;
var Inst175 = 0;
var Inst176 = 0;
var Inst177 = 0;
var Inst178 = 0;
var Inst179 = 0;
var Inst180 = 0;
var Inst181 = 0;
var Inst182 = 0;
var Inst183 = 0;
var Inst184 = 0;
var Inst185 = 0;
var Inst186 = 0;
var Inst187 = 0;
var Inst188 = 0;
var Inst189 = 0;
var Inst190 = 0;
var Inst191 = 0;
var Inst192 = 0;
var Inst193 = 0;
var Inst194 = 0;
var Inst195 = 0;
var Inst196 = 0;
var Inst197 = 0;
var Inst198 = 0;
var Inst199 = 0;
var Inst200 = 0;
var Inst201 = 0;
var Inst202 = 0;
var Inst203 = 0;
var Inst204 = 0;
var Inst205 = 0;
var Inst206 = 0;
var Inst207 = 0;
var Inst208 = 0;
var Inst209 = 0;
var Inst210 = 0;
var Inst211 = 0;
var Inst212 = 0;
var Inst213 = 0;
var Inst214 = 0;
var Inst215 = 0;
var Inst216 = 0;
var Inst217 = 0;
var Inst218 = 0;
var Inst219 = 0;
var Inst220 = 0;
var Inst221 = 0;
var Inst222 = 0;
var Inst223 = 0;
var Inst224 = 0;
var Inst225 = 0;
var Inst226 = 0;
var Inst227 = 0;
var Inst228 = 0;
var Inst229 = 0;
var Inst230 = 0;
var Inst231 = 0;
var Inst232 = 0;
var Inst233 = 0;
var Inst234 = 0;
var Inst235 = 0;
var Inst236 = 0;
var Inst237 = 0;
var Inst238 = 0;
var Inst239 = 0;
var Inst240 = 0;
var Inst241 = 0;
var Inst242 = 0;
var Inst243 = 0;
var Inst244 = 0;
var Inst245 = 0;
var Inst246 = 0;
var Inst247 = 0;
var Inst248 = 0;
var Inst249 = 0;
var Inst250 = 0;
var Inst251 = 0;
var Inst252 = 0;
var Inst253 = 0;
var Inst254 = 0;
var Inst255 = 0;
var Inst256 = 0;
var Inst257 = 0;
var Inst258 = 0;
var Inst259 = 0;
var Inst260 = 0;
var Inst261 = 0;
var Inst262 = 0;
var Inst263 = 0;
var Inst264 = 0;
var Inst265 = 0;
var Inst266 = 0;
var Inst267 = 0;
var Inst268 = 0;
var Inst269 = 0;
var Inst270 = 0;
var Inst271 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Tests for detached ArrayBuffer checks in %TypedArray%.prototype.set(array|typedArray, offset).
try { if (Inst0 <= 1000 && typeof (createTypedArrays) != "undefined") {_RecordType("<108,125,2>",(createTypedArrays)); Inst0++; } } catch(e) {}
function* createTypedArrays(lengths = [0, 1, 4, 4096]) {
try { if (Inst1 <= 1000 && typeof (lengths) != "undefined") {_RecordType("<126,133,2>",(lengths)); Inst1++; } } catch(e) {}
  for (let length of lengths) {
try { if (Inst2 <= 1000 && typeof (length) != "undefined") {_RecordType("<166,172,3>",(length)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (lengths) != "undefined") {_RecordType("<176,183,3>",(lengths)); Inst3++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (ArrayBuffer) != "undefined") {_RecordType("<208,219,4>",(ArrayBuffer)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (length) != "undefined") {_RecordType("<220,226,4>",(length)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Int32Array.BYTES_PER_ELEMENT) != "undefined") {_RecordType("<229,257,4>",(Int32Array.BYTES_PER_ELEMENT)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Int32Array) != "undefined") {_RecordType("<229,239,4>",(Int32Array)); Inst8++; } } catch(e) {}
    let buffer = new ArrayBuffer(length * Int32Array.BYTES_PER_ELEMENT);
try { if (Inst4 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<195,201,4>",(buffer)); Inst4++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (Int32Array) != "undefined") {_RecordType("<285,295,5>",(Int32Array)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<296,302,5>",(buffer)); Inst11++; } } catch(e) {}
    let typedArray = new Int32Array(buffer);
try { if (Inst9 <= 1000 && typeof (typedArray) != "undefined") {_RecordType("<268,278,5>",(typedArray)); Inst9++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (typedArray) != "undefined") {_RecordType("<323,333,7>",(typedArray)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<341,347,8>",(buffer)); Inst13++; } } catch(e) {}
    yield {
      typedArray,
      buffer
    };
  }
}

try { if (Inst14 <= 1000 && typeof (detachArrayBuffer) != "undefined") {_RecordType("<373,390,13>",(detachArrayBuffer)); Inst14++; } } catch(e) {}
if (typeof detachArrayBuffer === "function") {
try { if (Inst16 <= 1000 && typeof (Error) != "undefined") {_RecordType("<439,444,14>",(Error)); Inst16++; } } catch(e) {}
  class ExpectedError extends Error {} // No detached check on function entry.
try { if (Inst15 <= 1000 && typeof (ExpectedError) != "undefined") {_RecordType("<417,430,14>",(ExpectedError)); Inst15++; } } catch(e) {}


  for (let {
    typedArray,
    buffer
  } of createTypedArrays()) {
try { if (Inst17 <= 1000 && typeof (typedArray) != "undefined") {_RecordType("<507,517,18>",(typedArray)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<523,529,19>",(buffer)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (createTypedArrays) != "undefined") {_RecordType("<537,554,20>",(createTypedArrays)); Inst19++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (detachArrayBuffer) != "undefined") {_RecordType("<564,581,21>",(detachArrayBuffer)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<582,588,21>",(buffer)); Inst21++; } } catch(e) {}
    detachArrayBuffer(buffer);

try { if (Inst22 <= 1000 && typeof (typedArray.set) != "undefined") {_RecordType("<603,617,23>",(typedArray.set)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (typedArray) != "undefined") {_RecordType("<603,613,23>",(typedArray)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (valueOf) != "undefined") {_RecordType("<632,639,24>",(valueOf)); Inst24++; } } catch(e) {}
    (() => typedArray.set(null, {
      valueOf() {
try { if (Inst25 <= 1000 && typeof (ExpectedError) != "undefined") {_RecordType("<662,675,25>",(ExpectedError)); Inst25++; } } catch(e) {}
        throw new ExpectedError();
      }

    }))();

try { if (Inst26 <= 1000 && typeof (ExpectedError) != "undefined") {_RecordType("<704,717,30>",(ExpectedError)); Inst26++; } } catch(e) {}
    ExpectedError;
  } // Check for detached buffer after calling ToInteger(offset). Test with:
  // - valid offset,
  // - too large offset,
  // - and negative offset.


  for (let [offset, error] of [[0, TypeError], [1000000, TypeError], [-1, RangeError]]) {
try { if (Inst27 <= 1000 && typeof (offset) != "undefined") {_RecordType("<884,890,37>",(offset)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (error) != "undefined") {_RecordType("<892,897,37>",(error)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<907,916,37>",(TypeError)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<929,938,37>",(TypeError)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (RangeError) != "undefined") {_RecordType("<946,956,37>",(RangeError)); Inst31++; } } catch(e) {}
    for (let source of [[], [0], new Int32Array(0), new Int32Array(1)]) {
try { if (Inst32 <= 1000 && typeof (source) != "undefined") {_RecordType("<975,981,38>",(source)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (Int32Array) != "undefined") {_RecordType("<999,1009,38>",(Int32Array)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (Int32Array) != "undefined") {_RecordType("<1018,1028,38>",(Int32Array)); Inst34++; } } catch(e) {}
      for (let {
        typedArray,
        buffer
      } of createTypedArrays()) {
try { if (Inst35 <= 1000 && typeof (typedArray) != "undefined") {_RecordType("<1061,1071,40>",(typedArray)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<1081,1087,41>",(buffer)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (createTypedArrays) != "undefined") {_RecordType("<1099,1116,42>",(createTypedArrays)); Inst37++; } } catch(e) {}
try { if (Inst38 <= 1000 && typeof (typedArray.set) != "undefined") {_RecordType("<1137,1151,43>",(typedArray.set)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (typedArray) != "undefined") {_RecordType("<1137,1147,43>",(typedArray)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (source) != "undefined") {_RecordType("<1152,1158,43>",(source)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (valueOf) != "undefined") {_RecordType("<1172,1179,44>",(valueOf)); Inst41++; } } catch(e) {}
        (() => typedArray.set(source, {
          valueOf() {
try { if (Inst42 <= 1000 && typeof (detachArrayBuffer) != "undefined") {_RecordType("<1196,1213,45>",(detachArrayBuffer)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<1214,1220,45>",(buffer)); Inst43++; } } catch(e) {}
            detachArrayBuffer(buffer);
try { if (Inst44 <= 1000 && typeof (offset) != "undefined") {_RecordType("<1242,1248,46>",(offset)); Inst44++; } } catch(e) {}
            return offset;
          }

        }))();

try { if (Inst45 <= 1000 && typeof (error) != "undefined") {_RecordType("<1287,1292,51>",(error)); Inst45++; } } catch(e) {}
        error;
      }
    }
  } // Tests when called with detached typed array as source.


  for (let {
    typedArray
  } of createTypedArrays()) {
try { if (Inst46 <= 1000 && typeof (typedArray) != "undefined") {_RecordType("<1389,1399,58>",(typedArray)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (createTypedArrays) != "undefined") {_RecordType("<1407,1424,59>",(createTypedArrays)); Inst47++; } } catch(e) {}
    for (let {
      typedArray: source,
      buffer: sourceBuffer
    } of createTypedArrays()) {
try { if (Inst48 <= 1000 && typeof (source) != "undefined") {_RecordType("<1463,1469,61>",(source)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (sourceBuffer) != "undefined") {_RecordType("<1485,1497,62>",(sourceBuffer)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (createTypedArrays) != "undefined") {_RecordType("<1507,1524,63>",(createTypedArrays)); Inst50++; } } catch(e) {}
try { if (Inst51 <= 1000 && typeof (detachArrayBuffer) != "undefined") {_RecordType("<1536,1553,64>",(detachArrayBuffer)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (sourceBuffer) != "undefined") {_RecordType("<1554,1566,64>",(sourceBuffer)); Inst52++; } } catch(e) {}
      detachArrayBuffer(sourceBuffer);

try { if (Inst53 <= 1000 && typeof (typedArray.set) != "undefined") {_RecordType("<1583,1597,66>",(typedArray.set)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (typedArray) != "undefined") {_RecordType("<1583,1593,66>",(typedArray)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (source) != "undefined") {_RecordType("<1598,1604,66>",(source)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (valueOf) != "undefined") {_RecordType("<1616,1623,67>",(valueOf)); Inst56++; } } catch(e) {}
      (() => typedArray.set(source, {
        valueOf() {
try { if (Inst57 <= 1000 && typeof (ExpectedError) != "undefined") {_RecordType("<1648,1661,68>",(ExpectedError)); Inst57++; } } catch(e) {}
          throw new ExpectedError();
        }

      }))();

try { if (Inst58 <= 1000 && typeof (ExpectedError) != "undefined") {_RecordType("<1696,1709,73>",(ExpectedError)); Inst58++; } } catch(e) {}
      ExpectedError;
    }
  } // Check when detaching source buffer in ToInteger(offset). Test with:
  // - valid offset,
  // - too large offset,
  // - and negative offset.


  for (let [offset, error] of [[0, TypeError], [1000000, TypeError], [-1, RangeError]]) {
try { if (Inst59 <= 1000 && typeof (offset) != "undefined") {_RecordType("<1880,1886,81>",(offset)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (error) != "undefined") {_RecordType("<1888,1893,81>",(error)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<1903,1912,81>",(TypeError)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<1925,1934,81>",(TypeError)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (RangeError) != "undefined") {_RecordType("<1942,1952,81>",(RangeError)); Inst63++; } } catch(e) {}
    for (let {
      typedArray
    } of createTypedArrays()) {
try { if (Inst64 <= 1000 && typeof (typedArray) != "undefined") {_RecordType("<1979,1989,83>",(typedArray)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (createTypedArrays) != "undefined") {_RecordType("<1999,2016,84>",(createTypedArrays)); Inst65++; } } catch(e) {}
      for (let {
        typedArray: source,
        buffer: sourceBuffer
      } of createTypedArrays()) {
try { if (Inst66 <= 1000 && typeof (source) != "undefined") {_RecordType("<2059,2065,86>",(source)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (sourceBuffer) != "undefined") {_RecordType("<2083,2095,87>",(sourceBuffer)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (createTypedArrays) != "undefined") {_RecordType("<2107,2124,88>",(createTypedArrays)); Inst68++; } } catch(e) {}
try { if (Inst69 <= 1000 && typeof (typedArray.set) != "undefined") {_RecordType("<2145,2159,89>",(typedArray.set)); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (typedArray) != "undefined") {_RecordType("<2145,2155,89>",(typedArray)); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (source) != "undefined") {_RecordType("<2160,2166,89>",(source)); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (valueOf) != "undefined") {_RecordType("<2180,2187,90>",(valueOf)); Inst72++; } } catch(e) {}
        (() => typedArray.set(source, {
          valueOf() {
try { if (Inst73 <= 1000 && typeof (detachArrayBuffer) != "undefined") {_RecordType("<2204,2221,91>",(detachArrayBuffer)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (sourceBuffer) != "undefined") {_RecordType("<2222,2234,91>",(sourceBuffer)); Inst74++; } } catch(e) {}
            detachArrayBuffer(sourceBuffer);
try { if (Inst75 <= 1000 && typeof (offset) != "undefined") {_RecordType("<2256,2262,92>",(offset)); Inst75++; } } catch(e) {}
            return offset;
          }

        }))();

try { if (Inst76 <= 1000 && typeof (error) != "undefined") {_RecordType("<2301,2306,97>",(error)); Inst76++; } } catch(e) {}
        error;
      }
    }
  } // Test when target and source use the same underlying buffer and
  // ToInteger(offset) detaches the buffer. Test with:
  // - same typed array,
  // - different typed array, but same element type,
  // - and different element type.


  for (let src of [ta => ta, ta => new Int32Array(ta.buffer), ta => new Float32Array(ta.buffer)]) {
try { if (Inst77 <= 1000 && typeof (src) != "undefined") {_RecordType("<2573,2576,107>",(src)); Inst77++; } } catch(e) {}try { if (Inst78 <= 1000 && typeof (ta) != "undefined") {_RecordType("<2581,2583,107>",(ta)); Inst78++; } } catch(e) {}try { if (Inst79 <= 1000 && typeof (ta) != "undefined") {_RecordType("<2587,2589,107>",(ta)); Inst79++; } } catch(e) {}try { if (Inst80 <= 1000 && typeof (ta) != "undefined") {_RecordType("<2591,2593,107>",(ta)); Inst80++; } } catch(e) {}try { if (Inst81 <= 1000 && typeof (Int32Array) != "undefined") {_RecordType("<2601,2611,107>",(Int32Array)); Inst81++; } } catch(e) {}try { if (Inst82 <= 1000 && typeof (ta.buffer) != "undefined") {_RecordType("<2612,2621,107>",(ta.buffer)); Inst82++; } } catch(e) {}try { if (Inst83 <= 1000 && typeof (ta) != "undefined") {_RecordType("<2612,2614,107>",(ta)); Inst83++; } } catch(e) {}try { if (Inst84 <= 1000 && typeof (ta) != "undefined") {_RecordType("<2624,2626,107>",(ta)); Inst84++; } } catch(e) {}try { if (Inst85 <= 1000 && typeof (Float32Array) != "undefined") {_RecordType("<2634,2646,107>",(Float32Array)); Inst85++; } } catch(e) {}try { if (Inst86 <= 1000 && typeof (ta.buffer) != "undefined") {_RecordType("<2647,2656,107>",(ta.buffer)); Inst86++; } } catch(e) {}try { if (Inst87 <= 1000 && typeof (ta) != "undefined") {_RecordType("<2647,2649,107>",(ta)); Inst87++; } } catch(e) {}
    for (let {
      typedArray,
      buffer
    } of createTypedArrays()) {
try { if (Inst88 <= 1000 && typeof (typedArray) != "undefined") {_RecordType("<2683,2693,109>",(typedArray)); Inst88++; } } catch(e) {}try { if (Inst89 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<2701,2707,110>",(buffer)); Inst89++; } } catch(e) {}try { if (Inst90 <= 1000 && typeof (createTypedArrays) != "undefined") {_RecordType("<2717,2734,111>",(createTypedArrays)); Inst90++; } } catch(e) {}
try { if (Inst92 <= 1000 && typeof (src) != "undefined") {_RecordType("<2759,2762,112>",(src)); Inst92++; } } catch(e) {}try { if (Inst93 <= 1000 && typeof (typedArray) != "undefined") {_RecordType("<2763,2773,112>",(typedArray)); Inst93++; } } catch(e) {}
      let source = src(typedArray);
try { if (Inst91 <= 1000 && typeof (source) != "undefined") {_RecordType("<2750,2756,112>",(source)); Inst91++; } } catch(e) {}

try { if (Inst94 <= 1000 && typeof (typedArray.set) != "undefined") {_RecordType("<2790,2804,114>",(typedArray.set)); Inst94++; } } catch(e) {}try { if (Inst95 <= 1000 && typeof (typedArray) != "undefined") {_RecordType("<2790,2800,114>",(typedArray)); Inst95++; } } catch(e) {}try { if (Inst96 <= 1000 && typeof (source) != "undefined") {_RecordType("<2805,2811,114>",(source)); Inst96++; } } catch(e) {}try { if (Inst97 <= 1000 && typeof (valueOf) != "undefined") {_RecordType("<2823,2830,115>",(valueOf)); Inst97++; } } catch(e) {}
      (() => typedArray.set(source, {
        valueOf() {
try { if (Inst98 <= 1000 && typeof (detachArrayBuffer) != "undefined") {_RecordType("<2845,2862,116>",(detachArrayBuffer)); Inst98++; } } catch(e) {}try { if (Inst99 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<2863,2869,116>",(buffer)); Inst99++; } } catch(e) {}
          detachArrayBuffer(buffer);
          return 0;
        }

      }))();

try { if (Inst100 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<2923,2932,122>",(TypeError)); Inst100++; } } catch(e) {}
      TypeError;
    }
  } // Test when Get(src, "length") detaches the buffer, but srcLength is 0.
  // Also use different offsets to ensure bounds checks use the typed array's
  // length value from before detaching the buffer.


  for (let offset of [() => 0, ta => Math.min(1, ta.length), ta => Math.max(0, ta.length - 1)]) {
try { if (Inst101 <= 1000 && typeof (offset) != "undefined") {_RecordType("<3160,3166,129>",(offset)); Inst101++; } } catch(e) {}try { if (Inst102 <= 1000 && typeof (ta) != "undefined") {_RecordType("<3180,3182,129>",(ta)); Inst102++; } } catch(e) {}try { if (Inst103 <= 1000 && typeof (Math.min) != "undefined") {_RecordType("<3186,3194,129>",(Math.min)); Inst103++; } } catch(e) {}try { if (Inst104 <= 1000 && typeof (Math) != "undefined") {_RecordType("<3186,3190,129>",(Math)); Inst104++; } } catch(e) {}try { if (Inst105 <= 1000 && typeof (ta.length) != "undefined") {_RecordType("<3198,3207,129>",(ta.length)); Inst105++; } } catch(e) {}try { if (Inst106 <= 1000 && typeof (ta) != "undefined") {_RecordType("<3198,3200,129>",(ta)); Inst106++; } } catch(e) {}try { if (Inst107 <= 1000 && typeof (ta) != "undefined") {_RecordType("<3210,3212,129>",(ta)); Inst107++; } } catch(e) {}try { if (Inst108 <= 1000 && typeof (Math.max) != "undefined") {_RecordType("<3216,3224,129>",(Math.max)); Inst108++; } } catch(e) {}try { if (Inst109 <= 1000 && typeof (Math) != "undefined") {_RecordType("<3216,3220,129>",(Math)); Inst109++; } } catch(e) {}try { if (Inst110 <= 1000 && typeof (ta.length) != "undefined") {_RecordType("<3228,3237,129>",(ta.length)); Inst110++; } } catch(e) {}try { if (Inst111 <= 1000 && typeof (ta) != "undefined") {_RecordType("<3228,3230,129>",(ta)); Inst111++; } } catch(e) {}
    for (let {
      typedArray,
      buffer
    } of createTypedArrays()) {
try { if (Inst112 <= 1000 && typeof (typedArray) != "undefined") {_RecordType("<3268,3278,131>",(typedArray)); Inst112++; } } catch(e) {}try { if (Inst113 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<3286,3292,132>",(buffer)); Inst113++; } } catch(e) {}try { if (Inst114 <= 1000 && typeof (createTypedArrays) != "undefined") {_RecordType("<3302,3319,133>",(createTypedArrays)); Inst114++; } } catch(e) {}
try { if (Inst116 <= 1000 && typeof (length) != "undefined") {_RecordType("<3358,3364,135>",(length)); Inst116++; } } catch(e) {}
      let source = {
        get length() {
try { if (Inst117 <= 1000 && typeof (detachArrayBuffer) != "undefined") {_RecordType("<3379,3396,136>",(detachArrayBuffer)); Inst117++; } } catch(e) {}try { if (Inst118 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<3397,3403,136>",(buffer)); Inst118++; } } catch(e) {}
          detachArrayBuffer(buffer);
          return 0;
        }

      };
try { if (Inst115 <= 1000 && typeof (source) != "undefined") {_RecordType("<3335,3341,134>",(source)); Inst115++; } } catch(e) {}
try { if (Inst119 <= 1000 && typeof (typedArray.set) != "undefined") {_RecordType("<3452,3466,141>",(typedArray.set)); Inst119++; } } catch(e) {}try { if (Inst120 <= 1000 && typeof (typedArray) != "undefined") {_RecordType("<3452,3462,141>",(typedArray)); Inst120++; } } catch(e) {}try { if (Inst121 <= 1000 && typeof (source) != "undefined") {_RecordType("<3467,3473,141>",(source)); Inst121++; } } catch(e) {}try { if (Inst122 <= 1000 && typeof (offset) != "undefined") {_RecordType("<3475,3481,141>",(offset)); Inst122++; } } catch(e) {}try { if (Inst123 <= 1000 && typeof (typedArray) != "undefined") {_RecordType("<3482,3492,141>",(typedArray)); Inst123++; } } catch(e) {}
      typedArray.set(source, offset(typedArray));
    }
  } // Test when ToLength(Get(src, "length")) detaches the buffer, but
  // srcLength is 0. Also use different offsets to ensure bounds checks use
  // the typed array's length value from before detaching the buffer.


  for (let offset of [() => 0, ta => Math.min(1, ta.length), ta => Math.max(0, ta.length - 1)]) {
try { if (Inst124 <= 1000 && typeof (offset) != "undefined") {_RecordType("<3732,3738,148>",(offset)); Inst124++; } } catch(e) {}try { if (Inst125 <= 1000 && typeof (ta) != "undefined") {_RecordType("<3752,3754,148>",(ta)); Inst125++; } } catch(e) {}try { if (Inst126 <= 1000 && typeof (Math.min) != "undefined") {_RecordType("<3758,3766,148>",(Math.min)); Inst126++; } } catch(e) {}try { if (Inst127 <= 1000 && typeof (Math) != "undefined") {_RecordType("<3758,3762,148>",(Math)); Inst127++; } } catch(e) {}try { if (Inst128 <= 1000 && typeof (ta.length) != "undefined") {_RecordType("<3770,3779,148>",(ta.length)); Inst128++; } } catch(e) {}try { if (Inst129 <= 1000 && typeof (ta) != "undefined") {_RecordType("<3770,3772,148>",(ta)); Inst129++; } } catch(e) {}try { if (Inst130 <= 1000 && typeof (ta) != "undefined") {_RecordType("<3782,3784,148>",(ta)); Inst130++; } } catch(e) {}try { if (Inst131 <= 1000 && typeof (Math.max) != "undefined") {_RecordType("<3788,3796,148>",(Math.max)); Inst131++; } } catch(e) {}try { if (Inst132 <= 1000 && typeof (Math) != "undefined") {_RecordType("<3788,3792,148>",(Math)); Inst132++; } } catch(e) {}try { if (Inst133 <= 1000 && typeof (ta.length) != "undefined") {_RecordType("<3800,3809,148>",(ta.length)); Inst133++; } } catch(e) {}try { if (Inst134 <= 1000 && typeof (ta) != "undefined") {_RecordType("<3800,3802,148>",(ta)); Inst134++; } } catch(e) {}
    for (let {
      typedArray,
      buffer
    } of createTypedArrays()) {
try { if (Inst135 <= 1000 && typeof (typedArray) != "undefined") {_RecordType("<3840,3850,150>",(typedArray)); Inst135++; } } catch(e) {}try { if (Inst136 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<3858,3864,151>",(buffer)); Inst136++; } } catch(e) {}try { if (Inst137 <= 1000 && typeof (createTypedArrays) != "undefined") {_RecordType("<3874,3891,152>",(createTypedArrays)); Inst137++; } } catch(e) {}
try { if (Inst139 <= 1000 && typeof (valueOf) != "undefined") {_RecordType("<3946,3953,155>",(valueOf)); Inst139++; } } catch(e) {}
      let source = {
        length: {
          valueOf() {
try { if (Inst140 <= 1000 && typeof (detachArrayBuffer) != "undefined") {_RecordType("<3970,3987,156>",(detachArrayBuffer)); Inst140++; } } catch(e) {}try { if (Inst141 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<3988,3994,156>",(buffer)); Inst141++; } } catch(e) {}
            detachArrayBuffer(buffer);
            return 0;
          }

        }
      };
try { if (Inst138 <= 1000 && typeof (source) != "undefined") {_RecordType("<3907,3913,153>",(source)); Inst138++; } } catch(e) {}
try { if (Inst142 <= 1000 && typeof (typedArray.set) != "undefined") {_RecordType("<4057,4071,162>",(typedArray.set)); Inst142++; } } catch(e) {}try { if (Inst143 <= 1000 && typeof (typedArray) != "undefined") {_RecordType("<4057,4067,162>",(typedArray)); Inst143++; } } catch(e) {}try { if (Inst144 <= 1000 && typeof (source) != "undefined") {_RecordType("<4072,4078,162>",(source)); Inst144++; } } catch(e) {}try { if (Inst145 <= 1000 && typeof (offset) != "undefined") {_RecordType("<4080,4086,162>",(offset)); Inst145++; } } catch(e) {}try { if (Inst146 <= 1000 && typeof (typedArray) != "undefined") {_RecordType("<4087,4097,162>",(typedArray)); Inst146++; } } catch(e) {}
      typedArray.set(source, offset(typedArray));
    }
  } // Test a TypeError is thrown when the typed array is detached and
  // srcLength > 0.


  for (let {
    typedArray,
    buffer
  } of createTypedArrays()) {
try { if (Inst147 <= 1000 && typeof (typedArray) != "undefined") {_RecordType("<4217,4227,169>",(typedArray)); Inst147++; } } catch(e) {}try { if (Inst148 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<4233,4239,170>",(buffer)); Inst148++; } } catch(e) {}try { if (Inst149 <= 1000 && typeof (createTypedArrays) != "undefined") {_RecordType("<4247,4264,171>",(createTypedArrays)); Inst149++; } } catch(e) {}
try { if (Inst151 <= 1000 && typeof (valueOf) != "undefined") {_RecordType("<4313,4320,174>",(valueOf)); Inst151++; } } catch(e) {}
    let source = {
      length: {
        valueOf() {
try { if (Inst152 <= 1000 && typeof (detachArrayBuffer) != "undefined") {_RecordType("<4335,4352,175>",(detachArrayBuffer)); Inst152++; } } catch(e) {}try { if (Inst153 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<4353,4359,175>",(buffer)); Inst153++; } } catch(e) {}
          detachArrayBuffer(buffer);
          return 1;
        }

      }
    };
try { if (Inst150 <= 1000 && typeof (source) != "undefined") {_RecordType("<4278,4284,172>",(source)); Inst150++; } } catch(e) {}
try { if (Inst155 <= 1000 && typeof (typedArray.length) != "undefined") {_RecordType("<4422,4439,181>",(typedArray.length)); Inst155++; } } catch(e) {}try { if (Inst156 <= 1000 && typeof (typedArray) != "undefined") {_RecordType("<4422,4432,181>",(typedArray)); Inst156++; } } catch(e) {}try { if (Inst157 <= 1000 && typeof (RangeError) != "undefined") {_RecordType("<4448,4458,181>",(RangeError)); Inst157++; } } catch(e) {}try { if (Inst158 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<4461,4470,181>",(TypeError)); Inst158++; } } catch(e) {}
    let err = typedArray.length === 0 ? RangeError : TypeError;
try { if (Inst154 <= 1000 && typeof (err) != "undefined") {_RecordType("<4416,4419,181>",(err)); Inst154++; } } catch(e) {}

try { if (Inst159 <= 1000 && typeof (typedArray.set) != "undefined") {_RecordType("<4484,4498,183>",(typedArray.set)); Inst159++; } } catch(e) {}try { if (Inst160 <= 1000 && typeof (typedArray) != "undefined") {_RecordType("<4484,4494,183>",(typedArray)); Inst160++; } } catch(e) {}try { if (Inst161 <= 1000 && typeof (source) != "undefined") {_RecordType("<4499,4505,183>",(source)); Inst161++; } } catch(e) {}
    (() => typedArray.set(source))();

try { if (Inst162 <= 1000 && typeof (err) != "undefined") {_RecordType("<4516,4519,185>",(err)); Inst162++; } } catch(e) {}
    err;
  } // Same as above, but with side-effect when executing Get(src, "0").


  for (let {
    typedArray,
    buffer
  } of createTypedArrays()) {
try { if (Inst163 <= 1000 && typeof (typedArray) != "undefined") {_RecordType("<4613,4623,190>",(typedArray)); Inst163++; } } catch(e) {}try { if (Inst164 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<4629,4635,191>",(buffer)); Inst164++; } } catch(e) {}try { if (Inst165 <= 1000 && typeof (createTypedArrays) != "undefined") {_RecordType("<4643,4660,192>",(createTypedArrays)); Inst165++; } } catch(e) {}
try { if (Inst168 <= 1000 && typeof (valueOf) != "undefined") {_RecordType("<4770,4777,199>",(valueOf)); Inst168++; } } catch(e) {}
    let source = {
      get 0() {
try { if (Inst167 <= 1000 && typeof (ExpectedError) != "undefined") {_RecordType("<4719,4732,195>",(ExpectedError)); Inst167++; } } catch(e) {}
        throw new ExpectedError();
      },

      length: {
        valueOf() {
try { if (Inst169 <= 1000 && typeof (detachArrayBuffer) != "undefined") {_RecordType("<4792,4809,200>",(detachArrayBuffer)); Inst169++; } } catch(e) {}try { if (Inst170 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<4810,4816,200>",(buffer)); Inst170++; } } catch(e) {}
          detachArrayBuffer(buffer);
          return 1;
        }

      }
    };
try { if (Inst166 <= 1000 && typeof (source) != "undefined") {_RecordType("<4674,4680,193>",(source)); Inst166++; } } catch(e) {}
try { if (Inst172 <= 1000 && typeof (typedArray.length) != "undefined") {_RecordType("<4879,4896,206>",(typedArray.length)); Inst172++; } } catch(e) {}try { if (Inst173 <= 1000 && typeof (typedArray) != "undefined") {_RecordType("<4879,4889,206>",(typedArray)); Inst173++; } } catch(e) {}try { if (Inst174 <= 1000 && typeof (RangeError) != "undefined") {_RecordType("<4905,4915,206>",(RangeError)); Inst174++; } } catch(e) {}try { if (Inst175 <= 1000 && typeof (ExpectedError) != "undefined") {_RecordType("<4918,4931,206>",(ExpectedError)); Inst175++; } } catch(e) {}
    let err = typedArray.length === 0 ? RangeError : ExpectedError;
try { if (Inst171 <= 1000 && typeof (err) != "undefined") {_RecordType("<4873,4876,206>",(err)); Inst171++; } } catch(e) {}

try { if (Inst176 <= 1000 && typeof (typedArray.set) != "undefined") {_RecordType("<4945,4959,208>",(typedArray.set)); Inst176++; } } catch(e) {}try { if (Inst177 <= 1000 && typeof (typedArray) != "undefined") {_RecordType("<4945,4955,208>",(typedArray)); Inst177++; } } catch(e) {}try { if (Inst178 <= 1000 && typeof (source) != "undefined") {_RecordType("<4960,4966,208>",(source)); Inst178++; } } catch(e) {}
    (() => typedArray.set(source))();

try { if (Inst179 <= 1000 && typeof (err) != "undefined") {_RecordType("<4977,4980,210>",(err)); Inst179++; } } catch(e) {}
    err;
  } // Same as above, but with side-effect when executing ToNumber(Get(src, "0")).


  for (let {
    typedArray,
    buffer
  } of createTypedArrays()) {
try { if (Inst180 <= 1000 && typeof (typedArray) != "undefined") {_RecordType("<5084,5094,215>",(typedArray)); Inst180++; } } catch(e) {}try { if (Inst181 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<5100,5106,216>",(buffer)); Inst181++; } } catch(e) {}try { if (Inst182 <= 1000 && typeof (createTypedArrays) != "undefined") {_RecordType("<5114,5131,217>",(createTypedArrays)); Inst182++; } } catch(e) {}
try { if (Inst186 <= 1000 && typeof (valueOf) != "undefined") {_RecordType("<5308,5315,229>",(valueOf)); Inst186++; } } catch(e) {}
    let source = {
      get 0() {
try { if (Inst184 <= 1000 && typeof (valueOf) != "undefined") {_RecordType("<5199,5206,221>",(valueOf)); Inst184++; } } catch(e) {}
        return {
          valueOf() {
try { if (Inst185 <= 1000 && typeof (ExpectedError) != "undefined") {_RecordType("<5233,5246,222>",(ExpectedError)); Inst185++; } } catch(e) {}
            throw new ExpectedError();
          }

        };
      },

      length: {
        valueOf() {
try { if (Inst187 <= 1000 && typeof (detachArrayBuffer) != "undefined") {_RecordType("<5330,5347,230>",(detachArrayBuffer)); Inst187++; } } catch(e) {}try { if (Inst188 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<5348,5354,230>",(buffer)); Inst188++; } } catch(e) {}
          detachArrayBuffer(buffer);
          return 1;
        }

      }
    };
try { if (Inst183 <= 1000 && typeof (source) != "undefined") {_RecordType("<5145,5151,218>",(source)); Inst183++; } } catch(e) {}
try { if (Inst190 <= 1000 && typeof (typedArray.length) != "undefined") {_RecordType("<5417,5434,236>",(typedArray.length)); Inst190++; } } catch(e) {}try { if (Inst191 <= 1000 && typeof (typedArray) != "undefined") {_RecordType("<5417,5427,236>",(typedArray)); Inst191++; } } catch(e) {}try { if (Inst192 <= 1000 && typeof (RangeError) != "undefined") {_RecordType("<5443,5453,236>",(RangeError)); Inst192++; } } catch(e) {}try { if (Inst193 <= 1000 && typeof (ExpectedError) != "undefined") {_RecordType("<5456,5469,236>",(ExpectedError)); Inst193++; } } catch(e) {}
    let err = typedArray.length === 0 ? RangeError : ExpectedError;
try { if (Inst189 <= 1000 && typeof (err) != "undefined") {_RecordType("<5411,5414,236>",(err)); Inst189++; } } catch(e) {}

try { if (Inst194 <= 1000 && typeof (typedArray.set) != "undefined") {_RecordType("<5483,5497,238>",(typedArray.set)); Inst194++; } } catch(e) {}try { if (Inst195 <= 1000 && typeof (typedArray) != "undefined") {_RecordType("<5483,5493,238>",(typedArray)); Inst195++; } } catch(e) {}try { if (Inst196 <= 1000 && typeof (source) != "undefined") {_RecordType("<5498,5504,238>",(source)); Inst196++; } } catch(e) {}
    (() => typedArray.set(source))();

try { if (Inst197 <= 1000 && typeof (err) != "undefined") {_RecordType("<5515,5518,240>",(err)); Inst197++; } } catch(e) {}
    err;
  } // Side-effects when getting the source elements detach the buffer.


  for (let {
    typedArray,
    buffer
  } of createTypedArrays()) {
try { if (Inst198 <= 1000 && typeof (typedArray) != "undefined") {_RecordType("<5611,5621,245>",(typedArray)); Inst198++; } } catch(e) {}try { if (Inst199 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<5627,5633,246>",(buffer)); Inst199++; } } catch(e) {}try { if (Inst200 <= 1000 && typeof (createTypedArrays) != "undefined") {_RecordType("<5641,5658,247>",(createTypedArrays)); Inst200++; } } catch(e) {}
try { if (Inst202 <= 1000 && typeof (Object.defineProperties) != "undefined") {_RecordType("<5681,5704,248>",(Object.defineProperties)); Inst202++; } } catch(e) {}try { if (Inst203 <= 1000 && typeof (Object) != "undefined") {_RecordType("<5681,5687,248>",(Object)); Inst203++; } } catch(e) {}try { if (Inst204 <= 1000 && typeof (get) != "undefined") {_RecordType("<5730,5733,250>",(get)); Inst204++; } } catch(e) {}
    let source = Object.defineProperties([], {
      0: {
        get() {
try { if (Inst205 <= 1000 && typeof (detachArrayBuffer) != "undefined") {_RecordType("<5748,5765,251>",(detachArrayBuffer)); Inst205++; } } catch(e) {}try { if (Inst206 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<5766,5772,251>",(buffer)); Inst206++; } } catch(e) {}
          detachArrayBuffer(buffer);
          return 1;
        }

      }
    });
try { if (Inst201 <= 1000 && typeof (source) != "undefined") {_RecordType("<5672,5678,248>",(source)); Inst201++; } } catch(e) {}
try { if (Inst208 <= 1000 && typeof (typedArray.length) != "undefined") {_RecordType("<5836,5853,257>",(typedArray.length)); Inst208++; } } catch(e) {}try { if (Inst209 <= 1000 && typeof (typedArray) != "undefined") {_RecordType("<5836,5846,257>",(typedArray)); Inst209++; } } catch(e) {}try { if (Inst210 <= 1000 && typeof (RangeError) != "undefined") {_RecordType("<5862,5872,257>",(RangeError)); Inst210++; } } catch(e) {}try { if (Inst211 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<5875,5884,257>",(TypeError)); Inst211++; } } catch(e) {}
    let err = typedArray.length === 0 ? RangeError : TypeError;
try { if (Inst207 <= 1000 && typeof (err) != "undefined") {_RecordType("<5830,5833,257>",(err)); Inst207++; } } catch(e) {}

try { if (Inst212 <= 1000 && typeof (typedArray.set) != "undefined") {_RecordType("<5898,5912,259>",(typedArray.set)); Inst212++; } } catch(e) {}try { if (Inst213 <= 1000 && typeof (typedArray) != "undefined") {_RecordType("<5898,5908,259>",(typedArray)); Inst213++; } } catch(e) {}try { if (Inst214 <= 1000 && typeof (source) != "undefined") {_RecordType("<5913,5919,259>",(source)); Inst214++; } } catch(e) {}
    (() => typedArray.set(source))();

try { if (Inst215 <= 1000 && typeof (err) != "undefined") {_RecordType("<5930,5933,261>",(err)); Inst215++; } } catch(e) {}
    err;
  } // Side-effects when getting the source elements detach the buffer. Also
  // ensure other elements aren't accessed.


  for (let {
    typedArray,
    buffer
  } of createTypedArrays()) {
try { if (Inst216 <= 1000 && typeof (typedArray) != "undefined") {_RecordType("<6075,6085,267>",(typedArray)); Inst216++; } } catch(e) {}try { if (Inst217 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<6091,6097,268>",(buffer)); Inst217++; } } catch(e) {}try { if (Inst218 <= 1000 && typeof (createTypedArrays) != "undefined") {_RecordType("<6105,6122,269>",(createTypedArrays)); Inst218++; } } catch(e) {}
try { if (Inst220 <= 1000 && typeof (Object.defineProperties) != "undefined") {_RecordType("<6145,6168,270>",(Object.defineProperties)); Inst220++; } } catch(e) {}try { if (Inst221 <= 1000 && typeof (Object) != "undefined") {_RecordType("<6145,6151,270>",(Object)); Inst221++; } } catch(e) {}try { if (Inst222 <= 1000 && typeof (get) != "undefined") {_RecordType("<6194,6197,272>",(get)); Inst222++; } } catch(e) {}try { if (Inst225 <= 1000 && typeof (get) != "undefined") {_RecordType("<6298,6301,279>",(get)); Inst225++; } } catch(e) {}
    let source = Object.defineProperties([], {
      0: {
        get() {
try { if (Inst223 <= 1000 && typeof (detachArrayBuffer) != "undefined") {_RecordType("<6212,6229,273>",(detachArrayBuffer)); Inst223++; } } catch(e) {}try { if (Inst224 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<6230,6236,273>",(buffer)); Inst224++; } } catch(e) {}
          detachArrayBuffer(buffer);
          return 1;
        }

      },
      1: {
        get() {
try { if (Inst226 <= 1000 && typeof (Error) != "undefined") {_RecordType("<6326,6331,280>",(Error)); Inst226++; } } catch(e) {}
          throw new Error("Unexpected access");
        }

      }
    });
try { if (Inst219 <= 1000 && typeof (source) != "undefined") {_RecordType("<6136,6142,270>",(source)); Inst219++; } } catch(e) {}
try { if (Inst228 <= 1000 && typeof (typedArray.length) != "undefined") {_RecordType("<6395,6412,285>",(typedArray.length)); Inst228++; } } catch(e) {}try { if (Inst229 <= 1000 && typeof (typedArray) != "undefined") {_RecordType("<6395,6405,285>",(typedArray)); Inst229++; } } catch(e) {}try { if (Inst230 <= 1000 && typeof (RangeError) != "undefined") {_RecordType("<6420,6430,285>",(RangeError)); Inst230++; } } catch(e) {}try { if (Inst231 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<6433,6442,285>",(TypeError)); Inst231++; } } catch(e) {}
    let err = typedArray.length <= 1 ? RangeError : TypeError;
try { if (Inst227 <= 1000 && typeof (err) != "undefined") {_RecordType("<6389,6392,285>",(err)); Inst227++; } } catch(e) {}

try { if (Inst232 <= 1000 && typeof (typedArray.set) != "undefined") {_RecordType("<6456,6470,287>",(typedArray.set)); Inst232++; } } catch(e) {}try { if (Inst233 <= 1000 && typeof (typedArray) != "undefined") {_RecordType("<6456,6466,287>",(typedArray)); Inst233++; } } catch(e) {}try { if (Inst234 <= 1000 && typeof (source) != "undefined") {_RecordType("<6471,6477,287>",(source)); Inst234++; } } catch(e) {}
    (() => typedArray.set(source))();

try { if (Inst235 <= 1000 && typeof (err) != "undefined") {_RecordType("<6488,6491,289>",(err)); Inst235++; } } catch(e) {}
    err;
  } // Side-effects when converting the source elements detach the buffer.


  for (let {
    typedArray,
    buffer
  } of createTypedArrays()) {
try { if (Inst236 <= 1000 && typeof (typedArray) != "undefined") {_RecordType("<6587,6597,294>",(typedArray)); Inst236++; } } catch(e) {}try { if (Inst237 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<6603,6609,295>",(buffer)); Inst237++; } } catch(e) {}try { if (Inst238 <= 1000 && typeof (createTypedArrays) != "undefined") {_RecordType("<6617,6634,296>",(createTypedArrays)); Inst238++; } } catch(e) {}
try { if (Inst240 <= 1000 && typeof (valueOf) != "undefined") {_RecordType("<6666,6673,298>",(valueOf)); Inst240++; } } catch(e) {}
    let source = [{
      valueOf() {
try { if (Inst241 <= 1000 && typeof (detachArrayBuffer) != "undefined") {_RecordType("<6686,6703,299>",(detachArrayBuffer)); Inst241++; } } catch(e) {}try { if (Inst242 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<6704,6710,299>",(buffer)); Inst242++; } } catch(e) {}
        detachArrayBuffer(buffer);
        return 1;
      }

    }];
try { if (Inst239 <= 1000 && typeof (source) != "undefined") {_RecordType("<6648,6654,297>",(source)); Inst239++; } } catch(e) {}
try { if (Inst244 <= 1000 && typeof (typedArray.length) != "undefined") {_RecordType("<6762,6779,304>",(typedArray.length)); Inst244++; } } catch(e) {}try { if (Inst245 <= 1000 && typeof (typedArray) != "undefined") {_RecordType("<6762,6772,304>",(typedArray)); Inst245++; } } catch(e) {}try { if (Inst246 <= 1000 && typeof (RangeError) != "undefined") {_RecordType("<6788,6798,304>",(RangeError)); Inst246++; } } catch(e) {}try { if (Inst247 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<6801,6810,304>",(TypeError)); Inst247++; } } catch(e) {}
    let err = typedArray.length === 0 ? RangeError : TypeError;
try { if (Inst243 <= 1000 && typeof (err) != "undefined") {_RecordType("<6756,6759,304>",(err)); Inst243++; } } catch(e) {}

try { if (Inst248 <= 1000 && typeof (typedArray.set) != "undefined") {_RecordType("<6824,6838,306>",(typedArray.set)); Inst248++; } } catch(e) {}try { if (Inst249 <= 1000 && typeof (typedArray) != "undefined") {_RecordType("<6824,6834,306>",(typedArray)); Inst249++; } } catch(e) {}try { if (Inst250 <= 1000 && typeof (source) != "undefined") {_RecordType("<6839,6845,306>",(source)); Inst250++; } } catch(e) {}
    (() => typedArray.set(source))();

try { if (Inst251 <= 1000 && typeof (err) != "undefined") {_RecordType("<6856,6859,308>",(err)); Inst251++; } } catch(e) {}
    err;
  } // Side-effects when converting the source elements detach the buffer. Also
  // ensure other elements aren't accessed.


  for (let {
    typedArray,
    buffer
  } of createTypedArrays()) {
try { if (Inst252 <= 1000 && typeof (typedArray) != "undefined") {_RecordType("<7004,7014,314>",(typedArray)); Inst252++; } } catch(e) {}try { if (Inst253 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<7020,7026,315>",(buffer)); Inst253++; } } catch(e) {}try { if (Inst254 <= 1000 && typeof (createTypedArrays) != "undefined") {_RecordType("<7034,7051,316>",(createTypedArrays)); Inst254++; } } catch(e) {}
try { if (Inst256 <= 1000 && typeof (valueOf) != "undefined") {_RecordType("<7083,7090,318>",(valueOf)); Inst256++; } } catch(e) {}try { if (Inst259 <= 1000 && typeof (valueOf) != "undefined") {_RecordType("<7172,7179,324>",(valueOf)); Inst259++; } } catch(e) {}
    let source = [{
      valueOf() {
try { if (Inst257 <= 1000 && typeof (detachArrayBuffer) != "undefined") {_RecordType("<7103,7120,319>",(detachArrayBuffer)); Inst257++; } } catch(e) {}try { if (Inst258 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<7121,7127,319>",(buffer)); Inst258++; } } catch(e) {}
        detachArrayBuffer(buffer);
        return 1;
      }

    }, {
      valueOf() {
try { if (Inst260 <= 1000 && typeof (Error) != "undefined") {_RecordType("<7202,7207,325>",(Error)); Inst260++; } } catch(e) {}
        throw new Error("Unexpected access");
      }

    }];
try { if (Inst255 <= 1000 && typeof (source) != "undefined") {_RecordType("<7065,7071,317>",(source)); Inst255++; } } catch(e) {}
try { if (Inst262 <= 1000 && typeof (typedArray.length) != "undefined") {_RecordType("<7261,7278,329>",(typedArray.length)); Inst262++; } } catch(e) {}try { if (Inst263 <= 1000 && typeof (typedArray) != "undefined") {_RecordType("<7261,7271,329>",(typedArray)); Inst263++; } } catch(e) {}try { if (Inst264 <= 1000 && typeof (RangeError) != "undefined") {_RecordType("<7286,7296,329>",(RangeError)); Inst264++; } } catch(e) {}try { if (Inst265 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<7299,7308,329>",(TypeError)); Inst265++; } } catch(e) {}
    let err = typedArray.length <= 1 ? RangeError : TypeError;
try { if (Inst261 <= 1000 && typeof (err) != "undefined") {_RecordType("<7255,7258,329>",(err)); Inst261++; } } catch(e) {}

try { if (Inst266 <= 1000 && typeof (typedArray.set) != "undefined") {_RecordType("<7322,7336,331>",(typedArray.set)); Inst266++; } } catch(e) {}try { if (Inst267 <= 1000 && typeof (typedArray) != "undefined") {_RecordType("<7322,7332,331>",(typedArray)); Inst267++; } } catch(e) {}try { if (Inst268 <= 1000 && typeof (source) != "undefined") {_RecordType("<7337,7343,331>",(source)); Inst268++; } } catch(e) {}
    (() => typedArray.set(source))();

try { if (Inst269 <= 1000 && typeof (err) != "undefined") {_RecordType("<7354,7357,333>",(err)); Inst269++; } } catch(e) {}
    err;
  }
}

try { if (Inst270 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<7377,7390,337>",(reportCompare)); Inst270++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst271 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<7411,7424,338>",(reportCompare)); Inst271++; } } catch(e) {}
  reportCompare(true, true);
}

