var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (detachArrayBuffer) != "undefined") {_RecordType("<11,28,1>",(detachArrayBuffer)); Inst0++; } } catch(e) {}
if (typeof detachArrayBuffer === "function") {
try { if (Inst2 <= 1000 && typeof (Number.prototype.toLocaleString) != "undefined") {_RecordType("<86,117,2>",(Number.prototype.toLocaleString)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Number.prototype) != "undefined") {_RecordType("<86,102,2>",(Number.prototype)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Number) != "undefined") {_RecordType("<86,92,2>",(Number)); Inst4++; } } catch(e) {}
  const originalNumberToLocaleString = Number.prototype.toLocaleString; // Throws if array buffer is detached.
try { if (Inst1 <= 1000 && typeof (originalNumberToLocaleString) != "undefined") {_RecordType("<55,83,2>",(originalNumberToLocaleString)); Inst1++; } } catch(e) {}

  for (let constructor of typedArrayConstructors) {
try { if (Inst5 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<170,181,4>",(constructor)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (typedArrayConstructors) != "undefined") {_RecordType("<185,207,4>",(typedArrayConstructors)); Inst6++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<236,247,5>",(constructor)); Inst8++; } } catch(e) {}
    let typedArray = new constructor(42);
try { if (Inst7 <= 1000 && typeof (typedArray) != "undefined") {_RecordType("<219,229,5>",(typedArray)); Inst7++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (detachArrayBuffer) != "undefined") {_RecordType("<257,274,6>",(detachArrayBuffer)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (typedArray.buffer) != "undefined") {_RecordType("<275,292,6>",(typedArray.buffer)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (typedArray) != "undefined") {_RecordType("<275,285,6>",(typedArray)); Inst11++; } } catch(e) {}
    detachArrayBuffer(typedArray.buffer);

try { if (Inst12 <= 1000 && typeof (typedArray.toLocaleString) != "undefined") {_RecordType("<307,332,8>",(typedArray.toLocaleString)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (typedArray) != "undefined") {_RecordType("<307,317,8>",(typedArray)); Inst13++; } } catch(e) {}
    (() => typedArray.toLocaleString())();

try { if (Inst14 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<344,353,10>",(TypeError)); Inst14++; } } catch(e) {}
    TypeError;
  } // Throws a TypeError if detached in Number.prototype.toLocaleString.


  for (let constructor of typedArrayConstructors) {
try { if (Inst15 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<442,453,14>",(constructor)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (typedArrayConstructors) != "undefined") {_RecordType("<457,479,14>",(typedArrayConstructors)); Inst16++; } } catch(e) {}
    Number.prototype.toLocaleString = function () {
      "use strict";

try { if (Inst20 <= 1000 && typeof (detached) != "undefined") {_RecordType("<567,575,18>",(detached)); Inst20++; } } catch(e) {}
      if (!detached) {
try { if (Inst21 <= 1000 && typeof (detachArrayBuffer) != "undefined") {_RecordType("<587,604,19>",(detachArrayBuffer)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (typedArray.buffer) != "undefined") {_RecordType("<605,622,19>",(typedArray.buffer)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (typedArray) != "undefined") {_RecordType("<605,615,19>",(typedArray)); Inst23++; } } catch(e) {}
        detachArrayBuffer(typedArray.buffer);
        detached = true;
try { if (Inst24 <= 1000 && typeof (detached) != "undefined") {_RecordType("<633,641,20>",(detached)); Inst24++; } } catch(e) {}
      }

      return this;
    }; // No error for single element arrays.
try { if (Inst17 <= 1000 && typeof (Number.prototype.toLocaleString) != "undefined") {_RecordType("<487,518,15>",(Number.prototype.toLocaleString)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Number.prototype) != "undefined") {_RecordType("<487,503,15>",(Number.prototype)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Number) != "undefined") {_RecordType("<487,493,15>",(Number)); Inst19++; } } catch(e) {}


    let detached = false;
try { if (Inst25 <= 1000 && typeof (detached) != "undefined") {_RecordType("<734,742,27>",(detached)); Inst25++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<777,788,28>",(constructor)); Inst27++; } } catch(e) {}
    let typedArray = new constructor(1);
try { if (Inst26 <= 1000 && typeof (typedArray) != "undefined") {_RecordType("<760,770,28>",(typedArray)); Inst26++; } } catch(e) {}
try { if (Inst28 <= 1000 && typeof (typedArray.toLocaleString) != "undefined") {_RecordType("<797,822,29>",(typedArray.toLocaleString)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (typedArray) != "undefined") {_RecordType("<797,807,29>",(typedArray)); Inst29++; } } catch(e) {}
    typedArray.toLocaleString();
    "0";
try { if (Inst30 <= 1000 && typeof (detached) != "undefined") {_RecordType("<839,847,31>",(detached)); Inst30++; } } catch(e) {}
    detached;
    true;
    // TypeError if more than one element is present.
    detached = false;
try { if (Inst31 <= 1000 && typeof (detached) != "undefined") {_RecordType("<917,925,34>",(detached)); Inst31++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<956,967,35>",(constructor)); Inst33++; } } catch(e) {}
    typedArray = new constructor(2);
try { if (Inst32 <= 1000 && typeof (typedArray) != "undefined") {_RecordType("<939,949,35>",(typedArray)); Inst32++; } } catch(e) {}

try { if (Inst34 <= 1000 && typeof (typedArray.toLocaleString) != "undefined") {_RecordType("<984,1009,37>",(typedArray.toLocaleString)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (typedArray) != "undefined") {_RecordType("<984,994,37>",(typedArray)); Inst35++; } } catch(e) {}
    (() => typedArray.toLocaleString())();

try { if (Inst36 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<1021,1030,39>",(TypeError)); Inst36++; } } catch(e) {}
    TypeError;
try { if (Inst37 <= 1000 && typeof (detached) != "undefined") {_RecordType("<1036,1044,40>",(detached)); Inst37++; } } catch(e) {}
    detached;
    true;
  }

try { if (Inst41 <= 1000 && typeof (originalNumberToLocaleString) != "undefined") {_RecordType("<1097,1125,44>",(originalNumberToLocaleString)); Inst41++; } } catch(e) {}
  Number.prototype.toLocaleString = originalNumberToLocaleString;
try { if (Inst38 <= 1000 && typeof (Number.prototype.toLocaleString) != "undefined") {_RecordType("<1063,1094,44>",(Number.prototype.toLocaleString)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (Number.prototype) != "undefined") {_RecordType("<1063,1079,44>",(Number.prototype)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (Number) != "undefined") {_RecordType("<1063,1069,44>",(Number)); Inst40++; } } catch(e) {}
}

try { if (Inst42 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1141,1154,47>",(reportCompare)); Inst42++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst43 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1175,1188,48>",(reportCompare)); Inst43++; } } catch(e) {}
  reportCompare(true, true);
}

