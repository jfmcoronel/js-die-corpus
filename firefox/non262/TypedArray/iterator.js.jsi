var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Ensure that we're using [[ArrayLength]] to determine the number of
// values to produce instead of the length property.
try { if (Inst0 <= 1000 && typeof (testIterationCount) != "undefined") {_RecordType("<132,150,3>",(testIterationCount)); Inst0++; } } catch(e) {}
function testIterationCount(iterator, expectedLength) {
try { if (Inst1 <= 1000 && typeof (iterator) != "undefined") {_RecordType("<151,159,3>",(iterator)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (expectedLength) != "undefined") {_RecordType("<161,175,3>",(expectedLength)); Inst2++; } } catch(e) {}
  for (let i = 0; i < expectedLength; i++) {
try { if (Inst3 <= 1000 && typeof (i) != "undefined") {_RecordType("<190,191,4>",(i)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (i) != "undefined") {_RecordType("<197,198,4>",(i)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (expectedLength) != "undefined") {_RecordType("<201,215,4>",(expectedLength)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<217,218,4>",(i)); Inst6++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (iterator.next().done) != "undefined") {_RecordType("<228,248,5>",(iterator.next().done)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (iterator.next) != "undefined") {_RecordType("<228,241,5>",(iterator.next)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (iterator) != "undefined") {_RecordType("<228,236,5>",(iterator)); Inst9++; } } catch(e) {}
    iterator.next().done;
    false;
  }

try { if (Inst10 <= 1000 && typeof (iterator.next().done) != "undefined") {_RecordType("<268,288,9>",(iterator.next().done)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (iterator.next) != "undefined") {_RecordType("<268,281,9>",(iterator.next)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (iterator) != "undefined") {_RecordType("<268,276,9>",(iterator)); Inst12++; } } catch(e) {}
  iterator.next().done;
  true;
}

try { if (Inst14 <= 1000 && typeof (Int8Array) != "undefined") {_RecordType("<319,328,13>",(Int8Array)); Inst14++; } } catch(e) {}
let i8Array = new Int8Array(4);
try { if (Inst13 <= 1000 && typeof (i8Array) != "undefined") {_RecordType("<305,312,13>",(i8Array)); Inst13++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<333,354,14>",(Object.defineProperty)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Object) != "undefined") {_RecordType("<333,339,14>",(Object)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (i8Array) != "undefined") {_RecordType("<355,362,14>",(i8Array)); Inst17++; } } catch(e) {}
Object.defineProperty(i8Array, "length", {
  value: 0
});
try { if (Inst19 <= 1000 && typeof (i8Array[Symbol.iterator]) != "undefined") {_RecordType("<408,432,17>",(i8Array[Symbol.iterator])); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (i8Array) != "undefined") {_RecordType("<408,415,17>",(i8Array)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<416,431,17>",(Symbol.iterator)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<416,422,17>",(Symbol)); Inst22++; } } catch(e) {}
let i8Iterator = i8Array[Symbol.iterator]();
try { if (Inst18 <= 1000 && typeof (i8Iterator) != "undefined") {_RecordType("<395,405,17>",(i8Iterator)); Inst18++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (testIterationCount) != "undefined") {_RecordType("<436,454,18>",(testIterationCount)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (i8Iterator) != "undefined") {_RecordType("<455,465,18>",(i8Iterator)); Inst24++; } } catch(e) {}
testIterationCount(i8Iterator, 4); // Veryify that the length property isn't even touched

try { if (Inst26 <= 1000 && typeof (Int8Array) != "undefined") {_RecordType("<541,550,20>",(Int8Array)); Inst26++; } } catch(e) {}
i8Array = new Int8Array();
try { if (Inst25 <= 1000 && typeof (i8Array) != "undefined") {_RecordType("<527,534,20>",(i8Array)); Inst25++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<554,575,21>",(Object.defineProperty)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (Object) != "undefined") {_RecordType("<554,560,21>",(Object)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (i8Array) != "undefined") {_RecordType("<576,583,21>",(i8Array)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (get) != "undefined") {_RecordType("<599,602,22>",(get)); Inst30++; } } catch(e) {}
Object.defineProperty(i8Array, "length", {
  get() {
try { if (Inst31 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<617,626,23>",(TypeError)); Inst31++; } } catch(e) {}
    throw TypeError;
  }

});
try { if (Inst33 <= 1000 && typeof (i8Array[Symbol.iterator]) != "undefined") {_RecordType("<650,674,27>",(i8Array[Symbol.iterator])); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (i8Array) != "undefined") {_RecordType("<650,657,27>",(i8Array)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<658,673,27>",(Symbol.iterator)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<658,664,27>",(Symbol)); Inst36++; } } catch(e) {}
i8Iterator = i8Array[Symbol.iterator]();
try { if (Inst32 <= 1000 && typeof (i8Iterator) != "undefined") {_RecordType("<637,647,27>",(i8Iterator)); Inst32++; } } catch(e) {}
try { if (Inst37 <= 1000 && typeof (testIterationCount) != "undefined") {_RecordType("<678,696,28>",(testIterationCount)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (i8Iterator) != "undefined") {_RecordType("<697,707,28>",(i8Iterator)); Inst38++; } } catch(e) {}
testIterationCount(i8Iterator, 0); // Verify that it works for set as well

try { if (Inst40 <= 1000 && typeof (Uint8Array) != "undefined") {_RecordType("<768,778,30>",(Uint8Array)); Inst40++; } } catch(e) {}
i8Array = new Uint8Array(1); // Try setting a high length which would trigger failure
try { if (Inst39 <= 1000 && typeof (i8Array) != "undefined") {_RecordType("<754,761,30>",(i8Array)); Inst39++; } } catch(e) {}

try { if (Inst41 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<841,862,32>",(Object.defineProperty)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (Object) != "undefined") {_RecordType("<841,847,32>",(Object)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (i8Array) != "undefined") {_RecordType("<863,870,32>",(i8Array)); Inst43++; } } catch(e) {}
Object.defineProperty(i8Array, "length", {
  value: 15
}); // Works if the fake length is ignored

try { if (Inst44 <= 1000 && typeof (new Uint8Array(4).set) != "undefined") {_RecordType("<940,961,36>",(new Uint8Array(4).set)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (Uint8Array) != "undefined") {_RecordType("<944,954,36>",(Uint8Array)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (i8Array) != "undefined") {_RecordType("<962,969,36>",(i8Array)); Inst46++; } } catch(e) {}
new Uint8Array(4).set(i8Array, 3); // Ensure that it works across globals

try { if (Inst48 <= 1000 && typeof (newGlobal) != "undefined") {_RecordType("<1024,1033,38>",(newGlobal)); Inst48++; } } catch(e) {}
let g2 = newGlobal();
try { if (Inst47 <= 1000 && typeof (g2) != "undefined") {_RecordType("<1019,1021,38>",(g2)); Inst47++; } } catch(e) {}
try { if (Inst50 <= 1000 && typeof (Int8Array) != "undefined") {_RecordType("<1051,1060,39>",(Int8Array)); Inst50++; } } catch(e) {}
i8Array = new Int8Array(8);
try { if (Inst49 <= 1000 && typeof (i8Array) != "undefined") {_RecordType("<1037,1044,39>",(i8Array)); Inst49++; } } catch(e) {}
try { if (Inst51 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<1065,1086,40>",(Object.defineProperty)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1065,1071,40>",(Object)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (i8Array) != "undefined") {_RecordType("<1087,1094,40>",(i8Array)); Inst53++; } } catch(e) {}
Object.defineProperty(i8Array, "length", {
  value: 0
});
try { if (Inst55 <= 1000 && typeof (i8Array[Symbol.iterator]) != "undefined") {_RecordType("<1138,1162,43>",(i8Array[Symbol.iterator])); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (i8Array) != "undefined") {_RecordType("<1138,1145,43>",(i8Array)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<1146,1161,43>",(Symbol.iterator)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<1146,1152,43>",(Symbol)); Inst58++; } } catch(e) {}
let iterator = i8Array[Symbol.iterator]();
try { if (Inst54 <= 1000 && typeof (iterator) != "undefined") {_RecordType("<1127,1135,43>",(iterator)); Inst54++; } } catch(e) {}
try { if (Inst61 <= 1000 && typeof (g2.Array.prototype[Symbol.iterator]().next) != "undefined") {_RecordType("<1182,1224,44>",(g2.Array.prototype[Symbol.iterator]().next)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (g2.Array.prototype[Symbol.iterator]) != "undefined") {_RecordType("<1182,1217,44>",(g2.Array.prototype[Symbol.iterator])); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (g2.Array.prototype) != "undefined") {_RecordType("<1182,1200,44>",(g2.Array.prototype)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (g2.Array) != "undefined") {_RecordType("<1182,1190,44>",(g2.Array)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (g2) != "undefined") {_RecordType("<1182,1184,44>",(g2)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<1201,1216,44>",(Symbol.iterator)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<1201,1207,44>",(Symbol)); Inst67++; } } catch(e) {}
iterator.next = g2.Array.prototype[Symbol.iterator]().next;
try { if (Inst59 <= 1000 && typeof (iterator.next) != "undefined") {_RecordType("<1166,1179,44>",(iterator.next)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (iterator) != "undefined") {_RecordType("<1166,1174,44>",(iterator)); Inst60++; } } catch(e) {}
try { if (Inst68 <= 1000 && typeof (testIterationCount) != "undefined") {_RecordType("<1226,1244,45>",(testIterationCount)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (iterator) != "undefined") {_RecordType("<1245,1253,45>",(iterator)); Inst69++; } } catch(e) {}
testIterationCount(iterator, 8);

try { if (Inst70 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1271,1284,47>",(reportCompare)); Inst70++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst71 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1305,1318,48>",(reportCompare)); Inst71++; } } catch(e) {}
  reportCompare(true, true);
}

