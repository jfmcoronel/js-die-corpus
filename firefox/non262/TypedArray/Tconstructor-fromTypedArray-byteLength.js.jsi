var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst1 <= 1000 && typeof (newGlobal) != "undefined") {_RecordType("<8,17,1>",(newGlobal)); Inst1++; } } catch(e) {}
var g = newGlobal();
try { if (Inst0 <= 1000 && typeof (g) != "undefined") {_RecordType("<4,5,1>",(g)); Inst0++; } } catch(e) {}
var arr = [1, 2, 3];
try { if (Inst2 <= 1000 && typeof (arr) != "undefined") {_RecordType("<25,28,2>",(arr)); Inst2++; } } catch(e) {}

for (var constructor of anyTypedArrayConstructors) {
try { if (Inst3 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<52,63,4>",(constructor)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (anyTypedArrayConstructors) != "undefined") {_RecordType("<67,92,4>",(anyTypedArrayConstructors)); Inst4++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<113,124,5>",(constructor)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (arr) != "undefined") {_RecordType("<125,128,5>",(arr)); Inst7++; } } catch(e) {}
  var tarr = new constructor(arr);
try { if (Inst5 <= 1000 && typeof (tarr) != "undefined") {_RecordType("<102,106,5>",(tarr)); Inst5++; } } catch(e) {}

  for (var constructor2 of anyTypedArrayConstructors) {
try { if (Inst8 <= 1000 && typeof (constructor2) != "undefined") {_RecordType("<143,155,7>",(constructor2)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (anyTypedArrayConstructors) != "undefined") {_RecordType("<159,184,7>",(anyTypedArrayConstructors)); Inst9++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (constructor2) != "undefined") {_RecordType("<209,221,8>",(constructor2)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (tarr) != "undefined") {_RecordType("<222,226,8>",(tarr)); Inst12++; } } catch(e) {}
    var copied = new constructor2(tarr);
try { if (Inst10 <= 1000 && typeof (copied) != "undefined") {_RecordType("<196,202,8>",(copied)); Inst10++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (copied.buffer.byteLength) != "undefined") {_RecordType("<233,257,9>",(copied.buffer.byteLength)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (copied.buffer) != "undefined") {_RecordType("<233,246,9>",(copied.buffer)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (copied) != "undefined") {_RecordType("<233,239,9>",(copied)); Inst15++; } } catch(e) {}
    copied.buffer.byteLength;
try { if (Inst16 <= 1000 && typeof (arr.length) != "undefined") {_RecordType("<263,273,10>",(arr.length)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (arr) != "undefined") {_RecordType("<263,266,10>",(arr)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (constructor2.BYTES_PER_ELEMENT) != "undefined") {_RecordType("<276,306,10>",(constructor2.BYTES_PER_ELEMENT)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (constructor2) != "undefined") {_RecordType("<276,288,10>",(constructor2)); Inst19++; } } catch(e) {}
    arr.length * constructor2.BYTES_PER_ELEMENT;
try { if (Inst22 <= 1000 && typeof (tarr) != "undefined") {_RecordType("<321,325,11>",(tarr)); Inst22++; } } catch(e) {}
    g.tarr = tarr;
try { if (Inst20 <= 1000 && typeof (g.tarr) != "undefined") {_RecordType("<312,318,11>",(g.tarr)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (g) != "undefined") {_RecordType("<312,313,11>",(g)); Inst21++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (g.eval) != "undefined") {_RecordType("<340,346,12>",(g.eval)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (g) != "undefined") {_RecordType("<340,341,12>",(g)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (constructor2.name) != "undefined") {_RecordType("<354,371,12>",(constructor2.name)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (constructor2) != "undefined") {_RecordType("<354,366,12>",(constructor2)); Inst27++; } } catch(e) {}
    copied = g.eval(`new ${constructor2.name}(tarr);`);
try { if (Inst23 <= 1000 && typeof (copied) != "undefined") {_RecordType("<331,337,12>",(copied)); Inst23++; } } catch(e) {}
try { if (Inst28 <= 1000 && typeof (copied.buffer.byteLength) != "undefined") {_RecordType("<387,411,13>",(copied.buffer.byteLength)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (copied.buffer) != "undefined") {_RecordType("<387,400,13>",(copied.buffer)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (copied) != "undefined") {_RecordType("<387,393,13>",(copied)); Inst30++; } } catch(e) {}
    copied.buffer.byteLength;
try { if (Inst31 <= 1000 && typeof (arr.length) != "undefined") {_RecordType("<417,427,14>",(arr.length)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (arr) != "undefined") {_RecordType("<417,420,14>",(arr)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (constructor2.BYTES_PER_ELEMENT) != "undefined") {_RecordType("<430,460,14>",(constructor2.BYTES_PER_ELEMENT)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (constructor2) != "undefined") {_RecordType("<430,442,14>",(constructor2)); Inst34++; } } catch(e) {}
    arr.length * constructor2.BYTES_PER_ELEMENT;
  }
}

try { if (Inst35 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<480,493,18>",(reportCompare)); Inst35++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst36 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<514,527,19>",(reportCompare)); Inst36++; } } catch(e) {}
  reportCompare(true, true);
}

