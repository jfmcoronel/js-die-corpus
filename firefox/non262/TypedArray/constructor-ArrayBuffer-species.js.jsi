var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
let logs = [];
try { if (Inst0 <= 1000 && typeof (logs) != "undefined") {_RecordType("<4,8,1>",(logs)); Inst0++; } } catch(e) {}

for (let ctor of typedArrayConstructors) {
try { if (Inst1 <= 1000 && typeof (ctor) != "undefined") {_RecordType("<25,29,3>",(ctor)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (typedArrayConstructors) != "undefined") {_RecordType("<33,55,3>",(typedArrayConstructors)); Inst2++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (ctor) != "undefined") {_RecordType("<75,79,4>",(ctor)); Inst4++; } } catch(e) {}
  let arr = new ctor([1, 2, 3, 4, 5, 6, 7, 8]);
try { if (Inst3 <= 1000 && typeof (arr) != "undefined") {_RecordType("<65,68,4>",(arr)); Inst3++; } } catch(e) {}
  let ctorObj = {};
try { if (Inst5 <= 1000 && typeof (ctorObj) != "undefined") {_RecordType("<113,120,5>",(ctorObj)); Inst5++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<150,155,6>",(Proxy)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (get) != "undefined") {_RecordType("<166,169,7>",(get)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (that) != "undefined") {_RecordType("<170,174,7>",(that)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (name) != "undefined") {_RecordType("<176,180,7>",(name)); Inst10++; } } catch(e) {}
  let proxyProto = new Proxy({}, {
    get(that, name) {
try { if (Inst11 <= 1000 && typeof (logs.push) != "undefined") {_RecordType("<190,199,8>",(logs.push)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (logs) != "undefined") {_RecordType("<190,194,8>",(logs)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (String) != "undefined") {_RecordType("<215,221,8>",(String)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (name) != "undefined") {_RecordType("<222,226,8>",(name)); Inst14++; } } catch(e) {}
      logs.push("get proto." + String(name));

try { if (Inst15 <= 1000 && typeof (name) != "undefined") {_RecordType("<241,245,10>",(name)); Inst15++; } } catch(e) {}
      if (name == "constructor") {
try { if (Inst16 <= 1000 && typeof (ctorObj) != "undefined") {_RecordType("<281,288,11>",(ctorObj)); Inst16++; } } catch(e) {}
        return ctorObj;
      }

try { if (Inst17 <= 1000 && typeof (Error) != "undefined") {_RecordType("<315,320,14>",(Error)); Inst17++; } } catch(e) {}
      throw new Error("unexpected prop access");
    }

  });
try { if (Inst6 <= 1000 && typeof (proxyProto) != "undefined") {_RecordType("<133,143,6>",(proxyProto)); Inst6++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (Symbol.species) != "undefined") {_RecordType("<399,413,19>",(Symbol.species)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<399,405,19>",(Symbol)); Inst22++; } } catch(e) {}
  arr.buffer.constructor = {
    get [Symbol.species]() {
try { if (Inst23 <= 1000 && typeof (logs.push) != "undefined") {_RecordType("<425,434,20>",(logs.push)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (logs) != "undefined") {_RecordType("<425,429,20>",(logs)); Inst24++; } } catch(e) {}
      logs.push("get @@species");
try { if (Inst26 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<471,476,21>",(Proxy)); Inst26++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (get) != "undefined") {_RecordType("<590,593,25>",(get)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (that) != "undefined") {_RecordType("<594,598,25>",(that)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (name) != "undefined") {_RecordType("<600,604,25>",(name)); Inst34++; } } catch(e) {}
      let C = new Proxy(function (...args) {
try { if (Inst27 <= 1000 && typeof (args) != "undefined") {_RecordType("<490,494,21>",(args)); Inst27++; } } catch(e) {}
try { if (Inst28 <= 1000 && typeof (logs.push) != "undefined") {_RecordType("<506,515,22>",(logs.push)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (logs) != "undefined") {_RecordType("<506,510,22>",(logs)); Inst29++; } } catch(e) {}
        logs.push("call ctor");
try { if (Inst30 <= 1000 && typeof (ArrayBuffer) != "undefined") {_RecordType("<549,560,23>",(ArrayBuffer)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (args) != "undefined") {_RecordType("<564,568,23>",(args)); Inst31++; } } catch(e) {}
        return new ArrayBuffer(...args);
      }, {
        get(that, name) {
try { if (Inst35 <= 1000 && typeof (logs.push) != "undefined") {_RecordType("<618,627,26>",(logs.push)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (logs) != "undefined") {_RecordType("<618,622,26>",(logs)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (String) != "undefined") {_RecordType("<642,648,26>",(String)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (name) != "undefined") {_RecordType("<649,653,26>",(name)); Inst38++; } } catch(e) {}
          logs.push("get ctor." + String(name));

try { if (Inst39 <= 1000 && typeof (name) != "undefined") {_RecordType("<672,676,28>",(name)); Inst39++; } } catch(e) {}
          if (name == "prototype") {
try { if (Inst40 <= 1000 && typeof (proxyProto) != "undefined") {_RecordType("<714,724,29>",(proxyProto)); Inst40++; } } catch(e) {}
            return proxyProto;
          }

try { if (Inst41 <= 1000 && typeof (Error) != "undefined") {_RecordType("<759,764,32>",(Error)); Inst41++; } } catch(e) {}
          throw new Error("unexpected prop access");
        }

      });
try { if (Inst25 <= 1000 && typeof (C) != "undefined") {_RecordType("<463,464,21>",(C)); Inst25++; } } catch(e) {}
try { if (Inst42 <= 1000 && typeof (C) != "undefined") {_RecordType("<826,827,36>",(C)); Inst42++; } } catch(e) {}
      return C;
    }

  };
try { if (Inst18 <= 1000 && typeof (arr.buffer.constructor) != "undefined") {_RecordType("<363,385,18>",(arr.buffer.constructor)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (arr.buffer) != "undefined") {_RecordType("<363,373,18>",(arr.buffer)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (arr) != "undefined") {_RecordType("<363,366,18>",(arr)); Inst20++; } } catch(e) {}

  for (let ctor2 of typedArrayConstructors) {
try { if (Inst43 <= 1000 && typeof (ctor2) != "undefined") {_RecordType("<853,858,41>",(ctor2)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (typedArrayConstructors) != "undefined") {_RecordType("<862,884,41>",(typedArrayConstructors)); Inst44++; } } catch(e) {}
    logs.length = 0;
try { if (Inst45 <= 1000 && typeof (logs.length) != "undefined") {_RecordType("<892,903,42>",(logs.length)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (logs) != "undefined") {_RecordType("<892,896,42>",(logs)); Inst46++; } } catch(e) {}
try { if (Inst48 <= 1000 && typeof (ctor2) != "undefined") {_RecordType("<928,933,43>",(ctor2)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (arr) != "undefined") {_RecordType("<934,937,43>",(arr)); Inst49++; } } catch(e) {}
    let arr2 = new ctor2(arr);
try { if (Inst47 <= 1000 && typeof (arr2) != "undefined") {_RecordType("<917,921,43>",(arr2)); Inst47++; } } catch(e) {}
try { if (Inst50 <= 1000 && typeof (logs) != "undefined") {_RecordType("<944,948,44>",(logs)); Inst50++; } } catch(e) {}
    logs;
    ["get @@species", "get ctor.prototype"];
    logs.length = 0;
try { if (Inst51 <= 1000 && typeof (logs.length) != "undefined") {_RecordType("<999,1010,46>",(logs.length)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (logs) != "undefined") {_RecordType("<999,1003,46>",(logs)); Inst52++; } } catch(e) {}
try { if (Inst53 <= 1000 && typeof (Object.getPrototypeOf) != "undefined") {_RecordType("<1020,1041,47>",(Object.getPrototypeOf)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1020,1026,47>",(Object)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (arr2.buffer) != "undefined") {_RecordType("<1042,1053,47>",(arr2.buffer)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (arr2) != "undefined") {_RecordType("<1042,1046,47>",(arr2)); Inst56++; } } catch(e) {}
    Object.getPrototypeOf(arr2.buffer);
try { if (Inst57 <= 1000 && typeof (proxyProto) != "undefined") {_RecordType("<1060,1070,48>",(proxyProto)); Inst57++; } } catch(e) {}
    proxyProto;
try { if (Inst58 <= 1000 && typeof (logs) != "undefined") {_RecordType("<1076,1080,49>",(logs)); Inst58++; } } catch(e) {}
    logs;
    [];
    logs.length = 0;
try { if (Inst59 <= 1000 && typeof (logs.length) != "undefined") {_RecordType("<1094,1105,51>",(logs.length)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (logs) != "undefined") {_RecordType("<1094,1098,51>",(logs)); Inst60++; } } catch(e) {}
try { if (Inst61 <= 1000 && typeof (arr2.buffer.constructor) != "undefined") {_RecordType("<1115,1138,52>",(arr2.buffer.constructor)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (arr2.buffer) != "undefined") {_RecordType("<1115,1126,52>",(arr2.buffer)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (arr2) != "undefined") {_RecordType("<1115,1119,52>",(arr2)); Inst63++; } } catch(e) {}
    arr2.buffer.constructor;
try { if (Inst64 <= 1000 && typeof (ctorObj) != "undefined") {_RecordType("<1144,1151,53>",(ctorObj)); Inst64++; } } catch(e) {}
    ctorObj;
try { if (Inst65 <= 1000 && typeof (logs) != "undefined") {_RecordType("<1157,1161,54>",(logs)); Inst65++; } } catch(e) {}
    logs;
    ["get proto.constructor"];
  }
}

try { if (Inst66 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1212,1225,59>",(reportCompare)); Inst66++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst67 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1246,1259,60>",(reportCompare)); Inst67++; } } catch(e) {}
  reportCompare(true, true);
}

