var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Tests for detached ArrayBuffer checks in %TypedArray%.prototype.slice ( start, end ).
try { if (Inst0 <= 1000 && typeof (createTypedArrays) != "undefined") {_RecordType("<99,116,2>",(createTypedArrays)); Inst0++; } } catch(e) {}
function* createTypedArrays(lengths = [0, 1, 4, 4096]) {
try { if (Inst1 <= 1000 && typeof (lengths) != "undefined") {_RecordType("<117,124,2>",(lengths)); Inst1++; } } catch(e) {}
  // Test with eagerly created ArrayBuffer.
  for (let length of lengths) {
try { if (Inst2 <= 1000 && typeof (length) != "undefined") {_RecordType("<201,207,4>",(length)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (lengths) != "undefined") {_RecordType("<211,218,4>",(lengths)); Inst3++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (ArrayBuffer) != "undefined") {_RecordType("<243,254,5>",(ArrayBuffer)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (length) != "undefined") {_RecordType("<255,261,5>",(length)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Int32Array.BYTES_PER_ELEMENT) != "undefined") {_RecordType("<264,292,5>",(Int32Array.BYTES_PER_ELEMENT)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Int32Array) != "undefined") {_RecordType("<264,274,5>",(Int32Array)); Inst8++; } } catch(e) {}
    let buffer = new ArrayBuffer(length * Int32Array.BYTES_PER_ELEMENT);
try { if (Inst4 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<230,236,5>",(buffer)); Inst4++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (Int32Array) != "undefined") {_RecordType("<320,330,6>",(Int32Array)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<331,337,6>",(buffer)); Inst11++; } } catch(e) {}
    let typedArray = new Int32Array(buffer);
try { if (Inst9 <= 1000 && typeof (typedArray) != "undefined") {_RecordType("<303,313,6>",(typedArray)); Inst9++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (typedArray) != "undefined") {_RecordType("<358,368,8>",(typedArray)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (length) != "undefined") {_RecordType("<376,382,9>",(length)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<391,397,11>",(buffer)); Inst14++; } } catch(e) {}
    yield {
      typedArray,
      length,

      buffer() {
try { if (Inst15 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<417,423,12>",(buffer)); Inst15++; } } catch(e) {}
        return buffer;
      }

    };
  } // Test with lazily created ArrayBuffer.


  for (let length of lengths) {
try { if (Inst16 <= 1000 && typeof (length) != "undefined") {_RecordType("<499,505,19>",(length)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (lengths) != "undefined") {_RecordType("<509,516,19>",(lengths)); Inst17++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (Int32Array) != "undefined") {_RecordType("<545,555,20>",(Int32Array)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (length) != "undefined") {_RecordType("<556,562,20>",(length)); Inst20++; } } catch(e) {}
    let typedArray = new Int32Array(length);
try { if (Inst18 <= 1000 && typeof (typedArray) != "undefined") {_RecordType("<528,538,20>",(typedArray)); Inst18++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (typedArray) != "undefined") {_RecordType("<583,593,22>",(typedArray)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (length) != "undefined") {_RecordType("<601,607,23>",(length)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<616,622,25>",(buffer)); Inst23++; } } catch(e) {}
    yield {
      typedArray,
      length,

      buffer() {
try { if (Inst24 <= 1000 && typeof (typedArray.buffer) != "undefined") {_RecordType("<642,659,26>",(typedArray.buffer)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (typedArray) != "undefined") {_RecordType("<642,652,26>",(typedArray)); Inst25++; } } catch(e) {}
        return typedArray.buffer;
      }

    };
  }
}

try { if (Inst26 <= 1000 && typeof (detachArrayBuffer) != "undefined") {_RecordType("<695,712,33>",(detachArrayBuffer)); Inst26++; } } catch(e) {}
if (typeof detachArrayBuffer === "function") {
  // ArrayBuffer is detached when entering slice().
  for (let {
    typedArray,
    buffer
  } of createTypedArrays()) {
try { if (Inst27 <= 1000 && typeof (typedArray) != "undefined") {_RecordType("<800,810,36>",(typedArray)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<816,822,37>",(buffer)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (createTypedArrays) != "undefined") {_RecordType("<830,847,38>",(createTypedArrays)); Inst29++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (detachArrayBuffer) != "undefined") {_RecordType("<857,874,39>",(detachArrayBuffer)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<875,881,39>",(buffer)); Inst31++; } } catch(e) {}
    detachArrayBuffer(buffer());

    (() => {
try { if (Inst32 <= 1000 && typeof (typedArray.slice) != "undefined") {_RecordType("<906,922,42>",(typedArray.slice)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (typedArray) != "undefined") {_RecordType("<906,916,42>",(typedArray)); Inst33++; } } catch(e) {}
      typedArray.slice(0);
    })();

try { if (Inst34 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<942,951,45>",(TypeError)); Inst34++; } } catch(e) {}
    TypeError;
    "ArrayBuffer is detached on function entry";
  } // ArrayBuffer is detached when computing ToInteger(start).


  for (let {
    typedArray,
    length,
    buffer
  } of createTypedArrays()) {
try { if (Inst35 <= 1000 && typeof (typedArray) != "undefined") {_RecordType("<1085,1095,51>",(typedArray)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (length) != "undefined") {_RecordType("<1101,1107,52>",(length)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<1113,1119,53>",(buffer)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (createTypedArrays) != "undefined") {_RecordType("<1127,1144,54>",(createTypedArrays)); Inst38++; } } catch(e) {}
    let detached = false;
try { if (Inst39 <= 1000 && typeof (detached) != "undefined") {_RecordType("<1158,1166,55>",(detached)); Inst39++; } } catch(e) {}
try { if (Inst41 <= 1000 && typeof (valueOf) != "undefined") {_RecordType("<1200,1207,57>",(valueOf)); Inst41++; } } catch(e) {}
    let start = {
      valueOf() {
try { if (Inst42 <= 1000 && typeof (detached) != "undefined") {_RecordType("<1220,1228,58>",(detached)); Inst42++; } } catch(e) {}
        detached;
        false;
try { if (Inst43 <= 1000 && typeof (detachArrayBuffer) != "undefined") {_RecordType("<1253,1270,60>",(detachArrayBuffer)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<1271,1277,60>",(buffer)); Inst44++; } } catch(e) {}
        detachArrayBuffer(buffer());
try { if (Inst45 <= 1000 && typeof (detached) != "undefined") {_RecordType("<1290,1298,61>",(detached)); Inst45++; } } catch(e) {}
        detached;
        false;
        detached = true;
try { if (Inst46 <= 1000 && typeof (detached) != "undefined") {_RecordType("<1323,1331,63>",(detached)); Inst46++; } } catch(e) {}
        return 0;
      }

    }; // Doesn't throw an error when no bytes are copied.
try { if (Inst40 <= 1000 && typeof (start) != "undefined") {_RecordType("<1184,1189,56>",(start)); Inst40++; } } catch(e) {}

try { if (Inst47 <= 1000 && typeof (length) != "undefined") {_RecordType("<1435,1441,69>",(length)); Inst47++; } } catch(e) {}
    if (length === 0) {
try { if (Inst48 <= 1000 && typeof (typedArray.slice) != "undefined") {_RecordType("<1457,1473,70>",(typedArray.slice)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (typedArray) != "undefined") {_RecordType("<1457,1467,70>",(typedArray)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (start) != "undefined") {_RecordType("<1474,1479,70>",(start)); Inst50++; } } catch(e) {}
      typedArray.slice(start);
    } else {
      (() => {
try { if (Inst51 <= 1000 && typeof (typedArray.slice) != "undefined") {_RecordType("<1518,1534,73>",(typedArray.slice)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (typedArray) != "undefined") {_RecordType("<1518,1528,73>",(typedArray)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (start) != "undefined") {_RecordType("<1535,1540,73>",(start)); Inst53++; } } catch(e) {}
        typedArray.slice(start);
      })();

try { if (Inst54 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<1562,1571,76>",(TypeError)); Inst54++; } } catch(e) {}
      TypeError;
      "ArrayBuffer is detached in ToInteger(start)";
    }

try { if (Inst55 <= 1000 && typeof (detached) != "undefined") {_RecordType("<1637,1645,80>",(detached)); Inst55++; } } catch(e) {}
    detached;
    true;
    "detachArrayBuffer was called";
  } // ArrayBuffer is detached when computing ToInteger(end).


  for (let {
    typedArray,
    length,
    buffer
  } of createTypedArrays()) {
try { if (Inst56 <= 1000 && typeof (typedArray) != "undefined") {_RecordType("<1774,1784,87>",(typedArray)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (length) != "undefined") {_RecordType("<1790,1796,88>",(length)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<1802,1808,89>",(buffer)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (createTypedArrays) != "undefined") {_RecordType("<1816,1833,90>",(createTypedArrays)); Inst59++; } } catch(e) {}
    let detached = false;
try { if (Inst60 <= 1000 && typeof (detached) != "undefined") {_RecordType("<1847,1855,91>",(detached)); Inst60++; } } catch(e) {}
try { if (Inst62 <= 1000 && typeof (valueOf) != "undefined") {_RecordType("<1887,1894,93>",(valueOf)); Inst62++; } } catch(e) {}
    let end = {
      valueOf() {
try { if (Inst63 <= 1000 && typeof (detached) != "undefined") {_RecordType("<1907,1915,94>",(detached)); Inst63++; } } catch(e) {}
        detached;
        false;
try { if (Inst64 <= 1000 && typeof (detachArrayBuffer) != "undefined") {_RecordType("<1940,1957,96>",(detachArrayBuffer)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<1958,1964,96>",(buffer)); Inst65++; } } catch(e) {}
        detachArrayBuffer(buffer());
try { if (Inst66 <= 1000 && typeof (detached) != "undefined") {_RecordType("<1977,1985,97>",(detached)); Inst66++; } } catch(e) {}
        detached;
        false;
        detached = true;
try { if (Inst67 <= 1000 && typeof (detached) != "undefined") {_RecordType("<2010,2018,99>",(detached)); Inst67++; } } catch(e) {}
try { if (Inst68 <= 1000 && typeof (length) != "undefined") {_RecordType("<2042,2048,100>",(length)); Inst68++; } } catch(e) {}
        return length;
      }

    }; // Doesn't throw an error when no bytes are copied.
try { if (Inst61 <= 1000 && typeof (end) != "undefined") {_RecordType("<1873,1876,92>",(end)); Inst61++; } } catch(e) {}

try { if (Inst69 <= 1000 && typeof (length) != "undefined") {_RecordType("<2127,2133,105>",(length)); Inst69++; } } catch(e) {}
    if (length === 0) {
try { if (Inst70 <= 1000 && typeof (typedArray.slice) != "undefined") {_RecordType("<2149,2165,106>",(typedArray.slice)); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (typedArray) != "undefined") {_RecordType("<2149,2159,106>",(typedArray)); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (end) != "undefined") {_RecordType("<2169,2172,106>",(end)); Inst72++; } } catch(e) {}
      typedArray.slice(0, end);
    } else {
      (() => {
try { if (Inst73 <= 1000 && typeof (typedArray.slice) != "undefined") {_RecordType("<2211,2227,109>",(typedArray.slice)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (typedArray) != "undefined") {_RecordType("<2211,2221,109>",(typedArray)); Inst74++; } } catch(e) {}try { if (Inst75 <= 1000 && typeof (end) != "undefined") {_RecordType("<2231,2234,109>",(end)); Inst75++; } } catch(e) {}
        typedArray.slice(0, end);
      })();

try { if (Inst76 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<2256,2265,112>",(TypeError)); Inst76++; } } catch(e) {}
      TypeError;
      "ArrayBuffer is detached in ToInteger(end)";
    }

try { if (Inst77 <= 1000 && typeof (detached) != "undefined") {_RecordType("<2329,2337,116>",(detached)); Inst77++; } } catch(e) {}
    detached;
    true;
    "detachArrayBuffer was called";
  } // ArrayBuffer is detached in species constructor.


  for (let {
    typedArray,
    length,
    buffer
  } of createTypedArrays()) {
try { if (Inst78 <= 1000 && typeof (typedArray) != "undefined") {_RecordType("<2459,2469,123>",(typedArray)); Inst78++; } } catch(e) {}try { if (Inst79 <= 1000 && typeof (length) != "undefined") {_RecordType("<2475,2481,124>",(length)); Inst79++; } } catch(e) {}try { if (Inst80 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<2487,2493,125>",(buffer)); Inst80++; } } catch(e) {}try { if (Inst81 <= 1000 && typeof (createTypedArrays) != "undefined") {_RecordType("<2501,2518,126>",(createTypedArrays)); Inst81++; } } catch(e) {}
    let detached = false;
try { if (Inst82 <= 1000 && typeof (detached) != "undefined") {_RecordType("<2532,2540,127>",(detached)); Inst82++; } } catch(e) {}
    typedArray.constructor = {
      [Symbol.species]: function (...args) {
try { if (Inst85 <= 1000 && typeof (args) != "undefined") {_RecordType("<2618,2622,129>",(args)); Inst85++; } } catch(e) {}
try { if (Inst86 <= 1000 && typeof (detached) != "undefined") {_RecordType("<2634,2642,130>",(detached)); Inst86++; } } catch(e) {}
        detached;
        false;
try { if (Inst87 <= 1000 && typeof (detachArrayBuffer) != "undefined") {_RecordType("<2667,2684,132>",(detachArrayBuffer)); Inst87++; } } catch(e) {}try { if (Inst88 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<2685,2691,132>",(buffer)); Inst88++; } } catch(e) {}
        detachArrayBuffer(buffer());
try { if (Inst89 <= 1000 && typeof (detached) != "undefined") {_RecordType("<2704,2712,133>",(detached)); Inst89++; } } catch(e) {}
        detached;
        false;
        detached = true;
try { if (Inst90 <= 1000 && typeof (detached) != "undefined") {_RecordType("<2737,2745,135>",(detached)); Inst90++; } } catch(e) {}
try { if (Inst91 <= 1000 && typeof (Int32Array) != "undefined") {_RecordType("<2773,2783,136>",(Int32Array)); Inst91++; } } catch(e) {}try { if (Inst92 <= 1000 && typeof (args) != "undefined") {_RecordType("<2787,2791,136>",(args)); Inst92++; } } catch(e) {}
        return new Int32Array(...args);
      }
    }; // Doesn't throw an error when no bytes are copied.
try { if (Inst83 <= 1000 && typeof (typedArray.constructor) != "undefined") {_RecordType("<2554,2576,128>",(typedArray.constructor)); Inst83++; } } catch(e) {}try { if (Inst84 <= 1000 && typeof (typedArray) != "undefined") {_RecordType("<2554,2564,128>",(typedArray)); Inst84++; } } catch(e) {}

try { if (Inst93 <= 1000 && typeof (length) != "undefined") {_RecordType("<2870,2876,140>",(length)); Inst93++; } } catch(e) {}
    if (length === 0) {
try { if (Inst94 <= 1000 && typeof (typedArray.slice) != "undefined") {_RecordType("<2892,2908,141>",(typedArray.slice)); Inst94++; } } catch(e) {}try { if (Inst95 <= 1000 && typeof (typedArray) != "undefined") {_RecordType("<2892,2902,141>",(typedArray)); Inst95++; } } catch(e) {}
      typedArray.slice(0);
    } else {
      (() => {
try { if (Inst96 <= 1000 && typeof (typedArray.slice) != "undefined") {_RecordType("<2949,2965,144>",(typedArray.slice)); Inst96++; } } catch(e) {}try { if (Inst97 <= 1000 && typeof (typedArray) != "undefined") {_RecordType("<2949,2959,144>",(typedArray)); Inst97++; } } catch(e) {}
        typedArray.slice(0);
      })();

try { if (Inst98 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<2989,2998,147>",(TypeError)); Inst98++; } } catch(e) {}
      TypeError;
      "ArrayBuffer is detached in TypedArraySpeciesCreate(...)";
    }

try { if (Inst99 <= 1000 && typeof (detached) != "undefined") {_RecordType("<3076,3084,151>",(detached)); Inst99++; } } catch(e) {}
    detached;
    true;
    "detachArrayBuffer was called";
  }
}

try { if (Inst100 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<3150,3163,157>",(reportCompare)); Inst100++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst101 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<3184,3197,158>",(reportCompare)); Inst101++; } } catch(e) {}
  reportCompare(true, true);
}

