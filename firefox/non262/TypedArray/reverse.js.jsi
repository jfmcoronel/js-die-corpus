var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
for (var constructor of anyTypedArrayConstructors) {
try { if (Inst0 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<9,20,1>",(constructor)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (anyTypedArrayConstructors) != "undefined") {_RecordType("<24,49,1>",(anyTypedArrayConstructors)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (constructor.prototype.reverse.length) != "undefined") {_RecordType("<55,91,2>",(constructor.prototype.reverse.length)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (constructor.prototype.reverse) != "undefined") {_RecordType("<55,84,2>",(constructor.prototype.reverse)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (constructor.prototype) != "undefined") {_RecordType("<55,76,2>",(constructor.prototype)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<55,66,2>",(constructor)); Inst5++; } } catch(e) {}
  constructor.prototype.reverse.length;
  0;
try { if (Inst6 <= 1000 && typeof (new constructor().reverse) != "undefined") {_RecordType("<100,125,4>",(new constructor().reverse)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<104,115,4>",(constructor)); Inst7++; } } catch(e) {}
  new constructor().reverse();
try { if (Inst8 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<135,146,5>",(constructor)); Inst8++; } } catch(e) {}
  new constructor();
try { if (Inst9 <= 1000 && typeof (new constructor(10).reverse) != "undefined") {_RecordType("<152,179,6>",(new constructor(10).reverse)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<156,167,6>",(constructor)); Inst10++; } } catch(e) {}
  new constructor(10).reverse();
try { if (Inst11 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<189,200,7>",(constructor)); Inst11++; } } catch(e) {}
  new constructor(10);
try { if (Inst12 <= 1000 && typeof (new constructor([]).reverse) != "undefined") {_RecordType("<208,235,8>",(new constructor([]).reverse)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<212,223,8>",(constructor)); Inst13++; } } catch(e) {}
  new constructor([]).reverse();
try { if (Inst14 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<245,256,9>",(constructor)); Inst14++; } } catch(e) {}
  new constructor([]);
try { if (Inst15 <= 1000 && typeof (new constructor([1]).reverse) != "undefined") {_RecordType("<264,292,10>",(new constructor([1]).reverse)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<268,279,10>",(constructor)); Inst16++; } } catch(e) {}
  new constructor([1]).reverse();
try { if (Inst17 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<302,313,11>",(constructor)); Inst17++; } } catch(e) {}
  new constructor([1]);
try { if (Inst18 <= 1000 && typeof (new constructor([1, 2]).reverse) != "undefined") {_RecordType("<322,353,12>",(new constructor([1, 2]).reverse)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<326,337,12>",(constructor)); Inst19++; } } catch(e) {}
  new constructor([1, 2]).reverse();
try { if (Inst20 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<363,374,13>",(constructor)); Inst20++; } } catch(e) {}
  new constructor([2, 1]);
try { if (Inst21 <= 1000 && typeof (new constructor([1, 2, 3]).reverse) != "undefined") {_RecordType("<386,420,14>",(new constructor([1, 2, 3]).reverse)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<390,401,14>",(constructor)); Inst22++; } } catch(e) {}
  new constructor([1, 2, 3]).reverse();
try { if (Inst23 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<430,441,15>",(constructor)); Inst23++; } } catch(e) {}
  new constructor([3, 2, 1]);
try { if (Inst24 <= 1000 && typeof (new constructor([1, 2, 3, 4]).reverse) != "undefined") {_RecordType("<456,493,16>",(new constructor([1, 2, 3, 4]).reverse)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<460,471,16>",(constructor)); Inst25++; } } catch(e) {}
  new constructor([1, 2, 3, 4]).reverse();
try { if (Inst26 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<503,514,17>",(constructor)); Inst26++; } } catch(e) {}
  new constructor([4, 3, 2, 1]);
try { if (Inst27 <= 1000 && typeof (new constructor([1, 2, 3, 4, 5]).reverse) != "undefined") {_RecordType("<532,572,18>",(new constructor([1, 2, 3, 4, 5]).reverse)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<536,547,18>",(constructor)); Inst28++; } } catch(e) {}
  new constructor([1, 2, 3, 4, 5]).reverse();
try { if (Inst29 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<582,593,19>",(constructor)); Inst29++; } } catch(e) {}
  new constructor([5, 4, 3, 2, 1]);
try { if (Inst30 <= 1000 && typeof (new constructor([.1, .2, .3]).reverse) != "undefined") {_RecordType("<614,651,20>",(new constructor([.1, .2, .3]).reverse)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<618,629,20>",(constructor)); Inst31++; } } catch(e) {}
  new constructor([.1, .2, .3]).reverse();
try { if (Inst32 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<661,672,21>",(constructor)); Inst32++; } } catch(e) {}
  new constructor([.3, .2, .1]);

  // Called from other globals.
try { if (Inst33 <= 1000 && typeof (newGlobal) != "undefined") {_RecordType("<734,743,24>",(newGlobal)); Inst33++; } } catch(e) {}
  if (typeof newGlobal === "function") {
try { if (Inst35 <= 1000 && typeof (newGlobal()[constructor.name].prototype.reverse) != "undefined") {_RecordType("<780,827,25>",(newGlobal()[constructor.name].prototype.reverse)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (newGlobal()[constructor.name].prototype) != "undefined") {_RecordType("<780,819,25>",(newGlobal()[constructor.name].prototype)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (newGlobal()[constructor.name]) != "undefined") {_RecordType("<780,809,25>",(newGlobal()[constructor.name])); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (newGlobal) != "undefined") {_RecordType("<780,789,25>",(newGlobal)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (constructor.name) != "undefined") {_RecordType("<792,808,25>",(constructor.name)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<792,803,25>",(constructor)); Inst40++; } } catch(e) {}
    var reverse = newGlobal()[constructor.name].prototype.reverse;
try { if (Inst34 <= 1000 && typeof (reverse) != "undefined") {_RecordType("<770,777,25>",(reverse)); Inst34++; } } catch(e) {}
try { if (Inst41 <= 1000 && typeof (reverse.call) != "undefined") {_RecordType("<833,845,26>",(reverse.call)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (reverse) != "undefined") {_RecordType("<833,840,26>",(reverse)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<850,861,26>",(constructor)); Inst43++; } } catch(e) {}
    reverse.call(new constructor([3, 2, 1]));
try { if (Inst44 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<883,894,27>",(constructor)); Inst44++; } } catch(e) {}
    new constructor([1, 2, 3]);
  } // Throws if `this` isn't a TypedArray.


try { if (Inst46 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<979,988,31>",(undefined)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<1010,1016,31>",(Symbol)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<1037,1042,31>",(Proxy)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<1047,1058,31>",(constructor)); Inst49++; } } catch(e) {}
  var invalidReceivers = [undefined, null, 1, false, "", Symbol(), [], {}, /./, new Proxy(new constructor(), {})];
try { if (Inst45 <= 1000 && typeof (invalidReceivers) != "undefined") {_RecordType("<959,975,31>",(invalidReceivers)); Inst45++; } } catch(e) {}
try { if (Inst50 <= 1000 && typeof (invalidReceivers.forEach) != "undefined") {_RecordType("<1070,1094,32>",(invalidReceivers.forEach)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (invalidReceivers) != "undefined") {_RecordType("<1070,1086,32>",(invalidReceivers)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (invalidReceiver) != "undefined") {_RecordType("<1095,1110,32>",(invalidReceiver)); Inst52++; } } catch(e) {}
  invalidReceivers.forEach(invalidReceiver => {
    (() => {
try { if (Inst53 <= 1000 && typeof (constructor.prototype.reverse.call) != "undefined") {_RecordType("<1135,1169,34>",(constructor.prototype.reverse.call)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (constructor.prototype.reverse) != "undefined") {_RecordType("<1135,1164,34>",(constructor.prototype.reverse)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (constructor.prototype) != "undefined") {_RecordType("<1135,1156,34>",(constructor.prototype)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<1135,1146,34>",(constructor)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (invalidReceiver) != "undefined") {_RecordType("<1170,1185,34>",(invalidReceiver)); Inst57++; } } catch(e) {}
      constructor.prototype.reverse.call(invalidReceiver);
    })();

try { if (Inst58 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<1203,1212,37>",(TypeError)); Inst58++; } } catch(e) {}
    TypeError;
    "Assert that reverse fails if this value is not a TypedArray";
  }); // Test that the length getter is never called.

try { if (Inst59 <= 1000 && typeof (Object.defineProperty(new constructor([1, 2, 3]), "length", {
    get() {
      throw new Error("length accessor called");
    }

  }).reverse) != "undefined") {_RecordType("<1338,1480,41>",(Object.defineProperty(new constructor([1, 2, 3]), "length", {
    get() {
      throw new Error("length accessor called");
    }

  }).reverse)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<1338,1359,41>",(Object.defineProperty)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1338,1344,41>",(Object)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<1364,1375,41>",(constructor)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (get) != "undefined") {_RecordType("<1404,1407,42>",(get)); Inst63++; } } catch(e) {}
  Object.defineProperty(new constructor([1, 2, 3]), "length", {
    get() {
try { if (Inst64 <= 1000 && typeof (Error) != "undefined") {_RecordType("<1428,1433,43>",(Error)); Inst64++; } } catch(e) {}
      throw new Error("length accessor called");
    }

  }).reverse();
}

try { if (Inst65 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1498,1511,49>",(reportCompare)); Inst65++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst66 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1532,1545,50>",(reportCompare)); Inst66++; } } catch(e) {}
  reportCompare(true, true);
}

