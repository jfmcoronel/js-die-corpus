var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
for (var constructor of anyTypedArrayConstructors) {
try { if (Inst0 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<9,20,1>",(constructor)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (anyTypedArrayConstructors) != "undefined") {_RecordType("<24,49,1>",(anyTypedArrayConstructors)); Inst1++; } } catch(e) {}
  // 'from' method is identical for all typed array constructors.
try { if (Inst2 <= 1000 && typeof (anyTypedArrayConstructors[0].from) != "undefined") {_RecordType("<121,154,3>",(anyTypedArrayConstructors[0].from)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (anyTypedArrayConstructors[0]) != "undefined") {_RecordType("<121,149,3>",(anyTypedArrayConstructors[0])); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (anyTypedArrayConstructors) != "undefined") {_RecordType("<121,146,3>",(anyTypedArrayConstructors)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (constructor.from) != "undefined") {_RecordType("<159,175,3>",(constructor.from)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<159,170,3>",(constructor)); Inst6++; } } catch(e) {}
  anyTypedArrayConstructors[0].from === constructor.from;
  true;
  // %TypedArray%.from copies arrays.
try { if (Inst8 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<239,250,6>",(constructor)); Inst8++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (constructor.from) != "undefined") {_RecordType("<276,292,7>",(constructor.from)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<276,287,7>",(constructor)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (src) != "undefined") {_RecordType("<293,296,7>",(src)); Inst12++; } } catch(e) {}
  var src = new constructor([1, 2, 3]),
      copy = constructor.from(src);
try { if (Inst7 <= 1000 && typeof (src) != "undefined") {_RecordType("<229,232,6>",(src)); Inst7++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (copy) != "undefined") {_RecordType("<269,273,7>",(copy)); Inst9++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (copy) != "undefined") {_RecordType("<301,305,8>",(copy)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (src) != "undefined") {_RecordType("<310,313,8>",(src)); Inst14++; } } catch(e) {}
  copy === src;
  false;
try { if (Inst15 <= 1000 && typeof (copy) != "undefined") {_RecordType("<326,330,10>",(copy)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<342,353,10>",(constructor)); Inst16++; } } catch(e) {}
  copy instanceof constructor;
  true;
try { if (Inst17 <= 1000 && typeof (copy) != "undefined") {_RecordType("<365,369,12>",(copy)); Inst17++; } } catch(e) {}
  copy;
try { if (Inst18 <= 1000 && typeof (src) != "undefined") {_RecordType("<373,376,13>",(src)); Inst18++; } } catch(e) {}
  src;
  // Non-element properties are not copied.
try { if (Inst20 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<436,447,15>",(constructor)); Inst20++; } } catch(e) {}
  var a = new constructor([0, 1]);
try { if (Inst19 <= 1000 && typeof (a) != "undefined") {_RecordType("<428,429,15>",(a)); Inst19++; } } catch(e) {}
  a.name = "lisa";
try { if (Inst21 <= 1000 && typeof (a.name) != "undefined") {_RecordType("<459,465,16>",(a.name)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (a) != "undefined") {_RecordType("<459,460,16>",(a)); Inst22++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (constructor.from) != "undefined") {_RecordType("<478,494,17>",(constructor.from)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<478,489,17>",(constructor)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (a) != "undefined") {_RecordType("<495,496,17>",(a)); Inst25++; } } catch(e) {}
  constructor.from(a);
try { if (Inst26 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<505,516,18>",(constructor)); Inst26++; } } catch(e) {}
  new constructor([0, 1]);
  // %TypedArray%.from can copy non-iterable objects, if they're array-like.
  src = {
    0: 0,
    1: 1,
    length: 2
  };
try { if (Inst27 <= 1000 && typeof (src) != "undefined") {_RecordType("<605,608,20>",(src)); Inst27++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (constructor.from) != "undefined") {_RecordType("<661,677,25>",(constructor.from)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<661,672,25>",(constructor)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (src) != "undefined") {_RecordType("<678,681,25>",(src)); Inst31++; } } catch(e) {}
  copy = constructor.from(src);
try { if (Inst28 <= 1000 && typeof (copy) != "undefined") {_RecordType("<654,658,25>",(copy)); Inst28++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (copy) != "undefined") {_RecordType("<686,690,26>",(copy)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<702,713,26>",(constructor)); Inst33++; } } catch(e) {}
  copy instanceof constructor;
  true;
try { if (Inst34 <= 1000 && typeof (copy) != "undefined") {_RecordType("<725,729,28>",(copy)); Inst34++; } } catch(e) {}
  copy;
try { if (Inst35 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<737,748,29>",(constructor)); Inst35++; } } catch(e) {}
  new constructor([0, 1]);
  // Properties past the .length are not copied.
  src = {
    0: "0",
    1: "1",
    2: "two",
    9: "nine",
    name: "lisa",
    length: 2
  };
try { if (Inst36 <= 1000 && typeof (src) != "undefined") {_RecordType("<809,812,31>",(src)); Inst36++; } } catch(e) {}
try { if (Inst37 <= 1000 && typeof (constructor.from) != "undefined") {_RecordType("<909,925,39>",(constructor.from)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<909,920,39>",(constructor)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (src) != "undefined") {_RecordType("<926,929,39>",(src)); Inst39++; } } catch(e) {}
  constructor.from(src);
try { if (Inst40 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<938,949,40>",(constructor)); Inst40++; } } catch(e) {}
  new constructor([0, 1]);
try { if (Inst41 <= 1000 && typeof (constructor.from) != "undefined") {_RecordType("<961,977,41>",(constructor.from)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<961,972,41>",(constructor)); Inst42++; } } catch(e) {}
  constructor.from({});
try { if (Inst43 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<989,1000,42>",(constructor)); Inst43++; } } catch(e) {}
  new constructor();
try { if (Inst44 <= 1000 && typeof (constructor.from) != "undefined") {_RecordType("<1006,1022,43>",(constructor.from)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<1006,1017,43>",(constructor)); Inst45++; } } catch(e) {}
  constructor.from(1);
try { if (Inst46 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<1033,1044,44>",(constructor)); Inst46++; } } catch(e) {}
  new constructor();
try { if (Inst47 <= 1000 && typeof (constructor.from) != "undefined") {_RecordType("<1050,1066,45>",(constructor.from)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<1050,1061,45>",(constructor)); Inst48++; } } catch(e) {}
  constructor.from("123");
try { if (Inst49 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<1081,1092,46>",(constructor)); Inst49++; } } catch(e) {}
  new constructor([1, 2, 3]);
try { if (Inst50 <= 1000 && typeof (constructor.from) != "undefined") {_RecordType("<1107,1123,47>",(constructor.from)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<1107,1118,47>",(constructor)); Inst51++; } } catch(e) {}
  constructor.from(true);
try { if (Inst52 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<1137,1148,48>",(constructor)); Inst52++; } } catch(e) {}
  new constructor();
try { if (Inst53 <= 1000 && typeof (constructor.from) != "undefined") {_RecordType("<1154,1170,49>",(constructor.from)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<1154,1165,49>",(constructor)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<1171,1177,49>",(Symbol)); Inst55++; } } catch(e) {}
  constructor.from(Symbol());
try { if (Inst56 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<1188,1199,50>",(constructor)); Inst56++; } } catch(e) {}
  new constructor();
  // Source object property order doesn't matter.
  src = {
    length: 2,
    1: "1",
    0: "0"
  };
try { if (Inst57 <= 1000 && typeof (src) != "undefined") {_RecordType("<1255,1258,52>",(src)); Inst57++; } } catch(e) {}
try { if (Inst58 <= 1000 && typeof (constructor.from) != "undefined") {_RecordType("<1308,1324,57>",(constructor.from)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<1308,1319,57>",(constructor)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (src) != "undefined") {_RecordType("<1325,1328,57>",(src)); Inst60++; } } catch(e) {}
  constructor.from(src);
try { if (Inst61 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<1337,1348,58>",(constructor)); Inst61++; } } catch(e) {}
  new constructor([0, 1]);
}

try { if (Inst62 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1372,1385,61>",(reportCompare)); Inst62++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst63 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1406,1419,62>",(reportCompare)); Inst63++; } } catch(e) {}
  reportCompare(true, true);
}

