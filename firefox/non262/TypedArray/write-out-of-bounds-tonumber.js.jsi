var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// ToNumber(value) is executed for OOB writes when using a direct assignment.
try { if (Inst0 <= 1000 && typeof (plainSet) != "undefined") {_RecordType("<87,95,2>",(plainSet)); Inst0++; } } catch(e) {}
function plainSet() {
  var callCount = 0;
try { if (Inst1 <= 1000 && typeof (callCount) != "undefined") {_RecordType("<106,115,3>",(callCount)); Inst1++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (valueOf) != "undefined") {_RecordType("<141,148,5>",(valueOf)); Inst3++; } } catch(e) {}
  var value = {
    valueOf() {
try { if (Inst4 <= 1000 && typeof (callCount) != "undefined") {_RecordType("<159,168,6>",(callCount)); Inst4++; } } catch(e) {}
      callCount++;
      return 1;
    }

  };
try { if (Inst2 <= 1000 && typeof (value) != "undefined") {_RecordType("<127,132,4>",(value)); Inst2++; } } catch(e) {}
  var N = 100;
try { if (Inst5 <= 1000 && typeof (N) != "undefined") {_RecordType("<206,207,11>",(N)); Inst5++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (Int32Array) != "undefined") {_RecordType("<230,240,12>",(Int32Array)); Inst7++; } } catch(e) {}
  var ta = new Int32Array(0);
try { if (Inst6 <= 1000 && typeof (ta) != "undefined") {_RecordType("<221,223,12>",(ta)); Inst6++; } } catch(e) {}

  for (var i = 0; i < N; ++i) {
try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<257,258,14>",(i)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<264,265,14>",(i)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (N) != "undefined") {_RecordType("<268,269,14>",(N)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<273,274,14>",(i)); Inst11++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (value) != "undefined") {_RecordType("<290,295,15>",(value)); Inst14++; } } catch(e) {}
    ta[0] = value;
try { if (Inst12 <= 1000 && typeof (ta[0]) != "undefined") {_RecordType("<282,287,15>",(ta[0])); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (ta) != "undefined") {_RecordType("<282,284,15>",(ta)); Inst13++; } } catch(e) {}
  }

try { if (Inst15 <= 1000 && typeof (callCount) != "undefined") {_RecordType("<304,313,18>",(callCount)); Inst15++; } } catch(e) {}
  callCount;
try { if (Inst16 <= 1000 && typeof (N) != "undefined") {_RecordType("<317,318,19>",(N)); Inst16++; } } catch(e) {}
  N;
}

for (var i = 0; i < 2; ++i) {
try { if (Inst17 <= 1000 && typeof (i) != "undefined") {_RecordType("<332,333,22>",(i)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (i) != "undefined") {_RecordType("<339,340,22>",(i)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (i) != "undefined") {_RecordType("<348,349,22>",(i)); Inst19++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (plainSet) != "undefined") {_RecordType("<355,363,23>",(plainSet)); Inst20++; } } catch(e) {}
  plainSet();
} // ToNumber(value) is executed for OOB writes when using Reflect.set(...).


try { if (Inst21 <= 1000 && typeof (reflectSet) != "undefined") {_RecordType("<455,465,27>",(reflectSet)); Inst21++; } } catch(e) {}
function reflectSet() {
  var callCount = 0;
try { if (Inst22 <= 1000 && typeof (callCount) != "undefined") {_RecordType("<476,485,28>",(callCount)); Inst22++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (valueOf) != "undefined") {_RecordType("<511,518,30>",(valueOf)); Inst24++; } } catch(e) {}
  var value = {
    valueOf() {
try { if (Inst25 <= 1000 && typeof (callCount) != "undefined") {_RecordType("<529,538,31>",(callCount)); Inst25++; } } catch(e) {}
      callCount++;
      return 1;
    }

  };
try { if (Inst23 <= 1000 && typeof (value) != "undefined") {_RecordType("<497,502,29>",(value)); Inst23++; } } catch(e) {}
  var N = 100;
try { if (Inst26 <= 1000 && typeof (N) != "undefined") {_RecordType("<576,577,36>",(N)); Inst26++; } } catch(e) {}
try { if (Inst28 <= 1000 && typeof (Int32Array) != "undefined") {_RecordType("<600,610,37>",(Int32Array)); Inst28++; } } catch(e) {}
  var ta = new Int32Array(0);
try { if (Inst27 <= 1000 && typeof (ta) != "undefined") {_RecordType("<591,593,37>",(ta)); Inst27++; } } catch(e) {}

  for (var i = 0; i < N; ++i) {
try { if (Inst29 <= 1000 && typeof (i) != "undefined") {_RecordType("<627,628,39>",(i)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (i) != "undefined") {_RecordType("<634,635,39>",(i)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (N) != "undefined") {_RecordType("<638,639,39>",(N)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (i) != "undefined") {_RecordType("<643,644,39>",(i)); Inst32++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (Reflect.set) != "undefined") {_RecordType("<652,663,40>",(Reflect.set)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<652,659,40>",(Reflect)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (ta) != "undefined") {_RecordType("<664,666,40>",(ta)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (value) != "undefined") {_RecordType("<671,676,40>",(value)); Inst36++; } } catch(e) {}
    Reflect.set(ta, 0, value);
    false;
  }

try { if (Inst37 <= 1000 && typeof (callCount) != "undefined") {_RecordType("<697,706,44>",(callCount)); Inst37++; } } catch(e) {}
  callCount;
try { if (Inst38 <= 1000 && typeof (N) != "undefined") {_RecordType("<710,711,45>",(N)); Inst38++; } } catch(e) {}
  N;
}

for (var i = 0; i < 2; ++i) {
try { if (Inst39 <= 1000 && typeof (i) != "undefined") {_RecordType("<725,726,48>",(i)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (i) != "undefined") {_RecordType("<732,733,48>",(i)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (i) != "undefined") {_RecordType("<741,742,48>",(i)); Inst41++; } } catch(e) {}
try { if (Inst42 <= 1000 && typeof (reflectSet) != "undefined") {_RecordType("<748,758,49>",(reflectSet)); Inst42++; } } catch(e) {}
  reflectSet();
} // ToNumber(value) is not executed for OOB writes when using Reflect.defineProperty(...).


try { if (Inst43 <= 1000 && typeof (defineProp) != "undefined") {_RecordType("<865,875,53>",(defineProp)); Inst43++; } } catch(e) {}
function defineProp() {
  var callCount = 0;
try { if (Inst44 <= 1000 && typeof (callCount) != "undefined") {_RecordType("<886,895,54>",(callCount)); Inst44++; } } catch(e) {}
try { if (Inst46 <= 1000 && typeof (valueOf) != "undefined") {_RecordType("<921,928,56>",(valueOf)); Inst46++; } } catch(e) {}
  var value = {
    valueOf() {
try { if (Inst47 <= 1000 && typeof (callCount) != "undefined") {_RecordType("<939,948,57>",(callCount)); Inst47++; } } catch(e) {}
      callCount++;
      return 1;
    }

  };
try { if (Inst45 <= 1000 && typeof (value) != "undefined") {_RecordType("<907,912,55>",(value)); Inst45++; } } catch(e) {}
try { if (Inst49 <= 1000 && typeof (value) != "undefined") {_RecordType("<999,1004,63>",(value)); Inst49++; } } catch(e) {}
  var desc = {
    value,
    writable: true,
    enumerable: true,
    configurable: false
  };
try { if (Inst48 <= 1000 && typeof (desc) != "undefined") {_RecordType("<986,990,62>",(desc)); Inst48++; } } catch(e) {}
  var N = 100;
try { if (Inst50 <= 1000 && typeof (N) != "undefined") {_RecordType("<1083,1084,68>",(N)); Inst50++; } } catch(e) {}
try { if (Inst52 <= 1000 && typeof (Int32Array) != "undefined") {_RecordType("<1107,1117,69>",(Int32Array)); Inst52++; } } catch(e) {}
  var ta = new Int32Array(0);
try { if (Inst51 <= 1000 && typeof (ta) != "undefined") {_RecordType("<1098,1100,69>",(ta)); Inst51++; } } catch(e) {}

  for (var i = 0; i < N; ++i) {
try { if (Inst53 <= 1000 && typeof (i) != "undefined") {_RecordType("<1134,1135,71>",(i)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (i) != "undefined") {_RecordType("<1141,1142,71>",(i)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (N) != "undefined") {_RecordType("<1145,1146,71>",(N)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (i) != "undefined") {_RecordType("<1150,1151,71>",(i)); Inst56++; } } catch(e) {}
try { if (Inst57 <= 1000 && typeof (Reflect.defineProperty) != "undefined") {_RecordType("<1159,1181,72>",(Reflect.defineProperty)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<1159,1166,72>",(Reflect)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (ta) != "undefined") {_RecordType("<1182,1184,72>",(ta)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (desc) != "undefined") {_RecordType("<1189,1193,72>",(desc)); Inst60++; } } catch(e) {}
    Reflect.defineProperty(ta, 0, desc);
    false;
  }

try { if (Inst61 <= 1000 && typeof (callCount) != "undefined") {_RecordType("<1214,1223,76>",(callCount)); Inst61++; } } catch(e) {}
  callCount;
  0;
}

for (var i = 0; i < 2; ++i) {
try { if (Inst62 <= 1000 && typeof (i) != "undefined") {_RecordType("<1242,1243,80>",(i)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (i) != "undefined") {_RecordType("<1249,1250,80>",(i)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (i) != "undefined") {_RecordType("<1258,1259,80>",(i)); Inst64++; } } catch(e) {}
try { if (Inst65 <= 1000 && typeof (defineProp) != "undefined") {_RecordType("<1265,1275,81>",(defineProp)); Inst65++; } } catch(e) {}
  defineProp();
}

try { if (Inst66 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1293,1306,84>",(reportCompare)); Inst66++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst67 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1327,1340,85>",(reportCompare)); Inst67++; } } catch(e) {}
  reportCompare(true, true);
}

