var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst1 <= 1000 && typeof (Object.getPrototypeOf) != "undefined") {_RecordType("<28,49,1>",(Object.getPrototypeOf)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Object) != "undefined") {_RecordType("<28,34,1>",(Object)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Int8Array.prototype) != "undefined") {_RecordType("<50,69,1>",(Int8Array.prototype)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Int8Array) != "undefined") {_RecordType("<50,59,1>",(Int8Array)); Inst4++; } } catch(e) {}
const TypedArrayPrototype = Object.getPrototypeOf(Int8Array.prototype); // %TypedArrayPrototype% has an own "set" function property.
try { if (Inst0 <= 1000 && typeof (TypedArrayPrototype) != "undefined") {_RecordType("<6,25,1>",(TypedArrayPrototype)); Inst0++; } } catch(e) {}

try { if (Inst5 <= 1000 && typeof (TypedArrayPrototype.hasOwnProperty) != "undefined") {_RecordType("<134,168,3>",(TypedArrayPrototype.hasOwnProperty)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (TypedArrayPrototype) != "undefined") {_RecordType("<134,153,3>",(TypedArrayPrototype)); Inst6++; } } catch(e) {}
TypedArrayPrototype.hasOwnProperty("set");
true;
try { if (Inst7 <= 1000 && typeof (TypedArrayPrototype.set) != "undefined") {_RecordType("<190,213,5>",(TypedArrayPrototype.set)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (TypedArrayPrototype) != "undefined") {_RecordType("<190,209,5>",(TypedArrayPrototype)); Inst8++; } } catch(e) {}
typeof TypedArrayPrototype.set;
"function";
try { if (Inst9 <= 1000 && typeof (anyTypedArrayConstructors.every) != "undefined") {_RecordType("<227,258,7>",(anyTypedArrayConstructors.every)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (anyTypedArrayConstructors) != "undefined") {_RecordType("<227,252,7>",(anyTypedArrayConstructors)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (c) != "undefined") {_RecordType("<259,260,7>",(c)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (c.hasOwnProperty) != "undefined") {_RecordType("<265,281,7>",(c.hasOwnProperty)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (c) != "undefined") {_RecordType("<265,266,7>",(c)); Inst13++; } } catch(e) {}
anyTypedArrayConstructors.every(c => !c.hasOwnProperty("set"));
true;
try { if (Inst14 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<297,328,9>",(Object.getOwnPropertyDescriptor)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Object) != "undefined") {_RecordType("<297,303,9>",(Object)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (TypedArrayPrototype) != "undefined") {_RecordType("<329,348,9>",(TypedArrayPrototype)); Inst16++; } } catch(e) {}
Object.getOwnPropertyDescriptor(TypedArrayPrototype, "set");
try { if (Inst17 <= 1000 && typeof (TypedArrayPrototype.set) != "undefined") {_RecordType("<370,393,11>",(TypedArrayPrototype.set)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (TypedArrayPrototype) != "undefined") {_RecordType("<370,389,11>",(TypedArrayPrototype)); Inst18++; } } catch(e) {}
({
  value: TypedArrayPrototype.set,
  writable: true,
  enumerable: false,
  configurable: true
});
try { if (Inst19 <= 1000 && typeof (TypedArrayPrototype.set.name) != "undefined") {_RecordType("<459,487,16>",(TypedArrayPrototype.set.name)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (TypedArrayPrototype.set) != "undefined") {_RecordType("<459,482,16>",(TypedArrayPrototype.set)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (TypedArrayPrototype) != "undefined") {_RecordType("<459,478,16>",(TypedArrayPrototype)); Inst21++; } } catch(e) {}
TypedArrayPrototype.set.name;
"set";
try { if (Inst22 <= 1000 && typeof (TypedArrayPrototype.set.length) != "undefined") {_RecordType("<496,526,18>",(TypedArrayPrototype.set.length)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (TypedArrayPrototype.set) != "undefined") {_RecordType("<496,519,18>",(TypedArrayPrototype.set)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (TypedArrayPrototype) != "undefined") {_RecordType("<496,515,18>",(TypedArrayPrototype)); Inst24++; } } catch(e) {}
TypedArrayPrototype.set.length;
1;

try { if (Inst25 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<543,556,21>",(reportCompare)); Inst25++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst26 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<577,590,22>",(reportCompare)); Inst26++; } } catch(e) {}
  reportCompare(true, true);
}

