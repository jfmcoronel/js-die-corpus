var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst1 <= 1000 && typeof (Object.getOwnPropertyNames) != "undefined") {_RecordType("<12,38,1>",(Object.getOwnPropertyNames)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Object) != "undefined") {_RecordType("<12,18,1>",(Object)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<39,70,1>",(Object.getOwnPropertyDescriptor)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Object) != "undefined") {_RecordType("<39,45,1>",(Object)); Inst4++; } } catch(e) {}
var names = Object.getOwnPropertyNames(Object.getOwnPropertyDescriptor({
  foo: 0
}, "foo"));
try { if (Inst0 <= 1000 && typeof (names) != "undefined") {_RecordType("<4,9,1>",(names)); Inst0++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (names) != "undefined") {_RecordType("<94,99,4>",(names)); Inst5++; } } catch(e) {}
names;
["value", "writable", "enumerable", "configurable"];
try { if (Inst7 <= 1000 && typeof (Object.getOwnPropertyNames) != "undefined") {_RecordType("<162,188,6>",(Object.getOwnPropertyNames)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Object) != "undefined") {_RecordType("<162,168,6>",(Object)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<189,220,6>",(Object.getOwnPropertyDescriptor)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Object) != "undefined") {_RecordType("<189,195,6>",(Object)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (foo) != "undefined") {_RecordType("<229,232,7>",(foo)); Inst11++; } } catch(e) {}
names = Object.getOwnPropertyNames(Object.getOwnPropertyDescriptor({
  get foo() {
    ;
  }

}, "foo"));
try { if (Inst6 <= 1000 && typeof (names) != "undefined") {_RecordType("<154,159,6>",(names)); Inst6++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (names) != "undefined") {_RecordType("<260,265,12>",(names)); Inst12++; } } catch(e) {}
names;
["get", "set", "enumerable", "configurable"];
try { if (Inst14 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<329,334,14>",(Proxy)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (defineProperty) != "undefined") {_RecordType("<343,357,15>",(defineProperty)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (target) != "undefined") {_RecordType("<358,364,15>",(target)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (key) != "undefined") {_RecordType("<366,369,15>",(key)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (desc) != "undefined") {_RecordType("<371,375,15>",(desc)); Inst18++; } } catch(e) {}
var proxy = new Proxy({}, {
  defineProperty(target, key, desc) {
try { if (Inst20 <= 1000 && typeof (Object.getOwnPropertyNames) != "undefined") {_RecordType("<395,421,16>",(Object.getOwnPropertyNames)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Object) != "undefined") {_RecordType("<395,401,16>",(Object)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (desc) != "undefined") {_RecordType("<422,426,16>",(desc)); Inst22++; } } catch(e) {}
    var names = Object.getOwnPropertyNames(desc);
try { if (Inst19 <= 1000 && typeof (names) != "undefined") {_RecordType("<387,392,16>",(names)); Inst19++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (names) != "undefined") {_RecordType("<433,438,17>",(names)); Inst23++; } } catch(e) {}
    names;
    ["set", "configurable"];
    return true;
  }

});
try { if (Inst13 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<317,322,14>",(proxy)); Inst13++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<495,516,23>",(Object.defineProperty)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Object) != "undefined") {_RecordType("<495,501,23>",(Object)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<517,522,23>",(proxy)); Inst26++; } } catch(e) {}
Object.defineProperty(proxy, "foo", {
  configurable: true,
  set: function () {
    ;
  }
});
try { if (Inst27 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<590,603,29>",(reportCompare)); Inst27++; } } catch(e) {}
reportCompare(true, true);

