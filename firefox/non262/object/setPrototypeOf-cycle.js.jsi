var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// The cycle check in 9.1.2 [[SetPrototypeOf]] does not walk proxies.
// Therefore it's very easy to create prototype chain cycles involving proxies,
// and the spec requires us to accept this.
var t = {};
try { if (Inst0 <= 1000 && typeof (t) != "undefined") {_RecordType("<198,199,4>",(t)); Inst0++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<218,223,5>",(Proxy)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (t) != "undefined") {_RecordType("<224,225,5>",(t)); Inst3++; } } catch(e) {}
var p = new Proxy(t, {});
try { if (Inst1 <= 1000 && typeof (p) != "undefined") {_RecordType("<210,211,5>",(p)); Inst1++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (Object.setPrototypeOf) != "undefined") {_RecordType("<232,253,6>",(Object.setPrototypeOf)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Object) != "undefined") {_RecordType("<232,238,6>",(Object)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (t) != "undefined") {_RecordType("<254,255,6>",(t)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (p) != "undefined") {_RecordType("<257,258,6>",(p)); Inst7++; } } catch(e) {}
Object.setPrototypeOf(t, p); // ðŸ™ˆ
// Actually doing anything that searches this object's prototype chain
// technically should not terminate. We instead throw "too much recursion".

for (var obj of [t, p]) {
try { if (Inst8 <= 1000 && typeof (obj) != "undefined") {_RecordType("<424,427,10>",(obj)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (t) != "undefined") {_RecordType("<432,433,10>",(t)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (p) != "undefined") {_RecordType("<435,436,10>",(p)); Inst10++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (obj) != "undefined") {_RecordType("<457,460,11>",(obj)); Inst11++; } } catch(e) {}
  (() => "x" in obj)();

try { if (Inst12 <= 1000 && typeof (InternalError) != "undefined") {_RecordType("<468,481,13>",(InternalError)); Inst12++; } } catch(e) {}
  InternalError;

try { if (Inst13 <= 1000 && typeof (obj.x) != "undefined") {_RecordType("<493,498,15>",(obj.x)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (obj) != "undefined") {_RecordType("<493,496,15>",(obj)); Inst14++; } } catch(e) {}
  (() => obj.x)();

try { if (Inst15 <= 1000 && typeof (InternalError) != "undefined") {_RecordType("<506,519,17>",(InternalError)); Inst15++; } } catch(e) {}
  InternalError;

  (() => {
    obj.x = 1;
try { if (Inst16 <= 1000 && typeof (obj.x) != "undefined") {_RecordType("<537,542,20>",(obj.x)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (obj) != "undefined") {_RecordType("<537,540,20>",(obj)); Inst17++; } } catch(e) {}
  })();

try { if (Inst18 <= 1000 && typeof (InternalError) != "undefined") {_RecordType("<559,572,23>",(InternalError)); Inst18++; } } catch(e) {}
  InternalError;
}

try { if (Inst19 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<577,590,26>",(reportCompare)); Inst19++; } } catch(e) {}
reportCompare(0, 0);

