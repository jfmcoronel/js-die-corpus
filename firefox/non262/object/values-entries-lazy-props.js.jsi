var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
var Inst102 = 0;
var Inst103 = 0;
var Inst104 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Return new objects for each test case.
try { if (Inst0 <= 1000 && typeof (makeTestCases) != "undefined") {_RecordType("<51,64,2>",(makeTestCases)); Inst0++; } } catch(e) {}
function makeTestCases() {
  // Call the resolve hook for arguments/string objects.
try { if (Inst2 <= 1000 && typeof (object) != "undefined") {_RecordType("<149,155,4>",(object)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (object) != "undefined") {_RecordType("<164,170,4>",(object)); Inst3++; } } catch(e) {}
  const resolveIndex = object => 0 in object; // Calls the resolve hook for functions.
try { if (Inst1 <= 1000 && typeof (resolveIndex) != "undefined") {_RecordType("<134,146,4>",(resolveIndex)); Inst1++; } } catch(e) {}


try { if (Inst5 <= 1000 && typeof (object) != "undefined") {_RecordType("<241,247,7>",(object)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (object) != "undefined") {_RecordType("<263,269,7>",(object)); Inst6++; } } catch(e) {}
  const resolveFunction = object => "length" in object;
try { if (Inst4 <= 1000 && typeof (resolveFunction) != "undefined") {_RecordType("<223,238,7>",(resolveFunction)); Inst4++; } } catch(e) {}

try { if (Inst8 <= 1000 && typeof (array) != "undefined") {_RecordType("<291,296,9>",(array)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Object.keys) != "undefined") {_RecordType("<313,324,10>",(Object.keys)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Object) != "undefined") {_RecordType("<313,319,10>",(Object)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (array) != "undefined") {_RecordType("<325,330,10>",(array)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Object.values) != "undefined") {_RecordType("<345,358,11>",(Object.values)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Object) != "undefined") {_RecordType("<345,351,11>",(Object)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (array) != "undefined") {_RecordType("<359,364,11>",(array)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Object.entries) != "undefined") {_RecordType("<380,394,12>",(Object.entries)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Object) != "undefined") {_RecordType("<380,386,12>",(Object)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (array) != "undefined") {_RecordType("<395,400,12>",(array)); Inst17++; } } catch(e) {}
  const expected = array => ({
    keys: Object.keys(array),
    values: Object.values(array),
    entries: Object.entries(array)
  });
try { if (Inst7 <= 1000 && typeof (expected) != "undefined") {_RecordType("<280,288,9>",(expected)); Inst7++; } } catch(e) {}

try { if (Inst19 <= 1000 && typeof (resolveIndex) != "undefined") {_RecordType("<524,536,20>",(resolveIndex)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (expected) != "undefined") {_RecordType("<545,553,21>",(expected)); Inst20++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (resolveIndex) != "undefined") {_RecordType("<639,651,26>",(resolveIndex)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (expected) != "undefined") {_RecordType("<660,668,27>",(expected)); Inst24++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (resolveIndex) != "undefined") {_RecordType("<767,779,32>",(resolveIndex)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (expected) != "undefined") {_RecordType("<788,796,33>",(expected)); Inst30++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (resolveIndex) != "undefined") {_RecordType("<941,953,41>",(resolveIndex)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (expected) != "undefined") {_RecordType("<962,970,42>",(expected)); Inst33++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (resolveIndex) != "undefined") {_RecordType("<1077,1089,49>",(resolveIndex)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (expected) != "undefined") {_RecordType("<1098,1106,50>",(expected)); Inst37++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (resolveIndex) != "undefined") {_RecordType("<1226,1238,57>",(resolveIndex)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (expected) != "undefined") {_RecordType("<1247,1255,58>",(expected)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (String) != "undefined") {_RecordType("<1311,1317,61>",(String)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (resolveIndex) != "undefined") {_RecordType("<1336,1348,62>",(resolveIndex)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (expected) != "undefined") {_RecordType("<1357,1365,63>",(expected)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (String) != "undefined") {_RecordType("<1393,1399,65>",(String)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (resolveIndex) != "undefined") {_RecordType("<1419,1431,66>",(resolveIndex)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (expected) != "undefined") {_RecordType("<1440,1448,67>",(expected)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (String) != "undefined") {_RecordType("<1479,1485,69>",(String)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (resolveIndex) != "undefined") {_RecordType("<1507,1519,70>",(resolveIndex)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (expected) != "undefined") {_RecordType("<1528,1536,71>",(expected)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (resolveFunction) != "undefined") {_RecordType("<1638,1653,77>",(resolveFunction)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (expected) != "undefined") {_RecordType("<1662,1670,78>",(expected)); Inst54++; } } catch(e) {}
  return [// Mapped arguments objects.
  {
    object: function () {
try { if (Inst18 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<491,500,18>",(arguments)); Inst18++; } } catch(e) {}
      return arguments;
    }(),
    resolve: resolveIndex,
    ...expected([])
  }, {
    object: function (x) {
try { if (Inst21 <= 1000 && typeof (x) != "undefined") {_RecordType("<587,588,23>",(x)); Inst21++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<605,614,24>",(arguments)); Inst22++; } } catch(e) {}
      return arguments;
    }(1),
    resolve: resolveIndex,
    ...expected([1])
  }, {
    object: function (x, y, z) {
try { if (Inst25 <= 1000 && typeof (x) != "undefined") {_RecordType("<703,704,29>",(x)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (y) != "undefined") {_RecordType("<706,707,29>",(y)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (z) != "undefined") {_RecordType("<709,710,29>",(z)); Inst27++; } } catch(e) {}
try { if (Inst28 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<727,736,30>",(arguments)); Inst28++; } } catch(e) {}
      return arguments;
    }(1, 2, 3),
    resolve: resolveIndex,
    ...expected([1, 2, 3])
  }, // Unmapped arguments objects.
  {
    object: function () {
      "use strict";

try { if (Inst31 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<908,917,39>",(arguments)); Inst31++; } } catch(e) {}
      return arguments;
    }(),
    resolve: resolveIndex,
    ...expected([])
  }, {
    object: function (x) {
try { if (Inst34 <= 1000 && typeof (x) != "undefined") {_RecordType("<1004,1005,44>",(x)); Inst34++; } } catch(e) {}
      "use strict";

try { if (Inst35 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<1043,1052,47>",(arguments)); Inst35++; } } catch(e) {}
      return arguments;
    }(1),
    resolve: resolveIndex,
    ...expected([1])
  }, {
    object: function (x, y, z) {
try { if (Inst38 <= 1000 && typeof (x) != "undefined") {_RecordType("<1141,1142,52>",(x)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (y) != "undefined") {_RecordType("<1144,1145,52>",(y)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (z) != "undefined") {_RecordType("<1147,1148,52>",(z)); Inst40++; } } catch(e) {}
      "use strict";

try { if (Inst41 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<1186,1195,55>",(arguments)); Inst41++; } } catch(e) {}
      return arguments;
    }(1, 2, 3),
    resolve: resolveIndex,
    ...expected([1, 2, 3])
  }, // String objects.
  {
    object: new String(""),
    resolve: resolveIndex,
    ...expected([])
  }, {
    object: new String("a"),
    resolve: resolveIndex,
    ...expected(["a"])
  }, {
    object: new String("abc"),
    resolve: resolveIndex,
    ...expected(["a", "b", "c"])
  }, // Function objects.
  {
    object: function () {
      ;
    },
    resolve: resolveFunction,
    ...expected([])
  }];
}

try { if (Inst56 <= 1000 && typeof (assertEqArray) != "undefined") {_RecordType("<1711,1724,83>",(assertEqArray)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (assertEqArray) != "undefined") {_RecordType("<1736,1749,84>",(assertEqArray)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (entries) != "undefined") {_RecordType("<1754,1761,86>",(entries)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1762,1768,86>",(actual)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (expected) != "undefined") {_RecordType("<1770,1778,86>",(expected)); Inst60++; } } catch(e) {}
var assertWith = {
  keys: assertEqArray,
  values: assertEqArray,

  entries(actual, expected) {
try { if (Inst61 <= 1000 && typeof (actual.length) != "undefined") {_RecordType("<1786,1799,87>",(actual.length)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1786,1792,87>",(actual)); Inst62++; } } catch(e) {}
    actual.length;
try { if (Inst63 <= 1000 && typeof (expected.length) != "undefined") {_RecordType("<1805,1820,88>",(expected.length)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (expected) != "undefined") {_RecordType("<1805,1813,88>",(expected)); Inst64++; } } catch(e) {}
    expected.length;

    for (let i = 0; i < expected.length; ++i) {
try { if (Inst65 <= 1000 && typeof (i) != "undefined") {_RecordType("<1836,1837,90>",(i)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (i) != "undefined") {_RecordType("<1843,1844,90>",(i)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (expected.length) != "undefined") {_RecordType("<1847,1862,90>",(expected.length)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (expected) != "undefined") {_RecordType("<1847,1855,90>",(expected)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (i) != "undefined") {_RecordType("<1866,1867,90>",(i)); Inst69++; } } catch(e) {}
try { if (Inst70 <= 1000 && typeof (actual[i]) != "undefined") {_RecordType("<1877,1886,91>",(actual[i])); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1877,1883,91>",(actual)); Inst71++; } } catch(e) {}
      actual[i];
try { if (Inst72 <= 1000 && typeof (expected[i]) != "undefined") {_RecordType("<1894,1905,92>",(expected[i])); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (expected) != "undefined") {_RecordType("<1894,1902,92>",(expected)); Inst73++; } } catch(e) {}
      expected[i];
    }
  }

}; // Test Object.keys/values/entries on objects with enumerate/resolve hooks.
try { if (Inst55 <= 1000 && typeof (assertWith) != "undefined") {_RecordType("<1688,1698,82>",(assertWith)); Inst55++; } } catch(e) {}

for (let method of ["keys", "values", "entries"]) {
try { if (Inst74 <= 1000 && typeof (method) != "undefined") {_RecordType("<2007,2013,98>",(method)); Inst74++; } } catch(e) {}
try { if (Inst76 <= 1000 && typeof (assertWith[method]) != "undefined") {_RecordType("<2065,2083,99>",(assertWith[method])); Inst76++; } } catch(e) {}try { if (Inst77 <= 1000 && typeof (assertWith) != "undefined") {_RecordType("<2065,2075,99>",(assertWith)); Inst77++; } } catch(e) {}
  let assert = assertWith[method]; // Call each method twice to test the case when
try { if (Inst75 <= 1000 && typeof (assert) != "undefined") {_RecordType("<2056,2062,99>",(assert)); Inst75++; } } catch(e) {}
  // - the enumerate hook wasn't yet called,
  // - the enumerate hook was already called.

  for (let {
    object,
    [method]: expected
  } of makeTestCases()) {
try { if (Inst78 <= 1000 && typeof (object) != "undefined") {_RecordType("<2242,2248,104>",(object)); Inst78++; } } catch(e) {}try { if (Inst79 <= 1000 && typeof (expected) != "undefined") {_RecordType("<2264,2272,105>",(expected)); Inst79++; } } catch(e) {}try { if (Inst80 <= 1000 && typeof (makeTestCases) != "undefined") {_RecordType("<2280,2293,106>",(makeTestCases)); Inst80++; } } catch(e) {}
try { if (Inst81 <= 1000 && typeof (Object[method]) != "undefined") {_RecordType("<2303,2317,107>",(Object[method])); Inst81++; } } catch(e) {}try { if (Inst82 <= 1000 && typeof (Object) != "undefined") {_RecordType("<2303,2309,107>",(Object)); Inst82++; } } catch(e) {}try { if (Inst83 <= 1000 && typeof (object) != "undefined") {_RecordType("<2318,2324,107>",(object)); Inst83++; } } catch(e) {}
    Object[method](object);
try { if (Inst84 <= 1000 && typeof (expected) != "undefined") {_RecordType("<2331,2339,108>",(expected)); Inst84++; } } catch(e) {}
    expected;
try { if (Inst85 <= 1000 && typeof (Object[method]) != "undefined") {_RecordType("<2345,2359,109>",(Object[method])); Inst85++; } } catch(e) {}try { if (Inst86 <= 1000 && typeof (Object) != "undefined") {_RecordType("<2345,2351,109>",(Object)); Inst86++; } } catch(e) {}try { if (Inst87 <= 1000 && typeof (object) != "undefined") {_RecordType("<2360,2366,109>",(object)); Inst87++; } } catch(e) {}
    Object[method](object);
try { if (Inst88 <= 1000 && typeof (expected) != "undefined") {_RecordType("<2373,2381,110>",(expected)); Inst88++; } } catch(e) {}
    expected;
  } // Test the case when enumerate wasn't yet called, but a property was already resolved.


  for (let {
    object,
    resolve,
    [method]: expected
  } of makeTestCases()) {
try { if (Inst89 <= 1000 && typeof (object) != "undefined") {_RecordType("<2494,2500,115>",(object)); Inst89++; } } catch(e) {}try { if (Inst90 <= 1000 && typeof (resolve) != "undefined") {_RecordType("<2506,2513,116>",(resolve)); Inst90++; } } catch(e) {}try { if (Inst91 <= 1000 && typeof (expected) != "undefined") {_RecordType("<2529,2537,117>",(expected)); Inst91++; } } catch(e) {}try { if (Inst92 <= 1000 && typeof (makeTestCases) != "undefined") {_RecordType("<2545,2558,118>",(makeTestCases)); Inst92++; } } catch(e) {}
try { if (Inst93 <= 1000 && typeof (resolve) != "undefined") {_RecordType("<2568,2575,119>",(resolve)); Inst93++; } } catch(e) {}try { if (Inst94 <= 1000 && typeof (object) != "undefined") {_RecordType("<2576,2582,119>",(object)); Inst94++; } } catch(e) {}
    resolve(object); // Call the resolve hook.

try { if (Inst95 <= 1000 && typeof (Object[method]) != "undefined") {_RecordType("<2616,2630,121>",(Object[method])); Inst95++; } } catch(e) {}try { if (Inst96 <= 1000 && typeof (Object) != "undefined") {_RecordType("<2616,2622,121>",(Object)); Inst96++; } } catch(e) {}try { if (Inst97 <= 1000 && typeof (object) != "undefined") {_RecordType("<2631,2637,121>",(object)); Inst97++; } } catch(e) {}
    Object[method](object);
try { if (Inst98 <= 1000 && typeof (expected) != "undefined") {_RecordType("<2644,2652,122>",(expected)); Inst98++; } } catch(e) {}
    expected;
try { if (Inst99 <= 1000 && typeof (Object[method]) != "undefined") {_RecordType("<2658,2672,123>",(Object[method])); Inst99++; } } catch(e) {}try { if (Inst100 <= 1000 && typeof (Object) != "undefined") {_RecordType("<2658,2664,123>",(Object)); Inst100++; } } catch(e) {}try { if (Inst101 <= 1000 && typeof (object) != "undefined") {_RecordType("<2673,2679,123>",(object)); Inst101++; } } catch(e) {}
    Object[method](object);
try { if (Inst102 <= 1000 && typeof (expected) != "undefined") {_RecordType("<2686,2694,124>",(expected)); Inst102++; } } catch(e) {}
    expected;
  }
}

try { if (Inst103 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<2714,2727,128>",(reportCompare)); Inst103++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst104 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<2748,2761,129>",(reportCompare)); Inst104++; } } catch(e) {}
  reportCompare(true, true);
}

