var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/*
 * Any copyright is dedicated to the Public Domain.
 * http://creativecommons.org/licenses/publicdomain/
 * Contributor:
 *   Jeff Walden <jwalden+code@mit.edu>
 */
var gTestfile = 'preventExtensions-idempotent.js'; //-----------------------------------------------------------------------------
try { if (Inst0 <= 1000 && typeof (gTestfile) != "undefined") {_RecordType("<172,181,7>",(gTestfile)); Inst0++; } } catch(e) {}

var BUGNUMBER = 599459;
try { if (Inst1 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<304,313,9>",(BUGNUMBER)); Inst1++; } } catch(e) {}
var summary = 'Object.preventExtensions should be idempotent';
try { if (Inst2 <= 1000 && typeof (summary) != "undefined") {_RecordType("<328,335,10>",(summary)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (print) != "undefined") {_RecordType("<387,392,11>",(print)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<393,402,11>",(BUGNUMBER)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (summary) != "undefined") {_RecordType("<412,419,11>",(summary)); Inst5++; } } catch(e) {}
print(BUGNUMBER + ": " + summary);
/**************
 * BEGIN TEST *
 **************/

var obj = {};
try { if (Inst6 <= 1000 && typeof (obj) != "undefined") {_RecordType("<476,479,16>",(obj)); Inst6++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (Object.preventExtensions) != "undefined") {_RecordType("<486,510,17>",(Object.preventExtensions)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Object) != "undefined") {_RecordType("<486,492,17>",(Object)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (obj) != "undefined") {_RecordType("<511,514,17>",(obj)); Inst9++; } } catch(e) {}
Object.preventExtensions(obj);
try { if (Inst10 <= 1000 && typeof (obj) != "undefined") {_RecordType("<517,520,18>",(obj)); Inst10++; } } catch(e) {}
obj;
try { if (Inst11 <= 1000 && typeof (Object.isExtensible) != "undefined") {_RecordType("<522,541,19>",(Object.isExtensible)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Object) != "undefined") {_RecordType("<522,528,19>",(Object)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (obj) != "undefined") {_RecordType("<542,545,19>",(obj)); Inst13++; } } catch(e) {}
Object.isExtensible(obj);
false;
try { if (Inst14 <= 1000 && typeof (Object.preventExtensions) != "undefined") {_RecordType("<555,579,21>",(Object.preventExtensions)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Object) != "undefined") {_RecordType("<555,561,21>",(Object)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (obj) != "undefined") {_RecordType("<580,583,21>",(obj)); Inst16++; } } catch(e) {}
Object.preventExtensions(obj);
try { if (Inst17 <= 1000 && typeof (obj) != "undefined") {_RecordType("<586,589,22>",(obj)); Inst17++; } } catch(e) {}
obj;
try { if (Inst18 <= 1000 && typeof (Object.isExtensible) != "undefined") {_RecordType("<591,610,23>",(Object.isExtensible)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Object) != "undefined") {_RecordType("<591,597,23>",(Object)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (obj) != "undefined") {_RecordType("<611,614,23>",(obj)); Inst20++; } } catch(e) {}
Object.isExtensible(obj);
false;

/******************************************************************************/
try { if (Inst21 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<717,730,27>",(reportCompare)); Inst21++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst22 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<751,764,28>",(reportCompare)); Inst22++; } } catch(e) {}
  reportCompare(true, true);
}

try { if (Inst23 <= 1000 && typeof (print) != "undefined") {_RecordType("<781,786,31>",(print)); Inst23++; } } catch(e) {}
print("All tests passed!");

