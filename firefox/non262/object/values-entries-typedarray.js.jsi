var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (assertSameEntries) != "undefined") {_RecordType("<9,26,1>",(assertSameEntries)); Inst0++; } } catch(e) {}
function assertSameEntries(actual, expected) {
try { if (Inst1 <= 1000 && typeof (actual) != "undefined") {_RecordType("<27,33,1>",(actual)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (expected) != "undefined") {_RecordType("<35,43,1>",(expected)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (actual.length) != "undefined") {_RecordType("<49,62,2>",(actual.length)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (actual) != "undefined") {_RecordType("<49,55,2>",(actual)); Inst4++; } } catch(e) {}
  actual.length;
try { if (Inst5 <= 1000 && typeof (expected.length) != "undefined") {_RecordType("<66,81,3>",(expected.length)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (expected) != "undefined") {_RecordType("<66,74,3>",(expected)); Inst6++; } } catch(e) {}
  expected.length;

  for (let i = 0; i < expected.length; ++i) {
try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<95,96,5>",(i)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<102,103,5>",(i)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (expected.length) != "undefined") {_RecordType("<106,121,5>",(expected.length)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (expected) != "undefined") {_RecordType("<106,114,5>",(expected)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<125,126,5>",(i)); Inst11++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (actual[i]) != "undefined") {_RecordType("<134,143,6>",(actual[i])); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (actual) != "undefined") {_RecordType("<134,140,6>",(actual)); Inst13++; } } catch(e) {}
    actual[i];
try { if (Inst14 <= 1000 && typeof (expected[i]) != "undefined") {_RecordType("<149,160,7>",(expected[i])); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (expected) != "undefined") {_RecordType("<149,157,7>",(expected)); Inst15++; } } catch(e) {}
    expected[i];
  }
}

try { if (Inst16 <= 1000 && typeof (throwsTypeError) != "undefined") {_RecordType("<178,193,11>",(throwsTypeError)); Inst16++; } } catch(e) {}
function throwsTypeError(fn) {
try { if (Inst17 <= 1000 && typeof (fn) != "undefined") {_RecordType("<194,196,11>",(fn)); Inst17++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (e) != "undefined") {_RecordType("<229,230,14>",(e)); Inst19++; } } catch(e) {}
  try {
try { if (Inst18 <= 1000 && typeof (fn) != "undefined") {_RecordType("<212,214,13>",(fn)); Inst18++; } } catch(e) {}
    fn();
  } catch (e) {
try { if (Inst20 <= 1000 && typeof (e) != "undefined") {_RecordType("<238,239,15>",(e)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<251,260,15>",(TypeError)); Inst21++; } } catch(e) {}
    e instanceof TypeError;
    true;
    return true;
  }

  return false;
} // Non-standard: Accessing elements of detached array buffers should throw, but
// this is currently not implemented.


const ACCESS_ON_DETACHED_ARRAY_BUFFER_THROWS = (() => {
try { if (Inst24 <= 1000 && typeof (Int32Array) != "undefined") {_RecordType("<503,513,26>",(Int32Array)); Inst24++; } } catch(e) {}
  let ta = new Int32Array(10);
try { if (Inst23 <= 1000 && typeof (ta) != "undefined") {_RecordType("<494,496,26>",(ta)); Inst23++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (detachArrayBuffer) != "undefined") {_RecordType("<521,538,27>",(detachArrayBuffer)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (ta.buffer) != "undefined") {_RecordType("<539,548,27>",(ta.buffer)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (ta) != "undefined") {_RecordType("<539,541,27>",(ta)); Inst27++; } } catch(e) {}
  detachArrayBuffer(ta.buffer);
try { if (Inst29 <= 1000 && typeof (throwsTypeError) != "undefined") {_RecordType("<566,581,28>",(throwsTypeError)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (ta[0]) != "undefined") {_RecordType("<588,593,28>",(ta[0])); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (ta) != "undefined") {_RecordType("<588,590,28>",(ta)); Inst31++; } } catch(e) {}
  let throws = throwsTypeError(() => ta[0]); // Ensure [[Get]] and [[GetOwnProperty]] return consistent results.
try { if (Inst28 <= 1000 && typeof (throws) != "undefined") {_RecordType("<557,563,28>",(throws)); Inst28++; } } catch(e) {}

try { if (Inst32 <= 1000 && typeof (throwsTypeError) != "undefined") {_RecordType("<667,682,30>",(throwsTypeError)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<689,720,30>",(Object.getOwnPropertyDescriptor)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (Object) != "undefined") {_RecordType("<689,695,30>",(Object)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (ta) != "undefined") {_RecordType("<721,723,30>",(ta)); Inst35++; } } catch(e) {}
  throwsTypeError(() => Object.getOwnPropertyDescriptor(ta, 0));
try { if (Inst36 <= 1000 && typeof (throws) != "undefined") {_RecordType("<732,738,31>",(throws)); Inst36++; } } catch(e) {}
  throws;
try { if (Inst37 <= 1000 && typeof (throws) != "undefined") {_RecordType("<749,755,32>",(throws)); Inst37++; } } catch(e) {}
  return throws;
})();
try { if (Inst22 <= 1000 && typeof (ACCESS_ON_DETACHED_ARRAY_BUFFER_THROWS) != "undefined") {_RecordType("<438,476,25>",(ACCESS_ON_DETACHED_ARRAY_BUFFER_THROWS)); Inst22++; } } catch(e) {}

try { if (Inst38 <= 1000 && typeof (maybeThrowOnDetached) != "undefined") {_RecordType("<773,793,35>",(maybeThrowOnDetached)); Inst38++; } } catch(e) {}
function maybeThrowOnDetached(fn, returnValue) {
try { if (Inst39 <= 1000 && typeof (fn) != "undefined") {_RecordType("<794,796,35>",(fn)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (returnValue) != "undefined") {_RecordType("<798,809,35>",(returnValue)); Inst40++; } } catch(e) {}
try { if (Inst41 <= 1000 && typeof (ACCESS_ON_DETACHED_ARRAY_BUFFER_THROWS) != "undefined") {_RecordType("<819,857,36>",(ACCESS_ON_DETACHED_ARRAY_BUFFER_THROWS)); Inst41++; } } catch(e) {}
  if (ACCESS_ON_DETACHED_ARRAY_BUFFER_THROWS) {
try { if (Inst42 <= 1000 && typeof (fn) != "undefined") {_RecordType("<865,867,37>",(fn)); Inst42++; } } catch(e) {}
    fn;
try { if (Inst43 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<873,882,38>",(TypeError)); Inst43++; } } catch(e) {}
    TypeError;
try { if (Inst44 <= 1000 && typeof (returnValue) != "undefined") {_RecordType("<895,906,39>",(returnValue)); Inst44++; } } catch(e) {}
    return returnValue;
  }

try { if (Inst45 <= 1000 && typeof (fn) != "undefined") {_RecordType("<922,924,42>",(fn)); Inst45++; } } catch(e) {}
  return fn();
} // Ensure Object.keys/values/entries work correctly on typed arrays.


for (let len of [0, 1, 10]) {
try { if (Inst46 <= 1000 && typeof (len) != "undefined") {_RecordType("<1010,1013,46>",(len)); Inst46++; } } catch(e) {}
try { if (Inst48 <= 1000 && typeof (new Array(len).fill) != "undefined") {_RecordType("<1045,1064,47>",(new Array(len).fill)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (Array) != "undefined") {_RecordType("<1049,1054,47>",(Array)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (len) != "undefined") {_RecordType("<1055,1058,47>",(len)); Inst50++; } } catch(e) {}
  let array = new Array(len).fill(1);
try { if (Inst47 <= 1000 && typeof (array) != "undefined") {_RecordType("<1037,1042,47>",(array)); Inst47++; } } catch(e) {}
try { if (Inst52 <= 1000 && typeof (Int32Array) != "undefined") {_RecordType("<1084,1094,48>",(Int32Array)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (array) != "undefined") {_RecordType("<1095,1100,48>",(array)); Inst53++; } } catch(e) {}
  let ta = new Int32Array(array);
try { if (Inst51 <= 1000 && typeof (ta) != "undefined") {_RecordType("<1075,1077,48>",(ta)); Inst51++; } } catch(e) {}
try { if (Inst54 <= 1000 && typeof (Object.keys) != "undefined") {_RecordType("<1105,1116,49>",(Object.keys)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1105,1111,49>",(Object)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (ta) != "undefined") {_RecordType("<1117,1119,49>",(ta)); Inst56++; } } catch(e) {}
  Object.keys(ta);
try { if (Inst57 <= 1000 && typeof (Object.keys) != "undefined") {_RecordType("<1124,1135,50>",(Object.keys)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1124,1130,50>",(Object)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (array) != "undefined") {_RecordType("<1136,1141,50>",(array)); Inst59++; } } catch(e) {}
  Object.keys(array);
try { if (Inst60 <= 1000 && typeof (Object.values) != "undefined") {_RecordType("<1146,1159,51>",(Object.values)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1146,1152,51>",(Object)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (ta) != "undefined") {_RecordType("<1160,1162,51>",(ta)); Inst62++; } } catch(e) {}
  Object.values(ta);
try { if (Inst63 <= 1000 && typeof (Object.values) != "undefined") {_RecordType("<1167,1180,52>",(Object.values)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1167,1173,52>",(Object)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (array) != "undefined") {_RecordType("<1181,1186,52>",(array)); Inst65++; } } catch(e) {}
  Object.values(array);
try { if (Inst66 <= 1000 && typeof (Object.entries) != "undefined") {_RecordType("<1191,1205,53>",(Object.entries)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1191,1197,53>",(Object)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (ta) != "undefined") {_RecordType("<1206,1208,53>",(ta)); Inst68++; } } catch(e) {}
  Object.entries(ta);
try { if (Inst69 <= 1000 && typeof (Object.entries) != "undefined") {_RecordType("<1213,1227,54>",(Object.entries)); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1213,1219,54>",(Object)); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (array) != "undefined") {_RecordType("<1228,1233,54>",(array)); Inst71++; } } catch(e) {}
  Object.entries(array);
try { if (Inst72 <= 1000 && typeof (detachArrayBuffer) != "undefined") {_RecordType("<1238,1255,55>",(detachArrayBuffer)); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (ta.buffer) != "undefined") {_RecordType("<1256,1265,55>",(ta.buffer)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (ta) != "undefined") {_RecordType("<1256,1258,55>",(ta)); Inst74++; } } catch(e) {}
  detachArrayBuffer(ta.buffer);
try { if (Inst75 <= 1000 && typeof (maybeThrowOnDetached) != "undefined") {_RecordType("<1270,1290,56>",(maybeThrowOnDetached)); Inst75++; } } catch(e) {}try { if (Inst76 <= 1000 && typeof (Object.keys) != "undefined") {_RecordType("<1297,1308,56>",(Object.keys)); Inst76++; } } catch(e) {}try { if (Inst77 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1297,1303,56>",(Object)); Inst77++; } } catch(e) {}try { if (Inst78 <= 1000 && typeof (ta) != "undefined") {_RecordType("<1309,1311,56>",(ta)); Inst78++; } } catch(e) {}
  maybeThrowOnDetached(() => Object.keys(ta), []);
  [];
try { if (Inst79 <= 1000 && typeof (maybeThrowOnDetached) != "undefined") {_RecordType("<1327,1347,58>",(maybeThrowOnDetached)); Inst79++; } } catch(e) {}try { if (Inst80 <= 1000 && typeof (Object.values) != "undefined") {_RecordType("<1354,1367,58>",(Object.values)); Inst80++; } } catch(e) {}try { if (Inst81 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1354,1360,58>",(Object)); Inst81++; } } catch(e) {}try { if (Inst82 <= 1000 && typeof (ta) != "undefined") {_RecordType("<1368,1370,58>",(ta)); Inst82++; } } catch(e) {}
  maybeThrowOnDetached(() => Object.values(ta), []);
  [];
try { if (Inst83 <= 1000 && typeof (maybeThrowOnDetached) != "undefined") {_RecordType("<1386,1406,60>",(maybeThrowOnDetached)); Inst83++; } } catch(e) {}try { if (Inst84 <= 1000 && typeof (Object.entries) != "undefined") {_RecordType("<1413,1427,60>",(Object.entries)); Inst84++; } } catch(e) {}try { if (Inst85 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1413,1419,60>",(Object)); Inst85++; } } catch(e) {}try { if (Inst86 <= 1000 && typeof (ta) != "undefined") {_RecordType("<1428,1430,60>",(ta)); Inst86++; } } catch(e) {}
  maybeThrowOnDetached(() => Object.entries(ta), []);
  [];
}

try { if (Inst87 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1458,1471,64>",(reportCompare)); Inst87++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst88 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1492,1505,65>",(reportCompare)); Inst88++; } } catch(e) {}
  reportCompare(true, true);
}

