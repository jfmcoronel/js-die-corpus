var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* Any copyright is dedicated to the Public Domain.
 * http://creativecommons.org/licenses/publicdomain/ */
// getOwnPropertySymbols(proxy) calls the getOwnPropertyNames hook (only).
try { if (Inst1 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<198,204,4>",(Symbol)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<208,214,4>",(Symbol)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Symbol.for) != "undefined") {_RecordType("<224,234,4>",(Symbol.for)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<224,230,4>",(Symbol)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<243,258,4>",(Symbol.iterator)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<243,249,4>",(Symbol)); Inst6++; } } catch(e) {}
var symbols = [Symbol(), Symbol("moon"), Symbol.for("sun"), Symbol.iterator];
try { if (Inst0 <= 1000 && typeof (symbols) != "undefined") {_RecordType("<187,194,4>",(symbols)); Inst0++; } } catch(e) {}
var hits = 0;
try { if (Inst7 <= 1000 && typeof (hits) != "undefined") {_RecordType("<265,269,5>",(hits)); Inst7++; } } catch(e) {}

try { if (Inst8 <= 1000 && typeof (HandlerProxy) != "undefined") {_RecordType("<285,297,7>",(HandlerProxy)); Inst8++; } } catch(e) {}
function HandlerProxy() {
try { if (Inst9 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<315,320,8>",(Proxy)); Inst9++; } } catch(e) {}
  return new Proxy({}, {
    get: function (t, key) {
try { if (Inst10 <= 1000 && typeof (t) != "undefined") {_RecordType("<346,347,9>",(t)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (key) != "undefined") {_RecordType("<349,352,9>",(key)); Inst11++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (key) != "undefined") {_RecordType("<366,369,10>",(key)); Inst12++; } } catch(e) {}
      if (key !== "ownKeys") {
try { if (Inst13 <= 1000 && typeof (Error) != "undefined") {_RecordType("<405,410,11>",(Error)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (uneval) != "undefined") {_RecordType("<440,446,11>",(uneval)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (key) != "undefined") {_RecordType("<447,450,11>",(key)); Inst15++; } } catch(e) {}
        throw new Error("tried to access handler[" + uneval(key) + "]");
      }

try { if (Inst16 <= 1000 && typeof (hits) != "undefined") {_RecordType("<475,479,14>",(hits)); Inst16++; } } catch(e) {}
      hits++;
try { if (Inst17 <= 1000 && typeof (t) != "undefined") {_RecordType("<496,497,15>",(t)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (symbols) != "undefined") {_RecordType("<501,508,15>",(symbols)); Inst18++; } } catch(e) {}
      return t => symbols;
    }
  });
}

try { if (Inst19 <= 1000 && typeof (OwnKeysProxy) != "undefined") {_RecordType("<534,546,20>",(OwnKeysProxy)); Inst19++; } } catch(e) {}
function OwnKeysProxy() {
try { if (Inst20 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<564,569,21>",(Proxy)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (HandlerProxy) != "undefined") {_RecordType("<578,590,21>",(HandlerProxy)); Inst21++; } } catch(e) {}
  return new Proxy({}, new HandlerProxy());
}

try { if (Inst22 <= 1000 && typeof (Object.getOwnPropertySymbols) != "undefined") {_RecordType("<598,626,24>",(Object.getOwnPropertySymbols)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Object) != "undefined") {_RecordType("<598,604,24>",(Object)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (OwnKeysProxy) != "undefined") {_RecordType("<631,643,24>",(OwnKeysProxy)); Inst24++; } } catch(e) {}
Object.getOwnPropertySymbols(new OwnKeysProxy());
try { if (Inst25 <= 1000 && typeof (symbols) != "undefined") {_RecordType("<648,655,25>",(symbols)); Inst25++; } } catch(e) {}
symbols;
try { if (Inst26 <= 1000 && typeof (hits) != "undefined") {_RecordType("<657,661,26>",(hits)); Inst26++; } } catch(e) {}
hits;
1;

try { if (Inst27 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<678,691,29>",(reportCompare)); Inst27++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst28 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<712,725,30>",(reportCompare)); Inst28++; } } catch(e) {}
  reportCompare(0, 0);
}

