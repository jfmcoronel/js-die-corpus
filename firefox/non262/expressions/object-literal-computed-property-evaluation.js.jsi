var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Any copyright is dedicated to the Public Domain.
// http://creativecommons.org/licenses/publicdomain/
//-----------------------------------------------------------------------------
var BUGNUMBER = 1199546;
try { if (Inst0 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<189,198,4>",(BUGNUMBER)); Inst0++; } } catch(e) {}
var summary = "Convert computed property name expressions to property key before " + "evaluating the property's value";
try { if (Inst1 <= 1000 && typeof (summary) != "undefined") {_RecordType("<214,221,5>",(summary)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (print) != "undefined") {_RecordType("<330,335,6>",(print)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<336,345,6>",(BUGNUMBER)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (summary) != "undefined") {_RecordType("<355,362,6>",(summary)); Inst4++; } } catch(e) {}
print(BUGNUMBER + ": " + summary);
/**************
 * BEGIN TEST *
 **************/

var s = "foo";
try { if (Inst5 <= 1000 && typeof (s) != "undefined") {_RecordType("<419,420,11>",(s)); Inst5++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (toString) != "undefined") {_RecordType("<452,460,13>",(toString)); Inst7++; } } catch(e) {}
var convertsToS = {
  toString() {
try { if (Inst8 <= 1000 && typeof (s) != "undefined") {_RecordType("<476,477,14>",(s)); Inst8++; } } catch(e) {}
    return s;
  }

};
try { if (Inst6 <= 1000 && typeof (convertsToS) != "undefined") {_RecordType("<434,445,12>",(convertsToS)); Inst6++; } } catch(e) {}
var o = {
  [convertsToS]: // after ToPropertyKey becomes "foo"
  function () {
    s = 'bar';
try { if (Inst10 <= 1000 && typeof (s) != "undefined") {_RecordType("<571,572,21>",(s)); Inst10++; } } catch(e) {}
    return 'abc'; // so we have "foo": "bar" for the first property
  }(),
  [convertsToS]: // |s| was set above to "bar", so after ToPropertyKey, "bar"
  'efg' // so we have "bar": "efg" for the second property

};
try { if (Inst9 <= 1000 && typeof (o) != "undefined") {_RecordType("<491,492,18>",(o)); Inst9++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (o.foo) != "undefined") {_RecordType("<798,803,28>",(o.foo)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (o) != "undefined") {_RecordType("<798,799,28>",(o)); Inst12++; } } catch(e) {}
o.foo;
"abc";
try { if (Inst13 <= 1000 && typeof (o.bar) != "undefined") {_RecordType("<812,817,30>",(o.bar)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (o) != "undefined") {_RecordType("<812,813,30>",(o)); Inst14++; } } catch(e) {}
o.bar;
"efg";

/******************************************************************************/
try { if (Inst15 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<919,932,34>",(reportCompare)); Inst15++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst16 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<953,966,35>",(reportCompare)); Inst16++; } } catch(e) {}
  reportCompare(true, true);
}

try { if (Inst17 <= 1000 && typeof (print) != "undefined") {_RecordType("<983,988,38>",(print)); Inst17++; } } catch(e) {}
print("Tests complete");

