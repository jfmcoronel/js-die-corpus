var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Any copyright is dedicated to the Public Domain.
// http://creativecommons.org/licenses/publicdomain/
var gTestfile = 'object-literal-accessor-property-name.js'; //-----------------------------------------------------------------------------
try { if (Inst0 <= 1000 && typeof (gTestfile) != "undefined") {_RecordType("<109,118,3>",(gTestfile)); Inst0++; } } catch(e) {}

var BUGNUMBER = 715682;
try { if (Inst1 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<250,259,5>",(BUGNUMBER)); Inst1++; } } catch(e) {}
var summary = "Permit numbers and strings containing numbers as accessor property names";
try { if (Inst2 <= 1000 && typeof (summary) != "undefined") {_RecordType("<274,281,6>",(summary)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (print) != "undefined") {_RecordType("<360,365,7>",(print)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<366,375,7>",(BUGNUMBER)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (summary) != "undefined") {_RecordType("<385,392,7>",(summary)); Inst5++; } } catch(e) {}
print(BUGNUMBER + ": " + summary); //-----------------------------------------------------------------------------

({
  get "0"() {
    ;
  }

});
({
  get 0() {
    ;
  }

});
({
  get 0.0() {
    ;
  }

});
({
  get 0.() {
    ;
  }

});
({
  get 1.() {
    ;
  }

});
({
  get 5.2322341234123() {
    ;
  }

});
try { if (Inst6 <= 1000 && typeof (q) != "undefined") {_RecordType("<689,690,46>",(q)); Inst6++; } } catch(e) {}
({
  set "0"(q) {
    ;
  }

});
try { if (Inst7 <= 1000 && typeof (q) != "undefined") {_RecordType("<720,721,52>",(q)); Inst7++; } } catch(e) {}
({
  set 0(q) {
    ;
  }

});
try { if (Inst8 <= 1000 && typeof (q) != "undefined") {_RecordType("<753,754,58>",(q)); Inst8++; } } catch(e) {}
({
  set 0.0(q) {
    ;
  }

});
try { if (Inst9 <= 1000 && typeof (q) != "undefined") {_RecordType("<785,786,64>",(q)); Inst9++; } } catch(e) {}
({
  set 0.(q) {
    ;
  }

});
try { if (Inst10 <= 1000 && typeof (q) != "undefined") {_RecordType("<817,818,70>",(q)); Inst10++; } } catch(e) {}
({
  set 1.(q) {
    ;
  }

});
try { if (Inst11 <= 1000 && typeof (q) != "undefined") {_RecordType("<862,863,76>",(q)); Inst11++; } } catch(e) {}
({
  set 5.2322341234123(q) {
    ;
  }

}); //-----------------------------------------------------------------------------

try { if (Inst12 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<963,976,82>",(reportCompare)); Inst12++; } } catch(e) {}
reportCompare(true, true);

