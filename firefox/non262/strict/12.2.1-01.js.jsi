var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// |reftest| skip-if(Android)

/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */

/*
 * Any copyright is dedicated to the Public Domain.
 * http://creativecommons.org/licenses/publicdomain/
 */

/*
 * In strict mode code, 'let' and 'const' declarations may not bind
 * 'eval' or 'arguments'.
 */
try { if (Inst0 <= 1000 && typeof (testLenientAndStrict) != "undefined") {_RecordType("<326,346,14>",(testLenientAndStrict)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (parsesSuccessfully) != "undefined") {_RecordType("<360,378,14>",(parsesSuccessfully)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (parseRaisesException) != "undefined") {_RecordType("<380,400,14>",(parseRaisesException)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (SyntaxError) != "undefined") {_RecordType("<401,412,14>",(SyntaxError)); Inst3++; } } catch(e) {}
testLenientAndStrict('let eval;', parsesSuccessfully, parseRaisesException(SyntaxError));
true;
try { if (Inst4 <= 1000 && typeof (testLenientAndStrict) != "undefined") {_RecordType("<422,442,16>",(testLenientAndStrict)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (parsesSuccessfully) != "undefined") {_RecordType("<458,476,16>",(parsesSuccessfully)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (parseRaisesException) != "undefined") {_RecordType("<478,498,16>",(parseRaisesException)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (SyntaxError) != "undefined") {_RecordType("<499,510,16>",(SyntaxError)); Inst7++; } } catch(e) {}
testLenientAndStrict('let x,eval;', parsesSuccessfully, parseRaisesException(SyntaxError));
true;
try { if (Inst8 <= 1000 && typeof (testLenientAndStrict) != "undefined") {_RecordType("<520,540,18>",(testLenientAndStrict)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (parsesSuccessfully) != "undefined") {_RecordType("<559,577,18>",(parsesSuccessfully)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (parseRaisesException) != "undefined") {_RecordType("<579,599,18>",(parseRaisesException)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (SyntaxError) != "undefined") {_RecordType("<600,611,18>",(SyntaxError)); Inst11++; } } catch(e) {}
testLenientAndStrict('let arguments;', parsesSuccessfully, parseRaisesException(SyntaxError));
true;
try { if (Inst12 <= 1000 && typeof (testLenientAndStrict) != "undefined") {_RecordType("<621,641,20>",(testLenientAndStrict)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (parsesSuccessfully) != "undefined") {_RecordType("<662,680,20>",(parsesSuccessfully)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (parseRaisesException) != "undefined") {_RecordType("<682,702,20>",(parseRaisesException)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (SyntaxError) != "undefined") {_RecordType("<703,714,20>",(SyntaxError)); Inst15++; } } catch(e) {}
testLenientAndStrict('let x,arguments;', parsesSuccessfully, parseRaisesException(SyntaxError));
true;
try { if (Inst16 <= 1000 && typeof (testLenientAndStrict) != "undefined") {_RecordType("<724,744,22>",(testLenientAndStrict)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (parsesSuccessfully) != "undefined") {_RecordType("<772,790,22>",(parsesSuccessfully)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (parseRaisesException) != "undefined") {_RecordType("<792,812,22>",(parseRaisesException)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (SyntaxError) != "undefined") {_RecordType("<813,824,22>",(SyntaxError)); Inst19++; } } catch(e) {}
testLenientAndStrict('const eval = undefined;', parsesSuccessfully, parseRaisesException(SyntaxError));
true;
try { if (Inst20 <= 1000 && typeof (testLenientAndStrict) != "undefined") {_RecordType("<834,854,24>",(testLenientAndStrict)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (parsesSuccessfully) != "undefined") {_RecordType("<896,914,24>",(parsesSuccessfully)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (parseRaisesException) != "undefined") {_RecordType("<916,936,24>",(parseRaisesException)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (SyntaxError) != "undefined") {_RecordType("<937,948,24>",(SyntaxError)); Inst23++; } } catch(e) {}
testLenientAndStrict('const x = undefined,eval = undefined;', parsesSuccessfully, parseRaisesException(SyntaxError));
true;
try { if (Inst24 <= 1000 && typeof (testLenientAndStrict) != "undefined") {_RecordType("<958,978,26>",(testLenientAndStrict)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (parsesSuccessfully) != "undefined") {_RecordType("<1011,1029,26>",(parsesSuccessfully)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (parseRaisesException) != "undefined") {_RecordType("<1031,1051,26>",(parseRaisesException)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (SyntaxError) != "undefined") {_RecordType("<1052,1063,26>",(SyntaxError)); Inst27++; } } catch(e) {}
testLenientAndStrict('const arguments = undefined;', parsesSuccessfully, parseRaisesException(SyntaxError));
true;
try { if (Inst28 <= 1000 && typeof (testLenientAndStrict) != "undefined") {_RecordType("<1073,1093,28>",(testLenientAndStrict)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (parsesSuccessfully) != "undefined") {_RecordType("<1140,1158,28>",(parsesSuccessfully)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (parseRaisesException) != "undefined") {_RecordType("<1160,1180,28>",(parseRaisesException)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (SyntaxError) != "undefined") {_RecordType("<1181,1192,28>",(SyntaxError)); Inst31++; } } catch(e) {}
testLenientAndStrict('const x = undefined,arguments = undefined;', parsesSuccessfully, parseRaisesException(SyntaxError));
true;
try { if (Inst32 <= 1000 && typeof (testLenientAndStrict) != "undefined") {_RecordType("<1202,1222,30>",(testLenientAndStrict)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (parsesSuccessfully) != "undefined") {_RecordType("<1253,1271,30>",(parsesSuccessfully)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (parseRaisesException) != "undefined") {_RecordType("<1273,1293,30>",(parseRaisesException)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (SyntaxError) != "undefined") {_RecordType("<1294,1305,30>",(SyntaxError)); Inst35++; } } catch(e) {}
testLenientAndStrict('for (let eval in [])break;', parsesSuccessfully, parseRaisesException(SyntaxError));
true;
try { if (Inst36 <= 1000 && typeof (testLenientAndStrict) != "undefined") {_RecordType("<1315,1335,32>",(testLenientAndStrict)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (parsesSuccessfully) != "undefined") {_RecordType("<1368,1386,32>",(parsesSuccessfully)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (parseRaisesException) != "undefined") {_RecordType("<1388,1408,32>",(parseRaisesException)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (SyntaxError) != "undefined") {_RecordType("<1409,1420,32>",(SyntaxError)); Inst39++; } } catch(e) {}
testLenientAndStrict('for (let [eval] in [])break;', parsesSuccessfully, parseRaisesException(SyntaxError));
true;
try { if (Inst40 <= 1000 && typeof (testLenientAndStrict) != "undefined") {_RecordType("<1430,1450,34>",(testLenientAndStrict)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (parsesSuccessfully) != "undefined") {_RecordType("<1485,1503,34>",(parsesSuccessfully)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (parseRaisesException) != "undefined") {_RecordType("<1505,1525,34>",(parseRaisesException)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (SyntaxError) != "undefined") {_RecordType("<1526,1537,34>",(SyntaxError)); Inst43++; } } catch(e) {}
testLenientAndStrict('for (let {x:eval} in [])break;', parsesSuccessfully, parseRaisesException(SyntaxError));
true;
try { if (Inst44 <= 1000 && typeof (testLenientAndStrict) != "undefined") {_RecordType("<1547,1567,36>",(testLenientAndStrict)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (parsesSuccessfully) != "undefined") {_RecordType("<1603,1621,36>",(parsesSuccessfully)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (parseRaisesException) != "undefined") {_RecordType("<1623,1643,36>",(parseRaisesException)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (SyntaxError) != "undefined") {_RecordType("<1644,1655,36>",(SyntaxError)); Inst47++; } } catch(e) {}
testLenientAndStrict('for (let arguments in [])break;', parsesSuccessfully, parseRaisesException(SyntaxError));
true;
try { if (Inst48 <= 1000 && typeof (testLenientAndStrict) != "undefined") {_RecordType("<1665,1685,38>",(testLenientAndStrict)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (parsesSuccessfully) != "undefined") {_RecordType("<1723,1741,38>",(parsesSuccessfully)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (parseRaisesException) != "undefined") {_RecordType("<1743,1763,38>",(parseRaisesException)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (SyntaxError) != "undefined") {_RecordType("<1764,1775,38>",(SyntaxError)); Inst51++; } } catch(e) {}
testLenientAndStrict('for (let [arguments] in [])break;', parsesSuccessfully, parseRaisesException(SyntaxError));
true;
try { if (Inst52 <= 1000 && typeof (testLenientAndStrict) != "undefined") {_RecordType("<1785,1805,40>",(testLenientAndStrict)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (parsesSuccessfully) != "undefined") {_RecordType("<1845,1863,40>",(parsesSuccessfully)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (parseRaisesException) != "undefined") {_RecordType("<1865,1885,40>",(parseRaisesException)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (SyntaxError) != "undefined") {_RecordType("<1886,1897,40>",(SyntaxError)); Inst55++; } } catch(e) {}
testLenientAndStrict('for (let {x:arguments} in [])break;', parsesSuccessfully, parseRaisesException(SyntaxError));
true;
try { if (Inst56 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1907,1920,42>",(reportCompare)); Inst56++; } } catch(e) {}
reportCompare(true, true);

