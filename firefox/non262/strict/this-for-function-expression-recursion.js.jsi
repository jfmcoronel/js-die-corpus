var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/*
 * Any copyright is dedicated to the Public Domain.
 * http://creativecommons.org/licenses/publicdomain/
 */
var gTestfile = 'this-for-function-expression-recursion.js';
try { if (Inst0 <= 1000 && typeof (gTestfile) != "undefined") {_RecordType("<116,125,5>",(gTestfile)); Inst0++; } } catch(e) {}
var BUGNUMBER = 611276;
try { if (Inst1 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<177,186,6>",(BUGNUMBER)); Inst1++; } } catch(e) {}
var summary = "JSOP_CALLEE should push undefined, not null, for this";
try { if (Inst2 <= 1000 && typeof (summary) != "undefined") {_RecordType("<201,208,7>",(summary)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (print) != "undefined") {_RecordType("<268,273,8>",(print)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<274,283,8>",(BUGNUMBER)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (summary) != "undefined") {_RecordType("<293,300,8>",(summary)); Inst5++; } } catch(e) {}
print(BUGNUMBER + ": " + summary);
/**************
 * BEGIN TEST *
 **************/
// Calling a named function expression (not function statement) uses the
// JSOP_CALLEE opcode.  This opcode pushes its own |this|, distinct from the
// normal call path; verify that that |this| value is properly |undefined|.

try { if (Inst7 <= 1000 && typeof (calleeThisFun) != "undefined") {_RecordType("<608,621,16>",(calleeThisFun)); Inst7++; } } catch(e) {}
var calleeThisFun = function calleeThisFun(recurring) {
try { if (Inst8 <= 1000 && typeof (recurring) != "undefined") {_RecordType("<622,631,16>",(recurring)); Inst8++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (recurring) != "undefined") {_RecordType("<641,650,17>",(recurring)); Inst9++; } } catch(e) {}
  if (recurring) {
    return this;
  }

try { if (Inst10 <= 1000 && typeof (calleeThisFun) != "undefined") {_RecordType("<685,698,21>",(calleeThisFun)); Inst10++; } } catch(e) {}
  return calleeThisFun(true);
};
try { if (Inst6 <= 1000 && typeof (calleeThisFun) != "undefined") {_RecordType("<583,596,16>",(calleeThisFun)); Inst6++; } } catch(e) {}

try { if (Inst11 <= 1000 && typeof (calleeThisFun) != "undefined") {_RecordType("<710,723,24>",(calleeThisFun)); Inst11++; } } catch(e) {}
calleeThisFun(false);
this;

try { if (Inst13 <= 1000 && typeof (calleeThisStrictFun) != "undefined") {_RecordType("<774,793,27>",(calleeThisStrictFun)); Inst13++; } } catch(e) {}
var calleeThisStrictFun = function calleeThisStrictFun(recurring) {
try { if (Inst14 <= 1000 && typeof (recurring) != "undefined") {_RecordType("<794,803,27>",(recurring)); Inst14++; } } catch(e) {}
  "use strict";

try { if (Inst15 <= 1000 && typeof (recurring) != "undefined") {_RecordType("<830,839,30>",(recurring)); Inst15++; } } catch(e) {}
  if (recurring) {
    return this;
  }

try { if (Inst16 <= 1000 && typeof (calleeThisStrictFun) != "undefined") {_RecordType("<874,893,34>",(calleeThisStrictFun)); Inst16++; } } catch(e) {}
  return calleeThisStrictFun(true);
};
try { if (Inst12 <= 1000 && typeof (calleeThisStrictFun) != "undefined") {_RecordType("<743,762,27>",(calleeThisStrictFun)); Inst12++; } } catch(e) {}

try { if (Inst17 <= 1000 && typeof (calleeThisStrictFun) != "undefined") {_RecordType("<905,924,37>",(calleeThisStrictFun)); Inst17++; } } catch(e) {}
calleeThisStrictFun(false);
try { if (Inst18 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<933,942,38>",(undefined)); Inst18++; } } catch(e) {}
undefined;

/******************************************************************************/
try { if (Inst19 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1037,1050,41>",(reportCompare)); Inst19++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst20 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1071,1084,42>",(reportCompare)); Inst20++; } } catch(e) {}
  reportCompare(true, true);
}

try { if (Inst21 <= 1000 && typeof (print) != "undefined") {_RecordType("<1101,1106,45>",(print)); Inst21++; } } catch(e) {}
print("All tests passed!");

