var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* -*- indent-tabs-mode: nil; js-indent-level: 2 -*- */

/*
 * Any copyright is dedicated to the Public Domain.
 * http://creativecommons.org/licenses/publicdomain/
 */
var out = {};
try { if (Inst0 <= 1000 && typeof (out) != "undefined") {_RecordType("<173,176,7>",(out)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (arr) != "undefined") {_RecordType("<193,196,9>",(arr)); Inst1++; } } catch(e) {}
function arr() {
try { if (Inst2 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<210,231,10>",(Object.defineProperty)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Object) != "undefined") {_RecordType("<210,216,10>",(Object)); Inst3++; } } catch(e) {}
  return Object.defineProperty([1, 2, 3, 4], 2, {
    configurable: false
  });
}

try { if (Inst4 <= 1000 && typeof (nonStrict1) != "undefined") {_RecordType("<293,303,15>",(nonStrict1)); Inst4++; } } catch(e) {}
function nonStrict1(out) {
try { if (Inst5 <= 1000 && typeof (out) != "undefined") {_RecordType("<304,307,15>",(out)); Inst5++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (arr) != "undefined") {_RecordType("<333,336,16>",(arr)); Inst9++; } } catch(e) {}
  var a = out.array = arr();
try { if (Inst6 <= 1000 && typeof (a) != "undefined") {_RecordType("<317,318,16>",(a)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (out.array) != "undefined") {_RecordType("<321,330,16>",(out.array)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (out) != "undefined") {_RecordType("<321,324,16>",(out)); Inst8++; } } catch(e) {}
  a.length = 2;
try { if (Inst10 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<342,350,17>",(a.length)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (a) != "undefined") {_RecordType("<342,343,17>",(a)); Inst11++; } } catch(e) {}
}

try { if (Inst12 <= 1000 && typeof (strict1) != "undefined") {_RecordType("<368,375,20>",(strict1)); Inst12++; } } catch(e) {}
function strict1(out) {
try { if (Inst13 <= 1000 && typeof (out) != "undefined") {_RecordType("<376,379,20>",(out)); Inst13++; } } catch(e) {}
  "use strict";

try { if (Inst17 <= 1000 && typeof (arr) != "undefined") {_RecordType("<422,425,23>",(arr)); Inst17++; } } catch(e) {}
  var a = out.array = arr();
try { if (Inst14 <= 1000 && typeof (a) != "undefined") {_RecordType("<406,407,23>",(a)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (out.array) != "undefined") {_RecordType("<410,419,23>",(out.array)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (out) != "undefined") {_RecordType("<410,413,23>",(out)); Inst16++; } } catch(e) {}
  a.length = 2;
try { if (Inst18 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<431,439,24>",(a.length)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (a) != "undefined") {_RecordType("<431,432,24>",(a)); Inst19++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (a) != "undefined") {_RecordType("<454,455,25>",(a)); Inst20++; } } catch(e) {}
  return a;
}

out.array = null;
try { if (Inst21 <= 1000 && typeof (out.array) != "undefined") {_RecordType("<460,469,28>",(out.array)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (out) != "undefined") {_RecordType("<460,463,28>",(out)); Inst22++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (nonStrict1) != "undefined") {_RecordType("<478,488,29>",(nonStrict1)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (out) != "undefined") {_RecordType("<489,492,29>",(out)); Inst24++; } } catch(e) {}
nonStrict1(out);
try { if (Inst25 <= 1000 && typeof (deepEqual) != "undefined") {_RecordType("<495,504,30>",(deepEqual)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (out.array) != "undefined") {_RecordType("<505,514,30>",(out.array)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (out) != "undefined") {_RecordType("<505,508,30>",(out)); Inst27++; } } catch(e) {}
deepEqual(out.array, [1, 2, 3]);
true;
out.array = null;
try { if (Inst28 <= 1000 && typeof (out.array) != "undefined") {_RecordType("<534,543,32>",(out.array)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (out) != "undefined") {_RecordType("<534,537,32>",(out)); Inst29++; } } catch(e) {}

try { if (Inst32 <= 1000 && typeof (e) != "undefined") {_RecordType("<604,605,37>",(e)); Inst32++; } } catch(e) {}
try {
try { if (Inst30 <= 1000 && typeof (strict1) != "undefined") {_RecordType("<561,568,35>",(strict1)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (out) != "undefined") {_RecordType("<569,572,35>",(out)); Inst31++; } } catch(e) {}
  strict1(out);
  throw "no error";
} catch (e) {
try { if (Inst33 <= 1000 && typeof (e) != "undefined") {_RecordType("<611,612,38>",(e)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<624,633,38>",(TypeError)); Inst34++; } } catch(e) {}
  e instanceof TypeError;
  true;
try { if (Inst35 <= 1000 && typeof (e) != "undefined") {_RecordType("<674,675,40>",(e)); Inst35++; } } catch(e) {}
  "expected TypeError, got " + e;
}

try { if (Inst36 <= 1000 && typeof (deepEqual) != "undefined") {_RecordType("<680,689,43>",(deepEqual)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (out.array) != "undefined") {_RecordType("<690,699,43>",(out.array)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (out) != "undefined") {_RecordType("<690,693,43>",(out)); Inst38++; } } catch(e) {}
deepEqual(out.array, [1, 2, 3]);
true;

// Internally, SpiderMonkey has two representations for arrays:
// fast-but-inflexible, and slow-but-flexible. Adding a non-index property
// to an array turns it into the latter. We should test on both kinds.
try { if (Inst39 <= 1000 && typeof (addx) != "undefined") {_RecordType("<939,943,49>",(addx)); Inst39++; } } catch(e) {}
function addx(obj) {
try { if (Inst40 <= 1000 && typeof (obj) != "undefined") {_RecordType("<944,947,49>",(obj)); Inst40++; } } catch(e) {}
  obj.x = 5;
try { if (Inst41 <= 1000 && typeof (obj.x) != "undefined") {_RecordType("<953,958,50>",(obj.x)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (obj) != "undefined") {_RecordType("<953,956,50>",(obj)); Inst42++; } } catch(e) {}
try { if (Inst43 <= 1000 && typeof (obj) != "undefined") {_RecordType("<973,976,51>",(obj)); Inst43++; } } catch(e) {}
  return obj;
}

try { if (Inst44 <= 1000 && typeof (nonStrict2) != "undefined") {_RecordType("<990,1000,54>",(nonStrict2)); Inst44++; } } catch(e) {}
function nonStrict2(out) {
try { if (Inst45 <= 1000 && typeof (out) != "undefined") {_RecordType("<1001,1004,54>",(out)); Inst45++; } } catch(e) {}
try { if (Inst49 <= 1000 && typeof (addx) != "undefined") {_RecordType("<1030,1034,55>",(addx)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (arr) != "undefined") {_RecordType("<1035,1038,55>",(arr)); Inst50++; } } catch(e) {}
  var a = out.array = addx(arr());
try { if (Inst46 <= 1000 && typeof (a) != "undefined") {_RecordType("<1014,1015,55>",(a)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (out.array) != "undefined") {_RecordType("<1018,1027,55>",(out.array)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (out) != "undefined") {_RecordType("<1018,1021,55>",(out)); Inst48++; } } catch(e) {}
  a.length = 2;
try { if (Inst51 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<1045,1053,56>",(a.length)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (a) != "undefined") {_RecordType("<1045,1046,56>",(a)); Inst52++; } } catch(e) {}
}

try { if (Inst53 <= 1000 && typeof (strict2) != "undefined") {_RecordType("<1071,1078,59>",(strict2)); Inst53++; } } catch(e) {}
function strict2(out) {
try { if (Inst54 <= 1000 && typeof (out) != "undefined") {_RecordType("<1079,1082,59>",(out)); Inst54++; } } catch(e) {}
  "use strict";

try { if (Inst58 <= 1000 && typeof (addx) != "undefined") {_RecordType("<1125,1129,62>",(addx)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (arr) != "undefined") {_RecordType("<1130,1133,62>",(arr)); Inst59++; } } catch(e) {}
  var a = out.array = addx(arr());
try { if (Inst55 <= 1000 && typeof (a) != "undefined") {_RecordType("<1109,1110,62>",(a)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (out.array) != "undefined") {_RecordType("<1113,1122,62>",(out.array)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (out) != "undefined") {_RecordType("<1113,1116,62>",(out)); Inst57++; } } catch(e) {}
  a.length = 2;
try { if (Inst60 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<1140,1148,63>",(a.length)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (a) != "undefined") {_RecordType("<1140,1141,63>",(a)); Inst61++; } } catch(e) {}
}

out.array = null;
try { if (Inst62 <= 1000 && typeof (out.array) != "undefined") {_RecordType("<1157,1166,66>",(out.array)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (out) != "undefined") {_RecordType("<1157,1160,66>",(out)); Inst63++; } } catch(e) {}
try { if (Inst64 <= 1000 && typeof (nonStrict2) != "undefined") {_RecordType("<1175,1185,67>",(nonStrict2)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (out) != "undefined") {_RecordType("<1186,1189,67>",(out)); Inst65++; } } catch(e) {}
nonStrict2(out);
try { if (Inst66 <= 1000 && typeof (deepEqual) != "undefined") {_RecordType("<1192,1201,68>",(deepEqual)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (out.array) != "undefined") {_RecordType("<1202,1211,68>",(out.array)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (out) != "undefined") {_RecordType("<1202,1205,68>",(out)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (addx) != "undefined") {_RecordType("<1213,1217,68>",(addx)); Inst69++; } } catch(e) {}
deepEqual(out.array, addx([1, 2, 3]));
true;
out.array = null;
try { if (Inst70 <= 1000 && typeof (out.array) != "undefined") {_RecordType("<1237,1246,70>",(out.array)); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (out) != "undefined") {_RecordType("<1237,1240,70>",(out)); Inst71++; } } catch(e) {}

try { if (Inst74 <= 1000 && typeof (e) != "undefined") {_RecordType("<1307,1308,75>",(e)); Inst74++; } } catch(e) {}
try {
try { if (Inst72 <= 1000 && typeof (strict2) != "undefined") {_RecordType("<1264,1271,73>",(strict2)); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (out) != "undefined") {_RecordType("<1272,1275,73>",(out)); Inst73++; } } catch(e) {}
  strict2(out);
  throw "no error";
} catch (e) {
try { if (Inst75 <= 1000 && typeof (e) != "undefined") {_RecordType("<1314,1315,76>",(e)); Inst75++; } } catch(e) {}try { if (Inst76 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<1327,1336,76>",(TypeError)); Inst76++; } } catch(e) {}
  e instanceof TypeError;
  true;
try { if (Inst77 <= 1000 && typeof (e) != "undefined") {_RecordType("<1377,1378,78>",(e)); Inst77++; } } catch(e) {}
  "expected TypeError, got " + e;
}

try { if (Inst78 <= 1000 && typeof (deepEqual) != "undefined") {_RecordType("<1383,1392,81>",(deepEqual)); Inst78++; } } catch(e) {}try { if (Inst79 <= 1000 && typeof (out.array) != "undefined") {_RecordType("<1393,1402,81>",(out.array)); Inst79++; } } catch(e) {}try { if (Inst80 <= 1000 && typeof (out) != "undefined") {_RecordType("<1393,1396,81>",(out)); Inst80++; } } catch(e) {}try { if (Inst81 <= 1000 && typeof (addx) != "undefined") {_RecordType("<1404,1408,81>",(addx)); Inst81++; } } catch(e) {}
deepEqual(out.array, addx([1, 2, 3]));
true;

try { if (Inst82 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1440,1453,84>",(reportCompare)); Inst82++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst83 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1474,1487,85>",(reportCompare)); Inst83++; } } catch(e) {}
  reportCompare(true, true);
}

try { if (Inst84 <= 1000 && typeof (print) != "undefined") {_RecordType("<1504,1509,88>",(print)); Inst84++; } } catch(e) {}
print("Tests complete");

