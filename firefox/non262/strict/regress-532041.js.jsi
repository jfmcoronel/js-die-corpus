var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* -*- indent-tabs-mode: nil; js-indent-level: 2 -*- */

/*
 * Any copyright is dedicated to the Public Domain.
 * http://creativecommons.org/licenses/publicdomain/
 */

/*
 * JSFunction::findDuplicateFormal (nee js_FindDuplicateFormal), used
 * by strict checks, sometimes failed to choose the correct branch of
 * the fun->u.i.names union: it used the argument count, not the
 * overall name count.
 */
try { if (Inst0 <= 1000 && typeof (f) != "undefined") {_RecordType("<414,415,14>",(f)); Inst0++; } } catch(e) {}
function f(a1, a2, a3, a4, a5) {
try { if (Inst1 <= 1000 && typeof (a1) != "undefined") {_RecordType("<416,418,14>",(a1)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (a2) != "undefined") {_RecordType("<420,422,14>",(a2)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (a3) != "undefined") {_RecordType("<424,426,14>",(a3)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (a4) != "undefined") {_RecordType("<428,430,14>",(a4)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (a5) != "undefined") {_RecordType("<432,434,14>",(a5)); Inst5++; } } catch(e) {}
  "use strict";

  var v1, v2, v3, v4, v5, v6, v7;
try { if (Inst6 <= 1000 && typeof (v1) != "undefined") {_RecordType("<461,463,17>",(v1)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (v2) != "undefined") {_RecordType("<465,467,17>",(v2)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (v3) != "undefined") {_RecordType("<469,471,17>",(v3)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (v4) != "undefined") {_RecordType("<473,475,17>",(v4)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (v5) != "undefined") {_RecordType("<477,479,17>",(v5)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (v6) != "undefined") {_RecordType("<481,483,17>",(v6)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (v7) != "undefined") {_RecordType("<485,487,17>",(v7)); Inst12++; } } catch(e) {}
}

try { if (Inst13 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<492,505,20>",(reportCompare)); Inst13++; } } catch(e) {}
reportCompare(true, true);

