var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* -*- indent-tabs-mode: nil; js-indent-level: 2 -*- */

/*
 * Any copyright is dedicated to the Public Domain.
 * http://creativecommons.org/licenses/publicdomain/
 */
try { if (Inst0 <= 1000 && typeof (arr) != "undefined") {_RecordType("<178,181,7>",(arr)); Inst0++; } } catch(e) {}
function arr() {
try { if (Inst1 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<195,216,8>",(Object.defineProperty)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Object) != "undefined") {_RecordType("<195,201,8>",(Object)); Inst2++; } } catch(e) {}
  return Object.defineProperty([1, 2, 3], 0, {
    writable: false
  });
}

try { if (Inst3 <= 1000 && typeof (obj) != "undefined") {_RecordType("<271,274,13>",(obj)); Inst3++; } } catch(e) {}
function obj() {
  var o = {
    0: 1,
    1: 2,
    2: 3,
    length: 3
  };
try { if (Inst4 <= 1000 && typeof (o) != "undefined") {_RecordType("<285,286,14>",(o)); Inst4++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<342,363,20>",(Object.defineProperty)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Object) != "undefined") {_RecordType("<342,348,20>",(Object)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (o) != "undefined") {_RecordType("<364,365,20>",(o)); Inst7++; } } catch(e) {}
  Object.defineProperty(o, 0, {
    writable: false
  });
try { if (Inst8 <= 1000 && typeof (o) != "undefined") {_RecordType("<407,408,23>",(o)); Inst8++; } } catch(e) {}
  return o;
}

try { if (Inst9 <= 1000 && typeof (testLenientAndStrict) != "undefined") {_RecordType("<413,433,26>",(testLenientAndStrict)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (raisesException) != "undefined") {_RecordType("<464,479,26>",(raisesException)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<480,489,26>",(TypeError)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (raisesException) != "undefined") {_RecordType("<492,507,26>",(raisesException)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<508,517,26>",(TypeError)); Inst13++; } } catch(e) {}
testLenientAndStrict('var a = arr(); a.reverse()', raisesException(TypeError), raisesException(TypeError));
true;
try { if (Inst14 <= 1000 && typeof (testLenientAndStrict) != "undefined") {_RecordType("<527,547,28>",(testLenientAndStrict)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (raisesException) != "undefined") {_RecordType("<598,613,28>",(raisesException)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<614,623,28>",(TypeError)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (raisesException) != "undefined") {_RecordType("<626,641,28>",(raisesException)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<642,651,28>",(TypeError)); Inst18++; } } catch(e) {}
testLenientAndStrict('var o = obj(); Array.prototype.reverse.call(o)', raisesException(TypeError), raisesException(TypeError));
true;

try { if (Inst19 <= 1000 && typeof (agap) != "undefined") {_RecordType("<671,675,31>",(agap)); Inst19++; } } catch(e) {}
function agap() {
  var a = [1, 2,, 4];
try { if (Inst20 <= 1000 && typeof (a) != "undefined") {_RecordType("<686,687,32>",(a)); Inst20++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<704,725,33>",(Object.defineProperty)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Object) != "undefined") {_RecordType("<704,710,33>",(Object)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (a) != "undefined") {_RecordType("<726,727,33>",(a)); Inst23++; } } catch(e) {}
  Object.defineProperty(a, 1, {
    configurable: false
  });
try { if (Inst24 <= 1000 && typeof (a) != "undefined") {_RecordType("<773,774,36>",(a)); Inst24++; } } catch(e) {}
  return a;
}

try { if (Inst25 <= 1000 && typeof (ogap) != "undefined") {_RecordType("<788,792,39>",(ogap)); Inst25++; } } catch(e) {}
function ogap() {
  var o = {
    0: 1,
    1: 2,

    /* no 2 */
    3: 4,
    length: 4
  };
try { if (Inst26 <= 1000 && typeof (o) != "undefined") {_RecordType("<803,804,40>",(o)); Inst26++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<876,897,48>",(Object.defineProperty)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (Object) != "undefined") {_RecordType("<876,882,48>",(Object)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (o) != "undefined") {_RecordType("<898,899,48>",(o)); Inst29++; } } catch(e) {}
  Object.defineProperty(o, 1, {
    configurable: false
  });
try { if (Inst30 <= 1000 && typeof (o) != "undefined") {_RecordType("<945,946,51>",(o)); Inst30++; } } catch(e) {}
  return o;
}

try { if (Inst31 <= 1000 && typeof (testLenientAndStrict) != "undefined") {_RecordType("<951,971,54>",(testLenientAndStrict)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (raisesException) != "undefined") {_RecordType("<1003,1018,54>",(raisesException)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<1019,1028,54>",(TypeError)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (raisesException) != "undefined") {_RecordType("<1031,1046,54>",(raisesException)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<1047,1056,54>",(TypeError)); Inst35++; } } catch(e) {}
testLenientAndStrict('var a = agap(); a.reverse()', raisesException(TypeError), raisesException(TypeError));
true;
try { if (Inst36 <= 1000 && typeof (testLenientAndStrict) != "undefined") {_RecordType("<1066,1086,56>",(testLenientAndStrict)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (raisesException) != "undefined") {_RecordType("<1138,1153,56>",(raisesException)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<1154,1163,56>",(TypeError)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (raisesException) != "undefined") {_RecordType("<1166,1181,56>",(raisesException)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<1182,1191,56>",(TypeError)); Inst40++; } } catch(e) {}
testLenientAndStrict('var o = ogap(); Array.prototype.reverse.call(o)', raisesException(TypeError), raisesException(TypeError));
true;
try { if (Inst41 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1201,1214,58>",(reportCompare)); Inst41++; } } catch(e) {}
reportCompare(true, true);

