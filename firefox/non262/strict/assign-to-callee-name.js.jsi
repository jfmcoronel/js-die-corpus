var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/*
 * Any copyright is dedicated to the Public Domain.
 * http://creativecommons.org/licenses/publicdomain/
 */
var gTestfile = 'assign-to-callee-name.js';
try { if (Inst0 <= 1000 && typeof (gTestfile) != "undefined") {_RecordType("<116,125,5>",(gTestfile)); Inst0++; } } catch(e) {}
var BUGNUMBER = 610350;
try { if (Inst1 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<160,169,6>",(BUGNUMBER)); Inst1++; } } catch(e) {}
var summary = "Assigning to a function expression's name within that function should " + "throw a TypeError in strict mode code";
try { if (Inst2 <= 1000 && typeof (summary) != "undefined") {_RecordType("<184,191,7>",(summary)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (print) != "undefined") {_RecordType("<310,315,8>",(print)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<316,325,8>",(BUGNUMBER)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (summary) != "undefined") {_RecordType("<335,342,8>",(summary)); Inst5++; } } catch(e) {}
print(BUGNUMBER + ": " + summary);
/**************
 * BEGIN TEST *
 **************/

try { if (Inst7 <= 1000 && typeof (assignSelfStrict) != "undefined") {_RecordType("<412,428,13>",(assignSelfStrict)); Inst7++; } } catch(e) {}
var f = function assignSelfStrict() {
  "use strict";

  assignSelfStrict = 12;
try { if (Inst8 <= 1000 && typeof (assignSelfStrict) != "undefined") {_RecordType("<452,468,16>",(assignSelfStrict)); Inst8++; } } catch(e) {}
};
try { if (Inst6 <= 1000 && typeof (f) != "undefined") {_RecordType("<399,400,13>",(f)); Inst6++; } } catch(e) {}

try { if (Inst13 <= 1000 && typeof (e) != "undefined") {_RecordType("<577,578,22>",(e)); Inst13++; } } catch(e) {}
try {
try { if (Inst10 <= 1000 && typeof (f) != "undefined") {_RecordType("<495,496,20>",(f)); Inst10++; } } catch(e) {}
  var r = f();
try { if (Inst9 <= 1000 && typeof (r) != "undefined") {_RecordType("<491,492,20>",(r)); Inst9++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (Error) != "undefined") {_RecordType("<512,517,21>",(Error)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (r) != "undefined") {_RecordType("<564,565,21>",(r)); Inst12++; } } catch(e) {}
  throw new Error("should have thrown a TypeError, returned " + r);
} catch (e) {
try { if (Inst14 <= 1000 && typeof (e) != "undefined") {_RecordType("<584,585,23>",(e)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<597,606,23>",(TypeError)); Inst15++; } } catch(e) {}
  e instanceof TypeError;
  true;
try { if (Inst16 <= 1000 && typeof (e) != "undefined") {_RecordType("<649,650,25>",(e)); Inst16++; } } catch(e) {}
  "didn't throw a TypeError: " + e;
}

var assignSelf = 42;
try { if (Inst17 <= 1000 && typeof (assignSelf) != "undefined") {_RecordType("<659,669,28>",(assignSelf)); Inst17++; } } catch(e) {}

try { if (Inst19 <= 1000 && typeof (assignSelf) != "undefined") {_RecordType("<695,705,30>",(assignSelf)); Inst19++; } } catch(e) {}
var f2 = function assignSelf() {
  assignSelf = 12;
try { if (Inst20 <= 1000 && typeof (assignSelf) != "undefined") {_RecordType("<712,722,31>",(assignSelf)); Inst20++; } } catch(e) {}
};
try { if (Inst18 <= 1000 && typeof (f2) != "undefined") {_RecordType("<681,683,30>",(f2)); Inst18++; } } catch(e) {}

try { if (Inst21 <= 1000 && typeof (f2) != "undefined") {_RecordType("<733,735,34>",(f2)); Inst21++; } } catch(e) {}
f2(); // shouldn't throw, does nothing

try { if (Inst22 <= 1000 && typeof (assignSelf) != "undefined") {_RecordType("<773,783,36>",(assignSelf)); Inst22++; } } catch(e) {}
assignSelf();
42;

/******************************************************************************/
try { if (Inst23 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<884,897,40>",(reportCompare)); Inst23++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst24 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<918,931,41>",(reportCompare)); Inst24++; } } catch(e) {}
  reportCompare(true, true);
}

try { if (Inst25 <= 1000 && typeof (print) != "undefined") {_RecordType("<948,953,44>",(print)); Inst25++; } } catch(e) {}
print("All tests passed!");

