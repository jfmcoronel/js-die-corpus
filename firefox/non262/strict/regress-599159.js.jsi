var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* -*- indent-tabs-mode: nil; js-indent-level: 2 -*- */

/*
 * Any copyright is dedicated to the Public Domain.
 * http://creativecommons.org/licenses/publicdomain/
 */
// Shu's test
try { if (Inst0 <= 1000 && typeof (test) != "undefined") {_RecordType("<192,196,8>",(test)); Inst0++; } } catch(e) {}
function test(makeNonArray) {
try { if (Inst1 <= 1000 && typeof (makeNonArray) != "undefined") {_RecordType("<197,209,8>",(makeNonArray)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (C) != "undefined") {_RecordType("<224,225,9>",(C)); Inst2++; } } catch(e) {}
  function C() {
    ;
  }

  C.prototype = [];
try { if (Inst3 <= 1000 && typeof (C.prototype) != "undefined") {_RecordType("<243,254,13>",(C.prototype)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (C) != "undefined") {_RecordType("<243,244,13>",(C)); Inst4++; } } catch(e) {}

try { if (Inst5 <= 1000 && typeof (makeNonArray) != "undefined") {_RecordType("<268,280,15>",(makeNonArray)); Inst5++; } } catch(e) {}
  if (makeNonArray) {
try { if (Inst9 <= 1000 && typeof (C) != "undefined") {_RecordType("<314,315,16>",(C)); Inst9++; } } catch(e) {}
    C.prototype.constructor = C;
try { if (Inst6 <= 1000 && typeof (C.prototype.constructor) != "undefined") {_RecordType("<288,311,16>",(C.prototype.constructor)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (C.prototype) != "undefined") {_RecordType("<288,299,16>",(C.prototype)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (C) != "undefined") {_RecordType("<288,289,16>",(C)); Inst8++; } } catch(e) {}
  }

try { if (Inst11 <= 1000 && typeof (C) != "undefined") {_RecordType("<332,333,19>",(C)); Inst11++; } } catch(e) {}
  c = new C();
try { if (Inst10 <= 1000 && typeof (c) != "undefined") {_RecordType("<324,325,19>",(c)); Inst10++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (c.push) != "undefined") {_RecordType("<339,345,20>",(c.push)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (c) != "undefined") {_RecordType("<339,340,20>",(c)); Inst13++; } } catch(e) {}
  c.push("foo");
try { if (Inst14 <= 1000 && typeof (c.length) != "undefined") {_RecordType("<363,371,21>",(c.length)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (c) != "undefined") {_RecordType("<363,364,21>",(c)); Inst15++; } } catch(e) {}
  return c.length;
}

try { if (Inst16 <= 1000 && typeof (test) != "undefined") {_RecordType("<376,380,24>",(test)); Inst16++; } } catch(e) {}
test(true);
1;
try { if (Inst17 <= 1000 && typeof (test) != "undefined") {_RecordType("<391,395,26>",(test)); Inst17++; } } catch(e) {}
test(false);
1;
// jorendorff's longer test
var a = [];
try { if (Inst18 <= 1000 && typeof (a) != "undefined") {_RecordType("<439,440,29>",(a)); Inst18++; } } catch(e) {}
a.slowify = 1;
try { if (Inst19 <= 1000 && typeof (a.slowify) != "undefined") {_RecordType("<447,456,30>",(a.slowify)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (a) != "undefined") {_RecordType("<447,448,30>",(a)); Inst20++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (Object.create) != "undefined") {_RecordType("<470,483,31>",(Object.create)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Object) != "undefined") {_RecordType("<470,476,31>",(Object)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (a) != "undefined") {_RecordType("<484,485,31>",(a)); Inst24++; } } catch(e) {}
var b = Object.create(a);
try { if (Inst21 <= 1000 && typeof (b) != "undefined") {_RecordType("<466,467,31>",(b)); Inst21++; } } catch(e) {}
b.length = 12;
try { if (Inst25 <= 1000 && typeof (b.length) != "undefined") {_RecordType("<488,496,32>",(b.length)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (b) != "undefined") {_RecordType("<488,489,32>",(b)); Inst26++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (b.length) != "undefined") {_RecordType("<503,511,33>",(b.length)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (b) != "undefined") {_RecordType("<503,504,33>",(b)); Inst28++; } } catch(e) {}
b.length;
12;
// jorendorff's shorter test
try { if (Inst30 <= 1000 && typeof (Object.create) != "undefined") {_RecordType("<554,567,36>",(Object.create)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (Object) != "undefined") {_RecordType("<554,560,36>",(Object)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<568,583,36>",(Array.prototype)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (Array) != "undefined") {_RecordType("<568,573,36>",(Array)); Inst33++; } } catch(e) {}
var b = Object.create(Array.prototype);
try { if (Inst29 <= 1000 && typeof (b) != "undefined") {_RecordType("<550,551,36>",(b)); Inst29++; } } catch(e) {}
b.length = 12;
try { if (Inst34 <= 1000 && typeof (b.length) != "undefined") {_RecordType("<586,594,37>",(b.length)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (b) != "undefined") {_RecordType("<586,587,37>",(b)); Inst35++; } } catch(e) {}
try { if (Inst36 <= 1000 && typeof (b.length) != "undefined") {_RecordType("<601,609,38>",(b.length)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (b) != "undefined") {_RecordType("<601,602,38>",(b)); Inst37++; } } catch(e) {}
b.length;
12;
try { if (Inst38 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<615,628,40>",(reportCompare)); Inst38++; } } catch(e) {}
reportCompare(true, true);

