var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Undefined and NaN end up as zero after ToUint32
try { if (Inst0 <= 1000 && typeof (Math.clz32) != "undefined") {_RecordType("<51,61,2>",(Math.clz32)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (Math) != "undefined") {_RecordType("<51,55,2>",(Math)); Inst1++; } } catch(e) {}
Math.clz32();
32;
try { if (Inst2 <= 1000 && typeof (Math.clz32) != "undefined") {_RecordType("<69,79,4>",(Math.clz32)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Math) != "undefined") {_RecordType("<69,73,4>",(Math)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<80,83,4>",(NaN)); Inst4++; } } catch(e) {}
Math.clz32(NaN);
32;
try { if (Inst5 <= 1000 && typeof (Math.clz32.call) != "undefined") {_RecordType("<90,105,6>",(Math.clz32.call)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Math.clz32) != "undefined") {_RecordType("<90,100,6>",(Math.clz32)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Math) != "undefined") {_RecordType("<90,94,6>",(Math)); Inst7++; } } catch(e) {}
Math.clz32.call();
32;
try { if (Inst8 <= 1000 && typeof (Math.clz32) != "undefined") {_RecordType("<113,123,8>",(Math.clz32)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Math) != "undefined") {_RecordType("<113,117,8>",(Math)); Inst9++; } } catch(e) {}
Math.clz32(null);
32;
try { if (Inst10 <= 1000 && typeof (Math.clz32) != "undefined") {_RecordType("<135,145,10>",(Math.clz32)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Math) != "undefined") {_RecordType("<135,139,10>",(Math)); Inst11++; } } catch(e) {}
Math.clz32(false);
32;
try { if (Inst12 <= 1000 && typeof (Math.clz32) != "undefined") {_RecordType("<158,168,12>",(Math.clz32)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Math) != "undefined") {_RecordType("<158,162,12>",(Math)); Inst13++; } } catch(e) {}
Math.clz32(true);
31;
try { if (Inst14 <= 1000 && typeof (Math.clz32) != "undefined") {_RecordType("<180,190,14>",(Math.clz32)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Math) != "undefined") {_RecordType("<180,184,14>",(Math)); Inst15++; } } catch(e) {}
Math.clz32(3.5);
30;
try { if (Inst16 <= 1000 && typeof (Math.clz32) != "undefined") {_RecordType("<201,211,16>",(Math.clz32)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Math) != "undefined") {_RecordType("<201,205,16>",(Math)); Inst17++; } } catch(e) {}
Math.clz32({});
32;
try { if (Inst18 <= 1000 && typeof (Math.clz32) != "undefined") {_RecordType("<221,231,18>",(Math.clz32)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Math) != "undefined") {_RecordType("<221,225,18>",(Math)); Inst19++; } } catch(e) {}
Math.clz32({
  valueOf: function () {
    return 2;
  }
});
30;
try { if (Inst20 <= 1000 && typeof (Math.clz32) != "undefined") {_RecordType("<285,295,24>",(Math.clz32)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Math) != "undefined") {_RecordType("<285,289,24>",(Math)); Inst21++; } } catch(e) {}
Math.clz32([]);
32;
try { if (Inst22 <= 1000 && typeof (Math.clz32) != "undefined") {_RecordType("<305,315,26>",(Math.clz32)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Math) != "undefined") {_RecordType("<305,309,26>",(Math)); Inst23++; } } catch(e) {}
Math.clz32("");
32;
try { if (Inst24 <= 1000 && typeof (Math.clz32) != "undefined") {_RecordType("<325,335,28>",(Math.clz32)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Math) != "undefined") {_RecordType("<325,329,28>",(Math)); Inst25++; } } catch(e) {}
Math.clz32([1, 2, 3]);
32;
try { if (Inst26 <= 1000 && typeof (Math.clz32) != "undefined") {_RecordType("<352,362,30>",(Math.clz32)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (Math) != "undefined") {_RecordType("<352,356,30>",(Math)); Inst27++; } } catch(e) {}
Math.clz32("bar");
32;
try { if (Inst28 <= 1000 && typeof (Math.clz32) != "undefined") {_RecordType("<375,385,32>",(Math.clz32)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (Math) != "undefined") {_RecordType("<375,379,32>",(Math)); Inst29++; } } catch(e) {}
Math.clz32("15");
28;
try { if (Inst30 <= 1000 && typeof (Math.clz32) != "undefined") {_RecordType("<397,407,34>",(Math.clz32)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (Math) != "undefined") {_RecordType("<397,401,34>",(Math)); Inst31++; } } catch(e) {}
Math.clz32(0x80000000);
0;
try { if (Inst32 <= 1000 && typeof (Math.clz32) != "undefined") {_RecordType("<424,434,36>",(Math.clz32)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (Math) != "undefined") {_RecordType("<424,428,36>",(Math)); Inst33++; } } catch(e) {}
Math.clz32(0xF0FF1000);
0;
try { if (Inst34 <= 1000 && typeof (Math.clz32) != "undefined") {_RecordType("<451,461,38>",(Math.clz32)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (Math) != "undefined") {_RecordType("<451,455,38>",(Math)); Inst35++; } } catch(e) {}
Math.clz32(0x7F8F0001);
1;
try { if (Inst36 <= 1000 && typeof (Math.clz32) != "undefined") {_RecordType("<478,488,40>",(Math.clz32)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (Math) != "undefined") {_RecordType("<478,482,40>",(Math)); Inst37++; } } catch(e) {}
Math.clz32(0x3FFF0100);
2;
try { if (Inst38 <= 1000 && typeof (Math.clz32) != "undefined") {_RecordType("<505,515,42>",(Math.clz32)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (Math) != "undefined") {_RecordType("<505,509,42>",(Math)); Inst39++; } } catch(e) {}
Math.clz32(0x1FF50010);
3;
try { if (Inst40 <= 1000 && typeof (Math.clz32) != "undefined") {_RecordType("<532,542,44>",(Math.clz32)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (Math) != "undefined") {_RecordType("<532,536,44>",(Math)); Inst41++; } } catch(e) {}
Math.clz32(0x00800000);
8;
try { if (Inst42 <= 1000 && typeof (Math.clz32) != "undefined") {_RecordType("<559,569,46>",(Math.clz32)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (Math) != "undefined") {_RecordType("<559,563,46>",(Math)); Inst43++; } } catch(e) {}
Math.clz32(0x00400000);
9;
try { if (Inst44 <= 1000 && typeof (Math.clz32) != "undefined") {_RecordType("<586,596,48>",(Math.clz32)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (Math) != "undefined") {_RecordType("<586,590,48>",(Math)); Inst45++; } } catch(e) {}
Math.clz32(0x00008000);
16;
try { if (Inst46 <= 1000 && typeof (Math.clz32) != "undefined") {_RecordType("<614,624,50>",(Math.clz32)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (Math) != "undefined") {_RecordType("<614,618,50>",(Math)); Inst47++; } } catch(e) {}
Math.clz32(0x00004000);
17;
try { if (Inst48 <= 1000 && typeof (Math.clz32) != "undefined") {_RecordType("<642,652,52>",(Math.clz32)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (Math) != "undefined") {_RecordType("<642,646,52>",(Math)); Inst49++; } } catch(e) {}
Math.clz32(0x00000080);
24;
try { if (Inst50 <= 1000 && typeof (Math.clz32) != "undefined") {_RecordType("<670,680,54>",(Math.clz32)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (Math) != "undefined") {_RecordType("<670,674,54>",(Math)); Inst51++; } } catch(e) {}
Math.clz32(0x00000040);
25;
try { if (Inst52 <= 1000 && typeof (Math.clz32) != "undefined") {_RecordType("<698,708,56>",(Math.clz32)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (Math) != "undefined") {_RecordType("<698,702,56>",(Math)); Inst53++; } } catch(e) {}
Math.clz32(0x00000001);
31;
try { if (Inst54 <= 1000 && typeof (Math.clz32) != "undefined") {_RecordType("<726,736,58>",(Math.clz32)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (Math) != "undefined") {_RecordType("<726,730,58>",(Math)); Inst55++; } } catch(e) {}
Math.clz32(0);
32;
try { if (Inst56 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<745,758,60>",(reportCompare)); Inst56++; } } catch(e) {}
reportCompare(0, 0, 'ok');

