var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (Math.log1p) != "undefined") {_RecordType("<0,10,1>",(Math.log1p)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (Math) != "undefined") {_RecordType("<0,4,1>",(Math)); Inst1++; } } catch(e) {}
Math.log1p(1e-300);
1e-300;
try { if (Inst2 <= 1000 && typeof (Math.log1p) != "undefined") {_RecordType("<28,38,3>",(Math.log1p)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Math) != "undefined") {_RecordType("<28,32,3>",(Math)); Inst3++; } } catch(e) {}
Math.log1p(1e-15);
9.999999999999995e-16;
try { if (Inst4 <= 1000 && typeof (Math.log1p) != "undefined") {_RecordType("<70,80,5>",(Math.log1p)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Math) != "undefined") {_RecordType("<70,74,5>",(Math)); Inst5++; } } catch(e) {}
Math.log1p(1e-6);
9.999995000003334e-7;
var log1p_data = [[1.875817529344e-70, 1.875817529344e-70], [6.261923313140869e-30, 6.261923313140869e-30], [7.09962844069878e-15, 7.099628440698755e-15], [1.3671879628418538e-12, 1.3671879628409192e-12], [2.114990849122478e-10, 2.1149908488988187e-10], [1.6900931765206906e-8, 1.690093162238616e-8], [0.0000709962844069878, 0.00007099376429006658], [0.0016793412882520897, 0.00167793277137076], [0.011404608812881634, 0.011340066517988035]];
try { if (Inst6 <= 1000 && typeof (log1p_data) != "undefined") {_RecordType("<114,124,7>",(log1p_data)); Inst6++; } } catch(e) {}

for (var [x, y] of log1p_data) {
try { if (Inst7 <= 1000 && typeof (x) != "undefined") {_RecordType("<564,565,9>",(x)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (y) != "undefined") {_RecordType("<567,568,9>",(y)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (log1p_data) != "undefined") {_RecordType("<573,583,9>",(log1p_data)); Inst9++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (Math.log1p) != "undefined") {_RecordType("<589,599,10>",(Math.log1p)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Math) != "undefined") {_RecordType("<589,593,10>",(Math)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (x) != "undefined") {_RecordType("<600,601,10>",(x)); Inst12++; } } catch(e) {}
  Math.log1p(x);
try { if (Inst13 <= 1000 && typeof (y) != "undefined") {_RecordType("<606,607,11>",(y)); Inst13++; } } catch(e) {}
  y;
}

try { if (Inst14 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<612,625,14>",(reportCompare)); Inst14++; } } catch(e) {}
reportCompare(0, 0, "ok");

