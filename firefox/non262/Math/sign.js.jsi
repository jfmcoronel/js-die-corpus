var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// If x is NaN, the result is NaN.
try { if (Inst0 <= 1000 && typeof (Math.sign) != "undefined") {_RecordType("<35,44,2>",(Math.sign)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (Math) != "undefined") {_RecordType("<35,39,2>",(Math)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<45,48,2>",(NaN)); Inst2++; } } catch(e) {}
Math.sign(NaN);
try { if (Inst3 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<51,54,3>",(NaN)); Inst3++; } } catch(e) {}
NaN;
try { if (Inst4 <= 1000 && typeof (Math.sign) != "undefined") {_RecordType("<56,65,4>",(Math.sign)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Math) != "undefined") {_RecordType("<56,60,4>",(Math)); Inst5++; } } catch(e) {}
Math.sign(-0);
-0;
try { if (Inst6 <= 1000 && typeof (Math.sign) != "undefined") {_RecordType("<75,84,6>",(Math.sign)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Math) != "undefined") {_RecordType("<75,79,6>",(Math)); Inst7++; } } catch(e) {}
Math.sign(+0);
+0;
try { if (Inst8 <= 1000 && typeof (Math.sign) != "undefined") {_RecordType("<94,103,8>",(Math.sign)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Math) != "undefined") {_RecordType("<94,98,8>",(Math)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Number.MIN_VALUE) != "undefined") {_RecordType("<105,121,8>",(Number.MIN_VALUE)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Number) != "undefined") {_RecordType("<105,111,8>",(Number)); Inst11++; } } catch(e) {}
Math.sign(-Number.MIN_VALUE);
-1;
try { if (Inst12 <= 1000 && typeof (Math.sign) != "undefined") {_RecordType("<128,137,10>",(Math.sign)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Math) != "undefined") {_RecordType("<128,132,10>",(Math)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Number.MAX_VALUE) != "undefined") {_RecordType("<139,155,10>",(Number.MAX_VALUE)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Number) != "undefined") {_RecordType("<139,145,10>",(Number)); Inst15++; } } catch(e) {}
Math.sign(-Number.MAX_VALUE);
-1;
try { if (Inst16 <= 1000 && typeof (Math.sign) != "undefined") {_RecordType("<162,171,12>",(Math.sign)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Math) != "undefined") {_RecordType("<162,166,12>",(Math)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<173,181,12>",(Infinity)); Inst18++; } } catch(e) {}
Math.sign(-Infinity);
-1;

for (var i = -1; i > -20; i--) {
try { if (Inst19 <= 1000 && typeof (i) != "undefined") {_RecordType("<198,199,15>",(i)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<206,207,15>",(i)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<215,216,15>",(i)); Inst21++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (Math.sign) != "undefined") {_RecordType("<224,233,16>",(Math.sign)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Math) != "undefined") {_RecordType("<224,228,16>",(Math)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<234,235,16>",(i)); Inst24++; } } catch(e) {}
  Math.sign(i);
  -1;
}

try { if (Inst25 <= 1000 && typeof (Math.sign) != "undefined") {_RecordType("<247,256,20>",(Math.sign)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Math) != "undefined") {_RecordType("<247,251,20>",(Math)); Inst26++; } } catch(e) {}
Math.sign(-1e-300);
-1;
try { if (Inst27 <= 1000 && typeof (Math.sign) != "undefined") {_RecordType("<271,280,22>",(Math.sign)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (Math) != "undefined") {_RecordType("<271,275,22>",(Math)); Inst28++; } } catch(e) {}
Math.sign(-0x80000000);
-1;
try { if (Inst29 <= 1000 && typeof (Math.sign) != "undefined") {_RecordType("<299,308,24>",(Math.sign)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (Math) != "undefined") {_RecordType("<299,303,24>",(Math)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (Number.MIN_VALUE) != "undefined") {_RecordType("<309,325,24>",(Number.MIN_VALUE)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (Number) != "undefined") {_RecordType("<309,315,24>",(Number)); Inst32++; } } catch(e) {}
Math.sign(Number.MIN_VALUE);
+1;
try { if (Inst33 <= 1000 && typeof (Math.sign) != "undefined") {_RecordType("<332,341,26>",(Math.sign)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (Math) != "undefined") {_RecordType("<332,336,26>",(Math)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (Number.MAX_VALUE) != "undefined") {_RecordType("<342,358,26>",(Number.MAX_VALUE)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (Number) != "undefined") {_RecordType("<342,348,26>",(Number)); Inst36++; } } catch(e) {}
Math.sign(Number.MAX_VALUE);
+1;
try { if (Inst37 <= 1000 && typeof (Math.sign) != "undefined") {_RecordType("<365,374,28>",(Math.sign)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (Math) != "undefined") {_RecordType("<365,369,28>",(Math)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<375,383,28>",(Infinity)); Inst39++; } } catch(e) {}
Math.sign(Infinity);
+1;

for (var i = 1; i < 20; i++) {
try { if (Inst40 <= 1000 && typeof (i) != "undefined") {_RecordType("<400,401,31>",(i)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (i) != "undefined") {_RecordType("<407,408,31>",(i)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (i) != "undefined") {_RecordType("<415,416,31>",(i)); Inst42++; } } catch(e) {}
try { if (Inst43 <= 1000 && typeof (Math.sign) != "undefined") {_RecordType("<424,433,32>",(Math.sign)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (Math) != "undefined") {_RecordType("<424,428,32>",(Math)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (i) != "undefined") {_RecordType("<434,435,32>",(i)); Inst45++; } } catch(e) {}
  Math.sign(i);
  +1;
}

try { if (Inst46 <= 1000 && typeof (Math.sign) != "undefined") {_RecordType("<447,456,36>",(Math.sign)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (Math) != "undefined") {_RecordType("<447,451,36>",(Math)); Inst47++; } } catch(e) {}
Math.sign(+1e-300);
+1;
try { if (Inst48 <= 1000 && typeof (Math.sign) != "undefined") {_RecordType("<471,480,38>",(Math.sign)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (Math) != "undefined") {_RecordType("<471,475,38>",(Math)); Inst49++; } } catch(e) {}
Math.sign(0x80000000);
+1;
try { if (Inst50 <= 1000 && typeof (Math.sign) != "undefined") {_RecordType("<498,507,40>",(Math.sign)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (Math) != "undefined") {_RecordType("<498,502,40>",(Math)); Inst51++; } } catch(e) {}
Math.sign(0xffffffff);
+1;
try { if (Inst52 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<525,538,42>",(reportCompare)); Inst52++; } } catch(e) {}
reportCompare(0, 0, "ok");

