var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* -*- tab-width: 2; indent-tabs-mode: nil; js-indent-level: 2 -*- */

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

/**
   File Name:          15.8.2.8.js
   ECMA Section:       15.8.2.8  Math.exp(x)
   Description:        return an approximation to the exponential function of
   the argument (e raised to the power of the argument)
   special cases:
   -   if x is NaN         return NaN
   -   if x is 0           return 1
   -   if x is -0          return 1
   -   if x is Infinity    return Infinity
   -   if x is -Infinity   return 0
   Author:             christine@netscape.com
   Date:               7 july 1997
*/
var SECTION = "15.8.2.8";
try { if (Inst0 <= 1000 && typeof (SECTION) != "undefined") {_RecordType("<790,797,21>",(SECTION)); Inst0++; } } catch(e) {}
var TITLE = "Math.exp(x)";
try { if (Inst1 <= 1000 && typeof (TITLE) != "undefined") {_RecordType("<816,821,22>",(TITLE)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (writeHeaderToLog) != "undefined") {_RecordType("<839,855,23>",(writeHeaderToLog)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (SECTION) != "undefined") {_RecordType("<856,863,23>",(SECTION)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (TITLE) != "undefined") {_RecordType("<872,877,23>",(TITLE)); Inst4++; } } catch(e) {}
writeHeaderToLog(SECTION + " " + TITLE);
try { if (Inst5 <= 1000 && typeof (TestCase) != "undefined") {_RecordType("<884,892,24>",(TestCase)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Math.exp.length) != "undefined") {_RecordType("<915,930,24>",(Math.exp.length)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Math.exp) != "undefined") {_RecordType("<915,923,24>",(Math.exp)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Math) != "undefined") {_RecordType("<915,919,24>",(Math)); Inst8++; } } catch(e) {}
new TestCase("Math.exp.length", 1, Math.exp.length);
try { if (Inst9 <= 1000 && typeof (TestCase) != "undefined") {_RecordType("<937,945,25>",(TestCase)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Number.NaN) != "undefined") {_RecordType("<960,970,25>",(Number.NaN)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Number) != "undefined") {_RecordType("<960,966,25>",(Number)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Math.exp) != "undefined") {_RecordType("<972,980,25>",(Math.exp)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Math) != "undefined") {_RecordType("<972,976,25>",(Math)); Inst13++; } } catch(e) {}
new TestCase("Math.exp()", Number.NaN, Math.exp());
try { if (Inst14 <= 1000 && typeof (TestCase) != "undefined") {_RecordType("<989,997,26>",(TestCase)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Math.exp) != "undefined") {_RecordType("<1019,1027,26>",(Math.exp)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1019,1023,26>",(Math)); Inst16++; } } catch(e) {}
new TestCase("Math.exp(null)", 1, Math.exp(null));
try { if (Inst17 <= 1000 && typeof (TestCase) != "undefined") {_RecordType("<1040,1048,27>",(TestCase)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Number.NaN) != "undefined") {_RecordType("<1069,1079,27>",(Number.NaN)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Number) != "undefined") {_RecordType("<1069,1075,27>",(Number)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (Math.exp) != "undefined") {_RecordType("<1081,1089,27>",(Math.exp)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1081,1085,27>",(Math)); Inst21++; } } catch(e) {}
new TestCase("Math.exp(void 0)", Number.NaN, Math.exp(void 0));
try { if (Inst22 <= 1000 && typeof (TestCase) != "undefined") {_RecordType("<1104,1112,28>",(TestCase)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Math.E) != "undefined") {_RecordType("<1128,1134,28>",(Math.E)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1128,1132,28>",(Math)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Math.exp) != "undefined") {_RecordType("<1136,1144,28>",(Math.exp)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1136,1140,28>",(Math)); Inst26++; } } catch(e) {}
new TestCase("Math.exp(1)", Math.E, Math.exp(1));
try { if (Inst27 <= 1000 && typeof (TestCase) != "undefined") {_RecordType("<1154,1162,29>",(TestCase)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (Math.E) != "undefined") {_RecordType("<1181,1187,29>",(Math.E)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1181,1185,29>",(Math)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (Math.exp) != "undefined") {_RecordType("<1189,1197,29>",(Math.exp)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1189,1193,29>",(Math)); Inst31++; } } catch(e) {}
new TestCase("Math.exp(true)", Math.E, Math.exp(true));
try { if (Inst32 <= 1000 && typeof (TestCase) != "undefined") {_RecordType("<1210,1218,30>",(TestCase)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (Math.exp) != "undefined") {_RecordType("<1241,1249,30>",(Math.exp)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1241,1245,30>",(Math)); Inst34++; } } catch(e) {}
new TestCase("Math.exp(false)", 1, Math.exp(false));
try { if (Inst35 <= 1000 && typeof (TestCase) != "undefined") {_RecordType("<1263,1271,31>",(TestCase)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (Math.E) != "undefined") {_RecordType("<1289,1295,31>",(Math.E)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1289,1293,31>",(Math)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (Math.exp) != "undefined") {_RecordType("<1297,1305,31>",(Math.exp)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1297,1301,31>",(Math)); Inst39++; } } catch(e) {}
new TestCase("Math.exp('1')", Math.E, Math.exp('1'));
try { if (Inst40 <= 1000 && typeof (TestCase) != "undefined") {_RecordType("<1317,1325,32>",(TestCase)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (Math.exp) != "undefined") {_RecordType("<1346,1354,32>",(Math.exp)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1346,1350,32>",(Math)); Inst42++; } } catch(e) {}
new TestCase("Math.exp('0')", 1, Math.exp('0'));
try { if (Inst43 <= 1000 && typeof (TestCase) != "undefined") {_RecordType("<1366,1374,33>",(TestCase)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (Number.NaN) != "undefined") {_RecordType("<1392,1402,33>",(Number.NaN)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (Number) != "undefined") {_RecordType("<1392,1398,33>",(Number)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (Math.exp) != "undefined") {_RecordType("<1404,1412,33>",(Math.exp)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1404,1408,33>",(Math)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (Number.NaN) != "undefined") {_RecordType("<1413,1423,33>",(Number.NaN)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (Number) != "undefined") {_RecordType("<1413,1419,33>",(Number)); Inst49++; } } catch(e) {}
new TestCase("Math.exp(NaN)", Number.NaN, Math.exp(Number.NaN));
try { if (Inst50 <= 1000 && typeof (TestCase) != "undefined") {_RecordType("<1431,1439,34>",(TestCase)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (Math.exp) != "undefined") {_RecordType("<1458,1466,34>",(Math.exp)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1458,1462,34>",(Math)); Inst52++; } } catch(e) {}
new TestCase("Math.exp(0)", 1, Math.exp(0));
try { if (Inst53 <= 1000 && typeof (TestCase) != "undefined") {_RecordType("<1476,1484,35>",(TestCase)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (Math.exp) != "undefined") {_RecordType("<1504,1512,35>",(Math.exp)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1504,1508,35>",(Math)); Inst55++; } } catch(e) {}
new TestCase("Math.exp(-0)", 1, Math.exp(-0));
try { if (Inst56 <= 1000 && typeof (TestCase) != "undefined") {_RecordType("<1523,1531,36>",(TestCase)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (Number.POSITIVE_INFINITY) != "undefined") {_RecordType("<1554,1578,36>",(Number.POSITIVE_INFINITY)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (Number) != "undefined") {_RecordType("<1554,1560,36>",(Number)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (Math.exp) != "undefined") {_RecordType("<1580,1588,36>",(Math.exp)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1580,1584,36>",(Math)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (Number.POSITIVE_INFINITY) != "undefined") {_RecordType("<1589,1613,36>",(Number.POSITIVE_INFINITY)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (Number) != "undefined") {_RecordType("<1589,1595,36>",(Number)); Inst62++; } } catch(e) {}
new TestCase("Math.exp(Infinity)", Number.POSITIVE_INFINITY, Math.exp(Number.POSITIVE_INFINITY));
try { if (Inst63 <= 1000 && typeof (TestCase) != "undefined") {_RecordType("<1621,1629,37>",(TestCase)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (Math.exp) != "undefined") {_RecordType("<1656,1664,37>",(Math.exp)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1656,1660,37>",(Math)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (Number.NEGATIVE_INFINITY) != "undefined") {_RecordType("<1665,1689,37>",(Number.NEGATIVE_INFINITY)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (Number) != "undefined") {_RecordType("<1665,1671,37>",(Number)); Inst67++; } } catch(e) {}
new TestCase("Math.exp(-Infinity)", 0, Math.exp(Number.NEGATIVE_INFINITY));
try { if (Inst68 <= 1000 && typeof (test) != "undefined") {_RecordType("<1693,1697,38>",(test)); Inst68++; } } catch(e) {}
test();

