var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* -*- tab-width: 2; indent-tabs-mode: nil; js-indent-level: 2 -*- */

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

/**
   File Name:          15.8.2.4.js
   ECMA Section:       15.8.2.4 atan( x )
   Description:        return an approximation to the arc tangent of the
   argument.  the result is expressed in radians and
   range is from -PI/2 to +PI/2.  special cases:
   - if x is NaN,  the result is NaN
   - if x == +0,   the result is +0
   - if x == -0,   the result is -0
   - if x == +Infinity,    the result is approximately +PI/2
   - if x == -Infinity,    the result is approximately -PI/2
   Author:             christine@netscape.com
   Date:               7 july 1997

*/
var SECTION = "15.8.2.4";
try { if (Inst0 <= 1000 && typeof (SECTION) != "undefined") {_RecordType("<853,860,22>",(SECTION)); Inst0++; } } catch(e) {}
var TITLE = "Math.atan()";
try { if (Inst1 <= 1000 && typeof (TITLE) != "undefined") {_RecordType("<879,884,23>",(TITLE)); Inst1++; } } catch(e) {}
var BUGNUMBER = "77391";
try { if (Inst2 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<906,915,24>",(BUGNUMBER)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (printBugNumber) != "undefined") {_RecordType("<927,941,25>",(printBugNumber)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<942,951,25>",(BUGNUMBER)); Inst4++; } } catch(e) {}
printBugNumber(BUGNUMBER);
try { if (Inst5 <= 1000 && typeof (writeHeaderToLog) != "undefined") {_RecordType("<954,970,26>",(writeHeaderToLog)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (SECTION) != "undefined") {_RecordType("<971,978,26>",(SECTION)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (TITLE) != "undefined") {_RecordType("<987,992,26>",(TITLE)); Inst7++; } } catch(e) {}
writeHeaderToLog(SECTION + " " + TITLE);
try { if (Inst8 <= 1000 && typeof (TestCase) != "undefined") {_RecordType("<999,1007,27>",(TestCase)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Math.atan.length) != "undefined") {_RecordType("<1031,1047,27>",(Math.atan.length)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Math.atan) != "undefined") {_RecordType("<1031,1040,27>",(Math.atan)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1031,1035,27>",(Math)); Inst11++; } } catch(e) {}
new TestCase("Math.atan.length", 1, Math.atan.length);
try { if (Inst12 <= 1000 && typeof (TestCase) != "undefined") {_RecordType("<1054,1062,28>",(TestCase)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Number.NaN) != "undefined") {_RecordType("<1078,1088,28>",(Number.NaN)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Number) != "undefined") {_RecordType("<1078,1084,28>",(Number)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Math.atan) != "undefined") {_RecordType("<1090,1099,28>",(Math.atan)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1090,1094,28>",(Math)); Inst16++; } } catch(e) {}
new TestCase("Math.atan()", Number.NaN, Math.atan());
try { if (Inst17 <= 1000 && typeof (TestCase) != "undefined") {_RecordType("<1108,1116,29>",(TestCase)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Number.NaN) != "undefined") {_RecordType("<1138,1148,29>",(Number.NaN)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Number) != "undefined") {_RecordType("<1138,1144,29>",(Number)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (Math.atan) != "undefined") {_RecordType("<1150,1159,29>",(Math.atan)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1150,1154,29>",(Math)); Inst21++; } } catch(e) {}
new TestCase("Math.atan(void 0)", Number.NaN, Math.atan(void 0));
try { if (Inst22 <= 1000 && typeof (TestCase) != "undefined") {_RecordType("<1174,1182,30>",(TestCase)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Math.atan) != "undefined") {_RecordType("<1205,1214,30>",(Math.atan)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1205,1209,30>",(Math)); Inst24++; } } catch(e) {}
new TestCase("Math.atan(null)", 0, Math.atan(null));
try { if (Inst25 <= 1000 && typeof (TestCase) != "undefined") {_RecordType("<1227,1235,31>",(TestCase)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Number.NaN) != "undefined") {_RecordType("<1254,1264,31>",(Number.NaN)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (Number) != "undefined") {_RecordType("<1254,1260,31>",(Number)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (Math.atan) != "undefined") {_RecordType("<1266,1275,31>",(Math.atan)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1266,1270,31>",(Math)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (Number.NaN) != "undefined") {_RecordType("<1276,1286,31>",(Number.NaN)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (Number) != "undefined") {_RecordType("<1276,1282,31>",(Number)); Inst31++; } } catch(e) {}
new TestCase("Math.atan(NaN)", Number.NaN, Math.atan(Number.NaN));
try { if (Inst32 <= 1000 && typeof (TestCase) != "undefined") {_RecordType("<1294,1302,32>",(TestCase)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (Number.NaN) != "undefined") {_RecordType("<1328,1338,32>",(Number.NaN)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (Number) != "undefined") {_RecordType("<1328,1334,32>",(Number)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (Math.atan) != "undefined") {_RecordType("<1340,1349,32>",(Math.atan)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1340,1344,32>",(Math)); Inst36++; } } catch(e) {}
new TestCase("Math.atan('a string')", Number.NaN, Math.atan("a string"));
try { if (Inst37 <= 1000 && typeof (TestCase) != "undefined") {_RecordType("<1368,1376,33>",(TestCase)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (Math.atan) != "undefined") {_RecordType("<1398,1407,33>",(Math.atan)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1398,1402,33>",(Math)); Inst39++; } } catch(e) {}
new TestCase("Math.atan('0')", 0, Math.atan('0'));
try { if (Inst40 <= 1000 && typeof (TestCase) != "undefined") {_RecordType("<1419,1427,34>",(TestCase)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (Math.PI) != "undefined") {_RecordType("<1446,1453,34>",(Math.PI)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1446,1450,34>",(Math)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (Math.atan) != "undefined") {_RecordType("<1459,1468,34>",(Math.atan)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1459,1463,34>",(Math)); Inst44++; } } catch(e) {}
new TestCase("Math.atan('1')", Math.PI / 4, Math.atan('1'));
try { if (Inst45 <= 1000 && typeof (TestCase) != "undefined") {_RecordType("<1480,1488,35>",(TestCase)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (Math.PI) != "undefined") {_RecordType("<1509,1516,35>",(Math.PI)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1509,1513,35>",(Math)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (Math.atan) != "undefined") {_RecordType("<1522,1531,35>",(Math.atan)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1522,1526,35>",(Math)); Inst49++; } } catch(e) {}
new TestCase("Math.atan('-1')", -Math.PI / 4, Math.atan('-1'));
try { if (Inst50 <= 1000 && typeof (TestCase) != "undefined") {_RecordType("<1544,1552,36>",(TestCase)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (Math.PI) != "undefined") {_RecordType("<1577,1584,36>",(Math.PI)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1577,1581,36>",(Math)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (Math.atan) != "undefined") {_RecordType("<1590,1599,36>",(Math.atan)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1590,1594,36>",(Math)); Inst54++; } } catch(e) {}
new TestCase("Math.atan('Infinity)", Math.PI / 2, Math.atan('Infinity'));
try { if (Inst55 <= 1000 && typeof (TestCase) != "undefined") {_RecordType("<1618,1626,37>",(TestCase)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (Math.PI) != "undefined") {_RecordType("<1653,1660,37>",(Math.PI)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1653,1657,37>",(Math)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (Math.atan) != "undefined") {_RecordType("<1666,1675,37>",(Math.atan)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1666,1670,37>",(Math)); Inst59++; } } catch(e) {}
new TestCase("Math.atan('-Infinity)", -Math.PI / 2, Math.atan('-Infinity'));
try { if (Inst60 <= 1000 && typeof (TestCase) != "undefined") {_RecordType("<1695,1703,38>",(TestCase)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (Math.atan) != "undefined") {_RecordType("<1723,1732,38>",(Math.atan)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1723,1727,38>",(Math)); Inst62++; } } catch(e) {}
new TestCase("Math.atan(0)", 0, Math.atan(0));
try { if (Inst63 <= 1000 && typeof (TestCase) != "undefined") {_RecordType("<1742,1750,39>",(TestCase)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (Math.atan) != "undefined") {_RecordType("<1772,1781,39>",(Math.atan)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1772,1776,39>",(Math)); Inst65++; } } catch(e) {}
new TestCase("Math.atan(-0)", -0, Math.atan(-0));
try { if (Inst66 <= 1000 && typeof (TestCase) != "undefined") {_RecordType("<1792,1800,40>",(TestCase)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<1828,1836,40>",(Infinity)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<1838,1846,40>",(Infinity)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (Math.atan) != "undefined") {_RecordType("<1849,1858,40>",(Math.atan)); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1849,1853,40>",(Math)); Inst70++; } } catch(e) {}
new TestCase("Infinity/Math.atan(-0)", -Infinity, Infinity / Math.atan(-0));
try { if (Inst71 <= 1000 && typeof (TestCase) != "undefined") {_RecordType("<1869,1877,41>",(TestCase)); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (Math.PI) != "undefined") {_RecordType("<1901,1908,41>",(Math.PI)); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1901,1905,41>",(Math)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (Math.atan) != "undefined") {_RecordType("<1914,1923,41>",(Math.atan)); Inst74++; } } catch(e) {}try { if (Inst75 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1914,1918,41>",(Math)); Inst75++; } } catch(e) {}try { if (Inst76 <= 1000 && typeof (Number.POSITIVE_INFINITY) != "undefined") {_RecordType("<1924,1948,41>",(Number.POSITIVE_INFINITY)); Inst76++; } } catch(e) {}try { if (Inst77 <= 1000 && typeof (Number) != "undefined") {_RecordType("<1924,1930,41>",(Number)); Inst77++; } } catch(e) {}
new TestCase("Math.atan(Infinity)", Math.PI / 2, Math.atan(Number.POSITIVE_INFINITY));
try { if (Inst78 <= 1000 && typeof (TestCase) != "undefined") {_RecordType("<1956,1964,42>",(TestCase)); Inst78++; } } catch(e) {}try { if (Inst79 <= 1000 && typeof (Math.PI) != "undefined") {_RecordType("<1990,1997,42>",(Math.PI)); Inst79++; } } catch(e) {}try { if (Inst80 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1990,1994,42>",(Math)); Inst80++; } } catch(e) {}try { if (Inst81 <= 1000 && typeof (Math.atan) != "undefined") {_RecordType("<2003,2012,42>",(Math.atan)); Inst81++; } } catch(e) {}try { if (Inst82 <= 1000 && typeof (Math) != "undefined") {_RecordType("<2003,2007,42>",(Math)); Inst82++; } } catch(e) {}try { if (Inst83 <= 1000 && typeof (Number.NEGATIVE_INFINITY) != "undefined") {_RecordType("<2013,2037,42>",(Number.NEGATIVE_INFINITY)); Inst83++; } } catch(e) {}try { if (Inst84 <= 1000 && typeof (Number) != "undefined") {_RecordType("<2013,2019,42>",(Number)); Inst84++; } } catch(e) {}
new TestCase("Math.atan(-Infinity)", -Math.PI / 2, Math.atan(Number.NEGATIVE_INFINITY));
try { if (Inst85 <= 1000 && typeof (TestCase) != "undefined") {_RecordType("<2045,2053,43>",(TestCase)); Inst85++; } } catch(e) {}try { if (Inst86 <= 1000 && typeof (Math.PI) != "undefined") {_RecordType("<2070,2077,43>",(Math.PI)); Inst86++; } } catch(e) {}try { if (Inst87 <= 1000 && typeof (Math) != "undefined") {_RecordType("<2070,2074,43>",(Math)); Inst87++; } } catch(e) {}try { if (Inst88 <= 1000 && typeof (Math.atan) != "undefined") {_RecordType("<2083,2092,43>",(Math.atan)); Inst88++; } } catch(e) {}try { if (Inst89 <= 1000 && typeof (Math) != "undefined") {_RecordType("<2083,2087,43>",(Math)); Inst89++; } } catch(e) {}
new TestCase("Math.atan(1)", Math.PI / 4, Math.atan(1));
try { if (Inst90 <= 1000 && typeof (TestCase) != "undefined") {_RecordType("<2102,2110,44>",(TestCase)); Inst90++; } } catch(e) {}try { if (Inst91 <= 1000 && typeof (Math.PI) != "undefined") {_RecordType("<2129,2136,44>",(Math.PI)); Inst91++; } } catch(e) {}try { if (Inst92 <= 1000 && typeof (Math) != "undefined") {_RecordType("<2129,2133,44>",(Math)); Inst92++; } } catch(e) {}try { if (Inst93 <= 1000 && typeof (Math.atan) != "undefined") {_RecordType("<2142,2151,44>",(Math.atan)); Inst93++; } } catch(e) {}try { if (Inst94 <= 1000 && typeof (Math) != "undefined") {_RecordType("<2142,2146,44>",(Math)); Inst94++; } } catch(e) {}
new TestCase("Math.atan(-1)", -Math.PI / 4, Math.atan(-1));
try { if (Inst95 <= 1000 && typeof (test) != "undefined") {_RecordType("<2158,2162,45>",(test)); Inst95++; } } catch(e) {}
test();

