var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Properties of Math.acosh that are guaranteed by the spec.
// If x is NaN, the result is NaN.
try { if (Inst0 <= 1000 && typeof (Math.acosh) != "undefined") {_RecordType("<96,106,3>",(Math.acosh)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (Math) != "undefined") {_RecordType("<96,100,3>",(Math)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<107,110,3>",(NaN)); Inst2++; } } catch(e) {}
Math.acosh(NaN);
try { if (Inst3 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<113,116,4>",(NaN)); Inst3++; } } catch(e) {}
NaN;
try { if (Inst4 <= 1000 && typeof (Math.acosh) != "undefined") {_RecordType("<118,128,5>",(Math.acosh)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Math) != "undefined") {_RecordType("<118,122,5>",(Math)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (ONE_MINUS_EPSILON) != "undefined") {_RecordType("<129,146,5>",(ONE_MINUS_EPSILON)); Inst6++; } } catch(e) {}
Math.acosh(ONE_MINUS_EPSILON);
try { if (Inst7 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<149,152,6>",(NaN)); Inst7++; } } catch(e) {}
NaN;
try { if (Inst8 <= 1000 && typeof (Math.acosh) != "undefined") {_RecordType("<154,164,7>",(Math.acosh)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Math) != "undefined") {_RecordType("<154,158,7>",(Math)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Number.MIN_VALUE) != "undefined") {_RecordType("<165,181,7>",(Number.MIN_VALUE)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Number) != "undefined") {_RecordType("<165,171,7>",(Number)); Inst11++; } } catch(e) {}
Math.acosh(Number.MIN_VALUE);
try { if (Inst12 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<184,187,8>",(NaN)); Inst12++; } } catch(e) {}
NaN;
try { if (Inst13 <= 1000 && typeof (Math.acosh) != "undefined") {_RecordType("<189,199,9>",(Math.acosh)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Math) != "undefined") {_RecordType("<189,193,9>",(Math)); Inst14++; } } catch(e) {}
Math.acosh(+0);
try { if (Inst15 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<205,208,10>",(NaN)); Inst15++; } } catch(e) {}
NaN;
try { if (Inst16 <= 1000 && typeof (Math.acosh) != "undefined") {_RecordType("<210,220,11>",(Math.acosh)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Math) != "undefined") {_RecordType("<210,214,11>",(Math)); Inst17++; } } catch(e) {}
Math.acosh(-0);
try { if (Inst18 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<226,229,12>",(NaN)); Inst18++; } } catch(e) {}
NaN;
try { if (Inst19 <= 1000 && typeof (Math.acosh) != "undefined") {_RecordType("<231,241,13>",(Math.acosh)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (Math) != "undefined") {_RecordType("<231,235,13>",(Math)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Number.MIN_VALUE) != "undefined") {_RecordType("<243,259,13>",(Number.MIN_VALUE)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Number) != "undefined") {_RecordType("<243,249,13>",(Number)); Inst22++; } } catch(e) {}
Math.acosh(-Number.MIN_VALUE);
try { if (Inst23 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<262,265,14>",(NaN)); Inst23++; } } catch(e) {}
NaN;
try { if (Inst24 <= 1000 && typeof (Math.acosh) != "undefined") {_RecordType("<267,277,15>",(Math.acosh)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Math) != "undefined") {_RecordType("<267,271,15>",(Math)); Inst25++; } } catch(e) {}
Math.acosh(-1);
try { if (Inst26 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<283,286,16>",(NaN)); Inst26++; } } catch(e) {}
NaN;
try { if (Inst27 <= 1000 && typeof (Math.acosh) != "undefined") {_RecordType("<288,298,17>",(Math.acosh)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (Math) != "undefined") {_RecordType("<288,292,17>",(Math)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (Number.MAX_VALUE) != "undefined") {_RecordType("<300,316,17>",(Number.MAX_VALUE)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (Number) != "undefined") {_RecordType("<300,306,17>",(Number)); Inst30++; } } catch(e) {}
Math.acosh(-Number.MAX_VALUE);
try { if (Inst31 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<319,322,18>",(NaN)); Inst31++; } } catch(e) {}
NaN;
try { if (Inst32 <= 1000 && typeof (Math.acosh) != "undefined") {_RecordType("<324,334,19>",(Math.acosh)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (Math) != "undefined") {_RecordType("<324,328,19>",(Math)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<336,344,19>",(Infinity)); Inst34++; } } catch(e) {}
Math.acosh(-Infinity);
try { if (Inst35 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<347,350,20>",(NaN)); Inst35++; } } catch(e) {}
NaN;

for (var i = -20; i < 1; i++) {
try { if (Inst36 <= 1000 && typeof (i) != "undefined") {_RecordType("<362,363,22>",(i)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (i) != "undefined") {_RecordType("<371,372,22>",(i)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (i) != "undefined") {_RecordType("<378,379,22>",(i)); Inst38++; } } catch(e) {}
try { if (Inst39 <= 1000 && typeof (Math.acosh) != "undefined") {_RecordType("<387,397,23>",(Math.acosh)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (Math) != "undefined") {_RecordType("<387,391,23>",(Math)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (i) != "undefined") {_RecordType("<398,399,23>",(i)); Inst41++; } } catch(e) {}
  Math.acosh(i);
try { if (Inst42 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<404,407,24>",(NaN)); Inst42++; } } catch(e) {}
  NaN;
} // If x is 1, the result is +0.


try { if (Inst43 <= 1000 && typeof (Math.acosh) != "undefined") {_RecordType("<445,455,28>",(Math.acosh)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (Math) != "undefined") {_RecordType("<445,449,28>",(Math)); Inst44++; } } catch(e) {}
Math.acosh(1);
+0;
try { if (Inst45 <= 1000 && typeof (Math.acosh) != "undefined") {_RecordType("<464,474,30>",(Math.acosh)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (Math) != "undefined") {_RecordType("<464,468,30>",(Math)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (Number.POSITIVE_INFINITY) != "undefined") {_RecordType("<475,499,30>",(Number.POSITIVE_INFINITY)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (Number) != "undefined") {_RecordType("<475,481,30>",(Number)); Inst48++; } } catch(e) {}
Math.acosh(Number.POSITIVE_INFINITY);
try { if (Inst49 <= 1000 && typeof (Number.POSITIVE_INFINITY) != "undefined") {_RecordType("<502,526,31>",(Number.POSITIVE_INFINITY)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (Number) != "undefined") {_RecordType("<502,508,31>",(Number)); Inst50++; } } catch(e) {}
Number.POSITIVE_INFINITY;
try { if (Inst51 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<528,541,32>",(reportCompare)); Inst51++; } } catch(e) {}
reportCompare(0, 0, "ok");

