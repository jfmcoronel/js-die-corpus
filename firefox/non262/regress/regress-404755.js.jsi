var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// |reftest| skip -- unreliable - based on GC timing

/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
//-----------------------------------------------------------------------------
var BUGNUMBER = 404755;
try { if (Inst0 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<424,433,9>",(BUGNUMBER)); Inst0++; } } catch(e) {}
var summary = 'Do not consume heap when deleting property';
try { if (Inst1 <= 1000 && typeof (summary) != "undefined") {_RecordType("<448,455,10>",(summary)); Inst1++; } } catch(e) {}
var actual = 'No leak';
try { if (Inst2 <= 1000 && typeof (actual) != "undefined") {_RecordType("<508,514,11>",(actual)); Inst2++; } } catch(e) {}
var expect = 'No leak'; //-----------------------------------------------------------------------------
try { if (Inst3 <= 1000 && typeof (expect) != "undefined") {_RecordType("<532,538,12>",(expect)); Inst3++; } } catch(e) {}

try { if (Inst4 <= 1000 && typeof (test) != "undefined") {_RecordType("<633,637,14>",(test)); Inst4++; } } catch(e) {}
test(); //-----------------------------------------------------------------------------

try { if (Inst5 <= 1000 && typeof (test) != "undefined") {_RecordType("<731,735,16>",(test)); Inst5++; } } catch(e) {}
function test() {
try { if (Inst6 <= 1000 && typeof (printBugNumber) != "undefined") {_RecordType("<742,756,17>",(printBugNumber)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<757,766,17>",(BUGNUMBER)); Inst7++; } } catch(e) {}
  printBugNumber(BUGNUMBER);
try { if (Inst8 <= 1000 && typeof (printStatus) != "undefined") {_RecordType("<771,782,18>",(printStatus)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (summary) != "undefined") {_RecordType("<783,790,18>",(summary)); Inst9++; } } catch(e) {}
  printStatus(summary);
  var n = 1 << 22;
try { if (Inst10 <= 1000 && typeof (n) != "undefined") {_RecordType("<799,800,19>",(n)); Inst10++; } } catch(e) {}
  var o = {};
try { if (Inst11 <= 1000 && typeof (o) != "undefined") {_RecordType("<818,819,20>",(o)); Inst11++; } } catch(e) {}

try { if (Inst12 <= 1000 && typeof (n) != "undefined") {_RecordType("<878,879,25>",(n)); Inst12++; } } catch(e) {}
  do {
    o[0] = 0;
try { if (Inst13 <= 1000 && typeof (o[0]) != "undefined") {_RecordType("<838,842,23>",(o[0])); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (o) != "undefined") {_RecordType("<838,839,23>",(o)); Inst14++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (o[0]) != "undefined") {_RecordType("<859,863,24>",(o[0])); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (o) != "undefined") {_RecordType("<859,860,24>",(o)); Inst16++; } } catch(e) {}
    delete o[0];
  } while (--n != 0);

try { if (Inst17 <= 1000 && typeof (gc) != "undefined") {_RecordType("<890,892,27>",(gc)); Inst17++; } } catch(e) {}
  gc();
try { if (Inst19 <= 1000 && typeof (Date.now) != "undefined") {_RecordType("<909,917,28>",(Date.now)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (Date) != "undefined") {_RecordType("<909,913,28>",(Date)); Inst20++; } } catch(e) {}
  var time = Date.now();
try { if (Inst18 <= 1000 && typeof (time) != "undefined") {_RecordType("<902,906,28>",(time)); Inst18++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (gc) != "undefined") {_RecordType("<923,925,29>",(gc)); Inst21++; } } catch(e) {}
  gc();
try { if (Inst23 <= 1000 && typeof (Date.now) != "undefined") {_RecordType("<938,946,30>",(Date.now)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (Date) != "undefined") {_RecordType("<938,942,30>",(Date)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (time) != "undefined") {_RecordType("<951,955,30>",(time)); Inst25++; } } catch(e) {}
  time = Date.now() - time;
try { if (Inst22 <= 1000 && typeof (time) != "undefined") {_RecordType("<931,935,30>",(time)); Inst22++; } } catch(e) {}
  o = {};
try { if (Inst26 <= 1000 && typeof (o) != "undefined") {_RecordType("<959,960,31>",(o)); Inst26++; } } catch(e) {}
  o[0] = 0;
try { if (Inst27 <= 1000 && typeof (o[0]) != "undefined") {_RecordType("<969,973,32>",(o[0])); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (o) != "undefined") {_RecordType("<969,970,32>",(o)); Inst28++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (o[0]) != "undefined") {_RecordType("<988,992,33>",(o[0])); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (o) != "undefined") {_RecordType("<988,989,33>",(o)); Inst30++; } } catch(e) {}
  delete o[0];
try { if (Inst31 <= 1000 && typeof (gc) != "undefined") {_RecordType("<996,998,34>",(gc)); Inst31++; } } catch(e) {}
  gc();
try { if (Inst33 <= 1000 && typeof (Date.now) != "undefined") {_RecordType("<1016,1024,35>",(Date.now)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (Date) != "undefined") {_RecordType("<1016,1020,35>",(Date)); Inst34++; } } catch(e) {}
  var time2 = Date.now();
try { if (Inst32 <= 1000 && typeof (time2) != "undefined") {_RecordType("<1008,1013,35>",(time2)); Inst32++; } } catch(e) {}
try { if (Inst35 <= 1000 && typeof (gc) != "undefined") {_RecordType("<1030,1032,36>",(gc)); Inst35++; } } catch(e) {}
  gc();
try { if (Inst37 <= 1000 && typeof (Date.now) != "undefined") {_RecordType("<1046,1054,37>",(Date.now)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (Date) != "undefined") {_RecordType("<1046,1050,37>",(Date)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (time2) != "undefined") {_RecordType("<1059,1064,37>",(time2)); Inst39++; } } catch(e) {}
  time2 = Date.now() - time2;
try { if (Inst36 <= 1000 && typeof (time2) != "undefined") {_RecordType("<1038,1043,37>",(time2)); Inst36++; } } catch(e) {}
try { if (Inst40 <= 1000 && typeof (print) != "undefined") {_RecordType("<1068,1073,38>",(print)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (time) != "undefined") {_RecordType("<1074,1078,38>",(time)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (time2) != "undefined") {_RecordType("<1087,1092,38>",(time2)); Inst42++; } } catch(e) {}
  print(time + " " + time2);

try { if (Inst43 <= 1000 && typeof (time) != "undefined") {_RecordType("<1102,1106,40>",(time)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (time) != "undefined") {_RecordType("<1114,1118,40>",(time)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (time2) != "undefined") {_RecordType("<1121,1126,40>",(time2)); Inst45++; } } catch(e) {}
  if (time > 2 && time > time2 * 5) {
    throw "A possible leak is observed";
  }

try { if (Inst46 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1182,1195,44>",(reportCompare)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1196,1202,44>",(expect)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1204,1210,44>",(actual)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (summary) != "undefined") {_RecordType("<1212,1219,44>",(summary)); Inst49++; } } catch(e) {}
  reportCompare(expect, actual, summary);
}

