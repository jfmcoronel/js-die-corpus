var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* -*- indent-tabs-mode: nil; js-indent-level: 2 -*- */

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

/*
 *
 * Date:    22 Sep 2002
 * SUMMARY: adding prop after middle-delete of function w duplicate formal args
 * See http://bugzilla.mozilla.org/show_bug.cgi?id=170193
 *
 */
//-----------------------------------------------------------------------------
var UBound = 0;
try { if (Inst0 <= 1000 && typeof (UBound) != "undefined") {_RecordType("<522,528,15>",(UBound)); Inst0++; } } catch(e) {}
var BUGNUMBER = 170193;
try { if (Inst1 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<538,547,16>",(BUGNUMBER)); Inst1++; } } catch(e) {}
var summary = 'adding property after middle-delete of function w duplicate formal args';
try { if (Inst2 <= 1000 && typeof (summary) != "undefined") {_RecordType("<562,569,17>",(summary)); Inst2++; } } catch(e) {}
var status = '';
try { if (Inst3 <= 1000 && typeof (status) != "undefined") {_RecordType("<651,657,18>",(status)); Inst3++; } } catch(e) {}
var statusitems = [];
try { if (Inst4 <= 1000 && typeof (statusitems) != "undefined") {_RecordType("<668,679,19>",(statusitems)); Inst4++; } } catch(e) {}
var actual = '';
try { if (Inst5 <= 1000 && typeof (actual) != "undefined") {_RecordType("<690,696,20>",(actual)); Inst5++; } } catch(e) {}
var actualvalues = [];
try { if (Inst6 <= 1000 && typeof (actualvalues) != "undefined") {_RecordType("<707,719,21>",(actualvalues)); Inst6++; } } catch(e) {}
var expect = '';
try { if (Inst7 <= 1000 && typeof (expect) != "undefined") {_RecordType("<730,736,22>",(expect)); Inst7++; } } catch(e) {}
var expectedvalues = [];
try { if (Inst8 <= 1000 && typeof (expectedvalues) != "undefined") {_RecordType("<747,761,23>",(expectedvalues)); Inst8++; } } catch(e) {}
/*
 * This sequence of steps used to cause the SpiderMonkey shell to hang -
 */

try { if (Inst9 <= 1000 && typeof (f) != "undefined") {_RecordType("<858,859,28>",(f)); Inst9++; } } catch(e) {}
function f(a, a, b) {
try { if (Inst10 <= 1000 && typeof (a) != "undefined") {_RecordType("<860,861,28>",(a)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (a) != "undefined") {_RecordType("<863,864,28>",(a)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (b) != "undefined") {_RecordType("<866,867,28>",(b)); Inst12++; } } catch(e) {}
  ;
}

f.c = 42;
try { if (Inst13 <= 1000 && typeof (f.c) != "undefined") {_RecordType("<878,881,32>",(f.c)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (f) != "undefined") {_RecordType("<878,879,32>",(f)); Inst14++; } } catch(e) {}
f.d = 43;
try { if (Inst15 <= 1000 && typeof (f.d) != "undefined") {_RecordType("<888,891,33>",(f.d)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (f) != "undefined") {_RecordType("<888,889,33>",(f)); Inst16++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (f.c) != "undefined") {_RecordType("<905,908,34>",(f.c)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (f) != "undefined") {_RecordType("<905,906,34>",(f)); Inst18++; } } catch(e) {}
delete f.c; // "middle delete"

f.e = 44;
try { if (Inst19 <= 1000 && typeof (f.e) != "undefined") {_RecordType("<930,933,36>",(f.e)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (f) != "undefined") {_RecordType("<930,931,36>",(f)); Inst20++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (inSection) != "undefined") {_RecordType("<949,958,37>",(inSection)); Inst22++; } } catch(e) {}
status = inSection(1);
try { if (Inst21 <= 1000 && typeof (status) != "undefined") {_RecordType("<940,946,37>",(status)); Inst21++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (f.c) != "undefined") {_RecordType("<972,975,38>",(f.c)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (f) != "undefined") {_RecordType("<972,973,38>",(f)); Inst25++; } } catch(e) {}
actual = f.c;
try { if (Inst23 <= 1000 && typeof (actual) != "undefined") {_RecordType("<963,969,38>",(actual)); Inst23++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<986,995,39>",(undefined)); Inst27++; } } catch(e) {}
expect = undefined;
try { if (Inst26 <= 1000 && typeof (expect) != "undefined") {_RecordType("<977,983,39>",(expect)); Inst26++; } } catch(e) {}
try { if (Inst28 <= 1000 && typeof (addThis) != "undefined") {_RecordType("<997,1004,40>",(addThis)); Inst28++; } } catch(e) {}
addThis();
try { if (Inst30 <= 1000 && typeof (inSection) != "undefined") {_RecordType("<1017,1026,41>",(inSection)); Inst30++; } } catch(e) {}
status = inSection(2);
try { if (Inst29 <= 1000 && typeof (status) != "undefined") {_RecordType("<1008,1014,41>",(status)); Inst29++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (f.d) != "undefined") {_RecordType("<1040,1043,42>",(f.d)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (f) != "undefined") {_RecordType("<1040,1041,42>",(f)); Inst33++; } } catch(e) {}
actual = f.d;
try { if (Inst31 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1031,1037,42>",(actual)); Inst31++; } } catch(e) {}
expect = 43;
try { if (Inst34 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1045,1051,43>",(expect)); Inst34++; } } catch(e) {}
try { if (Inst35 <= 1000 && typeof (addThis) != "undefined") {_RecordType("<1058,1065,44>",(addThis)); Inst35++; } } catch(e) {}
addThis();
try { if (Inst37 <= 1000 && typeof (inSection) != "undefined") {_RecordType("<1078,1087,45>",(inSection)); Inst37++; } } catch(e) {}
status = inSection(3);
try { if (Inst36 <= 1000 && typeof (status) != "undefined") {_RecordType("<1069,1075,45>",(status)); Inst36++; } } catch(e) {}
try { if (Inst39 <= 1000 && typeof (f.e) != "undefined") {_RecordType("<1101,1104,46>",(f.e)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (f) != "undefined") {_RecordType("<1101,1102,46>",(f)); Inst40++; } } catch(e) {}
actual = f.e;
try { if (Inst38 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1092,1098,46>",(actual)); Inst38++; } } catch(e) {}
expect = 44;
try { if (Inst41 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1106,1112,47>",(expect)); Inst41++; } } catch(e) {}
try { if (Inst42 <= 1000 && typeof (addThis) != "undefined") {_RecordType("<1119,1126,48>",(addThis)); Inst42++; } } catch(e) {}
addThis(); //-----------------------------------------------------------------------------

try { if (Inst43 <= 1000 && typeof (test) != "undefined") {_RecordType("<1211,1215,50>",(test)); Inst43++; } } catch(e) {}
test(); //-----------------------------------------------------------------------------

try { if (Inst44 <= 1000 && typeof (addThis) != "undefined") {_RecordType("<1309,1316,52>",(addThis)); Inst44++; } } catch(e) {}
function addThis() {
try { if (Inst47 <= 1000 && typeof (status) != "undefined") {_RecordType("<1345,1351,53>",(status)); Inst47++; } } catch(e) {}
  statusitems[UBound] = status;
try { if (Inst45 <= 1000 && typeof (statusitems[UBound]) != "undefined") {_RecordType("<1323,1342,53>",(statusitems[UBound])); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (statusitems) != "undefined") {_RecordType("<1323,1334,53>",(statusitems)); Inst46++; } } catch(e) {}
try { if (Inst50 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1378,1384,54>",(actual)); Inst50++; } } catch(e) {}
  actualvalues[UBound] = actual;
try { if (Inst48 <= 1000 && typeof (actualvalues[UBound]) != "undefined") {_RecordType("<1355,1375,54>",(actualvalues[UBound])); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (actualvalues) != "undefined") {_RecordType("<1355,1367,54>",(actualvalues)); Inst49++; } } catch(e) {}
try { if (Inst53 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1413,1419,55>",(expect)); Inst53++; } } catch(e) {}
  expectedvalues[UBound] = expect;
try { if (Inst51 <= 1000 && typeof (expectedvalues[UBound]) != "undefined") {_RecordType("<1388,1410,55>",(expectedvalues[UBound])); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (expectedvalues) != "undefined") {_RecordType("<1388,1402,55>",(expectedvalues)); Inst52++; } } catch(e) {}
try { if (Inst54 <= 1000 && typeof (UBound) != "undefined") {_RecordType("<1423,1429,56>",(UBound)); Inst54++; } } catch(e) {}
  UBound++;
}

try { if (Inst55 <= 1000 && typeof (test) != "undefined") {_RecordType("<1445,1449,59>",(test)); Inst55++; } } catch(e) {}
function test() {
try { if (Inst56 <= 1000 && typeof (printBugNumber) != "undefined") {_RecordType("<1456,1470,60>",(printBugNumber)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<1471,1480,60>",(BUGNUMBER)); Inst57++; } } catch(e) {}
  printBugNumber(BUGNUMBER);
try { if (Inst58 <= 1000 && typeof (printStatus) != "undefined") {_RecordType("<1485,1496,61>",(printStatus)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (summary) != "undefined") {_RecordType("<1497,1504,61>",(summary)); Inst59++; } } catch(e) {}
  printStatus(summary);

  for (var i = 0; i < UBound; i++) {
try { if (Inst60 <= 1000 && typeof (i) != "undefined") {_RecordType("<1519,1520,63>",(i)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (i) != "undefined") {_RecordType("<1526,1527,63>",(i)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (UBound) != "undefined") {_RecordType("<1530,1536,63>",(UBound)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (i) != "undefined") {_RecordType("<1538,1539,63>",(i)); Inst63++; } } catch(e) {}
try { if (Inst64 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1549,1562,64>",(reportCompare)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (expectedvalues[i]) != "undefined") {_RecordType("<1563,1580,64>",(expectedvalues[i])); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (expectedvalues) != "undefined") {_RecordType("<1563,1577,64>",(expectedvalues)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (actualvalues[i]) != "undefined") {_RecordType("<1582,1597,64>",(actualvalues[i])); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (actualvalues) != "undefined") {_RecordType("<1582,1594,64>",(actualvalues)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (statusitems[i]) != "undefined") {_RecordType("<1599,1613,64>",(statusitems[i])); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (statusitems) != "undefined") {_RecordType("<1599,1610,64>",(statusitems)); Inst70++; } } catch(e) {}
    reportCompare(expectedvalues[i], actualvalues[i], statusitems[i]);
  }
}

