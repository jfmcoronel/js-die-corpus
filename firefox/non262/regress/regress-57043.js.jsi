var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* -*- indent-tabs-mode: nil; js-indent-level: 2 -*- */

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

/*
 * Date: 03 December 2000
 *
 *
 * SUMMARY:  This test arose from Bugzilla bug 57043:
 * "Negative integers as object properties: strange behavior!"
 *
 * We check that object properties may be indexed by signed
 * numeric literals, as in assignments like obj[-1] = 'Hello' 
 *
 * NOTE: it should not matter whether we provide the literal with
 * quotes around it or not; e.g. these should be equivalent:
 *
 *                                    obj[-1]  = 'Hello'
 *                                    obj['-1']  = 'Hello'
 */
//-----------------------------------------------------------------------------
var BUGNUMBER = 57043;
try { if (Inst0 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<878,887,24>",(BUGNUMBER)); Inst0++; } } catch(e) {}
var summary = 'Indexing object properties by signed numerical literals -';
try { if (Inst1 <= 1000 && typeof (summary) != "undefined") {_RecordType("<901,908,25>",(summary)); Inst1++; } } catch(e) {}
var statprefix = 'Adding a property to test object with an index of ';
try { if (Inst2 <= 1000 && typeof (statprefix) != "undefined") {_RecordType("<976,986,26>",(statprefix)); Inst2++; } } catch(e) {}
var statsuffix = ', testing it now -';
try { if (Inst3 <= 1000 && typeof (statsuffix) != "undefined") {_RecordType("<1047,1057,27>",(statsuffix)); Inst3++; } } catch(e) {}
var propprefix = 'This is property ';
try { if (Inst4 <= 1000 && typeof (propprefix) != "undefined") {_RecordType("<1086,1096,28>",(propprefix)); Inst4++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1134,1140,29>",(Object)); Inst6++; } } catch(e) {}
var obj = new Object();
try { if (Inst5 <= 1000 && typeof (obj) != "undefined") {_RecordType("<1124,1127,29>",(obj)); Inst5++; } } catch(e) {}
var status = '';
try { if (Inst7 <= 1000 && typeof (status) != "undefined") {_RecordType("<1148,1154,30>",(status)); Inst7++; } } catch(e) {}
var actual = '';
try { if (Inst8 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1165,1171,31>",(actual)); Inst8++; } } catch(e) {}
var expect = '';
try { if (Inst9 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1182,1188,32>",(expect)); Inst9++; } } catch(e) {}
var value = ''; //  various indices to try -
try { if (Inst10 <= 1000 && typeof (value) != "undefined") {_RecordType("<1199,1204,33>",(value)); Inst10++; } } catch(e) {}

var index = [-1073741825, -1073741824, -1073741823, -5000, -507, -3, -2, -1, -0, 0, 1, 2, 3, 1073741823, 1073741824, 1073741825]; //------------------------------------------------------------------------------------------------- 
try { if (Inst11 <= 1000 && typeof (index) != "undefined") {_RecordType("<1245,1250,35>",(index)); Inst11++; } } catch(e) {}

try { if (Inst12 <= 1000 && typeof (test) != "undefined") {_RecordType("<1473,1477,37>",(test)); Inst12++; } } catch(e) {}
test(); //-------------------------------------------------------------------------------------------------

try { if (Inst13 <= 1000 && typeof (test) != "undefined") {_RecordType("<1591,1595,39>",(test)); Inst13++; } } catch(e) {}
function test() {
try { if (Inst14 <= 1000 && typeof (printBugNumber) != "undefined") {_RecordType("<1602,1616,40>",(printBugNumber)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<1617,1626,40>",(BUGNUMBER)); Inst15++; } } catch(e) {}
  printBugNumber(BUGNUMBER);
try { if (Inst16 <= 1000 && typeof (printStatus) != "undefined") {_RecordType("<1631,1642,41>",(printStatus)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (summary) != "undefined") {_RecordType("<1643,1650,41>",(summary)); Inst17++; } } catch(e) {}
  printStatus(summary);

  for (var j in index) {
try { if (Inst18 <= 1000 && typeof (j) != "undefined") {_RecordType("<1665,1666,43>",(j)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (index) != "undefined") {_RecordType("<1670,1675,43>",(index)); Inst19++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (testProperty) != "undefined") {_RecordType("<1683,1695,44>",(testProperty)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (index[j]) != "undefined") {_RecordType("<1696,1704,44>",(index[j])); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (index) != "undefined") {_RecordType("<1696,1701,44>",(index)); Inst22++; } } catch(e) {}
    testProperty(index[j]);
  }
}

try { if (Inst23 <= 1000 && typeof (testProperty) != "undefined") {_RecordType("<1723,1735,48>",(testProperty)); Inst23++; } } catch(e) {}
function testProperty(i) {
try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<1736,1737,48>",(i)); Inst24++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (getStatus) != "undefined") {_RecordType("<1752,1761,49>",(getStatus)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (i) != "undefined") {_RecordType("<1762,1763,49>",(i)); Inst27++; } } catch(e) {}
  status = getStatus(i); // try to assign a property using the given index -
try { if (Inst25 <= 1000 && typeof (status) != "undefined") {_RecordType("<1743,1749,49>",(status)); Inst25++; } } catch(e) {}

try { if (Inst31 <= 1000 && typeof (propprefix) != "undefined") {_RecordType("<1838,1848,51>",(propprefix)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (i) != "undefined") {_RecordType("<1851,1852,51>",(i)); Inst32++; } } catch(e) {}
  obj[i] = value = propprefix + i; // try to read the property back via the index (as number) -
try { if (Inst28 <= 1000 && typeof (obj[i]) != "undefined") {_RecordType("<1821,1827,51>",(obj[i])); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (obj) != "undefined") {_RecordType("<1821,1824,51>",(obj)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (value) != "undefined") {_RecordType("<1830,1835,51>",(value)); Inst30++; } } catch(e) {}

try { if (Inst34 <= 1000 && typeof (value) != "undefined") {_RecordType("<1927,1932,53>",(value)); Inst34++; } } catch(e) {}
  expect = value;
try { if (Inst33 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1918,1924,53>",(expect)); Inst33++; } } catch(e) {}
try { if (Inst36 <= 1000 && typeof (obj[i]) != "undefined") {_RecordType("<1945,1951,54>",(obj[i])); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (obj) != "undefined") {_RecordType("<1945,1948,54>",(obj)); Inst37++; } } catch(e) {}
  actual = obj[i];
try { if (Inst35 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1936,1942,54>",(actual)); Inst35++; } } catch(e) {}
try { if (Inst38 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1955,1968,55>",(reportCompare)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1969,1975,55>",(expect)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1977,1983,55>",(actual)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (status) != "undefined") {_RecordType("<1985,1991,55>",(status)); Inst41++; } } catch(e) {}
  reportCompare(expect, actual, status); // try to read the property back via the index as string -

try { if (Inst43 <= 1000 && typeof (value) != "undefined") {_RecordType("<2065,2070,57>",(value)); Inst43++; } } catch(e) {}
  expect = value;
try { if (Inst42 <= 1000 && typeof (expect) != "undefined") {_RecordType("<2056,2062,57>",(expect)); Inst42++; } } catch(e) {}
try { if (Inst45 <= 1000 && typeof (obj[String(i)]) != "undefined") {_RecordType("<2083,2097,58>",(obj[String(i)])); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (obj) != "undefined") {_RecordType("<2083,2086,58>",(obj)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (String) != "undefined") {_RecordType("<2087,2093,58>",(String)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (i) != "undefined") {_RecordType("<2094,2095,58>",(i)); Inst48++; } } catch(e) {}
  actual = obj[String(i)];
try { if (Inst44 <= 1000 && typeof (actual) != "undefined") {_RecordType("<2074,2080,58>",(actual)); Inst44++; } } catch(e) {}
try { if (Inst49 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<2101,2114,59>",(reportCompare)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (expect) != "undefined") {_RecordType("<2115,2121,59>",(expect)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (actual) != "undefined") {_RecordType("<2123,2129,59>",(actual)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (status) != "undefined") {_RecordType("<2131,2137,59>",(status)); Inst52++; } } catch(e) {}
  reportCompare(expect, actual, status);
}

try { if (Inst53 <= 1000 && typeof (positive) != "undefined") {_RecordType("<2152,2160,62>",(positive)); Inst53++; } } catch(e) {}
function positive(n) {
try { if (Inst54 <= 1000 && typeof (n) != "undefined") {_RecordType("<2161,2162,62>",(n)); Inst54++; } } catch(e) {}
try { if (Inst55 <= 1000 && typeof (n) != "undefined") {_RecordType("<2179,2180,63>",(n)); Inst55++; } } catch(e) {}
  return 1 / n > 0;
}

try { if (Inst56 <= 1000 && typeof (getStatus) != "undefined") {_RecordType("<2198,2207,66>",(getStatus)); Inst56++; } } catch(e) {}
function getStatus(i) {
try { if (Inst57 <= 1000 && typeof (i) != "undefined") {_RecordType("<2208,2209,66>",(i)); Inst57++; } } catch(e) {}
try { if (Inst58 <= 1000 && typeof (statprefix) != "undefined") {_RecordType("<2222,2232,67>",(statprefix)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (positive) != "undefined") {_RecordType("<2236,2244,67>",(positive)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (i) != "undefined") {_RecordType("<2245,2246,67>",(i)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (i) != "undefined") {_RecordType("<2250,2251,67>",(i)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (i) != "undefined") {_RecordType("<2261,2262,67>",(i)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (statsuffix) != "undefined") {_RecordType("<2266,2276,67>",(statsuffix)); Inst63++; } } catch(e) {}
  return statprefix + (positive(i) ? i : "-" + -i) + statsuffix;
}

