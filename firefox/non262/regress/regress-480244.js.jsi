var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* -*- indent-tabs-mode: nil; js-indent-level: 2 -*- */

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
//-----------------------------------------------------------------------------
var BUGNUMBER = 480244;
try { if (Inst0 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<346,355,7>",(BUGNUMBER)); Inst0++; } } catch(e) {}
var summary = 'Do not assert: isInt32(*p)';
try { if (Inst1 <= 1000 && typeof (summary) != "undefined") {_RecordType("<370,377,8>",(summary)); Inst1++; } } catch(e) {}
var actual = '';
try { if (Inst2 <= 1000 && typeof (actual) != "undefined") {_RecordType("<414,420,9>",(actual)); Inst2++; } } catch(e) {}
var expect = ''; //-----------------------------------------------------------------------------
try { if (Inst3 <= 1000 && typeof (expect) != "undefined") {_RecordType("<431,437,10>",(expect)); Inst3++; } } catch(e) {}

try { if (Inst4 <= 1000 && typeof (test) != "undefined") {_RecordType("<525,529,12>",(test)); Inst4++; } } catch(e) {}
test(); //-----------------------------------------------------------------------------

try { if (Inst5 <= 1000 && typeof (test) != "undefined") {_RecordType("<623,627,14>",(test)); Inst5++; } } catch(e) {}
function test() {
try { if (Inst6 <= 1000 && typeof (printBugNumber) != "undefined") {_RecordType("<634,648,15>",(printBugNumber)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<649,658,15>",(BUGNUMBER)); Inst7++; } } catch(e) {}
  printBugNumber(BUGNUMBER);
try { if (Inst8 <= 1000 && typeof (printStatus) != "undefined") {_RecordType("<663,674,16>",(printStatus)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (summary) != "undefined") {_RecordType("<675,682,16>",(summary)); Inst9++; } } catch(e) {}
  printStatus(summary);

try { if (Inst10 <= 1000 && typeof (outer) != "undefined") {_RecordType("<697,702,18>",(outer)); Inst10++; } } catch(e) {}
  function outer() {
    var v = 10.234;
try { if (Inst11 <= 1000 && typeof (v) != "undefined") {_RecordType("<715,716,19>",(v)); Inst11++; } } catch(e) {}

    for (var i = 0; i < 0xff; ++i) {
try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<741,742,21>",(i)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<748,749,21>",(i)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<760,761,21>",(i)); Inst14++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (inner) != "undefined") {_RecordType("<771,776,22>",(inner)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (v) != "undefined") {_RecordType("<777,778,22>",(v)); Inst16++; } } catch(e) {}
      inner(v);
    }
  }

  var g = 0;
try { if (Inst17 <= 1000 && typeof (g) != "undefined") {_RecordType("<798,799,26>",(g)); Inst17++; } } catch(e) {}
  var h = 0;
try { if (Inst18 <= 1000 && typeof (h) != "undefined") {_RecordType("<811,812,27>",(h)); Inst18++; } } catch(e) {}

try { if (Inst19 <= 1000 && typeof (inner) != "undefined") {_RecordType("<830,835,29>",(inner)); Inst19++; } } catch(e) {}
  function inner() {
    var v = 10;
try { if (Inst20 <= 1000 && typeof (v) != "undefined") {_RecordType("<848,849,30>",(v)); Inst20++; } } catch(e) {}

    for (var k = 0; k < 0xff; ++k) {
try { if (Inst21 <= 1000 && typeof (k) != "undefined") {_RecordType("<870,871,32>",(k)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (k) != "undefined") {_RecordType("<877,878,32>",(k)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (k) != "undefined") {_RecordType("<889,890,32>",(k)); Inst23++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (g) != "undefined") {_RecordType("<900,901,33>",(g)); Inst24++; } } catch(e) {}
      g++;

try { if (Inst25 <= 1000 && typeof (g) != "undefined") {_RecordType("<916,917,35>",(g)); Inst25++; } } catch(e) {}
      if (g & 0xff == 0xff) {
try { if (Inst26 <= 1000 && typeof (h) != "undefined") {_RecordType("<944,945,36>",(h)); Inst26++; } } catch(e) {}
        h++;
      }
    }

try { if (Inst27 <= 1000 && typeof (h) != "undefined") {_RecordType("<975,976,40>",(h)); Inst27++; } } catch(e) {}
    return h;
  }

try { if (Inst28 <= 1000 && typeof (outer) != "undefined") {_RecordType("<985,990,43>",(outer)); Inst28++; } } catch(e) {}
  outer();
try { if (Inst29 <= 1000 && typeof (print) != "undefined") {_RecordType("<996,1001,44>",(print)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (g) != "undefined") {_RecordType("<1009,1010,44>",(g)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (h) != "undefined") {_RecordType("<1021,1022,44>",(h)); Inst31++; } } catch(e) {}
  print("g=" + g + " h=" + h);
try { if (Inst32 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1027,1040,45>",(reportCompare)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1041,1047,45>",(expect)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1049,1055,45>",(actual)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (summary) != "undefined") {_RecordType("<1057,1064,45>",(summary)); Inst35++; } } catch(e) {}
  reportCompare(expect, actual, summary);
}

