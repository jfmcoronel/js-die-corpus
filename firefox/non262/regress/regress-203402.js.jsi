var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* -*- indent-tabs-mode: nil; js-indent-level: 2 -*- */

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

/*
 *
 * Date:    28 April 2003
 * SUMMARY: Testing the ternary query operator
 *
 * See http://bugzilla.mozilla.org/show_bug.cgi?id=203402
 *
 */
//-----------------------------------------------------------------------------
var UBound = 0;
try { if (Inst0 <= 1000 && typeof (UBound) != "undefined") {_RecordType("<494,500,16>",(UBound)); Inst0++; } } catch(e) {}
var BUGNUMBER = 203402;
try { if (Inst1 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<510,519,17>",(BUGNUMBER)); Inst1++; } } catch(e) {}
var summary = 'Testing the ternary query operator';
try { if (Inst2 <= 1000 && typeof (summary) != "undefined") {_RecordType("<534,541,18>",(summary)); Inst2++; } } catch(e) {}
var status = '';
try { if (Inst3 <= 1000 && typeof (status) != "undefined") {_RecordType("<586,592,19>",(status)); Inst3++; } } catch(e) {}
var statusitems = [];
try { if (Inst4 <= 1000 && typeof (statusitems) != "undefined") {_RecordType("<603,614,20>",(statusitems)); Inst4++; } } catch(e) {}
var actual = '';
try { if (Inst5 <= 1000 && typeof (actual) != "undefined") {_RecordType("<625,631,21>",(actual)); Inst5++; } } catch(e) {}
var actualvalues = [];
try { if (Inst6 <= 1000 && typeof (actualvalues) != "undefined") {_RecordType("<642,654,22>",(actualvalues)); Inst6++; } } catch(e) {}
var expect = '';
try { if (Inst7 <= 1000 && typeof (expect) != "undefined") {_RecordType("<665,671,23>",(expect)); Inst7++; } } catch(e) {}
var expectedvalues = []; // This used to crash the Rhino optimized shell -
try { if (Inst8 <= 1000 && typeof (expectedvalues) != "undefined") {_RecordType("<682,696,24>",(expectedvalues)); Inst8++; } } catch(e) {}

try { if (Inst10 <= 1000 && typeof (inSection) != "undefined") {_RecordType("<763,772,26>",(inSection)); Inst10++; } } catch(e) {}
status = inSection(1);
try { if (Inst9 <= 1000 && typeof (status) != "undefined") {_RecordType("<754,760,26>",(status)); Inst9++; } } catch(e) {}
actual = "" + (1 == 0) ? "" : "";
try { if (Inst11 <= 1000 && typeof (actual) != "undefined") {_RecordType("<777,783,27>",(actual)); Inst11++; } } catch(e) {}
expect = "";
try { if (Inst12 <= 1000 && typeof (expect) != "undefined") {_RecordType("<811,817,28>",(expect)); Inst12++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (addThis) != "undefined") {_RecordType("<824,831,29>",(addThis)); Inst13++; } } catch(e) {}
addThis(); //-----------------------------------------------------------------------------

try { if (Inst14 <= 1000 && typeof (test) != "undefined") {_RecordType("<916,920,31>",(test)); Inst14++; } } catch(e) {}
test(); //-----------------------------------------------------------------------------

try { if (Inst15 <= 1000 && typeof (addThis) != "undefined") {_RecordType("<1014,1021,33>",(addThis)); Inst15++; } } catch(e) {}
function addThis() {
try { if (Inst18 <= 1000 && typeof (status) != "undefined") {_RecordType("<1050,1056,34>",(status)); Inst18++; } } catch(e) {}
  statusitems[UBound] = status;
try { if (Inst16 <= 1000 && typeof (statusitems[UBound]) != "undefined") {_RecordType("<1028,1047,34>",(statusitems[UBound])); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (statusitems) != "undefined") {_RecordType("<1028,1039,34>",(statusitems)); Inst17++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1083,1089,35>",(actual)); Inst21++; } } catch(e) {}
  actualvalues[UBound] = actual;
try { if (Inst19 <= 1000 && typeof (actualvalues[UBound]) != "undefined") {_RecordType("<1060,1080,35>",(actualvalues[UBound])); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (actualvalues) != "undefined") {_RecordType("<1060,1072,35>",(actualvalues)); Inst20++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1118,1124,36>",(expect)); Inst24++; } } catch(e) {}
  expectedvalues[UBound] = expect;
try { if (Inst22 <= 1000 && typeof (expectedvalues[UBound]) != "undefined") {_RecordType("<1093,1115,36>",(expectedvalues[UBound])); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (expectedvalues) != "undefined") {_RecordType("<1093,1107,36>",(expectedvalues)); Inst23++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (UBound) != "undefined") {_RecordType("<1128,1134,37>",(UBound)); Inst25++; } } catch(e) {}
  UBound++;
}

try { if (Inst26 <= 1000 && typeof (test) != "undefined") {_RecordType("<1150,1154,40>",(test)); Inst26++; } } catch(e) {}
function test() {
try { if (Inst27 <= 1000 && typeof (printBugNumber) != "undefined") {_RecordType("<1161,1175,41>",(printBugNumber)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<1176,1185,41>",(BUGNUMBER)); Inst28++; } } catch(e) {}
  printBugNumber(BUGNUMBER);
try { if (Inst29 <= 1000 && typeof (printStatus) != "undefined") {_RecordType("<1190,1201,42>",(printStatus)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (summary) != "undefined") {_RecordType("<1202,1209,42>",(summary)); Inst30++; } } catch(e) {}
  printStatus(summary);

  for (var i = 0; i < UBound; i++) {
try { if (Inst31 <= 1000 && typeof (i) != "undefined") {_RecordType("<1224,1225,44>",(i)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (i) != "undefined") {_RecordType("<1231,1232,44>",(i)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (UBound) != "undefined") {_RecordType("<1235,1241,44>",(UBound)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (i) != "undefined") {_RecordType("<1243,1244,44>",(i)); Inst34++; } } catch(e) {}
try { if (Inst35 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1254,1267,45>",(reportCompare)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (expectedvalues[i]) != "undefined") {_RecordType("<1268,1285,45>",(expectedvalues[i])); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (expectedvalues) != "undefined") {_RecordType("<1268,1282,45>",(expectedvalues)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (actualvalues[i]) != "undefined") {_RecordType("<1287,1302,45>",(actualvalues[i])); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (actualvalues) != "undefined") {_RecordType("<1287,1299,45>",(actualvalues)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (statusitems[i]) != "undefined") {_RecordType("<1304,1318,45>",(statusitems[i])); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (statusitems) != "undefined") {_RecordType("<1304,1315,45>",(statusitems)); Inst41++; } } catch(e) {}
    reportCompare(expectedvalues[i], actualvalues[i], statusitems[i]);
  }
}

