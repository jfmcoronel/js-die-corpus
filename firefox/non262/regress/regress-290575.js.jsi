var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* -*- indent-tabs-mode: nil; js-indent-level: 2 -*- */

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
//-----------------------------------------------------------------------------
var BUGNUMBER = 290575;
try { if (Inst0 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<346,355,7>",(BUGNUMBER)); Inst0++; } } catch(e) {}
var summary = 'Do not crash calling function with more than 32768 arguments';
try { if (Inst1 <= 1000 && typeof (summary) != "undefined") {_RecordType("<370,377,8>",(summary)); Inst1++; } } catch(e) {}
var actual = 'No Crash';
try { if (Inst2 <= 1000 && typeof (actual) != "undefined") {_RecordType("<448,454,9>",(actual)); Inst2++; } } catch(e) {}
var expect = 'No Crash';
try { if (Inst3 <= 1000 && typeof (expect) != "undefined") {_RecordType("<473,479,10>",(expect)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (printBugNumber) != "undefined") {_RecordType("<494,508,11>",(printBugNumber)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<509,518,11>",(BUGNUMBER)); Inst5++; } } catch(e) {}
printBugNumber(BUGNUMBER);
try { if (Inst6 <= 1000 && typeof (printStatus) != "undefined") {_RecordType("<521,532,12>",(printStatus)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (summary) != "undefined") {_RecordType("<533,540,12>",(summary)); Inst7++; } } catch(e) {}
printStatus(summary);

try { if (Inst8 <= 1000 && typeof (crashMe) != "undefined") {_RecordType("<553,560,14>",(crashMe)); Inst8++; } } catch(e) {}
function crashMe(n) {
try { if (Inst9 <= 1000 && typeof (n) != "undefined") {_RecordType("<561,562,14>",(n)); Inst9++; } } catch(e) {}
  var nasty, fn;
try { if (Inst10 <= 1000 && typeof (nasty) != "undefined") {_RecordType("<572,577,15>",(nasty)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (fn) != "undefined") {_RecordType("<579,581,15>",(fn)); Inst11++; } } catch(e) {}
  nasty = [];
try { if (Inst12 <= 1000 && typeof (nasty) != "undefined") {_RecordType("<585,590,16>",(nasty)); Inst12++; } } catch(e) {}

try { if (Inst13 <= 1000 && typeof (n) != "undefined") {_RecordType("<607,608,18>",(n)); Inst13++; } } catch(e) {}
  while (n--) {
try { if (Inst14 <= 1000 && typeof (nasty.push) != "undefined") {_RecordType("<618,628,19>",(nasty.push)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (nasty) != "undefined") {_RecordType("<618,623,19>",(nasty)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (n) != "undefined") {_RecordType("<635,636,19>",(n)); Inst16++; } } catch(e) {}
    nasty.push("a" + n);
  } // Function arguments


try { if (Inst17 <= 1000 && typeof (nasty.push) != "undefined") {_RecordType("<669,679,23>",(nasty.push)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (nasty) != "undefined") {_RecordType("<669,674,23>",(nasty)); Inst18++; } } catch(e) {}
  nasty.push("void 0"); // Function body

try { if (Inst20 <= 1000 && typeof (Function.apply) != "undefined") {_RecordType("<716,730,25>",(Function.apply)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Function) != "undefined") {_RecordType("<716,724,25>",(Function)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (nasty) != "undefined") {_RecordType("<737,742,25>",(nasty)); Inst22++; } } catch(e) {}
  fn = Function.apply(null, nasty);
try { if (Inst19 <= 1000 && typeof (fn) != "undefined") {_RecordType("<711,713,25>",(fn)); Inst19++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (fn.toString) != "undefined") {_RecordType("<747,758,26>",(fn.toString)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (fn) != "undefined") {_RecordType("<747,749,26>",(fn)); Inst24++; } } catch(e) {}
  fn.toString();
}

try { if (Inst25 <= 1000 && typeof (printStatus) != "undefined") {_RecordType("<765,776,29>",(printStatus)); Inst25++; } } catch(e) {}
printStatus('crashMe(0x8001)');
try { if (Inst26 <= 1000 && typeof (crashMe) != "undefined") {_RecordType("<797,804,30>",(crashMe)); Inst26++; } } catch(e) {}
crashMe(0x8001);
try { if (Inst27 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<814,827,31>",(reportCompare)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (expect) != "undefined") {_RecordType("<828,834,31>",(expect)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (actual) != "undefined") {_RecordType("<836,842,31>",(actual)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (summary) != "undefined") {_RecordType("<844,851,31>",(summary)); Inst30++; } } catch(e) {}
reportCompare(expect, actual, summary);

try { if (Inst31 <= 1000 && typeof (crashMe2) != "undefined") {_RecordType("<864,872,33>",(crashMe2)); Inst31++; } } catch(e) {}
function crashMe2(n) {
try { if (Inst32 <= 1000 && typeof (n) != "undefined") {_RecordType("<873,874,33>",(n)); Inst32++; } } catch(e) {}
  var nasty = [],
      fn;
try { if (Inst33 <= 1000 && typeof (nasty) != "undefined") {_RecordType("<884,889,34>",(nasty)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (fn) != "undefined") {_RecordType("<902,904,35>",(fn)); Inst34++; } } catch(e) {}

try { if (Inst35 <= 1000 && typeof (n) != "undefined") {_RecordType("<916,917,37>",(n)); Inst35++; } } catch(e) {}
  while (n--) {
try { if (Inst38 <= 1000 && typeof (n) != "undefined") {_RecordType("<944,945,38>",(n)); Inst38++; } } catch(e) {}
    nasty[n] = "a" + n;
try { if (Inst36 <= 1000 && typeof (nasty[n]) != "undefined") {_RecordType("<927,935,38>",(nasty[n])); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (nasty) != "undefined") {_RecordType("<927,932,38>",(nasty)); Inst37++; } } catch(e) {}
  }

try { if (Inst40 <= 1000 && typeof (Function) != "undefined") {_RecordType("<959,967,41>",(Function)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (nasty.join) != "undefined") {_RecordType("<968,978,41>",(nasty.join)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (nasty) != "undefined") {_RecordType("<968,973,41>",(nasty)); Inst42++; } } catch(e) {}
  fn = Function(nasty.join(), "void 0");
try { if (Inst39 <= 1000 && typeof (fn) != "undefined") {_RecordType("<954,956,41>",(fn)); Inst39++; } } catch(e) {}
try { if (Inst43 <= 1000 && typeof (fn.toString) != "undefined") {_RecordType("<995,1006,42>",(fn.toString)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (fn) != "undefined") {_RecordType("<995,997,42>",(fn)); Inst44++; } } catch(e) {}
  fn.toString();
}

try { if (Inst45 <= 1000 && typeof (printStatus) != "undefined") {_RecordType("<1013,1024,45>",(printStatus)); Inst45++; } } catch(e) {}
printStatus('crashMe2(0x10000)');
summary = 'No Syntax Error Function to string when more than 65536 arguments';
try { if (Inst46 <= 1000 && typeof (summary) != "undefined") {_RecordType("<1047,1054,46>",(summary)); Inst46++; } } catch(e) {}
expect = 'Error';
try { if (Inst47 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1126,1132,47>",(expect)); Inst47++; } } catch(e) {}

try { if (Inst54 <= 1000 && typeof (e) != "undefined") {_RecordType("<1246,1247,53>",(e)); Inst54++; } } catch(e) {}
try {
try { if (Inst48 <= 1000 && typeof (crashMe2) != "undefined") {_RecordType("<1153,1161,50>",(crashMe2)); Inst48++; } } catch(e) {}
  crashMe2(0x10000);
  actual = 'No Error';
try { if (Inst49 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1174,1180,51>",(actual)); Inst49++; } } catch(e) {}
try { if (Inst50 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1197,1210,52>",(reportCompare)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1211,1217,52>",(expect)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1219,1225,52>",(actual)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (summary) != "undefined") {_RecordType("<1227,1234,52>",(summary)); Inst53++; } } catch(e) {}
  reportCompare(expect, actual, summary);
} catch (e) {
  actual = 'Error';
try { if (Inst55 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1253,1259,54>",(actual)); Inst55++; } } catch(e) {}
try { if (Inst56 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1273,1286,55>",(reportCompare)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1287,1293,55>",(expect)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1295,1301,55>",(actual)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (summary) != "undefined") {_RecordType("<1303,1310,55>",(summary)); Inst59++; } } catch(e) {}
  reportCompare(expect, actual, summary);
  expect = 'SyntaxError';
try { if (Inst60 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1315,1321,56>",(expect)); Inst60++; } } catch(e) {}
try { if (Inst62 <= 1000 && typeof (e.name) != "undefined") {_RecordType("<1350,1356,57>",(e.name)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (e) != "undefined") {_RecordType("<1350,1351,57>",(e)); Inst63++; } } catch(e) {}
  actual = e.name;
try { if (Inst61 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1341,1347,57>",(actual)); Inst61++; } } catch(e) {}
try { if (Inst64 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1360,1373,58>",(reportCompare)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1374,1380,58>",(expect)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1382,1388,58>",(actual)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (summary) != "undefined") {_RecordType("<1390,1397,58>",(summary)); Inst67++; } } catch(e) {}
  reportCompare(expect, actual, summary);
}

