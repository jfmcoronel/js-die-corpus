var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// |reftest| skip-if(!xulRuntime.shell) -- needs grayRoot

/* -*- indent-tabs-mode: nil; js-indent-level: 2 -*- */

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
var BUGNUMBER = 1463421;
try { if (Inst0 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<325,334,8>",(BUGNUMBER)); Inst0++; } } catch(e) {}
var summary = 'rogue read barrier';
try { if (Inst1 <= 1000 && typeof (summary) != "undefined") {_RecordType("<350,357,9>",(summary)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (printBugNumber) != "undefined") {_RecordType("<382,396,10>",(printBugNumber)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<397,406,10>",(BUGNUMBER)); Inst3++; } } catch(e) {}
printBugNumber(BUGNUMBER);
try { if (Inst4 <= 1000 && typeof (printStatus) != "undefined") {_RecordType("<409,420,11>",(printStatus)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (summary) != "undefined") {_RecordType("<421,428,11>",(summary)); Inst5++; } } catch(e) {}
printStatus(summary);
var exc;
try { if (Inst6 <= 1000 && typeof (exc) != "undefined") {_RecordType("<435,438,12>",(exc)); Inst6++; } } catch(e) {}

try { if (Inst16 <= 1000 && typeof (e) != "undefined") {_RecordType("<628,629,28>",(e)); Inst16++; } } catch(e) {}
try {
try { if (Inst8 <= 1000 && typeof (WeakMap) != "undefined") {_RecordType("<468,475,15>",(WeakMap)); Inst8++; } } catch(e) {}
  var __v_1173 = new WeakMap();
try { if (Inst7 <= 1000 && typeof (__v_1173) != "undefined") {_RecordType("<453,461,15>",(__v_1173)); Inst7++; } } catch(e) {}

try { if (Inst11 <= 1000 && typeof (__v_1173) != "undefined") {_RecordType("<499,507,17>",(__v_1173)); Inst11++; } } catch(e) {}
  grayRoot().map = __v_1173;
try { if (Inst9 <= 1000 && typeof (grayRoot().map) != "undefined") {_RecordType("<482,496,17>",(grayRoot().map)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (grayRoot) != "undefined") {_RecordType("<482,490,17>",(grayRoot)); Inst10++; } } catch(e) {}
  __v_1173 = null;
try { if (Inst12 <= 1000 && typeof (__v_1173) != "undefined") {_RecordType("<511,519,18>",(__v_1173)); Inst12++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (gczeal) != "undefined") {_RecordType("<530,536,19>",(gczeal)); Inst13++; } } catch(e) {}
  gczeal(13, 7);

try { if (Inst14 <= 1000 && typeof (isNaN) != "undefined") {_RecordType("<553,558,21>",(isNaN)); Inst14++; } } catch(e) {}
  if (!isNaN()) {
    ;
  }

try { if (Inst15 <= 1000 && typeof (__f_252) != "undefined") {_RecordType("<587,594,25>",(__f_252)); Inst15++; } } catch(e) {}
  (function __f_252() {
    ({})();
  })();
} catch (e) {
try { if (Inst18 <= 1000 && typeof (e) != "undefined") {_RecordType("<641,642,29>",(e)); Inst18++; } } catch(e) {}
  exc = e;
try { if (Inst17 <= 1000 && typeof (exc) != "undefined") {_RecordType("<635,638,29>",(exc)); Inst17++; } } catch(e) {}
}

try { if (Inst19 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<658,671,32>",(reportCompare)); Inst19++; } } catch(e) {}
if (typeof reportCompare == 'function') {
try { if (Inst20 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<691,704,33>",(reportCompare)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (exc) != "undefined") {_RecordType("<710,713,33>",(exc)); Inst21++; } } catch(e) {}
  reportCompare("" + exc, "TypeError: ({}) is not a function", "ok");
}

