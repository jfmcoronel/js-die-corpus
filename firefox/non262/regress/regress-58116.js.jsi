var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// |reftest| skip-if(this.hasOwnProperty("Intl")) -- Requires inaccurate historic time zone data.

/* -*- indent-tabs-mode: nil; js-indent-level: 2 -*- */

/*
 * Any copyright is dedicated to the Public Domain.
 * http://creativecommons.org/licenses/publicdomain/
 * Contributor: Bob Clary
 */
//-----------------------------------------------------------------------------
var BUGNUMBER = 58116;
try { if (Inst0 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<378,387,11>",(BUGNUMBER)); Inst0++; } } catch(e) {}
var summary = 'Compute Daylight savings time correctly regardless of year';
try { if (Inst1 <= 1000 && typeof (summary) != "undefined") {_RecordType("<401,408,12>",(summary)); Inst1++; } } catch(e) {}
var actual = '';
try { if (Inst2 <= 1000 && typeof (actual) != "undefined") {_RecordType("<477,483,13>",(actual)); Inst2++; } } catch(e) {}
var expect = '';
try { if (Inst3 <= 1000 && typeof (expect) != "undefined") {_RecordType("<494,500,14>",(expect)); Inst3++; } } catch(e) {}
var status;
try { if (Inst4 <= 1000 && typeof (status) != "undefined") {_RecordType("<511,517,15>",(status)); Inst4++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (printBugNumber) != "undefined") {_RecordType("<519,533,16>",(printBugNumber)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<534,543,16>",(BUGNUMBER)); Inst6++; } } catch(e) {}
printBugNumber(BUGNUMBER);
try { if (Inst7 <= 1000 && typeof (printStatus) != "undefined") {_RecordType("<546,557,17>",(printStatus)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (summary) != "undefined") {_RecordType("<558,565,17>",(summary)); Inst8++; } } catch(e) {}
printStatus(summary);
try { if (Inst10 <= 1000 && typeof (new Date(2005, 7, 1).getTimezoneOffset) != "undefined") {_RecordType("<577,615,18>",(new Date(2005, 7, 1).getTimezoneOffset)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Date) != "undefined") {_RecordType("<581,585,18>",(Date)); Inst11++; } } catch(e) {}
expect = new Date(2005, 7, 1).getTimezoneOffset();
try { if (Inst9 <= 1000 && typeof (expect) != "undefined") {_RecordType("<568,574,18>",(expect)); Inst9++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (summary) != "undefined") {_RecordType("<628,635,19>",(summary)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (inSection) != "undefined") {_RecordType("<644,653,19>",(inSection)); Inst14++; } } catch(e) {}
status = summary + ' ' + inSection(1) + ' 1970-07-1 ';
try { if (Inst12 <= 1000 && typeof (status) != "undefined") {_RecordType("<619,625,19>",(status)); Inst12++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (new Date(1970, 7, 1).getTimezoneOffset) != "undefined") {_RecordType("<683,721,20>",(new Date(1970, 7, 1).getTimezoneOffset)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Date) != "undefined") {_RecordType("<687,691,20>",(Date)); Inst17++; } } catch(e) {}
actual = new Date(1970, 7, 1).getTimezoneOffset();
try { if (Inst15 <= 1000 && typeof (actual) != "undefined") {_RecordType("<674,680,20>",(actual)); Inst15++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<725,738,21>",(reportCompare)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (expect) != "undefined") {_RecordType("<739,745,21>",(expect)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (actual) != "undefined") {_RecordType("<747,753,21>",(actual)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (status) != "undefined") {_RecordType("<755,761,21>",(status)); Inst21++; } } catch(e) {}
reportCompare(expect, actual, status);
try { if (Inst23 <= 1000 && typeof (summary) != "undefined") {_RecordType("<773,780,22>",(summary)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (inSection) != "undefined") {_RecordType("<789,798,22>",(inSection)); Inst24++; } } catch(e) {}
status = summary + ' ' + inSection(2) + ' 1965-07-1 ';
try { if (Inst22 <= 1000 && typeof (status) != "undefined") {_RecordType("<764,770,22>",(status)); Inst22++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (new Date(1965, 7, 1).getTimezoneOffset) != "undefined") {_RecordType("<828,866,23>",(new Date(1965, 7, 1).getTimezoneOffset)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (Date) != "undefined") {_RecordType("<832,836,23>",(Date)); Inst27++; } } catch(e) {}
actual = new Date(1965, 7, 1).getTimezoneOffset();
try { if (Inst25 <= 1000 && typeof (actual) != "undefined") {_RecordType("<819,825,23>",(actual)); Inst25++; } } catch(e) {}
try { if (Inst28 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<870,883,24>",(reportCompare)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (expect) != "undefined") {_RecordType("<884,890,24>",(expect)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (actual) != "undefined") {_RecordType("<892,898,24>",(actual)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (status) != "undefined") {_RecordType("<900,906,24>",(status)); Inst31++; } } catch(e) {}
reportCompare(expect, actual, status);
try { if (Inst33 <= 1000 && typeof (summary) != "undefined") {_RecordType("<918,925,25>",(summary)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (inSection) != "undefined") {_RecordType("<934,943,25>",(inSection)); Inst34++; } } catch(e) {}
status = summary + ' ' + inSection(3) + ' 0000-07-1 ';
try { if (Inst32 <= 1000 && typeof (status) != "undefined") {_RecordType("<909,915,25>",(status)); Inst32++; } } catch(e) {}
try { if (Inst36 <= 1000 && typeof (new Date(0, 7, 1).getTimezoneOffset) != "undefined") {_RecordType("<973,1008,26>",(new Date(0, 7, 1).getTimezoneOffset)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (Date) != "undefined") {_RecordType("<977,981,26>",(Date)); Inst37++; } } catch(e) {}
actual = new Date(0, 7, 1).getTimezoneOffset();
try { if (Inst35 <= 1000 && typeof (actual) != "undefined") {_RecordType("<964,970,26>",(actual)); Inst35++; } } catch(e) {}
try { if (Inst38 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1012,1025,27>",(reportCompare)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1026,1032,27>",(expect)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1034,1040,27>",(actual)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (status) != "undefined") {_RecordType("<1042,1048,27>",(status)); Inst41++; } } catch(e) {}
reportCompare(expect, actual, status);

