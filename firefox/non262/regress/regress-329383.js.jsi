var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* -*- indent-tabs-mode: nil; js-indent-level: 2 -*- */

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
//-----------------------------------------------------------------------------
var BUGNUMBER = 329383;
try { if (Inst0 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<346,355,7>",(BUGNUMBER)); Inst0++; } } catch(e) {}
var summary = 'Math copysign issues';
try { if (Inst1 <= 1000 && typeof (summary) != "undefined") {_RecordType("<370,377,8>",(summary)); Inst1++; } } catch(e) {}
var actual = '';
try { if (Inst2 <= 1000 && typeof (actual) != "undefined") {_RecordType("<408,414,9>",(actual)); Inst2++; } } catch(e) {}
var expect = '';
try { if (Inst3 <= 1000 && typeof (expect) != "undefined") {_RecordType("<425,431,10>",(expect)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (printBugNumber) != "undefined") {_RecordType("<438,452,11>",(printBugNumber)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<453,462,11>",(BUGNUMBER)); Inst5++; } } catch(e) {}
printBugNumber(BUGNUMBER);
try { if (Inst6 <= 1000 && typeof (printStatus) != "undefined") {_RecordType("<465,476,12>",(printStatus)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (summary) != "undefined") {_RecordType("<477,484,12>",(summary)); Inst7++; } } catch(e) {}
printStatus(summary);
try { if (Inst9 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<502,510,13>",(Infinity)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Math.PI) != "undefined") {_RecordType("<563,570,13>",(Math.PI)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Math) != "undefined") {_RecordType("<563,567,13>",(Math)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Math.PI) != "undefined") {_RecordType("<663,670,13>",(Math.PI)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Math) != "undefined") {_RecordType("<663,667,13>",(Math)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<715,723,13>",(Infinity)); Inst14++; } } catch(e) {}
var inputs = [-Infinity, -10.01, -9.01, -8.01, -7.01, -6.01, -5.01, -4.01, -Math.PI, -3.01, -2.01, -1.01, -0.5, -0.49, -0.01, -0, 0, +0, 0.01, 0.49, 0.50, 0, 1.01, 2.01, 3.01, Math.PI, 4.01, 5.01, 6.01, 7.01, 8.01, 9.01, 10.01, Infinity];
try { if (Inst8 <= 1000 && typeof (inputs) != "undefined") {_RecordType("<491,497,13>",(inputs)); Inst8++; } } catch(e) {}
var iinput;
try { if (Inst15 <= 1000 && typeof (iinput) != "undefined") {_RecordType("<730,736,14>",(iinput)); Inst15++; } } catch(e) {}

for (iinput = 0; iinput < inputs.length; iinput++) {
try { if (Inst16 <= 1000 && typeof (iinput) != "undefined") {_RecordType("<744,750,16>",(iinput)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (iinput) != "undefined") {_RecordType("<756,762,16>",(iinput)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (inputs.length) != "undefined") {_RecordType("<765,778,16>",(inputs.length)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (inputs) != "undefined") {_RecordType("<765,771,16>",(inputs)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (iinput) != "undefined") {_RecordType("<780,786,16>",(iinput)); Inst20++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (inputs[iinput]) != "undefined") {_RecordType("<806,820,17>",(inputs[iinput])); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (inputs) != "undefined") {_RecordType("<806,812,17>",(inputs)); Inst23++; } } catch(e) {}
  var input = inputs[iinput];
try { if (Inst21 <= 1000 && typeof (input) != "undefined") {_RecordType("<798,803,17>",(input)); Inst21++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<824,837,18>",(reportCompare)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Math.round) != "undefined") {_RecordType("<838,848,18>",(Math.round)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Math) != "undefined") {_RecordType("<838,842,18>",(Math)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (input) != "undefined") {_RecordType("<849,854,18>",(input)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (emulateRound) != "undefined") {_RecordType("<857,869,18>",(emulateRound)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (input) != "undefined") {_RecordType("<870,875,18>",(input)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (summary) != "undefined") {_RecordType("<878,885,18>",(summary)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (input) != "undefined") {_RecordType("<906,911,18>",(input)); Inst31++; } } catch(e) {}
  reportCompare(Math.round(input), emulateRound(input), summary + ': Math.round(' + input + ')');
}

try { if (Inst32 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<923,936,21>",(reportCompare)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (isNaN) != "undefined") {_RecordType("<937,942,21>",(isNaN)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (Math.round) != "undefined") {_RecordType("<943,953,21>",(Math.round)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (Math) != "undefined") {_RecordType("<943,947,21>",(Math)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<954,957,21>",(NaN)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (isNaN) != "undefined") {_RecordType("<961,966,21>",(isNaN)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (emulateRound) != "undefined") {_RecordType("<967,979,21>",(emulateRound)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<980,983,21>",(NaN)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (summary) != "undefined") {_RecordType("<987,994,21>",(summary)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (input) != "undefined") {_RecordType("<1015,1020,21>",(input)); Inst41++; } } catch(e) {}
reportCompare(isNaN(Math.round(NaN)), isNaN(emulateRound(NaN)), summary + ': Math.round(' + input + ')');

try { if (Inst42 <= 1000 && typeof (emulateRound) != "undefined") {_RecordType("<1039,1051,23>",(emulateRound)); Inst42++; } } catch(e) {}
function emulateRound(x) {
try { if (Inst43 <= 1000 && typeof (x) != "undefined") {_RecordType("<1052,1053,23>",(x)); Inst43++; } } catch(e) {}
try { if (Inst44 <= 1000 && typeof (isFinite) != "undefined") {_RecordType("<1064,1072,24>",(isFinite)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (x) != "undefined") {_RecordType("<1073,1074,24>",(x)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (x) != "undefined") {_RecordType("<1079,1080,24>",(x)); Inst46++; } } catch(e) {}
  if (!isFinite(x) || x === 0) {
try { if (Inst47 <= 1000 && typeof (x) != "undefined") {_RecordType("<1101,1102,25>",(x)); Inst47++; } } catch(e) {}
    return x;
  }

try { if (Inst48 <= 1000 && typeof (x) != "undefined") {_RecordType("<1123,1124,28>",(x)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (x) != "undefined") {_RecordType("<1128,1129,28>",(x)); Inst49++; } } catch(e) {}
  if (-0.5 <= x && x < 0) {
    return -0;
  }

try { if (Inst50 <= 1000 && typeof (Math.floor) != "undefined") {_RecordType("<1166,1176,32>",(Math.floor)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1166,1170,32>",(Math)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (x) != "undefined") {_RecordType("<1177,1178,32>",(x)); Inst52++; } } catch(e) {}
  return Math.floor(x + 0.5);
}

var z;
try { if (Inst53 <= 1000 && typeof (z) != "undefined") {_RecordType("<1194,1195,35>",(z)); Inst53++; } } catch(e) {}
try { if (Inst55 <= 1000 && typeof (Math.min) != "undefined") {_RecordType("<1201,1209,36>",(Math.min)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1201,1205,36>",(Math)); Inst56++; } } catch(e) {}
z = Math.min(-0, 0);
try { if (Inst54 <= 1000 && typeof (z) != "undefined") {_RecordType("<1197,1198,36>",(z)); Inst54++; } } catch(e) {}
try { if (Inst57 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1218,1231,37>",(reportCompare)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (Math.PI) != "undefined") {_RecordType("<1233,1240,37>",(Math.PI)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1233,1237,37>",(Math)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (Math.atan2) != "undefined") {_RecordType("<1242,1252,37>",(Math.atan2)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1242,1246,37>",(Math)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (z) != "undefined") {_RecordType("<1253,1254,37>",(z)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (z) != "undefined") {_RecordType("<1256,1257,37>",(z)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (summary) != "undefined") {_RecordType("<1260,1267,37>",(summary)); Inst64++; } } catch(e) {}
reportCompare(-Math.PI, Math.atan2(z, z), summary + ': Math.atan2(-0, -0)');
try { if (Inst65 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1295,1308,38>",(reportCompare)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<1310,1318,38>",(Infinity)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (z) != "undefined") {_RecordType("<1324,1325,38>",(z)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (summary) != "undefined") {_RecordType("<1327,1334,38>",(summary)); Inst68++; } } catch(e) {}
reportCompare(-Infinity, 1 / z, summary + ': 1/-0');
try { if (Inst70 <= 1000 && typeof (Math.max) != "undefined") {_RecordType("<1352,1360,39>",(Math.max)); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1352,1356,39>",(Math)); Inst71++; } } catch(e) {}
z = Math.max(-0, 0);
try { if (Inst69 <= 1000 && typeof (z) != "undefined") {_RecordType("<1348,1349,39>",(z)); Inst69++; } } catch(e) {}
try { if (Inst72 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1369,1382,40>",(reportCompare)); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (Math.atan2) != "undefined") {_RecordType("<1386,1396,40>",(Math.atan2)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1386,1390,40>",(Math)); Inst74++; } } catch(e) {}try { if (Inst75 <= 1000 && typeof (z) != "undefined") {_RecordType("<1397,1398,40>",(z)); Inst75++; } } catch(e) {}try { if (Inst76 <= 1000 && typeof (z) != "undefined") {_RecordType("<1400,1401,40>",(z)); Inst76++; } } catch(e) {}try { if (Inst77 <= 1000 && typeof (summary) != "undefined") {_RecordType("<1404,1411,40>",(summary)); Inst77++; } } catch(e) {}
reportCompare(0, Math.atan2(z, z), summary + ': Math.atan2(0, 0)');
try { if (Inst78 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1437,1450,41>",(reportCompare)); Inst78++; } } catch(e) {}try { if (Inst79 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<1451,1459,41>",(Infinity)); Inst79++; } } catch(e) {}try { if (Inst80 <= 1000 && typeof (z) != "undefined") {_RecordType("<1465,1466,41>",(z)); Inst80++; } } catch(e) {}try { if (Inst81 <= 1000 && typeof (summary) != "undefined") {_RecordType("<1468,1475,41>",(summary)); Inst81++; } } catch(e) {}
reportCompare(Infinity, 1 / z, summary + ': 1/0');

