var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/*
 * Any copyright is dedicated to the Public Domain.
 * http://creativecommons.org/licenses/publicdomain/
 * Contributor: Jason Orendorff
 */
var o = {
  f: function () {
try { if (Inst1 <= 1000 && typeof (o.g) != "undefined") {_RecordType("<184,187,8>",(o.g)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (o) != "undefined") {_RecordType("<184,185,8>",(o)); Inst2++; } } catch(e) {}
    return o.g();
  },
  g: function () {
try { if (Inst3 <= 1000 && typeof (arguments.callee.caller) != "undefined") {_RecordType("<226,249,11>",(arguments.callee.caller)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (arguments.callee) != "undefined") {_RecordType("<226,242,11>",(arguments.callee)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<226,235,11>",(arguments)); Inst5++; } } catch(e) {}
    return arguments.callee.caller;
  }
};
try { if (Inst0 <= 1000 && typeof (o) != "undefined") {_RecordType("<148,149,6>",(o)); Inst0++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (o.f) != "undefined") {_RecordType("<266,269,14>",(o.f)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (o) != "undefined") {_RecordType("<266,267,14>",(o)); Inst8++; } } catch(e) {}
var c = o.f();
try { if (Inst6 <= 1000 && typeof (c) != "undefined") {_RecordType("<262,263,14>",(c)); Inst6++; } } catch(e) {}
var i = 'f';
try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<277,278,15>",(i)); Inst9++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (o[i]) != "undefined") {_RecordType("<294,298,16>",(o[i])); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (o) != "undefined") {_RecordType("<294,295,16>",(o)); Inst12++; } } catch(e) {}
var d = o[i]();
try { if (Inst10 <= 1000 && typeof (d) != "undefined") {_RecordType("<290,291,16>",(d)); Inst10++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<302,315,17>",(reportCompare)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (c) != "undefined") {_RecordType("<322,323,17>",(c)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (o.f) != "undefined") {_RecordType("<328,331,17>",(o.f)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (o) != "undefined") {_RecordType("<328,329,17>",(o)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (d) != "undefined") {_RecordType("<335,336,17>",(d)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (o.f) != "undefined") {_RecordType("<341,344,17>",(o.f)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (o) != "undefined") {_RecordType("<341,342,17>",(o)); Inst19++; } } catch(e) {}
reportCompare(true, c === o.f && d === o.f(), "");

