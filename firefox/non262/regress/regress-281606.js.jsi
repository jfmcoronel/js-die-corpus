var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* -*- indent-tabs-mode: nil; js-indent-level: 2 -*- */

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
//-----------------------------------------------------------------------------
var BUGNUMBER = 281606;
try { if (Inst0 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<346,355,7>",(BUGNUMBER)); Inst0++; } } catch(e) {}
var summary = 'l instanceof r throws TypeError if r does not support [[HasInstance]]';
try { if (Inst1 <= 1000 && typeof (summary) != "undefined") {_RecordType("<370,377,8>",(summary)); Inst1++; } } catch(e) {}
var actual = '';
try { if (Inst2 <= 1000 && typeof (actual) != "undefined") {_RecordType("<457,463,9>",(actual)); Inst2++; } } catch(e) {}
var expect = '';
try { if (Inst3 <= 1000 && typeof (expect) != "undefined") {_RecordType("<474,480,10>",(expect)); Inst3++; } } catch(e) {}
var status;
try { if (Inst4 <= 1000 && typeof (status) != "undefined") {_RecordType("<491,497,11>",(status)); Inst4++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (printBugNumber) != "undefined") {_RecordType("<499,513,12>",(printBugNumber)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<514,523,12>",(BUGNUMBER)); Inst6++; } } catch(e) {}
printBugNumber(BUGNUMBER);
try { if (Inst7 <= 1000 && typeof (printStatus) != "undefined") {_RecordType("<526,537,13>",(printStatus)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (summary) != "undefined") {_RecordType("<538,545,13>",(summary)); Inst8++; } } catch(e) {}
printStatus(summary);
var o = {};
try { if (Inst9 <= 1000 && typeof (o) != "undefined") {_RecordType("<552,553,14>",(o)); Inst9++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (summary) != "undefined") {_RecordType("<569,576,15>",(summary)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (inSection) != "undefined") {_RecordType("<585,594,15>",(inSection)); Inst12++; } } catch(e) {}
status = summary + ' ' + inSection(1) + ' o instanceof Math ';
try { if (Inst10 <= 1000 && typeof (status) != "undefined") {_RecordType("<560,566,15>",(status)); Inst10++; } } catch(e) {}
expect = 'TypeError';
try { if (Inst13 <= 1000 && typeof (expect) != "undefined") {_RecordType("<623,629,16>",(expect)); Inst13++; } } catch(e) {}

try { if (Inst17 <= 1000 && typeof (e) != "undefined") {_RecordType("<722,723,24>",(e)); Inst17++; } } catch(e) {}
try {
try { if (Inst14 <= 1000 && typeof (o) != "undefined") {_RecordType("<658,659,19>",(o)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Math) != "undefined") {_RecordType("<671,675,19>",(Math)); Inst15++; } } catch(e) {}
  if (o instanceof Math) {
    ;
  }

  actual = 'No Error';
try { if (Inst16 <= 1000 && typeof (actual) != "undefined") {_RecordType("<692,698,23>",(actual)); Inst16++; } } catch(e) {}
} catch (e) {
try { if (Inst19 <= 1000 && typeof (e.name) != "undefined") {_RecordType("<738,744,25>",(e.name)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (e) != "undefined") {_RecordType("<738,739,25>",(e)); Inst20++; } } catch(e) {}
  actual = e.name;
try { if (Inst18 <= 1000 && typeof (actual) != "undefined") {_RecordType("<729,735,25>",(actual)); Inst18++; } } catch(e) {}
}

try { if (Inst21 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<749,762,28>",(reportCompare)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (expect) != "undefined") {_RecordType("<763,769,28>",(expect)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (actual) != "undefined") {_RecordType("<771,777,28>",(actual)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (status) != "undefined") {_RecordType("<779,785,28>",(status)); Inst24++; } } catch(e) {}
reportCompare(expect, actual, status);
try { if (Inst26 <= 1000 && typeof (summary) != "undefined") {_RecordType("<797,804,29>",(summary)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (inSection) != "undefined") {_RecordType("<813,822,29>",(inSection)); Inst27++; } } catch(e) {}
status = summary + ' ' + inSection(2) + ' o instanceof o ';
try { if (Inst25 <= 1000 && typeof (status) != "undefined") {_RecordType("<788,794,29>",(status)); Inst25++; } } catch(e) {}
expect = 'TypeError';
try { if (Inst28 <= 1000 && typeof (expect) != "undefined") {_RecordType("<848,854,30>",(expect)); Inst28++; } } catch(e) {}

try { if (Inst32 <= 1000 && typeof (e) != "undefined") {_RecordType("<944,945,38>",(e)); Inst32++; } } catch(e) {}
try {
try { if (Inst29 <= 1000 && typeof (o) != "undefined") {_RecordType("<883,884,33>",(o)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (o) != "undefined") {_RecordType("<896,897,33>",(o)); Inst30++; } } catch(e) {}
  if (o instanceof o) {
    ;
  }

  actual = 'No Error';
try { if (Inst31 <= 1000 && typeof (actual) != "undefined") {_RecordType("<914,920,37>",(actual)); Inst31++; } } catch(e) {}
} catch (e) {
try { if (Inst34 <= 1000 && typeof (e.name) != "undefined") {_RecordType("<960,966,39>",(e.name)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (e) != "undefined") {_RecordType("<960,961,39>",(e)); Inst35++; } } catch(e) {}
  actual = e.name;
try { if (Inst33 <= 1000 && typeof (actual) != "undefined") {_RecordType("<951,957,39>",(actual)); Inst33++; } } catch(e) {}
}

try { if (Inst36 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<971,984,42>",(reportCompare)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (expect) != "undefined") {_RecordType("<985,991,42>",(expect)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (actual) != "undefined") {_RecordType("<993,999,42>",(actual)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (status) != "undefined") {_RecordType("<1001,1007,42>",(status)); Inst39++; } } catch(e) {}
reportCompare(expect, actual, status);

