var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* -*- indent-tabs-mode: nil; js-indent-level: 2 -*- */

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
//-----------------------------------------------------------------------------
var BUGNUMBER = 463782;
try { if (Inst0 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<346,355,7>",(BUGNUMBER)); Inst0++; } } catch(e) {}
var summary = 'Do not assert: "need a way to EOT now, since this is trace end": 0';
try { if (Inst1 <= 1000 && typeof (summary) != "undefined") {_RecordType("<370,377,8>",(summary)); Inst1++; } } catch(e) {}
var actual = '';
try { if (Inst2 <= 1000 && typeof (actual) != "undefined") {_RecordType("<454,460,9>",(actual)); Inst2++; } } catch(e) {}
var expect = '';
try { if (Inst3 <= 1000 && typeof (expect) != "undefined") {_RecordType("<471,477,10>",(expect)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (printBugNumber) != "undefined") {_RecordType("<484,498,11>",(printBugNumber)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<499,508,11>",(BUGNUMBER)); Inst5++; } } catch(e) {}
printBugNumber(BUGNUMBER);
try { if (Inst6 <= 1000 && typeof (printStatus) != "undefined") {_RecordType("<511,522,12>",(printStatus)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (summary) != "undefined") {_RecordType("<523,530,12>",(summary)); Inst7++; } } catch(e) {}
printStatus(summary);

try { if (Inst8 <= 1000 && typeof (dateCheck) != "undefined") {_RecordType("<543,552,14>",(dateCheck)); Inst8++; } } catch(e) {}
function dateCheck() {
  return true;
}

try { if (Inst9 <= 1000 && typeof (dateToString) != "undefined") {_RecordType("<584,596,18>",(dateToString)); Inst9++; } } catch(e) {}
function dateToString() {
try { if (Inst10 <= 1000 && typeof (this.dtsReturnValue) != "undefined") {_RecordType("<608,627,19>",(this.dtsReturnValue)); Inst10++; } } catch(e) {}
  if (!this.dtsReturnValue) {
    this.dtsReturnValue = "200811080616";
try { if (Inst11 <= 1000 && typeof (this.dtsReturnValue) != "undefined") {_RecordType("<635,654,20>",(this.dtsReturnValue)); Inst11++; } } catch(e) {}
  }

try { if (Inst12 <= 1000 && typeof (this.dtsReturnValue) != "undefined") {_RecordType("<687,706,23>",(this.dtsReturnValue)); Inst12++; } } catch(e) {}
  return this.dtsReturnValue;
}

try { if (Inst13 <= 1000 && typeof (placeAd2) != "undefined") {_RecordType("<720,728,26>",(placeAd2)); Inst13++; } } catch(e) {}
function placeAd2() {
  var adClasses = {
    "": {
      templateCheck: function () {
        var foo = {
          allianz: {
            where: ["intl/turningpoints"],
            when: ["200805010000/200901010000"],
            what: ["!234x60", "!bigbox_2", "!leaderboard_2", "!88x31"]
          },
          trendMicro: {
            where: ["techbiz/tech/threatmeter"],
            when: ["200806110000/200812310000"],
            what: ["leaderboard"]
          },
          rolex_bb: {
            where: ["politics/transitions"],
            when: ["200811050000/200901312359"],
            what: ["!bigbox"]
          }
        };
try { if (Inst15 <= 1000 && typeof (foo) != "undefined") {_RecordType("<810,813,30>",(foo)); Inst15++; } } catch(e) {}

        for (a in foo) {
try { if (Inst16 <= 1000 && typeof (a) != "undefined") {_RecordType("<1367,1368,48>",(a)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1372,1375,48>",(foo)); Inst17++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (dateCheck) != "undefined") {_RecordType("<1393,1402,49>",(dateCheck)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (dateToString) != "undefined") {_RecordType("<1407,1419,49>",(dateToString)); Inst19++; } } catch(e) {}
          if (dateCheck("", dateToString())) {
            for (var c = 0; c < 1; c++) {
try { if (Inst20 <= 1000 && typeof (c) != "undefined") {_RecordType("<1447,1448,50>",(c)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (c) != "undefined") {_RecordType("<1454,1455,50>",(c)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (c) != "undefined") {_RecordType("<1461,1462,50>",(c)); Inst22++; } } catch(e) {}
              ;
            }
          }
        }

        return true;
      }
    }
  };
try { if (Inst14 <= 1000 && typeof (adClasses) != "undefined") {_RecordType("<739,748,27>",(adClasses)); Inst14++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (adClasses[""].templateCheck) != "undefined") {_RecordType("<1563,1590,60>",(adClasses[""].templateCheck)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (adClasses[""]) != "undefined") {_RecordType("<1563,1576,60>",(adClasses[""])); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (adClasses) != "undefined") {_RecordType("<1563,1572,60>",(adClasses)); Inst25++; } } catch(e) {}
  adClasses[""].templateCheck();
}

try { if (Inst26 <= 1000 && typeof (placeAd2) != "undefined") {_RecordType("<1597,1605,63>",(placeAd2)); Inst26++; } } catch(e) {}
placeAd2();
try { if (Inst27 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1609,1622,64>",(reportCompare)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1623,1629,64>",(expect)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1631,1637,64>",(actual)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (summary) != "undefined") {_RecordType("<1639,1646,64>",(summary)); Inst30++; } } catch(e) {}
reportCompare(expect, actual, summary);

