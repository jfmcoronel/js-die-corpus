var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* -*- tab-width: 2; indent-tabs-mode: nil; js-indent-level: 2 -*- */

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
//-----------------------------------------------------------------------------
var BUGNUMBER = 504078;
try { if (Inst0 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<360,369,7>",(BUGNUMBER)); Inst0++; } } catch(e) {}
var summary = 'Iterations over global object';
try { if (Inst1 <= 1000 && typeof (summary) != "undefined") {_RecordType("<384,391,8>",(summary)); Inst1++; } } catch(e) {}
var actual = '';
try { if (Inst2 <= 1000 && typeof (actual) != "undefined") {_RecordType("<431,437,9>",(actual)); Inst2++; } } catch(e) {}
var expect = '';
try { if (Inst3 <= 1000 && typeof (expect) != "undefined") {_RecordType("<448,454,10>",(expect)); Inst3++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (window) != "undefined") {_RecordType("<476,482,11>",(window)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (window) != "undefined") {_RecordType("<507,513,11>",(window)); Inst6++; } } catch(e) {}
var g = typeof window == 'undefined' ? this : window; //-----------------------------------------------------------------------------
try { if (Inst4 <= 1000 && typeof (g) != "undefined") {_RecordType("<465,466,11>",(g)); Inst4++; } } catch(e) {}

try { if (Inst7 <= 1000 && typeof (test) != "undefined") {_RecordType("<596,600,13>",(test)); Inst7++; } } catch(e) {}
test(); //-----------------------------------------------------------------------------

try { if (Inst8 <= 1000 && typeof (test) != "undefined") {_RecordType("<694,698,15>",(test)); Inst8++; } } catch(e) {}
function test() {
try { if (Inst9 <= 1000 && typeof (printBugNumber) != "undefined") {_RecordType("<705,719,16>",(printBugNumber)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<720,729,16>",(BUGNUMBER)); Inst10++; } } catch(e) {}
  printBugNumber(BUGNUMBER);
try { if (Inst11 <= 1000 && typeof (printStatus) != "undefined") {_RecordType("<734,745,17>",(printStatus)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (summary) != "undefined") {_RecordType("<746,753,17>",(summary)); Inst12++; } } catch(e) {}
  printStatus(summary);

try { if (Inst13 <= 1000 && typeof (keys) != "undefined") {_RecordType("<768,772,19>",(keys)); Inst13++; } } catch(e) {}
  function keys(obj) {
try { if (Inst14 <= 1000 && typeof (obj) != "undefined") {_RecordType("<773,776,19>",(obj)); Inst14++; } } catch(e) {}
    for (var prop in obj) {
try { if (Inst15 <= 1000 && typeof (prop) != "undefined") {_RecordType("<793,797,20>",(prop)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (obj) != "undefined") {_RecordType("<801,804,20>",(obj)); Inst16++; } } catch(e) {}
      ;
    }
  }

  var data = {
    a: 1,
    b: 2
  };
try { if (Inst17 <= 1000 && typeof (data) != "undefined") {_RecordType("<833,837,25>",(data)); Inst17++; } } catch(e) {}
  var data2 = {
    a: 1,
    b: 2
  };
try { if (Inst18 <= 1000 && typeof (data2) != "undefined") {_RecordType("<872,877,29>",(data2)); Inst18++; } } catch(e) {}

try { if (Inst19 <= 1000 && typeof (boot) != "undefined") {_RecordType("<918,922,34>",(boot)); Inst19++; } } catch(e) {}
  function boot() {
try { if (Inst20 <= 1000 && typeof (keys) != "undefined") {_RecordType("<931,935,35>",(keys)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (data) != "undefined") {_RecordType("<936,940,35>",(data)); Inst21++; } } catch(e) {}
    keys(data);
try { if (Inst22 <= 1000 && typeof (keys) != "undefined") {_RecordType("<947,951,36>",(keys)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (g) != "undefined") {_RecordType("<952,953,36>",(g)); Inst23++; } } catch(e) {}
    keys(g);
try { if (Inst24 <= 1000 && typeof (keys) != "undefined") {_RecordType("<960,964,37>",(keys)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (data2) != "undefined") {_RecordType("<965,970,37>",(data2)); Inst25++; } } catch(e) {}
    keys(data2); // this call dies with "var prop is not a function"

try { if (Inst26 <= 1000 && typeof (print) != "undefined") {_RecordType("<1030,1035,39>",(print)); Inst26++; } } catch(e) {}
    print('no error');
  }

try { if (Inst28 <= 1000 && typeof (ex) != "undefined") {_RecordType("<1085,1087,44>",(ex)); Inst28++; } } catch(e) {}
  try {
try { if (Inst27 <= 1000 && typeof (boot) != "undefined") {_RecordType("<1066,1070,43>",(boot)); Inst27++; } } catch(e) {}
    boot();
  } catch (ex) {
try { if (Inst30 <= 1000 && typeof (ex) != "undefined") {_RecordType("<1104,1106,45>",(ex)); Inst30++; } } catch(e) {}
    actual = ex + '';
try { if (Inst29 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1095,1101,45>",(actual)); Inst29++; } } catch(e) {}
  }

try { if (Inst31 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1120,1133,48>",(reportCompare)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1134,1140,48>",(expect)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1142,1148,48>",(actual)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (summary) != "undefined") {_RecordType("<1150,1157,48>",(summary)); Inst34++; } } catch(e) {}
  reportCompare(expect, actual, summary);
}

