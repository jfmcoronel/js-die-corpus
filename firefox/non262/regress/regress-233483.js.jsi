var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// |reftest| skip-if(xulRuntime.shell)

/* -*- indent-tabs-mode: nil; js-indent-level: 2 -*- */

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
//-----------------------------------------------------------------------------
var BUGNUMBER = 233483;
try { if (Inst0 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<386,395,9>",(BUGNUMBER)); Inst0++; } } catch(e) {}
var summary = 'Don\'t crash with null properties - Browser only';
try { if (Inst1 <= 1000 && typeof (summary) != "undefined") {_RecordType("<410,417,10>",(summary)); Inst1++; } } catch(e) {}
var actual = 'Crash';
try { if (Inst2 <= 1000 && typeof (actual) != "undefined") {_RecordType("<476,482,11>",(actual)); Inst2++; } } catch(e) {}
var expect = 'No Crash';
try { if (Inst3 <= 1000 && typeof (expect) != "undefined") {_RecordType("<498,504,12>",(expect)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (printBugNumber) != "undefined") {_RecordType("<519,533,13>",(printBugNumber)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<534,543,13>",(BUGNUMBER)); Inst5++; } } catch(e) {}
printBugNumber(BUGNUMBER);
try { if (Inst6 <= 1000 && typeof (printStatus) != "undefined") {_RecordType("<546,557,14>",(printStatus)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (summary) != "undefined") {_RecordType("<558,565,14>",(summary)); Inst7++; } } catch(e) {}
printStatus(summary); // delay test driver end

gDelayTestDriverEnd = true;
try { if (Inst8 <= 1000 && typeof (gDelayTestDriverEnd) != "undefined") {_RecordType("<594,613,16>",(gDelayTestDriverEnd)); Inst8++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (onLoad) != "undefined") {_RecordType("<638,644,17>",(onLoad)); Inst11++; } } catch(e) {}
window.onload = onLoad;
try { if (Inst9 <= 1000 && typeof (window.onload) != "undefined") {_RecordType("<622,635,17>",(window.onload)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (window) != "undefined") {_RecordType("<622,628,17>",(window)); Inst10++; } } catch(e) {}

try { if (Inst12 <= 1000 && typeof (onLoad) != "undefined") {_RecordType("<656,662,19>",(onLoad)); Inst12++; } } catch(e) {}
function onLoad() {
try { if (Inst13 <= 1000 && typeof (setform) != "undefined") {_RecordType("<669,676,20>",(setform)); Inst13++; } } catch(e) {}
  setform();
try { if (Inst15 <= 1000 && typeof (Array) != "undefined") {_RecordType("<694,699,21>",(Array)); Inst15++; } } catch(e) {}
  var a = new Array();
try { if (Inst14 <= 1000 && typeof (a) != "undefined") {_RecordType("<686,687,21>",(a)); Inst14++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (document.getElementsByTagName) != "undefined") {_RecordType("<717,746,22>",(document.getElementsByTagName)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (document) != "undefined") {_RecordType("<717,725,22>",(document)); Inst18++; } } catch(e) {}
  var forms = document.getElementsByTagName('form');
try { if (Inst16 <= 1000 && typeof (forms) != "undefined") {_RecordType("<709,714,22>",(forms)); Inst16++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (forms[0]) != "undefined") {_RecordType("<772,780,23>",(forms[0])); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (forms) != "undefined") {_RecordType("<772,777,23>",(forms)); Inst24++; } } catch(e) {}
  a[a.length] = forms[0];
try { if (Inst19 <= 1000 && typeof (a[a.length]) != "undefined") {_RecordType("<758,769,23>",(a[a.length])); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (a) != "undefined") {_RecordType("<758,759,23>",(a)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<760,768,23>",(a.length)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (a) != "undefined") {_RecordType("<760,761,23>",(a)); Inst22++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (a.toString) != "undefined") {_RecordType("<792,802,24>",(a.toString)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (a) != "undefined") {_RecordType("<792,793,24>",(a)); Inst27++; } } catch(e) {}
  var s = a.toString();
try { if (Inst25 <= 1000 && typeof (s) != "undefined") {_RecordType("<788,789,24>",(s)); Inst25++; } } catch(e) {}
  actual = 'No Crash';
try { if (Inst28 <= 1000 && typeof (actual) != "undefined") {_RecordType("<808,814,25>",(actual)); Inst28++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<831,844,26>",(reportCompare)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (expect) != "undefined") {_RecordType("<845,851,26>",(expect)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (actual) != "undefined") {_RecordType("<853,859,26>",(actual)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (summary) != "undefined") {_RecordType("<861,868,26>",(summary)); Inst32++; } } catch(e) {}
  reportCompare(expect, actual, summary);
  gDelayTestDriverEnd = false;
try { if (Inst33 <= 1000 && typeof (gDelayTestDriverEnd) != "undefined") {_RecordType("<873,892,27>",(gDelayTestDriverEnd)); Inst33++; } } catch(e) {}
}

try { if (Inst34 <= 1000 && typeof (setform) != "undefined") {_RecordType("<914,921,30>",(setform)); Inst34++; } } catch(e) {}
function setform() {
try { if (Inst36 <= 1000 && typeof (document.body.appendChild) != "undefined") {_RecordType("<939,964,31>",(document.body.appendChild)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (document.body) != "undefined") {_RecordType("<939,952,31>",(document.body)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (document) != "undefined") {_RecordType("<939,947,31>",(document)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (document.createElement) != "undefined") {_RecordType("<965,987,31>",(document.createElement)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (document) != "undefined") {_RecordType("<965,973,31>",(document)); Inst40++; } } catch(e) {}
  var form = document.body.appendChild(document.createElement('form'));
try { if (Inst35 <= 1000 && typeof (form) != "undefined") {_RecordType("<932,936,31>",(form)); Inst35++; } } catch(e) {}
try { if (Inst42 <= 1000 && typeof (form.appendChild) != "undefined") {_RecordType("<1012,1028,32>",(form.appendChild)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (form) != "undefined") {_RecordType("<1012,1016,32>",(form)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (document.createElement) != "undefined") {_RecordType("<1029,1051,32>",(document.createElement)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (document) != "undefined") {_RecordType("<1029,1037,32>",(document)); Inst45++; } } catch(e) {}
  var input = form.appendChild(document.createElement('input'));
try { if (Inst41 <= 1000 && typeof (input) != "undefined") {_RecordType("<1004,1009,32>",(input)); Inst41++; } } catch(e) {}
try { if (Inst46 <= 1000 && typeof (input.setAttribute) != "undefined") {_RecordType("<1065,1083,33>",(input.setAttribute)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (input) != "undefined") {_RecordType("<1065,1070,33>",(input)); Inst47++; } } catch(e) {}
  input.setAttribute('id', 'test');
try { if (Inst48 <= 1000 && typeof (input.setAttribute) != "undefined") {_RecordType("<1101,1119,34>",(input.setAttribute)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (input) != "undefined") {_RecordType("<1101,1106,34>",(input)); Inst49++; } } catch(e) {}
  input.setAttribute('value', '1232');
try { if (Inst51 <= 1000 && typeof (form.toString) != "undefined") {_RecordType("<1153,1166,35>",(form.toString)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (form) != "undefined") {_RecordType("<1153,1157,35>",(form)); Inst52++; } } catch(e) {}
  var result = form.toString();
try { if (Inst50 <= 1000 && typeof (result) != "undefined") {_RecordType("<1144,1150,35>",(result)); Inst50++; } } catch(e) {}
}

