var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* -*- tab-width: 2; indent-tabs-mode: nil; js-indent-level: 2 -*- */

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
//-----------------------------------------------------------------------------
var BUGNUMBER = 139316;
try { if (Inst0 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<360,369,7>",(BUGNUMBER)); Inst0++; } } catch(e) {}
var summary = 'Do not crash in js_ReportIsNotDefined()';
try { if (Inst1 <= 1000 && typeof (summary) != "undefined") {_RecordType("<384,391,8>",(summary)); Inst1++; } } catch(e) {}
var actual = 'No Crash';
try { if (Inst2 <= 1000 && typeof (actual) != "undefined") {_RecordType("<441,447,9>",(actual)); Inst2++; } } catch(e) {}
var expect = 'No Crash';
try { if (Inst3 <= 1000 && typeof (expect) != "undefined") {_RecordType("<466,472,10>",(expect)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (printBugNumber) != "undefined") {_RecordType("<487,501,11>",(printBugNumber)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<502,511,11>",(BUGNUMBER)); Inst5++; } } catch(e) {}
printBugNumber(BUGNUMBER);
try { if (Inst6 <= 1000 && typeof (printStatus) != "undefined") {_RecordType("<514,525,12>",(printStatus)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (summary) != "undefined") {_RecordType("<526,533,12>",(summary)); Inst7++; } } catch(e) {}
printStatus(summary);
var str = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
try { if (Inst8 <= 1000 && typeof (str) != "undefined") {_RecordType("<540,543,13>",(str)); Inst8++; } } catch(e) {}

try { if (Inst9 <= 1000 && typeof (makeError) != "undefined") {_RecordType("<777,786,15>",(makeError)); Inst9++; } } catch(e) {}
function makeError() {
try { if (Inst11 <= 1000 && typeof (e) != "undefined") {_RecordType("<821,822,18>",(e)); Inst11++; } } catch(e) {}
  try {
try { if (Inst10 <= 1000 && typeof (foo) != "undefined") {_RecordType("<803,806,17>",(foo)); Inst10++; } } catch(e) {}
    foo();
  } catch (e) {
try { if (Inst12 <= 1000 && typeof (e) != "undefined") {_RecordType("<837,838,19>",(e)); Inst12++; } } catch(e) {}
    return e;
  }
}

f = function () {
try { if (Inst15 <= 1000 && typeof (makeError) != "undefined") {_RecordType("<875,884,24>",(makeError)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (c) != "undefined") {_RecordType("<894,895,24>",(c)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<958,967,30>",(undefined)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Number.MAX_VALUE) != "undefined") {_RecordType("<969,985,30>",(Number.MAX_VALUE)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Number) != "undefined") {_RecordType("<969,975,30>",(Number)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (Number) != "undefined") {_RecordType("<994,1000,30>",(Number)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (str) != "undefined") {_RecordType("<1020,1023,30>",(str)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (String) != "undefined") {_RecordType("<1029,1035,30>",(String)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Boolean) != "undefined") {_RecordType("<1060,1067,30>",(Boolean)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (Date) != "undefined") {_RecordType("<1076,1080,30>",(Date)); Inst24++; } } catch(e) {}
  var e = makeError(function c() {
    ;
  }, function () {
    ;
  }, {
    a: 1
  }, null, undefined, Number.MAX_VALUE, 0, new Number(1), "hello world", str, new String("newstring"), true, new Boolean(0), new Date());
try { if (Inst14 <= 1000 && typeof (e) != "undefined") {_RecordType("<871,872,24>",(e)); Inst14++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (printStatus) != "undefined") {_RecordType("<1087,1098,31>",(printStatus)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (e.stack) != "undefined") {_RecordType("<1099,1106,31>",(e.stack)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (e) != "undefined") {_RecordType("<1099,1100,31>",(e)); Inst27++; } } catch(e) {}
  printStatus(e.stack);
};
try { if (Inst13 <= 1000 && typeof (f) != "undefined") {_RecordType("<847,848,23>",(f)); Inst13++; } } catch(e) {}

try { if (Inst28 <= 1000 && typeof (f) != "undefined") {_RecordType("<1113,1114,34>",(f)); Inst28++; } } catch(e) {}
f();
try { if (Inst29 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1118,1131,35>",(reportCompare)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1132,1138,35>",(expect)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1140,1146,35>",(actual)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (summary) != "undefined") {_RecordType("<1148,1155,35>",(summary)); Inst32++; } } catch(e) {}
reportCompare(expect, actual, summary);

