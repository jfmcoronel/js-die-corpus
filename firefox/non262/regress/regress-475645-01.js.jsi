var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* -*- indent-tabs-mode: nil; js-indent-level: 2 -*- */

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
//-----------------------------------------------------------------------------
var BUGNUMBER = 475645;
try { if (Inst0 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<346,355,7>",(BUGNUMBER)); Inst0++; } } catch(e) {}
var summary = 'Do not crash @ nanojit::LIns::isop';
try { if (Inst1 <= 1000 && typeof (summary) != "undefined") {_RecordType("<370,377,8>",(summary)); Inst1++; } } catch(e) {}
var actual = '';
try { if (Inst2 <= 1000 && typeof (actual) != "undefined") {_RecordType("<422,428,9>",(actual)); Inst2++; } } catch(e) {}
var expect = ''; //-----------------------------------------------------------------------------
try { if (Inst3 <= 1000 && typeof (expect) != "undefined") {_RecordType("<439,445,10>",(expect)); Inst3++; } } catch(e) {}

try { if (Inst4 <= 1000 && typeof (test) != "undefined") {_RecordType("<533,537,12>",(test)); Inst4++; } } catch(e) {}
test(); //-----------------------------------------------------------------------------

try { if (Inst5 <= 1000 && typeof (test) != "undefined") {_RecordType("<631,635,14>",(test)); Inst5++; } } catch(e) {}
function test() {
try { if (Inst6 <= 1000 && typeof (printBugNumber) != "undefined") {_RecordType("<642,656,15>",(printBugNumber)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<657,666,15>",(BUGNUMBER)); Inst7++; } } catch(e) {}
  printBugNumber(BUGNUMBER);
try { if (Inst8 <= 1000 && typeof (printStatus) != "undefined") {_RecordType("<671,682,16>",(printStatus)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (summary) != "undefined") {_RecordType("<683,690,16>",(summary)); Inst9++; } } catch(e) {}
  printStatus(summary);
try { if (Inst11 <= 1000 && typeof (Array) != "undefined") {_RecordType("<709,714,17>",(Array)); Inst11++; } } catch(e) {}
  linkarr = new Array();
try { if (Inst10 <= 1000 && typeof (linkarr) != "undefined") {_RecordType("<695,702,17>",(linkarr)); Inst10++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (Array) != "undefined") {_RecordType("<733,738,18>",(Array)); Inst13++; } } catch(e) {}
  picarr = new Array();
try { if (Inst12 <= 1000 && typeof (picarr) != "undefined") {_RecordType("<720,726,18>",(picarr)); Inst12++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (Array) != "undefined") {_RecordType("<758,763,19>",(Array)); Inst15++; } } catch(e) {}
  textarr = new Array();
try { if (Inst14 <= 1000 && typeof (textarr) != "undefined") {_RecordType("<744,751,19>",(textarr)); Inst14++; } } catch(e) {}
  var f = 161;
try { if (Inst16 <= 1000 && typeof (f) != "undefined") {_RecordType("<773,774,20>",(f)); Inst16++; } } catch(e) {}
  var t = 27;
try { if (Inst17 <= 1000 && typeof (t) != "undefined") {_RecordType("<788,789,21>",(t)); Inst17++; } } catch(e) {}
  var pics = "";
try { if (Inst18 <= 1000 && typeof (pics) != "undefined") {_RecordType("<802,806,22>",(pics)); Inst18++; } } catch(e) {}
  var links = "";
try { if (Inst19 <= 1000 && typeof (links) != "undefined") {_RecordType("<819,824,23>",(links)); Inst19++; } } catch(e) {}
  var texts = "";
try { if (Inst20 <= 1000 && typeof (texts) != "undefined") {_RecordType("<837,842,24>",(texts)); Inst20++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (f) != "undefined") {_RecordType("<859,860,25>",(f)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (t) != "undefined") {_RecordType("<863,864,25>",(t)); Inst23++; } } catch(e) {}
  var s = f + t;
try { if (Inst21 <= 1000 && typeof (s) != "undefined") {_RecordType("<855,856,25>",(s)); Inst21++; } } catch(e) {}
  var d = "1";
try { if (Inst24 <= 1000 && typeof (d) != "undefined") {_RecordType("<872,873,26>",(d)); Inst24++; } } catch(e) {}
  picarr[2] = "2";
try { if (Inst25 <= 1000 && typeof (picarr[2]) != "undefined") {_RecordType("<883,892,27>",(picarr[2])); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (picarr) != "undefined") {_RecordType("<883,889,27>",(picarr)); Inst26++; } } catch(e) {}

  for (i = 1; i < picarr.length; i++) {
try { if (Inst27 <= 1000 && typeof (i) != "undefined") {_RecordType("<908,909,29>",(i)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (i) != "undefined") {_RecordType("<915,916,29>",(i)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (picarr.length) != "undefined") {_RecordType("<919,932,29>",(picarr.length)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (picarr) != "undefined") {_RecordType("<919,925,29>",(picarr)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (i) != "undefined") {_RecordType("<934,935,29>",(i)); Inst31++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (pics) != "undefined") {_RecordType("<949,953,30>",(pics)); Inst32++; } } catch(e) {}
    if (pics == "") {
try { if (Inst34 <= 1000 && typeof (picarr[i]) != "undefined") {_RecordType("<976,985,31>",(picarr[i])); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (picarr) != "undefined") {_RecordType("<976,982,31>",(picarr)); Inst35++; } } catch(e) {}
      pics = picarr[i];
try { if (Inst33 <= 1000 && typeof (pics) != "undefined") {_RecordType("<969,973,31>",(pics)); Inst33++; } } catch(e) {}
    } else {
try { if (Inst36 <= 1000 && typeof (picarr[i].indexOf) != "undefined") {_RecordType("<1010,1027,33>",(picarr[i].indexOf)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (picarr[i]) != "undefined") {_RecordType("<1010,1019,33>",(picarr[i])); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (picarr) != "undefined") {_RecordType("<1010,1016,33>",(picarr)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (picarr[i].indexOf) != "undefined") {_RecordType("<1044,1061,33>",(picarr[i].indexOf)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (picarr[i]) != "undefined") {_RecordType("<1044,1053,33>",(picarr[i])); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (picarr) != "undefined") {_RecordType("<1044,1050,33>",(picarr)); Inst41++; } } catch(e) {}
      if (picarr[i].indexOf("jpg") == -1 && picarr[i].indexOf("JPG") == -1) {
try { if (Inst44 <= 1000 && typeof (d) != "undefined") {_RecordType("<1098,1099,34>",(d)); Inst44++; } } catch(e) {}
        picarr[i] = d;
try { if (Inst42 <= 1000 && typeof (picarr[i]) != "undefined") {_RecordType("<1086,1095,34>",(picarr[i])); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (picarr) != "undefined") {_RecordType("<1086,1092,34>",(picarr)); Inst43++; } } catch(e) {}
      }
    }
  }

try { if (Inst45 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1122,1135,39>",(reportCompare)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1136,1142,39>",(expect)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1144,1150,39>",(actual)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (summary) != "undefined") {_RecordType("<1152,1159,39>",(summary)); Inst48++; } } catch(e) {}
  reportCompare(expect, actual, summary);
}

