var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* -*- indent-tabs-mode: nil; js-indent-level: 2 -*- */

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
//-----------------------------------------------------------------------------
var BUGNUMBER = 481436;
try { if (Inst0 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<346,355,7>",(BUGNUMBER)); Inst0++; } } catch(e) {}
var summary = 'TM: Do not crash @ FlushNativeStackFrame/JS_XDRNewMem';
try { if (Inst1 <= 1000 && typeof (summary) != "undefined") {_RecordType("<370,377,8>",(summary)); Inst1++; } } catch(e) {}
var actual = '';
try { if (Inst2 <= 1000 && typeof (actual) != "undefined") {_RecordType("<441,447,9>",(actual)); Inst2++; } } catch(e) {}
var expect = '';
try { if (Inst3 <= 1000 && typeof (expect) != "undefined") {_RecordType("<458,464,10>",(expect)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (printBugNumber) != "undefined") {_RecordType("<471,485,11>",(printBugNumber)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<486,495,11>",(BUGNUMBER)); Inst5++; } } catch(e) {}
printBugNumber(BUGNUMBER);
try { if (Inst6 <= 1000 && typeof (printStatus) != "undefined") {_RecordType("<498,509,12>",(printStatus)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (summary) != "undefined") {_RecordType("<510,517,12>",(summary)); Inst7++; } } catch(e) {}
printStatus(summary);

try { if (Inst8 <= 1000 && typeof (search) != "undefined") {_RecordType("<530,536,14>",(search)); Inst8++; } } catch(e) {}
function search(m, n) {
try { if (Inst9 <= 1000 && typeof (m) != "undefined") {_RecordType("<537,538,14>",(m)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (n) != "undefined") {_RecordType("<540,541,14>",(n)); Inst10++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (m.name) != "undefined") {_RecordType("<551,557,15>",(m.name)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (m) != "undefined") {_RecordType("<551,552,15>",(m)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (n) != "undefined") {_RecordType("<561,562,15>",(n)); Inst13++; } } catch(e) {}
  if (m.name == n) {
try { if (Inst14 <= 1000 && typeof (m) != "undefined") {_RecordType("<577,578,16>",(m)); Inst14++; } } catch(e) {}
    return m;
  }

  for (var i = 0; i < m.items.length; i++) {
try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<596,597,19>",(i)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<603,604,19>",(i)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (m.items.length) != "undefined") {_RecordType("<607,621,19>",(m.items.length)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (m.items) != "undefined") {_RecordType("<607,614,19>",(m.items)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (m) != "undefined") {_RecordType("<607,608,19>",(m)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<623,624,19>",(i)); Inst20++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (m.items[i].type) != "undefined") {_RecordType("<638,653,20>",(m.items[i].type)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (m.items[i]) != "undefined") {_RecordType("<638,648,20>",(m.items[i])); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (m.items) != "undefined") {_RecordType("<638,645,20>",(m.items)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (m) != "undefined") {_RecordType("<638,639,20>",(m)); Inst24++; } } catch(e) {}
    if (m.items[i].type == 'M') {
try { if (Inst25 <= 1000 && typeof (search) != "undefined") {_RecordType("<670,676,21>",(search)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (m.items[i]) != "undefined") {_RecordType("<677,687,21>",(m.items[i])); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (m.items) != "undefined") {_RecordType("<677,684,21>",(m.items)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (m) != "undefined") {_RecordType("<677,678,21>",(m)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (n) != "undefined") {_RecordType("<689,690,21>",(n)); Inst29++; } } catch(e) {}
      search(m.items[i], n);
    }
  }
}

try { if (Inst30 <= 1000 && typeof (crash) != "undefined") {_RecordType("<715,720,26>",(crash)); Inst30++; } } catch(e) {}
function crash() {
  for (var i = 0; i < 2; i++) {
try { if (Inst31 <= 1000 && typeof (i) != "undefined") {_RecordType("<736,737,27>",(i)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (i) != "undefined") {_RecordType("<743,744,27>",(i)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (i) != "undefined") {_RecordType("<750,751,27>",(i)); Inst33++; } } catch(e) {}
    var root = {
      name: 'root',
      type: 'M',
      items: [{}]
    };
try { if (Inst34 <= 1000 && typeof (root) != "undefined") {_RecordType("<765,769,28>",(root)); Inst34++; } } catch(e) {}
try { if (Inst35 <= 1000 && typeof (search) != "undefined") {_RecordType("<840,846,33>",(search)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (root) != "undefined") {_RecordType("<847,851,33>",(root)); Inst36++; } } catch(e) {}
    search(root, 'x');
try { if (Inst37 <= 1000 && typeof (root.items.push) != "undefined") {_RecordType("<863,878,34>",(root.items.push)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (root.items) != "undefined") {_RecordType("<863,873,34>",(root.items)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (root) != "undefined") {_RecordType("<863,867,34>",(root)); Inst39++; } } catch(e) {}
    root.items.push({
      name: 'tim',
      type: 'M',
      items: []
    });
try { if (Inst40 <= 1000 && typeof (search) != "undefined") {_RecordType("<945,951,39>",(search)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (root) != "undefined") {_RecordType("<952,956,39>",(root)); Inst41++; } } catch(e) {}
    search(root, 'x');
try { if (Inst42 <= 1000 && typeof (search) != "undefined") {_RecordType("<968,974,40>",(search)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (root) != "undefined") {_RecordType("<975,979,40>",(root)); Inst43++; } } catch(e) {}
    search(root, 'x');
  }
}

try { if (Inst44 <= 1000 && typeof (crash) != "undefined") {_RecordType("<994,999,44>",(crash)); Inst44++; } } catch(e) {}
crash();
try { if (Inst45 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1003,1016,45>",(reportCompare)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1017,1023,45>",(expect)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1025,1031,45>",(actual)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (summary) != "undefined") {_RecordType("<1033,1040,45>",(summary)); Inst48++; } } catch(e) {}
reportCompare(expect, actual, summary);

