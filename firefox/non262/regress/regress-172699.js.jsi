var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* -*- indent-tabs-mode: nil; js-indent-level: 2 -*- */

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

/*
 *
 * Date:    07 Oct 2002
 * SUMMARY: UTF-8 decoder should not accept overlong sequences
 * See http://bugzilla.mozilla.org/show_bug.cgi?id=172699
 *
 */
//-----------------------------------------------------------------------------
var UBound = 0;
try { if (Inst0 <= 1000 && typeof (UBound) != "undefined") {_RecordType("<505,511,15>",(UBound)); Inst0++; } } catch(e) {}
var BUGNUMBER = 172699;
try { if (Inst1 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<521,530,16>",(BUGNUMBER)); Inst1++; } } catch(e) {}
var summary = 'UTF-8 decoder should not accept overlong sequences';
try { if (Inst2 <= 1000 && typeof (summary) != "undefined") {_RecordType("<545,552,17>",(summary)); Inst2++; } } catch(e) {}
var status = '';
try { if (Inst3 <= 1000 && typeof (status) != "undefined") {_RecordType("<613,619,18>",(status)); Inst3++; } } catch(e) {}
var statusitems = [];
try { if (Inst4 <= 1000 && typeof (statusitems) != "undefined") {_RecordType("<630,641,19>",(statusitems)); Inst4++; } } catch(e) {}
var actual = '';
try { if (Inst5 <= 1000 && typeof (actual) != "undefined") {_RecordType("<652,658,20>",(actual)); Inst5++; } } catch(e) {}
var actualvalues = [];
try { if (Inst6 <= 1000 && typeof (actualvalues) != "undefined") {_RecordType("<669,681,21>",(actualvalues)); Inst6++; } } catch(e) {}
var expect = '';
try { if (Inst7 <= 1000 && typeof (expect) != "undefined") {_RecordType("<692,698,22>",(expect)); Inst7++; } } catch(e) {}
var expectedvalues = [];
try { if (Inst8 <= 1000 && typeof (expectedvalues) != "undefined") {_RecordType("<709,723,23>",(expectedvalues)); Inst8++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (inSection) != "undefined") {_RecordType("<739,748,24>",(inSection)); Inst10++; } } catch(e) {}
status = inSection(1);
try { if (Inst9 <= 1000 && typeof (status) != "undefined") {_RecordType("<730,736,24>",(status)); Inst9++; } } catch(e) {}
expect = "URIError thrown";
try { if (Inst11 <= 1000 && typeof (expect) != "undefined") {_RecordType("<753,759,25>",(expect)); Inst11++; } } catch(e) {}

try { if (Inst14 <= 1000 && typeof (e) != "undefined") {_RecordType("<850,851,30>",(e)); Inst14++; } } catch(e) {}
try {
try { if (Inst12 <= 1000 && typeof (decodeURI) != "undefined") {_RecordType("<790,799,28>",(decodeURI)); Inst12++; } } catch(e) {}
  decodeURI("%C0%AF");
  actual = "no error thrown";
try { if (Inst13 <= 1000 && typeof (actual) != "undefined") {_RecordType("<813,819,29>",(actual)); Inst13++; } } catch(e) {}
} catch (e) {
try { if (Inst15 <= 1000 && typeof (e) != "undefined") {_RecordType("<861,862,31>",(e)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (URIError) != "undefined") {_RecordType("<874,882,31>",(URIError)); Inst16++; } } catch(e) {}
  if (e instanceof URIError) {
    actual = "URIError thrown";
try { if (Inst17 <= 1000 && typeof (actual) != "undefined") {_RecordType("<890,896,32>",(actual)); Inst17++; } } catch(e) {}
  } else {
try { if (Inst18 <= 1000 && typeof (e) != "undefined") {_RecordType("<937,938,34>",(e)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Error) != "undefined") {_RecordType("<950,955,34>",(Error)); Inst19++; } } catch(e) {}
    if (e instanceof Error) {
try { if (Inst21 <= 1000 && typeof (e.name) != "undefined") {_RecordType("<999,1005,35>",(e.name)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (e) != "undefined") {_RecordType("<999,1000,35>",(e)); Inst22++; } } catch(e) {}
      actual = "wrong error thrown: " + e.name;
try { if (Inst20 <= 1000 && typeof (actual) != "undefined") {_RecordType("<965,971,35>",(actual)); Inst20++; } } catch(e) {}
    } else {
try { if (Inst24 <= 1000 && typeof (e) != "undefined") {_RecordType("<1058,1059,37>",(e)); Inst24++; } } catch(e) {}
      actual = "non-error thrown: " + e;
try { if (Inst23 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1026,1032,37>",(actual)); Inst23++; } } catch(e) {}
    }
  }
}

try { if (Inst25 <= 1000 && typeof (addThis) != "undefined") {_RecordType("<1074,1081,42>",(addThis)); Inst25++; } } catch(e) {}
addThis(); //-----------------------------------------------------------------------------

try { if (Inst26 <= 1000 && typeof (test) != "undefined") {_RecordType("<1166,1170,44>",(test)); Inst26++; } } catch(e) {}
test(); //-----------------------------------------------------------------------------

try { if (Inst27 <= 1000 && typeof (addThis) != "undefined") {_RecordType("<1264,1271,46>",(addThis)); Inst27++; } } catch(e) {}
function addThis() {
try { if (Inst30 <= 1000 && typeof (status) != "undefined") {_RecordType("<1300,1306,47>",(status)); Inst30++; } } catch(e) {}
  statusitems[UBound] = status;
try { if (Inst28 <= 1000 && typeof (statusitems[UBound]) != "undefined") {_RecordType("<1278,1297,47>",(statusitems[UBound])); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (statusitems) != "undefined") {_RecordType("<1278,1289,47>",(statusitems)); Inst29++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1333,1339,48>",(actual)); Inst33++; } } catch(e) {}
  actualvalues[UBound] = actual;
try { if (Inst31 <= 1000 && typeof (actualvalues[UBound]) != "undefined") {_RecordType("<1310,1330,48>",(actualvalues[UBound])); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (actualvalues) != "undefined") {_RecordType("<1310,1322,48>",(actualvalues)); Inst32++; } } catch(e) {}
try { if (Inst36 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1368,1374,49>",(expect)); Inst36++; } } catch(e) {}
  expectedvalues[UBound] = expect;
try { if (Inst34 <= 1000 && typeof (expectedvalues[UBound]) != "undefined") {_RecordType("<1343,1365,49>",(expectedvalues[UBound])); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (expectedvalues) != "undefined") {_RecordType("<1343,1357,49>",(expectedvalues)); Inst35++; } } catch(e) {}
try { if (Inst37 <= 1000 && typeof (UBound) != "undefined") {_RecordType("<1378,1384,50>",(UBound)); Inst37++; } } catch(e) {}
  UBound++;
}

try { if (Inst38 <= 1000 && typeof (test) != "undefined") {_RecordType("<1400,1404,53>",(test)); Inst38++; } } catch(e) {}
function test() {
try { if (Inst39 <= 1000 && typeof (printBugNumber) != "undefined") {_RecordType("<1411,1425,54>",(printBugNumber)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<1426,1435,54>",(BUGNUMBER)); Inst40++; } } catch(e) {}
  printBugNumber(BUGNUMBER);
try { if (Inst41 <= 1000 && typeof (printStatus) != "undefined") {_RecordType("<1440,1451,55>",(printStatus)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (summary) != "undefined") {_RecordType("<1452,1459,55>",(summary)); Inst42++; } } catch(e) {}
  printStatus(summary);

  for (var i = 0; i < UBound; i++) {
try { if (Inst43 <= 1000 && typeof (i) != "undefined") {_RecordType("<1474,1475,57>",(i)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (i) != "undefined") {_RecordType("<1481,1482,57>",(i)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (UBound) != "undefined") {_RecordType("<1485,1491,57>",(UBound)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (i) != "undefined") {_RecordType("<1493,1494,57>",(i)); Inst46++; } } catch(e) {}
try { if (Inst47 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1504,1517,58>",(reportCompare)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (expectedvalues[i]) != "undefined") {_RecordType("<1518,1535,58>",(expectedvalues[i])); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (expectedvalues) != "undefined") {_RecordType("<1518,1532,58>",(expectedvalues)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (actualvalues[i]) != "undefined") {_RecordType("<1537,1552,58>",(actualvalues[i])); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (actualvalues) != "undefined") {_RecordType("<1537,1549,58>",(actualvalues)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (statusitems[i]) != "undefined") {_RecordType("<1554,1568,58>",(statusitems[i])); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (statusitems) != "undefined") {_RecordType("<1554,1565,58>",(statusitems)); Inst53++; } } catch(e) {}
    reportCompare(expectedvalues[i], actualvalues[i], statusitems[i]);
  }
}

