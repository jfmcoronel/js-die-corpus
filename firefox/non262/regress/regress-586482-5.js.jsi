var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* -*- indent-tabs-mode: nil; js-indent-level: 4 -*- */

/*
 * Any copyright is dedicated to the Public Domain.
 * http://creativecommons.org/licenses/publicdomain/
 */
try { if (Inst0 <= 1000 && typeof (check) != "undefined") {_RecordType("<178,183,7>",(check)); Inst0++; } } catch(e) {}
function check() {
  obj2.__proto__ = null;
try { if (Inst1 <= 1000 && typeof (obj2.__proto__) != "undefined") {_RecordType("<190,204,8>",(obj2.__proto__)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (obj2) != "undefined") {_RecordType("<190,194,8>",(obj2)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (arguments.callee.caller) != "undefined") {_RecordType("<222,245,9>",(arguments.callee.caller)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (arguments.callee) != "undefined") {_RecordType("<222,238,9>",(arguments.callee)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<222,231,9>",(arguments)); Inst5++; } } catch(e) {}
  return arguments.callee.caller;
}

var obj = {
  f: function () {
try { if (Inst7 <= 1000 && typeof (check) != "undefined") {_RecordType("<285,290,14>",(check)); Inst7++; } } catch(e) {}
    check();
  }
};
try { if (Inst6 <= 1000 && typeof (obj) != "undefined") {_RecordType("<254,257,12>",(obj)); Inst6++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (obj) != "undefined") {_RecordType("<327,330,18>",(obj)); Inst9++; } } catch(e) {}
var obj2 = {
  __proto__: obj
};
try { if (Inst8 <= 1000 && typeof (obj2) != "undefined") {_RecordType("<305,309,17>",(obj2)); Inst8++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (obj2.f) != "undefined") {_RecordType("<334,340,20>",(obj2.f)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (obj2) != "undefined") {_RecordType("<334,338,20>",(obj2)); Inst11++; } } catch(e) {}
obj2.f();
try { if (Inst12 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<344,357,21>",(reportCompare)); Inst12++; } } catch(e) {}
reportCompare(0, 0, "ok");

