var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* -*- indent-tabs-mode: nil; js-indent-level: 2 -*- */

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

/*
 *
 * Date:    06 Mar 2002
 * SUMMARY: Testing cloned function objects
 * See http://bugzilla.mozilla.org/show_bug.cgi?id=127557
 *
 * Before this bug was fixed, this testcase would error when run:
 *
 *             ReferenceError: h_peer is not defined
 *
 * The line |g.prototype = new Object| below is essential: this is
 * what was confusing the engine in its attempt to look up h_peer
 */
//-----------------------------------------------------------------------------
var UBound = 0;
try { if (Inst0 <= 1000 && typeof (UBound) != "undefined") {_RecordType("<744,750,21>",(UBound)); Inst0++; } } catch(e) {}
var BUGNUMBER = 127557;
try { if (Inst1 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<760,769,22>",(BUGNUMBER)); Inst1++; } } catch(e) {}
var summary = 'Testing cloned function objects';
try { if (Inst2 <= 1000 && typeof (summary) != "undefined") {_RecordType("<784,791,23>",(summary)); Inst2++; } } catch(e) {}
var cnCOMMA = ',';
try { if (Inst3 <= 1000 && typeof (cnCOMMA) != "undefined") {_RecordType("<833,840,24>",(cnCOMMA)); Inst3++; } } catch(e) {}
var status = '';
try { if (Inst4 <= 1000 && typeof (status) != "undefined") {_RecordType("<852,858,25>",(status)); Inst4++; } } catch(e) {}
var statusitems = [];
try { if (Inst5 <= 1000 && typeof (statusitems) != "undefined") {_RecordType("<869,880,26>",(statusitems)); Inst5++; } } catch(e) {}
var actual = '';
try { if (Inst6 <= 1000 && typeof (actual) != "undefined") {_RecordType("<891,897,27>",(actual)); Inst6++; } } catch(e) {}
var actualvalues = [];
try { if (Inst7 <= 1000 && typeof (actualvalues) != "undefined") {_RecordType("<908,920,28>",(actualvalues)); Inst7++; } } catch(e) {}
var expect = '';
try { if (Inst8 <= 1000 && typeof (expect) != "undefined") {_RecordType("<931,937,29>",(expect)); Inst8++; } } catch(e) {}
var expectedvalues = [];
try { if (Inst9 <= 1000 && typeof (expectedvalues) != "undefined") {_RecordType("<948,962,30>",(expectedvalues)); Inst9++; } } catch(e) {}

try { if (Inst10 <= 1000 && typeof (clone) != "undefined") {_RecordType("<981,986,32>",(clone)); Inst10++; } } catch(e) {}
if (typeof clone == 'function') {
try { if (Inst12 <= 1000 && typeof (inSection) != "undefined") {_RecordType("<1015,1024,33>",(inSection)); Inst12++; } } catch(e) {}
  status = inSection(1);
try { if (Inst11 <= 1000 && typeof (status) != "undefined") {_RecordType("<1006,1012,33>",(status)); Inst11++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (evaluate) != "undefined") {_RecordType("<1039,1047,34>",(evaluate)); Inst14++; } } catch(e) {}
  var f = evaluate("(function(x, y) {\n" + "    function h() { return h_peer(); }\n" + "    function h_peer() { return (x + cnCOMMA + y); }\n" + "    return h;\n" + "})");
try { if (Inst13 <= 1000 && typeof (f) != "undefined") {_RecordType("<1035,1036,34>",(f)); Inst13++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (clone) != "undefined") {_RecordType("<1211,1216,35>",(clone)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (f) != "undefined") {_RecordType("<1217,1218,35>",(f)); Inst17++; } } catch(e) {}
  var g = clone(f);
try { if (Inst15 <= 1000 && typeof (g) != "undefined") {_RecordType("<1207,1208,35>",(g)); Inst15++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1241,1247,36>",(Object)); Inst20++; } } catch(e) {}
  g.prototype = new Object();
try { if (Inst18 <= 1000 && typeof (g.prototype) != "undefined") {_RecordType("<1223,1234,36>",(g.prototype)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (g) != "undefined") {_RecordType("<1223,1224,36>",(g)); Inst19++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (g) != "undefined") {_RecordType("<1261,1262,37>",(g)); Inst22++; } } catch(e) {}
  var h = g(5, 6);
try { if (Inst21 <= 1000 && typeof (h) != "undefined") {_RecordType("<1257,1258,37>",(h)); Inst21++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (h) != "undefined") {_RecordType("<1281,1282,38>",(h)); Inst24++; } } catch(e) {}
  actual = h();
try { if (Inst23 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1272,1278,38>",(actual)); Inst23++; } } catch(e) {}
  expect = '5,6';
try { if (Inst25 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1288,1294,39>",(expect)); Inst25++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (addThis) != "undefined") {_RecordType("<1306,1313,40>",(addThis)); Inst26++; } } catch(e) {}
  addThis();
} else {
try { if (Inst27 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1328,1341,42>",(reportCompare)); Inst27++; } } catch(e) {}
  reportCompare('Test not run', 'Test not run', 'shell only test requires clone()');
} //-----------------------------------------------------------------------------


try { if (Inst28 <= 1000 && typeof (test) != "undefined") {_RecordType("<1495,1499,46>",(test)); Inst28++; } } catch(e) {}
test(); //-----------------------------------------------------------------------------

try { if (Inst29 <= 1000 && typeof (addThis) != "undefined") {_RecordType("<1593,1600,48>",(addThis)); Inst29++; } } catch(e) {}
function addThis() {
try { if (Inst32 <= 1000 && typeof (status) != "undefined") {_RecordType("<1629,1635,49>",(status)); Inst32++; } } catch(e) {}
  statusitems[UBound] = status;
try { if (Inst30 <= 1000 && typeof (statusitems[UBound]) != "undefined") {_RecordType("<1607,1626,49>",(statusitems[UBound])); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (statusitems) != "undefined") {_RecordType("<1607,1618,49>",(statusitems)); Inst31++; } } catch(e) {}
try { if (Inst35 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1662,1668,50>",(actual)); Inst35++; } } catch(e) {}
  actualvalues[UBound] = actual;
try { if (Inst33 <= 1000 && typeof (actualvalues[UBound]) != "undefined") {_RecordType("<1639,1659,50>",(actualvalues[UBound])); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (actualvalues) != "undefined") {_RecordType("<1639,1651,50>",(actualvalues)); Inst34++; } } catch(e) {}
try { if (Inst38 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1697,1703,51>",(expect)); Inst38++; } } catch(e) {}
  expectedvalues[UBound] = expect;
try { if (Inst36 <= 1000 && typeof (expectedvalues[UBound]) != "undefined") {_RecordType("<1672,1694,51>",(expectedvalues[UBound])); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (expectedvalues) != "undefined") {_RecordType("<1672,1686,51>",(expectedvalues)); Inst37++; } } catch(e) {}
try { if (Inst39 <= 1000 && typeof (UBound) != "undefined") {_RecordType("<1707,1713,52>",(UBound)); Inst39++; } } catch(e) {}
  UBound++;
}

try { if (Inst40 <= 1000 && typeof (test) != "undefined") {_RecordType("<1729,1733,55>",(test)); Inst40++; } } catch(e) {}
function test() {
try { if (Inst41 <= 1000 && typeof (printBugNumber) != "undefined") {_RecordType("<1740,1754,56>",(printBugNumber)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<1755,1764,56>",(BUGNUMBER)); Inst42++; } } catch(e) {}
  printBugNumber(BUGNUMBER);
try { if (Inst43 <= 1000 && typeof (printStatus) != "undefined") {_RecordType("<1769,1780,57>",(printStatus)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (summary) != "undefined") {_RecordType("<1781,1788,57>",(summary)); Inst44++; } } catch(e) {}
  printStatus(summary);

  for (var i = 0; i < UBound; i++) {
try { if (Inst45 <= 1000 && typeof (i) != "undefined") {_RecordType("<1803,1804,59>",(i)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (i) != "undefined") {_RecordType("<1810,1811,59>",(i)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (UBound) != "undefined") {_RecordType("<1814,1820,59>",(UBound)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (i) != "undefined") {_RecordType("<1822,1823,59>",(i)); Inst48++; } } catch(e) {}
try { if (Inst49 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1833,1846,60>",(reportCompare)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (expectedvalues[i]) != "undefined") {_RecordType("<1847,1864,60>",(expectedvalues[i])); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (expectedvalues) != "undefined") {_RecordType("<1847,1861,60>",(expectedvalues)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (actualvalues[i]) != "undefined") {_RecordType("<1866,1881,60>",(actualvalues[i])); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (actualvalues) != "undefined") {_RecordType("<1866,1878,60>",(actualvalues)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (statusitems[i]) != "undefined") {_RecordType("<1883,1897,60>",(statusitems[i])); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (statusitems) != "undefined") {_RecordType("<1883,1894,60>",(statusitems)); Inst55++; } } catch(e) {}
    reportCompare(expectedvalues[i], actualvalues[i], statusitems[i]);
  }
}

