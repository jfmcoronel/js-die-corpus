var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* -*- indent-tabs-mode: nil; js-indent-level: 2 -*- */

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
//-----------------------------------------------------------------------------
var BUGNUMBER = 274035;
try { if (Inst0 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<346,355,7>",(BUGNUMBER)); Inst0++; } } catch(e) {}
var summary = 'Array.prototype[concat|slice|splice] lengths';
try { if (Inst1 <= 1000 && typeof (summary) != "undefined") {_RecordType("<370,377,8>",(summary)); Inst1++; } } catch(e) {}
var actual = '';
try { if (Inst2 <= 1000 && typeof (actual) != "undefined") {_RecordType("<432,438,9>",(actual)); Inst2++; } } catch(e) {}
var expect = '';
try { if (Inst3 <= 1000 && typeof (expect) != "undefined") {_RecordType("<449,455,10>",(expect)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (printBugNumber) != "undefined") {_RecordType("<462,476,11>",(printBugNumber)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<477,486,11>",(BUGNUMBER)); Inst5++; } } catch(e) {}
printBugNumber(BUGNUMBER);
try { if (Inst6 <= 1000 && typeof (printStatus) != "undefined") {_RecordType("<489,500,12>",(printStatus)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (summary) != "undefined") {_RecordType("<501,508,12>",(summary)); Inst7++; } } catch(e) {}
printStatus(summary);
try { if (Inst9 <= 1000 && typeof (summary) != "undefined") {_RecordType("<520,527,13>",(summary)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (inSection) != "undefined") {_RecordType("<536,545,13>",(inSection)); Inst10++; } } catch(e) {}
status = summary + ' ' + inSection(1) + ' Array.prototype.concat.length ';
try { if (Inst8 <= 1000 && typeof (status) != "undefined") {_RecordType("<511,517,13>",(status)); Inst8++; } } catch(e) {}
expect = 1;
try { if (Inst11 <= 1000 && typeof (expect) != "undefined") {_RecordType("<586,592,14>",(expect)); Inst11++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (Array.prototype.concat.length) != "undefined") {_RecordType("<607,636,15>",(Array.prototype.concat.length)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Array.prototype.concat) != "undefined") {_RecordType("<607,629,15>",(Array.prototype.concat)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<607,622,15>",(Array.prototype)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Array) != "undefined") {_RecordType("<607,612,15>",(Array)); Inst16++; } } catch(e) {}
actual = Array.prototype.concat.length;
try { if (Inst12 <= 1000 && typeof (actual) != "undefined") {_RecordType("<598,604,15>",(actual)); Inst12++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<638,651,16>",(reportCompare)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (expect) != "undefined") {_RecordType("<652,658,16>",(expect)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (actual) != "undefined") {_RecordType("<660,666,16>",(actual)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (status) != "undefined") {_RecordType("<668,674,16>",(status)); Inst20++; } } catch(e) {}
reportCompare(expect, actual, status);
try { if (Inst22 <= 1000 && typeof (summary) != "undefined") {_RecordType("<686,693,17>",(summary)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (inSection) != "undefined") {_RecordType("<702,711,17>",(inSection)); Inst23++; } } catch(e) {}
status = summary + ' ' + inSection(2) + ' Array.prototype.slice.length ';
try { if (Inst21 <= 1000 && typeof (status) != "undefined") {_RecordType("<677,683,17>",(status)); Inst21++; } } catch(e) {}
expect = 2;
try { if (Inst24 <= 1000 && typeof (expect) != "undefined") {_RecordType("<751,757,18>",(expect)); Inst24++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (Array.prototype.slice.length) != "undefined") {_RecordType("<772,800,19>",(Array.prototype.slice.length)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (Array.prototype.slice) != "undefined") {_RecordType("<772,793,19>",(Array.prototype.slice)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<772,787,19>",(Array.prototype)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (Array) != "undefined") {_RecordType("<772,777,19>",(Array)); Inst29++; } } catch(e) {}
actual = Array.prototype.slice.length;
try { if (Inst25 <= 1000 && typeof (actual) != "undefined") {_RecordType("<763,769,19>",(actual)); Inst25++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<802,815,20>",(reportCompare)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (expect) != "undefined") {_RecordType("<816,822,20>",(expect)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (actual) != "undefined") {_RecordType("<824,830,20>",(actual)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (status) != "undefined") {_RecordType("<832,838,20>",(status)); Inst33++; } } catch(e) {}
reportCompare(expect, actual, status);
try { if (Inst35 <= 1000 && typeof (summary) != "undefined") {_RecordType("<850,857,21>",(summary)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (inSection) != "undefined") {_RecordType("<866,875,21>",(inSection)); Inst36++; } } catch(e) {}
status = summary + ' ' + inSection(3) + ' Array.prototype.splice.length ';
try { if (Inst34 <= 1000 && typeof (status) != "undefined") {_RecordType("<841,847,21>",(status)); Inst34++; } } catch(e) {}
expect = 2;
try { if (Inst37 <= 1000 && typeof (expect) != "undefined") {_RecordType("<916,922,22>",(expect)); Inst37++; } } catch(e) {}
try { if (Inst39 <= 1000 && typeof (Array.prototype.splice.length) != "undefined") {_RecordType("<937,966,23>",(Array.prototype.splice.length)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (Array.prototype.splice) != "undefined") {_RecordType("<937,959,23>",(Array.prototype.splice)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<937,952,23>",(Array.prototype)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (Array) != "undefined") {_RecordType("<937,942,23>",(Array)); Inst42++; } } catch(e) {}
actual = Array.prototype.splice.length;
try { if (Inst38 <= 1000 && typeof (actual) != "undefined") {_RecordType("<928,934,23>",(actual)); Inst38++; } } catch(e) {}
try { if (Inst43 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<968,981,24>",(reportCompare)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (expect) != "undefined") {_RecordType("<982,988,24>",(expect)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (actual) != "undefined") {_RecordType("<990,996,24>",(actual)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (status) != "undefined") {_RecordType("<998,1004,24>",(status)); Inst46++; } } catch(e) {}
reportCompare(expect, actual, status);

