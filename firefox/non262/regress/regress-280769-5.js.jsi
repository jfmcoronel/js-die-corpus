var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* -*- indent-tabs-mode: nil; js-indent-level: 2 -*- */

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
//-----------------------------------------------------------------------------
var BUGNUMBER = 280769;
try { if (Inst0 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<346,355,7>",(BUGNUMBER)); Inst0++; } } catch(e) {}
var summary = 'Do not overflow 64K string offset';
try { if (Inst1 <= 1000 && typeof (summary) != "undefined") {_RecordType("<370,377,8>",(summary)); Inst1++; } } catch(e) {}
var actual = 'No Crash';
try { if (Inst2 <= 1000 && typeof (actual) != "undefined") {_RecordType("<421,427,9>",(actual)); Inst2++; } } catch(e) {}
var expect = 'No Crash';
try { if (Inst3 <= 1000 && typeof (expect) != "undefined") {_RecordType("<446,452,10>",(expect)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (printBugNumber) != "undefined") {_RecordType("<467,481,11>",(printBugNumber)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<482,491,11>",(BUGNUMBER)); Inst5++; } } catch(e) {}
printBugNumber(BUGNUMBER);
try { if (Inst6 <= 1000 && typeof (printStatus) != "undefined") {_RecordType("<494,505,12>",(printStatus)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (summary) != "undefined") {_RecordType("<506,513,12>",(summary)); Inst7++; } } catch(e) {}
printStatus(summary);
var N = 100 * 1000;
try { if (Inst8 <= 1000 && typeof (N) != "undefined") {_RecordType("<520,521,13>",(N)); Inst8++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (new Array(N).join) != "undefined") {_RecordType("<549,566,14>",(new Array(N).join)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Array) != "undefined") {_RecordType("<553,558,14>",(Array)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (N) != "undefined") {_RecordType("<559,560,14>",(N)); Inst12++; } } catch(e) {}
var prefix = new Array(N).join("a"); // prefix is sequence of N "a"
try { if (Inst9 <= 1000 && typeof (prefix) != "undefined") {_RecordType("<540,546,14>",(prefix)); Inst9++; } } catch(e) {}

var suffix = "111";
try { if (Inst13 <= 1000 && typeof (suffix) != "undefined") {_RecordType("<609,615,16>",(suffix)); Inst13++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<638,644,17>",(RegExp)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (prefix) != "undefined") {_RecordType("<645,651,17>",(prefix)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (suffix) != "undefined") {_RecordType("<661,667,17>",(suffix)); Inst17++; } } catch(e) {}
var re = new RegExp(prefix + "0?" + suffix); // re is /aaa...aaa0?111/
try { if (Inst14 <= 1000 && typeof (re) != "undefined") {_RecordType("<629,631,17>",(re)); Inst14++; } } catch(e) {}

try { if (Inst19 <= 1000 && typeof (prefix) != "undefined") {_RecordType("<716,722,19>",(prefix)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (suffix) != "undefined") {_RecordType("<725,731,19>",(suffix)); Inst20++; } } catch(e) {}
var str_to_match = prefix + suffix; // str_to_match is "aaa...aaa111"
try { if (Inst18 <= 1000 && typeof (str_to_match) != "undefined") {_RecordType("<701,713,19>",(str_to_match)); Inst18++; } } catch(e) {}

try { if (Inst32 <= 1000 && typeof (e) != "undefined") {_RecordType("<896,897,26>",(e)); Inst32++; } } catch(e) {}
try {
try { if (Inst22 <= 1000 && typeof (str_to_match.search) != "undefined") {_RecordType("<788,807,22>",(str_to_match.search)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (str_to_match) != "undefined") {_RecordType("<788,800,22>",(str_to_match)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (re) != "undefined") {_RecordType("<808,810,22>",(re)); Inst24++; } } catch(e) {}
  var index = str_to_match.search(re);
try { if (Inst21 <= 1000 && typeof (index) != "undefined") {_RecordType("<780,785,22>",(index)); Inst21++; } } catch(e) {}
  expect = 0;
try { if (Inst25 <= 1000 && typeof (expect) != "undefined") {_RecordType("<815,821,23>",(expect)); Inst25++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (index) != "undefined") {_RecordType("<838,843,24>",(index)); Inst27++; } } catch(e) {}
  actual = index;
try { if (Inst26 <= 1000 && typeof (actual) != "undefined") {_RecordType("<829,835,24>",(actual)); Inst26++; } } catch(e) {}
try { if (Inst28 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<847,860,25>",(reportCompare)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (expect) != "undefined") {_RecordType("<861,867,25>",(expect)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (actual) != "undefined") {_RecordType("<869,875,25>",(actual)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (summary) != "undefined") {_RecordType("<877,884,25>",(summary)); Inst31++; } } catch(e) {}
  reportCompare(expect, actual, summary);
} catch (e) {
try { if (Inst33 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<903,916,27>",(reportCompare)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (e) != "undefined") {_RecordType("<923,924,27>",(e)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (Error) != "undefined") {_RecordType("<936,941,27>",(Error)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (actual) != "undefined") {_RecordType("<943,949,27>",(actual)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (summary) != "undefined") {_RecordType("<951,958,27>",(summary)); Inst37++; } } catch(e) {}
  reportCompare(true, e instanceof Error, actual, summary);
}

