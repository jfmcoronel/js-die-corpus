var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* -*- indent-tabs-mode: nil; js-indent-level: 2 -*- */

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
//-----------------------------------------------------------------------------
var BUGNUMBER = 460117;
try { if (Inst0 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<346,355,7>",(BUGNUMBER)); Inst0++; } } catch(e) {}
var summary = 'TM: hasOwnProperty with JIT';
try { if (Inst1 <= 1000 && typeof (summary) != "undefined") {_RecordType("<370,377,8>",(summary)); Inst1++; } } catch(e) {}
var actual = '';
try { if (Inst2 <= 1000 && typeof (actual) != "undefined") {_RecordType("<415,421,9>",(actual)); Inst2++; } } catch(e) {}
var expect = ''; //-----------------------------------------------------------------------------
try { if (Inst3 <= 1000 && typeof (expect) != "undefined") {_RecordType("<432,438,10>",(expect)); Inst3++; } } catch(e) {}

try { if (Inst4 <= 1000 && typeof (test) != "undefined") {_RecordType("<526,530,12>",(test)); Inst4++; } } catch(e) {}
test(); //-----------------------------------------------------------------------------

try { if (Inst5 <= 1000 && typeof (test) != "undefined") {_RecordType("<624,628,14>",(test)); Inst5++; } } catch(e) {}
function test() {
try { if (Inst6 <= 1000 && typeof (printBugNumber) != "undefined") {_RecordType("<635,649,15>",(printBugNumber)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<650,659,15>",(BUGNUMBER)); Inst7++; } } catch(e) {}
  printBugNumber(BUGNUMBER);
try { if (Inst8 <= 1000 && typeof (printStatus) != "undefined") {_RecordType("<664,675,16>",(printStatus)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (summary) != "undefined") {_RecordType("<676,683,16>",(summary)); Inst9++; } } catch(e) {}
  printStatus(summary);

try { if (Inst10 <= 1000 && typeof (t) != "undefined") {_RecordType("<698,699,18>",(t)); Inst10++; } } catch(e) {}
  function t(o, proplist) {
try { if (Inst11 <= 1000 && typeof (o) != "undefined") {_RecordType("<700,701,18>",(o)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (proplist) != "undefined") {_RecordType("<703,711,18>",(proplist)); Inst12++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (proplist.split) != "undefined") {_RecordType("<731,745,19>",(proplist.split)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (proplist) != "undefined") {_RecordType("<731,739,19>",(proplist)); Inst15++; } } catch(e) {}
    var props = proplist.split(/\s+/g);
try { if (Inst13 <= 1000 && typeof (props) != "undefined") {_RecordType("<723,728,19>",(props)); Inst13++; } } catch(e) {}

    for (var i = 0, len = props.length; i < len; i++) {
try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<769,770,21>",(i)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (len) != "undefined") {_RecordType("<776,779,21>",(len)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (props.length) != "undefined") {_RecordType("<782,794,21>",(props.length)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (props) != "undefined") {_RecordType("<782,787,21>",(props)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<796,797,21>",(i)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (len) != "undefined") {_RecordType("<800,803,21>",(len)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<805,806,21>",(i)); Inst22++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (o.hasOwnProperty) != "undefined") {_RecordType("<822,838,22>",(o.hasOwnProperty)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (o) != "undefined") {_RecordType("<822,823,22>",(o)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (props[i]) != "undefined") {_RecordType("<839,847,22>",(props[i])); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (props) != "undefined") {_RecordType("<839,844,22>",(props)); Inst26++; } } catch(e) {}
      if (o.hasOwnProperty(props[i])) {
        // do something
        ;
      } else {
try { if (Inst28 <= 1000 && typeof (props[i]) != "undefined") {_RecordType("<919,927,26>",(props[i])); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (props) != "undefined") {_RecordType("<919,924,26>",(props)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (o.hasOwnProperty) != "undefined") {_RecordType("<937,953,26>",(o.hasOwnProperty)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (o) != "undefined") {_RecordType("<937,938,26>",(o)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (props[i]) != "undefined") {_RecordType("<954,962,26>",(props[i])); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (props) != "undefined") {_RecordType("<954,959,26>",(props)); Inst33++; } } catch(e) {}
        actual += props[i] + ': ' + o.hasOwnProperty(props[i]);
try { if (Inst27 <= 1000 && typeof (actual) != "undefined") {_RecordType("<909,915,26>",(actual)); Inst27++; } } catch(e) {}
      }
    }
  }

  ;
try { if (Inst34 <= 1000 && typeof (t) != "undefined") {_RecordType("<990,991,32>",(t)); Inst34++; } } catch(e) {}
  t({
    bar: 123,
    baz: 123,
    quux: 123
  }, 'bar baz quux');
try { if (Inst35 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1060,1073,37>",(reportCompare)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1074,1080,37>",(expect)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1082,1088,37>",(actual)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (summary) != "undefined") {_RecordType("<1090,1097,37>",(summary)); Inst38++; } } catch(e) {}
  reportCompare(expect, actual, summary + ' : nonjit');
try { if (Inst39 <= 1000 && typeof (t) != "undefined") {_RecordType("<1116,1117,38>",(t)); Inst39++; } } catch(e) {}
  t({
    bar: 123,
    baz: 123,
    quux: 123
  }, 'bar baz quux');
try { if (Inst40 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1186,1199,43>",(reportCompare)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1200,1206,43>",(expect)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1208,1214,43>",(actual)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (summary) != "undefined") {_RecordType("<1216,1223,43>",(summary)); Inst43++; } } catch(e) {}
  reportCompare(expect, actual, summary + ' : jit');
}

