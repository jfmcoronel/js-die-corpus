var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// |reftest| skip-if(xulRuntime.shell) -- browser only

/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
//-----------------------------------------------------------------------------
var BUGNUMBER = 259935;
try { if (Inst0 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<426,435,9>",(BUGNUMBER)); Inst0++; } } catch(e) {}
var summary = 'document.all can be easily detected';
try { if (Inst1 <= 1000 && typeof (summary) != "undefined") {_RecordType("<450,457,10>",(summary)); Inst1++; } } catch(e) {}
var actual = '';
try { if (Inst2 <= 1000 && typeof (actual) != "undefined") {_RecordType("<503,509,11>",(actual)); Inst2++; } } catch(e) {}
var expect = 'not detected';
try { if (Inst3 <= 1000 && typeof (expect) != "undefined") {_RecordType("<520,526,12>",(expect)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (printBugNumber) != "undefined") {_RecordType("<545,559,13>",(printBugNumber)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<560,569,13>",(BUGNUMBER)); Inst5++; } } catch(e) {}
printBugNumber(BUGNUMBER);
try { if (Inst6 <= 1000 && typeof (printStatus) != "undefined") {_RecordType("<572,583,14>",(printStatus)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (summary) != "undefined") {_RecordType("<584,591,14>",(summary)); Inst7++; } } catch(e) {}
printStatus(summary);

try { if (Inst8 <= 1000 && typeof (document) != "undefined") {_RecordType("<606,614,16>",(document)); Inst8++; } } catch(e) {}
if (typeof document == 'undefined') {
  document = {};
try { if (Inst9 <= 1000 && typeof (document) != "undefined") {_RecordType("<635,643,17>",(document)); Inst9++; } } catch(e) {}
}

try { if (Inst10 <= 1000 && typeof (foo) != "undefined") {_RecordType("<662,665,20>",(foo)); Inst10++; } } catch(e) {}
function foo() {
try { if (Inst12 <= 1000 && typeof (document.all) != "undefined") {_RecordType("<682,694,21>",(document.all)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (document) != "undefined") {_RecordType("<682,690,21>",(document)); Inst13++; } } catch(e) {}
  this.ie = document.all;
try { if (Inst11 <= 1000 && typeof (this.ie) != "undefined") {_RecordType("<672,679,21>",(this.ie)); Inst11++; } } catch(e) {}
}

try { if (Inst15 <= 1000 && typeof (foo) != "undefined") {_RecordType("<711,714,24>",(foo)); Inst15++; } } catch(e) {}
var f = new foo();
try { if (Inst14 <= 1000 && typeof (f) != "undefined") {_RecordType("<703,704,24>",(f)); Inst14++; } } catch(e) {}

try { if (Inst16 <= 1000 && typeof (f.ie) != "undefined") {_RecordType("<723,727,26>",(f.ie)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (f) != "undefined") {_RecordType("<723,724,26>",(f)); Inst17++; } } catch(e) {}
if (f.ie) {
  actual = 'detected';
try { if (Inst18 <= 1000 && typeof (actual) != "undefined") {_RecordType("<733,739,27>",(actual)); Inst18++; } } catch(e) {}
} else {
  actual = 'not detected';
try { if (Inst19 <= 1000 && typeof (actual) != "undefined") {_RecordType("<765,771,29>",(actual)); Inst19++; } } catch(e) {}
}

try { if (Inst20 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<793,806,32>",(reportCompare)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (expect) != "undefined") {_RecordType("<807,813,32>",(expect)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (actual) != "undefined") {_RecordType("<815,821,32>",(actual)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (summary) != "undefined") {_RecordType("<823,830,32>",(summary)); Inst23++; } } catch(e) {}
reportCompare(expect, actual, summary);
try { if (Inst25 <= 1000 && typeof (document.all) != "undefined") {_RecordType("<845,857,34>",(document.all)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (document) != "undefined") {_RecordType("<845,853,34>",(document)); Inst26++; } } catch(e) {}
f = {
  ie: document.all
};
try { if (Inst24 <= 1000 && typeof (f) != "undefined") {_RecordType("<833,834,33>",(f)); Inst24++; } } catch(e) {}

try { if (Inst27 <= 1000 && typeof (f.ie) != "undefined") {_RecordType("<866,870,37>",(f.ie)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (f) != "undefined") {_RecordType("<866,867,37>",(f)); Inst28++; } } catch(e) {}
if (f.ie) {
  actual = 'detected';
try { if (Inst29 <= 1000 && typeof (actual) != "undefined") {_RecordType("<876,882,38>",(actual)); Inst29++; } } catch(e) {}
} else {
  actual = 'not detected';
try { if (Inst30 <= 1000 && typeof (actual) != "undefined") {_RecordType("<908,914,40>",(actual)); Inst30++; } } catch(e) {}
}

try { if (Inst31 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<936,949,43>",(reportCompare)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (expect) != "undefined") {_RecordType("<950,956,43>",(expect)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (actual) != "undefined") {_RecordType("<958,964,43>",(actual)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (summary) != "undefined") {_RecordType("<966,973,43>",(summary)); Inst34++; } } catch(e) {}
reportCompare(expect, actual, summary);

