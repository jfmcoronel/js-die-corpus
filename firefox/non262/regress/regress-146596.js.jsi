var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* -*- indent-tabs-mode: nil; js-indent-level: 2 -*- */

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

/*
 *
 * Date:    18 Jun 2002
 * SUMMARY: Shouldn't crash when catch parameter is "hidden" by varX
 * See http://bugzilla.mozilla.org/show_bug.cgi?id=146596
 *
 */
//-----------------------------------------------------------------------------
var UBound = 0;
try { if (Inst0 <= 1000 && typeof (UBound) != "undefined") {_RecordType("<511,517,15>",(UBound)); Inst0++; } } catch(e) {}
var BUGNUMBER = 146596;
try { if (Inst1 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<527,536,16>",(BUGNUMBER)); Inst1++; } } catch(e) {}
var summary = "Shouldn't crash when catch parameter is 'hidden' by varX";
try { if (Inst2 <= 1000 && typeof (summary) != "undefined") {_RecordType("<551,558,17>",(summary)); Inst2++; } } catch(e) {}
var status = '';
try { if (Inst3 <= 1000 && typeof (status) != "undefined") {_RecordType("<625,631,18>",(status)); Inst3++; } } catch(e) {}
var statusitems = [];
try { if (Inst4 <= 1000 && typeof (statusitems) != "undefined") {_RecordType("<642,653,19>",(statusitems)); Inst4++; } } catch(e) {}
var actual = '';
try { if (Inst5 <= 1000 && typeof (actual) != "undefined") {_RecordType("<664,670,20>",(actual)); Inst5++; } } catch(e) {}
var actualvalues = [];
try { if (Inst6 <= 1000 && typeof (actualvalues) != "undefined") {_RecordType("<681,693,21>",(actualvalues)); Inst6++; } } catch(e) {}
var expect = '';
try { if (Inst7 <= 1000 && typeof (expect) != "undefined") {_RecordType("<704,710,22>",(expect)); Inst7++; } } catch(e) {}
var expectedvalues = [];
try { if (Inst8 <= 1000 && typeof (expectedvalues) != "undefined") {_RecordType("<721,735,23>",(expectedvalues)); Inst8++; } } catch(e) {}
/*
 * Just seeing we don't crash when executing this function -
 * This example provided by jim-patterson@ncf.ca
 *
 * Brendan: "Jim, thanks for the testcase. But note that |var|
 * in a JS function makes a function-scoped variable --  JS lacks
 * block scope apart from for catch variables within catch blocks.
 *
 * Therefore the catch variable hides the function-local variable."
 */

try { if (Inst9 <= 1000 && typeof (F) != "undefined") {_RecordType("<1139,1140,35>",(F)); Inst9++; } } catch(e) {}
function F() {
try { if (Inst10 <= 1000 && typeof (e) != "undefined") {_RecordType("<1197,1198,38>",(e)); Inst10++; } } catch(e) {}
  try {
    return "A simple exception";
  } catch (e) {
    var e = "Another exception";
try { if (Inst11 <= 1000 && typeof (e) != "undefined") {_RecordType("<1210,1211,39>",(e)); Inst11++; } } catch(e) {}
  }

  return 'XYZ';
}

try { if (Inst13 <= 1000 && typeof (inSection) != "undefined") {_RecordType("<1268,1277,45>",(inSection)); Inst13++; } } catch(e) {}
status = inSection(1);
try { if (Inst12 <= 1000 && typeof (status) != "undefined") {_RecordType("<1259,1265,45>",(status)); Inst12++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (F) != "undefined") {_RecordType("<1291,1292,46>",(F)); Inst15++; } } catch(e) {}
actual = F();
try { if (Inst14 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1282,1288,46>",(actual)); Inst14++; } } catch(e) {}
expect = "A simple exception";
try { if (Inst16 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1296,1302,47>",(expect)); Inst16++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (addThis) != "undefined") {_RecordType("<1327,1334,48>",(addThis)); Inst17++; } } catch(e) {}
addThis();
/*
 * Sanity check by Brendan: "This should output
 *
 *             24
 *             42
 *          undefined
 *
 * and throw no uncaught exception."
 *
 */

try { if (Inst18 <= 1000 && typeof (f) != "undefined") {_RecordType("<1507,1508,60>",(f)); Inst18++; } } catch(e) {}
function f(obj) {
try { if (Inst19 <= 1000 && typeof (obj) != "undefined") {_RecordType("<1509,1512,60>",(obj)); Inst19++; } } catch(e) {}
  var res = [];
try { if (Inst20 <= 1000 && typeof (res) != "undefined") {_RecordType("<1522,1525,61>",(res)); Inst20++; } } catch(e) {}

try { if (Inst21 <= 1000 && typeof (e) != "undefined") {_RecordType("<1566,1567,65>",(e)); Inst21++; } } catch(e) {}
  try {
    throw 42;
  } catch (e) {
try { if (Inst22 <= 1000 && typeof (obj) != "undefined") {_RecordType("<1581,1584,66>",(obj)); Inst22++; } } catch(e) {}
    with (obj) {
      var e;
try { if (Inst23 <= 1000 && typeof (e) != "undefined") {_RecordType("<1598,1599,67>",(e)); Inst23++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (e) != "undefined") {_RecordType("<1616,1617,68>",(e)); Inst26++; } } catch(e) {}
      res[0] = e; // |with| binds tighter than |catch|; s/b |obj.e|
try { if (Inst24 <= 1000 && typeof (res[0]) != "undefined") {_RecordType("<1607,1613,68>",(res[0])); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (res) != "undefined") {_RecordType("<1607,1610,68>",(res)); Inst25++; } } catch(e) {}
    }
try { if (Inst29 <= 1000 && typeof (e) != "undefined") {_RecordType("<1688,1689,70>",(e)); Inst29++; } } catch(e) {}
    res[1] = e; // |catch| binds tighter than function scope; s/b 42
try { if (Inst27 <= 1000 && typeof (res[1]) != "undefined") {_RecordType("<1679,1685,70>",(res[1])); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (res) != "undefined") {_RecordType("<1679,1682,70>",(res)); Inst28++; } } catch(e) {}
  }

try { if (Inst32 <= 1000 && typeof (e) != "undefined") {_RecordType("<1760,1761,73>",(e)); Inst32++; } } catch(e) {}
  res[2] = e; // |var e| has function scope; s/b visible but contain |undefined|
try { if (Inst30 <= 1000 && typeof (res[2]) != "undefined") {_RecordType("<1751,1757,73>",(res[2])); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (res) != "undefined") {_RecordType("<1751,1754,73>",(res)); Inst31++; } } catch(e) {}

try { if (Inst33 <= 1000 && typeof (res) != "undefined") {_RecordType("<1840,1843,75>",(res)); Inst33++; } } catch(e) {}
  return res;
}

try { if (Inst35 <= 1000 && typeof (inSection) != "undefined") {_RecordType("<1857,1866,78>",(inSection)); Inst35++; } } catch(e) {}
status = inSection(2);
try { if (Inst34 <= 1000 && typeof (status) != "undefined") {_RecordType("<1848,1854,78>",(status)); Inst34++; } } catch(e) {}
try { if (Inst37 <= 1000 && typeof (f) != "undefined") {_RecordType("<1880,1881,79>",(f)); Inst37++; } } catch(e) {}
actual = f({
  e: 24
});
try { if (Inst36 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1871,1877,79>",(actual)); Inst36++; } } catch(e) {}
try { if (Inst39 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<1914,1923,82>",(undefined)); Inst39++; } } catch(e) {}
expect = [24, 42, undefined];
try { if (Inst38 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1896,1902,82>",(expect)); Inst38++; } } catch(e) {}
try { if (Inst40 <= 1000 && typeof (addThis) != "undefined") {_RecordType("<1926,1933,83>",(addThis)); Inst40++; } } catch(e) {}
addThis(); //-----------------------------------------------------------------------------

try { if (Inst41 <= 1000 && typeof (test) != "undefined") {_RecordType("<2018,2022,85>",(test)); Inst41++; } } catch(e) {}
test(); //-----------------------------------------------------------------------------

try { if (Inst42 <= 1000 && typeof (addThis) != "undefined") {_RecordType("<2116,2123,87>",(addThis)); Inst42++; } } catch(e) {}
function addThis() {
try { if (Inst45 <= 1000 && typeof (status) != "undefined") {_RecordType("<2152,2158,88>",(status)); Inst45++; } } catch(e) {}
  statusitems[UBound] = status;
try { if (Inst43 <= 1000 && typeof (statusitems[UBound]) != "undefined") {_RecordType("<2130,2149,88>",(statusitems[UBound])); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (statusitems) != "undefined") {_RecordType("<2130,2141,88>",(statusitems)); Inst44++; } } catch(e) {}
try { if (Inst48 <= 1000 && typeof (actual.toString) != "undefined") {_RecordType("<2185,2200,89>",(actual.toString)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (actual) != "undefined") {_RecordType("<2185,2191,89>",(actual)); Inst49++; } } catch(e) {}
  actualvalues[UBound] = actual.toString();
try { if (Inst46 <= 1000 && typeof (actualvalues[UBound]) != "undefined") {_RecordType("<2162,2182,89>",(actualvalues[UBound])); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (actualvalues) != "undefined") {_RecordType("<2162,2174,89>",(actualvalues)); Inst47++; } } catch(e) {}
try { if (Inst52 <= 1000 && typeof (expect.toString) != "undefined") {_RecordType("<2231,2246,90>",(expect.toString)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (expect) != "undefined") {_RecordType("<2231,2237,90>",(expect)); Inst53++; } } catch(e) {}
  expectedvalues[UBound] = expect.toString();
try { if (Inst50 <= 1000 && typeof (expectedvalues[UBound]) != "undefined") {_RecordType("<2206,2228,90>",(expectedvalues[UBound])); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (expectedvalues) != "undefined") {_RecordType("<2206,2220,90>",(expectedvalues)); Inst51++; } } catch(e) {}
try { if (Inst54 <= 1000 && typeof (UBound) != "undefined") {_RecordType("<2252,2258,91>",(UBound)); Inst54++; } } catch(e) {}
  UBound++;
}

try { if (Inst55 <= 1000 && typeof (test) != "undefined") {_RecordType("<2274,2278,94>",(test)); Inst55++; } } catch(e) {}
function test() {
try { if (Inst56 <= 1000 && typeof (printBugNumber) != "undefined") {_RecordType("<2285,2299,95>",(printBugNumber)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<2300,2309,95>",(BUGNUMBER)); Inst57++; } } catch(e) {}
  printBugNumber(BUGNUMBER);
try { if (Inst58 <= 1000 && typeof (printStatus) != "undefined") {_RecordType("<2314,2325,96>",(printStatus)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (summary) != "undefined") {_RecordType("<2326,2333,96>",(summary)); Inst59++; } } catch(e) {}
  printStatus(summary);

  for (var i = 0; i < UBound; i++) {
try { if (Inst60 <= 1000 && typeof (i) != "undefined") {_RecordType("<2348,2349,98>",(i)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (i) != "undefined") {_RecordType("<2355,2356,98>",(i)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (UBound) != "undefined") {_RecordType("<2359,2365,98>",(UBound)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (i) != "undefined") {_RecordType("<2367,2368,98>",(i)); Inst63++; } } catch(e) {}
try { if (Inst64 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<2378,2391,99>",(reportCompare)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (expectedvalues[i]) != "undefined") {_RecordType("<2392,2409,99>",(expectedvalues[i])); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (expectedvalues) != "undefined") {_RecordType("<2392,2406,99>",(expectedvalues)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (actualvalues[i]) != "undefined") {_RecordType("<2411,2426,99>",(actualvalues[i])); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (actualvalues) != "undefined") {_RecordType("<2411,2423,99>",(actualvalues)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (statusitems[i]) != "undefined") {_RecordType("<2428,2442,99>",(statusitems[i])); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (statusitems) != "undefined") {_RecordType("<2428,2439,99>",(statusitems)); Inst70++; } } catch(e) {}
    reportCompare(expectedvalues[i], actualvalues[i], statusitems[i]);
  }
}

