var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* -*- indent-tabs-mode: nil; js-indent-level: 2 -*- */

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
//-----------------------------------------------------------------------------
var BUGNUMBER = 427798;
try { if (Inst0 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<346,355,7>",(BUGNUMBER)); Inst0++; } } catch(e) {}
var summary = 'js_PutBlockObject is slow';
try { if (Inst1 <= 1000 && typeof (summary) != "undefined") {_RecordType("<370,377,8>",(summary)); Inst1++; } } catch(e) {}
var actual = 'Good result';
try { if (Inst2 <= 1000 && typeof (actual) != "undefined") {_RecordType("<413,419,9>",(actual)); Inst2++; } } catch(e) {}
var expect = 'Good result'; //-----------------------------------------------------------------------------
try { if (Inst3 <= 1000 && typeof (expect) != "undefined") {_RecordType("<441,447,10>",(expect)); Inst3++; } } catch(e) {}

try { if (Inst4 <= 1000 && typeof (test) != "undefined") {_RecordType("<546,550,12>",(test)); Inst4++; } } catch(e) {}
test(); //-----------------------------------------------------------------------------

try { if (Inst5 <= 1000 && typeof (test) != "undefined") {_RecordType("<644,648,14>",(test)); Inst5++; } } catch(e) {}
function test() {
try { if (Inst6 <= 1000 && typeof (printBugNumber) != "undefined") {_RecordType("<655,669,15>",(printBugNumber)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<670,679,15>",(BUGNUMBER)); Inst7++; } } catch(e) {}
  printBugNumber(BUGNUMBER);
try { if (Inst8 <= 1000 && typeof (printStatus) != "undefined") {_RecordType("<684,695,16>",(printStatus)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (summary) != "undefined") {_RecordType("<696,703,16>",(summary)); Inst9++; } } catch(e) {}
  printStatus(summary);

try { if (Inst10 <= 1000 && typeof (f) != "undefined") {_RecordType("<718,719,18>",(f)); Inst10++; } } catch(e) {}
  function f(N) {
try { if (Inst11 <= 1000 && typeof (N) != "undefined") {_RecordType("<720,721,18>",(N)); Inst11++; } } catch(e) {}
    for (var i = 0; i != N; ++i) {
try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<738,739,19>",(i)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<745,746,19>",(i)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (N) != "undefined") {_RecordType("<750,751,19>",(N)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<755,756,19>",(i)); Inst15++; } } catch(e) {}
      var f, g;
try { if (Inst16 <= 1000 && typeof (f) != "undefined") {_RecordType("<770,771,20>",(f)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (g) != "undefined") {_RecordType("<773,774,20>",(g)); Inst17++; } } catch(e) {}
      {
try { if (Inst19 <= 1000 && typeof (i) != "undefined") {_RecordType("<800,801,22>",(i)); Inst19++; } } catch(e) {}
        let j = i + 1;
try { if (Inst18 <= 1000 && typeof (j) != "undefined") {_RecordType("<796,797,22>",(j)); Inst18++; } } catch(e) {}

        f = function () {
          j += 2;
try { if (Inst21 <= 1000 && typeof (j) != "undefined") {_RecordType("<844,845,25>",(j)); Inst21++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (j) != "undefined") {_RecordType("<869,870,26>",(j)); Inst22++; } } catch(e) {}
          return j;
        };
try { if (Inst20 <= 1000 && typeof (f) != "undefined") {_RecordType("<816,817,24>",(f)); Inst20++; } } catch(e) {}

try { if (Inst23 <= 1000 && typeof (f) != "undefined") {_RecordType("<896,897,29>",(f)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<903,904,29>",(i)); Inst24++; } } catch(e) {}
        if (f() != i + 3) {
          throw "Bad result";
        }
      }

try { if (Inst25 <= 1000 && typeof (f) != "undefined") {_RecordType("<971,972,34>",(f)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (i) != "undefined") {_RecordType("<978,979,34>",(i)); Inst26++; } } catch(e) {}
      if (f() != i + 5) {
        throw "Bad result";
      }

      {
try { if (Inst28 <= 1000 && typeof (i) != "undefined") {_RecordType("<1048,1049,39>",(i)); Inst28++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (i) != "undefined") {_RecordType("<1071,1072,40>",(i)); Inst30++; } } catch(e) {}
        let j = i + 1,
            k = i + 2;
try { if (Inst27 <= 1000 && typeof (j) != "undefined") {_RecordType("<1044,1045,39>",(j)); Inst27++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (k) != "undefined") {_RecordType("<1067,1068,40>",(k)); Inst29++; } } catch(e) {}

        f = function () {
          j += 2;
try { if (Inst32 <= 1000 && typeof (j) != "undefined") {_RecordType("<1115,1116,43>",(j)); Inst32++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (k) != "undefined") {_RecordType("<1133,1134,44>",(k)); Inst33++; } } catch(e) {}
          k++;
try { if (Inst34 <= 1000 && typeof (j) != "undefined") {_RecordType("<1155,1156,45>",(j)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (k) != "undefined") {_RecordType("<1159,1160,45>",(k)); Inst35++; } } catch(e) {}
          return j + k;
        };
try { if (Inst31 <= 1000 && typeof (f) != "undefined") {_RecordType("<1087,1088,42>",(f)); Inst31++; } } catch(e) {}

try { if (Inst36 <= 1000 && typeof (f) != "undefined") {_RecordType("<1186,1187,48>",(f)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (i) != "undefined") {_RecordType("<1193,1194,48>",(i)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (i) != "undefined") {_RecordType("<1197,1198,48>",(i)); Inst38++; } } catch(e) {}
        if (f() != i + i + 6) {
          throw "Bad result";
        }
      }

try { if (Inst39 <= 1000 && typeof (f) != "undefined") {_RecordType("<1265,1266,53>",(f)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (i) != "undefined") {_RecordType("<1272,1273,53>",(i)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (i) != "undefined") {_RecordType("<1276,1277,53>",(i)); Inst41++; } } catch(e) {}
      if (f() != i + i + 9) {
        throw "Bad result";
      }
    }
  }

try { if (Inst43 <= 1000 && typeof (ex) != "undefined") {_RecordType("<1369,1371,61>",(ex)); Inst43++; } } catch(e) {}
  try {
try { if (Inst42 <= 1000 && typeof (f) != "undefined") {_RecordType("<1344,1345,60>",(f)); Inst42++; } } catch(e) {}
    f(20 * 1000);
  } catch (ex) {
try { if (Inst45 <= 1000 && typeof (ex) != "undefined") {_RecordType("<1388,1390,62>",(ex)); Inst45++; } } catch(e) {}
    actual = ex + '';
try { if (Inst44 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1379,1385,62>",(actual)); Inst44++; } } catch(e) {}
  }

try { if (Inst46 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1404,1417,65>",(reportCompare)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1418,1424,65>",(expect)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1426,1432,65>",(actual)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (summary) != "undefined") {_RecordType("<1434,1441,65>",(summary)); Inst49++; } } catch(e) {}
  reportCompare(expect, actual, summary);
}

