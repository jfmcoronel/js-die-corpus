var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* -*- tab-width: 2; indent-tabs-mode: nil; js-indent-level: 2 -*- */

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
//-----------------------------------------------------------------------------
var BUGNUMBER = 288688;
try { if (Inst0 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<360,369,7>",(BUGNUMBER)); Inst0++; } } catch(e) {}
var summary = 'x->regExpStatics should be stacked and unstacked around the lambda invocations';
try { if (Inst1 <= 1000 && typeof (summary) != "undefined") {_RecordType("<384,391,8>",(summary)); Inst1++; } } catch(e) {}
var actual = '';
try { if (Inst2 <= 1000 && typeof (actual) != "undefined") {_RecordType("<480,486,9>",(actual)); Inst2++; } } catch(e) {}
var expect = '';
try { if (Inst3 <= 1000 && typeof (expect) != "undefined") {_RecordType("<497,503,10>",(expect)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (printBugNumber) != "undefined") {_RecordType("<510,524,11>",(printBugNumber)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<525,534,11>",(BUGNUMBER)); Inst5++; } } catch(e) {}
printBugNumber(BUGNUMBER);
try { if (Inst6 <= 1000 && typeof (printStatus) != "undefined") {_RecordType("<537,548,12>",(printStatus)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (summary) != "undefined") {_RecordType("<549,556,12>",(summary)); Inst7++; } } catch(e) {}
printStatus(summary);

try { if (Inst8 <= 1000 && typeof (genGluck) != "undefined") {_RecordType("<569,577,14>",(genGluck)); Inst8++; } } catch(e) {}
function genGluck(str) {
try { if (Inst9 <= 1000 && typeof (str) != "undefined") {_RecordType("<578,581,14>",(str)); Inst9++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (str) != "undefined") {_RecordType("<595,598,15>",(str)); Inst11++; } } catch(e) {}
  var x = str;
try { if (Inst10 <= 1000 && typeof (x) != "undefined") {_RecordType("<591,592,15>",(x)); Inst10++; } } catch(e) {}
  var rx = /end/i;
try { if (Inst12 <= 1000 && typeof (rx) != "undefined") {_RecordType("<606,608,16>",(rx)); Inst12++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (x.replace) != "undefined") {_RecordType("<625,634,17>",(x.replace)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (x) != "undefined") {_RecordType("<625,626,17>",(x)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (rx) != "undefined") {_RecordType("<635,637,17>",(rx)); Inst16++; } } catch(e) {}
  x = x.replace(rx, function ($1) {
try { if (Inst17 <= 1000 && typeof ($1) != "undefined") {_RecordType("<649,651,17>",($1)); Inst17++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof ($1.match) != "undefined") {_RecordType("<659,667,18>",($1.match)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof ($1) != "undefined") {_RecordType("<659,661,18>",($1)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (rx) != "undefined") {_RecordType("<668,670,18>",(rx)); Inst20++; } } catch(e) {}
    $1.match(rx);
    return "";
  });
try { if (Inst13 <= 1000 && typeof (x) != "undefined") {_RecordType("<621,622,17>",(x)); Inst13++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (x.replace) != "undefined") {_RecordType("<700,709,21>",(x.replace)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (x) != "undefined") {_RecordType("<700,701,21>",(x)); Inst23++; } } catch(e) {}
  x = x.replace(/^end/, "");
try { if (Inst21 <= 1000 && typeof (x) != "undefined") {_RecordType("<696,697,21>",(x)); Inst21++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (x) != "undefined") {_RecordType("<732,733,22>",(x)); Inst24++; } } catch(e) {}
  return x;
}

expect
try { if (Inst25 <= 1000 && typeof (expect) != "undefined") {_RecordType("<738,744,25>",(expect)); Inst25++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (genGluck) != "undefined") {_RecordType("<2891,2899,26>",(genGluck)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (expect) != "undefined") {_RecordType("<2900,2906,26>",(expect)); Inst28++; } } catch(e) {}
actual = genGluck(expect + "end");
try { if (Inst26 <= 1000 && typeof (actual) != "undefined") {_RecordType("<2882,2888,26>",(actual)); Inst26++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<2917,2930,27>",(reportCompare)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (expect) != "undefined") {_RecordType("<2931,2937,27>",(expect)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (actual) != "undefined") {_RecordType("<2939,2945,27>",(actual)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (summary) != "undefined") {_RecordType("<2947,2954,27>",(summary)); Inst32++; } } catch(e) {}
reportCompare(expect, actual, summary);

