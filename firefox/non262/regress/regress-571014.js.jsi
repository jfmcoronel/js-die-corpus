var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
var F, o;
try { if (Inst0 <= 1000 && typeof (F) != "undefined") {_RecordType("<4,5,1>",(F)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (o) != "undefined") {_RecordType("<7,8,1>",(o)); Inst1++; } } catch(e) {}

F = function () {
  ;
};
try { if (Inst2 <= 1000 && typeof (F) != "undefined") {_RecordType("<11,12,3>",(F)); Inst2++; } } catch(e) {}

try { if (Inst5 <= 1000 && typeof (ArrayBuffer) != "undefined") {_RecordType("<55,66,7>",(ArrayBuffer)); Inst5++; } } catch(e) {}
F.prototype = new ArrayBuffer(1);
try { if (Inst3 <= 1000 && typeof (F.prototype) != "undefined") {_RecordType("<37,48,7>",(F.prototype)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (F) != "undefined") {_RecordType("<37,38,7>",(F)); Inst4++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (F) != "undefined") {_RecordType("<79,80,8>",(F)); Inst7++; } } catch(e) {}
o = new F();
try { if (Inst6 <= 1000 && typeof (o) != "undefined") {_RecordType("<71,72,8>",(o)); Inst6++; } } catch(e) {}

try { if (Inst10 <= 1000 && typeof (ex) != "undefined") {_RecordType("<116,118,12>",(ex)); Inst10++; } } catch(e) {}
try {
try { if (Inst8 <= 1000 && typeof (o.byteLength) != "undefined") {_RecordType("<93,105,11>",(o.byteLength)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (o) != "undefined") {_RecordType("<93,94,11>",(o)); Inst9++; } } catch(e) {}
  o.byteLength;
} catch (ex) {
  // o is not a platform object
try { if (Inst11 <= 1000 && typeof (ex) != "undefined") {_RecordType("<156,158,14>",(ex)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<170,179,14>",(TypeError)); Inst12++; } } catch(e) {}
  ex instanceof TypeError;
  true;
}

o = {};
try { if (Inst13 <= 1000 && typeof (o) != "undefined") {_RecordType("<192,193,18>",(o)); Inst13++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (Int32Array) != "undefined") {_RecordType("<218,228,19>",(Int32Array)); Inst16++; } } catch(e) {}
o.__proto__ = new Int32Array(1);
try { if (Inst14 <= 1000 && typeof (o.__proto__) != "undefined") {_RecordType("<200,211,19>",(o.__proto__)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (o) != "undefined") {_RecordType("<200,201,19>",(o)); Inst15++; } } catch(e) {}

try { if (Inst20 <= 1000 && typeof (ex) != "undefined") {_RecordType("<272,274,23>",(ex)); Inst20++; } } catch(e) {}
try {
try { if (Inst17 <= 1000 && typeof (o.buffer.byteLength) != "undefined") {_RecordType("<242,261,22>",(o.buffer.byteLength)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (o.buffer) != "undefined") {_RecordType("<242,250,22>",(o.buffer)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (o) != "undefined") {_RecordType("<242,243,22>",(o)); Inst19++; } } catch(e) {}
  o.buffer.byteLength;
} catch (ex) {
  // o is not a platform object
try { if (Inst21 <= 1000 && typeof (ex) != "undefined") {_RecordType("<312,314,25>",(ex)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<326,335,25>",(TypeError)); Inst22++; } } catch(e) {}
  ex instanceof TypeError;
  true;
}

F = function () {
  ;
};
try { if (Inst23 <= 1000 && typeof (F) != "undefined") {_RecordType("<348,349,29>",(F)); Inst23++; } } catch(e) {}

try { if (Inst26 <= 1000 && typeof (Int32Array) != "undefined") {_RecordType("<392,402,33>",(Int32Array)); Inst26++; } } catch(e) {}
F.prototype = new Int32Array(1);
try { if (Inst24 <= 1000 && typeof (F.prototype) != "undefined") {_RecordType("<374,385,33>",(F.prototype)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (F) != "undefined") {_RecordType("<374,375,33>",(F)); Inst25++; } } catch(e) {}
try { if (Inst28 <= 1000 && typeof (F) != "undefined") {_RecordType("<415,416,34>",(F)); Inst28++; } } catch(e) {}
o = new F();
try { if (Inst27 <= 1000 && typeof (o) != "undefined") {_RecordType("<407,408,34>",(o)); Inst27++; } } catch(e) {}

try { if (Inst32 <= 1000 && typeof (ex) != "undefined") {_RecordType("<496,498,39>",(ex)); Inst32++; } } catch(e) {}
try {
try { if (Inst29 <= 1000 && typeof (o.slice) != "undefined") {_RecordType("<429,436,37>",(o.slice)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (o) != "undefined") {_RecordType("<429,430,37>",(o)); Inst30++; } } catch(e) {}
  o.slice(0, 1);
try { if (Inst31 <= 1000 && typeof (reportFailure) != "undefined") {_RecordType("<446,459,38>",(reportFailure)); Inst31++; } } catch(e) {}
  reportFailure("Expected an exception!");
} catch (ex) {
  ;
}

try { if (Inst33 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<509,522,43>",(reportCompare)); Inst33++; } } catch(e) {}
reportCompare("ok", "ok", "bug 571014");

