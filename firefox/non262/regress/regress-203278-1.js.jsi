var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* -*- indent-tabs-mode: nil; js-indent-level: 2 -*- */

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
//-----------------------------------------------------------------------------
var BUGNUMBER = 203278;
try { if (Inst0 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<346,355,7>",(BUGNUMBER)); Inst0++; } } catch(e) {}
var summary = 'Don\'t crash in recursive js_MarkGCThing';
try { if (Inst1 <= 1000 && typeof (summary) != "undefined") {_RecordType("<370,377,8>",(summary)); Inst1++; } } catch(e) {}
var actual = 'FAIL';
try { if (Inst2 <= 1000 && typeof (actual) != "undefined") {_RecordType("<428,434,9>",(actual)); Inst2++; } } catch(e) {}
var expect = 'PASS';
try { if (Inst3 <= 1000 && typeof (expect) != "undefined") {_RecordType("<449,455,10>",(expect)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (printBugNumber) != "undefined") {_RecordType("<466,480,11>",(printBugNumber)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<481,490,11>",(BUGNUMBER)); Inst5++; } } catch(e) {}
printBugNumber(BUGNUMBER);
try { if (Inst6 <= 1000 && typeof (printStatus) != "undefined") {_RecordType("<493,504,12>",(printStatus)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (summary) != "undefined") {_RecordType("<505,512,12>",(summary)); Inst7++; } } catch(e) {}
printStatus(summary);

try { if (Inst8 <= 1000 && typeof (test1) != "undefined") {_RecordType("<525,530,14>",(test1)); Inst8++; } } catch(e) {}
function test1() {
  ;
}

try { if (Inst9 <= 1000 && typeof (test) != "undefined") {_RecordType("<551,555,18>",(test)); Inst9++; } } catch(e) {}
function test() {
try { if (Inst10 <= 1000 && typeof (test1.call) != "undefined") {_RecordType("<562,572,19>",(test1.call)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (test1) != "undefined") {_RecordType("<562,567,19>",(test1)); Inst11++; } } catch(e) {}
  test1.call(this);
}

try { if (Inst14 <= 1000 && typeof (test1) != "undefined") {_RecordType("<604,609,22>",(test1)); Inst14++; } } catch(e) {}
test.prototype = new test1();
try { if (Inst12 <= 1000 && typeof (test.prototype) != "undefined") {_RecordType("<583,597,22>",(test.prototype)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (test) != "undefined") {_RecordType("<583,587,22>",(test)); Inst13++; } } catch(e) {}
var length = 512 * 1024 - 1;
try { if (Inst15 <= 1000 && typeof (length) != "undefined") {_RecordType("<617,623,23>",(length)); Inst15++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (test) != "undefined") {_RecordType("<656,660,24>",(test)); Inst17++; } } catch(e) {}
var obj = new test();
try { if (Inst16 <= 1000 && typeof (obj) != "undefined") {_RecordType("<646,649,24>",(obj)); Inst16++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (obj) != "undefined") {_RecordType("<676,679,25>",(obj)); Inst19++; } } catch(e) {}
var first = obj;
try { if (Inst18 <= 1000 && typeof (first) != "undefined") {_RecordType("<668,673,25>",(first)); Inst18++; } } catch(e) {}

for (var i = 0; i < length; i++) {
try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<691,692,27>",(i)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<698,699,27>",(i)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (length) != "undefined") {_RecordType("<702,708,27>",(length)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<710,711,27>",(i)); Inst23++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (test) != "undefined") {_RecordType("<734,738,28>",(test)); Inst26++; } } catch(e) {}
  obj.next = new test();
try { if (Inst24 <= 1000 && typeof (obj.next) != "undefined") {_RecordType("<719,727,28>",(obj.next)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (obj) != "undefined") {_RecordType("<719,722,28>",(obj)); Inst25++; } } catch(e) {}
try { if (Inst28 <= 1000 && typeof (obj.next) != "undefined") {_RecordType("<750,758,29>",(obj.next)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (obj) != "undefined") {_RecordType("<750,753,29>",(obj)); Inst29++; } } catch(e) {}
  obj = obj.next;
try { if (Inst27 <= 1000 && typeof (obj) != "undefined") {_RecordType("<744,747,29>",(obj)); Inst27++; } } catch(e) {}
}

actual = 'PASS';
try { if (Inst30 <= 1000 && typeof (actual) != "undefined") {_RecordType("<763,769,32>",(actual)); Inst30++; } } catch(e) {}
try { if (Inst31 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<780,793,33>",(reportCompare)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (expect) != "undefined") {_RecordType("<794,800,33>",(expect)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (actual) != "undefined") {_RecordType("<802,808,33>",(actual)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (summary) != "undefined") {_RecordType("<810,817,33>",(summary)); Inst34++; } } catch(e) {}
reportCompare(expect, actual, summary);

