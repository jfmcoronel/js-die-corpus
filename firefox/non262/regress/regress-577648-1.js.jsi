var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/*
 * Any copyright is dedicated to the Public Domain.
 * http://creativecommons.org/licenses/publicdomain/
 */
var count = 0;
try { if (Inst0 <= 1000 && typeof (count) != "undefined") {_RecordType("<116,121,5>",(count)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (testCaller) != "undefined") {_RecordType("<137,147,7>",(testCaller)); Inst1++; } } catch(e) {}
function testCaller(obj) {
try { if (Inst2 <= 1000 && typeof (obj) != "undefined") {_RecordType("<148,151,7>",(obj)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (count) != "undefined") {_RecordType("<167,172,8>",(count)); Inst3++; } } catch(e) {}
  switch (++count) {
    case 1:
    case 2:
      /*
       * The first two times, obj is objA. The first time, we reference
       * arguments.callee.caller before obj.go, so the caller getter must
       * force the joined function object in the stack frame to cross the
       * method read barrier. The second time, obj.go has been cloned and
       * it should match the new frame's callee from the get-go.
       */
try { if (Inst4 <= 1000 && typeof (obj) != "undefined") {_RecordType("<584,587,18>",(obj)); Inst4++; } } catch(e) {}
      obj;
try { if (Inst5 <= 1000 && typeof (objA) != "undefined") {_RecordType("<595,599,19>",(objA)); Inst5++; } } catch(e) {}
      objA;
      break;

    case 3:
      {
try { if (Inst6 <= 1000 && typeof (obj) != "undefined") {_RecordType("<643,646,24>",(obj)); Inst6++; } } catch(e) {}
        obj;
try { if (Inst7 <= 1000 && typeof (objB) != "undefined") {_RecordType("<656,660,25>",(objB)); Inst7++; } } catch(e) {}
        objB;

        /*
         * Store another clone of the joined function object before obj.go has
         * been read, but after it has been invoked via objB.go(objB).
         *
         * In this case, arguments.callee.caller must not lie and return what
         * is currently stored in objB.go, since that function object (objA.go)
         * was cloned earlier, when count was 1, and it is not the function
         * object that was truly invoked.
         *
         * But since the invocation of objB.go(objB) did not clone go, and the
         * following assignment overwrote the invoked value, leaving the only
         * reference to the joined function object for go in the stack frame's
         * callee (argv[-2]) member, the arguments.callee.caller reference must
         * clone a function object for the callee, store it as the callee, and
         * return it here.
         *
         * It won't equal obj.go, but (implementation detail) it should have
         * the same proto as obj.go
         */
try { if (Inst10 <= 1000 && typeof (objA.go) != "undefined") {_RecordType("<1697,1704,46>",(objA.go)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (objA) != "undefined") {_RecordType("<1697,1701,46>",(objA)); Inst11++; } } catch(e) {}
        obj.go = objA.go;
try { if (Inst8 <= 1000 && typeof (obj.go) != "undefined") {_RecordType("<1688,1694,46>",(obj.go)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (obj) != "undefined") {_RecordType("<1688,1691,46>",(obj)); Inst9++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (arguments.callee.caller) != "undefined") {_RecordType("<1727,1750,47>",(arguments.callee.caller)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (arguments.callee) != "undefined") {_RecordType("<1727,1743,47>",(arguments.callee)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<1727,1736,47>",(arguments)); Inst15++; } } catch(e) {}
        let caller = arguments.callee.caller;
try { if (Inst12 <= 1000 && typeof (caller) != "undefined") {_RecordType("<1718,1724,47>",(caller)); Inst12++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (obj.go) != "undefined") {_RecordType("<1773,1779,48>",(obj.go)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (obj) != "undefined") {_RecordType("<1773,1776,48>",(obj)); Inst18++; } } catch(e) {}
        let obj_go = obj.go;
try { if (Inst16 <= 1000 && typeof (obj_go) != "undefined") {_RecordType("<1764,1770,48>",(obj_go)); Inst16++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (caller) != "undefined") {_RecordType("<1796,1802,49>",(caller)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (obj_go) != "undefined") {_RecordType("<1806,1812,49>",(obj_go)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (caller.__proto__) != "undefined") {_RecordType("<1816,1832,49>",(caller.__proto__)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (caller) != "undefined") {_RecordType("<1816,1822,49>",(caller)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (obj_go.__proto__) != "undefined") {_RecordType("<1836,1852,49>",(obj_go.__proto__)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (obj_go) != "undefined") {_RecordType("<1836,1842,49>",(obj_go)); Inst24++; } } catch(e) {}
        return caller != obj_go && caller.__proto__ == obj_go.__proto__;
      }

    case 4:
      {
try { if (Inst25 <= 1000 && typeof (obj) != "undefined") {_RecordType("<1891,1894,54>",(obj)); Inst25++; } } catch(e) {}
        obj;
try { if (Inst26 <= 1000 && typeof (objC) != "undefined") {_RecordType("<1904,1908,55>",(objC)); Inst26++; } } catch(e) {}
        objC;
try { if (Inst28 <= 1000 && typeof (obj.go) != "undefined") {_RecordType("<1929,1935,56>",(obj.go)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (obj) != "undefined") {_RecordType("<1929,1932,56>",(obj)); Inst29++; } } catch(e) {}
        let save = obj.go;
try { if (Inst27 <= 1000 && typeof (save) != "undefined") {_RecordType("<1922,1926,56>",(save)); Inst27++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (obj.go) != "undefined") {_RecordType("<1952,1958,57>",(obj.go)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (obj) != "undefined") {_RecordType("<1952,1955,57>",(obj)); Inst31++; } } catch(e) {}
        delete obj.go;
try { if (Inst32 <= 1000 && typeof (arguments.callee.caller) != "undefined") {_RecordType("<1975,1998,58>",(arguments.callee.caller)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (arguments.callee) != "undefined") {_RecordType("<1975,1991,58>",(arguments.callee)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<1975,1984,58>",(arguments)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (save) != "undefined") {_RecordType("<2002,2006,58>",(save)); Inst35++; } } catch(e) {}
        return arguments.callee.caller == save;
      }

    case 5:
      {
try { if (Inst36 <= 1000 && typeof (obj) != "undefined") {_RecordType("<2045,2048,63>",(obj)); Inst36++; } } catch(e) {}
        obj;
try { if (Inst37 <= 1000 && typeof (objD) != "undefined") {_RecordType("<2058,2062,64>",(objD)); Inst37++; } } catch(e) {}
        objD;
try { if (Inst39 <= 1000 && typeof (obj.go) != "undefined") {_RecordType("<2083,2089,65>",(obj.go)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (obj) != "undefined") {_RecordType("<2083,2086,65>",(obj)); Inst40++; } } catch(e) {}
        let read = obj.go;
try { if (Inst38 <= 1000 && typeof (read) != "undefined") {_RecordType("<2076,2080,65>",(read)); Inst38++; } } catch(e) {}
        break;
      }
  }

try { if (Inst41 <= 1000 && typeof (arguments.callee.caller) != "undefined") {_RecordType("<2128,2151,70>",(arguments.callee.caller)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (arguments.callee) != "undefined") {_RecordType("<2128,2144,70>",(arguments.callee)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<2128,2137,70>",(arguments)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (obj.go) != "undefined") {_RecordType("<2155,2161,70>",(obj.go)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (obj) != "undefined") {_RecordType("<2155,2158,70>",(obj)); Inst45++; } } catch(e) {}
  return arguments.callee.caller == obj.go;
}

try { if (Inst46 <= 1000 && typeof (make) != "undefined") {_RecordType("<2175,2179,73>",(make)); Inst46++; } } catch(e) {}
function make() {
  return {
    go: function (obj) {
try { if (Inst47 <= 1000 && typeof (obj) != "undefined") {_RecordType("<2213,2216,75>",(obj)); Inst47++; } } catch(e) {}
try { if (Inst48 <= 1000 && typeof (testCaller) != "undefined") {_RecordType("<2233,2243,76>",(testCaller)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (obj) != "undefined") {_RecordType("<2244,2247,76>",(obj)); Inst49++; } } catch(e) {}
      return testCaller(obj);
    }
  };
}

try { if (Inst51 <= 1000 && typeof (make) != "undefined") {_RecordType("<2275,2279,81>",(make)); Inst51++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (make) != "undefined") {_RecordType("<2294,2298,82>",(make)); Inst53++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (make) != "undefined") {_RecordType("<2313,2317,83>",(make)); Inst55++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (make) != "undefined") {_RecordType("<2332,2336,84>",(make)); Inst57++; } } catch(e) {}
var objA = make(),
    objB = make(),
    objC = make(),
    objD = make();
try { if (Inst50 <= 1000 && typeof (objA) != "undefined") {_RecordType("<2268,2272,81>",(objA)); Inst50++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (objB) != "undefined") {_RecordType("<2287,2291,82>",(objB)); Inst52++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (objC) != "undefined") {_RecordType("<2306,2310,83>",(objC)); Inst54++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (objD) != "undefined") {_RecordType("<2325,2329,84>",(objD)); Inst56++; } } catch(e) {}
try { if (Inst58 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<2340,2353,85>",(reportCompare)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (objA.go) != "undefined") {_RecordType("<2360,2367,85>",(objA.go)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (objA) != "undefined") {_RecordType("<2360,2364,85>",(objA)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (objA) != "undefined") {_RecordType("<2368,2372,85>",(objA)); Inst61++; } } catch(e) {}
reportCompare(true, objA.go(objA), "1");
try { if (Inst62 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<2381,2394,86>",(reportCompare)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (objA.go) != "undefined") {_RecordType("<2401,2408,86>",(objA.go)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (objA) != "undefined") {_RecordType("<2401,2405,86>",(objA)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (objA) != "undefined") {_RecordType("<2409,2413,86>",(objA)); Inst65++; } } catch(e) {}
reportCompare(true, objA.go(objA), "2");
try { if (Inst66 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<2422,2435,87>",(reportCompare)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (objB.go) != "undefined") {_RecordType("<2442,2449,87>",(objB.go)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (objB) != "undefined") {_RecordType("<2442,2446,87>",(objB)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (objB) != "undefined") {_RecordType("<2450,2454,87>",(objB)); Inst69++; } } catch(e) {}
reportCompare(true, objB.go(objB), "3");
try { if (Inst70 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<2463,2476,88>",(reportCompare)); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (objC.go) != "undefined") {_RecordType("<2483,2490,88>",(objC.go)); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (objC) != "undefined") {_RecordType("<2483,2487,88>",(objC)); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (objC) != "undefined") {_RecordType("<2491,2495,88>",(objC)); Inst73++; } } catch(e) {}
reportCompare(true, objC.go(objC), "4");
try { if (Inst74 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<2504,2517,89>",(reportCompare)); Inst74++; } } catch(e) {}try { if (Inst75 <= 1000 && typeof (objD.go) != "undefined") {_RecordType("<2524,2531,89>",(objD.go)); Inst75++; } } catch(e) {}try { if (Inst76 <= 1000 && typeof (objD) != "undefined") {_RecordType("<2524,2528,89>",(objD)); Inst76++; } } catch(e) {}try { if (Inst77 <= 1000 && typeof (objD) != "undefined") {_RecordType("<2532,2536,89>",(objD)); Inst77++; } } catch(e) {}
reportCompare(true, objD.go(objD), "5");

