var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* -*- indent-tabs-mode: nil; js-indent-level: 2 -*- */

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

/*
 *
 * Date:    30 Sep 2003
 * SUMMARY: Testing concatenation of string + number
 * See http://bugzilla.mozilla.org/show_bug.cgi?id=39309
 *
 */
//-----------------------------------------------------------------------------
var UBound = 0;
try { if (Inst0 <= 1000 && typeof (UBound) != "undefined") {_RecordType("<494,500,15>",(UBound)); Inst0++; } } catch(e) {}
var BUGNUMBER = 39309;
try { if (Inst1 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<510,519,16>",(BUGNUMBER)); Inst1++; } } catch(e) {}
var summary = 'Testing concatenation of string + number';
try { if (Inst2 <= 1000 && typeof (summary) != "undefined") {_RecordType("<533,540,17>",(summary)); Inst2++; } } catch(e) {}
var status = '';
try { if (Inst3 <= 1000 && typeof (status) != "undefined") {_RecordType("<591,597,18>",(status)); Inst3++; } } catch(e) {}
var statusitems = [];
try { if (Inst4 <= 1000 && typeof (statusitems) != "undefined") {_RecordType("<608,619,19>",(statusitems)); Inst4++; } } catch(e) {}
var actual = '';
try { if (Inst5 <= 1000 && typeof (actual) != "undefined") {_RecordType("<630,636,20>",(actual)); Inst5++; } } catch(e) {}
var actualvalues = [];
try { if (Inst6 <= 1000 && typeof (actualvalues) != "undefined") {_RecordType("<647,659,21>",(actualvalues)); Inst6++; } } catch(e) {}
var expect = '';
try { if (Inst7 <= 1000 && typeof (expect) != "undefined") {_RecordType("<670,676,22>",(expect)); Inst7++; } } catch(e) {}
var expectedvalues = [];
try { if (Inst8 <= 1000 && typeof (expectedvalues) != "undefined") {_RecordType("<687,701,23>",(expectedvalues)); Inst8++; } } catch(e) {}

try { if (Inst9 <= 1000 && typeof (f) != "undefined") {_RecordType("<718,719,25>",(f)); Inst9++; } } catch(e) {}
function f(textProp, len) {
try { if (Inst10 <= 1000 && typeof (textProp) != "undefined") {_RecordType("<720,728,25>",(textProp)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (len) != "undefined") {_RecordType("<730,733,25>",(len)); Inst11++; } } catch(e) {}
  var i = 0;
try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<743,744,26>",(i)); Inst12++; } } catch(e) {}

try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<762,763,28>",(i)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (len) != "undefined") {_RecordType("<767,770,28>",(len)); Inst14++; } } catch(e) {}
  while (++i <= len) {
try { if (Inst16 <= 1000 && typeof (textProp) != "undefined") {_RecordType("<789,797,29>",(textProp)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (i) != "undefined") {_RecordType("<800,801,29>",(i)); Inst17++; } } catch(e) {}
    var name = textProp + i;
try { if (Inst15 <= 1000 && typeof (name) != "undefined") {_RecordType("<782,786,29>",(name)); Inst15++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (name) != "undefined") {_RecordType("<816,820,30>",(name)); Inst19++; } } catch(e) {}
    actual = name;
try { if (Inst18 <= 1000 && typeof (actual) != "undefined") {_RecordType("<807,813,30>",(actual)); Inst18++; } } catch(e) {}
  }
}

try { if (Inst21 <= 1000 && typeof (inSection) != "undefined") {_RecordType("<838,847,34>",(inSection)); Inst21++; } } catch(e) {}
status = inSection(1);
try { if (Inst20 <= 1000 && typeof (status) != "undefined") {_RecordType("<829,835,34>",(status)); Inst20++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (f) != "undefined") {_RecordType("<852,853,35>",(f)); Inst22++; } } catch(e) {}
f('text', 1); // sets |actual|

expect = 'text1';
try { if (Inst23 <= 1000 && typeof (expect) != "undefined") {_RecordType("<884,890,37>",(expect)); Inst23++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (addThis) != "undefined") {_RecordType("<902,909,38>",(addThis)); Inst24++; } } catch(e) {}
addThis();
try { if (Inst26 <= 1000 && typeof (inSection) != "undefined") {_RecordType("<922,931,39>",(inSection)); Inst26++; } } catch(e) {}
status = inSection(2);
try { if (Inst25 <= 1000 && typeof (status) != "undefined") {_RecordType("<913,919,39>",(status)); Inst25++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (f) != "undefined") {_RecordType("<936,937,40>",(f)); Inst27++; } } catch(e) {}
f('text', 100); // sets |actual|

expect = 'text100';
try { if (Inst28 <= 1000 && typeof (expect) != "undefined") {_RecordType("<970,976,42>",(expect)); Inst28++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (addThis) != "undefined") {_RecordType("<990,997,43>",(addThis)); Inst29++; } } catch(e) {}
addThis(); //-----------------------------------------------------------------------------

try { if (Inst30 <= 1000 && typeof (test) != "undefined") {_RecordType("<1082,1086,45>",(test)); Inst30++; } } catch(e) {}
test(); //-----------------------------------------------------------------------------

try { if (Inst31 <= 1000 && typeof (addThis) != "undefined") {_RecordType("<1180,1187,47>",(addThis)); Inst31++; } } catch(e) {}
function addThis() {
try { if (Inst34 <= 1000 && typeof (status) != "undefined") {_RecordType("<1216,1222,48>",(status)); Inst34++; } } catch(e) {}
  statusitems[UBound] = status;
try { if (Inst32 <= 1000 && typeof (statusitems[UBound]) != "undefined") {_RecordType("<1194,1213,48>",(statusitems[UBound])); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (statusitems) != "undefined") {_RecordType("<1194,1205,48>",(statusitems)); Inst33++; } } catch(e) {}
try { if (Inst37 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1249,1255,49>",(actual)); Inst37++; } } catch(e) {}
  actualvalues[UBound] = actual;
try { if (Inst35 <= 1000 && typeof (actualvalues[UBound]) != "undefined") {_RecordType("<1226,1246,49>",(actualvalues[UBound])); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (actualvalues) != "undefined") {_RecordType("<1226,1238,49>",(actualvalues)); Inst36++; } } catch(e) {}
try { if (Inst40 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1284,1290,50>",(expect)); Inst40++; } } catch(e) {}
  expectedvalues[UBound] = expect;
try { if (Inst38 <= 1000 && typeof (expectedvalues[UBound]) != "undefined") {_RecordType("<1259,1281,50>",(expectedvalues[UBound])); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (expectedvalues) != "undefined") {_RecordType("<1259,1273,50>",(expectedvalues)); Inst39++; } } catch(e) {}
try { if (Inst41 <= 1000 && typeof (UBound) != "undefined") {_RecordType("<1294,1300,51>",(UBound)); Inst41++; } } catch(e) {}
  UBound++;
}

try { if (Inst42 <= 1000 && typeof (test) != "undefined") {_RecordType("<1316,1320,54>",(test)); Inst42++; } } catch(e) {}
function test() {
try { if (Inst43 <= 1000 && typeof (printBugNumber) != "undefined") {_RecordType("<1327,1341,55>",(printBugNumber)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<1342,1351,55>",(BUGNUMBER)); Inst44++; } } catch(e) {}
  printBugNumber(BUGNUMBER);
try { if (Inst45 <= 1000 && typeof (printStatus) != "undefined") {_RecordType("<1356,1367,56>",(printStatus)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (summary) != "undefined") {_RecordType("<1368,1375,56>",(summary)); Inst46++; } } catch(e) {}
  printStatus(summary);

  for (var i = 0; i < UBound; i++) {
try { if (Inst47 <= 1000 && typeof (i) != "undefined") {_RecordType("<1390,1391,58>",(i)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (i) != "undefined") {_RecordType("<1397,1398,58>",(i)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (UBound) != "undefined") {_RecordType("<1401,1407,58>",(UBound)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (i) != "undefined") {_RecordType("<1409,1410,58>",(i)); Inst50++; } } catch(e) {}
try { if (Inst51 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1420,1433,59>",(reportCompare)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (expectedvalues[i]) != "undefined") {_RecordType("<1434,1451,59>",(expectedvalues[i])); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (expectedvalues) != "undefined") {_RecordType("<1434,1448,59>",(expectedvalues)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (actualvalues[i]) != "undefined") {_RecordType("<1453,1468,59>",(actualvalues[i])); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (actualvalues) != "undefined") {_RecordType("<1453,1465,59>",(actualvalues)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (statusitems[i]) != "undefined") {_RecordType("<1470,1484,59>",(statusitems[i])); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (statusitems) != "undefined") {_RecordType("<1470,1481,59>",(statusitems)); Inst57++; } } catch(e) {}
    reportCompare(expectedvalues[i], actualvalues[i], statusitems[i]);
  }
}

