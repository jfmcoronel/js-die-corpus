var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/*
 * Any copyright is dedicated to the Public Domain.
 * http://creativecommons.org/licenses/publicdomain/
 */
try { if (Inst0 <= 1000 && typeof (test) != "undefined") {_RecordType("<112,116,5>",(test)); Inst0++; } } catch(e) {}
test();

try { if (Inst1 <= 1000 && typeof (test) != "undefined") {_RecordType("<130,134,7>",(test)); Inst1++; } } catch(e) {}
function test() {
  var counter = 0;
try { if (Inst2 <= 1000 && typeof (counter) != "undefined") {_RecordType("<145,152,8>",(counter)); Inst2++; } } catch(e) {}

try { if (Inst3 <= 1000 && typeof (f) != "undefined") {_RecordType("<170,171,10>",(f)); Inst3++; } } catch(e) {}
  function f(x, y) {
try { if (Inst4 <= 1000 && typeof (x) != "undefined") {_RecordType("<172,173,10>",(x)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (y) != "undefined") {_RecordType("<175,176,10>",(y)); Inst5++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (e2) != "undefined") {_RecordType("<219,221,13>",(e2)); Inst6++; } } catch(e) {}
    try {
      throw 42;
    } catch (e2) {
try { if (Inst7 <= 1000 && typeof (foo) != "undefined") {_RecordType("<231,234,14>",(foo)); Inst7++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (counter) != "undefined") {_RecordType("<291,298,16>",(counter)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (e) != "undefined") {_RecordType("<302,303,16>",(e)); Inst10++; } } catch(e) {}
      foo(function () {
try { if (Inst8 <= 1000 && typeof (x) != "undefined") {_RecordType("<264,265,15>",(x)); Inst8++; } } catch(e) {}
        return x;
      } | "9.2" && 5 || counter && e);
try { if (Inst11 <= 1000 && typeof (counter) != "undefined") {_RecordType("<314,321,17>",(counter)); Inst11++; } } catch(e) {}
      ++counter;
    }
  }

try { if (Inst12 <= 1000 && typeof (f) != "undefined") {_RecordType("<336,337,21>",(f)); Inst12++; } } catch(e) {}
  f(2, 1);
}

try { if (Inst13 <= 1000 && typeof (foo) != "undefined") {_RecordType("<357,360,24>",(foo)); Inst13++; } } catch(e) {}
function foo(bar) {
try { if (Inst14 <= 1000 && typeof (bar) != "undefined") {_RecordType("<361,364,24>",(bar)); Inst14++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (bar) != "undefined") {_RecordType("<382,385,25>",(bar)); Inst15++; } } catch(e) {}
  return "" + bar;
}

try { if (Inst16 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<390,403,28>",(reportCompare)); Inst16++; } } catch(e) {}
reportCompare(0, 0, "ok");

