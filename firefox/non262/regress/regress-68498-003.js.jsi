var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* -*- indent-tabs-mode: nil; js-indent-level: 2 -*- */

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

/*
 * Date: 15 Feb 2001
 *
 * SUMMARY: calling obj.eval(str)
 *
 * See http://bugzilla.mozilla.org/show_bug.cgi?id=68498
 * See http://bugzilla.mozilla.org/showattachment.cgi?attach_id=25251
 *
 * Brendan:
 *
 * "Backward compatibility: support calling obj.eval(str), which evaluates
 *   str using obj as the scope chain and variable object."
 */
//-----------------------------------------------------------------------------
var BUGNUMBER = 68498;
try { if (Inst0 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<695,704,21>",(BUGNUMBER)); Inst0++; } } catch(e) {}
var summary = 'Testing calling obj.eval(str)';
try { if (Inst1 <= 1000 && typeof (summary) != "undefined") {_RecordType("<718,725,22>",(summary)); Inst1++; } } catch(e) {}
var statprefix = '; currently at expect[';
try { if (Inst2 <= 1000 && typeof (statprefix) != "undefined") {_RecordType("<765,775,23>",(statprefix)); Inst2++; } } catch(e) {}
var statsuffix = '] within test -';
try { if (Inst3 <= 1000 && typeof (statsuffix) != "undefined") {_RecordType("<808,818,24>",(statsuffix)); Inst3++; } } catch(e) {}
var actual = [];
try { if (Inst4 <= 1000 && typeof (actual) != "undefined") {_RecordType("<844,850,25>",(actual)); Inst4++; } } catch(e) {}
var expect = []; // Capture a reference to the global object -
try { if (Inst5 <= 1000 && typeof (expect) != "undefined") {_RecordType("<861,867,26>",(expect)); Inst5++; } } catch(e) {}

var self = this; // This function is the heart of the test -
try { if (Inst6 <= 1000 && typeof (self) != "undefined") {_RecordType("<925,929,28>",(self)); Inst6++; } } catch(e) {}

try { if (Inst7 <= 1000 && typeof (f) != "undefined") {_RecordType("<992,993,30>",(f)); Inst7++; } } catch(e) {}
function f(s) {
try { if (Inst8 <= 1000 && typeof (s) != "undefined") {_RecordType("<994,995,30>",(s)); Inst8++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (self.eval) != "undefined") {_RecordType("<1001,1010,31>",(self.eval)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (self) != "undefined") {_RecordType("<1001,1005,31>",(self)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (s) != "undefined") {_RecordType("<1011,1012,31>",(s)); Inst11++; } } catch(e) {}
  self.eval(s);
try { if (Inst12 <= 1000 && typeof (y) != "undefined") {_RecordType("<1024,1025,32>",(y)); Inst12++; } } catch(e) {}
  return y;
} // Set the actual-results array -


try { if (Inst15 <= 1000 && typeof (f) != "undefined") {_RecordType("<1077,1078,36>",(f)); Inst15++; } } catch(e) {}
actual[0] = f('var y = 43');
try { if (Inst13 <= 1000 && typeof (actual[0]) != "undefined") {_RecordType("<1065,1074,36>",(actual[0])); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1065,1071,36>",(actual)); Inst14++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (self) != "undefined") {_RecordType("<1113,1117,37>",(self)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (y) != "undefined") {_RecordType("<1121,1122,37>",(y)); Inst19++; } } catch(e) {}
actual[1] = 'y' in self && y;
try { if (Inst16 <= 1000 && typeof (actual[1]) != "undefined") {_RecordType("<1094,1103,37>",(actual[1])); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1094,1100,37>",(actual)); Inst17++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (y) != "undefined") {_RecordType("<1143,1144,38>",(y)); Inst22++; } } catch(e) {}
actual[2] = delete y;
try { if (Inst20 <= 1000 && typeof (actual[2]) != "undefined") {_RecordType("<1124,1133,38>",(actual[2])); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1124,1130,38>",(actual)); Inst21++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (self) != "undefined") {_RecordType("<1165,1169,39>",(self)); Inst25++; } } catch(e) {}
actual[3] = 'y' in self; // Set the expected-results array -
try { if (Inst23 <= 1000 && typeof (actual[3]) != "undefined") {_RecordType("<1146,1155,39>",(actual[3])); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1146,1152,39>",(actual)); Inst24++; } } catch(e) {}

expect[0] = 43;
try { if (Inst26 <= 1000 && typeof (expect[0]) != "undefined") {_RecordType("<1208,1217,41>",(expect[0])); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1208,1214,41>",(expect)); Inst27++; } } catch(e) {}
expect[1] = 43;
try { if (Inst28 <= 1000 && typeof (expect[1]) != "undefined") {_RecordType("<1224,1233,42>",(expect[1])); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1224,1230,42>",(expect)); Inst29++; } } catch(e) {}
expect[2] = true;
try { if (Inst30 <= 1000 && typeof (expect[2]) != "undefined") {_RecordType("<1240,1249,43>",(expect[2])); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1240,1246,43>",(expect)); Inst31++; } } catch(e) {}
expect[3] = false; //-------------------------------------------------------------------------------------------------
try { if (Inst32 <= 1000 && typeof (expect[3]) != "undefined") {_RecordType("<1258,1267,44>",(expect[3])); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1258,1264,44>",(expect)); Inst33++; } } catch(e) {}

try { if (Inst34 <= 1000 && typeof (test) != "undefined") {_RecordType("<1378,1382,46>",(test)); Inst34++; } } catch(e) {}
test(); //-------------------------------------------------------------------------------------------------

try { if (Inst35 <= 1000 && typeof (test) != "undefined") {_RecordType("<1496,1500,48>",(test)); Inst35++; } } catch(e) {}
function test() {
try { if (Inst36 <= 1000 && typeof (printBugNumber) != "undefined") {_RecordType("<1507,1521,49>",(printBugNumber)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<1522,1531,49>",(BUGNUMBER)); Inst37++; } } catch(e) {}
  printBugNumber(BUGNUMBER);
try { if (Inst38 <= 1000 && typeof (printStatus) != "undefined") {_RecordType("<1536,1547,50>",(printStatus)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (summary) != "undefined") {_RecordType("<1548,1555,50>",(summary)); Inst39++; } } catch(e) {}
  printStatus(summary);

  for (var i in expect) {
try { if (Inst40 <= 1000 && typeof (i) != "undefined") {_RecordType("<1570,1571,52>",(i)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1575,1581,52>",(expect)); Inst41++; } } catch(e) {}
try { if (Inst42 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1589,1602,53>",(reportCompare)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (expect[i]) != "undefined") {_RecordType("<1603,1612,53>",(expect[i])); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1603,1609,53>",(expect)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (actual[i]) != "undefined") {_RecordType("<1614,1623,53>",(actual[i])); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1614,1620,53>",(actual)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (getStatus) != "undefined") {_RecordType("<1625,1634,53>",(getStatus)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (i) != "undefined") {_RecordType("<1635,1636,53>",(i)); Inst48++; } } catch(e) {}
    reportCompare(expect[i], actual[i], getStatus(i));
  }
}

try { if (Inst49 <= 1000 && typeof (getStatus) != "undefined") {_RecordType("<1656,1665,57>",(getStatus)); Inst49++; } } catch(e) {}
function getStatus(i) {
try { if (Inst50 <= 1000 && typeof (i) != "undefined") {_RecordType("<1666,1667,57>",(i)); Inst50++; } } catch(e) {}
try { if (Inst51 <= 1000 && typeof (summary) != "undefined") {_RecordType("<1680,1687,58>",(summary)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (statprefix) != "undefined") {_RecordType("<1690,1700,58>",(statprefix)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (i) != "undefined") {_RecordType("<1703,1704,58>",(i)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (statsuffix) != "undefined") {_RecordType("<1707,1717,58>",(statsuffix)); Inst54++; } } catch(e) {}
  return summary + statprefix + i + statsuffix;
}

