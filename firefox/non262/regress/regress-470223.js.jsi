var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* -*- indent-tabs-mode: nil; js-indent-level: 2 -*- */

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
//-----------------------------------------------------------------------------
var BUGNUMBER = 470223;
try { if (Inst0 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<346,355,7>",(BUGNUMBER)); Inst0++; } } catch(e) {}
var summary = 'TM: Do not crash @ js_NewObjectWithGivenProto';
try { if (Inst1 <= 1000 && typeof (summary) != "undefined") {_RecordType("<370,377,8>",(summary)); Inst1++; } } catch(e) {}
var actual = '';
try { if (Inst2 <= 1000 && typeof (actual) != "undefined") {_RecordType("<433,439,9>",(actual)); Inst2++; } } catch(e) {}
var expect = ''; //-----------------------------------------------------------------------------
try { if (Inst3 <= 1000 && typeof (expect) != "undefined") {_RecordType("<450,456,10>",(expect)); Inst3++; } } catch(e) {}

try { if (Inst4 <= 1000 && typeof (test) != "undefined") {_RecordType("<544,548,12>",(test)); Inst4++; } } catch(e) {}
test(); //-----------------------------------------------------------------------------

try { if (Inst5 <= 1000 && typeof (test) != "undefined") {_RecordType("<642,646,14>",(test)); Inst5++; } } catch(e) {}
function test() {
try { if (Inst6 <= 1000 && typeof (printBugNumber) != "undefined") {_RecordType("<653,667,15>",(printBugNumber)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<668,677,15>",(BUGNUMBER)); Inst7++; } } catch(e) {}
  printBugNumber(BUGNUMBER);
try { if (Inst8 <= 1000 && typeof (printStatus) != "undefined") {_RecordType("<682,693,16>",(printStatus)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (summary) != "undefined") {_RecordType("<694,701,16>",(summary)); Inst9++; } } catch(e) {}
  printStatus(summary);

try { if (Inst10 <= 1000 && typeof (F) != "undefined") {_RecordType("<716,717,18>",(F)); Inst10++; } } catch(e) {}
  function F(A) {
try { if (Inst11 <= 1000 && typeof (A) != "undefined") {_RecordType("<718,719,18>",(A)); Inst11++; } } catch(e) {}
    for (R = [], s = 0; (m = A.indexOf("m", s++)) >= 0;) {
try { if (Inst12 <= 1000 && typeof (R) != "undefined") {_RecordType("<732,733,19>",(R)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (s) != "undefined") {_RecordType("<740,741,19>",(s)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (m) != "undefined") {_RecordType("<748,749,19>",(m)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (A.indexOf) != "undefined") {_RecordType("<752,761,19>",(A.indexOf)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (A) != "undefined") {_RecordType("<752,753,19>",(A)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (s) != "undefined") {_RecordType("<767,768,19>",(s)); Inst17++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (R.push) != "undefined") {_RecordType("<788,794,20>",(R.push)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (R) != "undefined") {_RecordType("<788,789,20>",(R)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (m) != "undefined") {_RecordType("<796,797,20>",(m)); Inst20++; } } catch(e) {}
      R.push([m]);
    }

    for (i = R.length; i--;) {
try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<817,818,23>",(i)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (R.length) != "undefined") {_RecordType("<821,829,23>",(R.length)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (R) != "undefined") {_RecordType("<821,822,23>",(R)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<831,832,23>",(i)); Inst24++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (R[i]) != "undefined") {_RecordType("<853,857,24>",(R[i])); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (R) != "undefined") {_RecordType("<853,854,24>",(R)); Inst27++; } } catch(e) {}
      let r = R[i];
try { if (Inst25 <= 1000 && typeof (r) != "undefined") {_RecordType("<849,850,24>",(r)); Inst25++; } } catch(e) {}

try { if (Inst28 <= 1000 && typeof (r[0]) != "undefined") {_RecordType("<870,874,26>",(r[0])); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (r) != "undefined") {_RecordType("<870,871,26>",(r)); Inst29++; } } catch(e) {}
      if (r[0]) {
        ;
      }
    }
  }

try { if (Inst30 <= 1000 && typeof (F) != "undefined") {_RecordType("<909,910,32>",(F)); Inst30++; } } catch(e) {}
  F("m");
try { if (Inst31 <= 1000 && typeof (F) != "undefined") {_RecordType("<919,920,33>",(F)); Inst31++; } } catch(e) {}
  F("mm");
try { if (Inst32 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<930,943,34>",(reportCompare)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (expect) != "undefined") {_RecordType("<944,950,34>",(expect)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (actual) != "undefined") {_RecordType("<952,958,34>",(actual)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (summary) != "undefined") {_RecordType("<960,967,34>",(summary)); Inst35++; } } catch(e) {}
  reportCompare(expect, actual, summary);
}

