var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* -*- indent-tabs-mode: nil; js-indent-level: 2 -*- */

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
//-----------------------------------------------------------------------------
var BUGNUMBER = 475645;
try { if (Inst0 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<346,355,7>",(BUGNUMBER)); Inst0++; } } catch(e) {}
var summary = 'Do not crash @ nanojit::LIns::isop';
try { if (Inst1 <= 1000 && typeof (summary) != "undefined") {_RecordType("<370,377,8>",(summary)); Inst1++; } } catch(e) {}
var actual = '';
try { if (Inst2 <= 1000 && typeof (actual) != "undefined") {_RecordType("<422,428,9>",(actual)); Inst2++; } } catch(e) {}
var expect = ''; //-----------------------------------------------------------------------------
try { if (Inst3 <= 1000 && typeof (expect) != "undefined") {_RecordType("<439,445,10>",(expect)); Inst3++; } } catch(e) {}

try { if (Inst4 <= 1000 && typeof (test) != "undefined") {_RecordType("<533,537,12>",(test)); Inst4++; } } catch(e) {}
test(); //-----------------------------------------------------------------------------

try { if (Inst5 <= 1000 && typeof (test) != "undefined") {_RecordType("<631,635,14>",(test)); Inst5++; } } catch(e) {}
function test() {
try { if (Inst6 <= 1000 && typeof (printBugNumber) != "undefined") {_RecordType("<642,656,15>",(printBugNumber)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<657,666,15>",(BUGNUMBER)); Inst7++; } } catch(e) {}
  printBugNumber(BUGNUMBER);
try { if (Inst8 <= 1000 && typeof (printStatus) != "undefined") {_RecordType("<671,682,16>",(printStatus)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (summary) != "undefined") {_RecordType("<683,690,16>",(summary)); Inst9++; } } catch(e) {}
  printStatus(summary);

try { if (Inst10 <= 1000 && typeof (window) != "undefined") {_RecordType("<707,713,18>",(window)); Inst10++; } } catch(e) {}
  if (typeof window != 'undefined') {
    var q = function () {
      ;
    };
try { if (Inst11 <= 1000 && typeof (q) != "undefined") {_RecordType("<740,741,19>",(q)); Inst11++; } } catch(e) {}

try { if (Inst12 <= 1000 && typeof (window.addEventListener) != "undefined") {_RecordType("<778,801,23>",(window.addEventListener)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (window) != "undefined") {_RecordType("<778,784,23>",(window)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (q) != "undefined") {_RecordType("<810,811,23>",(q)); Inst14++; } } catch(e) {}
    window.addEventListener("load", q, false);
try { if (Inst17 <= 1000 && typeof (q) != "undefined") {_RecordType("<842,843,24>",(q)); Inst17++; } } catch(e) {}
    window.onerror = q;
try { if (Inst15 <= 1000 && typeof (window.onerror) != "undefined") {_RecordType("<825,839,24>",(window.onerror)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (window) != "undefined") {_RecordType("<825,831,24>",(window)); Inst16++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (Array) != "undefined") {_RecordType("<859,864,25>",(Array)); Inst19++; } } catch(e) {}
    arr = new Array();
try { if (Inst18 <= 1000 && typeof (arr) != "undefined") {_RecordType("<849,852,25>",(arr)); Inst18++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (Array) != "undefined") {_RecordType("<886,891,26>",(Array)); Inst22++; } } catch(e) {}
    pic = r = new Array();
try { if (Inst20 <= 1000 && typeof (pic) != "undefined") {_RecordType("<872,875,26>",(pic)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (r) != "undefined") {_RecordType("<878,879,26>",(r)); Inst21++; } } catch(e) {}
    h = t = 7;
try { if (Inst23 <= 1000 && typeof (h) != "undefined") {_RecordType("<899,900,27>",(h)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (t) != "undefined") {_RecordType("<903,904,27>",(t)); Inst24++; } } catch(e) {}
    var pics = "";
try { if (Inst25 <= 1000 && typeof (pics) != "undefined") {_RecordType("<918,922,28>",(pics)); Inst25++; } } catch(e) {}
    pic[2] = "";
try { if (Inst26 <= 1000 && typeof (pic[2]) != "undefined") {_RecordType("<933,939,29>",(pic[2])); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (pic) != "undefined") {_RecordType("<933,936,29>",(pic)); Inst27++; } } catch(e) {}

    for (i = 1; i < pic.length; i++) {
try { if (Inst28 <= 1000 && typeof (i) != "undefined") {_RecordType("<956,957,31>",(i)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (i) != "undefined") {_RecordType("<963,964,31>",(i)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (pic.length) != "undefined") {_RecordType("<967,977,31>",(pic.length)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (pic) != "undefined") {_RecordType("<967,970,31>",(pic)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (i) != "undefined") {_RecordType("<979,980,31>",(i)); Inst32++; } } catch(e) {}
try { if (Inst42 <= 1000 && typeof (ex) != "undefined") {_RecordType("<1133,1135,38>",(ex)); Inst42++; } } catch(e) {}
      try {
try { if (Inst33 <= 1000 && typeof (pics) != "undefined") {_RecordType("<1010,1014,33>",(pics)); Inst33++; } } catch(e) {}
        if (pics == "") {
try { if (Inst35 <= 1000 && typeof (pic[i]) != "undefined") {_RecordType("<1041,1047,34>",(pic[i])); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (pic) != "undefined") {_RecordType("<1041,1044,34>",(pic)); Inst36++; } } catch(e) {}
          pics = pic[i];
try { if (Inst34 <= 1000 && typeof (pics) != "undefined") {_RecordType("<1034,1038,34>",(pics)); Inst34++; } } catch(e) {}
        } else {
try { if (Inst37 <= 1000 && typeof (pic[i]) != "undefined") {_RecordType("<1076,1082,36>",(pic[i])); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (pic) != "undefined") {_RecordType("<1076,1079,36>",(pic)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (pic[i].i) != "undefined") {_RecordType("<1089,1097,36>",(pic[i].i)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (pic[i]) != "undefined") {_RecordType("<1089,1095,36>",(pic[i])); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (pic) != "undefined") {_RecordType("<1089,1092,36>",(pic)); Inst41++; } } catch(e) {}
          pic[i] - 1 & pic[i].i("") == 1;
        }
      } catch (ex) {
        ;
      }

      arr[i] = '';
try { if (Inst43 <= 1000 && typeof (arr[i]) != "undefined") {_RecordType("<1164,1170,42>",(arr[i])); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (arr) != "undefined") {_RecordType("<1164,1167,42>",(arr)); Inst44++; } } catch(e) {}
    }
  }

try { if (Inst45 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1190,1203,46>",(reportCompare)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1204,1210,46>",(expect)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1212,1218,46>",(actual)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (summary) != "undefined") {_RecordType("<1220,1227,46>",(summary)); Inst48++; } } catch(e) {}
  reportCompare(expect, actual, summary);
}

