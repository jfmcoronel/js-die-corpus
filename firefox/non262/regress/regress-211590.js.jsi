var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* -*- indent-tabs-mode: nil; js-indent-level: 2 -*- */

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
//-----------------------------------------------------------------------------
var BUGNUMBER = 211590;
try { if (Inst0 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<346,355,7>",(BUGNUMBER)); Inst0++; } } catch(e) {}
var summary = 'Math.random should be random';
try { if (Inst1 <= 1000 && typeof (summary) != "undefined") {_RecordType("<370,377,8>",(summary)); Inst1++; } } catch(e) {}
var actual = '';
try { if (Inst2 <= 1000 && typeof (actual) != "undefined") {_RecordType("<416,422,9>",(actual)); Inst2++; } } catch(e) {}
var expect = 'between 47.5% and 52.5%';
try { if (Inst3 <= 1000 && typeof (expect) != "undefined") {_RecordType("<433,439,10>",(expect)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (printBugNumber) != "undefined") {_RecordType("<469,483,11>",(printBugNumber)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<484,493,11>",(BUGNUMBER)); Inst5++; } } catch(e) {}
printBugNumber(BUGNUMBER);
try { if (Inst6 <= 1000 && typeof (printStatus) != "undefined") {_RecordType("<496,507,12>",(printStatus)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (summary) != "undefined") {_RecordType("<508,515,12>",(summary)); Inst7++; } } catch(e) {}
printStatus(summary);
try { if (Inst9 <= 1000 && typeof (Math.random) != "undefined") {_RecordType("<526,537,13>",(Math.random)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Math) != "undefined") {_RecordType("<526,530,13>",(Math)); Inst10++; } } catch(e) {}
var r = Math.random;
try { if (Inst8 <= 1000 && typeof (r) != "undefined") {_RecordType("<522,523,13>",(r)); Inst8++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (Math.pow) != "undefined") {_RecordType("<547,555,14>",(Math.pow)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Math) != "undefined") {_RecordType("<547,551,14>",(Math)); Inst13++; } } catch(e) {}
var c = Math.pow(2, 53);
try { if (Inst11 <= 1000 && typeof (c) != "undefined") {_RecordType("<543,544,14>",(c)); Inst11++; } } catch(e) {}
var n = 10000;
try { if (Inst14 <= 1000 && typeof (n) != "undefined") {_RecordType("<568,569,15>",(n)); Inst14++; } } catch(e) {}
var odd1 = 0;
try { if (Inst15 <= 1000 && typeof (odd1) != "undefined") {_RecordType("<583,587,16>",(odd1)); Inst15++; } } catch(e) {}
var odd2 = 0;
try { if (Inst16 <= 1000 && typeof (odd2) != "undefined") {_RecordType("<597,601,17>",(odd2)); Inst16++; } } catch(e) {}

for (var i = 0; i < n; ++i) {
try { if (Inst17 <= 1000 && typeof (i) != "undefined") {_RecordType("<617,618,19>",(i)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (i) != "undefined") {_RecordType("<624,625,19>",(i)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (n) != "undefined") {_RecordType("<628,629,19>",(n)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<633,634,19>",(i)); Inst20++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (r) != "undefined") {_RecordType("<648,649,20>",(r)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (c) != "undefined") {_RecordType("<654,655,20>",(c)); Inst23++; } } catch(e) {}
  var v = r() * c;
try { if (Inst21 <= 1000 && typeof (v) != "undefined") {_RecordType("<644,645,20>",(v)); Inst21++; } } catch(e) {}

try { if (Inst24 <= 1000 && typeof (v) != "undefined") {_RecordType("<664,665,22>",(v)); Inst24++; } } catch(e) {}
  if (v & 1) {
try { if (Inst25 <= 1000 && typeof (odd1) != "undefined") {_RecordType("<679,683,23>",(odd1)); Inst25++; } } catch(e) {}
    ++odd1;
  }

try { if (Inst26 <= 1000 && typeof (v) != "undefined") {_RecordType("<696,697,26>",(v)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (c) != "undefined") {_RecordType("<700,701,26>",(c)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (c) != "undefined") {_RecordType("<704,705,26>",(c)); Inst28++; } } catch(e) {}
  if (v - c + c & 1) {
try { if (Inst29 <= 1000 && typeof (odd2) != "undefined") {_RecordType("<719,723,27>",(odd2)); Inst29++; } } catch(e) {}
    ++odd2;
  }
}

try { if (Inst31 <= 1000 && typeof (n) != "undefined") {_RecordType("<746,747,31>",(n)); Inst31++; } } catch(e) {}
odd1 *= 100 / n;
try { if (Inst30 <= 1000 && typeof (odd1) != "undefined") {_RecordType("<732,736,31>",(odd1)); Inst30++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (n) != "undefined") {_RecordType("<763,764,32>",(n)); Inst33++; } } catch(e) {}
odd2 *= 100 / n;
try { if (Inst32 <= 1000 && typeof (odd2) != "undefined") {_RecordType("<749,753,32>",(odd2)); Inst32++; } } catch(e) {}

try { if (Inst34 <= 1000 && typeof (odd1) != "undefined") {_RecordType("<771,775,34>",(odd1)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (odd1) != "undefined") {_RecordType("<787,791,34>",(odd1)); Inst35++; } } catch(e) {}
if (odd1 >= 47.5 && odd1 <= 52.5) {
try { if (Inst37 <= 1000 && typeof (expect) != "undefined") {_RecordType("<814,820,35>",(expect)); Inst37++; } } catch(e) {}
  actual = expect;
try { if (Inst36 <= 1000 && typeof (actual) != "undefined") {_RecordType("<805,811,35>",(actual)); Inst36++; } } catch(e) {}
} else {
try { if (Inst39 <= 1000 && typeof (odd1.toFixed) != "undefined") {_RecordType("<851,863,37>",(odd1.toFixed)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (odd1) != "undefined") {_RecordType("<851,855,37>",(odd1)); Inst40++; } } catch(e) {}
  actual = ' is ' + odd1.toFixed(3);
try { if (Inst38 <= 1000 && typeof (actual) != "undefined") {_RecordType("<833,839,37>",(actual)); Inst38++; } } catch(e) {}
}

try { if (Inst41 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<871,884,40>",(reportCompare)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (expect) != "undefined") {_RecordType("<885,891,40>",(expect)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (actual) != "undefined") {_RecordType("<893,899,40>",(actual)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (summary) != "undefined") {_RecordType("<901,908,40>",(summary)); Inst44++; } } catch(e) {}
reportCompare(expect, actual, summary);

try { if (Inst45 <= 1000 && typeof (odd2) != "undefined") {_RecordType("<916,920,42>",(odd2)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (odd2) != "undefined") {_RecordType("<932,936,42>",(odd2)); Inst46++; } } catch(e) {}
if (odd2 >= 47.5 && odd2 <= 52.5) {
try { if (Inst48 <= 1000 && typeof (expect) != "undefined") {_RecordType("<959,965,43>",(expect)); Inst48++; } } catch(e) {}
  actual = expect;
try { if (Inst47 <= 1000 && typeof (actual) != "undefined") {_RecordType("<950,956,43>",(actual)); Inst47++; } } catch(e) {}
} else {
try { if (Inst50 <= 1000 && typeof (odd2.toFixed) != "undefined") {_RecordType("<996,1008,45>",(odd2.toFixed)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (odd2) != "undefined") {_RecordType("<996,1000,45>",(odd2)); Inst51++; } } catch(e) {}
  actual = ' is ' + odd2.toFixed(3);
try { if (Inst49 <= 1000 && typeof (actual) != "undefined") {_RecordType("<978,984,45>",(actual)); Inst49++; } } catch(e) {}
}

try { if (Inst52 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1016,1029,48>",(reportCompare)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1030,1036,48>",(expect)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1038,1044,48>",(actual)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (summary) != "undefined") {_RecordType("<1046,1053,48>",(summary)); Inst55++; } } catch(e) {}
reportCompare(expect, actual, summary);

