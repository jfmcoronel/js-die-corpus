var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* -*- indent-tabs-mode: nil; js-indent-level: 2 -*- */

/*
 * Any copyright is dedicated to the Public Domain.
 * http://creativecommons.org/licenses/publicdomain/
 */
try { if (Inst0 <= 1000 && typeof (make) != "undefined") {_RecordType("<178,182,7>",(make)); Inst0++; } } catch(e) {}
function make() {
  var r = {};
try { if (Inst1 <= 1000 && typeof (r) != "undefined") {_RecordType("<193,194,8>",(r)); Inst1++; } } catch(e) {}
  r.desc = {
    get: function () {
      ;
    }
  };
try { if (Inst2 <= 1000 && typeof (r.desc) != "undefined") {_RecordType("<203,209,9>",(r.desc)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (r) != "undefined") {_RecordType("<203,204,9>",(r)); Inst3++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<264,285,14>",(Object.defineProperty)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Object) != "undefined") {_RecordType("<264,270,14>",(Object)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (r.desc) != "undefined") {_RecordType("<298,304,14>",(r.desc)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (r) != "undefined") {_RecordType("<298,299,14>",(r)); Inst9++; } } catch(e) {}
  r.a = Object.defineProperty({}, "prop", r.desc);
try { if (Inst4 <= 1000 && typeof (r.a) != "undefined") {_RecordType("<258,261,14>",(r.a)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (r) != "undefined") {_RecordType("<258,259,14>",(r)); Inst5++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<318,349,15>",(Object.getOwnPropertyDescriptor)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Object) != "undefined") {_RecordType("<318,324,15>",(Object)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (r.a) != "undefined") {_RecordType("<350,353,15>",(r.a)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (r) != "undefined") {_RecordType("<350,351,15>",(r)); Inst15++; } } catch(e) {}
  r.info = Object.getOwnPropertyDescriptor(r.a, "prop");
try { if (Inst10 <= 1000 && typeof (r.info) != "undefined") {_RecordType("<309,315,15>",(r.info)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (r) != "undefined") {_RecordType("<309,310,15>",(r)); Inst11++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (r) != "undefined") {_RecordType("<373,374,16>",(r)); Inst16++; } } catch(e) {}
  return r;
}

try { if (Inst18 <= 1000 && typeof (make) != "undefined") {_RecordType("<384,388,19>",(make)); Inst18++; } } catch(e) {}
r1 = make();
try { if (Inst17 <= 1000 && typeof (r1) != "undefined") {_RecordType("<379,381,19>",(r1)); Inst17++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (r1.desc.get) != "undefined") {_RecordType("<392,403,20>",(r1.desc.get)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (r1.desc) != "undefined") {_RecordType("<392,399,20>",(r1.desc)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (r1) != "undefined") {_RecordType("<392,394,20>",(r1)); Inst21++; } } catch(e) {}
r1.desc.get;
try { if (Inst22 <= 1000 && typeof (r1.info.get) != "undefined") {_RecordType("<405,416,21>",(r1.info.get)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (r1.info) != "undefined") {_RecordType("<405,412,21>",(r1.info)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (r1) != "undefined") {_RecordType("<405,407,21>",(r1)); Inst24++; } } catch(e) {}
r1.info.get;
// Distinct evaluations of an object literal make distinct methods.
try { if (Inst26 <= 1000 && typeof (make) != "undefined") {_RecordType("<491,495,23>",(make)); Inst26++; } } catch(e) {}
r2 = make();
try { if (Inst25 <= 1000 && typeof (r2) != "undefined") {_RecordType("<486,488,23>",(r2)); Inst25++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (r1.desc.get) != "undefined") {_RecordType("<499,510,24>",(r1.desc.get)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (r1.desc) != "undefined") {_RecordType("<499,506,24>",(r1.desc)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (r1) != "undefined") {_RecordType("<499,501,24>",(r1)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (r2.desc.get) != "undefined") {_RecordType("<515,526,24>",(r2.desc.get)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (r2.desc) != "undefined") {_RecordType("<515,522,24>",(r2.desc)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (r2) != "undefined") {_RecordType("<515,517,24>",(r2)); Inst32++; } } catch(e) {}
r1.desc.get === r2.desc.get;
false;
r1.info.get.foo = 42;
try { if (Inst33 <= 1000 && typeof (r1.info.get.foo) != "undefined") {_RecordType("<535,550,26>",(r1.info.get.foo)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (r1.info.get) != "undefined") {_RecordType("<535,546,26>",(r1.info.get)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (r1.info) != "undefined") {_RecordType("<535,542,26>",(r1.info)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (r1) != "undefined") {_RecordType("<535,537,26>",(r1)); Inst36++; } } catch(e) {}
try { if (Inst37 <= 1000 && typeof (r1.desc.get.hasOwnProperty) != "undefined") {_RecordType("<557,583,27>",(r1.desc.get.hasOwnProperty)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (r1.desc.get) != "undefined") {_RecordType("<557,568,27>",(r1.desc.get)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (r1.desc) != "undefined") {_RecordType("<557,564,27>",(r1.desc)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (r1) != "undefined") {_RecordType("<557,559,27>",(r1)); Inst40++; } } catch(e) {}
r1.desc.get.hasOwnProperty('foo');
try { if (Inst41 <= 1000 && typeof (r2.desc.get.hasOwnProperty) != "undefined") {_RecordType("<593,619,28>",(r2.desc.get.hasOwnProperty)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (r2.desc.get) != "undefined") {_RecordType("<593,604,28>",(r2.desc.get)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (r2.desc) != "undefined") {_RecordType("<593,600,28>",(r2.desc)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (r2) != "undefined") {_RecordType("<593,595,28>",(r2)); Inst44++; } } catch(e) {}
!r2.desc.get.hasOwnProperty('foo');
try { if (Inst45 <= 1000 && typeof (r1.info.get.hasOwnProperty) != "undefined") {_RecordType("<628,654,29>",(r1.info.get.hasOwnProperty)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (r1.info.get) != "undefined") {_RecordType("<628,639,29>",(r1.info.get)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (r1.info) != "undefined") {_RecordType("<628,635,29>",(r1.info)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (r1) != "undefined") {_RecordType("<628,630,29>",(r1)); Inst48++; } } catch(e) {}
r1.info.get.hasOwnProperty('foo');
try { if (Inst49 <= 1000 && typeof (r2.info.get.hasOwnProperty) != "undefined") {_RecordType("<664,690,30>",(r2.info.get.hasOwnProperty)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (r2.info.get) != "undefined") {_RecordType("<664,675,30>",(r2.info.get)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (r2.info) != "undefined") {_RecordType("<664,671,30>",(r2.info)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (r2) != "undefined") {_RecordType("<664,666,30>",(r2)); Inst52++; } } catch(e) {}
!r2.info.get.hasOwnProperty('foo');
try { if (Inst53 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<699,712,31>",(reportCompare)); Inst53++; } } catch(e) {}
reportCompare(0, 0, "ok");

