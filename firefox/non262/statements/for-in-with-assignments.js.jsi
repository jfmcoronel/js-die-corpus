var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/*
 * Any copyright is dedicated to the Public Domain.
 * http://creativecommons.org/licenses/publicdomain/
 */
var gTestfile = "for-in-with-assignments.js";
try { if (Inst0 <= 1000 && typeof (gTestfile) != "undefined") {_RecordType("<116,125,5>",(gTestfile)); Inst0++; } } catch(e) {}
var BUGNUMBER = 1164741;
try { if (Inst1 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<162,171,6>",(BUGNUMBER)); Inst1++; } } catch(e) {}
var summary = "Parse |for (var ... = ... in ...)|.";
try { if (Inst2 <= 1000 && typeof (summary) != "undefined") {_RecordType("<187,194,7>",(summary)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (print) != "undefined") {_RecordType("<236,241,8>",(print)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<242,251,8>",(BUGNUMBER)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (summary) != "undefined") {_RecordType("<261,268,8>",(summary)); Inst5++; } } catch(e) {}
print(BUGNUMBER + ": " + summary);
/**************
 * BEGIN TEST *
 **************/
// This is a total grab-bag of junk originally in tests changed when this
// syntax was removed.  Leaving it all in one file will make it easier to
// eventually remove.  Avert your eyes!
// TC39 has revived this syntax for ES2017 - "What is dead may never die."

try { if (Inst6 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<595,602,17>",(Reflect)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Reflect.parse) != "undefined") {_RecordType("<622,635,17>",(Reflect.parse)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<622,629,17>",(Reflect)); Inst8++; } } catch(e) {}
if (typeof Reflect !== "undefined" && Reflect.parse) {
try { if (Inst9 <= 1000 && typeof (Reflect.parse) != "undefined") {_RecordType("<641,654,18>",(Reflect.parse)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<641,648,18>",(Reflect)); Inst10++; } } catch(e) {}
  Reflect.parse("for (var x = 3 in []) { }");
}
/******************************************************************************/


try { if (Inst11 <= 1000 && typeof (testQ) != "undefined") {_RecordType("<779,784,23>",(testQ)); Inst11++; } } catch(e) {}
function testQ() {
try { if (Inst14 <= 1000 && typeof (e) != "undefined") {_RecordType("<859,860,28>",(e)); Inst14++; } } catch(e) {}
  try {
    for (var i = 0 in this) {
try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<810,811,25>",(i)); Inst12++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (p) != "undefined") {_RecordType("<839,840,26>",(p)); Inst13++; } } catch(e) {}
      throw p;
    }
  } catch (e) {
try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<872,873,29>",(i)); Inst15++; } } catch(e) {}
    if (i !== 94) {
      return "what";
    }
  }
}

try { if (Inst16 <= 1000 && typeof (testQ) != "undefined") {_RecordType("<918,923,35>",(testQ)); Inst16++; } } catch(e) {}
testQ();
/******************************************************************************/

try { if (Inst17 <= 1000 && typeof (f3) != "undefined") {_RecordType("<1018,1020,38>",(f3)); Inst17++; } } catch(e) {}
function f3(i, o) {
try { if (Inst18 <= 1000 && typeof (i) != "undefined") {_RecordType("<1021,1022,38>",(i)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (o) != "undefined") {_RecordType("<1024,1025,38>",(o)); Inst19++; } } catch(e) {}
  for (var x = i in o) {
try { if (Inst20 <= 1000 && typeof (x) != "undefined") {_RecordType("<1040,1041,39>",(x)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<1044,1045,39>",(i)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (o) != "undefined") {_RecordType("<1049,1050,39>",(o)); Inst22++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<1058,1066,40>",(parseInt)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (o[x]) != "undefined") {_RecordType("<1067,1071,40>",(o[x])); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (o) != "undefined") {_RecordType("<1067,1068,40>",(o)); Inst25++; } } catch(e) {}
    parseInt(o[x]);
  }

try { if (Inst26 <= 1000 && typeof (x) != "undefined") {_RecordType("<1088,1089,43>",(x)); Inst26++; } } catch(e) {}
  return x;
}

try { if (Inst27 <= 1000 && typeof (f4) != "undefined") {_RecordType("<1103,1105,46>",(f4)); Inst27++; } } catch(e) {}
function f4(i, o) {
try { if (Inst28 <= 1000 && typeof (i) != "undefined") {_RecordType("<1106,1107,46>",(i)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (o) != "undefined") {_RecordType("<1109,1110,46>",(o)); Inst29++; } } catch(e) {}
  with (this) {
    for (var x = i in o) {
try { if (Inst30 <= 1000 && typeof (x) != "undefined") {_RecordType("<1143,1144,48>",(x)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (i) != "undefined") {_RecordType("<1147,1148,48>",(i)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (o) != "undefined") {_RecordType("<1152,1153,48>",(o)); Inst32++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<1163,1171,49>",(parseInt)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (o[x]) != "undefined") {_RecordType("<1172,1176,49>",(o[x])); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (o) != "undefined") {_RecordType("<1172,1173,49>",(o)); Inst35++; } } catch(e) {}
      parseInt(o[x]);
    }
  }
try { if (Inst36 <= 1000 && typeof (x) != "undefined") {_RecordType("<1198,1199,52>",(x)); Inst36++; } } catch(e) {}
  return x;
}

try { if (Inst37 <= 1000 && typeof (f3) != "undefined") {_RecordType("<1204,1206,55>",(f3)); Inst37++; } } catch(e) {}
f3(42, [])();
42;
try { if (Inst38 <= 1000 && typeof (f3) != "undefined") {_RecordType("<1222,1224,57>",(f3)); Inst38++; } } catch(e) {}
f3(42, ['first'])();
"0";
try { if (Inst39 <= 1000 && typeof (f4) != "undefined") {_RecordType("<1248,1250,59>",(f4)); Inst39++; } } catch(e) {}
f4(42, [])();
42;
try { if (Inst40 <= 1000 && typeof (f4) != "undefined") {_RecordType("<1266,1268,61>",(f4)); Inst40++; } } catch(e) {}
f4(42, ['first'])();
"0";

/******************************************************************************/
try { if (Inst41 <= 1000 && typeof (SetLangHead) != "undefined") {_RecordType("<1383,1394,65>",(SetLangHead)); Inst41++; } } catch(e) {}
function SetLangHead(l) {
try { if (Inst42 <= 1000 && typeof (l) != "undefined") {_RecordType("<1395,1396,65>",(l)); Inst42++; } } catch(e) {}
try { if (Inst43 <= 1000 && typeof (p) != "undefined") {_RecordType("<1408,1409,66>",(p)); Inst43++; } } catch(e) {}
  with (p) {
    for (var i = 0 in x) {
try { if (Inst44 <= 1000 && typeof (i) != "undefined") {_RecordType("<1426,1427,67>",(i)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (x) != "undefined") {_RecordType("<1435,1436,67>",(x)); Inst45++; } } catch(e) {}
try { if (Inst46 <= 1000 && typeof (getElementById) != "undefined") {_RecordType("<1450,1464,68>",(getElementById)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (i) != "undefined") {_RecordType("<1474,1475,68>",(i)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<1480,1489,68>",(undefined)); Inst48++; } } catch(e) {}
      if (getElementById("TxtH" + i) != undefined) {
try { if (Inst49 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<1501,1509,69>",(parseInt)); Inst49++; } } catch(e) {}
        parseInt('huh');
      }
    }
  }
}

x = [0, 1, 2, 3];
try { if (Inst50 <= 1000 && typeof (x) != "undefined") {_RecordType("<1539,1540,75>",(x)); Inst50++; } } catch(e) {}
p = {
  getElementById: function (id) {
try { if (Inst52 <= 1000 && typeof (id) != "undefined") {_RecordType("<1591,1593,77>",(id)); Inst52++; } } catch(e) {}
try { if (Inst53 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<1601,1609,78>",(parseInt)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (uneval) != "undefined") {_RecordType("<1610,1616,78>",(uneval)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (id) != "undefined") {_RecordType("<1624,1626,78>",(id)); Inst55++; } } catch(e) {}
    parseInt(uneval(this), id);
try { if (Inst56 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<1640,1649,79>",(undefined)); Inst56++; } } catch(e) {}
    return undefined;
  }
};
try { if (Inst51 <= 1000 && typeof (p) != "undefined") {_RecordType("<1557,1558,76>",(p)); Inst51++; } } catch(e) {}
try { if (Inst57 <= 1000 && typeof (SetLangHead) != "undefined") {_RecordType("<1658,1669,82>",(SetLangHead)); Inst57++; } } catch(e) {}
SetLangHead(1);
/******************************************************************************/

(function () {
  for (var x = arguments in []) {
try { if (Inst58 <= 1000 && typeof (x) != "undefined") {_RecordType("<1782,1783,86>",(x)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<1786,1795,86>",(arguments)); Inst59++; } } catch(e) {}
    ;
  }

try { if (Inst60 <= 1000 && typeof (x) != "undefined") {_RecordType("<1827,1828,90>",(x)); Inst60++; } } catch(e) {}
  function x() {
    ;
  }
})();
/******************************************************************************/


with (0) {
  for (var b = 0 in 0) {
try { if (Inst61 <= 1000 && typeof (b) != "undefined") {_RecordType("<1954,1955,98>",(b)); Inst61++; } } catch(e) {}
    ;
  }
} // don't assert in parser

/******************************************************************************/

try { if (Inst62 <= 1000 && typeof (g1) != "undefined") {_RecordType("<2099,2101,105>",(g1)); Inst62++; } } catch(e) {}
function* g1() {
  for (var x = yield in {}) {
try { if (Inst63 <= 1000 && typeof (x) != "undefined") {_RecordType("<2117,2118,106>",(x)); Inst63++; } } catch(e) {}
    ;
  }
}

try { if (Inst65 <= 1000 && typeof (g1) != "undefined") {_RecordType("<2158,2160,111>",(g1)); Inst65++; } } catch(e) {}
var it = g1();
try { if (Inst64 <= 1000 && typeof (it) != "undefined") {_RecordType("<2153,2155,111>",(it)); Inst64++; } } catch(e) {}
try { if (Inst66 <= 1000 && typeof (it.next().done) != "undefined") {_RecordType("<2164,2178,112>",(it.next().done)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (it.next) != "undefined") {_RecordType("<2164,2171,112>",(it.next)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (it) != "undefined") {_RecordType("<2164,2166,112>",(it)); Inst68++; } } catch(e) {}
it.next().done;
false;
try { if (Inst69 <= 1000 && typeof (it.next().done) != "undefined") {_RecordType("<2187,2201,114>",(it.next().done)); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (it.next) != "undefined") {_RecordType("<2187,2194,114>",(it.next)); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (it) != "undefined") {_RecordType("<2187,2189,114>",(it)); Inst71++; } } catch(e) {}
it.next().done;
true;

/******************************************************************************/
try { if (Inst72 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<2302,2315,118>",(reportCompare)); Inst72++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst73 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<2336,2349,119>",(reportCompare)); Inst73++; } } catch(e) {}
  reportCompare(true, true);
}

try { if (Inst74 <= 1000 && typeof (print) != "undefined") {_RecordType("<2366,2371,122>",(print)); Inst74++; } } catch(e) {}
print("Tests complete");

