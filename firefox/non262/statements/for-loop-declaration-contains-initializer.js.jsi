var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/*
 * Any copyright is dedicated to the Public Domain.
 * http://creativecommons.org/licenses/publicdomain/
 */
var gTestfile = "for-loop-declaration-contains-computed-name.js";
try { if (Inst0 <= 1000 && typeof (gTestfile) != "undefined") {_RecordType("<116,125,5>",(gTestfile)); Inst0++; } } catch(e) {}
var BUGNUMBER = 1233767;
try { if (Inst1 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<182,191,6>",(BUGNUMBER)); Inst1++; } } catch(e) {}
var summary = "Support initializer defaults in destructuring declarations in for-in/of " + "loop heads";
try { if (Inst2 <= 1000 && typeof (summary) != "undefined") {_RecordType("<207,214,7>",(summary)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (print) != "undefined") {_RecordType("<308,313,8>",(print)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<314,323,8>",(BUGNUMBER)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (summary) != "undefined") {_RecordType("<333,340,8>",(summary)); Inst5++; } } catch(e) {}
print(BUGNUMBER + ": " + summary);
/**************
 * BEGIN TEST *
 **************/

var count;
try { if (Inst6 <= 1000 && typeof (count) != "undefined") {_RecordType("<397,402,13>",(count)); Inst6++; } } catch(e) {}
var expr;
try { if (Inst7 <= 1000 && typeof (expr) != "undefined") {_RecordType("<408,412,14>",(expr)); Inst7++; } } catch(e) {}
expr = [{
  z: 42,
  42: "hi"
}, {
  7: 'fnord'
}];
try { if (Inst8 <= 1000 && typeof (expr) != "undefined") {_RecordType("<414,418,15>",(expr)); Inst8++; } } catch(e) {}
count = 0;
try { if (Inst9 <= 1000 && typeof (count) != "undefined") {_RecordType("<466,471,21>",(count)); Inst9++; } } catch(e) {}

for (var {
  z: x = 7,
  [x]: y = 3
} of expr) {
try { if (Inst10 <= 1000 && typeof (x) != "undefined") {_RecordType("<494,495,24>",(x)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (y) != "undefined") {_RecordType("<508,509,25>",(y)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (expr) != "undefined") {_RecordType("<519,523,26>",(expr)); Inst12++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (count) != "undefined") {_RecordType("<533,538,27>",(count)); Inst13++; } } catch(e) {}
  if (count === 0) {
try { if (Inst14 <= 1000 && typeof (x) != "undefined") {_RecordType("<552,553,28>",(x)); Inst14++; } } catch(e) {}
    x;
    42;
try { if (Inst15 <= 1000 && typeof (y) != "undefined") {_RecordType("<567,568,30>",(y)); Inst15++; } } catch(e) {}
    y;
    "hi";
  } else {
try { if (Inst16 <= 1000 && typeof (x) != "undefined") {_RecordType("<595,596,33>",(x)); Inst16++; } } catch(e) {}
    x;
    7;
try { if (Inst17 <= 1000 && typeof (y) != "undefined") {_RecordType("<609,610,35>",(y)); Inst17++; } } catch(e) {}
    y;
    "fnord";
  }

try { if (Inst18 <= 1000 && typeof (count) != "undefined") {_RecordType("<632,637,39>",(count)); Inst18++; } } catch(e) {}
  count++;
}

count = 0;
try { if (Inst19 <= 1000 && typeof (count) != "undefined") {_RecordType("<644,649,42>",(count)); Inst19++; } } catch(e) {}

for (var {
  length: x,
  [x - 1 + count]: y = "psych"
} in "foo") {
try { if (Inst20 <= 1000 && typeof (x) != "undefined") {_RecordType("<677,678,45>",(x)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (y) != "undefined") {_RecordType("<699,700,46>",(y)); Inst21++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (x) != "undefined") {_RecordType("<727,728,48>",(x)); Inst22++; } } catch(e) {}
  x;
  1;
try { if (Inst23 <= 1000 && typeof (y) != "undefined") {_RecordType("<737,738,50>",(y)); Inst23++; } } catch(e) {}
  y;
try { if (Inst24 <= 1000 && typeof (count) != "undefined") {_RecordType("<742,747,51>",(count)); Inst24++; } } catch(e) {}
  count === 0 ? "0" : "psych";
try { if (Inst25 <= 1000 && typeof (count) != "undefined") {_RecordType("<773,778,52>",(count)); Inst25++; } } catch(e) {}
  count++;
}
/******************************************************************************/


try { if (Inst26 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<878,891,57>",(reportCompare)); Inst26++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst27 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<912,925,58>",(reportCompare)); Inst27++; } } catch(e) {}
  reportCompare(true, true);
}

try { if (Inst28 <= 1000 && typeof (print) != "undefined") {_RecordType("<942,947,61>",(print)); Inst28++; } } catch(e) {}
print("Tests complete");

