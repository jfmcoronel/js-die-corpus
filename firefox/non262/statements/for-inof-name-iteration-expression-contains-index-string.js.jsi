var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Any copyright is dedicated to the Public Domain.
// http://creativecommons.org/licenses/publicdomain/
//-----------------------------------------------------------------------------
var gTestfile = "for-inof-name-iteration-expression-contains-index-string.js";
try { if (Inst0 <= 1000 && typeof (gTestfile) != "undefined") {_RecordType("<189,198,4>",(gTestfile)); Inst0++; } } catch(e) {}
var BUGNUMBER = 1235640;
try { if (Inst1 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<268,277,5>",(BUGNUMBER)); Inst1++; } } catch(e) {}
var summary = "Don't assert parsing a for-in/of loop whose target is a name, where the " + "expression being iterated over contains a string containing an index";
try { if (Inst2 <= 1000 && typeof (summary) != "undefined") {_RecordType("<293,300,6>",(summary)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (print) != "undefined") {_RecordType("<452,457,7>",(print)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<458,467,7>",(BUGNUMBER)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (summary) != "undefined") {_RecordType("<477,484,7>",(summary)); Inst5++; } } catch(e) {}
print(BUGNUMBER + ": " + summary);
/**************
 * BEGIN TEST *
 **************/

try { if (Inst6 <= 1000 && typeof (f) != "undefined") {_RecordType("<546,547,12>",(f)); Inst6++; } } catch(e) {}
function f() {
  var x;
try { if (Inst7 <= 1000 && typeof (x) != "undefined") {_RecordType("<558,559,13>",(x)); Inst7++; } } catch(e) {}

  for (x in "9") {
try { if (Inst8 <= 1000 && typeof (x) != "undefined") {_RecordType("<569,570,15>",(x)); Inst8++; } } catch(e) {}
    continue;
  }

try { if (Inst9 <= 1000 && typeof (x) != "undefined") {_RecordType("<602,603,19>",(x)); Inst9++; } } catch(e) {}
  x;
  "0";
}

try { if (Inst10 <= 1000 && typeof (f) != "undefined") {_RecordType("<615,616,23>",(f)); Inst10++; } } catch(e) {}
f();

try { if (Inst11 <= 1000 && typeof (g) != "undefined") {_RecordType("<630,631,25>",(g)); Inst11++; } } catch(e) {}
function g() {
  "use strict";

  var x = "unset";
try { if (Inst12 <= 1000 && typeof (x) != "undefined") {_RecordType("<659,660,28>",(x)); Inst12++; } } catch(e) {}

  for (x in arguments) {
try { if (Inst13 <= 1000 && typeof (x) != "undefined") {_RecordType("<680,681,30>",(x)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<685,694,30>",(arguments)); Inst14++; } } catch(e) {}
    continue;
  }

try { if (Inst15 <= 1000 && typeof (x) != "undefined") {_RecordType("<719,720,34>",(x)); Inst15++; } } catch(e) {}
  x;
  "unset";
}

try { if (Inst16 <= 1000 && typeof (g) != "undefined") {_RecordType("<736,737,38>",(g)); Inst16++; } } catch(e) {}
g();
/******************************************************************************/

try { if (Inst17 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<834,847,41>",(reportCompare)); Inst17++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst18 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<868,881,42>",(reportCompare)); Inst18++; } } catch(e) {}
  reportCompare(true, true);
}

try { if (Inst19 <= 1000 && typeof (print) != "undefined") {_RecordType("<898,903,45>",(print)); Inst19++; } } catch(e) {}
print("Tests complete");

