var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/*
 * Any copyright is dedicated to the Public Domain.
 * http://creativecommons.org/licenses/publicdomain/
 */
var gTestfile = "for-inof-loop-const-declaration.js";
try { if (Inst0 <= 1000 && typeof (gTestfile) != "undefined") {_RecordType("<116,125,5>",(gTestfile)); Inst0++; } } catch(e) {}
var BUGNUMBER = 1278150;
try { if (Inst1 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<170,179,6>",(BUGNUMBER)); Inst1++; } } catch(e) {}
var summary = "Support const declarations in for-of loop heads";
try { if (Inst2 <= 1000 && typeof (summary) != "undefined") {_RecordType("<195,202,7>",(summary)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (print) != "undefined") {_RecordType("<256,261,8>",(print)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<262,271,8>",(BUGNUMBER)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (summary) != "undefined") {_RecordType("<281,288,8>",(summary)); Inst5++; } } catch(e) {}
print(BUGNUMBER + ": " + summary);
/**************
 * BEGIN TEST *
 **************/

var count;
try { if (Inst6 <= 1000 && typeof (count) != "undefined") {_RecordType("<345,350,13>",(count)); Inst6++; } } catch(e) {}
count = 0;
try { if (Inst7 <= 1000 && typeof (count) != "undefined") {_RecordType("<352,357,14>",(count)); Inst7++; } } catch(e) {}

for (const x in "abcdef") {
try { if (Inst8 <= 1000 && typeof (x) != "undefined") {_RecordType("<375,376,16>",(x)); Inst8++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (x) != "undefined") {_RecordType("<394,395,17>",(x)); Inst9++; } } catch(e) {}
  x;
try { if (Inst10 <= 1000 && typeof (count) != "undefined") {_RecordType("<404,409,18>",(count)); Inst10++; } } catch(e) {}
  "" + count++;

try { if (Inst13 <= 1000 && typeof (e) != "undefined") {_RecordType("<481,482,23>",(e)); Inst13++; } } catch(e) {}
  try {
    x = 3;
try { if (Inst11 <= 1000 && typeof (x) != "undefined") {_RecordType("<426,427,21>",(x)); Inst11++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (Error) != "undefined") {_RecordType("<447,452,22>",(Error)); Inst12++; } } catch(e) {}
    throw new Error("didn't throw");
  } catch (e) {
try { if (Inst14 <= 1000 && typeof (e) != "undefined") {_RecordType("<490,491,24>",(e)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<503,512,24>",(TypeError)); Inst15++; } } catch(e) {}
    e instanceof TypeError;
    true;
try { if (Inst16 <= 1000 && typeof (e) != "undefined") {_RecordType("<570,571,26>",(e)); Inst16++; } } catch(e) {}
    "didn't get a TypeError, instead got: " + e;
  }
}

count = 0;
try { if (Inst17 <= 1000 && typeof (count) != "undefined") {_RecordType("<580,585,30>",(count)); Inst17++; } } catch(e) {}

for (const x of "012345") {
try { if (Inst18 <= 1000 && typeof (x) != "undefined") {_RecordType("<603,604,32>",(x)); Inst18++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (x) != "undefined") {_RecordType("<622,623,33>",(x)); Inst19++; } } catch(e) {}
  x;
try { if (Inst20 <= 1000 && typeof (count) != "undefined") {_RecordType("<632,637,34>",(count)); Inst20++; } } catch(e) {}
  "" + count++;

try { if (Inst23 <= 1000 && typeof (e) != "undefined") {_RecordType("<709,710,39>",(e)); Inst23++; } } catch(e) {}
  try {
    x = 3;
try { if (Inst21 <= 1000 && typeof (x) != "undefined") {_RecordType("<654,655,37>",(x)); Inst21++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (Error) != "undefined") {_RecordType("<675,680,38>",(Error)); Inst22++; } } catch(e) {}
    throw new Error("didn't throw");
  } catch (e) {
try { if (Inst24 <= 1000 && typeof (e) != "undefined") {_RecordType("<718,719,40>",(e)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<731,740,40>",(TypeError)); Inst25++; } } catch(e) {}
    e instanceof TypeError;
    true;
try { if (Inst26 <= 1000 && typeof (e) != "undefined") {_RecordType("<798,799,42>",(e)); Inst26++; } } catch(e) {}
    "didn't get a TypeError, instead got: " + e;
  }
}

count = 0;
try { if (Inst27 <= 1000 && typeof (count) != "undefined") {_RecordType("<808,813,46>",(count)); Inst27++; } } catch(e) {}

for (const {
  length,
  0: c
} in "abcdef") {
try { if (Inst28 <= 1000 && typeof (length) != "undefined") {_RecordType("<835,841,49>",(length)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (c) != "undefined") {_RecordType("<848,849,50>",(c)); Inst29++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (length) != "undefined") {_RecordType("<869,875,52>",(length)); Inst30++; } } catch(e) {}
  length;
  1;
try { if (Inst31 <= 1000 && typeof (c) != "undefined") {_RecordType("<884,885,54>",(c)); Inst31++; } } catch(e) {}
  c;
try { if (Inst32 <= 1000 && typeof (count) != "undefined") {_RecordType("<894,899,55>",(count)); Inst32++; } } catch(e) {}
  "" + count++;

try { if (Inst35 <= 1000 && typeof (e) != "undefined") {_RecordType("<976,977,60>",(e)); Inst35++; } } catch(e) {}
  try {
    length = 1;
try { if (Inst33 <= 1000 && typeof (length) != "undefined") {_RecordType("<916,922,58>",(length)); Inst33++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof (Error) != "undefined") {_RecordType("<942,947,59>",(Error)); Inst34++; } } catch(e) {}
    throw new Error("didn't throw");
  } catch (e) {
try { if (Inst36 <= 1000 && typeof (e) != "undefined") {_RecordType("<985,986,61>",(e)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<998,1007,61>",(TypeError)); Inst37++; } } catch(e) {}
    e instanceof TypeError;
    true;
try { if (Inst38 <= 1000 && typeof (e) != "undefined") {_RecordType("<1065,1066,63>",(e)); Inst38++; } } catch(e) {}
    "didn't get a TypeError, instead got: " + e;
  }
}

count = 0;
try { if (Inst39 <= 1000 && typeof (count) != "undefined") {_RecordType("<1075,1080,67>",(count)); Inst39++; } } catch(e) {}

for (const {
  length,
  0: c
} of "012345") {
try { if (Inst40 <= 1000 && typeof (length) != "undefined") {_RecordType("<1102,1108,70>",(length)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (c) != "undefined") {_RecordType("<1115,1116,71>",(c)); Inst41++; } } catch(e) {}
try { if (Inst42 <= 1000 && typeof (length) != "undefined") {_RecordType("<1136,1142,73>",(length)); Inst42++; } } catch(e) {}
  length;
  1;
try { if (Inst43 <= 1000 && typeof (c) != "undefined") {_RecordType("<1151,1152,75>",(c)); Inst43++; } } catch(e) {}
  c;
try { if (Inst44 <= 1000 && typeof (count) != "undefined") {_RecordType("<1161,1166,76>",(count)); Inst44++; } } catch(e) {}
  "" + count++;

try { if (Inst47 <= 1000 && typeof (e) != "undefined") {_RecordType("<1239,1240,81>",(e)); Inst47++; } } catch(e) {}
  try {
    c = 42;
try { if (Inst45 <= 1000 && typeof (c) != "undefined") {_RecordType("<1183,1184,79>",(c)); Inst45++; } } catch(e) {}
try { if (Inst46 <= 1000 && typeof (Error) != "undefined") {_RecordType("<1205,1210,80>",(Error)); Inst46++; } } catch(e) {}
    throw new Error("didn't throw");
  } catch (e) {
try { if (Inst48 <= 1000 && typeof (e) != "undefined") {_RecordType("<1248,1249,82>",(e)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<1261,1270,82>",(TypeError)); Inst49++; } } catch(e) {}
    e instanceof TypeError;
    true;
try { if (Inst50 <= 1000 && typeof (e) != "undefined") {_RecordType("<1328,1329,84>",(e)); Inst50++; } } catch(e) {}
    "didn't get a TypeError, instead got: " + e;
  }
}
/******************************************************************************/


try { if (Inst51 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1431,1444,90>",(reportCompare)); Inst51++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst52 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1465,1478,91>",(reportCompare)); Inst52++; } } catch(e) {}
  reportCompare(true, true);
}

try { if (Inst53 <= 1000 && typeof (print) != "undefined") {_RecordType("<1495,1500,94>",(print)); Inst53++; } } catch(e) {}
print("Tests complete");

