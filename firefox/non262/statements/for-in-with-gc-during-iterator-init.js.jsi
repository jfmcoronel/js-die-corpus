var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Any copyright is dedicated to the Public Domain.
// http://creativecommons.org/licenses/publicdomain/
//-----------------------------------------------------------------------------
var gTestfile = "for-in-with-gc-during-iterator-init.js";
try { if (Inst0 <= 1000 && typeof (gTestfile) != "undefined") {_RecordType("<189,198,4>",(gTestfile)); Inst0++; } } catch(e) {}
var BUGNUMBER = 1464472;
try { if (Inst1 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<247,256,5>",(BUGNUMBER)); Inst1++; } } catch(e) {}
var summary = "Properly trace NativeIterator when a GC occurs during its initialization";
try { if (Inst2 <= 1000 && typeof (summary) != "undefined") {_RecordType("<272,279,6>",(summary)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (print) != "undefined") {_RecordType("<358,363,7>",(print)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<364,373,7>",(BUGNUMBER)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (summary) != "undefined") {_RecordType("<383,390,7>",(summary)); Inst5++; } } catch(e) {}
print(BUGNUMBER + ": " + summary);
/**************
 * BEGIN TEST *
 **************/

try { if (Inst6 <= 1000 && typeof (gczeal) != "undefined") {_RecordType("<443,449,12>",(gczeal)); Inst6++; } } catch(e) {}
gczeal(17, 1);

for (var i = 0; i < 100; ++i) {
try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<468,469,14>",(i)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<475,476,14>",(i)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<486,487,14>",(i)); Inst9++; } } catch(e) {}
  Object.prototype[1012] = "value";
try { if (Inst10 <= 1000 && typeof (Object.prototype[1012]) != "undefined") {_RecordType("<493,515,15>",(Object.prototype[1012])); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<493,509,15>",(Object.prototype)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Object) != "undefined") {_RecordType("<493,499,15>",(Object)); Inst12++; } } catch(e) {}
  imports = {};
try { if (Inst13 <= 1000 && typeof (imports) != "undefined") {_RecordType("<529,536,16>",(imports)); Inst13++; } } catch(e) {}

  for (dmod in imports) {
try { if (Inst14 <= 1000 && typeof (dmod) != "undefined") {_RecordType("<551,555,18>",(dmod)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (imports) != "undefined") {_RecordType("<559,566,18>",(imports)); Inst15++; } } catch(e) {}
    continue;
  } // gc occurs here converting 1012 to string

}
/******************************************************************************/


try { if (Inst16 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<729,742,26>",(reportCompare)); Inst16++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst17 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<763,776,27>",(reportCompare)); Inst17++; } } catch(e) {}
  reportCompare(true, true);
}

try { if (Inst18 <= 1000 && typeof (print) != "undefined") {_RecordType("<793,798,30>",(print)); Inst18++; } } catch(e) {}
print("Tests complete");

