var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* -*- indent-tabs-mode: nil; js-indent-level: 2 -*- */

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

/*
 *
 * Date:    10 Apr 2002
 * Revised: 14 July 2002
 *
 * SUMMARY: JS should NOT error on |for(i in undefined)|, |for(i in null)|
 *
 * ECMA-262 3rd Edition Final spec says such statements SHOULD error. See:
 *
 *               Section 12.6.4  The for-in Statement
 *               Section 9.9     ToObject
 *
 *
 * But SpiderMonkey has decided NOT to follow this; it's a bug in the spec.
 * See http://bugzilla.mozilla.org/show_bug.cgi?id=131348
 *
 * Update: Rhino has also decided not to follow the spec on this
 * See http://bugzilla.mozilla.org/show_bug.cgi?id=136893
 */
//-----------------------------------------------------------------------------
var UBound = 0;
try { if (Inst0 <= 1000 && typeof (UBound) != "undefined") {_RecordType("<927,933,27>",(UBound)); Inst0++; } } catch(e) {}
var BUGNUMBER = 131348;
try { if (Inst1 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<943,952,28>",(BUGNUMBER)); Inst1++; } } catch(e) {}
var summary = 'JS should not error on |for(i in undefined)|, |for(i in null)|';
try { if (Inst2 <= 1000 && typeof (summary) != "undefined") {_RecordType("<967,974,29>",(summary)); Inst2++; } } catch(e) {}
var TEST_PASSED = 'No error';
try { if (Inst3 <= 1000 && typeof (TEST_PASSED) != "undefined") {_RecordType("<1047,1058,30>",(TEST_PASSED)); Inst3++; } } catch(e) {}
var TEST_FAILED = 'An error was generated!!!';
try { if (Inst4 <= 1000 && typeof (TEST_FAILED) != "undefined") {_RecordType("<1077,1088,31>",(TEST_FAILED)); Inst4++; } } catch(e) {}
var status = '';
try { if (Inst5 <= 1000 && typeof (status) != "undefined") {_RecordType("<1124,1130,32>",(status)); Inst5++; } } catch(e) {}
var statusitems = [];
try { if (Inst6 <= 1000 && typeof (statusitems) != "undefined") {_RecordType("<1141,1152,33>",(statusitems)); Inst6++; } } catch(e) {}
var actual = '';
try { if (Inst7 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1163,1169,34>",(actual)); Inst7++; } } catch(e) {}
var actualvalues = [];
try { if (Inst8 <= 1000 && typeof (actualvalues) != "undefined") {_RecordType("<1180,1192,35>",(actualvalues)); Inst8++; } } catch(e) {}
var expect = '';
try { if (Inst9 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1203,1209,36>",(expect)); Inst9++; } } catch(e) {}
var expectedvalues = [];
try { if (Inst10 <= 1000 && typeof (expectedvalues) != "undefined") {_RecordType("<1220,1234,37>",(expectedvalues)); Inst10++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (inSection) != "undefined") {_RecordType("<1250,1259,38>",(inSection)); Inst12++; } } catch(e) {}
status = inSection(1);
try { if (Inst11 <= 1000 && typeof (status) != "undefined") {_RecordType("<1241,1247,38>",(status)); Inst11++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (TEST_PASSED) != "undefined") {_RecordType("<1273,1284,39>",(TEST_PASSED)); Inst14++; } } catch(e) {}
expect = TEST_PASSED;
try { if (Inst13 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1264,1270,39>",(expect)); Inst13++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (TEST_PASSED) != "undefined") {_RecordType("<1295,1306,40>",(TEST_PASSED)); Inst16++; } } catch(e) {}
actual = TEST_PASSED;
try { if (Inst15 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1286,1292,40>",(actual)); Inst15++; } } catch(e) {}

try { if (Inst21 <= 1000 && typeof (e) != "undefined") {_RecordType("<1371,1372,46>",(e)); Inst21++; } } catch(e) {}
try {
  for (var i in undefined) {
try { if (Inst17 <= 1000 && typeof (i) != "undefined") {_RecordType("<1326,1327,43>",(i)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<1331,1340,43>",(undefined)); Inst18++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (print) != "undefined") {_RecordType("<1348,1353,44>",(print)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<1354,1355,44>",(i)); Inst20++; } } catch(e) {}
    print(i);
  }
} catch (e) {
try { if (Inst23 <= 1000 && typeof (TEST_FAILED) != "undefined") {_RecordType("<1387,1398,47>",(TEST_FAILED)); Inst23++; } } catch(e) {}
  actual = TEST_FAILED;
try { if (Inst22 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1378,1384,47>",(actual)); Inst22++; } } catch(e) {}
}

try { if (Inst24 <= 1000 && typeof (addThis) != "undefined") {_RecordType("<1403,1410,50>",(addThis)); Inst24++; } } catch(e) {}
addThis();
try { if (Inst26 <= 1000 && typeof (inSection) != "undefined") {_RecordType("<1423,1432,51>",(inSection)); Inst26++; } } catch(e) {}
status = inSection(2);
try { if (Inst25 <= 1000 && typeof (status) != "undefined") {_RecordType("<1414,1420,51>",(status)); Inst25++; } } catch(e) {}
try { if (Inst28 <= 1000 && typeof (TEST_PASSED) != "undefined") {_RecordType("<1446,1457,52>",(TEST_PASSED)); Inst28++; } } catch(e) {}
expect = TEST_PASSED;
try { if (Inst27 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1437,1443,52>",(expect)); Inst27++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (TEST_PASSED) != "undefined") {_RecordType("<1468,1479,53>",(TEST_PASSED)); Inst30++; } } catch(e) {}
actual = TEST_PASSED;
try { if (Inst29 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1459,1465,53>",(actual)); Inst29++; } } catch(e) {}

try { if (Inst34 <= 1000 && typeof (e) != "undefined") {_RecordType("<1539,1540,59>",(e)); Inst34++; } } catch(e) {}
try {
  for (var i in null) {
try { if (Inst31 <= 1000 && typeof (i) != "undefined") {_RecordType("<1499,1500,56>",(i)); Inst31++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (print) != "undefined") {_RecordType("<1516,1521,57>",(print)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (i) != "undefined") {_RecordType("<1522,1523,57>",(i)); Inst33++; } } catch(e) {}
    print(i);
  }
} catch (e) {
try { if (Inst36 <= 1000 && typeof (TEST_FAILED) != "undefined") {_RecordType("<1555,1566,60>",(TEST_FAILED)); Inst36++; } } catch(e) {}
  actual = TEST_FAILED;
try { if (Inst35 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1546,1552,60>",(actual)); Inst35++; } } catch(e) {}
}

try { if (Inst37 <= 1000 && typeof (addThis) != "undefined") {_RecordType("<1571,1578,63>",(addThis)); Inst37++; } } catch(e) {}
addThis();
try { if (Inst39 <= 1000 && typeof (inSection) != "undefined") {_RecordType("<1591,1600,64>",(inSection)); Inst39++; } } catch(e) {}
status = inSection(3);
try { if (Inst38 <= 1000 && typeof (status) != "undefined") {_RecordType("<1582,1588,64>",(status)); Inst38++; } } catch(e) {}
try { if (Inst41 <= 1000 && typeof (TEST_PASSED) != "undefined") {_RecordType("<1614,1625,65>",(TEST_PASSED)); Inst41++; } } catch(e) {}
expect = TEST_PASSED;
try { if (Inst40 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1605,1611,65>",(expect)); Inst40++; } } catch(e) {}
try { if (Inst43 <= 1000 && typeof (TEST_PASSED) != "undefined") {_RecordType("<1636,1647,66>",(TEST_PASSED)); Inst43++; } } catch(e) {}
actual = TEST_PASSED;
try { if (Inst42 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1627,1633,66>",(actual)); Inst42++; } } catch(e) {}
/*
 * Variable names that cannot be looked up generate ReferenceErrors; however,
 * property names like obj.ZZZ that cannot be looked up are set to |undefined|
 *
 * Therefore, this should indirectly test | for (var i in undefined) |
 */

try { if (Inst48 <= 1000 && typeof (e) != "undefined") {_RecordType("<1949,1950,78>",(e)); Inst48++; } } catch(e) {}
try {
  for (var i in this.ZZZ) {
try { if (Inst44 <= 1000 && typeof (i) != "undefined") {_RecordType("<1905,1906,75>",(i)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (this.ZZZ) != "undefined") {_RecordType("<1910,1918,75>",(this.ZZZ)); Inst45++; } } catch(e) {}
try { if (Inst46 <= 1000 && typeof (print) != "undefined") {_RecordType("<1926,1931,76>",(print)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (i) != "undefined") {_RecordType("<1932,1933,76>",(i)); Inst47++; } } catch(e) {}
    print(i);
  }
} catch (e) {
try { if (Inst50 <= 1000 && typeof (TEST_FAILED) != "undefined") {_RecordType("<1965,1976,79>",(TEST_FAILED)); Inst50++; } } catch(e) {}
  actual = TEST_FAILED;
try { if (Inst49 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1956,1962,79>",(actual)); Inst49++; } } catch(e) {}
}

try { if (Inst51 <= 1000 && typeof (addThis) != "undefined") {_RecordType("<1981,1988,82>",(addThis)); Inst51++; } } catch(e) {}
addThis();
try { if (Inst53 <= 1000 && typeof (inSection) != "undefined") {_RecordType("<2001,2010,83>",(inSection)); Inst53++; } } catch(e) {}
status = inSection(4);
try { if (Inst52 <= 1000 && typeof (status) != "undefined") {_RecordType("<1992,1998,83>",(status)); Inst52++; } } catch(e) {}
try { if (Inst55 <= 1000 && typeof (TEST_PASSED) != "undefined") {_RecordType("<2024,2035,84>",(TEST_PASSED)); Inst55++; } } catch(e) {}
expect = TEST_PASSED;
try { if (Inst54 <= 1000 && typeof (expect) != "undefined") {_RecordType("<2015,2021,84>",(expect)); Inst54++; } } catch(e) {}
try { if (Inst57 <= 1000 && typeof (TEST_PASSED) != "undefined") {_RecordType("<2046,2057,85>",(TEST_PASSED)); Inst57++; } } catch(e) {}
actual = TEST_PASSED;
try { if (Inst56 <= 1000 && typeof (actual) != "undefined") {_RecordType("<2037,2043,85>",(actual)); Inst56++; } } catch(e) {}
/*
 * The result of an unsuccessful regexp match is the null value
 * Therefore, this should indirectly test | for (var i in null) |
 */

try { if (Inst62 <= 1000 && typeof (e) != "undefined") {_RecordType("<2268,2269,95>",(e)); Inst62++; } } catch(e) {}
try {
  for (var i in 'bbb'.match(/aaa/)) {
try { if (Inst58 <= 1000 && typeof (i) != "undefined") {_RecordType("<2214,2215,92>",(i)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof ('bbb'.match) != "undefined") {_RecordType("<2219,2230,92>",('bbb'.match)); Inst59++; } } catch(e) {}
try { if (Inst60 <= 1000 && typeof (print) != "undefined") {_RecordType("<2245,2250,93>",(print)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (i) != "undefined") {_RecordType("<2251,2252,93>",(i)); Inst61++; } } catch(e) {}
    print(i);
  }
} catch (e) {
try { if (Inst64 <= 1000 && typeof (TEST_FAILED) != "undefined") {_RecordType("<2284,2295,96>",(TEST_FAILED)); Inst64++; } } catch(e) {}
  actual = TEST_FAILED;
try { if (Inst63 <= 1000 && typeof (actual) != "undefined") {_RecordType("<2275,2281,96>",(actual)); Inst63++; } } catch(e) {}
}

try { if (Inst65 <= 1000 && typeof (addThis) != "undefined") {_RecordType("<2300,2307,99>",(addThis)); Inst65++; } } catch(e) {}
addThis(); //-----------------------------------------------------------------------------

try { if (Inst66 <= 1000 && typeof (test) != "undefined") {_RecordType("<2392,2396,101>",(test)); Inst66++; } } catch(e) {}
test(); //-----------------------------------------------------------------------------

try { if (Inst67 <= 1000 && typeof (addThis) != "undefined") {_RecordType("<2490,2497,103>",(addThis)); Inst67++; } } catch(e) {}
function addThis() {
try { if (Inst70 <= 1000 && typeof (status) != "undefined") {_RecordType("<2526,2532,104>",(status)); Inst70++; } } catch(e) {}
  statusitems[UBound] = status;
try { if (Inst68 <= 1000 && typeof (statusitems[UBound]) != "undefined") {_RecordType("<2504,2523,104>",(statusitems[UBound])); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (statusitems) != "undefined") {_RecordType("<2504,2515,104>",(statusitems)); Inst69++; } } catch(e) {}
try { if (Inst73 <= 1000 && typeof (actual) != "undefined") {_RecordType("<2559,2565,105>",(actual)); Inst73++; } } catch(e) {}
  actualvalues[UBound] = actual;
try { if (Inst71 <= 1000 && typeof (actualvalues[UBound]) != "undefined") {_RecordType("<2536,2556,105>",(actualvalues[UBound])); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (actualvalues) != "undefined") {_RecordType("<2536,2548,105>",(actualvalues)); Inst72++; } } catch(e) {}
try { if (Inst76 <= 1000 && typeof (expect) != "undefined") {_RecordType("<2594,2600,106>",(expect)); Inst76++; } } catch(e) {}
  expectedvalues[UBound] = expect;
try { if (Inst74 <= 1000 && typeof (expectedvalues[UBound]) != "undefined") {_RecordType("<2569,2591,106>",(expectedvalues[UBound])); Inst74++; } } catch(e) {}try { if (Inst75 <= 1000 && typeof (expectedvalues) != "undefined") {_RecordType("<2569,2583,106>",(expectedvalues)); Inst75++; } } catch(e) {}
try { if (Inst77 <= 1000 && typeof (UBound) != "undefined") {_RecordType("<2604,2610,107>",(UBound)); Inst77++; } } catch(e) {}
  UBound++;
}

try { if (Inst78 <= 1000 && typeof (test) != "undefined") {_RecordType("<2626,2630,110>",(test)); Inst78++; } } catch(e) {}
function test() {
try { if (Inst79 <= 1000 && typeof (printBugNumber) != "undefined") {_RecordType("<2637,2651,111>",(printBugNumber)); Inst79++; } } catch(e) {}try { if (Inst80 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<2652,2661,111>",(BUGNUMBER)); Inst80++; } } catch(e) {}
  printBugNumber(BUGNUMBER);
try { if (Inst81 <= 1000 && typeof (printStatus) != "undefined") {_RecordType("<2666,2677,112>",(printStatus)); Inst81++; } } catch(e) {}try { if (Inst82 <= 1000 && typeof (summary) != "undefined") {_RecordType("<2678,2685,112>",(summary)); Inst82++; } } catch(e) {}
  printStatus(summary);

  for (var i = 0; i < UBound; i++) {
try { if (Inst83 <= 1000 && typeof (i) != "undefined") {_RecordType("<2700,2701,114>",(i)); Inst83++; } } catch(e) {}try { if (Inst84 <= 1000 && typeof (i) != "undefined") {_RecordType("<2707,2708,114>",(i)); Inst84++; } } catch(e) {}try { if (Inst85 <= 1000 && typeof (UBound) != "undefined") {_RecordType("<2711,2717,114>",(UBound)); Inst85++; } } catch(e) {}try { if (Inst86 <= 1000 && typeof (i) != "undefined") {_RecordType("<2719,2720,114>",(i)); Inst86++; } } catch(e) {}
try { if (Inst87 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<2730,2743,115>",(reportCompare)); Inst87++; } } catch(e) {}try { if (Inst88 <= 1000 && typeof (expectedvalues[i]) != "undefined") {_RecordType("<2744,2761,115>",(expectedvalues[i])); Inst88++; } } catch(e) {}try { if (Inst89 <= 1000 && typeof (expectedvalues) != "undefined") {_RecordType("<2744,2758,115>",(expectedvalues)); Inst89++; } } catch(e) {}try { if (Inst90 <= 1000 && typeof (actualvalues[i]) != "undefined") {_RecordType("<2763,2778,115>",(actualvalues[i])); Inst90++; } } catch(e) {}try { if (Inst91 <= 1000 && typeof (actualvalues) != "undefined") {_RecordType("<2763,2775,115>",(actualvalues)); Inst91++; } } catch(e) {}try { if (Inst92 <= 1000 && typeof (statusitems[i]) != "undefined") {_RecordType("<2780,2794,115>",(statusitems[i])); Inst92++; } } catch(e) {}try { if (Inst93 <= 1000 && typeof (statusitems) != "undefined") {_RecordType("<2780,2791,115>",(statusitems)); Inst93++; } } catch(e) {}
    reportCompare(expectedvalues[i], actualvalues[i], statusitems[i]);
  }
}

