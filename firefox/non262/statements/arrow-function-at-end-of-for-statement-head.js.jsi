var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Any copyright is dedicated to the Public Domain.
// http://creativecommons.org/licenses/publicdomain/
//-----------------------------------------------------------------------------
var gTestfile = "arrow-function-in-for-statement-head.js";
try { if (Inst0 <= 1000 && typeof (gTestfile) != "undefined") {_RecordType("<189,198,4>",(gTestfile)); Inst0++; } } catch(e) {}
var BUGNUMBER = 1302994;
try { if (Inst1 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<248,257,5>",(BUGNUMBER)); Inst1++; } } catch(e) {}
var summary = "Don't assert when an arrow function occurs at the end of a declaration " + "init-component of a for(;;) loop head";
try { if (Inst2 <= 1000 && typeof (summary) != "undefined") {_RecordType("<273,280,6>",(summary)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (print) != "undefined") {_RecordType("<400,405,7>",(print)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<406,415,7>",(BUGNUMBER)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (summary) != "undefined") {_RecordType("<425,432,7>",(summary)); Inst5++; } } catch(e) {}
print(BUGNUMBER + ": " + summary);
/**************
 * BEGIN TEST *
 **************/

try { if (Inst6 <= 1000 && typeof (f1) != "undefined") {_RecordType("<494,496,12>",(f1)); Inst6++; } } catch(e) {}
function f1() {
  for (var x = a => b; false; false) {
try { if (Inst7 <= 1000 && typeof (x) != "undefined") {_RecordType("<512,513,13>",(x)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (a) != "undefined") {_RecordType("<516,517,13>",(a)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (b) != "undefined") {_RecordType("<521,522,13>",(b)); Inst9++; } } catch(e) {}
    ;
  }
}

try { if (Inst10 <= 1000 && typeof (f1) != "undefined") {_RecordType("<553,555,18>",(f1)); Inst10++; } } catch(e) {}
f1();

try { if (Inst11 <= 1000 && typeof (f2) != "undefined") {_RecordType("<569,571,20>",(f2)); Inst11++; } } catch(e) {}
function f2() {
  for (var x = a => b, y = c => d; false; false) {
try { if (Inst12 <= 1000 && typeof (x) != "undefined") {_RecordType("<587,588,21>",(x)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (a) != "undefined") {_RecordType("<591,592,21>",(a)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (b) != "undefined") {_RecordType("<596,597,21>",(b)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (y) != "undefined") {_RecordType("<599,600,21>",(y)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (c) != "undefined") {_RecordType("<603,604,21>",(c)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (d) != "undefined") {_RecordType("<608,609,21>",(d)); Inst17++; } } catch(e) {}
    ;
  }
}

try { if (Inst18 <= 1000 && typeof (f2) != "undefined") {_RecordType("<640,642,26>",(f2)); Inst18++; } } catch(e) {}
f2();

try { if (Inst19 <= 1000 && typeof (f3) != "undefined") {_RecordType("<656,658,28>",(f3)); Inst19++; } } catch(e) {}
function f3() {
  for (var x = a => {
    ;
  }; false; false) {
try { if (Inst20 <= 1000 && typeof (x) != "undefined") {_RecordType("<674,675,29>",(x)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (a) != "undefined") {_RecordType("<678,679,29>",(a)); Inst21++; } } catch(e) {}
    ;
  }
}

try { if (Inst22 <= 1000 && typeof (f3) != "undefined") {_RecordType("<725,727,36>",(f3)); Inst22++; } } catch(e) {}
f3();

try { if (Inst23 <= 1000 && typeof (f4) != "undefined") {_RecordType("<741,743,38>",(f4)); Inst23++; } } catch(e) {}
function f4() {
  for (var x = a => {
    ;
  }, y = b => {
    ;
  }; false; false) {
try { if (Inst24 <= 1000 && typeof (x) != "undefined") {_RecordType("<759,760,39>",(x)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (a) != "undefined") {_RecordType("<763,764,39>",(a)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (y) != "undefined") {_RecordType("<781,782,41>",(y)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (b) != "undefined") {_RecordType("<785,786,41>",(b)); Inst27++; } } catch(e) {}
    ;
  }
}

try { if (Inst28 <= 1000 && typeof (f4) != "undefined") {_RecordType("<832,834,48>",(f4)); Inst28++; } } catch(e) {}
f4();

try { if (Inst29 <= 1000 && typeof (g1) != "undefined") {_RecordType("<848,850,50>",(g1)); Inst29++; } } catch(e) {}
function g1() {
  for (a => b; false; false) {
try { if (Inst30 <= 1000 && typeof (a) != "undefined") {_RecordType("<862,863,51>",(a)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (b) != "undefined") {_RecordType("<867,868,51>",(b)); Inst31++; } } catch(e) {}
    ;
  }
}

try { if (Inst32 <= 1000 && typeof (g1) != "undefined") {_RecordType("<899,901,56>",(g1)); Inst32++; } } catch(e) {}
g1();

try { if (Inst33 <= 1000 && typeof (g2) != "undefined") {_RecordType("<915,917,58>",(g2)); Inst33++; } } catch(e) {}
function g2() {
  for (a => {
    ;
  }; false; false) {
try { if (Inst34 <= 1000 && typeof (a) != "undefined") {_RecordType("<929,930,59>",(a)); Inst34++; } } catch(e) {}
    ;
  }
}

try { if (Inst35 <= 1000 && typeof (g2) != "undefined") {_RecordType("<976,978,66>",(g2)); Inst35++; } } catch(e) {}
g2();
/******************************************************************************/

try { if (Inst36 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1075,1088,69>",(reportCompare)); Inst36++; } } catch(e) {}
if (typeof reportCompare === "function") {
try { if (Inst37 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1109,1122,70>",(reportCompare)); Inst37++; } } catch(e) {}
  reportCompare(true, true);
}

try { if (Inst38 <= 1000 && typeof (print) != "undefined") {_RecordType("<1139,1144,73>",(print)); Inst38++; } } catch(e) {}
print("Tests complete");

