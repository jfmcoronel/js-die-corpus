var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* -*- indent-tabs-mode: nil; js-indent-level: 2 -*- */

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

/*
 * Date: 01 May 2001
 *
 * SUMMARY: Regression test for Bugzilla bug 74474
 *"switch() misbehaves with duplicated labels"
 *
 * See ECMA3  Section 12.11,  "The switch Statement"
 * See http://bugzilla.mozilla.org/show_bug.cgi?id=74474
 */
//-----------------------------------------------------------------------------
var UBound = 0;
try { if (Inst0 <= 1000 && typeof (UBound) != "undefined") {_RecordType("<589,595,17>",(UBound)); Inst0++; } } catch(e) {}
var BUGNUMBER = 74474;
try { if (Inst1 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<605,614,18>",(BUGNUMBER)); Inst1++; } } catch(e) {}
var summary = 'Testing switch statements with duplicate labels';
try { if (Inst2 <= 1000 && typeof (summary) != "undefined") {_RecordType("<628,635,19>",(summary)); Inst2++; } } catch(e) {}
var status = '';
try { if (Inst3 <= 1000 && typeof (status) != "undefined") {_RecordType("<693,699,20>",(status)); Inst3++; } } catch(e) {}
var statusitems = [];
try { if (Inst4 <= 1000 && typeof (statusitems) != "undefined") {_RecordType("<710,721,21>",(statusitems)); Inst4++; } } catch(e) {}
var actual = '';
try { if (Inst5 <= 1000 && typeof (actual) != "undefined") {_RecordType("<732,738,22>",(actual)); Inst5++; } } catch(e) {}
var actualvalues = [];
try { if (Inst6 <= 1000 && typeof (actualvalues) != "undefined") {_RecordType("<749,761,23>",(actualvalues)); Inst6++; } } catch(e) {}
var expect = '';
try { if (Inst7 <= 1000 && typeof (expect) != "undefined") {_RecordType("<772,778,24>",(expect)); Inst7++; } } catch(e) {}
var expectedvalues = [];
try { if (Inst8 <= 1000 && typeof (expectedvalues) != "undefined") {_RecordType("<789,803,25>",(expectedvalues)); Inst8++; } } catch(e) {}
status = 'Section A of test: the string literal "1" as a duplicate label';
try { if (Inst9 <= 1000 && typeof (status) != "undefined") {_RecordType("<810,816,26>",(status)); Inst9++; } } catch(e) {}
actual = '';
try { if (Inst10 <= 1000 && typeof (actual) != "undefined") {_RecordType("<885,891,27>",(actual)); Inst10++; } } catch(e) {}

switch ('1') {
  case '1':
    actual += 'a';
try { if (Inst11 <= 1000 && typeof (actual) != "undefined") {_RecordType("<930,936,31>",(actual)); Inst11++; } } catch(e) {}

  case '1':
    actual += 'b';
try { if (Inst12 <= 1000 && typeof (actual) != "undefined") {_RecordType("<962,968,34>",(actual)); Inst12++; } } catch(e) {}
}

expect = 'ab';
try { if (Inst13 <= 1000 && typeof (expect) != "undefined") {_RecordType("<980,986,37>",(expect)); Inst13++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (addThis) != "undefined") {_RecordType("<995,1002,38>",(addThis)); Inst14++; } } catch(e) {}
addThis();
status = 'Section B of test: the numeric literal 1 as a duplicate label';
try { if (Inst15 <= 1000 && typeof (status) != "undefined") {_RecordType("<1006,1012,39>",(status)); Inst15++; } } catch(e) {}
actual = '';
try { if (Inst16 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1080,1086,40>",(actual)); Inst16++; } } catch(e) {}

switch (1) {
  case 1:
    actual += 'a';
try { if (Inst17 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1121,1127,44>",(actual)); Inst17++; } } catch(e) {}

  case 1:
    actual += 'b';
try { if (Inst18 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1151,1157,47>",(actual)); Inst18++; } } catch(e) {}
}

expect = 'ab';
try { if (Inst19 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1169,1175,50>",(expect)); Inst19++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (addThis) != "undefined") {_RecordType("<1184,1191,51>",(addThis)); Inst20++; } } catch(e) {}
addThis();
status = 'Section C of test: the numeric literal 1 as a duplicate label, via a function parameter';
try { if (Inst21 <= 1000 && typeof (status) != "undefined") {_RecordType("<1195,1201,52>",(status)); Inst21++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (tryThis) != "undefined") {_RecordType("<1295,1302,53>",(tryThis)); Inst22++; } } catch(e) {}
tryThis(1);

try { if (Inst23 <= 1000 && typeof (tryThis) != "undefined") {_RecordType("<1317,1324,55>",(tryThis)); Inst23++; } } catch(e) {}
function tryThis(x) {
try { if (Inst24 <= 1000 && typeof (x) != "undefined") {_RecordType("<1325,1326,55>",(x)); Inst24++; } } catch(e) {}
  actual = '';
try { if (Inst25 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1332,1338,56>",(actual)); Inst25++; } } catch(e) {}

try { if (Inst26 <= 1000 && typeof (x) != "undefined") {_RecordType("<1356,1357,58>",(x)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (x) != "undefined") {_RecordType("<1370,1371,59>",(x)); Inst27++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (x) != "undefined") {_RecordType("<1404,1405,62>",(x)); Inst29++; } } catch(e) {}
  switch (x) {
    case x:
      actual += 'a';
try { if (Inst28 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1379,1385,60>",(actual)); Inst28++; } } catch(e) {}

    case x:
      actual += 'b';
try { if (Inst30 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1413,1419,63>",(actual)); Inst30++; } } catch(e) {}
  }
}

expect = 'ab';
try { if (Inst31 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1435,1441,67>",(expect)); Inst31++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (addThis) != "undefined") {_RecordType("<1450,1457,68>",(addThis)); Inst32++; } } catch(e) {}
addThis(); //---------------------------------------------------------------------------------

try { if (Inst33 <= 1000 && typeof (test) != "undefined") {_RecordType("<1546,1550,70>",(test)); Inst33++; } } catch(e) {}
test(); //---------------------------------------------------------------------------------

try { if (Inst34 <= 1000 && typeof (addThis) != "undefined") {_RecordType("<1648,1655,72>",(addThis)); Inst34++; } } catch(e) {}
function addThis() {
try { if (Inst37 <= 1000 && typeof (status) != "undefined") {_RecordType("<1684,1690,73>",(status)); Inst37++; } } catch(e) {}
  statusitems[UBound] = status;
try { if (Inst35 <= 1000 && typeof (statusitems[UBound]) != "undefined") {_RecordType("<1662,1681,73>",(statusitems[UBound])); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (statusitems) != "undefined") {_RecordType("<1662,1673,73>",(statusitems)); Inst36++; } } catch(e) {}
try { if (Inst40 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1717,1723,74>",(actual)); Inst40++; } } catch(e) {}
  actualvalues[UBound] = actual;
try { if (Inst38 <= 1000 && typeof (actualvalues[UBound]) != "undefined") {_RecordType("<1694,1714,74>",(actualvalues[UBound])); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (actualvalues) != "undefined") {_RecordType("<1694,1706,74>",(actualvalues)); Inst39++; } } catch(e) {}
try { if (Inst43 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1752,1758,75>",(expect)); Inst43++; } } catch(e) {}
  expectedvalues[UBound] = expect;
try { if (Inst41 <= 1000 && typeof (expectedvalues[UBound]) != "undefined") {_RecordType("<1727,1749,75>",(expectedvalues[UBound])); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (expectedvalues) != "undefined") {_RecordType("<1727,1741,75>",(expectedvalues)); Inst42++; } } catch(e) {}
try { if (Inst44 <= 1000 && typeof (UBound) != "undefined") {_RecordType("<1762,1768,76>",(UBound)); Inst44++; } } catch(e) {}
  UBound++;
}

try { if (Inst45 <= 1000 && typeof (test) != "undefined") {_RecordType("<1784,1788,79>",(test)); Inst45++; } } catch(e) {}
function test() {
try { if (Inst46 <= 1000 && typeof (printBugNumber) != "undefined") {_RecordType("<1795,1809,80>",(printBugNumber)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<1810,1819,80>",(BUGNUMBER)); Inst47++; } } catch(e) {}
  printBugNumber(BUGNUMBER);
try { if (Inst48 <= 1000 && typeof (printStatus) != "undefined") {_RecordType("<1824,1835,81>",(printStatus)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (summary) != "undefined") {_RecordType("<1836,1843,81>",(summary)); Inst49++; } } catch(e) {}
  printStatus(summary);

  for (var i = 0; i < UBound; i++) {
try { if (Inst50 <= 1000 && typeof (i) != "undefined") {_RecordType("<1858,1859,83>",(i)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (i) != "undefined") {_RecordType("<1865,1866,83>",(i)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (UBound) != "undefined") {_RecordType("<1869,1875,83>",(UBound)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (i) != "undefined") {_RecordType("<1877,1878,83>",(i)); Inst53++; } } catch(e) {}
try { if (Inst54 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1888,1901,84>",(reportCompare)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (expectedvalues[i]) != "undefined") {_RecordType("<1902,1919,84>",(expectedvalues[i])); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (expectedvalues) != "undefined") {_RecordType("<1902,1916,84>",(expectedvalues)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (actualvalues[i]) != "undefined") {_RecordType("<1921,1936,84>",(actualvalues[i])); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (actualvalues) != "undefined") {_RecordType("<1921,1933,84>",(actualvalues)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (getStatus) != "undefined") {_RecordType("<1938,1947,84>",(getStatus)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (i) != "undefined") {_RecordType("<1948,1949,84>",(i)); Inst60++; } } catch(e) {}
    reportCompare(expectedvalues[i], actualvalues[i], getStatus(i));
  }
}

try { if (Inst61 <= 1000 && typeof (getStatus) != "undefined") {_RecordType("<1969,1978,88>",(getStatus)); Inst61++; } } catch(e) {}
function getStatus(i) {
try { if (Inst62 <= 1000 && typeof (i) != "undefined") {_RecordType("<1979,1980,88>",(i)); Inst62++; } } catch(e) {}
try { if (Inst63 <= 1000 && typeof (statusitems[i]) != "undefined") {_RecordType("<1993,2007,89>",(statusitems[i])); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (statusitems) != "undefined") {_RecordType("<1993,2004,89>",(statusitems)); Inst64++; } } catch(e) {}
  return statusitems[i];
}

