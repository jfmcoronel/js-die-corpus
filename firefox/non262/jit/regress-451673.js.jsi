var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// |reftest| skip -- bogus perf test (bug 540512)

/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
//-----------------------------------------------------------------------------
var BUGNUMBER = 451673;
try { if (Inst0 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<421,430,9>",(BUGNUMBER)); Inst0++; } } catch(e) {}
var summary = 'TM: Tracing prime number generation';
try { if (Inst1 <= 1000 && typeof (summary) != "undefined") {_RecordType("<445,452,10>",(summary)); Inst1++; } } catch(e) {}
var actual = '';
try { if (Inst2 <= 1000 && typeof (actual) != "undefined") {_RecordType("<498,504,11>",(actual)); Inst2++; } } catch(e) {}
var expect = ''; //-----------------------------------------------------------------------------
try { if (Inst3 <= 1000 && typeof (expect) != "undefined") {_RecordType("<515,521,12>",(expect)); Inst3++; } } catch(e) {}

try { if (Inst4 <= 1000 && typeof (test) != "undefined") {_RecordType("<609,613,14>",(test)); Inst4++; } } catch(e) {}
test(); //-----------------------------------------------------------------------------

try { if (Inst5 <= 1000 && typeof (test) != "undefined") {_RecordType("<707,711,16>",(test)); Inst5++; } } catch(e) {}
function test() {
try { if (Inst6 <= 1000 && typeof (printBugNumber) != "undefined") {_RecordType("<718,732,17>",(printBugNumber)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<733,742,17>",(BUGNUMBER)); Inst7++; } } catch(e) {}
  printBugNumber(BUGNUMBER);
try { if (Inst8 <= 1000 && typeof (printStatus) != "undefined") {_RecordType("<747,758,18>",(printStatus)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (summary) != "undefined") {_RecordType("<759,766,18>",(summary)); Inst9++; } } catch(e) {}
  printStatus(summary);

try { if (Inst10 <= 1000 && typeof (doTest) != "undefined") {_RecordType("<781,787,20>",(doTest)); Inst10++; } } catch(e) {}
  function doTest(enablejit) {
try { if (Inst11 <= 1000 && typeof (enablejit) != "undefined") {_RecordType("<788,797,20>",(enablejit)); Inst11++; } } catch(e) {}
    var n = 1000000;
try { if (Inst12 <= 1000 && typeof (n) != "undefined") {_RecordType("<809,810,21>",(n)); Inst12++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (Date) != "undefined") {_RecordType("<842,846,22>",(Date)); Inst14++; } } catch(e) {}
    var start = new Date();
try { if (Inst13 <= 1000 && typeof (start) != "undefined") {_RecordType("<830,835,22>",(start)); Inst13++; } } catch(e) {}
    var i = 0;
try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<858,859,23>",(i)); Inst15++; } } catch(e) {}
    var j = 0;
try { if (Inst16 <= 1000 && typeof (j) != "undefined") {_RecordType("<873,874,24>",(j)); Inst16++; } } catch(e) {}
    var numprimes = 0;
try { if (Inst17 <= 1000 && typeof (numprimes) != "undefined") {_RecordType("<888,897,25>",(numprimes)); Inst17++; } } catch(e) {}
    var limit = 0;
try { if (Inst18 <= 1000 && typeof (limit) != "undefined") {_RecordType("<911,916,26>",(limit)); Inst18++; } } catch(e) {}
    numprimes = 1; // 2 is prime
try { if (Inst19 <= 1000 && typeof (numprimes) != "undefined") {_RecordType("<926,935,27>",(numprimes)); Inst19++; } } catch(e) {}

try { if (Inst21 <= 1000 && typeof (Math.floor) != "undefined") {_RecordType("<972,982,29>",(Math.floor)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Math) != "undefined") {_RecordType("<972,976,29>",(Math)); Inst22++; } } catch(e) {}
    var mceil = Math.floor;
try { if (Inst20 <= 1000 && typeof (mceil) != "undefined") {_RecordType("<964,969,29>",(mceil)); Inst20++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (Math.sqrt) != "undefined") {_RecordType("<1000,1009,30>",(Math.sqrt)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1000,1004,30>",(Math)); Inst25++; } } catch(e) {}
    var msqrt = Math.sqrt;
try { if (Inst23 <= 1000 && typeof (msqrt) != "undefined") {_RecordType("<992,997,30>",(msqrt)); Inst23++; } } catch(e) {}
    var isPrime = 1;
try { if (Inst26 <= 1000 && typeof (isPrime) != "undefined") {_RecordType("<1019,1026,31>",(isPrime)); Inst26++; } } catch(e) {}

    for (i = 3; i <= n; i += 2) {
try { if (Inst27 <= 1000 && typeof (i) != "undefined") {_RecordType("<1042,1043,33>",(i)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (i) != "undefined") {_RecordType("<1049,1050,33>",(i)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (n) != "undefined") {_RecordType("<1054,1055,33>",(n)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (i) != "undefined") {_RecordType("<1057,1058,33>",(i)); Inst30++; } } catch(e) {}
      isPrime = 1;
try { if (Inst31 <= 1000 && typeof (isPrime) != "undefined") {_RecordType("<1073,1080,34>",(isPrime)); Inst31++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (mceil) != "undefined") {_RecordType("<1100,1105,35>",(mceil)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (msqrt) != "undefined") {_RecordType("<1106,1111,35>",(msqrt)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (i) != "undefined") {_RecordType("<1112,1113,35>",(i)); Inst35++; } } catch(e) {}
      limit = mceil(msqrt(i) + 1) + 1;
try { if (Inst32 <= 1000 && typeof (limit) != "undefined") {_RecordType("<1092,1097,35>",(limit)); Inst32++; } } catch(e) {}

      for (j = 3; j < limit; j += 2) {
try { if (Inst36 <= 1000 && typeof (j) != "undefined") {_RecordType("<1137,1138,37>",(j)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (j) != "undefined") {_RecordType("<1144,1145,37>",(j)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (limit) != "undefined") {_RecordType("<1148,1153,37>",(limit)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (j) != "undefined") {_RecordType("<1155,1156,37>",(j)); Inst39++; } } catch(e) {}
try { if (Inst40 <= 1000 && typeof (i) != "undefined") {_RecordType("<1177,1178,38>",(i)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (j) != "undefined") {_RecordType("<1181,1182,38>",(j)); Inst41++; } } catch(e) {}
        if (i % j == 0) {
          isPrime = 0;
try { if (Inst42 <= 1000 && typeof (isPrime) != "undefined") {_RecordType("<1201,1208,39>",(isPrime)); Inst42++; } } catch(e) {}
          break;
        }
      }

try { if (Inst43 <= 1000 && typeof (isPrime) != "undefined") {_RecordType("<1260,1267,44>",(isPrime)); Inst43++; } } catch(e) {}
      if (isPrime) {
try { if (Inst44 <= 1000 && typeof (numprimes) != "undefined") {_RecordType("<1279,1288,45>",(numprimes)); Inst44++; } } catch(e) {}
        numprimes++;
      }
    }

try { if (Inst46 <= 1000 && typeof (Date) != "undefined") {_RecordType("<1325,1329,49>",(Date)); Inst46++; } } catch(e) {}
    var end = new Date();
try { if (Inst45 <= 1000 && typeof (end) != "undefined") {_RecordType("<1315,1318,49>",(end)); Inst45++; } } catch(e) {}
try { if (Inst48 <= 1000 && typeof (end) != "undefined") {_RecordType("<1353,1356,50>",(end)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (start) != "undefined") {_RecordType("<1359,1364,50>",(start)); Inst49++; } } catch(e) {}
    var timetaken = end - start;
try { if (Inst47 <= 1000 && typeof (timetaken) != "undefined") {_RecordType("<1341,1350,50>",(timetaken)); Inst47++; } } catch(e) {}
try { if (Inst51 <= 1000 && typeof (timetaken) != "undefined") {_RecordType("<1382,1391,51>",(timetaken)); Inst51++; } } catch(e) {}
    timetaken = timetaken / 1000;
try { if (Inst50 <= 1000 && typeof (timetaken) != "undefined") {_RecordType("<1370,1379,51>",(timetaken)); Inst50++; } } catch(e) {}

try { if (Inst52 <= 1000 && typeof (enablejit) != "undefined") {_RecordType("<1409,1418,53>",(enablejit)); Inst52++; } } catch(e) {}
    if (enablejit) {
try { if (Inst53 <= 1000 && typeof (print) != "undefined") {_RecordType("<1428,1433,54>",(print)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (enablejit) != "undefined") {_RecordType("<1435,1444,54>",(enablejit)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (n) != "undefined") {_RecordType("<1503,1504,54>",(n)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (numprimes) != "undefined") {_RecordType("<1516,1525,54>",(numprimes)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (timetaken) != "undefined") {_RecordType("<1546,1555,54>",(timetaken)); Inst57++; } } catch(e) {}
      print((enablejit ? '    JIT' : 'Non-JIT') + ": Number of primes up to: " + n + " is " + numprimes + ", counted in " + timetaken + " secs.");
    }

try { if (Inst58 <= 1000 && typeof (timetaken) != "undefined") {_RecordType("<1587,1596,57>",(timetaken)); Inst58++; } } catch(e) {}
    return timetaken;
  }

try { if (Inst60 <= 1000 && typeof (doTest) != "undefined") {_RecordType("<1622,1628,60>",(doTest)); Inst60++; } } catch(e) {}
  var timenonjit = doTest(false);
try { if (Inst59 <= 1000 && typeof (timenonjit) != "undefined") {_RecordType("<1609,1619,60>",(timenonjit)); Inst59++; } } catch(e) {}
try { if (Inst62 <= 1000 && typeof (doTest) != "undefined") {_RecordType("<1653,1659,61>",(doTest)); Inst62++; } } catch(e) {}
  var timejit = doTest(true);
try { if (Inst61 <= 1000 && typeof (timejit) != "undefined") {_RecordType("<1643,1650,61>",(timejit)); Inst61++; } } catch(e) {}
  expect = true;
try { if (Inst63 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1669,1675,62>",(expect)); Inst63++; } } catch(e) {}
try { if (Inst65 <= 1000 && typeof (timejit) != "undefined") {_RecordType("<1695,1702,63>",(timejit)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (timenonjit) != "undefined") {_RecordType("<1705,1715,63>",(timenonjit)); Inst66++; } } catch(e) {}
  actual = timejit < timenonjit;
try { if (Inst64 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1686,1692,63>",(actual)); Inst64++; } } catch(e) {}
try { if (Inst67 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1719,1732,64>",(reportCompare)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1733,1739,64>",(expect)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1741,1747,64>",(actual)); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (summary) != "undefined") {_RecordType("<1749,1756,64>",(summary)); Inst70++; } } catch(e) {}
  reportCompare(expect, actual, summary);
}

