var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// |reftest| skip -- bogus perf test (bug 540512)

/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
//-----------------------------------------------------------------------------
var BUGNUMBER = 451974;
try { if (Inst0 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<421,430,9>",(BUGNUMBER)); Inst0++; } } catch(e) {}
var summary = 'TM: loops with anon functions should not be slower with jit enabled';
try { if (Inst1 <= 1000 && typeof (summary) != "undefined") {_RecordType("<445,452,10>",(summary)); Inst1++; } } catch(e) {}
var actual = '';
try { if (Inst2 <= 1000 && typeof (actual) != "undefined") {_RecordType("<530,536,11>",(actual)); Inst2++; } } catch(e) {}
var expect = '';
try { if (Inst3 <= 1000 && typeof (expect) != "undefined") {_RecordType("<547,553,12>",(expect)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (printBugNumber) != "undefined") {_RecordType("<560,574,13>",(printBugNumber)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (BUGNUMBER) != "undefined") {_RecordType("<575,584,13>",(BUGNUMBER)); Inst5++; } } catch(e) {}
printBugNumber(BUGNUMBER);
try { if (Inst6 <= 1000 && typeof (printStatus) != "undefined") {_RecordType("<587,598,14>",(printStatus)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (summary) != "undefined") {_RecordType("<599,606,14>",(summary)); Inst7++; } } catch(e) {}
printStatus(summary);
var chars = '0123456789abcdef';
try { if (Inst8 <= 1000 && typeof (chars) != "undefined") {_RecordType("<613,618,15>",(chars)); Inst8++; } } catch(e) {}
var size = 10000;
try { if (Inst9 <= 1000 && typeof (size) != "undefined") {_RecordType("<645,649,16>",(size)); Inst9++; } } catch(e) {}
var mult = 1000;
try { if (Inst10 <= 1000 && typeof (mult) != "undefined") {_RecordType("<663,667,17>",(mult)); Inst10++; } } catch(e) {}
var densearray = [];
try { if (Inst11 <= 1000 && typeof (densearray) != "undefined") {_RecordType("<680,690,18>",(densearray)); Inst11++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (size) != "undefined") {_RecordType("<709,713,19>",(size)); Inst13++; } } catch(e) {}
var lsize = size;
try { if (Inst12 <= 1000 && typeof (lsize) != "undefined") {_RecordType("<701,706,19>",(lsize)); Inst12++; } } catch(e) {}

try { if (Inst14 <= 1000 && typeof (lsize) != "undefined") {_RecordType("<723,728,21>",(lsize)); Inst14++; } } catch(e) {}
while (lsize--) {
try { if (Inst15 <= 1000 && typeof (densearray.push) != "undefined") {_RecordType("<736,751,22>",(densearray.push)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (densearray) != "undefined") {_RecordType("<736,746,22>",(densearray)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (chars) != "undefined") {_RecordType("<752,757,22>",(chars)); Inst17++; } } catch(e) {}
  densearray.push(chars);
}

try { if (Inst18 <= 1000 && typeof (loop) != "undefined") {_RecordType("<772,776,25>",(loop)); Inst18++; } } catch(e) {}
function loop() {
try { if (Inst20 <= 1000 && typeof (Date) != "undefined") {_RecordType("<799,803,26>",(Date)); Inst20++; } } catch(e) {}
  var start = new Date();
try { if (Inst19 <= 1000 && typeof (start) != "undefined") {_RecordType("<787,792,26>",(start)); Inst19++; } } catch(e) {}

  for (var a = 0; a < mult; a++) {
try { if (Inst21 <= 1000 && typeof (a) != "undefined") {_RecordType("<819,820,28>",(a)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (a) != "undefined") {_RecordType("<826,827,28>",(a)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (mult) != "undefined") {_RecordType("<830,834,28>",(mult)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (a) != "undefined") {_RecordType("<836,837,28>",(a)); Inst24++; } } catch(e) {}
    var f = function (x) {
try { if (Inst26 <= 1000 && typeof (x) != "undefined") {_RecordType("<865,866,29>",(x)); Inst26++; } } catch(e) {}
      ;
    };
try { if (Inst25 <= 1000 && typeof (f) != "undefined") {_RecordType("<851,852,29>",(f)); Inst25++; } } catch(e) {}

    for (var i = 0, len = densearray.length; i < len; i++) {
try { if (Inst27 <= 1000 && typeof (i) != "undefined") {_RecordType("<899,900,33>",(i)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (len) != "undefined") {_RecordType("<906,909,33>",(len)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (densearray.length) != "undefined") {_RecordType("<912,929,33>",(densearray.length)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (densearray) != "undefined") {_RecordType("<912,922,33>",(densearray)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (i) != "undefined") {_RecordType("<931,932,33>",(i)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (len) != "undefined") {_RecordType("<935,938,33>",(len)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (i) != "undefined") {_RecordType("<940,941,33>",(i)); Inst33++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof (f) != "undefined") {_RecordType("<953,954,34>",(f)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (densearray[i]) != "undefined") {_RecordType("<955,968,34>",(densearray[i])); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (densearray) != "undefined") {_RecordType("<955,965,34>",(densearray)); Inst36++; } } catch(e) {}
      f(densearray[i]);
    }
  }

try { if (Inst38 <= 1000 && typeof (Date) != "undefined") {_RecordType("<999,1003,38>",(Date)); Inst38++; } } catch(e) {}
  var stop = new Date();
try { if (Inst37 <= 1000 && typeof (stop) != "undefined") {_RecordType("<988,992,38>",(stop)); Inst37++; } } catch(e) {}
try { if (Inst39 <= 1000 && typeof (stop) != "undefined") {_RecordType("<1016,1020,39>",(stop)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (start) != "undefined") {_RecordType("<1023,1028,39>",(start)); Inst40++; } } catch(e) {}
  return stop - start;
}

try { if (Inst42 <= 1000 && typeof (loop) != "undefined") {_RecordType("<1050,1054,42>",(loop)); Inst42++; } } catch(e) {}
var timenonjit = loop();
try { if (Inst41 <= 1000 && typeof (timenonjit) != "undefined") {_RecordType("<1037,1047,42>",(timenonjit)); Inst41++; } } catch(e) {}
try { if (Inst44 <= 1000 && typeof (loop) != "undefined") {_RecordType("<1072,1076,43>",(loop)); Inst44++; } } catch(e) {}
var timejit = loop();
try { if (Inst43 <= 1000 && typeof (timejit) != "undefined") {_RecordType("<1062,1069,43>",(timejit)); Inst43++; } } catch(e) {}
try { if (Inst45 <= 1000 && typeof (print) != "undefined") {_RecordType("<1080,1085,44>",(print)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (timenonjit) != "undefined") {_RecordType("<1106,1116,44>",(timenonjit)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (timejit) != "undefined") {_RecordType("<1132,1139,44>",(timejit)); Inst47++; } } catch(e) {}
print('time: nonjit = ' + timenonjit + ', jit = ' + timejit);
expect = true;
try { if (Inst48 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1142,1148,45>",(expect)); Inst48++; } } catch(e) {}
try { if (Inst50 <= 1000 && typeof (timejit) != "undefined") {_RecordType("<1166,1173,46>",(timejit)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (timenonjit) != "undefined") {_RecordType("<1176,1186,46>",(timenonjit)); Inst51++; } } catch(e) {}
actual = timejit < timenonjit / 2;
try { if (Inst49 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1157,1163,46>",(actual)); Inst49++; } } catch(e) {}
try { if (Inst52 <= 1000 && typeof (reportCompare) != "undefined") {_RecordType("<1192,1205,47>",(reportCompare)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (expect) != "undefined") {_RecordType("<1206,1212,47>",(expect)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1214,1220,47>",(actual)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (summary) != "undefined") {_RecordType("<1222,1229,47>",(summary)); Inst55++; } } catch(e) {}
reportCompare(expect, actual, summary);

