var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
Object.prototype.prototype = {};
try { if (Inst0 <= 1000 && typeof (Object.prototype.prototype) != "undefined") {_RecordType("<0,26,1>",(Object.prototype.prototype)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<0,16,1>",(Object.prototype)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Object) != "undefined") {_RecordType("<0,6,1>",(Object)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (Object.getPrototypeOf) != "undefined") {_RecordType("<33,54,2>",(Object.getPrototypeOf)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Object) != "undefined") {_RecordType("<33,39,2>",(Object)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof ([].concat) != "undefined") {_RecordType("<55,64,2>",([].concat)); Inst5++; } } catch(e) {}
Object.getPrototypeOf([].concat());
try { if (Inst6 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<69,84,3>",(Array.prototype)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Array) != "undefined") {_RecordType("<69,74,3>",(Array)); Inst7++; } } catch(e) {}
Array.prototype;
try { if (Inst8 <= 1000 && typeof (Object.getPrototypeOf) != "undefined") {_RecordType("<86,107,4>",(Object.getPrototypeOf)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Object) != "undefined") {_RecordType("<86,92,4>",(Object)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof ([].map) != "undefined") {_RecordType("<108,114,4>",([].map)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (x) != "undefined") {_RecordType("<115,116,4>",(x)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (x) != "undefined") {_RecordType("<120,121,4>",(x)); Inst12++; } } catch(e) {}
Object.getPrototypeOf([].map(x => x));
try { if (Inst13 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<125,140,5>",(Array.prototype)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Array) != "undefined") {_RecordType("<125,130,5>",(Array)); Inst14++; } } catch(e) {}
Array.prototype;
try { if (Inst15 <= 1000 && typeof (Object.getPrototypeOf) != "undefined") {_RecordType("<142,163,6>",(Object.getPrototypeOf)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Object) != "undefined") {_RecordType("<142,148,6>",(Object)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof ([].filter) != "undefined") {_RecordType("<164,173,6>",([].filter)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (x) != "undefined") {_RecordType("<174,175,6>",(x)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (x) != "undefined") {_RecordType("<179,180,6>",(x)); Inst19++; } } catch(e) {}
Object.getPrototypeOf([].filter(x => x));
try { if (Inst20 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<184,199,7>",(Array.prototype)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Array) != "undefined") {_RecordType("<184,189,7>",(Array)); Inst21++; } } catch(e) {}
Array.prototype;
try { if (Inst22 <= 1000 && typeof (Object.getPrototypeOf) != "undefined") {_RecordType("<201,222,8>",(Object.getPrototypeOf)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Object) != "undefined") {_RecordType("<201,207,8>",(Object)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof ([].slice) != "undefined") {_RecordType("<223,231,8>",([].slice)); Inst24++; } } catch(e) {}
Object.getPrototypeOf([].slice());
try { if (Inst25 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<236,251,9>",(Array.prototype)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Array) != "undefined") {_RecordType("<236,241,9>",(Array)); Inst26++; } } catch(e) {}
Array.prototype;
try { if (Inst27 <= 1000 && typeof (Object.getPrototypeOf) != "undefined") {_RecordType("<253,274,10>",(Object.getPrototypeOf)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (Object) != "undefined") {_RecordType("<253,259,10>",(Object)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof ([].splice) != "undefined") {_RecordType("<275,284,10>",([].splice)); Inst29++; } } catch(e) {}
Object.getPrototypeOf([].splice());
try { if (Inst30 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<289,304,11>",(Array.prototype)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (Array) != "undefined") {_RecordType("<289,294,11>",(Array)); Inst31++; } } catch(e) {}
Array.prototype;

