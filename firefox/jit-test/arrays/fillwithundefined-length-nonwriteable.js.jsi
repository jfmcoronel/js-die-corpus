var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
var called = false;
try { if (Inst0 <= 1000 && typeof (called) != "undefined") {_RecordType("<4,10,1>",(called)); Inst0++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<42,51,4>",(undefined)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (toString) != "undefined") {_RecordType("<57,65,5>",(toString)); Inst3++; } } catch(e) {}
var a = [,
/* hole */
undefined, {
  toString() {
try { if (Inst4 <= 1000 && typeof (called) != "undefined") {_RecordType("<79,85,6>",(called)); Inst4++; } } catch(e) {}
    if (!called) {
      called = true;
try { if (Inst5 <= 1000 && typeof (called) != "undefined") {_RecordType("<95,101,7>",(called)); Inst5++; } } catch(e) {}
      a.length = 3;
try { if (Inst6 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<116,124,8>",(a.length)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (a) != "undefined") {_RecordType("<116,117,8>",(a)); Inst7++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<136,157,9>",(Object.defineProperty)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Object) != "undefined") {_RecordType("<136,142,9>",(Object)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (a) != "undefined") {_RecordType("<158,159,9>",(a)); Inst10++; } } catch(e) {}
      Object.defineProperty(a, "length", {
        writable: false
      });
    }

    return 0;
  }

}, 0];
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<24,25,2>",(a)); Inst1++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (a.sort) != "undefined") {_RecordType("<240,246,18>",(a.sort)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (a) != "undefined") {_RecordType("<240,241,18>",(a)); Inst12++; } } catch(e) {}
a.sort();
try { if (Inst13 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<250,258,19>",(a.length)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (a) != "undefined") {_RecordType("<250,251,19>",(a)); Inst14++; } } catch(e) {}
a.length;
3;
try { if (Inst15 <= 1000 && typeof (a[1]) != "undefined") {_RecordType("<263,267,21>",(a[1])); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (a) != "undefined") {_RecordType("<263,264,21>",(a)); Inst16++; } } catch(e) {}
a[1];
0;
try { if (Inst17 <= 1000 && typeof (a[2]) != "undefined") {_RecordType("<272,276,23>",(a[2])); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (a) != "undefined") {_RecordType("<272,273,23>",(a)); Inst18++; } } catch(e) {}
a[2];
try { if (Inst19 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<278,287,24>",(undefined)); Inst19++; } } catch(e) {}
undefined;

