var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (f) != "undefined") {_RecordType("<9,10,1>",(f)); Inst0++; } } catch(e) {}
function f(arr) {
try { if (Inst1 <= 1000 && typeof (arr) != "undefined") {_RecordType("<11,14,1>",(arr)); Inst1++; } } catch(e) {}
}

var N = 100;
try { if (Inst2 <= 1000 && typeof (N) != "undefined") {_RecordType("<25,26,4>",(N)); Inst2++; } } catch(e) {}

try { if (Inst3 <= 1000 && typeof (test) != "undefined") {_RecordType("<44,48,6>",(test)); Inst3++; } } catch(e) {}
function test(out) {
try { if (Inst4 <= 1000 && typeof (out) != "undefined") {_RecordType("<49,52,6>",(out)); Inst4++; } } catch(e) {}
  // Create an array of arrays, to be iterated over for [].pop-calling.  We
  // can't just loop on pop on a single array with non-writable length because
  // pop throws when called on an array with non-writable length.
  var arrs = out.arrs = [];
try { if (Inst5 <= 1000 && typeof (arrs) != "undefined") {_RecordType("<283,287,10>",(arrs)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (out.arrs) != "undefined") {_RecordType("<290,298,10>",(out.arrs)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (out) != "undefined") {_RecordType("<290,293,10>",(out)); Inst7++; } } catch(e) {}

  for (var i = 0; i < N; i++) {
try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<317,318,12>",(i)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<324,325,12>",(i)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (N) != "undefined") {_RecordType("<328,329,12>",(N)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<331,332,12>",(i)); Inst11++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (arrs.push) != "undefined") {_RecordType("<342,351,13>",(arrs.push)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (arrs) != "undefined") {_RecordType("<342,346,13>",(arrs)); Inst13++; } } catch(e) {}
    arrs.push([0, 1, 2, 3]);
  } // Use a much-greater capacity than the eventual non-writable length.


  var a = [0, 1, 2, 3, 4, 5, 6, 7];
try { if (Inst14 <= 1000 && typeof (a) != "undefined") {_RecordType("<449,450,17>",(a)); Inst14++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<481,502,18>",(Object.defineProperty)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Object) != "undefined") {_RecordType("<481,487,18>",(Object)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (a) != "undefined") {_RecordType("<503,504,18>",(a)); Inst17++; } } catch(e) {}
  Object.defineProperty(a, "length", {
    writable: false,
    value: 4
  });
try { if (Inst18 <= 1000 && typeof (arrs.push) != "undefined") {_RecordType("<560,569,22>",(arrs.push)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (arrs) != "undefined") {_RecordType("<560,564,22>",(arrs)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (a) != "undefined") {_RecordType("<570,571,22>",(a)); Inst20++; } } catch(e) {}
  arrs.push(a);

  for (var i = 0, sz = arrs.length; i < sz; i++) {
try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<586,587,24>",(i)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (sz) != "undefined") {_RecordType("<593,595,24>",(sz)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (arrs.length) != "undefined") {_RecordType("<598,609,24>",(arrs.length)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (arrs) != "undefined") {_RecordType("<598,602,24>",(arrs)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<611,612,24>",(i)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (sz) != "undefined") {_RecordType("<615,617,24>",(sz)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (i) != "undefined") {_RecordType("<619,620,24>",(i)); Inst27++; } } catch(e) {}
try { if (Inst28 <= 1000 && typeof (f) != "undefined") {_RecordType("<630,631,25>",(f)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (arrs[i]) != "undefined") {_RecordType("<632,639,25>",(arrs[i])); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (arrs) != "undefined") {_RecordType("<632,636,25>",(arrs)); Inst30++; } } catch(e) {}
    f(arrs[i]);
  }
}

var obj = {};
try { if (Inst31 <= 1000 && typeof (obj) != "undefined") {_RecordType("<653,656,29>",(obj)); Inst31++; } } catch(e) {}

(function () {
try { if (Inst32 <= 1000 && typeof (test) != "undefined") {_RecordType("<681,685,32>",(test)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (obj) != "undefined") {_RecordType("<686,689,32>",(obj)); Inst33++; } } catch(e) {}
  test(obj);
})();

try { if (Inst34 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<699,708,35>",(TypeError)); Inst34++; } } catch(e) {}
TypeError;
try { if (Inst36 <= 1000 && typeof (obj.arrs) != "undefined") {_RecordType("<721,729,36>",(obj.arrs)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (obj) != "undefined") {_RecordType("<721,724,36>",(obj)); Inst37++; } } catch(e) {}
var arrs = obj.arrs;
try { if (Inst35 <= 1000 && typeof (arrs) != "undefined") {_RecordType("<714,718,36>",(arrs)); Inst35++; } } catch(e) {}
try { if (Inst38 <= 1000 && typeof (arrs.length) != "undefined") {_RecordType("<731,742,37>",(arrs.length)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (arrs) != "undefined") {_RecordType("<731,735,37>",(arrs)); Inst39++; } } catch(e) {}
arrs.length;
try { if (Inst40 <= 1000 && typeof (N) != "undefined") {_RecordType("<744,745,38>",(N)); Inst40++; } } catch(e) {}
N + 1;

for (var i = 0; i < N; i++) {
try { if (Inst41 <= 1000 && typeof (i) != "undefined") {_RecordType("<761,762,40>",(i)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (i) != "undefined") {_RecordType("<768,769,40>",(i)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (N) != "undefined") {_RecordType("<772,773,40>",(N)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (i) != "undefined") {_RecordType("<775,776,40>",(i)); Inst44++; } } catch(e) {}
try { if (Inst45 <= 1000 && typeof (arrs[i].length) != "undefined") {_RecordType("<784,798,41>",(arrs[i].length)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (arrs[i]) != "undefined") {_RecordType("<784,791,41>",(arrs[i])); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (arrs) != "undefined") {_RecordType("<784,788,41>",(arrs)); Inst47++; } } catch(e) {}
  arrs[i].length;
  3;
try { if (Inst48 <= 1000 && typeof (i) != "undefined") {_RecordType("<839,840,43>",(i)); Inst48++; } } catch(e) {}
  "unexpected length for arrs[" + i + "]";
try { if (Inst49 <= 1000 && typeof (arrs[i][0]) != "undefined") {_RecordType("<850,860,44>",(arrs[i][0])); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (arrs[i]) != "undefined") {_RecordType("<850,857,44>",(arrs[i])); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (arrs) != "undefined") {_RecordType("<850,854,44>",(arrs)); Inst51++; } } catch(e) {}
  arrs[i][0];
  0;
try { if (Inst52 <= 1000 && typeof (i) != "undefined") {_RecordType("<895,896,46>",(i)); Inst52++; } } catch(e) {}
  "bad element for arrs[" + i + "][0]";
try { if (Inst53 <= 1000 && typeof (arrs[i][1]) != "undefined") {_RecordType("<909,919,47>",(arrs[i][1])); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (arrs[i]) != "undefined") {_RecordType("<909,916,47>",(arrs[i])); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (arrs) != "undefined") {_RecordType("<909,913,47>",(arrs)); Inst55++; } } catch(e) {}
  arrs[i][1];
  1;
try { if (Inst56 <= 1000 && typeof (i) != "undefined") {_RecordType("<954,955,49>",(i)); Inst56++; } } catch(e) {}
  "bad element for arrs[" + i + "][1]";
try { if (Inst57 <= 1000 && typeof (arrs[i][2]) != "undefined") {_RecordType("<968,978,50>",(arrs[i][2])); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (arrs[i]) != "undefined") {_RecordType("<968,975,50>",(arrs[i])); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (arrs) != "undefined") {_RecordType("<968,972,50>",(arrs)); Inst59++; } } catch(e) {}
  arrs[i][2];
  2;
try { if (Inst60 <= 1000 && typeof (i) != "undefined") {_RecordType("<1013,1014,52>",(i)); Inst60++; } } catch(e) {}
  "bad element for arrs[" + i + "][2]";
try { if (Inst61 <= 1000 && typeof (arrs[i]) != "undefined") {_RecordType("<1032,1039,53>",(arrs[i])); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (arrs) != "undefined") {_RecordType("<1032,1036,53>",(arrs)); Inst62++; } } catch(e) {}
  3 in arrs[i];
  false;
  "shouldn't be a third element";
try { if (Inst63 <= 1000 && typeof (arrs[i][3]) != "undefined") {_RecordType("<1086,1096,56>",(arrs[i][3])); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (arrs[i]) != "undefined") {_RecordType("<1086,1093,56>",(arrs[i])); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (arrs) != "undefined") {_RecordType("<1086,1090,56>",(arrs)); Inst65++; } } catch(e) {}
  arrs[i][3];
try { if (Inst66 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<1100,1109,57>",(undefined)); Inst66++; } } catch(e) {}
  undefined;
}

try { if (Inst68 <= 1000 && typeof (arrs[N]) != "undefined") {_RecordType("<1122,1129,60>",(arrs[N])); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (arrs) != "undefined") {_RecordType("<1122,1126,60>",(arrs)); Inst69++; } } catch(e) {}
var a = arrs[N];
try { if (Inst67 <= 1000 && typeof (a) != "undefined") {_RecordType("<1118,1119,60>",(a)); Inst67++; } } catch(e) {}
try { if (Inst70 <= 1000 && typeof (a.hasOwnProperty) != "undefined") {_RecordType("<1131,1147,61>",(a.hasOwnProperty)); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (a) != "undefined") {_RecordType("<1131,1132,61>",(a)); Inst71++; } } catch(e) {}
a.hasOwnProperty(3);
false;
"should have been deleted before throw";
try { if (Inst72 <= 1000 && typeof (a[3]) != "undefined") {_RecordType("<1200,1204,64>",(a[3])); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (a) != "undefined") {_RecordType("<1200,1201,64>",(a)); Inst73++; } } catch(e) {}
a[3];
try { if (Inst74 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<1206,1215,65>",(undefined)); Inst74++; } } catch(e) {}
undefined;
try { if (Inst75 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<1217,1225,66>",(a.length)); Inst75++; } } catch(e) {}try { if (Inst76 <= 1000 && typeof (a) != "undefined") {_RecordType("<1217,1218,66>",(a)); Inst76++; } } catch(e) {}
a.length;
4;
"length shouldn't have been changed";

