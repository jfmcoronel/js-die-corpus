var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (f) != "undefined") {_RecordType("<9,10,1>",(f)); Inst0++; } } catch(e) {}
function f(arr, v) {
try { if (Inst1 <= 1000 && typeof (arr) != "undefined") {_RecordType("<11,14,1>",(arr)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (v) != "undefined") {_RecordType("<16,17,1>",(v)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (arr.push) != "undefined") {_RecordType("<23,31,2>",(arr.push)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (arr) != "undefined") {_RecordType("<23,26,2>",(arr)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (v) != "undefined") {_RecordType("<32,33,2>",(v)); Inst5++; } } catch(e) {}
  arr.push(v);
}

try { if (Inst6 <= 1000 && typeof (basic) != "undefined") {_RecordType("<48,53,5>",(basic)); Inst6++; } } catch(e) {}
function basic(out) {
try { if (Inst7 <= 1000 && typeof (out) != "undefined") {_RecordType("<54,57,5>",(out)); Inst7++; } } catch(e) {}
  // Use a much-greater capacity than the eventual non-writable length.
  var a = out.a = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];
try { if (Inst8 <= 1000 && typeof (a) != "undefined") {_RecordType("<139,140,7>",(a)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (out.a) != "undefined") {_RecordType("<143,148,7>",(out.a)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (out) != "undefined") {_RecordType("<143,146,7>",(out)); Inst10++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<209,230,8>",(Object.defineProperty)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Object) != "undefined") {_RecordType("<209,215,8>",(Object)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (a) != "undefined") {_RecordType("<231,232,8>",(a)); Inst13++; } } catch(e) {}
  Object.defineProperty(a, "length", {
    writable: false,
    value: 6
  });
try { if (Inst14 <= 1000 && typeof (f) != "undefined") {_RecordType("<288,289,12>",(f)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (a) != "undefined") {_RecordType("<290,291,12>",(a)); Inst15++; } } catch(e) {}
  f(a, 99);
}

var obj = {};
try { if (Inst16 <= 1000 && typeof (obj) != "undefined") {_RecordType("<305,308,15>",(obj)); Inst16++; } } catch(e) {}
var a;
try { if (Inst17 <= 1000 && typeof (a) != "undefined") {_RecordType("<319,320,16>",(a)); Inst17++; } } catch(e) {}

try { if (Inst21 <= 1000 && typeof (e) != "undefined") {_RecordType("<388,389,21>",(e)); Inst21++; } } catch(e) {}
try {
try { if (Inst18 <= 1000 && typeof (basic) != "undefined") {_RecordType("<331,336,19>",(basic)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (obj) != "undefined") {_RecordType("<337,340,19>",(obj)); Inst19++; } } catch(e) {}
  basic(obj);
try { if (Inst20 <= 1000 && typeof (Error) != "undefined") {_RecordType("<355,360,20>",(Error)); Inst20++; } } catch(e) {}
  throw new Error("didn't throw!");
} catch (e) {
try { if (Inst22 <= 1000 && typeof (e) != "undefined") {_RecordType("<395,396,22>",(e)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<408,417,22>",(TypeError)); Inst23++; } } catch(e) {}
  e instanceof TypeError;
  true;
try { if (Inst24 <= 1000 && typeof (e) != "undefined") {_RecordType("<458,459,24>",(e)); Inst24++; } } catch(e) {}
  "expected TypeError, got " + e;
try { if (Inst26 <= 1000 && typeof (obj.a) != "undefined") {_RecordType("<467,472,25>",(obj.a)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (obj) != "undefined") {_RecordType("<467,470,25>",(obj)); Inst27++; } } catch(e) {}
  a = obj.a;
try { if (Inst25 <= 1000 && typeof (a) != "undefined") {_RecordType("<463,464,25>",(a)); Inst25++; } } catch(e) {}
try { if (Inst28 <= 1000 && typeof (a.hasOwnProperty) != "undefined") {_RecordType("<476,492,26>",(a.hasOwnProperty)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (a) != "undefined") {_RecordType("<476,477,26>",(a)); Inst29++; } } catch(e) {}
  a.hasOwnProperty(6);
  false;
try { if (Inst30 <= 1000 && typeof (a[6]) != "undefined") {_RecordType("<508,512,28>",(a[6])); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (a) != "undefined") {_RecordType("<508,509,28>",(a)); Inst31++; } } catch(e) {}
  a[6];
try { if (Inst32 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<516,525,29>",(undefined)); Inst32++; } } catch(e) {}
  undefined;
try { if (Inst33 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<529,537,30>",(a.length)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (a) != "undefined") {_RecordType("<529,530,30>",(a)); Inst34++; } } catch(e) {}
  a.length;
  6;
}

