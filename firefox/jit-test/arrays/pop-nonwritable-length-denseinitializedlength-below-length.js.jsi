var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (f) != "undefined") {_RecordType("<9,10,1>",(f)); Inst0++; } } catch(e) {}
function f(arr) {
try { if (Inst1 <= 1000 && typeof (arr) != "undefined") {_RecordType("<11,14,1>",(arr)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<20,29,2>",(undefined)); Inst2++; } } catch(e) {}
  undefined;
}

var N = 100;
try { if (Inst3 <= 1000 && typeof (N) != "undefined") {_RecordType("<38,39,5>",(N)); Inst3++; } } catch(e) {}

try { if (Inst4 <= 1000 && typeof (basic) != "undefined") {_RecordType("<57,62,7>",(basic)); Inst4++; } } catch(e) {}
function basic(out) {
try { if (Inst5 <= 1000 && typeof (out) != "undefined") {_RecordType("<63,66,7>",(out)); Inst5++; } } catch(e) {}
  // Create an array of arrays, to be iterated over for [].pop-calling.  We
  // can't just loop on pop on a single array with non-writable length because
  // pop throws when called on an array with non-writable length.
  var arrs = out.arrs = [];
try { if (Inst6 <= 1000 && typeof (arrs) != "undefined") {_RecordType("<297,301,11>",(arrs)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (out.arrs) != "undefined") {_RecordType("<304,312,11>",(out.arrs)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (out) != "undefined") {_RecordType("<304,307,11>",(out)); Inst8++; } } catch(e) {}

  for (var i = 0; i < N; i++) {
try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<331,332,13>",(i)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<338,339,13>",(i)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (N) != "undefined") {_RecordType("<342,343,13>",(N)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<345,346,13>",(i)); Inst12++; } } catch(e) {}
    var arr = [0, 1, 2, 3, 4];
try { if (Inst13 <= 1000 && typeof (arr) != "undefined") {_RecordType("<360,363,14>",(arr)); Inst13++; } } catch(e) {}
    arr.length = 6;
try { if (Inst14 <= 1000 && typeof (arr.length) != "undefined") {_RecordType("<387,397,15>",(arr.length)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (arr) != "undefined") {_RecordType("<387,390,15>",(arr)); Inst15++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (arrs.push) != "undefined") {_RecordType("<407,416,16>",(arrs.push)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (arrs) != "undefined") {_RecordType("<407,411,16>",(arrs)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (arr) != "undefined") {_RecordType("<417,420,16>",(arr)); Inst18++; } } catch(e) {}
    arrs.push(arr);
  }

  var a = [0, 1, 2, 3, 4];
try { if (Inst19 <= 1000 && typeof (a) != "undefined") {_RecordType("<434,435,19>",(a)); Inst19++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<457,478,20>",(Object.defineProperty)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Object) != "undefined") {_RecordType("<457,463,20>",(Object)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (a) != "undefined") {_RecordType("<479,480,20>",(a)); Inst22++; } } catch(e) {}
  Object.defineProperty(a, "length", {
    writable: false,
    value: 6
  });
try { if (Inst23 <= 1000 && typeof (arrs.push) != "undefined") {_RecordType("<536,545,24>",(arrs.push)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (arrs) != "undefined") {_RecordType("<536,540,24>",(arrs)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (a) != "undefined") {_RecordType("<546,547,24>",(a)); Inst25++; } } catch(e) {}
  arrs.push(a);

  for (var i = 0, sz = arrs.length; i < sz; i++) {
try { if (Inst26 <= 1000 && typeof (i) != "undefined") {_RecordType("<562,563,26>",(i)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (sz) != "undefined") {_RecordType("<569,571,26>",(sz)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (arrs.length) != "undefined") {_RecordType("<574,585,26>",(arrs.length)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (arrs) != "undefined") {_RecordType("<574,578,26>",(arrs)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (i) != "undefined") {_RecordType("<587,588,26>",(i)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (sz) != "undefined") {_RecordType("<591,593,26>",(sz)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (i) != "undefined") {_RecordType("<595,596,26>",(i)); Inst32++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (f) != "undefined") {_RecordType("<606,607,27>",(f)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (arrs[i]) != "undefined") {_RecordType("<608,615,27>",(arrs[i])); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (arrs) != "undefined") {_RecordType("<608,612,27>",(arrs)); Inst35++; } } catch(e) {}
    f(arrs[i]);
  }
}

var obj = {};
try { if (Inst36 <= 1000 && typeof (obj) != "undefined") {_RecordType("<629,632,31>",(obj)); Inst36++; } } catch(e) {}
var arrs, a;
try { if (Inst37 <= 1000 && typeof (arrs) != "undefined") {_RecordType("<643,647,32>",(arrs)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (a) != "undefined") {_RecordType("<649,650,32>",(a)); Inst38++; } } catch(e) {}

(function () {
try { if (Inst39 <= 1000 && typeof (basic) != "undefined") {_RecordType("<670,675,35>",(basic)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (obj) != "undefined") {_RecordType("<676,679,35>",(obj)); Inst40++; } } catch(e) {}
  basic(obj);
})();

try { if (Inst41 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<689,698,38>",(TypeError)); Inst41++; } } catch(e) {}
TypeError;
try { if (Inst43 <= 1000 && typeof (obj.arrs) != "undefined") {_RecordType("<711,719,39>",(obj.arrs)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (obj) != "undefined") {_RecordType("<711,714,39>",(obj)); Inst44++; } } catch(e) {}
var arrs = obj.arrs;
try { if (Inst42 <= 1000 && typeof (arrs) != "undefined") {_RecordType("<704,708,39>",(arrs)); Inst42++; } } catch(e) {}
try { if (Inst45 <= 1000 && typeof (arrs.length) != "undefined") {_RecordType("<721,732,40>",(arrs.length)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (arrs) != "undefined") {_RecordType("<721,725,40>",(arrs)); Inst46++; } } catch(e) {}
arrs.length;
try { if (Inst47 <= 1000 && typeof (N) != "undefined") {_RecordType("<734,735,41>",(N)); Inst47++; } } catch(e) {}
N + 1;

for (var i = 0; i < N; i++) {
try { if (Inst48 <= 1000 && typeof (i) != "undefined") {_RecordType("<751,752,43>",(i)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (i) != "undefined") {_RecordType("<758,759,43>",(i)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (N) != "undefined") {_RecordType("<762,763,43>",(N)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (i) != "undefined") {_RecordType("<765,766,43>",(i)); Inst51++; } } catch(e) {}
try { if (Inst52 <= 1000 && typeof (arrs[i].length) != "undefined") {_RecordType("<774,788,44>",(arrs[i].length)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (arrs[i]) != "undefined") {_RecordType("<774,781,44>",(arrs[i])); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (arrs) != "undefined") {_RecordType("<774,778,44>",(arrs)); Inst54++; } } catch(e) {}
  arrs[i].length;
  5;
try { if (Inst55 <= 1000 && typeof (i) != "undefined") {_RecordType("<829,830,46>",(i)); Inst55++; } } catch(e) {}
  "unexpected length for arrs[" + i + "]";
try { if (Inst56 <= 1000 && typeof (arrs[i].hasOwnProperty) != "undefined") {_RecordType("<840,862,47>",(arrs[i].hasOwnProperty)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (arrs[i]) != "undefined") {_RecordType("<840,847,47>",(arrs[i])); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (arrs) != "undefined") {_RecordType("<840,844,47>",(arrs)); Inst58++; } } catch(e) {}
  arrs[i].hasOwnProperty(5);
  false;
try { if (Inst59 <= 1000 && typeof (i) != "undefined") {_RecordType("<912,913,49>",(i)); Inst59++; } } catch(e) {}
  "element not deleted for arrs[" + i + "]";
}

try { if (Inst61 <= 1000 && typeof (arrs[N]) != "undefined") {_RecordType("<932,939,52>",(arrs[N])); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (arrs) != "undefined") {_RecordType("<932,936,52>",(arrs)); Inst62++; } } catch(e) {}
var a = arrs[N];
try { if (Inst60 <= 1000 && typeof (a) != "undefined") {_RecordType("<928,929,52>",(a)); Inst60++; } } catch(e) {}
try { if (Inst63 <= 1000 && typeof (a.hasOwnProperty) != "undefined") {_RecordType("<941,957,53>",(a.hasOwnProperty)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (a) != "undefined") {_RecordType("<941,942,53>",(a)); Inst64++; } } catch(e) {}
a.hasOwnProperty(5);
false;
try { if (Inst65 <= 1000 && typeof (a[5]) != "undefined") {_RecordType("<969,973,55>",(a[5])); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (a) != "undefined") {_RecordType("<969,970,55>",(a)); Inst66++; } } catch(e) {}
a[5];
try { if (Inst67 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<975,984,56>",(undefined)); Inst67++; } } catch(e) {}
undefined;
try { if (Inst68 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<986,994,57>",(a.length)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (a) != "undefined") {_RecordType("<986,987,57>",(a)); Inst69++; } } catch(e) {}
a.length;
6;

