var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (f) != "undefined") {_RecordType("<9,10,1>",(f)); Inst0++; } } catch(e) {}
function f(arr) {
try { if (Inst1 <= 1000 && typeof (arr) != "undefined") {_RecordType("<11,14,1>",(arr)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (arr.pop) != "undefined") {_RecordType("<20,27,2>",(arr.pop)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (arr) != "undefined") {_RecordType("<20,23,2>",(arr)); Inst3++; } } catch(e) {}
  arr.pop();
}

var N = 100;
try { if (Inst4 <= 1000 && typeof (N) != "undefined") {_RecordType("<38,39,5>",(N)); Inst4++; } } catch(e) {}

try { if (Inst5 <= 1000 && typeof (test) != "undefined") {_RecordType("<57,61,7>",(test)); Inst5++; } } catch(e) {}
function test() {
  // Create an array of arrays, to be iterated over for [].pop-calling.  We
  // can't just loop on pop on a single array with non-writable length because
  // pop throws when called on an array with non-writable length.
  var arrs = [];
try { if (Inst6 <= 1000 && typeof (arrs) != "undefined") {_RecordType("<293,297,11>",(arrs)); Inst6++; } } catch(e) {}

  for (var i = 0; i < N; i++) {
try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<316,317,13>",(i)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<323,324,13>",(i)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (N) != "undefined") {_RecordType("<327,328,13>",(N)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<330,331,13>",(i)); Inst10++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (arrs.push) != "undefined") {_RecordType("<341,350,14>",(arrs.push)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (arrs) != "undefined") {_RecordType("<341,345,14>",(arrs)); Inst12++; } } catch(e) {}
    arrs.push([0, 1, 2, 3]);
  } // Test Ion-pop where dense initialized length < length.


  var a = [0, 1, 2];
try { if (Inst13 <= 1000 && typeof (a) != "undefined") {_RecordType("<435,436,18>",(a)); Inst13++; } } catch(e) {}
  a.length = 4;
try { if (Inst14 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<452,460,19>",(a.length)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (a) != "undefined") {_RecordType("<452,453,19>",(a)); Inst15++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (arrs.push) != "undefined") {_RecordType("<468,477,20>",(arrs.push)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (arrs) != "undefined") {_RecordType("<468,472,20>",(arrs)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (a) != "undefined") {_RecordType("<478,479,20>",(a)); Inst18++; } } catch(e) {}
  arrs.push(a);

  for (var i = 0, sz = arrs.length; i < sz; i++) {
try { if (Inst19 <= 1000 && typeof (i) != "undefined") {_RecordType("<494,495,22>",(i)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (sz) != "undefined") {_RecordType("<501,503,22>",(sz)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (arrs.length) != "undefined") {_RecordType("<506,517,22>",(arrs.length)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (arrs) != "undefined") {_RecordType("<506,510,22>",(arrs)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<519,520,22>",(i)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (sz) != "undefined") {_RecordType("<523,525,22>",(sz)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<527,528,22>",(i)); Inst25++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (f) != "undefined") {_RecordType("<538,539,23>",(f)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (arrs[i]) != "undefined") {_RecordType("<540,547,23>",(arrs[i])); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (arrs) != "undefined") {_RecordType("<540,544,23>",(arrs)); Inst28++; } } catch(e) {}
    f(arrs[i]);
  }

try { if (Inst29 <= 1000 && typeof (arrs) != "undefined") {_RecordType("<564,568,26>",(arrs)); Inst29++; } } catch(e) {}
  return arrs;
}

try { if (Inst31 <= 1000 && typeof (test) != "undefined") {_RecordType("<584,588,29>",(test)); Inst31++; } } catch(e) {}
var arrs = test();
try { if (Inst30 <= 1000 && typeof (arrs) != "undefined") {_RecordType("<577,581,29>",(arrs)); Inst30++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (arrs.length) != "undefined") {_RecordType("<592,603,30>",(arrs.length)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (arrs) != "undefined") {_RecordType("<592,596,30>",(arrs)); Inst33++; } } catch(e) {}
arrs.length;
try { if (Inst34 <= 1000 && typeof (N) != "undefined") {_RecordType("<605,606,31>",(N)); Inst34++; } } catch(e) {}
N + 1;

for (var i = 0; i < N; i++) {
try { if (Inst35 <= 1000 && typeof (i) != "undefined") {_RecordType("<622,623,33>",(i)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (i) != "undefined") {_RecordType("<629,630,33>",(i)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (N) != "undefined") {_RecordType("<633,634,33>",(N)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (i) != "undefined") {_RecordType("<636,637,33>",(i)); Inst38++; } } catch(e) {}
try { if (Inst39 <= 1000 && typeof (arrs[i].length) != "undefined") {_RecordType("<645,659,34>",(arrs[i].length)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (arrs[i]) != "undefined") {_RecordType("<645,652,34>",(arrs[i])); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (arrs) != "undefined") {_RecordType("<645,649,34>",(arrs)); Inst41++; } } catch(e) {}
  arrs[i].length;
  3;
try { if (Inst42 <= 1000 && typeof (i) != "undefined") {_RecordType("<700,701,36>",(i)); Inst42++; } } catch(e) {}
  "unexpected length for arrs[" + i + "]";
try { if (Inst43 <= 1000 && typeof (arrs[i][0]) != "undefined") {_RecordType("<711,721,37>",(arrs[i][0])); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (arrs[i]) != "undefined") {_RecordType("<711,718,37>",(arrs[i])); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (arrs) != "undefined") {_RecordType("<711,715,37>",(arrs)); Inst45++; } } catch(e) {}
  arrs[i][0];
  0;
try { if (Inst46 <= 1000 && typeof (i) != "undefined") {_RecordType("<756,757,39>",(i)); Inst46++; } } catch(e) {}
  "bad element for arrs[" + i + "][0]";
try { if (Inst47 <= 1000 && typeof (arrs[i][1]) != "undefined") {_RecordType("<770,780,40>",(arrs[i][1])); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (arrs[i]) != "undefined") {_RecordType("<770,777,40>",(arrs[i])); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (arrs) != "undefined") {_RecordType("<770,774,40>",(arrs)); Inst49++; } } catch(e) {}
  arrs[i][1];
  1;
try { if (Inst50 <= 1000 && typeof (i) != "undefined") {_RecordType("<815,816,42>",(i)); Inst50++; } } catch(e) {}
  "bad element for arrs[" + i + "][1]";
try { if (Inst51 <= 1000 && typeof (arrs[i][2]) != "undefined") {_RecordType("<829,839,43>",(arrs[i][2])); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (arrs[i]) != "undefined") {_RecordType("<829,836,43>",(arrs[i])); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (arrs) != "undefined") {_RecordType("<829,833,43>",(arrs)); Inst53++; } } catch(e) {}
  arrs[i][2];
  2;
try { if (Inst54 <= 1000 && typeof (i) != "undefined") {_RecordType("<874,875,45>",(i)); Inst54++; } } catch(e) {}
  "bad element for arrs[" + i + "][2]";
try { if (Inst55 <= 1000 && typeof (arrs[i]) != "undefined") {_RecordType("<893,900,46>",(arrs[i])); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (arrs) != "undefined") {_RecordType("<893,897,46>",(arrs)); Inst56++; } } catch(e) {}
  3 in arrs[i];
  false;
  "shouldn't be a third element";
try { if (Inst57 <= 1000 && typeof (arrs[i][3]) != "undefined") {_RecordType("<947,957,49>",(arrs[i][3])); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (arrs[i]) != "undefined") {_RecordType("<947,954,49>",(arrs[i])); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (arrs) != "undefined") {_RecordType("<947,951,49>",(arrs)); Inst59++; } } catch(e) {}
  arrs[i][3];
try { if (Inst60 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<961,970,50>",(undefined)); Inst60++; } } catch(e) {}
  undefined;
}

try { if (Inst62 <= 1000 && typeof (arrs[N]) != "undefined") {_RecordType("<983,990,53>",(arrs[N])); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (arrs) != "undefined") {_RecordType("<983,987,53>",(arrs)); Inst63++; } } catch(e) {}
var a = arrs[N];
try { if (Inst61 <= 1000 && typeof (a) != "undefined") {_RecordType("<979,980,53>",(a)); Inst61++; } } catch(e) {}
try { if (Inst64 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<992,1000,54>",(a.length)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (a) != "undefined") {_RecordType("<992,993,54>",(a)); Inst65++; } } catch(e) {}
a.length;
3;
try { if (Inst66 <= 1000 && typeof (i) != "undefined") {_RecordType("<1037,1038,56>",(i)); Inst66++; } } catch(e) {}
"unexpected length for arrs[" + i + "]";
try { if (Inst67 <= 1000 && typeof (a[0]) != "undefined") {_RecordType("<1046,1050,57>",(a[0])); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (a) != "undefined") {_RecordType("<1046,1047,57>",(a)); Inst68++; } } catch(e) {}
a[0];
0;
try { if (Inst69 <= 1000 && typeof (i) != "undefined") {_RecordType("<1081,1082,59>",(i)); Inst69++; } } catch(e) {}
"bad element for arrs[" + i + "][0]";
try { if (Inst70 <= 1000 && typeof (a[1]) != "undefined") {_RecordType("<1093,1097,60>",(a[1])); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (a) != "undefined") {_RecordType("<1093,1094,60>",(a)); Inst71++; } } catch(e) {}
a[1];
1;
try { if (Inst72 <= 1000 && typeof (i) != "undefined") {_RecordType("<1128,1129,62>",(i)); Inst72++; } } catch(e) {}
"bad element for arrs[" + i + "][1]";
try { if (Inst73 <= 1000 && typeof (a[2]) != "undefined") {_RecordType("<1140,1144,63>",(a[2])); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (a) != "undefined") {_RecordType("<1140,1141,63>",(a)); Inst74++; } } catch(e) {}
a[2];
2;
try { if (Inst75 <= 1000 && typeof (i) != "undefined") {_RecordType("<1175,1176,65>",(i)); Inst75++; } } catch(e) {}
"bad element for arrs[" + i + "][2]";
try { if (Inst76 <= 1000 && typeof (a) != "undefined") {_RecordType("<1192,1193,66>",(a)); Inst76++; } } catch(e) {}
3 in a;
false;
"shouldn't be a third element";
try { if (Inst77 <= 1000 && typeof (a[3]) != "undefined") {_RecordType("<1234,1238,69>",(a[3])); Inst77++; } } catch(e) {}try { if (Inst78 <= 1000 && typeof (a) != "undefined") {_RecordType("<1234,1235,69>",(a)); Inst78++; } } catch(e) {}
a[3];
try { if (Inst79 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<1240,1249,70>",(undefined)); Inst79++; } } catch(e) {}
undefined;

