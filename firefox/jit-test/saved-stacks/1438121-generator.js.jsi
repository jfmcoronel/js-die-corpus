var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
var Inst102 = 0;
var Inst103 = 0;
var Inst104 = 0;
var Inst105 = 0;
var Inst106 = 0;
var Inst107 = 0;
var Inst108 = 0;
var Inst109 = 0;
var Inst110 = 0;
var Inst111 = 0;
var Inst112 = 0;
var Inst113 = 0;
var Inst114 = 0;
var Inst115 = 0;
var Inst116 = 0;
var Inst117 = 0;
var Inst118 = 0;
var Inst119 = 0;
var Inst120 = 0;
var Inst121 = 0;
var Inst122 = 0;
var Inst123 = 0;
var Inst124 = 0;
var Inst125 = 0;
var Inst126 = 0;
var Inst127 = 0;
var Inst128 = 0;
var Inst129 = 0;
var Inst130 = 0;
var Inst131 = 0;
var Inst132 = 0;
var Inst133 = 0;
var Inst134 = 0;
var Inst135 = 0;
var Inst136 = 0;
var Inst137 = 0;
var Inst138 = 0;
var Inst139 = 0;
var Inst140 = 0;
var Inst141 = 0;
var Inst142 = 0;
var Inst143 = 0;
var Inst144 = 0;
var Inst145 = 0;
var Inst146 = 0;
var Inst147 = 0;
var Inst148 = 0;
var Inst149 = 0;
var Inst150 = 0;
var Inst151 = 0;
var Inst152 = 0;
var Inst153 = 0;
var Inst154 = 0;
var Inst155 = 0;
var Inst156 = 0;
var Inst157 = 0;
var Inst158 = 0;
var Inst159 = 0;
var Inst160 = 0;
var Inst161 = 0;
var Inst162 = 0;
var Inst163 = 0;
var Inst164 = 0;
var Inst165 = 0;
var Inst166 = 0;
var Inst167 = 0;
var Inst168 = 0;
var Inst169 = 0;
var Inst170 = 0;
var Inst171 = 0;
var Inst172 = 0;
var Inst173 = 0;
var Inst174 = 0;
var Inst175 = 0;
var Inst176 = 0;
var Inst177 = 0;
var Inst178 = 0;
var Inst179 = 0;
var Inst180 = 0;
var Inst181 = 0;
var Inst182 = 0;
var Inst183 = 0;
var Inst184 = 0;
var Inst185 = 0;
var Inst186 = 0;
var Inst187 = 0;
var Inst188 = 0;
var Inst189 = 0;
var Inst190 = 0;
var Inst191 = 0;
var Inst192 = 0;
var Inst193 = 0;
var Inst194 = 0;
var Inst195 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
const mainGlobal = this;
try { if (Inst0 <= 1000 && typeof (mainGlobal) != "undefined") {_RecordType("<6,16,1>",(mainGlobal)); Inst0++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (newGlobal) != "undefined") {_RecordType("<48,57,2>",(newGlobal)); Inst2++; } } catch(e) {}
const debuggerGlobal = newGlobal({
  newCompartment: true
});
try { if (Inst1 <= 1000 && typeof (debuggerGlobal) != "undefined") {_RecordType("<31,45,2>",(debuggerGlobal)); Inst1++; } } catch(e) {}

try { if (Inst3 <= 1000 && typeof (Memory) != "undefined") {_RecordType("<97,103,6>",(Memory)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (global) != "undefined") {_RecordType("<108,114,7>",(global)); Inst4++; } } catch(e) {}
function Memory({
  global
}) {
try { if (Inst6 <= 1000 && typeof (debuggerGlobal.Debugger) != "undefined") {_RecordType("<137,160,9>",(debuggerGlobal.Debugger)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (debuggerGlobal) != "undefined") {_RecordType("<137,151,9>",(debuggerGlobal)); Inst7++; } } catch(e) {}
  this.dbg = new debuggerGlobal.Debugger();
try { if (Inst5 <= 1000 && typeof (this.dbg) != "undefined") {_RecordType("<122,130,9>",(this.dbg)); Inst5++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (this.dbg.addDebuggee) != "undefined") {_RecordType("<177,197,10>",(this.dbg.addDebuggee)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (this.dbg) != "undefined") {_RecordType("<177,185,10>",(this.dbg)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (global) != "undefined") {_RecordType("<198,204,10>",(global)); Inst11++; } } catch(e) {}
  this.gDO = this.dbg.addDebuggee(global);
try { if (Inst8 <= 1000 && typeof (this.gDO) != "undefined") {_RecordType("<166,174,10>",(this.gDO)); Inst8++; } } catch(e) {}
}

try { if (Inst14 <= 1000 && typeof (Memory) != "undefined") {_RecordType("<246,252,14>",(Memory)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (attach) != "undefined") {_RecordType("<257,263,16>",(attach)); Inst15++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (detach) != "undefined") {_RecordType("<326,332,20>",(detach)); Inst18++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (startRecordingAllocations) != "undefined") {_RecordType("<395,420,24>",(startRecordingAllocations)); Inst21++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (stopRecordingAllocations) != "undefined") {_RecordType("<554,578,29>",(stopRecordingAllocations)); Inst27++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (getAllocations) != "undefined") {_RecordType("<712,726,34>",(getAllocations)); Inst33++; } } catch(e) {}
Memory.prototype = {
  constructor: Memory,

  attach() {
try { if (Inst16 <= 1000 && typeof (Promise.resolve) != "undefined") {_RecordType("<279,294,17>",(Promise.resolve)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Promise) != "undefined") {_RecordType("<279,286,17>",(Promise)); Inst17++; } } catch(e) {}
    return Promise.resolve('fake attach result');
  },

  detach() {
try { if (Inst19 <= 1000 && typeof (Promise.resolve) != "undefined") {_RecordType("<348,363,21>",(Promise.resolve)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (Promise) != "undefined") {_RecordType("<348,355,21>",(Promise)); Inst20++; } } catch(e) {}
    return Promise.resolve('fake detach result');
  },

  startRecordingAllocations() {
    this.dbg.memory.trackingAllocationSites = true;
try { if (Inst22 <= 1000 && typeof (this.dbg.memory.trackingAllocationSites) != "undefined") {_RecordType("<429,468,25>",(this.dbg.memory.trackingAllocationSites)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (this.dbg.memory) != "undefined") {_RecordType("<429,444,25>",(this.dbg.memory)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (this.dbg) != "undefined") {_RecordType("<429,437,25>",(this.dbg)); Inst24++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (Promise.resolve) != "undefined") {_RecordType("<488,503,26>",(Promise.resolve)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Promise) != "undefined") {_RecordType("<488,495,26>",(Promise)); Inst26++; } } catch(e) {}
    return Promise.resolve('fake startRecordingAllocations result');
  },

  stopRecordingAllocations() {
    this.dbg.memory.trackingAllocationSites = false;
try { if (Inst28 <= 1000 && typeof (this.dbg.memory.trackingAllocationSites) != "undefined") {_RecordType("<587,626,30>",(this.dbg.memory.trackingAllocationSites)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (this.dbg.memory) != "undefined") {_RecordType("<587,602,30>",(this.dbg.memory)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (this.dbg) != "undefined") {_RecordType("<587,595,30>",(this.dbg)); Inst30++; } } catch(e) {}
try { if (Inst31 <= 1000 && typeof (Promise.resolve) != "undefined") {_RecordType("<647,662,31>",(Promise.resolve)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (Promise) != "undefined") {_RecordType("<647,654,31>",(Promise)); Inst32++; } } catch(e) {}
    return Promise.resolve('fake stopRecordingAllocations result');
  },

  getAllocations() {
try { if (Inst34 <= 1000 && typeof (Promise.resolve) != "undefined") {_RecordType("<742,757,35>",(Promise.resolve)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (Promise) != "undefined") {_RecordType("<742,749,35>",(Promise)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (this.dbg.memory.drainAllocationsLog) != "undefined") {_RecordType("<779,814,36>",(this.dbg.memory.drainAllocationsLog)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (this.dbg.memory) != "undefined") {_RecordType("<779,794,36>",(this.dbg.memory)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (this.dbg) != "undefined") {_RecordType("<779,787,36>",(this.dbg)); Inst38++; } } catch(e) {}
    return Promise.resolve({
      allocations: this.dbg.memory.drainAllocationsLog()
    });
  }

};
try { if (Inst12 <= 1000 && typeof (Memory.prototype) != "undefined") {_RecordType("<210,226,13>",(Memory.prototype)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Memory) != "undefined") {_RecordType("<210,216,13>",(Memory)); Inst13++; } } catch(e) {}

try { if (Inst39 <= 1000 && typeof (ok) != "undefined") {_RecordType("<843,845,42>",(ok)); Inst39++; } } catch(e) {}
function ok(cond, msg) {
try { if (Inst40 <= 1000 && typeof (cond) != "undefined") {_RecordType("<846,850,42>",(cond)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (msg) != "undefined") {_RecordType("<852,855,42>",(msg)); Inst41++; } } catch(e) {}
try { if (Inst42 <= 1000 && typeof (cond) != "undefined") {_RecordType("<863,867,43>",(cond)); Inst42++; } } catch(e) {}
  !!cond;
  true;
try { if (Inst43 <= 1000 && typeof (uneval) != "undefined") {_RecordType("<885,891,45>",(uneval)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (cond) != "undefined") {_RecordType("<892,896,45>",(cond)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (uneval) != "undefined") {_RecordType("<902,908,45>",(uneval)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (msg) != "undefined") {_RecordType("<909,912,45>",(msg)); Inst46++; } } catch(e) {}
  `ok(${uneval(cond)}, ${uneval(msg)})`;
}

try { if (Inst48 <= 1000 && typeof (assertEq) != "undefined") {_RecordType("<932,940,48>",(assertEq)); Inst48++; } } catch(e) {}
const is = assertEq;
try { if (Inst47 <= 1000 && typeof (is) != "undefined") {_RecordType("<927,929,48>",(is)); Inst47++; } } catch(e) {}

try { if (Inst49 <= 1000 && typeof (startServerAndGetSelectedTabMemory) != "undefined") {_RecordType("<952,986,50>",(startServerAndGetSelectedTabMemory)); Inst49++; } } catch(e) {}
function startServerAndGetSelectedTabMemory() {
try { if (Inst51 <= 1000 && typeof (Memory) != "undefined") {_RecordType("<1010,1016,51>",(Memory)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (mainGlobal) != "undefined") {_RecordType("<1031,1041,52>",(mainGlobal)); Inst52++; } } catch(e) {}
  let memory = new Memory({
    global: mainGlobal
  });
try { if (Inst50 <= 1000 && typeof (memory) != "undefined") {_RecordType("<997,1003,51>",(memory)); Inst50++; } } catch(e) {}
try { if (Inst53 <= 1000 && typeof (Promise.resolve) != "undefined") {_RecordType("<1057,1072,54>",(Promise.resolve)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (Promise) != "undefined") {_RecordType("<1057,1064,54>",(Promise)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (memory) != "undefined") {_RecordType("<1079,1085,55>",(memory)); Inst55++; } } catch(e) {}
  return Promise.resolve({
    memory,
    client: 'fake client'
  });
}

try { if (Inst56 <= 1000 && typeof (destroyServerAndFinish) != "undefined") {_RecordType("<1131,1153,60>",(destroyServerAndFinish)); Inst56++; } } catch(e) {}
function destroyServerAndFinish() {
try { if (Inst57 <= 1000 && typeof (Promise.resolve) != "undefined") {_RecordType("<1167,1182,61>",(Promise.resolve)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (Promise) != "undefined") {_RecordType("<1167,1174,61>",(Promise)); Inst58++; } } catch(e) {}
  return Promise.resolve('fake destroyServerAndFinish result');
}

try { if (Inst59 <= 1000 && typeof (body) != "undefined") {_RecordType("<1235,1239,64>",(body)); Inst59++; } } catch(e) {}
function* body() {
try { if (Inst62 <= 1000 && typeof (startServerAndGetSelectedTabMemory) != "undefined") {_RecordType("<1287,1321,68>",(startServerAndGetSelectedTabMemory)); Inst62++; } } catch(e) {}
  let {
    memory,
    client
  } = yield startServerAndGetSelectedTabMemory();
try { if (Inst60 <= 1000 && typeof (memory) != "undefined") {_RecordType("<1256,1262,66>",(memory)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (client) != "undefined") {_RecordType("<1268,1274,67>",(client)); Inst61++; } } catch(e) {}
try { if (Inst63 <= 1000 && typeof (memory.attach) != "undefined") {_RecordType("<1333,1346,69>",(memory.attach)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (memory) != "undefined") {_RecordType("<1333,1339,69>",(memory)); Inst64++; } } catch(e) {}
  yield memory.attach();
try { if (Inst65 <= 1000 && typeof (memory.startRecordingAllocations) != "undefined") {_RecordType("<1358,1390,70>",(memory.startRecordingAllocations)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (memory) != "undefined") {_RecordType("<1358,1364,70>",(memory)); Inst66++; } } catch(e) {}
  yield memory.startRecordingAllocations();
try { if (Inst67 <= 1000 && typeof (ok) != "undefined") {_RecordType("<1396,1398,71>",(ok)); Inst67++; } } catch(e) {}
  ok(true, "Can start recording allocations"); // Allocate some objects.

  let alloc1, alloc2, alloc3;
try { if (Inst68 <= 1000 && typeof (alloc1) != "undefined") {_RecordType("<1474,1480,73>",(alloc1)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (alloc2) != "undefined") {_RecordType("<1482,1488,73>",(alloc2)); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (alloc3) != "undefined") {_RecordType("<1490,1496,73>",(alloc3)); Inst70++; } } catch(e) {}
  /* eslint-disable max-nested-callbacks */

try { if (Inst71 <= 1000 && typeof (outer) != "undefined") {_RecordType("<1555,1560,76>",(outer)); Inst71++; } } catch(e) {}
  (function outer() {
try { if (Inst72 <= 1000 && typeof (middle) != "undefined") {_RecordType("<1579,1585,77>",(middle)); Inst72++; } } catch(e) {}
    (function middle() {
try { if (Inst73 <= 1000 && typeof (inner) != "undefined") {_RecordType("<1606,1611,78>",(inner)); Inst73++; } } catch(e) {}
      (function inner() {
        alloc1 = {};
try { if (Inst74 <= 1000 && typeof (alloc1) != "undefined") {_RecordType("<1624,1630,79>",(alloc1)); Inst74++; } } catch(e) {}
try { if (Inst77 <= 1000 && typeof (Error().lineNumber) != "undefined") {_RecordType("<1659,1677,80>",(Error().lineNumber)); Inst77++; } } catch(e) {}try { if (Inst78 <= 1000 && typeof (Error) != "undefined") {_RecordType("<1659,1664,80>",(Error)); Inst78++; } } catch(e) {}
        alloc1.line = Error().lineNumber;
try { if (Inst75 <= 1000 && typeof (alloc1.line) != "undefined") {_RecordType("<1645,1656,80>",(alloc1.line)); Inst75++; } } catch(e) {}try { if (Inst76 <= 1000 && typeof (alloc1) != "undefined") {_RecordType("<1645,1651,80>",(alloc1)); Inst76++; } } catch(e) {}
        alloc2 = [];
try { if (Inst79 <= 1000 && typeof (alloc2) != "undefined") {_RecordType("<1687,1693,81>",(alloc2)); Inst79++; } } catch(e) {}
try { if (Inst82 <= 1000 && typeof (Error().lineNumber) != "undefined") {_RecordType("<1722,1740,82>",(Error().lineNumber)); Inst82++; } } catch(e) {}try { if (Inst83 <= 1000 && typeof (Error) != "undefined") {_RecordType("<1722,1727,82>",(Error)); Inst83++; } } catch(e) {}
        alloc2.line = Error().lineNumber; // eslint-disable-next-line new-parens
try { if (Inst80 <= 1000 && typeof (alloc2.line) != "undefined") {_RecordType("<1708,1719,82>",(alloc2.line)); Inst80++; } } catch(e) {}try { if (Inst81 <= 1000 && typeof (alloc2) != "undefined") {_RecordType("<1708,1714,82>",(alloc2)); Inst81++; } } catch(e) {}

        alloc3 = new function () {
          ;
        }();
try { if (Inst84 <= 1000 && typeof (alloc3) != "undefined") {_RecordType("<1790,1796,84>",(alloc3)); Inst84++; } } catch(e) {}
try { if (Inst87 <= 1000 && typeof (Error().lineNumber) != "undefined") {_RecordType("<1864,1882,87>",(Error().lineNumber)); Inst87++; } } catch(e) {}try { if (Inst88 <= 1000 && typeof (Error) != "undefined") {_RecordType("<1864,1869,87>",(Error)); Inst88++; } } catch(e) {}
        alloc3.line = Error().lineNumber;
try { if (Inst85 <= 1000 && typeof (alloc3.line) != "undefined") {_RecordType("<1850,1861,87>",(alloc3.line)); Inst85++; } } catch(e) {}try { if (Inst86 <= 1000 && typeof (alloc3) != "undefined") {_RecordType("<1850,1856,87>",(alloc3)); Inst86++; } } catch(e) {}
      })();
    })();
  })();
  /* eslint-enable max-nested-callbacks */


try { if (Inst90 <= 1000 && typeof (memory.getAllocations) != "undefined") {_RecordType("<1982,2003,94>",(memory.getAllocations)); Inst90++; } } catch(e) {}try { if (Inst91 <= 1000 && typeof (memory) != "undefined") {_RecordType("<1982,1988,94>",(memory)); Inst91++; } } catch(e) {}
  let response = yield memory.getAllocations();
try { if (Inst89 <= 1000 && typeof (response) != "undefined") {_RecordType("<1965,1973,94>",(response)); Inst89++; } } catch(e) {}
try { if (Inst92 <= 1000 && typeof (memory.stopRecordingAllocations) != "undefined") {_RecordType("<2015,2046,95>",(memory.stopRecordingAllocations)); Inst92++; } } catch(e) {}try { if (Inst93 <= 1000 && typeof (memory) != "undefined") {_RecordType("<2015,2021,95>",(memory)); Inst93++; } } catch(e) {}
  yield memory.stopRecordingAllocations();
try { if (Inst94 <= 1000 && typeof (ok) != "undefined") {_RecordType("<2052,2054,96>",(ok)); Inst94++; } } catch(e) {}
  ok(true, "Can stop recording allocations"); // Filter out allocations by library and test code, and get only the
  // allocations that occurred in our test case above.

try { if (Inst95 <= 1000 && typeof (isTestAllocation) != "undefined") {_RecordType("<2232,2248,99>",(isTestAllocation)); Inst95++; } } catch(e) {}
  function isTestAllocation(alloc) {
try { if (Inst96 <= 1000 && typeof (alloc) != "undefined") {_RecordType("<2249,2254,99>",(alloc)); Inst96++; } } catch(e) {}
try { if (Inst98 <= 1000 && typeof (alloc.frame) != "undefined") {_RecordType("<2274,2285,100>",(alloc.frame)); Inst98++; } } catch(e) {}try { if (Inst99 <= 1000 && typeof (alloc) != "undefined") {_RecordType("<2274,2279,100>",(alloc)); Inst99++; } } catch(e) {}
    let frame = alloc.frame;
try { if (Inst97 <= 1000 && typeof (frame) != "undefined") {_RecordType("<2266,2271,100>",(frame)); Inst97++; } } catch(e) {}
try { if (Inst100 <= 1000 && typeof (frame) != "undefined") {_RecordType("<2298,2303,101>",(frame)); Inst100++; } } catch(e) {}try { if (Inst101 <= 1000 && typeof (frame.functionDisplayName) != "undefined") {_RecordType("<2307,2332,101>",(frame.functionDisplayName)); Inst101++; } } catch(e) {}try { if (Inst102 <= 1000 && typeof (frame) != "undefined") {_RecordType("<2307,2312,101>",(frame)); Inst102++; } } catch(e) {}try { if (Inst103 <= 1000 && typeof (frame.line) != "undefined") {_RecordType("<2349,2359,101>",(frame.line)); Inst103++; } } catch(e) {}try { if (Inst104 <= 1000 && typeof (frame) != "undefined") {_RecordType("<2349,2354,101>",(frame)); Inst104++; } } catch(e) {}try { if (Inst105 <= 1000 && typeof (alloc1.line) != "undefined") {_RecordType("<2364,2375,101>",(alloc1.line)); Inst105++; } } catch(e) {}try { if (Inst106 <= 1000 && typeof (alloc1) != "undefined") {_RecordType("<2364,2370,101>",(alloc1)); Inst106++; } } catch(e) {}try { if (Inst107 <= 1000 && typeof (frame.line) != "undefined") {_RecordType("<2379,2389,101>",(frame.line)); Inst107++; } } catch(e) {}try { if (Inst108 <= 1000 && typeof (frame) != "undefined") {_RecordType("<2379,2384,101>",(frame)); Inst108++; } } catch(e) {}try { if (Inst109 <= 1000 && typeof (alloc2.line) != "undefined") {_RecordType("<2394,2405,101>",(alloc2.line)); Inst109++; } } catch(e) {}try { if (Inst110 <= 1000 && typeof (alloc2) != "undefined") {_RecordType("<2394,2400,101>",(alloc2)); Inst110++; } } catch(e) {}try { if (Inst111 <= 1000 && typeof (frame.line) != "undefined") {_RecordType("<2409,2419,101>",(frame.line)); Inst111++; } } catch(e) {}try { if (Inst112 <= 1000 && typeof (frame) != "undefined") {_RecordType("<2409,2414,101>",(frame)); Inst112++; } } catch(e) {}try { if (Inst113 <= 1000 && typeof (alloc3.line) != "undefined") {_RecordType("<2424,2435,101>",(alloc3.line)); Inst113++; } } catch(e) {}try { if (Inst114 <= 1000 && typeof (alloc3) != "undefined") {_RecordType("<2424,2430,101>",(alloc3)); Inst114++; } } catch(e) {}
    return frame && frame.functionDisplayName === "inner" && (frame.line === alloc1.line || frame.line === alloc2.line || frame.line === alloc3.line);
  }

try { if (Inst116 <= 1000 && typeof (response.allocations.filter) != "undefined") {_RecordType("<2467,2494,104>",(response.allocations.filter)); Inst116++; } } catch(e) {}try { if (Inst117 <= 1000 && typeof (response.allocations) != "undefined") {_RecordType("<2467,2487,104>",(response.allocations)); Inst117++; } } catch(e) {}try { if (Inst118 <= 1000 && typeof (response) != "undefined") {_RecordType("<2467,2475,104>",(response)); Inst118++; } } catch(e) {}try { if (Inst119 <= 1000 && typeof (isTestAllocation) != "undefined") {_RecordType("<2495,2511,104>",(isTestAllocation)); Inst119++; } } catch(e) {}
  let testAllocations = response.allocations.filter(isTestAllocation);
try { if (Inst115 <= 1000 && typeof (testAllocations) != "undefined") {_RecordType("<2449,2464,104>",(testAllocations)); Inst115++; } } catch(e) {}
try { if (Inst120 <= 1000 && typeof (ok) != "undefined") {_RecordType("<2516,2518,105>",(ok)); Inst120++; } } catch(e) {}try { if (Inst121 <= 1000 && typeof (testAllocations.length) != "undefined") {_RecordType("<2519,2541,105>",(testAllocations.length)); Inst121++; } } catch(e) {}try { if (Inst122 <= 1000 && typeof (testAllocations) != "undefined") {_RecordType("<2519,2534,105>",(testAllocations)); Inst122++; } } catch(e) {}
  ok(testAllocations.length >= 3, "Should find our 3 test allocations (plus some allocations for the error " + "objects used to get line numbers)"); // For each of the test case's allocations, ensure that the parent frame
  // indices are correct. Also test that we did get an allocation at each
  // line we expected (rather than a bunch on the first line and none on the
  // others, etc).

try { if (Inst124 <= 1000 && typeof (Set) != "undefined") {_RecordType("<2933,2936,110>",(Set)); Inst124++; } } catch(e) {}try { if (Inst125 <= 1000 && typeof (alloc1.line) != "undefined") {_RecordType("<2938,2949,110>",(alloc1.line)); Inst125++; } } catch(e) {}try { if (Inst126 <= 1000 && typeof (alloc1) != "undefined") {_RecordType("<2938,2944,110>",(alloc1)); Inst126++; } } catch(e) {}try { if (Inst127 <= 1000 && typeof (alloc2.line) != "undefined") {_RecordType("<2951,2962,110>",(alloc2.line)); Inst127++; } } catch(e) {}try { if (Inst128 <= 1000 && typeof (alloc2) != "undefined") {_RecordType("<2951,2957,110>",(alloc2)); Inst128++; } } catch(e) {}try { if (Inst129 <= 1000 && typeof (alloc3.line) != "undefined") {_RecordType("<2964,2975,110>",(alloc3.line)); Inst129++; } } catch(e) {}try { if (Inst130 <= 1000 && typeof (alloc3) != "undefined") {_RecordType("<2964,2970,110>",(alloc3)); Inst130++; } } catch(e) {}
  let expectedLines = new Set([alloc1.line, alloc2.line, alloc3.line]);
try { if (Inst123 <= 1000 && typeof (expectedLines) != "undefined") {_RecordType("<2913,2926,110>",(expectedLines)); Inst123++; } } catch(e) {}

  for (let alloc of testAllocations) {
try { if (Inst131 <= 1000 && typeof (alloc) != "undefined") {_RecordType("<2991,2996,112>",(alloc)); Inst131++; } } catch(e) {}try { if (Inst132 <= 1000 && typeof (testAllocations) != "undefined") {_RecordType("<3000,3015,112>",(testAllocations)); Inst132++; } } catch(e) {}
try { if (Inst134 <= 1000 && typeof (alloc.frame) != "undefined") {_RecordType("<3040,3051,113>",(alloc.frame)); Inst134++; } } catch(e) {}try { if (Inst135 <= 1000 && typeof (alloc) != "undefined") {_RecordType("<3040,3045,113>",(alloc)); Inst135++; } } catch(e) {}
    let innerFrame = alloc.frame;
try { if (Inst133 <= 1000 && typeof (innerFrame) != "undefined") {_RecordType("<3027,3037,113>",(innerFrame)); Inst133++; } } catch(e) {}
try { if (Inst136 <= 1000 && typeof (ok) != "undefined") {_RecordType("<3057,3059,114>",(ok)); Inst136++; } } catch(e) {}try { if (Inst137 <= 1000 && typeof (innerFrame) != "undefined") {_RecordType("<3060,3070,114>",(innerFrame)); Inst137++; } } catch(e) {}
    ok(innerFrame, "Should get the inner frame");
try { if (Inst138 <= 1000 && typeof (is) != "undefined") {_RecordType("<3107,3109,115>",(is)); Inst138++; } } catch(e) {}try { if (Inst139 <= 1000 && typeof (innerFrame.functionDisplayName) != "undefined") {_RecordType("<3110,3140,115>",(innerFrame.functionDisplayName)); Inst139++; } } catch(e) {}try { if (Inst140 <= 1000 && typeof (innerFrame) != "undefined") {_RecordType("<3110,3120,115>",(innerFrame)); Inst140++; } } catch(e) {}
    is(innerFrame.functionDisplayName, "inner");
try { if (Inst141 <= 1000 && typeof (expectedLines.delete) != "undefined") {_RecordType("<3156,3176,116>",(expectedLines.delete)); Inst141++; } } catch(e) {}try { if (Inst142 <= 1000 && typeof (expectedLines) != "undefined") {_RecordType("<3156,3169,116>",(expectedLines)); Inst142++; } } catch(e) {}try { if (Inst143 <= 1000 && typeof (innerFrame.line) != "undefined") {_RecordType("<3177,3192,116>",(innerFrame.line)); Inst143++; } } catch(e) {}try { if (Inst144 <= 1000 && typeof (innerFrame) != "undefined") {_RecordType("<3177,3187,116>",(innerFrame)); Inst144++; } } catch(e) {}
    expectedLines.delete(innerFrame.line);
try { if (Inst146 <= 1000 && typeof (innerFrame.parent) != "undefined") {_RecordType("<3217,3234,117>",(innerFrame.parent)); Inst146++; } } catch(e) {}try { if (Inst147 <= 1000 && typeof (innerFrame) != "undefined") {_RecordType("<3217,3227,117>",(innerFrame)); Inst147++; } } catch(e) {}
    let middleFrame = innerFrame.parent;
try { if (Inst145 <= 1000 && typeof (middleFrame) != "undefined") {_RecordType("<3203,3214,117>",(middleFrame)); Inst145++; } } catch(e) {}
try { if (Inst148 <= 1000 && typeof (ok) != "undefined") {_RecordType("<3240,3242,118>",(ok)); Inst148++; } } catch(e) {}try { if (Inst149 <= 1000 && typeof (middleFrame) != "undefined") {_RecordType("<3243,3254,118>",(middleFrame)); Inst149++; } } catch(e) {}
    ok(middleFrame, "Should get the middle frame");
try { if (Inst150 <= 1000 && typeof (is) != "undefined") {_RecordType("<3292,3294,119>",(is)); Inst150++; } } catch(e) {}try { if (Inst151 <= 1000 && typeof (middleFrame.functionDisplayName) != "undefined") {_RecordType("<3295,3326,119>",(middleFrame.functionDisplayName)); Inst151++; } } catch(e) {}try { if (Inst152 <= 1000 && typeof (middleFrame) != "undefined") {_RecordType("<3295,3306,119>",(middleFrame)); Inst152++; } } catch(e) {}
    is(middleFrame.functionDisplayName, "middle");
try { if (Inst154 <= 1000 && typeof (middleFrame.parent) != "undefined") {_RecordType("<3360,3378,120>",(middleFrame.parent)); Inst154++; } } catch(e) {}try { if (Inst155 <= 1000 && typeof (middleFrame) != "undefined") {_RecordType("<3360,3371,120>",(middleFrame)); Inst155++; } } catch(e) {}
    let outerFrame = middleFrame.parent;
try { if (Inst153 <= 1000 && typeof (outerFrame) != "undefined") {_RecordType("<3347,3357,120>",(outerFrame)); Inst153++; } } catch(e) {}
try { if (Inst156 <= 1000 && typeof (ok) != "undefined") {_RecordType("<3384,3386,121>",(ok)); Inst156++; } } catch(e) {}try { if (Inst157 <= 1000 && typeof (outerFrame) != "undefined") {_RecordType("<3387,3397,121>",(outerFrame)); Inst157++; } } catch(e) {}
    ok(outerFrame, "Should get the outer frame");
try { if (Inst158 <= 1000 && typeof (is) != "undefined") {_RecordType("<3434,3436,122>",(is)); Inst158++; } } catch(e) {}try { if (Inst159 <= 1000 && typeof (outerFrame.functionDisplayName) != "undefined") {_RecordType("<3437,3467,122>",(outerFrame.functionDisplayName)); Inst159++; } } catch(e) {}try { if (Inst160 <= 1000 && typeof (outerFrame) != "undefined") {_RecordType("<3437,3447,122>",(outerFrame)); Inst160++; } } catch(e) {}
    is(outerFrame.functionDisplayName, "outer"); // Not going to test the rest of the frames because they are Task.jsm
    // and promise frames and it gets gross. Plus, I wouldn't want this test
    // to start failing if they changed their implementations in a way that
    // added or removed stack frames here.
  }

try { if (Inst161 <= 1000 && typeof (is) != "undefined") {_RecordType("<3752,3754,128>",(is)); Inst161++; } } catch(e) {}try { if (Inst162 <= 1000 && typeof (expectedLines.size) != "undefined") {_RecordType("<3755,3773,128>",(expectedLines.size)); Inst162++; } } catch(e) {}try { if (Inst163 <= 1000 && typeof (expectedLines) != "undefined") {_RecordType("<3755,3768,128>",(expectedLines)); Inst163++; } } catch(e) {}
  is(expectedLines.size, 0, "Should have found all the expected lines");
try { if (Inst164 <= 1000 && typeof (memory.detach) != "undefined") {_RecordType("<3831,3844,129>",(memory.detach)); Inst164++; } } catch(e) {}try { if (Inst165 <= 1000 && typeof (memory) != "undefined") {_RecordType("<3831,3837,129>",(memory)); Inst165++; } } catch(e) {}
  yield memory.detach();
try { if (Inst166 <= 1000 && typeof (destroyServerAndFinish) != "undefined") {_RecordType("<3850,3872,130>",(destroyServerAndFinish)); Inst166++; } } catch(e) {}try { if (Inst167 <= 1000 && typeof (client) != "undefined") {_RecordType("<3873,3879,130>",(client)); Inst167++; } } catch(e) {}
  destroyServerAndFinish(client);
}

try { if (Inst169 <= 1000 && typeof (body) != "undefined") {_RecordType("<3903,3907,133>",(body)); Inst169++; } } catch(e) {}
const generator = body();
try { if (Inst168 <= 1000 && typeof (generator) != "undefined") {_RecordType("<3891,3900,133>",(generator)); Inst168++; } } catch(e) {}
try { if (Inst170 <= 1000 && typeof (loop) != "undefined") {_RecordType("<3911,3915,134>",(loop)); Inst170++; } } catch(e) {}try { if (Inst171 <= 1000 && typeof (generator.next) != "undefined") {_RecordType("<3916,3930,134>",(generator.next)); Inst171++; } } catch(e) {}try { if (Inst172 <= 1000 && typeof (generator) != "undefined") {_RecordType("<3916,3925,134>",(generator)); Inst172++; } } catch(e) {}
loop(generator.next());

try { if (Inst173 <= 1000 && typeof (loop) != "undefined") {_RecordType("<3945,3949,136>",(loop)); Inst173++; } } catch(e) {}try { if (Inst174 <= 1000 && typeof (promise) != "undefined") {_RecordType("<3961,3968,137>",(promise)); Inst174++; } } catch(e) {}try { if (Inst175 <= 1000 && typeof (done) != "undefined") {_RecordType("<3972,3976,138>",(done)); Inst175++; } } catch(e) {}
function loop({
  value: promise,
  done
}) {
try { if (Inst176 <= 1000 && typeof (done) != "undefined") {_RecordType("<3988,3992,140>",(done)); Inst176++; } } catch(e) {}
  if (done) {
    return;
  }

try { if (Inst177 <= 1000 && typeof (promise.catch(e => loop(generator.throw(e))).then(v => {
    loop(generator.next(v));
  }).catch) != "undefined") {_RecordType("<4015,4111,144>",(promise.catch(e => loop(generator.throw(e))).then(v => {
    loop(generator.next(v));
  }).catch)); Inst177++; } } catch(e) {}try { if (Inst178 <= 1000 && typeof (promise.catch(e => loop(generator.throw(e))).then) != "undefined") {_RecordType("<4015,4064,144>",(promise.catch(e => loop(generator.throw(e))).then)); Inst178++; } } catch(e) {}try { if (Inst179 <= 1000 && typeof (promise.catch) != "undefined") {_RecordType("<4015,4028,144>",(promise.catch)); Inst179++; } } catch(e) {}try { if (Inst180 <= 1000 && typeof (promise) != "undefined") {_RecordType("<4015,4022,144>",(promise)); Inst180++; } } catch(e) {}try { if (Inst181 <= 1000 && typeof (e) != "undefined") {_RecordType("<4029,4030,144>",(e)); Inst181++; } } catch(e) {}try { if (Inst182 <= 1000 && typeof (loop) != "undefined") {_RecordType("<4034,4038,144>",(loop)); Inst182++; } } catch(e) {}try { if (Inst183 <= 1000 && typeof (generator.throw) != "undefined") {_RecordType("<4039,4054,144>",(generator.throw)); Inst183++; } } catch(e) {}try { if (Inst184 <= 1000 && typeof (generator) != "undefined") {_RecordType("<4039,4048,144>",(generator)); Inst184++; } } catch(e) {}try { if (Inst185 <= 1000 && typeof (e) != "undefined") {_RecordType("<4055,4056,144>",(e)); Inst185++; } } catch(e) {}try { if (Inst186 <= 1000 && typeof (v) != "undefined") {_RecordType("<4065,4066,144>",(v)); Inst186++; } } catch(e) {}try { if (Inst191 <= 1000 && typeof (e) != "undefined") {_RecordType("<4112,4113,146>",(e)); Inst191++; } } catch(e) {}
  promise.catch(e => loop(generator.throw(e))).then(v => {
try { if (Inst187 <= 1000 && typeof (loop) != "undefined") {_RecordType("<4076,4080,145>",(loop)); Inst187++; } } catch(e) {}try { if (Inst188 <= 1000 && typeof (generator.next) != "undefined") {_RecordType("<4081,4095,145>",(generator.next)); Inst188++; } } catch(e) {}try { if (Inst189 <= 1000 && typeof (generator) != "undefined") {_RecordType("<4081,4090,145>",(generator)); Inst189++; } } catch(e) {}try { if (Inst190 <= 1000 && typeof (v) != "undefined") {_RecordType("<4096,4097,145>",(v)); Inst190++; } } catch(e) {}
    loop(generator.next(v));
  }).catch(e => {
try { if (Inst192 <= 1000 && typeof (print) != "undefined") {_RecordType("<4123,4128,147>",(print)); Inst192++; } } catch(e) {}try { if (Inst193 <= 1000 && typeof (e) != "undefined") {_RecordType("<4139,4140,147>",(e)); Inst193++; } } catch(e) {}try { if (Inst194 <= 1000 && typeof (e.stack) != "undefined") {_RecordType("<4153,4160,147>",(e.stack)); Inst194++; } } catch(e) {}try { if (Inst195 <= 1000 && typeof (e) != "undefined") {_RecordType("<4153,4154,147>",(e)); Inst195++; } } catch(e) {}
    print(`Error: ${e}\nstack:\n${e.stack}`);
  });
}

