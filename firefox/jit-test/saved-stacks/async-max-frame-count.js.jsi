var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
var Inst102 = 0;
var Inst103 = 0;
var Inst104 = 0;
var Inst105 = 0;
var Inst106 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Test that async stacks are limited on recursion.
const defaultAsyncStackLimit = 60;
try { if (Inst0 <= 1000 && typeof (defaultAsyncStackLimit) != "undefined") {_RecordType("<58,80,2>",(defaultAsyncStackLimit)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (recur) != "undefined") {_RecordType("<97,102,4>",(recur)); Inst1++; } } catch(e) {}
function recur(n, limit) {
try { if (Inst2 <= 1000 && typeof (n) != "undefined") {_RecordType("<103,104,4>",(n)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (limit) != "undefined") {_RecordType("<106,111,4>",(limit)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (n) != "undefined") {_RecordType("<121,122,5>",(n)); Inst4++; } } catch(e) {}
  if (n > 0) {
try { if (Inst5 <= 1000 && typeof (callFunctionWithAsyncStack) != "undefined") {_RecordType("<141,167,6>",(callFunctionWithAsyncStack)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (recur) != "undefined") {_RecordType("<177,182,6>",(recur)); Inst6++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (saveStack) != "undefined") {_RecordType("<228,237,8>",(saveStack)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (limit) != "undefined") {_RecordType("<238,243,8>",(limit)); Inst11++; } } catch(e) {}
    return callFunctionWithAsyncStack(function recur() {
try { if (Inst7 <= 1000 && typeof (recur) != "undefined") {_RecordType("<200,205,7>",(recur)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (n) != "undefined") {_RecordType("<206,207,7>",(n)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (limit) != "undefined") {_RecordType("<213,218,7>",(limit)); Inst9++; } } catch(e) {}
      return recur(n - 1, limit);
    }, saveStack(limit), "Recurse");
  }

try { if (Inst12 <= 1000 && typeof (saveStack) != "undefined") {_RecordType("<272,281,11>",(saveStack)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (limit) != "undefined") {_RecordType("<282,287,11>",(limit)); Inst13++; } } catch(e) {}
  return saveStack(limit);
}

try { if (Inst14 <= 1000 && typeof (checkRecursion) != "undefined") {_RecordType("<302,316,14>",(checkRecursion)); Inst14++; } } catch(e) {}
function checkRecursion(n, limit) {
try { if (Inst15 <= 1000 && typeof (n) != "undefined") {_RecordType("<317,318,14>",(n)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (limit) != "undefined") {_RecordType("<320,325,14>",(limit)); Inst16++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (print) != "undefined") {_RecordType("<331,336,15>",(print)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (uneval) != "undefined") {_RecordType("<357,363,15>",(uneval)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (n) != "undefined") {_RecordType("<364,365,15>",(n)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (uneval) != "undefined") {_RecordType("<376,382,15>",(uneval)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (limit) != "undefined") {_RecordType("<383,388,15>",(limit)); Inst21++; } } catch(e) {}
  print("checkRecursion(" + uneval(n) + ", " + uneval(limit) + ")");

try { if (Inst26 <= 1000 && typeof (e) != "undefined") {_RecordType("<451,452,19>",(e)); Inst26++; } } catch(e) {}
  try {
try { if (Inst23 <= 1000 && typeof (recur) != "undefined") {_RecordType("<423,428,18>",(recur)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (n) != "undefined") {_RecordType("<429,430,18>",(n)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (limit) != "undefined") {_RecordType("<432,437,18>",(limit)); Inst25++; } } catch(e) {}
    var stack = recur(n, limit);
try { if (Inst22 <= 1000 && typeof (stack) != "undefined") {_RecordType("<415,420,18>",(stack)); Inst22++; } } catch(e) {}
  } catch (e) {
    // Some platforms, like ASAN builds, can end up overrecursing. Tolerate
    // these failures.
try { if (Inst27 <= 1000 && typeof (/too much recursion/.test) != "undefined") {_RecordType("<559,584,22>",(/too much recursion/.test)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (e) != "undefined") {_RecordType("<590,591,22>",(e)); Inst28++; } } catch(e) {}
    /too much recursion/.test("" + e);
    true;
    return;
  } // Async stacks are limited even if we didn't ask for a limit. There is a
  // default limit on frames attached on top of any synchronous frames, and
  // every time the limit is reached when capturing, half of the frames are
  // truncated from the old end of the async stack.


try { if (Inst29 <= 1000 && typeof (limit) != "undefined") {_RecordType("<906,911,31>",(limit)); Inst29++; } } catch(e) {}
  if (limit == 0) {
    // Always add one synchronous frame that is the last call to `recur`.
try { if (Inst30 <= 1000 && typeof (n) != "undefined") {_RecordType("<1002,1003,33>",(n)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (defaultAsyncStackLimit) != "undefined") {_RecordType("<1010,1032,33>",(defaultAsyncStackLimit)); Inst31++; } } catch(e) {}
    if (n + 1 < defaultAsyncStackLimit) {
try { if (Inst33 <= 1000 && typeof (defaultAsyncStackLimit) != "undefined") {_RecordType("<1050,1072,34>",(defaultAsyncStackLimit)); Inst33++; } } catch(e) {}
      limit = defaultAsyncStackLimit + 1;
try { if (Inst32 <= 1000 && typeof (limit) != "undefined") {_RecordType("<1042,1047,34>",(limit)); Inst32++; } } catch(e) {}
    } else {
try { if (Inst35 <= 1000 && typeof (n) != "undefined") {_RecordType("<1105,1106,36>",(n)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (defaultAsyncStackLimit) != "undefined") {_RecordType("<1113,1135,36>",(defaultAsyncStackLimit)); Inst36++; } } catch(e) {}
      limit = n + 2 - defaultAsyncStackLimit / 2;
try { if (Inst34 <= 1000 && typeof (limit) != "undefined") {_RecordType("<1097,1102,36>",(limit)); Inst34++; } } catch(e) {}
    }
  } // The first `n` or `limit` frames should have `recur` as their `asyncParent`.


  for (var i = 0; i < Math.min(n, limit); i++) {
try { if (Inst37 <= 1000 && typeof (i) != "undefined") {_RecordType("<1243,1244,41>",(i)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (i) != "undefined") {_RecordType("<1250,1251,41>",(i)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (Math.min) != "undefined") {_RecordType("<1254,1262,41>",(Math.min)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1254,1258,41>",(Math)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (n) != "undefined") {_RecordType("<1263,1264,41>",(n)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (limit) != "undefined") {_RecordType("<1266,1271,41>",(limit)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (i) != "undefined") {_RecordType("<1274,1275,41>",(i)); Inst43++; } } catch(e) {}
try { if (Inst44 <= 1000 && typeof (stack.functionDisplayName) != "undefined") {_RecordType("<1285,1310,42>",(stack.functionDisplayName)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (stack) != "undefined") {_RecordType("<1285,1290,42>",(stack)); Inst45++; } } catch(e) {}
    stack.functionDisplayName;
    "recur";
try { if (Inst46 <= 1000 && typeof (stack.parent) != "undefined") {_RecordType("<1329,1341,44>",(stack.parent)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (stack) != "undefined") {_RecordType("<1329,1334,44>",(stack)); Inst47++; } } catch(e) {}
    stack.parent;
    null;
try { if (Inst49 <= 1000 && typeof (stack.asyncParent) != "undefined") {_RecordType("<1365,1382,46>",(stack.asyncParent)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (stack) != "undefined") {_RecordType("<1365,1370,46>",(stack)); Inst50++; } } catch(e) {}
    stack = stack.asyncParent;
try { if (Inst48 <= 1000 && typeof (stack) != "undefined") {_RecordType("<1357,1362,46>",(stack)); Inst48++; } } catch(e) {}
  } // This frame should be the first call to `recur`.


try { if (Inst51 <= 1000 && typeof (limit) != "undefined") {_RecordType("<1447,1452,50>",(limit)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (n) != "undefined") {_RecordType("<1455,1456,50>",(n)); Inst52++; } } catch(e) {}
  if (limit > n) {
try { if (Inst53 <= 1000 && typeof (stack.functionDisplayName) != "undefined") {_RecordType("<1464,1489,51>",(stack.functionDisplayName)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (stack) != "undefined") {_RecordType("<1464,1469,51>",(stack)); Inst54++; } } catch(e) {}
    stack.functionDisplayName;
    "recur";
try { if (Inst55 <= 1000 && typeof (stack.asyncParent) != "undefined") {_RecordType("<1508,1525,53>",(stack.asyncParent)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (stack) != "undefined") {_RecordType("<1508,1513,53>",(stack)); Inst56++; } } catch(e) {}
    stack.asyncParent;
    null;
try { if (Inst58 <= 1000 && typeof (stack.parent) != "undefined") {_RecordType("<1549,1561,55>",(stack.parent)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (stack) != "undefined") {_RecordType("<1549,1554,55>",(stack)); Inst59++; } } catch(e) {}
    stack = stack.parent;
try { if (Inst57 <= 1000 && typeof (stack) != "undefined") {_RecordType("<1541,1546,55>",(stack)); Inst57++; } } catch(e) {}
  } else {
try { if (Inst60 <= 1000 && typeof (stack) != "undefined") {_RecordType("<1578,1583,57>",(stack)); Inst60++; } } catch(e) {}
    stack;
    null;
  } // This frame should be the call to `checkRecursion`.


try { if (Inst61 <= 1000 && typeof (limit) != "undefined") {_RecordType("<1661,1666,62>",(limit)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (n) != "undefined") {_RecordType("<1669,1670,62>",(n)); Inst62++; } } catch(e) {}
  if (limit > n + 1) {
try { if (Inst63 <= 1000 && typeof (stack.functionDisplayName) != "undefined") {_RecordType("<1682,1707,63>",(stack.functionDisplayName)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (stack) != "undefined") {_RecordType("<1682,1687,63>",(stack)); Inst64++; } } catch(e) {}
    stack.functionDisplayName;
    "checkRecursion";
try { if (Inst65 <= 1000 && typeof (stack.asyncParent) != "undefined") {_RecordType("<1735,1752,65>",(stack.asyncParent)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (stack) != "undefined") {_RecordType("<1735,1740,65>",(stack)); Inst66++; } } catch(e) {}
    stack.asyncParent;
    null;
try { if (Inst68 <= 1000 && typeof (stack.parent) != "undefined") {_RecordType("<1776,1788,67>",(stack.parent)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (stack) != "undefined") {_RecordType("<1776,1781,67>",(stack)); Inst69++; } } catch(e) {}
    stack = stack.parent;
try { if (Inst67 <= 1000 && typeof (stack) != "undefined") {_RecordType("<1768,1773,67>",(stack)); Inst67++; } } catch(e) {}
  } else {
try { if (Inst70 <= 1000 && typeof (stack) != "undefined") {_RecordType("<1805,1810,69>",(stack)); Inst70++; } } catch(e) {}
    stack;
    null;
  } // We should be at the top frame, which is the test script itself.


try { if (Inst71 <= 1000 && typeof (limit) != "undefined") {_RecordType("<1901,1906,74>",(limit)); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (n) != "undefined") {_RecordType("<1909,1910,74>",(n)); Inst72++; } } catch(e) {}
  if (limit > n + 2) {
try { if (Inst73 <= 1000 && typeof (stack.functionDisplayName) != "undefined") {_RecordType("<1922,1947,75>",(stack.functionDisplayName)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (stack) != "undefined") {_RecordType("<1922,1927,75>",(stack)); Inst74++; } } catch(e) {}
    stack.functionDisplayName;
    null;
try { if (Inst75 <= 1000 && typeof (stack.asyncParent) != "undefined") {_RecordType("<1963,1980,77>",(stack.asyncParent)); Inst75++; } } catch(e) {}try { if (Inst76 <= 1000 && typeof (stack) != "undefined") {_RecordType("<1963,1968,77>",(stack)); Inst76++; } } catch(e) {}
    stack.asyncParent;
    null;
try { if (Inst77 <= 1000 && typeof (stack.parent) != "undefined") {_RecordType("<1996,2008,79>",(stack.parent)); Inst77++; } } catch(e) {}try { if (Inst78 <= 1000 && typeof (stack) != "undefined") {_RecordType("<1996,2001,79>",(stack)); Inst78++; } } catch(e) {}
    stack.parent;
    null;
  } else {
try { if (Inst79 <= 1000 && typeof (stack) != "undefined") {_RecordType("<2035,2040,82>",(stack)); Inst79++; } } catch(e) {}
    stack;
    null;
  }
} // Check capturing with no limit, which should still apply a default limit.


try { if (Inst80 <= 1000 && typeof (checkRecursion) != "undefined") {_RecordType("<2136,2150,88>",(checkRecursion)); Inst80++; } } catch(e) {}
checkRecursion(0, 0);
try { if (Inst81 <= 1000 && typeof (checkRecursion) != "undefined") {_RecordType("<2158,2172,89>",(checkRecursion)); Inst81++; } } catch(e) {}
checkRecursion(1, 0);
try { if (Inst82 <= 1000 && typeof (checkRecursion) != "undefined") {_RecordType("<2180,2194,90>",(checkRecursion)); Inst82++; } } catch(e) {}
checkRecursion(2, 0);
try { if (Inst83 <= 1000 && typeof (checkRecursion) != "undefined") {_RecordType("<2202,2216,91>",(checkRecursion)); Inst83++; } } catch(e) {}try { if (Inst84 <= 1000 && typeof (defaultAsyncStackLimit) != "undefined") {_RecordType("<2217,2239,91>",(defaultAsyncStackLimit)); Inst84++; } } catch(e) {}
checkRecursion(defaultAsyncStackLimit - 10, 0);
try { if (Inst85 <= 1000 && typeof (checkRecursion) != "undefined") {_RecordType("<2250,2264,92>",(checkRecursion)); Inst85++; } } catch(e) {}try { if (Inst86 <= 1000 && typeof (defaultAsyncStackLimit) != "undefined") {_RecordType("<2265,2287,92>",(defaultAsyncStackLimit)); Inst86++; } } catch(e) {}
checkRecursion(defaultAsyncStackLimit, 0);
try { if (Inst87 <= 1000 && typeof (checkRecursion) != "undefined") {_RecordType("<2293,2307,93>",(checkRecursion)); Inst87++; } } catch(e) {}try { if (Inst88 <= 1000 && typeof (defaultAsyncStackLimit) != "undefined") {_RecordType("<2308,2330,93>",(defaultAsyncStackLimit)); Inst88++; } } catch(e) {}
checkRecursion(defaultAsyncStackLimit + 10, 0); // Limit of 1 frame.

try { if (Inst89 <= 1000 && typeof (checkRecursion) != "undefined") {_RecordType("<2363,2377,95>",(checkRecursion)); Inst89++; } } catch(e) {}
checkRecursion(0, 1);
try { if (Inst90 <= 1000 && typeof (checkRecursion) != "undefined") {_RecordType("<2385,2399,96>",(checkRecursion)); Inst90++; } } catch(e) {}
checkRecursion(1, 1);
try { if (Inst91 <= 1000 && typeof (checkRecursion) != "undefined") {_RecordType("<2407,2421,97>",(checkRecursion)); Inst91++; } } catch(e) {}
checkRecursion(2, 1); // Limit of 2 frames.

try { if (Inst92 <= 1000 && typeof (checkRecursion) != "undefined") {_RecordType("<2452,2466,99>",(checkRecursion)); Inst92++; } } catch(e) {}
checkRecursion(0, 2);
try { if (Inst93 <= 1000 && typeof (checkRecursion) != "undefined") {_RecordType("<2474,2488,100>",(checkRecursion)); Inst93++; } } catch(e) {}
checkRecursion(1, 2);
try { if (Inst94 <= 1000 && typeof (checkRecursion) != "undefined") {_RecordType("<2496,2510,101>",(checkRecursion)); Inst94++; } } catch(e) {}
checkRecursion(2, 2); // Limit of 3 frames.

try { if (Inst95 <= 1000 && typeof (checkRecursion) != "undefined") {_RecordType("<2541,2555,103>",(checkRecursion)); Inst95++; } } catch(e) {}
checkRecursion(0, 3);
try { if (Inst96 <= 1000 && typeof (checkRecursion) != "undefined") {_RecordType("<2563,2577,104>",(checkRecursion)); Inst96++; } } catch(e) {}
checkRecursion(1, 3);
try { if (Inst97 <= 1000 && typeof (checkRecursion) != "undefined") {_RecordType("<2585,2599,105>",(checkRecursion)); Inst97++; } } catch(e) {}
checkRecursion(2, 3); // Limit higher than the default limit.

try { if (Inst98 <= 1000 && typeof (checkRecursion) != "undefined") {_RecordType("<2648,2662,107>",(checkRecursion)); Inst98++; } } catch(e) {}try { if (Inst99 <= 1000 && typeof (defaultAsyncStackLimit) != "undefined") {_RecordType("<2663,2685,107>",(defaultAsyncStackLimit)); Inst99++; } } catch(e) {}try { if (Inst100 <= 1000 && typeof (defaultAsyncStackLimit) != "undefined") {_RecordType("<2692,2714,107>",(defaultAsyncStackLimit)); Inst100++; } } catch(e) {}
checkRecursion(defaultAsyncStackLimit + 10, defaultAsyncStackLimit + 10);
try { if (Inst101 <= 1000 && typeof (checkRecursion) != "undefined") {_RecordType("<2722,2736,108>",(checkRecursion)); Inst101++; } } catch(e) {}try { if (Inst102 <= 1000 && typeof (defaultAsyncStackLimit) != "undefined") {_RecordType("<2737,2759,108>",(defaultAsyncStackLimit)); Inst102++; } } catch(e) {}try { if (Inst103 <= 1000 && typeof (defaultAsyncStackLimit) != "undefined") {_RecordType("<2766,2788,108>",(defaultAsyncStackLimit)); Inst103++; } } catch(e) {}
checkRecursion(defaultAsyncStackLimit + 11, defaultAsyncStackLimit + 10);
try { if (Inst104 <= 1000 && typeof (checkRecursion) != "undefined") {_RecordType("<2796,2810,109>",(checkRecursion)); Inst104++; } } catch(e) {}try { if (Inst105 <= 1000 && typeof (defaultAsyncStackLimit) != "undefined") {_RecordType("<2811,2833,109>",(defaultAsyncStackLimit)); Inst105++; } } catch(e) {}try { if (Inst106 <= 1000 && typeof (defaultAsyncStackLimit) != "undefined") {_RecordType("<2840,2862,109>",(defaultAsyncStackLimit)); Inst106++; } } catch(e) {}
checkRecursion(defaultAsyncStackLimit + 12, defaultAsyncStackLimit + 10);

