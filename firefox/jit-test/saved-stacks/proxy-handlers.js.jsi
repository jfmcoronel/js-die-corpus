var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Test that we can save stacks with proxy handler frames.
try { if (Inst1 <= 1000 && typeof (iife) != "undefined") {_RecordType("<82,86,2>",(iife)); Inst1++; } } catch(e) {}
const stack = function iife() {
try { if (Inst2 <= 1000 && typeof (new Proxy({}, {
    get: function get(t, n, r) {
      return saveStack();
    }
  }).stack) != "undefined") {_RecordType("<100,191,3>",(new Proxy({}, {
    get: function get(t, n, r) {
      return saveStack();
    }
  }).stack)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<104,109,3>",(Proxy)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (get) != "undefined") {_RecordType("<134,137,4>",(get)); Inst4++; } } catch(e) {}
  return new Proxy({}, {
    get: function get(t, n, r) {
try { if (Inst5 <= 1000 && typeof (t) != "undefined") {_RecordType("<138,139,4>",(t)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (n) != "undefined") {_RecordType("<141,142,4>",(n)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (r) != "undefined") {_RecordType("<144,145,4>",(r)); Inst7++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (saveStack) != "undefined") {_RecordType("<162,171,5>",(saveStack)); Inst8++; } } catch(e) {}
      return saveStack();
    }
  }).stack;
}();
try { if (Inst0 <= 1000 && typeof (stack) != "undefined") {_RecordType("<65,70,2>",(stack)); Inst0++; } } catch(e) {}

try { if (Inst9 <= 1000 && typeof (stack.functionDisplayName) != "undefined") {_RecordType("<199,224,10>",(stack.functionDisplayName)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (stack) != "undefined") {_RecordType("<199,204,10>",(stack)); Inst10++; } } catch(e) {}
stack.functionDisplayName;
"get";
try { if (Inst11 <= 1000 && typeof (stack.parent.functionDisplayName) != "undefined") {_RecordType("<233,265,12>",(stack.parent.functionDisplayName)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (stack.parent) != "undefined") {_RecordType("<233,245,12>",(stack.parent)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (stack) != "undefined") {_RecordType("<233,238,12>",(stack)); Inst13++; } } catch(e) {}
stack.parent.functionDisplayName;
"iife";

