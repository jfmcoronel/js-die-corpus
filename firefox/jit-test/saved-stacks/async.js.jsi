var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Test calling a function using a previously captured stack as an async stack.
try { if (Inst0 <= 1000 && typeof (getAsyncStack) != "undefined") {_RecordType("<89,102,2>",(getAsyncStack)); Inst0++; } } catch(e) {}
function getAsyncStack() {
try { if (Inst1 <= 1000 && typeof (saveStack) != "undefined") {_RecordType("<116,125,3>",(saveStack)); Inst1++; } } catch(e) {}
  return saveStack();
} // asyncCause may contain non-ASCII characters.


try { if (Inst3 <= 1000 && typeof (String.fromCharCode) != "undefined") {_RecordType("<210,229,7>",(String.fromCharCode)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (String) != "undefined") {_RecordType("<210,216,7>",(String)); Inst4++; } } catch(e) {}
let testAsyncCause = "Tes" + String.fromCharCode(355) + "String";
try { if (Inst2 <= 1000 && typeof (testAsyncCause) != "undefined") {_RecordType("<185,199,7>",(testAsyncCause)); Inst2++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (callFunctionWithAsyncStack) != "undefined") {_RecordType("<247,273,8>",(callFunctionWithAsyncStack)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (asyncCallback) != "undefined") {_RecordType("<283,296,8>",(asyncCallback)); Inst6++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (getAsyncStack) != "undefined") {_RecordType("<720,733,28>",(getAsyncStack)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (testAsyncCause) != "undefined") {_RecordType("<737,751,28>",(testAsyncCause)); Inst38++; } } catch(e) {}
callFunctionWithAsyncStack(function asyncCallback() {
try { if (Inst8 <= 1000 && typeof (saveStack) != "undefined") {_RecordType("<315,324,9>",(saveStack)); Inst8++; } } catch(e) {}
  let stack = saveStack();
try { if (Inst7 <= 1000 && typeof (stack) != "undefined") {_RecordType("<307,312,9>",(stack)); Inst7++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (stack.functionDisplayName) != "undefined") {_RecordType("<330,355,10>",(stack.functionDisplayName)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (stack) != "undefined") {_RecordType("<330,335,10>",(stack)); Inst10++; } } catch(e) {}
  stack.functionDisplayName;
  "asyncCallback";
try { if (Inst11 <= 1000 && typeof (stack.parent) != "undefined") {_RecordType("<378,390,12>",(stack.parent)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (stack) != "undefined") {_RecordType("<378,383,12>",(stack)); Inst12++; } } catch(e) {}
  stack.parent;
  null;
try { if (Inst13 <= 1000 && typeof (stack.asyncCause) != "undefined") {_RecordType("<402,418,14>",(stack.asyncCause)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (stack) != "undefined") {_RecordType("<402,407,14>",(stack)); Inst14++; } } catch(e) {}
  stack.asyncCause;
  null;
try { if (Inst15 <= 1000 && typeof (stack.asyncParent.functionDisplayName) != "undefined") {_RecordType("<430,467,16>",(stack.asyncParent.functionDisplayName)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (stack.asyncParent) != "undefined") {_RecordType("<430,447,16>",(stack.asyncParent)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (stack) != "undefined") {_RecordType("<430,435,16>",(stack)); Inst17++; } } catch(e) {}
  stack.asyncParent.functionDisplayName;
  "getAsyncStack";
try { if (Inst18 <= 1000 && typeof (stack.asyncParent.asyncCause) != "undefined") {_RecordType("<490,518,18>",(stack.asyncParent.asyncCause)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (stack.asyncParent) != "undefined") {_RecordType("<490,507,18>",(stack.asyncParent)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (stack) != "undefined") {_RecordType("<490,495,18>",(stack)); Inst20++; } } catch(e) {}
  stack.asyncParent.asyncCause;
try { if (Inst21 <= 1000 && typeof (testAsyncCause) != "undefined") {_RecordType("<522,536,19>",(testAsyncCause)); Inst21++; } } catch(e) {}
  testAsyncCause;
try { if (Inst22 <= 1000 && typeof (stack.asyncParent.asyncParent) != "undefined") {_RecordType("<540,569,20>",(stack.asyncParent.asyncParent)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (stack.asyncParent) != "undefined") {_RecordType("<540,557,20>",(stack.asyncParent)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (stack) != "undefined") {_RecordType("<540,545,20>",(stack)); Inst24++; } } catch(e) {}
  stack.asyncParent.asyncParent;
  null;
try { if (Inst25 <= 1000 && typeof (stack.asyncParent.parent.asyncCause) != "undefined") {_RecordType("<581,616,22>",(stack.asyncParent.parent.asyncCause)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (stack.asyncParent.parent) != "undefined") {_RecordType("<581,605,22>",(stack.asyncParent.parent)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (stack.asyncParent) != "undefined") {_RecordType("<581,598,22>",(stack.asyncParent)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (stack) != "undefined") {_RecordType("<581,586,22>",(stack)); Inst28++; } } catch(e) {}
  stack.asyncParent.parent.asyncCause;
  null;
try { if (Inst29 <= 1000 && typeof (stack.asyncParent.parent.asyncParent) != "undefined") {_RecordType("<628,664,24>",(stack.asyncParent.parent.asyncParent)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (stack.asyncParent.parent) != "undefined") {_RecordType("<628,652,24>",(stack.asyncParent.parent)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (stack.asyncParent) != "undefined") {_RecordType("<628,645,24>",(stack.asyncParent)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (stack) != "undefined") {_RecordType("<628,633,24>",(stack)); Inst32++; } } catch(e) {}
  stack.asyncParent.parent.asyncParent;
  null;
try { if (Inst33 <= 1000 && typeof (stack.asyncParent.parent.parent) != "undefined") {_RecordType("<676,707,26>",(stack.asyncParent.parent.parent)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (stack.asyncParent.parent) != "undefined") {_RecordType("<676,700,26>",(stack.asyncParent.parent)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (stack.asyncParent) != "undefined") {_RecordType("<676,693,26>",(stack.asyncParent)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (stack) != "undefined") {_RecordType("<676,681,26>",(stack)); Inst36++; } } catch(e) {}
  stack.asyncParent.parent.parent;
  null;
}, getAsyncStack(), testAsyncCause);

