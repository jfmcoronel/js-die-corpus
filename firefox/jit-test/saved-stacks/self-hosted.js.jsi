var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Test that we can save stacks with self-hosted function frames in them.
const map = function () {
try { if (Inst1 <= 1000 && typeof ([3].map(n => saveStack()).pop) != "undefined") {_RecordType("<109,138,3>",([3].map(n => saveStack()).pop)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof ([3].map) != "undefined") {_RecordType("<109,116,3>",([3].map)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (n) != "undefined") {_RecordType("<117,118,3>",(n)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (saveStack) != "undefined") {_RecordType("<122,131,3>",(saveStack)); Inst4++; } } catch(e) {}
  return [3].map(n => saveStack()).pop();
}();
try { if (Inst0 <= 1000 && typeof (map) != "undefined") {_RecordType("<80,83,2>",(map)); Inst0++; } } catch(e) {}

try { if (Inst5 <= 1000 && typeof (map.parent.functionDisplayName) != "undefined") {_RecordType("<148,178,6>",(map.parent.functionDisplayName)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (map.parent) != "undefined") {_RecordType("<148,158,6>",(map.parent)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (map) != "undefined") {_RecordType("<148,151,6>",(map)); Inst7++; } } catch(e) {}
map.parent.functionDisplayName;
"map";
try { if (Inst8 <= 1000 && typeof (map.parent.source) != "undefined") {_RecordType("<187,204,8>",(map.parent.source)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (map.parent) != "undefined") {_RecordType("<187,197,8>",(map.parent)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (map) != "undefined") {_RecordType("<187,190,8>",(map)); Inst10++; } } catch(e) {}
map.parent.source;
"self-hosted";

const reduce = function () {
try { if (Inst12 <= 1000 && typeof ([3].reduce) != "undefined") {_RecordType("<260,270,12>",([3].reduce)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (saveStack) != "undefined") {_RecordType("<277,286,12>",(saveStack)); Inst13++; } } catch(e) {}
  return [3].reduce(() => saveStack(), 3);
}();
try { if (Inst11 <= 1000 && typeof (reduce) != "undefined") {_RecordType("<228,234,11>",(reduce)); Inst11++; } } catch(e) {}

try { if (Inst14 <= 1000 && typeof (reduce.parent.functionDisplayName) != "undefined") {_RecordType("<300,333,15>",(reduce.parent.functionDisplayName)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (reduce.parent) != "undefined") {_RecordType("<300,313,15>",(reduce.parent)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (reduce) != "undefined") {_RecordType("<300,306,15>",(reduce)); Inst16++; } } catch(e) {}
reduce.parent.functionDisplayName;
"reduce";
try { if (Inst17 <= 1000 && typeof (reduce.parent.source) != "undefined") {_RecordType("<345,365,17>",(reduce.parent.source)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (reduce.parent) != "undefined") {_RecordType("<345,358,17>",(reduce.parent)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (reduce) != "undefined") {_RecordType("<345,351,17>",(reduce)); Inst19++; } } catch(e) {}
reduce.parent.source;
"self-hosted";

const forEach = function () {
try { if (Inst24 <= 1000 && typeof (s) != "undefined") {_RecordType("<488,489,25>",(s)); Inst24++; } } catch(e) {}
  try {
try { if (Inst21 <= 1000 && typeof ([3].forEach) != "undefined") {_RecordType("<425,436,22>",([3].forEach)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (n) != "undefined") {_RecordType("<437,438,22>",(n)); Inst22++; } } catch(e) {}
    [3].forEach(n => {
try { if (Inst23 <= 1000 && typeof (saveStack) != "undefined") {_RecordType("<456,465,23>",(saveStack)); Inst23++; } } catch(e) {}
      throw saveStack();
    });
  } catch (s) {
try { if (Inst25 <= 1000 && typeof (s) != "undefined") {_RecordType("<504,505,26>",(s)); Inst25++; } } catch(e) {}
    return s;
  }
}();
try { if (Inst20 <= 1000 && typeof (forEach) != "undefined") {_RecordType("<389,396,20>",(forEach)); Inst20++; } } catch(e) {}

try { if (Inst26 <= 1000 && typeof (forEach.parent.functionDisplayName) != "undefined") {_RecordType("<517,551,30>",(forEach.parent.functionDisplayName)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (forEach.parent) != "undefined") {_RecordType("<517,531,30>",(forEach.parent)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (forEach) != "undefined") {_RecordType("<517,524,30>",(forEach)); Inst28++; } } catch(e) {}
forEach.parent.functionDisplayName;
"forEach";
try { if (Inst29 <= 1000 && typeof (forEach.parent.source) != "undefined") {_RecordType("<564,585,32>",(forEach.parent.source)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (forEach.parent) != "undefined") {_RecordType("<564,578,32>",(forEach.parent)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (forEach) != "undefined") {_RecordType("<564,571,32>",(forEach)); Inst31++; } } catch(e) {}
forEach.parent.source;
"self-hosted";

