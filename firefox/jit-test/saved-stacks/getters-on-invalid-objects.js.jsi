var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Test that you can't call the SavedFrame constructor and can only use
// SavedFrame's getters on SavedFrame instances.
try { if (Inst1 <= 1000 && typeof (Object.getPrototypeOf) != "undefined") {_RecordType("<133,154,3>",(Object.getPrototypeOf)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Object) != "undefined") {_RecordType("<133,139,3>",(Object)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (saveStack) != "undefined") {_RecordType("<155,164,3>",(saveStack)); Inst3++; } } catch(e) {}
let proto = Object.getPrototypeOf(saveStack()); // Can't create new SavedFrame instances by hand.
try { if (Inst0 <= 1000 && typeof (proto) != "undefined") {_RecordType("<125,130,3>",(proto)); Inst0++; } } catch(e) {}

try { if (Inst4 <= 1000 && typeof (print) != "undefined") {_RecordType("<220,225,5>",(print)); Inst4++; } } catch(e) {}
print("Testing constructor");

(() => {
try { if (Inst5 <= 1000 && typeof (proto.constructor) != "undefined") {_RecordType("<266,283,8>",(proto.constructor)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (proto) != "undefined") {_RecordType("<266,271,8>",(proto)); Inst6++; } } catch(e) {}
  new proto.constructor();
})();

try { if (Inst7 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<294,303,11>",(TypeError)); Inst7++; } } catch(e) {}
TypeError;

for (let p of ["source", "line", "column", "functionDisplayName", "parent"]) {
try { if (Inst8 <= 1000 && typeof (p) != "undefined") {_RecordType("<315,316,13>",(p)); Inst8++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (print) != "undefined") {_RecordType("<387,392,14>",(print)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (p) != "undefined") {_RecordType("<414,415,14>",(p)); Inst10++; } } catch(e) {}
  print("Testing getter: " + p); // The getters shouldn't work on the prototype.

try { if (Inst11 <= 1000 && typeof (proto[p]) != "undefined") {_RecordType("<476,484,16>",(proto[p])); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (proto) != "undefined") {_RecordType("<476,481,16>",(proto)); Inst12++; } } catch(e) {}
  (() => proto[p])();

try { if (Inst13 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<492,501,18>",(TypeError)); Inst13++; } } catch(e) {}
  TypeError;
  // Nor should they work on random objects.
  let o = {};
try { if (Inst14 <= 1000 && typeof (o) != "undefined") {_RecordType("<554,555,20>",(o)); Inst14++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<564,585,21>",(Object.defineProperty)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Object) != "undefined") {_RecordType("<564,570,21>",(Object)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (o) != "undefined") {_RecordType("<586,587,21>",(o)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (p) != "undefined") {_RecordType("<589,590,21>",(p)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<592,623,21>",(Object.getOwnPropertyDescriptor)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (Object) != "undefined") {_RecordType("<592,598,21>",(Object)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (proto) != "undefined") {_RecordType("<624,629,21>",(proto)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (p) != "undefined") {_RecordType("<631,632,21>",(p)); Inst22++; } } catch(e) {}
  Object.defineProperty(o, p, Object.getOwnPropertyDescriptor(proto, p));

try { if (Inst23 <= 1000 && typeof (o[p]) != "undefined") {_RecordType("<646,650,23>",(o[p])); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (o) != "undefined") {_RecordType("<646,647,23>",(o)); Inst24++; } } catch(e) {}
  (() => o[p])();

try { if (Inst25 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<658,667,25>",(TypeError)); Inst25++; } } catch(e) {}
  TypeError;
}

