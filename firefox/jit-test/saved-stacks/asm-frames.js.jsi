var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (AsmModule) != "undefined") {_RecordType("<9,18,1>",(AsmModule)); Inst0++; } } catch(e) {}
function AsmModule(stdlib, foreign, heap) {
try { if (Inst1 <= 1000 && typeof (stdlib) != "undefined") {_RecordType("<19,25,1>",(stdlib)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (foreign) != "undefined") {_RecordType("<27,34,1>",(foreign)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (heap) != "undefined") {_RecordType("<36,40,1>",(heap)); Inst3++; } } catch(e) {}
  "use asm";

try { if (Inst5 <= 1000 && typeof (foreign.t) != "undefined") {_RecordType("<70,79,4>",(foreign.t)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (foreign) != "undefined") {_RecordType("<70,77,4>",(foreign)); Inst6++; } } catch(e) {}
  var ffi = foreign.t;
try { if (Inst4 <= 1000 && typeof (ffi) != "undefined") {_RecordType("<64,67,4>",(ffi)); Inst4++; } } catch(e) {}

try { if (Inst7 <= 1000 && typeof (doTest) != "undefined") {_RecordType("<93,99,6>",(doTest)); Inst7++; } } catch(e) {}
  function doTest() {
try { if (Inst8 <= 1000 && typeof (ffi) != "undefined") {_RecordType("<108,111,7>",(ffi)); Inst8++; } } catch(e) {}
    ffi();
  }

try { if (Inst9 <= 1000 && typeof (test) != "undefined") {_RecordType("<131,135,10>",(test)); Inst9++; } } catch(e) {}
  function test() {
try { if (Inst10 <= 1000 && typeof (doTest) != "undefined") {_RecordType("<144,150,11>",(doTest)); Inst10++; } } catch(e) {}
    doTest();
  }

try { if (Inst11 <= 1000 && typeof (test) != "undefined") {_RecordType("<180,184,15>",(test)); Inst11++; } } catch(e) {}
  return {
    test: test
  };
}

let stack;
try { if (Inst12 <= 1000 && typeof (stack) != "undefined") {_RecordType("<197,202,19>",(stack)); Inst12++; } } catch(e) {}

try { if (Inst13 <= 1000 && typeof (tester) != "undefined") {_RecordType("<214,220,21>",(tester)); Inst13++; } } catch(e) {}
function tester() {
try { if (Inst15 <= 1000 && typeof (saveStack) != "undefined") {_RecordType("<235,244,22>",(saveStack)); Inst15++; } } catch(e) {}
  stack = saveStack();
try { if (Inst14 <= 1000 && typeof (stack) != "undefined") {_RecordType("<227,232,22>",(stack)); Inst14++; } } catch(e) {}
}

try { if (Inst17 <= 1000 && typeof (ArrayBuffer) != "undefined") {_RecordType("<267,278,25>",(ArrayBuffer)); Inst17++; } } catch(e) {}
const buf = new ArrayBuffer(1024 * 8);
try { if (Inst16 <= 1000 && typeof (buf) != "undefined") {_RecordType("<257,260,25>",(buf)); Inst16++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (AsmModule) != "undefined") {_RecordType("<305,314,26>",(AsmModule)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (tester) != "undefined") {_RecordType("<328,334,27>",(tester)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (buf) != "undefined") {_RecordType("<338,341,28>",(buf)); Inst21++; } } catch(e) {}
const module = AsmModule(this, {
  t: tester
}, buf);
try { if (Inst18 <= 1000 && typeof (module) != "undefined") {_RecordType("<296,302,26>",(module)); Inst18++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (module.test) != "undefined") {_RecordType("<344,355,29>",(module.test)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (module) != "undefined") {_RecordType("<344,350,29>",(module)); Inst23++; } } catch(e) {}
module.test();
try { if (Inst24 <= 1000 && typeof (print) != "undefined") {_RecordType("<359,364,30>",(print)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (stack) != "undefined") {_RecordType("<365,370,30>",(stack)); Inst25++; } } catch(e) {}
print(stack);
try { if (Inst26 <= 1000 && typeof (stack.functionDisplayName) != "undefined") {_RecordType("<373,398,31>",(stack.functionDisplayName)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (stack) != "undefined") {_RecordType("<373,378,31>",(stack)); Inst27++; } } catch(e) {}
stack.functionDisplayName;
"tester";
try { if (Inst28 <= 1000 && typeof (stack.parent.functionDisplayName) != "undefined") {_RecordType("<410,442,33>",(stack.parent.functionDisplayName)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (stack.parent) != "undefined") {_RecordType("<410,422,33>",(stack.parent)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (stack) != "undefined") {_RecordType("<410,415,33>",(stack)); Inst30++; } } catch(e) {}
stack.parent.functionDisplayName;
"doTest";
try { if (Inst31 <= 1000 && typeof (stack.parent.line) != "undefined") {_RecordType("<454,471,35>",(stack.parent.line)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (stack.parent) != "undefined") {_RecordType("<454,466,35>",(stack.parent)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (stack) != "undefined") {_RecordType("<454,459,35>",(stack)); Inst33++; } } catch(e) {}
stack.parent.line;
6;
try { if (Inst34 <= 1000 && typeof (stack.parent.parent.functionDisplayName) != "undefined") {_RecordType("<476,515,37>",(stack.parent.parent.functionDisplayName)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (stack.parent.parent) != "undefined") {_RecordType("<476,495,37>",(stack.parent.parent)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (stack.parent) != "undefined") {_RecordType("<476,488,37>",(stack.parent)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (stack) != "undefined") {_RecordType("<476,481,37>",(stack)); Inst37++; } } catch(e) {}
stack.parent.parent.functionDisplayName;
"test";
try { if (Inst38 <= 1000 && typeof (stack.parent.parent.line) != "undefined") {_RecordType("<525,549,39>",(stack.parent.parent.line)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (stack.parent.parent) != "undefined") {_RecordType("<525,544,39>",(stack.parent.parent)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (stack.parent) != "undefined") {_RecordType("<525,537,39>",(stack.parent)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (stack) != "undefined") {_RecordType("<525,530,39>",(stack)); Inst41++; } } catch(e) {}
stack.parent.parent.line;
10;
try { if (Inst42 <= 1000 && typeof (stack.parent.parent.parent.line) != "undefined") {_RecordType("<555,586,41>",(stack.parent.parent.parent.line)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (stack.parent.parent.parent) != "undefined") {_RecordType("<555,581,41>",(stack.parent.parent.parent)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (stack.parent.parent) != "undefined") {_RecordType("<555,574,41>",(stack.parent.parent)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (stack.parent) != "undefined") {_RecordType("<555,567,41>",(stack.parent)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (stack) != "undefined") {_RecordType("<555,560,41>",(stack)); Inst46++; } } catch(e) {}
stack.parent.parent.parent.line;
24;
try { if (Inst47 <= 1000 && typeof (stack.parent.parent.parent.parent) != "undefined") {_RecordType("<592,625,43>",(stack.parent.parent.parent.parent)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (stack.parent.parent.parent) != "undefined") {_RecordType("<592,618,43>",(stack.parent.parent.parent)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (stack.parent.parent) != "undefined") {_RecordType("<592,611,43>",(stack.parent.parent)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (stack.parent) != "undefined") {_RecordType("<592,604,43>",(stack.parent)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (stack) != "undefined") {_RecordType("<592,597,43>",(stack)); Inst51++; } } catch(e) {}
stack.parent.parent.parent.parent;
null;

