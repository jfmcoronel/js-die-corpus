var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (test_mix) != "undefined") {_RecordType("<0,8,1>",(test_mix)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (all_flags) != "undefined") {_RecordType("<14,23,1>",(all_flags)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Atom) != "undefined") {_RecordType("<25,29,1>",(Atom)); Inst2++; } } catch(e) {}
test_mix("a", all_flags, Atom("a"));
try { if (Inst3 <= 1000 && typeof (test_mix) != "undefined") {_RecordType("<37,45,2>",(test_mix)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (all_flags) != "undefined") {_RecordType("<71,80,2>",(all_flags)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Atom) != "undefined") {_RecordType("<82,86,2>",(Atom)); Inst5++; } } catch(e) {}
test_mix("abc\u3042\u3044\u3046", all_flags, Atom("abc\u3042\u3044\u3046")); // raw brace

try { if (Inst6 <= 1000 && typeof (test) != "undefined") {_RecordType("<128,132,4>",(test)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (no_unicode_flags) != "undefined") {_RecordType("<138,154,4>",(no_unicode_flags)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Atom) != "undefined") {_RecordType("<156,160,4>",(Atom)); Inst8++; } } catch(e) {}
test("{", no_unicode_flags, Atom("{"));
try { if (Inst9 <= 1000 && typeof (test) != "undefined") {_RecordType("<168,172,5>",(test)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (no_unicode_flags) != "undefined") {_RecordType("<179,195,5>",(no_unicode_flags)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Atom) != "undefined") {_RecordType("<197,201,5>",(Atom)); Inst11++; } } catch(e) {}
test("{a", no_unicode_flags, Atom("{a"));
try { if (Inst12 <= 1000 && typeof (test) != "undefined") {_RecordType("<210,214,6>",(test)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (no_unicode_flags) != "undefined") {_RecordType("<222,238,6>",(no_unicode_flags)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Atom) != "undefined") {_RecordType("<240,244,6>",(Atom)); Inst14++; } } catch(e) {}
test("a{b", no_unicode_flags, Atom("a{b"));
try { if (Inst15 <= 1000 && typeof (test) != "undefined") {_RecordType("<254,258,7>",(test)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (no_unicode_flags) != "undefined") {_RecordType("<264,280,7>",(no_unicode_flags)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Atom) != "undefined") {_RecordType("<282,286,7>",(Atom)); Inst17++; } } catch(e) {}
test("}", no_unicode_flags, Atom("}"));
try { if (Inst18 <= 1000 && typeof (test) != "undefined") {_RecordType("<294,298,8>",(test)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (no_unicode_flags) != "undefined") {_RecordType("<305,321,8>",(no_unicode_flags)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (Atom) != "undefined") {_RecordType("<323,327,8>",(Atom)); Inst20++; } } catch(e) {}
test("}a", no_unicode_flags, Atom("}a"));
try { if (Inst21 <= 1000 && typeof (test) != "undefined") {_RecordType("<336,340,9>",(test)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (no_unicode_flags) != "undefined") {_RecordType("<348,364,9>",(no_unicode_flags)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Atom) != "undefined") {_RecordType("<366,370,9>",(Atom)); Inst23++; } } catch(e) {}
test("a}b", no_unicode_flags, Atom("a}b")); // raw surrogate pair

try { if (Inst24 <= 1000 && typeof (test) != "undefined") {_RecordType("<403,407,11>",(test)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (unicode_flags) != "undefined") {_RecordType("<426,439,11>",(unicode_flags)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Text) != "undefined") {_RecordType("<441,445,11>",(Text)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (Atom) != "undefined") {_RecordType("<447,451,11>",(Atom)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (Atom) != "undefined") {_RecordType("<458,462,11>",(Atom)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (Atom) != "undefined") {_RecordType("<480,484,11>",(Atom)); Inst29++; } } catch(e) {}
test("X\uD83D\uDC38Y", unicode_flags, Text([Atom("X"), Atom("\uD83D\uDC38"), Atom("Y")]));
try { if (Inst30 <= 1000 && typeof (test) != "undefined") {_RecordType("<494,498,12>",(test)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (unicode_flags) != "undefined") {_RecordType("<511,524,12>",(unicode_flags)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (Alternative) != "undefined") {_RecordType("<526,537,12>",(Alternative)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (Atom) != "undefined") {_RecordType("<539,543,12>",(Atom)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (Alternative) != "undefined") {_RecordType("<550,561,12>",(Alternative)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (Atom) != "undefined") {_RecordType("<563,567,12>",(Atom)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (NegativeLookahead) != "undefined") {_RecordType("<579,596,12>",(NegativeLookahead)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (CharacterClass) != "undefined") {_RecordType("<597,611,12>",(CharacterClass)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (Atom) != "undefined") {_RecordType("<640,644,12>",(Atom)); Inst38++; } } catch(e) {}
test("X\uD83DY", unicode_flags, Alternative([Atom("X"), Alternative([Atom("\uD83D"), NegativeLookahead(CharacterClass([["\uDC00", "\uDFFF"]]))]), Atom("Y")]));
try { if (Inst39 <= 1000 && typeof (test) != "undefined") {_RecordType("<654,658,13>",(test)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (unicode_flags) != "undefined") {_RecordType("<671,684,13>",(unicode_flags)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (Alternative) != "undefined") {_RecordType("<686,697,13>",(Alternative)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (Atom) != "undefined") {_RecordType("<699,703,13>",(Atom)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (Alternative) != "undefined") {_RecordType("<710,721,13>",(Alternative)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (Assertion) != "undefined") {_RecordType("<723,732,13>",(Assertion)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (Atom) != "undefined") {_RecordType("<762,766,13>",(Atom)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (Atom) != "undefined") {_RecordType("<780,784,13>",(Atom)); Inst46++; } } catch(e) {}
test("X\uDC38Y", unicode_flags, Alternative([Atom("X"), Alternative([Assertion("NOT_AFTER_LEAD_SURROGATE"), Atom("\uDC38")]), Atom("Y")]));

