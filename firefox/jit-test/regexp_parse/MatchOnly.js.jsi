var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Leading and trailing .* are ignored if match_only==true.
try { if (Inst0 <= 1000 && typeof (test_match_only) != "undefined") {_RecordType("<60,75,2>",(test_match_only)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (all_flags) != "undefined") {_RecordType("<85,94,2>",(all_flags)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Atom) != "undefined") {_RecordType("<96,100,2>",(Atom)); Inst2++; } } catch(e) {}
test_match_only(".*abc", all_flags, Atom("abc"));
try { if (Inst3 <= 1000 && typeof (test_match_only) != "undefined") {_RecordType("<110,125,3>",(test_match_only)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (all_flags) != "undefined") {_RecordType("<135,144,3>",(all_flags)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Atom) != "undefined") {_RecordType("<146,150,3>",(Atom)); Inst5++; } } catch(e) {}
test_match_only("abc.*", all_flags, Atom("abc"));
try { if (Inst6 <= 1000 && typeof (test_match_only) != "undefined") {_RecordType("<160,175,4>",(test_match_only)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (no_unicode_flags) != "undefined") {_RecordType("<186,202,4>",(no_unicode_flags)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Alternative) != "undefined") {_RecordType("<204,215,4>",(Alternative)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Quantifier) != "undefined") {_RecordType("<217,227,4>",(Quantifier)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (kInfinity) != "undefined") {_RecordType("<231,240,4>",(kInfinity)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (CharacterClass) != "undefined") {_RecordType("<256,270,4>",(CharacterClass)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Atom) != "undefined") {_RecordType("<363,367,4>",(Atom)); Inst12++; } } catch(e) {}
test_match_only(".*?abc", no_unicode_flags, Alternative([Quantifier(0, kInfinity, "NON_GREEDY", CharacterClass([["\u0000", "\u0009"], ["\u000b", "\u000c"], ["\u000e", "\u2027"], ["\u202A", "\uFFFF"]])), Atom("abc")]));
try { if (Inst13 <= 1000 && typeof (test_match_only) != "undefined") {_RecordType("<379,394,5>",(test_match_only)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (unicode_flags) != "undefined") {_RecordType("<405,418,5>",(unicode_flags)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Alternative) != "undefined") {_RecordType("<420,431,5>",(Alternative)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Quantifier) != "undefined") {_RecordType("<433,443,5>",(Quantifier)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (kInfinity) != "undefined") {_RecordType("<447,456,5>",(kInfinity)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (AllSurrogateAndCharacterClass) != "undefined") {_RecordType("<472,501,5>",(AllSurrogateAndCharacterClass)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Atom) != "undefined") {_RecordType("<616,620,5>",(Atom)); Inst19++; } } catch(e) {}
test_match_only(".*?abc", unicode_flags, Alternative([Quantifier(0, kInfinity, "NON_GREEDY", AllSurrogateAndCharacterClass([["\u0000", "\u0009"], ["\u000b", "\u000c"], ["\u000e", "\u2027"], ["\u202A", "\uD7FF"], ["\uE000", "\uFFFF"]])), Atom("abc")]));

