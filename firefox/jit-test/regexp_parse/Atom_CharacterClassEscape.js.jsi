var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (test_mix) != "undefined") {_RecordType("<0,8,1>",(test_mix)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (all_flags) != "undefined") {_RecordType("<16,25,1>",(all_flags)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (CharacterClass) != "undefined") {_RecordType("<27,41,1>",(CharacterClass)); Inst2++; } } catch(e) {}
test_mix("\\d", all_flags, CharacterClass([["0", "9"]]));
try { if (Inst3 <= 1000 && typeof (test_mix) != "undefined") {_RecordType("<58,66,2>",(test_mix)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (no_unicode_flags) != "undefined") {_RecordType("<74,90,2>",(no_unicode_flags)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (CharacterClass) != "undefined") {_RecordType("<92,106,2>",(CharacterClass)); Inst5++; } } catch(e) {}
test_mix("\\D", no_unicode_flags, CharacterClass([["\u0000", "/"], [":", "\uFFFF"]]));
try { if (Inst6 <= 1000 && typeof (test_mix) != "undefined") {_RecordType("<145,153,3>",(test_mix)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (unicode_flags) != "undefined") {_RecordType("<161,174,3>",(unicode_flags)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (AllSurrogateAndCharacterClass) != "undefined") {_RecordType("<176,205,3>",(AllSurrogateAndCharacterClass)); Inst8++; } } catch(e) {}
test_mix("\\D", unicode_flags, AllSurrogateAndCharacterClass([["\u0000", "/"], [":", "\uD7FF"], ["\uE000", "\uFFFF"]]));
try { if (Inst9 <= 1000 && typeof (test_mix) != "undefined") {_RecordType("<266,274,4>",(test_mix)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (all_flags) != "undefined") {_RecordType("<282,291,4>",(all_flags)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (CharacterClass) != "undefined") {_RecordType("<293,307,4>",(CharacterClass)); Inst11++; } } catch(e) {}
test_mix("\\s", all_flags, CharacterClass([["\t", "\r"], [" ", " "], ["\u00A0", "\u00A0"], ["\u1680", "\u1680"], ["\u2000", "\u200A"], ["\u2028", "\u2029"], ["\u202F", "\u202F"], ["\u205F", "\u205F"], ["\u3000", "\u3000"], ["\uFEFF", "\uFEFF"]]));
try { if (Inst12 <= 1000 && typeof (test_mix) != "undefined") {_RecordType("<514,522,5>",(test_mix)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (no_unicode_flags) != "undefined") {_RecordType("<530,546,5>",(no_unicode_flags)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (CharacterClass) != "undefined") {_RecordType("<548,562,5>",(CharacterClass)); Inst14++; } } catch(e) {}
test_mix("\\S", no_unicode_flags, CharacterClass([["\u0000", "\u0008"], ["\u000E", "\u001F"], ["!", "\u009F"], ["\u00A1", "\u167F"], ["\u1681", "\u1FFF"], ["\u200B", "\u2027"], ["\u202A", "\u202E"], ["\u2030", "\u205E"], ["\u2060", "\u2FFF"], ["\u3001", "\uFEFE"], ["\uFF00", "\uFFFF"]]));
try { if (Inst15 <= 1000 && typeof (test_mix) != "undefined") {_RecordType("<804,812,6>",(test_mix)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (unicode_flags) != "undefined") {_RecordType("<820,833,6>",(unicode_flags)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (AllSurrogateAndCharacterClass) != "undefined") {_RecordType("<835,864,6>",(AllSurrogateAndCharacterClass)); Inst17++; } } catch(e) {}
test_mix("\\S", unicode_flags, AllSurrogateAndCharacterClass([["\u0000", "\u0008"], ["\u000E", "\u001F"], ["!", "\u009F"], ["\u00A1", "\u167F"], ["\u1681", "\u1FFF"], ["\u200B", "\u2027"], ["\u202A", "\u202E"], ["\u2030", "\u205E"], ["\u2060", "\u2FFF"], ["\u3001", "\uD7FF"], ["\uE000", "\uFEFE"], ["\uFF00", "\uFFFF"]]));
try { if (Inst18 <= 1000 && typeof (test_mix) != "undefined") {_RecordType("<1128,1136,7>",(test_mix)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (no_unicode_flags) != "undefined") {_RecordType("<1144,1160,7>",(no_unicode_flags)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (CharacterClass) != "undefined") {_RecordType("<1162,1176,7>",(CharacterClass)); Inst20++; } } catch(e) {}
test_mix("\\w", no_unicode_flags, CharacterClass([["0", "9"], ["A", "Z"], ["_", "_"], ["a", "z"]]));
try { if (Inst21 <= 1000 && typeof (test_mix) != "undefined") {_RecordType("<1229,1237,8>",(test_mix)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (CharacterClass) != "undefined") {_RecordType("<1258,1272,8>",(CharacterClass)); Inst22++; } } catch(e) {}
test_mix("\\w", ["u", "mu"], CharacterClass([["0", "9"], ["A", "Z"], ["_", "_"], ["a", "z"]]));
try { if (Inst23 <= 1000 && typeof (test_mix) != "undefined") {_RecordType("<1325,1333,9>",(test_mix)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (CharacterClass) != "undefined") {_RecordType("<1356,1370,9>",(CharacterClass)); Inst24++; } } catch(e) {}
test_mix("\\w", ["iu", "imu"], CharacterClass([["0", "9"], ["A", "Z"], ["_", "_"], ["a", "z"], ["\u017F", "\u017F"], ["\u212A", "\u212A"]]));
try { if (Inst25 <= 1000 && typeof (test_mix) != "undefined") {_RecordType("<1467,1475,10>",(test_mix)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (no_unicode_flags) != "undefined") {_RecordType("<1483,1499,10>",(no_unicode_flags)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (CharacterClass) != "undefined") {_RecordType("<1501,1515,10>",(CharacterClass)); Inst27++; } } catch(e) {}
test_mix("\\W", no_unicode_flags, CharacterClass([["\u0000", "/"], [":", "@"], ["[", "^"], ["`", "`"], ["{", "\uFFFF"]]));
try { if (Inst28 <= 1000 && typeof (test_mix) != "undefined") {_RecordType("<1590,1598,11>",(test_mix)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (AllSurrogateAndCharacterClass) != "undefined") {_RecordType("<1619,1648,11>",(AllSurrogateAndCharacterClass)); Inst29++; } } catch(e) {}
test_mix("\\W", ["u", "mu"], AllSurrogateAndCharacterClass([["\u0000", "/"], [":", "@"], ["[", "^"], ["`", "`"], ["{", "\uD7FF"], ["\uE000", "\uFFFF"]]));
try { if (Inst30 <= 1000 && typeof (test_mix) != "undefined") {_RecordType("<1745,1753,12>",(test_mix)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (AllSurrogateAndCharacterClass) != "undefined") {_RecordType("<1776,1805,12>",(AllSurrogateAndCharacterClass)); Inst31++; } } catch(e) {}
test_mix("\\W", ["iu", "imu"], AllSurrogateAndCharacterClass([["\u0000", "/"], [":", "@"], ["[", "^"], ["`", "`"], ["{", "\u017E"], ["\u0180", "\u2129"], ["\u212B", "\uD7FF"], ["\uE000", "\uFFFF"]]));

