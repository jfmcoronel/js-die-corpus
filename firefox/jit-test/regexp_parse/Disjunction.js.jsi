var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (test) != "undefined") {_RecordType("<0,4,1>",(test)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (all_flags) != "undefined") {_RecordType("<17,26,1>",(all_flags)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Disjunction) != "undefined") {_RecordType("<28,39,1>",(Disjunction)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Atom) != "undefined") {_RecordType("<41,45,1>",(Atom)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Atom) != "undefined") {_RecordType("<52,56,1>",(Atom)); Inst4++; } } catch(e) {}
test("a|\u3042", all_flags, Disjunction([Atom("a"), Atom("\u3042")]));
try { if (Inst5 <= 1000 && typeof (test) != "undefined") {_RecordType("<71,75,2>",(test)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (all_flags) != "undefined") {_RecordType("<92,101,2>",(all_flags)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Disjunction) != "undefined") {_RecordType("<103,114,2>",(Disjunction)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Atom) != "undefined") {_RecordType("<116,120,2>",(Atom)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Atom) != "undefined") {_RecordType("<127,131,2>",(Atom)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Atom) != "undefined") {_RecordType("<143,147,2>",(Atom)); Inst10++; } } catch(e) {}
test("a|\u3042|abc", all_flags, Disjunction([Atom("a"), Atom("\u3042"), Atom("abc")]));
try { if (Inst11 <= 1000 && typeof (test) != "undefined") {_RecordType("<159,163,3>",(test)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (all_flags) != "undefined") {_RecordType("<169,178,3>",(all_flags)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Disjunction) != "undefined") {_RecordType("<180,191,3>",(Disjunction)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Empty) != "undefined") {_RecordType("<193,198,3>",(Empty)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Empty) != "undefined") {_RecordType("<202,207,3>",(Empty)); Inst15++; } } catch(e) {}
test("|", all_flags, Disjunction([Empty(), Empty()]));
try { if (Inst16 <= 1000 && typeof (test) != "undefined") {_RecordType("<214,218,4>",(test)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (all_flags) != "undefined") {_RecordType("<225,234,4>",(all_flags)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Disjunction) != "undefined") {_RecordType("<236,247,4>",(Disjunction)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Empty) != "undefined") {_RecordType("<249,254,4>",(Empty)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (Empty) != "undefined") {_RecordType("<258,263,4>",(Empty)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Empty) != "undefined") {_RecordType("<267,272,4>",(Empty)); Inst21++; } } catch(e) {}
test("||", all_flags, Disjunction([Empty(), Empty(), Empty()]));
try { if (Inst22 <= 1000 && typeof (test) != "undefined") {_RecordType("<279,283,5>",(test)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (all_flags) != "undefined") {_RecordType("<292,301,5>",(all_flags)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (Disjunction) != "undefined") {_RecordType("<303,314,5>",(Disjunction)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Atom) != "undefined") {_RecordType("<316,320,5>",(Atom)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Empty) != "undefined") {_RecordType("<329,334,5>",(Empty)); Inst26++; } } catch(e) {}
test("abc|", all_flags, Disjunction([Atom("abc"), Empty()]));
try { if (Inst27 <= 1000 && typeof (test) != "undefined") {_RecordType("<341,345,6>",(test)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (all_flags) != "undefined") {_RecordType("<354,363,6>",(all_flags)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (Disjunction) != "undefined") {_RecordType("<365,376,6>",(Disjunction)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (Empty) != "undefined") {_RecordType("<378,383,6>",(Empty)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (Atom) != "undefined") {_RecordType("<387,391,6>",(Atom)); Inst31++; } } catch(e) {}
test("|abc", all_flags, Disjunction([Empty(), Atom("abc")]));

