var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// LeadSurrogate TrailSurrogate
try { if (Inst0 <= 1000 && typeof (test) != "undefined") {_RecordType("<32,36,2>",(test)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (no_unicode_flags) != "undefined") {_RecordType("<59,75,2>",(no_unicode_flags)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (CharacterClass) != "undefined") {_RecordType("<77,91,2>",(CharacterClass)); Inst2++; } } catch(e) {}
test("[X\\uD83D\\uDC38Y]", no_unicode_flags, CharacterClass([["X", "X"], ["\uD83D", "\uD83D"], ["\uDC38", "\uDC38"], ["Y", "Y"]]));
try { if (Inst3 <= 1000 && typeof (test) != "undefined") {_RecordType("<164,168,3>",(test)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (unicode_flags) != "undefined") {_RecordType("<191,204,3>",(unicode_flags)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Disjunction) != "undefined") {_RecordType("<206,217,3>",(Disjunction)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (CharacterClass) != "undefined") {_RecordType("<219,233,3>",(CharacterClass)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Atom) != "undefined") {_RecordType("<261,265,3>",(Atom)); Inst7++; } } catch(e) {}
test("[X\\uD83D\\uDC38Y]", unicode_flags, Disjunction([CharacterClass([["X", "X"], ["Y", "Y"]]), Atom("\uD83D\uDC38")])); // LeadSurrogate

try { if (Inst8 <= 1000 && typeof (test) != "undefined") {_RecordType("<304,308,5>",(test)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (no_unicode_flags) != "undefined") {_RecordType("<324,340,5>",(no_unicode_flags)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (CharacterClass) != "undefined") {_RecordType("<342,356,5>",(CharacterClass)); Inst10++; } } catch(e) {}
test("[X\\uD83DY]", no_unicode_flags, CharacterClass([["X", "X"], ["\uD83D", "\uD83D"], ["Y", "Y"]]));
try { if (Inst11 <= 1000 && typeof (test) != "undefined") {_RecordType("<407,411,6>",(test)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (unicode_flags) != "undefined") {_RecordType("<427,440,6>",(unicode_flags)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Disjunction) != "undefined") {_RecordType("<442,453,6>",(Disjunction)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (CharacterClass) != "undefined") {_RecordType("<455,469,6>",(CharacterClass)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Alternative) != "undefined") {_RecordType("<497,508,6>",(Alternative)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (CharacterClass) != "undefined") {_RecordType("<510,524,6>",(CharacterClass)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (NegativeLookahead) != "undefined") {_RecordType("<550,567,6>",(NegativeLookahead)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (CharacterClass) != "undefined") {_RecordType("<568,582,6>",(CharacterClass)); Inst18++; } } catch(e) {}
test("[X\\uD83DY]", unicode_flags, Disjunction([CharacterClass([["X", "X"], ["Y", "Y"]]), Alternative([CharacterClass([["\uD83D", "\uD83D"]]), NegativeLookahead(CharacterClass([["\uDC00", "\uDFFF"]]))])])); // TrailSurrogate

try { if (Inst19 <= 1000 && typeof (test) != "undefined") {_RecordType("<633,637,8>",(test)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (no_unicode_flags) != "undefined") {_RecordType("<653,669,8>",(no_unicode_flags)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (CharacterClass) != "undefined") {_RecordType("<671,685,8>",(CharacterClass)); Inst21++; } } catch(e) {}
test("[X\\uDC38Y]", no_unicode_flags, CharacterClass([["X", "X"], ["\uDC38", "\uDC38"], ["Y", "Y"]]));
try { if (Inst22 <= 1000 && typeof (test) != "undefined") {_RecordType("<736,740,9>",(test)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (unicode_flags) != "undefined") {_RecordType("<756,769,9>",(unicode_flags)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (Disjunction) != "undefined") {_RecordType("<771,782,9>",(Disjunction)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (CharacterClass) != "undefined") {_RecordType("<784,798,9>",(CharacterClass)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Alternative) != "undefined") {_RecordType("<826,837,9>",(Alternative)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (Assertion) != "undefined") {_RecordType("<839,848,9>",(Assertion)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (CharacterClass) != "undefined") {_RecordType("<878,892,9>",(CharacterClass)); Inst28++; } } catch(e) {}
test("[X\\uDC38Y]", unicode_flags, Disjunction([CharacterClass([["X", "X"], ["Y", "Y"]]), Alternative([Assertion("NOT_AFTER_LEAD_SURROGATE"), CharacterClass([["\uDC38", "\uDC38"]])])])); // NonSurrogate / Hex4Digits

try { if (Inst29 <= 1000 && typeof (test) != "undefined") {_RecordType("<953,957,11>",(test)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (all_flags) != "undefined") {_RecordType("<973,982,11>",(all_flags)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (CharacterClass) != "undefined") {_RecordType("<984,998,11>",(CharacterClass)); Inst31++; } } catch(e) {}
test("[X\\u0000Y]", all_flags, CharacterClass([["X", "X"], ["\u0000", "\u0000"], ["Y", "Y"]]));
try { if (Inst32 <= 1000 && typeof (test) != "undefined") {_RecordType("<1049,1053,12>",(test)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (all_flags) != "undefined") {_RecordType("<1069,1078,12>",(all_flags)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (CharacterClass) != "undefined") {_RecordType("<1080,1094,12>",(CharacterClass)); Inst34++; } } catch(e) {}
test("[X\\uFFFFY]", all_flags, CharacterClass([["X", "X"], ["\uFFFF", "\uFFFF"], ["Y", "Y"]])); // braced HexDigits

try { if (Inst35 <= 1000 && typeof (test) != "undefined") {_RecordType("<1166,1170,14>",(test)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (unicode_flags) != "undefined") {_RecordType("<1188,1201,14>",(unicode_flags)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (CharacterClass) != "undefined") {_RecordType("<1203,1217,14>",(CharacterClass)); Inst37++; } } catch(e) {}
test("[X\\u{0000}Y]", unicode_flags, CharacterClass([["X", "X"], ["\u0000", "\u0000"], ["Y", "Y"]]));
try { if (Inst38 <= 1000 && typeof (test) != "undefined") {_RecordType("<1268,1272,15>",(test)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (unicode_flags) != "undefined") {_RecordType("<1288,1301,15>",(unicode_flags)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (CharacterClass) != "undefined") {_RecordType("<1303,1317,15>",(CharacterClass)); Inst40++; } } catch(e) {}
test("[X\\uFFFFY]", unicode_flags, CharacterClass([["X", "X"], ["\uFFFF", "\uFFFF"], ["Y", "Y"]]));
try { if (Inst41 <= 1000 && typeof (test) != "undefined") {_RecordType("<1368,1372,16>",(test)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (unicode_flags) != "undefined") {_RecordType("<1391,1404,16>",(unicode_flags)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (Disjunction) != "undefined") {_RecordType("<1406,1417,16>",(Disjunction)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (CharacterClass) != "undefined") {_RecordType("<1419,1433,16>",(CharacterClass)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (Atom) != "undefined") {_RecordType("<1461,1465,16>",(Atom)); Inst45++; } } catch(e) {}
test("[X\\u{1F438}Y]", unicode_flags, Disjunction([CharacterClass([["X", "X"], ["Y", "Y"]]), Atom("\uD83D\uDC38")]));
try { if (Inst46 <= 1000 && typeof (test) != "undefined") {_RecordType("<1486,1490,17>",(test)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (unicode_flags) != "undefined") {_RecordType("<1508,1521,17>",(unicode_flags)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (Disjunction) != "undefined") {_RecordType("<1523,1534,17>",(Disjunction)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (CharacterClass) != "undefined") {_RecordType("<1536,1550,17>",(CharacterClass)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (Alternative) != "undefined") {_RecordType("<1578,1589,17>",(Alternative)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (CharacterClass) != "undefined") {_RecordType("<1591,1605,17>",(CharacterClass)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (NegativeLookahead) != "undefined") {_RecordType("<1631,1648,17>",(NegativeLookahead)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (CharacterClass) != "undefined") {_RecordType("<1649,1663,17>",(CharacterClass)); Inst53++; } } catch(e) {}
test("[X\\u{D83D}Y]", unicode_flags, Disjunction([CharacterClass([["X", "X"], ["Y", "Y"]]), Alternative([CharacterClass([["\uD83D", "\uD83D"]]), NegativeLookahead(CharacterClass([["\uDC00", "\uDFFF"]]))])]));
try { if (Inst54 <= 1000 && typeof (test) != "undefined") {_RecordType("<1695,1699,18>",(test)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (unicode_flags) != "undefined") {_RecordType("<1717,1730,18>",(unicode_flags)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (Disjunction) != "undefined") {_RecordType("<1732,1743,18>",(Disjunction)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (CharacterClass) != "undefined") {_RecordType("<1745,1759,18>",(CharacterClass)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (Alternative) != "undefined") {_RecordType("<1787,1798,18>",(Alternative)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (Assertion) != "undefined") {_RecordType("<1800,1809,18>",(Assertion)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (CharacterClass) != "undefined") {_RecordType("<1839,1853,18>",(CharacterClass)); Inst60++; } } catch(e) {}
test("[X\\u{DC38}Y]", unicode_flags, Disjunction([CharacterClass([["X", "X"], ["Y", "Y"]]), Alternative([Assertion("NOT_AFTER_LEAD_SURROGATE"), CharacterClass([["\uDC38", "\uDC38"]])])])); // Invalid

try { if (Inst61 <= 1000 && typeof (test) != "undefined") {_RecordType("<1896,1900,20>",(test)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (no_unicode_flags) != "undefined") {_RecordType("<1910,1926,20>",(no_unicode_flags)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (CharacterClass) != "undefined") {_RecordType("<1928,1942,20>",(CharacterClass)); Inst63++; } } catch(e) {}
test("[\\u]", no_unicode_flags, CharacterClass([["u", "u"]]));
try { if (Inst64 <= 1000 && typeof (test) != "undefined") {_RecordType("<1959,1963,21>",(test)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (no_unicode_flags) != "undefined") {_RecordType("<1974,1990,21>",(no_unicode_flags)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (CharacterClass) != "undefined") {_RecordType("<1992,2006,21>",(CharacterClass)); Inst66++; } } catch(e) {}
test("[\\uG]", no_unicode_flags, CharacterClass([["u", "u"], ["G", "G"]]));
try { if (Inst67 <= 1000 && typeof (test) != "undefined") {_RecordType("<2035,2039,22>",(test)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (no_unicode_flags) != "undefined") {_RecordType("<2052,2068,22>",(no_unicode_flags)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (CharacterClass) != "undefined") {_RecordType("<2070,2084,22>",(CharacterClass)); Inst69++; } } catch(e) {}
test("[\\uD83]", no_unicode_flags, CharacterClass([["u", "u"], ["D", "D"], ["8", "8"], ["3", "3"]]));
try { if (Inst70 <= 1000 && typeof (test) != "undefined") {_RecordType("<2137,2141,23>",(test)); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (no_unicode_flags) != "undefined") {_RecordType("<2155,2171,23>",(no_unicode_flags)); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (CharacterClass) != "undefined") {_RecordType("<2173,2187,23>",(CharacterClass)); Inst72++; } } catch(e) {}
test("[\\uD83G]", no_unicode_flags, CharacterClass([["u", "u"], ["D", "D"], ["8", "8"], ["3", "3"], ["G", "G"]]));

