var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
for (var i = 0; i < 9; i++) {
try { if (Inst0 <= 1000 && typeof (i) != "undefined") {_RecordType("<9,10,1>",(i)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (i) != "undefined") {_RecordType("<16,17,1>",(i)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (i) != "undefined") {_RecordType("<23,24,1>",(i)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<33,39,2>",(Symbol)); Inst3++; } } catch(e) {}
  !Symbol();
  false;
  "symbols are truthy";
}

try { if (Inst5 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<103,109,7>",(Symbol)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<113,119,7>",(Symbol)); Inst6++; } } catch(e) {}
var a = [0, 0, 0, 0, 0, Symbol(), Symbol()];
try { if (Inst4 <= 1000 && typeof (a) != "undefined") {_RecordType("<83,84,7>",(a)); Inst4++; } } catch(e) {}
var b = [];
try { if (Inst7 <= 1000 && typeof (b) != "undefined") {_RecordType("<128,129,8>",(b)); Inst7++; } } catch(e) {}

try { if (Inst8 <= 1000 && typeof (f) != "undefined") {_RecordType("<146,147,10>",(f)); Inst8++; } } catch(e) {}
function f(i, v) {
try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<148,149,10>",(i)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (v) != "undefined") {_RecordType("<151,152,10>",(v)); Inst10++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (v) != "undefined") {_RecordType("<166,167,11>",(v)); Inst13++; } } catch(e) {}
  b[i] = !v;
try { if (Inst11 <= 1000 && typeof (b[i]) != "undefined") {_RecordType("<158,162,11>",(b[i])); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (b) != "undefined") {_RecordType("<158,159,11>",(b)); Inst12++; } } catch(e) {}
}

for (var i = 0; i < a.length; i++) {
try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<181,182,14>",(i)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<188,189,14>",(i)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<192,200,14>",(a.length)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (a) != "undefined") {_RecordType("<192,193,14>",(a)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (i) != "undefined") {_RecordType("<202,203,14>",(i)); Inst18++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (f) != "undefined") {_RecordType("<211,212,15>",(f)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<213,214,15>",(i)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (a[i]) != "undefined") {_RecordType("<216,220,15>",(a[i])); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (a) != "undefined") {_RecordType("<216,217,15>",(a)); Inst22++; } } catch(e) {}
  f(i, a[i]);
}

try { if (Inst23 <= 1000 && typeof (b[b.length - 3]) != "undefined") {_RecordType("<226,241,18>",(b[b.length - 3])); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (b) != "undefined") {_RecordType("<226,227,18>",(b)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (b.length) != "undefined") {_RecordType("<228,236,18>",(b.length)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (b) != "undefined") {_RecordType("<228,229,18>",(b)); Inst26++; } } catch(e) {}
b[b.length - 3];
true;
try { if (Inst27 <= 1000 && typeof (b[b.length - 2]) != "undefined") {_RecordType("<249,264,20>",(b[b.length - 2])); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (b) != "undefined") {_RecordType("<249,250,20>",(b)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (b.length) != "undefined") {_RecordType("<251,259,20>",(b.length)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (b) != "undefined") {_RecordType("<251,252,20>",(b)); Inst30++; } } catch(e) {}
b[b.length - 2];
false;
try { if (Inst31 <= 1000 && typeof (b[b.length - 1]) != "undefined") {_RecordType("<273,288,22>",(b[b.length - 1])); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (b) != "undefined") {_RecordType("<273,274,22>",(b)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (b.length) != "undefined") {_RecordType("<275,283,22>",(b.length)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (b) != "undefined") {_RecordType("<275,276,22>",(b)); Inst34++; } } catch(e) {}
b[b.length - 1];
false;

