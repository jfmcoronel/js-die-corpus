var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// The Computer Language Shootout
// http://shootout.alioth.debian.org/
// contributed by Isaac Gouy
try { if (Inst0 <= 1000 && typeof (ack) != "undefined") {_RecordType("<110,113,4>",(ack)); Inst0++; } } catch(e) {}
function ack(m, n) {
try { if (Inst1 <= 1000 && typeof (m) != "undefined") {_RecordType("<114,115,4>",(m)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (n) != "undefined") {_RecordType("<117,118,4>",(n)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (m) != "undefined") {_RecordType("<128,129,5>",(m)); Inst3++; } } catch(e) {}
  if (m == 0) {
try { if (Inst4 <= 1000 && typeof (n) != "undefined") {_RecordType("<149,150,6>",(n)); Inst4++; } } catch(e) {}
    return n + 1;
  }

try { if (Inst5 <= 1000 && typeof (n) != "undefined") {_RecordType("<167,168,9>",(n)); Inst5++; } } catch(e) {}
  if (n == 0) {
try { if (Inst6 <= 1000 && typeof (ack) != "undefined") {_RecordType("<188,191,10>",(ack)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (m) != "undefined") {_RecordType("<192,193,10>",(m)); Inst7++; } } catch(e) {}
    return ack(m - 1, 1);
  }

try { if (Inst8 <= 1000 && typeof (ack) != "undefined") {_RecordType("<217,220,13>",(ack)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (m) != "undefined") {_RecordType("<221,222,13>",(m)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (ack) != "undefined") {_RecordType("<228,231,13>",(ack)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (m) != "undefined") {_RecordType("<232,233,13>",(m)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (n) != "undefined") {_RecordType("<235,236,13>",(n)); Inst12++; } } catch(e) {}
  return ack(m - 1, ack(m, n - 1));
}

try { if (Inst13 <= 1000 && typeof (fib) != "undefined") {_RecordType("<256,259,16>",(fib)); Inst13++; } } catch(e) {}
function fib(n) {
try { if (Inst14 <= 1000 && typeof (n) != "undefined") {_RecordType("<260,261,16>",(n)); Inst14++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (n) != "undefined") {_RecordType("<271,272,17>",(n)); Inst15++; } } catch(e) {}
  if (n < 2) {
    return 1;
  }

try { if (Inst16 <= 1000 && typeof (fib) != "undefined") {_RecordType("<308,311,21>",(fib)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (n) != "undefined") {_RecordType("<312,313,21>",(n)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (fib) != "undefined") {_RecordType("<321,324,21>",(fib)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (n) != "undefined") {_RecordType("<325,326,21>",(n)); Inst19++; } } catch(e) {}
  return fib(n - 2) + fib(n - 1);
}

try { if (Inst20 <= 1000 && typeof (tak) != "undefined") {_RecordType("<345,348,24>",(tak)); Inst20++; } } catch(e) {}
function tak(x, y, z) {
try { if (Inst21 <= 1000 && typeof (x) != "undefined") {_RecordType("<349,350,24>",(x)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (y) != "undefined") {_RecordType("<352,353,24>",(y)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (z) != "undefined") {_RecordType("<355,356,24>",(z)); Inst23++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (y) != "undefined") {_RecordType("<366,367,25>",(y)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (x) != "undefined") {_RecordType("<371,372,25>",(x)); Inst25++; } } catch(e) {}
  if (y >= x) {
try { if (Inst26 <= 1000 && typeof (z) != "undefined") {_RecordType("<387,388,26>",(z)); Inst26++; } } catch(e) {}
    return z;
  }

try { if (Inst27 <= 1000 && typeof (tak) != "undefined") {_RecordType("<404,407,29>",(tak)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (tak) != "undefined") {_RecordType("<408,411,29>",(tak)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (x) != "undefined") {_RecordType("<412,413,29>",(x)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (y) != "undefined") {_RecordType("<419,420,29>",(y)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (z) != "undefined") {_RecordType("<422,423,29>",(z)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (tak) != "undefined") {_RecordType("<426,429,29>",(tak)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (y) != "undefined") {_RecordType("<430,431,29>",(y)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (z) != "undefined") {_RecordType("<437,438,29>",(z)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (x) != "undefined") {_RecordType("<440,441,29>",(x)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (tak) != "undefined") {_RecordType("<444,447,29>",(tak)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (z) != "undefined") {_RecordType("<448,449,29>",(z)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (x) != "undefined") {_RecordType("<455,456,29>",(x)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (y) != "undefined") {_RecordType("<458,459,29>",(y)); Inst39++; } } catch(e) {}
  return tak(tak(x - 1, y, z), tak(y - 1, z, x), tak(z - 1, x, y));
}

var ret = 0;
try { if (Inst40 <= 1000 && typeof (ret) != "undefined") {_RecordType("<470,473,32>",(ret)); Inst40++; } } catch(e) {}

for (var i = 3; i <= 5; i++) {
try { if (Inst41 <= 1000 && typeof (i) != "undefined") {_RecordType("<489,490,34>",(i)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (i) != "undefined") {_RecordType("<496,497,34>",(i)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (i) != "undefined") {_RecordType("<504,505,34>",(i)); Inst43++; } } catch(e) {}
try { if (Inst45 <= 1000 && typeof (ack) != "undefined") {_RecordType("<520,523,35>",(ack)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (i) != "undefined") {_RecordType("<527,528,35>",(i)); Inst46++; } } catch(e) {}
  ret += ack(3, i);
try { if (Inst44 <= 1000 && typeof (ret) != "undefined") {_RecordType("<513,516,35>",(ret)); Inst44++; } } catch(e) {}
try { if (Inst48 <= 1000 && typeof (fib) != "undefined") {_RecordType("<540,543,36>",(fib)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (i) != "undefined") {_RecordType("<551,552,36>",(i)); Inst49++; } } catch(e) {}
  ret += fib(17.0 + i);
try { if (Inst47 <= 1000 && typeof (ret) != "undefined") {_RecordType("<533,536,36>",(ret)); Inst47++; } } catch(e) {}
try { if (Inst51 <= 1000 && typeof (tak) != "undefined") {_RecordType("<564,567,37>",(tak)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (i) != "undefined") {_RecordType("<572,573,37>",(i)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (i) != "undefined") {_RecordType("<583,584,37>",(i)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (i) != "undefined") {_RecordType("<590,591,37>",(i)); Inst54++; } } catch(e) {}
  ret += tak(3 * i + 3, 2 * i + 2, i + 1);
try { if (Inst50 <= 1000 && typeof (ret) != "undefined") {_RecordType("<557,560,37>",(ret)); Inst50++; } } catch(e) {}
}

try { if (Inst55 <= 1000 && typeof (ret) != "undefined") {_RecordType("<601,604,40>",(ret)); Inst55++; } } catch(e) {}
ret;
57775;

