var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/*
 * Copyright (C) 2007 Apple Inc.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
 * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. 
 */
var loops = 15;
try { if (Inst0 <= 1000 && typeof (loops) != "undefined") {_RecordType("<1357,1362,25>",(loops)); Inst0++; } } catch(e) {}
var nx = 120;
try { if (Inst1 <= 1000 && typeof (nx) != "undefined") {_RecordType("<1373,1375,26>",(nx)); Inst1++; } } catch(e) {}
var nz = 120;
try { if (Inst2 <= 1000 && typeof (nz) != "undefined") {_RecordType("<1387,1389,27>",(nz)); Inst2++; } } catch(e) {}

try { if (Inst3 <= 1000 && typeof (morph) != "undefined") {_RecordType("<1407,1412,29>",(morph)); Inst3++; } } catch(e) {}
function morph(a, f) {
try { if (Inst4 <= 1000 && typeof (a) != "undefined") {_RecordType("<1413,1414,29>",(a)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (f) != "undefined") {_RecordType("<1416,1417,29>",(f)); Inst5++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (Math.PI) != "undefined") {_RecordType("<1435,1442,30>",(Math.PI)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1435,1439,30>",(Math)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (nx) != "undefined") {_RecordType("<1449,1451,30>",(nx)); Inst9++; } } catch(e) {}
  var PI2nx = Math.PI * 8 / nx;
try { if (Inst6 <= 1000 && typeof (PI2nx) != "undefined") {_RecordType("<1427,1432,30>",(PI2nx)); Inst6++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (Math.sin) != "undefined") {_RecordType("<1465,1473,31>",(Math.sin)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1465,1469,31>",(Math)); Inst12++; } } catch(e) {}
  var sin = Math.sin;
try { if (Inst10 <= 1000 && typeof (sin) != "undefined") {_RecordType("<1459,1462,31>",(sin)); Inst10++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (sin) != "undefined") {_RecordType("<1494,1497,32>",(sin)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (f) != "undefined") {_RecordType("<1498,1499,32>",(f)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Math.PI) != "undefined") {_RecordType("<1502,1509,32>",(Math.PI)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1502,1506,32>",(Math)); Inst17++; } } catch(e) {}
  var f30 = -(50 * sin(f * Math.PI * 2));
try { if (Inst13 <= 1000 && typeof (f30) != "undefined") {_RecordType("<1481,1484,32>",(f30)); Inst13++; } } catch(e) {}

  for (var i = 0; i < nz; ++i) {
try { if (Inst18 <= 1000 && typeof (i) != "undefined") {_RecordType("<1529,1530,34>",(i)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (i) != "undefined") {_RecordType("<1536,1537,34>",(i)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (nz) != "undefined") {_RecordType("<1540,1542,34>",(nz)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<1546,1547,34>",(i)); Inst21++; } } catch(e) {}
    for (var j = 0; j < nx; ++j) {
try { if (Inst22 <= 1000 && typeof (j) != "undefined") {_RecordType("<1564,1565,35>",(j)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (j) != "undefined") {_RecordType("<1571,1572,35>",(j)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (nx) != "undefined") {_RecordType("<1575,1577,35>",(nx)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (j) != "undefined") {_RecordType("<1581,1582,35>",(j)); Inst25++; } } catch(e) {}
try { if (Inst31 <= 1000 && typeof (sin) != "undefined") {_RecordType("<1618,1621,36>",(sin)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (j) != "undefined") {_RecordType("<1623,1624,36>",(j)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (PI2nx) != "undefined") {_RecordType("<1632,1637,36>",(PI2nx)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (f30) != "undefined") {_RecordType("<1642,1645,36>",(f30)); Inst34++; } } catch(e) {}
      a[3 * (i * nx + j) + 1] = sin((j - 1) * PI2nx) * -f30;
try { if (Inst26 <= 1000 && typeof (a[3 * (i * nx + j) + 1]) != "undefined") {_RecordType("<1592,1615,36>",(a[3 * (i * nx + j) + 1])); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (a) != "undefined") {_RecordType("<1592,1593,36>",(a)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (i) != "undefined") {_RecordType("<1599,1600,36>",(i)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (nx) != "undefined") {_RecordType("<1603,1605,36>",(nx)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (j) != "undefined") {_RecordType("<1608,1609,36>",(j)); Inst30++; } } catch(e) {}
    }
  }
}

try { if (Inst36 <= 1000 && typeof (Array) != "undefined") {_RecordType("<1668,1673,41>",(Array)); Inst36++; } } catch(e) {}
var a = Array();
try { if (Inst35 <= 1000 && typeof (a) != "undefined") {_RecordType("<1664,1665,41>",(a)); Inst35++; } } catch(e) {}

for (var i = 0; i < nx * nz * 3; ++i) {
try { if (Inst37 <= 1000 && typeof (i) != "undefined") {_RecordType("<1687,1688,43>",(i)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (i) != "undefined") {_RecordType("<1694,1695,43>",(i)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (nx) != "undefined") {_RecordType("<1698,1700,43>",(nx)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (nz) != "undefined") {_RecordType("<1703,1705,43>",(nz)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (i) != "undefined") {_RecordType("<1713,1714,43>",(i)); Inst41++; } } catch(e) {}
  a[i] = 0;
try { if (Inst42 <= 1000 && typeof (a[i]) != "undefined") {_RecordType("<1720,1724,44>",(a[i])); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (a) != "undefined") {_RecordType("<1720,1721,44>",(a)); Inst43++; } } catch(e) {}
}

for (var i = 0; i < loops; ++i) {
try { if (Inst44 <= 1000 && typeof (i) != "undefined") {_RecordType("<1742,1743,47>",(i)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (i) != "undefined") {_RecordType("<1749,1750,47>",(i)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (loops) != "undefined") {_RecordType("<1753,1758,47>",(loops)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (i) != "undefined") {_RecordType("<1762,1763,47>",(i)); Inst47++; } } catch(e) {}
try { if (Inst48 <= 1000 && typeof (morph) != "undefined") {_RecordType("<1769,1774,48>",(morph)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (a) != "undefined") {_RecordType("<1775,1776,48>",(a)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (i) != "undefined") {_RecordType("<1778,1779,48>",(i)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (loops) != "undefined") {_RecordType("<1782,1787,48>",(loops)); Inst51++; } } catch(e) {}
  morph(a, i / loops);
}

testOutput = 0;
try { if (Inst52 <= 1000 && typeof (testOutput) != "undefined") {_RecordType("<1793,1803,51>",(testOutput)); Inst52++; } } catch(e) {}

for (var i = 0; i < nx; i++) {
try { if (Inst53 <= 1000 && typeof (i) != "undefined") {_RecordType("<1819,1820,53>",(i)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (i) != "undefined") {_RecordType("<1826,1827,53>",(i)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (nx) != "undefined") {_RecordType("<1830,1832,53>",(nx)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (i) != "undefined") {_RecordType("<1834,1835,53>",(i)); Inst56++; } } catch(e) {}
try { if (Inst58 <= 1000 && typeof (a[3 * (i * nx + i) + 1]) != "undefined") {_RecordType("<1857,1880,54>",(a[3 * (i * nx + i) + 1])); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (a) != "undefined") {_RecordType("<1857,1858,54>",(a)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (i) != "undefined") {_RecordType("<1864,1865,54>",(i)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (nx) != "undefined") {_RecordType("<1868,1870,54>",(nx)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (i) != "undefined") {_RecordType("<1873,1874,54>",(i)); Inst62++; } } catch(e) {}
  testOutput += a[3 * (i * nx + i) + 1];
try { if (Inst57 <= 1000 && typeof (testOutput) != "undefined") {_RecordType("<1843,1853,54>",(testOutput)); Inst57++; } } catch(e) {}
}

a = null;
try { if (Inst63 <= 1000 && typeof (a) != "undefined") {_RecordType("<1885,1886,57>",(a)); Inst63++; } } catch(e) {}
/* not based on any mathematical error calculation.*/

acceptableDelta = 4e-15;
try { if (Inst64 <= 1000 && typeof (acceptableDelta) != "undefined") {_RecordType("<1950,1965,60>",(acceptableDelta)); Inst64++; } } catch(e) {}
try { if (Inst65 <= 1000 && typeof (testOutput) != "undefined") {_RecordType("<1975,1985,61>",(testOutput)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (acceptableDelta) != "undefined") {_RecordType("<2012,2027,61>",(acceptableDelta)); Inst66++; } } catch(e) {}
testOutput - 6.394884621840902e-14 < acceptableDelta;
true;

