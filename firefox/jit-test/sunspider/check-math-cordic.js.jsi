var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/*
 * Copyright (C) Rich Moore.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY CONTRIBUTORS ``AS IS'' AND ANY
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
 * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. 
 */
/////. Start CORDIC
var AG_CONST = 0.6072529350;
try { if (Inst0 <= 1000 && typeof (AG_CONST) != "undefined") {_RecordType("<1365,1373,26>",(AG_CONST)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (FIXED) != "undefined") {_RecordType("<1400,1405,28>",(FIXED)); Inst1++; } } catch(e) {}
function FIXED(X) {
try { if (Inst2 <= 1000 && typeof (X) != "undefined") {_RecordType("<1406,1407,28>",(X)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (X) != "undefined") {_RecordType("<1420,1421,29>",(X)); Inst3++; } } catch(e) {}
  return X * 65536.0;
}

try { if (Inst4 <= 1000 && typeof (FLOAT) != "undefined") {_RecordType("<1445,1450,32>",(FLOAT)); Inst4++; } } catch(e) {}
function FLOAT(X) {
try { if (Inst5 <= 1000 && typeof (X) != "undefined") {_RecordType("<1451,1452,32>",(X)); Inst5++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (X) != "undefined") {_RecordType("<1465,1466,33>",(X)); Inst6++; } } catch(e) {}
  return X / 65536.0;
}

try { if (Inst7 <= 1000 && typeof (DEG2RAD) != "undefined") {_RecordType("<1490,1497,36>",(DEG2RAD)); Inst7++; } } catch(e) {}
function DEG2RAD(X) {
try { if (Inst8 <= 1000 && typeof (X) != "undefined") {_RecordType("<1498,1499,36>",(X)); Inst8++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (X) != "undefined") {_RecordType("<1523,1524,37>",(X)); Inst9++; } } catch(e) {}
  return 0.017453 * X;
}

try { if (Inst11 <= 1000 && typeof (FIXED) != "undefined") {_RecordType("<1543,1548,40>",(FIXED)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (FIXED) != "undefined") {_RecordType("<1556,1561,40>",(FIXED)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (FIXED) != "undefined") {_RecordType("<1571,1576,40>",(FIXED)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (FIXED) != "undefined") {_RecordType("<1587,1592,40>",(FIXED)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (FIXED) != "undefined") {_RecordType("<1603,1608,40>",(FIXED)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (FIXED) != "undefined") {_RecordType("<1619,1624,40>",(FIXED)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (FIXED) != "undefined") {_RecordType("<1635,1640,40>",(FIXED)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (FIXED) != "undefined") {_RecordType("<1652,1657,40>",(FIXED)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (FIXED) != "undefined") {_RecordType("<1669,1674,40>",(FIXED)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (FIXED) != "undefined") {_RecordType("<1686,1691,40>",(FIXED)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (FIXED) != "undefined") {_RecordType("<1703,1708,40>",(FIXED)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (FIXED) != "undefined") {_RecordType("<1720,1725,40>",(FIXED)); Inst22++; } } catch(e) {}
var Angles = [FIXED(45.0), FIXED(26.565), FIXED(14.0362), FIXED(7.12502), FIXED(3.57633), FIXED(1.78991), FIXED(0.895174), FIXED(0.447614), FIXED(0.223811), FIXED(0.111906), FIXED(0.055953), FIXED(0.027977)];
try { if (Inst10 <= 1000 && typeof (Angles) != "undefined") {_RecordType("<1533,1539,40>",(Angles)); Inst10++; } } catch(e) {}

try { if (Inst23 <= 1000 && typeof (cordicsincos) != "undefined") {_RecordType("<1748,1760,42>",(cordicsincos)); Inst23++; } } catch(e) {}
function cordicsincos() {
  var X;
try { if (Inst24 <= 1000 && typeof (X) != "undefined") {_RecordType("<1771,1772,43>",(X)); Inst24++; } } catch(e) {}
  var Y;
try { if (Inst25 <= 1000 && typeof (Y) != "undefined") {_RecordType("<1780,1781,44>",(Y)); Inst25++; } } catch(e) {}
  var TargetAngle;
try { if (Inst26 <= 1000 && typeof (TargetAngle) != "undefined") {_RecordType("<1789,1800,45>",(TargetAngle)); Inst26++; } } catch(e) {}
  var CurrAngle;
try { if (Inst27 <= 1000 && typeof (CurrAngle) != "undefined") {_RecordType("<1808,1817,46>",(CurrAngle)); Inst27++; } } catch(e) {}
  var Step;
try { if (Inst28 <= 1000 && typeof (Step) != "undefined") {_RecordType("<1825,1829,47>",(Step)); Inst28++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (FIXED) != "undefined") {_RecordType("<1837,1842,48>",(FIXED)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (AG_CONST) != "undefined") {_RecordType("<1843,1851,48>",(AG_CONST)); Inst31++; } } catch(e) {}
  X = FIXED(AG_CONST);
try { if (Inst29 <= 1000 && typeof (X) != "undefined") {_RecordType("<1833,1834,48>",(X)); Inst29++; } } catch(e) {}
  /* AG_CONST * cos(0) */

  Y = 0;
try { if (Inst32 <= 1000 && typeof (Y) != "undefined") {_RecordType("<1883,1884,51>",(Y)); Inst32++; } } catch(e) {}
  /* AG_CONST * sin(0) */

try { if (Inst34 <= 1000 && typeof (FIXED) != "undefined") {_RecordType("<1933,1938,54>",(FIXED)); Inst34++; } } catch(e) {}
  TargetAngle = FIXED(28.027);
try { if (Inst33 <= 1000 && typeof (TargetAngle) != "undefined") {_RecordType("<1919,1930,54>",(TargetAngle)); Inst33++; } } catch(e) {}
  CurrAngle = 0;
try { if (Inst35 <= 1000 && typeof (CurrAngle) != "undefined") {_RecordType("<1950,1959,55>",(CurrAngle)); Inst35++; } } catch(e) {}

  for (Step = 0; Step < 12; Step++) {
try { if (Inst36 <= 1000 && typeof (Step) != "undefined") {_RecordType("<1973,1977,57>",(Step)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (Step) != "undefined") {_RecordType("<1983,1987,57>",(Step)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (Step) != "undefined") {_RecordType("<1994,1998,57>",(Step)); Inst38++; } } catch(e) {}
    var NewX;
try { if (Inst39 <= 1000 && typeof (NewX) != "undefined") {_RecordType("<2012,2016,58>",(NewX)); Inst39++; } } catch(e) {}

try { if (Inst40 <= 1000 && typeof (TargetAngle) != "undefined") {_RecordType("<2027,2038,60>",(TargetAngle)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (CurrAngle) != "undefined") {_RecordType("<2041,2050,60>",(CurrAngle)); Inst41++; } } catch(e) {}
    if (TargetAngle > CurrAngle) {
try { if (Inst43 <= 1000 && typeof (X) != "undefined") {_RecordType("<2067,2068,61>",(X)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (Y) != "undefined") {_RecordType("<2072,2073,61>",(Y)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (Step) != "undefined") {_RecordType("<2077,2081,61>",(Step)); Inst45++; } } catch(e) {}
      NewX = X - (Y >> Step);
try { if (Inst42 <= 1000 && typeof (NewX) != "undefined") {_RecordType("<2060,2064,61>",(NewX)); Inst42++; } } catch(e) {}
try { if (Inst47 <= 1000 && typeof (X) != "undefined") {_RecordType("<2095,2096,62>",(X)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (Step) != "undefined") {_RecordType("<2100,2104,62>",(Step)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (Y) != "undefined") {_RecordType("<2108,2109,62>",(Y)); Inst49++; } } catch(e) {}
      Y = (X >> Step) + Y;
try { if (Inst46 <= 1000 && typeof (Y) != "undefined") {_RecordType("<2090,2091,62>",(Y)); Inst46++; } } catch(e) {}
try { if (Inst51 <= 1000 && typeof (NewX) != "undefined") {_RecordType("<2121,2125,63>",(NewX)); Inst51++; } } catch(e) {}
      X = NewX;
try { if (Inst50 <= 1000 && typeof (X) != "undefined") {_RecordType("<2117,2118,63>",(X)); Inst50++; } } catch(e) {}
try { if (Inst53 <= 1000 && typeof (Angles[Step]) != "undefined") {_RecordType("<2146,2158,64>",(Angles[Step])); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (Angles) != "undefined") {_RecordType("<2146,2152,64>",(Angles)); Inst54++; } } catch(e) {}
      CurrAngle += Angles[Step];
try { if (Inst52 <= 1000 && typeof (CurrAngle) != "undefined") {_RecordType("<2133,2142,64>",(CurrAngle)); Inst52++; } } catch(e) {}
    } else {
try { if (Inst56 <= 1000 && typeof (X) != "undefined") {_RecordType("<2186,2187,66>",(X)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (Y) != "undefined") {_RecordType("<2191,2192,66>",(Y)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (Step) != "undefined") {_RecordType("<2196,2200,66>",(Step)); Inst58++; } } catch(e) {}
      NewX = X + (Y >> Step);
try { if (Inst55 <= 1000 && typeof (NewX) != "undefined") {_RecordType("<2179,2183,66>",(NewX)); Inst55++; } } catch(e) {}
try { if (Inst60 <= 1000 && typeof (X) != "undefined") {_RecordType("<2215,2216,67>",(X)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (Step) != "undefined") {_RecordType("<2220,2224,67>",(Step)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (Y) != "undefined") {_RecordType("<2228,2229,67>",(Y)); Inst62++; } } catch(e) {}
      Y = -(X >> Step) + Y;
try { if (Inst59 <= 1000 && typeof (Y) != "undefined") {_RecordType("<2209,2210,67>",(Y)); Inst59++; } } catch(e) {}
try { if (Inst64 <= 1000 && typeof (NewX) != "undefined") {_RecordType("<2241,2245,68>",(NewX)); Inst64++; } } catch(e) {}
      X = NewX;
try { if (Inst63 <= 1000 && typeof (X) != "undefined") {_RecordType("<2237,2238,68>",(X)); Inst63++; } } catch(e) {}
try { if (Inst66 <= 1000 && typeof (Angles[Step]) != "undefined") {_RecordType("<2266,2278,69>",(Angles[Step])); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (Angles) != "undefined") {_RecordType("<2266,2272,69>",(Angles)); Inst67++; } } catch(e) {}
      CurrAngle -= Angles[Step];
try { if (Inst65 <= 1000 && typeof (CurrAngle) != "undefined") {_RecordType("<2253,2262,69>",(CurrAngle)); Inst65++; } } catch(e) {}
    }
  }

try { if (Inst68 <= 1000 && typeof (CurrAngle) != "undefined") {_RecordType("<2300,2309,73>",(CurrAngle)); Inst68++; } } catch(e) {}
  return CurrAngle;
} ///// End CORDIC


try { if (Inst69 <= 1000 && typeof (cordic) != "undefined") {_RecordType("<2341,2347,77>",(cordic)); Inst69++; } } catch(e) {}
function cordic(runs) {
try { if (Inst70 <= 1000 && typeof (runs) != "undefined") {_RecordType("<2348,2352,77>",(runs)); Inst70++; } } catch(e) {}
  var actual;
try { if (Inst71 <= 1000 && typeof (actual) != "undefined") {_RecordType("<2362,2368,78>",(actual)); Inst71++; } } catch(e) {}

  for (var i = 0; i < runs; i++) {
try { if (Inst72 <= 1000 && typeof (i) != "undefined") {_RecordType("<2382,2383,80>",(i)); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (i) != "undefined") {_RecordType("<2389,2390,80>",(i)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (runs) != "undefined") {_RecordType("<2393,2397,80>",(runs)); Inst74++; } } catch(e) {}try { if (Inst75 <= 1000 && typeof (i) != "undefined") {_RecordType("<2399,2400,80>",(i)); Inst75++; } } catch(e) {}
try { if (Inst77 <= 1000 && typeof (cordicsincos) != "undefined") {_RecordType("<2419,2431,81>",(cordicsincos)); Inst77++; } } catch(e) {}
    actual = cordicsincos();
try { if (Inst76 <= 1000 && typeof (actual) != "undefined") {_RecordType("<2410,2416,81>",(actual)); Inst76++; } } catch(e) {}
  }

try { if (Inst78 <= 1000 && typeof (actual) != "undefined") {_RecordType("<2442,2448,84>",(actual)); Inst78++; } } catch(e) {}
  actual;
  1834995.3515519998;
}

try { if (Inst79 <= 1000 && typeof (cordic) != "undefined") {_RecordType("<2475,2481,88>",(cordic)); Inst79++; } } catch(e) {}
cordic(25000);

