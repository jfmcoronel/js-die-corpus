var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
var Inst102 = 0;
var Inst103 = 0;
var Inst104 = 0;
var Inst105 = 0;
var Inst106 = 0;
var Inst107 = 0;
var Inst108 = 0;
var Inst109 = 0;
var Inst110 = 0;
var Inst111 = 0;
var Inst112 = 0;
var Inst113 = 0;
var Inst114 = 0;
var Inst115 = 0;
var Inst116 = 0;
var Inst117 = 0;
var Inst118 = 0;
var Inst119 = 0;
var Inst120 = 0;
var Inst121 = 0;
var Inst122 = 0;
var Inst123 = 0;
var Inst124 = 0;
var Inst125 = 0;
var Inst126 = 0;
var Inst127 = 0;
var Inst128 = 0;
var Inst129 = 0;
var Inst130 = 0;
var Inst131 = 0;
var Inst132 = 0;
var Inst133 = 0;
var Inst134 = 0;
var Inst135 = 0;
var Inst136 = 0;
var Inst137 = 0;
var Inst138 = 0;
var Inst139 = 0;
var Inst140 = 0;
var Inst141 = 0;
var Inst142 = 0;
var Inst143 = 0;
var Inst144 = 0;
var Inst145 = 0;
var Inst146 = 0;
var Inst147 = 0;
var Inst148 = 0;
var Inst149 = 0;
var Inst150 = 0;
var Inst151 = 0;
var Inst152 = 0;
var Inst153 = 0;
var Inst154 = 0;
var Inst155 = 0;
var Inst156 = 0;
var Inst157 = 0;
var Inst158 = 0;
var Inst159 = 0;
var Inst160 = 0;
var Inst161 = 0;
var Inst162 = 0;
var Inst163 = 0;
var Inst164 = 0;
var Inst165 = 0;
var Inst166 = 0;
var Inst167 = 0;
var Inst168 = 0;
var Inst169 = 0;
var Inst170 = 0;
var Inst171 = 0;
var Inst172 = 0;
var Inst173 = 0;
var Inst174 = 0;
var Inst175 = 0;
var Inst176 = 0;
var Inst177 = 0;
var Inst178 = 0;
var Inst179 = 0;
var Inst180 = 0;
var Inst181 = 0;
var Inst182 = 0;
var Inst183 = 0;
var Inst184 = 0;
var Inst185 = 0;
var Inst186 = 0;
var Inst187 = 0;
var Inst188 = 0;
var Inst189 = 0;
var Inst190 = 0;
var Inst191 = 0;
var Inst192 = 0;
var Inst193 = 0;
var Inst194 = 0;
var Inst195 = 0;
var Inst196 = 0;
var Inst197 = 0;
var Inst198 = 0;
var Inst199 = 0;
var Inst200 = 0;
var Inst201 = 0;
var Inst202 = 0;
var Inst203 = 0;
var Inst204 = 0;
var Inst205 = 0;
var Inst206 = 0;
var Inst207 = 0;
var Inst208 = 0;
var Inst209 = 0;
var Inst210 = 0;
var Inst211 = 0;
var Inst212 = 0;
var Inst213 = 0;
var Inst214 = 0;
var Inst215 = 0;
var Inst216 = 0;
var Inst217 = 0;
var Inst218 = 0;
var Inst219 = 0;
var Inst220 = 0;
var Inst221 = 0;
var Inst222 = 0;
var Inst223 = 0;
var Inst224 = 0;
var Inst225 = 0;
var Inst226 = 0;
var Inst227 = 0;
var Inst228 = 0;
var Inst229 = 0;
var Inst230 = 0;
var Inst231 = 0;
var Inst232 = 0;
var Inst233 = 0;
var Inst234 = 0;
var Inst235 = 0;
var Inst236 = 0;
var Inst237 = 0;
var Inst238 = 0;
var Inst239 = 0;
var Inst240 = 0;
var Inst241 = 0;
var Inst242 = 0;
var Inst243 = 0;
var Inst244 = 0;
var Inst245 = 0;
var Inst246 = 0;
var Inst247 = 0;
var Inst248 = 0;
var Inst249 = 0;
var Inst250 = 0;
var Inst251 = 0;
var Inst252 = 0;
var Inst253 = 0;
var Inst254 = 0;
var Inst255 = 0;
var Inst256 = 0;
var Inst257 = 0;
var Inst258 = 0;
var Inst259 = 0;
var Inst260 = 0;
var Inst261 = 0;
var Inst262 = 0;
var Inst263 = 0;
var Inst264 = 0;
var Inst265 = 0;
var Inst266 = 0;
var Inst267 = 0;
var Inst268 = 0;
var Inst269 = 0;
var Inst270 = 0;
var Inst271 = 0;
var Inst272 = 0;
var Inst273 = 0;
var Inst274 = 0;
var Inst275 = 0;
var Inst276 = 0;
var Inst277 = 0;
var Inst278 = 0;
var Inst279 = 0;
var Inst280 = 0;
var Inst281 = 0;
var Inst282 = 0;
var Inst283 = 0;
var Inst284 = 0;
var Inst285 = 0;
var Inst286 = 0;
var Inst287 = 0;
var Inst288 = 0;
var Inst289 = 0;
var Inst290 = 0;
var Inst291 = 0;
var Inst292 = 0;
var Inst293 = 0;
var Inst294 = 0;
var Inst295 = 0;
var Inst296 = 0;
var Inst297 = 0;
var Inst298 = 0;
var Inst299 = 0;
var Inst300 = 0;
var Inst301 = 0;
var Inst302 = 0;
var Inst303 = 0;
var Inst304 = 0;
var Inst305 = 0;
var Inst306 = 0;
var Inst307 = 0;
var Inst308 = 0;
var Inst309 = 0;
var Inst310 = 0;
var Inst311 = 0;
var Inst312 = 0;
var Inst313 = 0;
var Inst314 = 0;
var Inst315 = 0;
var Inst316 = 0;
var Inst317 = 0;
var Inst318 = 0;
var Inst319 = 0;
var Inst320 = 0;
var Inst321 = 0;
var Inst322 = 0;
var Inst323 = 0;
var Inst324 = 0;
var Inst325 = 0;
var Inst326 = 0;
var Inst327 = 0;
var Inst328 = 0;
var Inst329 = 0;
var Inst330 = 0;
var Inst331 = 0;
var Inst332 = 0;
var Inst333 = 0;
var Inst334 = 0;
var Inst335 = 0;
var Inst336 = 0;
var Inst337 = 0;
var Inst338 = 0;
var Inst339 = 0;
var Inst340 = 0;
var Inst341 = 0;
var Inst342 = 0;
var Inst343 = 0;
var Inst344 = 0;
var Inst345 = 0;
var Inst346 = 0;
var Inst347 = 0;
var Inst348 = 0;
var Inst349 = 0;
var Inst350 = 0;
var Inst351 = 0;
var Inst352 = 0;
var Inst353 = 0;
var Inst354 = 0;
var Inst355 = 0;
var Inst356 = 0;
var Inst357 = 0;
var Inst358 = 0;
var Inst359 = 0;
var Inst360 = 0;
var Inst361 = 0;
var Inst362 = 0;
var Inst363 = 0;
var Inst364 = 0;
var Inst365 = 0;
var Inst366 = 0;
var Inst367 = 0;
var Inst368 = 0;
var Inst369 = 0;
var Inst370 = 0;
var Inst371 = 0;
var Inst372 = 0;
var Inst373 = 0;
var Inst374 = 0;
var Inst375 = 0;
var Inst376 = 0;
var Inst377 = 0;
var Inst378 = 0;
var Inst379 = 0;
var Inst380 = 0;
var Inst381 = 0;
var Inst382 = 0;
var Inst383 = 0;
var Inst384 = 0;
var Inst385 = 0;
var Inst386 = 0;
var Inst387 = 0;
var Inst388 = 0;
var Inst389 = 0;
var Inst390 = 0;
var Inst391 = 0;
var Inst392 = 0;
var Inst393 = 0;
var Inst394 = 0;
var Inst395 = 0;
var Inst396 = 0;
var Inst397 = 0;
var Inst398 = 0;
var Inst399 = 0;
var Inst400 = 0;
var Inst401 = 0;
var Inst402 = 0;
var Inst403 = 0;
var Inst404 = 0;
var Inst405 = 0;
var Inst406 = 0;
var Inst407 = 0;
var Inst408 = 0;
var Inst409 = 0;
var Inst410 = 0;
var Inst411 = 0;
var Inst412 = 0;
var Inst413 = 0;
var Inst414 = 0;
var Inst415 = 0;
var Inst416 = 0;
var Inst417 = 0;
var Inst418 = 0;
var Inst419 = 0;
var Inst420 = 0;
var Inst421 = 0;
var Inst422 = 0;
var Inst423 = 0;
var Inst424 = 0;
var Inst425 = 0;
var Inst426 = 0;
var Inst427 = 0;
var Inst428 = 0;
var Inst429 = 0;
var Inst430 = 0;
var Inst431 = 0;
var Inst432 = 0;
var Inst433 = 0;
var Inst434 = 0;
var Inst435 = 0;
var Inst436 = 0;
var Inst437 = 0;
var Inst438 = 0;
var Inst439 = 0;
var Inst440 = 0;
var Inst441 = 0;
var Inst442 = 0;
var Inst443 = 0;
var Inst444 = 0;
var Inst445 = 0;
var Inst446 = 0;
var Inst447 = 0;
var Inst448 = 0;
var Inst449 = 0;
var Inst450 = 0;
var Inst451 = 0;
var Inst452 = 0;
var Inst453 = 0;
var Inst454 = 0;
var Inst455 = 0;
var Inst456 = 0;
var Inst457 = 0;
var Inst458 = 0;
var Inst459 = 0;
var Inst460 = 0;
var Inst461 = 0;
var Inst462 = 0;
var Inst463 = 0;
var Inst464 = 0;
var Inst465 = 0;
var Inst466 = 0;
var Inst467 = 0;
var Inst468 = 0;
var Inst469 = 0;
var Inst470 = 0;
var Inst471 = 0;
var Inst472 = 0;
var Inst473 = 0;
var Inst474 = 0;
var Inst475 = 0;
var Inst476 = 0;
var Inst477 = 0;
var Inst478 = 0;
var Inst479 = 0;
var Inst480 = 0;
var Inst481 = 0;
var Inst482 = 0;
var Inst483 = 0;
var Inst484 = 0;
var Inst485 = 0;
var Inst486 = 0;
var Inst487 = 0;
var Inst488 = 0;
var Inst489 = 0;
var Inst490 = 0;
var Inst491 = 0;
var Inst492 = 0;
var Inst493 = 0;
var Inst494 = 0;
var Inst495 = 0;
var Inst496 = 0;
var Inst497 = 0;
var Inst498 = 0;
var Inst499 = 0;
var Inst500 = 0;
var Inst501 = 0;
var Inst502 = 0;
var Inst503 = 0;
var Inst504 = 0;
var Inst505 = 0;
var Inst506 = 0;
var Inst507 = 0;
var Inst508 = 0;
var Inst509 = 0;
var Inst510 = 0;
var Inst511 = 0;
var Inst512 = 0;
var Inst513 = 0;
var Inst514 = 0;
var Inst515 = 0;
var Inst516 = 0;
var Inst517 = 0;
var Inst518 = 0;
var Inst519 = 0;
var Inst520 = 0;
var Inst521 = 0;
var Inst522 = 0;
var Inst523 = 0;
var Inst524 = 0;
var Inst525 = 0;
var Inst526 = 0;
var Inst527 = 0;
var Inst528 = 0;
var Inst529 = 0;
var Inst530 = 0;
var Inst531 = 0;
var Inst532 = 0;
var Inst533 = 0;
var Inst534 = 0;
var Inst535 = 0;
var Inst536 = 0;
var Inst537 = 0;
var Inst538 = 0;
var Inst539 = 0;
var Inst540 = 0;
var Inst541 = 0;
var Inst542 = 0;
var Inst543 = 0;
var Inst544 = 0;
var Inst545 = 0;
var Inst546 = 0;
var Inst547 = 0;
var Inst548 = 0;
var Inst549 = 0;
var Inst550 = 0;
var Inst551 = 0;
var Inst552 = 0;
var Inst553 = 0;
var Inst554 = 0;
var Inst555 = 0;
var Inst556 = 0;
var Inst557 = 0;
var Inst558 = 0;
var Inst559 = 0;
var Inst560 = 0;
var Inst561 = 0;
var Inst562 = 0;
var Inst563 = 0;
var Inst564 = 0;
var Inst565 = 0;
var Inst566 = 0;
var Inst567 = 0;
var Inst568 = 0;
var Inst569 = 0;
var Inst570 = 0;
var Inst571 = 0;
var Inst572 = 0;
var Inst573 = 0;
var Inst574 = 0;
var Inst575 = 0;
var Inst576 = 0;
var Inst577 = 0;
var Inst578 = 0;
var Inst579 = 0;
var Inst580 = 0;
var Inst581 = 0;
var Inst582 = 0;
var Inst583 = 0;
var Inst584 = 0;
var Inst585 = 0;
var Inst586 = 0;
var Inst587 = 0;
var Inst588 = 0;
var Inst589 = 0;
var Inst590 = 0;
var Inst591 = 0;
var Inst592 = 0;
var Inst593 = 0;
var Inst594 = 0;
var Inst595 = 0;
var Inst596 = 0;
var Inst597 = 0;
var Inst598 = 0;
var Inst599 = 0;
var Inst600 = 0;
var Inst601 = 0;
var Inst602 = 0;
var Inst603 = 0;
var Inst604 = 0;
var Inst605 = 0;
var Inst606 = 0;
var Inst607 = 0;
var Inst608 = 0;
var Inst609 = 0;
var Inst610 = 0;
var Inst611 = 0;
var Inst612 = 0;
var Inst613 = 0;
var Inst614 = 0;
var Inst615 = 0;
var Inst616 = 0;
var Inst617 = 0;
var Inst618 = 0;
var Inst619 = 0;
var Inst620 = 0;
var Inst621 = 0;
var Inst622 = 0;
var Inst623 = 0;
var Inst624 = 0;
var Inst625 = 0;
var Inst626 = 0;
var Inst627 = 0;
var Inst628 = 0;
var Inst629 = 0;
var Inst630 = 0;
var Inst631 = 0;
var Inst632 = 0;
var Inst633 = 0;
var Inst634 = 0;
var Inst635 = 0;
var Inst636 = 0;
var Inst637 = 0;
var Inst638 = 0;
var Inst639 = 0;
var Inst640 = 0;
var Inst641 = 0;
var Inst642 = 0;
var Inst643 = 0;
var Inst644 = 0;
var Inst645 = 0;
var Inst646 = 0;
var Inst647 = 0;
var Inst648 = 0;
var Inst649 = 0;
var Inst650 = 0;
var Inst651 = 0;
var Inst652 = 0;
var Inst653 = 0;
var Inst654 = 0;
var Inst655 = 0;
var Inst656 = 0;
var Inst657 = 0;
var Inst658 = 0;
var Inst659 = 0;
var Inst660 = 0;
var Inst661 = 0;
var Inst662 = 0;
var Inst663 = 0;
var Inst664 = 0;
var Inst665 = 0;
var Inst666 = 0;
var Inst667 = 0;
var Inst668 = 0;
var Inst669 = 0;
var Inst670 = 0;
var Inst671 = 0;
var Inst672 = 0;
var Inst673 = 0;
var Inst674 = 0;
var Inst675 = 0;
var Inst676 = 0;
var Inst677 = 0;
var Inst678 = 0;
var Inst679 = 0;
var Inst680 = 0;
var Inst681 = 0;
var Inst682 = 0;
var Inst683 = 0;
var Inst684 = 0;
var Inst685 = 0;
var Inst686 = 0;
var Inst687 = 0;
var Inst688 = 0;
var Inst689 = 0;
var Inst690 = 0;
var Inst691 = 0;
var Inst692 = 0;
var Inst693 = 0;
var Inst694 = 0;
var Inst695 = 0;
var Inst696 = 0;
var Inst697 = 0;
var Inst698 = 0;
var Inst699 = 0;
var Inst700 = 0;
var Inst701 = 0;
var Inst702 = 0;
var Inst703 = 0;
var Inst704 = 0;
var Inst705 = 0;
var Inst706 = 0;
var Inst707 = 0;
var Inst708 = 0;
var Inst709 = 0;
var Inst710 = 0;
var Inst711 = 0;
var Inst712 = 0;
var Inst713 = 0;
var Inst714 = 0;
var Inst715 = 0;
var Inst716 = 0;
var Inst717 = 0;
var Inst718 = 0;
var Inst719 = 0;
var Inst720 = 0;
var Inst721 = 0;
var Inst722 = 0;
var Inst723 = 0;
var Inst724 = 0;
var Inst725 = 0;
var Inst726 = 0;
var Inst727 = 0;
var Inst728 = 0;
var Inst729 = 0;
var Inst730 = 0;
var Inst731 = 0;
var Inst732 = 0;
var Inst733 = 0;
var Inst734 = 0;
var Inst735 = 0;
var Inst736 = 0;
var Inst737 = 0;
var Inst738 = 0;
var Inst739 = 0;
var Inst740 = 0;
var Inst741 = 0;
var Inst742 = 0;
var Inst743 = 0;
var Inst744 = 0;
var Inst745 = 0;
var Inst746 = 0;
var Inst747 = 0;
var Inst748 = 0;
var Inst749 = 0;
var Inst750 = 0;
var Inst751 = 0;
var Inst752 = 0;
var Inst753 = 0;
var Inst754 = 0;
var Inst755 = 0;
var Inst756 = 0;
var Inst757 = 0;
var Inst758 = 0;
var Inst759 = 0;
var Inst760 = 0;
var Inst761 = 0;
var Inst762 = 0;
var Inst763 = 0;
var Inst764 = 0;
var Inst765 = 0;
var Inst766 = 0;
var Inst767 = 0;
var Inst768 = 0;
var Inst769 = 0;
var Inst770 = 0;
var Inst771 = 0;
var Inst772 = 0;
var Inst773 = 0;
var Inst774 = 0;
var Inst775 = 0;
var Inst776 = 0;
var Inst777 = 0;
var Inst778 = 0;
var Inst779 = 0;
var Inst780 = 0;
var Inst781 = 0;
var Inst782 = 0;
var Inst783 = 0;
var Inst784 = 0;
var Inst785 = 0;
var Inst786 = 0;
var Inst787 = 0;
var Inst788 = 0;
var Inst789 = 0;
var Inst790 = 0;
var Inst791 = 0;
var Inst792 = 0;
var Inst793 = 0;
var Inst794 = 0;
var Inst795 = 0;
var Inst796 = 0;
var Inst797 = 0;
var Inst798 = 0;
var Inst799 = 0;
var Inst800 = 0;
var Inst801 = 0;
var Inst802 = 0;
var Inst803 = 0;
var Inst804 = 0;
var Inst805 = 0;
var Inst806 = 0;
var Inst807 = 0;
var Inst808 = 0;
var Inst809 = 0;
var Inst810 = 0;
var Inst811 = 0;
var Inst812 = 0;
var Inst813 = 0;
var Inst814 = 0;
var Inst815 = 0;
var Inst816 = 0;
var Inst817 = 0;
var Inst818 = 0;
var Inst819 = 0;
var Inst820 = 0;
var Inst821 = 0;
var Inst822 = 0;
var Inst823 = 0;
var Inst824 = 0;
var Inst825 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */

/*
 * AES Cipher function: encrypt 'input' with Rijndael algorithm
 *
 *   takes   byte-array 'input' (16 bytes)
 *           2D byte-array key schedule 'w' (Nr+1 x Nb bytes)
 *
 *   applies Nr rounds (10/12/14) using key schedule w for 'add round key' stage
 *
 *   returns byte-array encrypted value (16 bytes)
 */
try { if (Inst0 <= 1000 && typeof (Cipher) != "undefined") {_RecordType("<428,434,13>",(Cipher)); Inst0++; } } catch(e) {}
function Cipher(input, w) {
try { if (Inst1 <= 1000 && typeof (input) != "undefined") {_RecordType("<435,440,13>",(input)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (w) != "undefined") {_RecordType("<442,443,13>",(w)); Inst2++; } } catch(e) {}
  // main Cipher function [§5.1]
  var Nb = 4; // block size (in words): no of columns in state (fixed at 4 for AES)
try { if (Inst3 <= 1000 && typeof (Nb) != "undefined") {_RecordType("<486,488,15>",(Nb)); Inst3++; } } catch(e) {}

try { if (Inst5 <= 1000 && typeof (w.length) != "undefined") {_RecordType("<576,584,17>",(w.length)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (w) != "undefined") {_RecordType("<576,577,17>",(w)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Nb) != "undefined") {_RecordType("<587,589,17>",(Nb)); Inst7++; } } catch(e) {}
  var Nr = w.length / Nb - 1; // no of rounds: 10/12/14 for 128/192/256-bit keys
try { if (Inst4 <= 1000 && typeof (Nr) != "undefined") {_RecordType("<571,573,17>",(Nr)); Inst4++; } } catch(e) {}

  var state = [[], [], [], []]; // initialise 4xNb byte-array 'state' with input [§3.4]
try { if (Inst8 <= 1000 && typeof (state) != "undefined") {_RecordType("<653,658,19>",(state)); Inst8++; } } catch(e) {}

  for (var i = 0; i < 4 * Nb; i++) {
try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<747,748,21>",(i)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<754,755,21>",(i)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Nb) != "undefined") {_RecordType("<762,764,21>",(Nb)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<766,767,21>",(i)); Inst12++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (input[i]) != "undefined") {_RecordType("<811,819,22>",(input[i])); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (input) != "undefined") {_RecordType("<811,816,22>",(input)); Inst21++; } } catch(e) {}
    state[i % 4][Math.floor(i / 4)] = input[i];
try { if (Inst13 <= 1000 && typeof (state[i % 4][Math.floor(i / 4)]) != "undefined") {_RecordType("<777,808,22>",(state[i % 4][Math.floor(i / 4)])); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (state[i % 4]) != "undefined") {_RecordType("<777,789,22>",(state[i % 4])); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (state) != "undefined") {_RecordType("<777,782,22>",(state)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<783,784,22>",(i)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Math.floor) != "undefined") {_RecordType("<790,800,22>",(Math.floor)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Math) != "undefined") {_RecordType("<790,794,22>",(Math)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (i) != "undefined") {_RecordType("<801,802,22>",(i)); Inst19++; } } catch(e) {}
  }

try { if (Inst23 <= 1000 && typeof (AddRoundKey) != "undefined") {_RecordType("<836,847,25>",(AddRoundKey)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (state) != "undefined") {_RecordType("<848,853,25>",(state)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (w) != "undefined") {_RecordType("<855,856,25>",(w)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Nb) != "undefined") {_RecordType("<861,863,25>",(Nb)); Inst26++; } } catch(e) {}
  state = AddRoundKey(state, w, 0, Nb);
try { if (Inst22 <= 1000 && typeof (state) != "undefined") {_RecordType("<828,833,25>",(state)); Inst22++; } } catch(e) {}

  for (var round = 1; round < Nr; round++) {
try { if (Inst27 <= 1000 && typeof (round) != "undefined") {_RecordType("<878,883,27>",(round)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (round) != "undefined") {_RecordType("<889,894,27>",(round)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (Nr) != "undefined") {_RecordType("<897,899,27>",(Nr)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (round) != "undefined") {_RecordType("<901,906,27>",(round)); Inst30++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (SubBytes) != "undefined") {_RecordType("<924,932,28>",(SubBytes)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (state) != "undefined") {_RecordType("<933,938,28>",(state)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (Nb) != "undefined") {_RecordType("<940,942,28>",(Nb)); Inst34++; } } catch(e) {}
    state = SubBytes(state, Nb);
try { if (Inst31 <= 1000 && typeof (state) != "undefined") {_RecordType("<916,921,28>",(state)); Inst31++; } } catch(e) {}
try { if (Inst36 <= 1000 && typeof (ShiftRows) != "undefined") {_RecordType("<957,966,29>",(ShiftRows)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (state) != "undefined") {_RecordType("<967,972,29>",(state)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (Nb) != "undefined") {_RecordType("<974,976,29>",(Nb)); Inst38++; } } catch(e) {}
    state = ShiftRows(state, Nb);
try { if (Inst35 <= 1000 && typeof (state) != "undefined") {_RecordType("<949,954,29>",(state)); Inst35++; } } catch(e) {}
try { if (Inst40 <= 1000 && typeof (MixColumns) != "undefined") {_RecordType("<991,1001,30>",(MixColumns)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (state) != "undefined") {_RecordType("<1002,1007,30>",(state)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (Nb) != "undefined") {_RecordType("<1009,1011,30>",(Nb)); Inst42++; } } catch(e) {}
    state = MixColumns(state, Nb);
try { if (Inst39 <= 1000 && typeof (state) != "undefined") {_RecordType("<983,988,30>",(state)); Inst39++; } } catch(e) {}
try { if (Inst44 <= 1000 && typeof (AddRoundKey) != "undefined") {_RecordType("<1026,1037,31>",(AddRoundKey)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (state) != "undefined") {_RecordType("<1038,1043,31>",(state)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (w) != "undefined") {_RecordType("<1045,1046,31>",(w)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (round) != "undefined") {_RecordType("<1048,1053,31>",(round)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (Nb) != "undefined") {_RecordType("<1055,1057,31>",(Nb)); Inst48++; } } catch(e) {}
    state = AddRoundKey(state, w, round, Nb);
try { if (Inst43 <= 1000 && typeof (state) != "undefined") {_RecordType("<1018,1023,31>",(state)); Inst43++; } } catch(e) {}
  }

try { if (Inst50 <= 1000 && typeof (SubBytes) != "undefined") {_RecordType("<1075,1083,34>",(SubBytes)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (state) != "undefined") {_RecordType("<1084,1089,34>",(state)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (Nb) != "undefined") {_RecordType("<1091,1093,34>",(Nb)); Inst52++; } } catch(e) {}
  state = SubBytes(state, Nb);
try { if (Inst49 <= 1000 && typeof (state) != "undefined") {_RecordType("<1067,1072,34>",(state)); Inst49++; } } catch(e) {}
try { if (Inst54 <= 1000 && typeof (ShiftRows) != "undefined") {_RecordType("<1106,1115,35>",(ShiftRows)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (state) != "undefined") {_RecordType("<1116,1121,35>",(state)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (Nb) != "undefined") {_RecordType("<1123,1125,35>",(Nb)); Inst56++; } } catch(e) {}
  state = ShiftRows(state, Nb);
try { if (Inst53 <= 1000 && typeof (state) != "undefined") {_RecordType("<1098,1103,35>",(state)); Inst53++; } } catch(e) {}
try { if (Inst58 <= 1000 && typeof (AddRoundKey) != "undefined") {_RecordType("<1138,1149,36>",(AddRoundKey)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (state) != "undefined") {_RecordType("<1150,1155,36>",(state)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (w) != "undefined") {_RecordType("<1157,1158,36>",(w)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (Nr) != "undefined") {_RecordType("<1160,1162,36>",(Nr)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (Nb) != "undefined") {_RecordType("<1164,1166,36>",(Nb)); Inst62++; } } catch(e) {}
  state = AddRoundKey(state, w, Nr, Nb);
try { if (Inst57 <= 1000 && typeof (state) != "undefined") {_RecordType("<1130,1135,36>",(state)); Inst57++; } } catch(e) {}
try { if (Inst64 <= 1000 && typeof (Array) != "undefined") {_RecordType("<1188,1193,37>",(Array)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (Nb) != "undefined") {_RecordType("<1198,1200,37>",(Nb)); Inst65++; } } catch(e) {}
  var output = new Array(4 * Nb); // convert state to 1-d array before returning [§3.4]
try { if (Inst63 <= 1000 && typeof (output) != "undefined") {_RecordType("<1175,1181,37>",(output)); Inst63++; } } catch(e) {}

  for (var i = 0; i < 4 * Nb; i++) {
try { if (Inst66 <= 1000 && typeof (i) != "undefined") {_RecordType("<1269,1270,39>",(i)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (i) != "undefined") {_RecordType("<1276,1277,39>",(i)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (Nb) != "undefined") {_RecordType("<1284,1286,39>",(Nb)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (i) != "undefined") {_RecordType("<1288,1289,39>",(i)); Inst69++; } } catch(e) {}
try { if (Inst72 <= 1000 && typeof (state[i % 4][Math.floor(i / 4)]) != "undefined") {_RecordType("<1311,1342,40>",(state[i % 4][Math.floor(i / 4)])); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (state[i % 4]) != "undefined") {_RecordType("<1311,1323,40>",(state[i % 4])); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (state) != "undefined") {_RecordType("<1311,1316,40>",(state)); Inst74++; } } catch(e) {}try { if (Inst75 <= 1000 && typeof (i) != "undefined") {_RecordType("<1317,1318,40>",(i)); Inst75++; } } catch(e) {}try { if (Inst76 <= 1000 && typeof (Math.floor) != "undefined") {_RecordType("<1324,1334,40>",(Math.floor)); Inst76++; } } catch(e) {}try { if (Inst77 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1324,1328,40>",(Math)); Inst77++; } } catch(e) {}try { if (Inst78 <= 1000 && typeof (i) != "undefined") {_RecordType("<1335,1336,40>",(i)); Inst78++; } } catch(e) {}
    output[i] = state[i % 4][Math.floor(i / 4)];
try { if (Inst70 <= 1000 && typeof (output[i]) != "undefined") {_RecordType("<1299,1308,40>",(output[i])); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (output) != "undefined") {_RecordType("<1299,1305,40>",(output)); Inst71++; } } catch(e) {}
  }

try { if (Inst79 <= 1000 && typeof (output) != "undefined") {_RecordType("<1358,1364,43>",(output)); Inst79++; } } catch(e) {}
  return output;
}

try { if (Inst80 <= 1000 && typeof (SubBytes) != "undefined") {_RecordType("<1378,1386,46>",(SubBytes)); Inst80++; } } catch(e) {}
function SubBytes(s, Nb) {
try { if (Inst81 <= 1000 && typeof (s) != "undefined") {_RecordType("<1387,1388,46>",(s)); Inst81++; } } catch(e) {}try { if (Inst82 <= 1000 && typeof (Nb) != "undefined") {_RecordType("<1390,1392,46>",(Nb)); Inst82++; } } catch(e) {}
  // apply SBox to state S [§5.1.1]
  for (var r = 0; r < 4; r++) {
try { if (Inst83 <= 1000 && typeof (r) != "undefined") {_RecordType("<1443,1444,48>",(r)); Inst83++; } } catch(e) {}try { if (Inst84 <= 1000 && typeof (r) != "undefined") {_RecordType("<1450,1451,48>",(r)); Inst84++; } } catch(e) {}try { if (Inst85 <= 1000 && typeof (r) != "undefined") {_RecordType("<1457,1458,48>",(r)); Inst85++; } } catch(e) {}
    for (var c = 0; c < Nb; c++) {
try { if (Inst86 <= 1000 && typeof (c) != "undefined") {_RecordType("<1477,1478,49>",(c)); Inst86++; } } catch(e) {}try { if (Inst87 <= 1000 && typeof (c) != "undefined") {_RecordType("<1484,1485,49>",(c)); Inst87++; } } catch(e) {}try { if (Inst88 <= 1000 && typeof (Nb) != "undefined") {_RecordType("<1488,1490,49>",(Nb)); Inst88++; } } catch(e) {}try { if (Inst89 <= 1000 && typeof (c) != "undefined") {_RecordType("<1492,1493,49>",(c)); Inst89++; } } catch(e) {}
try { if (Inst93 <= 1000 && typeof (Sbox[s[r][c]]) != "undefined") {_RecordType("<1515,1528,50>",(Sbox[s[r][c]])); Inst93++; } } catch(e) {}try { if (Inst94 <= 1000 && typeof (Sbox) != "undefined") {_RecordType("<1515,1519,50>",(Sbox)); Inst94++; } } catch(e) {}try { if (Inst95 <= 1000 && typeof (s[r][c]) != "undefined") {_RecordType("<1520,1527,50>",(s[r][c])); Inst95++; } } catch(e) {}try { if (Inst96 <= 1000 && typeof (s[r]) != "undefined") {_RecordType("<1520,1524,50>",(s[r])); Inst96++; } } catch(e) {}try { if (Inst97 <= 1000 && typeof (s) != "undefined") {_RecordType("<1520,1521,50>",(s)); Inst97++; } } catch(e) {}
      s[r][c] = Sbox[s[r][c]];
try { if (Inst90 <= 1000 && typeof (s[r][c]) != "undefined") {_RecordType("<1505,1512,50>",(s[r][c])); Inst90++; } } catch(e) {}try { if (Inst91 <= 1000 && typeof (s[r]) != "undefined") {_RecordType("<1505,1509,50>",(s[r])); Inst91++; } } catch(e) {}try { if (Inst92 <= 1000 && typeof (s) != "undefined") {_RecordType("<1505,1506,50>",(s)); Inst92++; } } catch(e) {}
    }
  }

try { if (Inst98 <= 1000 && typeof (s) != "undefined") {_RecordType("<1550,1551,54>",(s)); Inst98++; } } catch(e) {}
  return s;
}

try { if (Inst99 <= 1000 && typeof (ShiftRows) != "undefined") {_RecordType("<1565,1574,57>",(ShiftRows)); Inst99++; } } catch(e) {}
function ShiftRows(s, Nb) {
try { if (Inst100 <= 1000 && typeof (s) != "undefined") {_RecordType("<1575,1576,57>",(s)); Inst100++; } } catch(e) {}try { if (Inst101 <= 1000 && typeof (Nb) != "undefined") {_RecordType("<1578,1580,57>",(Nb)); Inst101++; } } catch(e) {}
  // shift row r of state S left by r bytes [§5.1.2]
try { if (Inst103 <= 1000 && typeof (Array) != "undefined") {_RecordType("<1651,1656,59>",(Array)); Inst103++; } } catch(e) {}
  var t = new Array(4);
try { if (Inst102 <= 1000 && typeof (t) != "undefined") {_RecordType("<1643,1644,59>",(t)); Inst102++; } } catch(e) {}

  for (var r = 1; r < 4; r++) {
try { if (Inst104 <= 1000 && typeof (r) != "undefined") {_RecordType("<1673,1674,61>",(r)); Inst104++; } } catch(e) {}try { if (Inst105 <= 1000 && typeof (r) != "undefined") {_RecordType("<1680,1681,61>",(r)); Inst105++; } } catch(e) {}try { if (Inst106 <= 1000 && typeof (r) != "undefined") {_RecordType("<1687,1688,61>",(r)); Inst106++; } } catch(e) {}
    for (var c = 0; c < 4; c++) {
try { if (Inst107 <= 1000 && typeof (c) != "undefined") {_RecordType("<1707,1708,62>",(c)); Inst107++; } } catch(e) {}try { if (Inst108 <= 1000 && typeof (c) != "undefined") {_RecordType("<1714,1715,62>",(c)); Inst108++; } } catch(e) {}try { if (Inst109 <= 1000 && typeof (c) != "undefined") {_RecordType("<1721,1722,62>",(c)); Inst109++; } } catch(e) {}
try { if (Inst112 <= 1000 && typeof (s[r][(c + r) % Nb]) != "undefined") {_RecordType("<1741,1759,63>",(s[r][(c + r) % Nb])); Inst112++; } } catch(e) {}try { if (Inst113 <= 1000 && typeof (s[r]) != "undefined") {_RecordType("<1741,1745,63>",(s[r])); Inst113++; } } catch(e) {}try { if (Inst114 <= 1000 && typeof (s) != "undefined") {_RecordType("<1741,1742,63>",(s)); Inst114++; } } catch(e) {}try { if (Inst115 <= 1000 && typeof (c) != "undefined") {_RecordType("<1747,1748,63>",(c)); Inst115++; } } catch(e) {}try { if (Inst116 <= 1000 && typeof (r) != "undefined") {_RecordType("<1751,1752,63>",(r)); Inst116++; } } catch(e) {}try { if (Inst117 <= 1000 && typeof (Nb) != "undefined") {_RecordType("<1756,1758,63>",(Nb)); Inst117++; } } catch(e) {}
      t[c] = s[r][(c + r) % Nb];
try { if (Inst110 <= 1000 && typeof (t[c]) != "undefined") {_RecordType("<1734,1738,63>",(t[c])); Inst110++; } } catch(e) {}try { if (Inst111 <= 1000 && typeof (t) != "undefined") {_RecordType("<1734,1735,63>",(t)); Inst111++; } } catch(e) {}
    } // shift into temp copy


    for (var c = 0; c < 4; c++) {
try { if (Inst118 <= 1000 && typeof (c) != "undefined") {_RecordType("<1806,1807,67>",(c)); Inst118++; } } catch(e) {}try { if (Inst119 <= 1000 && typeof (c) != "undefined") {_RecordType("<1813,1814,67>",(c)); Inst119++; } } catch(e) {}try { if (Inst120 <= 1000 && typeof (c) != "undefined") {_RecordType("<1820,1821,67>",(c)); Inst120++; } } catch(e) {}
try { if (Inst124 <= 1000 && typeof (t[c]) != "undefined") {_RecordType("<1843,1847,68>",(t[c])); Inst124++; } } catch(e) {}try { if (Inst125 <= 1000 && typeof (t) != "undefined") {_RecordType("<1843,1844,68>",(t)); Inst125++; } } catch(e) {}
      s[r][c] = t[c];
try { if (Inst121 <= 1000 && typeof (s[r][c]) != "undefined") {_RecordType("<1833,1840,68>",(s[r][c])); Inst121++; } } catch(e) {}try { if (Inst122 <= 1000 && typeof (s[r]) != "undefined") {_RecordType("<1833,1837,68>",(s[r])); Inst122++; } } catch(e) {}try { if (Inst123 <= 1000 && typeof (s) != "undefined") {_RecordType("<1833,1834,68>",(s)); Inst123++; } } catch(e) {}
    } // and copy back

  } // note that this will work for Nb=4,5,6, but not 7,8 (always 4 for AES):


try { if (Inst126 <= 1000 && typeof (s) != "undefined") {_RecordType("<1962,1963,74>",(s)); Inst126++; } } catch(e) {}
  return s; // see fp.gladman.plus.com/cryptography_technology/rijndael/aes.spec.311.pdf 
}

try { if (Inst127 <= 1000 && typeof (MixColumns) != "undefined") {_RecordType("<2055,2065,77>",(MixColumns)); Inst127++; } } catch(e) {}
function MixColumns(s, Nb) {
try { if (Inst128 <= 1000 && typeof (s) != "undefined") {_RecordType("<2066,2067,77>",(s)); Inst128++; } } catch(e) {}try { if (Inst129 <= 1000 && typeof (Nb) != "undefined") {_RecordType("<2069,2071,77>",(Nb)); Inst129++; } } catch(e) {}
  // combine bytes of each col of state S [§5.1.3]
  for (var c = 0; c < 4; c++) {
try { if (Inst130 <= 1000 && typeof (c) != "undefined") {_RecordType("<2137,2138,79>",(c)); Inst130++; } } catch(e) {}try { if (Inst131 <= 1000 && typeof (c) != "undefined") {_RecordType("<2144,2145,79>",(c)); Inst131++; } } catch(e) {}try { if (Inst132 <= 1000 && typeof (c) != "undefined") {_RecordType("<2151,2152,79>",(c)); Inst132++; } } catch(e) {}
try { if (Inst134 <= 1000 && typeof (Array) != "undefined") {_RecordType("<2174,2179,80>",(Array)); Inst134++; } } catch(e) {}
    var a = new Array(4); // 'a' is a copy of the current column from 's'
try { if (Inst133 <= 1000 && typeof (a) != "undefined") {_RecordType("<2166,2167,80>",(a)); Inst133++; } } catch(e) {}

try { if (Inst136 <= 1000 && typeof (Array) != "undefined") {_RecordType("<2249,2254,82>",(Array)); Inst136++; } } catch(e) {}
    var b = new Array(4); // 'b' is a•{02} in GF(2^8)
try { if (Inst135 <= 1000 && typeof (b) != "undefined") {_RecordType("<2241,2242,82>",(b)); Inst135++; } } catch(e) {}

    for (var i = 0; i < 4; i++) {
try { if (Inst137 <= 1000 && typeof (i) != "undefined") {_RecordType("<2301,2302,84>",(i)); Inst137++; } } catch(e) {}try { if (Inst138 <= 1000 && typeof (i) != "undefined") {_RecordType("<2308,2309,84>",(i)); Inst138++; } } catch(e) {}try { if (Inst139 <= 1000 && typeof (i) != "undefined") {_RecordType("<2315,2316,84>",(i)); Inst139++; } } catch(e) {}
try { if (Inst142 <= 1000 && typeof (s[i][c]) != "undefined") {_RecordType("<2335,2342,85>",(s[i][c])); Inst142++; } } catch(e) {}try { if (Inst143 <= 1000 && typeof (s[i]) != "undefined") {_RecordType("<2335,2339,85>",(s[i])); Inst143++; } } catch(e) {}try { if (Inst144 <= 1000 && typeof (s) != "undefined") {_RecordType("<2335,2336,85>",(s)); Inst144++; } } catch(e) {}
      a[i] = s[i][c];
try { if (Inst140 <= 1000 && typeof (a[i]) != "undefined") {_RecordType("<2328,2332,85>",(a[i])); Inst140++; } } catch(e) {}try { if (Inst141 <= 1000 && typeof (a) != "undefined") {_RecordType("<2328,2329,85>",(a)); Inst141++; } } catch(e) {}
try { if (Inst147 <= 1000 && typeof (s[i][c]) != "undefined") {_RecordType("<2357,2364,86>",(s[i][c])); Inst147++; } } catch(e) {}try { if (Inst148 <= 1000 && typeof (s[i]) != "undefined") {_RecordType("<2357,2361,86>",(s[i])); Inst148++; } } catch(e) {}try { if (Inst149 <= 1000 && typeof (s) != "undefined") {_RecordType("<2357,2358,86>",(s)); Inst149++; } } catch(e) {}try { if (Inst150 <= 1000 && typeof (s[i][c]) != "undefined") {_RecordType("<2374,2381,86>",(s[i][c])); Inst150++; } } catch(e) {}try { if (Inst151 <= 1000 && typeof (s[i]) != "undefined") {_RecordType("<2374,2378,86>",(s[i])); Inst151++; } } catch(e) {}try { if (Inst152 <= 1000 && typeof (s) != "undefined") {_RecordType("<2374,2375,86>",(s)); Inst152++; } } catch(e) {}try { if (Inst153 <= 1000 && typeof (s[i][c]) != "undefined") {_RecordType("<2398,2405,86>",(s[i][c])); Inst153++; } } catch(e) {}try { if (Inst154 <= 1000 && typeof (s[i]) != "undefined") {_RecordType("<2398,2402,86>",(s[i])); Inst154++; } } catch(e) {}try { if (Inst155 <= 1000 && typeof (s) != "undefined") {_RecordType("<2398,2399,86>",(s)); Inst155++; } } catch(e) {}
      b[i] = s[i][c] & 0x80 ? s[i][c] << 1 ^ 0x011b : s[i][c] << 1;
try { if (Inst145 <= 1000 && typeof (b[i]) != "undefined") {_RecordType("<2350,2354,86>",(b[i])); Inst145++; } } catch(e) {}try { if (Inst146 <= 1000 && typeof (b) != "undefined") {_RecordType("<2350,2351,86>",(b)); Inst146++; } } catch(e) {}
    } // a[n] ^ b[n] is a•{03} in GF(2^8)


try { if (Inst159 <= 1000 && typeof (b[0]) != "undefined") {_RecordType("<2470,2474,90>",(b[0])); Inst159++; } } catch(e) {}try { if (Inst160 <= 1000 && typeof (b) != "undefined") {_RecordType("<2470,2471,90>",(b)); Inst160++; } } catch(e) {}try { if (Inst161 <= 1000 && typeof (a[1]) != "undefined") {_RecordType("<2477,2481,90>",(a[1])); Inst161++; } } catch(e) {}try { if (Inst162 <= 1000 && typeof (a) != "undefined") {_RecordType("<2477,2478,90>",(a)); Inst162++; } } catch(e) {}try { if (Inst163 <= 1000 && typeof (b[1]) != "undefined") {_RecordType("<2484,2488,90>",(b[1])); Inst163++; } } catch(e) {}try { if (Inst164 <= 1000 && typeof (b) != "undefined") {_RecordType("<2484,2485,90>",(b)); Inst164++; } } catch(e) {}try { if (Inst165 <= 1000 && typeof (a[2]) != "undefined") {_RecordType("<2491,2495,90>",(a[2])); Inst165++; } } catch(e) {}try { if (Inst166 <= 1000 && typeof (a) != "undefined") {_RecordType("<2491,2492,90>",(a)); Inst166++; } } catch(e) {}try { if (Inst167 <= 1000 && typeof (a[3]) != "undefined") {_RecordType("<2498,2502,90>",(a[3])); Inst167++; } } catch(e) {}try { if (Inst168 <= 1000 && typeof (a) != "undefined") {_RecordType("<2498,2499,90>",(a)); Inst168++; } } catch(e) {}
    s[0][c] = b[0] ^ a[1] ^ b[1] ^ a[2] ^ a[3]; // 2*a0 + 3*a1 + a2 + a3
try { if (Inst156 <= 1000 && typeof (s[0][c]) != "undefined") {_RecordType("<2460,2467,90>",(s[0][c])); Inst156++; } } catch(e) {}try { if (Inst157 <= 1000 && typeof (s[0]) != "undefined") {_RecordType("<2460,2464,90>",(s[0])); Inst157++; } } catch(e) {}try { if (Inst158 <= 1000 && typeof (s) != "undefined") {_RecordType("<2460,2461,90>",(s)); Inst158++; } } catch(e) {}

try { if (Inst172 <= 1000 && typeof (a[0]) != "undefined") {_RecordType("<2544,2548,92>",(a[0])); Inst172++; } } catch(e) {}try { if (Inst173 <= 1000 && typeof (a) != "undefined") {_RecordType("<2544,2545,92>",(a)); Inst173++; } } catch(e) {}try { if (Inst174 <= 1000 && typeof (b[1]) != "undefined") {_RecordType("<2551,2555,92>",(b[1])); Inst174++; } } catch(e) {}try { if (Inst175 <= 1000 && typeof (b) != "undefined") {_RecordType("<2551,2552,92>",(b)); Inst175++; } } catch(e) {}try { if (Inst176 <= 1000 && typeof (a[2]) != "undefined") {_RecordType("<2558,2562,92>",(a[2])); Inst176++; } } catch(e) {}try { if (Inst177 <= 1000 && typeof (a) != "undefined") {_RecordType("<2558,2559,92>",(a)); Inst177++; } } catch(e) {}try { if (Inst178 <= 1000 && typeof (b[2]) != "undefined") {_RecordType("<2565,2569,92>",(b[2])); Inst178++; } } catch(e) {}try { if (Inst179 <= 1000 && typeof (b) != "undefined") {_RecordType("<2565,2566,92>",(b)); Inst179++; } } catch(e) {}try { if (Inst180 <= 1000 && typeof (a[3]) != "undefined") {_RecordType("<2572,2576,92>",(a[3])); Inst180++; } } catch(e) {}try { if (Inst181 <= 1000 && typeof (a) != "undefined") {_RecordType("<2572,2573,92>",(a)); Inst181++; } } catch(e) {}
    s[1][c] = a[0] ^ b[1] ^ a[2] ^ b[2] ^ a[3]; // a0 * 2*a1 + 3*a2 + a3
try { if (Inst169 <= 1000 && typeof (s[1][c]) != "undefined") {_RecordType("<2534,2541,92>",(s[1][c])); Inst169++; } } catch(e) {}try { if (Inst170 <= 1000 && typeof (s[1]) != "undefined") {_RecordType("<2534,2538,92>",(s[1])); Inst170++; } } catch(e) {}try { if (Inst171 <= 1000 && typeof (s) != "undefined") {_RecordType("<2534,2535,92>",(s)); Inst171++; } } catch(e) {}

try { if (Inst185 <= 1000 && typeof (a[0]) != "undefined") {_RecordType("<2618,2622,94>",(a[0])); Inst185++; } } catch(e) {}try { if (Inst186 <= 1000 && typeof (a) != "undefined") {_RecordType("<2618,2619,94>",(a)); Inst186++; } } catch(e) {}try { if (Inst187 <= 1000 && typeof (a[1]) != "undefined") {_RecordType("<2625,2629,94>",(a[1])); Inst187++; } } catch(e) {}try { if (Inst188 <= 1000 && typeof (a) != "undefined") {_RecordType("<2625,2626,94>",(a)); Inst188++; } } catch(e) {}try { if (Inst189 <= 1000 && typeof (b[2]) != "undefined") {_RecordType("<2632,2636,94>",(b[2])); Inst189++; } } catch(e) {}try { if (Inst190 <= 1000 && typeof (b) != "undefined") {_RecordType("<2632,2633,94>",(b)); Inst190++; } } catch(e) {}try { if (Inst191 <= 1000 && typeof (a[3]) != "undefined") {_RecordType("<2639,2643,94>",(a[3])); Inst191++; } } catch(e) {}try { if (Inst192 <= 1000 && typeof (a) != "undefined") {_RecordType("<2639,2640,94>",(a)); Inst192++; } } catch(e) {}try { if (Inst193 <= 1000 && typeof (b[3]) != "undefined") {_RecordType("<2646,2650,94>",(b[3])); Inst193++; } } catch(e) {}try { if (Inst194 <= 1000 && typeof (b) != "undefined") {_RecordType("<2646,2647,94>",(b)); Inst194++; } } catch(e) {}
    s[2][c] = a[0] ^ a[1] ^ b[2] ^ a[3] ^ b[3]; // a0 + a1 + 2*a2 + 3*a3
try { if (Inst182 <= 1000 && typeof (s[2][c]) != "undefined") {_RecordType("<2608,2615,94>",(s[2][c])); Inst182++; } } catch(e) {}try { if (Inst183 <= 1000 && typeof (s[2]) != "undefined") {_RecordType("<2608,2612,94>",(s[2])); Inst183++; } } catch(e) {}try { if (Inst184 <= 1000 && typeof (s) != "undefined") {_RecordType("<2608,2609,94>",(s)); Inst184++; } } catch(e) {}

try { if (Inst198 <= 1000 && typeof (a[0]) != "undefined") {_RecordType("<2692,2696,96>",(a[0])); Inst198++; } } catch(e) {}try { if (Inst199 <= 1000 && typeof (a) != "undefined") {_RecordType("<2692,2693,96>",(a)); Inst199++; } } catch(e) {}try { if (Inst200 <= 1000 && typeof (b[0]) != "undefined") {_RecordType("<2699,2703,96>",(b[0])); Inst200++; } } catch(e) {}try { if (Inst201 <= 1000 && typeof (b) != "undefined") {_RecordType("<2699,2700,96>",(b)); Inst201++; } } catch(e) {}try { if (Inst202 <= 1000 && typeof (a[1]) != "undefined") {_RecordType("<2706,2710,96>",(a[1])); Inst202++; } } catch(e) {}try { if (Inst203 <= 1000 && typeof (a) != "undefined") {_RecordType("<2706,2707,96>",(a)); Inst203++; } } catch(e) {}try { if (Inst204 <= 1000 && typeof (a[2]) != "undefined") {_RecordType("<2713,2717,96>",(a[2])); Inst204++; } } catch(e) {}try { if (Inst205 <= 1000 && typeof (a) != "undefined") {_RecordType("<2713,2714,96>",(a)); Inst205++; } } catch(e) {}try { if (Inst206 <= 1000 && typeof (b[3]) != "undefined") {_RecordType("<2720,2724,96>",(b[3])); Inst206++; } } catch(e) {}try { if (Inst207 <= 1000 && typeof (b) != "undefined") {_RecordType("<2720,2721,96>",(b)); Inst207++; } } catch(e) {}
    s[3][c] = a[0] ^ b[0] ^ a[1] ^ a[2] ^ b[3]; // 3*a0 + a1 + a2 + 2*a3
try { if (Inst195 <= 1000 && typeof (s[3][c]) != "undefined") {_RecordType("<2682,2689,96>",(s[3][c])); Inst195++; } } catch(e) {}try { if (Inst196 <= 1000 && typeof (s[3]) != "undefined") {_RecordType("<2682,2686,96>",(s[3])); Inst196++; } } catch(e) {}try { if (Inst197 <= 1000 && typeof (s) != "undefined") {_RecordType("<2682,2683,96>",(s)); Inst197++; } } catch(e) {}
  }

try { if (Inst208 <= 1000 && typeof (s) != "undefined") {_RecordType("<2765,2766,99>",(s)); Inst208++; } } catch(e) {}
  return s;
}

try { if (Inst209 <= 1000 && typeof (AddRoundKey) != "undefined") {_RecordType("<2780,2791,102>",(AddRoundKey)); Inst209++; } } catch(e) {}
function AddRoundKey(state, w, rnd, Nb) {
try { if (Inst210 <= 1000 && typeof (state) != "undefined") {_RecordType("<2792,2797,102>",(state)); Inst210++; } } catch(e) {}try { if (Inst211 <= 1000 && typeof (w) != "undefined") {_RecordType("<2799,2800,102>",(w)); Inst211++; } } catch(e) {}try { if (Inst212 <= 1000 && typeof (rnd) != "undefined") {_RecordType("<2802,2805,102>",(rnd)); Inst212++; } } catch(e) {}try { if (Inst213 <= 1000 && typeof (Nb) != "undefined") {_RecordType("<2807,2809,102>",(Nb)); Inst213++; } } catch(e) {}
  // xor Round Key into state S [§5.1.4]
  for (var r = 0; r < 4; r++) {
try { if (Inst214 <= 1000 && typeof (r) != "undefined") {_RecordType("<2865,2866,104>",(r)); Inst214++; } } catch(e) {}try { if (Inst215 <= 1000 && typeof (r) != "undefined") {_RecordType("<2872,2873,104>",(r)); Inst215++; } } catch(e) {}try { if (Inst216 <= 1000 && typeof (r) != "undefined") {_RecordType("<2879,2880,104>",(r)); Inst216++; } } catch(e) {}
    for (var c = 0; c < Nb; c++) {
try { if (Inst217 <= 1000 && typeof (c) != "undefined") {_RecordType("<2899,2900,105>",(c)); Inst217++; } } catch(e) {}try { if (Inst218 <= 1000 && typeof (c) != "undefined") {_RecordType("<2906,2907,105>",(c)); Inst218++; } } catch(e) {}try { if (Inst219 <= 1000 && typeof (Nb) != "undefined") {_RecordType("<2910,2912,105>",(Nb)); Inst219++; } } catch(e) {}try { if (Inst220 <= 1000 && typeof (c) != "undefined") {_RecordType("<2914,2915,105>",(c)); Inst220++; } } catch(e) {}
try { if (Inst224 <= 1000 && typeof (w[rnd * 4 + c][r]) != "undefined") {_RecordType("<2942,2959,106>",(w[rnd * 4 + c][r])); Inst224++; } } catch(e) {}try { if (Inst225 <= 1000 && typeof (w[rnd * 4 + c]) != "undefined") {_RecordType("<2942,2956,106>",(w[rnd * 4 + c])); Inst225++; } } catch(e) {}try { if (Inst226 <= 1000 && typeof (w) != "undefined") {_RecordType("<2942,2943,106>",(w)); Inst226++; } } catch(e) {}try { if (Inst227 <= 1000 && typeof (rnd) != "undefined") {_RecordType("<2944,2947,106>",(rnd)); Inst227++; } } catch(e) {}try { if (Inst228 <= 1000 && typeof (c) != "undefined") {_RecordType("<2954,2955,106>",(c)); Inst228++; } } catch(e) {}
      state[r][c] ^= w[rnd * 4 + c][r];
try { if (Inst221 <= 1000 && typeof (state[r][c]) != "undefined") {_RecordType("<2927,2938,106>",(state[r][c])); Inst221++; } } catch(e) {}try { if (Inst222 <= 1000 && typeof (state[r]) != "undefined") {_RecordType("<2927,2935,106>",(state[r])); Inst222++; } } catch(e) {}try { if (Inst223 <= 1000 && typeof (state) != "undefined") {_RecordType("<2927,2932,106>",(state)); Inst223++; } } catch(e) {}
    }
  }

try { if (Inst229 <= 1000 && typeof (state) != "undefined") {_RecordType("<2981,2986,110>",(state)); Inst229++; } } catch(e) {}
  return state;
}

try { if (Inst230 <= 1000 && typeof (KeyExpansion) != "undefined") {_RecordType("<3000,3012,113>",(KeyExpansion)); Inst230++; } } catch(e) {}
function KeyExpansion(key) {
try { if (Inst231 <= 1000 && typeof (key) != "undefined") {_RecordType("<3013,3016,113>",(key)); Inst231++; } } catch(e) {}
  // generate Key Schedule (byte-array Nr+1 x Nb) from Key [§5.2]
  var Nb = 4; // block size (in words): no of columns in state (fixed at 4 for AES)
try { if (Inst232 <= 1000 && typeof (Nb) != "undefined") {_RecordType("<3092,3094,115>",(Nb)); Inst232++; } } catch(e) {}

try { if (Inst234 <= 1000 && typeof (key.length) != "undefined") {_RecordType("<3182,3192,117>",(key.length)); Inst234++; } } catch(e) {}try { if (Inst235 <= 1000 && typeof (key) != "undefined") {_RecordType("<3182,3185,117>",(key)); Inst235++; } } catch(e) {}
  var Nk = key.length / 4; // key length (in words): 4/6/8 for 128/192/256-bit keys
try { if (Inst233 <= 1000 && typeof (Nk) != "undefined") {_RecordType("<3177,3179,117>",(Nk)); Inst233++; } } catch(e) {}

try { if (Inst237 <= 1000 && typeof (Nk) != "undefined") {_RecordType("<3267,3269,119>",(Nk)); Inst237++; } } catch(e) {}
  var Nr = Nk + 6; // no of rounds: 10/12/14 for 128/192/256-bit keys
try { if (Inst236 <= 1000 && typeof (Nr) != "undefined") {_RecordType("<3262,3264,119>",(Nr)); Inst236++; } } catch(e) {}

try { if (Inst239 <= 1000 && typeof (Array) != "undefined") {_RecordType("<3341,3346,121>",(Array)); Inst239++; } } catch(e) {}try { if (Inst240 <= 1000 && typeof (Nb) != "undefined") {_RecordType("<3347,3349,121>",(Nb)); Inst240++; } } catch(e) {}try { if (Inst241 <= 1000 && typeof (Nr) != "undefined") {_RecordType("<3353,3355,121>",(Nr)); Inst241++; } } catch(e) {}
  var w = new Array(Nb * (Nr + 1));
try { if (Inst238 <= 1000 && typeof (w) != "undefined") {_RecordType("<3333,3334,121>",(w)); Inst238++; } } catch(e) {}
try { if (Inst243 <= 1000 && typeof (Array) != "undefined") {_RecordType("<3380,3385,122>",(Array)); Inst243++; } } catch(e) {}
  var temp = new Array(4);
try { if (Inst242 <= 1000 && typeof (temp) != "undefined") {_RecordType("<3369,3373,122>",(temp)); Inst242++; } } catch(e) {}

  for (var i = 0; i < Nk; i++) {
try { if (Inst244 <= 1000 && typeof (i) != "undefined") {_RecordType("<3402,3403,124>",(i)); Inst244++; } } catch(e) {}try { if (Inst245 <= 1000 && typeof (i) != "undefined") {_RecordType("<3409,3410,124>",(i)); Inst245++; } } catch(e) {}try { if (Inst246 <= 1000 && typeof (Nk) != "undefined") {_RecordType("<3413,3415,124>",(Nk)); Inst246++; } } catch(e) {}try { if (Inst247 <= 1000 && typeof (i) != "undefined") {_RecordType("<3417,3418,124>",(i)); Inst247++; } } catch(e) {}
try { if (Inst249 <= 1000 && typeof (key[4 * i]) != "undefined") {_RecordType("<3437,3447,125>",(key[4 * i])); Inst249++; } } catch(e) {}try { if (Inst250 <= 1000 && typeof (key) != "undefined") {_RecordType("<3437,3440,125>",(key)); Inst250++; } } catch(e) {}try { if (Inst251 <= 1000 && typeof (i) != "undefined") {_RecordType("<3445,3446,125>",(i)); Inst251++; } } catch(e) {}try { if (Inst252 <= 1000 && typeof (key[4 * i + 1]) != "undefined") {_RecordType("<3449,3463,125>",(key[4 * i + 1])); Inst252++; } } catch(e) {}try { if (Inst253 <= 1000 && typeof (key) != "undefined") {_RecordType("<3449,3452,125>",(key)); Inst253++; } } catch(e) {}try { if (Inst254 <= 1000 && typeof (i) != "undefined") {_RecordType("<3457,3458,125>",(i)); Inst254++; } } catch(e) {}try { if (Inst255 <= 1000 && typeof (key[4 * i + 2]) != "undefined") {_RecordType("<3465,3479,125>",(key[4 * i + 2])); Inst255++; } } catch(e) {}try { if (Inst256 <= 1000 && typeof (key) != "undefined") {_RecordType("<3465,3468,125>",(key)); Inst256++; } } catch(e) {}try { if (Inst257 <= 1000 && typeof (i) != "undefined") {_RecordType("<3473,3474,125>",(i)); Inst257++; } } catch(e) {}try { if (Inst258 <= 1000 && typeof (key[4 * i + 3]) != "undefined") {_RecordType("<3481,3495,125>",(key[4 * i + 3])); Inst258++; } } catch(e) {}try { if (Inst259 <= 1000 && typeof (key) != "undefined") {_RecordType("<3481,3484,125>",(key)); Inst259++; } } catch(e) {}try { if (Inst260 <= 1000 && typeof (i) != "undefined") {_RecordType("<3489,3490,125>",(i)); Inst260++; } } catch(e) {}
    var r = [key[4 * i], key[4 * i + 1], key[4 * i + 2], key[4 * i + 3]];
try { if (Inst248 <= 1000 && typeof (r) != "undefined") {_RecordType("<3432,3433,125>",(r)); Inst248++; } } catch(e) {}
try { if (Inst263 <= 1000 && typeof (r) != "undefined") {_RecordType("<3509,3510,126>",(r)); Inst263++; } } catch(e) {}
    w[i] = r;
try { if (Inst261 <= 1000 && typeof (w[i]) != "undefined") {_RecordType("<3502,3506,126>",(w[i])); Inst261++; } } catch(e) {}try { if (Inst262 <= 1000 && typeof (w) != "undefined") {_RecordType("<3502,3503,126>",(w)); Inst262++; } } catch(e) {}
  }

  for (var i = Nk; i < Nb * (Nr + 1); i++) {
try { if (Inst264 <= 1000 && typeof (i) != "undefined") {_RecordType("<3528,3529,129>",(i)); Inst264++; } } catch(e) {}try { if (Inst265 <= 1000 && typeof (Nk) != "undefined") {_RecordType("<3532,3534,129>",(Nk)); Inst265++; } } catch(e) {}try { if (Inst266 <= 1000 && typeof (i) != "undefined") {_RecordType("<3536,3537,129>",(i)); Inst266++; } } catch(e) {}try { if (Inst267 <= 1000 && typeof (Nb) != "undefined") {_RecordType("<3540,3542,129>",(Nb)); Inst267++; } } catch(e) {}try { if (Inst268 <= 1000 && typeof (Nr) != "undefined") {_RecordType("<3546,3548,129>",(Nr)); Inst268++; } } catch(e) {}try { if (Inst269 <= 1000 && typeof (i) != "undefined") {_RecordType("<3555,3556,129>",(i)); Inst269++; } } catch(e) {}
try { if (Inst272 <= 1000 && typeof (Array) != "undefined") {_RecordType("<3577,3582,130>",(Array)); Inst272++; } } catch(e) {}
    w[i] = new Array(4);
try { if (Inst270 <= 1000 && typeof (w[i]) != "undefined") {_RecordType("<3566,3570,130>",(w[i])); Inst270++; } } catch(e) {}try { if (Inst271 <= 1000 && typeof (w) != "undefined") {_RecordType("<3566,3567,130>",(w)); Inst271++; } } catch(e) {}

    for (var t = 0; t < 4; t++) {
try { if (Inst273 <= 1000 && typeof (t) != "undefined") {_RecordType("<3601,3602,132>",(t)); Inst273++; } } catch(e) {}try { if (Inst274 <= 1000 && typeof (t) != "undefined") {_RecordType("<3608,3609,132>",(t)); Inst274++; } } catch(e) {}try { if (Inst275 <= 1000 && typeof (t) != "undefined") {_RecordType("<3615,3616,132>",(t)); Inst275++; } } catch(e) {}
try { if (Inst278 <= 1000 && typeof (w[i - 1][t]) != "undefined") {_RecordType("<3638,3649,133>",(w[i - 1][t])); Inst278++; } } catch(e) {}try { if (Inst279 <= 1000 && typeof (w[i - 1]) != "undefined") {_RecordType("<3638,3646,133>",(w[i - 1])); Inst279++; } } catch(e) {}try { if (Inst280 <= 1000 && typeof (w) != "undefined") {_RecordType("<3638,3639,133>",(w)); Inst280++; } } catch(e) {}try { if (Inst281 <= 1000 && typeof (i) != "undefined") {_RecordType("<3640,3641,133>",(i)); Inst281++; } } catch(e) {}
      temp[t] = w[i - 1][t];
try { if (Inst276 <= 1000 && typeof (temp[t]) != "undefined") {_RecordType("<3628,3635,133>",(temp[t])); Inst276++; } } catch(e) {}try { if (Inst277 <= 1000 && typeof (temp) != "undefined") {_RecordType("<3628,3632,133>",(temp)); Inst277++; } } catch(e) {}
    }

try { if (Inst282 <= 1000 && typeof (i) != "undefined") {_RecordType("<3666,3667,136>",(i)); Inst282++; } } catch(e) {}try { if (Inst283 <= 1000 && typeof (Nk) != "undefined") {_RecordType("<3670,3672,136>",(Nk)); Inst283++; } } catch(e) {}
    if (i % Nk == 0) {
try { if (Inst285 <= 1000 && typeof (SubWord) != "undefined") {_RecordType("<3694,3701,137>",(SubWord)); Inst285++; } } catch(e) {}try { if (Inst286 <= 1000 && typeof (RotWord) != "undefined") {_RecordType("<3702,3709,137>",(RotWord)); Inst286++; } } catch(e) {}try { if (Inst287 <= 1000 && typeof (temp) != "undefined") {_RecordType("<3710,3714,137>",(temp)); Inst287++; } } catch(e) {}
      temp = SubWord(RotWord(temp));
try { if (Inst284 <= 1000 && typeof (temp) != "undefined") {_RecordType("<3687,3691,137>",(temp)); Inst284++; } } catch(e) {}

      for (var t = 0; t < 4; t++) {
try { if (Inst288 <= 1000 && typeof (t) != "undefined") {_RecordType("<3734,3735,139>",(t)); Inst288++; } } catch(e) {}try { if (Inst289 <= 1000 && typeof (t) != "undefined") {_RecordType("<3741,3742,139>",(t)); Inst289++; } } catch(e) {}try { if (Inst290 <= 1000 && typeof (t) != "undefined") {_RecordType("<3748,3749,139>",(t)); Inst290++; } } catch(e) {}
try { if (Inst293 <= 1000 && typeof (Rcon[i / Nk][t]) != "undefined") {_RecordType("<3774,3789,140>",(Rcon[i / Nk][t])); Inst293++; } } catch(e) {}try { if (Inst294 <= 1000 && typeof (Rcon[i / Nk]) != "undefined") {_RecordType("<3774,3786,140>",(Rcon[i / Nk])); Inst294++; } } catch(e) {}try { if (Inst295 <= 1000 && typeof (Rcon) != "undefined") {_RecordType("<3774,3778,140>",(Rcon)); Inst295++; } } catch(e) {}try { if (Inst296 <= 1000 && typeof (i) != "undefined") {_RecordType("<3779,3780,140>",(i)); Inst296++; } } catch(e) {}try { if (Inst297 <= 1000 && typeof (Nk) != "undefined") {_RecordType("<3783,3785,140>",(Nk)); Inst297++; } } catch(e) {}
        temp[t] ^= Rcon[i / Nk][t];
try { if (Inst291 <= 1000 && typeof (temp[t]) != "undefined") {_RecordType("<3763,3770,140>",(temp[t])); Inst291++; } } catch(e) {}try { if (Inst292 <= 1000 && typeof (temp) != "undefined") {_RecordType("<3763,3767,140>",(temp)); Inst292++; } } catch(e) {}
      }
    } else {
try { if (Inst298 <= 1000 && typeof (Nk) != "undefined") {_RecordType("<3822,3824,143>",(Nk)); Inst298++; } } catch(e) {}try { if (Inst299 <= 1000 && typeof (i) != "undefined") {_RecordType("<3832,3833,143>",(i)); Inst299++; } } catch(e) {}try { if (Inst300 <= 1000 && typeof (Nk) != "undefined") {_RecordType("<3836,3838,143>",(Nk)); Inst300++; } } catch(e) {}
      if (Nk > 6 && i % Nk == 4) {
try { if (Inst302 <= 1000 && typeof (SubWord) != "undefined") {_RecordType("<3862,3869,144>",(SubWord)); Inst302++; } } catch(e) {}try { if (Inst303 <= 1000 && typeof (temp) != "undefined") {_RecordType("<3870,3874,144>",(temp)); Inst303++; } } catch(e) {}
        temp = SubWord(temp);
try { if (Inst301 <= 1000 && typeof (temp) != "undefined") {_RecordType("<3855,3859,144>",(temp)); Inst301++; } } catch(e) {}
      }
    }

    for (var t = 0; t < 4; t++) {
try { if (Inst304 <= 1000 && typeof (t) != "undefined") {_RecordType("<3905,3906,148>",(t)); Inst304++; } } catch(e) {}try { if (Inst305 <= 1000 && typeof (t) != "undefined") {_RecordType("<3912,3913,148>",(t)); Inst305++; } } catch(e) {}try { if (Inst306 <= 1000 && typeof (t) != "undefined") {_RecordType("<3919,3920,148>",(t)); Inst306++; } } catch(e) {}
try { if (Inst310 <= 1000 && typeof (w[i - Nk][t]) != "undefined") {_RecordType("<3942,3954,149>",(w[i - Nk][t])); Inst310++; } } catch(e) {}try { if (Inst311 <= 1000 && typeof (w[i - Nk]) != "undefined") {_RecordType("<3942,3951,149>",(w[i - Nk])); Inst311++; } } catch(e) {}try { if (Inst312 <= 1000 && typeof (w) != "undefined") {_RecordType("<3942,3943,149>",(w)); Inst312++; } } catch(e) {}try { if (Inst313 <= 1000 && typeof (i) != "undefined") {_RecordType("<3944,3945,149>",(i)); Inst313++; } } catch(e) {}try { if (Inst314 <= 1000 && typeof (Nk) != "undefined") {_RecordType("<3948,3950,149>",(Nk)); Inst314++; } } catch(e) {}try { if (Inst315 <= 1000 && typeof (temp[t]) != "undefined") {_RecordType("<3957,3964,149>",(temp[t])); Inst315++; } } catch(e) {}try { if (Inst316 <= 1000 && typeof (temp) != "undefined") {_RecordType("<3957,3961,149>",(temp)); Inst316++; } } catch(e) {}
      w[i][t] = w[i - Nk][t] ^ temp[t];
try { if (Inst307 <= 1000 && typeof (w[i][t]) != "undefined") {_RecordType("<3932,3939,149>",(w[i][t])); Inst307++; } } catch(e) {}try { if (Inst308 <= 1000 && typeof (w[i]) != "undefined") {_RecordType("<3932,3936,149>",(w[i])); Inst308++; } } catch(e) {}try { if (Inst309 <= 1000 && typeof (w) != "undefined") {_RecordType("<3932,3933,149>",(w)); Inst309++; } } catch(e) {}
    }
  }

try { if (Inst317 <= 1000 && typeof (w) != "undefined") {_RecordType("<3986,3987,153>",(w)); Inst317++; } } catch(e) {}
  return w;
}

try { if (Inst318 <= 1000 && typeof (SubWord) != "undefined") {_RecordType("<4001,4008,156>",(SubWord)); Inst318++; } } catch(e) {}
function SubWord(w) {
try { if (Inst319 <= 1000 && typeof (w) != "undefined") {_RecordType("<4009,4010,156>",(w)); Inst319++; } } catch(e) {}
  // apply SBox to 4-byte word w
  for (var i = 0; i < 4; i++) {
try { if (Inst320 <= 1000 && typeof (i) != "undefined") {_RecordType("<4058,4059,158>",(i)); Inst320++; } } catch(e) {}try { if (Inst321 <= 1000 && typeof (i) != "undefined") {_RecordType("<4065,4066,158>",(i)); Inst321++; } } catch(e) {}try { if (Inst322 <= 1000 && typeof (i) != "undefined") {_RecordType("<4072,4073,158>",(i)); Inst322++; } } catch(e) {}
try { if (Inst325 <= 1000 && typeof (Sbox[w[i]]) != "undefined") {_RecordType("<4090,4100,159>",(Sbox[w[i]])); Inst325++; } } catch(e) {}try { if (Inst326 <= 1000 && typeof (Sbox) != "undefined") {_RecordType("<4090,4094,159>",(Sbox)); Inst326++; } } catch(e) {}try { if (Inst327 <= 1000 && typeof (w[i]) != "undefined") {_RecordType("<4095,4099,159>",(w[i])); Inst327++; } } catch(e) {}try { if (Inst328 <= 1000 && typeof (w) != "undefined") {_RecordType("<4095,4096,159>",(w)); Inst328++; } } catch(e) {}
    w[i] = Sbox[w[i]];
try { if (Inst323 <= 1000 && typeof (w[i]) != "undefined") {_RecordType("<4083,4087,159>",(w[i])); Inst323++; } } catch(e) {}try { if (Inst324 <= 1000 && typeof (w) != "undefined") {_RecordType("<4083,4084,159>",(w)); Inst324++; } } catch(e) {}
  }

try { if (Inst329 <= 1000 && typeof (w) != "undefined") {_RecordType("<4116,4117,162>",(w)); Inst329++; } } catch(e) {}
  return w;
}

try { if (Inst330 <= 1000 && typeof (RotWord) != "undefined") {_RecordType("<4131,4138,165>",(RotWord)); Inst330++; } } catch(e) {}
function RotWord(w) {
try { if (Inst331 <= 1000 && typeof (w) != "undefined") {_RecordType("<4139,4140,165>",(w)); Inst331++; } } catch(e) {}
  // rotate 4-byte word w left by one byte
try { if (Inst334 <= 1000 && typeof (w[0]) != "undefined") {_RecordType("<4196,4200,167>",(w[0])); Inst334++; } } catch(e) {}try { if (Inst335 <= 1000 && typeof (w) != "undefined") {_RecordType("<4196,4197,167>",(w)); Inst335++; } } catch(e) {}
  w[4] = w[0];
try { if (Inst332 <= 1000 && typeof (w[4]) != "undefined") {_RecordType("<4189,4193,167>",(w[4])); Inst332++; } } catch(e) {}try { if (Inst333 <= 1000 && typeof (w) != "undefined") {_RecordType("<4189,4190,167>",(w)); Inst333++; } } catch(e) {}

  for (var i = 0; i < 4; i++) {
try { if (Inst336 <= 1000 && typeof (i) != "undefined") {_RecordType("<4214,4215,169>",(i)); Inst336++; } } catch(e) {}try { if (Inst337 <= 1000 && typeof (i) != "undefined") {_RecordType("<4221,4222,169>",(i)); Inst337++; } } catch(e) {}try { if (Inst338 <= 1000 && typeof (i) != "undefined") {_RecordType("<4228,4229,169>",(i)); Inst338++; } } catch(e) {}
try { if (Inst341 <= 1000 && typeof (w[i + 1]) != "undefined") {_RecordType("<4246,4254,170>",(w[i + 1])); Inst341++; } } catch(e) {}try { if (Inst342 <= 1000 && typeof (w) != "undefined") {_RecordType("<4246,4247,170>",(w)); Inst342++; } } catch(e) {}try { if (Inst343 <= 1000 && typeof (i) != "undefined") {_RecordType("<4248,4249,170>",(i)); Inst343++; } } catch(e) {}
    w[i] = w[i + 1];
try { if (Inst339 <= 1000 && typeof (w[i]) != "undefined") {_RecordType("<4239,4243,170>",(w[i])); Inst339++; } } catch(e) {}try { if (Inst340 <= 1000 && typeof (w) != "undefined") {_RecordType("<4239,4240,170>",(w)); Inst340++; } } catch(e) {}
  }

try { if (Inst344 <= 1000 && typeof (w) != "undefined") {_RecordType("<4270,4271,173>",(w)); Inst344++; } } catch(e) {}
  return w;
} // Sbox is pre-computed multiplicative inverse in GF(2^8) used in SubBytes and KeyExpansion [§5.1.1]


var Sbox = [0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16]; // Rcon is Round Constant used for the Key Expansion [1st col is 2^(r-1) in GF(2^8)] [§5.2]
try { if (Inst345 <= 1000 && typeof (Sbox) != "undefined") {_RecordType("<4382,4386,177>",(Sbox)); Inst345++; } } catch(e) {}

var Rcon = [[0x00, 0x00, 0x00, 0x00], [0x01, 0x00, 0x00, 0x00], [0x02, 0x00, 0x00, 0x00], [0x04, 0x00, 0x00, 0x00], [0x08, 0x00, 0x00, 0x00], [0x10, 0x00, 0x00, 0x00], [0x20, 0x00, 0x00, 0x00], [0x40, 0x00, 0x00, 0x00], [0x80, 0x00, 0x00, 0x00], [0x1b, 0x00, 0x00, 0x00], [0x36, 0x00, 0x00, 0x00]];
try { if (Inst346 <= 1000 && typeof (Rcon) != "undefined") {_RecordType("<6024,6028,179>",(Rcon)); Inst346++; } } catch(e) {}
/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */

/* 
 * Use AES to encrypt 'plaintext' with 'password' using 'nBits' key, in 'Counter' mode of operation
 *                           - see http://csrc.nist.gov/publications/nistpubs/800-38a/sp800-38a.pdf
 *   for each block
 *   - outputblock = cipher(counter, key)
 *   - cipherblock = plaintext xor outputblock
 */

try { if (Inst347 <= 1000 && typeof (AESEncryptCtr) != "undefined") {_RecordType("<6748,6761,190>",(AESEncryptCtr)); Inst347++; } } catch(e) {}
function AESEncryptCtr(plaintext, password, nBits) {
try { if (Inst348 <= 1000 && typeof (plaintext) != "undefined") {_RecordType("<6762,6771,190>",(plaintext)); Inst348++; } } catch(e) {}try { if (Inst349 <= 1000 && typeof (password) != "undefined") {_RecordType("<6773,6781,190>",(password)); Inst349++; } } catch(e) {}try { if (Inst350 <= 1000 && typeof (nBits) != "undefined") {_RecordType("<6783,6788,190>",(nBits)); Inst350++; } } catch(e) {}
try { if (Inst351 <= 1000 && typeof (nBits) != "undefined") {_RecordType("<6800,6805,191>",(nBits)); Inst351++; } } catch(e) {}try { if (Inst352 <= 1000 && typeof (nBits) != "undefined") {_RecordType("<6816,6821,191>",(nBits)); Inst352++; } } catch(e) {}try { if (Inst353 <= 1000 && typeof (nBits) != "undefined") {_RecordType("<6832,6837,191>",(nBits)); Inst353++; } } catch(e) {}
  if (!(nBits == 128 || nBits == 192 || nBits == 256)) {
    return '';
  } // standard allows 128/192/256 bit keys
  // for this example script, generate the key by applying Cipher to 1st 16/24/32 chars of password; 
  // for real-world applications, a more secure approach would be to hash the password e.g. with SHA-1


try { if (Inst355 <= 1000 && typeof (nBits) != "undefined") {_RecordType("<7130,7135,198>",(nBits)); Inst355++; } } catch(e) {}
  var nBytes = nBits / 8; // no bytes in key
try { if (Inst354 <= 1000 && typeof (nBytes) != "undefined") {_RecordType("<7121,7127,198>",(nBytes)); Inst354++; } } catch(e) {}

try { if (Inst357 <= 1000 && typeof (Array) != "undefined") {_RecordType("<7181,7186,200>",(Array)); Inst357++; } } catch(e) {}try { if (Inst358 <= 1000 && typeof (nBytes) != "undefined") {_RecordType("<7187,7193,200>",(nBytes)); Inst358++; } } catch(e) {}
  var pwBytes = new Array(nBytes);
try { if (Inst356 <= 1000 && typeof (pwBytes) != "undefined") {_RecordType("<7167,7174,200>",(pwBytes)); Inst356++; } } catch(e) {}

  for (var i = 0; i < nBytes; i++) {
try { if (Inst359 <= 1000 && typeof (i) != "undefined") {_RecordType("<7208,7209,202>",(i)); Inst359++; } } catch(e) {}try { if (Inst360 <= 1000 && typeof (i) != "undefined") {_RecordType("<7215,7216,202>",(i)); Inst360++; } } catch(e) {}try { if (Inst361 <= 1000 && typeof (nBytes) != "undefined") {_RecordType("<7219,7225,202>",(nBytes)); Inst361++; } } catch(e) {}try { if (Inst362 <= 1000 && typeof (i) != "undefined") {_RecordType("<7227,7228,202>",(i)); Inst362++; } } catch(e) {}
try { if (Inst365 <= 1000 && typeof (password.charCodeAt) != "undefined") {_RecordType("<7251,7270,203>",(password.charCodeAt)); Inst365++; } } catch(e) {}try { if (Inst366 <= 1000 && typeof (password) != "undefined") {_RecordType("<7251,7259,203>",(password)); Inst366++; } } catch(e) {}try { if (Inst367 <= 1000 && typeof (i) != "undefined") {_RecordType("<7271,7272,203>",(i)); Inst367++; } } catch(e) {}
    pwBytes[i] = password.charCodeAt(i) & 0xff;
try { if (Inst363 <= 1000 && typeof (pwBytes[i]) != "undefined") {_RecordType("<7238,7248,203>",(pwBytes[i])); Inst363++; } } catch(e) {}try { if (Inst364 <= 1000 && typeof (pwBytes) != "undefined") {_RecordType("<7238,7245,203>",(pwBytes)); Inst364++; } } catch(e) {}
  }

try { if (Inst369 <= 1000 && typeof (Cipher) != "undefined") {_RecordType("<7299,7305,206>",(Cipher)); Inst369++; } } catch(e) {}try { if (Inst370 <= 1000 && typeof (pwBytes) != "undefined") {_RecordType("<7306,7313,206>",(pwBytes)); Inst370++; } } catch(e) {}try { if (Inst371 <= 1000 && typeof (KeyExpansion) != "undefined") {_RecordType("<7315,7327,206>",(KeyExpansion)); Inst371++; } } catch(e) {}try { if (Inst372 <= 1000 && typeof (pwBytes) != "undefined") {_RecordType("<7328,7335,206>",(pwBytes)); Inst372++; } } catch(e) {}
  var key = Cipher(pwBytes, KeyExpansion(pwBytes));
try { if (Inst368 <= 1000 && typeof (key) != "undefined") {_RecordType("<7293,7296,206>",(key)); Inst368++; } } catch(e) {}
try { if (Inst374 <= 1000 && typeof (key.concat) != "undefined") {_RecordType("<7347,7357,207>",(key.concat)); Inst374++; } } catch(e) {}try { if (Inst375 <= 1000 && typeof (key) != "undefined") {_RecordType("<7347,7350,207>",(key)); Inst375++; } } catch(e) {}try { if (Inst376 <= 1000 && typeof (key.slice) != "undefined") {_RecordType("<7358,7367,207>",(key.slice)); Inst376++; } } catch(e) {}try { if (Inst377 <= 1000 && typeof (key) != "undefined") {_RecordType("<7358,7361,207>",(key)); Inst377++; } } catch(e) {}try { if (Inst378 <= 1000 && typeof (nBytes) != "undefined") {_RecordType("<7371,7377,207>",(nBytes)); Inst378++; } } catch(e) {}
  key = key.concat(key.slice(0, nBytes - 16)); // key is now 16/24/32 bytes long
try { if (Inst373 <= 1000 && typeof (key) != "undefined") {_RecordType("<7341,7344,207>",(key)); Inst373++; } } catch(e) {}
  // initialise counter block (NIST SP800-38A §B.2): millisecond time-stamp for nonce in 1st 8 bytes,
  // block counter in 2nd 8 bytes

  var blockSize = 16; // block size fixed at 16 bytes / 128 bits (Nb=4) for AES
try { if (Inst379 <= 1000 && typeof (blockSize) != "undefined") {_RecordType("<7563,7572,211>",(blockSize)); Inst379++; } } catch(e) {}

try { if (Inst381 <= 1000 && typeof (Array) != "undefined") {_RecordType("<7663,7668,213>",(Array)); Inst381++; } } catch(e) {}try { if (Inst382 <= 1000 && typeof (blockSize) != "undefined") {_RecordType("<7669,7678,213>",(blockSize)); Inst382++; } } catch(e) {}
  var counterBlock = new Array(blockSize); // block size fixed at 16 bytes / 128 bits (Nb=4) for AES
try { if (Inst380 <= 1000 && typeof (counterBlock) != "undefined") {_RecordType("<7644,7656,213>",(counterBlock)); Inst380++; } } catch(e) {}

try { if (Inst384 <= 1000 && typeof (new Date("2000-01-01").getTime) != "undefined") {_RecordType("<7754,7784,215>",(new Date("2000-01-01").getTime)); Inst384++; } } catch(e) {}try { if (Inst385 <= 1000 && typeof (Date) != "undefined") {_RecordType("<7758,7762,215>",(Date)); Inst385++; } } catch(e) {}
  var nonce = new Date("2000-01-01").getTime(); // milliseconds since 1-Jan-1970;
try { if (Inst383 <= 1000 && typeof (nonce) != "undefined") {_RecordType("<7746,7751,215>",(nonce)); Inst383++; } } catch(e) {}
  // fixed for repeatability
  // encode nonce in two stages to cater for JavaScript 32-bit limit on bitwise ops

  for (var i = 0; i < 4; i++) {
try { if (Inst386 <= 1000 && typeof (i) != "undefined") {_RecordType("<7947,7948,219>",(i)); Inst386++; } } catch(e) {}try { if (Inst387 <= 1000 && typeof (i) != "undefined") {_RecordType("<7954,7955,219>",(i)); Inst387++; } } catch(e) {}try { if (Inst388 <= 1000 && typeof (i) != "undefined") {_RecordType("<7961,7962,219>",(i)); Inst388++; } } catch(e) {}
try { if (Inst391 <= 1000 && typeof (nonce) != "undefined") {_RecordType("<7990,7995,220>",(nonce)); Inst391++; } } catch(e) {}try { if (Inst392 <= 1000 && typeof (i) != "undefined") {_RecordType("<8000,8001,220>",(i)); Inst392++; } } catch(e) {}
    counterBlock[i] = nonce >>> i * 8 & 0xff;
try { if (Inst389 <= 1000 && typeof (counterBlock[i]) != "undefined") {_RecordType("<7972,7987,220>",(counterBlock[i])); Inst389++; } } catch(e) {}try { if (Inst390 <= 1000 && typeof (counterBlock) != "undefined") {_RecordType("<7972,7984,220>",(counterBlock)); Inst390++; } } catch(e) {}
  }

  for (var i = 0; i < 4; i++) {
try { if (Inst393 <= 1000 && typeof (i) != "undefined") {_RecordType("<8030,8031,223>",(i)); Inst393++; } } catch(e) {}try { if (Inst394 <= 1000 && typeof (i) != "undefined") {_RecordType("<8037,8038,223>",(i)); Inst394++; } } catch(e) {}try { if (Inst395 <= 1000 && typeof (i) != "undefined") {_RecordType("<8044,8045,223>",(i)); Inst395++; } } catch(e) {}
try { if (Inst399 <= 1000 && typeof (nonce) != "undefined") {_RecordType("<8077,8082,224>",(nonce)); Inst399++; } } catch(e) {}try { if (Inst400 <= 1000 && typeof (i) != "undefined") {_RecordType("<8101,8102,224>",(i)); Inst400++; } } catch(e) {}
    counterBlock[i + 4] = nonce / 0x100000000 >>> i * 8 & 0xff;
try { if (Inst396 <= 1000 && typeof (counterBlock[i + 4]) != "undefined") {_RecordType("<8055,8074,224>",(counterBlock[i + 4])); Inst396++; } } catch(e) {}try { if (Inst397 <= 1000 && typeof (counterBlock) != "undefined") {_RecordType("<8055,8067,224>",(counterBlock)); Inst397++; } } catch(e) {}try { if (Inst398 <= 1000 && typeof (i) != "undefined") {_RecordType("<8068,8069,224>",(i)); Inst398++; } } catch(e) {}
  } // generate key schedule - an expansion of the key into distinct Key Rounds for each round


try { if (Inst402 <= 1000 && typeof (KeyExpansion) != "undefined") {_RecordType("<8232,8244,228>",(KeyExpansion)); Inst402++; } } catch(e) {}try { if (Inst403 <= 1000 && typeof (key) != "undefined") {_RecordType("<8245,8248,228>",(key)); Inst403++; } } catch(e) {}
  var keySchedule = KeyExpansion(key);
try { if (Inst401 <= 1000 && typeof (keySchedule) != "undefined") {_RecordType("<8218,8229,228>",(keySchedule)); Inst401++; } } catch(e) {}
try { if (Inst405 <= 1000 && typeof (Math.ceil) != "undefined") {_RecordType("<8270,8279,229>",(Math.ceil)); Inst405++; } } catch(e) {}try { if (Inst406 <= 1000 && typeof (Math) != "undefined") {_RecordType("<8270,8274,229>",(Math)); Inst406++; } } catch(e) {}try { if (Inst407 <= 1000 && typeof (plaintext.length) != "undefined") {_RecordType("<8280,8296,229>",(plaintext.length)); Inst407++; } } catch(e) {}try { if (Inst408 <= 1000 && typeof (plaintext) != "undefined") {_RecordType("<8280,8289,229>",(plaintext)); Inst408++; } } catch(e) {}try { if (Inst409 <= 1000 && typeof (blockSize) != "undefined") {_RecordType("<8299,8308,229>",(blockSize)); Inst409++; } } catch(e) {}
  var blockCount = Math.ceil(plaintext.length / blockSize);
try { if (Inst404 <= 1000 && typeof (blockCount) != "undefined") {_RecordType("<8257,8267,229>",(blockCount)); Inst404++; } } catch(e) {}
try { if (Inst411 <= 1000 && typeof (Array) != "undefined") {_RecordType("<8334,8339,230>",(Array)); Inst411++; } } catch(e) {}try { if (Inst412 <= 1000 && typeof (blockCount) != "undefined") {_RecordType("<8340,8350,230>",(blockCount)); Inst412++; } } catch(e) {}
  var ciphertext = new Array(blockCount); // ciphertext as array of strings
try { if (Inst410 <= 1000 && typeof (ciphertext) != "undefined") {_RecordType("<8317,8327,230>",(ciphertext)); Inst410++; } } catch(e) {}

  for (var b = 0; b < blockCount; b++) {
try { if (Inst413 <= 1000 && typeof (b) != "undefined") {_RecordType("<8399,8400,232>",(b)); Inst413++; } } catch(e) {}try { if (Inst414 <= 1000 && typeof (b) != "undefined") {_RecordType("<8406,8407,232>",(b)); Inst414++; } } catch(e) {}try { if (Inst415 <= 1000 && typeof (blockCount) != "undefined") {_RecordType("<8410,8420,232>",(blockCount)); Inst415++; } } catch(e) {}try { if (Inst416 <= 1000 && typeof (b) != "undefined") {_RecordType("<8422,8423,232>",(b)); Inst416++; } } catch(e) {}
    // set counter (block #) in last 8 bytes of counter block (leaving nonce in 1st 8 bytes)
    // again done in two stages for 32-bit ops
    for (var c = 0; c < 4; c++) {
try { if (Inst417 <= 1000 && typeof (c) != "undefined") {_RecordType("<8582,8583,235>",(c)); Inst417++; } } catch(e) {}try { if (Inst418 <= 1000 && typeof (c) != "undefined") {_RecordType("<8589,8590,235>",(c)); Inst418++; } } catch(e) {}try { if (Inst419 <= 1000 && typeof (c) != "undefined") {_RecordType("<8596,8597,235>",(c)); Inst419++; } } catch(e) {}
try { if (Inst423 <= 1000 && typeof (b) != "undefined") {_RecordType("<8632,8633,236>",(b)); Inst423++; } } catch(e) {}try { if (Inst424 <= 1000 && typeof (c) != "undefined") {_RecordType("<8638,8639,236>",(c)); Inst424++; } } catch(e) {}
      counterBlock[15 - c] = b >>> c * 8 & 0xff;
try { if (Inst420 <= 1000 && typeof (counterBlock[15 - c]) != "undefined") {_RecordType("<8609,8629,236>",(counterBlock[15 - c])); Inst420++; } } catch(e) {}try { if (Inst421 <= 1000 && typeof (counterBlock) != "undefined") {_RecordType("<8609,8621,236>",(counterBlock)); Inst421++; } } catch(e) {}try { if (Inst422 <= 1000 && typeof (c) != "undefined") {_RecordType("<8627,8628,236>",(c)); Inst422++; } } catch(e) {}
    }

    for (var c = 0; c < 4; c++) {
try { if (Inst425 <= 1000 && typeof (c) != "undefined") {_RecordType("<8672,8673,239>",(c)); Inst425++; } } catch(e) {}try { if (Inst426 <= 1000 && typeof (c) != "undefined") {_RecordType("<8679,8680,239>",(c)); Inst426++; } } catch(e) {}try { if (Inst427 <= 1000 && typeof (c) != "undefined") {_RecordType("<8686,8687,239>",(c)); Inst427++; } } catch(e) {}
try { if (Inst431 <= 1000 && typeof (b) != "undefined") {_RecordType("<8726,8727,240>",(b)); Inst431++; } } catch(e) {}try { if (Inst432 <= 1000 && typeof (c) != "undefined") {_RecordType("<8746,8747,240>",(c)); Inst432++; } } catch(e) {}
      counterBlock[15 - c - 4] = b / 0x100000000 >>> c * 8;
try { if (Inst428 <= 1000 && typeof (counterBlock[15 - c - 4]) != "undefined") {_RecordType("<8699,8723,240>",(counterBlock[15 - c - 4])); Inst428++; } } catch(e) {}try { if (Inst429 <= 1000 && typeof (counterBlock) != "undefined") {_RecordType("<8699,8711,240>",(counterBlock)); Inst429++; } } catch(e) {}try { if (Inst430 <= 1000 && typeof (c) != "undefined") {_RecordType("<8717,8718,240>",(c)); Inst430++; } } catch(e) {}
    }

try { if (Inst434 <= 1000 && typeof (Cipher) != "undefined") {_RecordType("<8781,8787,243>",(Cipher)); Inst434++; } } catch(e) {}try { if (Inst435 <= 1000 && typeof (counterBlock) != "undefined") {_RecordType("<8788,8800,243>",(counterBlock)); Inst435++; } } catch(e) {}try { if (Inst436 <= 1000 && typeof (keySchedule) != "undefined") {_RecordType("<8802,8813,243>",(keySchedule)); Inst436++; } } catch(e) {}
    var cipherCntr = Cipher(counterBlock, keySchedule); // -- encrypt counter block --
try { if (Inst433 <= 1000 && typeof (cipherCntr) != "undefined") {_RecordType("<8768,8778,243>",(cipherCntr)); Inst433++; } } catch(e) {}
    // calculate length of final block:

try { if (Inst438 <= 1000 && typeof (b) != "undefined") {_RecordType("<8910,8911,246>",(b)); Inst438++; } } catch(e) {}try { if (Inst439 <= 1000 && typeof (blockCount) != "undefined") {_RecordType("<8914,8924,246>",(blockCount)); Inst439++; } } catch(e) {}try { if (Inst440 <= 1000 && typeof (blockSize) != "undefined") {_RecordType("<8931,8940,246>",(blockSize)); Inst440++; } } catch(e) {}try { if (Inst441 <= 1000 && typeof (plaintext.length) != "undefined") {_RecordType("<8944,8960,246>",(plaintext.length)); Inst441++; } } catch(e) {}try { if (Inst442 <= 1000 && typeof (plaintext) != "undefined") {_RecordType("<8944,8953,246>",(plaintext)); Inst442++; } } catch(e) {}try { if (Inst443 <= 1000 && typeof (blockSize) != "undefined") {_RecordType("<8968,8977,246>",(blockSize)); Inst443++; } } catch(e) {}
    var blockLength = b < blockCount - 1 ? blockSize : (plaintext.length - 1) % blockSize + 1;
try { if (Inst437 <= 1000 && typeof (blockLength) != "undefined") {_RecordType("<8896,8907,246>",(blockLength)); Inst437++; } } catch(e) {}
    var ct = '';
try { if (Inst444 <= 1000 && typeof (ct) != "undefined") {_RecordType("<8991,8993,247>",(ct)); Inst444++; } } catch(e) {}

    for (var i = 0; i < blockLength; i++) {
try { if (Inst445 <= 1000 && typeof (i) != "undefined") {_RecordType("<9014,9015,249>",(i)); Inst445++; } } catch(e) {}try { if (Inst446 <= 1000 && typeof (i) != "undefined") {_RecordType("<9021,9022,249>",(i)); Inst446++; } } catch(e) {}try { if (Inst447 <= 1000 && typeof (blockLength) != "undefined") {_RecordType("<9025,9036,249>",(blockLength)); Inst447++; } } catch(e) {}try { if (Inst448 <= 1000 && typeof (i) != "undefined") {_RecordType("<9038,9039,249>",(i)); Inst448++; } } catch(e) {}
      // -- xor plaintext with ciphered counter byte-by-byte --
try { if (Inst450 <= 1000 && typeof (plaintext.charCodeAt) != "undefined") {_RecordType("<9135,9155,251>",(plaintext.charCodeAt)); Inst450++; } } catch(e) {}try { if (Inst451 <= 1000 && typeof (plaintext) != "undefined") {_RecordType("<9135,9144,251>",(plaintext)); Inst451++; } } catch(e) {}try { if (Inst452 <= 1000 && typeof (b) != "undefined") {_RecordType("<9156,9157,251>",(b)); Inst452++; } } catch(e) {}try { if (Inst453 <= 1000 && typeof (blockSize) != "undefined") {_RecordType("<9160,9169,251>",(blockSize)); Inst453++; } } catch(e) {}try { if (Inst454 <= 1000 && typeof (i) != "undefined") {_RecordType("<9172,9173,251>",(i)); Inst454++; } } catch(e) {}
      var plaintextByte = plaintext.charCodeAt(b * blockSize + i);
try { if (Inst449 <= 1000 && typeof (plaintextByte) != "undefined") {_RecordType("<9119,9132,251>",(plaintextByte)); Inst449++; } } catch(e) {}
try { if (Inst456 <= 1000 && typeof (plaintextByte) != "undefined") {_RecordType("<9199,9212,252>",(plaintextByte)); Inst456++; } } catch(e) {}try { if (Inst457 <= 1000 && typeof (cipherCntr[i]) != "undefined") {_RecordType("<9215,9228,252>",(cipherCntr[i])); Inst457++; } } catch(e) {}try { if (Inst458 <= 1000 && typeof (cipherCntr) != "undefined") {_RecordType("<9215,9225,252>",(cipherCntr)); Inst458++; } } catch(e) {}
      var cipherByte = plaintextByte ^ cipherCntr[i];
try { if (Inst455 <= 1000 && typeof (cipherByte) != "undefined") {_RecordType("<9186,9196,252>",(cipherByte)); Inst455++; } } catch(e) {}
try { if (Inst460 <= 1000 && typeof (String.fromCharCode) != "undefined") {_RecordType("<9242,9261,253>",(String.fromCharCode)); Inst460++; } } catch(e) {}try { if (Inst461 <= 1000 && typeof (String) != "undefined") {_RecordType("<9242,9248,253>",(String)); Inst461++; } } catch(e) {}try { if (Inst462 <= 1000 && typeof (cipherByte) != "undefined") {_RecordType("<9262,9272,253>",(cipherByte)); Inst462++; } } catch(e) {}
      ct += String.fromCharCode(cipherByte);
try { if (Inst459 <= 1000 && typeof (ct) != "undefined") {_RecordType("<9236,9238,253>",(ct)); Inst459++; } } catch(e) {}
    } // ct is now ciphertext for this block


try { if (Inst465 <= 1000 && typeof (escCtrlChars) != "undefined") {_RecordType("<9342,9354,257>",(escCtrlChars)); Inst465++; } } catch(e) {}try { if (Inst466 <= 1000 && typeof (ct) != "undefined") {_RecordType("<9355,9357,257>",(ct)); Inst466++; } } catch(e) {}
    ciphertext[b] = escCtrlChars(ct); // escape troublesome characters in ciphertext
try { if (Inst463 <= 1000 && typeof (ciphertext[b]) != "undefined") {_RecordType("<9326,9339,257>",(ciphertext[b])); Inst463++; } } catch(e) {}try { if (Inst464 <= 1000 && typeof (ciphertext) != "undefined") {_RecordType("<9326,9336,257>",(ciphertext)); Inst464++; } } catch(e) {}
  } // convert the nonce to a string to go on the front of the ciphertext


  var ctrTxt = '';
try { if (Inst467 <= 1000 && typeof (ctrTxt) != "undefined") {_RecordType("<9489,9495,261>",(ctrTxt)); Inst467++; } } catch(e) {}

  for (var i = 0; i < 8; i++) {
try { if (Inst468 <= 1000 && typeof (i) != "undefined") {_RecordType("<9514,9515,263>",(i)); Inst468++; } } catch(e) {}try { if (Inst469 <= 1000 && typeof (i) != "undefined") {_RecordType("<9521,9522,263>",(i)); Inst469++; } } catch(e) {}try { if (Inst470 <= 1000 && typeof (i) != "undefined") {_RecordType("<9528,9529,263>",(i)); Inst470++; } } catch(e) {}
try { if (Inst472 <= 1000 && typeof (String.fromCharCode) != "undefined") {_RecordType("<9549,9568,264>",(String.fromCharCode)); Inst472++; } } catch(e) {}try { if (Inst473 <= 1000 && typeof (String) != "undefined") {_RecordType("<9549,9555,264>",(String)); Inst473++; } } catch(e) {}try { if (Inst474 <= 1000 && typeof (counterBlock[i]) != "undefined") {_RecordType("<9569,9584,264>",(counterBlock[i])); Inst474++; } } catch(e) {}try { if (Inst475 <= 1000 && typeof (counterBlock) != "undefined") {_RecordType("<9569,9581,264>",(counterBlock)); Inst475++; } } catch(e) {}
    ctrTxt += String.fromCharCode(counterBlock[i]);
try { if (Inst471 <= 1000 && typeof (ctrTxt) != "undefined") {_RecordType("<9539,9545,264>",(ctrTxt)); Inst471++; } } catch(e) {}
  }

try { if (Inst477 <= 1000 && typeof (escCtrlChars) != "undefined") {_RecordType("<9603,9615,267>",(escCtrlChars)); Inst477++; } } catch(e) {}try { if (Inst478 <= 1000 && typeof (ctrTxt) != "undefined") {_RecordType("<9616,9622,267>",(ctrTxt)); Inst478++; } } catch(e) {}
  ctrTxt = escCtrlChars(ctrTxt); // use '-' to separate blocks, use Array.join to concatenate arrays of strings for efficiency
try { if (Inst476 <= 1000 && typeof (ctrTxt) != "undefined") {_RecordType("<9594,9600,267>",(ctrTxt)); Inst476++; } } catch(e) {}

try { if (Inst479 <= 1000 && typeof (ctrTxt) != "undefined") {_RecordType("<9729,9735,269>",(ctrTxt)); Inst479++; } } catch(e) {}try { if (Inst480 <= 1000 && typeof (ciphertext.join) != "undefined") {_RecordType("<9744,9759,269>",(ciphertext.join)); Inst480++; } } catch(e) {}try { if (Inst481 <= 1000 && typeof (ciphertext) != "undefined") {_RecordType("<9744,9754,269>",(ciphertext)); Inst481++; } } catch(e) {}
  return ctrTxt + '-' + ciphertext.join('-');
}
/* 
 * Use AES to decrypt 'ciphertext' with 'password' using 'nBits' key, in Counter mode of operation
 *
 *   for each block
 *   - outputblock = cipher(counter, key)
 *   - cipherblock = plaintext xor outputblock
 */


try { if (Inst482 <= 1000 && typeof (AESDecryptCtr) != "undefined") {_RecordType("<9998,10011,280>",(AESDecryptCtr)); Inst482++; } } catch(e) {}
function AESDecryptCtr(ciphertext, password, nBits) {
try { if (Inst483 <= 1000 && typeof (ciphertext) != "undefined") {_RecordType("<10012,10022,280>",(ciphertext)); Inst483++; } } catch(e) {}try { if (Inst484 <= 1000 && typeof (password) != "undefined") {_RecordType("<10024,10032,280>",(password)); Inst484++; } } catch(e) {}try { if (Inst485 <= 1000 && typeof (nBits) != "undefined") {_RecordType("<10034,10039,280>",(nBits)); Inst485++; } } catch(e) {}
try { if (Inst486 <= 1000 && typeof (nBits) != "undefined") {_RecordType("<10051,10056,281>",(nBits)); Inst486++; } } catch(e) {}try { if (Inst487 <= 1000 && typeof (nBits) != "undefined") {_RecordType("<10067,10072,281>",(nBits)); Inst487++; } } catch(e) {}try { if (Inst488 <= 1000 && typeof (nBits) != "undefined") {_RecordType("<10083,10088,281>",(nBits)); Inst488++; } } catch(e) {}
  if (!(nBits == 128 || nBits == 192 || nBits == 256)) {
    return '';
  } // standard allows 128/192/256 bit keys


try { if (Inst490 <= 1000 && typeof (nBits) != "undefined") {_RecordType("<10176,10181,286>",(nBits)); Inst490++; } } catch(e) {}
  var nBytes = nBits / 8; // no bytes in key
try { if (Inst489 <= 1000 && typeof (nBytes) != "undefined") {_RecordType("<10167,10173,286>",(nBytes)); Inst489++; } } catch(e) {}

try { if (Inst492 <= 1000 && typeof (Array) != "undefined") {_RecordType("<10227,10232,288>",(Array)); Inst492++; } } catch(e) {}try { if (Inst493 <= 1000 && typeof (nBytes) != "undefined") {_RecordType("<10233,10239,288>",(nBytes)); Inst493++; } } catch(e) {}
  var pwBytes = new Array(nBytes);
try { if (Inst491 <= 1000 && typeof (pwBytes) != "undefined") {_RecordType("<10213,10220,288>",(pwBytes)); Inst491++; } } catch(e) {}

  for (var i = 0; i < nBytes; i++) {
try { if (Inst494 <= 1000 && typeof (i) != "undefined") {_RecordType("<10254,10255,290>",(i)); Inst494++; } } catch(e) {}try { if (Inst495 <= 1000 && typeof (i) != "undefined") {_RecordType("<10261,10262,290>",(i)); Inst495++; } } catch(e) {}try { if (Inst496 <= 1000 && typeof (nBytes) != "undefined") {_RecordType("<10265,10271,290>",(nBytes)); Inst496++; } } catch(e) {}try { if (Inst497 <= 1000 && typeof (i) != "undefined") {_RecordType("<10273,10274,290>",(i)); Inst497++; } } catch(e) {}
try { if (Inst500 <= 1000 && typeof (password.charCodeAt) != "undefined") {_RecordType("<10297,10316,291>",(password.charCodeAt)); Inst500++; } } catch(e) {}try { if (Inst501 <= 1000 && typeof (password) != "undefined") {_RecordType("<10297,10305,291>",(password)); Inst501++; } } catch(e) {}try { if (Inst502 <= 1000 && typeof (i) != "undefined") {_RecordType("<10317,10318,291>",(i)); Inst502++; } } catch(e) {}
    pwBytes[i] = password.charCodeAt(i) & 0xff;
try { if (Inst498 <= 1000 && typeof (pwBytes[i]) != "undefined") {_RecordType("<10284,10294,291>",(pwBytes[i])); Inst498++; } } catch(e) {}try { if (Inst499 <= 1000 && typeof (pwBytes) != "undefined") {_RecordType("<10284,10291,291>",(pwBytes)); Inst499++; } } catch(e) {}
  }

try { if (Inst504 <= 1000 && typeof (KeyExpansion) != "undefined") {_RecordType("<10355,10367,294>",(KeyExpansion)); Inst504++; } } catch(e) {}try { if (Inst505 <= 1000 && typeof (pwBytes) != "undefined") {_RecordType("<10368,10375,294>",(pwBytes)); Inst505++; } } catch(e) {}
  var pwKeySchedule = KeyExpansion(pwBytes);
try { if (Inst503 <= 1000 && typeof (pwKeySchedule) != "undefined") {_RecordType("<10339,10352,294>",(pwKeySchedule)); Inst503++; } } catch(e) {}
try { if (Inst507 <= 1000 && typeof (Cipher) != "undefined") {_RecordType("<10390,10396,295>",(Cipher)); Inst507++; } } catch(e) {}try { if (Inst508 <= 1000 && typeof (pwBytes) != "undefined") {_RecordType("<10397,10404,295>",(pwBytes)); Inst508++; } } catch(e) {}try { if (Inst509 <= 1000 && typeof (pwKeySchedule) != "undefined") {_RecordType("<10406,10419,295>",(pwKeySchedule)); Inst509++; } } catch(e) {}
  var key = Cipher(pwBytes, pwKeySchedule);
try { if (Inst506 <= 1000 && typeof (key) != "undefined") {_RecordType("<10384,10387,295>",(key)); Inst506++; } } catch(e) {}
try { if (Inst511 <= 1000 && typeof (key.concat) != "undefined") {_RecordType("<10430,10440,296>",(key.concat)); Inst511++; } } catch(e) {}try { if (Inst512 <= 1000 && typeof (key) != "undefined") {_RecordType("<10430,10433,296>",(key)); Inst512++; } } catch(e) {}try { if (Inst513 <= 1000 && typeof (key.slice) != "undefined") {_RecordType("<10441,10450,296>",(key.slice)); Inst513++; } } catch(e) {}try { if (Inst514 <= 1000 && typeof (key) != "undefined") {_RecordType("<10441,10444,296>",(key)); Inst514++; } } catch(e) {}try { if (Inst515 <= 1000 && typeof (nBytes) != "undefined") {_RecordType("<10454,10460,296>",(nBytes)); Inst515++; } } catch(e) {}
  key = key.concat(key.slice(0, nBytes - 16)); // key is now 16/24/32 bytes long
try { if (Inst510 <= 1000 && typeof (key) != "undefined") {_RecordType("<10424,10427,296>",(key)); Inst510++; } } catch(e) {}

try { if (Inst517 <= 1000 && typeof (KeyExpansion) != "undefined") {_RecordType("<10524,10536,298>",(KeyExpansion)); Inst517++; } } catch(e) {}try { if (Inst518 <= 1000 && typeof (key) != "undefined") {_RecordType("<10537,10540,298>",(key)); Inst518++; } } catch(e) {}
  var keySchedule = KeyExpansion(key);
try { if (Inst516 <= 1000 && typeof (keySchedule) != "undefined") {_RecordType("<10510,10521,298>",(keySchedule)); Inst516++; } } catch(e) {}
try { if (Inst520 <= 1000 && typeof (ciphertext.split) != "undefined") {_RecordType("<10558,10574,299>",(ciphertext.split)); Inst520++; } } catch(e) {}try { if (Inst521 <= 1000 && typeof (ciphertext) != "undefined") {_RecordType("<10558,10568,299>",(ciphertext)); Inst521++; } } catch(e) {}
  ciphertext = ciphertext.split('-'); // split ciphertext into array of block-length strings 
try { if (Inst519 <= 1000 && typeof (ciphertext) != "undefined") {_RecordType("<10545,10555,299>",(ciphertext)); Inst519++; } } catch(e) {}
  // recover nonce from 1st element of ciphertext

  var blockSize = 16; // block size fixed at 16 bytes / 128 bits (Nb=4) for AES
try { if (Inst522 <= 1000 && typeof (blockSize) != "undefined") {_RecordType("<10694,10703,302>",(blockSize)); Inst522++; } } catch(e) {}

try { if (Inst524 <= 1000 && typeof (Array) != "undefined") {_RecordType("<10794,10799,304>",(Array)); Inst524++; } } catch(e) {}try { if (Inst525 <= 1000 && typeof (blockSize) != "undefined") {_RecordType("<10800,10809,304>",(blockSize)); Inst525++; } } catch(e) {}
  var counterBlock = new Array(blockSize);
try { if (Inst523 <= 1000 && typeof (counterBlock) != "undefined") {_RecordType("<10775,10787,304>",(counterBlock)); Inst523++; } } catch(e) {}
try { if (Inst527 <= 1000 && typeof (unescCtrlChars) != "undefined") {_RecordType("<10827,10841,305>",(unescCtrlChars)); Inst527++; } } catch(e) {}try { if (Inst528 <= 1000 && typeof (ciphertext[0]) != "undefined") {_RecordType("<10842,10855,305>",(ciphertext[0])); Inst528++; } } catch(e) {}try { if (Inst529 <= 1000 && typeof (ciphertext) != "undefined") {_RecordType("<10842,10852,305>",(ciphertext)); Inst529++; } } catch(e) {}
  var ctrTxt = unescCtrlChars(ciphertext[0]);
try { if (Inst526 <= 1000 && typeof (ctrTxt) != "undefined") {_RecordType("<10818,10824,305>",(ctrTxt)); Inst526++; } } catch(e) {}

  for (var i = 0; i < 8; i++) {
try { if (Inst530 <= 1000 && typeof (i) != "undefined") {_RecordType("<10870,10871,307>",(i)); Inst530++; } } catch(e) {}try { if (Inst531 <= 1000 && typeof (i) != "undefined") {_RecordType("<10877,10878,307>",(i)); Inst531++; } } catch(e) {}try { if (Inst532 <= 1000 && typeof (i) != "undefined") {_RecordType("<10884,10885,307>",(i)); Inst532++; } } catch(e) {}
try { if (Inst535 <= 1000 && typeof (ctrTxt.charCodeAt) != "undefined") {_RecordType("<10913,10930,308>",(ctrTxt.charCodeAt)); Inst535++; } } catch(e) {}try { if (Inst536 <= 1000 && typeof (ctrTxt) != "undefined") {_RecordType("<10913,10919,308>",(ctrTxt)); Inst536++; } } catch(e) {}try { if (Inst537 <= 1000 && typeof (i) != "undefined") {_RecordType("<10931,10932,308>",(i)); Inst537++; } } catch(e) {}
    counterBlock[i] = ctrTxt.charCodeAt(i);
try { if (Inst533 <= 1000 && typeof (counterBlock[i]) != "undefined") {_RecordType("<10895,10910,308>",(counterBlock[i])); Inst533++; } } catch(e) {}try { if (Inst534 <= 1000 && typeof (counterBlock) != "undefined") {_RecordType("<10895,10907,308>",(counterBlock)); Inst534++; } } catch(e) {}
  }

try { if (Inst539 <= 1000 && typeof (Array) != "undefined") {_RecordType("<10962,10967,311>",(Array)); Inst539++; } } catch(e) {}try { if (Inst540 <= 1000 && typeof (ciphertext.length) != "undefined") {_RecordType("<10968,10985,311>",(ciphertext.length)); Inst540++; } } catch(e) {}try { if (Inst541 <= 1000 && typeof (ciphertext) != "undefined") {_RecordType("<10968,10978,311>",(ciphertext)); Inst541++; } } catch(e) {}
  var plaintext = new Array(ciphertext.length - 1);
try { if (Inst538 <= 1000 && typeof (plaintext) != "undefined") {_RecordType("<10946,10955,311>",(plaintext)); Inst538++; } } catch(e) {}

  for (var b = 1; b < ciphertext.length; b++) {
try { if (Inst542 <= 1000 && typeof (b) != "undefined") {_RecordType("<11004,11005,313>",(b)); Inst542++; } } catch(e) {}try { if (Inst543 <= 1000 && typeof (b) != "undefined") {_RecordType("<11011,11012,313>",(b)); Inst543++; } } catch(e) {}try { if (Inst544 <= 1000 && typeof (ciphertext.length) != "undefined") {_RecordType("<11015,11032,313>",(ciphertext.length)); Inst544++; } } catch(e) {}try { if (Inst545 <= 1000 && typeof (ciphertext) != "undefined") {_RecordType("<11015,11025,313>",(ciphertext)); Inst545++; } } catch(e) {}try { if (Inst546 <= 1000 && typeof (b) != "undefined") {_RecordType("<11034,11035,313>",(b)); Inst546++; } } catch(e) {}
    // set counter (block #) in last 8 bytes of counter block (leaving nonce in 1st 8 bytes)
    for (var c = 0; c < 4; c++) {
try { if (Inst547 <= 1000 && typeof (c) != "undefined") {_RecordType("<11147,11148,315>",(c)); Inst547++; } } catch(e) {}try { if (Inst548 <= 1000 && typeof (c) != "undefined") {_RecordType("<11154,11155,315>",(c)); Inst548++; } } catch(e) {}try { if (Inst549 <= 1000 && typeof (c) != "undefined") {_RecordType("<11161,11162,315>",(c)); Inst549++; } } catch(e) {}
try { if (Inst553 <= 1000 && typeof (b) != "undefined") {_RecordType("<11197,11198,316>",(b)); Inst553++; } } catch(e) {}try { if (Inst554 <= 1000 && typeof (c) != "undefined") {_RecordType("<11207,11208,316>",(c)); Inst554++; } } catch(e) {}
      counterBlock[15 - c] = b - 1 >>> c * 8 & 0xff;
try { if (Inst550 <= 1000 && typeof (counterBlock[15 - c]) != "undefined") {_RecordType("<11174,11194,316>",(counterBlock[15 - c])); Inst550++; } } catch(e) {}try { if (Inst551 <= 1000 && typeof (counterBlock) != "undefined") {_RecordType("<11174,11186,316>",(counterBlock)); Inst551++; } } catch(e) {}try { if (Inst552 <= 1000 && typeof (c) != "undefined") {_RecordType("<11192,11193,316>",(c)); Inst552++; } } catch(e) {}
    }

    for (var c = 0; c < 4; c++) {
try { if (Inst555 <= 1000 && typeof (c) != "undefined") {_RecordType("<11241,11242,319>",(c)); Inst555++; } } catch(e) {}try { if (Inst556 <= 1000 && typeof (c) != "undefined") {_RecordType("<11248,11249,319>",(c)); Inst556++; } } catch(e) {}try { if (Inst557 <= 1000 && typeof (c) != "undefined") {_RecordType("<11255,11256,319>",(c)); Inst557++; } } catch(e) {}
try { if (Inst561 <= 1000 && typeof (b) != "undefined") {_RecordType("<11295,11296,320>",(b)); Inst561++; } } catch(e) {}try { if (Inst562 <= 1000 && typeof (c) != "undefined") {_RecordType("<11319,11320,320>",(c)); Inst562++; } } catch(e) {}
      counterBlock[15 - c - 4] = b / 0x100000000 - 1 >>> c * 8 & 0xff;
try { if (Inst558 <= 1000 && typeof (counterBlock[15 - c - 4]) != "undefined") {_RecordType("<11268,11292,320>",(counterBlock[15 - c - 4])); Inst558++; } } catch(e) {}try { if (Inst559 <= 1000 && typeof (counterBlock) != "undefined") {_RecordType("<11268,11280,320>",(counterBlock)); Inst559++; } } catch(e) {}try { if (Inst560 <= 1000 && typeof (c) != "undefined") {_RecordType("<11286,11287,320>",(c)); Inst560++; } } catch(e) {}
    }

try { if (Inst564 <= 1000 && typeof (Cipher) != "undefined") {_RecordType("<11361,11367,323>",(Cipher)); Inst564++; } } catch(e) {}try { if (Inst565 <= 1000 && typeof (counterBlock) != "undefined") {_RecordType("<11368,11380,323>",(counterBlock)); Inst565++; } } catch(e) {}try { if (Inst566 <= 1000 && typeof (keySchedule) != "undefined") {_RecordType("<11382,11393,323>",(keySchedule)); Inst566++; } } catch(e) {}
    var cipherCntr = Cipher(counterBlock, keySchedule); // encrypt counter block
try { if (Inst563 <= 1000 && typeof (cipherCntr) != "undefined") {_RecordType("<11348,11358,323>",(cipherCntr)); Inst563++; } } catch(e) {}

try { if (Inst569 <= 1000 && typeof (unescCtrlChars) != "undefined") {_RecordType("<11442,11456,325>",(unescCtrlChars)); Inst569++; } } catch(e) {}try { if (Inst570 <= 1000 && typeof (ciphertext[b]) != "undefined") {_RecordType("<11457,11470,325>",(ciphertext[b])); Inst570++; } } catch(e) {}try { if (Inst571 <= 1000 && typeof (ciphertext) != "undefined") {_RecordType("<11457,11467,325>",(ciphertext)); Inst571++; } } catch(e) {}
    ciphertext[b] = unescCtrlChars(ciphertext[b]);
try { if (Inst567 <= 1000 && typeof (ciphertext[b]) != "undefined") {_RecordType("<11426,11439,325>",(ciphertext[b])); Inst567++; } } catch(e) {}try { if (Inst568 <= 1000 && typeof (ciphertext) != "undefined") {_RecordType("<11426,11436,325>",(ciphertext)); Inst568++; } } catch(e) {}
    var pt = '';
try { if (Inst572 <= 1000 && typeof (pt) != "undefined") {_RecordType("<11481,11483,326>",(pt)); Inst572++; } } catch(e) {}

    for (var i = 0; i < ciphertext[b].length; i++) {
try { if (Inst573 <= 1000 && typeof (i) != "undefined") {_RecordType("<11504,11505,328>",(i)); Inst573++; } } catch(e) {}try { if (Inst574 <= 1000 && typeof (i) != "undefined") {_RecordType("<11511,11512,328>",(i)); Inst574++; } } catch(e) {}try { if (Inst575 <= 1000 && typeof (ciphertext[b].length) != "undefined") {_RecordType("<11515,11535,328>",(ciphertext[b].length)); Inst575++; } } catch(e) {}try { if (Inst576 <= 1000 && typeof (ciphertext[b]) != "undefined") {_RecordType("<11515,11528,328>",(ciphertext[b])); Inst576++; } } catch(e) {}try { if (Inst577 <= 1000 && typeof (ciphertext) != "undefined") {_RecordType("<11515,11525,328>",(ciphertext)); Inst577++; } } catch(e) {}try { if (Inst578 <= 1000 && typeof (i) != "undefined") {_RecordType("<11537,11538,328>",(i)); Inst578++; } } catch(e) {}
      // -- xor plaintext with ciphered counter byte-by-byte --
try { if (Inst580 <= 1000 && typeof (ciphertext[b].charCodeAt) != "undefined") {_RecordType("<11635,11659,330>",(ciphertext[b].charCodeAt)); Inst580++; } } catch(e) {}try { if (Inst581 <= 1000 && typeof (ciphertext[b]) != "undefined") {_RecordType("<11635,11648,330>",(ciphertext[b])); Inst581++; } } catch(e) {}try { if (Inst582 <= 1000 && typeof (ciphertext) != "undefined") {_RecordType("<11635,11645,330>",(ciphertext)); Inst582++; } } catch(e) {}try { if (Inst583 <= 1000 && typeof (i) != "undefined") {_RecordType("<11660,11661,330>",(i)); Inst583++; } } catch(e) {}
      var ciphertextByte = ciphertext[b].charCodeAt(i);
try { if (Inst579 <= 1000 && typeof (ciphertextByte) != "undefined") {_RecordType("<11618,11632,330>",(ciphertextByte)); Inst579++; } } catch(e) {}
try { if (Inst585 <= 1000 && typeof (ciphertextByte) != "undefined") {_RecordType("<11690,11704,331>",(ciphertextByte)); Inst585++; } } catch(e) {}try { if (Inst586 <= 1000 && typeof (cipherCntr[i]) != "undefined") {_RecordType("<11707,11720,331>",(cipherCntr[i])); Inst586++; } } catch(e) {}try { if (Inst587 <= 1000 && typeof (cipherCntr) != "undefined") {_RecordType("<11707,11717,331>",(cipherCntr)); Inst587++; } } catch(e) {}
      var plaintextByte = ciphertextByte ^ cipherCntr[i];
try { if (Inst584 <= 1000 && typeof (plaintextByte) != "undefined") {_RecordType("<11674,11687,331>",(plaintextByte)); Inst584++; } } catch(e) {}
try { if (Inst589 <= 1000 && typeof (String.fromCharCode) != "undefined") {_RecordType("<11734,11753,332>",(String.fromCharCode)); Inst589++; } } catch(e) {}try { if (Inst590 <= 1000 && typeof (String) != "undefined") {_RecordType("<11734,11740,332>",(String)); Inst590++; } } catch(e) {}try { if (Inst591 <= 1000 && typeof (plaintextByte) != "undefined") {_RecordType("<11754,11767,332>",(plaintextByte)); Inst591++; } } catch(e) {}
      pt += String.fromCharCode(plaintextByte);
try { if (Inst588 <= 1000 && typeof (pt) != "undefined") {_RecordType("<11728,11730,332>",(pt)); Inst588++; } } catch(e) {}
    } // pt is now plaintext for this block


try { if (Inst595 <= 1000 && typeof (pt) != "undefined") {_RecordType("<11839,11841,336>",(pt)); Inst595++; } } catch(e) {}
    plaintext[b - 1] = pt; // b-1 'cos no initial nonce block in plaintext
try { if (Inst592 <= 1000 && typeof (plaintext[b - 1]) != "undefined") {_RecordType("<11820,11836,336>",(plaintext[b - 1])); Inst592++; } } catch(e) {}try { if (Inst593 <= 1000 && typeof (plaintext) != "undefined") {_RecordType("<11820,11829,336>",(plaintext)); Inst593++; } } catch(e) {}try { if (Inst594 <= 1000 && typeof (b) != "undefined") {_RecordType("<11830,11831,336>",(b)); Inst594++; } } catch(e) {}
  }

try { if (Inst596 <= 1000 && typeof (plaintext.join) != "undefined") {_RecordType("<11905,11919,339>",(plaintext.join)); Inst596++; } } catch(e) {}try { if (Inst597 <= 1000 && typeof (plaintext) != "undefined") {_RecordType("<11905,11914,339>",(plaintext)); Inst597++; } } catch(e) {}
  return plaintext.join('');
}
/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */


try { if (Inst598 <= 1000 && typeof (escCtrlChars) != "undefined") {_RecordType("<12039,12051,344>",(escCtrlChars)); Inst598++; } } catch(e) {}
function escCtrlChars(str) {
try { if (Inst599 <= 1000 && typeof (str) != "undefined") {_RecordType("<12052,12055,344>",(str)); Inst599++; } } catch(e) {}
  // escape control chars which might cause problems handling ciphertext
try { if (Inst600 <= 1000 && typeof (str.replace) != "undefined") {_RecordType("<12141,12152,346>",(str.replace)); Inst600++; } } catch(e) {}try { if (Inst601 <= 1000 && typeof (str) != "undefined") {_RecordType("<12141,12144,346>",(str)); Inst601++; } } catch(e) {}
  return str.replace(/[\0\t\n\v\f\r\xa0'"!-]/g, function (c) {
try { if (Inst602 <= 1000 && typeof (c) != "undefined") {_RecordType("<12190,12191,346>",(c)); Inst602++; } } catch(e) {}
try { if (Inst603 <= 1000 && typeof (c.charCodeAt) != "undefined") {_RecordType("<12212,12224,347>",(c.charCodeAt)); Inst603++; } } catch(e) {}try { if (Inst604 <= 1000 && typeof (c) != "undefined") {_RecordType("<12212,12213,347>",(c)); Inst604++; } } catch(e) {}
    return '!' + c.charCodeAt(0) + '!';
  });
} // \xa0 to cater for bug in Firefox; include '-' to leave it free for use as a block marker


try { if (Inst605 <= 1000 && typeof (unescCtrlChars) != "undefined") {_RecordType("<12346,12360,352>",(unescCtrlChars)); Inst605++; } } catch(e) {}
function unescCtrlChars(str) {
try { if (Inst606 <= 1000 && typeof (str) != "undefined") {_RecordType("<12361,12364,352>",(str)); Inst606++; } } catch(e) {}
  // unescape potentially problematic control characters
try { if (Inst607 <= 1000 && typeof (str.replace) != "undefined") {_RecordType("<12434,12445,354>",(str.replace)); Inst607++; } } catch(e) {}try { if (Inst608 <= 1000 && typeof (str) != "undefined") {_RecordType("<12434,12437,354>",(str)); Inst608++; } } catch(e) {}
  return str.replace(/!\d\d?\d?!/g, function (c) {
try { if (Inst609 <= 1000 && typeof (c) != "undefined") {_RecordType("<12471,12472,354>",(c)); Inst609++; } } catch(e) {}
try { if (Inst610 <= 1000 && typeof (String.fromCharCode) != "undefined") {_RecordType("<12487,12506,355>",(String.fromCharCode)); Inst610++; } } catch(e) {}try { if (Inst611 <= 1000 && typeof (String) != "undefined") {_RecordType("<12487,12493,355>",(String)); Inst611++; } } catch(e) {}try { if (Inst612 <= 1000 && typeof (c.slice) != "undefined") {_RecordType("<12507,12514,355>",(c.slice)); Inst612++; } } catch(e) {}try { if (Inst613 <= 1000 && typeof (c) != "undefined") {_RecordType("<12507,12508,355>",(c)); Inst613++; } } catch(e) {}
    return String.fromCharCode(c.slice(1, -1));
  });
}
/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */

/*
 * if escCtrlChars()/unescCtrlChars() still gives problems, use encodeBase64()/decodeBase64() instead
 */


var b64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
try { if (Inst614 <= 1000 && typeof (b64) != "undefined") {_RecordType("<12749,12752,365>",(b64)); Inst614++; } } catch(e) {}

try { if (Inst615 <= 1000 && typeof (encodeBase64) != "undefined") {_RecordType("<12834,12846,367>",(encodeBase64)); Inst615++; } } catch(e) {}
function encodeBase64(str) {
try { if (Inst616 <= 1000 && typeof (str) != "undefined") {_RecordType("<12847,12850,367>",(str)); Inst616++; } } catch(e) {}
  // http://tools.ietf.org/html/rfc4648
  var o1,
      o2,
      o3,
      h1,
      h2,
      h3,
      h4,
      bits,
      i = 0,
      enc = '';
try { if (Inst617 <= 1000 && typeof (o1) != "undefined") {_RecordType("<12900,12902,369>",(o1)); Inst617++; } } catch(e) {}try { if (Inst618 <= 1000 && typeof (o2) != "undefined") {_RecordType("<12910,12912,370>",(o2)); Inst618++; } } catch(e) {}try { if (Inst619 <= 1000 && typeof (o3) != "undefined") {_RecordType("<12920,12922,371>",(o3)); Inst619++; } } catch(e) {}try { if (Inst620 <= 1000 && typeof (h1) != "undefined") {_RecordType("<12930,12932,372>",(h1)); Inst620++; } } catch(e) {}try { if (Inst621 <= 1000 && typeof (h2) != "undefined") {_RecordType("<12940,12942,373>",(h2)); Inst621++; } } catch(e) {}try { if (Inst622 <= 1000 && typeof (h3) != "undefined") {_RecordType("<12950,12952,374>",(h3)); Inst622++; } } catch(e) {}try { if (Inst623 <= 1000 && typeof (h4) != "undefined") {_RecordType("<12960,12962,375>",(h4)); Inst623++; } } catch(e) {}try { if (Inst624 <= 1000 && typeof (bits) != "undefined") {_RecordType("<12970,12974,376>",(bits)); Inst624++; } } catch(e) {}try { if (Inst625 <= 1000 && typeof (i) != "undefined") {_RecordType("<12982,12983,377>",(i)); Inst625++; } } catch(e) {}try { if (Inst626 <= 1000 && typeof (enc) != "undefined") {_RecordType("<12995,12998,378>",(enc)); Inst626++; } } catch(e) {}
try { if (Inst628 <= 1000 && typeof (encodeUTF8) != "undefined") {_RecordType("<13013,13023,379>",(encodeUTF8)); Inst628++; } } catch(e) {}try { if (Inst629 <= 1000 && typeof (str) != "undefined") {_RecordType("<13024,13027,379>",(str)); Inst629++; } } catch(e) {}
  str = encodeUTF8(str); // encode multi-byte chars into UTF-8 for byte-array
try { if (Inst627 <= 1000 && typeof (str) != "undefined") {_RecordType("<13007,13010,379>",(str)); Inst627++; } } catch(e) {}

try { if (Inst630 <= 1000 && typeof (i) != "undefined") {_RecordType("<13648,13649,402>",(i)); Inst630++; } } catch(e) {}try { if (Inst631 <= 1000 && typeof (str.length) != "undefined") {_RecordType("<13652,13662,402>",(str.length)); Inst631++; } } catch(e) {}try { if (Inst632 <= 1000 && typeof (str) != "undefined") {_RecordType("<13652,13655,402>",(str)); Inst632++; } } catch(e) {}
  do {
    // pack three octets into four hexets
try { if (Inst634 <= 1000 && typeof (str.charCodeAt) != "undefined") {_RecordType("<13142,13156,383>",(str.charCodeAt)); Inst634++; } } catch(e) {}try { if (Inst635 <= 1000 && typeof (str) != "undefined") {_RecordType("<13142,13145,383>",(str)); Inst635++; } } catch(e) {}try { if (Inst636 <= 1000 && typeof (i) != "undefined") {_RecordType("<13157,13158,383>",(i)); Inst636++; } } catch(e) {}
    o1 = str.charCodeAt(i++);
try { if (Inst633 <= 1000 && typeof (o1) != "undefined") {_RecordType("<13137,13139,383>",(o1)); Inst633++; } } catch(e) {}
try { if (Inst638 <= 1000 && typeof (str.charCodeAt) != "undefined") {_RecordType("<13172,13186,384>",(str.charCodeAt)); Inst638++; } } catch(e) {}try { if (Inst639 <= 1000 && typeof (str) != "undefined") {_RecordType("<13172,13175,384>",(str)); Inst639++; } } catch(e) {}try { if (Inst640 <= 1000 && typeof (i) != "undefined") {_RecordType("<13187,13188,384>",(i)); Inst640++; } } catch(e) {}
    o2 = str.charCodeAt(i++);
try { if (Inst637 <= 1000 && typeof (o2) != "undefined") {_RecordType("<13167,13169,384>",(o2)); Inst637++; } } catch(e) {}
try { if (Inst642 <= 1000 && typeof (str.charCodeAt) != "undefined") {_RecordType("<13202,13216,385>",(str.charCodeAt)); Inst642++; } } catch(e) {}try { if (Inst643 <= 1000 && typeof (str) != "undefined") {_RecordType("<13202,13205,385>",(str)); Inst643++; } } catch(e) {}try { if (Inst644 <= 1000 && typeof (i) != "undefined") {_RecordType("<13217,13218,385>",(i)); Inst644++; } } catch(e) {}
    o3 = str.charCodeAt(i++);
try { if (Inst641 <= 1000 && typeof (o3) != "undefined") {_RecordType("<13197,13199,385>",(o3)); Inst641++; } } catch(e) {}
try { if (Inst646 <= 1000 && typeof (o1) != "undefined") {_RecordType("<13234,13236,386>",(o1)); Inst646++; } } catch(e) {}try { if (Inst647 <= 1000 && typeof (o2) != "undefined") {_RecordType("<13245,13247,386>",(o2)); Inst647++; } } catch(e) {}try { if (Inst648 <= 1000 && typeof (o3) != "undefined") {_RecordType("<13255,13257,386>",(o3)); Inst648++; } } catch(e) {}
    bits = o1 << 16 | o2 << 8 | o3;
try { if (Inst645 <= 1000 && typeof (bits) != "undefined") {_RecordType("<13227,13231,386>",(bits)); Inst645++; } } catch(e) {}
try { if (Inst650 <= 1000 && typeof (bits) != "undefined") {_RecordType("<13268,13272,387>",(bits)); Inst650++; } } catch(e) {}
    h1 = bits >> 18 & 0x3f;
try { if (Inst649 <= 1000 && typeof (h1) != "undefined") {_RecordType("<13263,13265,387>",(h1)); Inst649++; } } catch(e) {}
try { if (Inst652 <= 1000 && typeof (bits) != "undefined") {_RecordType("<13296,13300,388>",(bits)); Inst652++; } } catch(e) {}
    h2 = bits >> 12 & 0x3f;
try { if (Inst651 <= 1000 && typeof (h2) != "undefined") {_RecordType("<13291,13293,388>",(h2)); Inst651++; } } catch(e) {}
try { if (Inst654 <= 1000 && typeof (bits) != "undefined") {_RecordType("<13324,13328,389>",(bits)); Inst654++; } } catch(e) {}
    h3 = bits >> 6 & 0x3f;
try { if (Inst653 <= 1000 && typeof (h3) != "undefined") {_RecordType("<13319,13321,389>",(h3)); Inst653++; } } catch(e) {}
try { if (Inst656 <= 1000 && typeof (bits) != "undefined") {_RecordType("<13351,13355,390>",(bits)); Inst656++; } } catch(e) {}
    h4 = bits & 0x3f; // end of string? index to '=' in b64
try { if (Inst655 <= 1000 && typeof (h4) != "undefined") {_RecordType("<13346,13348,390>",(h4)); Inst655++; } } catch(e) {}

try { if (Inst657 <= 1000 && typeof (isNaN) != "undefined") {_RecordType("<13411,13416,392>",(isNaN)); Inst657++; } } catch(e) {}try { if (Inst658 <= 1000 && typeof (o3) != "undefined") {_RecordType("<13417,13419,392>",(o3)); Inst658++; } } catch(e) {}
    if (isNaN(o3)) {
      h4 = 64;
try { if (Inst659 <= 1000 && typeof (h4) != "undefined") {_RecordType("<13430,13432,393>",(h4)); Inst659++; } } catch(e) {}
    }

try { if (Inst660 <= 1000 && typeof (isNaN) != "undefined") {_RecordType("<13454,13459,396>",(isNaN)); Inst660++; } } catch(e) {}try { if (Inst661 <= 1000 && typeof (o2) != "undefined") {_RecordType("<13460,13462,396>",(o2)); Inst661++; } } catch(e) {}
    if (isNaN(o2)) {
      h3 = 64;
try { if (Inst662 <= 1000 && typeof (h3) != "undefined") {_RecordType("<13473,13475,397>",(h3)); Inst662++; } } catch(e) {}
    } // use hexets to index into b64, and append result to encoded string


try { if (Inst664 <= 1000 && typeof (b64.charAt) != "undefined") {_RecordType("<13570,13580,401>",(b64.charAt)); Inst664++; } } catch(e) {}try { if (Inst665 <= 1000 && typeof (b64) != "undefined") {_RecordType("<13570,13573,401>",(b64)); Inst665++; } } catch(e) {}try { if (Inst666 <= 1000 && typeof (h1) != "undefined") {_RecordType("<13581,13583,401>",(h1)); Inst666++; } } catch(e) {}try { if (Inst667 <= 1000 && typeof (b64.charAt) != "undefined") {_RecordType("<13587,13597,401>",(b64.charAt)); Inst667++; } } catch(e) {}try { if (Inst668 <= 1000 && typeof (b64) != "undefined") {_RecordType("<13587,13590,401>",(b64)); Inst668++; } } catch(e) {}try { if (Inst669 <= 1000 && typeof (h2) != "undefined") {_RecordType("<13598,13600,401>",(h2)); Inst669++; } } catch(e) {}try { if (Inst670 <= 1000 && typeof (b64.charAt) != "undefined") {_RecordType("<13604,13614,401>",(b64.charAt)); Inst670++; } } catch(e) {}try { if (Inst671 <= 1000 && typeof (b64) != "undefined") {_RecordType("<13604,13607,401>",(b64)); Inst671++; } } catch(e) {}try { if (Inst672 <= 1000 && typeof (h3) != "undefined") {_RecordType("<13615,13617,401>",(h3)); Inst672++; } } catch(e) {}try { if (Inst673 <= 1000 && typeof (b64.charAt) != "undefined") {_RecordType("<13621,13631,401>",(b64.charAt)); Inst673++; } } catch(e) {}try { if (Inst674 <= 1000 && typeof (b64) != "undefined") {_RecordType("<13621,13624,401>",(b64)); Inst674++; } } catch(e) {}try { if (Inst675 <= 1000 && typeof (h4) != "undefined") {_RecordType("<13632,13634,401>",(h4)); Inst675++; } } catch(e) {}
    enc += b64.charAt(h1) + b64.charAt(h2) + b64.charAt(h3) + b64.charAt(h4);
try { if (Inst663 <= 1000 && typeof (enc) != "undefined") {_RecordType("<13563,13566,401>",(enc)); Inst663++; } } catch(e) {}
  } while (i < str.length);

try { if (Inst676 <= 1000 && typeof (enc) != "undefined") {_RecordType("<13675,13678,404>",(enc)); Inst676++; } } catch(e) {}
  return enc;
}

try { if (Inst677 <= 1000 && typeof (decodeBase64) != "undefined") {_RecordType("<13692,13704,407>",(decodeBase64)); Inst677++; } } catch(e) {}
function decodeBase64(str) {
try { if (Inst678 <= 1000 && typeof (str) != "undefined") {_RecordType("<13705,13708,407>",(str)); Inst678++; } } catch(e) {}
  var o1,
      o2,
      o3,
      h1,
      h2,
      h3,
      h4,
      bits,
      i = 0,
      enc = '';
try { if (Inst679 <= 1000 && typeof (o1) != "undefined") {_RecordType("<13718,13720,408>",(o1)); Inst679++; } } catch(e) {}try { if (Inst680 <= 1000 && typeof (o2) != "undefined") {_RecordType("<13728,13730,409>",(o2)); Inst680++; } } catch(e) {}try { if (Inst681 <= 1000 && typeof (o3) != "undefined") {_RecordType("<13738,13740,410>",(o3)); Inst681++; } } catch(e) {}try { if (Inst682 <= 1000 && typeof (h1) != "undefined") {_RecordType("<13748,13750,411>",(h1)); Inst682++; } } catch(e) {}try { if (Inst683 <= 1000 && typeof (h2) != "undefined") {_RecordType("<13758,13760,412>",(h2)); Inst683++; } } catch(e) {}try { if (Inst684 <= 1000 && typeof (h3) != "undefined") {_RecordType("<13768,13770,413>",(h3)); Inst684++; } } catch(e) {}try { if (Inst685 <= 1000 && typeof (h4) != "undefined") {_RecordType("<13778,13780,414>",(h4)); Inst685++; } } catch(e) {}try { if (Inst686 <= 1000 && typeof (bits) != "undefined") {_RecordType("<13788,13792,415>",(bits)); Inst686++; } } catch(e) {}try { if (Inst687 <= 1000 && typeof (i) != "undefined") {_RecordType("<13800,13801,416>",(i)); Inst687++; } } catch(e) {}try { if (Inst688 <= 1000 && typeof (enc) != "undefined") {_RecordType("<13813,13816,417>",(enc)); Inst688++; } } catch(e) {}

try { if (Inst689 <= 1000 && typeof (i) != "undefined") {_RecordType("<14407,14408,439>",(i)); Inst689++; } } catch(e) {}try { if (Inst690 <= 1000 && typeof (str.length) != "undefined") {_RecordType("<14411,14421,439>",(str.length)); Inst690++; } } catch(e) {}try { if (Inst691 <= 1000 && typeof (str) != "undefined") {_RecordType("<14411,14414,439>",(str)); Inst691++; } } catch(e) {}
  do {
    // unpack four hexets into three octets using index points in b64
try { if (Inst693 <= 1000 && typeof (b64.indexOf) != "undefined") {_RecordType("<13910,13921,421>",(b64.indexOf)); Inst693++; } } catch(e) {}try { if (Inst694 <= 1000 && typeof (b64) != "undefined") {_RecordType("<13910,13913,421>",(b64)); Inst694++; } } catch(e) {}try { if (Inst695 <= 1000 && typeof (str.charAt) != "undefined") {_RecordType("<13922,13932,421>",(str.charAt)); Inst695++; } } catch(e) {}try { if (Inst696 <= 1000 && typeof (str) != "undefined") {_RecordType("<13922,13925,421>",(str)); Inst696++; } } catch(e) {}try { if (Inst697 <= 1000 && typeof (i) != "undefined") {_RecordType("<13933,13934,421>",(i)); Inst697++; } } catch(e) {}
    h1 = b64.indexOf(str.charAt(i++));
try { if (Inst692 <= 1000 && typeof (h1) != "undefined") {_RecordType("<13905,13907,421>",(h1)); Inst692++; } } catch(e) {}
try { if (Inst699 <= 1000 && typeof (b64.indexOf) != "undefined") {_RecordType("<13949,13960,422>",(b64.indexOf)); Inst699++; } } catch(e) {}try { if (Inst700 <= 1000 && typeof (b64) != "undefined") {_RecordType("<13949,13952,422>",(b64)); Inst700++; } } catch(e) {}try { if (Inst701 <= 1000 && typeof (str.charAt) != "undefined") {_RecordType("<13961,13971,422>",(str.charAt)); Inst701++; } } catch(e) {}try { if (Inst702 <= 1000 && typeof (str) != "undefined") {_RecordType("<13961,13964,422>",(str)); Inst702++; } } catch(e) {}try { if (Inst703 <= 1000 && typeof (i) != "undefined") {_RecordType("<13972,13973,422>",(i)); Inst703++; } } catch(e) {}
    h2 = b64.indexOf(str.charAt(i++));
try { if (Inst698 <= 1000 && typeof (h2) != "undefined") {_RecordType("<13944,13946,422>",(h2)); Inst698++; } } catch(e) {}
try { if (Inst705 <= 1000 && typeof (b64.indexOf) != "undefined") {_RecordType("<13988,13999,423>",(b64.indexOf)); Inst705++; } } catch(e) {}try { if (Inst706 <= 1000 && typeof (b64) != "undefined") {_RecordType("<13988,13991,423>",(b64)); Inst706++; } } catch(e) {}try { if (Inst707 <= 1000 && typeof (str.charAt) != "undefined") {_RecordType("<14000,14010,423>",(str.charAt)); Inst707++; } } catch(e) {}try { if (Inst708 <= 1000 && typeof (str) != "undefined") {_RecordType("<14000,14003,423>",(str)); Inst708++; } } catch(e) {}try { if (Inst709 <= 1000 && typeof (i) != "undefined") {_RecordType("<14011,14012,423>",(i)); Inst709++; } } catch(e) {}
    h3 = b64.indexOf(str.charAt(i++));
try { if (Inst704 <= 1000 && typeof (h3) != "undefined") {_RecordType("<13983,13985,423>",(h3)); Inst704++; } } catch(e) {}
try { if (Inst711 <= 1000 && typeof (b64.indexOf) != "undefined") {_RecordType("<14027,14038,424>",(b64.indexOf)); Inst711++; } } catch(e) {}try { if (Inst712 <= 1000 && typeof (b64) != "undefined") {_RecordType("<14027,14030,424>",(b64)); Inst712++; } } catch(e) {}try { if (Inst713 <= 1000 && typeof (str.charAt) != "undefined") {_RecordType("<14039,14049,424>",(str.charAt)); Inst713++; } } catch(e) {}try { if (Inst714 <= 1000 && typeof (str) != "undefined") {_RecordType("<14039,14042,424>",(str)); Inst714++; } } catch(e) {}try { if (Inst715 <= 1000 && typeof (i) != "undefined") {_RecordType("<14050,14051,424>",(i)); Inst715++; } } catch(e) {}
    h4 = b64.indexOf(str.charAt(i++));
try { if (Inst710 <= 1000 && typeof (h4) != "undefined") {_RecordType("<14022,14024,424>",(h4)); Inst710++; } } catch(e) {}
try { if (Inst717 <= 1000 && typeof (h1) != "undefined") {_RecordType("<14068,14070,425>",(h1)); Inst717++; } } catch(e) {}try { if (Inst718 <= 1000 && typeof (h2) != "undefined") {_RecordType("<14079,14081,425>",(h2)); Inst718++; } } catch(e) {}try { if (Inst719 <= 1000 && typeof (h3) != "undefined") {_RecordType("<14090,14092,425>",(h3)); Inst719++; } } catch(e) {}try { if (Inst720 <= 1000 && typeof (h4) != "undefined") {_RecordType("<14100,14102,425>",(h4)); Inst720++; } } catch(e) {}
    bits = h1 << 18 | h2 << 12 | h3 << 6 | h4;
try { if (Inst716 <= 1000 && typeof (bits) != "undefined") {_RecordType("<14061,14065,425>",(bits)); Inst716++; } } catch(e) {}
try { if (Inst722 <= 1000 && typeof (bits) != "undefined") {_RecordType("<14113,14117,426>",(bits)); Inst722++; } } catch(e) {}
    o1 = bits >> 16 & 0xff;
try { if (Inst721 <= 1000 && typeof (o1) != "undefined") {_RecordType("<14108,14110,426>",(o1)); Inst721++; } } catch(e) {}
try { if (Inst724 <= 1000 && typeof (bits) != "undefined") {_RecordType("<14141,14145,427>",(bits)); Inst724++; } } catch(e) {}
    o2 = bits >> 8 & 0xff;
try { if (Inst723 <= 1000 && typeof (o2) != "undefined") {_RecordType("<14136,14138,427>",(o2)); Inst723++; } } catch(e) {}
try { if (Inst726 <= 1000 && typeof (bits) != "undefined") {_RecordType("<14168,14172,428>",(bits)); Inst726++; } } catch(e) {}
    o3 = bits & 0xff;
try { if (Inst725 <= 1000 && typeof (o3) != "undefined") {_RecordType("<14163,14165,428>",(o3)); Inst725++; } } catch(e) {}

try { if (Inst727 <= 1000 && typeof (h3) != "undefined") {_RecordType("<14190,14192,430>",(h3)); Inst727++; } } catch(e) {}
    if (h3 == 64) {
try { if (Inst729 <= 1000 && typeof (String.fromCharCode) != "undefined") {_RecordType("<14215,14234,431>",(String.fromCharCode)); Inst729++; } } catch(e) {}try { if (Inst730 <= 1000 && typeof (String) != "undefined") {_RecordType("<14215,14221,431>",(String)); Inst730++; } } catch(e) {}try { if (Inst731 <= 1000 && typeof (o1) != "undefined") {_RecordType("<14235,14237,431>",(o1)); Inst731++; } } catch(e) {}
      enc += String.fromCharCode(o1);
try { if (Inst728 <= 1000 && typeof (enc) != "undefined") {_RecordType("<14208,14211,431>",(enc)); Inst728++; } } catch(e) {}
    } else {
try { if (Inst732 <= 1000 && typeof (h4) != "undefined") {_RecordType("<14263,14265,433>",(h4)); Inst732++; } } catch(e) {}
      if (h4 == 64) {
try { if (Inst734 <= 1000 && typeof (String.fromCharCode) != "undefined") {_RecordType("<14290,14309,434>",(String.fromCharCode)); Inst734++; } } catch(e) {}try { if (Inst735 <= 1000 && typeof (String) != "undefined") {_RecordType("<14290,14296,434>",(String)); Inst735++; } } catch(e) {}try { if (Inst736 <= 1000 && typeof (o1) != "undefined") {_RecordType("<14310,14312,434>",(o1)); Inst736++; } } catch(e) {}try { if (Inst737 <= 1000 && typeof (o2) != "undefined") {_RecordType("<14314,14316,434>",(o2)); Inst737++; } } catch(e) {}
        enc += String.fromCharCode(o1, o2);
try { if (Inst733 <= 1000 && typeof (enc) != "undefined") {_RecordType("<14283,14286,434>",(enc)); Inst733++; } } catch(e) {}
      } else {
try { if (Inst739 <= 1000 && typeof (String.fromCharCode) != "undefined") {_RecordType("<14349,14368,436>",(String.fromCharCode)); Inst739++; } } catch(e) {}try { if (Inst740 <= 1000 && typeof (String) != "undefined") {_RecordType("<14349,14355,436>",(String)); Inst740++; } } catch(e) {}try { if (Inst741 <= 1000 && typeof (o1) != "undefined") {_RecordType("<14369,14371,436>",(o1)); Inst741++; } } catch(e) {}try { if (Inst742 <= 1000 && typeof (o2) != "undefined") {_RecordType("<14373,14375,436>",(o2)); Inst742++; } } catch(e) {}try { if (Inst743 <= 1000 && typeof (o3) != "undefined") {_RecordType("<14377,14379,436>",(o3)); Inst743++; } } catch(e) {}
        enc += String.fromCharCode(o1, o2, o3);
try { if (Inst738 <= 1000 && typeof (enc) != "undefined") {_RecordType("<14342,14345,436>",(enc)); Inst738++; } } catch(e) {}
      }
    }
  } while (i < str.length);

try { if (Inst744 <= 1000 && typeof (decodeUTF8) != "undefined") {_RecordType("<14434,14444,441>",(decodeUTF8)); Inst744++; } } catch(e) {}try { if (Inst745 <= 1000 && typeof (enc) != "undefined") {_RecordType("<14445,14448,441>",(enc)); Inst745++; } } catch(e) {}
  return decodeUTF8(enc); // decode UTF-8 byte-array back to Unicode
}

try { if (Inst746 <= 1000 && typeof (encodeUTF8) != "undefined") {_RecordType("<14506,14516,444>",(encodeUTF8)); Inst746++; } } catch(e) {}
function encodeUTF8(str) {
try { if (Inst747 <= 1000 && typeof (str) != "undefined") {_RecordType("<14517,14520,444>",(str)); Inst747++; } } catch(e) {}
  // encode multi-byte string into utf-8 multiple single-byte characters 
try { if (Inst749 <= 1000 && typeof (str.replace) != "undefined") {_RecordType("<14606,14617,446>",(str.replace)); Inst749++; } } catch(e) {}try { if (Inst750 <= 1000 && typeof (str) != "undefined") {_RecordType("<14606,14609,446>",(str)); Inst750++; } } catch(e) {}
  str = str.replace(/[\u0080-\u07ff]/g, // U+0080 - U+07FF = 2-byte chars
  function (c) {
try { if (Inst751 <= 1000 && typeof (c) != "undefined") {_RecordType("<14684,14685,447>",(c)); Inst751++; } } catch(e) {}
try { if (Inst753 <= 1000 && typeof (c.charCodeAt) != "undefined") {_RecordType("<14702,14714,448>",(c.charCodeAt)); Inst753++; } } catch(e) {}try { if (Inst754 <= 1000 && typeof (c) != "undefined") {_RecordType("<14702,14703,448>",(c)); Inst754++; } } catch(e) {}
    var cc = c.charCodeAt(0);
try { if (Inst752 <= 1000 && typeof (cc) != "undefined") {_RecordType("<14697,14699,448>",(cc)); Inst752++; } } catch(e) {}
try { if (Inst755 <= 1000 && typeof (String.fromCharCode) != "undefined") {_RecordType("<14730,14749,449>",(String.fromCharCode)); Inst755++; } } catch(e) {}try { if (Inst756 <= 1000 && typeof (String) != "undefined") {_RecordType("<14730,14736,449>",(String)); Inst756++; } } catch(e) {}try { if (Inst757 <= 1000 && typeof (cc) != "undefined") {_RecordType("<14757,14759,449>",(cc)); Inst757++; } } catch(e) {}try { if (Inst758 <= 1000 && typeof (cc) != "undefined") {_RecordType("<14773,14775,449>",(cc)); Inst758++; } } catch(e) {}
    return String.fromCharCode(0xc0 | cc >> 6, 0x80 | cc & 0x3f);
  });
try { if (Inst748 <= 1000 && typeof (str) != "undefined") {_RecordType("<14600,14603,446>",(str)); Inst748++; } } catch(e) {}
try { if (Inst760 <= 1000 && typeof (str.replace) != "undefined") {_RecordType("<14799,14810,451>",(str.replace)); Inst760++; } } catch(e) {}try { if (Inst761 <= 1000 && typeof (str) != "undefined") {_RecordType("<14799,14802,451>",(str)); Inst761++; } } catch(e) {}
  str = str.replace(/[\u0800-\uffff]/g, // U+0800 - U+FFFF = 3-byte chars
  function (c) {
try { if (Inst762 <= 1000 && typeof (c) != "undefined") {_RecordType("<14877,14878,452>",(c)); Inst762++; } } catch(e) {}
try { if (Inst764 <= 1000 && typeof (c.charCodeAt) != "undefined") {_RecordType("<14895,14907,453>",(c.charCodeAt)); Inst764++; } } catch(e) {}try { if (Inst765 <= 1000 && typeof (c) != "undefined") {_RecordType("<14895,14896,453>",(c)); Inst765++; } } catch(e) {}
    var cc = c.charCodeAt(0);
try { if (Inst763 <= 1000 && typeof (cc) != "undefined") {_RecordType("<14890,14892,453>",(cc)); Inst763++; } } catch(e) {}
try { if (Inst766 <= 1000 && typeof (String.fromCharCode) != "undefined") {_RecordType("<14923,14942,454>",(String.fromCharCode)); Inst766++; } } catch(e) {}try { if (Inst767 <= 1000 && typeof (String) != "undefined") {_RecordType("<14923,14929,454>",(String)); Inst767++; } } catch(e) {}try { if (Inst768 <= 1000 && typeof (cc) != "undefined") {_RecordType("<14950,14952,454>",(cc)); Inst768++; } } catch(e) {}try { if (Inst769 <= 1000 && typeof (cc) != "undefined") {_RecordType("<14967,14969,454>",(cc)); Inst769++; } } catch(e) {}try { if (Inst770 <= 1000 && typeof (cc) != "undefined") {_RecordType("<14990,14992,454>",(cc)); Inst770++; } } catch(e) {}
    return String.fromCharCode(0xe0 | cc >> 12, 0x80 | cc >> 6 & 0x3F, 0x80 | cc & 0x3f);
  });
try { if (Inst759 <= 1000 && typeof (str) != "undefined") {_RecordType("<14793,14796,451>",(str)); Inst759++; } } catch(e) {}
try { if (Inst771 <= 1000 && typeof (str) != "undefined") {_RecordType("<15017,15020,456>",(str)); Inst771++; } } catch(e) {}
  return str;
}

try { if (Inst772 <= 1000 && typeof (decodeUTF8) != "undefined") {_RecordType("<15034,15044,459>",(decodeUTF8)); Inst772++; } } catch(e) {}
function decodeUTF8(str) {
try { if (Inst773 <= 1000 && typeof (str) != "undefined") {_RecordType("<15045,15048,459>",(str)); Inst773++; } } catch(e) {}
  // decode utf-8 encoded string back into multi-byte characters
try { if (Inst775 <= 1000 && typeof (str.replace) != "undefined") {_RecordType("<15125,15136,461>",(str.replace)); Inst775++; } } catch(e) {}try { if (Inst776 <= 1000 && typeof (str) != "undefined") {_RecordType("<15125,15128,461>",(str)); Inst776++; } } catch(e) {}
  str = str.replace(/[\u00c0-\u00df][\u0080-\u00bf]/g, // 2-byte chars
  function (c) {
try { if (Inst777 <= 1000 && typeof (c) != "undefined") {_RecordType("<15200,15201,462>",(c)); Inst777++; } } catch(e) {}
try { if (Inst779 <= 1000 && typeof (c.charCodeAt) != "undefined") {_RecordType("<15219,15231,463>",(c.charCodeAt)); Inst779++; } } catch(e) {}try { if (Inst780 <= 1000 && typeof (c) != "undefined") {_RecordType("<15219,15220,463>",(c)); Inst780++; } } catch(e) {}try { if (Inst781 <= 1000 && typeof (c.charCodeAt) != "undefined") {_RecordType("<15250,15262,463>",(c.charCodeAt)); Inst781++; } } catch(e) {}try { if (Inst782 <= 1000 && typeof (c) != "undefined") {_RecordType("<15250,15251,463>",(c)); Inst782++; } } catch(e) {}
    var cc = (c.charCodeAt(0) & 0x1f) << 6 | c.charCodeAt(1) & 0x3f;
try { if (Inst778 <= 1000 && typeof (cc) != "undefined") {_RecordType("<15213,15215,463>",(cc)); Inst778++; } } catch(e) {}
try { if (Inst783 <= 1000 && typeof (String.fromCharCode) != "undefined") {_RecordType("<15285,15304,464>",(String.fromCharCode)); Inst783++; } } catch(e) {}try { if (Inst784 <= 1000 && typeof (String) != "undefined") {_RecordType("<15285,15291,464>",(String)); Inst784++; } } catch(e) {}try { if (Inst785 <= 1000 && typeof (cc) != "undefined") {_RecordType("<15305,15307,464>",(cc)); Inst785++; } } catch(e) {}
    return String.fromCharCode(cc);
  });
try { if (Inst774 <= 1000 && typeof (str) != "undefined") {_RecordType("<15119,15122,461>",(str)); Inst774++; } } catch(e) {}
try { if (Inst787 <= 1000 && typeof (str.replace) != "undefined") {_RecordType("<15324,15335,466>",(str.replace)); Inst787++; } } catch(e) {}try { if (Inst788 <= 1000 && typeof (str) != "undefined") {_RecordType("<15324,15327,466>",(str)); Inst788++; } } catch(e) {}
  str = str.replace(/[\u00e0-\u00ef][\u0080-\u00bf][\u0080-\u00bf]/g, // 3-byte chars
  function (c) {
try { if (Inst789 <= 1000 && typeof (c) != "undefined") {_RecordType("<15414,15415,467>",(c)); Inst789++; } } catch(e) {}
try { if (Inst791 <= 1000 && typeof (c.charCodeAt) != "undefined") {_RecordType("<15433,15445,468>",(c.charCodeAt)); Inst791++; } } catch(e) {}try { if (Inst792 <= 1000 && typeof (c) != "undefined") {_RecordType("<15433,15434,468>",(c)); Inst792++; } } catch(e) {}try { if (Inst793 <= 1000 && typeof (c.charCodeAt) != "undefined") {_RecordType("<15465,15477,468>",(c.charCodeAt)); Inst793++; } } catch(e) {}try { if (Inst794 <= 1000 && typeof (c) != "undefined") {_RecordType("<15465,15466,468>",(c)); Inst794++; } } catch(e) {}try { if (Inst795 <= 1000 && typeof (c.charCodeAt) != "undefined") {_RecordType("<15495,15507,468>",(c.charCodeAt)); Inst795++; } } catch(e) {}try { if (Inst796 <= 1000 && typeof (c) != "undefined") {_RecordType("<15495,15496,468>",(c)); Inst796++; } } catch(e) {}
    var cc = (c.charCodeAt(0) & 0x0f) << 12 | c.charCodeAt(1) & 0x3f << 6 | c.charCodeAt(2) & 0x3f;
try { if (Inst790 <= 1000 && typeof (cc) != "undefined") {_RecordType("<15427,15429,468>",(cc)); Inst790++; } } catch(e) {}
try { if (Inst797 <= 1000 && typeof (String.fromCharCode) != "undefined") {_RecordType("<15530,15549,469>",(String.fromCharCode)); Inst797++; } } catch(e) {}try { if (Inst798 <= 1000 && typeof (String) != "undefined") {_RecordType("<15530,15536,469>",(String)); Inst798++; } } catch(e) {}try { if (Inst799 <= 1000 && typeof (cc) != "undefined") {_RecordType("<15550,15552,469>",(cc)); Inst799++; } } catch(e) {}
    return String.fromCharCode(cc);
  });
try { if (Inst786 <= 1000 && typeof (str) != "undefined") {_RecordType("<15318,15321,466>",(str)); Inst786++; } } catch(e) {}
try { if (Inst800 <= 1000 && typeof (str) != "undefined") {_RecordType("<15570,15573,471>",(str)); Inst800++; } } catch(e) {}
  return str;
}

try { if (Inst801 <= 1000 && typeof (byteArrayToHexStr) != "undefined") {_RecordType("<15587,15604,474>",(byteArrayToHexStr)); Inst801++; } } catch(e) {}
function byteArrayToHexStr(b) {
try { if (Inst802 <= 1000 && typeof (b) != "undefined") {_RecordType("<15605,15606,474>",(b)); Inst802++; } } catch(e) {}
  // convert byte array to hex string for displaying test vectors
  var s = '';
try { if (Inst803 <= 1000 && typeof (s) != "undefined") {_RecordType("<15682,15683,476>",(s)); Inst803++; } } catch(e) {}

  for (var i = 0; i < b.length; i++) {
try { if (Inst804 <= 1000 && typeof (i) != "undefined") {_RecordType("<15702,15703,478>",(i)); Inst804++; } } catch(e) {}try { if (Inst805 <= 1000 && typeof (i) != "undefined") {_RecordType("<15709,15710,478>",(i)); Inst805++; } } catch(e) {}try { if (Inst806 <= 1000 && typeof (b.length) != "undefined") {_RecordType("<15713,15721,478>",(b.length)); Inst806++; } } catch(e) {}try { if (Inst807 <= 1000 && typeof (b) != "undefined") {_RecordType("<15713,15714,478>",(b)); Inst807++; } } catch(e) {}try { if (Inst808 <= 1000 && typeof (i) != "undefined") {_RecordType("<15723,15724,478>",(i)); Inst808++; } } catch(e) {}
try { if (Inst810 <= 1000 && typeof (b[i].toString) != "undefined") {_RecordType("<15739,15752,479>",(b[i].toString)); Inst810++; } } catch(e) {}try { if (Inst811 <= 1000 && typeof (b[i]) != "undefined") {_RecordType("<15739,15743,479>",(b[i])); Inst811++; } } catch(e) {}try { if (Inst812 <= 1000 && typeof (b) != "undefined") {_RecordType("<15739,15740,479>",(b)); Inst812++; } } catch(e) {}
    s += b[i].toString(16) + ' ';
try { if (Inst809 <= 1000 && typeof (s) != "undefined") {_RecordType("<15734,15735,479>",(s)); Inst809++; } } catch(e) {}
  }

try { if (Inst813 <= 1000 && typeof (s) != "undefined") {_RecordType("<15778,15779,482>",(s)); Inst813++; } } catch(e) {}
  return s;
}
/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */


var plainText = "ROMEO: But, soft! what light through yonder window breaks?\n\
It is the east, and Juliet is the sun.\n\
Arise, fair sun, and kill the envious moon,\n\
Who is already sick and pale with grief,\n\
That thou her maid art far more fair than she:\n\
Be not her maid, since she is envious;\n\
Her vestal livery is but sick and green\n\
And none but fools do wear it; cast it off.\n\
It is my lady, O, it is my love!\n\
O, that she knew she were!\n\
She speaks yet she says nothing: what of that?\n\
Her eye discourses; I will answer it.\n\
I am too bold, 'tis not to me she speaks:\n\
Two of the fairest stars in all the heaven,\n\
Having some business, do entreat her eyes\n\
To twinkle in their spheres till they return.\n\
What if her eyes were there, they in her head?\n\
The brightness of her cheek would shame those stars,\n\
As daylight doth a lamp; her eyes in heaven\n\
Would through the airy region stream so bright\n\
That birds would sing and think it were not night.\n\
See, how she leans her cheek upon her hand!\n\
O, that I were a glove upon that hand,\n\
That I might touch that cheek!\n\
JULIET: Ay me!\n\
ROMEO: She speaks:\n\
O, speak again, bright angel! for thou art\n\
As glorious to this night, being o'er my head\n\
As is a winged messenger of heaven\n\
Unto the white-upturned wondering eyes\n\
Of mortals that fall back to gaze on him\n\
When he bestrides the lazy-pacing clouds\n\
And sails upon the bosom of the air.";
try { if (Inst814 <= 1000 && typeof (plainText) != "undefined") {_RecordType("<15890,15899,487>",(plainText)); Inst814++; } } catch(e) {}
var password = "O Romeo, Romeo! wherefore art thou Romeo?";
try { if (Inst815 <= 1000 && typeof (password) != "undefined") {_RecordType("<17349,17357,520>",(password)); Inst815++; } } catch(e) {}
try { if (Inst817 <= 1000 && typeof (AESEncryptCtr) != "undefined") {_RecordType("<17422,17435,521>",(AESEncryptCtr)); Inst817++; } } catch(e) {}try { if (Inst818 <= 1000 && typeof (plainText) != "undefined") {_RecordType("<17436,17445,521>",(plainText)); Inst818++; } } catch(e) {}try { if (Inst819 <= 1000 && typeof (password) != "undefined") {_RecordType("<17447,17455,521>",(password)); Inst819++; } } catch(e) {}
var cipherText = AESEncryptCtr(plainText, password, 256);
try { if (Inst816 <= 1000 && typeof (cipherText) != "undefined") {_RecordType("<17409,17419,521>",(cipherText)); Inst816++; } } catch(e) {}
try { if (Inst821 <= 1000 && typeof (AESDecryptCtr) != "undefined") {_RecordType("<17483,17496,522>",(AESDecryptCtr)); Inst821++; } } catch(e) {}try { if (Inst822 <= 1000 && typeof (cipherText) != "undefined") {_RecordType("<17497,17507,522>",(cipherText)); Inst822++; } } catch(e) {}try { if (Inst823 <= 1000 && typeof (password) != "undefined") {_RecordType("<17509,17517,522>",(password)); Inst823++; } } catch(e) {}
var decryptedText = AESDecryptCtr(cipherText, password, 256);
try { if (Inst820 <= 1000 && typeof (decryptedText) != "undefined") {_RecordType("<17467,17480,522>",(decryptedText)); Inst820++; } } catch(e) {}
try { if (Inst824 <= 1000 && typeof (plainText) != "undefined") {_RecordType("<17525,17534,523>",(plainText)); Inst824++; } } catch(e) {}
plainText;
try { if (Inst825 <= 1000 && typeof (decryptedText) != "undefined") {_RecordType("<17536,17549,524>",(decryptedText)); Inst825++; } } catch(e) {}
decryptedText;

