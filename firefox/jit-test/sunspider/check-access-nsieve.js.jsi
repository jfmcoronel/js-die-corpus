var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// The Great Computer Language Shootout
// http://shootout.alioth.debian.org/
//
// modified by Isaac Gouy
try { if (Inst0 <= 1000 && typeof (pad) != "undefined") {_RecordType("<116,119,5>",(pad)); Inst0++; } } catch(e) {}
function pad(number, width) {
try { if (Inst1 <= 1000 && typeof (number) != "undefined") {_RecordType("<120,126,5>",(number)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (width) != "undefined") {_RecordType("<128,133,5>",(width)); Inst2++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (number.toString) != "undefined") {_RecordType("<147,162,6>",(number.toString)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (number) != "undefined") {_RecordType("<147,153,6>",(number)); Inst5++; } } catch(e) {}
  var s = number.toString();
try { if (Inst3 <= 1000 && typeof (s) != "undefined") {_RecordType("<143,144,6>",(s)); Inst3++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (width) != "undefined") {_RecordType("<186,191,7>",(width)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (s.length) != "undefined") {_RecordType("<194,202,7>",(s.length)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (s) != "undefined") {_RecordType("<194,195,7>",(s)); Inst9++; } } catch(e) {}
  var prefixWidth = width - s.length;
try { if (Inst6 <= 1000 && typeof (prefixWidth) != "undefined") {_RecordType("<172,183,7>",(prefixWidth)); Inst6++; } } catch(e) {}

try { if (Inst10 <= 1000 && typeof (prefixWidth) != "undefined") {_RecordType("<211,222,9>",(prefixWidth)); Inst10++; } } catch(e) {}
  if (prefixWidth > 0) {
    for (var i = 1; i <= prefixWidth; i++) {
try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<243,244,10>",(i)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<250,251,10>",(i)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (prefixWidth) != "undefined") {_RecordType("<255,266,10>",(prefixWidth)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<268,269,10>",(i)); Inst14++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (s) != "undefined") {_RecordType("<291,292,11>",(s)); Inst16++; } } catch(e) {}
      s = " " + s;
try { if (Inst15 <= 1000 && typeof (s) != "undefined") {_RecordType("<281,282,11>",(s)); Inst15++; } } catch(e) {}
    }
  }

try { if (Inst17 <= 1000 && typeof (s) != "undefined") {_RecordType("<314,315,15>",(s)); Inst17++; } } catch(e) {}
  return s;
}

try { if (Inst18 <= 1000 && typeof (nsieve) != "undefined") {_RecordType("<329,335,18>",(nsieve)); Inst18++; } } catch(e) {}
function nsieve(m, isPrime) {
try { if (Inst19 <= 1000 && typeof (m) != "undefined") {_RecordType("<336,337,18>",(m)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (isPrime) != "undefined") {_RecordType("<339,346,18>",(isPrime)); Inst20++; } } catch(e) {}
  var i, k, count;
try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<356,357,19>",(i)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (k) != "undefined") {_RecordType("<359,360,19>",(k)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (count) != "undefined") {_RecordType("<362,367,19>",(count)); Inst23++; } } catch(e) {}

  for (i = 2; i <= m; i++) {
try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<377,378,21>",(i)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<384,385,21>",(i)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (m) != "undefined") {_RecordType("<389,390,21>",(m)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (i) != "undefined") {_RecordType("<392,393,21>",(i)); Inst27++; } } catch(e) {}
    isPrime[i] = true;
try { if (Inst28 <= 1000 && typeof (isPrime[i]) != "undefined") {_RecordType("<403,413,22>",(isPrime[i])); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (isPrime) != "undefined") {_RecordType("<403,410,22>",(isPrime)); Inst29++; } } catch(e) {}
  }

  count = 0;
try { if (Inst30 <= 1000 && typeof (count) != "undefined") {_RecordType("<429,434,25>",(count)); Inst30++; } } catch(e) {}

  for (i = 2; i <= m; i++) {
try { if (Inst31 <= 1000 && typeof (i) != "undefined") {_RecordType("<448,449,27>",(i)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (i) != "undefined") {_RecordType("<455,456,27>",(i)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (m) != "undefined") {_RecordType("<460,461,27>",(m)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (i) != "undefined") {_RecordType("<463,464,27>",(i)); Inst34++; } } catch(e) {}
try { if (Inst35 <= 1000 && typeof (isPrime[i]) != "undefined") {_RecordType("<478,488,28>",(isPrime[i])); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (isPrime) != "undefined") {_RecordType("<478,485,28>",(isPrime)); Inst36++; } } catch(e) {}
    if (isPrime[i]) {
      for (k = i + i; k <= m; k += i) {
try { if (Inst37 <= 1000 && typeof (k) != "undefined") {_RecordType("<503,504,29>",(k)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (i) != "undefined") {_RecordType("<507,508,29>",(i)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (i) != "undefined") {_RecordType("<511,512,29>",(i)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (k) != "undefined") {_RecordType("<514,515,29>",(k)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (m) != "undefined") {_RecordType("<519,520,29>",(m)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (k) != "undefined") {_RecordType("<522,523,29>",(k)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (i) != "undefined") {_RecordType("<527,528,29>",(i)); Inst43++; } } catch(e) {}
        isPrime[k] = false;
try { if (Inst44 <= 1000 && typeof (isPrime[k]) != "undefined") {_RecordType("<540,550,30>",(isPrime[k])); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (isPrime) != "undefined") {_RecordType("<540,547,30>",(isPrime)); Inst45++; } } catch(e) {}
      }

try { if (Inst46 <= 1000 && typeof (count) != "undefined") {_RecordType("<575,580,33>",(count)); Inst46++; } } catch(e) {}
      count++;
    }
  }

try { if (Inst47 <= 1000 && typeof (count) != "undefined") {_RecordType("<604,609,37>",(count)); Inst47++; } } catch(e) {}
  return count;
}

var ret = 0;
try { if (Inst48 <= 1000 && typeof (ret) != "undefined") {_RecordType("<618,621,40>",(ret)); Inst48++; } } catch(e) {}

try { if (Inst49 <= 1000 && typeof (sieve) != "undefined") {_RecordType("<637,642,42>",(sieve)); Inst49++; } } catch(e) {}
function sieve() {
  for (var i = 1; i <= 3; i++) {
try { if (Inst50 <= 1000 && typeof (i) != "undefined") {_RecordType("<658,659,43>",(i)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (i) != "undefined") {_RecordType("<665,666,43>",(i)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (i) != "undefined") {_RecordType("<673,674,43>",(i)); Inst52++; } } catch(e) {}
try { if (Inst54 <= 1000 && typeof (i) != "undefined") {_RecordType("<698,699,44>",(i)); Inst54++; } } catch(e) {}
    var m = (1 << i) * 10000;
try { if (Inst53 <= 1000 && typeof (m) != "undefined") {_RecordType("<688,689,44>",(m)); Inst53++; } } catch(e) {}
try { if (Inst56 <= 1000 && typeof (Array) != "undefined") {_RecordType("<726,731,45>",(Array)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (m) != "undefined") {_RecordType("<732,733,45>",(m)); Inst57++; } } catch(e) {}
    var flags = Array(m + 1);
try { if (Inst55 <= 1000 && typeof (flags) != "undefined") {_RecordType("<718,723,45>",(flags)); Inst55++; } } catch(e) {}
try { if (Inst59 <= 1000 && typeof (nsieve) != "undefined") {_RecordType("<751,757,46>",(nsieve)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (m) != "undefined") {_RecordType("<758,759,46>",(m)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (flags) != "undefined") {_RecordType("<761,766,46>",(flags)); Inst61++; } } catch(e) {}
    ret += nsieve(m, flags);
try { if (Inst58 <= 1000 && typeof (ret) != "undefined") {_RecordType("<744,747,46>",(ret)); Inst58++; } } catch(e) {}
  }
}

try { if (Inst62 <= 1000 && typeof (sieve) != "undefined") {_RecordType("<776,781,50>",(sieve)); Inst62++; } } catch(e) {}
sieve();
try { if (Inst63 <= 1000 && typeof (ret) != "undefined") {_RecordType("<785,788,51>",(ret)); Inst63++; } } catch(e) {}
ret;
14302;

