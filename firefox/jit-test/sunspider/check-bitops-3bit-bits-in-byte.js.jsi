var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright (c) 2004 by Arthur Langereis (arthur_ext at domain xfinitegames, tld com
// 1 op = 6 ANDs, 3 SHRs, 3 SHLs, 4 assigns, 2 ADDs
// O(1)
try { if (Inst0 <= 1000 && typeof (fast3bitlookup) != "undefined") {_RecordType("<155,169,4>",(fast3bitlookup)); Inst0++; } } catch(e) {}
function fast3bitlookup(b) {
try { if (Inst1 <= 1000 && typeof (b) != "undefined") {_RecordType("<170,171,4>",(b)); Inst1++; } } catch(e) {}
  var c,
      bi3b = 0xE994; // 0b1110 1001 1001 0100; // 3 2 2 1  2 1 1 0
try { if (Inst2 <= 1000 && typeof (c) != "undefined") {_RecordType("<181,182,5>",(c)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (bi3b) != "undefined") {_RecordType("<190,194,6>",(bi3b)); Inst3++; } } catch(e) {}

try { if (Inst5 <= 1000 && typeof (bi3b) != "undefined") {_RecordType("<262,266,8>",(bi3b)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (b) != "undefined") {_RecordType("<271,272,8>",(b)); Inst6++; } } catch(e) {}
  c = 3 & bi3b >> (b << 1 & 14);
try { if (Inst4 <= 1000 && typeof (c) != "undefined") {_RecordType("<254,255,8>",(c)); Inst4++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (bi3b) != "undefined") {_RecordType("<296,300,9>",(bi3b)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (b) != "undefined") {_RecordType("<305,306,9>",(b)); Inst9++; } } catch(e) {}
  c += 3 & bi3b >> (b >> 2 & 14);
try { if (Inst7 <= 1000 && typeof (c) != "undefined") {_RecordType("<287,288,9>",(c)); Inst7++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (bi3b) != "undefined") {_RecordType("<330,334,10>",(bi3b)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (b) != "undefined") {_RecordType("<339,340,10>",(b)); Inst12++; } } catch(e) {}
  c += 3 & bi3b >> (b >> 5 & 6);
try { if (Inst10 <= 1000 && typeof (c) != "undefined") {_RecordType("<321,322,10>",(c)); Inst10++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (c) != "undefined") {_RecordType("<361,362,11>",(c)); Inst13++; } } catch(e) {}
  return c;
  /*
  lir4,0xE994; 9 instructions, no memory access, minimal register dependence, 6 shifts, 2 adds, 1 inline assign
  rlwinmr5,r3,1,28,30
  rlwinmr6,r3,30,28,30
  rlwinmr7,r3,27,29,30
  rlwnmr8,r4,r5,30,31
  rlwnmr9,r4,r6,30,31
  rlwnmr10,r4,r7,30,31
  addr3,r8,r9
  addr3,r3,r10
  */
}

var ret = 0;
try { if (Inst14 <= 1000 && typeof (ret) != "undefined") {_RecordType("<657,660,25>",(ret)); Inst14++; } } catch(e) {}

try { if (Inst15 <= 1000 && typeof (TimeFunc) != "undefined") {_RecordType("<676,684,27>",(TimeFunc)); Inst15++; } } catch(e) {}
function TimeFunc(func) {
try { if (Inst16 <= 1000 && typeof (func) != "undefined") {_RecordType("<685,689,27>",(func)); Inst16++; } } catch(e) {}
  var x, y, t;
try { if (Inst17 <= 1000 && typeof (x) != "undefined") {_RecordType("<699,700,28>",(x)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (y) != "undefined") {_RecordType("<702,703,28>",(y)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (t) != "undefined") {_RecordType("<705,706,28>",(t)); Inst19++; } } catch(e) {}

  for (var x = 0; x < 500; x++) {
try { if (Inst20 <= 1000 && typeof (x) != "undefined") {_RecordType("<720,721,30>",(x)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (x) != "undefined") {_RecordType("<727,728,30>",(x)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (x) != "undefined") {_RecordType("<736,737,30>",(x)); Inst22++; } } catch(e) {}
    for (var y = 0; y < 256; y++) {
try { if (Inst23 <= 1000 && typeof (y) != "undefined") {_RecordType("<756,757,31>",(y)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (y) != "undefined") {_RecordType("<763,764,31>",(y)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (y) != "undefined") {_RecordType("<772,773,31>",(y)); Inst25++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (func) != "undefined") {_RecordType("<792,796,32>",(func)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (y) != "undefined") {_RecordType("<797,798,32>",(y)); Inst28++; } } catch(e) {}
      ret += func(y);
try { if (Inst26 <= 1000 && typeof (ret) != "undefined") {_RecordType("<785,788,32>",(ret)); Inst26++; } } catch(e) {}
    }
  }
}

try { if (Inst29 <= 1000 && typeof (TimeFunc) != "undefined") {_RecordType("<814,822,37>",(TimeFunc)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (fast3bitlookup) != "undefined") {_RecordType("<823,837,37>",(fast3bitlookup)); Inst30++; } } catch(e) {}
TimeFunc(fast3bitlookup);
try { if (Inst31 <= 1000 && typeof (ret) != "undefined") {_RecordType("<840,843,38>",(ret)); Inst31++; } } catch(e) {}
ret;
512000;

