var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* The Great Computer Language Shootout
   http://shootout.alioth.debian.org/
   contributed by Isaac Gouy */
try { if (Inst0 <= 1000 && typeof (TreeNode) != "undefined") {_RecordType("<119,127,4>",(TreeNode)); Inst0++; } } catch(e) {}
function TreeNode(left, right, item) {
try { if (Inst1 <= 1000 && typeof (left) != "undefined") {_RecordType("<128,132,4>",(left)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (right) != "undefined") {_RecordType("<134,139,4>",(right)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (item) != "undefined") {_RecordType("<141,145,4>",(item)); Inst3++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (left) != "undefined") {_RecordType("<163,167,5>",(left)); Inst5++; } } catch(e) {}
  this.left = left;
try { if (Inst4 <= 1000 && typeof (this.left) != "undefined") {_RecordType("<151,160,5>",(this.left)); Inst4++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (right) != "undefined") {_RecordType("<184,189,6>",(right)); Inst7++; } } catch(e) {}
  this.right = right;
try { if (Inst6 <= 1000 && typeof (this.right) != "undefined") {_RecordType("<171,181,6>",(this.right)); Inst6++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (item) != "undefined") {_RecordType("<205,209,7>",(item)); Inst9++; } } catch(e) {}
  this.item = item;
try { if (Inst8 <= 1000 && typeof (this.item) != "undefined") {_RecordType("<193,202,7>",(this.item)); Inst8++; } } catch(e) {}
}

TreeNode.prototype.itemCheck = function () {
try { if (Inst13 <= 1000 && typeof (this.left) != "undefined") {_RecordType("<265,274,11>",(this.left)); Inst13++; } } catch(e) {}
  if (this.left == null) {
try { if (Inst14 <= 1000 && typeof (this.item) != "undefined") {_RecordType("<297,306,12>",(this.item)); Inst14++; } } catch(e) {}
    return this.item;
  } else {
try { if (Inst15 <= 1000 && typeof (this.item) != "undefined") {_RecordType("<330,339,14>",(this.item)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (this.left.itemCheck) != "undefined") {_RecordType("<342,361,14>",(this.left.itemCheck)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (this.left) != "undefined") {_RecordType("<342,351,14>",(this.left)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (this.right.itemCheck) != "undefined") {_RecordType("<366,386,14>",(this.right.itemCheck)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (this.right) != "undefined") {_RecordType("<366,376,14>",(this.right)); Inst19++; } } catch(e) {}
    return this.item + this.left.itemCheck() - this.right.itemCheck();
  }
};
try { if (Inst10 <= 1000 && typeof (TreeNode.prototype.itemCheck) != "undefined") {_RecordType("<214,242,10>",(TreeNode.prototype.itemCheck)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (TreeNode.prototype) != "undefined") {_RecordType("<214,232,10>",(TreeNode.prototype)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (TreeNode) != "undefined") {_RecordType("<214,222,10>",(TreeNode)); Inst12++; } } catch(e) {}

try { if (Inst20 <= 1000 && typeof (bottomUpTree) != "undefined") {_RecordType("<407,419,18>",(bottomUpTree)); Inst20++; } } catch(e) {}
function bottomUpTree(item, depth) {
try { if (Inst21 <= 1000 && typeof (item) != "undefined") {_RecordType("<420,424,18>",(item)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (depth) != "undefined") {_RecordType("<426,431,18>",(depth)); Inst22++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (depth) != "undefined") {_RecordType("<441,446,19>",(depth)); Inst23++; } } catch(e) {}
  if (depth > 0) {
try { if (Inst24 <= 1000 && typeof (TreeNode) != "undefined") {_RecordType("<469,477,20>",(TreeNode)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (bottomUpTree) != "undefined") {_RecordType("<478,490,20>",(bottomUpTree)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (item) != "undefined") {_RecordType("<495,499,20>",(item)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (depth) != "undefined") {_RecordType("<505,510,20>",(depth)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (bottomUpTree) != "undefined") {_RecordType("<517,529,20>",(bottomUpTree)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (item) != "undefined") {_RecordType("<534,538,20>",(item)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (depth) != "undefined") {_RecordType("<540,545,20>",(depth)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (item) != "undefined") {_RecordType("<552,556,20>",(item)); Inst31++; } } catch(e) {}
    return new TreeNode(bottomUpTree(2 * item - 1, depth - 1), bottomUpTree(2 * item, depth - 1), item);
  } else {
try { if (Inst32 <= 1000 && typeof (TreeNode) != "undefined") {_RecordType("<585,593,22>",(TreeNode)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (item) != "undefined") {_RecordType("<606,610,22>",(item)); Inst33++; } } catch(e) {}
    return new TreeNode(null, null, item);
  }
}

var ret;
try { if (Inst34 <= 1000 && typeof (ret) != "undefined") {_RecordType("<624,627,26>",(ret)); Inst34++; } } catch(e) {}

for (var n = 4; n <= 7; n += 1) {
try { if (Inst35 <= 1000 && typeof (n) != "undefined") {_RecordType("<639,640,28>",(n)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (n) != "undefined") {_RecordType("<646,647,28>",(n)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (n) != "undefined") {_RecordType("<654,655,28>",(n)); Inst37++; } } catch(e) {}
  var minDepth = 4;
try { if (Inst38 <= 1000 && typeof (minDepth) != "undefined") {_RecordType("<670,678,29>",(minDepth)); Inst38++; } } catch(e) {}
try { if (Inst40 <= 1000 && typeof (Math.max) != "undefined") {_RecordType("<701,709,30>",(Math.max)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (Math) != "undefined") {_RecordType("<701,705,30>",(Math)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (minDepth) != "undefined") {_RecordType("<710,718,30>",(minDepth)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (n) != "undefined") {_RecordType("<724,725,30>",(n)); Inst43++; } } catch(e) {}
  var maxDepth = Math.max(minDepth + 2, n);
try { if (Inst39 <= 1000 && typeof (maxDepth) != "undefined") {_RecordType("<690,698,30>",(maxDepth)); Inst39++; } } catch(e) {}
try { if (Inst45 <= 1000 && typeof (maxDepth) != "undefined") {_RecordType("<749,757,31>",(maxDepth)); Inst45++; } } catch(e) {}
  var stretchDepth = maxDepth + 1;
try { if (Inst44 <= 1000 && typeof (stretchDepth) != "undefined") {_RecordType("<734,746,31>",(stretchDepth)); Inst44++; } } catch(e) {}
try { if (Inst47 <= 1000 && typeof (bottomUpTree(0, stretchDepth).itemCheck) != "undefined") {_RecordType("<777,816,32>",(bottomUpTree(0, stretchDepth).itemCheck)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (bottomUpTree) != "undefined") {_RecordType("<777,789,32>",(bottomUpTree)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (stretchDepth) != "undefined") {_RecordType("<793,805,32>",(stretchDepth)); Inst49++; } } catch(e) {}
  var check = bottomUpTree(0, stretchDepth).itemCheck();
try { if (Inst46 <= 1000 && typeof (check) != "undefined") {_RecordType("<769,774,32>",(check)); Inst46++; } } catch(e) {}
try { if (Inst51 <= 1000 && typeof (bottomUpTree) != "undefined") {_RecordType("<842,854,33>",(bottomUpTree)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (maxDepth) != "undefined") {_RecordType("<858,866,33>",(maxDepth)); Inst52++; } } catch(e) {}
  var longLivedTree = bottomUpTree(0, maxDepth);
try { if (Inst50 <= 1000 && typeof (longLivedTree) != "undefined") {_RecordType("<826,839,33>",(longLivedTree)); Inst50++; } } catch(e) {}

  for (var depth = minDepth; depth <= maxDepth; depth += 2) {
try { if (Inst53 <= 1000 && typeof (depth) != "undefined") {_RecordType("<881,886,35>",(depth)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (minDepth) != "undefined") {_RecordType("<889,897,35>",(minDepth)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (depth) != "undefined") {_RecordType("<899,904,35>",(depth)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (maxDepth) != "undefined") {_RecordType("<908,916,35>",(maxDepth)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (depth) != "undefined") {_RecordType("<918,923,35>",(depth)); Inst57++; } } catch(e) {}
try { if (Inst59 <= 1000 && typeof (maxDepth) != "undefined") {_RecordType("<958,966,36>",(maxDepth)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (depth) != "undefined") {_RecordType("<969,974,36>",(depth)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (minDepth) != "undefined") {_RecordType("<977,985,36>",(minDepth)); Inst61++; } } catch(e) {}
    var iterations = 1 << maxDepth - depth + minDepth;
try { if (Inst58 <= 1000 && typeof (iterations) != "undefined") {_RecordType("<940,950,36>",(iterations)); Inst58++; } } catch(e) {}
    check = 0;
try { if (Inst62 <= 1000 && typeof (check) != "undefined") {_RecordType("<991,996,37>",(check)); Inst62++; } } catch(e) {}

    for (var i = 1; i <= iterations; i++) {
try { if (Inst63 <= 1000 && typeof (i) != "undefined") {_RecordType("<1016,1017,39>",(i)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (i) != "undefined") {_RecordType("<1023,1024,39>",(i)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (iterations) != "undefined") {_RecordType("<1028,1038,39>",(iterations)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (i) != "undefined") {_RecordType("<1040,1041,39>",(i)); Inst66++; } } catch(e) {}
try { if (Inst68 <= 1000 && typeof (bottomUpTree(i, depth).itemCheck) != "undefined") {_RecordType("<1062,1094,40>",(bottomUpTree(i, depth).itemCheck)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (bottomUpTree) != "undefined") {_RecordType("<1062,1074,40>",(bottomUpTree)); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (i) != "undefined") {_RecordType("<1075,1076,40>",(i)); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (depth) != "undefined") {_RecordType("<1078,1083,40>",(depth)); Inst71++; } } catch(e) {}
      check += bottomUpTree(i, depth).itemCheck();
try { if (Inst67 <= 1000 && typeof (check) != "undefined") {_RecordType("<1053,1058,40>",(check)); Inst67++; } } catch(e) {}
try { if (Inst73 <= 1000 && typeof (bottomUpTree(-i, depth).itemCheck) != "undefined") {_RecordType("<1113,1146,41>",(bottomUpTree(-i, depth).itemCheck)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (bottomUpTree) != "undefined") {_RecordType("<1113,1125,41>",(bottomUpTree)); Inst74++; } } catch(e) {}try { if (Inst75 <= 1000 && typeof (i) != "undefined") {_RecordType("<1127,1128,41>",(i)); Inst75++; } } catch(e) {}try { if (Inst76 <= 1000 && typeof (depth) != "undefined") {_RecordType("<1130,1135,41>",(depth)); Inst76++; } } catch(e) {}
      check += bottomUpTree(-i, depth).itemCheck();
try { if (Inst72 <= 1000 && typeof (check) != "undefined") {_RecordType("<1104,1109,41>",(check)); Inst72++; } } catch(e) {}
    }
  }

try { if (Inst78 <= 1000 && typeof (longLivedTree.itemCheck) != "undefined") {_RecordType("<1169,1192,45>",(longLivedTree.itemCheck)); Inst78++; } } catch(e) {}try { if (Inst79 <= 1000 && typeof (longLivedTree) != "undefined") {_RecordType("<1169,1182,45>",(longLivedTree)); Inst79++; } } catch(e) {}
  ret = longLivedTree.itemCheck();
try { if (Inst77 <= 1000 && typeof (ret) != "undefined") {_RecordType("<1163,1166,45>",(ret)); Inst77++; } } catch(e) {}
}

try { if (Inst80 <= 1000 && typeof (ret) != "undefined") {_RecordType("<1199,1202,48>",(ret)); Inst80++; } } catch(e) {}
ret;
-1;

