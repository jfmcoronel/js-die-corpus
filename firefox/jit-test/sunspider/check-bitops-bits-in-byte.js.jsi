var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright (c) 2004 by Arthur Langereis (arthur_ext at domain xfinitegames, tld com)
// 1 op = 2 assigns, 16 compare/branches, 8 ANDs, (0-8) ADDs, 8 SHLs
// O(n)
try { if (Inst0 <= 1000 && typeof (bitsinbyte) != "undefined") {_RecordType("<173,183,4>",(bitsinbyte)); Inst0++; } } catch(e) {}
function bitsinbyte(b) {
try { if (Inst1 <= 1000 && typeof (b) != "undefined") {_RecordType("<184,185,4>",(b)); Inst1++; } } catch(e) {}
  var m = 1,
      c = 0;
try { if (Inst2 <= 1000 && typeof (m) != "undefined") {_RecordType("<195,196,5>",(m)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (c) != "undefined") {_RecordType("<208,209,6>",(c)); Inst3++; } } catch(e) {}

try { if (Inst4 <= 1000 && typeof (m) != "undefined") {_RecordType("<225,226,8>",(m)); Inst4++; } } catch(e) {}
  while (m < 0x100) {
try { if (Inst5 <= 1000 && typeof (b) != "undefined") {_RecordType("<246,247,9>",(b)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (m) != "undefined") {_RecordType("<250,251,9>",(m)); Inst6++; } } catch(e) {}
    if (b & m) {
try { if (Inst7 <= 1000 && typeof (c) != "undefined") {_RecordType("<261,262,10>",(c)); Inst7++; } } catch(e) {}
      c++;
    }

    m <<= 1;
try { if (Inst8 <= 1000 && typeof (m) != "undefined") {_RecordType("<277,278,13>",(m)); Inst8++; } } catch(e) {}
  }

try { if (Inst9 <= 1000 && typeof (c) != "undefined") {_RecordType("<300,301,16>",(c)); Inst9++; } } catch(e) {}
  return c;
}

var ret = 0;
try { if (Inst10 <= 1000 && typeof (ret) != "undefined") {_RecordType("<310,313,19>",(ret)); Inst10++; } } catch(e) {}

try { if (Inst11 <= 1000 && typeof (TimeFunc) != "undefined") {_RecordType("<329,337,21>",(TimeFunc)); Inst11++; } } catch(e) {}
function TimeFunc(func) {
try { if (Inst12 <= 1000 && typeof (func) != "undefined") {_RecordType("<338,342,21>",(func)); Inst12++; } } catch(e) {}
  var x, y, t;
try { if (Inst13 <= 1000 && typeof (x) != "undefined") {_RecordType("<352,353,22>",(x)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (y) != "undefined") {_RecordType("<355,356,22>",(y)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (t) != "undefined") {_RecordType("<358,359,22>",(t)); Inst15++; } } catch(e) {}

  for (var x = 0; x < 350; x++) {
try { if (Inst16 <= 1000 && typeof (x) != "undefined") {_RecordType("<373,374,24>",(x)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (x) != "undefined") {_RecordType("<380,381,24>",(x)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (x) != "undefined") {_RecordType("<389,390,24>",(x)); Inst18++; } } catch(e) {}
    for (var y = 0; y < 256; y++) {
try { if (Inst19 <= 1000 && typeof (y) != "undefined") {_RecordType("<409,410,25>",(y)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (y) != "undefined") {_RecordType("<416,417,25>",(y)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (y) != "undefined") {_RecordType("<425,426,25>",(y)); Inst21++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (func) != "undefined") {_RecordType("<445,449,26>",(func)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (y) != "undefined") {_RecordType("<450,451,26>",(y)); Inst24++; } } catch(e) {}
      ret += func(y);
try { if (Inst22 <= 1000 && typeof (ret) != "undefined") {_RecordType("<438,441,26>",(ret)); Inst22++; } } catch(e) {}
    }
  }
}

try { if (Inst25 <= 1000 && typeof (TimeFunc) != "undefined") {_RecordType("<467,475,31>",(TimeFunc)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (bitsinbyte) != "undefined") {_RecordType("<476,486,31>",(bitsinbyte)); Inst26++; } } catch(e) {}
TimeFunc(bitsinbyte);
try { if (Inst27 <= 1000 && typeof (ret) != "undefined") {_RecordType("<489,492,32>",(ret)); Inst27++; } } catch(e) {}
ret;
358400;

