var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (gczeal) != "undefined") {_RecordType("<0,6,1>",(gczeal)); Inst0++; } } catch(e) {}
gczeal(0);
try { if (Inst1 <= 1000 && typeof (gc) != "undefined") {_RecordType("<11,13,2>",(gc)); Inst1++; } } catch(e) {}
gc();
var o = {};
try { if (Inst2 <= 1000 && typeof (o) != "undefined") {_RecordType("<21,22,3>",(o)); Inst2++; } } catch(e) {}

try { if (Inst3 <= 1000 && typeof (foo) != "undefined") {_RecordType("<39,42,5>",(foo)); Inst3++; } } catch(e) {}
function foo() {
  var i = 0;
try { if (Inst4 <= 1000 && typeof (i) != "undefined") {_RecordType("<53,54,6>",(i)); Inst4++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<62,83,7>",(Object.defineProperty)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Object) != "undefined") {_RecordType("<62,68,7>",(Object)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (o) != "undefined") {_RecordType("<84,85,7>",(o)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (g) != "undefined") {_RecordType("<138,139,9>",(g)); Inst8++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (s) != "undefined") {_RecordType("<185,186,12>",(s)); Inst10++; } } catch(e) {}
  Object.defineProperty(o, 'foo', {
    configurable: true,
    get: function g() {
try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<157,158,10>",(i)); Inst9++; } } catch(e) {}
      return i;
    },
    set: function s() {
try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<204,205,13>",(i)); Inst11++; } } catch(e) {}
      return i;
    }
  });
try { if (Inst12 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<221,242,16>",(Object.defineProperty)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Object) != "undefined") {_RecordType("<221,227,16>",(Object)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (o) != "undefined") {_RecordType("<243,244,16>",(o)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (g) != "undefined") {_RecordType("<297,298,18>",(g)); Inst15++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (s) != "undefined") {_RecordType("<344,345,21>",(s)); Inst17++; } } catch(e) {}
  Object.defineProperty(o, 'foo', {
    configurable: true,
    get: function g() {
try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<316,317,19>",(i)); Inst16++; } } catch(e) {}
      return i;
    },
    set: function s() {
try { if (Inst18 <= 1000 && typeof (i) != "undefined") {_RecordType("<363,364,22>",(i)); Inst18++; } } catch(e) {}
      return i;
    }
  });
try { if (Inst19 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<380,401,25>",(Object.defineProperty)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (Object) != "undefined") {_RecordType("<380,386,25>",(Object)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (o) != "undefined") {_RecordType("<402,403,25>",(o)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (g) != "undefined") {_RecordType("<456,457,27>",(g)); Inst22++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (s) != "undefined") {_RecordType("<503,504,30>",(s)); Inst24++; } } catch(e) {}
  Object.defineProperty(o, 'foo', {
    configurable: true,
    get: function g() {
try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<475,476,28>",(i)); Inst23++; } } catch(e) {}
      return i;
    },
    set: function s() {
try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<522,523,31>",(i)); Inst25++; } } catch(e) {}
      return i;
    }
  });
try { if (Inst26 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<539,560,34>",(Object.defineProperty)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (Object) != "undefined") {_RecordType("<539,545,34>",(Object)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (o) != "undefined") {_RecordType("<561,562,34>",(o)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (g) != "undefined") {_RecordType("<615,616,36>",(g)); Inst29++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (s) != "undefined") {_RecordType("<662,663,39>",(s)); Inst31++; } } catch(e) {}
  Object.defineProperty(o, 'foo', {
    configurable: true,
    get: function g() {
try { if (Inst30 <= 1000 && typeof (i) != "undefined") {_RecordType("<634,635,37>",(i)); Inst30++; } } catch(e) {}
      return i;
    },
    set: function s() {
try { if (Inst32 <= 1000 && typeof (i) != "undefined") {_RecordType("<681,682,40>",(i)); Inst32++; } } catch(e) {}
      return i;
    }
  });
}

try { if (Inst33 <= 1000 && typeof (foo) != "undefined") {_RecordType("<699,702,45>",(foo)); Inst33++; } } catch(e) {}
foo();

