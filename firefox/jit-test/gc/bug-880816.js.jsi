var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst1 <= 1000 && typeof (Array) != "undefined") {_RecordType("<17,22,1>",(Array)); Inst1++; } } catch(e) {}
var lfcode = new Array();
try { if (Inst0 <= 1000 && typeof (lfcode) != "undefined") {_RecordType("<4,10,1>",(lfcode)); Inst0++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (lfcode.push) != "undefined") {_RecordType("<26,37,2>",(lfcode.push)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (lfcode) != "undefined") {_RecordType("<26,32,2>",(lfcode)); Inst3++; } } catch(e) {}
lfcode.push("const baz = 'bar';");
try { if (Inst4 <= 1000 && typeof (lfcode.push) != "undefined") {_RecordType("<61,72,3>",(lfcode.push)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (lfcode) != "undefined") {_RecordType("<61,67,3>",(lfcode)); Inst5++; } } catch(e) {}
lfcode.push("2");
try { if (Inst6 <= 1000 && typeof (lfcode.push) != "undefined") {_RecordType("<79,90,4>",(lfcode.push)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (lfcode) != "undefined") {_RecordType("<79,85,4>",(lfcode)); Inst7++; } } catch(e) {}
lfcode.push("{ function foo() {} }");
try { if (Inst8 <= 1000 && typeof (lfcode.push) != "undefined") {_RecordType("<117,128,5>",(lfcode.push)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (lfcode) != "undefined") {_RecordType("<117,123,5>",(lfcode)); Inst9++; } } catch(e) {}
lfcode.push("evaluate('\
var INVALIDATE_MODES = INVALIDATE_MODE_STRINGS.map(s => ({mode: s}));\
function range(n, m) {}\
function seq_scan(array, f) {}\
function assertStructuralEq(e1, e2) {}\
for (var i = 0, l = a.length; i < l; i++) {}\
');");
try { if (Inst10 <= 1000 && typeof (lfcode.push) != "undefined") {_RecordType("<363,374,12>",(lfcode.push)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (lfcode) != "undefined") {_RecordType("<363,369,12>",(lfcode)); Inst11++; } } catch(e) {}
lfcode.push("for (var x of new Set(Object.getOwnPropertyNames(this))) {}");
var lfRunTypeId = -1;
try { if (Inst12 <= 1000 && typeof (lfRunTypeId) != "undefined") {_RecordType("<443,454,13>",(lfRunTypeId)); Inst12++; } } catch(e) {}

while (true) {
try { if (Inst14 <= 1000 && typeof (lfcode.shift) != "undefined") {_RecordType("<490,502,16>",(lfcode.shift)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (lfcode) != "undefined") {_RecordType("<490,496,16>",(lfcode)); Inst15++; } } catch(e) {}
  var file = lfcode.shift();
try { if (Inst13 <= 1000 && typeof (file) != "undefined") {_RecordType("<483,487,16>",(file)); Inst13++; } } catch(e) {}

try { if (Inst16 <= 1000 && typeof (file) != "undefined") {_RecordType("<513,517,18>",(file)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<521,530,18>",(undefined)); Inst17++; } } catch(e) {}
  if (file == undefined) {
    break;
  }

try { if (Inst18 <= 1000 && typeof (loadFile) != "undefined") {_RecordType("<552,560,22>",(loadFile)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (file) != "undefined") {_RecordType("<561,565,22>",(file)); Inst19++; } } catch(e) {}
  loadFile(file);
}

try { if (Inst20 <= 1000 && typeof (loadFile) != "undefined") {_RecordType("<580,588,25>",(loadFile)); Inst20++; } } catch(e) {}
function loadFile(lfVarx) {
try { if (Inst21 <= 1000 && typeof (lfVarx) != "undefined") {_RecordType("<589,595,25>",(lfVarx)); Inst21++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof (lfVare) != "undefined") {_RecordType("<921,927,44>",(lfVare)); Inst34++; } } catch(e) {}
  try {
try { if (Inst22 <= 1000 && typeof (lfVarx.substr) != "undefined") {_RecordType("<615,628,27>",(lfVarx.substr)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (lfVarx) != "undefined") {_RecordType("<615,621,27>",(lfVarx)); Inst23++; } } catch(e) {}
    if (lfVarx.substr(-3) == ".js") {
      ;
    }

try { if (Inst24 <= 1000 && typeof (isNaN) != "undefined") {_RecordType("<669,674,31>",(isNaN)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (lfVarx) != "undefined") {_RecordType("<675,681,31>",(lfVarx)); Inst25++; } } catch(e) {}
    if (!isNaN(lfVarx)) {
try { if (Inst27 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<706,714,32>",(parseInt)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (lfVarx) != "undefined") {_RecordType("<715,721,32>",(lfVarx)); Inst28++; } } catch(e) {}
      lfRunTypeId = parseInt(lfVarx);
try { if (Inst26 <= 1000 && typeof (lfRunTypeId) != "undefined") {_RecordType("<692,703,32>",(lfRunTypeId)); Inst26++; } } catch(e) {}
    } else {
try { if (Inst29 <= 1000 && typeof (lfRunTypeId) != "undefined") {_RecordType("<751,762,34>",(lfRunTypeId)); Inst29++; } } catch(e) {}
      switch (lfRunTypeId) {
        case 2:
try { if (Inst30 <= 1000 && typeof (Function) != "undefined") {_RecordType("<796,804,36>",(Function)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (lfVarx) != "undefined") {_RecordType("<805,811,36>",(lfVarx)); Inst31++; } } catch(e) {}
          new Function(lfVarx)();
          break;

        default:
try { if (Inst32 <= 1000 && typeof (evaluate) != "undefined") {_RecordType("<861,869,40>",(evaluate)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (lfVarx) != "undefined") {_RecordType("<870,876,40>",(lfVarx)); Inst33++; } } catch(e) {}
          evaluate(lfVarx);
          break;
      }
    }
  } catch (lfVare) {
    ;
  }
}

