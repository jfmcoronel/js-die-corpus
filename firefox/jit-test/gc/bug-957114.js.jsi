var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (gczeal) != "undefined") {_RecordType("<0,6,1>",(gczeal)); Inst0++; } } catch(e) {}
gczeal(7, 1);

try { if (Inst1 <= 1000 && typeof (TestCase) != "undefined") {_RecordType("<24,32,3>",(TestCase)); Inst1++; } } catch(e) {}
function TestCase(n) {
try { if (Inst2 <= 1000 && typeof (n) != "undefined") {_RecordType("<33,34,3>",(n)); Inst2++; } } catch(e) {}
  this.name = '';
try { if (Inst3 <= 1000 && typeof (this.name) != "undefined") {_RecordType("<40,49,4>",(this.name)); Inst3++; } } catch(e) {}
  this.description = '';
try { if (Inst4 <= 1000 && typeof (this.description) != "undefined") {_RecordType("<58,74,5>",(this.description)); Inst4++; } } catch(e) {}
  this.expect = '';
try { if (Inst5 <= 1000 && typeof (this.expect) != "undefined") {_RecordType("<83,94,6>",(this.expect)); Inst5++; } } catch(e) {}
  this.actual = '';
try { if (Inst6 <= 1000 && typeof (this.actual) != "undefined") {_RecordType("<103,114,7>",(this.actual)); Inst6++; } } catch(e) {}
  this.reason = '';
try { if (Inst7 <= 1000 && typeof (this.reason) != "undefined") {_RecordType("<123,134,8>",(this.reason)); Inst7++; } } catch(e) {}
  this.passed = '';
try { if (Inst8 <= 1000 && typeof (this.passed) != "undefined") {_RecordType("<143,154,9>",(this.passed)); Inst8++; } } catch(e) {}
}

try { if (Inst9 <= 1000 && typeof (test) != "undefined") {_RecordType("<173,177,12>",(test)); Inst9++; } } catch(e) {}
function test() {
try { if (Inst10 <= 1000 && typeof (TestCase) != "undefined") {_RecordType("<195,203,13>",(TestCase)); Inst10++; } } catch(e) {}
  return new TestCase();
}

try { if (Inst11 <= 1000 && typeof (test) != "undefined") {_RecordType("<210,214,16>",(test)); Inst11++; } } catch(e) {}
test();
try { if (Inst12 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<218,239,17>",(Object.defineProperty)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Object) != "undefined") {_RecordType("<218,224,17>",(Object)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<240,256,17>",(Object.prototype)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Object) != "undefined") {_RecordType("<240,246,17>",(Object)); Inst15++; } } catch(e) {}
Object.defineProperty(Object.prototype, "name", {});
try { if (Inst16 <= 1000 && typeof (test) != "undefined") {_RecordType("<271,275,18>",(test)); Inst16++; } } catch(e) {}
test();

