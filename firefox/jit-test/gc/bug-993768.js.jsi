var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
var SECTION = "";
try { if (Inst0 <= 1000 && typeof (SECTION) != "undefined") {_RecordType("<4,11,1>",(SECTION)); Inst0++; } } catch(e) {}
try { if (Inst1 <= 1000 && typeof (gcPreserveCode) != "undefined") {_RecordType("<18,32,2>",(gcPreserveCode)); Inst1++; } } catch(e) {}
gcPreserveCode();
try { if (Inst2 <= 1000 && typeof (gczeal) != "undefined") {_RecordType("<36,42,3>",(gczeal)); Inst2++; } } catch(e) {}
gczeal(9, 1000);

try { if (Inst3 <= 1000 && typeof (test) != "undefined") {_RecordType("<63,67,5>",(test)); Inst3++; } } catch(e) {}
function test() {
try { if (Inst5 <= 1000 && typeof (Float32Array) != "undefined") {_RecordType("<88,100,6>",(Float32Array)); Inst5++; } } catch(e) {}
  var f32 = new Float32Array(10);
try { if (Inst4 <= 1000 && typeof (f32) != "undefined") {_RecordType("<78,81,6>",(f32)); Inst4++; } } catch(e) {}
  f32[0] = 5;
try { if (Inst6 <= 1000 && typeof (f32[0]) != "undefined") {_RecordType("<108,114,7>",(f32[0])); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (f32) != "undefined") {_RecordType("<108,111,7>",(f32)); Inst7++; } } catch(e) {}
  var i = 0;
try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<126,127,8>",(i)); Inst8++; } } catch(e) {}

  for (var j = 0; j < 10000; ++j) {
try { if (Inst9 <= 1000 && typeof (j) != "undefined") {_RecordType("<145,146,10>",(j)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (j) != "undefined") {_RecordType("<152,153,10>",(j)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (j) != "undefined") {_RecordType("<165,166,10>",(j)); Inst11++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (f32[i]) != "undefined") {_RecordType("<187,193,11>",(f32[i])); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (f32) != "undefined") {_RecordType("<187,190,11>",(f32)); Inst16++; } } catch(e) {}
    f32[i + 1] = f32[i] - 1;
try { if (Inst12 <= 1000 && typeof (f32[i + 1]) != "undefined") {_RecordType("<174,184,11>",(f32[i + 1])); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (f32) != "undefined") {_RecordType("<174,177,11>",(f32)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<178,179,11>",(i)); Inst14++; } } catch(e) {}
    SECTION += 1;
try { if (Inst17 <= 1000 && typeof (SECTION) != "undefined") {_RecordType("<203,210,12>",(SECTION)); Inst17++; } } catch(e) {}
  }
}

try { if (Inst18 <= 1000 && typeof (test) != "undefined") {_RecordType("<224,228,16>",(test)); Inst18++; } } catch(e) {}
test();

