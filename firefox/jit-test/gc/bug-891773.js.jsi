var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst1 <= 1000 && typeof (newGlobal) != "undefined") {_RecordType("<4,13,1>",(newGlobal)); Inst1++; } } catch(e) {}
x = newGlobal();
try { if (Inst0 <= 1000 && typeof (x) != "undefined") {_RecordType("<0,1,1>",(x)); Inst0++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (x.Int32Array) != "undefined") {_RecordType("<30,42,2>",(x.Int32Array)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (x) != "undefined") {_RecordType("<30,31,2>",(x)); Inst4++; } } catch(e) {}
Int32Array = x.Int32Array;
try { if (Inst2 <= 1000 && typeof (Int32Array) != "undefined") {_RecordType("<17,27,2>",(Int32Array)); Inst2++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (ArrayBuffer) != "undefined") {_RecordType("<54,65,3>",(ArrayBuffer)); Inst7++; } } catch(e) {}
x.p = new ArrayBuffer();
try { if (Inst5 <= 1000 && typeof (x.p) != "undefined") {_RecordType("<44,47,3>",(x.p)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (x) != "undefined") {_RecordType("<44,45,3>",(x)); Inst6++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (schedulegc) != "undefined") {_RecordType("<69,79,4>",(schedulegc)); Inst8++; } } catch(e) {}
schedulegc(29);

try { if (Inst20 <= 1000 && typeof (Function) != "undefined") {_RecordType("<260,268,17>",(Function)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (ArrayBuffer) != "undefined") {_RecordType("<278,289,18>",(ArrayBuffer)); Inst21++; } } catch(e) {}
(function (stdlib, n, heap) {
try { if (Inst9 <= 1000 && typeof (stdlib) != "undefined") {_RecordType("<97,103,6>",(stdlib)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (n) != "undefined") {_RecordType("<105,106,6>",(n)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (heap) != "undefined") {_RecordType("<108,112,6>",(heap)); Inst11++; } } catch(e) {}
  "use asm";

try { if (Inst13 <= 1000 && typeof (stdlib.Int32Array) != "undefined") {_RecordType("<157,174,9>",(stdlib.Int32Array)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (stdlib) != "undefined") {_RecordType("<157,163,9>",(stdlib)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (heap) != "undefined") {_RecordType("<175,179,9>",(heap)); Inst15++; } } catch(e) {}
  var Int32ArrayView = new stdlib.Int32Array(heap);
try { if (Inst12 <= 1000 && typeof (Int32ArrayView) != "undefined") {_RecordType("<136,150,9>",(Int32ArrayView)); Inst12++; } } catch(e) {}

try { if (Inst16 <= 1000 && typeof (f) != "undefined") {_RecordType("<194,195,11>",(f)); Inst16++; } } catch(e) {}
  function f() {
try { if (Inst17 <= 1000 && typeof (Int32ArrayView[1]) != "undefined") {_RecordType("<204,221,12>",(Int32ArrayView[1])); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Int32ArrayView) != "undefined") {_RecordType("<204,218,12>",(Int32ArrayView)); Inst18++; } } catch(e) {}
    Int32ArrayView[1];
  }

try { if (Inst19 <= 1000 && typeof (f) != "undefined") {_RecordType("<237,238,15>",(f)); Inst19++; } } catch(e) {}
  return f;
})(this, {
  f: new Function()
}, new ArrayBuffer());

