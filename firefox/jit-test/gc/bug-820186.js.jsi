var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
var Inst102 = 0;
var Inst103 = 0;
var Inst104 = 0;
var Inst105 = 0;
var Inst106 = 0;
var Inst107 = 0;
var Inst108 = 0;
var Inst109 = 0;
var Inst110 = 0;
var Inst111 = 0;
var Inst112 = 0;
var Inst113 = 0;
var Inst114 = 0;
var Inst115 = 0;
var Inst116 = 0;
var Inst117 = 0;
var Inst118 = 0;
var Inst119 = 0;
var Inst120 = 0;
var Inst121 = 0;
var Inst122 = 0;
var Inst123 = 0;
var Inst124 = 0;
var Inst125 = 0;
var Inst126 = 0;
var Inst127 = 0;
var Inst128 = 0;
var Inst129 = 0;
var Inst130 = 0;
var Inst131 = 0;
var Inst132 = 0;
var Inst133 = 0;
var Inst134 = 0;
var Inst135 = 0;
var Inst136 = 0;
var Inst137 = 0;
var Inst138 = 0;
var Inst139 = 0;
var Inst140 = 0;
var Inst141 = 0;
var Inst142 = 0;
var Inst143 = 0;
var Inst144 = 0;
var Inst145 = 0;
var Inst146 = 0;
var Inst147 = 0;
var Inst148 = 0;
var Inst149 = 0;
var Inst150 = 0;
var Inst151 = 0;
var Inst152 = 0;
var Inst153 = 0;
var Inst154 = 0;
var Inst155 = 0;
var Inst156 = 0;
var Inst157 = 0;
var Inst158 = 0;
var Inst159 = 0;
var Inst160 = 0;
var Inst161 = 0;
var Inst162 = 0;
var Inst163 = 0;
var Inst164 = 0;
var Inst165 = 0;
var Inst166 = 0;
var Inst167 = 0;
var Inst168 = 0;
var Inst169 = 0;
var Inst170 = 0;
var Inst171 = 0;
var Inst172 = 0;
var Inst173 = 0;
var Inst174 = 0;
var Inst175 = 0;
var Inst176 = 0;
var Inst177 = 0;
var Inst178 = 0;
var Inst179 = 0;
var Inst180 = 0;
var Inst181 = 0;
var Inst182 = 0;
var Inst183 = 0;
var Inst184 = 0;
var Inst185 = 0;
var Inst186 = 0;
var Inst187 = 0;
var Inst188 = 0;
var Inst189 = 0;
var Inst190 = 0;
var Inst191 = 0;
var Inst192 = 0;
var Inst193 = 0;
var Inst194 = 0;
var Inst195 = 0;
var Inst196 = 0;
var Inst197 = 0;
var Inst198 = 0;
var Inst199 = 0;
var Inst200 = 0;
var Inst201 = 0;
var Inst202 = 0;
var Inst203 = 0;
var Inst204 = 0;
var Inst205 = 0;
var Inst206 = 0;
var Inst207 = 0;
var Inst208 = 0;
var Inst209 = 0;
var Inst210 = 0;
var Inst211 = 0;
var Inst212 = 0;
var Inst213 = 0;
var Inst214 = 0;
var Inst215 = 0;
var Inst216 = 0;
var Inst217 = 0;
var Inst218 = 0;
var Inst219 = 0;
var Inst220 = 0;
var Inst221 = 0;
var Inst222 = 0;
var Inst223 = 0;
var Inst224 = 0;
var Inst225 = 0;
var Inst226 = 0;
var Inst227 = 0;
var Inst228 = 0;
var Inst229 = 0;
var Inst230 = 0;
var Inst231 = 0;
var Inst232 = 0;
var Inst233 = 0;
var Inst234 = 0;
var Inst235 = 0;
var Inst236 = 0;
var Inst237 = 0;
var Inst238 = 0;
var Inst239 = 0;
var Inst240 = 0;
var Inst241 = 0;
var Inst242 = 0;
var Inst243 = 0;
var Inst244 = 0;
var Inst245 = 0;
var Inst246 = 0;
var Inst247 = 0;
var Inst248 = 0;
var Inst249 = 0;
var Inst250 = 0;
var Inst251 = 0;
var Inst252 = 0;
var Inst253 = 0;
var Inst254 = 0;
var Inst255 = 0;
var Inst256 = 0;
var Inst257 = 0;
var Inst258 = 0;
var Inst259 = 0;
var Inst260 = 0;
var Inst261 = 0;
var Inst262 = 0;
var Inst263 = 0;
var Inst264 = 0;
var Inst265 = 0;
var Inst266 = 0;
var Inst267 = 0;
var Inst268 = 0;
var Inst269 = 0;
var Inst270 = 0;
var Inst271 = 0;
var Inst272 = 0;
var Inst273 = 0;
var Inst274 = 0;
var Inst275 = 0;
var Inst276 = 0;
var Inst277 = 0;
var Inst278 = 0;
var Inst279 = 0;
var Inst280 = 0;
var Inst281 = 0;
var Inst282 = 0;
var Inst283 = 0;
var Inst284 = 0;
var Inst285 = 0;
var Inst286 = 0;
var Inst287 = 0;
var Inst288 = 0;
var Inst289 = 0;
var Inst290 = 0;
var Inst291 = 0;
var Inst292 = 0;
var Inst293 = 0;
var Inst294 = 0;
var Inst295 = 0;
var Inst296 = 0;
var Inst297 = 0;
var Inst298 = 0;
var Inst299 = 0;
var Inst300 = 0;
var Inst301 = 0;
var Inst302 = 0;
var Inst303 = 0;
var Inst304 = 0;
var Inst305 = 0;
var Inst306 = 0;
var Inst307 = 0;
var Inst308 = 0;
var Inst309 = 0;
var Inst310 = 0;
var Inst311 = 0;
var Inst312 = 0;
var Inst313 = 0;
var Inst314 = 0;
var Inst315 = 0;
var Inst316 = 0;
var Inst317 = 0;
var Inst318 = 0;
var Inst319 = 0;
var Inst320 = 0;
var Inst321 = 0;
var Inst322 = 0;
var Inst323 = 0;
var Inst324 = 0;
var Inst325 = 0;
var Inst326 = 0;
var Inst327 = 0;
var Inst328 = 0;
var Inst329 = 0;
var Inst330 = 0;
var Inst331 = 0;
var Inst332 = 0;
var Inst333 = 0;
var Inst334 = 0;
var Inst335 = 0;
var Inst336 = 0;
var Inst337 = 0;
var Inst338 = 0;
var Inst339 = 0;
var Inst340 = 0;
var Inst341 = 0;
var Inst342 = 0;
var Inst343 = 0;
var Inst344 = 0;
var Inst345 = 0;
var Inst346 = 0;
var Inst347 = 0;
var Inst348 = 0;
var Inst349 = 0;
var Inst350 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// |jit-test| slow;
try { if (Inst0 <= 1000 && typeof (randomRecursion) != "undefined") {_RecordType("<29,44,2>",(randomRecursion)); Inst0++; } } catch(e) {}
function randomRecursion() {
  var y = "";
try { if (Inst1 <= 1000 && typeof (y) != "undefined") {_RecordType("<55,56,3>",(y)); Inst1++; } } catch(e) {}

try { if (Inst2 <= 1000 && typeof (rnd) != "undefined") {_RecordType("<70,73,5>",(rnd)); Inst2++; } } catch(e) {}
  if (rnd(2)) {
    var x = 2;
try { if (Inst3 <= 1000 && typeof (x) != "undefined") {_RecordType("<88,89,6>",(x)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (x) != "undefined") {_RecordType("<105,106,7>",(x)); Inst4++; } } catch(e) {}
    "{" + x + "}";
try { if (Inst5 <= 1000 && typeof (randomRecursion) != "undefined") {_RecordType("<118,133,8>",(randomRecursion)); Inst5++; } } catch(e) {}
    randomRecursion();
try { if (Inst6 <= 1000 && typeof (randomRecursion) != "undefined") {_RecordType("<141,156,9>",(randomRecursion)); Inst6++; } } catch(e) {}
    randomRecursion();
    return [""];
  }

  return [""];
}

try { if (Inst7 <= 1000 && typeof (thisFunctionIsNeverCalled) != "undefined") {_RecordType("<209,234,16>",(thisFunctionIsNeverCalled)); Inst7++; } } catch(e) {}
function thisFunctionIsNeverCalled() {
  ;
}

try { if (Inst8 <= 1000 && typeof (testOne) != "undefined") {_RecordType("<255,262,20>",(testOne)); Inst8++; } } catch(e) {}
function testOne() {
try { if (Inst10 <= 1000 && typeof (newGlobal) != "undefined") {_RecordType("<274,283,21>",(newGlobal)); Inst10++; } } catch(e) {}
  ox = newGlobal();
try { if (Inst9 <= 1000 && typeof (ox) != "undefined") {_RecordType("<269,271,21>",(ox)); Inst9++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (randomRecursion()[rnd(3)]) != "undefined") {_RecordType("<300,325,22>",(randomRecursion()[rnd(3)])); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (randomRecursion) != "undefined") {_RecordType("<300,315,22>",(randomRecursion)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (rnd) != "undefined") {_RecordType("<318,321,22>",(rnd)); Inst14++; } } catch(e) {}
  var code = randomRecursion()[rnd(3)];
try { if (Inst11 <= 1000 && typeof (code) != "undefined") {_RecordType("<293,297,22>",(code)); Inst11++; } } catch(e) {}
}

try { if (Inst15 <= 1000 && typeof (initRnd) != "undefined") {_RecordType("<330,337,25>",(initRnd)); Inst15++; } } catch(e) {}
initRnd();
try { if (Inst16 <= 1000 && typeof (gczeal) != "undefined") {_RecordType("<341,347,26>",(gczeal)); Inst16++; } } catch(e) {}
gczeal(10, 3);

for (var count = 0; count < 20; count++) {
try { if (Inst17 <= 1000 && typeof (count) != "undefined") {_RecordType("<366,371,28>",(count)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (count) != "undefined") {_RecordType("<377,382,28>",(count)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (count) != "undefined") {_RecordType("<389,394,28>",(count)); Inst19++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (print) != "undefined") {_RecordType("<402,407,29>",(print)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (count) != "undefined") {_RecordType("<408,413,29>",(count)); Inst21++; } } catch(e) {}
  print(count);
try { if (Inst22 <= 1000 && typeof (testOne) != "undefined") {_RecordType("<418,425,30>",(testOne)); Inst22++; } } catch(e) {}
  testOne();
} // ==========================================================================================
// this program is a JavaScript version of Mersenne Twister, with concealment and encapsulation in class,
// an almost straight conversion from the original program, mt19937ar.c,
// translated by y. okada on July 17, 2006.
// Changes by Jesse Ruderman: added "var" keyword in a few spots; added export_mta etc; pasted into fuzz.js.
// in this program, procedure descriptions and comments of original source code were not removed.
// lines commented with //c// were originally descriptions of c procedure. and a few following lines are appropriate JavaScript descriptions.
// lines commented with /* and */ are original comments.
// lines commented with // are additional comments in this JavaScript version.
// before using this version, create at least one instance of MersenneTwister19937 class, and initialize the each state, given below in c comments, of all the instances.

/*
   A C-program for MT19937, with initialization improved 2002/1/26.
   Coded by Takuji Nishimura and Makoto Matsumoto.

   Before using, initialize the state by using init_genrand(seed)
   or init_by_array(init_key, key_length).

   Copyright (C) 1997 - 2002, Makoto Matsumoto and Takuji Nishimura,
   All rights reserved.

   Redistribution and use in source and binary forms, with or without
   modification, are permitted provided that the following conditions
   are met:

     1. Redistributions of source code must retain the above copyright
        notice, this list of conditions and the following disclaimer.

     2. Redistributions in binary form must reproduce the above copyright
        notice, this list of conditions and the following disclaimer in the
        documentation and/or other materials provided with the distribution.

     3. The names of its contributors may not be used to endorse or promote
        products derived from this software without specific prior written
        permission.

   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
   "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
   LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
   A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
   EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
   PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
   PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
   LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
   NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


   Any feedback is very welcome.
   http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/emt.html
   email: m-mat @ math.sci.hiroshima-u.ac.jp (remove space)
*/


try { if (Inst23 <= 1000 && typeof (MersenneTwister19937) != "undefined") {_RecordType("<3384,3404,86>",(MersenneTwister19937)); Inst23++; } } catch(e) {}
function MersenneTwister19937() {
  /* Period parameters */
  //c//#define N 624
  //c//#define M 397
  //c//#define MATRIX_A 0x9908b0dfUL   /* constant vector a */
  //c//#define UPPER_MASK 0x80000000UL /* most significant w-r bits */
  //c//#define LOWER_MASK 0x7fffffffUL /* least significant r bits */
  var N = 624;
try { if (Inst24 <= 1000 && typeof (N) != "undefined") {_RecordType("<3687,3688,93>",(N)); Inst24++; } } catch(e) {}
  var M = 397;
try { if (Inst25 <= 1000 && typeof (M) != "undefined") {_RecordType("<3702,3703,94>",(M)); Inst25++; } } catch(e) {}
  var MATRIX_A = 0x9908b0df;
try { if (Inst26 <= 1000 && typeof (MATRIX_A) != "undefined") {_RecordType("<3717,3725,95>",(MATRIX_A)); Inst26++; } } catch(e) {}
  /* constant vector a */

  var UPPER_MASK = 0x80000000;
try { if (Inst27 <= 1000 && typeof (UPPER_MASK) != "undefined") {_RecordType("<3773,3783,98>",(UPPER_MASK)); Inst27++; } } catch(e) {}
  /* most significant w-r bits */

  var LOWER_MASK = 0x7fffffff;
try { if (Inst28 <= 1000 && typeof (LOWER_MASK) != "undefined") {_RecordType("<3839,3849,101>",(LOWER_MASK)); Inst28++; } } catch(e) {}
  /* least significant r bits */
  //c//static unsigned long mt[N]; /* the array for the state vector  */
  //c//static int mti=N+1; /* mti==N+1 means mt[N] is not initialized */

try { if (Inst30 <= 1000 && typeof (Array) != "undefined") {_RecordType("<4059,4064,106>",(Array)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (N) != "undefined") {_RecordType("<4065,4066,106>",(N)); Inst31++; } } catch(e) {}
  var mt = new Array(N);
try { if (Inst29 <= 1000 && typeof (mt) != "undefined") {_RecordType("<4050,4052,106>",(mt)); Inst29++; } } catch(e) {}
  /* the array for the state vector  */

try { if (Inst33 <= 1000 && typeof (N) != "undefined") {_RecordType("<4122,4123,109>",(N)); Inst33++; } } catch(e) {}
  var mti = N + 1;
try { if (Inst32 <= 1000 && typeof (mti) != "undefined") {_RecordType("<4116,4119,109>",(mti)); Inst32++; } } catch(e) {}
  /* mti==N+1 means mt[N] is not initialized */

try { if (Inst34 <= 1000 && typeof (unsigned32) != "undefined") {_RecordType("<4189,4199,112>",(unsigned32)); Inst34++; } } catch(e) {}
  function unsigned32(n1) // returns a 32-bits unsiged integer from an operand to which applied a bit operator.
  {
try { if (Inst35 <= 1000 && typeof (n1) != "undefined") {_RecordType("<4200,4202,112>",(n1)); Inst35++; } } catch(e) {}
try { if (Inst36 <= 1000 && typeof (n1) != "undefined") {_RecordType("<4305,4307,114>",(n1)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (n1) != "undefined") {_RecordType("<4315,4317,114>",(n1)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (UPPER_MASK) != "undefined") {_RecordType("<4320,4330,114>",(UPPER_MASK)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (UPPER_MASK) != "undefined") {_RecordType("<4334,4344,114>",(UPPER_MASK)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (n1) != "undefined") {_RecordType("<4347,4349,114>",(n1)); Inst40++; } } catch(e) {}
    return n1 < 0 ? (n1 ^ UPPER_MASK) + UPPER_MASK : n1;
  }

try { if (Inst41 <= 1000 && typeof (subtraction32) != "undefined") {_RecordType("<4367,4380,117>",(subtraction32)); Inst41++; } } catch(e) {}
  function subtraction32(n1, n2) // emulates lowerflow of a c 32-bits unsiged integer variable, instead of the operator -. these both arguments must be non-negative integers expressible using unsigned 32 bits.
  {
try { if (Inst42 <= 1000 && typeof (n1) != "undefined") {_RecordType("<4381,4383,117>",(n1)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (n2) != "undefined") {_RecordType("<4385,4387,117>",(n2)); Inst43++; } } catch(e) {}
try { if (Inst44 <= 1000 && typeof (n1) != "undefined") {_RecordType("<4581,4583,119>",(n1)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (n2) != "undefined") {_RecordType("<4586,4588,119>",(n2)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (unsigned32) != "undefined") {_RecordType("<4591,4601,119>",(unsigned32)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (n2) != "undefined") {_RecordType("<4617,4619,119>",(n2)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (n1) != "undefined") {_RecordType("<4622,4624,119>",(n1)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (n1) != "undefined") {_RecordType("<4642,4644,119>",(n1)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (n2) != "undefined") {_RecordType("<4647,4649,119>",(n2)); Inst50++; } } catch(e) {}
    return n1 < n2 ? unsigned32(0x100000000 - (n2 - n1) & 0xffffffff) : n1 - n2;
  }

try { if (Inst51 <= 1000 && typeof (addition32) != "undefined") {_RecordType("<4667,4677,122>",(addition32)); Inst51++; } } catch(e) {}
  function addition32(n1, n2) // emulates overflow of a c 32-bits unsiged integer variable, instead of the operator +. these both arguments must be non-negative integers expressible using unsigned 32 bits.
  {
try { if (Inst52 <= 1000 && typeof (n1) != "undefined") {_RecordType("<4678,4680,122>",(n1)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (n2) != "undefined") {_RecordType("<4682,4684,122>",(n2)); Inst53++; } } catch(e) {}
try { if (Inst54 <= 1000 && typeof (unsigned32) != "undefined") {_RecordType("<4877,4887,124>",(unsigned32)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (n1) != "undefined") {_RecordType("<4888,4890,124>",(n1)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (n2) != "undefined") {_RecordType("<4893,4895,124>",(n2)); Inst56++; } } catch(e) {}
    return unsigned32(n1 + n2 & 0xffffffff);
  }

try { if (Inst57 <= 1000 && typeof (multiplication32) != "undefined") {_RecordType("<4927,4943,127>",(multiplication32)); Inst57++; } } catch(e) {}
  function multiplication32(n1, n2) // emulates overflow of a c 32-bits unsiged integer variable, instead of the operator *. these both arguments must be non-negative integers expressible using unsigned 32 bits.
  {
try { if (Inst58 <= 1000 && typeof (n1) != "undefined") {_RecordType("<4944,4946,127>",(n1)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (n2) != "undefined") {_RecordType("<4948,4950,127>",(n2)); Inst59++; } } catch(e) {}
    var sum = 0;
try { if (Inst60 <= 1000 && typeof (sum) != "undefined") {_RecordType("<5140,5143,129>",(sum)); Inst60++; } } catch(e) {}

    for (var i = 0; i < 32; ++i) {
try { if (Inst61 <= 1000 && typeof (i) != "undefined") {_RecordType("<5163,5164,131>",(i)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (i) != "undefined") {_RecordType("<5170,5171,131>",(i)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (i) != "undefined") {_RecordType("<5180,5181,131>",(i)); Inst63++; } } catch(e) {}
try { if (Inst64 <= 1000 && typeof (n1) != "undefined") {_RecordType("<5195,5197,132>",(n1)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (i) != "undefined") {_RecordType("<5202,5203,132>",(i)); Inst65++; } } catch(e) {}
      if (n1 >>> i & 0x1) {
try { if (Inst67 <= 1000 && typeof (addition32) != "undefined") {_RecordType("<5227,5237,133>",(addition32)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (sum) != "undefined") {_RecordType("<5238,5241,133>",(sum)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (unsigned32) != "undefined") {_RecordType("<5243,5253,133>",(unsigned32)); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (n2) != "undefined") {_RecordType("<5254,5256,133>",(n2)); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (i) != "undefined") {_RecordType("<5260,5261,133>",(i)); Inst71++; } } catch(e) {}
        sum = addition32(sum, unsigned32(n2 << i));
try { if (Inst66 <= 1000 && typeof (sum) != "undefined") {_RecordType("<5221,5224,133>",(sum)); Inst66++; } } catch(e) {}
      }
    }

try { if (Inst72 <= 1000 && typeof (sum) != "undefined") {_RecordType("<5291,5294,137>",(sum)); Inst72++; } } catch(e) {}
    return sum;
  }
  /* initializes mt[N] with a seed */
  //c//void init_genrand(unsigned long s)


  this.init_genrand = function (s) {
try { if (Inst74 <= 1000 && typeof (s) != "undefined") {_RecordType("<5414,5415,143>",(s)); Inst74++; } } catch(e) {}
    //c//mt[0]= s & 0xffffffff;
try { if (Inst77 <= 1000 && typeof (unsigned32) != "undefined") {_RecordType("<5463,5473,145>",(unsigned32)); Inst77++; } } catch(e) {}try { if (Inst78 <= 1000 && typeof (s) != "undefined") {_RecordType("<5474,5475,145>",(s)); Inst78++; } } catch(e) {}
    mt[0] = unsigned32(s & 0xffffffff);
try { if (Inst75 <= 1000 && typeof (mt[0]) != "undefined") {_RecordType("<5455,5460,145>",(mt[0])); Inst75++; } } catch(e) {}try { if (Inst76 <= 1000 && typeof (mt) != "undefined") {_RecordType("<5455,5457,145>",(mt)); Inst76++; } } catch(e) {}

    for (mti = 1; mti < N; mti++) {
try { if (Inst79 <= 1000 && typeof (mti) != "undefined") {_RecordType("<5501,5504,147>",(mti)); Inst79++; } } catch(e) {}try { if (Inst80 <= 1000 && typeof (mti) != "undefined") {_RecordType("<5510,5513,147>",(mti)); Inst80++; } } catch(e) {}try { if (Inst81 <= 1000 && typeof (N) != "undefined") {_RecordType("<5516,5517,147>",(N)); Inst81++; } } catch(e) {}try { if (Inst82 <= 1000 && typeof (mti) != "undefined") {_RecordType("<5519,5522,147>",(mti)); Inst82++; } } catch(e) {}
try { if (Inst85 <= 1000 && typeof (addition32) != "undefined") {_RecordType("<5609,5619,149>",(addition32)); Inst85++; } } catch(e) {}try { if (Inst86 <= 1000 && typeof (multiplication32) != "undefined") {_RecordType("<5620,5636,149>",(multiplication32)); Inst86++; } } catch(e) {}try { if (Inst87 <= 1000 && typeof (unsigned32) != "undefined") {_RecordType("<5649,5659,149>",(unsigned32)); Inst87++; } } catch(e) {}try { if (Inst88 <= 1000 && typeof (mt[mti - 1]) != "undefined") {_RecordType("<5660,5671,149>",(mt[mti - 1])); Inst88++; } } catch(e) {}try { if (Inst89 <= 1000 && typeof (mt) != "undefined") {_RecordType("<5660,5662,149>",(mt)); Inst89++; } } catch(e) {}try { if (Inst90 <= 1000 && typeof (mti) != "undefined") {_RecordType("<5663,5666,149>",(mti)); Inst90++; } } catch(e) {}try { if (Inst91 <= 1000 && typeof (mt[mti - 1]) != "undefined") {_RecordType("<5674,5685,149>",(mt[mti - 1])); Inst91++; } } catch(e) {}try { if (Inst92 <= 1000 && typeof (mt) != "undefined") {_RecordType("<5674,5676,149>",(mt)); Inst92++; } } catch(e) {}try { if (Inst93 <= 1000 && typeof (mti) != "undefined") {_RecordType("<5677,5680,149>",(mti)); Inst93++; } } catch(e) {}try { if (Inst94 <= 1000 && typeof (mti) != "undefined") {_RecordType("<5696,5699,149>",(mti)); Inst94++; } } catch(e) {}
      mt[mti] = //c//(1812433253 * (mt[mti-1] ^ (mt[mti-1] >> 30)) + mti);
      addition32(multiplication32(1812433253, unsigned32(mt[mti - 1] ^ mt[mti - 1] >>> 30)), mti);
try { if (Inst83 <= 1000 && typeof (mt[mti]) != "undefined") {_RecordType("<5534,5541,148>",(mt[mti])); Inst83++; } } catch(e) {}try { if (Inst84 <= 1000 && typeof (mt) != "undefined") {_RecordType("<5534,5536,148>",(mt)); Inst84++; } } catch(e) {}
      /* See Knuth TAOCP Vol2. 3rd Ed. P.106 for multiplier. */

      /* In the previous versions, MSBs of the seed affect   */

      /* only MSBs of the array mt[].                        */

      /* 2002/01/09 modified by Makoto Matsumoto             */
      //c//mt[mti] &= 0xffffffff;

try { if (Inst97 <= 1000 && typeof (unsigned32) != "undefined") {_RecordType("<6012,6022,159>",(unsigned32)); Inst97++; } } catch(e) {}try { if (Inst98 <= 1000 && typeof (mt[mti]) != "undefined") {_RecordType("<6023,6030,159>",(mt[mti])); Inst98++; } } catch(e) {}try { if (Inst99 <= 1000 && typeof (mt) != "undefined") {_RecordType("<6023,6025,159>",(mt)); Inst99++; } } catch(e) {}
      mt[mti] = unsigned32(mt[mti] & 0xffffffff);
try { if (Inst95 <= 1000 && typeof (mt[mti]) != "undefined") {_RecordType("<6002,6009,159>",(mt[mti])); Inst95++; } } catch(e) {}try { if (Inst96 <= 1000 && typeof (mt) != "undefined") {_RecordType("<6002,6004,159>",(mt)); Inst96++; } } catch(e) {}
      /* for >32 bit machines */
    }
  };
try { if (Inst73 <= 1000 && typeof (this.init_genrand) != "undefined") {_RecordType("<5384,5401,143>",(this.init_genrand)); Inst73++; } } catch(e) {}
  /* initialize by an array with array-length */

  /* init_key is the array for initializing keys */

  /* key_length is its length */

  /* slight change for C++, 2004/2/26 */
  //c//void init_by_array(unsigned long init_key[], int key_length)


  this.init_by_array = function (init_key, key_length) {
try { if (Inst101 <= 1000 && typeof (init_key) != "undefined") {_RecordType("<6371,6379,173>",(init_key)); Inst101++; } } catch(e) {}try { if (Inst102 <= 1000 && typeof (key_length) != "undefined") {_RecordType("<6381,6391,173>",(key_length)); Inst102++; } } catch(e) {}
    //c//int i, j, k;
    var i, j, k; //c//init_genrand(19650218);
try { if (Inst103 <= 1000 && typeof (i) != "undefined") {_RecordType("<6425,6426,175>",(i)); Inst103++; } } catch(e) {}try { if (Inst104 <= 1000 && typeof (j) != "undefined") {_RecordType("<6428,6429,175>",(j)); Inst104++; } } catch(e) {}try { if (Inst105 <= 1000 && typeof (k) != "undefined") {_RecordType("<6431,6432,175>",(k)); Inst105++; } } catch(e) {}

try { if (Inst106 <= 1000 && typeof (this.init_genrand) != "undefined") {_RecordType("<6468,6485,177>",(this.init_genrand)); Inst106++; } } catch(e) {}
    this.init_genrand(19650218);
    i = 1;
try { if (Inst107 <= 1000 && typeof (i) != "undefined") {_RecordType("<6501,6502,178>",(i)); Inst107++; } } catch(e) {}
    j = 0;
try { if (Inst108 <= 1000 && typeof (j) != "undefined") {_RecordType("<6512,6513,179>",(j)); Inst108++; } } catch(e) {}
try { if (Inst110 <= 1000 && typeof (N) != "undefined") {_RecordType("<6527,6528,180>",(N)); Inst110++; } } catch(e) {}try { if (Inst111 <= 1000 && typeof (key_length) != "undefined") {_RecordType("<6531,6541,180>",(key_length)); Inst111++; } } catch(e) {}try { if (Inst112 <= 1000 && typeof (N) != "undefined") {_RecordType("<6544,6545,180>",(N)); Inst112++; } } catch(e) {}try { if (Inst113 <= 1000 && typeof (key_length) != "undefined") {_RecordType("<6548,6558,180>",(key_length)); Inst113++; } } catch(e) {}
    k = N > key_length ? N : key_length;
try { if (Inst109 <= 1000 && typeof (k) != "undefined") {_RecordType("<6523,6524,180>",(k)); Inst109++; } } catch(e) {}

    for (; k; k--) {
try { if (Inst114 <= 1000 && typeof (k) != "undefined") {_RecordType("<6572,6573,182>",(k)); Inst114++; } } catch(e) {}try { if (Inst115 <= 1000 && typeof (k) != "undefined") {_RecordType("<6575,6576,182>",(k)); Inst115++; } } catch(e) {}
      //c//mt[i] = (mt[i] ^ ((mt[i-1] ^ (mt[i-1] >> 30)) * 1664525))
      //c//	+ init_key[j] + j; /* non linear */
try { if (Inst118 <= 1000 && typeof (addition32) != "undefined") {_RecordType("<6713,6723,185>",(addition32)); Inst118++; } } catch(e) {}try { if (Inst119 <= 1000 && typeof (addition32) != "undefined") {_RecordType("<6724,6734,185>",(addition32)); Inst119++; } } catch(e) {}try { if (Inst120 <= 1000 && typeof (unsigned32) != "undefined") {_RecordType("<6735,6745,185>",(unsigned32)); Inst120++; } } catch(e) {}try { if (Inst121 <= 1000 && typeof (mt[i]) != "undefined") {_RecordType("<6746,6751,185>",(mt[i])); Inst121++; } } catch(e) {}try { if (Inst122 <= 1000 && typeof (mt) != "undefined") {_RecordType("<6746,6748,185>",(mt)); Inst122++; } } catch(e) {}try { if (Inst123 <= 1000 && typeof (multiplication32) != "undefined") {_RecordType("<6754,6770,185>",(multiplication32)); Inst123++; } } catch(e) {}try { if (Inst124 <= 1000 && typeof (unsigned32) != "undefined") {_RecordType("<6771,6781,185>",(unsigned32)); Inst124++; } } catch(e) {}try { if (Inst125 <= 1000 && typeof (mt[i - 1]) != "undefined") {_RecordType("<6782,6791,185>",(mt[i - 1])); Inst125++; } } catch(e) {}try { if (Inst126 <= 1000 && typeof (mt) != "undefined") {_RecordType("<6782,6784,185>",(mt)); Inst126++; } } catch(e) {}try { if (Inst127 <= 1000 && typeof (i) != "undefined") {_RecordType("<6785,6786,185>",(i)); Inst127++; } } catch(e) {}try { if (Inst128 <= 1000 && typeof (mt[i - 1]) != "undefined") {_RecordType("<6794,6803,185>",(mt[i - 1])); Inst128++; } } catch(e) {}try { if (Inst129 <= 1000 && typeof (mt) != "undefined") {_RecordType("<6794,6796,185>",(mt)); Inst129++; } } catch(e) {}try { if (Inst130 <= 1000 && typeof (i) != "undefined") {_RecordType("<6797,6798,185>",(i)); Inst130++; } } catch(e) {}try { if (Inst131 <= 1000 && typeof (init_key[j]) != "undefined") {_RecordType("<6824,6835,185>",(init_key[j])); Inst131++; } } catch(e) {}try { if (Inst132 <= 1000 && typeof (init_key) != "undefined") {_RecordType("<6824,6832,185>",(init_key)); Inst132++; } } catch(e) {}try { if (Inst133 <= 1000 && typeof (j) != "undefined") {_RecordType("<6838,6839,185>",(j)); Inst133++; } } catch(e) {}
      mt[i] = addition32(addition32(unsigned32(mt[i] ^ multiplication32(unsigned32(mt[i - 1] ^ mt[i - 1] >>> 30), 1664525)), init_key[j]), j);
try { if (Inst116 <= 1000 && typeof (mt[i]) != "undefined") {_RecordType("<6705,6710,185>",(mt[i])); Inst116++; } } catch(e) {}try { if (Inst117 <= 1000 && typeof (mt) != "undefined") {_RecordType("<6705,6707,185>",(mt)); Inst117++; } } catch(e) {}
try { if (Inst136 <= 1000 && typeof (unsigned32) != "undefined") {_RecordType("<6921,6931,187>",(unsigned32)); Inst136++; } } catch(e) {}try { if (Inst137 <= 1000 && typeof (mt[i]) != "undefined") {_RecordType("<6932,6937,187>",(mt[i])); Inst137++; } } catch(e) {}try { if (Inst138 <= 1000 && typeof (mt) != "undefined") {_RecordType("<6932,6934,187>",(mt)); Inst138++; } } catch(e) {}
      mt[i] = //c//mt[i] &= 0xffffffff; /* for WORDSIZE > 32 machines */
      unsigned32(mt[i] & 0xffffffff);
try { if (Inst134 <= 1000 && typeof (mt[i]) != "undefined") {_RecordType("<6848,6853,186>",(mt[i])); Inst134++; } } catch(e) {}try { if (Inst135 <= 1000 && typeof (mt) != "undefined") {_RecordType("<6848,6850,186>",(mt)); Inst135++; } } catch(e) {}
try { if (Inst139 <= 1000 && typeof (i) != "undefined") {_RecordType("<6959,6960,188>",(i)); Inst139++; } } catch(e) {}
      i++;
try { if (Inst140 <= 1000 && typeof (j) != "undefined") {_RecordType("<6970,6971,189>",(j)); Inst140++; } } catch(e) {}
      j++;

try { if (Inst141 <= 1000 && typeof (i) != "undefined") {_RecordType("<6986,6987,191>",(i)); Inst141++; } } catch(e) {}try { if (Inst142 <= 1000 && typeof (N) != "undefined") {_RecordType("<6991,6992,191>",(N)); Inst142++; } } catch(e) {}
      if (i >= N) {
try { if (Inst145 <= 1000 && typeof (mt[N - 1]) != "undefined") {_RecordType("<7012,7021,192>",(mt[N - 1])); Inst145++; } } catch(e) {}try { if (Inst146 <= 1000 && typeof (mt) != "undefined") {_RecordType("<7012,7014,192>",(mt)); Inst146++; } } catch(e) {}try { if (Inst147 <= 1000 && typeof (N) != "undefined") {_RecordType("<7015,7016,192>",(N)); Inst147++; } } catch(e) {}
        mt[0] = mt[N - 1];
try { if (Inst143 <= 1000 && typeof (mt[0]) != "undefined") {_RecordType("<7004,7009,192>",(mt[0])); Inst143++; } } catch(e) {}try { if (Inst144 <= 1000 && typeof (mt) != "undefined") {_RecordType("<7004,7006,192>",(mt)); Inst144++; } } catch(e) {}
        i = 1;
try { if (Inst148 <= 1000 && typeof (i) != "undefined") {_RecordType("<7031,7032,193>",(i)); Inst148++; } } catch(e) {}
      }

try { if (Inst149 <= 1000 && typeof (j) != "undefined") {_RecordType("<7057,7058,196>",(j)); Inst149++; } } catch(e) {}try { if (Inst150 <= 1000 && typeof (key_length) != "undefined") {_RecordType("<7062,7072,196>",(key_length)); Inst150++; } } catch(e) {}
      if (j >= key_length) {
        j = 0;
try { if (Inst151 <= 1000 && typeof (j) != "undefined") {_RecordType("<7084,7085,197>",(j)); Inst151++; } } catch(e) {}
      }
    }

    for (k = N - 1; k; k--) {
try { if (Inst152 <= 1000 && typeof (k) != "undefined") {_RecordType("<7115,7116,201>",(k)); Inst152++; } } catch(e) {}try { if (Inst153 <= 1000 && typeof (N) != "undefined") {_RecordType("<7119,7120,201>",(N)); Inst153++; } } catch(e) {}try { if (Inst154 <= 1000 && typeof (k) != "undefined") {_RecordType("<7126,7127,201>",(k)); Inst154++; } } catch(e) {}try { if (Inst155 <= 1000 && typeof (k) != "undefined") {_RecordType("<7129,7130,201>",(k)); Inst155++; } } catch(e) {}
      //c//mt[i] = (mt[i] ^ ((mt[i-1] ^ (mt[i-1] >> 30)) * 1566083941))
      //c//- i; /* non linear */
try { if (Inst158 <= 1000 && typeof (subtraction32) != "undefined") {_RecordType("<7255,7268,204>",(subtraction32)); Inst158++; } } catch(e) {}try { if (Inst159 <= 1000 && typeof (unsigned32) != "undefined") {_RecordType("<7269,7279,204>",(unsigned32)); Inst159++; } } catch(e) {}try { if (Inst161 <= 1000 && typeof (mt[i]) != "undefined") {_RecordType("<7287,7292,204>",(mt[i])); Inst161++; } } catch(e) {}try { if (Inst162 <= 1000 && typeof (mt) != "undefined") {_RecordType("<7287,7289,204>",(mt)); Inst162++; } } catch(e) {}try { if (Inst163 <= 1000 && typeof (multiplication32) != "undefined") {_RecordType("<7296,7312,204>",(multiplication32)); Inst163++; } } catch(e) {}try { if (Inst164 <= 1000 && typeof (unsigned32) != "undefined") {_RecordType("<7313,7323,204>",(unsigned32)); Inst164++; } } catch(e) {}try { if (Inst165 <= 1000 && typeof (mt[i - 1]) != "undefined") {_RecordType("<7324,7333,204>",(mt[i - 1])); Inst165++; } } catch(e) {}try { if (Inst166 <= 1000 && typeof (mt) != "undefined") {_RecordType("<7324,7326,204>",(mt)); Inst166++; } } catch(e) {}try { if (Inst167 <= 1000 && typeof (i) != "undefined") {_RecordType("<7327,7328,204>",(i)); Inst167++; } } catch(e) {}try { if (Inst168 <= 1000 && typeof (mt[i - 1]) != "undefined") {_RecordType("<7336,7345,204>",(mt[i - 1])); Inst168++; } } catch(e) {}try { if (Inst169 <= 1000 && typeof (mt) != "undefined") {_RecordType("<7336,7338,204>",(mt)); Inst169++; } } catch(e) {}try { if (Inst170 <= 1000 && typeof (i) != "undefined") {_RecordType("<7339,7340,204>",(i)); Inst170++; } } catch(e) {}try { if (Inst171 <= 1000 && typeof (i) != "undefined") {_RecordType("<7369,7370,204>",(i)); Inst171++; } } catch(e) {}
      mt[i] = subtraction32(unsigned32((dbg = mt[i]) ^ multiplication32(unsigned32(mt[i - 1] ^ mt[i - 1] >>> 30), 1566083941)), i); //c//mt[i] &= 0xffffffff; /* for WORDSIZE > 32 machines */
try { if (Inst156 <= 1000 && typeof (mt[i]) != "undefined") {_RecordType("<7247,7252,204>",(mt[i])); Inst156++; } } catch(e) {}try { if (Inst157 <= 1000 && typeof (mt) != "undefined") {_RecordType("<7247,7249,204>",(mt)); Inst157++; } } catch(e) {}try { if (Inst160 <= 1000 && typeof (dbg) != "undefined") {_RecordType("<7281,7284,204>",(dbg)); Inst160++; } } catch(e) {}

try { if (Inst174 <= 1000 && typeof (unsigned32) != "undefined") {_RecordType("<7447,7457,206>",(unsigned32)); Inst174++; } } catch(e) {}try { if (Inst175 <= 1000 && typeof (mt[i]) != "undefined") {_RecordType("<7458,7463,206>",(mt[i])); Inst175++; } } catch(e) {}try { if (Inst176 <= 1000 && typeof (mt) != "undefined") {_RecordType("<7458,7460,206>",(mt)); Inst176++; } } catch(e) {}
      mt[i] = unsigned32(mt[i] & 0xffffffff);
try { if (Inst172 <= 1000 && typeof (mt[i]) != "undefined") {_RecordType("<7439,7444,206>",(mt[i])); Inst172++; } } catch(e) {}try { if (Inst173 <= 1000 && typeof (mt) != "undefined") {_RecordType("<7439,7441,206>",(mt)); Inst173++; } } catch(e) {}
try { if (Inst177 <= 1000 && typeof (i) != "undefined") {_RecordType("<7485,7486,207>",(i)); Inst177++; } } catch(e) {}
      i++;

try { if (Inst178 <= 1000 && typeof (i) != "undefined") {_RecordType("<7501,7502,209>",(i)); Inst178++; } } catch(e) {}try { if (Inst179 <= 1000 && typeof (N) != "undefined") {_RecordType("<7506,7507,209>",(N)); Inst179++; } } catch(e) {}
      if (i >= N) {
try { if (Inst182 <= 1000 && typeof (mt[N - 1]) != "undefined") {_RecordType("<7527,7536,210>",(mt[N - 1])); Inst182++; } } catch(e) {}try { if (Inst183 <= 1000 && typeof (mt) != "undefined") {_RecordType("<7527,7529,210>",(mt)); Inst183++; } } catch(e) {}try { if (Inst184 <= 1000 && typeof (N) != "undefined") {_RecordType("<7530,7531,210>",(N)); Inst184++; } } catch(e) {}
        mt[0] = mt[N - 1];
try { if (Inst180 <= 1000 && typeof (mt[0]) != "undefined") {_RecordType("<7519,7524,210>",(mt[0])); Inst180++; } } catch(e) {}try { if (Inst181 <= 1000 && typeof (mt) != "undefined") {_RecordType("<7519,7521,210>",(mt)); Inst181++; } } catch(e) {}
        i = 1;
try { if (Inst185 <= 1000 && typeof (i) != "undefined") {_RecordType("<7546,7547,211>",(i)); Inst185++; } } catch(e) {}
      }
    }

    mt[0] = 0x80000000;
try { if (Inst186 <= 1000 && typeof (mt[0]) != "undefined") {_RecordType("<7572,7577,215>",(mt[0])); Inst186++; } } catch(e) {}try { if (Inst187 <= 1000 && typeof (mt) != "undefined") {_RecordType("<7572,7574,215>",(mt)); Inst187++; } } catch(e) {}
    /* MSB is 1; assuring non-zero initial array */
  };
try { if (Inst100 <= 1000 && typeof (this.init_by_array) != "undefined") {_RecordType("<6340,6358,173>",(this.init_by_array)); Inst100++; } } catch(e) {}

  this.export_state = function () {
try { if (Inst189 <= 1000 && typeof (mt) != "undefined") {_RecordType("<7698,7700,220>",(mt)); Inst189++; } } catch(e) {}try { if (Inst190 <= 1000 && typeof (mti) != "undefined") {_RecordType("<7702,7705,220>",(mti)); Inst190++; } } catch(e) {}
    return [mt, mti];
  };
try { if (Inst188 <= 1000 && typeof (this.export_state) != "undefined") {_RecordType("<7652,7669,219>",(this.export_state)); Inst188++; } } catch(e) {}

  this.import_state = function (s) {
try { if (Inst192 <= 1000 && typeof (s) != "undefined") {_RecordType("<7746,7747,223>",(s)); Inst192++; } } catch(e) {}
try { if (Inst194 <= 1000 && typeof (s[0]) != "undefined") {_RecordType("<7760,7764,224>",(s[0])); Inst194++; } } catch(e) {}try { if (Inst195 <= 1000 && typeof (s) != "undefined") {_RecordType("<7760,7761,224>",(s)); Inst195++; } } catch(e) {}
    mt = s[0];
try { if (Inst193 <= 1000 && typeof (mt) != "undefined") {_RecordType("<7755,7757,224>",(mt)); Inst193++; } } catch(e) {}
try { if (Inst197 <= 1000 && typeof (s[1]) != "undefined") {_RecordType("<7776,7780,225>",(s[1])); Inst197++; } } catch(e) {}try { if (Inst198 <= 1000 && typeof (s) != "undefined") {_RecordType("<7776,7777,225>",(s)); Inst198++; } } catch(e) {}
    mti = s[1];
try { if (Inst196 <= 1000 && typeof (mti) != "undefined") {_RecordType("<7770,7773,225>",(mti)); Inst196++; } } catch(e) {}
  };
try { if (Inst191 <= 1000 && typeof (this.import_state) != "undefined") {_RecordType("<7716,7733,223>",(this.import_state)); Inst191++; } } catch(e) {}

  this.export_mta = function () {
try { if (Inst200 <= 1000 && typeof (mt) != "undefined") {_RecordType("<7833,7835,229>",(mt)); Inst200++; } } catch(e) {}
    return mt;
  };
try { if (Inst199 <= 1000 && typeof (this.export_mta) != "undefined") {_RecordType("<7790,7805,228>",(this.export_mta)); Inst199++; } } catch(e) {}

  this.import_mta = function (_mta) {
try { if (Inst202 <= 1000 && typeof (_mta) != "undefined") {_RecordType("<7873,7877,232>",(_mta)); Inst202++; } } catch(e) {}
try { if (Inst204 <= 1000 && typeof (_mta) != "undefined") {_RecordType("<7890,7894,233>",(_mta)); Inst204++; } } catch(e) {}
    mt = _mta;
try { if (Inst203 <= 1000 && typeof (mt) != "undefined") {_RecordType("<7885,7887,233>",(mt)); Inst203++; } } catch(e) {}
  };
try { if (Inst201 <= 1000 && typeof (this.import_mta) != "undefined") {_RecordType("<7845,7860,232>",(this.import_mta)); Inst201++; } } catch(e) {}

  this.export_mti = function () {
try { if (Inst206 <= 1000 && typeof (mti) != "undefined") {_RecordType("<7947,7950,237>",(mti)); Inst206++; } } catch(e) {}
    return mti;
  };
try { if (Inst205 <= 1000 && typeof (this.export_mti) != "undefined") {_RecordType("<7904,7919,236>",(this.export_mti)); Inst205++; } } catch(e) {}

  this.import_mti = function (_mti) {
try { if (Inst208 <= 1000 && typeof (_mti) != "undefined") {_RecordType("<7988,7992,240>",(_mti)); Inst208++; } } catch(e) {}
try { if (Inst210 <= 1000 && typeof (_mti) != "undefined") {_RecordType("<8006,8010,241>",(_mti)); Inst210++; } } catch(e) {}
    mti = _mti;
try { if (Inst209 <= 1000 && typeof (mti) != "undefined") {_RecordType("<8000,8003,241>",(mti)); Inst209++; } } catch(e) {}
  };
try { if (Inst207 <= 1000 && typeof (this.import_mti) != "undefined") {_RecordType("<7960,7975,240>",(this.import_mti)); Inst207++; } } catch(e) {}
  /* generates a random number on [0,0xffffffff]-interval */
  //c//unsigned long genrand_int32(void)


  this.genrand_int32 = function () {
    //c//unsigned long y;
    //c//static unsigned long mag01[2]={0x0UL, MATRIX_A};
    var y;
try { if (Inst212 <= 1000 && typeof (y) != "undefined") {_RecordType("<8250,8251,250>",(y)); Inst212++; } } catch(e) {}
try { if (Inst214 <= 1000 && typeof (Array) != "undefined") {_RecordType("<8273,8278,251>",(Array)); Inst214++; } } catch(e) {}try { if (Inst215 <= 1000 && typeof (MATRIX_A) != "undefined") {_RecordType("<8284,8292,251>",(MATRIX_A)); Inst215++; } } catch(e) {}
    var mag01 = new Array(0x0, MATRIX_A);
try { if (Inst213 <= 1000 && typeof (mag01) != "undefined") {_RecordType("<8261,8266,251>",(mag01)); Inst213++; } } catch(e) {}
    /* mag01[x] = x * MATRIX_A  for x=0,1 */

try { if (Inst216 <= 1000 && typeof (mti) != "undefined") {_RecordType("<8349,8352,254>",(mti)); Inst216++; } } catch(e) {}try { if (Inst217 <= 1000 && typeof (N) != "undefined") {_RecordType("<8356,8357,254>",(N)); Inst217++; } } catch(e) {}
    if (mti >= N) {
      /* generate N words at one time */
      //c//int kk;
      var kk;
try { if (Inst218 <= 1000 && typeof (kk) != "undefined") {_RecordType("<8431,8433,257>",(kk)); Inst218++; } } catch(e) {}

try { if (Inst219 <= 1000 && typeof (mti) != "undefined") {_RecordType("<8446,8449,259>",(mti)); Inst219++; } } catch(e) {}try { if (Inst220 <= 1000 && typeof (N) != "undefined") {_RecordType("<8453,8454,259>",(N)); Inst220++; } } catch(e) {}
      if (mti == N + 1) {
        /* if init_genrand() has not been called, */
        //c//init_genrand(5489); /* a default initial seed is used */
try { if (Inst221 <= 1000 && typeof (this.init_genrand) != "undefined") {_RecordType("<8593,8610,262>",(this.init_genrand)); Inst221++; } } catch(e) {}
        this.init_genrand(5489);
      }
      /* a default initial seed is used */


      for (kk = 0; kk < N - M; kk++) {
try { if (Inst222 <= 1000 && typeof (kk) != "undefined") {_RecordType("<8682,8684,267>",(kk)); Inst222++; } } catch(e) {}try { if (Inst223 <= 1000 && typeof (kk) != "undefined") {_RecordType("<8690,8692,267>",(kk)); Inst223++; } } catch(e) {}try { if (Inst224 <= 1000 && typeof (N) != "undefined") {_RecordType("<8695,8696,267>",(N)); Inst224++; } } catch(e) {}try { if (Inst225 <= 1000 && typeof (M) != "undefined") {_RecordType("<8699,8700,267>",(M)); Inst225++; } } catch(e) {}try { if (Inst226 <= 1000 && typeof (kk) != "undefined") {_RecordType("<8702,8704,267>",(kk)); Inst226++; } } catch(e) {}
        //c//y = (mt[kk]&UPPER_MASK)|(mt[kk+1]&LOWER_MASK);
        //c//mt[kk] = mt[kk+M] ^ (y >> 1) ^ mag01[y & 0x1];
try { if (Inst228 <= 1000 && typeof (unsigned32) != "undefined") {_RecordType("<8842,8852,270>",(unsigned32)); Inst228++; } } catch(e) {}try { if (Inst229 <= 1000 && typeof (mt[kk]) != "undefined") {_RecordType("<8853,8859,270>",(mt[kk])); Inst229++; } } catch(e) {}try { if (Inst230 <= 1000 && typeof (mt) != "undefined") {_RecordType("<8853,8855,270>",(mt)); Inst230++; } } catch(e) {}try { if (Inst231 <= 1000 && typeof (UPPER_MASK) != "undefined") {_RecordType("<8862,8872,270>",(UPPER_MASK)); Inst231++; } } catch(e) {}try { if (Inst232 <= 1000 && typeof (mt[kk + 1]) != "undefined") {_RecordType("<8875,8885,270>",(mt[kk + 1])); Inst232++; } } catch(e) {}try { if (Inst233 <= 1000 && typeof (mt) != "undefined") {_RecordType("<8875,8877,270>",(mt)); Inst233++; } } catch(e) {}try { if (Inst234 <= 1000 && typeof (kk) != "undefined") {_RecordType("<8878,8880,270>",(kk)); Inst234++; } } catch(e) {}try { if (Inst235 <= 1000 && typeof (LOWER_MASK) != "undefined") {_RecordType("<8888,8898,270>",(LOWER_MASK)); Inst235++; } } catch(e) {}
        y = unsigned32(mt[kk] & UPPER_MASK | mt[kk + 1] & LOWER_MASK);
try { if (Inst227 <= 1000 && typeof (y) != "undefined") {_RecordType("<8838,8839,270>",(y)); Inst227++; } } catch(e) {}
try { if (Inst238 <= 1000 && typeof (unsigned32) != "undefined") {_RecordType("<8918,8928,271>",(unsigned32)); Inst238++; } } catch(e) {}try { if (Inst239 <= 1000 && typeof (mt[kk + M]) != "undefined") {_RecordType("<8929,8939,271>",(mt[kk + M])); Inst239++; } } catch(e) {}try { if (Inst240 <= 1000 && typeof (mt) != "undefined") {_RecordType("<8929,8931,271>",(mt)); Inst240++; } } catch(e) {}try { if (Inst241 <= 1000 && typeof (kk) != "undefined") {_RecordType("<8932,8934,271>",(kk)); Inst241++; } } catch(e) {}try { if (Inst242 <= 1000 && typeof (M) != "undefined") {_RecordType("<8937,8938,271>",(M)); Inst242++; } } catch(e) {}try { if (Inst243 <= 1000 && typeof (y) != "undefined") {_RecordType("<8942,8943,271>",(y)); Inst243++; } } catch(e) {}try { if (Inst244 <= 1000 && typeof (mag01[y & 0x1]) != "undefined") {_RecordType("<8952,8966,271>",(mag01[y & 0x1])); Inst244++; } } catch(e) {}try { if (Inst245 <= 1000 && typeof (mag01) != "undefined") {_RecordType("<8952,8957,271>",(mag01)); Inst245++; } } catch(e) {}try { if (Inst246 <= 1000 && typeof (y) != "undefined") {_RecordType("<8958,8959,271>",(y)); Inst246++; } } catch(e) {}
        mt[kk] = unsigned32(mt[kk + M] ^ y >>> 1 ^ mag01[y & 0x1]);
try { if (Inst236 <= 1000 && typeof (mt[kk]) != "undefined") {_RecordType("<8909,8915,271>",(mt[kk])); Inst236++; } } catch(e) {}try { if (Inst237 <= 1000 && typeof (mt) != "undefined") {_RecordType("<8909,8911,271>",(mt)); Inst237++; } } catch(e) {}
      }

      for (; kk < N - 1; kk++) {
try { if (Inst247 <= 1000 && typeof (kk) != "undefined") {_RecordType("<8991,8993,274>",(kk)); Inst247++; } } catch(e) {}try { if (Inst248 <= 1000 && typeof (N) != "undefined") {_RecordType("<8996,8997,274>",(N)); Inst248++; } } catch(e) {}try { if (Inst249 <= 1000 && typeof (kk) != "undefined") {_RecordType("<9003,9005,274>",(kk)); Inst249++; } } catch(e) {}
        //c//y = (mt[kk]&UPPER_MASK)|(mt[kk+1]&LOWER_MASK);
        //c//mt[kk] = mt[kk+(M-N)] ^ (y >> 1) ^ mag01[y & 0x1];
try { if (Inst251 <= 1000 && typeof (unsigned32) != "undefined") {_RecordType("<9147,9157,277>",(unsigned32)); Inst251++; } } catch(e) {}try { if (Inst252 <= 1000 && typeof (mt[kk]) != "undefined") {_RecordType("<9158,9164,277>",(mt[kk])); Inst252++; } } catch(e) {}try { if (Inst253 <= 1000 && typeof (mt) != "undefined") {_RecordType("<9158,9160,277>",(mt)); Inst253++; } } catch(e) {}try { if (Inst254 <= 1000 && typeof (UPPER_MASK) != "undefined") {_RecordType("<9167,9177,277>",(UPPER_MASK)); Inst254++; } } catch(e) {}try { if (Inst255 <= 1000 && typeof (mt[kk + 1]) != "undefined") {_RecordType("<9180,9190,277>",(mt[kk + 1])); Inst255++; } } catch(e) {}try { if (Inst256 <= 1000 && typeof (mt) != "undefined") {_RecordType("<9180,9182,277>",(mt)); Inst256++; } } catch(e) {}try { if (Inst257 <= 1000 && typeof (kk) != "undefined") {_RecordType("<9183,9185,277>",(kk)); Inst257++; } } catch(e) {}try { if (Inst258 <= 1000 && typeof (LOWER_MASK) != "undefined") {_RecordType("<9193,9203,277>",(LOWER_MASK)); Inst258++; } } catch(e) {}
        y = unsigned32(mt[kk] & UPPER_MASK | mt[kk + 1] & LOWER_MASK);
try { if (Inst250 <= 1000 && typeof (y) != "undefined") {_RecordType("<9143,9144,277>",(y)); Inst250++; } } catch(e) {}
try { if (Inst261 <= 1000 && typeof (unsigned32) != "undefined") {_RecordType("<9223,9233,278>",(unsigned32)); Inst261++; } } catch(e) {}try { if (Inst262 <= 1000 && typeof (mt[kk + (M - N)]) != "undefined") {_RecordType("<9234,9250,278>",(mt[kk + (M - N)])); Inst262++; } } catch(e) {}try { if (Inst263 <= 1000 && typeof (mt) != "undefined") {_RecordType("<9234,9236,278>",(mt)); Inst263++; } } catch(e) {}try { if (Inst264 <= 1000 && typeof (kk) != "undefined") {_RecordType("<9237,9239,278>",(kk)); Inst264++; } } catch(e) {}try { if (Inst265 <= 1000 && typeof (M) != "undefined") {_RecordType("<9243,9244,278>",(M)); Inst265++; } } catch(e) {}try { if (Inst266 <= 1000 && typeof (N) != "undefined") {_RecordType("<9247,9248,278>",(N)); Inst266++; } } catch(e) {}try { if (Inst267 <= 1000 && typeof (y) != "undefined") {_RecordType("<9253,9254,278>",(y)); Inst267++; } } catch(e) {}try { if (Inst268 <= 1000 && typeof (mag01[y & 0x1]) != "undefined") {_RecordType("<9263,9277,278>",(mag01[y & 0x1])); Inst268++; } } catch(e) {}try { if (Inst269 <= 1000 && typeof (mag01) != "undefined") {_RecordType("<9263,9268,278>",(mag01)); Inst269++; } } catch(e) {}try { if (Inst270 <= 1000 && typeof (y) != "undefined") {_RecordType("<9269,9270,278>",(y)); Inst270++; } } catch(e) {}
        mt[kk] = unsigned32(mt[kk + (M - N)] ^ y >>> 1 ^ mag01[y & 0x1]);
try { if (Inst259 <= 1000 && typeof (mt[kk]) != "undefined") {_RecordType("<9214,9220,278>",(mt[kk])); Inst259++; } } catch(e) {}try { if (Inst260 <= 1000 && typeof (mt) != "undefined") {_RecordType("<9214,9216,278>",(mt)); Inst260++; } } catch(e) {}
      } //c//y = (mt[N-1]&UPPER_MASK)|(mt[0]&LOWER_MASK);
      //c//mt[N-1] = mt[M-1] ^ (y >> 1) ^ mag01[y & 0x1];


try { if (Inst272 <= 1000 && typeof (unsigned32) != "undefined") {_RecordType("<9408,9418,283>",(unsigned32)); Inst272++; } } catch(e) {}try { if (Inst273 <= 1000 && typeof (mt[N - 1]) != "undefined") {_RecordType("<9419,9428,283>",(mt[N - 1])); Inst273++; } } catch(e) {}try { if (Inst274 <= 1000 && typeof (mt) != "undefined") {_RecordType("<9419,9421,283>",(mt)); Inst274++; } } catch(e) {}try { if (Inst275 <= 1000 && typeof (N) != "undefined") {_RecordType("<9422,9423,283>",(N)); Inst275++; } } catch(e) {}try { if (Inst276 <= 1000 && typeof (UPPER_MASK) != "undefined") {_RecordType("<9431,9441,283>",(UPPER_MASK)); Inst276++; } } catch(e) {}try { if (Inst277 <= 1000 && typeof (mt[0]) != "undefined") {_RecordType("<9444,9449,283>",(mt[0])); Inst277++; } } catch(e) {}try { if (Inst278 <= 1000 && typeof (mt) != "undefined") {_RecordType("<9444,9446,283>",(mt)); Inst278++; } } catch(e) {}try { if (Inst279 <= 1000 && typeof (LOWER_MASK) != "undefined") {_RecordType("<9452,9462,283>",(LOWER_MASK)); Inst279++; } } catch(e) {}
      y = unsigned32(mt[N - 1] & UPPER_MASK | mt[0] & LOWER_MASK);
try { if (Inst271 <= 1000 && typeof (y) != "undefined") {_RecordType("<9404,9405,283>",(y)); Inst271++; } } catch(e) {}
try { if (Inst283 <= 1000 && typeof (unsigned32) != "undefined") {_RecordType("<9483,9493,284>",(unsigned32)); Inst283++; } } catch(e) {}try { if (Inst284 <= 1000 && typeof (mt[M - 1]) != "undefined") {_RecordType("<9494,9503,284>",(mt[M - 1])); Inst284++; } } catch(e) {}try { if (Inst285 <= 1000 && typeof (mt) != "undefined") {_RecordType("<9494,9496,284>",(mt)); Inst285++; } } catch(e) {}try { if (Inst286 <= 1000 && typeof (M) != "undefined") {_RecordType("<9497,9498,284>",(M)); Inst286++; } } catch(e) {}try { if (Inst287 <= 1000 && typeof (y) != "undefined") {_RecordType("<9506,9507,284>",(y)); Inst287++; } } catch(e) {}try { if (Inst288 <= 1000 && typeof (mag01[y & 0x1]) != "undefined") {_RecordType("<9516,9530,284>",(mag01[y & 0x1])); Inst288++; } } catch(e) {}try { if (Inst289 <= 1000 && typeof (mag01) != "undefined") {_RecordType("<9516,9521,284>",(mag01)); Inst289++; } } catch(e) {}try { if (Inst290 <= 1000 && typeof (y) != "undefined") {_RecordType("<9522,9523,284>",(y)); Inst290++; } } catch(e) {}
      mt[N - 1] = unsigned32(mt[M - 1] ^ y >>> 1 ^ mag01[y & 0x1]);
try { if (Inst280 <= 1000 && typeof (mt[N - 1]) != "undefined") {_RecordType("<9471,9480,284>",(mt[N - 1])); Inst280++; } } catch(e) {}try { if (Inst281 <= 1000 && typeof (mt) != "undefined") {_RecordType("<9471,9473,284>",(mt)); Inst281++; } } catch(e) {}try { if (Inst282 <= 1000 && typeof (N) != "undefined") {_RecordType("<9474,9475,284>",(N)); Inst282++; } } catch(e) {}
      mti = 0;
try { if (Inst291 <= 1000 && typeof (mti) != "undefined") {_RecordType("<9539,9542,285>",(mti)); Inst291++; } } catch(e) {}
    }

try { if (Inst293 <= 1000 && typeof (mt[mti++]) != "undefined") {_RecordType("<9563,9572,288>",(mt[mti++])); Inst293++; } } catch(e) {}try { if (Inst294 <= 1000 && typeof (mt) != "undefined") {_RecordType("<9563,9565,288>",(mt)); Inst294++; } } catch(e) {}try { if (Inst295 <= 1000 && typeof (mti) != "undefined") {_RecordType("<9566,9569,288>",(mti)); Inst295++; } } catch(e) {}
    y = mt[mti++];
try { if (Inst292 <= 1000 && typeof (y) != "undefined") {_RecordType("<9559,9560,288>",(y)); Inst292++; } } catch(e) {}
    /* Tempering */
    //c//y ^= (y >> 11);
    //c//y ^= (y << 7) & 0x9d2c5680;
    //c//y ^= (y << 15) & 0xefc60000;
    //c//y ^= (y >> 18);

try { if (Inst297 <= 1000 && typeof (unsigned32) != "undefined") {_RecordType("<9728,9738,295>",(unsigned32)); Inst297++; } } catch(e) {}try { if (Inst298 <= 1000 && typeof (y) != "undefined") {_RecordType("<9739,9740,295>",(y)); Inst298++; } } catch(e) {}try { if (Inst299 <= 1000 && typeof (y) != "undefined") {_RecordType("<9743,9744,295>",(y)); Inst299++; } } catch(e) {}
    y = unsigned32(y ^ y >>> 11);
try { if (Inst296 <= 1000 && typeof (y) != "undefined") {_RecordType("<9724,9725,295>",(y)); Inst296++; } } catch(e) {}
try { if (Inst301 <= 1000 && typeof (unsigned32) != "undefined") {_RecordType("<9762,9772,296>",(unsigned32)); Inst301++; } } catch(e) {}try { if (Inst302 <= 1000 && typeof (y) != "undefined") {_RecordType("<9773,9774,296>",(y)); Inst302++; } } catch(e) {}try { if (Inst303 <= 1000 && typeof (y) != "undefined") {_RecordType("<9777,9778,296>",(y)); Inst303++; } } catch(e) {}
    y = unsigned32(y ^ y << 7 & 0x9d2c5680);
try { if (Inst300 <= 1000 && typeof (y) != "undefined") {_RecordType("<9758,9759,296>",(y)); Inst300++; } } catch(e) {}
try { if (Inst305 <= 1000 && typeof (unsigned32) != "undefined") {_RecordType("<9807,9817,297>",(unsigned32)); Inst305++; } } catch(e) {}try { if (Inst306 <= 1000 && typeof (y) != "undefined") {_RecordType("<9818,9819,297>",(y)); Inst306++; } } catch(e) {}try { if (Inst307 <= 1000 && typeof (y) != "undefined") {_RecordType("<9822,9823,297>",(y)); Inst307++; } } catch(e) {}
    y = unsigned32(y ^ y << 15 & 0xefc60000);
try { if (Inst304 <= 1000 && typeof (y) != "undefined") {_RecordType("<9803,9804,297>",(y)); Inst304++; } } catch(e) {}
try { if (Inst309 <= 1000 && typeof (unsigned32) != "undefined") {_RecordType("<9853,9863,298>",(unsigned32)); Inst309++; } } catch(e) {}try { if (Inst310 <= 1000 && typeof (y) != "undefined") {_RecordType("<9864,9865,298>",(y)); Inst310++; } } catch(e) {}try { if (Inst311 <= 1000 && typeof (y) != "undefined") {_RecordType("<9868,9869,298>",(y)); Inst311++; } } catch(e) {}
    y = unsigned32(y ^ y >>> 18);
try { if (Inst308 <= 1000 && typeof (y) != "undefined") {_RecordType("<9849,9850,298>",(y)); Inst308++; } } catch(e) {}
try { if (Inst312 <= 1000 && typeof (y) != "undefined") {_RecordType("<9890,9891,299>",(y)); Inst312++; } } catch(e) {}
    return y;
  };
try { if (Inst211 <= 1000 && typeof (this.genrand_int32) != "undefined") {_RecordType("<8123,8141,247>",(this.genrand_int32)); Inst211++; } } catch(e) {}
  /* generates a random number on [0,0x7fffffff]-interval */
  //c//long genrand_int31(void)


  this.genrand_int31 = function () {
    //c//return (genrand_int32()>>1);
try { if (Inst314 <= 1000 && typeof (this.genrand_int32) != "undefined") {_RecordType("<10079,10097,307>",(this.genrand_int32)); Inst314++; } } catch(e) {}
    return this.genrand_int32() >>> 1;
  };
try { if (Inst313 <= 1000 && typeof (this.genrand_int31) != "undefined") {_RecordType("<9995,10013,305>",(this.genrand_int31)); Inst313++; } } catch(e) {}
  /* generates a random number on [0,1]-real-interval */
  //c//double genrand_real1(void)


  this.genrand_real1 = function () {
    //c//return genrand_int32()*(1.0/4294967295.0);
try { if (Inst316 <= 1000 && typeof (this.genrand_int32) != "undefined") {_RecordType("<10305,10323,315>",(this.genrand_int32)); Inst316++; } } catch(e) {}
    return this.genrand_int32() * (1.0 / 4294967295.0);
    /* divided by 2^32-1 */
  };
try { if (Inst315 <= 1000 && typeof (this.genrand_real1) != "undefined") {_RecordType("<10207,10225,313>",(this.genrand_real1)); Inst315++; } } catch(e) {}
  /* generates a random number on [0,1)-real-interval */
  //c//double genrand_real2(void)


  this.genrand_real2 = function () {
    //c//return genrand_int32()*(1.0/4294967296.0);
try { if (Inst318 <= 1000 && typeof (this.genrand_int32) != "undefined") {_RecordType("<10576,10594,324>",(this.genrand_int32)); Inst318++; } } catch(e) {}
    return this.genrand_int32() * (1.0 / 4294967296.0);
    /* divided by 2^32 */
  };
try { if (Inst317 <= 1000 && typeof (this.genrand_real2) != "undefined") {_RecordType("<10478,10496,322>",(this.genrand_real2)); Inst317++; } } catch(e) {}
  /* generates a random number on (0,1)-real-interval */
  //c//double genrand_real3(void)


  this.genrand_real3 = function () {
    //c//return ((genrand_int32()) + 0.5)*(1.0/4294967296.0);
try { if (Inst320 <= 1000 && typeof (this.genrand_int32) != "undefined") {_RecordType("<10856,10874,333>",(this.genrand_int32)); Inst320++; } } catch(e) {}
    return (this.genrand_int32() + 0.5) * (1.0 / 4294967296.0);
    /* divided by 2^32 */
  };
try { if (Inst319 <= 1000 && typeof (this.genrand_real3) != "undefined") {_RecordType("<10747,10765,331>",(this.genrand_real3)); Inst319++; } } catch(e) {}
  /* generates a random number on [0,1) with 53-bit resolution*/
  //c//double genrand_res53(void)


  this.genrand_res53 = function () {
    //c//unsigned long a=genrand_int32()>>5, b=genrand_int32()>>6;
try { if (Inst323 <= 1000 && typeof (this.genrand_int32) != "undefined") {_RecordType("<11156,11174,342>",(this.genrand_int32)); Inst323++; } } catch(e) {}try { if (Inst325 <= 1000 && typeof (this.genrand_int32) != "undefined") {_RecordType("<11196,11214,343>",(this.genrand_int32)); Inst325++; } } catch(e) {}
    var a = this.genrand_int32() >>> 5,
        b = this.genrand_int32() >>> 6;
try { if (Inst322 <= 1000 && typeof (a) != "undefined") {_RecordType("<11152,11153,342>",(a)); Inst322++; } } catch(e) {}try { if (Inst324 <= 1000 && typeof (b) != "undefined") {_RecordType("<11192,11193,343>",(b)); Inst324++; } } catch(e) {}
try { if (Inst326 <= 1000 && typeof (a) != "undefined") {_RecordType("<11236,11237,344>",(a)); Inst326++; } } catch(e) {}try { if (Inst327 <= 1000 && typeof (b) != "undefined") {_RecordType("<11253,11254,344>",(b)); Inst327++; } } catch(e) {}
    return (a * 67108864.0 + b) * (1.0 / 9007199254740992.0);
  };
try { if (Inst321 <= 1000 && typeof (this.genrand_res53) != "undefined") {_RecordType("<11042,11060,340>",(this.genrand_res53)); Inst321++; } } catch(e) {}
  /* These real versions are due to Isaku Wada, 2002/01/09 added */

}

try { if (Inst328 <= 1000 && typeof (initRnd) != "undefined") {_RecordType("<11372,11379,350>",(initRnd)); Inst328++; } } catch(e) {}
function initRnd() {
try { if (Inst330 <= 1000 && typeof (MersenneTwister19937) != "undefined") {_RecordType("<11403,11423,351>",(MersenneTwister19937)); Inst330++; } } catch(e) {}
  var fuzzMT = new MersenneTwister19937();
try { if (Inst329 <= 1000 && typeof (fuzzMT) != "undefined") {_RecordType("<11390,11396,351>",(fuzzMT)); Inst329++; } } catch(e) {}
  var fuzzSeed = 53;
try { if (Inst331 <= 1000 && typeof (fuzzSeed) != "undefined") {_RecordType("<11433,11441,352>",(fuzzSeed)); Inst331++; } } catch(e) {}
try { if (Inst332 <= 1000 && typeof (fuzzMT.init_genrand) != "undefined") {_RecordType("<11450,11469,353>",(fuzzMT.init_genrand)); Inst332++; } } catch(e) {}try { if (Inst333 <= 1000 && typeof (fuzzMT) != "undefined") {_RecordType("<11450,11456,353>",(fuzzMT)); Inst333++; } } catch(e) {}try { if (Inst334 <= 1000 && typeof (fuzzSeed) != "undefined") {_RecordType("<11470,11478,353>",(fuzzSeed)); Inst334++; } } catch(e) {}
  fuzzMT.init_genrand(fuzzSeed);

  rnd = function (n) {
try { if (Inst336 <= 1000 && typeof (n) != "undefined") {_RecordType("<11500,11501,355>",(n)); Inst336++; } } catch(e) {}
try { if (Inst338 <= 1000 && typeof (Math.floor) != "undefined") {_RecordType("<11517,11527,356>",(Math.floor)); Inst338++; } } catch(e) {}try { if (Inst339 <= 1000 && typeof (Math) != "undefined") {_RecordType("<11517,11521,356>",(Math)); Inst339++; } } catch(e) {}try { if (Inst340 <= 1000 && typeof (fuzzMT.genrand_real2) != "undefined") {_RecordType("<11528,11548,356>",(fuzzMT.genrand_real2)); Inst340++; } } catch(e) {}try { if (Inst341 <= 1000 && typeof (fuzzMT) != "undefined") {_RecordType("<11528,11534,356>",(fuzzMT)); Inst341++; } } catch(e) {}try { if (Inst342 <= 1000 && typeof (n) != "undefined") {_RecordType("<11553,11554,356>",(n)); Inst342++; } } catch(e) {}
    var v = Math.floor(fuzzMT.genrand_real2() * n);
try { if (Inst337 <= 1000 && typeof (v) != "undefined") {_RecordType("<11513,11514,356>",(v)); Inst337++; } } catch(e) {}
try { if (Inst343 <= 1000 && typeof (v) != "undefined") {_RecordType("<11568,11569,357>",(v)); Inst343++; } } catch(e) {}
    return v;
  };
try { if (Inst335 <= 1000 && typeof (rnd) != "undefined") {_RecordType("<11484,11487,355>",(rnd)); Inst335++; } } catch(e) {}

  rnd.rndReal = function () {
try { if (Inst346 <= 1000 && typeof (fuzzMT.genrand_real2) != "undefined") {_RecordType("<11618,11638,361>",(fuzzMT.genrand_real2)); Inst346++; } } catch(e) {}try { if (Inst347 <= 1000 && typeof (fuzzMT) != "undefined") {_RecordType("<11618,11624,361>",(fuzzMT)); Inst347++; } } catch(e) {}
    return fuzzMT.genrand_real2();
  };
try { if (Inst344 <= 1000 && typeof (rnd.rndReal) != "undefined") {_RecordType("<11579,11590,360>",(rnd.rndReal)); Inst344++; } } catch(e) {}try { if (Inst345 <= 1000 && typeof (rnd) != "undefined") {_RecordType("<11579,11582,360>",(rnd)); Inst345++; } } catch(e) {}

try { if (Inst350 <= 1000 && typeof (fuzzMT) != "undefined") {_RecordType("<11663,11669,364>",(fuzzMT)); Inst350++; } } catch(e) {}
  rnd.fuzzMT = fuzzMT;
try { if (Inst348 <= 1000 && typeof (rnd.fuzzMT) != "undefined") {_RecordType("<11650,11660,364>",(rnd.fuzzMT)); Inst348++; } } catch(e) {}try { if (Inst349 <= 1000 && typeof (rnd) != "undefined") {_RecordType("<11650,11653,364>",(rnd)); Inst349++; } } catch(e) {}
}

