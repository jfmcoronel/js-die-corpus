var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Reflect.parse Latin1
try { if (Inst1 <= 1000 && typeof (Reflect.parse) != "undefined") {_RecordType("<34,47,2>",(Reflect.parse)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<34,41,2>",(Reflect)); Inst2++; } } catch(e) {}
var ast = Reflect.parse("function f() { return 3; }");
try { if (Inst0 <= 1000 && typeof (ast) != "undefined") {_RecordType("<28,31,2>",(ast)); Inst0++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (ast.body[0].id.name) != "undefined") {_RecordType("<79,98,3>",(ast.body[0].id.name)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (ast.body[0].id) != "undefined") {_RecordType("<79,93,3>",(ast.body[0].id)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (ast.body[0]) != "undefined") {_RecordType("<79,90,3>",(ast.body[0])); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (ast.body) != "undefined") {_RecordType("<79,87,3>",(ast.body)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (ast) != "undefined") {_RecordType("<79,82,3>",(ast)); Inst7++; } } catch(e) {}
ast.body[0].id.name;
"f";
try { if (Inst8 <= 1000 && typeof (isLatin1) != "undefined") {_RecordType("<105,113,5>",(isLatin1)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (ast.body[0].id.name) != "undefined") {_RecordType("<114,133,5>",(ast.body[0].id.name)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (ast.body[0].id) != "undefined") {_RecordType("<114,128,5>",(ast.body[0].id)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (ast.body[0]) != "undefined") {_RecordType("<114,125,5>",(ast.body[0])); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (ast.body) != "undefined") {_RecordType("<114,122,5>",(ast.body)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (ast) != "undefined") {_RecordType("<114,117,5>",(ast)); Inst13++; } } catch(e) {}
isLatin1(ast.body[0].id.name);
true;
// Reflect.parse TwoByte
try { if (Inst15 <= 1000 && typeof (Reflect.parse) != "undefined") {_RecordType("<177,190,8>",(Reflect.parse)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<177,184,8>",(Reflect)); Inst16++; } } catch(e) {}
var ast = Reflect.parse("function f\u1200() { return 3; }");
try { if (Inst14 <= 1000 && typeof (ast) != "undefined") {_RecordType("<171,174,8>",(ast)); Inst14++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (ast.body[0].id.name) != "undefined") {_RecordType("<228,247,9>",(ast.body[0].id.name)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (ast.body[0].id) != "undefined") {_RecordType("<228,242,9>",(ast.body[0].id)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (ast.body[0]) != "undefined") {_RecordType("<228,239,9>",(ast.body[0])); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (ast.body) != "undefined") {_RecordType("<228,236,9>",(ast.body)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (ast) != "undefined") {_RecordType("<228,231,9>",(ast)); Inst21++; } } catch(e) {}
ast.body[0].id.name;
"f\u1200";
// obj.toSource Latin1
var o = {};
try { if (Inst22 <= 1000 && typeof (o) != "undefined") {_RecordType("<287,288,12>",(o)); Inst22++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<295,316,13>",(Object.defineProperty)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (Object) != "undefined") {_RecordType("<295,301,13>",(Object)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (o) != "undefined") {_RecordType("<317,318,13>",(o)); Inst25++; } } catch(e) {}
Object.defineProperty(o, "prop", {
  get: function () {
    return 1;
  },
  set: function () {
    return 2;
  },
  enumerable: true,
  configurable: true
});
try { if (Inst26 <= 1000 && typeof (o.toSource) != "undefined") {_RecordType("<455,465,23>",(o.toSource)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (o) != "undefined") {_RecordType("<455,456,23>",(o)); Inst27++; } } catch(e) {}
o.toSource();
"({get prop() { return 1; }, set prop() { return 2; }})";
// obj.toSource TwoByte
try { if (Inst28 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<551,572,26>",(Object.defineProperty)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (Object) != "undefined") {_RecordType("<551,557,26>",(Object)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (o) != "undefined") {_RecordType("<573,574,26>",(o)); Inst30++; } } catch(e) {}
Object.defineProperty(o, "prop", {
  get: function () {
    return "\u1200";
  },
  set: function () {
    return "\u1200";
  },
  enumerable: true
});
try { if (Inst31 <= 1000 && typeof (o.toSource) != "undefined") {_RecordType("<703,713,35>",(o.toSource)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (o) != "undefined") {_RecordType("<703,704,35>",(o)); Inst32++; } } catch(e) {}
o.toSource();
'({get prop() { return "\\u1200"; }, set prop() { return "\\u1200"; }})';

var ff = function () {
  return 10;
};
try { if (Inst33 <= 1000 && typeof (ff) != "undefined") {_RecordType("<796,798,38>",(ff)); Inst33++; } } catch(e) {}

ff.toSource = function () {
  return "((11))";
};
try { if (Inst34 <= 1000 && typeof (ff.toSource) != "undefined") {_RecordType("<832,843,42>",(ff.toSource)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (ff) != "undefined") {_RecordType("<832,834,42>",(ff)); Inst35++; } } catch(e) {}

try { if (Inst36 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<883,904,46>",(Object.defineProperty)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (Object) != "undefined") {_RecordType("<883,889,46>",(Object)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (o) != "undefined") {_RecordType("<905,906,46>",(o)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (ff) != "undefined") {_RecordType("<925,927,47>",(ff)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (ff) != "undefined") {_RecordType("<936,938,48>",(ff)); Inst40++; } } catch(e) {}
Object.defineProperty(o, "prop", {
  get: ff,
  set: ff,
  enumerable: true
});
try { if (Inst41 <= 1000 && typeof (o.toSource) != "undefined") {_RecordType("<963,973,51>",(o.toSource)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (o) != "undefined") {_RecordType("<963,964,51>",(o)); Inst42++; } } catch(e) {}
o.toSource();
"({get prop(11), set prop(11)})";
// XDR
// Latin1 string constant
test = "'string123';";
try { if (Inst43 <= 1000 && typeof (test) != "undefined") {_RecordType("<1044,1048,55>",(test)); Inst43++; } } catch(e) {}
try { if (Inst44 <= 1000 && typeof (evalWithCache) != "undefined") {_RecordType("<1067,1080,56>",(evalWithCache)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (test) != "undefined") {_RecordType("<1081,1085,56>",(test)); Inst45++; } } catch(e) {}
evalWithCache(test, {
  assertEqBytecode: true,
  assertEqResult: true
}); // TwoByte string constant

test = "'string\u1234';";
try { if (Inst46 <= 1000 && typeof (test) != "undefined") {_RecordType("<1170,1174,61>",(test)); Inst46++; } } catch(e) {}
try { if (Inst47 <= 1000 && typeof (evalWithCache) != "undefined") {_RecordType("<1196,1209,62>",(evalWithCache)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (test) != "undefined") {_RecordType("<1210,1214,62>",(test)); Inst48++; } } catch(e) {}
evalWithCache(test, {
  assertEqBytecode: true,
  assertEqResult: true
});

