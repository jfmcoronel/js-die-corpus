var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (toLatin1) != "undefined") {_RecordType("<9,17,1>",(toLatin1)); Inst0++; } } catch(e) {}
function toLatin1(s) {
try { if (Inst1 <= 1000 && typeof (s) != "undefined") {_RecordType("<18,19,1>",(s)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (isLatin1) != "undefined") {_RecordType("<25,33,2>",(isLatin1)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (s) != "undefined") {_RecordType("<34,35,2>",(s)); Inst3++; } } catch(e) {}
  isLatin1(s);
  true;
try { if (Inst4 <= 1000 && typeof (s) != "undefined") {_RecordType("<55,56,4>",(s)); Inst4++; } } catch(e) {}
  return s;
}

try { if (Inst6 <= 1000 && typeof (toLatin1) != "undefined") {_RecordType("<78,86,7>",(toLatin1)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (toLatin1) != "undefined") {_RecordType("<96,104,7>",(toLatin1)); Inst7++; } } catch(e) {}
var arrLatin1 = [toLatin1("abc1"), toLatin1("abc\u00A0")];
try { if (Inst5 <= 1000 && typeof (arrLatin1) != "undefined") {_RecordType("<65,74,7>",(arrLatin1)); Inst5++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (arrLatin1.join) != "undefined") {_RecordType("<130,144,8>",(arrLatin1.join)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (arrLatin1) != "undefined") {_RecordType("<130,139,8>",(arrLatin1)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (toLatin1) != "undefined") {_RecordType("<145,153,8>",(toLatin1)); Inst11++; } } catch(e) {}
var res = arrLatin1.join(toLatin1("sep\u00ff"));
try { if (Inst8 <= 1000 && typeof (res) != "undefined") {_RecordType("<124,127,8>",(res)); Inst8++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (res) != "undefined") {_RecordType("<169,172,9>",(res)); Inst12++; } } catch(e) {}
res;
"abc1sep\xFFabc\xA0";
try { if (Inst13 <= 1000 && typeof (isLatin1) != "undefined") {_RecordType("<196,204,11>",(isLatin1)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (res) != "undefined") {_RecordType("<205,208,11>",(res)); Inst14++; } } catch(e) {}
isLatin1(res);
true;
try { if (Inst16 <= 1000 && typeof (toLatin1) != "undefined") {_RecordType("<235,243,13>",(toLatin1)); Inst16++; } } catch(e) {}
var arrTwoByte = [toLatin1("abc2"), "def\u1200"];
try { if (Inst15 <= 1000 && typeof (arrTwoByte) != "undefined") {_RecordType("<221,231,13>",(arrTwoByte)); Inst15++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (arrTwoByte.join) != "undefined") {_RecordType("<267,282,14>",(arrTwoByte.join)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (arrTwoByte) != "undefined") {_RecordType("<267,277,14>",(arrTwoByte)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (toLatin1) != "undefined") {_RecordType("<283,291,14>",(toLatin1)); Inst19++; } } catch(e) {}
arrTwoByte.join(toLatin1("sep\u00fe"));
"abc2sep\xFEdef\u1200";
try { if (Inst21 <= 1000 && typeof (arrLatin1.join) != "undefined") {_RecordType("<337,351,16>",(arrLatin1.join)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (arrLatin1) != "undefined") {_RecordType("<337,346,16>",(arrLatin1)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (toLatin1) != "undefined") {_RecordType("<352,360,16>",(toLatin1)); Inst23++; } } catch(e) {}
res = arrLatin1.join(toLatin1("-"));
try { if (Inst20 <= 1000 && typeof (res) != "undefined") {_RecordType("<331,334,16>",(res)); Inst20++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (res) != "undefined") {_RecordType("<368,371,17>",(res)); Inst24++; } } catch(e) {}
res;
"abc1-abc\xA0";
try { if (Inst25 <= 1000 && typeof (isLatin1) != "undefined") {_RecordType("<389,397,19>",(isLatin1)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (res) != "undefined") {_RecordType("<398,401,19>",(res)); Inst26++; } } catch(e) {}
isLatin1(res);
true;
try { if (Inst27 <= 1000 && typeof (arrTwoByte.join) != "undefined") {_RecordType("<410,425,21>",(arrTwoByte.join)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (arrTwoByte) != "undefined") {_RecordType("<410,420,21>",(arrTwoByte)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (toLatin1) != "undefined") {_RecordType("<426,434,21>",(toLatin1)); Inst29++; } } catch(e) {}
arrTwoByte.join(toLatin1("7"));
"abc27def\u1200";
try { if (Inst30 <= 1000 && typeof (arrLatin1.join) != "undefined") {_RecordType("<460,474,23>",(arrLatin1.join)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (arrLatin1) != "undefined") {_RecordType("<460,469,23>",(arrLatin1)); Inst31++; } } catch(e) {}
arrLatin1.join("\u1200");
"abc1\u1200abc\xA0";
try { if (Inst32 <= 1000 && typeof (arrTwoByte.join) != "undefined") {_RecordType("<507,522,25>",(arrTwoByte.join)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (arrTwoByte) != "undefined") {_RecordType("<507,517,25>",(arrTwoByte)); Inst33++; } } catch(e) {}
arrTwoByte.join("\u1200");
"abc2\u1200def\u1200";
try { if (Inst34 <= 1000 && typeof (arrLatin1.join) != "undefined") {_RecordType("<557,571,27>",(arrLatin1.join)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (arrLatin1) != "undefined") {_RecordType("<557,566,27>",(arrLatin1)); Inst35++; } } catch(e) {}
arrLatin1.join("---\u1200");
"abc1---\u1200abc\xA0";
try { if (Inst36 <= 1000 && typeof (arrTwoByte.join) != "undefined") {_RecordType("<610,625,29>",(arrTwoByte.join)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (arrTwoByte) != "undefined") {_RecordType("<610,620,29>",(arrTwoByte)); Inst37++; } } catch(e) {}
arrTwoByte.join("---\u1200");
"abc2---\u1200def\u1200";

