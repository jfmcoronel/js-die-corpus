var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Latin1
var s = "abcdef,g,,";
try { if (Inst0 <= 1000 && typeof (s) != "undefined") {_RecordType("<14,15,2>",(s)); Inst0++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (s.split) != "undefined") {_RecordType("<42,49,3>",(s.split)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (s) != "undefined") {_RecordType("<42,43,3>",(s)); Inst3++; } } catch(e) {}
var res = s.split(",");
try { if (Inst1 <= 1000 && typeof (res) != "undefined") {_RecordType("<36,39,3>",(res)); Inst1++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (res[0]) != "undefined") {_RecordType("<56,62,4>",(res[0])); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (res) != "undefined") {_RecordType("<56,59,4>",(res)); Inst5++; } } catch(e) {}
res[0];
"abcdef";
try { if (Inst6 <= 1000 && typeof (isLatin1) != "undefined") {_RecordType("<74,82,6>",(isLatin1)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (res[0]) != "undefined") {_RecordType("<83,89,6>",(res[0])); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (res) != "undefined") {_RecordType("<83,86,6>",(res)); Inst8++; } } catch(e) {}
isLatin1(res[0]);
true;
try { if (Inst9 <= 1000 && typeof (res[1]) != "undefined") {_RecordType("<98,104,8>",(res[1])); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (res) != "undefined") {_RecordType("<98,101,8>",(res)); Inst10++; } } catch(e) {}
res[1];
"g";
try { if (Inst11 <= 1000 && typeof (res[2]) != "undefined") {_RecordType("<111,117,10>",(res[2])); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (res) != "undefined") {_RecordType("<111,114,10>",(res)); Inst12++; } } catch(e) {}
res[2];
"";
try { if (Inst13 <= 1000 && typeof (res[3]) != "undefined") {_RecordType("<123,129,12>",(res[3])); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (res) != "undefined") {_RecordType("<123,126,12>",(res)); Inst14++; } } catch(e) {}
res[3];
"";
s = "abcdef,gh,,";
try { if (Inst15 <= 1000 && typeof (s) != "undefined") {_RecordType("<135,136,14>",(s)); Inst15++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (s.split) != "undefined") {_RecordType("<160,167,15>",(s.split)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (s) != "undefined") {_RecordType("<160,161,15>",(s)); Inst18++; } } catch(e) {}
res = s.split("\u1200");
try { if (Inst16 <= 1000 && typeof (res) != "undefined") {_RecordType("<154,157,15>",(res)); Inst16++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (res[0]) != "undefined") {_RecordType("<179,185,16>",(res[0])); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (res) != "undefined") {_RecordType("<179,182,16>",(res)); Inst20++; } } catch(e) {}
res[0];
"abcdef,gh,,";
try { if (Inst21 <= 1000 && typeof (isLatin1) != "undefined") {_RecordType("<202,210,18>",(isLatin1)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (res[0]) != "undefined") {_RecordType("<211,217,18>",(res[0])); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (res) != "undefined") {_RecordType("<211,214,18>",(res)); Inst23++; } } catch(e) {}
isLatin1(res[0]);
true;
// TwoByte
s = "abcdef\u1200\u1200,g,,";
try { if (Inst24 <= 1000 && typeof (s) != "undefined") {_RecordType("<237,238,21>",(s)); Inst24++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (s.split) != "undefined") {_RecordType("<273,280,22>",(s.split)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (s) != "undefined") {_RecordType("<273,274,22>",(s)); Inst27++; } } catch(e) {}
res = s.split(",");
try { if (Inst25 <= 1000 && typeof (res) != "undefined") {_RecordType("<267,270,22>",(res)); Inst25++; } } catch(e) {}
try { if (Inst28 <= 1000 && typeof (res[0]) != "undefined") {_RecordType("<287,293,23>",(res[0])); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (res) != "undefined") {_RecordType("<287,290,23>",(res)); Inst29++; } } catch(e) {}
res[0];
"abcdef\u1200\u1200";
try { if (Inst30 <= 1000 && typeof (isLatin1) != "undefined") {_RecordType("<317,325,25>",(isLatin1)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (res[0]) != "undefined") {_RecordType("<326,332,25>",(res[0])); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (res) != "undefined") {_RecordType("<326,329,25>",(res)); Inst32++; } } catch(e) {}
isLatin1(res[0]);
false;
try { if (Inst33 <= 1000 && typeof (res[1]) != "undefined") {_RecordType("<342,348,27>",(res[1])); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (res) != "undefined") {_RecordType("<342,345,27>",(res)); Inst34++; } } catch(e) {}
res[1];
"g";
try { if (Inst35 <= 1000 && typeof (res[2]) != "undefined") {_RecordType("<355,361,29>",(res[2])); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (res) != "undefined") {_RecordType("<355,358,29>",(res)); Inst36++; } } catch(e) {}
res[2];
"";
try { if (Inst37 <= 1000 && typeof (res[3]) != "undefined") {_RecordType("<367,373,31>",(res[3])); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (res) != "undefined") {_RecordType("<367,370,31>",(res)); Inst38++; } } catch(e) {}
res[3];
"";
try { if (Inst40 <= 1000 && typeof (s.split) != "undefined") {_RecordType("<385,392,33>",(s.split)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (s) != "undefined") {_RecordType("<385,386,33>",(s)); Inst41++; } } catch(e) {}
res = s.split("\u1200");
try { if (Inst39 <= 1000 && typeof (res) != "undefined") {_RecordType("<379,382,33>",(res)); Inst39++; } } catch(e) {}
try { if (Inst42 <= 1000 && typeof (res[0]) != "undefined") {_RecordType("<404,410,34>",(res[0])); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (res) != "undefined") {_RecordType("<404,407,34>",(res)); Inst43++; } } catch(e) {}
res[0];
"abcdef";
try { if (Inst44 <= 1000 && typeof (res[1]) != "undefined") {_RecordType("<422,428,36>",(res[1])); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (res) != "undefined") {_RecordType("<422,425,36>",(res)); Inst45++; } } catch(e) {}
res[1];
"";
try { if (Inst46 <= 1000 && typeof (res[2]) != "undefined") {_RecordType("<434,440,38>",(res[2])); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (res) != "undefined") {_RecordType("<434,437,38>",(res)); Inst47++; } } catch(e) {}
res[2];
",g,,";

