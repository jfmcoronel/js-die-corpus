var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (toLatin1) != "undefined") {_RecordType("<9,17,1>",(toLatin1)); Inst0++; } } catch(e) {}
function toLatin1(s) {
try { if (Inst1 <= 1000 && typeof (s) != "undefined") {_RecordType("<18,19,1>",(s)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (isLatin1) != "undefined") {_RecordType("<25,33,2>",(isLatin1)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (s) != "undefined") {_RecordType("<34,35,2>",(s)); Inst3++; } } catch(e) {}
  isLatin1(s);
  true;
try { if (Inst4 <= 1000 && typeof (s) != "undefined") {_RecordType("<55,56,4>",(s)); Inst4++; } } catch(e) {}
  return s;
}

try { if (Inst5 <= 1000 && typeof (testParseInt) != "undefined") {_RecordType("<70,82,7>",(testParseInt)); Inst5++; } } catch(e) {}
function testParseInt() {
  // Latin1
try { if (Inst6 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<101,109,9>",(parseInt)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (toLatin1) != "undefined") {_RecordType("<110,118,9>",(toLatin1)); Inst7++; } } catch(e) {}
  parseInt(toLatin1("12345abc"));
  12345;
try { if (Inst8 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<144,152,11>",(parseInt)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (toLatin1) != "undefined") {_RecordType("<153,161,11>",(toLatin1)); Inst9++; } } catch(e) {}
  parseInt(toLatin1("0x5"));
  0x5;
try { if (Inst10 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<180,188,13>",(parseInt)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (toLatin1) != "undefined") {_RecordType("<189,197,13>",(toLatin1)); Inst11++; } } catch(e) {}
  parseInt(toLatin1("-123"));
  -123;
try { if (Inst12 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<218,226,15>",(parseInt)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (toLatin1) != "undefined") {_RecordType("<227,235,15>",(toLatin1)); Inst13++; } } catch(e) {}
  parseInt(toLatin1("xyz"));
try { if (Inst14 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<247,250,16>",(NaN)); Inst14++; } } catch(e) {}
  NaN;
try { if (Inst15 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<254,262,17>",(parseInt)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (toLatin1) != "undefined") {_RecordType("<263,271,17>",(toLatin1)); Inst16++; } } catch(e) {}
  parseInt(toLatin1("1234GHI"), 17);
  94298;
try { if (Inst17 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<300,308,19>",(parseInt)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (toLatin1) != "undefined") {_RecordType("<309,317,19>",(toLatin1)); Inst18++; } } catch(e) {}
  parseInt(toLatin1("9007199254749999"));
  9007199254750000;
try { if (Inst19 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<362,370,21>",(parseInt)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (toLatin1) != "undefined") {_RecordType("<371,379,21>",(toLatin1)); Inst20++; } } catch(e) {}
  parseInt(toLatin1("  9007199254749998"), 16);
  10378291982571444000;
try { if (Inst21 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<434,442,23>",(parseInt)); Inst21++; } } catch(e) {}
  parseInt("12345abc\u1200");
  12345;
try { if (Inst22 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<473,481,25>",(parseInt)); Inst22++; } } catch(e) {}
  parseInt("0x5\u1200");
  0x5;
try { if (Inst23 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<505,513,27>",(parseInt)); Inst23++; } } catch(e) {}
  parseInt("  -123\u1200");
  -123;
try { if (Inst24 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<541,549,29>",(parseInt)); Inst24++; } } catch(e) {}
  parseInt("\u1200");
try { if (Inst25 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<563,566,30>",(NaN)); Inst25++; } } catch(e) {}
  NaN;
try { if (Inst26 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<570,578,31>",(parseInt)); Inst26++; } } catch(e) {}
  parseInt("1234GHI\u1200", 17);
  94298;
try { if (Inst27 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<612,620,33>",(parseInt)); Inst27++; } } catch(e) {}
  parseInt("9007199254749999\u1200");
  9007199254750000;
try { if (Inst28 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<670,678,35>",(parseInt)); Inst28++; } } catch(e) {}
  parseInt("  9007199254749998\u1200", 16);
  10378291982571444000;
}

try { if (Inst29 <= 1000 && typeof (testParseInt) != "undefined") {_RecordType("<739,751,39>",(testParseInt)); Inst29++; } } catch(e) {}
testParseInt();

try { if (Inst30 <= 1000 && typeof (testParseFloat) != "undefined") {_RecordType("<765,779,41>",(testParseFloat)); Inst30++; } } catch(e) {}
function testParseFloat() {
  // Latin1
try { if (Inst31 <= 1000 && typeof (parseFloat) != "undefined") {_RecordType("<798,808,43>",(parseFloat)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (toLatin1) != "undefined") {_RecordType("<809,817,43>",(toLatin1)); Inst32++; } } catch(e) {}
  parseFloat(toLatin1("3.1415"));
  3.1415;
try { if (Inst33 <= 1000 && typeof (parseFloat) != "undefined") {_RecordType("<842,852,45>",(parseFloat)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (toLatin1) != "undefined") {_RecordType("<853,861,45>",(toLatin1)); Inst34++; } } catch(e) {}
  parseFloat(toLatin1("  -1234"));
  -1234;
try { if (Inst35 <= 1000 && typeof (parseFloat) != "undefined") {_RecordType("<886,896,47>",(parseFloat)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (toLatin1) != "undefined") {_RecordType("<897,905,47>",(toLatin1)); Inst36++; } } catch(e) {}
  parseFloat(toLatin1("\u00AA"));
try { if (Inst37 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<920,923,48>",(NaN)); Inst37++; } } catch(e) {}
  NaN;
try { if (Inst38 <= 1000 && typeof (parseFloat) != "undefined") {_RecordType("<927,937,49>",(parseFloat)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (toLatin1) != "undefined") {_RecordType("<938,946,49>",(toLatin1)); Inst39++; } } catch(e) {}
  parseFloat(toLatin1("Infinityabc"));
try { if (Inst40 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<966,974,50>",(Infinity)); Inst40++; } } catch(e) {}
  Infinity;
try { if (Inst41 <= 1000 && typeof (parseFloat) != "undefined") {_RecordType("<978,988,51>",(parseFloat)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (toLatin1) != "undefined") {_RecordType("<989,997,51>",(toLatin1)); Inst42++; } } catch(e) {}
  parseFloat(toLatin1("-Infinity"));
try { if (Inst43 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<1016,1024,52>",(Infinity)); Inst43++; } } catch(e) {}
  -Infinity;
try { if (Inst44 <= 1000 && typeof (parseFloat) != "undefined") {_RecordType("<1028,1038,53>",(parseFloat)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (toLatin1) != "undefined") {_RecordType("<1039,1047,53>",(toLatin1)); Inst45++; } } catch(e) {}
  parseFloat(toLatin1("\t\t\t+Infinity"));
try { if (Inst46 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<1071,1079,54>",(Infinity)); Inst46++; } } catch(e) {}
  Infinity;
try { if (Inst47 <= 1000 && typeof (parseFloat) != "undefined") {_RecordType("<1083,1093,55>",(parseFloat)); Inst47++; } } catch(e) {}
  parseFloat("3.1415\u0FFF");
  3.1415;
try { if (Inst48 <= 1000 && typeof (parseFloat) != "undefined") {_RecordType("<1123,1133,57>",(parseFloat)); Inst48++; } } catch(e) {}
  parseFloat("  -1234\u0FFF");
  -1234;
try { if (Inst49 <= 1000 && typeof (parseFloat) != "undefined") {_RecordType("<1163,1173,59>",(parseFloat)); Inst49++; } } catch(e) {}
  parseFloat("\u00AA\u0FFF");
try { if (Inst50 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<1193,1196,60>",(NaN)); Inst50++; } } catch(e) {}
  NaN;
try { if (Inst51 <= 1000 && typeof (parseFloat) != "undefined") {_RecordType("<1200,1210,61>",(parseFloat)); Inst51++; } } catch(e) {}
  parseFloat("Infinityabc\u0FFF");
try { if (Inst52 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<1235,1243,62>",(Infinity)); Inst52++; } } catch(e) {}
  Infinity;
try { if (Inst53 <= 1000 && typeof (parseFloat) != "undefined") {_RecordType("<1247,1257,63>",(parseFloat)); Inst53++; } } catch(e) {}
  parseFloat("-Infinity\u0FFF");
try { if (Inst54 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<1281,1289,64>",(Infinity)); Inst54++; } } catch(e) {}
  -Infinity;
try { if (Inst55 <= 1000 && typeof (parseFloat) != "undefined") {_RecordType("<1293,1303,65>",(parseFloat)); Inst55++; } } catch(e) {}
  parseFloat("\t\t\t+Infinity\u0FFF");
try { if (Inst56 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<1332,1340,66>",(Infinity)); Inst56++; } } catch(e) {}
  Infinity;
}

try { if (Inst57 <= 1000 && typeof (testParseFloat) != "undefined") {_RecordType("<1345,1359,69>",(testParseFloat)); Inst57++; } } catch(e) {}
testParseFloat();

