var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (testToLowerCase) != "undefined") {_RecordType("<9,24,1>",(testToLowerCase)); Inst0++; } } catch(e) {}
function testToLowerCase() {
  var s1 = "abcdefgABCDEFGH 123456";
try { if (Inst1 <= 1000 && typeof (s1) != "undefined") {_RecordType("<35,37,2>",(s1)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (isLatin1) != "undefined") {_RecordType("<68,76,3>",(isLatin1)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (s1) != "undefined") {_RecordType("<77,79,3>",(s1)); Inst3++; } } catch(e) {}
  isLatin1(s1);
  true;
  // Latin1
try { if (Inst5 <= 1000 && typeof (s1.toLowerCase) != "undefined") {_RecordType("<113,127,6>",(s1.toLowerCase)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (s1) != "undefined") {_RecordType("<113,115,6>",(s1)); Inst6++; } } catch(e) {}
  var s2 = s1.toLowerCase();
try { if (Inst4 <= 1000 && typeof (s2) != "undefined") {_RecordType("<108,110,6>",(s2)); Inst4++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (isLatin1) != "undefined") {_RecordType("<133,141,7>",(isLatin1)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (s2) != "undefined") {_RecordType("<142,144,7>",(s2)); Inst8++; } } catch(e) {}
  isLatin1(s2);
  true;
try { if (Inst9 <= 1000 && typeof (s2) != "undefined") {_RecordType("<157,159,9>",(s2)); Inst9++; } } catch(e) {}
  s2;
  "abcdefgabcdefgh 123456";
try { if (Inst11 <= 1000 && typeof (s1.toLocaleLowerCase) != "undefined") {_RecordType("<196,216,11>",(s1.toLocaleLowerCase)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (s1) != "undefined") {_RecordType("<196,198,11>",(s1)); Inst12++; } } catch(e) {}
  s2 = s1.toLocaleLowerCase();
try { if (Inst10 <= 1000 && typeof (s2) != "undefined") {_RecordType("<191,193,11>",(s2)); Inst10++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (isLatin1) != "undefined") {_RecordType("<222,230,12>",(isLatin1)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (s2) != "undefined") {_RecordType("<231,233,12>",(s2)); Inst14++; } } catch(e) {}
  isLatin1(s2);
  true;
try { if (Inst15 <= 1000 && typeof (s2) != "undefined") {_RecordType("<246,248,14>",(s2)); Inst15++; } } catch(e) {}
  s2;
  "abcdefgabcdefgh 123456";
  // TwoByte
try { if (Inst17 <= 1000 && typeof ("abcdefg\u1200ABCDEFGH 123456\u04AC".toLowerCase) != "undefined") {_RecordType("<298,346,17>",("abcdefg\u1200ABCDEFGH 123456\u04AC".toLowerCase)); Inst17++; } } catch(e) {}
  s2 = "abcdefg\u1200ABCDEFGH 123456\u04AC".toLowerCase();
try { if (Inst16 <= 1000 && typeof (s2) != "undefined") {_RecordType("<293,295,17>",(s2)); Inst16++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (s2) != "undefined") {_RecordType("<352,354,18>",(s2)); Inst18++; } } catch(e) {}
  s2;
  "abcdefg\u1200abcdefgh 123456\u04AD";
try { if (Inst20 <= 1000 && typeof ("abcdefg\u1200ABCDEFGH 123456\u04AC".toLocaleLowerCase) != "undefined") {_RecordType("<403,457,20>",("abcdefg\u1200ABCDEFGH 123456\u04AC".toLocaleLowerCase)); Inst20++; } } catch(e) {}
  s2 = "abcdefg\u1200ABCDEFGH 123456\u04AC".toLocaleLowerCase();
try { if (Inst19 <= 1000 && typeof (s2) != "undefined") {_RecordType("<398,400,20>",(s2)); Inst19++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (s2) != "undefined") {_RecordType("<463,465,21>",(s2)); Inst21++; } } catch(e) {}
  s2;
  "abcdefg\u1200abcdefgh 123456\u04AD";

  // For toLowerCase, every Latin1 character maps to a Latin1 character.
  for (var i = 0; i <= 0xff; i++) {
try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<592,593,25>",(i)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<599,600,25>",(i)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<610,611,25>",(i)); Inst24++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (String.fromCharCode) != "undefined") {_RecordType("<646,665,26>",(String.fromCharCode)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (String) != "undefined") {_RecordType("<646,652,26>",(String)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (i) != "undefined") {_RecordType("<666,667,26>",(i)); Inst28++; } } catch(e) {}
    var s = "\u1200\u11AA" + String.fromCharCode(i);
try { if (Inst25 <= 1000 && typeof (s) != "undefined") {_RecordType("<625,626,26>",(s)); Inst25++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (s.toLowerCase().charCodeAt) != "undefined") {_RecordType("<674,700,27>",(s.toLowerCase().charCodeAt)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (s.toLowerCase) != "undefined") {_RecordType("<674,687,27>",(s.toLowerCase)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (s) != "undefined") {_RecordType("<674,675,27>",(s)); Inst31++; } } catch(e) {}
    s.toLowerCase().charCodeAt(2) <= 0xff;
    true;
  }
}

try { if (Inst32 <= 1000 && typeof (testToLowerCase) != "undefined") {_RecordType("<730,745,32>",(testToLowerCase)); Inst32++; } } catch(e) {}
testToLowerCase();

try { if (Inst33 <= 1000 && typeof (testToUpperCase) != "undefined") {_RecordType("<759,774,34>",(testToUpperCase)); Inst33++; } } catch(e) {}
function testToUpperCase() {
  var s1 = "abcdefgABCDEFGH 12345";
try { if (Inst34 <= 1000 && typeof (s1) != "undefined") {_RecordType("<785,787,35>",(s1)); Inst34++; } } catch(e) {}
try { if (Inst35 <= 1000 && typeof (isLatin1) != "undefined") {_RecordType("<817,825,36>",(isLatin1)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (s1) != "undefined") {_RecordType("<826,828,36>",(s1)); Inst36++; } } catch(e) {}
  isLatin1(s1);
  true;
  // Latin1
try { if (Inst38 <= 1000 && typeof (s1.toUpperCase) != "undefined") {_RecordType("<862,876,39>",(s1.toUpperCase)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (s1) != "undefined") {_RecordType("<862,864,39>",(s1)); Inst39++; } } catch(e) {}
  var s2 = s1.toUpperCase();
try { if (Inst37 <= 1000 && typeof (s2) != "undefined") {_RecordType("<857,859,39>",(s2)); Inst37++; } } catch(e) {}
try { if (Inst40 <= 1000 && typeof (isLatin1) != "undefined") {_RecordType("<882,890,40>",(isLatin1)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (s2) != "undefined") {_RecordType("<891,893,40>",(s2)); Inst41++; } } catch(e) {}
  isLatin1(s2);
  true;
try { if (Inst42 <= 1000 && typeof (s2) != "undefined") {_RecordType("<906,908,42>",(s2)); Inst42++; } } catch(e) {}
  s2;
  "ABCDEFGABCDEFGH 12345";
try { if (Inst44 <= 1000 && typeof (s1.toLocaleUpperCase) != "undefined") {_RecordType("<944,964,44>",(s1.toLocaleUpperCase)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (s1) != "undefined") {_RecordType("<944,946,44>",(s1)); Inst45++; } } catch(e) {}
  s2 = s1.toLocaleUpperCase();
try { if (Inst43 <= 1000 && typeof (s2) != "undefined") {_RecordType("<939,941,44>",(s2)); Inst43++; } } catch(e) {}
try { if (Inst46 <= 1000 && typeof (isLatin1) != "undefined") {_RecordType("<970,978,45>",(isLatin1)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (s2) != "undefined") {_RecordType("<979,981,45>",(s2)); Inst47++; } } catch(e) {}
  isLatin1(s2);
  true;
try { if (Inst48 <= 1000 && typeof (s2) != "undefined") {_RecordType("<994,996,47>",(s2)); Inst48++; } } catch(e) {}
  s2;
  "ABCDEFGABCDEFGH 12345";
  // TwoByte
try { if (Inst50 <= 1000 && typeof ("abcdefg\u1200ABCDEFGH 12345\u1E0F".toUpperCase) != "undefined") {_RecordType("<1045,1092,50>",("abcdefg\u1200ABCDEFGH 12345\u1E0F".toUpperCase)); Inst50++; } } catch(e) {}
  s2 = "abcdefg\u1200ABCDEFGH 12345\u1E0F".toUpperCase();
try { if (Inst49 <= 1000 && typeof (s2) != "undefined") {_RecordType("<1040,1042,50>",(s2)); Inst49++; } } catch(e) {}
try { if (Inst51 <= 1000 && typeof (s2) != "undefined") {_RecordType("<1098,1100,51>",(s2)); Inst51++; } } catch(e) {}
  s2;
  "ABCDEFG\u1200ABCDEFGH 12345\u1E0E";
try { if (Inst53 <= 1000 && typeof ("abcdefg\u1200ABCDEFGH 12345\u1E0F".toLocaleUpperCase) != "undefined") {_RecordType("<1148,1201,53>",("abcdefg\u1200ABCDEFGH 12345\u1E0F".toLocaleUpperCase)); Inst53++; } } catch(e) {}
  s2 = "abcdefg\u1200ABCDEFGH 12345\u1E0F".toLocaleUpperCase();
try { if (Inst52 <= 1000 && typeof (s2) != "undefined") {_RecordType("<1143,1145,53>",(s2)); Inst52++; } } catch(e) {}
try { if (Inst54 <= 1000 && typeof (s2) != "undefined") {_RecordType("<1207,1209,54>",(s2)); Inst54++; } } catch(e) {}
  s2;
  "ABCDEFG\u1200ABCDEFGH 12345\u1E0E";
  // Tricky case: Latin1 character \u00FF maps to \u0178, a
  // non-Latin1 character.
  s1 = "ABC\u00FF";
try { if (Inst55 <= 1000 && typeof (s1) != "undefined") {_RecordType("<1339,1341,58>",(s1)); Inst55++; } } catch(e) {}
try { if (Inst56 <= 1000 && typeof (isLatin1) != "undefined") {_RecordType("<1359,1367,59>",(isLatin1)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (s1) != "undefined") {_RecordType("<1368,1370,59>",(s1)); Inst57++; } } catch(e) {}
  isLatin1(s1);
  true;
try { if (Inst59 <= 1000 && typeof (s1.toUpperCase) != "undefined") {_RecordType("<1388,1402,61>",(s1.toUpperCase)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (s1) != "undefined") {_RecordType("<1388,1390,61>",(s1)); Inst60++; } } catch(e) {}
  s2 = s1.toUpperCase();
try { if (Inst58 <= 1000 && typeof (s2) != "undefined") {_RecordType("<1383,1385,61>",(s2)); Inst58++; } } catch(e) {}
try { if (Inst61 <= 1000 && typeof (isLatin1) != "undefined") {_RecordType("<1408,1416,62>",(isLatin1)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (s2) != "undefined") {_RecordType("<1417,1419,62>",(s2)); Inst62++; } } catch(e) {}
  isLatin1(s2);
  false;
try { if (Inst63 <= 1000 && typeof (s2) != "undefined") {_RecordType("<1433,1435,64>",(s2)); Inst63++; } } catch(e) {}
  s2;
  "ABC\u0178";
}

try { if (Inst64 <= 1000 && typeof (testToUpperCase) != "undefined") {_RecordType("<1455,1470,68>",(testToUpperCase)); Inst64++; } } catch(e) {}
testToUpperCase();

