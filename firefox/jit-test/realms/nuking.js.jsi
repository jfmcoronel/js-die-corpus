var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Ensure nuking happens on a single target realm instead of compartment.
try { if (Inst1 <= 1000 && typeof (newGlobal) != "undefined") {_RecordType("<83,92,2>",(newGlobal)); Inst1++; } } catch(e) {}
var g1 = newGlobal({
  newCompartment: true
});
try { if (Inst0 <= 1000 && typeof (g1) != "undefined") {_RecordType("<78,80,2>",(g1)); Inst0++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (newGlobal) != "undefined") {_RecordType("<131,140,5>",(newGlobal)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (g1) != "undefined") {_RecordType("<164,166,6>",(g1)); Inst4++; } } catch(e) {}
var g2 = newGlobal({
  sameCompartmentAs: g1
});
try { if (Inst2 <= 1000 && typeof (g2) != "undefined") {_RecordType("<126,128,5>",(g2)); Inst2++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (g1) != "undefined") {_RecordType("<182,184,8>",(g1)); Inst7++; } } catch(e) {}
g2.other = g1;
try { if (Inst5 <= 1000 && typeof (g2.other) != "undefined") {_RecordType("<171,179,8>",(g2.other)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (g2) != "undefined") {_RecordType("<171,173,8>",(g2)); Inst6++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (g1.Math) != "undefined") {_RecordType("<195,202,9>",(g1.Math)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (g1) != "undefined") {_RecordType("<195,197,9>",(g1)); Inst10++; } } catch(e) {}
var o1 = g1.Math;
try { if (Inst8 <= 1000 && typeof (o1) != "undefined") {_RecordType("<190,192,9>",(o1)); Inst8++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (g2.Math) != "undefined") {_RecordType("<213,220,10>",(g2.Math)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (g2) != "undefined") {_RecordType("<213,215,10>",(g2)); Inst13++; } } catch(e) {}
var o2 = g2.Math; // o1 is now dead.
try { if (Inst11 <= 1000 && typeof (o2) != "undefined") {_RecordType("<208,210,10>",(o2)); Inst11++; } } catch(e) {}

ex = null;
try { if (Inst14 <= 1000 && typeof (ex) != "undefined") {_RecordType("<242,244,12>",(ex)); Inst14++; } } catch(e) {}

try { if (Inst17 <= 1000 && typeof (e) != "undefined") {_RecordType("<287,288,17>",(e)); Inst17++; } } catch(e) {}
try {
try { if (Inst15 <= 1000 && typeof (o1.abs) != "undefined") {_RecordType("<262,268,15>",(o1.abs)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (o1) != "undefined") {_RecordType("<262,264,15>",(o1)); Inst16++; } } catch(e) {}
  o1.abs(1);
  1;
} catch (e) {
try { if (Inst19 <= 1000 && typeof (e) != "undefined") {_RecordType("<299,300,18>",(e)); Inst19++; } } catch(e) {}
  ex = e;
try { if (Inst18 <= 1000 && typeof (ex) != "undefined") {_RecordType("<294,296,18>",(ex)); Inst18++; } } catch(e) {}
}

try { if (Inst20 <= 1000 && typeof (ex.toString().includes) != "undefined") {_RecordType("<305,327,21>",(ex.toString().includes)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (ex.toString) != "undefined") {_RecordType("<305,316,21>",(ex.toString)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (ex) != "undefined") {_RecordType("<305,307,21>",(ex)); Inst22++; } } catch(e) {}
ex.toString().includes("dead object");
true;
try { if (Inst23 <= 1000 && typeof (o2.abs) != "undefined") {_RecordType("<350,356,23>",(o2.abs)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (o2) != "undefined") {_RecordType("<350,352,23>",(o2)); Inst24++; } } catch(e) {}
o2.abs(1);
1;
try { if (Inst25 <= 1000 && typeof (g2.evaluate) != "undefined") {_RecordType("<364,375,25>",(g2.evaluate)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (g2) != "undefined") {_RecordType("<364,366,25>",(g2)); Inst26++; } } catch(e) {}
g2.evaluate("other.Math.abs(-2)");
2;
// Attempting to create a new wrapper targeting nuked realm g1 should return a
// dead wrapper now. Note that we can't use g1 directly because that's now a
// dead object, so we try to get to g1 via g2.
ex = null;
try { if (Inst27 <= 1000 && typeof (ex) != "undefined") {_RecordType("<605,607,30>",(ex)); Inst27++; } } catch(e) {}

try { if (Inst31 <= 1000 && typeof (e) != "undefined") {_RecordType("<655,656,34>",(e)); Inst31++; } } catch(e) {}
try {
try { if (Inst28 <= 1000 && typeof (g2.other.toString) != "undefined") {_RecordType("<625,642,33>",(g2.other.toString)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (g2.other) != "undefined") {_RecordType("<625,633,33>",(g2.other)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (g2) != "undefined") {_RecordType("<625,627,33>",(g2)); Inst30++; } } catch(e) {}
  g2.other.toString();
} catch (e) {
try { if (Inst33 <= 1000 && typeof (e) != "undefined") {_RecordType("<667,668,35>",(e)); Inst33++; } } catch(e) {}
  ex = e;
try { if (Inst32 <= 1000 && typeof (ex) != "undefined") {_RecordType("<662,664,35>",(ex)); Inst32++; } } catch(e) {}
}

try { if (Inst34 <= 1000 && typeof (ex.toString().includes) != "undefined") {_RecordType("<673,695,38>",(ex.toString().includes)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (ex.toString) != "undefined") {_RecordType("<673,684,38>",(ex.toString)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (ex) != "undefined") {_RecordType("<673,675,38>",(ex)); Inst36++; } } catch(e) {}
ex.toString().includes("dead object");
true;
// Nuke g2 too. We have nuked all realms in its compartment so we should now
// throw if we try to create a new outgoing wrapper.
try { if (Inst37 <= 1000 && typeof (g2.evaluate) != "undefined") {_RecordType("<848,859,42>",(g2.evaluate)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (g2) != "undefined") {_RecordType("<848,850,42>",(g2)); Inst38++; } } catch(e) {}
g2.evaluate("(" + function () {
  var ex = null;
try { if (Inst39 <= 1000 && typeof (ex) != "undefined") {_RecordType("<886,888,43>",(ex)); Inst39++; } } catch(e) {}

try { if (Inst42 <= 1000 && typeof (e) != "undefined") {_RecordType("<976,977,49>",(e)); Inst42++; } } catch(e) {}
  try {
try { if (Inst40 <= 1000 && typeof (newGlobal({
      newCompartment: true
    }).Array) != "undefined") {_RecordType("<910,961,46>",(newGlobal({
      newCompartment: true
    }).Array)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (newGlobal) != "undefined") {_RecordType("<910,919,46>",(newGlobal)); Inst41++; } } catch(e) {}
    newGlobal({
      newCompartment: true
    }).Array();
  } catch (e) {
try { if (Inst44 <= 1000 && typeof (e) != "undefined") {_RecordType("<990,991,50>",(e)); Inst44++; } } catch(e) {}
    ex = e;
try { if (Inst43 <= 1000 && typeof (ex) != "undefined") {_RecordType("<985,987,50>",(ex)); Inst43++; } } catch(e) {}
  }

try { if (Inst45 <= 1000 && typeof (ex.toString().includes) != "undefined") {_RecordType("<1000,1022,53>",(ex.toString().includes)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (ex.toString) != "undefined") {_RecordType("<1000,1011,53>",(ex.toString)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (ex) != "undefined") {_RecordType("<1000,1002,53>",(ex)); Inst47++; } } catch(e) {}
  ex.toString().includes('dead object');
  true;
} + ")()");

