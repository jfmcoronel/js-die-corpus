var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst1 <= 1000 && typeof (newGlobal) != "undefined") {_RecordType("<8,17,1>",(newGlobal)); Inst1++; } } catch(e) {}
var g = newGlobal();
try { if (Inst0 <= 1000 && typeof (g) != "undefined") {_RecordType("<4,5,1>",(g)); Inst0++; } } catch(e) {}

try { if (Inst2 <= 1000 && typeof (testArrayOf) != "undefined") {_RecordType("<31,42,3>",(testArrayOf)); Inst2++; } } catch(e) {}
function testArrayOf() {
try { if (Inst4 <= 1000 && typeof (Array.of.call) != "undefined") {_RecordType("<57,70,4>",(Array.of.call)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Array.of) != "undefined") {_RecordType("<57,65,4>",(Array.of)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Array) != "undefined") {_RecordType("<57,62,4>",(Array)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (g.Array) != "undefined") {_RecordType("<71,78,4>",(g.Array)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (g) != "undefined") {_RecordType("<71,72,4>",(g)); Inst8++; } } catch(e) {}
  var a = Array.of.call(g.Array);
try { if (Inst3 <= 1000 && typeof (a) != "undefined") {_RecordType("<53,54,4>",(a)); Inst3++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (a) != "undefined") {_RecordType("<83,84,5>",(a)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (g.Array) != "undefined") {_RecordType("<96,103,5>",(g.Array)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (g) != "undefined") {_RecordType("<96,97,5>",(g)); Inst11++; } } catch(e) {}
  a instanceof g.Array;
  true;
}

try { if (Inst12 <= 1000 && typeof (testArrayOf) != "undefined") {_RecordType("<116,127,9>",(testArrayOf)); Inst12++; } } catch(e) {}
testArrayOf();

try { if (Inst13 <= 1000 && typeof (testPromiseThen) != "undefined") {_RecordType("<141,156,11>",(testPromiseThen)); Inst13++; } } catch(e) {}
function testPromiseThen() {
try { if (Inst15 <= 1000 && typeof (Promise.resolve) != "undefined") {_RecordType("<171,186,12>",(Promise.resolve)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Promise) != "undefined") {_RecordType("<171,178,12>",(Promise)); Inst16++; } } catch(e) {}
  var p = Promise.resolve(0);
try { if (Inst14 <= 1000 && typeof (p) != "undefined") {_RecordType("<167,168,12>",(p)); Inst14++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (g.Promise) != "undefined") {_RecordType("<209,218,13>",(g.Promise)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (g) != "undefined") {_RecordType("<209,210,13>",(g)); Inst20++; } } catch(e) {}
  p.constructor = g.Promise;
try { if (Inst17 <= 1000 && typeof (p.constructor) != "undefined") {_RecordType("<193,206,13>",(p.constructor)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (p) != "undefined") {_RecordType("<193,194,13>",(p)); Inst18++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (p.then) != "undefined") {_RecordType("<230,236,14>",(p.then)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (p) != "undefined") {_RecordType("<230,231,14>",(p)); Inst23++; } } catch(e) {}
  var r = p.then(() => {
    ;
  });
try { if (Inst21 <= 1000 && typeof (r) != "undefined") {_RecordType("<226,227,14>",(r)); Inst21++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (r) != "undefined") {_RecordType("<259,260,17>",(r)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (g.Promise) != "undefined") {_RecordType("<272,281,17>",(g.Promise)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (g) != "undefined") {_RecordType("<272,273,17>",(g)); Inst26++; } } catch(e) {}
  r instanceof g.Promise;
  true;
}

try { if (Inst27 <= 1000 && typeof (testPromiseThen) != "undefined") {_RecordType("<294,309,21>",(testPromiseThen)); Inst27++; } } catch(e) {}
testPromiseThen();

try { if (Inst28 <= 1000 && typeof (testPromiseCatch) != "undefined") {_RecordType("<323,339,23>",(testPromiseCatch)); Inst28++; } } catch(e) {}
function testPromiseCatch() {
try { if (Inst32 <= 1000 && typeof (g.Promise.prototype.then) != "undefined") {_RecordType("<371,395,24>",(g.Promise.prototype.then)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (g.Promise.prototype) != "undefined") {_RecordType("<371,390,24>",(g.Promise.prototype)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (g.Promise) != "undefined") {_RecordType("<371,380,24>",(g.Promise)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (g) != "undefined") {_RecordType("<371,372,24>",(g)); Inst35++; } } catch(e) {}
  Boolean.prototype.then = g.Promise.prototype.then;
try { if (Inst29 <= 1000 && typeof (Boolean.prototype.then) != "undefined") {_RecordType("<346,368,24>",(Boolean.prototype.then)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (Boolean.prototype) != "undefined") {_RecordType("<346,363,24>",(Boolean.prototype)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (Boolean) != "undefined") {_RecordType("<346,353,24>",(Boolean)); Inst31++; } } catch(e) {}

try { if (Inst36 <= 1000 && typeof (Promise.prototype.catch.call) != "undefined") {_RecordType("<407,435,26>",(Promise.prototype.catch.call)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (Promise.prototype.catch) != "undefined") {_RecordType("<407,430,26>",(Promise.prototype.catch)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (Promise.prototype) != "undefined") {_RecordType("<407,424,26>",(Promise.prototype)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (Promise) != "undefined") {_RecordType("<407,414,26>",(Promise)); Inst39++; } } catch(e) {}
  (() => Promise.prototype.catch.call(false))();

try { if (Inst40 <= 1000 && typeof (g.TypeError) != "undefined") {_RecordType("<450,461,28>",(g.TypeError)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (g) != "undefined") {_RecordType("<450,451,28>",(g)); Inst41++; } } catch(e) {}
  g.TypeError;
}

try { if (Inst42 <= 1000 && typeof (testPromiseCatch) != "undefined") {_RecordType("<466,482,31>",(testPromiseCatch)); Inst42++; } } catch(e) {}
testPromiseCatch();

