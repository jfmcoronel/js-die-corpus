var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (f) != "undefined") {_RecordType("<9,10,1>",(f)); Inst0++; } } catch(e) {}
function f() {
  var propNames = ["a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "x", "y"];
try { if (Inst1 <= 1000 && typeof (propNames) != "undefined") {_RecordType("<21,30,2>",(propNames)); Inst1++; } } catch(e) {}
  var arr = [];
try { if (Inst2 <= 1000 && typeof (arr) != "undefined") {_RecordType("<101,104,3>",(arr)); Inst2++; } } catch(e) {}

  for (var i = 0; i < 64; i++) {
try { if (Inst3 <= 1000 && typeof (i) != "undefined") {_RecordType("<123,124,5>",(i)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (i) != "undefined") {_RecordType("<130,131,5>",(i)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (i) != "undefined") {_RecordType("<138,139,5>",(i)); Inst5++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (arr.push) != "undefined") {_RecordType("<149,157,6>",(arr.push)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (arr) != "undefined") {_RecordType("<149,152,6>",(arr)); Inst7++; } } catch(e) {}
    arr.push({
      x: 1,
      y: 2
    });
  }

  for (var i = 0; i < 64; i++) {
try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<207,208,12>",(i)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<214,215,12>",(i)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<222,223,12>",(i)); Inst10++; } } catch(e) {}
    // Make sure there are expandos with dynamic slots for each object.
    for (var j = 0; j < propNames.length; j++) {
try { if (Inst11 <= 1000 && typeof (j) != "undefined") {_RecordType("<314,315,14>",(j)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (j) != "undefined") {_RecordType("<321,322,14>",(j)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (propNames.length) != "undefined") {_RecordType("<325,341,14>",(propNames.length)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (propNames) != "undefined") {_RecordType("<325,334,14>",(propNames)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (j) != "undefined") {_RecordType("<343,344,14>",(j)); Inst15++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (j) != "undefined") {_RecordType("<379,380,15>",(j)); Inst21++; } } catch(e) {}
      arr[i][propNames[j]] = j;
try { if (Inst16 <= 1000 && typeof (arr[i][propNames[j]]) != "undefined") {_RecordType("<356,376,15>",(arr[i][propNames[j]])); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (arr[i]) != "undefined") {_RecordType("<356,362,15>",(arr[i])); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (arr) != "undefined") {_RecordType("<356,359,15>",(arr)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (propNames[j]) != "undefined") {_RecordType("<363,375,15>",(propNames[j])); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (propNames) != "undefined") {_RecordType("<363,372,15>",(propNames)); Inst20++; } } catch(e) {}
    }
  }

  var res = 0;
try { if (Inst22 <= 1000 && typeof (res) != "undefined") {_RecordType("<399,402,19>",(res)); Inst22++; } } catch(e) {}

  for (var i = 0; i < 100000; i++) {
try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<420,421,21>",(i)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<427,428,21>",(i)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<439,440,21>",(i)); Inst25++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (arr[i % 64]) != "undefined") {_RecordType("<458,469,22>",(arr[i % 64])); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (arr) != "undefined") {_RecordType("<458,461,22>",(arr)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (i) != "undefined") {_RecordType("<462,463,22>",(i)); Inst29++; } } catch(e) {}
    var o = arr[i % 64];
try { if (Inst26 <= 1000 && typeof (o) != "undefined") {_RecordType("<454,455,22>",(o)); Inst26++; } } catch(e) {}
try { if (Inst31 <= 1000 && typeof (propNames[i % propNames.length]) != "undefined") {_RecordType("<483,514,23>",(propNames[i % propNames.length])); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (propNames) != "undefined") {_RecordType("<483,492,23>",(propNames)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (i) != "undefined") {_RecordType("<493,494,23>",(i)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (propNames.length) != "undefined") {_RecordType("<497,513,23>",(propNames.length)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (propNames) != "undefined") {_RecordType("<497,506,23>",(propNames)); Inst35++; } } catch(e) {}
    var p = propNames[i % propNames.length];
try { if (Inst30 <= 1000 && typeof (p) != "undefined") {_RecordType("<479,480,23>",(p)); Inst30++; } } catch(e) {}
try { if (Inst37 <= 1000 && typeof (o[p]) != "undefined") {_RecordType("<527,531,24>",(o[p])); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (o) != "undefined") {_RecordType("<527,528,24>",(o)); Inst38++; } } catch(e) {}
    res += o[p];
try { if (Inst36 <= 1000 && typeof (res) != "undefined") {_RecordType("<520,523,24>",(res)); Inst36++; } } catch(e) {}
  }

try { if (Inst39 <= 1000 && typeof (res) != "undefined") {_RecordType("<540,543,27>",(res)); Inst39++; } } catch(e) {}
  res;
  549984;
}

try { if (Inst40 <= 1000 && typeof (f) != "undefined") {_RecordType("<558,559,31>",(f)); Inst40++; } } catch(e) {}
f();

