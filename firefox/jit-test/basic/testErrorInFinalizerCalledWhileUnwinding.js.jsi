var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
var finalizerRun = false;
try { if (Inst0 <= 1000 && typeof (finalizerRun) != "undefined") {_RecordType("<4,16,1>",(finalizerRun)); Inst0++; } } catch(e) {}
var caught = false;
try { if (Inst1 <= 1000 && typeof (caught) != "undefined") {_RecordType("<30,36,2>",(caught)); Inst1++; } } catch(e) {}

try { if (Inst2 <= 1000 && typeof (foo) != "undefined") {_RecordType("<56,59,4>",(foo)); Inst2++; } } catch(e) {}
function foo(arr) {
try { if (Inst3 <= 1000 && typeof (arr) != "undefined") {_RecordType("<60,63,4>",(arr)); Inst3++; } } catch(e) {}
  finalizerRun = true;
try { if (Inst4 <= 1000 && typeof (finalizerRun) != "undefined") {_RecordType("<69,81,5>",(finalizerRun)); Inst4++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (not_defined) != "undefined") {_RecordType("<99,110,6>",(not_defined)); Inst5++; } } catch(e) {}
  return not_defined;
}

try { if (Inst6 <= 1000 && typeof (gen) != "undefined") {_RecordType("<125,128,9>",(gen)); Inst6++; } } catch(e) {}
function* gen() {
  try {
    yield 1;
  } finally {
try { if (Inst7 <= 1000 && typeof (foo) != "undefined") {_RecordType("<172,175,13>",(foo)); Inst7++; } } catch(e) {}
    foo();
  }
}

try { if (Inst8 <= 1000 && typeof (test) != "undefined") {_RecordType("<195,199,17>",(test)); Inst8++; } } catch(e) {}
function test() {
  var i_have_locals;
try { if (Inst9 <= 1000 && typeof (i_have_locals) != "undefined") {_RecordType("<210,223,18>",(i_have_locals)); Inst9++; } } catch(e) {}

  for (i of gen()) {
try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<233,234,20>",(i)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (gen) != "undefined") {_RecordType("<238,241,20>",(gen)); Inst11++; } } catch(e) {}
    ;
  }
}

try { if (Inst13 <= 1000 && typeof (e) != "undefined") {_RecordType("<285,286,27>",(e)); Inst13++; } } catch(e) {}
try {
try { if (Inst12 <= 1000 && typeof (test) != "undefined") {_RecordType("<268,272,26>",(test)); Inst12++; } } catch(e) {}
  test();
} catch (e) {
  caught = true;
try { if (Inst14 <= 1000 && typeof (caught) != "undefined") {_RecordType("<292,298,28>",(caught)); Inst14++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (e) != "undefined") {_RecordType("<314,315,29>",(e)); Inst15++; } } catch(e) {}
  '' + e;
  "ReferenceError: not_defined is not defined";
}

try { if (Inst16 <= 1000 && typeof (finalizerRun) != "undefined") {_RecordType("<368,380,33>",(finalizerRun)); Inst16++; } } catch(e) {}
finalizerRun;
true;
try { if (Inst17 <= 1000 && typeof (caught) != "undefined") {_RecordType("<388,394,35>",(caught)); Inst17++; } } catch(e) {}
caught;
true;

