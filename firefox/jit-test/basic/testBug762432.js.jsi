var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (getter) != "undefined") {_RecordType("<9,15,1>",(getter)); Inst0++; } } catch(e) {}
function getter() {
  return 1;
}

try { if (Inst1 <= 1000 && typeof (setter) != "undefined") {_RecordType("<44,50,5>",(setter)); Inst1++; } } catch(e) {}
function setter() {
  ;
}

try { if (Inst2 <= 1000 && typeof (getDescriptor) != "undefined") {_RecordType("<71,84,9>",(getDescriptor)); Inst2++; } } catch(e) {}
function getDescriptor(target, name) {
try { if (Inst3 <= 1000 && typeof (target) != "undefined") {_RecordType("<85,91,9>",(target)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (name) != "undefined") {_RecordType("<93,97,9>",(name)); Inst4++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (name) != "undefined") {_RecordType("<107,111,10>",(name)); Inst5++; } } catch(e) {}
  if (name != 'prop') {
try { if (Inst6 <= 1000 && typeof (name) != "undefined") {_RecordType("<158,162,11>",(name)); Inst6++; } } catch(e) {}
    throw "Unknown property: " + name;
  }

try { if (Inst7 <= 1000 && typeof (getter) != "undefined") {_RecordType("<235,241,17>",(getter)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (setter) != "undefined") {_RecordType("<252,258,18>",(setter)); Inst8++; } } catch(e) {}
  return {
    configurable: true,
    enumerable: true,
    get: getter,
    set: setter
  };
}

try { if (Inst10 <= 1000 && typeof (getDescriptor) != "undefined") {_RecordType("<311,324,23>",(getDescriptor)); Inst10++; } } catch(e) {}
var handler = {
  getOwnPropertyDescriptor: getDescriptor
}; // Make sure that __lookup{Getter,Setter}__ works on proxies.
try { if (Inst9 <= 1000 && typeof (handler) != "undefined") {_RecordType("<271,278,22>",(handler)); Inst9++; } } catch(e) {}

try { if (Inst12 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<407,412,26>",(Proxy)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (handler) != "undefined") {_RecordType("<417,424,26>",(handler)); Inst13++; } } catch(e) {}
var proxy = new Proxy({}, handler);
try { if (Inst11 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<395,400,26>",(proxy)); Inst11++; } } catch(e) {}

try { if (Inst14 <= 1000 && typeof (Object.prototype.__lookupGetter__.call) != "undefined") {_RecordType("<428,466,28>",(Object.prototype.__lookupGetter__.call)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Object.prototype.__lookupGetter__) != "undefined") {_RecordType("<428,461,28>",(Object.prototype.__lookupGetter__)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<428,444,28>",(Object.prototype)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Object) != "undefined") {_RecordType("<428,434,28>",(Object)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<467,472,28>",(proxy)); Inst18++; } } catch(e) {}
Object.prototype.__lookupGetter__.call(proxy, 'prop');

try { if (Inst19 <= 1000 && typeof (getter) != "undefined") {_RecordType("<484,490,30>",(getter)); Inst19++; } } catch(e) {}
getter();

try { if (Inst20 <= 1000 && typeof (Object.prototype.__lookupSetter__.call) != "undefined") {_RecordType("<495,533,32>",(Object.prototype.__lookupSetter__.call)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Object.prototype.__lookupSetter__) != "undefined") {_RecordType("<495,528,32>",(Object.prototype.__lookupSetter__)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<495,511,32>",(Object.prototype)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Object) != "undefined") {_RecordType("<495,501,32>",(Object)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (proxy) != "undefined") {_RecordType("<534,539,32>",(proxy)); Inst24++; } } catch(e) {}
Object.prototype.__lookupSetter__.call(proxy, 'prop');

try { if (Inst25 <= 1000 && typeof (setter) != "undefined") {_RecordType("<551,557,34>",(setter)); Inst25++; } } catch(e) {}
setter();

