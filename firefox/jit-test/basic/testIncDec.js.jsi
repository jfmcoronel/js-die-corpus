var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (testIncDec2) != "undefined") {_RecordType("<9,20,1>",(testIncDec2)); Inst0++; } } catch(e) {}
function testIncDec2(ii) {
try { if (Inst1 <= 1000 && typeof (ii) != "undefined") {_RecordType("<21,23,1>",(ii)); Inst1++; } } catch(e) {}
  var x = [];
try { if (Inst2 <= 1000 && typeof (x) != "undefined") {_RecordType("<33,34,2>",(x)); Inst2++; } } catch(e) {}

  for (let j = 0; j < 5; ++j) {
try { if (Inst3 <= 1000 && typeof (j) != "undefined") {_RecordType("<53,54,4>",(j)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (j) != "undefined") {_RecordType("<60,61,4>",(j)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (j) != "undefined") {_RecordType("<69,70,4>",(j)); Inst5++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (j) != "undefined") {_RecordType("<83,84,5>",(j)); Inst7++; } } catch(e) {}
    ii = j;
try { if (Inst6 <= 1000 && typeof (ii) != "undefined") {_RecordType("<78,80,5>",(ii)); Inst6++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (j) != "undefined") {_RecordType("<95,96,6>",(j)); Inst9++; } } catch(e) {}
    jj = j;
try { if (Inst8 <= 1000 && typeof (jj) != "undefined") {_RecordType("<90,92,6>",(jj)); Inst8++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (j) != "undefined") {_RecordType("<111,112,7>",(j)); Inst11++; } } catch(e) {}
    var kk = j;
try { if (Inst10 <= 1000 && typeof (kk) != "undefined") {_RecordType("<106,108,7>",(kk)); Inst10++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (x.push) != "undefined") {_RecordType("<118,124,8>",(x.push)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (x) != "undefined") {_RecordType("<118,119,8>",(x)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (ii) != "undefined") {_RecordType("<125,127,8>",(ii)); Inst14++; } } catch(e) {}
    x.push(ii--);
try { if (Inst15 <= 1000 && typeof (x.push) != "undefined") {_RecordType("<136,142,9>",(x.push)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (x) != "undefined") {_RecordType("<136,137,9>",(x)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (jj) != "undefined") {_RecordType("<143,145,9>",(jj)); Inst17++; } } catch(e) {}
    x.push(jj--);
try { if (Inst18 <= 1000 && typeof (x.push) != "undefined") {_RecordType("<154,160,10>",(x.push)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (x) != "undefined") {_RecordType("<154,155,10>",(x)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (kk) != "undefined") {_RecordType("<161,163,10>",(kk)); Inst20++; } } catch(e) {}
    x.push(kk--);
try { if (Inst21 <= 1000 && typeof (x.push) != "undefined") {_RecordType("<172,178,11>",(x.push)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (x) != "undefined") {_RecordType("<172,173,11>",(x)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (ii) != "undefined") {_RecordType("<181,183,11>",(ii)); Inst23++; } } catch(e) {}
    x.push(++ii);
try { if (Inst24 <= 1000 && typeof (x.push) != "undefined") {_RecordType("<190,196,12>",(x.push)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (x) != "undefined") {_RecordType("<190,191,12>",(x)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (jj) != "undefined") {_RecordType("<199,201,12>",(jj)); Inst26++; } } catch(e) {}
    x.push(++jj);
try { if (Inst27 <= 1000 && typeof (x.push) != "undefined") {_RecordType("<208,214,13>",(x.push)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (x) != "undefined") {_RecordType("<208,209,13>",(x)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (kk) != "undefined") {_RecordType("<217,219,13>",(kk)); Inst29++; } } catch(e) {}
    x.push(++kk);
  }

try { if (Inst30 <= 1000 && typeof (x.join) != "undefined") {_RecordType("<236,242,16>",(x.join)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (x) != "undefined") {_RecordType("<236,237,16>",(x)); Inst31++; } } catch(e) {}
  return x.join(",");
}

try { if (Inst32 <= 1000 && typeof (testIncDec) != "undefined") {_RecordType("<261,271,19>",(testIncDec)); Inst32++; } } catch(e) {}
function testIncDec() {
try { if (Inst33 <= 1000 && typeof (testIncDec2) != "undefined") {_RecordType("<285,296,20>",(testIncDec2)); Inst33++; } } catch(e) {}
  return testIncDec2(0);
}

try { if (Inst34 <= 1000 && typeof (testIncDec) != "undefined") {_RecordType("<304,314,23>",(testIncDec)); Inst34++; } } catch(e) {}
testIncDec();
"0,0,0,0,0,0,1,1,1,1,1,1,2,2,2,2,2,2,3,3,3,3,3,3,4,4,4,4,4,4";

