var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
var output = [];
try { if (Inst0 <= 1000 && typeof (output) != "undefined") {_RecordType("<4,10,1>",(output)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (g) != "undefined") {_RecordType("<27,28,3>",(g)); Inst1++; } } catch(e) {}
function g(s) {
try { if (Inst2 <= 1000 && typeof (s) != "undefined") {_RecordType("<29,30,3>",(s)); Inst2++; } } catch(e) {}
  for (var i = 0; i < s.length; i++) {
try { if (Inst3 <= 1000 && typeof (i) != "undefined") {_RecordType("<45,46,4>",(i)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (i) != "undefined") {_RecordType("<52,53,4>",(i)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (s.length) != "undefined") {_RecordType("<56,64,4>",(s.length)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (s) != "undefined") {_RecordType("<56,57,4>",(s)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<66,67,4>",(i)); Inst7++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (s.charAt) != "undefined") {_RecordType("<77,85,5>",(s.charAt)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (s) != "undefined") {_RecordType("<77,78,5>",(s)); Inst9++; } } catch(e) {}
    s.charAt();
  }
}

try { if (Inst10 <= 1000 && typeof (h) != "undefined") {_RecordType("<105,106,9>",(h)); Inst10++; } } catch(e) {}
function h(f, inputs) {
try { if (Inst11 <= 1000 && typeof (f) != "undefined") {_RecordType("<107,108,9>",(f)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (inputs) != "undefined") {_RecordType("<110,116,9>",(inputs)); Inst12++; } } catch(e) {}
  results = [];
try { if (Inst13 <= 1000 && typeof (results) != "undefined") {_RecordType("<122,129,10>",(results)); Inst13++; } } catch(e) {}

  for (var j = 0; j < 99; ++j) {
try { if (Inst14 <= 1000 && typeof (j) != "undefined") {_RecordType("<148,149,12>",(j)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (j) != "undefined") {_RecordType("<155,156,12>",(j)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (j) != "undefined") {_RecordType("<165,166,12>",(j)); Inst16++; } } catch(e) {}
    for (var k = 0; k < 99; ++k) {
try { if (Inst17 <= 1000 && typeof (k) != "undefined") {_RecordType("<183,184,13>",(k)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (k) != "undefined") {_RecordType("<190,191,13>",(k)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (k) != "undefined") {_RecordType("<200,201,13>",(k)); Inst19++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (e) != "undefined") {_RecordType("<259,260,16>",(e)); Inst23++; } } catch(e) {}
      try {
try { if (Inst20 <= 1000 && typeof (results.push) != "undefined") {_RecordType("<225,237,15>",(results.push)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (results) != "undefined") {_RecordType("<225,232,15>",(results)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (f) != "undefined") {_RecordType("<238,239,15>",(f)); Inst22++; } } catch(e) {}
        results.push(f());
      } catch (e) {
        ;
      }
    }
  }

try { if (Inst24 <= 1000 && typeof (g) != "undefined") {_RecordType("<295,296,22>",(g)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (uneval) != "undefined") {_RecordType("<297,303,22>",(uneval)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (results) != "undefined") {_RecordType("<304,311,22>",(results)); Inst26++; } } catch(e) {}
  g(uneval(results));
}

try { if (Inst28 <= 1000 && typeof (e) != "undefined") {_RecordType("<340,341,27>",(e)); Inst28++; } } catch(e) {}
try {
try { if (Inst27 <= 1000 && typeof (x) != "undefined") {_RecordType("<326,327,26>",(x)); Inst27++; } } catch(e) {}
  x();
} catch (e) {
  ;
}

m = function (y) {
try { if (Inst30 <= 1000 && typeof (y) != "undefined") {_RecordType("<366,367,31>",(y)); Inst30++; } } catch(e) {}
try { if (Inst31 <= 1000 && typeof (y) != "undefined") {_RecordType("<380,381,32>",(y)); Inst31++; } } catch(e) {}
  return y;
};
try { if (Inst29 <= 1000 && typeof (m) != "undefined") {_RecordType("<352,353,31>",(m)); Inst29++; } } catch(e) {}

try { if (Inst32 <= 1000 && typeof (h) != "undefined") {_RecordType("<387,388,35>",(h)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (m) != "undefined") {_RecordType("<389,390,35>",(m)); Inst33++; } } catch(e) {}
h(m, []);

try { if (Inst38 <= 1000 && typeof (e) != "undefined") {_RecordType("<445,446,40>",(e)); Inst38++; } } catch(e) {}
try {
try { if (Inst34 <= 1000 && typeof (output.push) != "undefined") {_RecordType("<406,417,38>",(output.push)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (output) != "undefined") {_RecordType("<406,412,38>",(output)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (b) != "undefined") {_RecordType("<418,419,38>",(b)); Inst36++; } } catch(e) {}
  output.push(b);
  let b = "";
try { if (Inst37 <= 1000 && typeof (b) != "undefined") {_RecordType("<428,429,39>",(b)); Inst37++; } } catch(e) {}
} catch (e) {
  ;
}

try { if (Inst39 <= 1000 && typeof (output.length) != "undefined") {_RecordType("<457,470,44>",(output.length)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (output) != "undefined") {_RecordType("<457,463,44>",(output)); Inst40++; } } catch(e) {}
output.length;
0;

