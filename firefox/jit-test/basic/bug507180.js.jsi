var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
var o = {
  valueOf: function () {
    return {
      toString: function () {
        return "fail";
      }
    };
  },
  toString: function () {
    return "good";
  }
};
try { if (Inst0 <= 1000 && typeof (o) != "undefined") {_RecordType("<4,5,1>",(o)); Inst0++; } } catch(e) {}
var p = {
  valueOf: function () {
    return {
      toString: function () {
        return "0";
      }
    };
  },
  toString: function () {
    return "7";
  }
};
try { if (Inst1 <= 1000 && typeof (p) != "undefined") {_RecordType("<177,178,13>",(p)); Inst1++; } } catch(e) {}
var q = {
  toString: function () {
    return {
      valueOf: function () {
        return "0";
      }
    };
  },
  valueOf: function () {
    return "7";
  }
};
try { if (Inst2 <= 1000 && typeof (q) != "undefined") {_RecordType("<344,345,25>",(q)); Inst2++; } } catch(e) {}

try { if (Inst3 <= 1000 && typeof (assert) != "undefined") {_RecordType("<516,522,38>",(assert)); Inst3++; } } catch(e) {}
function assert(b, s) {
try { if (Inst4 <= 1000 && typeof (b) != "undefined") {_RecordType("<523,524,38>",(b)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (s) != "undefined") {_RecordType("<526,527,38>",(s)); Inst5++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (b) != "undefined") {_RecordType("<537,538,39>",(b)); Inst6++; } } catch(e) {}
  if (b) {
    return;
  }

try { if (Inst7 <= 1000 && typeof (s) != "undefined") {_RecordType("<603,604,43>",(s)); Inst7++; } } catch(e) {}
  "imacro produces incorrect result for " + s;
  "fail";
}

try { if (Inst8 <= 1000 && typeof (run) != "undefined") {_RecordType("<628,631,47>",(run)); Inst8++; } } catch(e) {}
function run() {
  for (var i = 0; i < 5; ++i) {
try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<647,648,48>",(i)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<654,655,48>",(i)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<663,664,48>",(i)); Inst11++; } } catch(e) {}
    // equality / inequality
try { if (Inst12 <= 1000 && typeof (o) != "undefined") {_RecordType("<703,704,50>",(o)); Inst12++; } } catch(e) {}
    !(o == "fail");
    "obj == any";
try { if (Inst13 <= 1000 && typeof (o) != "undefined") {_RecordType("<751,752,52>",(o)); Inst13++; } } catch(e) {}
    !("fail" == o);
    "any == obj";
try { if (Inst14 <= 1000 && typeof (o) != "undefined") {_RecordType("<779,780,54>",(o)); Inst14++; } } catch(e) {}
    !(o != "good");
    "obj != any";
try { if (Inst15 <= 1000 && typeof (o) != "undefined") {_RecordType("<827,828,56>",(o)); Inst15++; } } catch(e) {}
    !("good" != o);
    "any != obj";
try { if (Inst16 <= 1000 && typeof (p) != "undefined") {_RecordType("<856,857,58>",(p)); Inst16++; } } catch(e) {}
    !((p | 3) != 7);
    "obj | any";
try { if (Inst17 <= 1000 && typeof (p) != "undefined") {_RecordType("<898,899,60>",(p)); Inst17++; } } catch(e) {}
    !((3 | p) != 7);
    "any | obj";
try { if (Inst18 <= 1000 && typeof (p) != "undefined") {_RecordType("<932,933,62>",(p)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (p) != "undefined") {_RecordType("<936,937,62>",(p)); Inst19++; } } catch(e) {}
    !((p | p) != 7);
    "obj | obj";
try { if (Inst20 <= 1000 && typeof (p) != "undefined") {_RecordType("<970,971,64>",(p)); Inst20++; } } catch(e) {}
    !((p & 3) != 3);
    "obj & any";
try { if (Inst21 <= 1000 && typeof (p) != "undefined") {_RecordType("<1012,1013,66>",(p)); Inst21++; } } catch(e) {}
    !((3 & p) != 3);
    "any & obj";
try { if (Inst22 <= 1000 && typeof (p) != "undefined") {_RecordType("<1046,1047,68>",(p)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (p) != "undefined") {_RecordType("<1050,1051,68>",(p)); Inst23++; } } catch(e) {}
    !((p & p) != 7);
    "obj & obj";
try { if (Inst24 <= 1000 && typeof (p) != "undefined") {_RecordType("<1083,1084,70>",(p)); Inst24++; } } catch(e) {}
    !(p * 3 != 21);
    "obj * any";
try { if (Inst25 <= 1000 && typeof (p) != "undefined") {_RecordType("<1124,1125,72>",(p)); Inst25++; } } catch(e) {}
    !(3 * p != 21);
    "any * obj";
try { if (Inst26 <= 1000 && typeof (p) != "undefined") {_RecordType("<1157,1158,74>",(p)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (p) != "undefined") {_RecordType("<1161,1162,74>",(p)); Inst27++; } } catch(e) {}
    !(p * p != 49);
    "obj * obj";
try { if (Inst28 <= 1000 && typeof (o) != "undefined") {_RecordType("<1194,1195,76>",(o)); Inst28++; } } catch(e) {}
    !(o + "" != "good");
    "obj + any";
try { if (Inst29 <= 1000 && typeof (o) != "undefined") {_RecordType("<1241,1242,78>",(o)); Inst29++; } } catch(e) {}
    !("" + o != "good");
    "any + obj";
try { if (Inst30 <= 1000 && typeof (o) != "undefined") {_RecordType("<1278,1279,80>",(o)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (o) != "undefined") {_RecordType("<1282,1283,80>",(o)); Inst31++; } } catch(e) {}
    !(o + o != "goodgood");
    "any + any";
try { if (Inst32 <= 1000 && typeof (p) != "undefined") {_RecordType("<1324,1325,82>",(p)); Inst32++; } } catch(e) {}
    !(-p != -7);
    "-obj";
try { if (Inst33 <= 1000 && typeof (p) != "undefined") {_RecordType("<1353,1354,84>",(p)); Inst33++; } } catch(e) {}
    !(+p != 7);
    "+obj";
try { if (Inst34 <= 1000 && typeof (String) != "undefined") {_RecordType("<1380,1386,86>",(String)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (q) != "undefined") {_RecordType("<1387,1388,86>",(q)); Inst35++; } } catch(e) {}
    !(String(q) != "7");
    "String(obj)";
try { if (Inst36 <= 1000 && typeof (String) != "undefined") {_RecordType("<1428,1434,88>",(String)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (q) != "undefined") {_RecordType("<1435,1436,88>",(q)); Inst37++; } } catch(e) {}
    !(new String(q) != "7");
    "new String(obj)";
  }

  return true;
}

try { if (Inst38 <= 1000 && typeof (run) != "undefined") {_RecordType("<1493,1496,95>",(run)); Inst38++; } } catch(e) {}
run();

