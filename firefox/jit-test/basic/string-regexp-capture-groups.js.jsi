var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof ("abcdefg".match) != "undefined") {_RecordType("<0,15,1>",("abcdefg".match)); Inst0++; } } catch(e) {}
"abcdefg".match(/(x)y(z)/g);
try { if (Inst1 <= 1000 && typeof (RegExp.$1) != "undefined") {_RecordType("<29,38,2>",(RegExp.$1)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<29,35,2>",(RegExp)); Inst2++; } } catch(e) {}
RegExp.$1;
"";
try { if (Inst3 <= 1000 && typeof ("abcdef".match(/a(b)cd/g)[0]) != "undefined") {_RecordType("<44,72,4>",("abcdef".match(/a(b)cd/g)[0])); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof ("abcdef".match) != "undefined") {_RecordType("<44,58,4>",("abcdef".match)); Inst4++; } } catch(e) {}
"abcdef".match(/a(b)cd/g)[0];
"abcd";
try { if (Inst5 <= 1000 && typeof (RegExp.$1) != "undefined") {_RecordType("<82,91,6>",(RegExp.$1)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<82,88,6>",(RegExp)); Inst6++; } } catch(e) {}
RegExp.$1;
"b";
try { if (Inst7 <= 1000 && typeof (RegExp.$2) != "undefined") {_RecordType("<98,107,8>",(RegExp.$2)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<98,104,8>",(RegExp)); Inst8++; } } catch(e) {}
RegExp.$2;
"";
try { if (Inst9 <= 1000 && typeof ("abcdef".match) != "undefined") {_RecordType("<113,127,10>",("abcdef".match)); Inst9++; } } catch(e) {}
"abcdef".match(/(a)b(c)/g);
try { if (Inst10 <= 1000 && typeof (RegExp.$1) != "undefined") {_RecordType("<141,150,11>",(RegExp.$1)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<141,147,11>",(RegExp)); Inst11++; } } catch(e) {}
RegExp.$1;
"a";
try { if (Inst12 <= 1000 && typeof (RegExp.$2) != "undefined") {_RecordType("<157,166,13>",(RegExp.$2)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<157,163,13>",(RegExp)); Inst13++; } } catch(e) {}
RegExp.$2;
"c";
try { if (Inst14 <= 1000 && typeof (RegExp.$3) != "undefined") {_RecordType("<173,182,15>",(RegExp.$3)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<173,179,15>",(RegExp)); Inst15++; } } catch(e) {}
RegExp.$3;
"";
try { if (Inst16 <= 1000 && typeof ("abcabdabe".match) != "undefined") {_RecordType("<188,205,17>",("abcabdabe".match)); Inst16++; } } catch(e) {}
"abcabdabe".match(/(a)b(.)/g);
try { if (Inst17 <= 1000 && typeof (RegExp.$1) != "undefined") {_RecordType("<219,228,18>",(RegExp.$1)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<219,225,18>",(RegExp)); Inst18++; } } catch(e) {}
RegExp.$1;
"a";
try { if (Inst19 <= 1000 && typeof (RegExp.$2) != "undefined") {_RecordType("<235,244,20>",(RegExp.$2)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<235,241,20>",(RegExp)); Inst20++; } } catch(e) {}
RegExp.$2;
"e";
try { if (Inst21 <= 1000 && typeof ("abcdefg".match) != "undefined") {_RecordType("<251,266,22>",("abcdefg".match)); Inst21++; } } catch(e) {}
"abcdefg".match(/(x)y(z)/g);
try { if (Inst22 <= 1000 && typeof (RegExp.$1) != "undefined") {_RecordType("<280,289,23>",(RegExp.$1)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<280,286,23>",(RegExp)); Inst23++; } } catch(e) {}
RegExp.$1;
"a";
//If there's no match, we don't update the statics.
try { if (Inst24 <= 1000 && typeof ("abcdefg".match) != "undefined") {_RecordType("<348,363,26>",("abcdefg".match)); Inst24++; } } catch(e) {}
"abcdefg".match(/(g)/g);
try { if (Inst25 <= 1000 && typeof (RegExp.$1) != "undefined") {_RecordType("<373,382,27>",(RegExp.$1)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<373,379,27>",(RegExp)); Inst26++; } } catch(e) {}
RegExp.$1;
"g";

