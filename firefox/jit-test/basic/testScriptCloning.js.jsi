var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst1 <= 1000 && typeof (newGlobal) != "undefined") {_RecordType("<8,17,1>",(newGlobal)); Inst1++; } } catch(e) {}
var g = newGlobal();
try { if (Inst0 <= 1000 && typeof (g) != "undefined") {_RecordType("<4,5,1>",(g)); Inst0++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (Function) != "undefined") {_RecordType("<31,39,2>",(Function)); Inst4++; } } catch(e) {}
g.f = new Function('return function(x) { return x };');
try { if (Inst2 <= 1000 && typeof (g.f) != "undefined") {_RecordType("<21,24,2>",(g.f)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (g) != "undefined") {_RecordType("<21,22,2>",(g)); Inst3++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (g.eval) != "undefined") {_RecordType("<77,83,3>",(g.eval)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (g) != "undefined") {_RecordType("<77,78,3>",(g)); Inst6++; } } catch(e) {}
g.eval("clone(f)()(9)");
9;
try { if (Inst9 <= 1000 && typeof (Function) != "undefined") {_RecordType("<115,123,5>",(Function)); Inst9++; } } catch(e) {}
g.f = new Function('return function(x) { { let y = x+1; return y } };');
try { if (Inst7 <= 1000 && typeof (g.f) != "undefined") {_RecordType("<105,108,5>",(g.f)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (g) != "undefined") {_RecordType("<105,106,5>",(g)); Inst8++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (g.eval) != "undefined") {_RecordType("<178,184,6>",(g.eval)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (g) != "undefined") {_RecordType("<178,179,6>",(g)); Inst11++; } } catch(e) {}
g.eval("clone(f)()(9)");
10;
try { if (Inst14 <= 1000 && typeof (Function) != "undefined") {_RecordType("<217,225,8>",(Function)); Inst14++; } } catch(e) {}
g.f = new Function('return function(x) { { let y = x, z = 1; return y+z } };');
try { if (Inst12 <= 1000 && typeof (g.f) != "undefined") {_RecordType("<207,210,8>",(g.f)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (g) != "undefined") {_RecordType("<207,208,8>",(g)); Inst13++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (g.eval) != "undefined") {_RecordType("<287,293,9>",(g.eval)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (g) != "undefined") {_RecordType("<287,288,9>",(g)); Inst16++; } } catch(e) {}
g.eval("clone(f)()(9)");
10;
try { if (Inst19 <= 1000 && typeof (Function) != "undefined") {_RecordType("<326,334,11>",(Function)); Inst19++; } } catch(e) {}
g.f = new Function('return function(x) { return x.search(/ponies/) };');
try { if (Inst17 <= 1000 && typeof (g.f) != "undefined") {_RecordType("<316,319,11>",(g.f)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (g) != "undefined") {_RecordType("<316,317,11>",(g)); Inst18++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (g.eval) != "undefined") {_RecordType("<389,395,12>",(g.eval)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (g) != "undefined") {_RecordType("<389,390,12>",(g)); Inst21++; } } catch(e) {}
g.eval("clone(f)()('123ponies')");
3;
try { if (Inst24 <= 1000 && typeof (Function) != "undefined") {_RecordType("<437,445,14>",(Function)); Inst24++; } } catch(e) {}
g.f = new Function('return function(x,y) { return x.search(/a/) + y.search(/b/) };');
try { if (Inst22 <= 1000 && typeof (g.f) != "undefined") {_RecordType("<427,430,14>",(g.f)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (g) != "undefined") {_RecordType("<427,428,14>",(g)); Inst23++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (g.eval) != "undefined") {_RecordType("<513,519,15>",(g.eval)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (g) != "undefined") {_RecordType("<513,514,15>",(g)); Inst26++; } } catch(e) {}
g.eval("clone(f)()('12a','foo')");
1;
try { if (Inst29 <= 1000 && typeof (Function) != "undefined") {_RecordType("<561,569,17>",(Function)); Inst29++; } } catch(e) {}
g.f = new Function('return function(x) { switch(x) { case "a": return "b"; case null: return "c" } };');
try { if (Inst27 <= 1000 && typeof (g.f) != "undefined") {_RecordType("<551,554,17>",(g.f)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (g) != "undefined") {_RecordType("<551,552,17>",(g)); Inst28++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (g.eval) != "undefined") {_RecordType("<656,662,18>",(g.eval)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (g) != "undefined") {_RecordType("<656,657,18>",(g)); Inst31++; } } catch(e) {}
g.eval("clone(f)()('a')");
"b";
try { if (Inst32 <= 1000 && typeof (g.eval) != "undefined") {_RecordType("<688,694,20>",(g.eval)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (g) != "undefined") {_RecordType("<688,689,20>",(g)); Inst33++; } } catch(e) {}
g.eval("clone(f)()(null)");
"c";
try { if (Inst34 <= 1000 && typeof (g.eval) != "undefined") {_RecordType("<721,727,22>",(g.eval)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (g) != "undefined") {_RecordType("<721,722,22>",(g)); Inst35++; } } catch(e) {}
g.eval("clone(f)()(3)");
try { if (Inst36 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<746,755,23>",(undefined)); Inst36++; } } catch(e) {}
undefined;

