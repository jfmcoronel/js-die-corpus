var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
var a = [1, 2, 3, 4];
try { if (Inst0 <= 1000 && typeof (a) != "undefined") {_RecordType("<4,5,1>",(a)); Inst0++; } } catch(e) {}
var b = [{
  a: 0,
  b: 1
}, {
  a: 0,
  b: 1
}, {
  a: 0,
  b: 1
}];
try { if (Inst1 <= 1000 && typeof (b) != "undefined") {_RecordType("<26,27,2>",(b)); Inst1++; } } catch(e) {}
var c = {
  a: 0,
  b: 4.5
};
try { if (Inst2 <= 1000 && typeof (c) != "undefined") {_RecordType("<96,97,12>",(c)); Inst2++; } } catch(e) {}
var d = [1, 2, 3, true];
try { if (Inst3 <= 1000 && typeof (d) != "undefined") {_RecordType("<126,127,16>",(d)); Inst3++; } } catch(e) {}
var e = {
  a: 0,
  b: 1,
  c: 2
};
try { if (Inst4 <= 1000 && typeof (e) != "undefined") {_RecordType("<151,152,17>",(e)); Inst4++; } } catch(e) {}
var f = {
  a: 0,
  b: 1,
  c: true
};
try { if (Inst5 <= 1000 && typeof (f) != "undefined") {_RecordType("<187,188,22>",(f)); Inst5++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (JSON.parse) != "undefined") {_RecordType("<230,240,27>",(JSON.parse)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<230,234,27>",(JSON)); Inst8++; } } catch(e) {}
var w = JSON.parse('[1,2,3,4]');
try { if (Inst6 <= 1000 && typeof (w) != "undefined") {_RecordType("<226,227,27>",(w)); Inst6++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (JSON.parse) != "undefined") {_RecordType("<263,273,28>",(JSON.parse)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<263,267,28>",(JSON)); Inst11++; } } catch(e) {}
var x = JSON.parse('{"a":0,"b":true,"c":4.5}');
try { if (Inst9 <= 1000 && typeof (x) != "undefined") {_RecordType("<259,260,28>",(x)); Inst9++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (JSON.parse) != "undefined") {_RecordType("<311,321,29>",(JSON.parse)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<311,315,29>",(JSON)); Inst14++; } } catch(e) {}
var y = JSON.parse('{"d":true,"b":true,"c":4.5}');
try { if (Inst12 <= 1000 && typeof (y) != "undefined") {_RecordType("<307,308,29>",(y)); Inst12++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (JSON.parse) != "undefined") {_RecordType("<362,372,30>",(JSON.parse)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<362,366,30>",(JSON)); Inst17++; } } catch(e) {}
var z = JSON.parse('[{"a":0,"b":1},{"a":0,"b":1},{"a":0,"b":1}]');
try { if (Inst15 <= 1000 && typeof (z) != "undefined") {_RecordType("<358,359,30>",(z)); Inst15++; } } catch(e) {}

