var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst1 <= 1000 && typeof (newGlobal) != "undefined") {_RecordType("<8,17,1>",(newGlobal)); Inst1++; } } catch(e) {}
var g = newGlobal();
try { if (Inst0 <= 1000 && typeof (g) != "undefined") {_RecordType("<4,5,1>",(g)); Inst0++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (g.eval) != "undefined") {_RecordType("<33,39,2>",(g.eval)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (g) != "undefined") {_RecordType("<33,34,2>",(g)); Inst4++; } } catch(e) {}
var array = g.eval("new Array(1,2,3)");
try { if (Inst2 <= 1000 && typeof (array) != "undefined") {_RecordType("<25,30,2>",(array)); Inst2++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof ([array, array].concat().toString) != "undefined") {_RecordType("<61,93,3>",([array, array].concat().toString)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof ([array, array].concat) != "undefined") {_RecordType("<61,82,3>",([array, array].concat)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (array) != "undefined") {_RecordType("<62,67,3>",(array)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (array) != "undefined") {_RecordType("<69,74,3>",(array)); Inst8++; } } catch(e) {}
[array, array].concat().toString();
"1,2,3,1,2,3";
try { if (Inst9 <= 1000 && typeof (Array.isArray) != "undefined") {_RecordType("<112,125,5>",(Array.isArray)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Array) != "undefined") {_RecordType("<112,117,5>",(Array)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (array) != "undefined") {_RecordType("<126,131,5>",(array)); Inst11++; } } catch(e) {}
Array.isArray(array);
true;
try { if (Inst13 <= 1000 && typeof (g.eval) != "undefined") {_RecordType("<153,159,7>",(g.eval)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (g) != "undefined") {_RecordType("<153,154,7>",(g)); Inst14++; } } catch(e) {}
var number = g.eval("new Number(42)");
try { if (Inst12 <= 1000 && typeof (number) != "undefined") {_RecordType("<144,150,7>",(number)); Inst12++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (g.eval) != "undefined") {_RecordType("<190,196,8>",(g.eval)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (g) != "undefined") {_RecordType("<190,191,8>",(g)); Inst17++; } } catch(e) {}
var bool = g.eval("new Boolean(false)");
try { if (Inst15 <= 1000 && typeof (bool) != "undefined") {_RecordType("<183,187,8>",(bool)); Inst15++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (g.eval) != "undefined") {_RecordType("<233,239,9>",(g.eval)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (g) != "undefined") {_RecordType("<233,234,9>",(g)); Inst20++; } } catch(e) {}
var string = g.eval("new String('ponies')");
try { if (Inst18 <= 1000 && typeof (string) != "undefined") {_RecordType("<224,230,9>",(string)); Inst18++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (JSON.stringify) != "undefined") {_RecordType("<265,279,10>",(JSON.stringify)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<265,269,10>",(JSON)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (number) != "undefined") {_RecordType("<287,293,11>",(number)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (bool) != "undefined") {_RecordType("<300,304,12>",(bool)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (string) != "undefined") {_RecordType("<311,317,13>",(string)); Inst25++; } } catch(e) {}
JSON.stringify({
  n: number,
  b: bool,
  s: string
});
"{\"n\":42,\"b\":false,\"s\":\"ponies\"}";
try { if (Inst26 <= 1000 && typeof (JSON.stringify) != "undefined") {_RecordType("<365,379,16>",(JSON.stringify)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<365,369,16>",(JSON)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (array) != "undefined") {_RecordType("<389,394,17>",(array)); Inst28++; } } catch(e) {}
JSON.stringify({
  arr: array
});
"{\"arr\":[1,2,3]}";
try { if (Inst29 <= 1000 && typeof (JSON.stringify) != "undefined") {_RecordType("<420,434,20>",(JSON.stringify)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<420,424,20>",(JSON)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (array) != "undefined") {_RecordType("<478,483,23>",(array)); Inst31++; } } catch(e) {}
JSON.stringify({
  2: 'ponies',
  unicorns: 'not real'
}, array);
"{\"2\":\"ponies\"}";
try { if (Inst32 <= 1000 && typeof (JSON.stringify) != "undefined") {_RecordType("<508,522,25>",(JSON.stringify)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<508,512,25>",(JSON)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (number) != "undefined") {_RecordType("<575,581,29>",(number)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (string) != "undefined") {_RecordType("<583,589,29>",(string)); Inst35++; } } catch(e) {}
JSON.stringify({
  42: true,
  ponies: true,
  unicorns: 'sad'
}, [number, string]);
"{\"42\":true,\"ponies\":true}";
try { if (Inst36 <= 1000 && typeof (JSON.stringify) != "undefined") {_RecordType("<626,640,31>",(JSON.stringify)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<626,630,31>",(JSON)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<668,677,34>",(undefined)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (number) != "undefined") {_RecordType("<679,685,34>",(number)); Inst39++; } } catch(e) {}
JSON.stringify({
  a: true,
  b: false
}, undefined, number);
"{\n          \"a\": true,\n          \"b\": false\n}";
try { if (Inst40 <= 1000 && typeof (JSON.stringify) != "undefined") {_RecordType("<744,758,36>",(JSON.stringify)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<744,748,36>",(JSON)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<786,795,39>",(undefined)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (string) != "undefined") {_RecordType("<797,803,39>",(string)); Inst43++; } } catch(e) {}
JSON.stringify({
  a: true,
  b: false
}, undefined, string);
"{\nponies\"a\": true,\nponies\"b\": false\n}";

