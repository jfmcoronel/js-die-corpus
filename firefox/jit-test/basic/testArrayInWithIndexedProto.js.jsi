var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (testArrayInWithIndexedProto) != "undefined") {_RecordType("<9,36,1>",(testArrayInWithIndexedProto)); Inst0++; } } catch(e) {}
function testArrayInWithIndexedProto() {
  Array.prototype[0] = "Got me";
try { if (Inst1 <= 1000 && typeof (Array.prototype[0]) != "undefined") {_RecordType("<43,61,2>",(Array.prototype[0])); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<43,58,2>",(Array.prototype)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Array) != "undefined") {_RecordType("<43,48,2>",(Array)); Inst3++; } } catch(e) {}
  var zeroPresent, zeroPresent2; // Need to go to 18 because in the failure mode this is
try { if (Inst4 <= 1000 && typeof (zeroPresent) != "undefined") {_RecordType("<80,91,3>",(zeroPresent)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (zeroPresent2) != "undefined") {_RecordType("<93,105,3>",(zeroPresent2)); Inst5++; } } catch(e) {}
  // testing we have various side-exits in there due to interp and
  // tracer not agreeing that confuse the issue and cause us to not
  // hit the bad case within 9 iterations.

  for (var j = 0; j < 18; ++j) {
try { if (Inst6 <= 1000 && typeof (j) != "undefined") {_RecordType("<353,354,8>",(j)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (j) != "undefined") {_RecordType("<360,361,8>",(j)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (j) != "undefined") {_RecordType("<370,371,8>",(j)); Inst8++; } } catch(e) {}
    zeroPresent = 0 in [];
try { if (Inst9 <= 1000 && typeof (zeroPresent) != "undefined") {_RecordType("<379,390,9>",(zeroPresent)); Inst9++; } } catch(e) {}
  }

  var arr = [1, 2];
try { if (Inst10 <= 1000 && typeof (arr) != "undefined") {_RecordType("<413,416,12>",(arr)); Inst10++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (arr[0]) != "undefined") {_RecordType("<436,442,13>",(arr[0])); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (arr) != "undefined") {_RecordType("<436,439,13>",(arr)); Inst12++; } } catch(e) {}
  delete arr[0];

  for (var j = 0; j < 18; ++j) {
try { if (Inst13 <= 1000 && typeof (j) != "undefined") {_RecordType("<456,457,15>",(j)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (j) != "undefined") {_RecordType("<463,464,15>",(j)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (j) != "undefined") {_RecordType("<473,474,15>",(j)); Inst15++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (arr) != "undefined") {_RecordType("<502,505,16>",(arr)); Inst17++; } } catch(e) {}
    zeroPresent2 = 0 in arr;
try { if (Inst16 <= 1000 && typeof (zeroPresent2) != "undefined") {_RecordType("<482,494,16>",(zeroPresent2)); Inst16++; } } catch(e) {}
  }

try { if (Inst18 <= 1000 && typeof (zeroPresent) != "undefined") {_RecordType("<522,533,19>",(zeroPresent)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (zeroPresent2) != "undefined") {_RecordType("<535,547,19>",(zeroPresent2)); Inst19++; } } catch(e) {}
  return [zeroPresent, zeroPresent2];
}

try { if (Inst22 <= 1000 && typeof (testArrayInWithIndexedProto) != "undefined") {_RecordType("<571,598,22>",(testArrayInWithIndexedProto)); Inst22++; } } catch(e) {}
var [ret, ret2] = testArrayInWithIndexedProto();
try { if (Inst20 <= 1000 && typeof (ret) != "undefined") {_RecordType("<558,561,22>",(ret)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (ret2) != "undefined") {_RecordType("<563,567,22>",(ret2)); Inst21++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (ret) != "undefined") {_RecordType("<602,605,23>",(ret)); Inst23++; } } catch(e) {}
ret;
true;
try { if (Inst24 <= 1000 && typeof (ret2) != "undefined") {_RecordType("<613,617,25>",(ret2)); Inst24++; } } catch(e) {}
ret2;
true;

