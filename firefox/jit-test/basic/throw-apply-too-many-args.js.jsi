var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (g) != "undefined") {_RecordType("<9,10,1>",(g)); Inst0++; } } catch(e) {}
function g(a, b, c, d) {
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<11,12,1>",(a)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (b) != "undefined") {_RecordType("<14,15,1>",(b)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (c) != "undefined") {_RecordType("<17,18,1>",(c)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (d) != "undefined") {_RecordType("<20,21,1>",(d)); Inst4++; } } catch(e) {}
  ;
}

try { if (Inst5 <= 1000 && typeof (f) != "undefined") {_RecordType("<41,42,5>",(f)); Inst5++; } } catch(e) {}
function f(a, b, c) {
try { if (Inst6 <= 1000 && typeof (a) != "undefined") {_RecordType("<43,44,5>",(a)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (b) != "undefined") {_RecordType("<46,47,5>",(b)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (c) != "undefined") {_RecordType("<49,50,5>",(c)); Inst8++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (getMaxArgs) != "undefined") {_RecordType("<75,85,6>",(getMaxArgs)); Inst11++; } } catch(e) {}
  arguments.length = getMaxArgs() + 1;
try { if (Inst9 <= 1000 && typeof (arguments.length) != "undefined") {_RecordType("<56,72,6>",(arguments.length)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<56,65,6>",(arguments)); Inst10++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (g.apply) != "undefined") {_RecordType("<95,102,7>",(g.apply)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (g) != "undefined") {_RecordType("<95,96,7>",(g)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (arr) != "undefined") {_RecordType("<109,112,7>",(arr)); Inst14++; } } catch(e) {}
  g.apply(this, arr);
}

let x = [];
try { if (Inst15 <= 1000 && typeof (x) != "undefined") {_RecordType("<122,123,10>",(x)); Inst15++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (getMaxArgs) != "undefined") {_RecordType("<141,151,11>",(getMaxArgs)); Inst18++; } } catch(e) {}
x.length = getMaxArgs() + 1;
try { if (Inst16 <= 1000 && typeof (x.length) != "undefined") {_RecordType("<130,138,11>",(x.length)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (x) != "undefined") {_RecordType("<130,131,11>",(x)); Inst17++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (x) != "undefined") {_RecordType("<226,227,12>",(x)); Inst20++; } } catch(e) {}
var args = [[5], [5], [5], [5], [5], [5], [5], [5], [5], [5], [5], x];
try { if (Inst19 <= 1000 && typeof (args) != "undefined") {_RecordType("<163,167,12>",(args)); Inst19++; } } catch(e) {}

try { if (Inst31 <= 1000 && typeof (e) != "undefined") {_RecordType("<356,357,21>",(e)); Inst31++; } } catch(e) {}
try {
  for (var i = 0; i < args.length; i++) {
try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<248,249,15>",(i)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<255,256,15>",(i)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (args.length) != "undefined") {_RecordType("<259,270,15>",(args.length)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (args) != "undefined") {_RecordType("<259,263,15>",(args)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<272,273,15>",(i)); Inst25++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (args[i]) != "undefined") {_RecordType("<289,296,16>",(args[i])); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (args) != "undefined") {_RecordType("<289,293,16>",(args)); Inst28++; } } catch(e) {}
    arr = args[i];
try { if (Inst26 <= 1000 && typeof (arr) != "undefined") {_RecordType("<283,286,16>",(arr)); Inst26++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (f) != "undefined") {_RecordType("<302,303,17>",(f)); Inst29++; } } catch(e) {}
    f();
  }

try { if (Inst30 <= 1000 && typeof (Error) != "undefined") {_RecordType("<324,329,20>",(Error)); Inst30++; } } catch(e) {}
  throw new Error("didn't throw");
} catch (e) {
try { if (Inst32 <= 1000 && typeof (e) != "undefined") {_RecordType("<363,364,22>",(e)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (RangeError) != "undefined") {_RecordType("<376,386,22>",(RangeError)); Inst33++; } } catch(e) {}
  e instanceof RangeError;
  true;
try { if (Inst34 <= 1000 && typeof (e) != "undefined") {_RecordType("<420,421,24>",(e)); Inst34++; } } catch(e) {}
  "wrong exception: " + e;
}

try { if (Inst45 <= 1000 && typeof (e) != "undefined") {_RecordType("<551,552,34>",(e)); Inst45++; } } catch(e) {}
try {
  for (var i = 0; i < args.length; i++) {
try { if (Inst35 <= 1000 && typeof (i) != "undefined") {_RecordType("<443,444,28>",(i)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (i) != "undefined") {_RecordType("<450,451,28>",(i)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (args.length) != "undefined") {_RecordType("<454,465,28>",(args.length)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (args) != "undefined") {_RecordType("<454,458,28>",(args)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (i) != "undefined") {_RecordType("<467,468,28>",(i)); Inst39++; } } catch(e) {}
try { if (Inst41 <= 1000 && typeof (args[i]) != "undefined") {_RecordType("<484,491,29>",(args[i])); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (args) != "undefined") {_RecordType("<484,488,29>",(args)); Inst42++; } } catch(e) {}
    arr = args[i];
try { if (Inst40 <= 1000 && typeof (arr) != "undefined") {_RecordType("<478,481,29>",(arr)); Inst40++; } } catch(e) {}
try { if (Inst43 <= 1000 && typeof (f) != "undefined") {_RecordType("<497,498,30>",(f)); Inst43++; } } catch(e) {}
    f();
  }

try { if (Inst44 <= 1000 && typeof (Error) != "undefined") {_RecordType("<519,524,33>",(Error)); Inst44++; } } catch(e) {}
  throw new Error("didn't throw");
} catch (e) {
try { if (Inst46 <= 1000 && typeof (e) != "undefined") {_RecordType("<558,559,35>",(e)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (RangeError) != "undefined") {_RecordType("<571,581,35>",(RangeError)); Inst47++; } } catch(e) {}
  e instanceof RangeError;
  true;
try { if (Inst48 <= 1000 && typeof (e) != "undefined") {_RecordType("<615,616,37>",(e)); Inst48++; } } catch(e) {}
  "wrong exception: " + e;
}

