var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (Math.sin) != "undefined") {_RecordType("<7,15,1>",(Math.sin)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (Math) != "undefined") {_RecordType("<7,11,1>",(Math)); Inst1++; } } catch(e) {}
(() => Math.sin(...true))();

try { if (Inst2 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<30,39,3>",(TypeError)); Inst2++; } } catch(e) {}
TypeError;

try { if (Inst3 <= 1000 && typeof (Math.sin) != "undefined") {_RecordType("<49,57,5>",(Math.sin)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Math) != "undefined") {_RecordType("<49,53,5>",(Math)); Inst4++; } } catch(e) {}
(() => Math.sin(...false))();

try { if (Inst5 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<73,82,7>",(TypeError)); Inst5++; } } catch(e) {}
TypeError;

try { if (Inst6 <= 1000 && typeof (Math.sin) != "undefined") {_RecordType("<92,100,9>",(Math.sin)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Math) != "undefined") {_RecordType("<92,96,9>",(Math)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Date) != "undefined") {_RecordType("<108,112,9>",(Date)); Inst8++; } } catch(e) {}
(() => Math.sin(...new Date()))();

try { if (Inst9 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<121,130,11>",(TypeError)); Inst9++; } } catch(e) {}
TypeError;

try { if (Inst10 <= 1000 && typeof (Math.sin) != "undefined") {_RecordType("<140,148,13>",(Math.sin)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Math) != "undefined") {_RecordType("<140,144,13>",(Math)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Function) != "undefined") {_RecordType("<152,160,13>",(Function)); Inst12++; } } catch(e) {}
(() => Math.sin(...Function("")))();

try { if (Inst13 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<171,180,15>",(TypeError)); Inst13++; } } catch(e) {}
TypeError;

try { if (Inst14 <= 1000 && typeof (Math.sin) != "undefined") {_RecordType("<190,198,17>",(Math.sin)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Math) != "undefined") {_RecordType("<190,194,17>",(Math)); Inst15++; } } catch(e) {}
(() => Math.sin(...function () {
  ;
}))();

try { if (Inst16 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<228,237,21>",(TypeError)); Inst16++; } } catch(e) {}
TypeError;

try { if (Inst17 <= 1000 && typeof (Math.sin) != "undefined") {_RecordType("<247,255,23>",(Math.sin)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Math) != "undefined") {_RecordType("<247,251,23>",(Math)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (x) != "undefined") {_RecordType("<260,261,23>",(x)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (x) != "undefined") {_RecordType("<265,266,23>",(x)); Inst20++; } } catch(e) {}
(() => Math.sin(...(x => x)))();

try { if (Inst21 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<274,283,25>",(TypeError)); Inst21++; } } catch(e) {}
TypeError;

try { if (Inst22 <= 1000 && typeof (Math.sin) != "undefined") {_RecordType("<293,301,27>",(Math.sin)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Math) != "undefined") {_RecordType("<293,297,27>",(Math)); Inst23++; } } catch(e) {}
(() => Math.sin(...1))();

try { if (Inst24 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<313,322,29>",(TypeError)); Inst24++; } } catch(e) {}
TypeError;

try { if (Inst25 <= 1000 && typeof (Math.sin) != "undefined") {_RecordType("<332,340,31>",(Math.sin)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Math) != "undefined") {_RecordType("<332,336,31>",(Math)); Inst26++; } } catch(e) {}
(() => Math.sin(...{}))();

try { if (Inst27 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<353,362,33>",(TypeError)); Inst27++; } } catch(e) {}
TypeError;
var foo = {};
try { if (Inst28 <= 1000 && typeof (foo) != "undefined") {_RecordType("<368,371,34>",(foo)); Inst28++; } } catch(e) {}
foo[Symbol.iterator] = 10;
try { if (Inst29 <= 1000 && typeof (foo[Symbol.iterator]) != "undefined") {_RecordType("<378,398,35>",(foo[Symbol.iterator])); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (foo) != "undefined") {_RecordType("<378,381,35>",(foo)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<382,397,35>",(Symbol.iterator)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<382,388,35>",(Symbol)); Inst32++; } } catch(e) {}

try { if (Inst33 <= 1000 && typeof (Math.sin) != "undefined") {_RecordType("<413,421,37>",(Math.sin)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (Math) != "undefined") {_RecordType("<413,417,37>",(Math)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (foo) != "undefined") {_RecordType("<425,428,37>",(foo)); Inst35++; } } catch(e) {}
(() => Math.sin(...foo))();

try { if (Inst36 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<435,444,39>",(TypeError)); Inst36++; } } catch(e) {}
TypeError;

foo[Symbol.iterator] = function () {
try { if (Inst41 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<493,502,42>",(undefined)); Inst41++; } } catch(e) {}
  return undefined;
};
try { if (Inst37 <= 1000 && typeof (foo[Symbol.iterator]) != "undefined") {_RecordType("<447,467,41>",(foo[Symbol.iterator])); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (foo) != "undefined") {_RecordType("<447,450,41>",(foo)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<451,466,41>",(Symbol.iterator)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<451,457,41>",(Symbol)); Inst40++; } } catch(e) {}

try { if (Inst42 <= 1000 && typeof (Math.sin) != "undefined") {_RecordType("<515,523,45>",(Math.sin)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (Math) != "undefined") {_RecordType("<515,519,45>",(Math)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (foo) != "undefined") {_RecordType("<527,530,45>",(foo)); Inst44++; } } catch(e) {}
(() => Math.sin(...foo))();

try { if (Inst45 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<537,546,47>",(TypeError)); Inst45++; } } catch(e) {}
TypeError;

foo[Symbol.iterator] = function () {
  return this;
};
try { if (Inst46 <= 1000 && typeof (foo[Symbol.iterator]) != "undefined") {_RecordType("<549,569,49>",(foo[Symbol.iterator])); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (foo) != "undefined") {_RecordType("<549,552,49>",(foo)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<553,568,49>",(Symbol.iterator)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<553,559,49>",(Symbol)); Inst49++; } } catch(e) {}

try { if (Inst50 <= 1000 && typeof (Math.sin) != "undefined") {_RecordType("<612,620,53>",(Math.sin)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (Math) != "undefined") {_RecordType("<612,616,53>",(Math)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (foo) != "undefined") {_RecordType("<624,627,53>",(foo)); Inst52++; } } catch(e) {}
(() => Math.sin(...foo))();

try { if (Inst53 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<634,643,55>",(TypeError)); Inst53++; } } catch(e) {}
TypeError;

foo[Symbol.iterator] = function () {
  return this;
};
try { if (Inst54 <= 1000 && typeof (foo[Symbol.iterator]) != "undefined") {_RecordType("<646,666,57>",(foo[Symbol.iterator])); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (foo) != "undefined") {_RecordType("<646,649,57>",(foo)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<650,665,57>",(Symbol.iterator)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<650,656,57>",(Symbol)); Inst57++; } } catch(e) {}

foo.next = function () {
  throw 10;
};
try { if (Inst58 <= 1000 && typeof (foo.next) != "undefined") {_RecordType("<702,710,61>",(foo.next)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (foo) != "undefined") {_RecordType("<702,705,61>",(foo)); Inst59++; } } catch(e) {}

try { if (Inst60 <= 1000 && typeof (Math.sin) != "undefined") {_RecordType("<750,758,65>",(Math.sin)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (Math) != "undefined") {_RecordType("<750,754,65>",(Math)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (foo) != "undefined") {_RecordType("<762,765,65>",(foo)); Inst62++; } } catch(e) {}
(() => Math.sin(...foo))();

10;

try { if (Inst63 <= 1000 && typeof (Math.sin) != "undefined") {_RecordType("<784,792,69>",(Math.sin)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (Math) != "undefined") {_RecordType("<784,788,69>",(Math)); Inst64++; } } catch(e) {}
(() => Math.sin(.../a/))();

try { if (Inst65 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<806,815,71>",(TypeError)); Inst65++; } } catch(e) {}
TypeError;

try { if (Inst66 <= 1000 && typeof (Math.sin) != "undefined") {_RecordType("<825,833,73>",(Math.sin)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (Math) != "undefined") {_RecordType("<825,829,73>",(Math)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (Error) != "undefined") {_RecordType("<841,846,73>",(Error)); Inst68++; } } catch(e) {}
(() => Math.sin(...new Error()))();

try { if (Inst69 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<855,864,75>",(TypeError)); Inst69++; } } catch(e) {}
TypeError;

