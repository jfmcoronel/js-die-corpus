var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (f1) != "undefined") {_RecordType("<9,11,1>",(f1)); Inst0++; } } catch(e) {}
function f1() {
try { if (Inst2 <= 1000 && typeof (Int32Array) != "undefined") {_RecordType("<30,40,2>",(Int32Array)); Inst2++; } } catch(e) {}
  var a = new Int32Array(50);
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<22,23,2>",(a)); Inst1++; } } catch(e) {}

  for (var i = 0; i < 100; i++) {
try { if (Inst3 <= 1000 && typeof (i) != "undefined") {_RecordType("<58,59,4>",(i)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (i) != "undefined") {_RecordType("<65,66,4>",(i)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (i) != "undefined") {_RecordType("<74,75,4>",(i)); Inst5++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (a[i]) != "undefined") {_RecordType("<93,97,5>",(a[i])); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (a) != "undefined") {_RecordType("<93,94,5>",(a)); Inst8++; } } catch(e) {}
    var x = a[i];
try { if (Inst6 <= 1000 && typeof (x) != "undefined") {_RecordType("<89,90,5>",(x)); Inst6++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (x) != "undefined") {_RecordType("<110,111,6>",(x)); Inst9++; } } catch(e) {}
    typeof x;
try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<117,118,7>",(i)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<121,129,7>",(a.length)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (a) != "undefined") {_RecordType("<121,122,7>",(a)); Inst12++; } } catch(e) {}
    i < a.length ? "number" : "undefined";
  }

try { if (Inst14 <= 1000 && typeof (Float32Array) != "undefined") {_RecordType("<175,187,10>",(Float32Array)); Inst14++; } } catch(e) {}
  var b = new Float32Array(50);
try { if (Inst13 <= 1000 && typeof (b) != "undefined") {_RecordType("<167,168,10>",(b)); Inst13++; } } catch(e) {}

  for (var i = 0; i < 100; i++) {
try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<205,206,12>",(i)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<212,213,12>",(i)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (i) != "undefined") {_RecordType("<221,222,12>",(i)); Inst17++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (b[i]) != "undefined") {_RecordType("<240,244,13>",(b[i])); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (b) != "undefined") {_RecordType("<240,241,13>",(b)); Inst20++; } } catch(e) {}
    var x = b[i];
try { if (Inst18 <= 1000 && typeof (x) != "undefined") {_RecordType("<236,237,13>",(x)); Inst18++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (x) != "undefined") {_RecordType("<257,258,14>",(x)); Inst21++; } } catch(e) {}
    typeof x;
try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<264,265,15>",(i)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (b.length) != "undefined") {_RecordType("<268,276,15>",(b.length)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (b) != "undefined") {_RecordType("<268,269,15>",(b)); Inst24++; } } catch(e) {}
    i < b.length ? "number" : "undefined";
  }
}

try { if (Inst25 <= 1000 && typeof (f1) != "undefined") {_RecordType("<310,312,19>",(f1)); Inst25++; } } catch(e) {}
f1();

try { if (Inst26 <= 1000 && typeof (f2) != "undefined") {_RecordType("<326,328,21>",(f2)); Inst26++; } } catch(e) {}
function f2() {
  // Test that values on the prototype are ignored,
  // even for OOB accesses. This behavior is new
  // with ECMA 6 (see bug 829896).
  Object.prototype[50] = 4.4;
try { if (Inst27 <= 1000 && typeof (Object.prototype[50]) != "undefined") {_RecordType("<471,491,25>",(Object.prototype[50])); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<471,487,25>",(Object.prototype)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (Object) != "undefined") {_RecordType("<471,477,25>",(Object)); Inst29++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (Math) != "undefined") {_RecordType("<524,528,26>",(Math)); Inst33++; } } catch(e) {}
  Object.prototype[55] = Math;
try { if (Inst30 <= 1000 && typeof (Object.prototype[55]) != "undefined") {_RecordType("<501,521,26>",(Object.prototype[55])); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<501,517,26>",(Object.prototype)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (Object) != "undefined") {_RecordType("<501,507,26>",(Object)); Inst32++; } } catch(e) {}
try { if (Inst35 <= 1000 && typeof (Int16Array) != "undefined") {_RecordType("<544,554,27>",(Int16Array)); Inst35++; } } catch(e) {}
  var a = new Int16Array(50);
try { if (Inst34 <= 1000 && typeof (a) != "undefined") {_RecordType("<536,537,27>",(a)); Inst34++; } } catch(e) {}

  for (var i = 0; i < 100; i++) {
try { if (Inst36 <= 1000 && typeof (i) != "undefined") {_RecordType("<572,573,29>",(i)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (i) != "undefined") {_RecordType("<579,580,29>",(i)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (i) != "undefined") {_RecordType("<588,589,29>",(i)); Inst38++; } } catch(e) {}
try { if (Inst40 <= 1000 && typeof (a[i]) != "undefined") {_RecordType("<607,611,30>",(a[i])); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (a) != "undefined") {_RecordType("<607,608,30>",(a)); Inst41++; } } catch(e) {}
    var x = a[i];
try { if (Inst39 <= 1000 && typeof (x) != "undefined") {_RecordType("<603,604,30>",(x)); Inst39++; } } catch(e) {}

try { if (Inst42 <= 1000 && typeof (i) != "undefined") {_RecordType("<622,623,32>",(i)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<626,634,32>",(a.length)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (a) != "undefined") {_RecordType("<626,627,32>",(a)); Inst44++; } } catch(e) {}
    if (i < a.length) {
try { if (Inst45 <= 1000 && typeof (x) != "undefined") {_RecordType("<644,645,33>",(x)); Inst45++; } } catch(e) {}
      x;
      0;
    } else {
try { if (Inst46 <= 1000 && typeof (x) != "undefined") {_RecordType("<675,676,36>",(x)); Inst46++; } } catch(e) {}
      x;
try { if (Inst47 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<684,693,37>",(undefined)); Inst47++; } } catch(e) {}
      undefined;
    }
  }
}

try { if (Inst48 <= 1000 && typeof (f2) != "undefined") {_RecordType("<708,710,42>",(f2)); Inst48++; } } catch(e) {}
f2();

