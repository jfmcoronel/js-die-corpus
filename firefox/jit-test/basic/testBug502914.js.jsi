var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (testBug502914) != "undefined") {_RecordType("<9,22,1>",(testBug502914)); Inst0++; } } catch(e) {}
function testBug502914() {
  // Assigning a non-function to a function-valued property on trace should
  // bump the shape.
try { if (Inst1 <= 1000 && typeof (f1) != "undefined") {_RecordType("<135,137,4>",(f1)); Inst1++; } } catch(e) {}
  function f1() {
    ;
  }

try { if (Inst2 <= 1000 && typeof (C) != "undefined") {_RecordType("<164,165,8>",(C)); Inst2++; } } catch(e) {}
  function C() {
    ;
  }

try { if (Inst6 <= 1000 && typeof (f1) != "undefined") {_RecordType("<214,216,13>",(f1)); Inst6++; } } catch(e) {}
  var x = C.prototype = {
    m: f1
  };
try { if (Inst3 <= 1000 && typeof (x) != "undefined") {_RecordType("<187,188,12>",(x)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (C.prototype) != "undefined") {_RecordType("<191,202,12>",(C.prototype)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (C) != "undefined") {_RecordType("<191,192,12>",(C)); Inst5++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (x.m) != "undefined") {_RecordType("<224,227,15>",(x.m)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (x) != "undefined") {_RecordType("<224,225,15>",(x)); Inst8++; } } catch(e) {}
  x.m(); // brand scope

try { if (Inst10 <= 1000 && typeof (C) != "undefined") {_RecordType("<264,265,17>",(C)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (C) != "undefined") {_RecordType("<273,274,17>",(C)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (C) != "undefined") {_RecordType("<282,283,17>",(C)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (x) != "undefined") {_RecordType("<287,288,17>",(x)); Inst13++; } } catch(e) {}
  var arr = [new C(), new C(), new C(), x];
try { if (Inst9 <= 1000 && typeof (arr) != "undefined") {_RecordType("<253,256,17>",(arr)); Inst9++; } } catch(e) {}

try { if (Inst22 <= 1000 && typeof (exc) != "undefined") {_RecordType("<419,422,24>",(exc)); Inst22++; } } catch(e) {}
  try {
    for (var i = 0; i < 4; i++) {
try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<313,314,20>",(i)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<320,321,20>",(i)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<327,328,20>",(i)); Inst16++; } } catch(e) {}
      arr[i].m = 12;
try { if (Inst17 <= 1000 && typeof (arr[i].m) != "undefined") {_RecordType("<340,348,21>",(arr[i].m)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (arr[i]) != "undefined") {_RecordType("<340,346,21>",(arr[i])); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (arr) != "undefined") {_RecordType("<340,343,21>",(arr)); Inst19++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (x.m) != "undefined") {_RecordType("<361,364,22>",(x.m)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (x) != "undefined") {_RecordType("<361,362,22>",(x)); Inst21++; } } catch(e) {}
      x.m(); // should throw last time through
    }
  } catch (exc) {
try { if (Inst23 <= 1000 && typeof (exc.constructor.name) != "undefined") {_RecordType("<437,457,25>",(exc.constructor.name)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (exc.constructor) != "undefined") {_RecordType("<437,452,25>",(exc.constructor)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (exc) != "undefined") {_RecordType("<437,440,25>",(exc)); Inst25++; } } catch(e) {}
    return exc.constructor.name;
  }

  return "no exception";
}

try { if (Inst26 <= 1000 && typeof (testBug502914) != "undefined") {_RecordType("<492,505,31>",(testBug502914)); Inst26++; } } catch(e) {}
testBug502914();
"TypeError";

