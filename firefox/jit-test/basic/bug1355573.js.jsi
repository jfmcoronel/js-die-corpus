var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// |jit-test| skip-if: getBuildConfiguration().debug === true
try { if (Inst0 <= 1000 && typeof (f) != "undefined") {_RecordType("<71,72,2>",(f)); Inst0++; } } catch(e) {}
function f() {
  ;
}

;
try { if (Inst1 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<86,107,7>",(Object.defineProperty)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Object) != "undefined") {_RecordType("<86,92,7>",(Object)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (f) != "undefined") {_RecordType("<108,109,7>",(f)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof ("a".repeat) != "undefined") {_RecordType("<130,140,8>",("a".repeat)); Inst4++; } } catch(e) {}
Object.defineProperty(f, "name", {
  value: "a".repeat((1 << 30) - 2)
});
var ex = null;
try { if (Inst5 <= 1000 && typeof (ex) != "undefined") {_RecordType("<164,166,10>",(ex)); Inst5++; } } catch(e) {}

try { if (Inst11 <= 1000 && typeof (e) != "undefined") {_RecordType("<221,222,14>",(e)); Inst11++; } } catch(e) {}
try {
try { if (Inst7 <= 1000 && typeof (f.bind().name.length) != "undefined") {_RecordType("<190,210,13>",(f.bind().name.length)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (f.bind().name) != "undefined") {_RecordType("<190,203,13>",(f.bind().name)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (f.bind) != "undefined") {_RecordType("<190,196,13>",(f.bind)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (f) != "undefined") {_RecordType("<190,191,13>",(f)); Inst10++; } } catch(e) {}
  len = f.bind().name.length;
try { if (Inst6 <= 1000 && typeof (len) != "undefined") {_RecordType("<184,187,13>",(len)); Inst6++; } } catch(e) {}
} catch (e) {
try { if (Inst13 <= 1000 && typeof (e) != "undefined") {_RecordType("<233,234,15>",(e)); Inst13++; } } catch(e) {}
  ex = e;
try { if (Inst12 <= 1000 && typeof (ex) != "undefined") {_RecordType("<228,230,15>",(ex)); Inst12++; } } catch(e) {}
}

try { if (Inst14 <= 1000 && typeof (ex) != "undefined") {_RecordType("<239,241,18>",(ex)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (ex) != "undefined") {_RecordType("<265,267,18>",(ex)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (InternalError) != "undefined") {_RecordType("<279,292,18>",(InternalError)); Inst16++; } } catch(e) {}
ex === "out of memory" || ex instanceof InternalError;
true;

