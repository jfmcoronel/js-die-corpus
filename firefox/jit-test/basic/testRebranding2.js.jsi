var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (q) != "undefined") {_RecordType("<7,8,1>",(q)); Inst0++; } } catch(e) {}
delete q;
try { if (Inst1 <= 1000 && typeof (g) != "undefined") {_RecordType("<17,18,2>",(g)); Inst1++; } } catch(e) {}
delete g;
try { if (Inst2 <= 1000 && typeof (h) != "undefined") {_RecordType("<27,28,3>",(h)); Inst2++; } } catch(e) {}
delete h;
try { if (Inst3 <= 1000 && typeof (a) != "undefined") {_RecordType("<37,38,4>",(a)); Inst3++; } } catch(e) {}
delete a;
try { if (Inst4 <= 1000 && typeof (f) != "undefined") {_RecordType("<47,48,5>",(f)); Inst4++; } } catch(e) {}
delete f;

try { if (Inst5 <= 1000 && typeof (testRebranding2) != "undefined") {_RecordType("<60,75,7>",(testRebranding2)); Inst5++; } } catch(e) {}
function testRebranding2() {
  // Same as testRebranding, but the object to be rebranded isn't the global.
  var x = "FAIL";
try { if (Inst6 <= 1000 && typeof (x) != "undefined") {_RecordType("<164,165,9>",(x)); Inst6++; } } catch(e) {}

try { if (Inst7 <= 1000 && typeof (g) != "undefined") {_RecordType("<188,189,11>",(g)); Inst7++; } } catch(e) {}
  function g() {
    ;
  }

try { if (Inst8 <= 1000 && typeof (h) != "undefined") {_RecordType("<216,217,15>",(h)); Inst8++; } } catch(e) {}
  function h() {
    x = "ok";
try { if (Inst9 <= 1000 && typeof (x) != "undefined") {_RecordType("<226,227,16>",(x)); Inst9++; } } catch(e) {}
  }

try { if (Inst11 <= 1000 && typeof (g) != "undefined") {_RecordType("<262,263,20>",(g)); Inst11++; } } catch(e) {}
  var obj = {
    m: g
  };
try { if (Inst10 <= 1000 && typeof (obj) != "undefined") {_RecordType("<247,250,19>",(obj)); Inst10++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (g) != "undefined") {_RecordType("<282,283,22>",(g)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (g) != "undefined") {_RecordType("<285,286,22>",(g)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (g) != "undefined") {_RecordType("<288,289,22>",(g)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (g) != "undefined") {_RecordType("<291,292,22>",(g)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (h) != "undefined") {_RecordType("<294,295,22>",(h)); Inst17++; } } catch(e) {}
  var arr = [g, g, g, g, h]; //assertEq(arr.length > 9, true);
try { if (Inst12 <= 1000 && typeof (arr) != "undefined") {_RecordType("<275,278,22>",(arr)); Inst12++; } } catch(e) {}

  for (var i = 0; i < 5; i++) {
try { if (Inst18 <= 1000 && typeof (i) != "undefined") {_RecordType("<344,345,24>",(i)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (i) != "undefined") {_RecordType("<351,352,24>",(i)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<358,359,24>",(i)); Inst20++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (arr[i]) != "undefined") {_RecordType("<377,383,25>",(arr[i])); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (arr) != "undefined") {_RecordType("<377,380,25>",(arr)); Inst24++; } } catch(e) {}
    obj.m = arr[i];
try { if (Inst21 <= 1000 && typeof (obj.m) != "undefined") {_RecordType("<369,374,25>",(obj.m)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (obj) != "undefined") {_RecordType("<369,372,25>",(obj)); Inst22++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (obj.m) != "undefined") {_RecordType("<389,394,26>",(obj.m)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (obj) != "undefined") {_RecordType("<389,392,26>",(obj)); Inst26++; } } catch(e) {}
    obj.m();
  }

try { if (Inst27 <= 1000 && typeof (x) != "undefined") {_RecordType("<412,413,29>",(x)); Inst27++; } } catch(e) {}
  return x;
}

try { if (Inst28 <= 1000 && typeof (testRebranding2) != "undefined") {_RecordType("<418,433,32>",(testRebranding2)); Inst28++; } } catch(e) {}
testRebranding2();
"ok";

