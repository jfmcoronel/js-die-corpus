var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
var x = [1, 2,, 4];
try { if (Inst0 <= 1000 && typeof (x) != "undefined") {_RecordType("<4,5,1>",(x)); Inst0++; } } catch(e) {}
x[100000] = 1;
try { if (Inst1 <= 1000 && typeof (x[100000]) != "undefined") {_RecordType("<20,29,2>",(x[100000])); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (x) != "undefined") {_RecordType("<20,21,2>",(x)); Inst2++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (Object.create) != "undefined") {_RecordType("<43,56,3>",(Object.create)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Object) != "undefined") {_RecordType("<43,49,3>",(Object)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (x) != "undefined") {_RecordType("<57,58,3>",(x)); Inst6++; } } catch(e) {}
var y = Object.create(x);
try { if (Inst3 <= 1000 && typeof (y) != "undefined") {_RecordType("<39,40,3>",(y)); Inst3++; } } catch(e) {}
y.a = 1;
try { if (Inst7 <= 1000 && typeof (y.a) != "undefined") {_RecordType("<61,64,4>",(y.a)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (y) != "undefined") {_RecordType("<61,62,4>",(y)); Inst8++; } } catch(e) {}
y.b = 1;
try { if (Inst9 <= 1000 && typeof (y.b) != "undefined") {_RecordType("<70,73,5>",(y.b)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (y) != "undefined") {_RecordType("<70,71,5>",(y)); Inst10++; } } catch(e) {}
var arr = [];
try { if (Inst11 <= 1000 && typeof (arr) != "undefined") {_RecordType("<83,86,6>",(arr)); Inst11++; } } catch(e) {}

for (var z in y) {
try { if (Inst12 <= 1000 && typeof (z) != "undefined") {_RecordType("<103,104,8>",(z)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (y) != "undefined") {_RecordType("<108,109,8>",(y)); Inst13++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (arr.push) != "undefined") {_RecordType("<115,123,9>",(arr.push)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (arr) != "undefined") {_RecordType("<115,118,9>",(arr)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (z) != "undefined") {_RecordType("<124,125,9>",(z)); Inst16++; } } catch(e) {}
  arr.push(z);
}

try { if (Inst17 <= 1000 && typeof (arr.join) != "undefined") {_RecordType("<131,139,12>",(arr.join)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (arr) != "undefined") {_RecordType("<131,134,12>",(arr)); Inst18++; } } catch(e) {}
arr.join();
"a,b,0,1,3,100000";

