var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst1 <= 1000 && typeof (Function) != "undefined") {_RecordType("<8,16,1>",(Function)); Inst1++; } } catch(e) {}
var f = Function("a", "b", "return a + b;");
try { if (Inst0 <= 1000 && typeof (f) != "undefined") {_RecordType("<4,5,1>",(f)); Inst0++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (f.toString) != "undefined") {_RecordType("<45,55,2>",(f.toString)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (f) != "undefined") {_RecordType("<45,46,2>",(f)); Inst3++; } } catch(e) {}
f.toString();
"function anonymous(a,b\n) {\nreturn a + b;\n}";
try { if (Inst4 <= 1000 && typeof (f.toSource) != "undefined") {_RecordType("<108,118,4>",(f.toSource)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (f) != "undefined") {_RecordType("<108,109,4>",(f)); Inst5++; } } catch(e) {}
f.toSource();
"(function anonymous(a,b\n) {\nreturn a + b;\n})";
try { if (Inst6 <= 1000 && typeof (decompileFunction) != "undefined") {_RecordType("<173,190,6>",(decompileFunction)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (f) != "undefined") {_RecordType("<191,192,6>",(f)); Inst7++; } } catch(e) {}
decompileFunction(f);
try { if (Inst8 <= 1000 && typeof (f.toString) != "undefined") {_RecordType("<195,205,7>",(f.toString)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (f) != "undefined") {_RecordType("<195,196,7>",(f)); Inst9++; } } catch(e) {}
f.toString();
try { if (Inst11 <= 1000 && typeof (Function) != "undefined") {_RecordType("<213,221,8>",(Function)); Inst11++; } } catch(e) {}
f = Function("a", "...rest", "return rest[42] + b;");
try { if (Inst10 <= 1000 && typeof (f) != "undefined") {_RecordType("<209,210,8>",(f)); Inst10++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (f.toString) != "undefined") {_RecordType("<263,273,9>",(f.toString)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (f) != "undefined") {_RecordType("<263,264,9>",(f)); Inst13++; } } catch(e) {}
f.toString();
"function anonymous(a,...rest\n) {\nreturn rest[42] + b;\n}";
try { if (Inst14 <= 1000 && typeof (f.toSource) != "undefined") {_RecordType("<339,349,11>",(f.toSource)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (f) != "undefined") {_RecordType("<339,340,11>",(f)); Inst15++; } } catch(e) {}
f.toSource();
"(function anonymous(a,...rest\n) {\nreturn rest[42] + b;\n})";
try { if (Inst16 <= 1000 && typeof (decompileFunction) != "undefined") {_RecordType("<417,434,13>",(decompileFunction)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (f) != "undefined") {_RecordType("<435,436,13>",(f)); Inst17++; } } catch(e) {}
decompileFunction(f);
try { if (Inst18 <= 1000 && typeof (f.toString) != "undefined") {_RecordType("<439,449,14>",(f.toString)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (f) != "undefined") {_RecordType("<439,440,14>",(f)); Inst19++; } } catch(e) {}
f.toString();
try { if (Inst21 <= 1000 && typeof (Function) != "undefined") {_RecordType("<457,465,15>",(Function)); Inst21++; } } catch(e) {}
f = Function("");
try { if (Inst20 <= 1000 && typeof (f) != "undefined") {_RecordType("<453,454,15>",(f)); Inst20++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (f.toString) != "undefined") {_RecordType("<471,481,16>",(f.toString)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (f) != "undefined") {_RecordType("<471,472,16>",(f)); Inst23++; } } catch(e) {}
f.toString();
"function anonymous(\n) {\n\n}";
try { if (Inst25 <= 1000 && typeof (Function) != "undefined") {_RecordType("<522,530,18>",(Function)); Inst25++; } } catch(e) {}
f = Function("", "(abc)");
try { if (Inst24 <= 1000 && typeof (f) != "undefined") {_RecordType("<518,519,18>",(f)); Inst24++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (f.toString) != "undefined") {_RecordType("<545,555,19>",(f.toString)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (f) != "undefined") {_RecordType("<545,546,19>",(f)); Inst27++; } } catch(e) {}
f.toString();
"function anonymous(\n) {\n(abc)\n}";

