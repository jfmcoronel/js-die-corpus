var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* Resolve 'arguments' and the name of the function itself in the presence of such local variables. */
try { if (Inst0 <= 1000 && typeof (f) != "undefined") {_RecordType("<112,113,2>",(f)); Inst0++; } } catch(e) {}
function f() {
try { if (Inst1 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<134,143,3>",(arguments)); Inst1++; } } catch(e) {}
  return typeof arguments;

try { if (Inst2 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<157,166,5>",(arguments)); Inst2++; } } catch(e) {}
  function arguments() {
    return 7;
  }
}

try { if (Inst3 <= 1000 && typeof (f) != "undefined") {_RecordType("<192,193,10>",(f)); Inst3++; } } catch(e) {}
f();
"function";

try { if (Inst4 <= 1000 && typeof (g) != "undefined") {_RecordType("<219,220,13>",(g)); Inst4++; } } catch(e) {}
function g() {
  var arguments = 0;
try { if (Inst5 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<231,240,14>",(arguments)); Inst5++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<262,271,15>",(arguments)); Inst6++; } } catch(e) {}
  return typeof arguments;
}

try { if (Inst7 <= 1000 && typeof (g) != "undefined") {_RecordType("<276,277,18>",(g)); Inst7++; } } catch(e) {}
g();
"number";

try { if (Inst8 <= 1000 && typeof (h) != "undefined") {_RecordType("<301,302,21>",(h)); Inst8++; } } catch(e) {}
function h() {
try { if (Inst9 <= 1000 && typeof (h) != "undefined") {_RecordType("<323,324,22>",(h)); Inst9++; } } catch(e) {}
  return typeof h;

try { if (Inst10 <= 1000 && typeof (h) != "undefined") {_RecordType("<338,339,24>",(h)); Inst10++; } } catch(e) {}
  function h() {
    return 7;
  }
}

try { if (Inst11 <= 1000 && typeof (h) != "undefined") {_RecordType("<365,366,29>",(h)); Inst11++; } } catch(e) {}
h();
"function";

try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<392,393,32>",(i)); Inst12++; } } catch(e) {}
function i() {
try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<414,415,33>",(i)); Inst13++; } } catch(e) {}
  return typeof i;
  var i;
try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<423,424,34>",(i)); Inst14++; } } catch(e) {}
}

try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<429,430,37>",(i)); Inst15++; } } catch(e) {}
i();
"undefined";

try { if (Inst16 <= 1000 && typeof (j) != "undefined") {_RecordType("<457,458,40>",(j)); Inst16++; } } catch(e) {}
function j() {
try { if (Inst17 <= 1000 && typeof (j) != "undefined") {_RecordType("<479,480,41>",(j)); Inst17++; } } catch(e) {}
  return typeof j;
}

try { if (Inst18 <= 1000 && typeof (j) != "undefined") {_RecordType("<485,486,44>",(j)); Inst18++; } } catch(e) {}
j();
"function";

