var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/*
 * Any copyright is dedicated to the Public Domain.
 * http://creativecommons.org/licenses/publicdomain/
 */
try { if (Inst1 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<298,301,5>",(NaN)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<303,306,5>",(NaN)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<316,319,5>",(NaN)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<321,330,5>",(undefined)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<341,349,5>",(Infinity)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<352,360,5>",(Infinity)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<371,379,5>",(Infinity)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<381,389,5>",(Infinity)); Inst8++; } } catch(e) {}
var list = [[1, 1, true], [0, 1, false], [3.5, 3.5, true], [0, 0, true], [0, -0, false], [-0, 0, false], [-0, -0, true], [true, true, true], [true, false, false], [false, false, true], [NaN, NaN, true], [NaN, undefined, false], [Infinity, -Infinity, false], [Infinity, Infinity, true]];
try { if (Inst0 <= 1000 && typeof (list) != "undefined") {_RecordType("<116,120,5>",(list)); Inst0++; } } catch(e) {}

for (var test of list) {
try { if (Inst9 <= 1000 && typeof (test) != "undefined") {_RecordType("<409,413,7>",(test)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (list) != "undefined") {_RecordType("<417,421,7>",(list)); Inst10++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (Object.is) != "undefined") {_RecordType("<427,436,8>",(Object.is)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Object) != "undefined") {_RecordType("<427,433,8>",(Object)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (test[0]) != "undefined") {_RecordType("<437,444,8>",(test[0])); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (test) != "undefined") {_RecordType("<437,441,8>",(test)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (test[1]) != "undefined") {_RecordType("<446,453,8>",(test[1])); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (test) != "undefined") {_RecordType("<446,450,8>",(test)); Inst16++; } } catch(e) {}
  Object.is(test[0], test[1]);
try { if (Inst17 <= 1000 && typeof (test[2]) != "undefined") {_RecordType("<458,465,9>",(test[2])); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (test) != "undefined") {_RecordType("<458,462,9>",(test)); Inst18++; } } catch(e) {}
  test[2];
}

var obj = {};
try { if (Inst19 <= 1000 && typeof (obj) != "undefined") {_RecordType("<474,477,12>",(obj)); Inst19++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (Object.is) != "undefined") {_RecordType("<484,493,13>",(Object.is)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Object) != "undefined") {_RecordType("<484,490,13>",(Object)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (obj) != "undefined") {_RecordType("<494,497,13>",(obj)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (obj) != "undefined") {_RecordType("<499,502,13>",(obj)); Inst23++; } } catch(e) {}
Object.is(obj, obj);
true;
try { if (Inst24 <= 1000 && typeof (Object.is) != "undefined") {_RecordType("<511,520,15>",(Object.is)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Object) != "undefined") {_RecordType("<511,517,15>",(Object)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (obj) != "undefined") {_RecordType("<521,524,15>",(obj)); Inst26++; } } catch(e) {}
Object.is(obj, {});
false;
try { if (Inst27 <= 1000 && typeof (Object.is) != "undefined") {_RecordType("<538,547,17>",(Object.is)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (Object) != "undefined") {_RecordType("<538,544,17>",(Object)); Inst28++; } } catch(e) {}
Object.is([], []);
false;
try { if (Inst29 <= 1000 && typeof (Object.is) != "undefined") {_RecordType("<564,573,19>",(Object.is)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (Object) != "undefined") {_RecordType("<564,570,19>",(Object)); Inst30++; } } catch(e) {}
Object.is(null, null, null);
true;
try { if (Inst31 <= 1000 && typeof (Object.is) != "undefined") {_RecordType("<599,608,21>",(Object.is)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (Object) != "undefined") {_RecordType("<599,605,21>",(Object)); Inst32++; } } catch(e) {}
Object.is(null);
false;
try { if (Inst33 <= 1000 && typeof (Object.is) != "undefined") {_RecordType("<623,632,23>",(Object.is)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (Object) != "undefined") {_RecordType("<623,629,23>",(Object)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<633,642,23>",(undefined)); Inst35++; } } catch(e) {}
Object.is(undefined);
true;
try { if (Inst36 <= 1000 && typeof (Object.is) != "undefined") {_RecordType("<651,660,25>",(Object.is)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (Object) != "undefined") {_RecordType("<651,657,25>",(Object)); Inst37++; } } catch(e) {}
Object.is();
true;
try { if (Inst38 <= 1000 && typeof (Object.is.length) != "undefined") {_RecordType("<670,686,27>",(Object.is.length)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (Object.is) != "undefined") {_RecordType("<670,679,27>",(Object.is)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (Object) != "undefined") {_RecordType("<670,676,27>",(Object)); Inst40++; } } catch(e) {}
Object.is.length;
2;

