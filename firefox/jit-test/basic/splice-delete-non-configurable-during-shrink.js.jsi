var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* Test that splice causing deletion of a non-configurable property stops at exactly step 12(v) of ES5 15.4.4.12 */
var O = [1, 2, 3, 4, 5, 6];
try { if (Inst0 <= 1000 && typeof (O) != "undefined") {_RecordType("<120,121,2>",(O)); Inst0++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<152,161,3>",(undefined)); Inst2++; } } catch(e) {}
var A = undefined;
try { if (Inst1 <= 1000 && typeof (A) != "undefined") {_RecordType("<148,149,3>",(A)); Inst1++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<163,184,4>",(Object.defineProperty)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Object) != "undefined") {_RecordType("<163,169,4>",(Object)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (O) != "undefined") {_RecordType("<185,186,4>",(O)); Inst5++; } } catch(e) {}
Object.defineProperty(O, 3, {
  configurable: false
});

try { if (Inst11 <= 1000 && typeof (e) != "undefined") {_RecordType("<307,308,11>",(e)); Inst11++; } } catch(e) {}
try {
try { if (Inst7 <= 1000 && typeof (O.splice) != "undefined") {_RecordType("<232,240,9>",(O.splice)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (O) != "undefined") {_RecordType("<232,233,9>",(O)); Inst8++; } } catch(e) {}
  A = O.splice(0, 6);
try { if (Inst6 <= 1000 && typeof (A) != "undefined") {_RecordType("<228,229,9>",(A)); Inst6++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (Error) != "undefined") {_RecordType("<260,265,10>",(Error)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (A) != "undefined") {_RecordType("<294,295,10>",(A)); Inst10++; } } catch(e) {}
  throw new Error("didn't throw, returned " + A);
} catch (e) {
try { if (Inst12 <= 1000 && typeof (e) != "undefined") {_RecordType("<314,315,12>",(e)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<327,336,12>",(TypeError)); Inst13++; } } catch(e) {}
  e instanceof TypeError;
  true;
  "deleting O[3] should have caused a TypeError";
}

try { if (Inst14 <= 1000 && typeof (O.length) != "undefined") {_RecordType("<399,407,17>",(O.length)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (O) != "undefined") {_RecordType("<399,400,17>",(O)); Inst15++; } } catch(e) {}
O.length;
6;
try { if (Inst16 <= 1000 && typeof (A) != "undefined") {_RecordType("<412,413,19>",(A)); Inst16++; } } catch(e) {}
A;
try { if (Inst17 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<415,424,20>",(undefined)); Inst17++; } } catch(e) {}
undefined;
try { if (Inst18 <= 1000 && typeof (O[5]) != "undefined") {_RecordType("<426,430,21>",(O[5])); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (O) != "undefined") {_RecordType("<426,427,21>",(O)); Inst19++; } } catch(e) {}
O[5];
try { if (Inst20 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<432,441,22>",(undefined)); Inst20++; } } catch(e) {}
undefined;
try { if (Inst21 <= 1000 && typeof (O[4]) != "undefined") {_RecordType("<443,447,23>",(O[4])); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (O) != "undefined") {_RecordType("<443,444,23>",(O)); Inst22++; } } catch(e) {}
O[4];
try { if (Inst23 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<449,458,24>",(undefined)); Inst23++; } } catch(e) {}
undefined;
try { if (Inst24 <= 1000 && typeof (O[3]) != "undefined") {_RecordType("<460,464,25>",(O[3])); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (O) != "undefined") {_RecordType("<460,461,25>",(O)); Inst25++; } } catch(e) {}
O[3];
4;
try { if (Inst26 <= 1000 && typeof (O[2]) != "undefined") {_RecordType("<469,473,27>",(O[2])); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (O) != "undefined") {_RecordType("<469,470,27>",(O)); Inst27++; } } catch(e) {}
O[2];
3;
try { if (Inst28 <= 1000 && typeof (O[1]) != "undefined") {_RecordType("<478,482,29>",(O[1])); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (O) != "undefined") {_RecordType("<478,479,29>",(O)); Inst29++; } } catch(e) {}
O[1];
2;
try { if (Inst30 <= 1000 && typeof (O[0]) != "undefined") {_RecordType("<487,491,31>",(O[0])); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (O) != "undefined") {_RecordType("<487,488,31>",(O)); Inst31++; } } catch(e) {}
O[0];
1;

