var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst1 <= 1000 && typeof (Function.prototype) != "undefined") {_RecordType("<15,33,1>",(Function.prototype)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Function) != "undefined") {_RecordType("<15,23,1>",(Function)); Inst2++; } } catch(e) {}
var funProto = Function.prototype;
try { if (Inst0 <= 1000 && typeof (funProto) != "undefined") {_RecordType("<4,12,1>",(funProto)); Inst0++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<35,66,2>",(Object.getOwnPropertyDescriptor)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Object) != "undefined") {_RecordType("<35,41,2>",(Object)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (funProto) != "undefined") {_RecordType("<67,75,2>",(funProto)); Inst5++; } } catch(e) {}
Object.getOwnPropertyDescriptor(funProto, "prototype");
try { if (Inst6 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<91,100,3>",(undefined)); Inst6++; } } catch(e) {}
undefined;
try { if (Inst7 <= 1000 && typeof (parseInt.prototype) != "undefined") {_RecordType("<102,120,4>",(parseInt.prototype)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<102,110,4>",(parseInt)); Inst8++; } } catch(e) {}
parseInt.prototype;
try { if (Inst9 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<122,131,5>",(undefined)); Inst9++; } } catch(e) {}
undefined;
var oldObj;
try { if (Inst10 <= 1000 && typeof (oldObj) != "undefined") {_RecordType("<137,143,6>",(oldObj)); Inst10++; } } catch(e) {}

for (var i = 0, sz = 9; i < sz; oldObj = obj, i++) {
try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<155,156,8>",(i)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (sz) != "undefined") {_RecordType("<162,164,8>",(sz)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<170,171,8>",(i)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (sz) != "undefined") {_RecordType("<174,176,8>",(sz)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (oldObj) != "undefined") {_RecordType("<178,184,8>",(oldObj)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (obj) != "undefined") {_RecordType("<187,190,8>",(obj)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (i) != "undefined") {_RecordType("<192,193,8>",(i)); Inst17++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (e) != "undefined") {_RecordType("<248,249,11>",(e)); Inst20++; } } catch(e) {}
  try {
try { if (Inst19 <= 1000 && typeof (funProto) != "undefined") {_RecordType("<225,233,10>",(funProto)); Inst19++; } } catch(e) {}
    var obj = new funProto();
try { if (Inst18 <= 1000 && typeof (obj) != "undefined") {_RecordType("<215,218,10>",(obj)); Inst18++; } } catch(e) {}
  } catch (e) {
    ;
  }

try { if (Inst21 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<266,297,15>",(Object.getOwnPropertyDescriptor)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Object) != "undefined") {_RecordType("<266,272,15>",(Object)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (funProto) != "undefined") {_RecordType("<298,306,15>",(funProto)); Inst23++; } } catch(e) {}
  Object.getOwnPropertyDescriptor(funProto, "prototype");
try { if (Inst24 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<324,333,16>",(undefined)); Inst24++; } } catch(e) {}
  undefined;
try { if (Inst25 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<337,368,17>",(Object.getOwnPropertyDescriptor)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Object) != "undefined") {_RecordType("<337,343,17>",(Object)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<369,377,17>",(parseInt)); Inst27++; } } catch(e) {}
  Object.getOwnPropertyDescriptor(parseInt, "prototype");
try { if (Inst28 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<395,404,18>",(undefined)); Inst28++; } } catch(e) {}
  undefined;
try { if (Inst29 <= 1000 && typeof (parseInt.prototype) != "undefined") {_RecordType("<408,426,19>",(parseInt.prototype)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<408,416,19>",(parseInt)); Inst30++; } } catch(e) {}
  parseInt.prototype;
try { if (Inst31 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<430,439,20>",(undefined)); Inst31++; } } catch(e) {}
  undefined;
}

