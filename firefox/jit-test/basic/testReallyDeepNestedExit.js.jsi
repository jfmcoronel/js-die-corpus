var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (reallyDeepNestedExit) != "undefined") {_RecordType("<9,29,1>",(reallyDeepNestedExit)); Inst0++; } } catch(e) {}
function reallyDeepNestedExit(schedule) {
try { if (Inst1 <= 1000 && typeof (schedule) != "undefined") {_RecordType("<30,38,1>",(schedule)); Inst1++; } } catch(e) {}
  var c = 0,
      j = 0;
try { if (Inst2 <= 1000 && typeof (c) != "undefined") {_RecordType("<48,49,2>",(c)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (j) != "undefined") {_RecordType("<61,62,3>",(j)); Inst3++; } } catch(e) {}

  for (var i = 0; i < 5; i++) {
try { if (Inst4 <= 1000 && typeof (i) != "undefined") {_RecordType("<80,81,5>",(i)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (i) != "undefined") {_RecordType("<87,88,5>",(i)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<94,95,5>",(i)); Inst6++; } } catch(e) {}
    for (j = 0; j < 4; j++) {
try { if (Inst7 <= 1000 && typeof (j) != "undefined") {_RecordType("<110,111,6>",(j)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (j) != "undefined") {_RecordType("<117,118,6>",(j)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (j) != "undefined") {_RecordType("<124,125,6>",(j)); Inst9++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (schedule[i * 4 + j]) != "undefined") {_RecordType("<142,161,7>",(schedule[i * 4 + j])); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (schedule) != "undefined") {_RecordType("<142,150,7>",(schedule)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<151,152,7>",(i)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (j) != "undefined") {_RecordType("<159,160,7>",(j)); Inst14++; } } catch(e) {}
      c += schedule[i * 4 + j] == 1 ? 1 : 2;
try { if (Inst10 <= 1000 && typeof (c) != "undefined") {_RecordType("<137,138,7>",(c)); Inst10++; } } catch(e) {}
    }
  }

try { if (Inst15 <= 1000 && typeof (c) != "undefined") {_RecordType("<196,197,11>",(c)); Inst15++; } } catch(e) {}
  return c;
}

try { if (Inst16 <= 1000 && typeof (testReallyDeepNestedExit) != "undefined") {_RecordType("<211,235,14>",(testReallyDeepNestedExit)); Inst16++; } } catch(e) {}
function testReallyDeepNestedExit() {
  var c = 0;
try { if (Inst17 <= 1000 && typeof (c) != "undefined") {_RecordType("<246,247,15>",(c)); Inst17++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (Array) != "undefined") {_RecordType("<275,280,16>",(Array)); Inst19++; } } catch(e) {}
  var schedule1 = new Array(5 * 4);
try { if (Inst18 <= 1000 && typeof (schedule1) != "undefined") {_RecordType("<259,268,16>",(schedule1)); Inst18++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (Array) != "undefined") {_RecordType("<311,316,17>",(Array)); Inst21++; } } catch(e) {}
  var schedule2 = new Array(5 * 4);
try { if (Inst20 <= 1000 && typeof (schedule2) != "undefined") {_RecordType("<295,304,17>",(schedule2)); Inst20++; } } catch(e) {}

  for (var i = 0; i < 5 * 4; i++) {
try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<337,338,19>",(i)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<344,345,19>",(i)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<355,356,19>",(i)); Inst24++; } } catch(e) {}
    schedule1[i] = 0;
try { if (Inst25 <= 1000 && typeof (schedule1[i]) != "undefined") {_RecordType("<366,378,20>",(schedule1[i])); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (schedule1) != "undefined") {_RecordType("<366,375,20>",(schedule1)); Inst26++; } } catch(e) {}
    schedule2[i] = 0;
try { if (Inst27 <= 1000 && typeof (schedule2[i]) != "undefined") {_RecordType("<388,400,21>",(schedule2[i])); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (schedule2) != "undefined") {_RecordType("<388,397,21>",(schedule2)); Inst28++; } } catch(e) {}
  }
  /**
   * First innermost compile: true branch runs through.
   * Second '': false branch compiles new loop edge.
   * First outer compile: expect true branch.
   * Second '': hit false branch.
   */


  schedule1[0 * 4 + 3] = 1;
try { if (Inst29 <= 1000 && typeof (schedule1[0 * 4 + 3]) != "undefined") {_RecordType("<615,635,31>",(schedule1[0 * 4 + 3])); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (schedule1) != "undefined") {_RecordType("<615,624,31>",(schedule1)); Inst30++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (schedule1) != "undefined") {_RecordType("<660,669,32>",(schedule1)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (schedule2) != "undefined") {_RecordType("<671,680,32>",(schedule2)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (schedule1) != "undefined") {_RecordType("<682,691,32>",(schedule1)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (schedule2) != "undefined") {_RecordType("<693,702,32>",(schedule2)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (schedule2) != "undefined") {_RecordType("<704,713,32>",(schedule2)); Inst36++; } } catch(e) {}
  var schedules = [schedule1, schedule2, schedule1, schedule2, schedule2];
try { if (Inst31 <= 1000 && typeof (schedules) != "undefined") {_RecordType("<647,656,32>",(schedules)); Inst31++; } } catch(e) {}

  for (var i = 0; i < 5; i++) {
try { if (Inst37 <= 1000 && typeof (i) != "undefined") {_RecordType("<728,729,34>",(i)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (i) != "undefined") {_RecordType("<735,736,34>",(i)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (i) != "undefined") {_RecordType("<742,743,34>",(i)); Inst39++; } } catch(e) {}
try { if (Inst41 <= 1000 && typeof (reallyDeepNestedExit) != "undefined") {_RecordType("<758,778,35>",(reallyDeepNestedExit)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (schedules[i]) != "undefined") {_RecordType("<779,791,35>",(schedules[i])); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (schedules) != "undefined") {_RecordType("<779,788,35>",(schedules)); Inst43++; } } catch(e) {}
    c += reallyDeepNestedExit(schedules[i]);
try { if (Inst40 <= 1000 && typeof (c) != "undefined") {_RecordType("<753,754,35>",(c)); Inst40++; } } catch(e) {}
  }

try { if (Inst44 <= 1000 && typeof (c) != "undefined") {_RecordType("<808,809,38>",(c)); Inst44++; } } catch(e) {}
  return c;
}

try { if (Inst45 <= 1000 && typeof (testReallyDeepNestedExit) != "undefined") {_RecordType("<814,838,41>",(testReallyDeepNestedExit)); Inst45++; } } catch(e) {}
testReallyDeepNestedExit();
198;

