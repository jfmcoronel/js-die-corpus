var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Same thing but nested trees, each reconstructing one or more stack frames 
// (so, several functions with loops, such that the loops end up being
// nested though they are not lexically nested)
try { if (Inst0 <= 1000 && typeof (testSlowArrayPopNestedTrees) != "undefined") {_RecordType("<206,233,4>",(testSlowArrayPopNestedTrees)); Inst0++; } } catch(e) {}
function testSlowArrayPopNestedTrees() {
  var a = [];
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<244,245,5>",(a)); Inst1++; } } catch(e) {}

  for (var i = 0; i < 9; i++) {
try { if (Inst2 <= 1000 && typeof (i) != "undefined") {_RecordType("<264,265,7>",(i)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (i) != "undefined") {_RecordType("<271,272,7>",(i)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (i) != "undefined") {_RecordType("<278,279,7>",(i)); Inst4++; } } catch(e) {}
    a[i] = [0];
try { if (Inst5 <= 1000 && typeof (a[i]) != "undefined") {_RecordType("<289,293,8>",(a[i])); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (a) != "undefined") {_RecordType("<289,290,8>",(a)); Inst6++; } } catch(e) {}
  }

try { if (Inst7 <= 1000 && typeof (a[8].__defineGetter__) != "undefined") {_RecordType("<308,329,11>",(a[8].__defineGetter__)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (a[8]) != "undefined") {_RecordType("<308,312,11>",(a[8])); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (a) != "undefined") {_RecordType("<308,309,11>",(a)); Inst9++; } } catch(e) {}
  a[8].__defineGetter__("0", function () {
    return 3.14159;
  });

try { if (Inst10 <= 1000 && typeof (child) != "undefined") {_RecordType("<387,392,15>",(child)); Inst10++; } } catch(e) {}
  function child(a, i, j, k) {
try { if (Inst11 <= 1000 && typeof (a) != "undefined") {_RecordType("<393,394,15>",(a)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<396,397,15>",(i)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (j) != "undefined") {_RecordType("<399,400,15>",(j)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (k) != "undefined") {_RecordType("<402,403,15>",(k)); Inst14++; } } catch(e) {}
    var last = 2.71828;
try { if (Inst15 <= 1000 && typeof (last) != "undefined") {_RecordType("<415,419,16>",(last)); Inst15++; } } catch(e) {}

    for (var l = 0; l < 9; l++) {
try { if (Inst16 <= 1000 && typeof (l) != "undefined") {_RecordType("<445,446,18>",(l)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (l) != "undefined") {_RecordType("<452,453,18>",(l)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (l) != "undefined") {_RecordType("<459,460,18>",(l)); Inst18++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (i) != "undefined") {_RecordType("<476,477,19>",(i)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (j) != "undefined") {_RecordType("<486,487,19>",(j)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (k) != "undefined") {_RecordType("<496,497,19>",(k)); Inst21++; } } catch(e) {}
      if (i == 8 && j == 8 && k == 8) {
try { if (Inst23 <= 1000 && typeof (a[l].pop) != "undefined") {_RecordType("<521,529,20>",(a[l].pop)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (a[l]) != "undefined") {_RecordType("<521,525,20>",(a[l])); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (a) != "undefined") {_RecordType("<521,522,20>",(a)); Inst25++; } } catch(e) {}
        last = a[l].pop();
try { if (Inst22 <= 1000 && typeof (last) != "undefined") {_RecordType("<514,518,20>",(last)); Inst22++; } } catch(e) {}
      }
    } // reenters interpreter in getter


try { if (Inst26 <= 1000 && typeof (last) != "undefined") {_RecordType("<594,598,25>",(last)); Inst26++; } } catch(e) {}
    return last;
  }

try { if (Inst27 <= 1000 && typeof (parent) != "undefined") {_RecordType("<616,622,28>",(parent)); Inst27++; } } catch(e) {}
  function parent(a, i, j) {
try { if (Inst28 <= 1000 && typeof (a) != "undefined") {_RecordType("<623,624,28>",(a)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (i) != "undefined") {_RecordType("<626,627,28>",(i)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (j) != "undefined") {_RecordType("<629,630,28>",(j)); Inst30++; } } catch(e) {}
    var last;
try { if (Inst31 <= 1000 && typeof (last) != "undefined") {_RecordType("<642,646,29>",(last)); Inst31++; } } catch(e) {}

    for (var k = 0; k < 9; k++) {
try { if (Inst32 <= 1000 && typeof (k) != "undefined") {_RecordType("<662,663,31>",(k)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (k) != "undefined") {_RecordType("<669,670,31>",(k)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (k) != "undefined") {_RecordType("<676,677,31>",(k)); Inst34++; } } catch(e) {}
try { if (Inst36 <= 1000 && typeof (child) != "undefined") {_RecordType("<696,701,32>",(child)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (a) != "undefined") {_RecordType("<702,703,32>",(a)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (i) != "undefined") {_RecordType("<705,706,32>",(i)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (j) != "undefined") {_RecordType("<708,709,32>",(j)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (k) != "undefined") {_RecordType("<711,712,32>",(k)); Inst40++; } } catch(e) {}
      last = child(a, i, j, k);
try { if (Inst35 <= 1000 && typeof (last) != "undefined") {_RecordType("<689,693,32>",(last)); Inst35++; } } catch(e) {}
    }

try { if (Inst41 <= 1000 && typeof (last) != "undefined") {_RecordType("<733,737,35>",(last)); Inst41++; } } catch(e) {}
    return last;
  }

try { if (Inst42 <= 1000 && typeof (gramps) != "undefined") {_RecordType("<755,761,38>",(gramps)); Inst42++; } } catch(e) {}
  function gramps(a, i) {
try { if (Inst43 <= 1000 && typeof (a) != "undefined") {_RecordType("<762,763,38>",(a)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (i) != "undefined") {_RecordType("<765,766,38>",(i)); Inst44++; } } catch(e) {}
    var last;
try { if (Inst45 <= 1000 && typeof (last) != "undefined") {_RecordType("<778,782,39>",(last)); Inst45++; } } catch(e) {}

    for (var j = 0; j < 9; j++) {
try { if (Inst46 <= 1000 && typeof (j) != "undefined") {_RecordType("<798,799,41>",(j)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (j) != "undefined") {_RecordType("<805,806,41>",(j)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (j) != "undefined") {_RecordType("<812,813,41>",(j)); Inst48++; } } catch(e) {}
try { if (Inst50 <= 1000 && typeof (parent) != "undefined") {_RecordType("<832,838,42>",(parent)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (a) != "undefined") {_RecordType("<839,840,42>",(a)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (i) != "undefined") {_RecordType("<842,843,42>",(i)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (j) != "undefined") {_RecordType("<845,846,42>",(j)); Inst53++; } } catch(e) {}
      last = parent(a, i, j);
try { if (Inst49 <= 1000 && typeof (last) != "undefined") {_RecordType("<825,829,42>",(last)); Inst49++; } } catch(e) {}
    }

try { if (Inst54 <= 1000 && typeof (last) != "undefined") {_RecordType("<867,871,45>",(last)); Inst54++; } } catch(e) {}
    return last;
  }

  var last;
try { if (Inst55 <= 1000 && typeof (last) != "undefined") {_RecordType("<884,888,48>",(last)); Inst55++; } } catch(e) {}

  for (var i = 0; i < 9; i++) {
try { if (Inst56 <= 1000 && typeof (i) != "undefined") {_RecordType("<902,903,50>",(i)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (i) != "undefined") {_RecordType("<909,910,50>",(i)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (i) != "undefined") {_RecordType("<916,917,50>",(i)); Inst58++; } } catch(e) {}
try { if (Inst60 <= 1000 && typeof (gramps) != "undefined") {_RecordType("<934,940,51>",(gramps)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (a) != "undefined") {_RecordType("<941,942,51>",(a)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (i) != "undefined") {_RecordType("<944,945,51>",(i)); Inst62++; } } catch(e) {}
    last = gramps(a, i);
try { if (Inst59 <= 1000 && typeof (last) != "undefined") {_RecordType("<927,931,51>",(last)); Inst59++; } } catch(e) {}
  }

try { if (Inst63 <= 1000 && typeof (last) != "undefined") {_RecordType("<962,966,54>",(last)); Inst63++; } } catch(e) {}
  return last;
}

try { if (Inst64 <= 1000 && typeof (testSlowArrayPopNestedTrees) != "undefined") {_RecordType("<971,998,57>",(testSlowArrayPopNestedTrees)); Inst64++; } } catch(e) {}
testSlowArrayPopNestedTrees();
3.14159;

