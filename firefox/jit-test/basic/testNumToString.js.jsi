var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (testNumToString) != "undefined") {_RecordType("<9,24,1>",(testNumToString)); Inst0++; } } catch(e) {}
function testNumToString() {
  var r = [];
try { if (Inst1 <= 1000 && typeof (r) != "undefined") {_RecordType("<35,36,2>",(r)); Inst1++; } } catch(e) {}
  var d = 123456789;
try { if (Inst2 <= 1000 && typeof (d) != "undefined") {_RecordType("<49,50,3>",(d)); Inst2++; } } catch(e) {}

  for (var i = 0; i < 10; ++i) {
try { if (Inst3 <= 1000 && typeof (i) != "undefined") {_RecordType("<76,77,5>",(i)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (i) != "undefined") {_RecordType("<83,84,5>",(i)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (i) != "undefined") {_RecordType("<93,94,5>",(i)); Inst5++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (d.toString) != "undefined") {_RecordType("<107,117,6>",(d.toString)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (d) != "undefined") {_RecordType("<107,108,6>",(d)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof ((-d).toString) != "undefined") {_RecordType("<121,134,6>",((-d).toString)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (d) != "undefined") {_RecordType("<123,124,6>",(d)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (d.toString) != "undefined") {_RecordType("<138,148,6>",(d.toString)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (d) != "undefined") {_RecordType("<138,139,6>",(d)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof ((-d).toString) != "undefined") {_RecordType("<154,167,6>",((-d).toString)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (d) != "undefined") {_RecordType("<156,157,6>",(d)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (d.toString) != "undefined") {_RecordType("<173,183,6>",(d.toString)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (d) != "undefined") {_RecordType("<173,174,6>",(d)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof ((-d).toString) != "undefined") {_RecordType("<189,202,6>",((-d).toString)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (d) != "undefined") {_RecordType("<191,192,6>",(d)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (d.toString) != "undefined") {_RecordType("<208,218,6>",(d.toString)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (d) != "undefined") {_RecordType("<208,209,6>",(d)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof ((-d).toString) != "undefined") {_RecordType("<224,237,6>",((-d).toString)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (d) != "undefined") {_RecordType("<226,227,6>",(d)); Inst22++; } } catch(e) {}
    r = [d.toString(), (-d).toString(), d.toString(10), (-d).toString(10), d.toString(16), (-d).toString(16), d.toString(36), (-d).toString(36)];
try { if (Inst6 <= 1000 && typeof (r) != "undefined") {_RecordType("<102,103,6>",(r)); Inst6++; } } catch(e) {}
  }

try { if (Inst23 <= 1000 && typeof (r.join) != "undefined") {_RecordType("<258,264,9>",(r.join)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (r) != "undefined") {_RecordType("<258,259,9>",(r)); Inst24++; } } catch(e) {}
  return r.join(",");
}

try { if (Inst25 <= 1000 && typeof (testNumToString) != "undefined") {_RecordType("<274,289,12>",(testNumToString)); Inst25++; } } catch(e) {}
testNumToString();
"123456789,-123456789,123456789,-123456789,75bcd15,-75bcd15,21i3v9,-21i3v9";

