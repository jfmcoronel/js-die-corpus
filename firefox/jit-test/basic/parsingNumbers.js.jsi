var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (parsingNumbers) != "undefined") {_RecordType("<9,23,1>",(parsingNumbers)); Inst0++; } } catch(e) {}
function parsingNumbers() {
  var s1 = "123";
try { if (Inst1 <= 1000 && typeof (s1) != "undefined") {_RecordType("<34,36,2>",(s1)); Inst1++; } } catch(e) {}
  var s1z = "123zzz";
try { if (Inst2 <= 1000 && typeof (s1z) != "undefined") {_RecordType("<52,55,3>",(s1z)); Inst2++; } } catch(e) {}
  var s2 = "123.456";
try { if (Inst3 <= 1000 && typeof (s2) != "undefined") {_RecordType("<74,76,4>",(s2)); Inst3++; } } catch(e) {}
  var s2z = "123.456zzz";
try { if (Inst4 <= 1000 && typeof (s2z) != "undefined") {_RecordType("<96,99,5>",(s2z)); Inst4++; } } catch(e) {}
  var e1 = 123;
try { if (Inst5 <= 1000 && typeof (e1) != "undefined") {_RecordType("<122,124,6>",(e1)); Inst5++; } } catch(e) {}
  var e2 = 123.456;
try { if (Inst6 <= 1000 && typeof (e2) != "undefined") {_RecordType("<138,140,7>",(e2)); Inst6++; } } catch(e) {}
  var r1, r1z, r2, r2z;
try { if (Inst7 <= 1000 && typeof (r1) != "undefined") {_RecordType("<158,160,8>",(r1)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (r1z) != "undefined") {_RecordType("<162,165,8>",(r1z)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (r2) != "undefined") {_RecordType("<167,169,8>",(r2)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (r2z) != "undefined") {_RecordType("<171,174,8>",(r2z)); Inst10++; } } catch(e) {}

  for (var i = 0; i < 10; i++) {
try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<188,189,10>",(i)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<195,196,10>",(i)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<203,204,10>",(i)); Inst13++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<219,227,11>",(parseInt)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (s1) != "undefined") {_RecordType("<228,230,11>",(s1)); Inst16++; } } catch(e) {}
    r1 = parseInt(s1);
try { if (Inst14 <= 1000 && typeof (r1) != "undefined") {_RecordType("<214,216,11>",(r1)); Inst14++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<243,251,12>",(parseInt)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (s1z) != "undefined") {_RecordType("<252,255,12>",(s1z)); Inst19++; } } catch(e) {}
    r1z = parseInt(s1z);
try { if (Inst17 <= 1000 && typeof (r1z) != "undefined") {_RecordType("<237,240,12>",(r1z)); Inst17++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (parseFloat) != "undefined") {_RecordType("<267,277,13>",(parseFloat)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (s2) != "undefined") {_RecordType("<278,280,13>",(s2)); Inst22++; } } catch(e) {}
    r2 = parseFloat(s2);
try { if (Inst20 <= 1000 && typeof (r2) != "undefined") {_RecordType("<262,264,13>",(r2)); Inst20++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (parseFloat) != "undefined") {_RecordType("<293,303,14>",(parseFloat)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (s2z) != "undefined") {_RecordType("<304,307,14>",(s2z)); Inst25++; } } catch(e) {}
    r2z = parseFloat(s2z);
try { if (Inst23 <= 1000 && typeof (r2z) != "undefined") {_RecordType("<287,290,14>",(r2z)); Inst23++; } } catch(e) {}
  }

try { if (Inst26 <= 1000 && typeof (r1) != "undefined") {_RecordType("<321,323,17>",(r1)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (e1) != "undefined") {_RecordType("<327,329,17>",(e1)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (r1z) != "undefined") {_RecordType("<333,336,17>",(r1z)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (e1) != "undefined") {_RecordType("<340,342,17>",(e1)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (r2) != "undefined") {_RecordType("<346,348,17>",(r2)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (e2) != "undefined") {_RecordType("<352,354,17>",(e2)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (r2z) != "undefined") {_RecordType("<358,361,17>",(r2z)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (e2) != "undefined") {_RecordType("<365,367,17>",(e2)); Inst33++; } } catch(e) {}
  if (r1 == e1 && r1z == e1 && r2 == e2 && r2z == e2) {
    return "ok";
  }

  return "fail";
}

try { if (Inst34 <= 1000 && typeof (parsingNumbers) != "undefined") {_RecordType("<413,427,24>",(parsingNumbers)); Inst34++; } } catch(e) {}
parsingNumbers();
"ok";

