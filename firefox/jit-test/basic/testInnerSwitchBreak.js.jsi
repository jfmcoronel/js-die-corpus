var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (innerSwitch) != "undefined") {_RecordType("<9,20,1>",(innerSwitch)); Inst0++; } } catch(e) {}
function innerSwitch(k) {
try { if (Inst1 <= 1000 && typeof (k) != "undefined") {_RecordType("<21,22,1>",(k)); Inst1++; } } catch(e) {}
  var m = 0;
try { if (Inst2 <= 1000 && typeof (m) != "undefined") {_RecordType("<32,33,2>",(m)); Inst2++; } } catch(e) {}

try { if (Inst3 <= 1000 && typeof (k) != "undefined") {_RecordType("<50,51,4>",(k)); Inst3++; } } catch(e) {}
  switch (k) {
    case 0:
      m = 1;
try { if (Inst4 <= 1000 && typeof (m) != "undefined") {_RecordType("<73,74,6>",(m)); Inst4++; } } catch(e) {}
      break;
  }

try { if (Inst5 <= 1000 && typeof (m) != "undefined") {_RecordType("<107,108,10>",(m)); Inst5++; } } catch(e) {}
  return m;
}

try { if (Inst6 <= 1000 && typeof (testInnerSwitchBreak) != "undefined") {_RecordType("<122,142,13>",(testInnerSwitchBreak)); Inst6++; } } catch(e) {}
function testInnerSwitchBreak() {
try { if (Inst8 <= 1000 && typeof (Array) != "undefined") {_RecordType("<161,166,14>",(Array)); Inst8++; } } catch(e) {}
  var r = new Array(5);
try { if (Inst7 <= 1000 && typeof (r) != "undefined") {_RecordType("<153,154,14>",(r)); Inst7++; } } catch(e) {}

  for (var i = 0; i < 5; i++) {
try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<183,184,16>",(i)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<190,191,16>",(i)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<197,198,16>",(i)); Inst11++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (innerSwitch) != "undefined") {_RecordType("<215,226,17>",(innerSwitch)); Inst14++; } } catch(e) {}
    r[i] = innerSwitch(0);
try { if (Inst12 <= 1000 && typeof (r[i]) != "undefined") {_RecordType("<208,212,17>",(r[i])); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (r) != "undefined") {_RecordType("<208,209,17>",(r)); Inst13++; } } catch(e) {}
  }

try { if (Inst15 <= 1000 && typeof (r.join) != "undefined") {_RecordType("<245,251,20>",(r.join)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (r) != "undefined") {_RecordType("<245,246,20>",(r)); Inst16++; } } catch(e) {}
  return r.join(",");
}

try { if (Inst17 <= 1000 && typeof (testInnerSwitchBreak) != "undefined") {_RecordType("<261,281,23>",(testInnerSwitchBreak)); Inst17++; } } catch(e) {}
testInnerSwitchBreak();
"1,1,1,1,1";

