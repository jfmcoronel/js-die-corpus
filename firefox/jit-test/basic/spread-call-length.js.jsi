var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst1 <= 1000 && typeof (farg) != "undefined") {_RecordType("<15,19,1>",(farg)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Function) != "undefined") {_RecordType("<23,31,1>",(Function)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (farg) != "undefined") {_RecordType("<58,62,1>",(farg)); Inst3++; } } catch(e) {}
let makeCall = farg => Function("f", "arg", "return f(" + farg + ");");
try { if (Inst0 <= 1000 && typeof (makeCall) != "undefined") {_RecordType("<4,12,1>",(makeCall)); Inst0++; } } catch(e) {}

try { if (Inst5 <= 1000 && typeof (farg) != "undefined") {_RecordType("<91,95,3>",(farg)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Function) != "undefined") {_RecordType("<99,107,3>",(Function)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (farg) != "undefined") {_RecordType("<145,149,3>",(farg)); Inst7++; } } catch(e) {}
let makeFunCall = farg => Function("f", "arg", "return f.call(null, " + farg + ");");
try { if (Inst4 <= 1000 && typeof (makeFunCall) != "undefined") {_RecordType("<77,88,3>",(makeFunCall)); Inst4++; } } catch(e) {}

try { if (Inst9 <= 1000 && typeof (farg) != "undefined") {_RecordType("<174,178,5>",(farg)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Function) != "undefined") {_RecordType("<182,190,5>",(Function)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (farg) != "undefined") {_RecordType("<221,225,5>",(farg)); Inst11++; } } catch(e) {}
let makeNew = farg => Function("f", "arg", "return new f(" + farg + ").length;");
try { if (Inst8 <= 1000 && typeof (makeNew) != "undefined") {_RecordType("<164,171,5>",(makeNew)); Inst8++; } } catch(e) {}

try { if (Inst12 <= 1000 && typeof (checkLength) != "undefined") {_RecordType("<252,263,7>",(checkLength)); Inst12++; } } catch(e) {}
function checkLength(f, makeFn) {
try { if (Inst13 <= 1000 && typeof (f) != "undefined") {_RecordType("<264,265,7>",(f)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (makeFn) != "undefined") {_RecordType("<267,273,7>",(makeFn)); Inst14++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (makeFn) != "undefined") {_RecordType("<279,285,8>",(makeFn)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (f) != "undefined") {_RecordType("<302,303,8>",(f)); Inst16++; } } catch(e) {}
  makeFn("...[1, 2, 3]")(f);
  3;
try { if (Inst17 <= 1000 && typeof (makeFn) != "undefined") {_RecordType("<313,319,10>",(makeFn)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (f) != "undefined") {_RecordType("<336,337,10>",(f)); Inst18++; } } catch(e) {}
  makeFn("1, ...[2], 3")(f);
  3;
try { if (Inst19 <= 1000 && typeof (makeFn) != "undefined") {_RecordType("<347,353,12>",(makeFn)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (f) != "undefined") {_RecordType("<375,376,12>",(f)); Inst20++; } } catch(e) {}
  makeFn("1, ...[2], ...[3]")(f);
  3;
try { if (Inst21 <= 1000 && typeof (makeFn) != "undefined") {_RecordType("<386,392,14>",(makeFn)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (f) != "undefined") {_RecordType("<409,410,14>",(f)); Inst22++; } } catch(e) {}
  makeFn("1, ...[2, 3]")(f);
  3;
try { if (Inst23 <= 1000 && typeof (makeFn) != "undefined") {_RecordType("<420,426,16>",(makeFn)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (f) != "undefined") {_RecordType("<445,446,16>",(f)); Inst24++; } } catch(e) {}
  makeFn("1, ...[], 2, 3")(f);
  3;
try { if (Inst25 <= 1000 && typeof (makeFn) != "undefined") {_RecordType("<456,462,18>",(makeFn)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (f) != "undefined") {_RecordType("<473,474,18>",(f)); Inst26++; } } catch(e) {}
  makeFn("...[1]")(f);
  1;
try { if (Inst27 <= 1000 && typeof (makeFn) != "undefined") {_RecordType("<484,490,20>",(makeFn)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (f) != "undefined") {_RecordType("<504,505,20>",(f)); Inst28++; } } catch(e) {}
  makeFn("...[1, 2]")(f);
  2;
try { if (Inst29 <= 1000 && typeof (makeFn) != "undefined") {_RecordType("<515,521,22>",(makeFn)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (f) != "undefined") {_RecordType("<541,542,22>",(f)); Inst30++; } } catch(e) {}
  makeFn("...[1, 2, 3, 4]")(f);
  4;
try { if (Inst31 <= 1000 && typeof (makeFn) != "undefined") {_RecordType("<552,558,24>",(makeFn)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (f) != "undefined") {_RecordType("<581,582,24>",(f)); Inst32++; } } catch(e) {}
  makeFn("1, ...[2, 3, 4], 5")(f);
  5;
try { if (Inst33 <= 1000 && typeof (makeFn) != "undefined") {_RecordType("<592,598,26>",(makeFn)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (f) != "undefined") {_RecordType("<617,618,26>",(f)); Inst34++; } } catch(e) {}
  makeFn("...[undefined]")(f);
  1;
try { if (Inst35 <= 1000 && typeof (makeFn) != "undefined") {_RecordType("<628,634,28>",(makeFn)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (f) != "undefined") {_RecordType("<645,646,28>",(f)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (Int32Array) != "undefined") {_RecordType("<652,662,28>",(Int32Array)); Inst37++; } } catch(e) {}
  makeFn("...arg")(f, new Int32Array([1, 2, 3]));
  3;
try { if (Inst38 <= 1000 && typeof (makeFn) != "undefined") {_RecordType("<683,689,30>",(makeFn)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (f) != "undefined") {_RecordType("<700,701,30>",(f)); Inst39++; } } catch(e) {}
  makeFn("...arg")(f, "abc");
  3;
try { if (Inst40 <= 1000 && typeof (makeFn) != "undefined") {_RecordType("<718,724,32>",(makeFn)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (f) != "undefined") {_RecordType("<735,736,32>",(f)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof ([1, 2, 3][Symbol.iterator]) != "undefined") {_RecordType("<738,764,32>",([1, 2, 3][Symbol.iterator])); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<748,763,32>",(Symbol.iterator)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<748,754,32>",(Symbol)); Inst44++; } } catch(e) {}
  makeFn("...arg")(f, [1, 2, 3][Symbol.iterator]());
  3;
try { if (Inst45 <= 1000 && typeof (makeFn) != "undefined") {_RecordType("<776,782,34>",(makeFn)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (f) != "undefined") {_RecordType("<793,794,34>",(f)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (Set) != "undefined") {_RecordType("<800,803,34>",(Set)); Inst47++; } } catch(e) {}
  makeFn("...arg")(f, new Set([1, 2, 3]));
  3;
try { if (Inst48 <= 1000 && typeof (makeFn) != "undefined") {_RecordType("<824,830,36>",(makeFn)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (f) != "undefined") {_RecordType("<841,842,36>",(f)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (Map) != "undefined") {_RecordType("<848,851,36>",(Map)); Inst50++; } } catch(e) {}
  makeFn("...arg")(f, new Map([["a", "A"], ["b", "B"], ["c", "C"]]));
  3;
  let itr = {};
try { if (Inst51 <= 1000 && typeof (itr) != "undefined") {_RecordType("<903,906,38>",(itr)); Inst51++; } } catch(e) {}

  itr[Symbol.iterator] = function () {
    return {
      i: 1,
      next: function () {
try { if (Inst56 <= 1000 && typeof (this.i) != "undefined") {_RecordType("<1016,1022,44>",(this.i)); Inst56++; } } catch(e) {}
        if (this.i < 4) {
try { if (Inst57 <= 1000 && typeof (this.i) != "undefined") {_RecordType("<1068,1074,46>",(this.i)); Inst57++; } } catch(e) {}
          return {
            value: this.i++,
            done: false
          };
        } else {
try { if (Inst58 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<1170,1179,51>",(undefined)); Inst58++; } } catch(e) {}
          return {
            value: undefined,
            done: true
          };
        }
      }
    };
  };
try { if (Inst52 <= 1000 && typeof (itr[Symbol.iterator]) != "undefined") {_RecordType("<916,936,40>",(itr[Symbol.iterator])); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (itr) != "undefined") {_RecordType("<916,919,40>",(itr)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<920,935,40>",(Symbol.iterator)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<920,926,40>",(Symbol)); Inst55++; } } catch(e) {}

try { if (Inst59 <= 1000 && typeof (makeFn) != "undefined") {_RecordType("<1250,1256,59>",(makeFn)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (f) != "undefined") {_RecordType("<1267,1268,59>",(f)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (itr) != "undefined") {_RecordType("<1270,1273,59>",(itr)); Inst61++; } } catch(e) {}
  makeFn("...arg")(f, itr);
  3;

try { if (Inst62 <= 1000 && typeof (gen) != "undefined") {_RecordType("<1294,1297,62>",(gen)); Inst62++; } } catch(e) {}
  function* gen() {
    for (let i = 1; i < 4; i++) {
try { if (Inst63 <= 1000 && typeof (i) != "undefined") {_RecordType("<1315,1316,63>",(i)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (i) != "undefined") {_RecordType("<1322,1323,63>",(i)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (i) != "undefined") {_RecordType("<1329,1330,63>",(i)); Inst65++; } } catch(e) {}
try { if (Inst66 <= 1000 && typeof (i) != "undefined") {_RecordType("<1348,1349,64>",(i)); Inst66++; } } catch(e) {}
      yield i;
    }
  }

try { if (Inst67 <= 1000 && typeof (makeFn) != "undefined") {_RecordType("<1364,1370,68>",(makeFn)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (f) != "undefined") {_RecordType("<1381,1382,68>",(f)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (gen) != "undefined") {_RecordType("<1384,1387,68>",(gen)); Inst69++; } } catch(e) {}
  makeFn("...arg")(f, gen());
  3;
}

try { if (Inst70 <= 1000 && typeof (checkLength) != "undefined") {_RecordType("<1400,1411,72>",(checkLength)); Inst70++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (makeCall) != "undefined") {_RecordType("<1457,1465,74>",(makeCall)); Inst74++; } } catch(e) {}
checkLength(function (x) {
try { if (Inst71 <= 1000 && typeof (x) != "undefined") {_RecordType("<1422,1423,72>",(x)); Inst71++; } } catch(e) {}
try { if (Inst72 <= 1000 && typeof (arguments.length) != "undefined") {_RecordType("<1436,1452,73>",(arguments.length)); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<1436,1445,73>",(arguments)); Inst73++; } } catch(e) {}
  return arguments.length;
}, makeCall);
try { if (Inst75 <= 1000 && typeof (checkLength) != "undefined") {_RecordType("<1468,1479,75>",(checkLength)); Inst75++; } } catch(e) {}try { if (Inst79 <= 1000 && typeof (makeFunCall) != "undefined") {_RecordType("<1525,1536,77>",(makeFunCall)); Inst79++; } } catch(e) {}
checkLength(function (x) {
try { if (Inst76 <= 1000 && typeof (x) != "undefined") {_RecordType("<1490,1491,75>",(x)); Inst76++; } } catch(e) {}
try { if (Inst77 <= 1000 && typeof (arguments.length) != "undefined") {_RecordType("<1504,1520,76>",(arguments.length)); Inst77++; } } catch(e) {}try { if (Inst78 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<1504,1513,76>",(arguments)); Inst78++; } } catch(e) {}
  return arguments.length;
}, makeFunCall);

try { if (Inst80 <= 1000 && typeof (lengthClass) != "undefined") {_RecordType("<1549,1560,79>",(lengthClass)); Inst80++; } } catch(e) {}
function lengthClass(x) {
try { if (Inst81 <= 1000 && typeof (x) != "undefined") {_RecordType("<1561,1562,79>",(x)); Inst81++; } } catch(e) {}
try { if (Inst83 <= 1000 && typeof (arguments.length) != "undefined") {_RecordType("<1582,1598,80>",(arguments.length)); Inst83++; } } catch(e) {}try { if (Inst84 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<1582,1591,80>",(arguments)); Inst84++; } } catch(e) {}
  this.length = arguments.length;
try { if (Inst82 <= 1000 && typeof (this.length) != "undefined") {_RecordType("<1568,1579,80>",(this.length)); Inst82++; } } catch(e) {}
}

try { if (Inst85 <= 1000 && typeof (checkLength) != "undefined") {_RecordType("<1603,1614,83>",(checkLength)); Inst85++; } } catch(e) {}try { if (Inst86 <= 1000 && typeof (lengthClass) != "undefined") {_RecordType("<1615,1626,83>",(lengthClass)); Inst86++; } } catch(e) {}try { if (Inst87 <= 1000 && typeof (makeNew) != "undefined") {_RecordType("<1628,1635,83>",(makeNew)); Inst87++; } } catch(e) {}
checkLength(lengthClass, makeNew);

