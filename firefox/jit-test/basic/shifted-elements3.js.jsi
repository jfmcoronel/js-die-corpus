var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Always use the per-element barrier.
try { if (Inst0 <= 1000 && typeof (gczeal) != "undefined") {_RecordType("<39,45,2>",(gczeal)); Inst0++; } } catch(e) {}
gczeal(12);

try { if (Inst1 <= 1000 && typeof (f) != "undefined") {_RecordType("<61,62,4>",(f)); Inst1++; } } catch(e) {}
function f() {
  var arr = [];
try { if (Inst2 <= 1000 && typeof (arr) != "undefined") {_RecordType("<73,76,5>",(arr)); Inst2++; } } catch(e) {}

  for (var i = 0; i < 1000; i++) {
try { if (Inst3 <= 1000 && typeof (i) != "undefined") {_RecordType("<95,96,7>",(i)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (i) != "undefined") {_RecordType("<102,103,7>",(i)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (i) != "undefined") {_RecordType("<112,113,7>",(i)); Inst5++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (arr.push) != "undefined") {_RecordType("<123,131,8>",(arr.push)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (arr) != "undefined") {_RecordType("<123,126,8>",(arr)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<132,133,8>",(i)); Inst8++; } } catch(e) {}
    arr.push(i);
  }

try { if (Inst9 <= 1000 && typeof (gc) != "undefined") {_RecordType("<143,145,11>",(gc)); Inst9++; } } catch(e) {}
  gc(); // Ensure arr is tenured.

  for (var i = 0; i < 10; i++) {
try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<187,188,13>",(i)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<194,195,13>",(i)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<202,203,13>",(i)); Inst12++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (arr.shift) != "undefined") {_RecordType("<213,222,14>",(arr.shift)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (arr) != "undefined") {_RecordType("<213,216,14>",(arr)); Inst14++; } } catch(e) {}
    arr.shift();
  } // Add a nursery object, shift all elements, and trigger a GC to ensure
  // the post barrier doesn't misbehave.


  for (var j = 0; j < 40; j++) {
try { if (Inst15 <= 1000 && typeof (j) != "undefined") {_RecordType("<356,357,19>",(j)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (j) != "undefined") {_RecordType("<363,364,19>",(j)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (j) != "undefined") {_RecordType("<371,372,19>",(j)); Inst17++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (j) != "undefined") {_RecordType("<404,405,21>",(j)); Inst20++; } } catch(e) {}
    arr[500] = {
      x: j
    };
try { if (Inst18 <= 1000 && typeof (arr[500]) != "undefined") {_RecordType("<382,390,20>",(arr[500])); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (arr) != "undefined") {_RecordType("<382,385,20>",(arr)); Inst19++; } } catch(e) {}
  }

try { if (Inst21 <= 1000 && typeof (arr.length) != "undefined") {_RecordType("<427,437,25>",(arr.length)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (arr) != "undefined") {_RecordType("<427,430,25>",(arr)); Inst22++; } } catch(e) {}
  while (arr.length > 0) {
try { if (Inst23 <= 1000 && typeof (arr.shift) != "undefined") {_RecordType("<449,458,26>",(arr.shift)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (arr) != "undefined") {_RecordType("<449,452,26>",(arr)); Inst24++; } } catch(e) {}
    arr.shift();
  }

try { if (Inst25 <= 1000 && typeof (gc) != "undefined") {_RecordType("<469,471,29>",(gc)); Inst25++; } } catch(e) {}
  gc();
try { if (Inst26 <= 1000 && typeof (arr) != "undefined") {_RecordType("<484,487,30>",(arr)); Inst26++; } } catch(e) {}
  return arr;
}

try { if (Inst27 <= 1000 && typeof (f) != "undefined") {_RecordType("<492,493,33>",(f)); Inst27++; } } catch(e) {}
f();

