var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
for (var actual = .5; actual < 100; actual++) {
try { if (Inst0 <= 1000 && typeof (actual) != "undefined") {_RecordType("<9,15,1>",(actual)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (actual) != "undefined") {_RecordType("<22,28,1>",(actual)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (actual) != "undefined") {_RecordType("<36,42,1>",(actual)); Inst2++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (actual) != "undefined") {_RecordType("<75,81,3>",(actual)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (actual) != "undefined") {_RecordType("<98,104,4>",(actual)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (actual) != "undefined") {_RecordType("<127,133,5>",(actual)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (actual) != "undefined") {_RecordType("<159,165,6>",(actual)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (actual) != "undefined") {_RecordType("<184,190,7>",(actual)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (actual) != "undefined") {_RecordType("<211,217,8>",(actual)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (actual) != "undefined") {_RecordType("<234,240,9>",(actual)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (actual) != "undefined") {_RecordType("<267,273,10>",(actual)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (actual) != "undefined") {_RecordType("<291,297,11>",(actual)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (actual) != "undefined") {_RecordType("<316,322,12>",(actual)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (actual) != "undefined") {_RecordType("<342,348,13>",(actual)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (actual) != "undefined") {_RecordType("<366,372,14>",(actual)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (actual) != "undefined") {_RecordType("<390,396,15>",(actual)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (actual) != "undefined") {_RecordType("<418,424,16>",(actual)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (actual) != "undefined") {_RecordType("<445,451,17>",(actual)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (actual) != "undefined") {_RecordType("<472,478,18>",(actual)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (actual) != "undefined") {_RecordType("<492,498,19>",(actual)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (actual) != "undefined") {_RecordType("<516,522,20>",(actual)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (actual) != "undefined") {_RecordType("<538,544,21>",(actual)); Inst22++; } } catch(e) {}
  var test2 = {
    test4: actual + 6,
    test2: actual + 9,
    printStatus: actual + 10,
    isPrototypeOf: actual + 12,
    expect: actual + 14,
    printErr: actual + 17,
    ret2: actual + 19,
    printBugNumber: actual + 32,
    test3: actual + 33,
    String: actual + 34,
    summary: actual + 40,
    test1: actual + 42,
    Array: actual + 43,
    BUGNUMBER: actual + 44,
    assertEq: actual + 45,
    __call__: actual + 47,
    x: actual + 48,
    test0: actual + 49,
    res: actual + 50
  };
try { if (Inst3 <= 1000 && typeof (test2) != "undefined") {_RecordType("<54,59,2>",(test2)); Inst3++; } } catch(e) {}
}

